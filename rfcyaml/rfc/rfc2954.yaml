- contents:
  - "                     Definitions of Managed Objects\n                        for
    Frame Relay Service\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines an extension to the Management Information Base\n
    \  (MIB) for use with network management protocols in Transmission\n   Control
    Protocol/Internet Protocol-based (TCP/IP) internets.  In\n   particular, it defines
    objects for managing the frame relay service.\n   This document obsoletes RFC
    1604.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1 The SNMP Management Framework ................................
    \  2\n   2 Overview .....................................................   3\n
    \  2.1 Scope of MIB ...............................................   3\n   2.2
    Transiting Multiple Frame Relay Networks ...................   5\n   2.3 Access
    Control .............................................   5\n   2.4 Frame Relay
    Service MIB Terminology ........................   6\n   2.5 Relation to Other
    MIBs .....................................   8\n   2.5.1 System Group .............................................
    \  8\n   2.5.2 Interfaces Table (ifTable, ifXtable) .....................   8\n
    \  2.5.3 Stack Table for DS1/E1 Environment .......................  12\n   2.5.4
    Stack Table for V.35 Environments ........................  14\n   2.5.5 The Frame
    Relay/ATM PVC Service Interworking MIB .........  14\n   2.6 Textual Convention
    Change ..................................  15\n   3 Object Definitions ...........................................
    \ 15\n   3.1 The Frame Relay Service Logical Port .......................  17\n
    \  3.2 Frame Relay Management VC Signaling ........................  22\n   3.3
    Frame Relay PVC End-Points .................................  32\n   3.4 Frame
    Relay PVC Connections ................................  45\n   3.5 Frame Relay
    Accounting .....................................  53\n   3.6 Frame Relay Network
    Service Notifications ..................  56\n   3.7 Conformance Information ....................................
    \ 57\n   4 Acknowledgments ..............................................  67\n
    \  5 References ...................................................  67\n   6
    Security Considerations ......................................  69\n   7 Authors'
    Addresses ...........................................  70\n   APPENDIX A Update
    Information ..................................  71\n   Intellectual Property Rights
    ...................................  75\n   Full Copyright Statement .......................................
    \ 76\n"
  title: Table of Contents
- contents:
  - "1.  The SNMP Management Framework\n   The SNMP Management Framework presently
    consists of five major\n   components:\n   o  An overall architecture, described
    in RFC 2571 [1].\n   o  Mechanisms for describing and naming objects and events
    for the\n      purpose of management.  The first version of this Structure of\n
    \     Management Information (SMI) is called SMIv1 and described in STD\n      16,
    RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4].  The\n      second version,
    called SMIv2, is described in STD 58, RFC 2578\n      [5], STD 58, RFC 2579 [6]
    and STD 58, RFC 2580 [7].\n   o  Message protocols for transferring management
    information.  The\n      first version of the SNMP message protocol is called
    SNMPv1 and\n      described in STD 15, RFC 1157 [8].  A second version of the
    SNMP\n      message protocol, which is not an Internet standards track\n      protocol,
    is called SNMPv2c and described in RFC 1901 [9] and RFC\n      1906 [10].  The
    third version of the message protocol is called\n      SNMPv3 and described in
    RFC 1906 [10], RFC 2572 [11] and RFC 2574\n      [12].\n   o  Protocol operations
    for accessing management information.  The\n      first set of protocol operations
    and associated PDU formats is\n      described in STD 15, RFC 1157 [8].  A second
    set of protocol\n      operations and associated PDU formats is described in RFC
    1905\n      [13].\n   o  A set of fundamental applications described in RFC 2573
    [14] and\n      the view-based access control mechanism described in RFC 2575\n
    \     [15].\n   A more detailed introduction to the current SNMP Management Framework\n
    \  can be found in RFC 2570 [16].\n   Managed objects are accessed via a virtual
    information store, termed\n   the Management Information Base or MIB.  Objects
    in the MIB are\n   defined using the mechanisms defined in the SMI.\n   This memo
    specifies a MIB module that is compliant to the SMIv2.  A\n   MIB conforming to
    the SMIv1 can be produced through the appropriate\n   translations.  The resulting
    translated MIB must be semantically\n   equivalent, except where objects or events
    are omitted because no\n   translation is possible (use of Counter64).  Some machine
    readable\n   information in SMIv2 will be converted into textual descriptions
    in\n   SMIv1 during the translation process.  However, this loss of machine\n
    \  readable information is not considered to change the semantics of the\n   MIB.\n"
  title: 1.  The SNMP Management Framework
- contents:
  - "2.  Overview\n   These objects are used to manage a frame relay Service.  At
    present,\n   this applies to the following value of the ifType variable in the\n
    \  IF-MIB [26]:\n        frameRelayService (44)\n   This section provides an overview
    and background of how to use this\n   MIB and other potential MIBs to manage a
    frame relay service.\n"
  - contents:
    - "2.1.  Scope of MIB\n   The Frame Relay Service MIB supports Customer Network
      Management\n   (CNM) of a frame relay network service.  Through the use of this
      and\n   other related MIBs, a frame relay service customer's NMS can monitor\n
      \  the customer's UNI/NNI logical ports and PVCs.  It provides customers\n   with
      access to configuration data, performance monitoring\n   information, and fault
      detection for the delivered frame relay\n   service.  As an option, an SNMP
      agent supporting the Frame Relay\n   Service MIB may allow customer-initiated
      PVC management operations\n   such as creation, deletion, modification, activation,
      and\n   deactivation of individual PVCs.  However, internal aspects of the\n
      \  network (e.g., switching elements, line cards, and network routing\n   tables)
      are beyond the scope of this MIB.\n   The Frame Relay Service MIB models all
      interfaces and PVCs delivered\n   by a frame relay service within a single virtual
      SNMP system for the\n   purpose of comprehensively representing the customer's
      frame relay\n   service.  The customer's interfaces and PVCs may physically
      exist on\n   one or more devices within the network topology.  An SNMP agent\n
      \  providing support for the Frame Relay Service MIB as well as other\n   appropriate
      MIBs to model a single virtual frame relay network\n   service is referred to
      as a Frame Relay Service (FRS) agent.\n   Internal communication mechanisms
      between the FRS agent and\n   individual devices within the frame relay network
      delivering the\n   service are implementation specific and beyond the scope
      of this MIB.\n   The customer's NMS will typically access the SNMP agent implementing\n
      \  the Frame Relay Service MIB over a frame relay permanent virtual\n   connection
      (PVC).  SNMP access over a frame relay PVC is achieved\n   through the use of
      SNMP over UDP over IP encapsulated in Frame Relay\n   according to STD 55, RFC2427
      and ITU X.36 Annex D [23].  Alternate\n   access mechanisms and SNMP agent implementations
      are possible.\n   This MIB will NOT be implemented on user equipment (e.g.,
      DTE).  Such\n   devices are managed using the Frame Relay DTE MIB (RFC2115[18]).\n
      \  However, concentrators may use the Frame Relay Service MIB instead of\n   the
      Frame Relay DTE MIB.\n   This MIB does not define managed objects for the physical
      layer.\n   Existing physical layer MIBs (e.g., DS1 MIB) and Interface MIB will\n
      \  be used as needed in FRS Agent implementations.\n   This MIB supports frame
      relay PVCs.  This MIB may be extended at a\n   later time to handle frame relay
      SVCs.\n   A switch implementation may support this MIB for the purpose of\n
      \  configuration and control of the frame relay service beyond the scope\n   of
      traditional customer network management applications.  A number of\n   objects
      (e.g. frLportTypeAdmin) support administrative actions that\n   impact the operation
      of frame relay switch equipment in the network.\n   This is reflected in the
      differences between the two MIB compliance\n   modules:\n      o  the frame
      relay service compliance module\n         (frnetservCompliance), and\n      o
      \ the frame relay switch compliance module\n         (frnetSwitchCompliance).\n
      \  The frame relay service compliance module does not support the\n   administrative
      control objects used for switch management.\n"
    title: 2.1.  Scope of MIB
  - contents:
    - "2.2.  Transiting Multiple Frame Relay Networks\n   This MIB is only used to
      manage a single frame relay service offering\n   from one network service provider.
      \ Therefore, if a customer PVC\n   traverses multiple networks, then the customer
      must poll a different\n   FRS agent within each frame relay network to retrieve
      the end-to-end\n   view of service.\n   Figure 1 illustrates a customer (\"User
      B\") NMS accessing FRS agents\n   in three different frame relay networks (I,
      J, and K).\n                +-------------------------------------+\n                |
      Customer Network Management Station |\n                |            (SNMP based)
      \            |\n                +-------------------------------------+\n                    ^
      \             ^               ^\n                    |              |               |\n
      \                   |              |               |\n           UNI      |
      \     NNI     |       NNI     |       UNI\n            |       ^       |      ^
      \       |      ^\n            | +-----------+ | +-----------+ | +-----------+
      |\n            | |           | | |           | | |           | |\n"
    - "Originating | |   FR      | | |   FR      | | |   FR      | |Terminating\n
      +--------+ | | Network I | | | Network J | | | Network K | | +--------+\n |
      \       | | |           | | |           | | |           | | |        |\n |        |---|
      \          |---|           |---|           |---| User B |\n |        | | |           |
      | |           | | |           | | |        |\n |     ////////////////////////////////////////////////////////////
      \   |\n |        | | |           | | |           | | |           | | |        |\n
      +--------+ | +-----------+ | +-----------+ | +-----------+ | +--------+\n            |
      \              |               |               |\n            |               |
      \              |               |\n            | PVC Segment 1 | PVC Segment
      2 | PVC Segment 3 |\n            |<------------->|<------------->|<------------->|\n
      \           |                                               |\n            |
      \             Multi-network PVC                |\n            |<--------------------------------------------->|\n
      \           |  NNI = Network-to Network Interface           |\n               UNI
      = User-to-Network Interface\n                         Figure 1, Multi-network
      PVC\n"
    title: 2.2.  Transiting Multiple Frame Relay Networks
  - contents:
    - "2.3.  Access Control\n   A frame relay network is shared amongst many frame
      relay subscribers.\n   Each subscriber will only have access to their information
      (e.g.,\n   information with respect to their interfaces and PVCs).  The FRS
      agent\n   should provide instance level granularity for MIB views.\n"
    title: 2.3.  Access Control
  - contents:
    - "2.4.  Frame Relay Service MIB Terminology\n   Access Channel - An access channel
      generically refers to the DS1/E1\n   or DS3/E3-based UNI access channel or NNI
      access channel across which\n   frame relay data transits.  An access channel
      is the access pathway\n   for a single stream of user data.\n   Within a given
      DS1 line, an access channel can denote any one of the\n   following:\n   o  Unchannelized
      DS1 - the entire DS1 line is considered an access\n      channel. Each access
      channel is comprised of 24 DS0 time slots.\n   o  Channelized DS1 - an access
      channel is any one of 24 channels.\n      Each access channel is comprised of
      a single DS0 time slot.\n   o  Fractional DS1 - an access channel is a grouping
      of NxDS0 time\n      slots (NX56/64 Kbps, where N = 1-23 DS0 Time slots per
      Fractional\n      DS1 Access Channel) that may be assigned in consecutive or\n
      \     non-consecutive order.\n   Within a given E1 line, a channel can denote
      any one of the following:\n   o  Unchannelized E1 - the entire E1 line is considered
      a single\n      access channel.  Each access channel is comprised of 31 E1 time\n
      \     slots.\n   o  Channelized E1 - an access channel is any one of 31 channels.\n
      \     Each access channel is comprised of a single E1 time slot.\n   o  Fractional
      E1 - an access channel is a grouping of N E1 time\n      slots (NX64 Kbps, where
      N = 1-30 E1 time slots per FE1 access\n      channel) that may be assigned in
      consecutive or non-consecutive\n      order.\n   Within a given unformatted
      line, the entire unformatted line is\n   considered an access channel. Examples
      include RS-232, V.35, V.36 and\n   X.21 (non-switched), and unframed E1 (G.703
      without G.704).\n   Access Rate - The data rate of the access channel, expressed
      in\n   bits/second.  The speed of the user access channel determines how\n   rapidly
      the end user can inject data into the network.\n   Bc - The Committed Burst
      Size (Bc) is the maximum amount of\n   subscriber data (expressed in bits) that
      the network agrees to\n   transfer, under normal conditions, during a time interval
      Tc.\n   Be - The Excess Burst Size (Be) is the maximum amount of subscriber\n
      \  data (expressed in bits) in excess of Bc that the network will\n   attempt
      to deliver during the time interval Tc.  This data (Be) is\n   delivered in
      general with a lower probability than Bc.\n   CIR - The Committed Information
      Rate (CIR) is the subscriber data\n   rate (expressed in bits/second) that the
      network commits to deliver\n   under normal network conditions.  CIR is averaged
      over the time\n   interval Tc (CIR = Bc/Tc).\n   DLCI - Data Link Connection
      Identifier\n   Logical Port - This term is used to model the frame relay \"interface\"\n
      \  on a device.\n   NNI - Network to Network Interface\n   Permanent Virtual
      Connection (PVC) - A virtual connection that has\n   its end-points and bearer
      capabilities defined at subscription time.\n   Time slot (E1) - An octet within
      the 256-bit information field in\n   each E1 frame is defined as a time slot.
      \ Time slots are position\n   sensitive within the 256-bit information field.
      \ Fractional E1 service\n   is provided in contiguous or non-contiguous time
      slot increments.\n   Time slot (DS0) - An octet within the 192-bit information
      field in\n   each DS1 frame is defined as a time slot.  Time slots are position\n
      \  sensitive within the 192-bit information field. Fractional DS1\n   service
      is provided in contiguous or non-contiguous time slot\n   increments.\n   UNI
      - User to Network Interface\n   N391 - Full status (status of all PVCs) polling
      counter\n   N392 - Error threshold\n   N393 - Monitored events count\n   T391
      - Link integrity verification polling timer\n   T392 - Polling verification
      timer\n   nT3 - Status enquiry timer\n   nN3 - Maximum status enquiry counter\n"
    title: 2.4.  Frame Relay Service MIB Terminology
  - contents:
    - '2.5.  Relation to Other MIBs

      '
    - contents:
      - "2.5.1.  System Group\n   Use the System Group of the SNMPv2-MIB [27] to describe
        the Frame\n   Relay Service (FRS) agent.  The FRS agent may be monitoring
        many\n   frame relay devices in one network.  The System Group does not\n
        \  describe frame relay devices monitored by the FRS agent.\n   sysDescr:
        \ ASCII string describing the FRS agent.\n              Can be up to 255 characters
        long. This field is\n              generally used to indicate the network
        providers\n              identification and type of service offered.\n   sysObjectID:
        \ Unique OBJECT IDENTIFIER (OID) for the\n                 FRS agent.\n   sysUpTime:
        \ Clock in the FRS agent; TimeTicks\n               in 1/100s of a second.
        \ Elapsed type since\n               the FRS agent came on line.\n   sysContact:
        \ Contact for the FRS agent.\n                ASCII string of up to 255 characters.\n
        \  sysName:  Domain name of the FRS agent, for example,\n             acme.com\n
        \  sysLocation:  Location of the FRS agent.\n                 ASCII string
        of up to 255 characters.\n   sysServices:  Services of the managed device.
        \ The value \"2\",\n                 which implies that\n                 the
        frame relay network is providing\n                 a subnetwork level service,
        is recommended.\n"
      title: 2.5.1.  System Group
    - contents:
      - "2.5.2.  Interfaces Table (ifTable, ifXtable)\n   This specifies how the Interfaces
        Group defined in the IF MIB [26]\n   shall be used for the management of frame
        relay based interfaces, and\n   in conjunction with the Frame Relay Service
        MIB module.  This memo\n   assumes the interpretation of the evolution of
        the Interfaces group\n   to be in accordance with: \"The interfaces table
        (ifTable) contains\n   information on the managed resource's interfaces.  Each
        sub-layer\n   below the internetwork layer of a network interface is considered
        an\n   interface.\"  Thus, the ifTable allows the following frame relay-based\n
        \  interfaces to be represented as table entries:\n   -  Frame relay interfaces
        in equipment (e.g., switches, routers or\n      networks) supporting frame
        relay.  This level is concerned with\n      generic frame counts and not with
        individual virtual connections.\n   In accordance with the guidelines of ifTable,
        frame counts per\n   virtual connection are not covered by ifTable, and are
        considered\n   interface specific and covered in the Frame Relay Service MIB
        module.\n   In order to interrelate the ifEntries properly, the Interfaces
        Stack\n   Group shall be supported.\n   Some specific interpretations of ifTable
        for frame relay follow.\n   Object                 Use for the generic Frame
        Relay layer\n   ======                 =============================================\n
        \  ifIndex                Each frame relay port is represented by an\n                          ifEntry.\n
        \  ifDescr                Description of the frame relay interface.\n                          ASCII
        string describing the UNI/NNI logical\n                          port.  Can
        be up to 255 characters long.\n   ifType                 The value allocated
        for Frame Relay Service\n                          is equal to 44.\n   ifMtu
        \                 Set to maximum frame size in octets for this\n                          frame
        relay logical port.\n   ifSpeed                Peak bandwidth in bits per
        second available\n                          for use. This could be the speed
        of the\n                          logical port and not the access rate. Actual\n
        \                         user information transfer rate (i.e., access\n                          rate)
        of the UNI or NNI logical port in bits\n                          per second
        (this is not the clocking speed).\n                          For example,
        it is 1,536,000 bits per second\n                          for a DS1-based
        UNI/NNI logical port and\n                          1,984,000 bits per second
        for an E1-based\n                          UNI/NNI logical port.\n   ifPhysAddress
        \         The primary address for this logical port\n                          assigned
        by the frame relay interface\n                          provider.  An octet
        string of zero length if\n                          no address is used for
        this logical port.\n   ifAdminStatus          The desired administrative status
        of the\n                          frame relay logical port.\n   ifOperStatus
        \          The current operational status of the Frame\n                          Relay
        UNI or NNI logical port.\n   ifLastChange           The value of sysUptime
        at the last\n                          re-initialization of the logical port.
        \ The\n                          value of sysUpTime at the time the logical\n
        \                         port entered its current operational state.\n                          If
        the current state was entered prior to the\n                          last
        re-initialization of the local network\n                          management
        subsystem, then this object\n                          contains a zero value.\n
        \  ifInOctets             The number of received octets.  This counter\n                          only
        counts octets from the beginning of the\n                          frame relay
        header field to the end of user\n                          data.\n   ifInUcastPkts
        \         The number of received unerrored, unicast\n                          frames.\n
        \  ifInDiscards           The number of received frames discarded.\n                          Specifically,
        frames discarded due to ingress\n                          buffer congestion
        and traffic policing.\n   ifInErrors             The number of received frames
        that are\n                          discarded because of an error. Specifically,\n
        \                         frames that are too long or too short, frames\n
        \                         that are not a multiple of 8 bits in length,\n                          frames
        with an invalid or unrecognized DLCI,\n                          frames with
        an abort sequence, frames with\n                          improper flag delimitation,
        and frame that\n                          fail FCS.\n   ifInUnknownProtos
        \     The number of packets discarded because of an\n                          unknown
        or unsupported protocol.  For Frame\n                          Relay Service
        interfaces, this counter will\n                          always be zero.\n
        \  ifOutOctets            The number of transmitted octets.  This\n                          counter
        only counts octets from the beginning\n                          of the frame
        relay header field to the end of\n                          user data.\n   ifOutUcastpkts
        \        The number of unerrored, unicast frames sent.\n   ifOutDiscards          The
        number of frames discarded in the egress\n                          direction.
        Possible reasons are as follows:\n                          policing, congestion.\n
        \  ifOutErrors            The number of frames discarded in the egress\n                          direction
        because of an error. Specifically,\n                          frames that
        are aborted due to a transmitter\n                          underrun.\n   ifName
        \                This variable is not applicable for Frame\n                          Relay
        Service interfaces, therefore, this\n                          variable contains
        a zero-length string.\n   ifInMulticastPkts      The number of received unerrored,
        multicast\n                          frames.\n   ifInBroadcastPkts      This
        variable is not applicable for Frame\n                          Relay Service
        interfaces, therefore, this\n                          counter is always zero.\n
        \  ifOutMulticastPkts     The number of sent unerrored, multicast\n                          frames.\n
        \  ifOutBroadcastPkts     This variable is not applicable for Frame\n                          Relay
        Service interfaces, therefore, this\n                          counter is
        always zero.\n   ifHCInOctets           Only used for DS3-based (and greater)
        Frame\n                          Relay logical ports.  The number of received\n
        \                         octets.  This counter only counts octets\n                          from
        the beginning of the frame relay header\n                          field to
        the end of user data.\n   ifHCOutOctets          Only used for DS3-based (and
        greater) Frame\n                          Relay logical ports.  The number
        of\n                          transmitted octets.  This counter only counts\n
        \                         octets from the beginning of the frame relay\n                          header
        field to the end of user data.\n   ifLinkUpDownTrapEnable Set to true(1).
        \ It is recommended that the\n                          underlying physical
        layer notifications be\n                          disabled since both are
        not required.\n                          Notifications are enabled at the
        frame relay\n                          service layer specifically because
        PVC\n                          notifications are not to be sent if the frame\n
        \                         relay interface fails. Without a\n                          linkUp/linkDown
        notification, the management\n                          station would receive
        no notification of the\n                          failure.\n   ifHighSpeed
        \           Set to the user data rate of the frame relay\n                          logical
        port in millions of bits per second.\n                          If the user
        data rate is less than 1 Mbps,\n                          then this value
        is zero.\n   ifPromiscuousMode      Set to false(2).\n   ifConnectorPresent
        \    Set to false(2).\n   Frame relay network service interfaces support the
        Interface Stack\n   Group.  Frame relay network service interfaces do not
        support any\n   other groups or objects in the Interfaces group of the IF
        MIB.\n"
      title: 2.5.2.  Interfaces Table (ifTable, ifXtable)
    - contents:
      - "2.5.3.  Stack Table for DS1/E1 Environment\n   This section describes by
        example how to use ifStackTable to\n   represent the relationship of frame
        relay service to ds0 and\n   ds0Bundles with ds1 interfaces [20].\n   Example:
        A frame relay service is being carried on 4 ds0s of a ds1.\n     +---------------------+\n
        \    | Frame Relay Service |\n     +---------------------+\n                |\n
        \    +---------------------+\n     | ds0Bundle           |\n     +---------------------+\n
        \      |     |     |     |\n     +---+ +---+ +---+ +---+\n     |ds0| |ds0|
        |ds0| |ds0|\n     +---+ +---+ +---+ +---+\n       |     |     |     |\n     +---------------------+\n
        \    | ds1                 |\n     +---------------------+\n   The assignment
        of the index values could for example be:\n        ifIndex  Description\n
        \       1        FrameRelayService (type 44)\n        2        ds0Bundle         (type
        82)\n        3        ds0 #1            (type 81)\n        4        ds0 #2
        \           (type 81)\n        5        ds0 #3            (type 81)\n        6
        \       ds0 #4            (type 81)\n        7        ds1               (type
        18)\n   The ifStackTable is then used to show the relationships between the\n
        \  various interfaces.\n        ifStackTable Entries\n        HigherLayer
        \  LowerLayer\n        0             1\n        1             2\n        2
        \            3\n        2             4\n        2             5\n        2
        \            6\n        3             7\n        4             7\n        5
        \            7\n        6             7\n        7             0\n   In the
        case where the frame relay service is using a single ds0, then\n   the ds0Bundle
        is not required.\n     +---------------------+\n     | Frame Relay Service
        |\n     +---------------------+\n       |\n     +---+\n     |ds0|\n     +---+\n
        \      |\n     +---------------------+\n     | ds1                 |\n     +---------------------+\n
        \  The assignment of the index values could for example be:\n        ifIndex
        \ Description\n        1        FrameRelayService (type 44)\n        2        ds0
        \              (type 81)\n        3        ds1               (type 18)\n   The
        ifStackTable is then used to show the relationships between the\n   various
        interfaces.\n        ifStackTable Entries\n        HigherLayer   LowerLayer\n
        \       0             1\n        1             2\n        2             3\n
        \       3             0\n"
      title: 2.5.3.  Stack Table for DS1/E1 Environment
    - contents:
      - "2.5.4.  Stack Table for V.35 Environments\n   This section describes by example
        how to use ifStackTable to\n   represent the relationship of frame relay service
        with V.35\n   interfaces.\n        +---------------------+\n        | Frame
        Relay Service |\n        +---------------------+\n                   |\n        +---------------------+\n
        \       | v35                 |\n        +---------------------+\n   An example
        of index values in this case could be:\n           ifIndex  Description\n
        \          1        FrameRelayService (type 44)\n           2        v35               (type
        33)\n   Note type 33 (RS232-like MIB) is used instead of type 45 (V.35).  V35\n
        \  does not pertain to this environment.\n   The ifStackTable is then used
        to show the relationships between the\n   various interfaces.\n           ifStackTable
        Entries\n           HigherLayer   LowerLayer\n           0             1\n
        \          1             2\n           2             0\n"
      title: 2.5.4.  Stack Table for V.35 Environments
    - contents:
      - "2.5.5.  The Frame Relay/ATM PVC Service Interworking MIB\n   Connections
        between two frame relay endpoints are represented with an\n   entry in the
        frPVCConnectTable of this MIB.  Both endpoints are\n   represented with rows
        in the frPVCEndptTable.  The\n   frPVCEndptConnectIdentifier object of each
        endpoint points to the\n   frPVCConnectTable cross-connect table row for the
        connection.\n   In contrast, a connection that spans frame relay and ATM endpoints
        is\n   represented with an entry in the frAtmIwfConnectionTable of the\n   FR/ATM
        PVC Service Interworking MIB defined in [28].\n   In the case of an inter-worked
        connection, the\n   frPVCEndptConnectIdentifier object is set to zero.  Instead,
        the\n   frPVCEndptAtmIwfConnIndex object is set to the index of the FR/ATM\n
        \  IWF cross-connect table row.\n   The frame relay PVC cross-connect table
        (frPVCConnectTable) does not\n   contain an entry for the FR/ATM inter-worked
        connection.\n"
      title: 2.5.5.  The Frame Relay/ATM PVC Service Interworking MIB
    title: 2.5.  Relation to Other MIBs
  - contents:
    - "2.6.  Textual Convention Change\n   Version 1 of the Frame Relay Service MIB
      contains MIB objects defined\n   with the DisplayString textual convention.
      \ In version 2 of this MIB,\n   the syntax for these objects has been updated
      to use the (now\n   preferred) SnmpAdminString textual convention.  The new
      TC provides\n   support for a greater variety of international character sets.\n
      \  The working group realizes that this change is not strictly supported\n   by
      SMIv2.  In our judgment, the alternative of deprecating the old\n   objects
      and defining new objects would have a more adverse impact on\n   backward compatibility
      and interoperability, given the particular\n   semantics of these objects.\n"
    title: 2.6.  Textual Convention Change
  title: 2.  Overview
- contents:
  - '3.  Object Definitions

    '
  - 'FRNETSERV-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n              MODULE-IDENTITY, OBJECT-TYPE,\n              NOTIFICATION-TYPE,
    transmission,\n              Counter32, Integer32             FROM SNMPv2-SMI\n
    \             TimeStamp, RowStatus             FROM SNMPv2-TC\n              MODULE-COMPLIANCE,
    OBJECT-GROUP,\n              NOTIFICATION-GROUP               FROM SNMPv2-CONF\n
    \             InterfaceIndex, ifIndex          FROM IF-MIB\n              SnmpAdminString
    \                 FROM SNMP-FRAMEWORK-MIB;\n        frnetservMIB MODULE-IDENTITY\n
    \           LAST-UPDATED \"200009280000Z\" -- September 28, 2000\n            ORGANIZATION
    \"IETF Frame Relay Service MIB Working Group\"\n            CONTACT-INFO\n                \"WG
    Charter:\n                   http://www.ietf.org/html.charters/frnetmib-charter\n
    \                WG-email:\n                   frnetmib@sunroof.eng.sun.com\n
    \                Subscribe:\n                   frnetmib-request@sunroof.eng.sun.com\n
    \                Email Archive:\n                   ftp://ftp.ietf.org/ietf-mail-archive/frnetmib\n
    \                Chair:      Andy Malis\n                             Vivace Networks,
    Inc.\n                 Email:      Andy.Malis@vivacenetworks.com\n                 WG
    editor:  Kenneth Rehbehn\n                             Megisto Systems, Inc.\n
    \                Email:      krehbehn@megisto.com\n                 Co-author:
    \ David Fowler\n                             Syndesis Limited,\n                 EMail:
    \     fowler@syndesis.com\"\n            DESCRIPTION\n                 \"The MIB
    module to describe generic objects for\n                  Frame Relay Network
    Service.\"\n            --\n            -- Revision History\n            --\n
    \           REVISION \"200009280000Z\"\n            DESCRIPTION\n                 \"Published
    as RFC 2954.\n                 The major new features of this revision include:\n
    \                    o  Support for read-write capability to\n                        provision
    switch components providing service,\n                     o  Support for cross-connection
    via a frame relay\n                        to ATM service interworking function,\n
    \                    o  Support for frame relay fragmentation,\n                     o
    \ Additional frame counters to track frame\n                        loss.\n                 Refer
    to Appendix A for a comprehensive list of\n                 changes since RFC
    1604.\"\n            REVISION \"199311161200Z\"\n            DESCRIPTION\n                 \"Published
    as RFC 1604.\"\n            ::= { transmission 44 }\n            frnetservObjects\n
    \               OBJECT IDENTIFIER ::= { frnetservMIB 1 }\n            frnetservTraps\n
    \               OBJECT IDENTIFIER ::= { frnetservMIB 2 }\n            frnetservTrapsPrefix\n
    \               OBJECT IDENTIFIER ::= { frnetservTraps 0 }\n        --\n        --
    The Frame Relay Service Logical Port\n        --\n        frLportTable OBJECT-TYPE\n
    \           SYNTAX      SEQUENCE OF FrLportEntry\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    Frame Relay Logical Port Information table is\n                    an interface-specific
    addendum to the generic\n                    ifTable of the Interface MIB.\"\n
    \           ::= { frnetservObjects 1 }\n        frLportEntry OBJECT-TYPE\n            SYNTAX
    \     FrLportEntry\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"An entry in the
    Frame Relay Logical Port\n                    Information table.\"\n            INDEX
    \  {   ifIndex }\n            ::= { frLportTable 1 }\n        FrLportEntry ::=\n
    \           SEQUENCE {\n                frLportNumPlan            INTEGER,\n                frLportContact
    \           SnmpAdminString,\n                frLportLocation           SnmpAdminString,\n
    \               frLportType               INTEGER,\n                frLportAddrDLCILen
    \       INTEGER,\n                frLportVCSigProtocol      INTEGER,\n                frLportVCSigPointer
    \      OBJECT IDENTIFIER,\n                frLportDLCIIndexValue     Integer32,\n
    \               frLportTypeAdmin          INTEGER,\n                frLportVCSigProtocolAdmin
    INTEGER,\n                frLportFragControl        INTEGER,\n                frLportFragSize
    \          Integer32\n        }\n        frLportNumPlan OBJECT-TYPE\n            SYNTAX
    \     INTEGER {\n                        other(1),\n                        e164(2),\n
    \                       x121(3),\n                        none(4)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the network\n                    address
    numbering plan for this UNI/NNI logical\n                    port. The network
    address is the object\n                    ifPhysAddress. The value none(4) implies
    that\n                    there is no ifPhysAddress.  The FRS agent will\n                    return
    an octet string of zero length for\n                    ifPhysAddress.  The value
    other(1) means that an\n                    address has been assigned to this
    interface, but\n                    the numbering plan is not enumerated here.\"\n
    \           REFERENCE   \"E.164 [29]\n                         X.121 [30]\"\n
    \           ::= { frLportEntry 1 }\n        frLportContact  OBJECT-TYPE\n            SYNTAX
    \     SnmpAdminString\n            MAX-ACCESS  read-only\n            STATUS      current\n
    \           DESCRIPTION\n                    \"The value of this object identifies
    the network\n                    contact for this UNI/NNI logical port.\"\n            ::=
    { frLportEntry 2 }\n        frLportLocation OBJECT-TYPE\n            SYNTAX      SnmpAdminString\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the frame\n                    relay
    network location for this UNI/NNI logical\n                    port.\"\n            ::=
    { frLportEntry 3 }\n        frLportType     OBJECT-TYPE\n            SYNTAX      INTEGER
    {\n                        uni(1),\n                        nni(2)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the type of\n                    network
    interface for this logical port.\"\n            ::= { frLportEntry 4 }\n        frLportAddrDLCILen
    OBJECT-TYPE\n            SYNTAX      INTEGER {\n                        twoOctets10Bits(1),\n
    \                       threeOctets10Bits(2),\n                        threeOctets16Bits(3),\n
    \                       fourOctets17Bits(4),\n                        fourOctets23Bits(5)\n
    \                       }\n            UNITS       \"Octets\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the Q.922\n                    Address field length
    and DLCI length for this\n                    UNI/NNI logical port.\"\n            REFERENCE
    \  \"Q.922 [25]\"\n            ::= { frLportEntry 5 }\n        frLportVCSigProtocol
    OBJECT-TYPE\n            SYNTAX      INTEGER {\n                        none(1),\n
    \                       lmi(2),\n                        ansiT1617D(3),\n                        ansiT1617B(4),\n
    \                       ccittQ933A(5)\n                        }\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the Local\n                    In-Channel Signaling
    Protocol that is used for\n                    this frame relay UNI/NNI logical
    port.\n                    none(1):        Interface does not use a PVC\n                                    signaling
    protocol\n                    lmi(2):         Interface operates the Stratacom/\n
    \                                   Nortel/DEC Local Management\n                                    Interface
    Specification protocol\n                    ansiT1617D(3):  Interface operates
    the ANSI T1.617\n                                    Annex D PVC status protocol\n
    \                     ansiT1617B(4):  Interface operates the ANSI\n"
  - "T1.617\n                                      Annex B procedures\n                      ccittQ933A(5):
    \ Interface operates the ITU Q.933\n                                      Annex
    A PVC status protocol\"\n              REFERENCE   \"LMI [24]\n                           T1.617
    Annex D [17],\n                           Q.933 Annex A [22]\"\n              ::=
    { frLportEntry 6 }\n        frLportVCSigPointer OBJECT-TYPE\n            SYNTAX
    \     OBJECT IDENTIFIER\n            MAX-ACCESS  read-only\n            STATUS
    \     deprecated\n            DESCRIPTION\n                    \"The value of
    this object is used as a pointer to\n                    the table that contains
    the Local In-Channel\n                    Signaling Protocol parameters and errors
    for this\n                    UNI/NNI logical port.\n                    This
    object has been deprecated to reflect the\n                    fact that the local
    in-channel signaling\n                    parameters are accessed from a single
    table\n                    (frMgtVCSigTable) that includes parameters for all\n
    \                   possible signaling protocols.  Early design\n                    anticipated
    multiple tables, one for each\n                    signaling protocol.\"\n            ::=
    { frLportEntry 7 }\n        frLportDLCIIndexValue OBJECT-TYPE\n            SYNTAX
    \     Integer32 (16..4194303)\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"This object contains
    a hint to be used for\n                    frPVCEndptDLCIIndex when creating entries
    in the\n                    frPVCEndptTable.  The SYNTAX of this object\n                    matches
    the SYNTAX of the frPVCEndptDLCIIndex - an\n                    object that is
    restricted to legal Q.922 DLCI\n                    values for the size of the
    address field.\n                    The value 0 indicates that no unassigned entries\n
    \                   are available.\n                    To obtain the frPVCEndptDLCIIndex
    value for a new\n                    entry, the manager issues a management protocol\n
    \                   retrieval operation to obtain the current value of\n                    this
    object.  After each retrieval, the agent must\n                    modify the
    value to the next unassigned index to\n                    prevent assignment
    of the same value to multiple\n                    management systems.\n                    A
    management system should repeat the read to\n                    obtain a new
    value should an attempt to create the\n                    new row using the previously
    returned hint fail.\"\n            REFERENCE   \"Q.922 [25]\"\n            ::=
    { frLportEntry 8 }\n        frLportTypeAdmin   OBJECT-TYPE\n            SYNTAX
    \     INTEGER {\n                        uni(1),\n                        nni(2)\n
    \                       }\n            MAX-ACCESS  read-write\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object desired identifies the\n                    type of network interface for
    this logical port.\"\n              ::= { frLportEntry 9 }\n        frLportVCSigProtocolAdmin
    OBJECT-TYPE\n            SYNTAX      INTEGER {\n                        none(1),\n
    \                       lmi(2),\n                        ansiT1617D(3),\n                        ansiT1617B(4),\n
    \                       ccittQ933A(5)\n                        }\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    Local In-Channel
    Signaling Protocol that is used\n                    for this frame relay UNI/NNI
    logical port.  This\n                    value must be made the active protocol
    as soon as\n                    possible on the device.\n                    Refer
    to frLportVCSigProtocol for a description of\n                    each signaling
    protocol choices.\"\n            REFERENCE   \"LMI [24]\n                         T1.617
    Annex D [17],\n                         Q.933 Annex A [22]\"\n            ::=
    { frLportEntry 10 }\n        frLportFragControl OBJECT-TYPE\n            SYNTAX
    \     INTEGER {\n                        on(1),\n                        off(2)\n
    \                       }\n            MAX-ACCESS  read-write\n            STATUS
    \     current\n            DESCRIPTION\n                    \"This object controls
    the transmission and\n                    reception of fragmentation frames for
    this UNI or\n                    NNI interface.\n                    on(1)   Frames
    are fragmented using the interface\n                            fragmentation
    format\n                            Note:  The customer side of the interface\n
    \                           must also be configured to fragment\n                            frames.\n
    \                   off(2)  Frames are not fragmented using the\n                            interface
    fragmentation format.\"\n            REFERENCE   \"FRF.12 [21]\"\n            DEFVAL
    { off }\n            ::= { frLportEntry 11 }\n        frLportFragSize OBJECT-TYPE\n
    \           SYNTAX      Integer32 (0..4096)\n            UNITS       \"Octets\"\n
    \           MAX-ACCESS  read-write\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object is the size in octets of\n                    the
    maximum size of each fragment to be sent when\n                    fragmenting.
    \ This object is only used by the\n                    fragmentation transmitter,
    and the two sides of\n                    the interface may differ.  The fragment
    size\n                    includes the octets for the frame relay header,\n                    the
    UI octet, the NLPID, the fragmentation header,\n                    and the fragment
    payload. If frLportFragControl is\n                    set to off, this value
    should be zero.\"\n            REFERENCE   \"FRF.12 [21]\"\n            DEFVAL
    { 0 }\n            ::= { frLportEntry 12 }\n        --\n        -- Frame Relay
    Management VC Signaling\n        --\n        frMgtVCSigTable OBJECT-TYPE\n            SYNTAX
    \     SEQUENCE OF FrMgtVCSigEntry\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The Frame Relay
    Management VC Signaling\n                    Parameters and Errors table.\"\n
    \           ::= { frnetservObjects 2 }\n        frMgtVCSigEntry OBJECT-TYPE\n
    \           SYNTAX      FrMgtVCSigEntry\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"An
    entry in the Frame Relay Management VC\n                    Signaling Parameters
    Errors table.\"\n            INDEX       { ifIndex }\n            ::= { frMgtVCSigTable
    1 }\n        FrMgtVCSigEntry ::=\n            SEQUENCE {\n                frMgtVCSigProced
    \            INTEGER,\n                frMgtVCSigUserN391           INTEGER,\n
    \               frMgtVCSigUserN392           INTEGER,\n                frMgtVCSigUserN393
    \          INTEGER,\n                frMgtVCSigUserT391           INTEGER,\n                frMgtVCSigNetN392
    \           INTEGER,\n                frMgtVCSigNetN393            INTEGER,\n
    \               frMgtVCSigNetT392            INTEGER,\n                frMgtVCSigNetnN4
    \            INTEGER,\n                frMgtVCSigNetnT3             INTEGER,\n
    \               frMgtVCSigUserLinkRelErrors  Counter32,\n                frMgtVCSigUserProtErrors
    \    Counter32,\n                frMgtVCSigUserChanInactive   Counter32,\n                frMgtVCSigNetLinkRelErrors
    \  Counter32,\n                frMgtVCSigNetProtErrors      Counter32,\n                frMgtVCSigNetChanInactive
    \   Counter32,\n                frMgtVCSigProcedAdmin        INTEGER,\n                frMgtVCSigUserN391Admin
    \     INTEGER,\n                frMgtVCSigUserN392Admin      INTEGER,\n                frMgtVCSigUserN393Admin
    \     INTEGER,\n                frMgtVCSigUserT391Admin      INTEGER,\n                frMgtVCSigNetN392Admin
    \      INTEGER,\n                frMgtVCSigNetN393Admin       INTEGER,\n                frMgtVCSigNetT392Admin
    \      INTEGER,\n                frMgtVCSigNetnT3Admin        INTEGER\n        }\n
    \       frMgtVCSigProced OBJECT-TYPE\n            SYNTAX      INTEGER {\n                        u2nnet(1),\n
    \                       bidirect(2),\n                        u2nuser(3)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the local\n                    in-channel
    signaling procedural role that is used\n                    for this UNI/NNI logical
    port.  Bidirectional\n                    procedures implies that both user-side
    and\n                    network-side procedural roles are used.\n                    u2nnet(1)
    \  Logical port operates user to network\n                                procedure
    in the role of the network\n                                side\n                    bidirect(2)
    Logical port operates the\n                                bidirectional procedure
    (both user\n                                and network side roles)\n                    u2nuser(3)
    \ Logical port operates user to network\n                                procedure
    in the role of the user\n                                side\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            ::=
    { frMgtVCSigEntry 1 }\n        frMgtVCSigUserN391 OBJECT-TYPE\n            SYNTAX
    \     INTEGER (1..255)\n            UNITS       \"Polls\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the User-side\n                    N391 full status
    polling cycle value for this\n                    UNI/NNI logical port.  If the
    logical port is not\n                    performing user-side (bidirectional)
    procedures,\n                    then this object is not instantiated and an\n
    \                   attempt to read will result in the noSuchInstance\n                    exception
    response.\"\n            REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17]\"\n            DEFVAL { 6 }\n            ::= { frMgtVCSigEntry 2
    }\n        frMgtVCSigUserN392 OBJECT-TYPE\n            SYNTAX      INTEGER (1..10)\n
    \           UNITS       \"Events\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object identifies the User-side\n                    N392 error threshold value
    for this UNI/NNI\n                    logical port.  If the logical port is not\n
    \                   performing user-side (bidirectional) procedures,\n                    then
    this object is not instantiated.\"\n            REFERENCE   \"Q.933 Annex A [22],\n
    \                        T1.617 Annex D [17]\"\n            DEFVAL { 3 }\n            ::=
    { frMgtVCSigEntry 3 }\n        frMgtVCSigUserN393 OBJECT-TYPE\n            SYNTAX
    \     INTEGER (1..10)\n            UNITS       \"Events\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the User-side\n                    N393 monitored
    events count value for this UNI/NNI\n                    logical port.  If the
    logical port is not\n                    performing user-side (bidirectional)
    procedures,\n                    then this object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            DEFVAL
    { 4 }\n            ::= { frMgtVCSigEntry 4 }\n        frMgtVCSigUserT391 OBJECT-TYPE\n
    \           SYNTAX      INTEGER (5..30)\n            UNITS       \"Seconds\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the User-side\n                    T391
    link integrity verification polling timer\n                    value for this
    UNI/NNI logical port.  If the\n                    logical port is not performing
    user-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17]\"\n            DEFVAL { 10 }\n            ::= { frMgtVCSigEntry 5
    }\n        frMgtVCSigNetN392 OBJECT-TYPE\n            SYNTAX      INTEGER (1..10)\n
    \           UNITS       \"Events\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object identifies the Network-\n                    side N392 error threshold
    value (nN2 for LMI) for\n                    this UNI/NNI logical port.  If the
    logical port is\n                    not performing network-side procedures, then
    this\n                    object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17],\n                         LMI
    [24]\"\n            DEFVAL { 3 }\n            ::= { frMgtVCSigEntry 6 }\n        frMgtVCSigNetN393
    OBJECT-TYPE\n            SYNTAX      INTEGER (1..10)\n            UNITS       \"Events\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the Network-\n                    side
    N393 monitored events count value (nN3 for\n                    LMI) for this
    UNI/NNI logical port.  If the\n                    logical port is not performing
    network-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17],\n                         LMI [24]\"\n            DEFVAL { 4 }\n
    \           ::= { frMgtVCSigEntry 7 }\n        frMgtVCSigNetT392 OBJECT-TYPE\n
    \           SYNTAX      INTEGER (5..30)\n            UNITS       \"Seconds\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the Network-\n                    side
    T392 polling verification timer value (nT2\n                    for LMI)  for
    this UNI/NNI logical port.  If the\n                    logical port is not performing
    network-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17],\n                         LMI [24]\"\n            DEFVAL { 15 }\n
    \           ::= { frMgtVCSigEntry 8 }\n        frMgtVCSigNetnN4 OBJECT-TYPE\n
    \           SYNTAX      INTEGER (5..5)\n            UNITS       \"Events\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the Network-\n                    side nN4 maximum
    status enquires received value\n                    for this UNI/NNI logical port.
    \ If the logical\n                    port is not performing network-side procedures
    or\n                    is not performing LMI procedures, then this object\n                    is
    not instantiated.\n                    This object applies only to LMI and always
    has a\n                    value of 5.\"\n            REFERENCE   \"LMI [24]\"\n
    \           ::= { frMgtVCSigEntry 9 }\n        frMgtVCSigNetnT3 OBJECT-TYPE\n
    \           SYNTAX      INTEGER (5 | 10 | 15 | 20 | 25 | 30)\n            UNITS
    \      \"Seconds\"\n            MAX-ACCESS  read-only\n            STATUS      current\n
    \           DESCRIPTION\n                    \"The value of this object identifies
    the Network-\n                    side nT3 timer (for nN4 status enquires received)\n
    \                   value for this UNI/NNI logical port.  If the\n                    logical
    port is not performing network-side\n                    procedures or is not
    performing LMI procedures,\n                    then this object is not instantiated.\n
    \                     This object applies only to LMI.\"\n              REFERENCE
    \  \"LMI [24]\"\n              DEFVAL { 20 }\n              ::= { frMgtVCSigEntry
    10 }\n        frMgtVCSigUserLinkRelErrors OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Errors\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of user-side
    local in-channel\n                    signaling link reliability errors (i.e.,
    non-\n                    receipt of Status/Status Enquiry messages or\n                    invalid
    sequence numbers in a Link Integrity\n                    Verification Information
    Element) for this UNI/NNI\n                    logical port.  If the logical port
    is not\n                    performing user-side procedures, then this object\n
    \                   is not instantiated.\"\n            ::= { frMgtVCSigEntry
    11 }\n        frMgtVCSigUserProtErrors OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Errors\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of user-side
    local in-channel\n                    signaling protocol errors (i.e., protocol\n
    \                   discriminator, unnumbered information, message\n                    type,
    call reference, and mandatory information\n                    element errors)
    for this UNI/NNI logical port. If\n                    the logical port is not
    performing user-side\n                    procedures, then this object is not
    instantiated.\"\n            ::= { frMgtVCSigEntry 12 }\n      frMgtVCSigUserChanInactive
    OBJECT-TYPE\n          SYNTAX      Counter32\n          UNITS       \"Events\"\n
    \         MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The number of times the user-side channel was\n                    declared
    inactive (i.e., N392 errors in N393\n                    events) for this UNI/NNI
    logical port. If the\n                    logical port is not performing user-side\n
    \                   procedures, then this object is not instantiated.\"\n            ::=
    { frMgtVCSigEntry 13 }\n        frMgtVCSigNetLinkRelErrors OBJECT-TYPE\n            SYNTAX
    \     Counter32\n            UNITS       \"Errors\"\n            MAX-ACCESS  read-only\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    number of network-side local in-channel\n                    signaling link reliability
    errors (i.e., non-\n                    receipt of Status/Status Enquiry messages
    or\n                    invalid sequence numbers in a Link Integrity\n                    Verification
    Information Element) for this UNI/NNI\n                    logical port.\"\n            ::=
    { frMgtVCSigEntry 14 }\n        frMgtVCSigNetProtErrors OBJECT-TYPE\n            SYNTAX
    \     Counter32\n            UNITS       \"Errors\"\n            MAX-ACCESS  read-only\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    number of network-side local in-channel\n                    signaling protocol
    errors (i.e., protocol\n                    discriminator, message type, call
    reference, and\n                    mandatory information element errors) for
    this\n                    UNI/NNI logical port.\"\n            ::= { frMgtVCSigEntry
    15 }\n        frMgtVCSigNetChanInactive OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Events\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of times
    the network-side channel was\n                    declared inactive (i.e., N392
    errors in N393\n                    events) for this UNI/NNI logical port.\"\n
    \           ::= { frMgtVCSigEntry 16 }\n        frMgtVCSigProcedAdmin OBJECT-TYPE\n
    \           SYNTAX      INTEGER {\n                        u2nnet(1),\n                        bidirect(2),\n
    \                       u2nuser(3)\n                        }\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the local\n                    in-channel signaling
    procedural role that is used\n                    for this UNI/NNI logical port.
    \ Bidirectional\n                    procedures implies that both user-side and\n
    \                   network-side procedural roles are used.\n                    u2nnet(1)
    \  Logical port operates user to network\n                                procedure
    in the role of the network\n                                side\n                    bidirect(2)
    Logical port operates the\n                                bidirectional procedure
    (both user\n                                and network side roles)\n                    u2nuser(3)
    \ Logical port operates user to network\n                                procedure
    in the role of the user\n                                side\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            DEFVAL
    { u2nnet }\n            ::= { frMgtVCSigEntry 17 }\n        frMgtVCSigUserN391Admin
    OBJECT-TYPE\n            SYNTAX      INTEGER (1..255)\n            UNITS       \"Polls\"\n
    \           MAX-ACCESS  read-write\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the desired\n                    User-side
    N391 full status polling cycle value for\n                    this UNI/NNI logical
    port.  If the logical port is\n                    not performing user-side (bidirectional)\n
    \                   procedures, then this object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            ::=
    { frMgtVCSigEntry 18 }\n        frMgtVCSigUserN392Admin OBJECT-TYPE\n            SYNTAX
    \     INTEGER (1..10)\n            UNITS       \"Events\"\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    User-side N392
    error threshold value for this\n                    UNI/NNI logical port.  If
    the logical port is not\n                    performing user-side (bidirectional)
    procedures,\n                    then this object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            ::=
    { frMgtVCSigEntry 19 }\n        frMgtVCSigUserN393Admin OBJECT-TYPE\n            SYNTAX
    \     INTEGER (1..10)\n            UNITS       \"Events\"\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    User-side N393
    monitored events count value for\n                    this UNI/NNI logical port.
    \ If the logical port is\n                    not performing user-side (bidirectional)\n
    \                   procedures, then this object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17]\"\n            ::=
    { frMgtVCSigEntry 20 }\n        frMgtVCSigUserT391Admin OBJECT-TYPE\n            SYNTAX
    \     INTEGER (5..30)\n            UNITS       \"Seconds\"\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    User-side T391
    link integrity verification polling\n                    timer value for this
    UNI/NNI logical port.  If the\n                    logical port is not performing
    user-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17]\"\n            ::= { frMgtVCSigEntry 21 }\n        frMgtVCSigNetN392Admin
    OBJECT-TYPE\n            SYNTAX      INTEGER (1..10)\n            UNITS       \"Events\"\n
    \           MAX-ACCESS  read-write\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the desired\n                    Network-side
    N392 error threshold value (nN2 for\n                    LMI) for this UNI/NNI
    logical port.  If the\n                    logical port is not performing network-side\n
    \                   procedures, then this object is not instantiated.\"\n            REFERENCE
    \  \"Q.933 Annex A [22],\n                         T1.617 Annex D [17],\n                         LMI
    [24]\"\n            ::= { frMgtVCSigEntry 22 }\n        frMgtVCSigNetN393Admin
    OBJECT-TYPE\n            SYNTAX      INTEGER (1..10)\n            UNITS       \"Events\"\n
    \           MAX-ACCESS  read-write\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the desired\n                    Network-side
    N393 monitored events count value\n                    (nN3 for LMI) for this
    UNI/NNI logical port.  If\n                    the logical port is not performing
    network-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17],\n                         LMI [24]\"\n            ::= { frMgtVCSigEntry
    23 }\n        frMgtVCSigNetT392Admin OBJECT-TYPE\n            SYNTAX      INTEGER
    (5..30)\n            UNITS       \"Seconds\"\n            MAX-ACCESS  read-write\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    Network-side
    T392 polling verification timer value\n                    (nT2 for LMI)  for
    this UNI/NNI logical port. If\n                    the logical port is not performing
    network-side\n                    procedures, then this object is not instantiated.\"\n
    \           REFERENCE   \"Q.933 Annex A [22],\n                         T1.617
    Annex D [17],\n                         LMI [24]\"\n            ::= { frMgtVCSigEntry
    24 }\n        frMgtVCSigNetnT3Admin OBJECT-TYPE\n            SYNTAX      INTEGER
    (5 | 10 | 15 | 20 | 25 | 30)\n            UNITS       \"Seconds\"\n            MAX-ACCESS
    \ read-write\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    Network-side
    nT3 timer (for nN4 status enquires\n                    received) value for this
    UNI/NNI logical port. If\n                    the logical port is not performing
    network-side\n                    procedures or is not performing LMI procedures,\n
    \                   then this object is not instantiated.  This object\n                    applies
    only to LMI.\"\n            REFERENCE   \"LMI [24]\"\n            ::= { frMgtVCSigEntry
    25 }\n        --\n        -- Frame Relay PVC End-points\n        --\n        frPVCEndptTable
    OBJECT-TYPE\n            SYNTAX      SEQUENCE OF FrPVCEndptEntry\n            MAX-ACCESS
    \ not-accessible\n            STATUS      current\n            DESCRIPTION\n                    \"The
    Frame Relay PVC End-Point table.  This table\n                    is used to model
    a PVC end-point.  This table\n                    contains the traffic parameters
    and statistics for\n                    a PVC end-point.\n                    This
    table is used to identify the traffic\n                    parameters for a bi-directional
    PVC segment end-\n                    point, and it also provides statistics for
    a PVC\n                    segment end-point.\n                    A PVC segment
    end-point is identified by a UNI/NNI\n                    logical port index value
    and DLCI index value.\n                    If the frame relay service provider
    allows the\n                    frame relay CNM subscriber to create, modify or\n
    \                   delete PVCs using SNMP, then this table is used to\n                    identify
    and reserve the requested traffic\n                    parameters of each PVC
    segment end-point.  The\n                    Connection table is used to 'connect'
    the end-\n                    points together.  Not all implementations will\n
    \                   support the capability of\n                    creating/modifying/deleting
    PVCs using SNMP as a\n                    feature of frame relay CNM service.\n
    \                   Uni-directional PVCs are modeled with zero valued\n                    traffic
    parameters in one of the directions (In or\n                     Out direction)
    in this table.\n                    To create a PVC, the following procedures
    shall be\n                    followed:\n                    1)  Create the entries
    for the PVC segment\n                        endpoints in the frPVCEndptTable
    by specifying\n                        the traffic parameters for the bi-directional\n
    \                       PVC segment endpoints. As shown in figure 2, a\n                        point-to-point
    PVC has two endpoints, thus two\n                        entries in this table.
    \ Uni-directional PVCs\n                        are modeled with zero valued traffic\n
    \                       parameters in one direction; all the `In'\n                        direction
    parameters for one frame relay PVC\n                        End-point or all the
    `Out' direction\n                        parameters for the other frame relay
    PVC\n                        Endpoint.\n                        In    _____________________________
    \ Out\n                       >>>>>>|                             |>>>>>>>>\n
    \                      ______|    Frame Relay Network      |________\n                        Out
    \ |                             |  In\n                       <<<<<<|_____________________________|<<<<<<<<\n
    \                    Frame Relay                         Frame Relay\n                         PVC
    \                                PVC\n                       Endpoint                            Endpoint\n
    \                               Figure 2, PVC Terminology\n                    2)
    \ Go to the Frame Relay Connection Group.\"\n            ::= { frnetservObjects
    3 }\n        frPVCEndptEntry OBJECT-TYPE\n            SYNTAX      FrPVCEndptEntry\n
    \           MAX-ACCESS  not-accessible\n            STATUS      current\n            DESCRIPTION\n
    \                   \"An entry in the Frame Relay PVC Endpoint table.\"\n            INDEX
    \  { ifIndex, frPVCEndptDLCIIndex }\n            ::= { frPVCEndptTable 1 }\n        FrPVCEndptEntry
    ::=\n            SEQUENCE {\n                frPVCEndptDLCIIndex            Integer32,\n
    \               frPVCEndptInMaxFrameSize       Integer32,\n                frPVCEndptInBc
    \                Integer32,\n                frPVCEndptInBe                 Integer32,\n
    \               frPVCEndptInCIR                Integer32,\n                frPVCEndptOutMaxFrameSize
    \     Integer32,\n                frPVCEndptOutBc                Integer32,\n
    \               frPVCEndptOutBe                Integer32,\n                frPVCEndptOutCIR
    \              Integer32,\n                frPVCEndptConnectIdentifier    Integer32,\n
    \               frPVCEndptRowStatus            RowStatus,\n                frPVCEndptRcvdSigStatus
    \       INTEGER,\n                frPVCEndptInFrames             Counter32,\n
    \               frPVCEndptOutFrames            Counter32,\n                frPVCEndptInDEFrames
    \          Counter32,\n                frPVCEndptInExcessFrames       Counter32,\n
    \               frPVCEndptOutExcessFrames      Counter32,\n                frPVCEndptInDiscards
    \          Counter32,\n                frPVCEndptInOctets             Counter32,\n
    \               frPVCEndptOutOctets            Counter32,\n                frPVCEndptInDiscardsDESet
    \     Counter32,\n                frPVCEndptInFramesFECNSet      Counter32,\n
    \               frPVCEndptOutFramesFECNSet     Counter32,\n                frPVCEndptInFramesBECNSet
    \     Counter32,\n                frPVCEndptOutFramesBECNSet     Counter32,\n
    \               frPVCEndptInCongDiscards       Counter32,\n                frPVCEndptInDECongDiscards
    \    Counter32,\n                frPVCEndptOutCongDiscards      Counter32,\n                frPVCEndptOutDECongDiscards
    \   Counter32,\n                frPVCEndptOutDEFrames          Counter32,\n                frPVCEndptAtmIwfConnIndex
    \     Integer32\n            }\n        frPVCEndptDLCIIndex OBJECT-TYPE\n            SYNTAX
    \     Integer32 (16..4194303)\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object is equal to the DLCI\n                    value for this PVC end-point.\n
    \                   The values are restricted to the legal range for\n                    the
    size of address field supported by the logical\n                    port (frLportAddrDLCILen).\"\n
    \           REFERENCE   \"Q.922 [25]\"\n            ::= { frPVCEndptEntry 1 }\n
    \       frPVCEndptInMaxFrameSize OBJECT-TYPE\n            SYNTAX      Integer32
    (1..4096)\n            UNITS       \"Octets\"\n            MAX-ACCESS  read-create\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is the size in octets of\n                    the largest
    frame relay information field for this\n                    PVC end-point in the
    ingress direction (into the\n                    frame relay network).  The value
    of\n                    frPVCEndptInMaxFrameSize must be less than or\n                    equal
    to the corresponding ifMtu for this frame\n                    relay UNI/NNI logical
    port.\"\n            REFERENCE   \"FRF.1 [31]\n                         Q.922
    [25]\n                         Q.933 [22]\"\n            DEFVAL { 1600 }\n            ::=
    { frPVCEndptEntry 2 }\n        frPVCEndptInBc OBJECT-TYPE\n            SYNTAX
    \     Integer32 (1..2147483647)\n            UNITS       \"Bits\"\n            MAX-ACCESS
    \ read-create\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the\n                    committed burst size
    (Bc) parameter (measured in\n                    bits) for this PVC end-point
    in the ingress\n                    direction (into the frame relay network).\n
    \                   Note that the max value of this range is lower\n                    than
    the max value allowed by Q.933 (16383 *\n                    10**6).\n                    Note
    that the value is encoded in bits whilst the\n                    Q.933 Link layer
    core parameters information\n                    element encodes this information
    using octet\n                    units.\"\n            REFERENCE   \"Q.933 [22]\"\n
    \           ::= { frPVCEndptEntry 3 }\n        frPVCEndptInBe OBJECT-TYPE\n            SYNTAX
    \     Integer32 (1..2147483647)\n            UNITS       \"Bits\"\n            MAX-ACCESS
    \ read-create\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the excess\n                    burst size (Be)
    parameter (measured in bits) for\n                    this PVC end-point in the
    ingress direction (into\n                    the frame relay network).\n                    Note
    that the max value of this range is lower\n                    than the max value
    allowed by Q.933 (16383 *\n                    10**6).\n                    Note
    that the value is encoded in bits whilst the\n                    Q.933 Link layer
    core parameters information\n                    element encodes this information
    using octet\n                    units.\"\n            REFERENCE   \"Q.933 [22]\"\n
    \           ::= { frPVCEndptEntry 4 }\n        frPVCEndptInCIR OBJECT-TYPE\n            SYNTAX
    \     Integer32 (1..2147483647)\n            UNITS       \"Bits per Second\"\n
    \           MAX-ACCESS  read-create\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object is equal to the\n                    committed
    information rate (CIR) parameter\n                    (measured in bits per second)
    for this PVC end-\n                    point in the ingress direction (into the
    frame\n                    relay network).\n                    Note that the
    max value of this range is lower\n                    than the max value allowed
    by Q.933 (2047 *\n                    10**6).\"\n            REFERENCE   \"Q.933
    [22]\"\n            ::= { frPVCEndptEntry 5 }\n        frPVCEndptOutMaxFrameSize
    OBJECT-TYPE\n            SYNTAX      Integer32 (1..4096)\n            UNITS       \"Octets\"\n
    \           MAX-ACCESS  read-create\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object is the size in octets of\n                    the
    largest frame relay information field for this\n                    PVC end-point
    in the egress direction (out of the\n                    frame relay network).
    \ The value of\n                    frPVCEndptOutMaxFrameSize must be less than
    or\n                    equal to the corresponding ifMtu for this frame\n                    relay
    UNI/NNI logical port.\"\n            REFERENCE   \"FRF.1 [31]\n                         Q.922
    [25]\n                         Q.933 [22]\"\n            DEFVAL { 1600 }\n            ::=
    { frPVCEndptEntry 6 }\n        frPVCEndptOutBc OBJECT-TYPE\n            SYNTAX
    \     Integer32 (1..2147483647)\n            UNITS       \"Bits\"\n            MAX-ACCESS
    \ read-create\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the\n                    committed burst size
    (Bc) parameter (measured in\n                    bits) for this PVC end-point
    in the egress\n                    direction (out of the frame relay network).\n
    \                   Note that the max value of this range is lower\n                    than
    the max value allowed by Q.933 (16383 *\n                    10**6).\n                    Note
    that the value is encoded in bits whilst the\n                    Q.933 Link layer
    core parameters information\n                    element encodes this information
    using octet\n                    units.\"\n            REFERENCE   \"Q.933 [22]\"\n
    \           ::= { frPVCEndptEntry 7 }\n        frPVCEndptOutBe OBJECT-TYPE\n            SYNTAX
    \     Integer32 (1..2147483647)\n            UNITS       \"Bits\"\n            MAX-ACCESS
    \ read-create\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the excess\n                    burst size (Be)
    parameter (measured in bits) for\n                    this PVC end-point in the
    egress direction (out of\n                    the frame relay network).\n                    Note
    that the max value of this range is lower\n                    than the max value
    allowed by Q.933 (16383 *\n                    10**6).\n                    Note
    that the value is encoded in bits whilst the\n                    Q.933 Link layer
    core parameters information\n                    element encodes this information
    using octet\n                    units.\"\n            REFERENCE   \"Q.933 [22]\"\n
    \           ::= { frPVCEndptEntry 8 }\n        frPVCEndptOutCIR OBJECT-TYPE\n
    \           SYNTAX      Integer32 (1..2147483647)\n            UNITS       \"Bits
    per Second\"\n            MAX-ACCESS  read-create\n            STATUS      current\n
    \           DESCRIPTION\n                    \"The value of this object is equal
    to the\n                    committed information rate (CIR) parameter\n                    (measured
    in bits per second) for this PVC end-\n                    point in the egress
    direction (out of the frame\n                    relay network).\n                    Note
    that the max value of this range is lower\n                    than the max value
    allowed by Q.933 (2047 *\n                    10**6).\"\n            REFERENCE
    \  \"Q.933 [22]\"\n            ::= { frPVCEndptEntry 9 }\n        frPVCEndptConnectIdentifier
    OBJECT-TYPE\n            SYNTAX      Integer32 (0..2147483647)\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"This
    object is used to associate PVC end-points\n                    as being part
    of one PVC segment connection. This\n                    value of this object
    is equal to the value of\n                    frPVCConnectIndex, which is used
    as one of the\n                    indices into the frPVCConnectTable.\n                    A
    connection that has been cross-connected via the\n                    FR/ATM PVC
    Service IWF cross-connect table will\n                    return the value zero
    when this object is read. In\n                    case of these interworked connections,
    the\n                    frPVCEndptAtmIwfConnIndex object must be accessed\n                    to
    select the entry in the FR/ATM PVC Service IWF\n                    cross-connect
    table.\n                    The value of this object is provided by the agent,\n
    \                   after the associated entries in the\n                    frPVCConnectTable
    or frAtmIwfConnectionTable have\n                    been created.\"\n            ::=
    { frPVCEndptEntry 10 }\n        frPVCEndptRowStatus OBJECT-TYPE\n            SYNTAX
    \     RowStatus\n            MAX-ACCESS  read-create\n            STATUS      current\n
    \           DESCRIPTION\n                    \"This object is used to create new
    rows in this\n                    table, modify existing rows, and to delete\n
    \                   existing rows.  To create a new PVC, the entries\n                    for
    the PVC segment end-points in the\n                    frPVCEndptTable must first
    be created.  Next, the\n                    frPVCConnectTable is used to associate
    the frame\n                    relay PVC segment end-points.  In order for the\n
    \                   manager to have the necessary error diagnostics,\n                    the
    frPVCEndptRowStatus object must initially be\n                    set to `createAndWait(5)'.
    \ While the\n                    frPVCEndptRowStatus object is in the\n                    `createAndWait(5)'
    state, the manager can set each\n                    columnar object and get the
    necessary error\n                    diagnostics.  The frPVCEndptRowStatus object
    may\n                    not be set to `active(1)' unless the following\n                    columnar
    objects exist in this row:\n                    frPVCEndptInMaxFrameSize, frPVCEndptInBc,\n
    \                   frPVCEndptInBe, frPVCEndptInCIR,\n                    frPVCEndptOutMaxFrameSize,
    frPVCEndptOutBc,\n                    frPVCEndptOutBe, and frPVCEndptOutCIR.\"\n
    \           ::= { frPVCEndptEntry 11 }\n        frPVCEndptRcvdSigStatus OBJECT-TYPE\n
    \           SYNTAX      INTEGER {\n                        deleted(1),\n                        active(2),\n
    \                       inactive(3),\n                        none(4)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the PVC\n                    status
    received via the local in-channel signaling\n                    procedures for
    this PVC end-point.  This object is\n                    only pertinent for interfaces
    that perform the\n                    bidirectional procedures.\n                    Each
    value has the following meaning:\n                      deleted(1):  This PVC
    is not listed in the full\n                                   status reports received
    from the\n                                   user device.  The object retains\n
    \                                  this value for as long as the PVC\n                                   is
    not listed in the full status\n                                   reports\n                    active(2):
    \  This PVC is reported as active, or\n                                   operational,
    by the user device.\n                      inactive(3): This PVC is reported as
    inactive,\n                                   or non-operational, by the user\n
    \                                  device.\n                      none(4):     This
    interface is only using the\n                                   network-side in-channel
    signaling\n                                   procedures, so this object does\n
    \                                  not apply.\"\n            ::= { frPVCEndptEntry
    12 }\n        frPVCEndptInFrames OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    received by the network\n                    (ingress) for this PVC end-point.
    This includes\n                    any frames discarded by the network due to\n
    \                   submitting more than Bc + Be data or due to any\n                    network
    congestion recovery procedures.\"\n            ::= { frPVCEndptEntry 13 }\n        frPVCEndptOutFrames
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Frames\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The number of frames sent by the network (egress)\n                    regardless
    of whether they are Bc or Be frames for\n                    this PVC end-point.\"\n
    \           ::= { frPVCEndptEntry 14 }\n        frPVCEndptInDEFrames OBJECT-TYPE\n
    \           SYNTAX      Counter32\n            UNITS       \"Frames\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    number of frames received by the network\n                    (ingress) with the
    DE bit set to (1) for this PVC\n                    end-point.\"\n            ::=
    { frPVCEndptEntry 15 }\n        frPVCEndptInExcessFrames OBJECT-TYPE\n            SYNTAX
    \     Counter32\n            UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    number of frames received by the network\n                    (ingress) for this
    PVC end-point which were\n                    treated as excess traffic.  Frames
    which are sent\n                    to the network with DE set to zero are treated
    as\n                    excess when more than Bc bits are submitted to the\n                    network
    during the Committed Information Rate\n                    Measurement Interval
    (Tc).  Excess traffic may or\n                    may not be discarded at the
    ingress if more than\n                    Bc + Be bits are submitted to the network
    during\n                    Tc.  Traffic discarded at the ingress is not\n                    recorded
    in frPVCEndptInExcessFrames.  Frames\n                    which are sent to the
    network with DE set to one\n                    are also treated as excess traffic.\"\n
    \           ::= { frPVCEndptEntry 16 }\n        frPVCEndptOutExcessFrames OBJECT-TYPE\n
    \           SYNTAX      Counter32\n            UNITS       \"Frames\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    number of frames sent by the network (egress)\n                    for this PVC
    end-point which were treated as\n                    excess traffic.  (The DE
    bit may be set to one.)\"\n            ::= { frPVCEndptEntry 17 }\n        frPVCEndptInDiscards
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Frames\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The number of frames received by the network\n                    (ingress)
    that were discarded due to traffic\n                    enforcement for this PVC
    end-point.  Congestion\n                    discards are not counted in this object.\"\n
    \           ::= { frPVCEndptEntry 18 }\n        frPVCEndptInOctets OBJECT-TYPE\n
    \           SYNTAX      Counter32\n            UNITS       \"Octets\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    number of octets received by the network\n                    (ingress) for this
    PVC end-point.  This counter\n                    should only count octets from
    the beginning of the\n                    frame relay header field to the end
    of user data.\n                    If the network supporting frame relay can not\n
    \                   count octets, then this count should be an\n                    approximation.\"\n
    \           ::= { frPVCEndptEntry 19 }\n        frPVCEndptOutOctets OBJECT-TYPE\n
    \           SYNTAX      Counter32\n            UNITS       \"Octets\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    number of octets sent by the network (egress)\n                    for this PVC
    end-point.  This counter should only\n                    count octets from the
    beginning of the frame relay\n                    header field to the end of user
    data.  If the\n                    network supporting frame relay can not count\n
    \                   octets, then this count should be an\n                    approximation.\"\n
    \           ::= { frPVCEndptEntry 20 }\n        frPVCEndptInDiscardsDESet OBJECT-TYPE\n
    \           SYNTAX      Counter32\n            UNITS       \"Frames\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    number of frames received by the network\n                    (ingress) that were
    discarded with the DE bit set\n                    due to traffic enforcement
    for this PVC end-point.\n                    Congestion discards are not counted
    in this\n                    object.\"\n            ::= { frPVCEndptEntry 21 }\n
    \       frPVCEndptInFramesFECNSet OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    received by the network\n                    (ingress) that have the FECN bit
    set for this PVC\n                    end-point.\"\n            ::= { frPVCEndptEntry
    22 }\n        frPVCEndptOutFramesFECNSet OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    sent by the network (egress)\n                    that have the FECN bit set for
    this PVC end-\n                    point.\"\n            ::= { frPVCEndptEntry
    23 }\n        frPVCEndptInFramesBECNSet OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    received by the network\n                    (ingress) that have the BECN bit
    set for this PVC\n                    end-point.\"\n            ::= { frPVCEndptEntry
    24 }\n        frPVCEndptOutFramesBECNSet OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    sent by the network (egress)\n                    that have the BECN bit set for
    this PVC end-\n                    point.\"\n            ::= { frPVCEndptEntry
    25 }\n        frPVCEndptInCongDiscards OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    received by the network\n                    (ingress) that were discarded due
    to input buffer\n                    congestion, rather than traffic enforcement,
    for\n                    this PVC end-point.\"\n            ::= { frPVCEndptEntry
    26 }\n        frPVCEndptInDECongDiscards OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    counted by\n                    frPVCEndptInCongDiscards with the DE bit set to\n
    \                   (1).\"\n            ::= { frPVCEndptEntry 27 }\n        frPVCEndptOutCongDiscards
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Frames\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The number of frames sent by the network (egress)\n                    that
    were discarded due to output buffer\n                    congestion for this PVC
    end-point.\"\n            ::= { frPVCEndptEntry 28 }\n        frPVCEndptOutDECongDiscards
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Frames\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The number of frames counted by\n                    frPVCEndptOutCongDiscards
    with the DE bit set to\n                    (1).\"\n            ::= { frPVCEndptEntry
    29 }\n        frPVCEndptOutDEFrames OBJECT-TYPE\n            SYNTAX      Counter32\n
    \           UNITS       \"Frames\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The number of frames
    sent by the network (egress)\n                    with the DE bit set to (1) for
    this PVC end-\n                    point.\"\n            ::= { frPVCEndptEntry
    30 }\n        frPVCEndptAtmIwfConnIndex OBJECT-TYPE\n            SYNTAX      Integer32
    \ (0..2147483647)\n            MAX-ACCESS  read-only\n            STATUS      current\n
    \           DESCRIPTION\n                    \"This object contains the index
    value of the\n                    FR/ATM cross-connect table entry used to link
    the\n                    frame relay PVC with an ATM PVC.\n                    Each
    row of the frPVCEndptTable that is not\n                    cross-connected with
    an ATM PVC must return the\n                    value zero when this object is
    read.\n                    The value of this object is initialized by the\n                    agent
    after the associated entries in the\n                    frAtmIwfConnectionTable
    have been created.\n                    The value of this object is reset to zero\n
    \                   following destruction of the associated entry in\n                    the
    frAtmIwfConnectionTable\"\n            ::= { frPVCEndptEntry 31 }\n        --\n
    \       -- Frame Relay PVC Connections\n        --\n        frPVCConnectIndexValue
    OBJECT-TYPE\n            SYNTAX      INTEGER (0..2147483647)\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"This
    object returns a hint to be used for\n                    frPVCConnectIndex when
    creating entries in the\n                    frPVCConnectTable.\n                    The
    value 0 indicates that no unassigned entries\n                    are available.\n
    \                   To obtain the frPVCConnectIndex value for a new\n                    entry,
    the manager issues a management protocol\n                    retrieval operation
    to obtain the current value of\n                    this object.  After each retrieval,
    the agent must\n                    modify the value to the next unassigned index
    to\n                    prevent assignment of the same value to multiple\n                    management
    systems.\n                    A management system should repeat the read to\n
    \                   obtain a new value should an attempt to create the\n                    new
    row using the previously returned hint fail.\"\n            ::= { frnetservObjects
    4 }\n        frPVCConnectTable OBJECT-TYPE\n            SYNTAX      SEQUENCE OF
    FrPVCConnectEntry\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The Frame Relay
    PVC Connect Table is used to\n                    model the bi-directional PVC
    segment flows\n                    including:  point-to-point PVCs, point-to-\n
    \                   multipoint PVCs, and multipoint-to-multipoint\n                    PVCs.\n
    \                   This table has read-create access and is used to\n                    associate
    PVC end-points together as belonging to\n                    one connection.  The
    frPVCConnectIndex is used to\n                    associate all the bi-directional
    flows.  Not all\n                    implementations will support the capability
    of\n                    creating/modifying/deleting PVCs using SNMP as a\n                    feature
    of frame relay CNM service.\n                    Once the entries in the frPVCEndptTable
    are\n                    created, the following step are used to associate\n                    the
    PVC end-points as belonging to one PVC\n                    connection:\n                    1)
    \ Obtain a unique frPVCConnectIndex\n                        using the frPVCConnectIndexValue
    object.\n                    2)  Connect the PVC segment endpoints together\n
    \                       with the applicable frPVCConnectIndex value\n                        obtained
    via  frPVCConnectIndexValue.  The\n                        entries in this table
    are created by using\n                        the frPVCConnectRowStatus object.\n
    \                   3)  The agent will provide the value of the\n                        corresponding
    instances of\n                        frPVCEndptConnectIdentifier with the\n                        frPVCConnectIndex
    value.\n                    4)  Set frPVCConnectAdminStatus to `active(1)' in\n
    \                       all rows for this PVC segment to turn the\n                        PVC
    on.\n                    For example, the Frame Relay PVC Connection Group\n                    models
    a bi-directional, point-to-point PVC\n                    segment as one entry
    in this table.\n                    Frame Relay                           Frame
    Relay\n                     Network                                 Network\n
    \                    Low Port                               High Port\n                             __________________________________\n
    \                           |                                  |\n                       _____|
    >> from low to high PVC flow  >> |_____\n                            | << from
    high to low PVC flow  << |\n                            |__________________________________|\n
    \                   The terms low and high are chosen to represent\n                    numerical
    ordering of a PVC segment's endpoints\n                    for representation
    in this table.  That is, the\n                    endpoint with the lower value
    of ifIndex is termed\n                    'low', while the opposite endpoint of
    the segment\n                    is termed 'high'.  This terminology is to provide\n
    \                   directional information; for example the\n                    frPVCConnectL2hOperStatus
    and\n                    frPVCConnectH2lOperStatus as illustrated above.\n                    If
    the Frame Relay Connection table is used to\n                    model a unidirectional
    PVC, then one direction\n                    (either from low to high or from
    high to low) has\n                     its Operational Status equal to down.\n
    \                    A PVC segment is a portion of a PVC that traverses\n                    one
    Frame Relay Network, and a PVC segment is\n                    identified by its
    two end-points (UNI/NNI logical\n                    port index value and DLCI
    index value) through one\n                    Frame Relay Network.\"\n            ::=
    { frnetservObjects 5 }\n        frPVCConnectEntry OBJECT-TYPE\n            SYNTAX
    \     FrPVCConnectEntry\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"An entry in the
    Frame Relay PVC Connect table.\n                    This entry is used to model
    a PVC segment in two\n                    directions.\"\n            INDEX { frPVCConnectIndex,\n
    \                   frPVCConnectLowIfIndex,\n                    frPVCConnectLowDLCIIndex,\n
    \                   frPVCConnectHighIfIndex,\n                    frPVCConnectHighDLCIIndex
    }\n            ::= { frPVCConnectTable 1 }\n        FrPVCConnectEntry ::=\n            SEQUENCE
    {\n                frPVCConnectIndex            Integer32,\n                frPVCConnectLowIfIndex
    \      InterfaceIndex,\n                frPVCConnectLowDLCIIndex     Integer32,\n
    \               frPVCConnectHighIfIndex      InterfaceIndex,\n                frPVCConnectHighDLCIIndex
    \   Integer32,\n                frPVCConnectAdminStatus      INTEGER,\n                frPVCConnectL2hOperStatus
    \   INTEGER,\n                frPVCConnectH2lOperStatus    INTEGER,\n                frPVCConnectL2hLastChange
    \   TimeStamp,\n                frPVCConnectH2lLastChange    TimeStamp,\n                frPVCConnectRowStatus
    \       RowStatus,\n                frPVCConnectUserName         SnmpAdminString,\n
    \               frPVCConnectProviderName     SnmpAdminString\n        }\n          frPVCConnectIndex
    OBJECT-TYPE\n              SYNTAX      Integer32 (0..2147483647)\n              MAX-ACCESS
    \ not-accessible\n              STATUS      current\n              DESCRIPTION\n
    \                     \"The value of this object is equal to the\n                      frPVCConnectIndexValue
    obtained to uniquely\n                      identify this PVC segment connection.\"\n
    \             ::= { frPVCConnectEntry 1 }\n        frPVCConnectLowIfIndex OBJECT-TYPE\n
    \           SYNTAX      InterfaceIndex\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to IF-MIB\n                    ifIndex value of
    the UNI/NNI logical port for this\n                    PVC segment.  The term
    low implies that this PVC\n                    segment end-point has the numerically
    lower\n                    ifIndex value than the connected/associated PVC\n                    segment
    end-point.\n                    RFC 1604 permitted a zero value for this object
    to\n                    identify termination at a non-frame relay\n                    interface.
    \ However, this cross-connect table is\n                    limited to frame relay
    connections.  See the frame\n                    relay/ATM IWF MIB [28] for the
    cross-connect table\n                    used for those types of connections.\"\n
    \           ::= { frPVCConnectEntry 2 }\n        frPVCConnectLowDLCIIndex OBJECT-TYPE\n
    \           SYNTAX      Integer32 (16..4194303)\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the DLCI\n                    value for this
    end-point of the PVC segment.\"\n            REFERENCE   \"Q.922 [25]\"\n            ::=
    { frPVCConnectEntry 3 }\n        frPVCConnectHighIfIndex OBJECT-TYPE\n            SYNTAX
    \     InterfaceIndex\n            MAX-ACCESS  not-accessible\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object is equal to IF-MIB\n                    ifIndex value for the UNI/NNI logical
    port for\n                    this PVC segment.  The term high implies that this\n
    \                   PVC segment end-point has the numerically higher\n                    ifIndex
    value than the connected/associated PVC\n                    segment end-point.\"\n
    \           ::= { frPVCConnectEntry 4 }\n        frPVCConnectHighDLCIIndex OBJECT-TYPE\n
    \           SYNTAX      Integer32 (16..4194303)\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the egress\n                    DLCI value for
    this end-point of the PVC segment.\"\n            REFERENCE   \"Q.922 [25]\"\n
    \           ::= { frPVCConnectEntry 5 }\n        frPVCConnectAdminStatus OBJECT-TYPE\n
    \           SYNTAX      INTEGER {\n                        active(1),\n                        inactive(2),\n
    \                       testing(3)\n                        }\n            MAX-ACCESS
    \ read-create\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object identifies the desired\n                    administrative
    status of this bi-directional PVC\n                    segment.  The active(1)
    state means the PVC\n                    segment is currently operational; the
    inactive(2)\n                    state means the PVC segment is currently not\n
    \                   operational; the testing(3) state means the PVC\n                    segment
    is currently undergoing a test.  This\n                    state is set by an
    administrative entity.  This\n                    value affects the PVC status
    indicated across the\n                    ingress NNI/UNI of both end-points of
    the bi-\n                    directional PVC segment.  When a PVC segment\n                    connection
    is created using this table, this\n                    object is initially set
    to `inactive(2)'.  After\n                    the frPVCConnectRowStatus object
    is set to\n                    `active(1)' (and the corresponding/associated\n
    \                   entries in the frPVCEndptTable have their\n                    frPVCEndptRowStatus
    object set to `active(1)'),\n                    the frPVCConnectAdminStatus object
    may be set to\n                    `active(1)' to turn on the PVC segment\n                    connection.\"\n
    \           ::= { frPVCConnectEntry 6 }\n        frPVCConnectL2hOperStatus OBJECT-TYPE\n
    \           SYNTAX      INTEGER {\n                        active(1),\n                        inactive(2),\n
    \                       testing(3),\n                        unknown(4)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the current\n                    operational
    status of the PVC segment connection\n                    in one direction; (i.e.,
    in the low to high\n                    direction). This value affects the PVC
    status\n                    indicated across the ingress NNI/UNI (low side) of\n
    \                   the PVC segment.\n                    The values mean:\n                    active(1)
    \  - PVC is currently operational\n                    inactive(2) - PVC is currently
    not operational.\n                                  This may be because of an
    underlying\n                                  LMI or DS1 failure.\n                    testing(3)
    \ - PVC is currently undergoing a test.\n                                  This
    may be because of an underlying\n                                  frLport or
    DS1 undergoing a test.\n                    unknown(4)  - the status of the PVC
    currently can\n                                  not be determined.\"\n            ::=
    { frPVCConnectEntry 7 }\n        frPVCConnectH2lOperStatus OBJECT-TYPE\n            SYNTAX
    \     INTEGER {\n                        active(1),\n                        inactive(2),\n
    \                       testing(3),\n                        unknown(4)\n                        }\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object identifies the current\n                    operational
    status of the PVC segment connection\n                    in one direction; (i.e.,
    in the high to low\n                    direction)..  This value affects the PVC
    status\n                    indicated across the ingress NNI/UNI (high side)\n
    \                   of the PVC segment.\n                    The values mean:\n
    \                   active(1)   - PVC is currently operational\n                    inactive(2)
    - PVC is currently not operational.\n                                  This may
    be because of an underlying\n                                  LMI or DS1 failure.\n
    \                   testing(3)  - PVC is currently undergoing a test.\n                                  This
    may be because of an underlying\n                                  frLport or
    DS1 undergoing a test.\n                    unknown(4)  - the status of the PVC
    currently can\n                                  not be determined.\"\n            ::=
    { frPVCConnectEntry 8 }\n        frPVCConnectL2hLastChange OBJECT-TYPE\n            SYNTAX
    \     TimeStamp\n            MAX-ACCESS  read-only\n            STATUS      current\n
    \           DESCRIPTION\n                    \"The value of the Interface MIB's
    sysUpTime object\n                    at the time this PVC segment entered its
    current\n                    operational state in the low to high direction.\n
    \                   If the current state was entered prior to the last\n                    re-initialization
    of the FRS agent, then this\n                    object contains a zero value.\"\n
    \           ::= { frPVCConnectEntry 9 }\n        frPVCConnectH2lLastChange OBJECT-TYPE\n
    \           SYNTAX      TimeStamp\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of the
    Interface MIB's sysUpTime object\n                    at the time this PVC segment
    entered its current\n                    operational state in the high to low
    direction.\n                    If the current state was entered prior to the
    last\n                    re-initialization of the FRS agent, then this\n                    object
    contains a zero value.\"\n            ::= { frPVCConnectEntry 10 }\n        frPVCConnectRowStatus
    OBJECT-TYPE\n            SYNTAX      RowStatus\n            MAX-ACCESS  read-create\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    status of this entry in the\n                    frPVCConnectTable.  This variable
    is used to\n                    create new connections for the PVC end-points
    and\n                    to change existing connections of the PVC end-\n                    points.
    \ This object must be initially set to\n                    `createAndWait(5)'.
    In this state, the agent\n                    checks the parameters in the associated
    entries in\n                    the frPVCEndptTable to verify that the PVC end-\n
    \                   points can be connected (i.e., the In parameters\n                    for
    one PVC end-point are equal to the Out\n                    parameters for the
    other PVC end-point).  This\n                    object can not be set to `active(1)'
    unless the\n                    following columnar object exists in this row:\n
    \                   frPVCConnectAdminStatus.  The agent also supplies\n                    the
    associated value of frPVCConnectIndex for the\n                    frPVCEndptConnectIdentifier
    instances.  To turn on\n                    a PVC segment connection, the\n                    frPVCConnectAdminStatus
    is set to `active(1)'.\"\n            ::= { frPVCConnectEntry 11 }\n        frPVCConnectUserName
    OBJECT-TYPE\n            SYNTAX      SnmpAdminString\n            MAX-ACCESS  read-create\n
    \           STATUS      current\n            DESCRIPTION\n                    \"This
    is a service user assigned textual\n                    representation of a PVC.\"\n
    \           ::= { frPVCConnectEntry 12 }\n        frPVCConnectProviderName OBJECT-TYPE\n
    \           SYNTAX      SnmpAdminString\n            MAX-ACCESS  read-create\n
    \           STATUS      current\n            DESCRIPTION\n                    \"This
    is a system supplied textual representation\n                    of PVC.  It is
    assigned by the service provider.\"\n            ::= { frPVCConnectEntry 13 }\n
    \       --\n        -- The Frame Relay Accounting\n        --\n        frAccountPVCTable
    OBJECT-TYPE\n            SYNTAX      SEQUENCE OF FrAccountPVCEntry\n            MAX-ACCESS
    \ not-accessible\n            STATUS      current\n            DESCRIPTION\n                    \"The
    Frame Relay Accounting PVC table.  This table\n                    is used to
    perform accounting on a PVC segment\n                    end-point basis.\"\n
    \           ::= { frnetservObjects 6 }\n        frAccountPVCEntry OBJECT-TYPE\n
    \           SYNTAX      FrAccountPVCEntry\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"An
    entry in the Frame Relay Accounting PVC\n                    table.\"\n            INDEX
    \  {   ifIndex,\n                        frAccountPVCDLCIIndex }\n            ::=
    { frAccountPVCTable 1 }\n        FrAccountPVCEntry ::=\n            SEQUENCE {\n
    \               frAccountPVCDLCIIndex            Integer32,\n                frAccountPVCSegmentSize
    \         Integer32,\n                frAccountPVCInSegments           Counter32,\n
    \               frAccountPVCOutSegments          Counter32\n            }\n        frAccountPVCDLCIIndex
    OBJECT-TYPE\n            SYNTAX      Integer32 (16..4194303)\n            MAX-ACCESS
    \ not-accessible\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the DLCI\n                    value for this
    PVC segment end-point.\"\n            REFERENCE   \"Q.922 [25]\"\n            ::=
    { frAccountPVCEntry 1 }\n        frAccountPVCSegmentSize OBJECT-TYPE\n            SYNTAX
    \     Integer32\n            UNITS       \"Octets\"\n            MAX-ACCESS  read-only\n
    \           STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the Segment\n                    Size for this
    PVC segment end-point.\"\n            ::= { frAccountPVCEntry 2 }\n        frAccountPVCInSegments
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Segments\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object is equal to the number\n                    of
    segments received by this PVC segment end-\n                    point.\"\n            ::=
    { frAccountPVCEntry 3 }\n        frAccountPVCOutSegments OBJECT-TYPE\n            SYNTAX
    \     Counter32\n            UNITS       \"Segments\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the number\n                    of segments sent
    by this PVC segment end-point.\"\n            ::= { frAccountPVCEntry 4 }\n        --\n
    \       -- Accounting on a Frame Relay Logical Port\n        --\n        frAccountLportTable
    OBJECT-TYPE\n            SYNTAX      SEQUENCE OF FrAccountLportEntry\n            MAX-ACCESS
    \ not-accessible\n            STATUS      current\n            DESCRIPTION\n                    \"The
    Frame Relay Accounting Logical Port table.\n                    This table is
    used to perform accounting on a\n                    UNI/NNI Logical Port basis.\"\n
    \           ::= { frnetservObjects 7 }\n        frAccountLportEntry OBJECT-TYPE\n
    \           SYNTAX      FrAccountLportEntry\n            MAX-ACCESS  not-accessible\n
    \           STATUS      current\n            DESCRIPTION\n                    \"An
    entry in the Frame Relay Accounting Logical\n                    Port table.\"\n
    \           INDEX   {   ifIndex }\n            ::= { frAccountLportTable 1 }\n
    \       FrAccountLportEntry ::=\n            SEQUENCE {\n                frAccountLportSegmentSize\n
    \                   Integer32,\n                frAccountLportInSegments\n                    Counter32,\n
    \               frAccountLportOutSegments\n                    Counter32\n            }\n
    \       frAccountLportSegmentSize OBJECT-TYPE\n            SYNTAX      Integer32\n
    \           UNITS       \"Octets\"\n            MAX-ACCESS  read-only\n            STATUS
    \     current\n            DESCRIPTION\n                    \"The value of this
    object is equal to the Segment\n                    Size for this UNI/NNI logical
    port.\"\n            ::= { frAccountLportEntry 1 }\n        frAccountLportInSegments
    OBJECT-TYPE\n            SYNTAX      Counter32\n            UNITS       \"Segments\"\n
    \           MAX-ACCESS  read-only\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The value of this object is equal to the number\n                    of
    segments received by this UNI/NNI logical\n                    port.\"\n            ::=
    { frAccountLportEntry 2 }\n        frAccountLportOutSegments OBJECT-TYPE\n            SYNTAX
    \     Counter32\n            UNITS       \"Segments\"\n            MAX-ACCESS
    \ read-only\n            STATUS      current\n            DESCRIPTION\n                    \"The
    value of this object is equal to the number\n                    of segments sent
    by this UNI/NNI logical port.\"\n            ::= { frAccountLportEntry 3 }\n          --\n
    \         -- Frame Relay Network Service Notifications\n          --\n        frPVCConnectStatusChange
    \ NOTIFICATION-TYPE\n            OBJECTS { frPVCConnectIndex,\n                      frPVCConnectLowIfIndex,\n
    \                     frPVCConnectLowDLCIIndex,\n                      frPVCConnectHighIfIndex,\n
    \                     frPVCConnectHighDLCIIndex,\n                      frPVCConnectL2hOperStatus,\n
    \                     frPVCConnectH2lOperStatus,\n                      frPVCEndptRcvdSigStatus
    }\n            STATUS  deprecated\n            DESCRIPTION\n                    \"Refer
    to the description of the\n                    frPVCConnectStatusNotif notification
    that has\n                    replaced this notification.  The notification is\n
    \                   deprecated due to the incorrect inclusion of index\n                    values
    and to take advantage of the trap prefix\n                    for automatic conversion
    from SMIv2 to SMIv1 by\n                    making the one but last sub-ID a zero
    (i.e. the\n                    so-called trap prefix).\"\n            ::= { frnetservTraps
    1 }\n        frPVCConnectStatusNotif  NOTIFICATION-TYPE\n            OBJECTS {
    frPVCConnectL2hOperStatus,\n                      frPVCConnectH2lOperStatus,\n
    \                     frPVCEndptRcvdSigStatus }\n            STATUS  current\n
    \           DESCRIPTION\n                    \"This notification indicates that
    the indicated\n                    PVC has changed state.\n                    This
    notification is not sent if an FR-UNI changes\n                    state; a linkDown
    or linkUp notification should be\n                    sent instead.  The first
    instance of\n                    frPVCEndptRcvdSigStatus is for the endpoint with\n
    \                   LowIfIndex, LowDLCIIndex.  The second instance of\n                    frPVCEndptRcvdSigStatus
    is for the endpoint with\n                    HighIfIndex, HighDLCIIndex\"\n            ::=
    { frnetservTrapsPrefix 2 }\n        -- Conformance Information\n        frnetservConformance
    \ OBJECT IDENTIFIER\n            ::= { frnetservMIB 3 }\n        frnetservGroups
    \      OBJECT IDENTIFIER\n            ::= { frnetservConformance 1 }\n        frnetservCompliances
    \ OBJECT IDENTIFIER\n            ::= { frnetservConformance 2 }\n        --\n
    \       --  Service (Read-only) Modules\n        --\n        frnetservCompliance2
    MODULE-COMPLIANCE\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The compliance statement for SNMP entities which\n                    have
    Frame Relay Network Service Interfaces.\n                    The distinction between
    'service' and 'switch' is\n                    that a 'switch' is configured via
    this MIB.\n                    Hence, the various read/write objects have write\n
    \                   capability.  A 'service' represents a passive\n                    monitor-only
    customer network management\n                    interface.  The various read/write
    objects are\n                    restricted to read-only capability.\"\n            MODULE
    -- this module\n                MANDATORY-GROUPS { frnetservLportGroup2,\n                                   frnetservMgtVCSigGroup,\n
    \                                  frnetservPVCEndptGroup,\n                                   frnetservPVCEndptGroup2,\n
    \                                  frnetservPVCConnectGroup,\n                                   frnetservPVCConnectNamesGroup,\n
    \                                  frnetservPVCNotifGroup2 }\n                GROUP
    \      frnetservAccountPVCGroup\n                DESCRIPTION\n                    \"This
    group is optional for frame relay\n                    interfaces.  It is mandatory
    if and only if\n                    accounting is performed on a PVC basis this
    frame\n                    relay interface.\"\n                GROUP       frnetservAccountLportGroup\n
    \               DESCRIPTION\n                    \"This group is optional for
    frame relay\n                    interfaces.  It is mandatory if and only if\n
    \                   accounting is performed on a logical port basis\n                    this
    frame relay interface.\"\n                OBJECT      frPVCEndptInMaxFrameSize\n
    \               MIN-ACCESS  read-only\n                DESCRIPTION\n                      \"Write
    access is not required.\"\n                OBJECT      frPVCEndptInBc\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptInBe\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptInCIR\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptOutMaxFrameSize\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptOutBc\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptOutBe\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptOutCIR\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCEndptRowStatus\n             --
    subset of RowStatus\n                SYNTAX      INTEGER { active(1) }\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                    \"Write access is
    not required, and only one of the\n                    six enumerated values for
    the RowStatus textual\n                    convention need be supported, specifically:\n
    \                   active(1).\"\n                OBJECT      frPVCConnectAdminStatus\n
    \               MIN-ACCESS  read-only\n                DESCRIPTION\n                     \"Write
    access is not required.\"\n                OBJECT      frPVCConnectRowStatus\n
    \            -- subset of RowStatus\n                SYNTAX      INTEGER { active(1)
    }\n                MIN-ACCESS  read-only\n                DESCRIPTION\n                    \"Write
    access is not required, and only one of the\n                    six enumerated
    values for the RowStatus textual\n                    convention need be supported,
    specifically:\n                    active(1).\"\n                OBJECT      frLportFragControl\n
    \               MIN-ACCESS  read-only\n                DESCRIPTION\n                      \"Write
    access is not required.\"\n                OBJECT      frLportFragSize\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCConnectUserName\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n                OBJECT      frPVCConnectProviderName\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                      \"Write access
    is not required.\"\n              ::= { frnetservCompliances 2 }\n        --\n
    \       -- Switch (Configuration) Compliance\n        --\n        frnetSwitchCompliance
    MODULE-COMPLIANCE\n            STATUS      current\n            DESCRIPTION\n
    \                   \"The compliance statement for SNMP entities which\n                    have
    Frame Relay Network Switch objects.\n                    The distinction between
    'service' and 'switch' is\n                    that a 'switch' is configured via
    this MIB.\n                    Hence, the various read/write objects have write\n
    \                   capability.  A 'service' represents a passive\n                    monitor-only
    customer network management\n                    interface.  The various read/write
    objects are\n                    restricted to read-only capability.\"\n            MODULE
    -- this module\n                MANDATORY-GROUPS { frnetservLportGroup2,\n                                   frnetservLportAdminGroup,\n
    \                                  frnetservMgtVCSigGroup,\n                                   frnetservMgtVCSigAdminGroup,\n
    \                                  frnetservPVCEndptGroup,\n                                   frnetservPVCEndptGroup2,\n
    \                                  frnetservPVCConnectGroup,\n                                   frnetservPVCConnectNamesGroup,\n
    \                                  frnetservPVCNotifGroup2 }\n                GROUP
    \      frnetservAccountPVCGroup\n                DESCRIPTION\n                    \"This
    group is optional for frame relay\n                    interfaces.  It is mandatory
    if and only if\n                    accounting is performed on a PVC basis this
    frame\n                    relay interface.\"\n                GROUP       frnetservAccountLportGroup\n
    \               DESCRIPTION\n                    \"This group is optional for
    frame relay\n                    interfaces.  It is mandatory if and only if\n
    \                   accounting is performed on a logical port basis\n                    this
    frame relay interface.\"\n              ::= { frnetservCompliances 3 }\n         --\n
    \        -- Historical RFC 1604 Compliance Modules\n         --\n        frnetservCompliance
    MODULE-COMPLIANCE\n            STATUS  deprecated\n            DESCRIPTION\n                    \"The
    compliance statement for SNMP entities which\n                    have Frame Relay
    Network Service Interfaces.\n                    This compliance statement has
    been deprecated in\n                    favor of frnetservCompliance2.  The new
    compliance\n                    module expands the mandatory groups to include\n
    \                   notification and other new objects.\"\n            MODULE
    -- this module\n                MANDATORY-GROUPS { frnetservLportGroup,\n                                   frnetservMgtVCSigGroup,\n
    \                                  frnetservPVCEndptGroup,\n                                   frnetservPVCConnectGroup
    }\n                GROUP       frnetservAccountPVCGroup\n                DESCRIPTION\n
    \                   \"This group is optional for Frame Relay\n                    interfaces.
    \ It is mandatory if and only if\n                    accounting is performed
    on a PVC basis this Frame\n                    Relay interface.\"\n                GROUP
    \      frnetservAccountLportGroup\n                DESCRIPTION\n                    \"This
    group is optional for Frame Relay\n                    interfaces.  It is mandatory
    if and only if\n                    accounting is performed on a logical port
    basis\n                    this Frame Relay interface.\"\n                OBJECT
    \     frPVCEndptInMaxFrameSize\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptInBc\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptInBe\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptInCIR\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptOutMaxFrameSize\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptOutBc\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptOutBe\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptOutCIR\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCEndptRowStatus\n             -- subset of RowStatus\n                SYNTAX
    \     INTEGER { active(1) }\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required, and only one of the\n                    six
    enumerated values for the RowStatus textual\n                    convention need
    be supported, specifically:\n                    active(1).\"\n                OBJECT
    \     frPVCConnectAdminStatus\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required.\"\n                OBJECT
    \     frPVCConnectRowStatus\n             -- subset of RowStatus\n                SYNTAX
    \     INTEGER { active(1) }\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                   \"Write access is not required, and only one of the\n                    six
    enumerated values for the RowStatus textual\n                    convention need
    be supported, specifically:\n                    active(1).\"\n            ::=
    { frnetservCompliances 1 }\n         --\n         -- Frame Relay Service MIB Object
    Groups\n         --\n         frnetservLportGroup  OBJECT-GROUP\n             OBJECTS
    { frLportNumPlan, frLportContact, frLportLocation,\n                       frLportType,\n
    \                      frLportAddrDLCILen, frLportVCSigProtocol,\n                       frLportVCSigPointer
    }\n             STATUS  deprecated\n             DESCRIPTION\n                     \"A
    collection of objects providing information\n                     applicable to
    a Frame Relay Logical Port.  This\n                     group has been deprecated
    to eliminate reference\n                     to the object frLportVCSigPointer.\n
    \                    Use the new group frnetservLportGroup2 as a\n                     replacement
    for this group.\"\n             ::= { frnetservGroups 1 }\n        frnetservMgtVCSigGroup
    \ OBJECT-GROUP\n            OBJECTS { frMgtVCSigProced,\n                      frMgtVCSigUserN391,\n
    \                     frMgtVCSigUserN392,\n                      frMgtVCSigUserN393,\n
    \                     frMgtVCSigUserT391,\n                      frMgtVCSigNetN392,\n
    \                     frMgtVCSigNetN393,\n                      frMgtVCSigNetT392,\n
    \                     frMgtVCSigNetnN4,\n                      frMgtVCSigNetnT3,\n
    \                     frMgtVCSigUserLinkRelErrors,\n                      frMgtVCSigUserProtErrors,\n
    \                     frMgtVCSigUserChanInactive,\n                      frMgtVCSigNetLinkRelErrors,\n
    \                     frMgtVCSigNetProtErrors,\n                      frMgtVCSigNetChanInactive
    }\n            STATUS  current\n            DESCRIPTION\n                    \"A
    collection of objects providing information\n                    applicable to
    the Local In-Channel Signaling\n                    Procedures used for a UNI/NNI
    logical port.\"\n            ::= { frnetservGroups 2 }\n        frnetservPVCEndptGroup
    \ OBJECT-GROUP\n            OBJECTS { frPVCConnectIndexValue,\n                      frPVCEndptInMaxFrameSize,\n
    \                     frPVCEndptInBc,\n                      frPVCEndptInBe,\n
    \                     frPVCEndptInCIR,\n                      frPVCEndptOutMaxFrameSize,\n
    \                     frPVCEndptOutBc,\n                      frPVCEndptOutBe,\n
    \                     frPVCEndptOutCIR,\n                      frPVCEndptConnectIdentifier,\n
    \                     frPVCEndptRowStatus,\n                      frPVCEndptRcvdSigStatus,\n
    \                     frPVCEndptInFrames,\n                      frPVCEndptOutFrames,\n
    \                     frPVCEndptInDEFrames,\n                      frPVCEndptInExcessFrames,\n
    \                     frPVCEndptOutExcessFrames,\n                      frPVCEndptInDiscards,\n
    \                     frPVCEndptInOctets,\n                      frPVCEndptOutOctets
    }\n            STATUS  current\n            DESCRIPTION\n                    \"A
    collection of objects providing information\n                    applicable to
    a Frame Relay PVC end-point.\"\n            ::= { frnetservGroups 3 }\n        frnetservPVCConnectGroup
    \ OBJECT-GROUP\n            OBJECTS { frPVCConnectAdminStatus,\n                      frPVCConnectL2hOperStatus,\n
    \                     frPVCConnectH2lOperStatus,\n                      frPVCConnectL2hLastChange,\n
    \                     frPVCConnectH2lLastChange,\n                      frPVCConnectRowStatus
    }\n            STATUS  current\n            DESCRIPTION\n                    \"A
    collection of objects providing information\n                    applicable to
    a Frame Relay PVC connection.\"\n            ::= { frnetservGroups 4 }\n        frnetservAccountPVCGroup
    \ OBJECT-GROUP\n            OBJECTS { frAccountPVCSegmentSize,\n                      frAccountPVCInSegments,\n
    \                     frAccountPVCOutSegments }\n            STATUS  current\n
    \           DESCRIPTION\n                    \"A collection of objects providing
    accounting\n                    information application to a Frame Relay PVC end-\n
    \                   point.\"\n            ::= { frnetservGroups 5 }\n        frnetservAccountLportGroup
    \ OBJECT-GROUP\n            OBJECTS { frAccountLportSegmentSize,\n                      frAccountLportInSegments,\n
    \                     frAccountLportOutSegments }\n            STATUS  current\n
    \           DESCRIPTION\n                    \"A collection of objects providing
    accounting\n                    information application to a Frame Relay logical\n
    \                   port.\"\n            ::= { frnetservGroups 6 }\n        frnetservLportGroup2
    \ OBJECT-GROUP\n            OBJECTS { frLportNumPlan,\n                      frLportContact,\n
    \                     frLportLocation,\n                      frLportType,\n                      frLportAddrDLCILen,\n
    \                     frLportVCSigProtocol,\n                      frLportFragControl,\n
    \                     frLportFragSize }\n            STATUS  current\n            DESCRIPTION\n
    \                   \"A collection of objects providing information\n                    applicable
    to a Frame Relay Logical Port.\n                    This new version of the Logical
    Port Group\n                    eliminates the frLportVCSigPointer and adds\n
    \                   support for fragmentation.\"\n            ::= { frnetservGroups
    7 }\n        frnetservPVCEndptGroup2  OBJECT-GROUP\n              OBJECTS { frPVCEndptInDiscardsDESet,\n
    \                       frPVCEndptInFramesFECNSet,\n                        frPVCEndptOutFramesFECNSet,\n
    \                       frPVCEndptInFramesBECNSet,\n                        frPVCEndptOutFramesBECNSet,\n
    \                       frPVCEndptInCongDiscards,\n                        frPVCEndptInDECongDiscards,\n
    \                       frPVCEndptOutCongDiscards,\n                        frPVCEndptOutDECongDiscards,\n
    \                       frPVCEndptOutDEFrames,\n                        frPVCEndptAtmIwfConnIndex
    }\n              STATUS  current\n              DESCRIPTION\n                    \"Additions
    to the PVC end-point group.  These\n                    additions provide new
    frame counters to track\n                    frame loss.  In addition, the new
    FR/ATM IWF MIB\n                    cross-connect index is included.\"\n              ::=
    { frnetservGroups 8 }\n        frnetservPVCConnectNamesGroup  OBJECT-GROUP\n              OBJECTS
    { frPVCConnectUserName,\n                        frPVCConnectProviderName }\n
    \             STATUS  current\n              DESCRIPTION\n                    \"Additions
    to the PVC Connect Group.\"\n              ::= { frnetservGroups 9 }\n        frnetservLportAdminGroup
    OBJECT-GROUP\n              OBJECTS { frLportDLCIIndexValue,\n                        frLportTypeAdmin,\n
    \                       frLportVCSigProtocolAdmin }\n              STATUS  current\n
    \             DESCRIPTION\n                    \"Administrative (R/W) objects
    for creating a\n                    switch logical port.\"\n              ::=
    { frnetservGroups 10 }\n        frnetservMgtVCSigAdminGroup OBJECT-GROUP\n              OBJECTS
    { frMgtVCSigProcedAdmin,\n                        frMgtVCSigUserN391Admin,\n                        frMgtVCSigUserN392Admin,\n
    \                       frMgtVCSigUserN393Admin,\n                        frMgtVCSigUserT391Admin,\n
    \                       frMgtVCSigNetN392Admin,\n                        frMgtVCSigNetN393Admin,\n
    \                       frMgtVCSigNetT392Admin,\n                        frMgtVCSigNetnT3Admin
    }\n              STATUS  current\n              DESCRIPTION\n                    \"A
    collection of objects providing information\n                    applicable to
    the Local In-Channel Signaling\n                    Procedures used for a UNI/NNI
    logical port.\"\n              ::= { frnetservGroups 11 }\n        frnetservPVCNotifGroup
    NOTIFICATION-GROUP\n              NOTIFICATIONS { frPVCConnectStatusChange }\n
    \             STATUS    deprecated\n              DESCRIPTION\n                    \"Deprecated
    notification group.  The\n                    frPVCConnectStatusChange notification
    was flawed\n                    because it included redundant indexes and was
    not\n                    properly encoded for SMIv1 conversion.\"\n            ::=
    { frnetservGroups 12 }\n        frnetservPVCNotifGroup2 NOTIFICATION-GROUP\n              NOTIFICATIONS
    { frPVCConnectStatusNotif }\n              STATUS    current\n              DESCRIPTION\n
    \                   \"A collection of notifications that apply to frame\n                    relay
    PVC Connections \"\n            ::= { frnetservGroups 13 }\n        END\n"
  title: 3.  Object Definitions
- contents:
  - "4.  Acknowledgments\n   This document was produced by the Frame Relay Service
    MIB Working\n   Group.\n   The working group thanks Bert Wijnen, David Perkins,
    and Bob Stewart\n   for their assistance in reviewing the MIB.\n"
  title: 4.  Acknowledgments
- contents:
  - "5.  References\n   [1]  Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture
    for\n        Describing SNMP Management Frameworks\", RFC 2571, April 1999.\n
    \  [2]  Rose, M. and K. McCloghrie, \"Structure and Identification of\n        Management
    Information for TCP/IP-based Internets\", STD 16, RFC\n        1155, May 1990.\n
    \  [3]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\", STD 16,\n        RFC
    1212, March 1991.\n   [4]  Rose, M., \"A Convention for Defining Traps for use
    with the\n        SNMP\", RFC 1215, March 1991.\n   [5]  McCloghrie, K., Perkins,
    D., Schoenwaelder, J., Case, J., Rose,\n        M.  and S. Waldbusser, \"Structure
    of Management Information\n        Version 2 (SMIv2)\", STD 58, RFC 2578, April
    1999.\n   [6]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n
    \       M.  and S. Waldbusser, \"Textual Conventions for SMIv2\", STD 58,\n        RFC
    2579, April 1999.\n   [7]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
    J., Rose,\n        M.  and S. Waldbusser, \"Conformance Statements for SMIv2\",
    STD\n        58, RFC 2580, April 1999.\n   [8]  Case, J., Fedor, M., Schoffstall,
    M. and J. Davin, \"Simple\n        Network Management Protocol\", STD 15, RFC
    1157, May 1990.\n   [9]  Case, J., McCloghrie, K., Rose M., and S. Waldbusser,\n
    \       \"Introduction to Community-based SNMPv2\", RFC 1901, January\n        1996.\n
    \  [10] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Transport\n        Mappings
    for Version 2 of the Simple Network Management Protocol\n        (SNMPv2)\", RFC
    1906, January 1996.\n   [11] Case, J., Harrington D., Presuhn R. and B. Wijnen,
    \"Message\n        Processing and Dispatching for the Simple Network Management\n
    \       Protocol (SNMP)\", RFC 2572, April 1999.\n   [12] Blumenthal, U. and B.
    Wijnen, \"User-based Security Model (USM)\n        for version 3 of the Simple
    Network Management Protocol\n        (SNMPv3)\", RFC 2574, April 1999.\n   [13]
    Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations
    for Version 2 of the Simple Network Management\n        Protocol (SNMPv2)\", RFC
    1905, January 1996.\n   [14] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\",
    RFC\n        2573, April 1999.\n   [15] Wijnen, B., Presuhn, R. and K. McCloghrie,
    \"View-based Access\n        Control Model (VACM) for the Simple Network Management
    Protocol\n        (SNMP)\", RFC 2575, April 1999.\n   [16] Case, J., Mundy, R.,
    Partain, D. and B. Stewart, \"Introduction\n        to Version 3 of the Internet-standard
    Network Management\n        Framework\", RFC 2570, April 1999.\n   [17] ANSI T1.617-1991,
    American National Standard for\n        Telecommunications - Integrated Services
    Digital Network (ISDN)\n        - Digital Subscriber Signaling System No. 1 (DSS1)
    - Signaling\n        Specification for Frame Relay Bearer Service.\n   [18] Brown,
    C. and F. Baker, \"Management Information Base for Frame\n        Relay DTEs\",
    RFC 2115, September 1997.\n   [19] Brown, C. and A. Malis, \"Multi-Protocol Interconnect
    over Frame\n        Relay\", STD 55, RFC 2427, September 1998.\n   [20] Fowler,
    D, \"Definitions of Managed Objects for the DS0 and DS0\n        Bundle Interface
    Types\", RFC 2494, January 1999.\n   [21] Frame Relay Forum, \"Frame Relay Fragmentation
    Implementation\n        Agreement\", FRF.12, December 1997.\n   [22] ITU-T Recommendation
    Q.933,Integrated Services Digital Network\n        (ISDN) Digital Subscriber Signalling
    System No. 1 (DSS 1) -\n        Signalling Specifications for Frame Mode Switched
    and Permanent\n        Virtual Connection Control and Status Monitoring, December
    1995\n   [23] ITU-T Recommendation X.36, Interface Between Data Terminal\n        Equipment
    (DTE) and Data Circuit-Terminating Equipment (DCE) For\n        Public Data Networks
    Providing Frame Relay Data Transmission\n        Service By Dedicated Circuit,
    April 1995\n   [24] Digital Equipment Corporation, et. al., \"Frame Relay\n        Specification
    with Extensions Based on Proposed T1S1 Standards\",\n        Revision 1.0, September
    18, 1990\n   [25] ITU-T Recommendation Q.922, Integrated Services Digital Network\n
    \       (ISDN) Data Link Layer Specification For Frame Mode Bearer\n        Services,
    February 1992\n   [26] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group
    MIB\",\n        RFC 2863, June 2000.\n   [27] Case, J., McCloghrie, K., Rose,
    M. and S. Waldbusser,\n        \"Management Information Base for Version 2 of
    the Simple Network\n        Management Protocol (SNMPv2)\", RFC 1907, January
    1996.\n   [28] Rehbehn, K., Nicklass, O. and G. Mouradian, \"Definitions of\n
    \       Managed Objects for Monitoring and Controlling the Frame\n        Relay/ATM
    PVC Service Interworking Function\", RFC 2955, October\n        2000.\n   [29]
    ITU-T Recommendation E.164/I.331, The International Public\n        Telecommunication
    Numbering Plan, May 1997\n   [30] ITU-T Recommendation X.121, International Numbering
    Plan For\n        Public Data Networks, October 1996\n   [31] Frame Relay Forum,
    \"The Frame Relay Forum User-to-Network\n        Implementation Agreement (UNI)\",
    FRF 1.2, July 2000.\n"
  title: 5.  References
- contents:
  - "6.  Security Considerations\n   There are a number of management objects defined
    in this MIB that\n   have a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.\n
    \  No managed objects in this MIB contain sensitive information.\n   SNMPv1 by
    itself is not a secure environment.  Even if the network\n   itself is secure
    (for example by using IPSec), even then, there is no\n   control as to who on
    the secure network is allowed to access and\n   GET/SET (read/change/create/delete)
    the objects in this MIB.\n   It is recommended that the implementers consider
    the security\n   features as provided by the SNMPv3 framework.  Specifically,
    the use\n   of the User-based Security Model RFC 2574 [12] and the View-based\n
    \  Access Control Model RFC 2575 [15] is recommended.\n   It is then a customer/user
    responsibility to ensure that the SNMP\n   entity giving access to an instance
    of this MIB, is properly\n   configured to give access to the objects only to
    those principals\n   (users) that have legitimate rights to indeed GET or SET\n
    \  (change/create/delete) them.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Authors' Addresses\n   Kenneth Rehbehn\n   Megisto Systems, Inc.\n   20251
    Century Boulevard\n   Germantown, MD, USA 20874\n   Phone: (301) 515-3672\n   EMail:
    krehbehn@megisto.com\n   David Fowler\n   Syndesis Limited\n   28 Fulton Way\n
    \  Richmond Hill, Ontario, Canada L4B 1J5\n   Phone: (905) 886-7818\n   EMail:
    fowler@syndesis.com\n"
  title: 7.  Authors' Addresses
- contents:
  - "APPENDIX A  Update Information\n   The changes from RFC 1604 are the following:\n
    \  (1)  Added the object frLportDLCIIndexValue to automatically generate\n        index
    values for new DLC rows.\n   (2)  Add the following objects to support manager
    writing to objects:\n        Logical Port Objects\n            frLportTypeAdmin\n
    \           frLportVCSigProtocolAdmin\n        VC Objects\n            frMgtVCSigProcedAdmin\n
    \           frMgtVCSigUserN391Admin\n            frMgtVCSigUserN392Admin\n            frMgtVCSigUserN393Admin\n
    \           frMgtVCSigUserT391Admin\n            frMgtVCSigNetN392Admin\n            frMgtVCSigNetN393Admin\n
    \           frMgtVCSigNetT392Admin\n            frMgtVCSigNetnT3Admin\n   (3)
    \ Add objects to control fragmentation:\n        frLportFragControl frLportFragSize\n
    \  (4)  Added objects to track frames offered to network (in) and\n        delivered
    (out) for increased visibility into policing-driven\n        discards, congestion-driven
    discards, DE-bit setting, and\n        congestion bit setting:\n        frPVCEndptInDiscardsDESet\n
    \       frPVCEndptInFramesFECNSet\n        frPVCEndptOutFramesFECNSet\n        frPVCEndptInFramesBECNSet\n
    \       frPVCEndptOutFramesBECNSet\n        frPVCEndptInCongDiscards\n        frPVCEndptInDECongDiscards\n
    \       frPVCEndptOutCongDiscards\n        frPVCEndptOutDECongDiscards\n        frPVCEndptOutDEFrames\n
    \  (5)  Added the PVC object frPVCEndptAtmIwfConnIndex to identify the\n        type
    of connection, frame relay or ATM IWF; and to identify the\n        cross-connect
    row of the FR/ATM IWF MIB.\n   (6)  Added objects to provide printable names of
    the connection user\n        and service provider:\n        frPVCConnectUserName\n
    \       frPVCConnectProviderName\n   (7)  Added a new notification to correct
    flaws in the RFC1604 trap.\n        The flaws include improper OID suffix (SMIv1
    compatibility\n        issue) and the inclusion of redundant index fields\n   (8)
    \ Updated compliance modules and object groups to reflect the new\n        objects
    and notification:\n        frnetservCompliance2 -      New service-centric (read-only)\n
    \                                   compliance module\n        frnetSwitchCompliance
    -     New switch-centric (read-write)\n                                    compliance
    module\n        frnetservCompliance -       Original RFC 1604 Module, now\n                                    deprecated\n
    \       frnetservLportGroup -       Original RFC 1604 logical port\n                                    group,
    now deprecated\n        frnetservLportGroup2 -      Replacement logical port group\n
    \       frnetservPVCEndptGroup2 -   Extension objects with this\n                                    revision
    of the MIB\n        frnetservPVCConnectNamesGroup - New group w/ display names\n
    \                                   for connections\n        frnetservLportAdminGroup
    -  New group w/ read-write objects\n                                    for the
    logical port\n        frnetservMgtVCSigAdminGroup - New group w/ read-write objects\n
    \                                   for the signaling protocol\n        frnetservPVCNotifGroup
    -    Group deprecated to eliminate\n                                    obsolete
    frPVCConnectStatusChange\n                                    notification\n        frnetservPVCNotifGroup2
    -   New group added with w/\n                                    frPVCConnectStatusNotif\n
    \  (9)  Added UNITS and REFERENCE clauses for objects that needed the\n        clarification.\n
    \  (10) Changed references to \"proxy-agent\" to \"FRS agent\" to avoid\n        confusion
    with other proxy-agent terminology.\n   (11) Changed objects using the DisplayString
    TC to use the\n        SnmpAdminString TC.\n   (12) frMgtVCSigProced - Expanded
    to include the u2nuser(3)\n        enumeration for the UNI protocol operation
    where the logical\n        port operates in the user role.\n   (13) DESCRIPTION
    text added to specify agent response when object is\n        not instantiated
    \ for the following objects:\n        frMgtVCSigUserN391\n        frMgtVCSigUserN393\n
    \       frMgtVCSigUserT391\n        frMgtVCSigUserN392\n        frMgtVCSigNetN391\n
    \       frMgtVCSigNetN393\n        frMgtVCSigNetT391\n        frMgtVCSigNetN392\n
    \       frMgtVCSigNetnN4\n        frMgtVCSigNetnT3\n        frMgtVCSigUserLinkRelErrors\n
    \       frMgtVCSigUserProtErrors\n        frMgtVCSigUserChanInactive\n   (14)
    DESCRIPTION text addressing case of logical port not performing\n        network-side
    procedures was removed from following objects:\n        frMgtVCSigNetLinkRelErrors\n
    \       frMgtVCSigNetChanInactive\n        frMgtVCSigNetProtErrors\n   (15) frPVCEndptConnectIdentifier
    - Operation described for the case\n        of FR/ATM IWF cross-connect operation.\n
    \  (16) frPVCEndptRcvdSigStatus - Added description of enumerated\n        values.\n
    \  (17) frPVCEndptInDiscards - Clarified DESCRIPTION to state that\n        congestion
    discards are not counted by object.\n   (18) frPVCConnect{Low|High}IfIndex - Changed
    to use InterfaceIndex TC\n        and changed reference to MIB-II to the new IF-MIB.
    \ Removed\n        statement asserting that a zero value means the port is not
    a FR\n        logical port.\n   (19) frPVCConnectIndex - Added a range to the
    SYNTAX clause\n   (20) frPVCConnect{L2h|H2l}OperStatus - Added DESCRIPTION text
    for\n        each enumerated value.\n   (21) frAccountPVCDLCIIndex - Added a range
    to the SYNTAX clause\n   (22) frPVCCOnnectStatusChange Notification - STATUS change
    to\n        deprecated.  Obsoleted to eliminate inappropriate inclusion of\n        index
    objects\n   (23) frPVCConnectStatusNotif Notification - Replaces\n        frPVCConnectStatusChange.
    \ In addition, the notification now\n        requires 2 instances of the frPVCEndptRcvdSigStatus
    object, one\n        for each endpoint of the connection.\n   (24) Guidance added
    to recommend ifLinkUpDownTrapEnable be set on.\n   (25) Behavior of the PVC status
    and endpoint signaling status is\n        clarified for the case of underlying
    layer failure.\n   (26) Overview text re-written for clarity.\n   (27) Clarified
    role of system group.\n   (28) Established maximum frame size of 4096 and default
    value of\n        1600.\n   (29) Clarified that DLC index range is restricted
    to valid range for\n        the specific length of address field used on the logical
    port.\n   (30) Figure 1 and accompanying text was removed to eliminate a\n        confusing
    \"MIB stack\" concept.  See the section titled \"Relation\n        to Other MIBs\"
    for replacement text.\n"
  title: APPENDIX A  Update Information
- contents:
  - "Intellectual Property Rights\n   The IETF takes no position regarding the validity
    or scope of any\n   intellectual property or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; neither does it represent that it\n   has made any effort to
    identify any such rights.  Information on the\n   IETF's procedures with respect
    to rights in standards-track and\n   standards-related documentation can be found
    in BCP-11.  Copies of\n   claims of rights made available for publication and
    any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementers or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: Intellectual Property Rights
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
