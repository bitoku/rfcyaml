Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing a client using the Internet Small Computer System Interface (iSCSI) protocol (SCSI over TCP).
This document defines a MIB module for iSCSI [RFC3720], used to manage devices that implement the iSCSI protocol.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Relationship to Other MIB Modules
The iSCSI MIB module is normally layered between the SCSI MIB module [RFC4455] and the TCP MIB module [RFC4022], and makes use of the IP Storage (IPS) Identity Authentication MIB module [RFC4545].
Here is how these modules are related:
Within systems where a SCSI layer is present,
each iscsiNode, whether it has an initiator role, target role, or both, is related to one SCSI device within the SCSI MIB module.
In this case, the iscsiNodeTransportType attribute points to the SCSI transport object within the SCSI MIB module, which in turn contains an attribute that points back to the iscsiNode.
In this way, a management station can navigate between the two MIB modules.
In systems where a SCSI layer is not present, such as within an iSCSI proxy device, the iscsiNodeTransportType attribute points to the appropriate corresponding object within the appropriate MIB, or is left blank.
Each iSCSI connection is related to one transport level connection.
Currently, iSCSI uses only TCP; the iSCSI connection is related to a TCP connection using its normal (protocol, source address, source port, destination address, destination port) 5 tuple.
Each iSCSI node that serves a target role can have a list of authorized initiators.
Each of the entries in this list points to an identity within the IPS Identity Authentication MIB module that will be allowed to access the target.
iSCSI nodes that serve in an initiator role can also have a list of authorized targets.
Each of the entries in this list points to an identity within the Auth MIB module to which the initiator should attempt to establish sessions.
The Auth MIB module includes information used to identify initiators and targets by their iSCSI name, IP address, and/or credentials.
This MIB module imports objects from RFCs 2578
[RFC2579], 2580 [RFC2580], and 3411 [RFC3411].
It also imports textual conventions from the INET ADDRESS MIB [RFC4001].
Each non scalar object in the iSCSI MIB module is indexed first by an iSCSI Instance.
Each instance is a collection of nodes, portals, sessions, etc., that can define a physical or virtual partitioning of an iSCSI capable device.
The use of an instance works well with partitionable or hierarchical storage devices and fits in logically with other management schemes.
Instances do not replace SNMP contexts, however they do provide a very simple way to assign a virtual or physical partition of a device to one or more SNMP contexts, without having to do so for each individual node, portal, and session row.
This MIB module structure supplies configuration, fault, and statistics information for iSCSI devices [RFC3720].
It is structured around the well known iSCSI objects, such as targets, initiators, sessions, connections, and the like.
This MIB module may also be used to configure access to iSCSI targets, by creating iSCSI Portals and authorization list entries.
It is worthwhile to note that this is an iSCSI MIB module and as such reflects only iSCSI objects.
This module does not contain information about the SCSI layer attributes of a device.
If a SCSI layer is present, the SCSI MIB module, currently under development, may be used to manage SCSI information for a device.
The iSCSI MIB module consists of several "objects", each of which is represented by one or more tables.
This section contains a brief description of the "object" hierarchy and a description of each object, followed by a discussion of the actual table structure within the objects.
The top level object in this structure is the iSCSI instance, which "contains" all of the other objects.
A distinct iSCSI entity within the managed system.
An IP address used by this instance iscsiTargetPortal   Contains portal information relevant when the portal   is used to listen for connections to its targets.
Contains portal information relevant when the portal   is used to initiate connections to other targets.
An iSCSI node can act as an initiator, a target, or both.
Contains generic (non role specific)
Target specific iSCSI node information.
A list of initiator identities that are allowed   access to this target.
iscsiInitiator   Initiator specific iSCSI node information.
A list of target identities to which this initiator   is configured to establish sessions.
An active iSCSI session between an initiator and target.
The session's direction may be Inbound (outside   initiator to our target) or Outbound (our initiator to   an outside target).
An active TCP connection within an iSCSI session.
An iSCSI node can be an initiator, a target, or both.
The iSCSI node's portals may be used to initiate connections (initiator) or listen for connections (target), depending on whether the iSCSI node is acting as an initiator or target.
The iSCSI MIB module assumes that any target may be accessed via any portal that can take on a target role, although other access controls not reflected in the module might limit this.
MIB Table Structure Each iSCSI object exports one or more tables: an attributes table, and zero or more statistics tables, which augment the attributes table.
Since iSCSI is an evolving standard, it is much cleaner to provide statistics and attributes as separate tables, allowing attributes and statistics to be added independently.
In a few cases, there are multiple categories of statistics that will likely grow; in this case, an object will contain multiple statistics tables.
iscsiInstanceAttributesTable iscsiInstanceSsnErrorStatsTable   Counts abnormal session terminations iscsiPortal iscsiPortalAttributesTable iscsiTargetPortal iscsiTgtPortalAttributesTable iscsiInitiatorPortal iscsiIntrPortalAttributesTable
iscsiTargetAttributesTable iscsiTargetLoginStatsTable   Counts successful and unsuccessful logins iscsiTargetLogoutStatsTable
Counts normal and abnormal logouts
iscsiInitiatorAttributesTable iscsiInitiatorLoginStatsTable   Counts successful and unsuccessful logins
Counts normal and abnormal logouts iscsiIntrAuthorization
iscsiSessionStatsTable   Performance related counts (requests, responses, bytes)
iscsiSessionCxnErrorStatsTable   Counts digest errors, connection errors, etc.
iscsiConnectionAttributesTable Note that this module does not attempt to count everything that could be counted; it is designed to include only those counters that would be useful for identifying performance, security, and fault problems from a management station.
The iscsiInstanceAttributesTable is the primary table of the iSCSI MIB module.
Every table entry in this module is "owned" by exactly one iSCSI instance; all other table entries in the module include this table's index as their primary index.
Most implementations will include just one iSCSI instance row in this table.
However, this table exists to allow for multiple virtual instances.
For example, many IP routing products now allow multiple virtual routers.
The iSCSI MIB module has the same premise; a large system could be "partitioned" into multiple, distinct virtual systems.
This also allows a single SNMP agent to proxy for multiple subsystems, perhaps a set of stackable devices, each of which has one or even more instances.
The instance attributes include the iSCSI vendor and version, as well as information on the last target or initiator at the other end of a session that caused a session failure.
The iscsiInstanceSsnErrorStatsTable augments the attributes table and provides statistics on session failures due to digest, connection, or iSCSI format errors.
The iscsiPortalAttributesTable lists iSCSI portals that can be used to listen for connections to targets, to initiate connections to other targets, or to do both.
Each row in the table includes an IP address (either v4 or v6), and a transport protocol (currently only TCP is defined).
Each portal may have additional attributes, depending on whether it is an initiator portal, a target portal, or both.
Initiator portals also have portal tags; these are placed in corresponding rows in the iscsiIntrPortalAttributesTable.
Target portals have both portal tags and ports (e.g., TCP listen ports if the transport protocol is TCP); these are placed in rows in the iscsiTgtPortalAttributesTable.
Portal rows, along with their initiator and target portal counterparts, may be created and destroyed through this MIB module by a management station.
Rows in the initiator and target portal tables are created and destroyed automatically by the agent, whenever a row is created or destroyed in the iscsiPortalAttributesTable, or if the value of iscsiPortalRoles changes.
Attributes in these tables may then be modified by the management station if the agent implementation allows.
When created by a management station, the iscsiPortalRoles attribute is used to control row creation in the initiator and target portal tables.
Creating a row with the targetTypePortal bit set in iscsiPortalRoles will cause the implementation to start listening for iSCSI connections on the portal.
Creating a row with the initiatorTypePortal bit set in iscsiPortalRoles will not necessarily cause connections to be established; it is left to the implementation whether and when to make use of the portal.
Both bits may be set if the portal is to be used by both initiator and target nodes.
When deleting a row in the iscsiPortalAttibutesTable, all connections associated with that row are terminated.
The implementation may either terminate the connection immediately or request a clean shutdown as specified in [RFC3720].
An outbound connection (when an iscsiInitiatorPortal is deleted) matches the portal if its iscsiCxnLocalAddr matches the iscsiPortalAddr.
An inbound connection (when an iscsiTargetPortal is deleted) matches the portal if its iscsiCxnLocalAddr matches the iscsiPortalAddr, and its iscsiCxnLocalPort matches the iscsiTargetPortalPort.
Individual objects within a row in this table may not be modified while the row is active.
For instance, changing the IP address of a portal requires that the rows associated with the old IP address be deleted, and new rows be created (in either order).
The iscsiTgtPortalAttributesTable contains target specific attributes for iSCSI portals.
Rows in this table use the same indices as their corresponding rows in the iscsiPortalAttributesTable, with the addition of iscsiNodeIndex.
Rows in this table are created when the targetTypePortal bit is set in the iscsiPortalRoles attribute of the corresponding iscsiPortalAttributesEntry; they are destroyed when this bit is cleared.
This table contains the TCP (or other protocol) port on which the socket is listening for incoming connections.
It also includes a portal group aggregation tag;
iSCSI target portals within this instance sharing the same tag can contain connections within the same session.
This table will be empty for iSCSI instances that contain only initiators (such as iSCSI host driver implementations).
Many implementations use the same target portal tag and protocol port for all nodes accessed via a portal.
These implementations will create a single row in the iscsiTgtPortalAttributeTable, with an iscsiNodeIndex of zero.
Other implementations do not use the same tag and/or port for all nodes; these implementations will create a row in this table for each (portal, node) tuple, using iscsiNodeIndex to designate the node for this portal tag and port.
The iscsiIntrPortalAttributesTable contains initiator specific objects for iSCSI portals.
Rows in this table use the same indices as their corresponding entries in the iscsiPortalAttributesTable.
A row in this table is created when the initiatorTypePortal bit is set in the iscsiPortalRoles attribute; it is destroyed when this bit is cleared.
Each row in this table contains a portal group aggregation tag, indicating which portals an initiator may use together within a multiple connection session.
This table will be empty for iSCSI instances that contain only targets (such as most iSCSI devices).
Many implementations use the same initiator tag for all nodes accessing targets via a given portal.
These implementations will create a single row in iscsiIntrPortalAttributeTable, with an iscsiNodeIndex of zero.
Other implementations do not use the same tag and/or port for all nodes; these implementations will create a row in this table for each (portal, node) tuple, using iscsiNodeIndex to designate the node for this portal tag and port.
The iscsiNodeAttributesTable contains a list of iSCSI nodes, each of which may have an initiator role, a target role, or both.
This table contains the node's attributes that are common to both roles, such as its iSCSI name and alias string.
Attributes specific to initiators or targets are available in the iscsiTarget and iscsiInitiator objects.
Each row in this table that can fulfill a target role has a corresponding row in the iscsiTarget table; each entry that fulfills an initiator role has a row in the iscsiInitiator table.
Nodes such as copy managers that can take on both roles have a corresponding row in each table.
This table also contains the login negotiations preferences for this node.
These objects indicate the values this node will offer or prefer in the operational negotiation phase of the login process.
For most implementations, each entry in the table also contains a RowPointer to the transport table entry in the SCSI MIB module that this iSCSI node represents.
For implementations without a standard SCSI layer above iSCSI, such as an iSCSI proxy or gateway, this RowPointer can point to a row in an implementation specific table that this iSCSI node represents.
The iscsiTargetAttributesTable contains target specific attributes for iSCSI nodes.
Each entry in this table uses the same index values as its corresponding iscsiNode entry.
This table contains attributes used to indicate the last failure that was (or should have been) sent as a notification.
This table is augmented by the iscsiTargetLoginStatsTable and the iscsiTargetLogoutStatsTable, which count the numbers of normal and abnormal logins and logouts to this target.
The iscsiTgtAuthAttributesTable contains an entry for each initiator identifier that will be allowed to access the target under which it appears.
Each entry contains a RowPointer to a user identity in the IPS Authorization MIB module, which contains the name, address, and credential information necessary to authenticate the initiator.
The iscsiInitiatorAttributesTable contains a list of initiator  specific attributes for iSCSI nodes.
Each entry in this table uses the same index values as its corresponding iscsiNode entry.
Most implementations will include a single entry in this table, regardless of the number of physical interfaces the initiator may use.
This table is augmented by the iscsiInitiatorLoginStatsTable and the iscsiInitiatorLogoutStatsTable, which count the numbers of normal and abnormal logins and logouts from this initiator.
The iscsiIntrAuthAttributesTable contains an entry for each target identifier to which the initiator is configured to establish a session.
Each entry contains a RowPointer to a user identity in the IPS Authorization MIB module, which contains the name, address, and credential information necessary to identify (for discovery purposes) and authenticate the target.
The iscsiSessionAttributesTable contains a set of rows that list the sessions known to be existing locally for each node in each iSCSI instance.
The session type for each session indicates whether the session is used for normal SCSI commands or for discovery using the SendTargets text command.
Discovery sessions that do not belong to any particular node have a node index attribute of zero.
The session direction for each session indicates whether it is an Inbound session or an Outbound session.
Inbound sessions are from some other initiator to the target node under which the session appears.
Outbound sessions are from the initiator node under which the session appears to a target outside this iSCSI instance.
Many attributes may be negotiated when starting an iSCSI session.
Most of these attributes are included in the session object.
Some attributes, such as the integrity and authentication schemes, have some standard values that can be extended by vendors to include their own schemes.
These contain an object identifier, rather than the expected enumerated type, to allow these values to be extended by other MIB modules, such as an enterprise MIB module.
The iscsiSessionStatsTable includes statistics related to performance; it counts iSCSI data bytes and PDUs.
For implementations that support error recovery without terminating a session, the iscsiSessionCxnErrorStatsTable contains counters for the numbers of digest and connection errors that have occurred within the session.
The iscsiConnectionAttributesTable contains a list of active connections within each session.
It contains the IP addresses and TCP (or other protocol) ports of both the local and remote sides of the connection.
These may be used to locate other connection related information and statistics in the TCP MIB module [RFC4022].
The attributes table also contains a connection state.
This state is not meant to directly map to the state tables included within the iSCSI specification; they are meant to be simplified, higher level definitions of connection state that provide information more useful to a user or network manager.
No statistics are kept for connections.
IP Addresses and TCP Port Numbers
The IP addresses in this module are represented by two attributes, one of type InetAddressType, and the other of type InetAddress.
These are taken from [RFC4001], which specifies how to support addresses that may be either IPv4 or IPv6.
The TCP port numbers that appear in a few of the structures are described as simply port numbers, with a protocol attribute indicating whether they are TCP ports or something else.
This will allow the module to be compatible with iSCSI over transports other than TCP in the future.
Using OIDs in Place of Enumerated Types
The iSCSI MIB module has a few attributes, namely, the digest method attributes, where an enumerated type would work well, except that an implementation may need to extend the attribute and add types of its own.
To make this work, this MIB module defines a set of object identities within the iscsiDescriptors subtree.
Each of these object identities is basically an enumerated type.
Attributes that make use of these object identities have a value that is an Object Identifier (OID) instead of an enumerated type.
These OIDs can indicate either the object identities defined in this module or object identities defined elsewhere, such as in an enterprise MIB module.
Those implementations that add their own digest methods should also define a corresponding object identity for each of these methods within their own enterprise MIB module, and return its OID whenever one of these attributes is using that method.
Notifications Three notifications are provided.
One is sent by an initiator detecting a critical login failure, another is sent by a target detecting a critical login failure, and the third is sent upon a session being terminated due to an abnormal connection or digest failure.
Critical failures are defined as those that may expose security related problems that may require immediate action, such as failures due to authentication, authorization, or negotiation problems.
Attributes in the initiator, target, and instance objects provide the information necessary to send in the notification, such as the initiator or target name and IP address at the other end that may have caused the failure.
To avoid sending an excessive number of notifications due to multiple errors counted, an SNMP agent implementing the iSCSI MIB module SHOULD NOT send more than three iSCSI notifications in any 10 second period.
The 3 in 10 rule was chosen because one notification every three seconds was deemed often enough, but should two or three different notifications happen at the same time, it would not be desirable to suppress them.
Three notifications in 10 seconds is a happy medium, where a short burst of notifications is allowed, without inundating the network and/or notification host with a large number of notifications.
IMPORTS MODULE IDENTITY, OBJECT TYPE, OBJECT IDENTITY, NOTIFICATION TYPE, Unsigned32,
Counter32, Counter64, Gauge32, mib 2 FROM SNMPv2
SMI TEXTUAL CONVENTION, TruthValue, RowPointer, TimeStamp, RowStatus, AutonomousType, StorageType FROM SNMPv2
TC MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
CONF SnmpAdminString FROM SNMP FRAMEWORK
MIB   RFC 3411 InetAddressType, InetAddress, InetPortNumber FROM INET ADDRESS
MIB   RFC 4001 ; iscsiMibModule
"IETF IPS Working Group" CONTACT INFO " Mark Bakke Cisco Systems, Inc 7900 International Drive, Suite 400 Bloomington, MN USA 55425
Marjorie Krueger Hewlett Packard Networked Storage Architecture Networked Storage Solutions Org.
marjorie krueger@hp.com Tom McSweeney IBM Corporation 600 Park Offices Drive Research Triangle Park, NC USA 27709
tommcs@us.ibm.com James Muchow Qlogic Corp. 6321 Bury Dr. Eden Prairie,
MN USA 55346 E mail:
james.muchow@qlogic.com" DESCRIPTION "The iSCSI Protocol MIB module.
This version of this MIB module is part of RFC 4544;  see the RFC itself for full legal notices."
"This data type is used to define the transport protocols that will carry iSCSI PDUs.
"This data type represents the methods possible for digest negotiation.
other    a digest method other than those defined below.
noDigest does not support digests (will operate without a digest
(Note: implementations must support digests to be compliant with the RFC3720).
CRC32c   require a CRC32C digest."
"This data type is used for objects whose value is an iSCSI name with the properties described in RFC 3720 section 3.2.6.1, and encoded as specified in RFC 3720 section 3.2.6.2.
A zero length string indicates the absence of an iSCSI name.
REFERENCE "RFC 3720, Section 3.2.6, iSCSI Names.
"The authoritative identifier when no integrity scheme (for either the header or data) is being used."
"The authoritative identifier when the integrity scheme (for either the header or data) is CRC32c."
"The authoritative identifier when no integrity scheme (for either the header or data) is being used."
"The authoritative identifier when the integrity scheme (for either the header or data) is CRC32c."
Instance Attributes Table iscsiInstanceAttributesTable OBJECT
"A list of iSCSI instances present on the system."
"An arbitrary integer used to uniquely identify a particular iSCSI instance.
This index value must not be modified or reused by an agent unless a reboot has occurred.
An agent should attempt to keep this value persistent across reboots."
When only a single instance is present, this object may be set to the zero length string; with multiple iSCSI instances, it may be used in an implementation dependent manner to describe the purpose of the respective instance."
"The minimum version number of the iSCSI specification such that this iSCSI instance supports this minimum value, the maximum value indicated by the corresponding instance in iscsiInstVersionMax, and all versions in between."
"The maximum version number of the iSCSI specification such that this iSCSI instance supports this maximum value, the minimum value indicated by the corresponding instance in iscsiInstVersionMin, and all versions in between."
A UTF 8 string describing the manufacturer of the implementation of this instance."
The format of this string is determined solely by the manufacturer, and is for informational purposes only.
It is unrelated to the iSCSI specification version numbers."
"This object counts the number of times a session belonging to this instance has been failed.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiInstDiscontinuityTime."
"The counter object in the iscsiInstSsnErrorStatsTable that was incremented when the last session failure occurred.
If the reason for failure is not found in the iscsiInstSsnErrorStatsTable, the value { 0.0 } is used instead."
The iSCSI name of the remote node from the failed session."
"The value of SysUpTime on the most recent occasion at which any one or more of this instance's counters suffered a discontinuity.
If no such discontinuities have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
An entry (row) containing management information applicable to a particular iSCSI instance."
The count of sessions that were failed due to receipt of a PDU containing header or data digest errors.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiInstDiscontinuityTime."
The count of sessions that were failed due to a sequence exceeding a time limit.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiInstDiscontinuityTime."
The count of sessions that were failed due to receipt of a PDU that contained a format error.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiInstDiscontinuityTime."
Portal Attributes Table iscsiPortalAttributesTable OBJECT TYPE SYNTAX
A list of transport endpoints (using TCP or another transport protocol) used by this iSCSI instance.
An iSCSI instance may use a portal to listen for incoming connections to its targets, to initiate connections to other targets, or both."
"An arbitrary integer used to uniquely identify a particular transport endpoint within this iSCSI instance.
This index value must not be modified or reused by an agent unless a reboot has occurred.
An agent should attempt to keep this value persistent across reboots."
"This field allows entries to be dynamically added and removed from this table via SNMP.
When adding a row to this table, all non Index/RowStatus objects must be set.
When the value of this object is 'active', the values of the other objects in this table cannot be changed.
Rows may be discarded using RowStatus.
Note that creating a row in this table will typically cause the agent to create one or more rows in iscsiTgtPortalAttributesTable and/or iscsiIntrPortalAttributesTable."
"A portal can operate in one or both of two roles: as a target portal and/or an initiator portal.
If the portal will operate in both roles, both bits must be set.
This object will define a corresponding row that will exist or must be created in the iscsiTgtPortalAttributesTable, the iscsiIntrPortalAttributesTable or both.
If the targetTypePortal bit is set, one or more corresponding iscsiTgtPortalAttributesEntry rows will be found or created.
If the initiatorTypePortal bit is set, one or more corresponding iscsiIntrPortalAttributesEntry rows will be found or created.
If both bits are set, one or more corresponding rows will be found or created in one of the above tables."
{ iscsiPortalAttributesEntry 3 } iscsiPortalAddrType OBJECT TYPE SYNTAX
"The type of Internet Network Address contained in the corresponding instance of the iscsiPortalAddr."
"The portal's Internet Network Address, of the type specified by the object iscsiPortalAddrType.
If iscsiPortalAddrType has the value 'dns', this address gets resolved to an IP address whenever a new iSCSI connection is established using this portal."
"The maximum PDU length this portal can receive.
This may be constrained by hardware characteristics and individual implementations may choose not to allow this object to be changed."
The preferred header digest for this portal."
The preferred data digest method for this portal."
"An alternate header digest preference for this portal."
} iscsiPortalSecondaryDataDigest OBJECT TYPE SYNTAX
"An alternate data digest preference for this portal."
"This object indicates whether or not this portal will request markers in its incoming data stream.
"The storage type for this row.
Rows in this table that were created through an external process may have a storage type of readOnly or permanent.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
A list of transport endpoints (using TCP or another transport protocol) on which this iSCSI instance listens for incoming connections to its targets."
An entry (row) containing management information applicable to a particular portal instance that is used to listen for incoming connections to local targets.
One or more rows in this table is populated by the agent for each iscsiPortalAttributesEntry row that has the bit targetTypePortal set in its iscsiPortalRoles column.
"An arbitrary integer used to uniquely identify a particular node within an iSCSI instance present on the local system.
For implementations where each {portal, node} tuple can have a different portal tag, this value will map to the iscsiNodeIndex.
For implementations where the portal tag is the same for a given portal regardless of which node is using the portal, the value 0 (zero) is used."
This object's storage type is specified in iscsiPortalStorageType."
Multiple connection sessions may be aggregated over portals sharing an identical aggregation tag.
This object's storage type is specified in iscsiPortalStorageType.
Initiator Portal Attributes Table iscsiIntrPortalAttributesTable
A list of Internet Network Addresses (using TCP or another transport protocol) from which this iSCSI instance may initiate connections to other targets."
An entry (row) containing management information applicable to a particular portal instance that is used to initiate connections to iSCSI targets.
One or more rows in this table is populated by the agent for each iscsiPortalAttributesEntry row that has the bit initiatorTypePortal set in its iscsiPortalRoles column.
Unsigned32 } iscsiIntrPortalNodeIndexOrZero OBJECT TYPE
"An arbitrary integer used to uniquely identify a particular node within an iSCSI instance present on the local system.
For implementations where each {portal, node} tuple can have a different portal tag, this value will map to the iscsiNodeIndex.
For implementations where the portal tag is the same for a given portal regardless of which node is using the portal, the value 0 (zero) is used."
Multiple connection sessions may be aggregated over portals sharing an identical aggregation tag.
This object's storage type is specified in iscsiPortalStorageType.
Node Attributes Table iscsiNodeAttributesTable OBJECT
A list of iSCSI nodes belonging to each iSCSI instance present on the local system.
An iSCSI node can act as an initiator, a target, or both."
"An arbitrary integer used to uniquely identify a particular node within an iSCSI instance.
This index value must not be modified or reused by an agent unless a reboot has occurred.
An agent should attempt to keep this value persistent across reboots."
"A character string that is a human readable name or description of the iSCSI node.
If configured, this alias may be communicated to the initiator or target node at the remote end of the connection during a Login Request or Response message.
This string is not used as an identifier, but can be displayed by the system's user interface in a list of initiators and/or targets to which it is connected.
If no alias exists, the value is a zero length string.
"A node can operate in one or both of two roles: a target role and/or an initiator role.
If the node will operate in both roles, both bits must be set.
This object will also define the corresponding rows that will exist in the iscsiTargetAttributesTable, the iscsiInitiatorAttributesTable or both.
If the targetTypeNode bit is set, there will be a corresponding iscsiTargetAttributesEntry.
If the initiatorTypeNode bit is set, there will be a corresponding iscsiInitiatorAttributesEntry.
If both bits are set, there will be a corresponding iscsiTgtPortalAttributesEntry and iscsiPortalAttributesEntry."
"A pointer to the corresponding row in the appropriate table for this SCSI transport, thereby allowing management stations to locate the SCSI level device that is represented by this iscsiNode.
For example, it will usually point to the corresponding scsiTrnspt object in the SCSI MIB module.
If no corresponding row exists, the value 0.0 must be used to indicate this."
"This object indicates the InitialR2
T preference for this node: true
YES, false   will try to negotiate NO, will accept YES " REFERENCE "RFC 3720, Section 12.10, InitialR2
Maximum number of outstanding requests to transmit (R2Ts) allowed per iSCSI task."
"The maximum length (bytes) supported for unsolicited data to/from this node."
REFERENCE "RFC 3720, Section 12.14, FirstBurstLength
"The maximum number of bytes that can be sent within a single sequence of Data In or Data Out PDUs."
REFERENCE "RFC 3720, Section 12.13, MaxBurstLength
"The maximum number of connections allowed in each session to and/or from this node."
False ( No) indicates that iSCSI data PDU sequences may be transferred in any order.
( Yes) indicates that data PDU sequences must be transferred using continuously increasing offsets, except during error recovery.
"The DataPDUInOrder preference of this node.
False ( No) indicates that iSCSI data PDUs within sequences may be in any order.
( Yes) indicates that data PDUs within sequences must be at continuously increasing addresses, with no gaps or overlay between PDUs.
"The DefaultTime2Wait preference of this node.
This is the minimum time, in seconds, to wait before attempting an explicit/implicit logout or active iSCSI task reassignment after an unexpected connection termination or a connection reset."
iscsiNodeAttributesEntry 14 } iscsiNodeDefaultTime2Retain OBJECT
This is the maximum time, in seconds after an initial wait (Time2Wait), before which an active iSCSI task reassignment is still possible after an unexpected connection termination or a connection reset."
Currently, only 0 2 are valid.
This object is designed to accommodate future error recovery levels.
Higher error recovery levels imply support in addition to support for the lower error level functions.
In other words, error level 2 implies support for levels 0 1, since those functions are subsets of error level 2."
REFERENCE "RFC 3720, Section 12.20,
"The value of SysUpTime on the most recent occasion at which any one or more of this node's counters suffered a discontinuity.
If no such discontinuities have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
StorageType MAX ACCESS    read write
"The storage type for all read write objects within this row.
Rows in this table are always created via an external process, and may have a storage type of readOnly or permanent.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row.
If this object has the value 'volatile', modifications to read write objects in this row are not persistent across reboots.
If this object has the value 'nonVolatile', modifications to objects in this row are persistent.
An implementation may choose to allow this object to be set to either 'nonVolatile' or 'volatile', allowing the management application to choose this behavior."
Target Attributes Table iscsiTargetAttributesTable OBJECT TYPE SYNTAX
IscsiTargetAttributesEntry MAX ACCESS    not accessible
"A list of iSCSI nodes that can take on a target role, belonging to each iSCSI instance present on the local system."
"This object counts the number of times a login attempt to this local target has failed.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The timestamp of the most recent failure of a login attempt to this target.
A value of zero indicates that no such failures have occurred since the last system boot."
The type of the most recent failure of a login attempt to this target, represented as the OID of the counter object in iscsiTargetLoginStatsTable for which the relevant instance was incremented.
A value of 0.0 indicates a type that is not represented by any of the counters in iscsiTargetLoginStatsTable."
The iSCSI name of the initiator that failed the last login attempt."
The type of Internet Network Address contained in the corresponding instance of the iscsiTgtLastIntrFailureAddr.
The value 'dns' is not allowed."
An Internet Network Address, of the type specified by the object iscsiTgtLastIntrFailureAddrType, giving the host address of the initiator that failed the last login attempt."
A table of counters that keep a record of the results of initiators' login attempts to this target."
An entry (row) containing counters for each result of a login attempt to this target."
The count of Login Response PDUs with status 0x0000, Accept Login, transmitted by this target.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
"The number of Login Response PDUs that were transmitted by this target and that were not counted by any other object in the row.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs with status class 0x01, Redirection, transmitted by this target.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs with status 0x0202, Forbidden Target, transmitted by this target.
If this counter is incremented, an iscsiTgtLoginFailure notification should be generated.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs with status 0x0201, Authentication Failed, transmitted by this target.
If this counter is incremented, an iscsiTgtLoginFailure notification should be generated.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
"The number of times a target has effectively refused a login because the parameter negotiation failed.
If this counter is incremented, an iscsiTgtLoginFailure notification should be generated.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime."
Target Logout Stats Table iscsiTargetLogoutStatsTable
When a target receives a Logout command, it responds with a Logout Response that carries a status code.
This table contains counters for both normal and abnormal logout requests received by this target."
An entry (row) containing counters of Logout Response PDUs that were received by this target."
The count of Logout Command PDUs received by this target, with reason code 0 (closes the session).
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Logout Command PDUs received by this target, with any reason code other than 0.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
A list of initiator identities that are authorized to access each target node within each iSCSI instance present on the local system."
An entry (row) containing management information applicable to a particular target
"An arbitrary integer used to uniquely identify a particular target's authorized initiator identity within an iSCSI instance present on the local system.
This index value must not be modified or reused by an agent unless a reboot has occurred.
An agent should attempt to keep this value persistent across reboots."
} iscsiTgtAuthRowStatus OBJECT TYPE SYNTAX
"This field allows entries to be dynamically added and removed from this table via SNMP.
When adding a row to this table, all non Index/RowStatus objects must be set.
When the value of this object is 'active', the values of the other objects in this table cannot be changed.
Rows may be discarded using RowStatus."
"A pointer to the corresponding user entry in the IPS AUTH MIB module that will be allowed to access this iSCSI target."
"The storage type for this row.
Rows in this table that were created through an external process may have a storage type of readOnly or permanent.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
"A list of iSCSI nodes that can take on an initiator role, belonging to each iSCSI instance present on the local system."
An entry (row) containing management information applicable to a particular iSCSI node that has initiator capabilities.
iscsiIntrLastTgtFailureName    IscsiName, iscsiIntrLastTgtFailureAddrType InetAddressType, iscsiIntrLastTgtFailureAddr    InetAddress } iscsiIntrLoginFailures OBJECT TYPE SYNTAX
"This object counts the number of times a login attempt from this local initiator has failed.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The timestamp of the most recent failure of a login attempt from this initiator.
A value of zero indicates that no such failures have occurred since the last system boot."
The type of the most recent failure of a login attempt from this initiator, represented as the OID of the counter object in iscsiInitiatorLoginStatsTable for which the relevant instance was incremented.
A value of 0.0 indicates a type that is not represented by any of the counters in iscsiInitiatorLoginStatsTable."
A UTF 8 string giving the name of the target that failed the last login attempt."
{ iscsiInitiatorAttributesEntry 4 } iscsiIntrLastTgtFailureAddrType OBJECT
The type of Internet Network Address contained in the corresponding instance of the iscsiIntrLastTgtFailureAddr.
The value 'dns' is not allowed."
An Internet Network Address, of the type specified by the object iscsiIntrLastTgtFailureAddrType, giving the host address of the target that failed the last login attempt."
"A table of counters which keep track of the results of this initiator's login attempts."
An entry (row) containing counters of each result of this initiator's login attempts."
The count of Login Response PDUs with status 0x0000, Accept Login, received by this initiator.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs received by this initiator with any status code not counted in the objects below.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs with status class 0x01, Redirection, received by this initiator.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Login Response PDUs with status class 0x201, Authentication Failed, received by this initiator.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
"The number of times the initiator has aborted a login because the target could not be authenticated.
If this counter is incremented, an iscsiIntrLoginFailure notification should be generated.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
"The number of times the initiator has aborted a login because parameter negotiation with the target failed.
If this counter is incremented, an iscsiIntrLoginFailure notification should be generated.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
MAX ACCESS    not accessible STATUS
When an initiator attempts to send a Logout command, the target responds with a Logout Response that carries a status code.
This table contains a list of counters of Logout Response PDUs of each status code that was received by each initiator belonging to this iSCSI instance present on this system."
An entry (row) containing counters of Logout Response PDUs of each status code that was generated by this initiator."
The count of Logout Command PDUs generated by this initiator with reason code 0 (closes the session).
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
The count of Logout Command PDUs generated by this initiator with any status code other than 0.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiNodeDiscontinuityTime.
An entry (row) containing management information applicable to a particular initiator node's authorized target identity."
"An arbitrary integer used to uniquely identify a particular initiator node's authorized target identity within an iSCSI instance present on the local system.
This index value must not be modified or reused by an agent unless a reboot has occurred.
An agent should attempt to keep this value persistent across reboots."
"This field allows entries to be dynamically added and removed from this table via SNMP.
When adding a row to this table, all non Index/RowStatus objects must be set.
When the value of this object is 'active', the values of the other objects in this table cannot be changed.
Rows may be discarded using RowStatus."
"A pointer to the corresponding user entry in the IPS AUTH MIB module to which this initiator node should attempt to establish an iSCSI session."
"The storage type for this row.
Rows in this table that were created through an external process may have a storage type of readOnly or permanent.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
A list of sessions belonging to each iSCSI instance present on the system."
An entry (row) containing management information applicable to a particular session.
If this session is a discovery session that is not attached to any particular node, the iscsiSsnNodeIndex will be zero.
Otherwise, the iscsiSsnNodeIndex will have the same value as iscsiNodeIndex.
" INDEX  { iscsiInstIndex, iscsiSsnNodeIndex,
"An arbitrary integer used to uniquely identify a particular node within an iSCSI instance present on the local system.
For normal, non discovery sessions, this value will map to the iscsiNodeIndex.
For discovery sessions that do not have a node associated, the value 0 (zero) is used."
{ iscsiSessionAttributesEntry 1 } iscsiSsnIndex
"An arbitrary integer used to uniquely identify a particular session within an iSCSI instance present on the local system.
An agent should attempt to not reuse index values unless a reboot has occurred.
iSCSI sessions are destroyed during a reboot; rows in this table are not persistent across reboots."
inboundSession  session is established from an external initiator to a target within this iSCSI instance.
outboundSession session is established from an initiator within this iSCSI instance to an external target."
"If iscsiSsnDirection is Inbound, this object is a UTF 8 string that will contain the name of the remote initiator.
If this session is a discovery session that does not specify a particular initiator, this object will contain a zero length string.
If iscsiSsnDirection is Outbound, this object will contain a zero length string."
"If iscsiSsnDirection is Outbound, this object is a UTF 8 string that will contain the name of the remote target.
If this session is a discovery session that does not specify a particular target, this object will contain a zero length string.
If iscsiSsnDirection is Inbound, this object will contain a zero length string."
"The target defined identification handle for this session.
"The initiator defined portion of the iSCSI Session ID."
A UTF 8 string that gives the alias communicated by the initiator end of the session during the login phase.
If no alias exists, the value is a zero length string.
A UTF 8 string that gives the alias communicated by the target end of the session during the login phase.
If no alias exists, the value is a zero length string.
"If set to true, indicates that the initiator must wait for an R2T before sending to the target.
If set to false, the initiator may send data immediately, within limits set by iscsiSsnFirstBurstLength and the expected data transfer length of the request."
REFERENCE "RFC 3720, Section 12.10, InitialR2
"Indicates whether the initiator and target have agreed to support immediate data on this session.
iscsiSessionAttributesEntry 12 } iscsiSsnMaxOutstandingR2T OBJECT
"The maximum number of outstanding requests to transmit (R2Ts) per iSCSI task within this session."
The maximum length supported for unsolicited data sent within this session."
REFERENCE "RFC 3720, Section 12.14,
"The maximum number of bytes that can be sent within a single sequence of Data In or Data Out PDUs."
"This object contains a pointer to a row in the IPS AUTH MIB module that identifies the authentication method being used on this session, as communicated during the login phase.
"False indicates that iSCSI data PDU sequences may be transferred in any order.
True indicates that data PDU sequences must be transferred using continuously increasing offsets, except during error recovery."
"False indicates that iSCSI data PDUs within sequences may be in any order.
True indicates that data PDUs within sequences must be at continuously increasing addresses, with no gaps or overlay between PDUs.
"The level of error recovery negotiated between the initiator and the target.
Higher numbers represent more detailed recovery schemes.
REFERENCE "RFC 3720, Section 12.20,
"The value of SysUpTime on the most recent occasion at which any one or more of this session's counters suffered a discontinuity.
When a session is established, and this object is created, it is initialized to the current value of SysUpTime."
A list of general iSCSI traffic counters for each of the sessions present on the system."
{ iscsiSession 2 } iscsiSessionStatsEntry OBJECT TYPE SYNTAX
An entry (row) containing general iSCSI traffic counters for a particular session."
"The count of Command PDUs transferred on this session.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
The count of data octets that were transmitted by the local iSCSI node on this session.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
The count of data octets that were received by the local iSCSI node on this session.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
{ iscsiSessionStatsEntry 4 } iscsiSsnLCTxDataOctets OBJECT
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
A list of error counters for each of the sessions present on this system."
An entry (row) containing error counters for a particular session."
The count of PDUs that were received on the session and contained header or data digest errors.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
} iscsiSsnCxnTimeoutErrors OBJECT TYPE SYNTAX
The count of connections within this session that have been terminated due to timeout.
If this counter has suffered a discontinuity, the time of the last discontinuity is indicated in iscsiSsnDiscontinuityTime."
An entry (row) containing management information applicable to a particular connection.
"An arbitrary integer used to uniquely identify a particular connection of a particular session within an iSCSI instance present on the local system.
An agent should attempt to not reuse index values unless a reboot has occurred.
iSCSI connections are destroyed during a reboot; rows in this table are not persistent across reboots."
The iSCSI Connection ID for this connection."
The current state of this connection, from an iSCSI negotiation point of view.
Here are the states: login
The transport protocol connection has been established, but a valid iSCSI login response with the final bit set has not been sent or received.
A valid iSCSI login response with the final bit set has been sent or received.
A valid iSCSI logout command has been sent or received, but the transport protocol connection has not yet been closed."
The type of Internet Network Addresses contained in the corresponding instances of iscsiCxnLocalAddr and iscsiCxnRemoteAddr.
The value 'dns' is not allowed."
The local Internet Network Address, of the type specified by iscsiCxnAddrType, used by this connection."
{ iscsiConnectionAttributesEntry 5 } iscsiCxnProtocol OBJECT TYPE SYNTAX
"The transport protocol over which this connection is running."
The local transport protocol port used by this connection.
This object cannot have the value zero, since it represents an established connection."
The remote Internet Network Address, of the type specified by iscsiCxnAddrType, used by this connection."
The remote transport protocol port used by this connection.
This object cannot have the value zero, since it represents an established connection."
The maximum data payload size supported for command or data PDUs able to be received on this connection."
The maximum data payload size supported for command or data PDUs to be sent on this connection."
"This object identifies the iSCSI header digest scheme in use within this connection."
"This object identifies the iSCSI data digest scheme in use within this connection."
"This object indicates whether or not this connection is receiving markers in its incoming data stream.
iscsiConnectionAttributesEntry 14 } iscsiCxnSendMarker OBJECT TYPE SYNTAX
"This object indicates whether or not this connection is inserting markers in its outgoing data stream.
Active version number of the iSCSI specification negotiated on this connection."
iscsiTgtLastIntrFailureAddrType, iscsiTgtLastIntrFailureAddr } STATUS current DESCRIPTION "
Sent when a login is failed by a target.
To avoid sending an excessive number of notifications due to multiple errors counted, an SNMP agent implementing this notification SHOULD NOT send more than 3 notifications of this type in any 10 second time period."
To avoid sending an excessive number of notifications due to multiple errors counted, an SNMP agent implementing this notification SHOULD NOT send more than 3 notifications of this type in any 10 second time period."
To avoid sending an excessive number of notifications due to multiple errors counted, an SNMP agent implementing this notification SHOULD NOT send more than 3 notifications of this type in any 10 second time period."
A collection of objects providing information about iSCSI instances."
A collection of objects providing information about errors that have caused a session failure for an iSCSI instance."
A collection of objects providing information about the transport protocol endpoints of the local targets."
iscsiTgtPortalTag } STATUS current DESCRIPTION "
A collection of objects providing information about the transport protocol endpoints of the local targets."
An object providing information about the portal tags used by the local initiators."
iscsiNodeInitialR2T, iscsiNodeImmediateData, iscsiNodeMaxOutstandingR2T, iscsiNodeFirstBurstLength, iscsiNodeMaxBurstLength, iscsiNodeMaxConnections, iscsiNodeDataSequenceInOrder, iscsiNodeDataPDUInOrder, iscsiNodeDefaultTime2Wait, iscsiNodeDefaultTime2Retain, iscsiNodeErrorRecoveryLevel, iscsiNodeDiscontinuityTime, iscsiNodeStorageType } STATUS current DESCRIPTION
A collection of objects providing information about all logout events between remote initiators and local targets."
A collection of objects providing information about all remote initiators that are authorized to connect to local targets."
A collection of objects providing information about all local initiators."
A collection of objects providing information about all login attempts by local initiators to remote targets."
A collection of objects providing information about all logout events between local initiators and remote targets."
A collection of objects providing information about all remote targets that are initiators of the local system that they are authorized to access."
{ iscsiGroups 14 } iscsiSessionAttributesGroup OBJECT GROUP OBJECTS { iscsiSsnDirection, iscsiSsnInitiatorName, iscsiSsnTargetName, iscsiSsnTSIH, iscsiSsnISID, iscsiSsnInitiatorAlias, iscsiSsnTargetAlias, iscsiSsnInitialR2T, iscsiSsnImmediateData, iscsiSsnType, iscsiSsnMaxOutstandingR2T, iscsiSsnFirstBurstLength, iscsiSsnMaxBurstLength, iscsiSsnConnectionNumber, iscsiSsnAuthIdentity, iscsiSsnDataSequenceInOrder, iscsiSsnDataPDUInOrder, iscsiSsnErrorRecoveryLevel, iscsiSsnDiscontinuityTime } STATUS current DESCRIPTION
A collection of objects providing information about PDU traffic for each session."
A collection of objects providing information about octet traffic for each session using a Counter64 data type."
A collection of objects providing information about octet traffic for each session using a Counter32 data type."
A collection of objects providing information about connection errors for all sessions."
A collection of objects providing information about all connections used by all sessions."
A collection of notifications that indicate a login failure from a remote initiator to a local target."
A collection of notifications that indicate a login failure from a local initiator to a remote target."
A collection of notifications that indicate session failures occurring after login."
MODULE COMPLIANCE STATUS current DESCRIPTION "
Initial version of compliance statement based on initial version of this MIB module.
If an implementation can be both a target and an initiator, all groups are mandatory.
Conditionally mandatory groups depending on the ability   to support Counter64 data types and/or to provide counter   information to SNMPv1 applications.
"This group is mandatory for all iSCSI implementations that can support Counter64 data types."
This group is mandatory for all iSCSI implementations that provide information to SNMPv1 only applications; this includes agents that cannot support Counter64 data types."
Conditionally mandatory groups to be included with   the mandatory groups when the implementation has   iSCSI target facilities.
This group is mandatory for all iSCSI implementations that have iSCSI target facilities."
OBJECT iscsiPortalMaxRecvDataSegLength MIN ACCESS read only DESCRIPTION
"Write access is not required."
MIN ACCESS read only DESCRIPTION
"Write access is not required; an implementation may choose to allow this object to be set to 'volatile' or 'nonVolatile'."
This group is mandatory for all iSCSI implementations that have iSCSI target facilities."
"This group is mandatory for all iSCSI implementations that have iSCSI target facilities.
This group is mandatory for all iSCSI implementations that have iSCSI target facilities."
This group is mandatory for all iSCSI implementations that have iSCSI target facilities."
This group is mandatory for all iSCSI implementations that have iSCSI target facilities."
Conditionally mandatory groups to be included with   the mandatory groups when the implementation has   iSCSI initiator facilities.
This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
"This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
This group is mandatory for all iSCSI implementations that have iSCSI initiator facilities."
Only values 0 2 are defined at present."
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability: iscsiPortalAttributesTable, iscsiTgtPortalAttributesTable, and iscsiIntrPortalAttributesTable can be used to add or remove IP addresses to be used by iSCSI.
iscsiTgtAuthAttributesTable entries can be added or removed, to allow or disallow access to a target by an initiator.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
iscsiNodeAttributesTable, iscsiTargetAttributesTable, and iscsiTgtAuthorization can be used to glean information needed to make connections to the iSCSI targets this module represents.
However, it is the responsibility of the initiators and targets involved to authenticate each other to ensure that an inappropriately advertised or discovered initiator or target does not compromise their security.
These issues are discussed in [RFC3720].
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementors consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The IANA has assigned a MIB OID number under the mib 2 branch for the ISCSI MIB.
