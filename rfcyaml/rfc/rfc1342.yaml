- title: __initial_text__
  contents:
  - '      Representation of Non-ASCII Text in Internet Message Headers

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes an extension to the message format defined in\
    \ [1]\n   (known to the IETF Mail Extensions Working Group as \"RFC 1341\"), to\n\
    \   allow the representation of character sets other than ASCII in RFC\n   822\
    \ message headers.  The extensions described were designed to be\n   highly compatible\
    \ with existing Internet mail handling software, and\n   to be easily implemented\
    \ in mail readers that support RFC 1341.\n"
- title: Introduction
  contents:
  - "Introduction\n   RFC 1341 describes a mechanism for denoting textual body parts\
    \ which\n   are coded in various character sets, as well as methods for encoding\n\
    \   such body parts as sequences of printable ASCII characters.  This\n   memo\
    \ describes similar techniques to allow the encoding of non-ASCII\n   text in\
    \ various portions of a RFC 822 [2] message header, in a manner\n   which is unlikely\
    \ to confuse existing message handling software.\n   Like the encoding techniques\
    \ described in RFC 1341, the techniques\n   outlined here were designed to allow\
    \ the use of non-ASCII characters\n   in message headers in a way which is unlikely\
    \ to be disturbed by the\n   quirks of existing Internet mail handling programs.\
    \  In particular,\n   some mail relaying programs are known to (a) delete some\
    \ message\n   header fields while retaining others, (b) rearrange the order of\n\
    \   addresses in To or Cc fields, (c) rearrange the (vertical) order of\n   header\
    \ fields, and/or (d) \"wrap\" message headers at different places\n   than those\
    \ in the original message.  In addition, some mail reading\n   programs are known\
    \ to have difficulty correctly parsing message\n   headers which, while legal\
    \ according to RFC 822, make use of\n   backslash-quoting to \"hide\" special\
    \ characters such as \"<\", \",\", or\n   or which exploit other infrequently-used\
    \ features of that\n   specification.\n   While it is unfortunate that these programs\
    \ do not correctly\n   interpret RFC 822 headers, to \"break\" these programs\
    \ would cause\n   severe operational problems for the Internet mail system.  The\n\
    \   extensions described in this memo therefore do not rely on little-\n   used\
    \ features of RFC 822.  Instead, certain sequences of \"ordinary\"\n   printable\
    \ ASCII characters (which are assumed to be unlikely to\n   otherwise appear in\
    \ message headers) are reserved for use as encoded\n   data.  The characters used\
    \ in these encodings are restricted to those\n   which do not have special meanings\
    \ in the context in which the\n   encoded text appears.\n"
- title: Encodings
  contents:
  - "Encodings\n   An \"encoded-word\" is a sequence of printable ASCII characters\
    \ that\n   begins with \"=?\", ends with \"?=\", and has two \"?\"s in between.\
    \  It\n   specifies a character set and an encoding method, and also includes\n\
    \   the original text encoded as ASCII characters, according to the rules\n  \
    \ for that encoding method.\n   A mail composer that implements this specification\
    \ will provide a\n   means of inputing non-ASCII text in header fields, but will\
    \ translate\n   these fields (or appropriate portions of these fields) into encoded-\n\
    \   words before inserting them into the message header.\n   A mail reader that\
    \ implements this specification will recognize\n   encoded-words when they appear\
    \ in certain portions of the message\n   header.  Instead of displaying the encoded-word\
    \ \"as is\", it will\n   reverse the encoding and display the original text in\
    \ the designated\n   character set.\n   An \"encoded-word\" is more precisely\
    \ defined by the following EBNF\n   grammar, using the notation of RFC 822:\n\
    \   encoded-word = \"=\" \"?\" charset \"?\" encoding \"?\" encoded-text \"?\"\
    \ \"=\"\n   charset = token    ; legal charsets defined by RFC 1341\n   encoding\
    \ = token   ; Either \"B\" or \"Q\"\n   token = 1*<Any CHAR except SPACE, CTLs,\
    \ and tspecials>\n   tspecials = \"(\" / \")\" / \"<\" / \">\" / \"@\" / \",\"\
    \ / \";\" / \":\" / \"\\\" /\n               <\"> / \"/\" / \"[\" / \"]\" / \"\
    ?\" / \".\" / \"=\"\n   encoded-text = 1*<Any printable ASCII character other\
    \ than \"?\" or\n                  ; SPACE> (but see \"Use of encoded-words in\
    \ message\n                  ; headers\", below)\n   An encoded-word may not be\
    \ more than 75 characters long, including\n   charset, encoding, encoded-text,\
    \ and delimiters.  If it is desirable\n   to encode more text than will fit in\
    \ an encoded-word of 75\n   characters, multiple encoded-words (separated by SPACE\
    \ or newline)\n   may be used.  Message header lines that contain one or more\
    \ encoded-\n   words should be no more than 76 characters long.  NOTE: These\n\
    \   restrictions are included not only to ease interoperbility through\n   internetwork\
    \ mail gateways, but also to impose a limit on the amount\n   of lookahead a header\
    \ parser must employ (while looking for a final\n   ?= delimiter) before it can\
    \ decide whether a token is an encoded-word\n   or something else.\n   Initially,\
    \ the legal values for \"encoding\" are \"Q\" and \"B\".  These\n   encodings\
    \ are described below.  The \"Q\" encoding is recommended for\n   use with Latin\
    \ character sets, and the \"B\" encoding for all others.\n   Nevertheless, a mail\
    \ reader which claims to recognize encoded-words\n   MUST be able to accept either\
    \ encoding for any character set which it\n   supports.\n   Only a subset of the\
    \ printable ASCII characters may be used in\n   encoded-text.  The SPACE character\
    \ is not allowed, so that the\n   beginning and end of an encoded-word are obvious.\
    \  The \"?\" character\n   is used within an encoded-word to separate the various\
    \ portions of\n   the encoded-word from one another, and thus cannot appear in\
    \ the\n   encoded-text portion.  Other characters are also illegal in certain\n\
    \   contexts.  For example, an encoded-word in a \"phrase\" preceeding an\n  \
    \ address in a From header field may not contain any of the \"specials\"\n   defined\
    \ in RFC 822.  Finally, certain other characters are disallowed\n   in some contexts,\
    \ to ensure reliability for messages that pass\n   through internetwork mail gateways.\n\
    \   The \"B\" encoding automatically meets these requirements.  The \"Q\"\n  \
    \ encoding allows a wide range of printable characters to be used in\n   non-critical\
    \ locations in the message header (e.g., Subject), with\n   fewer characters available\
    \ for use in other locations.\n"
- title: The "B" encoding
  contents:
  - "The \"B\" encoding\n   The \"B\" encoding is identical to the \"BASE64\" encoding\
    \ defined by RFC\n   1341.\n"
- title: The "Q" encoding
  contents:
  - "The \"Q\" encoding\n   The \"Q\" encoding is similar to the \"Quoted-Printable\"\
    \ content-\n   transfer-encoding defined in RFC 1341.  It is designed to allow\
    \ text\n   containing mostly ASCII characters to be decipherable on an ASCII\n\
    \   terminal without decoding.\n   1.  Any 8-bit value may be represented by a\
    \ \"=\" followed by two\n       hexadecimal digits.  For example, if the character\
    \ set in use\n       were ISO-8859-1, the \"=\" character would thus be encoded\
    \ as\n       \"=3D\", and a SPACE by \"=20\".\n   2.  The 8-bit hexadecimal value\
    \ 20 (e.g., IS0-8859-1 SPACE) may be\n       represented as \"_\" (underscore,\
    \ ASCII 95.).  (This character may\n       not pass through some internetwork\
    \ mail gateways, but its use\n       will greatly enhance readability of \"Q\"\
    \ encoded data with mail\n       readers that do not support this encoding.) \
    \ Note that the \"_\"\n       always represents hexadecimal 20, even if the SPACE\
    \ character\n       occupies a different code position in the character set in\
    \ use.\n   3.  8-bit values which correspond to printable ASCII characters other\n\
    \       than \"=\", \"?\", \"_\" (underscore), and SPACE may be represented as\n\
    \       those characters.  (But see \"Use of encoded-words in message\n      \
    \ headers\", below).\n"
- title: Character sets
  contents:
  - "Character sets\n   In an encoded-word, the character set associated with the\
    \ unencoded\n   text is specified by a charset.  A charset can be any of the\n\
    \   character set names allowed in an RFC 1341 \"charset\" parameter of a\n  \
    \ \"text/plain\" body part.  (See section 7.1.1 of RFC 1341 for a list of\n  \
    \ valid charset parameters).\n   When there is a possibility of using more than\
    \ one character set to\n   represent the text in an encoded-word, and in the absence\
    \ of private\n   agreements between sender and recipients of a message, it is\n\
    \   recommended that members of the ISO-8859-* series be used in\n   preference\
    \ to other character sets.  Among the various ISO-8859-*\n   character sets, the\
    \ lowest-numbered set which contains all of the\n   required characters should\
    \ be used.\n"
- title: Use of encoded-words in message headers
  contents:
  - "Use of encoded-words in message headers\n   A sequence of one or more encoded-words\
    \ is used to represent non-\n   ASCII textual data within a header field.  An\
    \ encoded-word must be\n   separated from an adjacent encoded-word, \"word\",\
    \ \"text\", \"ctext\", or\n   \"special\" by a linear white-space character or\
    \ a newline.  When\n   displaying a particular header field\" (in the RFC 822\
    \ sense)\n   containing one or more encoded-words, an unencoded SPACE character\n\
    \   that immediately follows the encoded-word is not displayed.  A\n   newline\
    \ that immediately follows an encoded-word is not displayed\n   unless the encoded-word\
    \ is the last token in that \"field\".  (This is\n   to allow the use of multiple\
    \ encoded-words to represent long strings\n   of unencoded text, without having\
    \ to separate encoded-words where\n   spaces occur in the unencoded text.)\n \
    \  An encoded-word may appear in a message header or body part header\n   according\
    \ to the following rules:\n"
- title: '- An encoded-word may replace a "text" token (as defined by RFC 822) in:'
  contents:
  - "- An encoded-word may replace a \"text\" token (as defined by RFC 822) in:\n\
    \  (1) a Subject or Comments header field, (2) any extension message\n  header\
    \ field, (3) any user-defined message header field, or (4) any\n  RFC 1341 body\
    \ part header field (such as Content-Description) for\n  which the field body\
    \ contains only \"text\"s.\n"
- title: '- An encoded-word may appear within a comment delimited by "(" and ")",'
  contents:
  - "- An encoded-word may appear within a comment delimited by \"(\" and \")\",\n\
    \  i.e., wherever a \"ctext\" is allowed.  More precisely, the RFC 822 EBNF\n\
    \  definition for \"comment\" is amended as follows:\n  comment = \"(\" *(ctext\
    \ / quoted-pair / comment / encoded-word) \")\"\n  A \"Q\"-encoded encoded-word\
    \ which appears in a comment MUST NOT contain\n  the characters \"(\", \")\" or\
    \ \"\\\".\n"
- title: '- As a replacement for a "word" entity within a "phrase", for example,'
  contents:
  - "- As a replacement for a \"word\" entity within a \"phrase\", for example,\n\
    \  one that precedes an address in a From, To, or Cc header.  The EBNF\n  definition\
    \ for phrase from RFC 822 thus becomes:\n  phrase = 1*(encoded-word / word)\n\
    \  In this case the set of characters that may be used in a \"Q\"-encoded\n  encoded-word\
    \ is restricted to: <upper and lower case ASCII letters,\n  decimal digits, \"\
    !\", \"*\", \"+\", \"-\", \"/\", \"=\", and \"_\" (underscore,\n  ASCII 95.)>.\n\
    \  These are the ONLY locations where an encoded-word may appear.  In\n  particular,\
    \ an encoded-word MUST NOT appear in any portion of an\n  \"address\".  In addition,\
    \ an encoded-word MUST NOT be used in a\n  Received header field.\n  Whenever\
    \ such words appear in a header being displayed, an enlightened\n  mail reader\
    \ will decode the text and render it appropriately.\n  Only textual data (printable\
    \ and white space characters) should be\n  encoded using this scheme.  However,\
    \ since these encoding schemes\n  allow the encoding of arbitrary 8-bit values,\
    \ mail readers that\n  implement this decoding should also ensure that display\
    \ of the\n  decoded data on the recipient's terminal will not cause unwanted\n\
    \  side-effects.\n  Use of these methods to encode non-textual data (e.g., pictures\
    \ or\n  sounds) is not defined by this memo.  Use of encoded-words to\n  represent\
    \ strings of purely ASCII characters is allowed, but\n  discouraged.\n"
- title: Recognition of encoded-words in message headers.
  contents:
  - "Recognition of encoded-words in message headers.\n   An encoded-word may be distinguished\
    \ from an ordinary \"word\", \"text\",\n   or \"ctext\", as follows: An encoded-word\
    \ begins with \"=?\", ends with\n   \"?=\", contains exactly four \"?\" characters\
    \ including the delimiters,\n   and is followed by a SPACE or newline.  If the\
    \ \"word\", \"text\", or\n   \"ctext\" does not meet the above tests, it should\
    \ be displayed as it\n   appears in the message header.\n   If the mail reader\
    \ does not support the character set used, it may\n   either display the encoded-word\
    \ as ordinary text (i.e., as it appears\n   in the header), or it may substitute\
    \ an appropriate message\n   indicating that the decoded text could not be displayed.\n"
- title: Conformance
  contents:
  - "Conformance\n   A mail composing program claiming compliance with this specification\n\
    \   MUST ensure that any string of printable ASCII characters in a\n   message\
    \ header that begins with \"=?\" and ends with \"?=\" be a valid\n   encoded-word.\n\
    \   A mail reading program claiming compliance with this specification\n   must\
    \ be able to distinguish encoded-words from \"text\", \"ctext\", or\n   \"word\"\
    s anytime they appear in appropriate places in message headers.\n   The program\
    \ must be able to display unencoded text if the character\n   set is \"US-ASCII\"\
    .  For the ISO-8859-* character sets, the mail\n   reading program must at least\
    \ be able to display the characters which\n   are also in the ASCII set.\n"
- title: Examples
  contents:
  - "Examples\n   From: =?US-ASCII?Q?Keith_Moore?= <moore@cs.utk.edu>\n   To: =?ISO-8859-1?Q?Keld_J=F8rn_Simonsen?=\
    \ <keld@dkuug.dk>\n   CC: =?ISO-8859-1?Q?Andr=E9_?= Pirard <PIRARD@vm1.ulg.ac.be>\n\
    \   Subject: =?ISO-8859-1?B?SWYgeW91IGNhbiByZWFkIHRoaXMgeW8=?=\n    =?ISO-8859-2?B?dSB1bmRlcnN0YW5kIHRoZSBleGFtcGxlLg==?=\n\
    \   From: =?ISO-8859-1?Q?Olle_J=E4rnefors?= <ojarnef@admin.kth.se>\n   To: ietf-822@dimacs.rutgers.edu,\
    \ ojarnef@admin.kth.se\n   Subject: Time for ISO 10646?\n   To: Dave Crocker <dcrocker@mordor.stanford.edu>\n\
    \   Cc: ietf-822@dimacs.rutgers.edu, paf@comsol.se\n   From: =?ISO-8859-1?Q?Patrik_F=E4ltstr=F6m?=\
    \ <paf@nada.kth.se>\n   Subject: Re: RFC-HDR care and feeding\n   From: Nathaniel\
    \ Borenstein <nsb@thumper.bellcore.com>\n           (=?iso-8859-8?b?7eXs+SDv4SDp7Oj08A==?=)\n\
    \   To: Greg Vaudreuil <gvaudre@NRI.Reston.VA.US>, Ned Freed\n   <ned@innosoft.com>,\n\
    \           Keith Moore <moore@cs.utk.edu>\n   Subject: Test of new header generator\n\
    \   MIME-Version: 1.0\n   Content-type: text/plain; charset=ISO-8859-1\n"
- title: References
  contents:
  - "References\n   [1] Borenstein N., and N. Freed, \"MIME (Multipurpose Internet\
    \ Mail\n       Extensions):  Mechanisms for Specifying and Describing the Format\n\
    \       of Internet Message Bodies\", RFC 1341, Bellcore, Innosoft,\n       June\
    \ 1992.\n   [2] Crocker, D., \"Standard for the Format of ARPA Internet Text\n\
    \       Messages\", RFC 822, UDEL, August 1982.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Keith Moore\n   University of Tennessee\n   107 Ayres Hall\n\
    \   Knoxville TN 37996-1301\n   EMail: moore@cs.utk.edu\n"
