- title: __initial_text__
  contents:
  - '  Integration of Real-time Services in an IP-ATM Network Architecture

    '
- title: Status of the Memo
  contents:
  - "Status of the Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind. Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The IETF is currently developing an integrated service model which\
    \ is\n   designed to support real-time services on the Internet.\n   Concurrently,\
    \ the ATM Forum is developing Asynchronous Transfer Mode\n   networking which\
    \ similarly provides real-time networking support. The\n   use of ATM in the Internet\
    \ as a link layer protocol is already\n   occurring, and both the IETF and the\
    \ ATM Forum are producing\n   specifications for IP over ATM. The purpose of this\
    \ paper is to\n   provide a clear statement of what issues need to be addressed\
    \ in\n   interfacing the IP integrated services environment with an ATM\n   service\
    \ environment so as to create a seamless interface between the\n   two in support\
    \ of end users desiring real-time networking services.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.0 Introduction                                      \
    \          2\n   2.0 Problem Space Overview                                  \
    \    3\n   2.1 Initial Assumptions                                         3\n\
    \   2.2 Topologies Under Consideration                              4\n   2.3\
    \ Providing QoS in IP over  ATM - a walk-though               5\n   3.0 Service\
    \ Model Issues                                        6\n   3.1 Traffic Characterization\
    \                                    7\n   3.2 QoS Characterization          \
    \                              8\n   4.0 Resource Reservation Styles         \
    \                       10\n   4.1 RSVP                                      \
    \                 10\n   4.2 ST-II                                           \
    \           13\n   4.3 Mapping IP flows to ATM Connections                   \
    \     15\n   5.0 End System Issues                                          16\n\
    \   6.0 Routing Issues                                             16\n   6.1\
    \ Multicast routing                                          17\n   6.2 QoS Routing\
    \                                                17\n   6.3 Mobile Routing   \
    \                                          18\n   7.0 Security Issues        \
    \                                    19\n   8.0 Future Directions            \
    \                              20\n   9.0 References                         \
    \                        22\n   10.0 Authors' Addresses                      \
    \                  24\n"
- title: 1.0 Introduction
  contents:
  - "1.0 Introduction\n   The traditional network service on the Internet is best-effort\n\
    \   datagram transmission. In this service, packets from a source are\n   sent\
    \ to a destination, with no guarantee of delivery. For those\n   applications\
    \ that require a guarantee of delivery, the TCP protocol\n   will trade packet\
    \ delay for correct reception by retransmitting those\n   packets that fail to\
    \ reach the destination. For traditional\n   computer-communication applications\
    \ such as FTP and Telnet in which\n   correct delivery is more important than\
    \ timeliness, this service is\n   satisfactory. However, a new class of application\
    \ which uses multiple\n   media (voice, video, and computer data) has begun to\
    \ appear on the\n   Internet. Examples of this class of application are video\n\
    \   teleconferencing, video-on-demand, and distributed simulation. While\n   these\
    \ applications can operate to some extent using best-effort\n   delivery, trading\
    \ packet delay for correct reception is not an\n   acceptable trade-off. Operating\
    \ in the traditional mode for these\n   applications results in reduced quality\
    \ of the received information\n   and, potentially, inefficient use of bandwidth.\
    \ To remedy this\n   problem the IETF is developing a real-time service environment\
    \ in\n   which multiple classes of service are offered [6]. This environment\n\
    \   will greatly extend the existing best-effort service model to meet\n   the\
    \ needs of multimedia applications with real-time constraints.\n   At the same\
    \ time that this effort is underway in the IETF,\n   Asynchronous Transfer Mode\
    \ (ATM) is being developed, initially as a\n   replacement for the current telephone\
    \ network protocols, but more\n   recently as a link-layer protocol for computer\
    \ communications. As it\n   was developed from the beginning with telephone voice\
    \ applications in\n   mind, a real-time service environment is an integral part\
    \ of the\n   protocol. With the approval of UNI 3.1 by the ATM Forum, the ATM\n\
    \   standards now have several categories of service. Given the wide\n   acceptance\
    \ of ATM by the long-line carriers, the use of ATM in the\n   Internet is, if\
    \ not guaranteed, highly likely. The question now\n   becomes, how can we successfully\
    \ interface between the real-time\n   services offered by ATM and the new,integrated\
    \ service environment\n   soon to be available in the IP protocol suite. The current\
    \ IP over\n   ATM standards assume no real-time IP protocols. It is the purpose\
    \ of\n   this RFC to clearly delineate what the issues are in integrating\n  \
    \ real-time services in an IP-over-ATM network [10,15,19,20,21].\n   In the IP-over-ATM\
    \ environment, as in many others, multicast routing\n   adds an additional set\
    \ of challenges. While the major focus of this\n   paper is quality of service\
    \ (QoS) issues, it is unwise at best to\n   ignore multicast when considering\
    \ these issues, especially since so\n   many of the applications that motivate\
    \ the provision of real time QoS\n   also require efficient multicast support.\
    \ We will therefore try to\n   keep considerations of multicast in the foreground\
    \ in the following\n   discussion.\n   One of the primary motivations for this\
    \ document is a belief by the\n   authors that ATM should, if possible, be used\
    \ as more than a leased\n   line replacement. That is to say, while it is possible\
    \ for the\n   Internet to be overlaid on constant bit rate (CBR), permanent virtual\n\
    \   circuits (PVCs), thus reducing IP over ATM to a previously solved\n   problem,\
    \ we believe that this is unlikely to be the most efficient\n   way to use ATM\
    \ services as they are offered by carriers or as they\n   appear in LANs. For\
    \ example, a carrier offering a CBR service must\n   assume that the peak bit\
    \ rate can be used continuously with no\n   degradation in quality and so resources\
    \ must be allocated to the\n   connection to provide that service, even if the\
    \ peak rate is in fact\n   rarely used. This is likely to make a CBR service more\
    \ expensive that\n   a variable bit rate service of the same peak capacity.  Another\
    \ way\n   to view this is that the new IP service model will allow us to\n   associate\
    \ information about the bandwidth requirements of\n   applications with individual\
    \ flows; surely it is not wise to discard\n   this information when we request\
    \ a service from an ATM subnet.\n   While we believe that there is a range of\
    \ capabilities in ATM\n   networks that can be effectively used by a real-time\
    \ Internet, we do\n   not believe that just because ATM has a capability, the\
    \ Internet must\n   use it. Thus, our goal in this RFC is to begin to explore\
    \ how an\n   Internet with real time service capability might make most effective\n\
    \   use of ATM networks.  Since there are a number of problems to be\n   resolved\
    \ to achieve this effective use, our major goal at this point\n   is to describe\
    \ the scope of the problems that need to be addressed.\n"
- title: 2.0 Problem Space Overview
  contents:
  - "2.0 Problem Space Overview\n   In this section we aim to describe in high level\
    \ terms the scope of\n   the problem that will be explored in more detail in later\
    \ sections.\n"
- title: 2.1 Initial Assumptions
  contents:
  - "2.1 Initial Assumptions\n   We begin by assuming that an Integrated Services\
    \ Internet, i.e., an\n   Internet with a range of qualities of service to support\
    \ both real-\n   time and non-real-time applications, will eventually happen.\
    \ A number\n   of working groups are trying to make this happen, notably\n   *\
    \ the Integrated Services group (int-serv), which is working to define\n     a\
    \ new IP service model, including a set of services suited to a\n     range of\
    \ real-time applications;\n   * the Resource reservation Setup Protocol group\
    \ (rsvp), which is\n     defining a resource reservation protocol [7] by which\
    \ the\n     appropriate service for an application can be requested from the\n\
    \     network;\n   * the Internet Streams Protocol V2 group (ST-II), which is\
    \ updating\n     [27], a stream-oriented internet protocol that provides a range\
    \ of\n     service qualities.\n   In addition, the IETF IP over ATM working group\
    \ and the ATM Forum\n   Multiprotocol over ATM group are working to define a model\
    \ for\n   protocols to make use of the ATM layer.\n   Since these groups have\
    \ not yet generated standards, we will need to\n   do some amount of extrapolation\
    \ to predict the problems that may\n   arise for IP over ATM. We also assume that\
    \ the standards being\n   developed in the ATM Forum will largely determine the\
    \ service model\n   for ATM. Again, some extrapolation may be needed. Given these\n\
    \   assumptions, this paper aims to explore ways in which a future\n   Integrated\
    \ Services Internet might make effective use of ATM as it\n   seems likely to\
    \ be deployed.\n"
- title: 2.2 Topologies Under Consideration
  contents:
  - "2.2 Topologies Under Consideration\n   Figure 1 shows a generic internetwork\
    \ that includes ATM and non-ATM\n   subnetworks. This paper aims to outline the\
    \ problems that must be\n   addressed to enable suitable quality of service to\
    \ be provided end-\n   to-end across such a network. The problem space, therefore,\
    \ includes\n   * communication across an 'ATM-only' network between two hosts\n\
    \     directly connected to the ATM network;\n   * communication between ATM-connected\
    \ hosts which involves traversing\n     some non-ATM subnets;\n   * communication\
    \ between a host on a non-ATM subnet and a host directly\n     connected to ATM;\n\
    \   * communication between two hosts, neither of which has a direct ATM\n   \
    \  connection, but which may make use of one or more ATM networks for\n     some\
    \ part of the path.\n                     [H]\n                      |       \
    \                    [H]\n              ________|________________________    |\n\
    \              |                                |   |\n      ________|__     \
    \                   ______|___|____\n      |         |                       \
    \ |             |\n      |  ATM   [R]                      [R]  ATM       |\n\
    \      |  Cloud  |                        |   Cloud     |___[H]\n      |     \
    \    |     Non-ATM Internet   |             |\n      |         |             \
    \          [R]            |\n      |________[R]                       |_____________|\n\
    \       |      |                                |\n       |      |           \
    \                     |\n      [H]     |________________________________|\n  \
    \                                      |\n                                   \
    \     |\n                                       [H]\n   [H] = Host\n   [R] = Router\n\
    \                              Figure 1\n   In the last case, the entities connected\
    \ to the ATM network are IP\n   routers, and it is their job to manage the QoS\
    \ provided by the ATM\n   network(s) in such a way that the desired end-to-end\
    \ QoS is provided\n   to the hosts. While we wish to describe the problem space\
    \ in a way\n   that covers all of these scenarios, the last is perhaps the most\n\
    \   general, so we will use it for most illustrative purposes. In\n   particular,\
    \ we are explicitly not interested in ways of providing QoS\n   that are applicable\
    \ only to a subset of these situations. We claim\n   that addressing these four\
    \ situations is sufficiently general to\n   cover other situations such as those\
    \ in which several ATM and non-ATM\n   networks are traversed.\n   It is worth\
    \ mentioning that the ATM networks in this case might be\n   local or wide area,\
    \ private or public. In some cases, this\n   distinction may be significant, e.g.,\
    \ because there may be economic\n   implications to a particular approach to providing\
    \ QoS.\n"
- title: 2.3 Providing QoS in IP over ATM - a walk-through
  contents:
  - "2.3 Providing QoS in IP over ATM - a walk-through\n   To motivate the following\
    \ discussion, this section walks through an\n   example of what might happen when\
    \ an application with a certain set\n   of QoS needs starts up. For this example,\
    \ we will use the fourth case\n   mentioned above, i.e., two hosts connected to\
    \ non-ATM networks,\n   making use of an ATM backbone.\n   A generic discussion\
    \ of this situation is made difficult by the fact\n   that the reservation of\
    \ resources in the Internet may be sender or\n   receiver initiated, depending\
    \ on the specifics of the setup protocol.\n   We will attempt to gloss over this\
    \ distinction for now, although we\n   will return to it in Section 4. We will\
    \ assume a unicast application\n   and that the traffic characteristics and the\
    \ QoS requirements (such\n   as delay, loss, throughput) of the application are\
    \ known to at least\n   one host.  That host launches a request for the desired\
    \ QoS and a\n   description of the expected traffic into the network; at some\
    \ point\n   this request hits a router at the edge of the ATM network. The router\n\
    \   must examine the request and decide if it can use an existing\n   connection\
    \ over the ATM network to honor the request or whether it\n   must establish a\
    \ new connection. In the latter case, it must use the\n   QoS and traffic characterizations\
    \ to decide what sort of ATM\n   connection to open and to describe the desired\
    \ service to the ATM\n   network. It must also decide where to open the connection\
    \ to. Once\n   the connection is opened, the request is forwarded across the ATM\n\
    \   network to the exit router and then proceeds across the non-ATM part\n   of\
    \ the network by the normal means.\n   We can see from the above description that\
    \ there are several sets of\n   issues to be discussed:\n   * How does the IP\
    \ service model, with certain service classes and\n     associated styles of traffic\
    \ and QoS characterization, map onto\n     the ATM service model?\n   * How does\
    \ the IP reservation model (whatever it turns out to be) map\n     onto ATM signalling?\n\
    \   * How does IP over ATM routing work when service quality is added to\n   \
    \  the picture?\n   These issues will be discussed in the following sections.\n"
- title: 3.0 Service Model Issues
  contents:
  - "3.0 Service Model Issues\n   There are several significant differences between\
    \ the ways in which\n   IP and ATM will provide QoS.  When IP commits to provide\
    \ a certain\n   QoS to an application according to the Internet service model,\
    \ it\n   must be able to request an appropriate QoS from the ATM network using\n\
    \   the ATM service model. Since these service models are by no means the\n  \
    \ same, a potentially complex mapping must be performed for the IP\n   layer to\
    \ meet its commitments.  The details of the differences\n   between ATM and IP\
    \ and the problems presented by these differences\n   are described below.\n \
    \  We may think of a real-time service model as containing the following\n   components:\n\
    \   * a way to characterize traffic (sometimes called the Tspec);\n   * a way\
    \ to characterize the desired quality of service (the Rspec).\n   We label these\
    \ components as traffic characterization and QoS\n   characterization.  Each of\
    \ these components is discussed in turn in\n   the following sections.\n   As\
    \ well as these aspects of the service model, both ATM and IP will\n   have a\
    \ number of mechanisms by which the model is implemented. The\n   mechanisms include\
    \ admission control, policing, and packet\n   scheduling. A particularly important\
    \ mechanism is the one by which\n   end-nodes communicate their QoS needs and\
    \ traffic characteristics to\n   the network, and the network communicates admission\
    \ control decisions\n   to the end-nodes. This is referred to as resource reservation\
    \ or\n   signalling, and is the subject of Section 4. In fact, it seems to be\n\
    \   the only mechanism where significant issues of IP/ATM integration\n   arise.\
    \ The details of admission control, policing and packet\n   scheduling are largely\
    \ internal to a single network element and we do\n   not foresee significant problems\
    \ caused by the integration of IP and\n   ATM. For example, while there may be\
    \ plenty of challenges in\n   designing effective approaches to admission control\
    \ for both IP and\n   ATM, it is not apparent that there are any special challenges\
    \ for the\n   IP over ATM environment. As the walk-through of Section 2.3\n  \
    \ described, a reservation request from a host would at some point\n   encounter\
    \ the edge of the ATM cloud. At this point, either a new\n   connection needs\
    \ to be set up across the ATM cloud, or the router can\n   decide to carry the\
    \ requested traffic over an existing virtual\n   circuit. If the ATM cloud cannot\
    \ create a new connection as\n   requested, this would presumably result in an\
    \ admission control\n   failure which would cause the router to deny the reservation\
    \ request.\n"
- title: 3.1 Traffic Characterization
  contents:
  - "3.1 Traffic Characterization\n   The traffic characterization provided by an\
    \ application or user is\n   used by the network to make decisions about how to\
    \ provide the\n   desired quality of service to this application and to assess\
    \ the\n   effect the new flow will have on the service provided to existing\n\
    \   flows. Clearly this information feeds into the admission control\n   decision\
    \ process.\n   In the Internet community, it is assumed that traffic will in general\n\
    \   be bursty and that bursty traffic can be characterized by a `token\n   bucket'.\
    \  While ATM does not expect all traffic to be bursty (the\n   Continuous Bit\
    \ Rate class being defined specifically for non-bursty\n   traffic), it uses an\
    \ essentially equivalent formulation for the\n   characterization of traffic that\
    \ is bursty, referred to as the\n   Generic Cell Rate Algorithm (GCRA). However,\
    \ ATM in some classes also\n   requires specification of peak cell rate, whereas\
    \ peak rates are not\n   currently included in the IP traffic characterizations.\
    \ It may be\n   possible to use incoming interface speeds to determine an approximate\n\
    \   peak rate.\n   One of the functions that must be performed in order to carry\
    \ IP\n   traffic over an ATM network is therefore a mapping from the\n   characterization\
    \ of the traffic as supplied to IP to a\n   characterization that is acceptable\
    \ for ATM. While the similarity of\n   the two characterizations suggests that\
    \ this is straightforward,\n   there is considerable flexibility in the mapping\
    \ of parameters from\n   IP to ATM. As an extreme example, a router at the edge\
    \ of an ATM\n   cloud that expects to receive bursts of IP packets on a non-ATM\n\
    \   interface, with the bursts described by some token bucket parameters,\n  \
    \ could actually inject ATM cells at a constant rate into the ATM\n   network.\
    \ This may be achieved without significant buffering if the\n   ATM link speed\
    \ is faster than the point-to-point link speed;\n   alternatively, it could be\
    \ achieved by buffering out the burstiness\n   of the arriving traffic. It seems\
    \ more reasonable to map an IP flow\n   (or a group of flows) with variable bandwidth\
    \ requirements onto an\n   ATM connection that accommodates variable bit rate\
    \ traffic.\n   Determining how best to map the IP traffic to ATM connections in\
    \ this\n   way is an area that warrants investigation.\n   A potential complication\
    \ to this process is the fact that the token\n   bucket parameters are specified\
    \ at the edge of the IP network, but\n   that the specification of the GCRA parameters\
    \ at the entry to an ATM\n   network will frequently happen at a router in the\
    \ middle of an IP\n   network. Thus the actual burstiness that is encountered\
    \ at the router\n   may differ from that described by the IP token bucket parameters,\
    \ as\n   the burstiness changes as the traffic traverses a network. The\n   seriousness\
    \ of this problem needs to be understood to permit\n   efficient resource utilization.\n"
- title: 3.2 QoS Characterization
  contents:
  - "3.2 QoS Characterization\n   In addition to specifying the traffic that they\
    \ will submit to the\n   network, applications must specify the QoS they require\
    \ from the\n   network. Since the goal is to carry IP efficiently over ATM networks,\n\
    \   it is necessary to establish mechanisms by which QoS specifications\n   for\
    \ IP traffic can be translated into QoS specifications that are\n   meaningful\
    \ for an ATM network.\n   The proposed method of QoS specification for the Internet\
    \ is to\n   specify a `service class' and some set of parameters, depending on\n\
    \   the service class. The currently proposed service classes are\n   *  guaranteed,\
    \ which provides a mathematically guaranteed delay\n      bound [23];\n   *  predictive\
    \ delay, which provides a probabilistic delay bound\n      [24];and\n   *  controlled\
    \ delay, which merely tries to provide several levels of\n      delay which applications\
    \ may choose between [25].\n   These are in addition to the existing `best-effort'\
    \ class. More IP\n   service classes are expected in the future. ATM has five\
    \ service\n   classes:\n   *  CBR (constant bit rate), which emulates a leased\
    \ line, providing\n      very tightly constrained delay and designed for applications\
    \ which\n      can use a fixed bandwidth pipe;\n   *  VBR (variable bit rate)-real-time\
    \ which attempts to constrain delay\n      for applications whose bandwidth requirements\
    \ vary;\n   *  VBR-non-real-time, intended for variable bandwidth applications\n\
    \      without tight delay constraints;\n   *  UBR (unspecified bit rate) which\
    \ most closely approximates the best\n      effort service of traditional IP;\n\
    \   *  ABR (available bit rate) which uses a complex feedback mechanism\n    \
    \  to control loss.\n   Each class requires some associated parameters to be specified,\
    \ e.g.,\n   CBR requires a peak rate. Observe that these classes are by no means\n\
    \   in direct correspondence with the IP classes. In some cases, ATM\n   classes\
    \ require parameters which are not provided at the IP level,\n   such as loss\
    \ rate, to be specified. It may be necessary to assume\n   reasonable default\
    \ values in these cases.\n   The major problem here is this: given traffic in\
    \ a particular IP\n   service class with certain QoS parameters, how should it\
    \ be sent\n   across an ATM network in such a way that it both meets its service\n\
    \   commitments and makes efficient use of the ATM network's resources?\n   For\
    \ example, it would be possible to transport any class of IP\n   traffic over\
    \ an ATM network using the constant bit rate (CBR) ATM\n   class, thus using the\
    \ ATM network like a point-to-point link. This\n   would allow IP to meet its\
    \ service commitments, but would be an\n   inefficient use of network resources\
    \ in any case where the IP traffic\n   was at all bursty (which is likely to be\
    \ most cases). A more\n   reasonable approach might be to map all IP traffic into\
    \ a variable\n   bit rate (VBR) class; certainly this class has the flexibility\
    \ to\n   accommodate bursty IP traffic more efficiently than CBR.\n   At present,\
    \ the IETF is not working on any service classes in which\n   loss rate is considered\
    \ as part of the QoS specification. As long as\n   that is the case, the fact\
    \ that ATM allows target loss rates to be\n   specified is essentially not an\
    \ issue. However, we may certainly\n   expect that as the IP service model is\
    \ further refined, service\n   classes that include specifications of loss may\
    \ be defined. At this\n   point, it will be necessary to be able to map between\
    \ loss rates at\n   the IP level and loss rates at the ATM level. It has already\
    \ been\n   shown that relatively small loss rates in an ATM network can\n   translate\
    \ to high loss rates in IP due to the fact that each lost\n   cell can cause the\
    \ loss of an entire IP packet. Schemes to mitigate\n   this problem, which include\
    \ the proposed approach to implementing the\n   ABR class, as well as other solutions\
    \ [22], have been proposed. This\n   is clearly likely to be an important issue\
    \ in the future.\n"
- title: 4.0 Resource Reservation Styles
  contents:
  - "4.0 Resource Reservation Styles\n   ATM uses a signalling protocol (Q.2931) both\
    \ to establish virtual\n   connections and to allocate resources to those connections.\
    \ It has\n   many of the characteristics of a 'conventional' signalling protocol,\n\
    \   such as being sender-driven and relying on hard-state in switches to\n   maintain\
    \ connections. Some of the key characteristics are listed in\n   the table below.\
    \ In the current standards, the QoS associated with a\n   connection at setup\
    \ time cannot be changed subsequently (i.e., it is\n   static); in a unicast connection,\
    \ resources are allocated in both\n   directions along the path, while in the\
    \ multicast case, they are\n   allocated only from the sender to the receivers.\
    \ In this case, all\n   senders receive the same QoS.\n   Two protocols have been\
    \ proposed for resource reservation in IP. The\n   first (chronologically) is\
    \ ST-II, the other is RSVP. Each of these,\n   and its relationship to ATM, is\
    \ discussed in the following sections.\n"
- title: 4.1 RSVP
  contents:
  - "4.1 RSVP\n   IP has traditionally provided connectionless service. To support\n\
    \   real-time services in a connectionless world, RSVP has been proposed\n   to\
    \ enable network resources to be reserved for a connectionless data\n   stream.\
    \ ATM, on the other hand, provides a connection-oriented\n   service, where resource\
    \ reservations are made at connection setup\n   time, using a user-network interface\
    \ (UNI) and a network-network\n   interface (NNI) signalling protocol.\n     -----------------------------------------------------------------\n\
    \     |   Category   |      RSVP            |       ATM (UNI 3.0)     |\n    \
    \ -----------------------------------------------------------------\n     |  \
    \            |                      |                         |\n     | Orientation\
    \  | Receiver-based       |       Sender-based      |\n     |              | \
    \                     |                         |\n      ----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |     State    |      Soft state      |       Hard state        |\n     |  \
    \            |  (refresh/time-out)  |   (explicit delete)     |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |QoS SetupTime |   Separate from      |    Concurrent with      |\n     |  \
    \            | route establishment  |   route establishment   |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |QoS Changes?  | Dynamic QoS          |       Static QoS        |\n     |  \
    \            |                      |  (Fixed at setup time)  |\n     -----------------------------------------------------------------\n\
    \     |              |                      | Bidirectional allocation|\n    \
    \ |Directionality|  Unidirectional      |  for unicast            |\n     |  \
    \            |resource allocation   |Unidirectional allocation|\n     |      \
    \        |                      |  for multicast          |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |Heterogeneity |   Receiver           |    Uniform QoS to       |\n     |  \
    \            |  heterogeneity       |    all receivers        |\n     -----------------------------------------------------------------\n\
    \   The principles used in the design of RSVP differ from those of ATM in\n  \
    \ the following respects:\n   *  Resource reservations in IP hosts and routers\
    \ are represented by\n      soft state, i.e., reservations are not permanent,\
    \ but time out\n      after some period. Reservations must be refreshed to prevent\n\
    \      time-out, and may also be explicitly deleted. In ATM, resources are\n \
    \     reserved for the duration of a connection, which must be explicitly\n  \
    \    and reliably deleted.\n   *  The soft state approach of RSVP allows the QoS\
    \ reserved for a flow\n      to be changed at any time, whereas ATM connections\
    \ have a static\n      QoS that is fixed at setup time.\n   *  RSVP is a simplex\
    \ protocol, i.e., resources are reserved in one\n      direction only. In ATM,\
    \ connections (and associated reservations)\n      are bi-directional in point-to-point\
    \ calls and uni-directional in\n      point-to-multipoint calls.\n   *  Resource\
    \ reservation is receiver-initiated in RSVP. In ATM,\n      resources are reserved\
    \ by the end system setting up the connection.\n      In point-to-multipoint calls,\
    \ connection setup (and hence resource\n      reservation) must be done by the\
    \ sender.\n   *  RSVP has explicit support for sessions containing multiple senders,\n\
    \      namely the ability to select a subset of senders,  and to\n      dynamically\
    \ switch between senders. No such support is provided\n      by ATM.\n   *  RSVP\
    \ has been designed independently of other architectural\n      components, in\
    \ particular routing. Moreover, route setup and\n      resource reservation are\
    \ done at different times.  In ATM, resource\n      reservation and route setup\
    \ are done at the same time (connection\n      setup time).\n   The differences\
    \ between RSVP and ATM state establishment, as\n   described above, raise numerous\
    \ problems. For example, since point-\n   to-point connections are bidirectional\
    \ in ATM, and since reservations\n   can be made in both directions, receiver-initiated\
    \ resource\n   reservations in RSVP can be simulated in ATM by having the receiver\n\
    \   set up the connection and reserve resources in the backward direction\n  \
    \ only.  However, this is potentially wasteful of connection resources\n   since\
    \ connections are only ever used to transfer data in one\n   direction even though\
    \ communication between the two parties may be\n   bidirectional. One option is\
    \ to use a `point-to-multipoint' ATM\n   connection with only one receiver. Of\
    \ course, the fact that the RSVP\n   reservation request is made by the receiver(s)\
    \ means that this\n   request must be somehow communicated to the sender on the\
    \ ATM\n   network. This is somewhat analogous to the receiver-oriented join\n\
    \   operation of IP multicast and the problems of implementing it over\n   ATM,\
    \ as discussed in Section 6. In general, the efficiency of any\n   proposed connection\
    \ management scheme needs to be investigated in\n   both unicast and multicast\
    \ contexts for a range of application\n   requirements, especially at a large\
    \ scale.\n   The use by RSVP of `soft state' as opposed to explicit connections\n\
    \   means that routers at the ATM network's edges need to manage the\n   opening\
    \ and closing of ATM connections when RSVP reservations are\n   made and released\
    \ (or time out).  The optimal scheme for connection\n   setup and tear-down will\
    \ depend on the cost of setting up a\n   connection versus the cost of keeping\
    \ the connection open for\n   possible future use by another stream, and is likely\
    \ to be service\n   class-dependent. For example, connections may be left open\
    \ for reuse\n   by best-effort traffic (subject to sufficient connections being\n\
    \   available), since no resources are explicitly reserved. On the other\n   hand,\
    \ connections supporting the real-time service classes are likely\n   to be expensive\
    \ to leave open since resources may be allocated even\n   when the connection\
    \ is idle. Again, the cost incurred will depend on\n   the class. For example,\
    \ the cost of an open, idle `guaranteed' QoS\n   connection is likely to be significantly\
    \ more expensive than a\n   connection providing predictive or controlled delay\
    \ service. Note\n   that connections can be reused for traffic of the same class\
    \ with\n   compatible QoS requirements, and that it may sometimes be possible\
    \ to\n   use a `higher quality' class to substitute for a lower quality one.\n\
    \   Another characteristic of RSVP which presents problems for ATM is the\n  \
    \ use of PATH messages to convey information to receivers before any\n   reservation\
    \ is made. This works in IP because routing is performed\n   independently of\
    \ reservation. Delivery of PATH messages across an ATM\n   network is therefore\
    \ likely to require a mechanism for setting up\n   connections without reservations\
    \ being made. The connection also\n   needs to be of sufficient quality to deliver\
    \ PATH messages fairly\n   reliably; in some circumstances, a low quality best\
    \ effort service\n   may be inadequate for this task. A related issue is the problem\
    \ of\n   advertising services prior to reservations. The OPWA model (one pass\n\
    \   with advertising) requires network elements to advertise the QoS that\n  \
    \ they are able to provide so that receivers can decide what level of\n   reservation\
    \ to request. Since these advertisements may be made prior\n   to any resources\
    \ having been reserved in the ATM network, it is not\n   clear how to make meaningful\
    \ advertisements of the QoS that might be\n   provided across the ATM cloud.\n\
    \   Finally, the multiparty model of communication is substantially\n   different\
    \ in  RSVP and ATM. Emulating RSVP receiver-initiation using\n   ATM point-to-multipoint\
    \ connections is likely to cause severe scaling\n   problems as the number of\
    \ receivers becomes large. Also, some\n   functions of RSVP are not currently\
    \ provided by ATM. For example,\n   there is no support for different receiver\
    \ requirements and\n   capabilities-all receivers in a session receive the same\
    \ QoS, which\n   is fixed at the time the first receiver is added to the multicast\n\
    \   tree. It is likely that ATM support for multi-party sessions will be\n   enhanced\
    \ in later versions of the standards. It is necessary for such\n   support to\
    \ evolve in a manner compatible with RSVP and IP multicast\n   routing protocols\
    \ if large ATM clouds are to be deployed\n   successfully.\n"
- title: 4.2 ST-II
  contents:
  - "4.2 ST-II\n   ST-II [27] and ST2+ [12] (referred to generically as ST hereafter)\n\
    \   have data distribution and resource reservation schemes that are\n   similar\
    \ to ATM in many respects.\n   * ST is connection oriented using \"hard state\"\
    .  Senders set up\n     simplex data flows to all receivers closely matching point-to-\n\
    \     multipoint connections in ATM. Routing decisions are made when\n     the\
    \ connection is made and are not changed unless there is a\n     failure in the\
    \ path. Positive acknowledgment is required from all\n     receivers. ST2+ [12]\
    \ adds a receiver-based JOIN mechanism that can\n     reduce the burden on senders\
    \ to track all receivers.\n   * ST reserves network resources at connection setup\
    \ time. The ST\n     CONNECT message contains a flowspec indicating the resources\
    \ to be\n     reserved for the stream. Agents along the path may change the\n\
    \     flowspec based on restrictions they may need to impose on the\n     stream.\
    \ The final flowspec is returned to the sender in the ACCEPT\n     message from\
    \ each receiver or target.\n     -----------------------------------------------------------------\n\
    \     |   Category   |      RSVP            |       ATM (UNI 3.0)     |\n    \
    \ -----------------------------------------------------------------\n     |  \
    \            |                      |                         |\n     | Orientation\
    \  |   Sender-based       |       Sender-based      |\n     |              | \
    \                     |                         |\n      ----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |     State    |      Hard state      |       Hard state        |\n     |  \
    \            | (explicit disconnect)|   (explicit delete)     |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |QoS SetupTime |   Concurrent with    |    Concurrent with      |\n     |  \
    \            |     stream setup     |   route establishment   |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |QoS Changes?  | Dynamic QoS          |       Static QoS        |\n     |  \
    \            |                      |  (Fixed at setup time)  |\n     -----------------------------------------------------------------\n\
    \     |              |                      | Bidirectional allocation|\n    \
    \ |Directionality|  Unidirectional      |  for unicast            |\n     |  \
    \            |resource allocation   |Unidirectional allocation|\n     |      \
    \        |                      |  for multicast          |\n     -----------------------------------------------------------------\n\
    \     |              |                      |                         |\n    \
    \ |Heterogeneity |   Receiver           |    Uniform QoS to       |\n     |  \
    \            |  heterogeneity       |    all receivers        |\n     -----------------------------------------------------------------\n\
    \   These similarities make mapping ST services to ATM simpler than RSVP\n   but\
    \ the mapping is still not trivial.  The task of mapping the ST\n   flowspec into\
    \ an ATM service class still has to be worked out.  There\n   may be policy issues\
    \ related to opening a new VC for each stream\n   versus aggregating flows over\
    \ an existing VC.\n   Additionally, ST has some differences with UNI 3.1 that\
    \ can cause\n   problems when integrating the two protocols:\n   *  In ST, changes\
    \ to active stream reservations are allowed.  For\n      example, if the flowspec\
    \ received from the target is not sufficient\n      for the stream, the sender\
    \ can send a CHANGE message, requesting a\n      different QoS. UNI 3.1 does not\
    \ allow changes to the QoS of a VC\n      after it is set up. Future ATM UNI specifications\
    \ are contemplating\n      allowing changes to a VC after set up but this is still\
    \ preliminary.\n      In the meantime, policies for over reservation or aggregation\
    \ onto\n      a larger VC may be needed.\n   * ST uses simplex streams that flow\
    \ in only one direction.  This is\n     fine for UNI 3.1 point-to-multipoint connections\
    \ since the data flow\n     is only in one direction.  When mapping a point-to-point\
    \ ST\n     connection to a standard point-to-point ATM VC, the reverse flow\n\
    \     connection is wasted.\n   This can be solved simply by using only point-to-multipoint\
    \ VCs, even\n   if there is only one receiver.\n"
- title: 4.3 Mapping IP flows to ATM connections
  contents:
  - "4.3 Mapping IP flows to ATM connections\n   In general, there will be a great\
    \ deal of flexibility in how one maps\n   flows at the IP level to connections\
    \ at the ATM level. For example,\n   one could imagine setting up an ATM connection\
    \ when a reservation\n   message arrives at the edge of an ATM cloud and then\
    \ tearing it down\n   as soon as the reservation times out. However, to minimize\
    \ latency or\n   perhaps for economic reasons, it may be preferable to keep the\
    \ ATM\n   connection up for some period in case it is needed. Similarly, it may\n\
    \   be possible or desirable to map multiple IP flows to a single ATM\n   connection\
    \ or vice versa.\n   An interesting situation arises when a reservation request\
    \ is\n   received for an existing route across the cloud but which, when added\n\
    \   to the existing reservations using that connection, would exceed the\n   capacity\
    \ of that connection. Since the current  ATM standards do not\n   allow the QoS\
    \ of a connection to be changed, there are two options:\n   tear down the old\
    \ connection and create a new one with the new,\n   larger allocation of resources,\
    \ or simply add a new connection to\n   accommodate the extra traffic. It is possible\
    \ that the former would\n   lead to more efficient resource utilization. However,\
    \ one would not\n   wish to tear down the first connection before the second was\n\
    \   admitted, and the second might fail admission control because of the\n   resources\
    \ allocated to the first. The difficulties of this situation\n   seem to argue\
    \ for evolution of ATM standards to support QoS\n   modification on an existing\
    \ connection.\n"
- title: 5.0 End System Issues
  contents:
  - "5.0 End System Issues\n   In developing an integrated IP-ATM environment the\
    \ applications need\n   to be as oblivious as possible of the details of the environment:\
    \ the\n   applications should not need to know about the network topology to\n\
    \   work properly. This can be facilitated first by a common application\n   programing\
    \ interface (API) and secondly by common flow and filter\n   specifications [18].\n\
    \   An example of a common API that is gaining momentum is the BSD\n   sockets\
    \ interface. This is a UNIX standard and, with Winsock2, has\n   also become a\
    \ PC standard. With the IETF integrated service\n   environment just beginning\
    \ to appear in the commercial marketplace,\n   the ability to standardize on one\
    \ common interface for both IP and\n   ATM applications is still possible and\
    \ must be seriously and quickly\n   pursued to insure interoperability.\n   Since\
    \ the IP integrated service and ATM environments offer different\n   QoS service\
    \ types, an application should specify sufficient\n   information in its flow\
    \ specification so that regardless of the\n   topology of the network, the network\
    \ can choose an acceptable QoS\n   type to meet the applicationUs needs. Making\
    \ the application provide\n   sufficient information to quantify a QoS service\
    \ and allowing the\n   network to choose the QoS service type is essential to\
    \ freeing the\n   application from requiring a set network topology and allowing\
    \ the\n   network to fully utilize the features of IP and ATM.\n"
- title: 6.0 Routing Issues
  contents:
  - "6.0 Routing Issues\n   There is a fundamental difference between the routing\
    \ computations\n   for IP and ATM that can cause problems for real-time IP services.\n\
    \   ATM computes a route or path at connection setup time and leaves the\n   path\
    \ in place until the connection is terminated or there is a\n   failure in the\
    \ path.  An ATM cell only carries information\n   identifying the connection and\
    \ no information about the actual source\n   and destination of the cell.  In\
    \ order to forward cells, an ATM\n   device needs to consult a list of the established\
    \ connections that\n   map to the next hop device, without checking the final\
    \ destination.\n   In contrast, routing decisions in IP are based on the destination\n\
    \   address contained in every packet. This means that an IP router, as\n   it\
    \ receives each packet,  has to consult a table that contains the\n   routes to\
    \ all possible destinations and the routing decision is made\n   based on the\
    \ final destination of the packet.  This makes IP routing\n   very robust in the\
    \ face of path changes and link failures at the\n   expense of the extra header\
    \ information and the potentially larger\n   table lookup.  However, if an IP\
    \ path has been selected for a given\n   QoS, changes in the route may mean a\
    \ change in the QoS of the path.\n"
- title: 6.1 Multicast routing
  contents:
  - "6.1 Multicast routing\n   Considerable research has gone into overlaying IP multicast\
    \ models\n   onto ATM.  In the MARS (Multicast Address Resolution Server) model\n\
    \   [1], a server is designated for the Logical IP Subnet (LIS) to supply\n  \
    \ the ATM addresses of the hosts in the IP multicast group, much like\n   the\
    \ ATM ARP server [15].  When a host or router wishes to send to a\n   multicast\
    \ group on the LIS, a query is made to the MARS and a list of\n   the ATM address\
    \ of the hosts or routers in the group is returned. The\n   sending host can then\
    \ set up point-to-point or point-to-multipoint\n   VCs to the other group members.\
    \ When a host or a router joins an IP\n   multicast group, it notified the MARS.\
    \ Each of the current senders to\n   the group is then notified of the new group\
    \ member so that the new\n   member can be added to the point to multipoint VC's.\n\
    \   As the number of LIS hosts and multicast groups grows, the number of\n   VCs\
    \ needed for a one-to-one mapping of VCs to multicast groups can\n   get very\
    \ large.  Aggregation of multicast groups onto the same VC may\n   be necessary\
    \ to avoid VC explosion.  Aggregation  is further\n   complicated by the QoS that\
    \ may be needed for particular senders in a\n   multicast group.  There may be\
    \ a need to aggregate all the multicast\n   flows requiring a certain QoS to a\
    \ set of VCs, and parallel VCs may\n   be necessary to add flows of the same QoS.\n"
- title: 6.2 QoS Routing
  contents:
  - "6.2 QoS Routing\n   Most unicast and multicast IP routing protocols compute the\
    \ shortest\n   path to a destination based solely on a hop count or metric.  OSPF\n\
    \   [16] and MOSPF [17] allow computation based on different IP Type of\n   Service\
    \ (TOS) levels as well as link metrics, but no current IP\n   routing protocols\
    \ take into consideration the wide range of levels of\n   quality of service that\
    \ are available in ATM or in the Integrated\n   Services models.  In many routing\
    \ protocols, computing all the routes\n   for just the shortest path for a large\
    \ network is computationally\n   expensive so repeating this process for multiple\
    \ QoS levels might be\n   prohibitively expensive.\n   In ATM, the Private Network-to-Network\
    \ Interface (PNNI) protocol [13]\n   communicates QoS information along with routing\
    \ information, and the\n   network nodes can utilize this information to establish\
    \ paths for the\n   required QoS. Integrated PNNI (I-PNNI) [9] has been proposed\
    \ as a way\n   to pass the QoS information available in ATM to other routing\n\
    \   protocols in an IP environment.\n   Wang & Crowcroft [28] suggest that only\
    \ bandwidth and delay metrics\n   are necessary for QoS routing and this would\
    \ work well for computing\n   a route that required a particular QoS at some setup\
    \ time, but this\n   goes against the connectionless Internet model. One possible\
    \ solution\n   to the exhaustive computation of all possible routes with all\n\
    \   possible QoS values would be to compute routes for a common set of\n   QoS\
    \ values and only then compute routes for uncommon QoS values as\n   needed, extracting\
    \ a performance penalty only on the first packets of\n   a flow with an uncommon\
    \ QoS.  Sparse multicast routing protocols that\n   compute a multicast path in\
    \ advance or on the first packets from a\n   sender (such as CBT [5] and MOSPF\
    \ [17]) could also use QoS routing\n   information to set up a delivery tree that\
    \ will have adequate\n   resources.\n   However, no multicast routing protocols\
    \ allow the communication of\n   QoS information at tree setup time.  Obtaining\
    \ a tree with suitable\n   QoS is intended to be handled by RSVP, usually after\
    \ the distribution\n   tree has been set up, and may require recomputation of\
    \ the\n   distribution tree to provide the requested QoS.One way to solve this\n\
    \   problem is to add some \"hints\" to the multicast routing protocols so\n \
    \  they can get an idea of the QoS that the multicast group will require\n   at\
    \ group initiation time and set up a distribution tree to support\n   the desired\
    \ QoS. The CBT protocol [5] has some TBD fields in its\n   control headers to\
    \ support resource reservation. Such information\n   could also be added to a\
    \ future IGMP [11] JOIN message that would\n   include information on the PIM\
    \ Rendezvous Point (RP) or CBT Core.\n   Another alternative is to recompute the\
    \ multicast distribution tree\n   based on the RSVP messages but this has the\
    \ danger of losing data\n   during the recomputation. However, this can leave\
    \ a timing window\n   where other reservations can come along during the tree\
    \ recomputation\n   and use the resources of the new path as well as the old path,\n\
    \   leaving the user with no path to support the QoS desired.\n   If unicast routing\
    \ is used to support multicast routing, we have the\n   same problem of only knowing\
    \ a single path to a given destination\n   with no QoS information. If the path\
    \ suggested by unicast routing\n   does not have the resources to support the\
    \ QoS desired, there are few\n   choices available. Schemes that use an alternate\
    \ route to \"guess\" at\n   a better path have been suggested and can work for\
    \ certain topologies\n   but an underlying routing protocol that provides QoS\
    \ information is\n   necessary for a complete solution.  As mentioned earlier,\
    \ I-PNNI has\n   the potential to provide enough information to compute paths\
    \ for the\n   requested QoS.\n"
- title: 6.3 Mobile Routing
  contents:
  - "6.3 Mobile Routing\n   In developing an integrated IP-ATM network, potential\
    \ new growth\n   areas need to be included in the planning stages. One such area\
    \ is\n   mobile networking. Under the heading of mobile networks are included\n\
    \   satellite extensions of the ATM cloud, mobile hosts that can join an\n   IP\
    \ subnetwork at random, and a true mobile network in which all\n   network components\
    \ including routers and/or switches are mobile.\n   The IP-ATM real-time service\
    \ environment must be extended to include\n   mobile networks so as to allow mobile\
    \ users to access the same\n   services as fixed network users. In doing so, a\
    \ number of problems\n   exist that need to be addressed. The principle problems\
    \ are that\n   mobile networks have constrained bandwidth compared to fiber and\n\
    \   mobile links and are less stable than fixed fiber links. The impact\n   of\
    \ these limitations affect IP and ATM differently.  In introducing\n   one or\
    \ more constrained components into the ATM cloud,the effects on\n   congestion\
    \ control in the overall network are unknown. One can\n   envision significant\
    \ buffering problems when a disadvantaged user on\n   a mobile link attempts to\
    \ access information from a high speed data\n   stream. Likewise, as ATM uses\
    \ out of band signalling to set up the\n   connection, the stability of the mobile\
    \ links that may have\n   significant fading or complete loss of connectivity\
    \ could have a\n   significant effect on ATM performance.\n   For QoS, fading\
    \ on a link will appear as a varying channel capacity.\n   This will result in\
    \ time-dependent fluctuations of available links to\n   support a level of service.\
    \ Current routing protocols are not\n   designed to operate in a rapidly changing\
    \ topology. QoS routing\n   protocols that can operate in a rapidly changing topology\
    \ are\n   required and need to be developed.\n"
- title: 7.0 Security Issues
  contents:
  - "7.0 Security Issues\n   In a quality of service environment where network resources\
    \ are\n   reserved, hence potentially depriving other users access to these\n\
    \   resources for some time period, authentication of the requesting host\n  \
    \ is essential. This problem is greatly increased in a combined IP-ATM\n   topology\
    \ where the requesting host can access the network either\n   through the IP or\
    \ the ATM portion of the network. Differences in the\n   security architectures\
    \ between IP and ATM can lead to opportunities\n   to reserve resources without\
    \ proper authorization to do so.  A common\n   security framework over the combined\
    \ IP-ATM topology would be\n   desirable. In lieu of this, the use of trusted\
    \ edge devices\n   requesting the QoS services are required as a near term solution.\n\
    \   Significant progress in developing a common security framework for IP\n  \
    \ is underway in the IETF [2]. The use of authentication headers in\n   conjunction\
    \ with appropriate key management is currently being\n   considered as a long\
    \ range solution to providing QoS security [3,8].\n   In developing this framework,\
    \ the reality of ATM portions of the\n   Internet should be taken into account.\
    \ Of equal importance, the ATM\n   Forum ad-hoc security group should take into\
    \ account the current work\n   on an IP security architecture to ensure compatibility.\n"
- title: 8.0 Future Directions
  contents:
  - "8.0 Future Directions\n   Clearly, there are some challenging issues for real-time\
    \ IP-ATM\n   services and some areas are better understood than others. For\n\
    \   example, mechanisms such as policing, admission control and packet or\n  \
    \ cell scheduling can be dealt with mostly independently within IP or\n   ATM\
    \ as appropriate.  Thus, while there may be hard problems to be\n   solved in\
    \ these areas that need to be addressed in either the IP or\n   ATM communities,\
    \ there are few serious problems that arise\n   specifically in the IP over ATM\
    \ environment. This is because IP does\n   not particularly care what mechanisms\
    \ a network element (such as an\n   ATM network) uses to provide a certain QoS;\
    \ what matters is whether\n   the ATM service model is capable of offering services\
    \ that can\n   support the end-to-end IP service model. Most of the hard problems\n\
    \   for IP over ATM therefore revolve around the service models for IP\n   and\
    \ ATM.  The one piece of mechanism that is important in an IP/ATM\n   context\
    \ is signalling or resource reservation, a topic we return to\n   below.\n   The\
    \ following paragraphs enumerate some of the areas in which we\n   believe significant\
    \ work is needed. The work falls into three areas:\n   extending the IP over ATM\
    \ standards; extensions to the ATM service\n   model; and extensions to the IP\
    \ service model. In general, we expect\n   that practical experience with providing\
    \ IP QoS over ATM will suggest\n   more enhancements to the service models.\n\
    \   We need to define ways of mapping the QoS and traffic\n   characterizations\
    \ (Tspecs and Rspecs) of IP flows to suitable\n   characterizations for ATM connections.\
    \  An agreement is needed so\n   that some sort of uniform approach is taken.\
    \ Whatever agreement is\n   made for such mappings, it needs to be done so that\
    \ when traversing\n   several networks, the requested QoS is obtained end-to-end\
    \ (when\n   admission is possible). Practical experience should be gained with\n\
    \   these mappings to establish that the ATM service classes can in fact\n   provide\
    \ suitable QoS to IP flows in a reasonably efficient way.\n   Enhancement of the\
    \ ATM service classes may be necessary, but\n   experience is needed to determine\
    \ what is appropriate.\n   We need to determine how the resource reservation models\
    \ of IP (RSVP\n   and ST-II) interact with ATM signalling. Mechanisms for establishing\n\
    \   appropriate connection state with suitable QoS in ATM networks that\n   are\
    \ part of a larger integrated services Internet need to be defined.\n   It is\
    \ possible that the current IP/ATM mechanisms such as ARP servers\n   and MARS\
    \ can be extended to help to manage this state.\n   There is a need for better\
    \ QoS routing.  While this functionality is\n   needed even in the pure ATM or\
    \ pure IP environment, there is also an\n   eventual need for integrated QoS routing\
    \ between ATM and IP.  Further\n   research and practical experience is needed\
    \ in the areas of QoS\n   routing in IP in order to support more than the shortest\
    \ best-effort\n   path, especially when this path may traverse ATM networks. \
    \ In many\n   IP networks, there are multiple paths between a given source and\n\
    \   destination pair but current routing technologies only pay attention\n   to\
    \ the current shortest path. As resources on the shortest path are\n   reserved,\
    \ it will be necessary and viable to explore other paths in\n   order to provide\
    \ QoS to a flow.\n   Enrichment of the ATM model to support dynamic QoS would\
    \ greatly help\n   the IP over ATM situation. At present, the QoS objectives for\
    \ ATM are\n   established at call set-up and then fixed for the duration of a\
    \ call.\n   It would be advantageous to have the ability to provide a dynamic\
    \ QoS\n   in ATM, so that an existing call could be modified to provide altered\n\
    \   services.\n   Another possible area of enhancement to the ATM service model\
    \ is in\n   the area of multicasting. The multicast QoS offered is equal for all\n\
    \   receivers, and thus may be determined by the least favorable path\n   through\
    \ the tree or by the most demanding receiver. Furthermore,\n   there is no current\
    \ provision for multipoint to multipoint\n   connections. This limitation may\
    \ rule out some of the services\n   envisioned in the IP service model.\n   There\
    \ are areas of potential enrichment of the IP model as well.\n   While the receiver-based\
    \ approach of RSVP has nice scaling properties\n   and handles receiver heterogeneity\
    \ well, it is not clear that it is\n   ideal for all applications or for establishing\
    \ state in ATM networks.\n   It is possible that a sender-oriented mode for RSVP\
    \ might ease the\n   IP/ATM integration task.\n   Since the widespread availability\
    \ of QoS raises new security concerns\n   (e.g., denial of service by excessive\
    \ resource reservation), it seems\n   prudent that the IP and ATM communities\
    \ work closely to adopt\n   compatible approaches to handling these issues.\n\
    \   This list is almost certainly incomplete. As work progresses to\n   define\
    \ IP over ATM standards to support QoS and to implement\n   integrated services\
    \ internetworks that include ATM, more issues are\n   likely to arise. However,\
    \ we believe that this paper has described\n   the major issues that need to be\
    \ taken into consideration at this\n   time by those who are defining the standards\
    \ and building\n   implementations.\n"
- title: 9.0 References
  contents:
  - "9.0 References\n   1.  Armitage, G., \"Support for Multicast over UNI 3.1 based\
    \ ATM\n       Networks\", Work in Progress, Bellcore, February 1995.\n   2.  Atkinson,\
    \  R., \"Security Architecture for the Internet Protocol\",\n       RFC 1825,\
    \ NRL, August 1995.\n   3.  Atkinson, R., \"IP Authentication Header\", RFC 1826,\
    \ NRL,\n       August 1995.\n   4.  Ballardie, A., and J. Crowcroft, \"Multicast-Specific\
    \ Security\n       Threats and Counter-Measures\", Proceedings of ISOC Symposium\
    \ on\n       Network and Distributed System Security, San Diego, Feb. 1995,\n\
    \       pp. 2-16.\n   5.  Ballardie, T., Jain, N., Reeve, S. \"Core Based Trees\
    \ (CBT)\n       Multicast, Protocol Specification\", Work In Progress, University\n\
    \       College London, Bay Networks, June, 1995.\n   6.  Braden, R., Clark, D.,\
    \ and S. Shenker, \"Integrated Services in\n       the Internet Architecture:\
    \ an Overview\", RFC 1633, ISI/MIT/Xerox\n       PARC, July 1994.\n   7.  Braden,\
    \ R., Zhang, L., Estrin, Herzog, D., and S. Jamin,\n       \"Resource ReSerVation\
    \ Protocol (RSVP) - Version 1 Functional\n       Specification\", Work in Progress,\
    \ ISI/PARC/UCS, July 1995.\n   8.  Braden, R., Clark, D., Crocker, S., and C.\
    \ Huitema, \"Report of IAB\n       Workshop on Security in the Internet Architecture\"\
    , RFC 1636, ISI,\n       MIT, TIS, INRIA, June 1994.\n   9.  Callon, R., and B.\
    \ Salkewicz, An Outline for Integrated PNNI for\n       IP Routing\", ATM Forum/\
    \ 95-0649, Bay Networks, July 1995.\n   10. Cole, R., Shur, D., and C. Villamizar,\
    \ \"IP over ATM: A Framework\n       Document\", Work in Progress, AT&T Bell Laboratories/\
    \ ANS, April\n       1995.\n   11. Deering, S., \"Host Extensions for IP Multicasting\"\
    , STD 5, RFC\n       1112, Stanford University, August 1989.\n   12. Delgrossi,\
    \ L., and L. Berger, Editors, \"Internet Stream Protocol\n       Version 2 (ST-2)\
    \ Protocol Specification - Version ST2+\", RFC 1819,\n       ST2 Working Group,\
    \ August 1995.\n   13. Dykeman, D., Ed., \"PNNI Draft Specification\", ATM Forum/94-0471R8,\n\
    \       IBM Zurich Research Lab, May 1995.\n   14. Goyal, P., Lam, S., and Vin,\
    \ H., \"Determining End-to-End Delay\n       Bounds in Heterogeneous Networks,\"\
    \ 5th International Workshop on\n       Network and Operating System Support for\
    \ Digital Audio and Video,\n       April, 1995.(Available via URL http://www.cs.utexas.edu/users/dmcl)\n\
    \   15. Laubach, M., \"Classical IP and ARP over ATM\", RFC 1577, HP,\n      \
    \ January 1994.\n   16. Moy, J., \"OSPF Version 2\", RFC 1583, Proteon, March\
    \ 1994.\n   17. Moy, J., \"Multicast Extensions to OSPF,\" RFC 1584, Proteon,\
    \ March\n       1994.\n   18. Partridge, C., \"A  Proposed Flow Specification\"\
    , RFC 1363, BBN,\n       September 1992.\n   19. Perez, M., Liaw, F., Mankin,\
    \ A., Hoffman, E., Grossman, D. and\n       A. Malis, \"ATM Signaling Support\
    \ for IP over ATM\", RFC 1755,\n       ISI, Fore, Motorola Codex, Ascom Timeplex,\
    \ February 1995.\n   20. Perkins, D., and Liaw, Fong-Ching, \"Beyond Classical\
    \ IP-Integrated\n       IP and ATM Architecture Overview\", ATM Forum/94-0935,\
    \ Fore Systems,\n       September 1994.\n   21. Perkins, D. and Liaw, Fong-Ching,\
    \ \"Beyond Classical IP-Integrated\n       IP and ATM Protocol Specifications\"\
    , ATM Forum/94-0936, Fore\n       Systems, September 1994.\n   22. Romanow, A.,\
    \ and S. Floyd, \"The Dynamics of TCP Traffic over ATM\n       Networks\", Proceedings\
    \ of ACM SIGCOMM U94, London, August 1994,\n       pp.79-88.\n   23. Shenker,\
    \ S., and C. Partridge. \"Specification of Guaranteed Quality\n       of Service\"\
    , Work in Progress, Xerox/BBN, July 1995.\n   24. Shenker, S., and C. Partridge.\
    \ \"Specification of Predictive Quality\n       of Service\", Work in Progress,\
    \ Xerox/BBN, March 1995.\n   25. Shenker, S., C. Partridge and J. Wroclawski.\
    \ \"Specification of\n       Controlled Delay Quality of Service\", Work in Progress,\n\
    \       Xerox/BBN/MIT, June 1995.\n   26. Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V. Jacobson, \"RTP:\n       A Transport Protocol for Real-time Applications\"\
    , Work in Progress,\n       GMD/ISI/Xerox/LBL, March 1995.\n   27. Topolcic, C.,\
    \ \"Experimental Internet Stream Protocol, Version 2\n       (ST-II)\", RFC 1190,\
    \ BBN, October 1990.\n   28. Wang, Z., and J. Crowcroft, \"QoS Routing for Supporting\
    \ Resource\n       Reservation\", University College of London white paper, 1995.\n"
- title: 10. Authors' Addresses
  contents:
  - "10. Authors' Addresses\n   Eric S. Crawley\n   Marty Borden\n   Bay Networks\n\
    \   3 Federal Street\n   Billerica, Ma 01821\n   508-670-8888\n   esc@baynetworks.com\n\
    \   mborden@baynetworks.com\n   Bruce S. Davie\n   Bellcore\n   445 South Street\n\
    \   Morristown, New Jersey 07960-6438\n   201-829-4838\n   bsd@bellcore.com\n\
    \   Stephen G. Batsell\n   Naval Research Laboratory\n   Code 5521\n   Washington,\
    \ DC 20375-5337\n   202-767-3834\n   sgb@saturn.nrl.navy.mil\n"
