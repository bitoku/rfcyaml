- title: __initial_text__
  contents:
  - '              Standard for Interchange of USENET Messages

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n    This document defines the standard format for the interchange\
    \ of\n    network News messages among USENET hosts.  It updates and replaces\n\
    \    RFC-850, reflecting version B2.11 of the News program.  This memo is\n  \
    \  disributed as an RFC to make this information easily accessible to\n    the\
    \ Internet community.  It does not specify an Internet standard.\n    Distribution\
    \ of this memo is unlimited.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n    This document defines the standard format for the interchange\
    \ of\n    network News messages among USENET hosts.  It describes the format\n\
    \    for messages themselves and gives partial standards for transmission\n  \
    \  of news.  The news transmission is not entirely in order to give a\n    good\
    \ deal of flexibility to the hosts to choose transmission\n    hardware and software,\
    \ to batch news, and so on.\n    There are five sections to this document.  Section\
    \ two defines the\n    format.  Section three defines the valid control messages.\
    \  Section\n    four specifies some valid transmission methods.  Section five\n\
    \    describes the overall news propagation algorithm.\n"
- title: 2.  Message Format
  contents:
  - "2.  Message Format\n    The primary consideration in choosing a message format\
    \ is that it\n    fit in with existing tools as well as possible.  Existing tools\n\
    \    include implementations of both mail and news.  (The notesfiles\n    system\
    \ from the University of Illinois is considered a news\n    implementation.) \
    \ A standard format for mail messages has existed\n    for many years on the Internet,\
    \ and this format meets most of the\n    needs of USENET.  Since the Internet\
    \ format is extensible,\n    extensions to meet the additional needs of USENET\
    \ are easily made\n    within the Internet standard.  Therefore, the rule is adopted\
    \ that\n    all USENET news messages must be formatted as valid Internet mail\n\
    \    messages, according to the Internet standard RFC-822.  The USENET\n    News\
    \ standard is more restrictive than the Internet standard,\n    placing additional\
    \ requirements on each message and forbidding use\n    of certain Internet features.\
    \  However, it should always be possible\n    to use a tool expecting an Internet\
    \ message to process a news\n    message.  In any situation where this standard\
    \ conflicts with the\n    Internet standard, RFC-822 should be considered correct\
    \ and this\n    standard in error.\n    Here is an example USENET message to illustrate\
    \ the fields.\n              From: jerry@eagle.ATT.COM (Jerry Schwarz)\n     \
    \         Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n              Newsgroups: news.announce\n\
    \              Subject: Usenet Etiquette -- Please Read\n              Message-ID:\
    \ <642@eagle.ATT.COM>\n              Date: Fri, 19 Nov 82 16:14:55 GMT\n     \
    \         Followup-To: news.misc\n              Expires: Sat, 1 Jan 83 00:00:00\
    \ -0500\n              Organization: AT&T Bell Laboratories, Murray Hill\n   \
    \           The body of the message comes here, after a blank line.\n      Here\
    \ is an example of a message in the old format (before the\n      existence of\
    \ this standard). It is recommended that\n      implementations also accept messages\
    \ in this format to ease upward\n      conversion.\n               From: cbosgd!mhuxj!mhuxt!eagle!jerry\
    \ (Jerry Schwarz)\n               Newsgroups: news.misc\n               Title:\
    \ Usenet Etiquette -- Please Read\n               Article-I.D.: eagle.642\n  \
    \             Posted: Fri Nov 19 16:14:55 1982\n               Received: Fri Nov\
    \ 19 16:59:30 1982\n               Expires: Mon Jan 1 00:00:00 1990\n        \
    \       The body of the message comes here, after a blank line.\n      Some news\
    \ systems transmit news in the A format, which looks like\n      this:\n     \
    \           Aeagle.642\n                news.misc\n                cbosgd!mhuxj!mhuxt!eagle!jerry\n\
    \                Fri Nov 19 16:14:55 1982\n                Usenet Etiquette -\
    \ Please Read\n                The body of the message comes here, with no blank\
    \ line.\n    A standard USENET message consists of several header lines, followed\n\
    \    by a blank line, followed by the body of the message.  Each header\n    line\
    \ consist of a keyword, a colon, a blank, and some additional\n    information.\
    \  This is a subset of the Internet standard, simplified\n    to allow simpler\
    \ software to handle it.  The \"From\" line may\n    optionally include a full\
    \ name, in the format above, or use the\n    Internet angle bracket syntax.  To\
    \ keep the implementations simple,\n    other formats (for example, with part\
    \ of the machine address after\n    the close parenthesis) are not allowed.  The\
    \ Internet convention of\n    continuation header lines (beginning with a blank\
    \ or tab) is\n    allowed.\n    Certain headers are required, and certain other\
    \ headers are\n    optional.  Any unrecognized headers are allowed, and will be\
    \ passed\n    through unchanged.  The required header lines are \"From\", \"Date\"\
    ,\n    \"Newsgroups\", \"Subject\", \"Message-ID\", and \"Path\".  The optional\n\
    \    header lines are \"Followup-To\", \"Expires\", \"Reply-To\", \"Sender\",\n\
    \    \"References\", \"Control\", \"Distribution\", \"Keywords\", \"Summary\"\
    ,\n    \"Approved\", \"Lines\", \"Xref\", and \"Organization\".  Each of these\n\
    \    header lines will be described below.\n"
- title: 2.1.  Required Header lines
  contents:
  - '2.1.  Required Header lines

    '
- title: 2.1.1.  From
  contents:
  - "2.1.1.  From\n    The \"From\" line contains the electronic mailing address of\
    \ the\n    person who sent the message, in the Internet syntax.  It may\n    optionally\
    \ also contain the full name of the person, in parentheses,\n    after the electronic\
    \ address.  The electronic address is the same as\n    the entity responsible\
    \ for originating the message, unless the\n    \"Sender\" header is present, in\
    \ which case the \"From\" header might\n    not be verified.  Note that in all\
    \ host and domain names, upper and\n    lower case are considered the same, thus\
    \ \"mark@cbosgd.ATT.COM\",\n    \"mark@cbosgd.att.com\", and \"mark@CBosgD.ATt.COm\"\
    \ are all equivalent.\n    User names may or may not be case sensitive, for example,\n\
    \    \"Billy@cbosgd.ATT.COM\" might be different from\n    \"BillY@cbosgd.ATT.COM\"\
    .  Programs should avoid changing the case of\n    electronic addresses when forwarding\
    \ news or mail.\n    RFC-822 specifies that all text in parentheses is to be interpreted\n\
    \    as a comment.  It is common in Internet mail to place the full name\n   \
    \ of the user in a comment at the end of the \"From\" line.  This\n    standard\
    \ specifies a more rigid syntax.  The full name is not\n    considered a comment,\
    \ but an optional part of the header line.\n    Either the full name is omitted,\
    \ or it appears in parentheses after\n    the electronic address of the person\
    \ posting the message, or it\n    appears before an electronic address which is\
    \ enclosed in angle\n    brackets.  Thus, the three permissible forms are:\n \
    \             From: mark@cbosgd.ATT.COM\n              From: mark@cbosgd.ATT.COM\
    \ (Mark Horton)\n              From: Mark Horton <mark@cbosgd.ATT.COM>\n    Full\
    \ names may contain any printing ASCII characters from space\n    through tilde,\
    \ except that they may not contain \"(\" (left\n    parenthesis), \")\" (right\
    \ parenthesis), \"<\" (left angle bracket), or\n    \">\" (right angle bracket).\
    \  Additional restrictions may be placed on\n    full names by the mail standard,\
    \ in particular, the characters \",\"\n    (comma), \":\" (colon), \"@\" (at),\
    \ \"!\" (bang), \"/\" (slash), \"=\"\n    (equal), and \";\" (semicolon) are inadvisable\
    \ in full names.\n"
- title: 2.1.2.  Date
  contents:
  - "2.1.2.  Date\n    The \"Date\" line (formerly \"Posted\") is the date that the\
    \ message was\n    originally posted to the network.  Its format must be acceptable\n\
    \    both in RFC-822 and to the getdate(3) routine that is provided with\n   \
    \ the Usenet software.  This date remains unchanged as the message is\n    propagated\
    \ throughout the network.  One format that is acceptable to\n    both is:\n  \
    \                    Wdy, DD Mon YY HH:MM:SS TIMEZONE\n    Several examples of\
    \ valid dates appear in the sample message above.\n    Note in particular that\
    \ ctime(3) format:\n                          Wdy Mon DD HH:MM:SS YYYY\n    is\
    \ not acceptable because it is not a valid RFC-822 date.  However,\n    since\
    \ older software still generates this format, news\n    implementations are encouraged\
    \ to accept this format and translate\n    it into an acceptable format.\n   \
    \ There is no hope of having a complete list of timezones.  Universal\n    Time\
    \ (GMT), the North American timezones (PST, PDT, MST, MDT, CST,\n    CDT, EST,\
    \ EDT) and the +/-hhmm offset specifed in RFC-822 should be\n    supported.  It\
    \ is recommended that times in message headers be\n    transmitted in GMT and\
    \ displayed in the local time zone.\n"
- title: 2.1.3.  Newsgroups
  contents:
  - "2.1.3.  Newsgroups\n    The \"Newsgroups\" line specifies the newsgroup or newsgroups\
    \ in which\n    the message belongs.  Multiple newsgroups may be specified,\n\
    \    separated by a comma.  Newsgroups specified must all be the names of\n  \
    \  existing newsgroups, as no new newsgroups will be created by simply\n    posting\
    \ to them.\n    Wildcards (e.g., the word \"all\") are never allowed in a \"News-\n\
    \    groups\" line.  For example, a newsgroup comp.all is illegal,\n    although\
    \ a newsgroup rec.sport.football is permitted.\n    If a message is received with\
    \ a \"Newsgroups\" line listing some valid\n    newsgroups and some invalid newsgroups,\
    \ a host should not remove\n    invalid newsgroups from the list.  Instead, the\
    \ invalid newsgroups\n    should be ignored.  For example, suppose host A subscribes\
    \ to the\n    classes btl.all and comp.all, and exchanges news messages with host\n\
    \    B, which subscribes to comp.all but not btl.all.  Suppose A receives\n  \
    \  a message with Newsgroups: comp.unix,btl.general.\n    This message is passed\
    \ on to B because B receives comp.unix, but B\n    does not receive btl.general.\
    \  A must leave the \"Newsgroups\" line\n    unchanged.  If it were to remove\
    \ btl.general, the edited header\n    could eventually re-enter the btl.all class,\
    \ resulting in a message\n    that is not shown to users subscribing to btl.general.\
    \  Also,\n    follow-ups from outside btl.all would not be shown to such users.\n"
- title: 2.1.4.  Subject
  contents:
  - "2.1.4.  Subject\n    The \"Subject\" line (formerly \"Title\") tells what the\
    \ message is\n    about.  It should be suggestive enough of the contents of the\n\
    \    message to enable a reader to make a decision whether to read the\n    message\
    \ based on the subject alone.  If the message is submitted in\n    response to\
    \ another message (e.g., is a follow-up) the default\n    subject should begin\
    \ with the four characters \"Re:\", and the\n    \"References\" line is required.\
    \  For follow-ups, the use of the\n    \"Summary\" line is encouraged.\n"
- title: 2.1.5.  Message-ID
  contents:
  - "2.1.5.  Message-ID\n    The \"Message-ID\" line gives the message a unique identifier.\
    \  The\n    Message-ID may not be reused during the lifetime of any previous\n\
    \    message with the same Message-ID.  (It is recommended that no\n    Message-ID\
    \ be reused for at least two years.)  Message-ID's have the\n    syntax:\n   \
    \                  <string not containing blank or \">\">\n    In order to conform\
    \ to RFC-822, the Message-ID must have the format:\n                         \
    \ <unique@full_domain_name>\n    where full_domain_name is the full name of the\
    \ host at which the\n    message entered the network, including a domain that\
    \ host is in, and\n    unique is any string of printing ASCII characters, not\
    \ including \"<\"\n    (left angle bracket), \">\" (right angle bracket), or \"\
    @\" (at sign).\n    For example, the unique part could be an integer representing\
    \ a\n    sequence number for messages submitted to the network, or a short\n \
    \   string derived from the date and time the message was created.  For\n    example,\
    \ a valid Message-ID for a message submitted from host ucbvax\n    in domain \"\
    Berkeley.EDU\" would be \"<4123@ucbvax.Berkeley.EDU>\".\n    Programmers are urged\
    \ not to make assumptions about the content of\n    Message-ID fields from other\
    \ hosts, but to treat them as unknown\n    character strings.  It is not safe,\
    \ for example, to assume that a\n    Message-ID will be under 14 characters, that\
    \ it is unique in the\n    first 14 characters, nor that is does not contain a\
    \ \"/\".\n    The angle brackets are considered part of the Message-ID.  Thus,\
    \ in\n    references to the Message-ID, such as the ihave/sendme and cancel\n\
    \    control messages, the angle brackets are included.  White space\n    characters\
    \ (e.g., blank and tab) are not allowed in a Message-ID.\n    Slashes (\"/\")\
    \ are strongly discouraged.  All characters between the\n    angle brackets must\
    \ be printing ASCII characters.\n"
- title: 2.1.6.  Path
  contents:
  - "2.1.6.  Path\n    This line shows the path the message took to reach the current\n\
    \    system.  When a system forwards the message, it should add its own\n    name\
    \ to the list of systems in the \"Path\" line.  The names may be\n    separated\
    \ by any punctuation character or characters (except \".\"\n    which is considered\
    \ part of the hostname).  Thus, the following are\n    valid entries:\n      \
    \             cbosgd!mhuxj!mhuxt\n                   cbosgd, mhuxj, mhuxt\n  \
    \                 @cbosgd.ATT.COM,@mhuxj.ATT.COM,@mhuxt.ATT.COM\n            \
    \       teklabs, zehntel, sri-unix@cca!decvax\n    (The latter path indicates\
    \ a message that passed through decvax,\n    cca, sri-unix, zehntel, and teklabs,\
    \ in that order.) Additional\n    names should be added from the left.  For example,\
    \ the most recently\n    added name in the fourth example was teklabs.  Letters,\
    \ digits,\n    periods and hyphens are considered part of host names; other\n\
    \    punctuation, including blanks, are considered separators.\n    Normally,\
    \ the rightmost name will be the name of the originating\n    system.  However,\
    \ it is also permissible to include an extra entry\n    on the right, which is\
    \ the name of the sender.  This is for upward\n    compatibility with older systems.\n\
    \    The \"Path\" line is not used for replies, and should not be taken as\n \
    \   a mailing address.  It is intended to show the route the message\n    traveled\
    \ to reach the local host.  There are several uses for this\n    information.\
    \  One is to monitor USENET routing for performance\n    reasons.  Another is\
    \ to establish a path to reach new hosts.\n    Perhaps the most important use\
    \ is to cut down on redundant USENET\n    traffic by failing to forward a message\
    \ to a host that is known to\n    have already received it.  In particular, when\
    \ host A sends a\n    message to host B, the \"Path\" line includes A, so that\
    \ host B will\n    not immediately send the message back to host A.  The name\
    \ each host\n    uses to identify itself should be the same as the name by which\
    \ its\n    neighbors know it, in order to make this optimization possible.\n \
    \   A host adds its own name to the front of a path when it receives a\n    message\
    \ from another host.  Thus, if a message with path \"A!X!Y!Z\"\n    is passed\
    \ from host A to host B, B will add its own name to the path\n    when it receives\
    \ the message from A, e.g., \"B!A!X!Y!Z\".  If B then\n    passes the message\
    \ on to C, the message sent to C will contain the\n    path \"B!A!X!Y!Z\", and\
    \ when C receives it, C will change it to\n    \"C!B!A!X!Y!Z\".\n    Special upward\
    \ compatibility note:  Since the \"From\", \"Sender\", and\n    \"Reply-To\" lines\
    \ are in Internet format, and since many USENET hosts\n    do not yet have mailers\
    \ capable of understanding Internet format, it\n    would break the reply capability\
    \ to completely sever the connection\n    between the \"Path\" header and the\
    \ reply function.  It is recognized\n    that the path is not always a valid reply\
    \ string in older\n    implementations, and no requirement to fix this problem\
    \ is placed on\n    implementations.  However, the existing convention of placing\
    \ the\n    host name and an \"!\"  at the front of the path, and of starting the\n\
    \    path with the host name, an \"!\", and the user name, should be\n    maintained\
    \ when possible.\n"
- title: 2.2.  Optional Headers
  contents:
  - '2.2.  Optional Headers

    '
- title: 2.2.1.  Reply-To
  contents:
  - "2.2.1.  Reply-To\n    This line has the same format as \"From\".  If present,\
    \ mailed replies\n    to the author should be sent to the name given here.  Otherwise,\n\
    \    replies are mailed to the name on the \"From\" line. (This does not\n   \
    \ prevent additional copies from being sent to recipients named by the\n    replier,\
    \ or on \"To\" or \"Cc\" lines.)  The full name may be optionally\n    given,\
    \ in parentheses, as in the \"From\" line.\n"
- title: 2.2.2.  Sender
  contents:
  - "2.2.2.  Sender\n    This field is present only if the submitter manually enters\
    \ a \"From\"\n    line.  It is intended to record the entity responsible for\n\
    \    submitting the message to the network.  It should be verified by the\n  \
    \  software at the submitting host.\n    For example, if John Smith is visiting\
    \ CCA and wishes to post a\n    message to the network, using friend Sarah Jones'\
    \ account, the\n    message might read:\n              From: smith@ucbvax.Berkeley.EDU\
    \ (John Smith)\n              Sender: jones@cca.COM (Sarah Jones)\n    If a gateway\
    \ program enters a mail message into the network at host\n    unix.SRI.COM, the\
    \ lines might read:\n              From: John.Doe@A.CS.CMU.EDU\n             \
    \ Sender: network@unix.SRI.COM\n    The primary purpose of this field is to be\
    \ able to track down\n    messages to determine how they were entered into the\
    \ network.  The\n    full name may be optionally given, in parentheses, as in\
    \ the \"From\"\n    line.\n"
- title: 2.2.3.  Followup-To
  contents:
  - "2.2.3.  Followup-To\n    This line has the same format as \"Newsgroups\".  If\
    \ present, follow-\n    up messages are to be posted to the newsgroup or newsgroups\
    \ listed\n    here.  If this line is not present, follow-ups are posted to the\n\
    \    newsgroup or newsgroups listed in the \"Newsgroups\" line.\n    If the keyword\
    \ poster is present, follow-up messages are not\n    permitted.  The message should\
    \ be mailed to the submitter of the\n    message via mail.\n"
- title: 2.2.4.  Expires
  contents:
  - "2.2.4.  Expires\n    This line, if present, is in a legal USENET date format.\
    \  It\n    specifies a suggested expiration date for the message.  If not\n  \
    \  present, the local default expiration date is used.  This field is\n    intended\
    \ to be used to clean up messages with a limited usefulness,\n    or to keep important\
    \ messages around for longer than usual.  For\n    example, a message announcing\
    \ an upcoming seminar could have an\n    expiration date the day after the seminar,\
    \ since the message is not\n    useful after the seminar is over.  Since local\
    \ hosts have local\n    policies for expiration of news (depending on available\
    \ disk space,\n    for instance), users are discouraged from providing expiration\
    \ dates\n    for messages unless there is a natural expiration date associated\n\
    \    with the topic.  System software should almost never provide a\n    default\
    \ \"Expires\" line.  Leave it out and allow local policies to be\n    used unless\
    \ there is a good reason not to.\n"
- title: 2.2.5.  References
  contents:
  - "2.2.5.  References\n    This field lists the Message-ID's of any messages prompting\
    \ the\n    submission of this message.  It is required for all follow-up\n   \
    \ messages, and forbidden when a new subject is raised.\n    Implementations should\
    \ provide a follow-up command, which allows a\n    user to post a follow-up message.\
    \  This command should generate a\n    \"Subject\" line which is the same as the\
    \ original message, except\n    that if the original subject does not begin with\
    \ \"Re:\" or \"re:\", the\n    four characters \"Re:\" are inserted before the\
    \ subject.  If there is\n    no \"References\" line on the original header, the\
    \ \"References\" line\n    should contain the Message-ID of the original message\
    \ (including the\n    angle brackets).  If the original message does have a \"\
    References\"\n    line, the follow-up message should have a \"References\" line\n\
    \    containing the text of the original \"References\" line, a blank, and\n \
    \   the Message-ID of the original message.\n    The purpose of the \"References\"\
    \ header is to allow messages to be\n    grouped into conversations by the user\
    \ interface program.  This\n    allows conversations within a newsgroup to be\
    \ kept together, and\n    potentially users might shut off entire conversations\
    \ without\n    unsubscribing to a newsgroup.  User interfaces need not make use\
    \ of\n    this header, but all automatically generated follow-ups should\n   \
    \ generate the \"References\" line for the benefit of systems that do\n    use\
    \ it, and manually generated follow-ups (e.g., typed in well after\n    the original\
    \ message has been printed by the machine) should be\n    encouraged to include\
    \ them as well.\n    It is permissible to not include the entire previous \"References\"\
    \n    line if it is too long.  An attempt should be made to include a\n    reasonable\
    \ number of backwards references.\n"
- title: 2.2.6.  Control
  contents:
  - "2.2.6.  Control\n    If a message contains a \"Control\" line, the message is\
    \ a control\n    message.  Control messages are used for communication among USENET\n\
    \    host machines, not to be read by users.  Control messages are\n    distributed\
    \ by the same newsgroup mechanism as ordinary messages.\n    The body of the \"\
    Control\" header line is the message to the host.\n    For upward compatibility,\
    \ messages that match the newsgroup pattern\n    \"all.all.ctl\" should also be\
    \ interpreted as control messages.  If no\n    \"Control\" header is present on\
    \ such messages, the subject is used as\n    the control message.  However, messages\
    \ on newsgroups matching this\n    pattern do not conform to this standard.\n\
    \    Also for upward compatibility, if the first 4 characters of the\n    \"Subject:\"\
    \ line are \"cmsg\", the rest of the \"Subject:\" line should\n    be interpreted\
    \ as a control message.\n"
- title: 2.2.7.  Distribution
  contents:
  - "2.2.7.  Distribution\n    This line is used to alter the distribution scope of\
    \ the message.\n    It is a comma separated list similar to the \"Newsgroups\"\
    \ line.  User\n    subscriptions are still controlled by \"Newsgroups\", but the\
    \ message\n    is sent to all systems subscribing to the newsgroups on the\n \
    \   \"Distribution\" line in addition to the \"Newsgroups\" line.  For the\n \
    \   message to be transmitted, the receiving site must normally receive\n    one\
    \ of the specified newsgroups AND must receive one of the\n    specified distributions.\
    \  Thus, a message concerning a car for sale\n    in New Jersey might have headers\
    \ including:\n                   Newsgroups: rec.auto,misc.forsale\n         \
    \          Distribution: nj,ny\n    so that it would only go to persons subscribing\
    \ to rec.auto or misc.\n    for sale within New Jersey or New York.  The intent\
    \ of this header\n    is to restrict the distribution of a newsgroup further,\
    \ not to\n    increase it.  A local newsgroup, such as nj.crazy-eddie, will\n\
    \    probably not be propagated by hosts outside New Jersey that do not\n    show\
    \ such a newsgroup as valid.  A follow-up message should default\n    to the same\
    \ \"Distribution\" line as the original message, but the\n    user can change\
    \ it to a more limited one, or escalate the\n    distribution if it was originally\
    \ restricted and a more widely\n    distributed reply is appropriate.\n"
- title: 2.2.8.  Organization
  contents:
  - "2.2.8.  Organization\n    The text of this line is a short phrase describing\
    \ the organization\n    to which the sender belongs, or to which the machine belongs.\
    \  The\n    intent of this line is to help identify the person posting the\n \
    \   message, since host names are often cryptic enough to make it hard\n    to\
    \ recognize the organization by the electronic address.\n"
- title: 2.2.9.  Keywords
  contents:
  - "2.2.9.  Keywords\n    A few well-selected keywords identifying the message should\
    \ be on\n    this line.  This is used as an aid in determining if this message\
    \ is\n    interesting to the reader.\n"
- title: 2.2.10.  Summary
  contents:
  - "2.2.10.  Summary\n    This line should contain a brief summary of the message.\
    \  It is\n    usually used as part of a follow-up to another message.  Again,\
    \ it\n    is very useful to the reader in determining whether to read the\n  \
    \  message.\n"
- title: 2.2.11.  Approved
  contents:
  - "2.2.11.  Approved\n    This line is required for any message posted to a moderated\n\
    \    newsgroup.  It should be added by the moderator and consist of his\n    mail\
    \ address.  It is also required with certain control messages.\n"
- title: 2.2.12.  Lines
  contents:
  - "2.2.12.  Lines\n    This contains a count of the number of lines in the body\
    \ of the\n    message.\n"
- title: 2.2.13.  Xref
  contents:
  - "2.2.13.  Xref\n    This line contains the name of the host (with domains omitted)\
    \ and a\n    white space separated list of colon-separated pairs of newsgroup\n\
    \    names and message numbers.  These are the newsgroups listed in the\n    \"\
    Newsgroups\" line and the corresponding message numbers from the\n    spool directory.\n\
    \    This is only of value to the local system, so it should not be\n    transmitted.\
    \  For example, in:\n               Path: seismo!lll-crg!lll-lcc!pyramid!decwrl!reid\n\
    \               From: reid@decwrl.DEC.COM (Brian Reid)\n               Newsgroups:\
    \ news.lists,news.groups\n               Subject: USENET READERSHIP SUMMARY REPORT\
    \ FOR SEP 86\n               Message-ID: <5658@decwrl.DEC.COM>\n             \
    \  Date: 1 Oct 86 11:26:15 GMT\n               Organization: DEC Western Research\
    \ Laboratory\n               Lines: 441\n               Approved: reid@decwrl.UUCP\n\
    \               Xref: seismo news.lists:461 news.groups:6378\n    the \"Xref\"\
    \ line shows that the message is message number 461 in the\n    newsgroup news.lists,\
    \ and message number 6378 in the newsgroup\n    news.groups, on host seismo. \
    \ This information may be used by\n    certain user interfaces.\n"
- title: 3.  Control Messages
  contents:
  - "3.  Control Messages\n    This section lists the control messages currently defined.\
    \  The body\n    of the \"Control\" header line is the control message.  Messages\
    \ are a\n    sequence of zero or more words, separated by white space (blanks\
    \ or\n    tabs).  The first word is the name of the control message, remaining\n\
    \    words are parameters to the message.  The remainder of the header\n    and\
    \ the body of the message are also potential parameters; for\n    example, the\
    \ \"From\" line might suggest an address to which a\n    response is to be mailed.\n\
    \    Implementors and administrators may choose to allow control messages\n  \
    \  to be carried out automatically, or to queue them for annual\n    processing.\
    \  However, manually processed messages should be dealt\n    with promptly.\n\
    \    Failed control messages should NOT be mailed to the originator of\n    the\
    \ message, but to the local \"usenet\" account.\n"
- title: 3.1.  Cancel
  contents:
  - "3.1.  Cancel\n                     cancel <Message-ID>\n    If a message with\
    \ the given Message-ID is present on the local\n    system, the message is cancelled.\
    \  This mechanism allows a user to\n    cancel a message after the message has\
    \ been distributed over the\n    network.\n    If the system is unable to cancel\
    \ the message as requested, it\n    should not forward the cancellation request\
    \ to its neighbor systems.\n    Only the author of the message or the local news\
    \ administrator is\n    allowed to send this message.  The verified sender of\
    \ a message is\n    the \"Sender\" line, or if no \"Sender\" line is present,\
    \ the \"From\"\n    line.  The verified sender of the cancel message must be the\
    \ same as\n    either the \"Sender\" or \"From\" field of the original message.\
    \  A\n    verified sender in the cancel message is allowed to match an\n    unverified\
    \ \"From\" in the original message.\n"
- title: 3.2.  Ihave/Sendme
  contents:
  - "3.2.  Ihave/Sendme\n                   ihave <Message-ID list> [<remotesys>]\n\
    \                   sendme <Message-ID list> [<remotesys>]\n    This message is\
    \ part of the ihave/sendme protocol, which allows one\n    host (say A) to tell\
    \ another host (B) that a particular message has\n    been received on A.  Suppose\
    \ that host A receives message\n    \"<1234@ucbvax.Berkeley.edu>\", and wishes\
    \ to transmit the message to\n    host B.\n    A sends the control message \"\
    ihave <1234@ucbvax.Berkeley.edu> A\" to\n    host B (by posting it to newsgroup\
    \ to.B).  B responds with the\n    control message \"sendme <1234@ucbvax.Berkeley.edu>\
    \ B\" (on newsgroup\n    to.A), if it has not already received the message.  Upon\
    \ receiving\n    the sendme message, A sends the message to B.\n    This protocol\
    \ can be used to cut down on redundant traffic between\n    hosts.  It is optional\
    \ and should be used only if the particular\n    situation makes it worthwhile.\
    \  Frequently, the outcome is that,\n    since most original messages are short,\
    \ and since there is a high\n    overhead to start sending a new message with\
    \ UUCP, it costs as much\n    to send the ihave as it would cost to send the message\
    \ itself.\n    One possible solution to this overhead problem is to batch requests.\n\
    \    Several Message-ID's may be announced or requested in one message.\n    If\
    \ no Message-ID's are listed in the control message, the body of\n    the message\
    \ should be scanned for Message-ID's, one per line.\n"
- title: 3.3.  Newgroup
  contents:
  - "3.3.  Newgroup\n                      newgroup <groupname> [moderated]\n    This\
    \ control message creates a new newsgroup with the given name.\n    Since no messages\
    \ may be posted or forwarded until a newsgroup is\n    created, this message is\
    \ required before a newsgroup can be used.\n    The body of the message is expected\
    \ to be a short paragraph\n    describing the intended use of the newsgroup.\n\
    \    If the second argument is present and it is the keyword moderated,\n    the\
    \ group should be created moderated instead of the default of\n    unmoderated.\
    \  The newgroup message should be ignored unless there is\n    an \"Approved\"\
    \ line in the same message header.\n"
- title: 3.4.  Rmgroup
  contents:
  - "3.4.  Rmgroup\n                            rmgroup <groupname>\n    This message\
    \ removes a newsgroup with the given name.  Since the\n    newsgroup is removed\
    \ from every host on the network, this command\n    should be used carefully by\
    \ a responsible administrator.  The\n    rmgroup message should be ignored unless\
    \ there is an \"Approved:\"\n    line in the same message header.\n"
- title: 3.5.  Sendsys
  contents:
  - "3.5.  Sendsys\n                           sendsys (no arguments)\n    The sys\
    \ file, listing all neighbors and the newsgroups to be sent to\n    each neighbor,\
    \ will be mailed to the author of the control message\n    (\"Reply-To\", if present,\
    \ otherwise \"From\").  This information is\n    considered public information,\
    \ and it is a requirement of membership\n    in USENET that this information be\
    \ provided on request, either\n    automatically in response to this control message,\
    \ or manually, by\n    mailing the requested information to the author of the\
    \ message.\n    This information is used to keep the map of USENET up to date,\
    \ and\n    to determine where netnews is sent.\n    The format of the file mailed\
    \ back to the author should be the same\n    as that of the sys file.  This format\
    \ has one line per neighboring\n    host (plus one line for the local host), containing\
    \ four colon\n    separated fields.  The first field has the host name of the\n\
    \    neighbor, the second field has a newsgroup pattern describing the\n    newsgroups\
    \ sent to the neighbor.  The third and fourth fields are\n    not defined by this\
    \ standard.  The sys file is not the same as the\n    UUCP L.sys file.  A sample\
    \ response is:\n      From: cbosgd!mark  (Mark Horton)\n      Date: Sun, 27 Mar\
    \ 83 20:39:37 -0500\n      Subject: response to your sendsys request\n      To:\
    \ mark@cbosgd.ATT.COM\n      Responding-System: cbosgd.ATT.COM\n      cbosgd:osg,cb,btl,bell,world,comp,sci,rec,talk,misc,news,soc,to,\n\
    \            test\n      ucbvax:world,comp,to.ucbvax:L:\n      cbosg:world,comp,bell,btl,cb,osg,to.cbosg:F:/usr/spool/outnews\n\
    \            /cbosg\n      cbosgb:osg,to.cbosgb:F:/usr/spool/outnews/cbosgb\n\
    \      sescent:world,comp,bell,btl,cb,to.sescent:F:/usr/spool/outnews\n      \
    \      /sescent\n      npois:world,comp,bell,btl,ug,to.npois:F:/usr/spool/outnews/npois\n\
    \      mhuxi:world,comp,bell,btl,ug,to.mhuxi:F:/usr/spool/outnews/mhuxi\n"
- title: 3.6.  Version
  contents:
  - "3.6.  Version\n                           version (no arguments)\n    The name\
    \ and version of the software running on the local system is\n    to be mailed\
    \ back to the author of the message (\"Reply-to\" if\n    present, otherwise \"\
    From\").\n"
- title: 3.7.  Checkgroups
  contents:
  - "3.7.  Checkgroups\n    The message body is a list of \"official\" newsgroups\
    \ and their\n    description, one group per line.  They are compared against the\
    \ list\n    of active newsgroups on the current host.  The names of any obsolete\n\
    \    or new newsgroups are mailed to the user \"usenet\" and descriptions\n  \
    \  of the new newsgroups are added to the help file used when posting\n    news.\n"
- title: 4.  Transmission Methods
  contents:
  - "4.  Transmission Methods\n    USENET is not a physical network, but rather a\
    \ logical network\n    resting on top of several existing physical networks. \
    \ These\n    networks include, but are not limited to, UUCP, the Internet, an\n\
    \    Ethernet, the BLICN network, an NSC Hyperchannel, and a BERKNET.\n    What\
    \ is important is that two neighboring systems on USENET have\n    some method\
    \ to get a new message, in the format listed here, from\n    one system to the\
    \ other, and once on the receiving system, processed\n    by the netnews software\
    \ on that system.  (On UNIX systems, this\n    usually means the rnews program\
    \ being run with the message on the\n    standard input. <1>)\n    It is not a\
    \ requirement that USENET hosts have mail systems capable\n    of understanding\
    \ the Internet mail syntax, but it is strongly\n    recommended.  Since \"From\"\
    , \"Reply-To\", and \"Sender\" lines use the\n    Internet syntax, replies will\
    \ be difficult or impossible without an\n    Internet mailer.  A host without\
    \ an Internet mailer can attempt to\n    use the \"Path\" header line for replies,\
    \ but this field is not\n    guaranteed to be a working path for replies.  In\
    \ any event, any host\n    generating or forwarding news messages must have an\
    \ Internet address\n    that allows them to receive mail from hosts with Internet\
    \ mailers,\n    and they must include their Internet address on their From line.\n"
- title: 4.1.  Remote Execution
  contents:
  - "4.1.  Remote Execution\n    Some networks permit direct remote command execution.\
    \  On these\n    networks, news may be forwarded by spooling the rnews command\
    \ with\n    the message on the standard input.  For example, if the remote\n \
    \   system is called remote, news would be sent over a UUCP link\n    with the\
    \ command:\n                              uux - remote!rnews\n    and on a Berknet:\n\
    \                              net -mremote rnews\n    It is important that the\
    \ message be sent via a reliable mechanism,\n    normally involving the possibility\
    \ of spooling, rather than direct\n    real-time remote execution.  This is because,\
    \ if the remote system\n    is down, a direct execution command will fail, and\
    \ the message will\n    never be delivered.  If the message is spooled, it will\
    \ eventually\n    be delivered when both systems are up.\n"
- title: 4.2.  Transfer by Mail
  contents:
  - "4.2.  Transfer by Mail\n    On some systems, direct remote spooled execution\
    \ is not possible.\n    However, most systems support electronic mail, and a news\
    \ message\n    can be sent as mail.  One approach is to send a mail message which\n\
    \    is identical to the news message: the mail headers are the news\n    headers,\
    \ and the mail body is the news body.  By convention, this\n    mail is sent to\
    \ the user newsmail on the remote machine.\n    One problem with this method is\
    \ that it may not be possible to\n    convince the mail system that the \"From\"\
    \ line of the message is\n    valid, since the mail message was generated by a\
    \ program on a\n    system different from the source of the news message.  Another\n\
    \    problem is that error messages caused by the mail transmission\n    would\
    \ be sent to the originator of the news message, who has no\n    control over\
    \ news transmission between two cooperating hosts\n    and does not know whom\
    \ to contact.  Transmission error messages\n    should be directed to a responsible\
    \ contact person on the\n    sending machine.\n    A solution to this problem\
    \ is to encapsulate the news message into a\n    mail message, such that the entire\
    \ message (headers and body) are\n    part of the body of the mail message.  The\
    \ convention here is that\n    such mail is sent to user rnews on the remote system.\
    \  A mail\n    message body is generated by prepending the letter N to each line\
    \ of\n    the news message, and then attaching whatever mail headers are\n   \
    \ convenient to generate.  The N's are attached to prevent any special\n    lines\
    \ in the news message from interfering with mail transmission,\n    and to prevent\
    \ any extra lines inserted by the mailer (headers,\n    blank lines, etc.) from\
    \ becoming part of the news message.  A\n    program on the receiving machine\
    \ receives mail to rnews, extracting\n    the message itself and invoking the\
    \ rnews program.  An example in\n    this format might look like this:\n     \
    \           Date: Mon, 3 Jan 83 08:33:47 MST\n                From: news@cbosgd.ATT.COM\n\
    \                Subject: network news message\n                To: rnews@npois.ATT.COM\n\
    \                NPath: cbosgd!mhuxj!harpo!utah-cs!sask!derek\n              \
    \  NFrom: derek@sask.UUCP (Derek Andrew)\n                NNewsgroups: misc.test\n\
    \                NSubject: necessary test\n                NMessage-ID: <176@sask.UUCP>\n\
    \                NDate: Mon, 3 Jan 83 00:59:15 MST\n                N\n      \
    \          NThis really is a test.  If anyone out there more than 6\n        \
    \        Nhops away would kindly confirm this note I would\n                Nappreciate\
    \ it.  We suspect that our news postings\n                Nare not getting out\
    \ into the world.\n                N\n    Using mail solves the spooling problem,\
    \ since mail must always be\n    spooled if the destination host is down.  However,\
    \ it adds more\n    overhead to the transmission process (to encapsulate and extract\
    \ the\n    message) and makes it harder for software to give different\n    priorities\
    \ to news and mail.\n"
- title: 4.3.  Batching
  contents:
  - "4.3.  Batching\n    Since news messages are usually short, and since a large\
    \ number of\n    messages are often sent between two hosts in a day, it may make\n\
    \    sense to batch news messages.  Several messages can be combined into\n  \
    \  one large message, using conventions agreed upon in advance by the\n    two\
    \ hosts.  One such batching scheme is described here; its use is\n    highly recommended.\n\
    \    News messages are combined into a script, separated by a header of\n    the\
    \ form:\n                   #! rnews 1234\n    where 1234 is the length of the\
    \ message in bytes.  Each such line is\n    followed by a message containing the\
    \ given number of bytes.  (The\n    newline at the end of each line of the message\
    \ is counted as one\n    byte, for purposes of this count, even if it is stored\
    \ as <CARRIAGE\n    RETURN><LINE FEED>.)  For example, a batch of message might\
    \ look\n    like this:\n                #! rnews 239\n                From: jerry@eagle.ATT.COM\
    \ (Jerry Schwarz)\n                Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n    \
    \            Newsgroups: news.announce\n                Subject: Usenet Etiquette\
    \ -- Please Read\n                Message-ID: <642@eagle.ATT.COM>\n          \
    \      Date: Fri, 19 Nov 82 16:14:55 EST\n                Approved: mark@cbosgd.ATT.COM\n\
    \                Here is an important message about USENET Etiquette.\n      \
    \          #! rnews 234\n                From: jerry@eagle.ATT.COM (Jerry Schwarz)\n\
    \                Path: cbosgd!mhuxj!mhuxt!eagle!jerry\n                Newsgroups:\
    \ news.announce\n                Subject: Notes on Etiquette message\n       \
    \         Message-ID: <643@eagle.ATT.COM>\n                Date: Fri, 19 Nov 82\
    \ 17:24:12 EST\n                Approved: mark@cbosgd.ATT.COM\n              \
    \  There was something I forgot to mention in the last\n                message.\n\
    \    Batched news is recognized because the first character in the\n    message\
    \ is #.  The message is then passed to the unbatcher for\n    interpretation.\n\
    \    The second argument (in this example rnews) determines which\n    batching\
    \ scheme is being used.  Cooperating hosts may use whatever\n    scheme is appropriate\
    \ for them.\n"
- title: 5.  The News Propagation Algorithm
  contents:
  - "5.  The News Propagation Algorithm\n    This section describes the overall scheme\
    \ of USENET and the\n    algorithm followed by hosts in propagating news to the\
    \ entire\n    logical network.  Since all hosts are affected by incorrectly\n\
    \    formatted messages and by propagation errors, it is important\n    for the\
    \ method to be standardized.\n    USENET is a directed graph.  Each node in the\
    \ graph is a host\n    computer, and each arc in the graph is a transmission path\
    \ from\n    one host to another host.  Each arc is labeled with a newsgroup\n\
    \    pattern, specifying which newsgroup classes are forwarded along\n    that\
    \ link.  Most arcs are bidirectional, that is, if host A\n    sends a class of\
    \ newsgroups to host B, then host B usually sends\n    the same class of newsgroups\
    \ to host A.  This bidirectionality\n    is not, however, required.\n    USENET\
    \ is made up of many subnetworks.  Each subnet has a name, such\n    as comp or\
    \ btl.  Each subnet is a connected graph, that is, a path\n    exists from every\
    \ node to every other node in the subnet.  In\n    addition, the entire graph\
    \ is (theoretically) connected.  (In\n    practice, some political considerations\
    \ have caused some hosts to be\n    unable to post messages reaching the rest\
    \ of the network.)\n    A message is posted on one machine to a list of newsgroups.\
    \ That\n    machine accepts it locally, then forwards it to all its neighbors\n\
    \    that are interested in at least one of the newsgroups of the\n    message.\
    \  (Site A deems host B to be \"interested\" in a newsgroup if\n    the newsgroup\
    \ matches the pattern on the arc from A to B.  This\n    pattern is stored in\
    \ a file on the A machine.)  The hosts receiving\n    the incoming message examine\
    \ it to make sure they really want the\n    message, accept it locally, and then\
    \ in turn forward the message to\n    all their interested neighbors.  This process\
    \ continues until the\n    entire network has seen the message.\n    An important\
    \ part of the algorithm is the prevention of loops.  The\n    above process would\
    \ cause a message to loop along a cycle forever.\n    In particular, when host\
    \ A sends a message to host B, host B will\n    send it back to host A, which\
    \ will send it to host B, and so on.\n    One solution to this is the history\
    \ mechanism.  Each host keeps\n    track of all messages it has seen (by their\
    \ Message-ID) and\n    whenever a message comes in that it has already seen, the\
    \ incoming\n    message is discarded immediately.  This solution is sufficient\
    \ to\n    prevent loops, but additional optimizations can be made to avoid\n \
    \   sending messages to hosts that will simply throw them away.\n    One optimization\
    \ is that a message should never be sent to a machine\n    listed in the \"Path\"\
    \ line of the header.  When a machine name is\n    in the \"Path\" line, the message\
    \ is known to have passed through the\n    machine.  Another optimization is that,\
    \ if the message originated\n    on host A, then host A has already seen the message.\
    \  Thus, if a\n    message is posted to newsgroup misc.misc, it will match the\
    \ pattern\n    misc.all (where all is a metasymbol that matches any string), and\n\
    \    will be forwarded to all hosts that subscribe to misc.all (as\n    determined\
    \ by what their neighbors send them).  These hosts make up\n    the misc subnetwork.\
    \  A message posted to btl.general will reach all\n    hosts receiving btl.all,\
    \ but will not reach hosts that do not get\n    btl.all.  In effect, the messages\
    \ reaches the btl subnetwork.  A\n    messages posted to newsgroups misc.misc,btl.general\
    \ will reach all\n    hosts subscribing to either of the two classes.\n"
- title: Notes
  contents:
  - "Notes\n    <1>  UNIX is a registered trademark of AT&T.\n"
