- title: __initial_text__
  contents:
  - '               Connection-By-Name: User-Oriented Protocol

    '
- title: I. Introduction
  contents:
  - "I. Introduction\n   Shortly after the first of the year, 1971, the Center for\
    \ Advanced\n   Computation (CAC) at the University of Illinois will begin to use\
    \ the\n   facilities of the ARPA network.  We are the first of a small class of\n\
    \   network nodes whose chief characteristic is that the node is a port\n   to\
    \ the network only.  All computational power for these nodes will be\n   taken\
    \ from other nodes on the network, ILLIAC IV for example.\n   An important characteristic\
    \ of most of the users at our Center is a\n   lack of sophistication about data\
    \ communication techniques and\n   practices.  The user will eventually be in\
    \ the majority of those\n   using the network from all nodes but the problem is\
    \ ours, almost from\n   the start.\n   In our discussions with our prospective\
    \ users of the network as we\n   designed our port facility, we found that the\
    \ greatest confusion and\n   consternation arose over having to deal with network\
    \ protocol at the\n   \"nitty-gritty\" level of sockets, links, etc.  While most\
    \ of them have\n   been acclimated to computer systems at the file and device-by-name\n\
    \   level where the software system handles details, here on the current\n   version\
    \ of the network, the user handles all details.\n   Thus, we were compelled to\
    \ seek a user level interface to network\n   protocol where all user protocol\
    \ is handled symbolically with system\n   procedures making the translation into\
    \ host-to-host protocol.\n   Currently, connections are established by exchange\
    \ of known socket\n   numbers for the four loose ends of the connection.  This\
    \ requires\n   either that the user or process always know all socket numbers\
    \ he\n   will use at his or other installations OR that his NCP (and/or\n   related\
    \ software) remember them for him, allowing him to reference\n   them symbolically.\n\
    \   We propose a more general solution to the \"telephone book\" approach\n  \
    \ of obtaining socket numbers for user or processes.  Only the host, at\n   each\
    \ site, knows its socket number space at any given instant in time\n   as well\
    \ as the status of the user or process to which a socket number\n   assigned.\
    \  Additionally, most permanently assigned devices and/or\n   processes are known\
    \ by standard mnemonic labels such as DSK (disk),\n   LP (line printer), CR (card\
    \ reader), TECO (PDP-10 text editor), etc.\n   In most systems, all other communications\
    \ are done through files or\n   pseudo files, known only to the user by their\
    \ names and not by their\n   internal mechanism.  In other words, most intrasystem\
    \ communication\n   at the user level is by symbolic reference to both devices\
    \ and\n   process.\n   We propose facilities, by extension of the current protocol,\
    \ that\n   will allow users to use the network on a connection-by-name basis as\n\
    \   they already do in their host system.  In the remainder of this paper\n  \
    \ we will present the suggested extensions to the current protocol and\n   give\
    \ an example of its usage in a dialogue between a user at CAC,\n   controlling\
    \ two processes; one at UTAH, and one at PAOLI (ILLIAC IV\n   construction site).\n"
- title: II. Proposed Extensions to Protocol
  contents:
  - "II. Proposed Extensions to Protocol\n   Let us define a class of syntax elements\
    \ for use in our proposed\n   extensions to the protocol. (This syntax is expressed\
    \ in the\n   metalanguage of the ALGOL-60 report.)\n   <label> ::= <usercode>/<filename>|<device\
    \ name>\n   <devicename> ::= <string>\n   <usercode> ::= <string>\n   <filename>\
    \ ::= <string>|<filename>/<string>\n   <string> ::= <char>|<char> <string>\n \
    \  <char> ::= A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0|1|2|\n   \
    \           3|4|5|6|7|8|9|.|,\n   A standard set of <devicenames> should be established\
    \ to reference\n   line printers, card readers, etc. - those hard peripherals\
    \ with fixed\n   processing tasks.  A beginning set of <labels> might be:\n  \
    \    LP            line printer\n      CR            card reader\n      CP   \
    \         card punch\n      PTR           paper tape recorder\n      PTP     \
    \      paper tape punch\n      MT            magnetic tape\n      DSK        \
    \   disk\n      TTY           teletype compatible terminal\n   The format of <usercode>\
    \ is that of the responding host for the\n   current discussion.  Future discussions\
    \ about foreign-user usage of\n   host facilities may result in a standard format\
    \ for the entire\n   network.\n   Most systems can identify files by one <string>\
    \ plus the <usercode>.\n   Others, such as the Burroughs B6500 use multifile identifiers\
    \ where\n   many <strings> may be used in the <label>.  The set of <char> is that\n\
    \   proposed in RFC 66, i.e., ASCII.\n   The proposed extensions involve a \"\
    request\" for information and\n   several variants of a \"response\" to the request.\n\
    \   A. Request for Socket Number for this Label\n      <RFSNL> <my socker #> <0>\
    \ <label>\n   The RFSNL is sent on the control link to the destination host\n\
    \   requesting the socket number of the attached <label>.\n   B. Acknowledgement\
    \ of Request\n   Upon receipt of an <RFSNL>, the destination host returns one\
    \ of three\n   responses:\n      <AORP> <desired socket#> <your socket #>\n  \
    \    <AORN> <desired socket#> <your socket #>\n      <AORN> <0> <your socket #>\n\
    \   The first response returns the requested socket number and signifies\n   that\
    \ the user, device, or process exists.  The second response\n   returns the requested\
    \ socket number but signifies that the user,\n   device, or process is not currently\
    \ available for connection.  The\n   last response signifies that no such user,\
    \ device, or process exists.\n   C. Discussion\n   The above extensions to the\
    \ protocol are intended to enhance user\n   acclimation to network usage.  The\
    \ element of strangeness is subdued\n   and, in fact, for user of the B6500 erased.\
    \  Attached to this RFC is\n   an appendix containing a preliminary description\
    \ of the user language\n   of the network port facility being brought up at the\
    \ CAC.  We now\n   present a sample user session on the CAC facility and detail\
    \ how the\n   protocol is used to establish the proper communication paths.\n"
- title: III. Example of User Dialogue
  contents:
  - "III. Example of User Dialogue\n   Assume a user residing at CAC, whose site code\
    \ is URBANA.  His\n   terminal is an alphanumeric CRT terminal and we assume solution\
    \ of\n   code conversion problems for network communications.\n   The sample user\
    \ session will involve the setting up of two processes\n   at two host sites with\
    \ control from the third host site.  All\n   operations can be accomplished with\
    \ the current protocol plus the\n   proposed extensions.\n   In addition, we also\
    \ assume that some form of standard user code is\n   in use for all host sites\
    \ uniquely identifying every network user\n   when he is present.\n   Output keyed\
    \ by systems will be underlined.  Comments are offset to\n   the right for legibility.\
    \  All statements about the UTAH system are\n   purely hypothetical.\n    User\
    \ Dialogue                           Comments\n                              \
    \   The user moves to the terminal, applies\n                                \
    \ power and types:\n   HELLO\n                                 The CAC system\
    \ responds for login\n                                 purposes with:\n   USER=\
    \ GROSSMAN\n   ------\n                                 for the user's code.\n\
    \   1437 TR7/GROSSMAN LOGGED IN\n   ___________________________\n   LINE PRINTER\
    \ DOWN TILL 1600\n   ___________________________\n                           \
    \      This acknowledges proper usercode and\n                               \
    \  sends any appropriate notes on system\n                                 status.\n\
    \   ! LINK TO ILLIAC\n                                 The exclamation point (!)\
    \ is the escape\n                                 character which flags direct\
    \ input to\n                                 the PDP-11 OS:\n                \
    \                 User requests connection to the ILLIAC\n                   \
    \              IV node.  NCP operations establish link\n                     \
    \            from user terminal to B6500 MCP.\n   1437 TR7/GROSSMAN LINKED ILLIAC\n\
    \   -------------------------------\n                                 Completes\
    \ response.\n   ? EXECUTE DISK/PRINT; FILE DISK = ALPHA@UTAH REMOTE QUEUE; END\n\
    \                                 1. DISK/PRINT lists text files from\n      \
    \                           disk to B6500 line printer.\n                    \
    \             2. REMOTE files on the B6500 will refer\n                      \
    \           to files going to/coming from the\n                              \
    \   network.\n                                 3. ALPHA@UTAH specifies that a\n\
    \                                 connection is to be made via the\n         \
    \                        network to a file GROSSMAN/ALPHA from\n             \
    \                    the UTAH node.\n                                 4. QUEUE\
    \ specifies periodic attempt to\n                                 complete the\
    \ connection.\n                                 The B6500 will ask for the socket\n\
    \                                 number associated with GROSSMAN/ALPHA\n    \
    \                             until an AORP is received.\n                   \
    \              The language is that of the monitor for\n                     \
    \            the B6500\n   ! FLAG ILLIAC =#\n                                \
    \ All data received or sent on the link\n                                 to ILLIAC\
    \ must now be prefaced by the #\n                                 character.\n\
    \   ! LINK TO UTAH\n   1441 TR7/ GROSSMAN LINKED UTAH\n   ------------------------------\n\
    \                                 User now links into UTAH PDP-10 system.\n  \
    \ #1410: DISK/PRINT BOJ 1441\n   --------------------------\n                \
    \                 System message stating beginning-of-job\n                  \
    \               for DISK/PRINT on B6500.\n   ^C\n    . R PIP\n    -\n        \
    \                         User will run PIP on a listing file.\n   * NETWKR:ALPHA@ILLIAC\
    \ <- DSK:FIL.TMP\n   -\n                                 NETWRK is network file\
    \ type for UTAH\n                                 system.  Mechanism for file\
    \ control\n                                 basically same as for B6500 system.\n\
    \                                 Since PIP will be sending to the\n         \
    \                        network, it does not request a socket #\n           \
    \                      from the B6500 NCP but instead\n                      \
    \           instructs its NCP to acknowledge any\n                           \
    \      request for GROSSMAN/ALPHA from ILLIAC\n                              \
    \   with the socket number PIP will send\n                                 from.\
    \  As soon as the B6500 NCP tries\n                                 again to find\
    \ GROSSMAN/ALPHA from UTAH,\n                                 success occurs and\
    \ the socket numbers\n                                 are exchanged with subsequent\n\
    \                                 connection establishment.\n   *\n   -\n    \
    \                             PIP completes the task and terminates\n        \
    \                         the connection to the B6500.\n   #14: DISK/PRINT EOJ\
    \ 1448\n                                 B6500 acknowledges completion of task.\n\
    \   #? TO SPO: SAVE LIST GROSSMANHA FOR MAIL(U OF I/GROSSMAN)\n              \
    \                   User sends message to B6500 operator.\n                  \
    \               User logs out of UTAH.\n   JOB 10, USER GROSSMAN@URBANA TY68 AT\
    \ 1448 ON 22-NOV-70\n   ------------------------------------------------------\n\
    \   FILES DELETED: 0, FILES SAVEDL RUNTIME 0 MIN 12 SEC\n   ---------------------------------------------------\n\
    \                                 System logout listing.\n   ! END UTAH\n   1449\
    \ TR7/GROSSMAN DELINKED UTAH\n   -------------------------------\n           \
    \                      Link to UTAH system now dropped.\n   # FROM SPO: LISTING\
    \ MAILED\n   --------------------------\n                                 B6500\
    \ operator response.\n   ! LEAVE\n                                 User desired\
    \ to log out of CAC system.\n   1450 TR7/GROSSMAN DELINKED ILLIAC\n   ---------------------------------\n\
    \                                 Link to ILLIAC system new dropped.\n   1450\
    \ TR7/GROSSMAN LOGGED OUT\n   ----------------------------\n                 \
    \                Session over.\n        Syntax and Semantics for the Terminal\
    \ User Control Language\n           for the Proposed PDP-11 ARPA Network Terminal\
    \ System\n                                    by\n                           \
    \   G. R. Grossman\n"
- title: Prefatory Notes
  contents:
  - "Prefatory Notes\n   The following document represents a first attempt at providing\
    \ a\n   control language for the terminal user of the PDP-11 network terminal\n\
    \   system.  This language is deemed sufficiently powerful to provide the\n  \
    \ user with a minimal facility for attaching to remote host computers\n   over\
    \ the ARPA network, initiating processes, and routing data flow to\n   local peripheral\
    \ devices.\n   The hardware system as envisioned will comprise a PDP-11/20 with\
    \ a\n   least 8k of core, a small disk (512 kilobytes of storage), a console\n\
    \   teletype, and optional card readers, line printers, DECtapes, User\n   terminals,\
    \ card punches, storage scopes, etc.\n   The executive system will consist of\
    \ a basic driver system which will\n   control autonomous processes and interrupt-driven\
    \ device service\n   routines.  The system will keep tables in core and on the\
    \ small disk\n   for logging peripheral usage, keeping track of connections on\
    \ the\n   network, queuing up of tasks that cannot be immediately performed,\n\
    \   storing attributes of remote hosts, etc.\n   Since network hosts handle communications\
    \ in character-at-a-time or\n   message modes, and may or may not echo characters\
    \ over the network,\n   the system takes this into account when handling connections\
    \ to\n   specific hosts.  If the connection is in message mode, minimal line-\n\
    \   by-line editing facility (character and line deletion) is provided.\n   A\
    \ means for the user to change flag and message transmit characters\n   is provided\
    \ to prevent incompatibilities which may arise between the\n   PDP-11 and other\
    \ hosts.\n   This document does not describe control card syntax for card reader\n\
    \   usage, nor does it describe the operator's control language.  These\n   will\
    \ be described in later documents.\n"
- title: Character Set
  contents:
  - "Character Set\n   <character> ::= <letter> | <digit> | <special> | <space>\n\
    \   <letter>    ::= A | B | ... | Y | Z\n   <digit>     ::= 0 | 1 | ... | 8 |\
    \ 9\n   <special>   ::= ! | \" | # | $ | % | & | ' | ( | ) | * | + | , | - |\n\
    \                   . | / | : | : | < | = | > | ? | @ | [ |  | ] | ^ |\n     \
    \                |` | { | <bar> | }\n"
- title: Identifiers
  contents:
  - "Identifiers\n   <identifiers> ::= <letter> | <identifier> <letter> |\n      \
    \               <identifier> <digit>\n        Semantics:  Identifiers are used\
    \ to designate peripheral units,\n        host computers, etc.  No identifier\
    \ may exceed 8 characters in\n        length.\n"
- title: Numbers
  contents:
  - "Numbers\n   <integer> ::= <digit> | <integer> <digit>\n        Semantics:  <integer>\
    \ are the only form of number allowed in the\n        control language.  They\
    \ must not exceed 2^15-1.\n"
- title: Peripheral Designator
  contents:
  - "Peripheral Designator\n   <peripheral designator> ::= <device class> <device\
    \ number> | OPR\n   <device number>         ::= <digit> | <digit> <digit> |\n\
    \   <device class>          ::= CR | CP | LP | DT | TR | SS\n        Semantics:\
    \  Peripheral designators name specific peripheral\n        devices.  Device lasses\
    \ designate classes of peripherals.\n        OPR designates the operator's console\
    \ teletype.  The classes of\n        peripherals corresponding to the device classes\
    \ are given on the\n        following table:\n            <device class>     \
    \                 type of peripheral\n                CR                     \
    \             card reader\n                CP                                \
    \  card punch\n                LP                                  line printer\n\
    \                DT                                  DECtape\n               \
    \ TR                                  terminal\n                SS           \
    \                       storage scope\n"
- title: File Label
  contents:
  - "File Label\n   <file label>     ::=  <tape label> |  <tape label> / <tape file\
    \ name>\n   <tape label>     ::=  <identifier>\n   <tape file name> ::=  <identifier>\n\
    \        Semantics: File labels provide the means for designating tape\n     \
    \   files symbolically.  If the <tape label> form is used, the\n        designated\
    \ file is assumed to occupy the entire tape.\n"
- title: Flagged Control Statement
  contents:
  - "Flagged Control Statement\n   <flagged control statement>  ::= <flag> <control\
    \ statement>\n   <flag>                       ::= <special>\n        Semantics:\
    \ <Flagged control statement>s arc the user's names of\n        communicating\
    \ with the PDP-11 system.  The <flag> must be the\n        system default flag\
    \ (!) or a substitute which the user provides\n        by means of the <flag statement>.\
    \  Input to the system which\n        does not begin with a <flag> will be passed\
    \ on to the process to\n        which the user is connected, if any.\n"
- title: Control Statements
  contents:
  - "Control Statements\n   <control statement>  ::= <link statement> |\n        \
    \                    <copy statement> |\n                            <end statement>\
    \ |\n                            <user statement> |\n                        \
    \    <status statement> |\n                            <out statement> |\n   \
    \                         <to statement> |\n                            <escape\
    \ statement> |\n                            <back statement> |\n             \
    \               <delete statement> |\n                            <transmit statement>\
    \ |\n                            <lock statement> |\n                        \
    \    <unlock statement> |\n                            <assign statement> |\n\
    \                            <label statement> |\n                           \
    \ <create statement> |\n"
- title: Link Statement
  contents:
  - "Link Statement\n   <link statement> ::= LINK TO <host> <q>\n   <q>          \
    \    ::= <empty> |\n                        QUEUE   |\n                      \
    \  QUEUE    <integer>\n        Semantics: The Link statement directs the system\
    \ to set up a\n        connection between the user's unit and a remote host. \
    \ The <q>\n        construct allows the user to specify that, if the connection\n\
    \        cannot be set up immediately, the system is to keep trying.  If\n   \
    \     the QUEUE form is used, the system will keep trying\n        indefinitely.\
    \  If the QUEUE integer form is used, the system\n        will try for integer\
    \ minutes.\n"
- title: Copy Statement
  contents:
  - "Copy Statement\n   <copy statement>   ::= COPY <source> TO <dest> <q>\n   <source>\
    \           ::= NETWORK |\n                          <file label> |\n        \
    \                  <source class> |\n                          <source device>\n\
    \   <source class>     ::= CR | TR | SS |\n   <source device>    ::= <source class>\
    \ <device number>\n   <dest>             ::= NETWORK\n                       \
    \   <file label> |\n                          <dest class> |\n               \
    \           <dest device>\n   <dest class>       ::= CP | LP | TR | SS\n   <dest\
    \ device>      ::= <dest class> <device number>\n        Semantics: The <copy\
    \ statement> directs the system to set up a\n        connection between the <source>\
    \ and <dest> and copy records of\n        information between them.  If the <device\
    \ class> or <device>\n        form is used for either <source> or <dest>, the\
    \ copy process\n        cannot begin until a unit is assigned to the user.  If\
    \ the <file\n        label> form is used, the copy process can likewise not proceed\n\
    \        until the system has access to a properly labeled tape. if the\n    \
    \    NETWORK form is used, a connection to a remote process must be\n        pending.\n\
    \        The <q> construct has the same meaning as for the <link\n        statement>,\
    \ with the additional provision that the condition\n        that caused the process\
    \ to be incomplete may be the lack of a\n        device assignment.\n"
- title: End Statement
  contents:
  - "End Statement\n   <end statement>   ::= END\n        Semantics: The <end statement>\
    \ causes the current connection to\n        be terminated.\n"
- title: User Statement
  contents:
  - "User Statement\n   <user statement>  ::= USER = <identifier>\n        Semantics:\
    \ The <user statement> is used during the log in\n        process to allow the\
    \ user to identify himself.\n"
- title: Status Statement
  contents:
  - "Status Statement\n   <status statement> ::= STATUS <device class> |\n       \
    \                   STATUS <peripheral designator>\n        Semantics: The <status\
    \ statement> allows the user to interrogate\n        the system as to the status\
    \ of a device or class of devices.\n"
- title: Out Statement
  contents:
  - "Out Statement\n   <out statement> ::= OUT|LEAVE\n        Semantics: The <out\
    \ statement> allows a user to log out of the\n        system.  If the OUT form\
    \ is used, all queued process initiated\n        by the user are terminated. \
    \ The LEAVE from does not terminate\n        such pending queued processes so\
    \ long as these processes do not\n        directly involve the user's terminal.\n"
- title: To Statement
  contents:
  - "To Statement\n   <to statement> ::= TO CON :<text> |  TO <user> : <text>\n  \
    \      Semantics: The <to statement> allows the user to send a message\n     \
    \   to the operator or another logged-in user.\n"
- title: Flag Statement
  contents:
  - "Flag Statement\n   <flag statement> ::= FLAG = <special>\n        Semantics:\
    \ The <flag statement> allows the user to define the\n        character which\
    \ the system recognizes as preceding a control\n        statement as distinguished\
    \ from a message to a remote process to\n        which he may be attached.  The\
    \ default flag character is \"|\".\n"
- title: Back Statement
  contents:
  - "Back Statement\n   <back statement> ::= BACK ? {ascii special or control character}\n\
    \        Semantics: The <back statement> allows the user to define the\n     \
    \   character which, in control or message mode, causes the system\n        to\
    \ \"forget\" the previous input character.  The default backspace\n        character\
    \ is RUBOUT (ASCII 1778).\n"
- title: Delete Statement
  contents:
  - "Delete Statement\n   <delete statement> ::= DELETE = {ASCII special or control\
    \ character}\n        Semantics: The <delete statement> allows the user to define\
    \ the\n        character which, in control or message mode, causes the system\n\
    \        to \"forget\" the previous line of input.  The default delete\n     \
    \   character is ASCII VT (control K).\n"
- title: Transmit Statement
  contents:
  - "Transmit Statement\n   <transmit statement> ::= TRANSMIT = {ASCII special or\n\
    \                                        control character}\n        Semantics:\
    \ The <transmit statement> allows the user to define\n        the character which,\
    \ in control or message mode, causes the\n        system to begin interpreting\
    \ the control statement or to\n        transmit the message.  The default transmit\
    \ character is\n        carriage return.\n"
- title: Lock Statement
  contents:
  - "Lock Statement\n   <lock statement> ::= LOCK\n        Semantics: The <lock statement>\
    \ causes the system to prevent any\n        user or process but the process to\
    \ which the user is currently\n        attached from sending messages to the user's\
    \ terminal.\n"
- title: Unlock Statement
  contents:
  - "Unlock Statement\n   <unlock statement> ::= UNLOCK\n        Semantics: The <unlock\
    \ statement> reverses the action of a\n        previous <lock statement>.\n"
- title: Assign Statement
  contents:
  - "Assign Statement\n   <assign statement> ::= ASSIGN <assign device> <q>\n   <assign\
    \ device>    ::= LP | DT | CP\n        Semantics: The <assign statement> causes\
    \ the system to attempt\n        to assign a device not currently in use to the\
    \ user.  The <q>\n        construct has the same meaning as for the <link statement>.\n"
- title: Label Statement
  contents:
  - "Label Statement\n   <label statement> ::? LABEL DT <device number> <tape label>\n\
    \        Semantics: The <label statement> causes the system to write a\n     \
    \   new label on the DEC tape specified.\n"
- title: Create Statement
  contents:
  - "Create Statement\n   <create statement> ::= CREATE <tape file name> ON <tape\
    \ label>\n        Semantics: The <create statement> causes the system to create\
    \ a\n        new file named <tape file name> on the DEC tape labeled <tape\n \
    \       label>.\n"
- title: Purge Statement
  contents:
  - "Purge Statement\n   <purge statement> ::= PURGE <tape label> |\n            \
    \             PURGE <tape file name> ON <tape label>\n        Semantics: The <purge\
    \ statement> causes the system to delete all\n        tape directory information\
    \ on the DEC tape or tape file\n        specified.\n           [ This RFC was\
    \ put into machine readable form for entry ]\n            [ into the online RFC\
    \ archives by Gottfried Janik 2/98 ]\n"
