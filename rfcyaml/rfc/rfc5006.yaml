- title: __initial_text__
  contents:
  - '         IPv6 Router Advertisement Option for DNS Configuration

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a new IPv6 Router Advertisement option to\n\
    \   allow IPv6 routers to advertise DNS recursive server addresses to\n   IPv6\
    \ hosts.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n     1.1.  Applicability Statements . . . . . . . . . . . .\
    \ . . . . .  2\n     1.2.  Coexistence of RDNSS Option and DHCP Option  . . .\
    \ . . . .  2\n   2.  Definitions  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  3\n   4.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  3\n   5.  Neighbor Discovery Extension . . . . . . . . . . . . . . . . .\
    \  4\n     5.1.  Recursive DNS Server Option  . . . . . . . . . . . . . . .  4\n\
    \     5.2.  Procedure of DNS Configuration . . . . . . . . . . . . . .  5\n  \
    \     5.2.1.  Procedure in IPv6 Host . . . . . . . . . . . . . . . .  5\n   6.\
    \  Implementation Considerations  . . . . . . . . . . . . . . . .  6\n     6.1.\
    \  DNS Server List Management . . . . . . . . . . . . . . . .  6\n     6.2.  Synchronization\
    \ between DNS Server List and Resolver\n           Repository . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  7\n   7.  Security Considerations  . . . .\
    \ . . . . . . . . . . . . . . .  8\n   8.  IANA Considerations  . . . . . . .\
    \ . . . . . . . . . . . . . .  8\n   9.  Acknowledgements . . . . . . . . . .\
    \ . . . . . . . . . . . . .  8\n   10. References . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  9\n     10.1. Normative References . . . . . . . .\
    \ . . . . . . . . . . .  9\n     10.2. Informative References . . . . . . . .\
    \ . . . . . . . . . .  9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Neighbor Discovery (ND) for IP Version 6 and IPv6 Stateless\
    \ Address\n   Autoconfiguration provide ways to configure either fixed or mobile\n\
    \   nodes with one or more IPv6 addresses, default routers and some other\n  \
    \ parameters [2][3].  To support the access to additional services in\n   the\
    \ Internet that are identified by a DNS name, such as a web server,\n   the configuration\
    \ of at least one recursive DNS server is also needed\n   for DNS name resolution.\n\
    \   It is infeasible for nomadic hosts, such as laptops, to be configured\n  \
    \ manually with a DNS resolver each time they connect to a different\n   wireless\
    \ LAN (WLAN) such as IEEE 802.11 a/b/g [12]-[15].  Normally,\n   DHCP [6]-[8]\
    \ is used to locate such resolvers.  This document\n   provides an alternate,\
    \ experimental mechanism which uses a new IPv6\n   Router Advertisement (RA) option\
    \ to allow IPv6 routers to advertise\n   DNS recursive server addresses to IPv6\
    \ hosts.\n"
- title: 1.1.  Applicability Statements
  contents:
  - "1.1.  Applicability Statements\n   The only standards-track DNS configuration\
    \ mechanism in the IETF is\n   DHCP, and its support in hosts and routers is necessary\
    \ for reasons\n   of interoperability.\n   RA-based DNS configuration is a useful,\
    \ optional alternative in\n   networks where an IPv6 host's address is autoconfigured\
    \ through IPv6\n   stateless address autoconfiguration, and where the delays in\n\
    \   acquiring server addresses and communicating with the servers are\n   critical.\
    \  RA-based DNS configuration allows the host to acquire the\n   nearest server\
    \ addresses on every link.  Furthermore, it learns these\n   addresses from the\
    \ same RA message that provides configuration\n   information for the link, thereby\
    \ avoiding an additional protocol\n   run.  This can be beneficial in some mobile\
    \ environments, such as\n   with Mobile IPv6 [10].\n   The advantages and disadvantages\
    \ of the RA-based approach are\n   discussed in [9] along with other approaches,\
    \ such as the DHCP and\n   well-known anycast addresses approaches.\n"
- title: 1.2.  Coexistence of RDNSS Option and DHCP Option
  contents:
  - "1.2.  Coexistence of RDNSS Option and DHCP Option\n   The RDNSS (Recursive DNS\
    \ Server) option and DHCP option can be used\n   together [9].  To order the RA\
    \ and DHCP approaches, the O (Other\n   stateful configuration) flag can be used\
    \ in the RA message [2].  If\n   no RDNSS option is included in the RA messages,\
    \ an IPv6 host may\n   perform DNS configuration through DHCPv6 [6]-[8] regardless\
    \ of\n   whether the O flag is set or not.\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [1].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   This document uses the terminology described in [2] and [3].\
    \  In\n   addition, four new terms are defined below:\n   o  Recursive DNS Server\
    \ (RDNSS): Server which provides a recursive\n      DNS resolution service for\
    \ translating domain names into IP\n      addresses as defined in [4] and [5].\n\
    \   o  RDNSS Option: IPv6 RA option to deliver the RDNSS information to\n    \
    \  IPv6 hosts [2].\n   o  DNS Server List: A data structure for managing DNS Server\n\
    \      Information in the IPv6 protocol stack in addition to the Neighbor\n  \
    \    Cache and Destination Cache for Neighbor Discovery [2].\n   o  Resolver Repository:\
    \ Configuration repository with RDNSS addresses\n      that a DNS resolver on\
    \ the host uses for DNS name resolution; for\n      example, the Unix resolver\
    \ file (i.e., /etc/resolv.conf) and\n      Windows registry.\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   This document defines a new ND option called RDNSS option that\n\
    \   contains the addresses of recursive DNS servers.  Existing ND\n   transport\
    \ mechanisms (i.e., advertisements and solicitations) are\n   used.  This works\
    \ in the same way that hosts learn about routers and\n   prefixes.  An IPv6 host\
    \ can configure the IPv6 addresses of one or\n   more RDNSSes via RA messages\
    \ periodically sent by a router or\n   solicited by a Router Solicitation (RS).\n\
    \   Through the RDNSS option, along with the prefix information option\n   based\
    \ on the ND protocol ([2] and [3]), an IPv6 host can perform\n   network configuration\
    \ of its IPv6 address and RDNSS simultaneously\n   without needing a separate\
    \ message exchange for the RDNSS\n   information.  The RA option for RDNSS can\
    \ be used on any network that\n   supports the use of ND.\n   This approach requires\
    \ RDNSS information to be configured in the\n   routers sending the advertisements.\
    \  The configuration of RDNSS\n   addresses in the routers can be done by manual\
    \ configuration.  The\n   automatic configuration or redistribution of RDNSS information\
    \ is\n   possible by running a DHCPv6 client on the router [6]-[8].  The\n   automatic\
    \ configuration of RDNSS addresses in routers is out of scope\n   for this document.\n"
- title: 5.  Neighbor Discovery Extension
  contents:
  - "5.  Neighbor Discovery Extension\n   The IPv6 DNS configuration mechanism in\
    \ this document needs a new ND\n   option in Neighbor Discovery: the Recursive\
    \ DNS Server (RDNSS)\n   option.\n"
- title: 5.1.  Recursive DNS Server Option
  contents:
  - "5.1.  Recursive DNS Server Option\n   The RDNSS option contains one or more IPv6\
    \ addresses of recursive DNS\n   servers.  All of the addresses share the same\
    \ lifetime value.  If it\n   is desirable to have different lifetime values, multiple\
    \ RDNSS\n   options can be used.  Figure 1 shows the format of the RDNSS option.\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type      |     Length    |           Reserved            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         Lifetime                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ :            Addresses of IPv6 Recursive DNS Servers            :\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Figure 1: Recursive DNS Server (RDNSS) Option Format\n   Fields:\n\
    \     Type          8-bit identifier of the RDNSS option type as assigned\n  \
    \                 by the IANA: 25\n     Length        8-bit unsigned integer.\
    \  The length of the option\n                   (including the Type and Length\
    \ fields) is in units of\n                   8 octets.  The minimum value is 3\
    \ if one IPv6 address\n                   is contained in the option.  Every additional\
    \ RDNSS\n                   address increases the length by 2.  The Length field\n\
    \                   is used by the receiver to determine the number of\n     \
    \              IPv6 addresses in the option.\n     Lifetime      32-bit unsigned\
    \ integer.  The maximum time, in\n                   seconds (relative to the\
    \ time the packet is sent),\n                   over which this RDNSS address\
    \ MAY be used for name\n                   resolution.  Hosts MAY send a Router\
    \ Solicitation to\n                   ensure the RDNSS information is fresh before\
    \ the\n                   interval expires.  In order to provide fixed hosts\n\
    \                   with stable DNS service and allow mobile hosts to\n      \
    \             prefer local RDNSSes to remote RDNSSes, the value of\n         \
    \          Lifetime should be at least as long as the Maximum RA\n           \
    \        Interval (MaxRtrAdvInterval) in RFC 4861, and be at\n               \
    \    most as long as two times MaxRtrAdvInterval; Lifetime\n                 \
    \  SHOULD be bounded as follows:  MaxRtrAdvInterval <=\n                   Lifetime\
    \ <= 2*MaxRtrAdvInterval.  A value of all one\n                   bits (0xffffffff)\
    \ represents infinity.  A value of\n                   zero means that the RDNSS\
    \ address MUST no longer be\n                   used.\n     Addresses of IPv6\
    \ Recursive DNS Servers\n                   One or more 128-bit IPv6 addresses\
    \ of the recursive\n                   DNS servers.  The number of addresses is\
    \ determined\n                   by the Length field.  That is, the number of\n\
    \                   addresses is equal to (Length - 1) / 2.\n"
- title: 5.2.  Procedure of DNS Configuration
  contents:
  - "5.2.  Procedure of DNS Configuration\n   The procedure of DNS configuration through\
    \ the RDNSS option is the\n   same as with any other ND option [2].\n"
- title: 5.2.1.  Procedure in IPv6 Host
  contents:
  - "5.2.1.  Procedure in IPv6 Host\n   When an IPv6 host receives an RDNSS option\
    \ through RA, it checks\n   whether the option is valid.\n   o  If the RDNSS option\
    \ is valid, the host SHOULD copy the option's\n      value into the DNS Server\
    \ List and the Resolver Repository as long\n      as the value of the Length field\
    \ is greater than or equal to the\n      minimum value (3).  The host MAY ignore\
    \ additional RDNSS addresses\n      within an RDNSS option and/or additional RDNSS\
    \ options within an\n      RA when it has gathered a sufficient number of RDNSS\
    \ addresses.\n   o  If the RDNSS option is invalid (e.g., the Length field has\
    \ a value\n      less than 3), the host SHOULD discard the option.\n"
- title: 6.  Implementation Considerations
  contents:
  - "6.  Implementation Considerations\n   Note:  This non-normative section gives\
    \ some hints for implementing\n      the processing of the RDNSS option in an\
    \ IPv6 host.\n   For the configuration and management of RDNSS information, the\n\
    \   advertised RDNSS addresses can be stored and managed in both the DNS\n   Server\
    \ List and the Resolver Repository.\n   In environments where the RDNSS information\
    \ is stored in user space\n   and ND runs in the kernel, it is necessary to synchronize\
    \ the DNS\n   Server List of RDNSS addresses in kernel space and the Resolver\n\
    \   Repository in user space.  For the synchronization, an implementation\n  \
    \ where ND works in the kernel should provide a write operation for\n   updating\
    \ RDNSS information from the kernel to the Resolver\n   Repository.  One simple\
    \ approach is to have a daemon (or a program\n   that is called at defined intervals)\
    \ that keeps monitoring the\n   lifetime of RDNSS addresses all the time.  Whenever\
    \ there is an\n   expired entry in the DNS Server List, the daemon can delete\
    \ the\n   corresponding entry from the Resolver Repository.\n"
- title: 6.1.  DNS Server List Management
  contents:
  - "6.1.  DNS Server List Management\n   The kernel or user-space process (depending\
    \ on where RAs are\n   processed) should maintain a data structure called a DNS\
    \ Server List\n   which keeps the list of RDNSS addresses.  Each entry in the\
    \ DNS\n   Server List consists of an RDNSS address and Expiration-time as\n  \
    \ follows:\n   o  RDNSS address: IPv6 address of the Recursive DNS Server, which\
    \ is\n      available for recursive DNS resolution service in the network\n  \
    \    advertising the RDNSS option; such a network is called site in\n      this\
    \ document.\n   o  Expiration-time: The time when this entry becomes invalid.\n\
    \      Expiration-time is set to the value of the Lifetime field of the\n    \
    \  RDNSS option plus the current system time.  Whenever a new RDNSS\n      option\
    \ with the same address is received, this field is updated to\n      have a new\
    \ expiration time.  When Expiration-time becomes less\n      than the current\
    \ system time, this entry is regarded as expired.\n   Note:  An RDNSS address\
    \ MUST be used only as long as both the RA\n      router lifetime and the RDNSS\
    \ option lifetime have not expired.\n      The reason is that the RDNSS may not\
    \ be currently reachable or may\n      not provide service to the host's current\
    \ address (e.g., due to\n      network ingress filtering [16][17]).\n"
- title: 6.2.  Synchronization between DNS Server List and Resolver Repository
  contents:
  - "6.2.  Synchronization between DNS Server List and Resolver Repository\n   When\
    \ an IPv6 host receives the information of multiple RDNSS\n   addresses within\
    \ a site through an RA message with RDNSS option(s),\n   it stores the RDNSS addresses\
    \ (in order) into both the DNS Server\n   List and the Resolver Repository.  The\
    \ processing of the RDNSS\n   option(s) included in an RA message is as follows:\n\
    \      Step (a): Receive and parse the RDNSS option(s).  For the RDNSS\n     \
    \ addresses in each RDNSS option, perform Step (b) through Step (d).\n      Note\
    \ that Step (e) is performed whenever an entry expires in the\n      DNS Server\
    \ List.\n      Step (b): For each RDNSS address, check the following: If the\n\
    \      RDNSS address already exists in the DNS Server List and the RDNSS\n   \
    \   option's Lifetime field is set to zero, delete the corresponding\n      RDNSS\
    \ entry from both the DNS Server List and the Resolver\n      Repository in order\
    \ to prevent the RDNSS address from being used\n      any more for certain reasons\
    \ in network management, e.g., the\n      breakdown of the RDNSS or a renumbering\
    \ situation.  The processing\n      of this RDNSS address is finished here.  Otherwise,\
    \ go to Step\n      (c).\n      Step (c): For each RDNSS address, if it already\
    \ exists in the DNS\n      Server List, then just update the value of the Expiration-time\n\
    \      field according to the procedure specified in the second bullet of\n  \
    \    Section 6.1.  Otherwise, go to Step (d).\n      Step (d): For each RDNSS\
    \ address, if it does not exist in the DNS\n      Server List, register the RDNSS\
    \ address and lifetime with the DNS\n      Server List and then insert the RDNSS\
    \ address in front of the\n      Resolver Repository.  In the case where the data\
    \ structure for the\n      DNS Server List is full of RDNSS entries, delete from\
    \ the DNS\n      Server List the entry with the shortest expiration time (i.e.,\
    \ the\n      entry that will expire first).  The corresponding RDNSS address is\n\
    \      also deleted from the Resolver Repository.  In the order in the\n     \
    \ RDNSS option, position the newly added RDNSS addresses in front of\n      the\
    \ Resolver Repository so that the new RDNSS addresses may be\n      preferred\
    \ according to their order in the RDNSS option for the DNS\n      name resolution.\
    \  The processing of these RDNSS addresses is\n      finished here.  Note that,\
    \ in the case where there are several\n      routers advertising RDNSS option(s)\
    \ in a subnet, the RDNSSes that\n      have been announced recently are preferred.\n\
    \      Step (e): Delete each expired entry from the DNS Server List, and\n   \
    \   delete the RDNSS address corresponding to the entry from the\n      Resolver\
    \ Repository.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security of the RA option for RDNSS might\
    \ be worse than ND\n   protocol security [2].  However, any new vulnerability\
    \ in this RA\n   option is not known yet.  In this context, it can be claimed\
    \ that the\n   vulnerability of ND is not worse and is a subset of the attacks\
    \ that\n   any node attached to a LAN can do independently of ND.  A malicious\n\
    \   node on a LAN can promiscuously receive packets for any router's MAC\n   address\
    \ and send packets with the router's MAC address as the source\n   MAC address\
    \ in the L2 header.  As a result, L2 switches send packets\n   addressed to the\
    \ router to the malicious node.  Also, this attack can\n   send redirects that\
    \ tell the hosts to send their traffic somewhere\n   else.  The malicious node\
    \ can send unsolicited RA or Neighbor\n   Advertisement (NA) replies, answer RS\
    \ or Neighbor Solicitation (NS)\n   requests, etc.  Also, an attacker could configure\
    \ a host to send out\n   an RA with a fraudulent RDNSS address, which is presumably\
    \ an easier\n   avenue of attack than becoming a rogue router and having to process\n\
    \   all traffic for the subnet.  It is necessary to disable the RA RDNSS\n   option\
    \ in both routers and clients administratively to avoid this\n   problem.  All\
    \ of this can be done independently of implementing ND.\n   Therefore, it can\
    \ be claimed that the RA option for RDNSS has\n   vulnerabilities similar to those\
    \ existing in current mechanisms.\n   If the Secure Neighbor Discovery (SEND)\
    \ protocol is used as a\n   security mechanism for ND, all the ND options including\
    \ the RDNSS\n   option are automatically included in the signatures [11], so the\n\
    \   RDNSS transport is integrity-protected.  However, since any valid\n   SEND\
    \ node can still insert RDNSS options, SEND cannot verify who is\n   or is not\
    \ authorized to send the options.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The IANA has assigned a new IPv6 Neighbor Discovery\
    \ Option type for\n   the RDNSS option defined in this document.\n           \
    \      Option Name               Type\n                 RDNSS option         \
    \     25\n   The IANA registry for these options is:\n       http://www.iana.org/assignments/icmpv6-parameters\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This document has greatly benefited from inputs by Robert\
    \ Hinden,\n   Pekka Savola, Iljitsch van Beijnum, Brian Haberman and Tim Chown.\n\
    \   The authors appreciate their contributions.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n         \"\
    Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n         September 2007.\n\
    \   [3]   Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address\n \
    \        Autoconfiguration\", RFC 4862, September 2007.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [4]   Mockapetris, P., \"Domain Names - Concepts\
    \ and Facilities\",\n         RFC 1034, November 1987.\n   [5]   Mockapetris,\
    \ P., \"Domain Names - Implementation and\n         Specification\", RFC 1035,\
    \ November 1987.\n   [6]   Droms, R., Ed., \"Dynamic Host Configuration Protocol\
    \ for IPv6\n         (DHCPv6)\", RFC 3315, July 2003.\n   [7]   Droms, R., \"\
    Stateless Dynamic Host Configuration Protocol\n         (DHCP) Service for IPv6\"\
    , RFC 3736, April 2004.\n   [8]   Droms, R., Ed., \"DNS Configuration options\
    \ for Dynamic Host\n         Configuration Protocol for IPv6 (DHCPv6)\", RFC 3646,\n\
    \         December 2003.\n   [9]   Jeong, J., Ed., \"IPv6 Host Configuration of\
    \ DNS Server\n         Information Approaches\", RFC 4339, February 2006.\n  \
    \ [10]  Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support in\n      \
    \   IPv6\", RFC 3775, June 2004.\n   [11]  Arkko, J., Ed., \"SEcure Neighbor Discovery\
    \ (SEND)\", RFC 3971,\n         March 2005.\n   [12]  ANSI/IEEE Std 802.11, \"\
    Part 11: Wireless LAN Medium Access\n         Control (MAC) and Physical Layer\
    \ (PHY) Specifications\",\n         March 1999.\n   [13]  IEEE Std 802.11a, \"\
    Part 11: Wireless LAN Medium Access Control\n         (MAC) and Physical Layer\
    \ (PHY) specifications: High-speed\n         Physical Layer in the 5 GHZ Band\"\
    , September 1999.\n   [14]  IEEE Std 802.11b, \"Part 11: Wireless LAN Medium Access\
    \ Control\n         (MAC) and Physical Layer (PHY) specifications: Higher-Speed\n\
    \         Physical Layer Extension in the 2.4 GHz Band\", September 1999.\n  \
    \ [15]  IEEE P802.11g/D8.2, \"Part 11: Wireless LAN Medium Access\n         Control\
    \ (MAC) and Physical Layer (PHY) specifications: Further\n         Higher Data\
    \ Rate Extension in the 2.4 GHz Band\", April 2003.\n   [16]  Damas, J. and F.\
    \ Neves, \"Preventing Use of Recursive\n         Nameservers in Reflector Attacks\"\
    , Work in Progress, July 2007.\n   [17]  Ferguson, P. and D. Senie, \"Network\
    \ Ingress Filtering:\n         Defeating Denial of Service Attacks which employ\
    \ IP Source\n         Address Spoofing\", BCP 38, RFC 2827, May 2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jaehoon Paul Jeong (editor)\n   ETRI/Department of Computer\
    \ Science and Engineering\n   University of Minnesota\n   117 Pleasant Street\
    \ SE\n   Minneapolis, MN  55455\n   USA\n   Phone: +1 651 587 7774\n   Fax:  \
    \ +1 612 625 0572\n   EMail: jjeong@cs.umn.edu\n   URI:   http://www.cs.umn.edu/~jjeong/\n\
    \   Soohong Daniel Park\n   Mobile Convergence Laboratory\n   SAMSUNG Electronics\n\
    \   416 Maetan-3dong, Yeongtong-Gu\n   Suwon, Gyeonggi-Do  443-742\n   Korea\n\
    \   Phone: +82 31 200 4508\n   EMail: soohong.park@samsung.com\n   Luc Beloeil\n\
    \   France Telecom R&D\n   42, rue des coutures\n   BP 6243\n   14066 CAEN Cedex\
    \ 4\n   France\n   Phone: +33 02 3175 9391\n   EMail: luc.beloeil@orange-ftgroup.com\n\
    \   Syam Madanapalli\n   Ordyn Technologies\n   1st Floor, Creator Building, ITPL\n\
    \   Bangalore - 560066\n   India\n   Phone: +91-80-40383000\n   EMail: smadanapalli@gmail.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
