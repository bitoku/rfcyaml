- title: __initial_text__
  contents:
  - '                      Telnet Authentication Option

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  Discussion and suggestions for improvement are requested.\n  \
    \ Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: 1.  Command Names and Codes
  contents:
  - "1.  Command Names and Codes\n   AUTHENTICATION  37\n       IS               0\n\
    \       SEND             1\n       REPLY            2\n       NAME           \
    \  3\n       Authentication Types\n       NULL             0\n       KERBEROS_V4\
    \      1\n       KERBEROS_V5      2\n       SPX              3\n       RSA   \
    \           6\n       LOKI            10\n       Modifiers\n       AUTH_WHO_MASK\
    \        1\n       AUTH_CLIENT_TO_SERVER    0\n       AUTH_SERVER_TO_CLIENT  \
    \  1\n       AUTH_HOW_MASK        2\n       AUTH_HOW_ONE_WAY         0\n     \
    \  AUTH_HOW_MUTUAL          2\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   This document makes reference to a \"server\" and a\
    \ \"client\".  For the\n   purposes of this document, the \"server\" is the side\
    \ of the connection\n   that did the passive TCP open (TCP LISTEN state), and\
    \ the \"client\" is\n   the side of the connection that did the active open.\n\
    \   IAC WILL AUTHENTICATION\n      The client side of the connection sends this\
    \ command to indicate\n      that it is willing to send and receive authentication\
    \ information.\n   IAC DO AUTHENTICATION\n      The servers side of the connection\
    \ sends this command to indicate\n      that it is willing to send and receive\
    \ authentication information.\n   IAC WONT AUTHENTICATION\n      The client side\
    \ of the connection sends this command to indicate\n      that it refuses to send\
    \ or receive authentication information; the\n      server side sends this command\
    \ if it receives a DO AUTHENTICATION\n      command.\n   IAC DONT AUTHENTICATION\n\
    \      The server side of the connection sends this command to indicate\n    \
    \  that it refuses to send or receive authentication information; the\n      client\
    \ side sends this command if it receives a WILL\n      AUTHENTICATION command.\n\
    \   IAC SB AUTHENTICATION SEND authentication-type-pair-list IAC SE\n      The\
    \ sender of this command (the server) requests that the remote\n      side send\
    \ authentication information for one of the authentication\n      types listed\
    \ in \"authentication-type-pair-list\".  The\n      \"authentication-type-pair-list\"\
    \ is an ordered list of\n      \"authentication-type\" pairs.  Only the server\
    \ side (DO\n      AUTHENTICATION) is allowed to send this.\n   IAC SB AUTHENTICATION\
    \ IS authentication-type-pair <auth data> IAC SE\n      The sender of this command\
    \ (the client) is sending the\n      authentication information for authentication\
    \ type\n      \"authentication-type-pair\".  Only the client side (WILL\n    \
    \  AUTHENTICATION) is allowed to send this.\n   IAC SB AUTHENTICATION REPLY authentication-type-pair\
    \ <auth data> IAC\n   SE\n      The sender of this command (the server) is sending\
    \ a reply to the\n      the authentication information received in a previous\
    \ IS command.\n      Only the server side (DO AUTHENTICATION) is allowed to send\
    \ this.\n   IAC SB AUTHENTICATION NAME remote-user IAC SE\n      This optional\
    \ command is sent to specify the account name on the\n      remote host that the\
    \ user wishes to be authorized to use.  Note\n      that authentication may succeed,\
    \ and the authorization to use a\n      particular account may still fail.  Some\
    \ authentication mechanisms\n      may ignore this command.\n   The \"authentication-type-pair\"\
    \ is two octets, the first is the\n   authentication type (as listed in Section\
    \ 1, additions to this list\n   must be registered with the Internet Assigned\
    \ Numbers Authority\n   (IANA)), and the second is a modifier to the type.  There\
    \ are\n   currently two one bit fields defined in the modifier, the\n   AUTH_WHO_MASK\
    \ bit and the AUTH_HOW_MASK bit, so there are four\n   possible combinations:\n\
    \      AUTH_CLIENT_TO_SERVER\n      AUTH_HOW_ONE_WAY\n         The client will\
    \ send authentication information about the local\n         user to the server.\
    \  If the negotiation is successful, the\n         server will have authenticated\
    \ the user on the client side of\n         the connection.\n      AUTH_SERVER_TO_CLIENT\n\
    \      AUTH_HOW_ONE_WAY\n         The server will authenticate itself to the client.\
    \  If the\n         negotiation is successful, the client will know that it is\n\
    \         connected to the server that it wants to be connected to.\n      AUTH_CLIENT_TO_SERVER\n\
    \      AUTH_HOW_MUTUAL\n         The client will send authentication information\
    \ about the local\n         user to the server, and then the server will authenticate\n\
    \         itself to the client.  If the negotiation is successful, the\n     \
    \    server will have authenticated the user on the client side of\n         the\
    \ connection, and the client will know that it is connected\n         to the server\
    \ that it wants to be connected to.\n      AUTH_SERVER_TO_CLIENT\n      AUTH_HOW_MUTUAL\n\
    \         The server will authenticate itself to the client, and then the\n  \
    \       client will authenticate itself to the server.  If the\n         negotiation\
    \ is successful, the client will know that it is\n         connected to the server\
    \ that it wants to be connected to, and\n         the server will know that the\
    \ client is who it claims to be.\n"
- title: 3.  Default Specification
  contents:
  - "3.  Default Specification\n   The default specification for this option is\n\
    \      WONT AUTHENTICATION\n      DONT AUTHENTICATION\n   meaning there will not\
    \ be any exchange of authentication information.\n"
- title: 4.  Motivation
  contents:
  - "4.  Motivation\n   One of the deficiencies of the Telnet protocol is that in\
    \ order to\n   log into remote systems, users have to type their passwords, which\n\
    \   are passed in clear text through the network.  If the connections\n   goes\
    \ through untrusted networks, there is the possibility that\n   passwords will\
    \ be compromised by someone watching the packets as they\n   go by.\n   The purpose\
    \ of the AUTHENTICATION option is to provide a framework\n   for the passing of\
    \ authentication information through the TELNET\n   session.  This means that:\
    \ 1) the users password will not be sent in\n   clear text across the network,\
    \ and 2) if the front end telnet process\n   has the appropriate authentication\
    \ information, it can automatically\n   send the information, and the user will\
    \ not have to type any\n   password.\n   It is intended that the AUTHENTICATION\
    \ option be general enough that\n   it can be used to pass information for any\
    \ authentication system.\n"
- title: 5.  Security Implications
  contents:
  - "5.  Security Implications\n   The ability to negotiate a common authentication\
    \ mechanism between\n   client and server is a feature of the authentication option\
    \ that\n   should be used with caution.  When the negotiation is performed, no\n\
    \   authentication has yet occurred.  Therefore, each system has no way\n   of\
    \ knowing whether or not it is talking to the system it intends.  An\n   intruder\
    \ could attempt to negotiate the use of an authentication\n   system which is\
    \ either weak, or already compromised by the intruder.\n"
- title: 6.  Implementation Rules
  contents:
  - "6.  Implementation Rules\n   WILL and DO are used only at the beginning of the\
    \ connection to\n   obtain and grant permission for future negotiations.\n   The\
    \ authentication is only negotiated in one directions; the server\n   must send\
    \ the \"DO\", and the client must send the \"WILL\".  This\n   restriction is\
    \ due to the nature of authentication; there are three\n   possible cases; server\
    \ authenticates client, client authenticates\n   server, and server and client\
    \ authenticate each other.  By only\n   negotiating the option in one direction,\
    \ and then determining which\n   of the three cases is being used via the suboption,\
    \ potential\n   ambiguity is removed.  If the server receives a \"DO\", it must\
    \ respond\n   with a \"WONT\".  If the client receives a \"WILL\", it must respond\
    \ with\n   a \"DONT\".\n   Once the two hosts have exchanged a DO and a WILL,\
    \ the server is free\n   to request authentication information.  In the request,\
    \ a list of\n   supported authentication types is sent.  Only the server may send\n\
    \   requests (\"IAC SB AUTHENTICATION SEND authentication-type-pair-list\n   IAC\
    \ SE\").  Only the client may transmit authentication information\n   via the\
    \ \"IAC SB AUTHENTICATION IS authentication-type ... IAC SE\"\n   command.  Only\
    \ the server may send replys (\"IAC SB AUTHENTICATION\n   REPLY authentication-type\
    \ ... IAC SE\").  As many IS and REPLY\n   suboptions may be exchanged as are\
    \ needed for the particular\n   authentication scheme chosen.\n   If the client\
    \ does not support any of the authentication types listed\n   in the authentication-type-pair-list,\
    \ a type of NULL should be used\n   to indicate this in the IS reply.  Note that\
    \ in this case, the server\n   may choose to close the connection.\n   The order\
    \ of the authentication types MUST be ordered to indicate a\n   preference for\
    \ different authentication types, the first type being\n   the most preferred,\
    \ and the last type the least preferred.\n   The following is an example of use\
    \ of the option:\n       Client                           Server\n           \
    \                             IAC DO AUTHENTICATION\n       IAC WILL AUTHENTICATION\n\
    \       [ The server is now free to request authentication information.\n    \
    \     ]\n                                        IAC SB AUTHENTICATION SEND\n\
    \                                        KERBEROS_V4 CLIENT|MUTUAL\n         \
    \                               KERBEROS_V4 CLIENT|ONE_WAY IAC\n             \
    \                           SE\n       [ The server has requested mutual Kerberos\
    \ authentication, but is\n         willing to do just one-way Kerberos authentication.\
    \  The client\n         will now respond with the name of the user that it wants\
    \ to log\n         in as, and the Kerberos ticket.  ]\n       IAC SB AUTHENTICATION\
    \ NAME \"joe\"\n       IAC SE\n       IAC SB AUTHENTICATION IS\n       KERBEROS_V4\
    \ CLIENT|MUTUAL AUTH 4\n       7 1 67 82 65 89 46 67 7 9 77 0\n       48 24 49\
    \ 244 109 240 50 208 43\n       35 25 116 104 44 167 21 201 224\n       229 145\
    \ 20 2 244 213 220 33 134\n       148 4 251 249 233 229 152 77 2\n       109 130\
    \ 231 33 146 190 248 1 9\n       31 95 94 15 120 224 0 225 76 205\n       70 136\
    \ 245 190 199 147 155 13\n       IAC SE\n       [ The server responds with an\
    \ ACCEPT command to state that the\n         authentication was successful.  ]\n\
    \                                        IAC SB AUTHENTICATION REPLY\n       \
    \                                 KERBEROS_V4 CLIENT|MUTUAL ACCEPT\n         \
    \                               IAC SE\n       [ Next, the client sends across\
    \ a CHALLENGE to verify that it is\n         really talking to the right server.\
    \  ]\n       IAC SB AUTHENTICATION REPLY\n       KERBEROS_V4 CLIENT|MUTUAL\n \
    \      CHALLENGE xx xx xx xx xx xx xx\n       xx IAC SE\n       [ Lastly, the\
    \ server sends across a RESPONSE to prove that it\n         really is the right\
    \ server.\n                                        IAC SB AUTHENTICATION REPLY\n\
    \                                        KERBEROS_V4 CLIENT|MUTUAL\n         \
    \                               RESPONSE yy yy yy yy yy yy yy yy\n           \
    \                             IAC SE\n   It is expected that any implementation\
    \ that supports the Telnet\n   AUTHENTICATION option will support all of this\
    \ specification.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Reynolds, J., and J. Postel, \"Assigned Numbers\", STD\
    \ 2, RFC 1340,\n       USC/Information Sciences Institute, July 1992.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 5.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David A. Borman, Editor\n   Cray Research, Inc.\n   655F\
    \ Lone Oak Drive\n   Eagan, MN 55123\n   Phone: (612) 452-6650\n   EMail: dab@CRAY.COM\n\
    \   Mailing List: telnet-ietf@CRAY.COM\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \   Steve Alexander\n   INTERACTIVE Systems Corporation\n   1901 North Naper Boulevard\n\
    \   Naperville, IL 60563-8895\n   Phone: (708) 505-9100 x256\n   EMail: stevea@isc.com\n"
