- title: __initial_text__
  contents:
  - '               Multicast Source Discovery Protocol (MSDP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Multicast Source Discovery Protocol (MSDP) describes a mechanism\n\
    \   to connect multiple IP Version 4 Protocol Independent Multicast\n   Sparse-Mode\
    \ (PIM-SM) domains together.  Each PIM-SM domain uses its\n   own independent\
    \ Rendezvous Point (RP) and does not have to depend on\n   RPs in other domains.\
    \  This document reflects existing MSDP\n   implementations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Overview. . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Procedure . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   4.  Caching . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  Timers. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n       5.1. SA-Advertisement-Timer . . . . . . . . . . . . . . . . .\
    \   5\n       5.2. SA-Advertisement-Timer Processing. . . . . . . . . . . .  \
    \ 5\n       5.3. SA Cache Timeout (SA-State Timer). . . . . . . . . . . .   5\n\
    \       5.4. Peer Hold Timer. . . . . . . . . . . . . . . . . . . . .   5\n  \
    \     5.5. KeepAlive Timer. . . . . . . . . . . . . . . . . . . . .   6\n    \
    \   5.6. ConnectRetry Timer . . . . . . . . . . . . . . . . . . .   6\n   6. \
    \ Intermediate MSDP Peers . . . . . . . . . . . . . . . . . . .   6\n   7.  SA\
    \ Filtering and Policy . . . . . . . . . . . . . . . . . . .   6\n   8.  Encapsulated\
    \ Data Packets . . . . . . . . . . . . . . . . . .   7\n   9.  Other Scenarios\
    \ . . . . . . . . . . . . . . . . . . . . . . .   7\n   10. MSDP Peer-RPF Forwarding.\
    \ . . . . . . . . . . . . . . . . . .   7\n       10.1. Definitions . . . . .\
    \ . . . . . . . . . . . . . . . . .   7\n             10.1.1. Multicast RPF Routing\
    \ Information Base. . . . .   8\n             10.1.2. Peer-RPF Route. . . . .\
    \ . . . . . . . . . . . .   8\n             10.1.3. Peer-RPF Forwarding Rules\
    \ . . . . . . . . . . .   8\n       10.2. MSDP mesh-group semantics . . . . .\
    \ . . . . . . . . . .   9\n   11. MSDP Connection State Machine . . . . . . .\
    \ . . . . . . . . .   9\n       11.1. Events. . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  10\n       11.2. Actions . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  10\n       11.3. Peer-specific Events. . . . . . . . . . . .\
    \ . . . . . .  11\n       11.4. Peer-independent Events . . . . . . . . . . .\
    \ . . . . .  11\n   12. Packet Formats. . . . . . . . . . . . . . . . . . . .\
    \ . . . .  12\n       12.1. MSDP TLV format . . . . . . . . . . . . . . . . .\
    \ . . .  12\n       12.2. Defined TLVs. . . . . . . . . . . . . . . . . . . .\
    \ . .  12\n             12.2.1. IPv4 Source-Active TLV. . . . . . . . . . . .\
    \ .  13\n             12.2.2. KeepAlive TLV . . . . . . . . . . . . . . . . .\
    \  14\n   13. MSDP Error Handling . . . . . . . . . . . . . . . . . . . . .  15\n\
    \   14. SA Data Encapsulation . . . . . . . . . . . . . . . . . . . .  15\n  \
    \ 15. Applicability Statement . . . . . . . . . . . . . . . . . . .  15\n    \
    \   15.1. Between PIM Domains . . . . . . . . . . . . . . . . . .  15\n      \
    \ 15.2. Between Anycast-RPs . . . . . . . . . . . . . . . . . .  15\n   16. Intellectual\
    \ Property . . . . . . . . . . . . . . . . . . . .  15\n   17. Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . .  16\n   18. Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  16\n   19. IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  17\n       19.1. Allocated TLV Range .\
    \ . . . . . . . . . . . . . . . . .  17\n       19.2. Experimental TLV Range.\
    \ . . . . . . . . . . . . . . . .  17\n   20. References. . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  17\n       20.1. Normative References. . . .\
    \ . . . . . . . . . . . . . .  17\n       20.2. Informative References. . . .\
    \ . . . . . . . . . . . . .  18\n   21. Editors' Addresses. . . . . . . . . .\
    \ . . . . . . . . . . . .  18\n   22. Full Copyright Statement. . . . . . . .\
    \ . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Multicast Source Discovery Protocol (MSDP) describes\
    \ a mechanism\n   to connect multiple PIM Sparse-Mode (PIM-SM) [RFC2362] domains\n\
    \   together.  Each PIM-SM domain uses its own independent RP(s) and does\n  \
    \ not have to depend on RPs in other domains.  Advantages of this\n   approach\
    \ include:\n   o  No Third-party resource dependencies on a domain's RP\n    \
    \  PIM-SM domains can rely on their own RPs only.\n   o  Receiver only Domains\n\
    \      Domains with only receivers get data without globally advertising\n   \
    \   group membership.\n   Note that MSDP may be used with protocols other than\
    \ PIM-SM, but such\n   usage is not specified in this memo.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [RFC2119].\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   MSDP-speaking routers in a PIM-SM domain have a MSDP peering\n\
    \   relationship with MSDP peers in another domain.  The peering\n   relationship\
    \ is made up of a TCP connection in which control\n   information is exchanged.\
    \  Each domain has one or more connections to\n   this virtual topology.\n   The\
    \ purpose of this topology is to allow domains to discover\n   multicast sources\
    \ from other domains.  If the multicast sources are\n   of interest to a domain\
    \ which has receivers, the normal source-tree\n   building mechanism in PIM-SM\
    \ will be used to deliver multicast data\n   over an inter-domain distribution\
    \ tree.\n"
- title: 3.  Procedure
  contents:
  - "3.  Procedure\n   When an RP in a PIM-SM domain first learns of a new sender,\
    \ e.g., via\n   PIM register messages, it constructs a \"Source-Active\" (SA)\
    \ message\n   and sends it to its MSDP peers.  All RPs, which intend to originate\n\
    \   or receive SA messages, must establish MSDP peering with other RPs,\n   either\
    \ directly or via an intermediate MSDP peer.  The SA message\n   contains the\
    \ following fields:\n   o  Source address of the data source.\n   o  Group address\
    \ the data source sends to.\n   o  IP address of the RP.\n   Note that an RP that\
    \ isn't a DR on a shared network SHOULD NOT\n   originate SA's for directly connected\
    \ sources on that shared network;\n   it should only originate in response to\
    \ receiving Register messages\n   from the DR.\n   Each MSDP peer receives and\
    \ forwards the message away from the RP\n   address in a \"peer-RPF flooding\"\
    \ fashion.  The notion of peer-RPF\n   flooding is with respect to forwarding\
    \ SA messages.  The Multicast\n   RPF Routing Information Base (MRIB) is examined\
    \ to determine which\n   peer towards the originating RP of the SA message is\
    \ selected.  Such\n   a peer is called an \"RPF peer\".  See section 13 for the\
    \ details of\n   peer-RPF forwarding.\n   If the MSDP peer receives the SA from\
    \ a non-RPF peer towards the\n   originating RP, it will drop the message.  Otherwise,\
    \ it forwards the\n   message to all its MSDP peers (except the one from which\
    \ it received\n   the SA message).\n   When an MSDP peer which is also an RP for\
    \ its own domain receives a\n   new SA message, it determines if there are any\
    \ group members within\n   the domain interested in any group described by an\
    \ (Source, Group),\n   or (S,G) entry within the SA message.  That is, the RP\
    \ checks for a\n   (*,G) entry with a non-empty outgoing interface list; this\
    \ implies\n   that some system in the domain is interested in the group.  In this\n\
    \   case, the RP triggers a (S,G) join event towards the data source as\n   if\
    \ a Join/Prune message was received addressed to the RP itself.\n   This sets\
    \ up a branch of the source-tree to this domain.  Subsequent\n   data packets\
    \ arrive at the RP via this tree branch, and are forwarded\n   down the shared-tree\
    \ inside the domain.  If leaf routers choose to\n   join the source-tree they\
    \ have the option to do so according to\n   existing PIM-SM conventions.  Finally,\
    \ if an RP in a domain receives\n   a PIM Join message for a new group G, the\
    \ RP SHOULD trigger a (S,G)\n   join event for each active (S,G) for that group\
    \ in its SA cache.\n   This procedure has been affectionately named flood-and-join\
    \ because\n   if any RP is not interested in the group, they can ignore the SA\n\
    \   message.  Otherwise, they join a distribution tree.\n"
- title: 4.  Caching
  contents:
  - "4.  Caching\n   A MSDP speaker MUST cache SA messages.  Caching allows pacing\
    \ of MSDP\n   messages as well as reducing join latency for new receivers of a\n\
    \   group G at an originating RP which has existing MSDP (S,G) state.  In\n  \
    \ addition, caching greatly aids in diagnosis and debugging of various\n   problems.\n\
    \   An MSDP speaker must provide a mechanism to reduce the forwarding of\n   new\
    \ SA's.  The SA-cache is used to reduce storms and performs this by\n   not forwarding\
    \ SA's unless they are in the cache or are new SA\n   packets that the MSDP speaker\
    \ will cache for the first time.  The\n   SA-cache also reduces storms by advertising\
    \ from the cache at a\n   period of no more than twice per SA-Advertisement-Timer\
    \ interval and\n   not less than 1 time per SA Advertisement period.\n"
- title: 5.  Timers
  contents:
  - "5.  Timers\n   The main timers for MSDP are: SA-Advertisement-Timer, SA Cache\
    \ Entry\n   timer, Peer Hold Timer, KeepAlive timer, and ConnectRetry timer.\n\
    \   Each is considered below.\n"
- title: 5.1.  SA-Advertisement-Timer
  contents:
  - "5.1.  SA-Advertisement-Timer\n   RPs which originate SA messages do so periodically\
    \ as long as there\n   is data being sent by the source.  There is one SA-Advertisement-\n\
    \   Timer covering the sources that an RP may advertise.  [SA-\n   Advertisement-Period]\
    \ MUST be 60 seconds.  An RP MUST not send more\n   than one periodic SA message\
    \ for a given (S,G) within an SA\n   Advertisement interval.  Originating periodic\
    \ SA messages is required\n   to keep announcements alive in caches.  Finally,\
    \ an originating RP\n   SHOULD trigger the transmission of an SA message as soon\
    \ as it\n   receives data from an internal source for the first time.  This\n\
    \   initial SA message may be in addition to the periodic sa-message\n   forwarded\
    \ in that first 60 seconds for that (S,G).\n"
- title: 5.2.  SA-Advertisement-Timer Processing
  contents:
  - "5.2.  SA-Advertisement-Timer Processing\n   An RP MUST spread the generation\
    \ of periodic SA messages (i.e.,\n   messages advertising the active sources for\
    \ which it is the RP) over\n   its reporting interval (i.e., SA-Advertisement-Period).\
    \  An RP starts\n   the SA-Advertisement-Timer when the MSDP process is configured.\
    \  When\n   the timer expires, an RP resets the timer to [SA-Advertisement-\n\
    \   Period] seconds, and begins the advertisement of its active sources.\n   Active\
    \ sources are advertised in the following manner: An RP packs\n   its active sources\
    \ into an SA message until the largest MSDP packet\n   that can be sent is built\
    \ or there are no more sources, and then\n   sends the message.  This process\
    \ is repeated periodically within the\n   SA-Advertisement-Period in such a way\
    \ that all of the RP's sources\n   are advertised.  Note that since MSDP is a\
    \ periodic protocol, an\n   implementation SHOULD send all cached SA messages\
    \ when a connection\n   is established.  Finally, the timer is deleted when the\
    \ MSDP process\n   is de-configured.\n"
- title: 5.3.  SA Cache Timeout (SA-State Timer)
  contents:
  - "5.3.  SA Cache Timeout (SA-State Timer)\n   Each entry in an SA Cache has an\
    \ associated SA-State Timer.  A\n   (S,G)-SA-State-Timer is started when an (S,G)-SA\
    \ message is initially\n   received by an MSDP peer.  The timer is reset to [SG-State-Period]\
    \ if\n   another (S,G)-SA message is received before the (S,G)-SA-State Timer\n\
    \   expires.  [SG-State-Period] MUST NOT be less than [SA-Advertisement-\n   Period]\
    \ + [SA-Hold-Down-Period].\n"
- title: 5.4.  Peer Hold Timer
  contents:
  - "5.4.  Peer Hold Timer\n   The Hold Timer is initialized to [HoldTime-Period]\
    \ when the peer's\n   transport connection is established, and is reset to [HoldTime-\n\
    \   Period] when any MSDP message is received.  Finally, the timer is\n   deleted\
    \ when the peer's transport connection is closed.  [HoldTime-\n   Period] MUST\
    \ be at least three seconds.  The recommended value for\n   [HoldTime-Period]\
    \ is 75 seconds.\n"
- title: 5.5.  KeepAlive Timer
  contents:
  - "5.5.  KeepAlive Timer\n   Once an MSDP transport connection is established, each\
    \ side of the\n   connection sends a KeepAlive message and sets a KeepAlive timer.\
    \  If\n   the KeepAlive timer expires, the local system sends a KeepAlive\n  \
    \ message and restarts its KeepAlive timer.\n   The KeepAlive timer is set to\
    \ [KeepAlive-Period] when the peer comes\n   up.  The timer is reset to [KeepAlive-Period]\
    \ each time an MSDP\n   message is sent to the peer, and reset when the timer\
    \ expires.\n   Finally, the KeepAlive timer is deleted when the peer's transport\n\
    \   connection is closed.\n   [KeepAlive-Period] MUST be less than [HoldTime-Period],\
    \ and MUST be\n   at least one second.  The recommended value for [KeepAlive-Period]\
    \ is\n   60 seconds.\n"
- title: 5.6.  ConnectRetry Timer
  contents:
  - "5.6.  ConnectRetry Timer\n   The ConnectRetry timer is used by the MSDP peer\
    \ with the lower IP\n   address to transition from INACTIVE to CONNECTING states.\
    \  There is\n   one timer per peer, and the [ConnectRetry-Period] SHOULD be set\
    \ to 30\n   seconds.  The timer is initialized to [ConnectRetry-Period] when an\n\
    \   MSDP speaker attempts to actively open a TCP connection to its peer\n   (see\
    \ section 15, event E2, action A2 ).  When the timer expires, the\n   peer retries\
    \ the connection and the timer is reset to [ConnectRetry-\n   Period].  It is\
    \ deleted if either the connection transitions into\n   ESTABLISHED state or the\
    \ peer is de-configured.\n"
- title: 6.  Intermediate MSDP Peers
  contents:
  - "6.  Intermediate MSDP Peers\n   Intermediate MSDP speakers do not originate periodic\
    \ SA messages on\n   behalf of sources in other domains.  In general, an RP MUST\
    \ only\n   originate an SA for a source which would register to it, and ONLY RPs\n\
    \   may originate SA messages.  Intermediate MSDP speakers MAY forward SA\n  \
    \ messages received from other domains.\n"
- title: 7.  SA Filtering and Policy
  contents:
  - "7.  SA Filtering and Policy\n   As the number of (S,G) pairs increases in the\
    \ Internet, an RP may\n   want to filter which sources it describes in SA messages.\
    \  Also,\n   filtering may be used as a matter of policy which at the same time\n\
    \   can reduce state.  MSDP peers in transit domains should not filter SA\n  \
    \ messages or the flood-and-join model can not guarantee that sources\n   will\
    \ be known throughout the Internet (i.e., SA filtering by transit\n   domains\
    \ may cause undesired lack of connectivity).  In general,\n   policy should be\
    \ expressed using MBGP [RFC2858].  This will cause\n   MSDP messages to flow in\
    \ the desired direction and peer-RPF fail\n   otherwise.  An exception occurs\
    \ at an administrative scope [RFC2365]\n   boundary.  In particular, a SA message\
    \ for a (S,G) MUST NOT be sent\n   to peers which are on the other side of an\
    \ administrative scope\n   boundary for G.\n"
- title: 8.  Encapsulated Data Packets
  contents:
  - "8.  Encapsulated Data Packets\n   The RP MAY encapsulate multicast data from\
    \ the source.  An interested\n   RP may decapsulate the packet, which SHOULD be\
    \ forwarded as if a PIM\n   register encapsulated packet was received.  That is,\
    \ if packets are\n   already arriving over the interface toward the source, then\
    \ the\n   packet is dropped.  Otherwise, if the outgoing interface list is\n \
    \  non-null, the packet is forwarded appropriately.  Note that when\n   doing\
    \ data encapsulation, an implementation MUST bound the time\n   during which packets\
    \ are encapsulated.\n   This allows for small bursts to be received before the\
    \ multicast tree\n   is built back toward the source's domain.  For example, an\n\
    \   implementation SHOULD encapsulate at least the first packet to\n   provide\
    \ service to bursty sources.\n"
- title: 9.  Other Scenarios
  contents:
  - "9.  Other Scenarios\n   MSDP is not limited to deployment across different routing\
    \ domains.\n   It can be used within a routing domain when it is desired to deploy\n\
    \   multiple RPs for the same group ranges such as with Anycast RP's.  As\n  \
    \ long as all RPs have a interconnected MSDP topology, each can learn\n   about\
    \ active sources as well as RPs in other domains.\n"
- title: 10.  MSDP Peer-RPF Forwarding
  contents:
  - "10.  MSDP Peer-RPF Forwarding\n   The MSDP Peer-RPF Forwarding rules are used\
    \ for forwarding SA\n   messages throughout an MSDP enabled internet.  Unlike\
    \ the RPF check\n   used when forwarding data packets, which generally compares\
    \ the\n   packet's source address against the interface upon which the packet\n\
    \   was received, the Peer-RPF check compares the RP address carried in\n   the\
    \ SA message against the MSDP peer from which the message was\n   received.\n"
- title: 10.1.  Definitions
  contents:
  - "10.1.  Definitions\n   The following definitions are used in the description\
    \ of the Peer-RPF\n   Forwarding Rules:\n"
- title: 10.1.1.  Multicast RPF Routing Information Base
  contents:
  - "10.1.1.  Multicast RPF Routing Information Base\n   The Multicast RPF Routing\
    \ Information Base (MRIB) is the multicast\n   topology table.  It is typically\
    \ derived from the unicast routing\n   table or from other routing protocols such\
    \ as multi-protocol BGP\n   [RFC2858].\n"
- title: 10.1.2.  Peer-RPF Route
  contents:
  - "10.1.2.  Peer-RPF Route\n   The Peer-RPF route is the route that the MRIB chooses\
    \ for a given\n   address.  The Peer-RPF route for a SA's originating RP is used\
    \ to\n   select the peer from which the SA is accepted.\n"
- title: 10.1.3.  Peer-RPF Forwarding Rules
  contents:
  - "10.1.3.  Peer-RPF Forwarding Rules\n   An SA message originated by R and received\
    \ by X from N is accepted if\n   N is the peer-RPF neighbor for X, and is discarded\
    \ otherwise.\n              MPP(R,N)                 MP(N,X)\n      R ---------....------->\
    \ N ------------------> X\n              SA(S,G,R)                SA(S,G,R)\n\
    \   MP(N,X) is an MSDP peering between N and X.  MPP(R,N) is an MSDP\n   peering\
    \ path (zero or more MSDP peers) between R and N, e.g.,\n   MPP(R,N) = MP(R, A)\
    \ + MP(A, B) + MP(B, N).  SA(S,G,R) is an SA\n   message for source S on group\
    \ G originated by an RP R.\n   The peer-RPF neighbor N is chosen deterministically,\
    \ using the first\n   of the following rules that matches.  In particular, N is\
    \ the RPF\n   neighbor of X with respect to R if\n   (i).    N == R (X has an\
    \ MSDP peering with R).\n   (ii).   N is the eBGP NEXT_HOP of the Peer-RPF route\
    \ for R.\n   (iii).  The Peer-RPF route for R is learned through a distance-vector\n\
    \           or path-vector routing protocol (e.g., BGP, RIP, DVMRP) and N\n  \
    \         is the neighbor that advertised the Peer-RPF route for R\n         \
    \  (e.g., N is the iBGP advertiser of the route for R), or N is\n           the\
    \ IGP next hop for R if the route for R is learned via a\n           link-state\
    \ protocol (e.g., OSPF [RFC2328] or IS-IS\n           [RFC1142]).\n   (iv).  \
    \ N resides in the closest AS in the best path towards R.  If\n           multiple\
    \ MSDP peers reside in the closest AS, the peer with\n           the highest IP\
    \ address is the rpf-peer.\n   (v).    N is configured as the static RPF-peer\
    \ for R.\n   MSDP peers, which are NOT in state ESTABLISHED (i.e., down peers),\n\
    \   are not eligible for peer RPF consideration.\n"
- title: 10.2.  MSDP mesh-group semantics
  contents:
  - "10.2.  MSDP mesh-group semantics\n   An MSDP mesh-group is a operational mechanism\
    \ for reducing SA\n   flooding, typically in an intra-domain setting.  In particular,\
    \ when\n   some subset of a domain's MSDP speakers are fully meshed, they can\
    \ be\n   configured into a mesh-group.\n   Note that mesh-groups assume that a\
    \ member doesn't have to forward an\n   SA to other members of the mesh-group\
    \ because the originator will\n   forward to all members.  To be able for the\
    \ originator to forward to\n   all members (and to have each member also be a\
    \ potential originator),\n   the mesh-group must be a full mesh of MSDP peering\
    \ among all members.\n   The semantics of the mesh-group are as follows:\n   (i).\
    \    If a member R of a mesh-group M receives a SA message from an\n         \
    \  MSDP peer that is also a member of mesh-group M, R accepts\n           the\
    \ SA message and forwards it to all of its peers that are\n           not part\
    \ of mesh-group M.  R MUST NOT forward the SA message\n           to other members\
    \ of mesh-group M.\n   (ii).   If a member R of a mesh-group M receives an SA\
    \ message from\n           an MSDP peer that is not a member of mesh-group M,\
    \ and the SA\n           message passes the peer-RPF check, then R forwards the\
    \ SA\n           message to all members of mesh-group M and to any other msdp\n\
    \           peers.\n"
- title: 11.  MSDP Connection State Machine
  contents:
  - "11.  MSDP Connection State Machine\n   MSDP uses TCP as its transport protocol.\
    \  In a peering relationship,\n   one MSDP peer listens for new TCP connections\
    \ on the well-known port\n   639.  The other side makes an active connect to this\
    \ port.  The peer\n   with the higher IP address will listen.  This connection\n\
    \   establishment algorithm avoids call collision.  Therefore, there is\n   no\
    \ need for a call collision procedure.  It should be noted, however,\n   that\
    \ the disadvantage of this approach is that the startup time\n   depends completely\
    \ upon the active side and its connect retry timer;\n   the passive side cannot\
    \ cause the connection to be established.\n   An MSDP peer starts in the DISABLED\
    \ state.  MSDP peers establish\n   peering sessions according to the following\
    \ state machine:\n              --------------->+----------+\n             / \
    \               | DISABLED |<----------\n            |          ------>+----------+\
    \           \\\n            |         /            |E1->A1            |\n    \
    \        |        |             |                  |\n            |        | \
    \            V                  |E7->A7\n            |        |        +----------+\
    \ E3->A3 +--------+\n            |        |        | INACTIVE |------->| LISTEN\
    \ |\n            |        |        +----------+        +--------+\n          \
    \  |        |     E2->A2|    ^               |E5->A5\n            |        | \
    \          |    |               |\n            |        |E7->A6     V    |E6 \
    \            |\n            |         \\      +------------+           |\n   \
    \         |          ------| CONNECTING |           |\n            |         \
    \       +------------+           |\n   E7->A8   |                      |E4->A4\
    \            |\n   E8->A8   |                      |                  |\n   E9->A8\
    \   |                      V                  |\n            \\              \
    \ +-------------+          /\n              --------------| ESTABLISHED |<---------\n\
    \                            +-------------+\n                               |\
    \       ^\n                               |       |\n                       E10->A9\
    \ \\______/\n"
- title: 11.1.  Events
  contents:
  - "11.1.  Events\n   E1) Enable MSDP peering with P\n   E2) Own IP address < P's\
    \ IP address\n   E3) Own IP address > P's IP address\n   E4) TCP established (active\
    \ side)\n   E5) TCP established (passive side)\n   E6) ConnectRetry timer expired\n\
    \   E7) Disable MSDP peering with P (e.g., when one's own address is\n       changed)\n\
    \   E8) Hold Timer expired\n   E9) MSDP TLV format error detected\n   E10) Any\
    \ other error detected\n"
- title: 11.2.  Actions
  contents:
  - "11.2.  Actions\n   A1) Allocate resources for peering with P Compare one's own\
    \ and\n       peer's IP addresses\n   A2) TCP active OPEN Set ConnectRetry timer\
    \ to\n       [ConnectRetry-Period]\n   A3) TCP passive OPEN (listen)\n   A4) Delete\
    \ ConnectRetry timer Send KeepAlive TLV\n       Set KeepAlive timer to [KeepAlive-Period]\n\
    \       Set Hold Timer to [HoldTime-Period]\n   A5) Send KeepAlive TLV\n     \
    \  Set KeepAlive timer to [KeepAlive-Period]\n       Set Hold Timer to [HoldTime-Period]\n\
    \   A6) Abort TCP active OPEN attempt\n       Release resources allocated for\
    \ peering with P\n   A7) Abort TCP passive OPEN attempt\n       Release resources\
    \ allocated for peering with P\n   A8) Close the TCP connection\n       Release\
    \ resources allocated for peering with P\n   A9) Drop the packet\n"
- title: 11.3.  Peer-specific Events
  contents:
  - "11.3.  Peer-specific Events\n   The following peer-specific events can occur\
    \ in the ESTABLISHED\n   state, they do not cause a state transition.  Appropriate\
    \ actions are\n   listed for each event.\n   *) KeepAlive timer expired:\n   \
    \   -> Send KeepAlive TLV\n      -> Set KeepAlive timer to [KeepAlive-Period]\n\
    \   *) KeepAlive TLV received:\n      -> Set Hold Timer to [HoldTime-Period]\n\
    \   *) Source-Active TLV received:\n      -> Set Hold Timer to [HoldTime-Period]\n\
    \      -> Run Peer-RPF Forwarding algorithm\n      -> Set KeepAlive timer to [KeepAlive-Period]\
    \ for those peers\n         the Source-Active TLV is forwarded to\n      -> Send\
    \ information to PIM-SM\n      -> Store information in cache\n"
- title: 11.4.  Peer-independent Events
  contents:
  - "11.4.  Peer-independent Events\n   There are also a number of events that affect\
    \ more than one peering\n   session, but still require actions to be performed\
    \ on a per-peer\n   basis.\n   *) SA-Advertisement-Timer expired:\n      -> Start\
    \ periodic transmission of Source-Active TLV(s)\n       -> Set KeepAlive timer\
    \ to [KeepAlive-Period] each time a\n          Source-Active TLV is sent\n   *)\
    \ MSDP learns of a new active internal source (e.g., PIM-SM\n      register received\
    \ for a new source):\n      -> Send Source-Active TLV\n      -> Set KeepAlive\
    \ timer to [KeepAlive-Period]\n   *) SG-State-Timer expired (one timer per cache\
    \ entry):\n      -> Implementation specific, typically mark the cache entry\n\
    \         for deletion\n"
- title: 12.  Packet Formats
  contents:
  - "12.  Packet Formats\n   MSDP messages are encoded in TLV format.  If an implementation\n\
    \   receives a TLV whose length exceeds the maximum TLV length specified\n   below,\
    \ the TLV SHOULD be accepted.  Any additional data, including\n   possible next\
    \ TLV's in the same message, SHOULD be ignored, and the\n   MSDP session should\
    \ not be reset.\n"
- title: 12.1.  MSDP TLV format
  contents:
  - "12.1.  MSDP TLV format\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type       |           Length              |  Value ....   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type (8 bits)\n    Describes the format of the Value field.\n   Length (16\
    \ bits)\n    Length of Type, Length, and Value fields in octets.  Minimum length\n\
    \    required is 4 octets, except for Keepalive messages.  The maximum\n    TLV\
    \ length is 9192.\n   Value (variable length)\n    Format is based on the Type\
    \ value.  See below.  The length of the\n    value field is Length field minus\
    \ 3.  All reserved fields in the\n    Value field MUST be transmitted as zeros\
    \ and ignored on receipt.\n"
- title: 12.2.  Defined TLVs
  contents:
  - "12.2.  Defined TLVs\n   The following TLV Types are defined:\n   Code       \
    \                 Type\n   ===================================================\n\
    \     1                  IPv4 Source-Active\n     2                  IPv4 Source-Active\
    \ Request\n     3                  IPv4 Source-Active Response\n     4       \
    \           KeepAlive\n     5                  Reserved (Previously: Notification)\n\
    \   Each TLV is described below.\n   In addition, the following TLV Types are\
    \ assigned but not described\n   in this memo:\n   Code                      \
    \  Type\n   ====================================================\n     6     \
    \             MSDP traceroute in progress\n     7                  MSDP traceroute\
    \ reply\n"
- title: 12.2.1.  IPv4 Source-Active TLV
  contents:
  - "12.2.1.  IPv4 Source-Active TLV\n   The maximum size SA message that can be sent\
    \ is 9192 octets.  The\n   9192 octet size does not include the TCP, IP, layer-2\
    \ headers.\n 0                   1                   2                   3\n 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n"
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|       1       |           x + y               |  Entry Count  |'
  contents:
  - '|       1       |           x + y               |  Entry Count  |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                          RP Address                           |'
  contents:
  - '|                          RP Address                           |

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

    '
- title: '|                           Reserved            |  Sprefix Len  | \'
  contents:
  - '|                           Reserved            |  Sprefix Len  | \

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  \
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  \

    '
- title: '|                         Group Address                         |   ) z'
  contents:
  - '|                         Group Address                         |   ) z

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  /
  contents:
  - '+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  /

    '
- title: '|                         Source Address                        | /'
  contents:
  - '|                         Source Address                        | /

    '
- title: +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  contents:
  - "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Type\n\
    \    IPv4 Source-Active TLV is type 1.\n   Length x\n    Is the length of the\
    \ control information in the message.  x is 8\n    octets (for the first two 32-bit\
    \ quantities) plus 12 times Entry\n    Count octets.\n   Length y\n    If 0, then\
    \ there is no data encapsulated.  Otherwise an IPv4 packet\n    follows and y\
    \ is the value of the total length field in the header\n    of the encapsulated\
    \ IP packet.  If there are multiple (S,G) entries\n    in an SA message, only\
    \ the last entry may have encapsulated data and\n    it must reflect the source\
    \ and destination addresses in the header\n    of the encapsulated IP packet.\n\
    \   Entry Count\n    Is the count of z entries (note above) which follow the RP\
    \ address\n    field.  This is so multiple (S,G)s from the same domain can be\n\
    \    encoded efficiently for the same RP address.  An SA message\n    containing\
    \ encapsulated data typically has an entry count of 1\n    (i.e., only contains\
    \ a single entry, for the (S,G) representing the\n    encapsulated packet).\n\
    \   RP Address\n    The address of the RP in the domain the source has become\
    \ active in.\n   Reserved\n    The Reserved field MUST be transmitted as zeros\
    \ and MUST be ignored\n    by a receiver.\n   Sprefix Len\n    The route prefix\
    \ length associated with source address.  This field\n    MUST be transmitted\
    \ as 32 (/32).\n   Group Address\n    The group address the active source has\
    \ sent data to.\n   Source Address\n    The IP address of the active source.\n\
    \   Multiple (S,G) entries MAY appear in the same SA and can be batched\n   for\
    \ efficiency at the expense of data latency.  This would typically\n   occur on\
    \ intermediate forwarding of SA messages.\n"
- title: 12.2.2.  KeepAlive TLV
  contents:
  - "12.2.2.  KeepAlive TLV\n   A KeepAlive TLV is sent to an MSDP peer if and only\
    \ if there were no\n   MSDP messages sent to the peer within [KeepAlive-Period]\
    \ seconds.\n   This message is necessary to keep the MSDP connection alive.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       4       |             3                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The length of the message is 3 octets which encompasses the one octet\n  \
    \ Type field and the two octet Length field.\n"
- title: 13.  MSDP Error Handling
  contents:
  - "13.  MSDP Error Handling\n   If an MSDP message is received with a TLV format\
    \ error, the session\n   SHOULD be reset with that peer.  MSDP messages with other\
    \ errors,\n   such as unrecognized type code, received from MSDP peers, SHOULD\
    \ be\n   silently discarded and the session SHOULD not be reset.\n"
- title: 14.  SA Data Encapsulation
  contents:
  - "14.  SA Data Encapsulation\n   As discussed earlier, TCP encapsulation of data\
    \ in SA messages MAY be\n   supported for backwards compatibility with legacy\
    \ MSDP peers.\n"
- title: 15.  Applicability Statement
  contents:
  - "15.  Applicability Statement\n   MSDP is used primarily in two deployment scenarios:\n"
- title: 15.1.  Between PIM Domains
  contents:
  - "15.1.  Between PIM Domains\n   MSDP can be used between PIM domains to convey\
    \ information about\n   active sources available in other domains.  MSDP peering\
    \ used in such\n   cases is generally one to one peering, and utilizes the deterministic\n\
    \   peer-RPF rules described in this spec (i.e., does not use mesh-\n   groups).\
    \  Peerings can be aggregated on a single MSDP peer, typically\n   from one to\
    \ hundreds of peerings, similar in scale, although not\n   necessarily consistent,\
    \ with BGP peerings.\n"
- title: 15.2.  Between Anycast-RPs
  contents:
  - "15.2.  Between Anycast-RPs\n   MSDP is also used between Anycast-RPs [RFC3446]\
    \ within a PIM domain\n   to synchronize information about the active sources\
    \ being served by\n   each Anycast-RP peer (by virtue of IGP reachability).  MSDP\
    \ peering\n   used in this scenario is typically based on MSDP mesh groups, where\n\
    \   anywhere from two to tens of peers can comprise a given mesh group,\n   although\
    \ more than ten is not typical.  One or more of these mesh-\n   group peers may\
    \ then also have additional one-to-one peering with\n   msdp peers outside that\
    \ PIM domain as described in scenario A, for\n   discovery of external sources.\
    \  MSDP for anycast-RP without external\n   MSDP peering is a valid deployment\
    \ option and common.\n"
- title: 16.  Intellectual Property
  contents:
  - "16.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 17.  Acknowledgments
  contents:
  - "17.  Acknowledgments\n   The editors would like to thank the original authors,\
    \ Dino Farinacci,\n   Yakov Rehkter, Peter Lothberg, Hank Kilmer, and Jermey Hall\
    \ for their\n   original contribution to the MSDP specification.  In addition,\
    \ Bill\n   Nickless, John Meylor, Liming Wei, Manoj Leelanivas, Mark Turner,\n\
    \   John Zwiebel, Cristina Radulescu-Banu, Brian Edwards, Selina\n   Priestley,\
    \ IJsbrand Wijnands, Tom Pusateri, Kristofer Warell, Henning\n   Eriksson, Thomas\
    \ Eriksson, Dave Thaler, and Ravi Shekhar provided\n   useful and productive design\
    \ feedback and comments.  Toerless Eckert,\n   Leonard Giuliano, Mike McBride,\
    \ David Meyer, John Meylor, Pekka\n   Savola, Ishan Wu, and Swapna Yelamanchi\
    \ contributed to the final\n   version of the document.\n"
- title: 18.  Security Considerations
  contents:
  - "18.  Security Considerations\n   An MSDP implementation MUST implement Keyed\
    \ MD5 [RFC2385] to secure\n   control messages, and MUST be capable of interoperating\
    \ with peers\n   that do not support it.  However, if one side of the connection\
    \ is\n   configured with Keyed MD5 and the other side is not, the connection\n\
    \   SHOULD NOT be established.\n   In addition, to mitigate state explosion during\
    \ denial of service and\n   other attacks, SA filters and limits SHOULD be used\
    \ with MSDP to\n   limit the sources and  groups that will be passed between RPs\n\
    \   [DEPLOY].  These filtering and limiting functions may include, for\n   example,\
    \ access lists of source or group addresses which should not\n   be propagated\
    \ to other domains using MSDP, the absolute highest\n   acceptable number of SA-state\
    \ entries or a rate-limit of for the\n   creation of new SA-state entries after\
    \ the connection has been\n   established.\n   If follow-on work is done in this\
    \ area, a more robust integrity\n   mechanism, such as HMAC-SHA1 [RFC2104, RFC2202]\
    \ ought to be employed.\n"
- title: 19.  IANA Considerations
  contents:
  - "19.  IANA Considerations\n   This document creates a new namespace called \"\
    MSDP TLV Values\" that\n   the IANA will manage.  The initial seven MSDP TLV values\
    \ are\n   specified in Section 12.2.  The following two sections describe the\n\
    \   rules for allocating new MSDP TLV values.\n"
- title: 19.1.  IANA Allocated TLV Range
  contents:
  - "19.1.  IANA Allocated TLV Range\n   MSDP TLV values in the range [8,200] (inclusive)\
    \ are to be allocated\n   using an IESG Approval or Standards Action process [RFC2434].\n"
- title: 19.2.  Experimental TLV Range
  contents:
  - "19.2.  Experimental TLV Range\n   TLV values in the range [201,255] (inclusive)\
    \ are allocated for\n   experimental use.\n"
- title: 20.  References
  contents:
  - '20.  References

    '
- title: 20.1.  Normative References
  contents:
  - "20.1.  Normative References\n   [RFC1142]       Oran, D., Ed., \"OSI IS-IS Intra-domain\
    \ Routing\n                   Protocol\", RFC 1142, February 1990.\n   [RFC2119]\
    \       Bradner, S., \"Key words for use in RFCs to Indicate\n               \
    \    Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2328]       Moy,\
    \ J., \"OSPF Version 2\", STD 54, RFC 2328, April\n                   1998.\n\
    \   [RFC2858]       Bates, T., Rekhter, Y., Chandra, R. and D. Katz,\n       \
    \            \"Multiprotocol Extensions for BGP-4\", RFC 2858, June\n        \
    \           2000.\n   [RFC2362]       Estrin, D., Farinacci, D., Helmy, A., Thaler,\
    \ D.,\n                   Deering, S., Handley, M., Jacobson, V., Lin, C.,\n \
    \                  Sharma, P. and L. Wei, \"Protocol Independent\n           \
    \        Multicast - Sparse Mode (PIM-SM):  Protocol\n                   Specification\"\
    , RFC 2362, June 1998.\n   [RFC2365]       Meyer, D., \"Administratively Scoped\
    \ IP Multicast\",\n                   BCP 23, RFC 2365, July 1998.\n   [RFC2385]\
    \       Heffernan, A., \"Protection of BGP Sessions via the\n                \
    \   TCP MD5 Signature Option\", RFC 2385, August 1998.\n   [RFC2434]       Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing\n                   an IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC\n                   2434, October 1998.\n   [RFC3446]\
    \       Kim, D., Meyer, D., Kilmer, H. and D. Farinacci,\n                   \"\
    Anycast Rendezvous Point (RP) Mechanism using\n                   Protocol Independent\
    \ Multicast (PIM) and Multicast\n                   Source Discovery Protocol\
    \ (MSDP)\", RFC 3446, January\n                   2003.\n"
- title: 20.2.  Informative References
  contents:
  - "20.2.  Informative References\n   [DEPLOY]        McBride, M., Meylor, J. and\
    \ D. Meyer, \"Multicast\n                   Source Discovery Protocol (MSDP) Deployment\n\
    \                   Scenarios\", Work in Progress, July 2003.\n   [RFC2104]  \
    \     Krawczyk, H., Bellare, M. and R.  Canetti, \"HMAC:\n                   Keyed-Hashing\
    \ for Message Authentication\", RFC 2104,\n                   February 1997.\n\
    \   [RFC2202]       Cheng, P. and R. Glenn, \"Test Cases for HMAC-MD5 and\n  \
    \                 HMAC-SHA-1\", RFC 2202, September 1997.\n"
- title: 21.  Editors' Addresses
  contents:
  - "21.  Editors' Addresses\n   Bill Fenner\n   AT&T Labs -- Research\n   75 Willow\
    \ Road\n   Menlo Park, CA 94025\n   EMail: fenner@research.att.com\n   David Meyer\n\
    \   EMail: dmm@1-4-5.net\n"
- title: 22.  Full Copyright Statement
  contents:
  - "22.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
