- title: __initial_text__
  contents:
  - "                         OSPF protocol analysis\nStatus of this Memo\nThis memo\
    \ provides information for the Internet community. It does not\nspecify any Internet\
    \ standard. Distribution of this memo is unlimited.\nPlease send comments to ospf@trantor.umd.edu.\n\
    Abstract\nThis is the first of two reports on the OSPF protocol. These reports\
    \ are\nrequired by the IAB/ IESG in order for an Internet routing protocol to\n\
    advance to Draft Standard Status. OSPF is a TCP/IP routing protocol,\ndesigned\
    \ to be used internal to an Autonomous System (in other words,\nOSPF is an Interior\
    \ Gateway Protocol).\nVersion 1 of the OSPF protocol was published in RFC 1131.\
    \ Since then\nOSPF version 2 has been developed. Version 2 has been documented\
    \ in RFC\n1247.  The changes between version 1 and version 2 of the OSPF protocol\n\
    are explained in Appendix F of RFC 1247. It is OSPF Version 2 that is\nthe subject\
    \ of this report.\nThis report attempts to summarize the key features of OSPF\
    \ V2. It also\nattempts to analyze how the protocol will perform and scale in\
    \ the\nInternet.\n1.0  Introduction\nThis document addresses, for OSPF V2, the\
    \ requirements set forth by the\nIAB/IESG for an Internet routing protocol to\
    \ advance to Draft Standard\nstate. This requirements are briefly summarized below.\
    \ The remaining\nsections of this report document how OSPF V2 satisfies these\n\
    requirements:\no  What are the key features and algorithms of the protocol?\n\
    o  How much link bandwidth, router memory and router CPU cycles does the\n   protocol\
    \ consume under normal conditions?\no  For these metrics, how does the usage scale\
    \ as the routing\n   environment grows? This should include topologies at least\
    \ an order\n   of magnitude larger than the current environment.\no  What are\
    \ the limits of the protocol for these metrics? (I.e., when\n   will the routing\
    \ protocol break?)\no  For what environments is the protocol well suited, and\
    \ for what is it\n   not suitable?\n1.1  Acknowledgments\nThe OSPF protocol has\
    \ been developed by the OSPF Working Group of the\nInternet Engineering Task Force.\n\
    2.0  Key features of the OSPF protocol\nThis section summarizes the key features\
    \ of the OSPF protocol. OSPF is\nan Internal gateway protocol; it is designed\
    \ to be used internal to a\nsingle Autonomous System. OSPF uses link-state or\
    \ SPF-based technology\n(as compared to the distance-vector or Bellman-Ford technology\
    \ found in\nrouting protocols such as RIP). Individual link state advertisements\n\
    (LSAs) describe pieces of the OSPF routing domain (Autonomous System).\nThese\
    \ LSAs are flooded throughout the routing domain, forming the link\nstate database.\
    \ Each router has an identical link state database;\nsynchronization of link state\
    \ databases is maintained via a reliable\nflooding algorithm. From this link state\
    \ database, each router builds a\nrouting table by calculating a shortest-path\
    \ tree, with the root of the\ntree being the calculating router itself. This calculation\
    \ is commonly\nreferred to as the Dijkstra procedure.\nLink state advertisements\
    \ are small. Each advertisement describes a\nsmall pieces of the OSPF routing\
    \ domain, namely either: the neighborhood\nof a single router, the neighborhood\
    \ of a single transit network, a\nsingle inter-area route (see below) or a single\
    \ external route.\nThe other key features of the OSPF protocol are:\no  Adjacency\
    \ bringup. Certain pairs of OSPF routers become \"adjacent\".\n   As an adjacency\
    \ is formed, the two routers synchronize their link\n   state databases by exchanging\
    \ database summaries in the form of OSPF\n   Database Exchange packets. Adjacent\
    \ routers then maintain syn-\n   chronization of their link state databases through\
    \ the reliable\n   flooding algorithm. Routers connected by serial lines always\
    \ become\n   adjacent. On multi-access networks (e.g., ethernets or X.25 PDNs),\n\
    \   all routers attached to the network become adjacent to both the\n   Designated\
    \ Router and the Backup Designated router.\no  Designated router. A Designated\
    \ Router is elected on all multi-access\n   networks (e.g., ethernets or X.25\
    \ PDNs). The network's Designated\n   Router originates the network LSA describing\
    \ the network's local\n   environment. It also plays a special role in the flooding\
    \ algorithm,\n   since all routers on the network are synchronizing their link\
    \ state\n   databases by sending and receiving LSAs to/from the Designated Router\n\
    \   during the flooding process.\no  Backup Designated Router. A Backup Designated\
    \ Router is elected on\n   multi-access networks to speed/ease the transition\
    \ of Designated\n   Routers when the current Designated Router disappears. In\
    \ that event,\n   the Backup DR takes over, and does not need to go through the\n\
    \   adjacency bringup process on the LAN (since it already had done this\n   in\
    \ its Backup capacity). Also, even before the disappearance of the\n   Designated\
    \ Router is noticed, the Backup DR will enable the reliable\n   flooding algorithm\
    \ to proceed in the DR's absence.\no  Non-broadcast multi-access network support.\
    \ OSPF treats these\n   networks (e.g., X.25 PDNs) pretty much as if they were\
    \ LANs (i.e., a\n   DR is elected, and a network LSA is generated). Additional\n\
    \   configuration information is needed however for routers attached to\n   these\
    \ network to initially find each other.\no  OSPF areas. OSPF allows the Autonomous\
    \ Systems to be broken up into\n   regions call areas.  This is useful for several\
    \ reasons. First, it\n   provides an extra level of routing protection: routing\
    \ within an area\n   is protected from all information external to the area. Second,\
    \ by\n   splitting an Autonomous System into areas the cost of the Dijkstra\n\
    \   procedure (in terms of CPU cycles) is reduced.\no  Flexible import of external\
    \ routing information. In OSPF, each\n   external route is imported into the Autonomous\
    \ System in a separate\n   LSA. This reduces the amount of flooding traffic (since\
    \ external\n   routes change often, and you want to only flood the changes). It\
    \ also\n   enables partial routing table updates when only a single external\n\
    \   route changes. OSPF external LSAs also provide the following\n   features.\
    \  A forwarding address can be included in the external LSA,\n   eliminating extra-hops\
    \ at the edge of the Autonomous System. There\n   are two levels of external metrics\
    \ that can be specified, type 1 and\n   type 2. Also, external routes can be tagged\
    \ with a 32-bit number (the\n   external route tag; commonly used as an AS number\
    \ of the route's\n   origin), simplifying external route management in a transit\n\
    \   Autonomous System.\no  Four level routing hierarchy. OSPF has a four level\
    \ routing\n   hierarchy, or trust model: intra-area, inter-area, external type\
    \ 1\n   and external type 2 routes. This enables multiple levels of routing\n\
    \   protection, and simplifies routing management in an Autonomous\n   System.\n\
    o  Virtual links. By allowing the configuration of virtual links, OSPF\n   removes\
    \ topological restrictions on area layout in an Autonomous\n   System.\no  Authentication\
    \ of routing protocol exchanges. Every time an OSPF\n   router receives a routing\
    \ protocol packet, it authenticates the\n   packet before processing it further.\n\
    o  Flexible routing metric. In OSPF, metric are assigned to outbound\n   router\
    \ interfaces. The cost of a path is then the sum of the path's\n   component interfaces.\
    \ The routing metric itself can be assigned by\n   the system administrator to\
    \ indicate any combination of network\n   characteristics (e.g., delay, bandwidth,\
    \ dollar cost, etc.).\no  Equal-cost multipath. When multiple best cost routes\
    \ to a destination\n   exist, OSPF finds them and they can be then used to load\
    \ share\n   traffic to the destination.\no  TOS-based routing. Separate sets of\
    \ routes can be calculated for each\n   IP type of service. For example, low delay\
    \ traffic could be routed on\n   one path, while high bandwidth traffic is routed\
    \ on another. This is\n   done by (optionally) assigning, to each outgoing router\
    \ interface,\n   one metric for each IP TOS.\no  Variable-length subnet support.\
    \ OSPF includes support for variable-\n   length subnet masks by carrying a network\
    \ mask with each advertised\n   destination.\no  Stub area support. To support\
    \ routers having insufficient memory,\n   areas can be configured as stubs. External\
    \ LSAs (often making up the\n   bulk of the Autonomous System) are not flooded\
    \ into/throughout stub\n   areas. Routing to external destinations in stub areas\
    \ is based solely\n   on default.\n3.0  Cost of the protocol\nThis section attempts\
    \ to analyze how the OSPF protocol will perform and\nscale in the Internet. In\
    \ this analysis, we will concentrate on the\nfollowing four areas:\no  Link bandwidth.\
    \ In OSPF, a reliable flooding mechanism is used to\n   ensure that router link\
    \ state databases are remained synchronized.\n   Individual components of the\
    \ link state databases (the LSAs) are\n   refreshed infrequently (every 30 minutes),\
    \ at least in the absence of\n   topological changes. Still, as the size of the\
    \ database increases,\n   the amount of link bandwidth used by the flooding procedure\
    \ also\n   increases.\no  Router memory. The size of an OSPF link state database\
    \ can get quite\n   large, especially in the presence of many external LSAs. This\
    \ imposes\n   requirements on the amount of router memory available.\no  CPU usage.\
    \ In OSPF, this is dominated by the length of time it takes\n   to run the shortest\
    \ path calculation (Dijkstra procedure). This is a\n   function of the number\
    \ of routers in the OSPF system.\no  Role of the Designated Router. The Designated\
    \ router receives and\n   sends more packets on a multi-access networks than the\
    \ other routers\n   connected to the network. Also, there is some time involved\
    \ in\n   cutting over to a new Designated Router after the old one fails\n   (especially\
    \ when both the Backup Designated Router and the Designated\n   Router fail at\
    \ the same time). For this reason, it is possible that\n   you may want to limit\
    \ the number of routers connected to a single\n   network.\nThe remaining section\
    \ will analyze these areas, estimating how much\nresources the OSPF protocol will\
    \ consume, both now and in the future. To\naid in this analysis, the next section\
    \ will present some data that have\nbeen collected in actual OSPF field deployments.\n\
    3.1   Operational data\nThe OSPF protocol has been deployed in a number of places\
    \ in the\nInternet. For a summary of this deployment, see [1]. Some statistics\n\
    have been gathered from this operational experience, via local network\nmanagement\
    \ facilities. Some of these statistics are presented in the\nfollowing table:\n\
    TABLE 1. Pertinent operational statistics\n  Statistic                       \
    \ BARRNet    NSI        OARnet\n  ___________________________________________________________________\n\
    \  Data gathering (duration)        99 hrs     277 hrs    28 hrs\n  Dijkstra frequency\
    \               50 min     25 min     13 min\n  External incremental frequency\
    \   1.2 min    .98 min    not gathered\n  Database turnover                29.7\
    \ min   30.9 min   28.2 min\n  LSAs per packet                  3.38       3.16\
    \       2.99\n  Flooding retransmits             1.3%       1.4%       .7%\nThe\
    \ first line in the above table show the length of time that\nstatistics were\
    \ gathered on the three networks. A brief description of\nthe other statistics\
    \ follows:\no  Dijkstra frequency. In OSPF, the Dijkstra calculation involves\
    \ only\n   those routers and transit networks belonging to the AS. The Dijkstra\n\
    \   is run only when something in the system changes (like a serial line\n   between\
    \ two routers goes down). Note that in these operational\n   systems, the Dijkstra\
    \ process runs only infrequently (the most\n   frequent being every 13 minutes).\n\
    o  External incremental frequency. In OSPF, when an external route\n   changes\
    \ only its entry in the routing table is recalculated. These\n   are called external\
    \ incremental updates. Note that these happen much\n   more frequently than the\
    \ Dijkstra procedure. (in other words,\n   incremental updates are saving quite\
    \ a bit of processor time).\no  Database turnover. In OSPF, link state advertisements\
    \ are refreshed\n   at a minimum of every 30 minutes. New advertisement instances\
    \ are\n   sent out more frequently when some part of the topology changes. The\n\
    \   table shows that, even taking topological changes into account, on\n   average\
    \ an advertisement is updated close to only every 30 minutes.\n   This statistic\
    \ will be used in the link bandwidth calculations below.\n   Note that NSI actually\
    \ shows advertisements updated every 30.7 (> 30)\n   minutes. This probably means\
    \ that at one time earlier in the\n   measurement period, NSI had a smaller link\
    \ state database that it did\n   at the end.\no  LSAs per packet. In OSPF, multiple\
    \ LSAs can be included in either\n   Link State Update or Link State Acknowledgment\
    \ packets.The table\n   shows that, on average, around 3 LSAs are carried in a\
    \ single packet.\n   This statistic is used when calculating the header overhead\
    \ in the\n   link bandwidth calculation below. This statistic was derived by\n\
    \   diving the number of LSAs flooded by the number of (non-hello)\n   multicasts\
    \ sent.\no  Flooding retransmits. This counts both retransmission of LS Update\n\
    \   packets and Link State Acknowledgment packets, as a percentage of the\n  \
    \ original multicast flooded packets. The table shows that flooding is\n   working\
    \ well, and that retransmits can be ignored in the link\n   bandwidth calculation\
    \ below.\n3.2  Link bandwidth\nIn this section we attempt to calculate how much\
    \ link bandwidth is\nconsumed by the OSPF flooding process. The amount of link\
    \ bandwidth\nconsumed increases linearly with the number of advertisements present\
    \ in\nthe OSPF database.We assume that the majority of advertisements in the\n\
    database will be AS external LSAs (operationally this is true, see [1]).\nFrom\
    \ the statistics presented in Section 3.1, any particular\nadvertisement is flooded\
    \ (on average) every 30 minutes. In addition,\nthree advertisements fit in a single\
    \ packet. (This packet could be\neither a Link State Update packet or a Link State\
    \ Acknowledgment packet;\nin this analysis we select the Link State Update packet,\
    \ which is the\nlarger). An AS external LSA is 36 bytes long.  Adding one third\
    \ of a\npacket header (IP header plus OSPF Update packet) yields 52 bytes.\nTransmitting\
    \ this amount of data every 30 minutes gives an average rate\nof 23/100 bits/second.\n\
    If you want to limit your routing traffic to 5% of the link's total\nbandwidth,\
    \ you get the following maximums for database size:\nTABLE 2. Database size as\
    \ a function of link speed (5% utilization)\n                 Speed    # external\
    \ advertisements\n                 _____________________________________\n   \
    \              9.6 Kb   2087\n                 56 Kb    12,174\nHigher line speeds\
    \ have not been included, because other factors will\nthen limit database size\
    \ (like router memory) before line speed becomes\na factor. Note that in the above\
    \ calculation, the size of the data link\nheader was not taken into account. Also,\
    \ note that while the OSPF\ndatabase is likely to be mostly external LSAs, other\
    \ LSAs have a size\nalso. As a ballpark estimate, router links and network links\
    \ are\ngenerally three times as large as an AS external link, with summary link\n\
    advertisements being the same size as external link LSAs.\nOSPF consumes considerably\
    \ less link bandwidth than RIP. This has been\nshown experimentally in the NSI\
    \ network. See Jeffrey Burgan's \"NASA\nSciences Internet\" report in [3].\n3.3\
    \  Router memory\nMemory requirements in OSPF are dominated by the size of the\
    \ link state\ndatabase. As in the previous section, it is probably safe to assume\
    \ that\nmost of the advertisements in the database are external LSAs. While an\n\
    external LSA is 36 bytes long, it is generally stored by an OSPF\nimplementation\
    \ together with some support data. So a good estimate of\nrouter memory consumed\
    \ by an external LSA is probably 64 bytes. So a\ndatabase having 10,000 external\
    \ LSAs will consume 640K bytes of router\nmemory. OSPF definitely requires more\
    \ memory than RIP.\nUsing the Proteon P4200 implementation as an example, the\
    \ P4200 has\n2Mbytes of memory. This is shared between instruction, data and packet\n\
    buffer memory. The P4200 has enough memory to store 10, 000 external\nLSAs, and\
    \ still have enough packet buffer memory available to run a\nreasonable number\
    \ of interfaces.\nAlso, note that while the OSPF database is likely to be mostly\
    \ external\nLSAs, other LSAs have a size also. As a ballpark estimate, router\
    \ links\nand network links consume generally three times as much memory as an\
    \ AS\nexternal link, with summary link advertisements being the same size as\n\
    external link LSAs.\n3.4  Router CPU\nAssume that, as the size of the OSPF routing\
    \ domain grows, the number of\ninterfaces per router stays bounded. Then the Dijkstra\
    \ calculation is of\norder (n * log (n)), where n is the number of routers in\
    \ the routing\ndomain. (This is the complexity of the Dijkstra algorithm in a\
    \ sparse\nnetwork). Of course, it is implementation specific as to how expensive\n\
    the Dijkstra really is.\nWe have no experimental numbers for the cost of the Dijkstra\
    \ calculation\nin a real OSPF implementation. However, Steve Deering presented\
    \ results\nfor the Dijkstra calculation in the \"MOSPF meeting report\" in [3].\n\
    Steve's calculation was done on a DEC 5000 (10 mips processor), using\nthe Stanford\
    \ internet as a model. His graphs are based on numbers of\nnetworks, not number\
    \ of routers. However, if we extrapolate that the\nratio of routers to networks\
    \ remains the same, the time to run Dijkstra\nfor 200 routers in Steve's implementation\
    \ was around 15 milliseconds.\nThis seems a reasonable cost, particularly when\
    \ you notice that the\nDijkstra calculation is run very infrequently in operational\n\
    deployments. In the three networks presented in Section 3.1, Dijkstra\nwas run\
    \ on average only every 13 to 50 minutes. Since the Dijkstra is\nrun so infrequently,\
    \ it seems likely that OSPF overall consumes less CPU\nthan RIP (because of RIP's\
    \ frequent updates, requiring routing table\nlookups).\nAs another example, the\
    \ routing algorithm in MILNET is SPF-based.\nMILNET's current size is 230 nodes,\
    \ and the routing calculation still\nconsumes less than 5% of the MILNET switches'\
    \ processor bandwidth [4].\nBecause the routing algorithm in the MILNET adapts\
    \ to network load, it\nruns the Dijkstra process quite frequently (on the order\
    \ of seconds as\ncompared to OSPF's minutes). However, it should be noted that\
    \ the\nrouting algorithm in MILNET incrementally updates the SPF-tree, while\n\
    OSPF rebuilds it from scratch at each Dijkstra calculation\nOSPF's Area capability\
    \ provides a way to reduce Dijkstra overhead, if it\nbecomes a burden. The routing\
    \ domain can be split into areas. The extent\nof the Dijkstra calculation (and\
    \ its complexity) is limited to a single\narea at a time.\n3.5  Role of Designated\
    \ Router\nThis section explores the number of routers that can be attached to\
    \ a\nsingle network. As the number of routers attached to a network grows, so\n\
    does the amount of OSPF routing traffic seen on the network.  Some of\nthis is\
    \ Hello traffic, which is generally multicast by each router every\n10 seconds.\
    \ This burden is borne by all routers attached to the network.\nHowever, because\
    \ of its special role in the flooding process, the\nDesignated router ends up\
    \ sending more Link State Updates than the other\nrouters on the network. Also,\
    \ the Designated Router receives Link State\nAcknowledgments from all attached\
    \ routers, while the other routers just\nreceive them from the DR. (Although it\
    \ is important to note that the\nrate of Link State Acknowledgments will generally\
    \ be limited to one per\nsecond from each router, because acknowledgments are\
    \ generally delayed.)\nSo, if the amount of protocol traffic on the LAN becomes\
    \ a limiting\nfactor, the limit is likely to be detected in the Designated Router\n\
    first. However, such a limit is not expected to be reached in practice.\nThe amount\
    \ of routing protocol traffic generated by OSPF has been shown\nto be small (see\
    \ Section 3.2). Also, if need be OSPF's hello timers can\nbe configured to reduce\
    \ the amount of protocol traffic on the network.\nNote that more than 50 routers\
    \ have been simulated attached to a single\nLAN (see [1]). Also, in interoperability\
    \ testing 13 routers have been\nattached to a single ethernet with no problems\
    \ encountered.\nAnother factor in the number of routers attached to a single network\
    \ is\nthe cutover time when the Designated Router fails. OSPF has a Backup\nDesignated\
    \ Router so that the cutover does not have to wait for the new\nDR to synchronize\
    \ (the adjacency bring-up process mentioned earlier)\nwith all the other routers\
    \ on the LAN; as a Backup DR it had already\nsynchronized. However, in those rare\
    \ cases when both DR and Backup DR\ncrash at the same time, the new DR will have\
    \ to synchronize (via the\nadjacency bring-up process) with all other routers\
    \ before becoming\nfunctional. Field experience show that this synchronization\
    \ process\ntakes place in a timely fashion (see the OARnet report in [1]). However,\n\
    this may be an issue in systems that have many routers attached to a\nsingle network.\n\
    In the unlikely event that the number of routers attached to a LAN\nbecomes a\
    \ problem, either due to the amount of routing protocol traffic\nor the cutover\
    \ time, the LAN can be split into separate pieces (similar\nto splitting up the\
    \ AS into separate areas).\n3.6  Summary\nIn summary, it seems like the most likely\
    \ limitation to the size of an\nOSPF system is available router memory. We have\
    \ given as 10,000 as the\nnumber of external LSAs that can be supported by the\
    \ memory available in\none configuration of a particular implementation (the Proteon\
    \ P4200).\nOther implementations may vary; nowadays routers are being built with\n\
    more and more memory.  Note that 10,000 routes is considerably larger\nthan the\
    \ largest field implementation (BARRNet; which at 1816 external\nLSAs is still\
    \ very large).\nNote that there may be ways to reduce database size in a routing\
    \ domain.\nFirst, the domain can make use of default routing, reducing the number\n\
    of external routes that need to be imported. Secondly, an EGP can be\nused that\
    \ will transport its own information through the AS instead of\nrelying on the\
    \ IGP (OSPF in this case) to do transfer the information\nfor it (the EGP). Thirdly,\
    \ routers having insufficient memory may be\nable to be assigned to stub areas\
    \ (whose databases are drastically\nsmaller). Lastly, if the Internet went away\
    \ from a flat address space\nthe amount of external information imported into\
    \ an OSPF domain could be\nreduced drastically.\nWhile not as likely, there could\
    \ be other issues that would limit the\nsize of an OSPF routing domain. If there\
    \ are slow lines (like 9600\nbaud), the size of the database will be limited (see\
    \ Section 3.2).\nDijkstra may get to be expensive when there are hundreds of routers\
    \ in\nthe OSPF domain; although at this point the domain can be split into\nareas.\
    \ Finally, when there are many routers attached to a single\nnetwork, there may\
    \ be undue burden imposed upon the Designated Router;\nalthough at that point\
    \ a LAN can be split into separate LANs.\n4.0  Suitable environments\nSuitable\
    \ environments for the OSPF protocol range from large to small.\nOSPF is particular\
    \ suited for transit Autonomous Systems for the\nfollowing reasons. OSPF can accommodate\
    \ a large number of external\nroutes. In OSPF the import of external information\
    \ is very flexible,\nhaving provisions for a forwarding address, two levels of\
    \ external\nmetrics, and the ability to tag external routes with their AS number\
    \ for\neasy management. Also OSPF's ability to do partial updates when external\n\
    information changes is very useful on these networks.\nOSPF is also suited for\
    \ smaller, either stand alone or stub Autonomous\nSystems, because of its wide\
    \ array of features: fast convergence,\nequal-cost-multipath, TOS routing, areas,\
    \ etc.\n5.0  Unsuitable environments\nOSPF has a very limited ability to express\
    \ policy. Basically, its only\npolicy mechanisms are in the establishment of a\
    \ four level routing\nhierarchy: intra-area, inter-area, type 1 and type 2 external\
    \ routes.  A\nsystem wanting more sophisticated policies would have to be split\
    \ up\ninto separate ASes, running a policy-based EGP between them.\n6.0  Reference\
    \ Documents\nThe following documents have been referenced by this report:\n[1]\
    \ Moy, J., \"Experience with the OSPF protocol\", RFC 1246, July 1991.\n[2] Moy,\
    \ J., \"OSPF Version 2\", RFC 1247, July 1991.\n[3] Corporation for National Research\
    \ Initiatives, \"Proceedings of the\n    Eighteenth Internet Engineering Task\
    \ Force\", University of British\n    Columbia, July 30-August 3, 1990.\nSecurity\
    \ Considerations\nSecurity issues are not discussed in this memo.\nAuthor's Address\n\
    John Moy\nProteon Inc.\n2 Technology Drive\nWestborough, MA 01581\nPhone: (508)\
    \ 898-2800\nEmail:  jmoy@proteon.com\n"
