Abstract This document presents a base YANG data model for connection oriented Operations, Administration, and Maintenance (OAM) protocols.
It provides a technology independent abstraction of key OAM constructs for such protocols.
The model presented here can be extended to include technology specific details.
This guarantees uniformity in the management of OAM protocols and provides support for nested OAM workflows (i.e., performing OAM functions at different levels through a unified interface).
The YANG data model in this document conforms to the Network Management Datastore Architecture.
Introduction Operations, Administration, and Maintenance (OAM) are important networking functions that allow operators to: 1.
monitor network communications (i.e., reachability verification and Continuity Check
troubleshoot failures (i.e., fault verification and localization) 3.
monitor service level agreements and performance (i.e., performance management)
An overview of OAM tools is presented in [RFC7276].
Over the years, many technologies have developed similar tools for fault and performance management.
The different sets of OAM tools may support both connection oriented technologies or connectionless technologies.
In connection oriented technologies, a connection is established prior to the transmission of data.
After the connection is established, no additional control information such as signaling or operations and maintenance information is required to transmit the actual user data.
In connectionless technologies, data is typically sent between communicating endpoints without prior arrangement, but control information is required to identify the destination (e.g., [G.800]).
The YANG data model for OAM protocols using connectionless communications is specified in [RFC8532] and [IEEE802.1Q].
Connectivity Fault Management as specified in [IEEE802.1Q]
is a well  established OAM standard that is widely adopted for Ethernet networks.
ITU T [G.8013], MEF Forum (MEF)
[MEF 17], MPLS Transport Profile (MPLS TP)
[RFC6371], and Transparent Interconnection of Lots of Links (TRILL)
[RFC7455] all define OAM mechanisms based on the manageability framework of Connectivity Fault Management (CFM)
Given the wide adoption of the underlying OAM concepts defined in CFM [IEEE802.1Q], it is a reasonable choice to develop the unified management framework for connection oriented OAM based on those concepts.
In this document, we take the CFM [IEEE802.1Q] model and extend it to a technology independent framework and define the corresponding YANG data model accordingly.
The YANG data model presented in this document is the base model for connection oriented OAM protocols and supports generic continuity check, connectivity verification, and path discovery (traceroute).
The generic YANG data model for connection oriented OAM is designed to be extensible to other connection oriented technologies.
Technology dependent nodes and remote procedure call (RPC) commands are defined in technology  specific YANG data models, which use and extend the base model defined here.
As an example, Virtual eXtensible Local Area Network (VXLAN) uses the source UDP port number for flow entropy, while TRILL uses either (a) MAC addresses, (b) the VLAN tag or Fine Grained Label, and/or (c) IP addresses for flow entropy in the hashing for multipath selection.
To capture this variation, corresponding YANG data models would define the applicable structures as augmentation to the generic base model presented here.
This accomplishes three goals: First, it keeps each YANG data model smaller and more manageable.
Second, it allows independent development of corresponding YANG data models.
Third, implementations can limit support to only the applicable set of YANG data models (e.g., TRILL RBridge may only need to implement the generic model and the TRILL YANG data model).
The YANG data model presented in this document is generated at the management layer.
Encapsulations and state machines may differ according to each OAM protocol.
A user who wishes to issue a Continuity Check command or a Loopback or initiate a performance monitoring session can do so in the same manner, regardless of the underlying protocol or technology or specific vendor implementation.
As an example, consider a scenario where connectivity from device A loopback to device B fails.
Between device A and B
there are IEEE 802.1 bridges a, b, and c.
Let's assume a, b, and c are using CFM [IEEE802.1Q].
A user, upon detecting the loopback failure, may decide to drill down to the lower level at different segments of the path and issue the corresponding fault verification (Loopback Message) and fault isolation (Looktrace Message) tools, using the same API.
This ability to drill down to a lower layer of the protocol stack at a specific segment within a path for fault localization and troubleshooting is referred to as "nested OAM workflow".
It is a useful concept that leads to efficient network troubleshooting and maintenance workflows.
The connection oriented OAM YANG data model presented in this document facilitates that without needing changes to the underlying protocols.
The YANG data model in this document conforms to the Network Management Datastore Architecture defined in [RFC8342].
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
Many of the terms used in this document (including those set out in Sections Section 2.1 and Section 2.2) are specific to the world of OAM.
This document does not attempt to explain the terms but does assume that the reader is familiar with the concepts.
For a good overview, read [IEEE802.1Q].
For an example of how these OAM terms appear in IETF work, see [RFC6371].
ECMP  Equal Cost Multipath LBM
LTM   Linktrace Message [IEEE802.1Q] MP    Maintenance Point [IEEE802.1Q]
MEP   Maintenance End Point [RFC7174] (also known as Maintenance association End Point [IEEE802.1Q] and MEG End Point [RFC6371])
MIP   Maintenance Intermediate Point [RFC7174] (also known as Maintenance domain Intermediate Point [IEEE802.1Q] and MEG Intermediate Point [RFC6371])
[RFC7174] MD    Maintenance Domain [IEEE802.1Q]
MEG   Maintenance Entity Group [RFC6371]
Multi destination Tree Verification Message OAM   Operations, Administration, and Maintenance [RFC6291] TRILL Transparent Interconnection of Lots of Links [RFC6325]
CFM   Connectivity Fault Management [RFC7174]
RPC   Remote Procedure Call CC    Continuity Check
[RFC7276] CV    Connectivity Verification [RFC7276] 2.2.
Terminology Continuity Checks  Continuity Checks are used to verify that a destination is reachable and therefore also are referred to as "reachability verification".
Connectivity Verification  Connectivity Verification is used to verify that a destination is connected.
It is also referred to as "path verification" and used to verify not only that the two MPs are connected, but also that they are connected through the expected path, allowing detection of unexpected topology changes.
Proactive OAM  Proactive OAM refers to OAM actions that are carried out continuously to permit proactive reporting of fault.
A proactive OAM method requires persistent configuration.
On demand OAM refers to OAM actions that are initiated via manual intervention for a limited time to carry out diagnostics.
An on demand OAM method requires only transient configuration.
Tree Diagrams Tree diagrams used in this document follow the notation defined in [RFC8340].
Architecture of Generic YANG Data Model for Connection Oriented OAM
In this document, we define a generic YANG data model for connection  oriented OAM protocols.
The YANG data model defined here is generic in a sense that other technologies can extend it for technology  specific needs.
The generic YANG data model for connection oriented OAM acts as the root for other OAM YANG data models.
This allows users to traverse between different OAM protocols with ease through a uniform API set.
This also enables a nested OAM workflow.
Figure 1 depicts the relationship of different OAM YANG data models to the Generic YANG Data Model for connection oriented OAM.
The Generic YANG data model for connection oriented OAM provides a framework where technology specific YANG data models can inherit constructs from the base YANG data models without needing to redefine them within the sub technology.
Overview of the Connection Oriented OAM YANG Data Model
In this document, we adopt the concepts of the CFM [IEEE802.1Q] model and structure such that it can be adapted to different connection  oriented OAM protocols.
At the top of the model is the Maintenance Domain.
Each Maintenance Domain is associated with a Maintenance Name and a Domain Level.
Under each Maintenance Domain, there is one or more Maintenance Associations (MAs).
In TRILL, the MA can correspond to a Fine  Grained Label.
Under each MA, there can be two or more MEPs (Maintenance End Points).
MEPs are addressed by their respective technology specific address identifiers.
The YANG data model presented here provides flexibility to accommodate different addressing schemes.
Commands are presented in the management protocol, which is orthogonal to the Maintenance Domain.
These are RPC commands, in YANG terms.
They provide uniform APIs for Continuity Check, connectivity verification, path discovery (traceroute), and their equivalents, as well as other OAM commands.
The OAM entities in the generic YANG data model defined here will be either explicitly or implicitly configured using any of the OAM tools.
The OAM tools used here are limited to the OAM toolset specified in Section 5.1 of [RFC7276].
In order to facilitate a zero touch experience, this document defines a default mode of OAM.
The default mode of OAM is referred to as the "Base Mode" and specifies default values for each of the model's parameters, such as Maintenance Domain Level, Name of the Maintenance Association, Addresses of MEPs, and so on.
The default values of these depend on the technology.
Base Mode for TRILL is defined in [RFC7455].
Base Mode for other technologies and future extensions developed in IETF will be defined in their corresponding documents.
It is important to note that no specific enhancements are needed in the YANG data model to support Base Mode.
Implementations that comply with this document use, by default,
the data nodes of the applicable technology.
Data nodes of the Base Mode are read only nodes.
The container "domains" is the top level container within the "gen oam" module.
Within the container "domains", a separate list is maintained per MD.
The MD list uses the key "md name string" for indexing.
The "md name string" is a leaf and derived from type string.
Additional name formats as defined in [IEEE802.1Q], or other standards, can be included by association of the "md name format" with an identity ref.
The "md name format" indicates the format of the augmented "md name".
The "md name" is presented as choice/case construct.
Thus, it is easily augmentable by derivative work.
ietf connection oriented oam  rw domains  rw domain  [technology md name string]  rw technology
identityref  rw md name string    md name string  rw md name format?
md level Snippet of Data Hierarchy Related to OAM Domains 4.2.
Maintenance Association (MA) Configuration Within a given Maintenance Domain, there can be one or more Maintenance Associations (MAs).
MAs are represented as a list and indexed by the "ma name string".
Similar to "md name" defined previously, additional name formats can be added by augmenting the name format "identity ref" and adding applicable case statements to "ma name".
rw mas  rw ma  [ma name string]  rw ma name string
ma name string  rw ma name format?
empty Snippet of Data Hierarchy Related to Maintenance Associations
Maintenance End Point (MEP) Configuration Within a given Maintenance Association (MA)
, there can be one or more Maintenance End Points (MEPs).
MEPs are represented as a list within the data hierarchy and indexed by the key "mep name".
The RPC model facilitates issuing commands to a "server" (in this case, to the device that need to execute the OAM command) and obtaining a response.
The RPC model defined here abstracts OAM  specific commands in a technology independent manner.
There are several RPC commands defined for the purpose of OAM.
In this section, we present a snippet of the Continuity Check command for illustration purposes.
Please refer to Section 4.5 for the complete data hierarchy and Section 5 for the YANG module.
x continuity check {continuity check}?
x continuity verification {connectivity verification}?
w md name string   /domains
inet:ip address  ro (monitor stats)?
empty Snippet of Data Hierarchy Related to RPC Call Continuity Check 4.5.
Notifications Notification is sent upon detecting a defect condition and upon clearing a defect with a Maintenance Domain Name, MA Name, defect  type (the currently active defects), generating mepid, and defect  message to indicate more details.
Monitor Statistics Grouping for monitoring statistics is to be used by technology  specific YANG modules that augment the generic YANG data model to provide statistics due to proactive OAM like Continuity Check Messages   for example, CCM transmit, CCM receive, CCM error, etc.
The complete data hierarchy related to the connection oriented OAM YANG data model is presented below.
ietf connection oriented oam  rw domains  rw domain  [technology md name string]  rw technology
identityref  rw md name string    md name string  rw md name format?
[ma name string]  rw ma name string
ma name string  rw ma name format?
if:interface ref  rw (mip address)?
mac address  :(ip address)  rw ip address?
x continuity check {continuity check}?
x continuity verification {connectivity verification}?
w md name string   /domains
inet:ip address  ro (monitor stats)?
ro ma name string   /domains
identityref  ro md name string   /domains
ro ma name string   /domains
/domain/mas/ma/ma name string  ro mep name?
/domains/domain/mas/ma/mep/mep name  ro defect type?
int32 Data Hierarchy of OAM 5.
This module imports typedefs from [RFC6991] and [RFC8343], and it references [RFC6371], [RFC6905], and [RFC7276].
file "ietf connection oriented oam@2019 04 16.yang" module ietf connection oriented oam { yang version 1.1; namespace "urn:ietf:params:xml:ns:
; description "This YANG module defines the generic configuration, statistics and RPC for connection oriented OAM to be used within IETF in a protocol independent manner.
Functional level abstraction is independent with YANG modeling.
It is assumed that each protocol maps corresponding abstracts to its native format.
Each protocol may extend the YANG data model defined here to include protocol specific extensions Copyright (c) 2019
IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info).
This version of this YANG module is part of RFC 8531; see the RFC itself for full legal notices."
This feature indicates that the server supports executing a connectivity verification OAM command and returning a response.
An on demand OAM method requires only transient configuration."
A proactive OAM method requires persistent configuration."
; } identity identifier format { description "Identifier format identity can be augmented to define other format identifiers used in MEP ID, etc."
; } identity loss of continuity { base defect types; description "Indicates that there are no proactive Continuity Check (CC) OAM packets from the source MEP (and in the case of Connectivity Verification, this includes the requirement to have the expected unique, technology dependent source MEP identifier) received within the interval."
When performing Connectivity Verification, the Continuity Check and Connectivity Verification (CC V) messages need to include unique identification of the MEG that is being monitored and the MEP that originated the message."
; } identity cross connect defect { base defect types; description "Indicates that one or more cross connect defect (for example, a service ID does not match the VLAN
) messages have been received and that 3.5 times that OAM message transmission interval has not yet expired.
Time interval should not be less than 0.
0 means no packets are sent."
The level may be restricted in certain protocols (e.g., protocol in layer 0 to layer 7).
It consists of a maintenance domain reference and a maintenance association leafref.
It consists of a maintenance association reference and a maintenance association end point leafref.
"; uses maintenance association reference; leaf maintenance association end point { type leafref { path "/co oam:domains/
This is a placeholder when no defect status is needed."; leaf defect null { type empty; description "There is no defect to be defined; it will be defined in a technology specific model."
; } description "MD name."
{ default "mep id int"; case mep id int { leaf mep
id format { type identityref { base identifier format; } description "MEP ID format."
; } description "MEP ID."
This is a placeholder when no monitoring statistics are needed."; leaf monitor null { type empty; description "There are no monitoring statistics to be defined."
This will be augmented by each protocol that uses this component."; choice connectivity context { default "context null"; case context null { description "This is a placeholder when no context is needed."; leaf context null { type empty; description "There is no context to be defined."
Within the container, there is a list of fault domains.
Each domain has a list of MAs."; list domain { key "technology md name string"; description "Define a list of Domains within the ietf connection oriented oam module."
; uses maintenance domain id; uses md name; leaf md level { type md level; description "Define the MD level."
; } container mas { description "Contains configuration related data.
Within the container, there is a list of MAs.
Each MA has a list of MEPs."
; list ma { key "ma name string"; uses ma identifier; uses ma name; uses connectivity context; uses cos { description "Default class of service for this MA; it may be overridden for particular MEPs, sessions, or operations."
; } leaf cc enable { type boolean; description "Indicate whether the CC is enabled."
; } list mep { key "mep name"; description "Contain a list of MEPs."
; } uses mip grouping; description "List for MIP."
; } description "Maintenance Association list."
The currently active defects on the specific MEP."
; } container generating mepid { uses mep id; description "Indicate who is generating the defect (if known).
description "Indicate which MD the defect belongs to";
; description "Indicate which MA the defect is associated with."
; description "Indicate which MA the defect is associated with."
; } container destination mep { uses mep address; uses mep id { description "Only applicable if the destination is a MEP."
; description "Indicate which MA the defect is associated with."
; } container destination mep { uses mep address; uses mep id { description "Only applicable if the destination is a MEP."
References RFC 7276 for common Toolset name   for MPLS TP OAM, it's Route Tracing, and for TRILL OAM, it's Path Tracing tool.
Starts with TTL of one and increments by one at each hop until the destination is reached or TTL reaches max value.
; } uses cos; uses time to live; leaf command sub type { type identityref { base command sub type; } description "Defines different command types."
; } container destination mep { uses mep address; uses mep id { description "Only applicable if the destination is a MEP."
; } description "List of responses."
The Base Mode ("default mode" described in Section 4) defines the default configuration that MUST be present in the devices that comply with this document.
Base Mode allows users to have a "zero touch" experience.
Several parameters require technology specific definition.
In the Base Mode of operation, the MEP Address is by default the IP address of the interface on which the MEP is located.
MEP ID for Base Mode
In the Base Mode of operation, each device creates a single MEP associated with a virtual OAM port with no physical layer (NULL PHY).
The MEP ID associated with this MEP is zero (0).
The choice of MEP ID of zero is explained below.
MEP ID is a 2 octet field by default.
It is never used on the wire except when using CCM.
It is important to have a method that can derive the MEP ID of Base Mode in an automatic manner with no user intervention.
The IP address cannot be directly used for this purpose, as the MEP ID is a much smaller field.
For the Base Mode of operation, MEP ID is set to zero by default.
The CCM packet uses the MEP ID in the payload.
CCM MUST NOT be used in the Base Mode.
Hence, CCM MUST be disabled on the Maintenance Association of the Base Mode.
If CCM is required, users MUST configure a separate Maintenance Association and assign unique values for the corresponding MEP IDs.
CFM [IEEE802.1Q] defines MEP ID as an unsigned integer in the range 1 to 8191.
In this document, we propose extending the range to 0 to 65535.
Value 0 is reserved for the MEP ID in the Base Mode operation and MUST NOT be used for other purposes.
The ID of the Maintenance Association (MA ID)
[IEEE802.1Q] has a flexible format and includes two parts: Maintenance Domain Name and Short MA name.
In the Base Mode of operation, the value of the Maintenance Domain Name must be the character string "GenericBaseMode" (excluding the quotes).
In the Base Mode operation, the Short MA Name format is set to a 2 octet integer format (value 3 in Short MA Format field [IEEE802.1Q]) and the Short MA name is set to 65532 (0xFFFC).
Connection Oriented OAM YANG Data Model Applicability
The "ietf connection oriented oam" module defined in this document provides a technology independent abstraction of key OAM constructs for connection oriented protocols.
This module can be further extended to include technology specific details, e.g., adding new data nodes with technology specific functions and parameters into proper anchor points of the base model, so as to develop a technology specific connection oriented OAM model.
This section demonstrates the usability of the connection oriented YANG OAM data model to various connection oriented OAM technologies, e.g., TRILL and MPLS TP.
Note that, in this section, we only present several snippets of technology specific model extensions for illustrative purposes.
The complete model extensions should be worked on in respective protocol working groups.
Generic YANG Data Model Extension for TRILL OAM
The TRILL OAM YANG module [TRILL YANG OAM] is augmenting the connection oriented OAM module for both configuration and RPC commands.
In addition,the TRILL OAM YANG module also requires the base TRILL module ([TRILL YANG]) to be supported, as there is a strong relationship between those modules.
The configuration extensions for connection oriented OAM include the MD configuration extension, technology type extension, MA configuration extension, Connectivity Context extension, MEP Configuration extension, and ECMP extension.
In the RPC extension, the continuity check and path discovery RPC are extended with TRILL  specific parameters.
MD Configuration Extension MD level configuration parameters are management information that can be inherited in the TRILL OAM model and set by the connection  oriented base model as default values.
For example, domain name can be set to area ID in the TRILL OAM case.
In addition, at the Maintenance Domain Level (i.e., at root level), the domain data node can be augmented with technology type.
Note that MD level configuration parameters provide context information for the management system to correlate faults, defects, and network failures with location information; this helps quickly identify root causes of network failures.
No TRILL technology type has been defined in the connection oriented base model.
Therefore, a technology type extension is required in the TRILL OAM model.
MA Configuration Extension MA level configuration parameters are management information that can be inherited in the TRILL OAM model and set by the connection  oriented base model as default values.
In addition, at the Maintenance Association (MA) level (i.e., at the second level), the MA data node can be augmented with a connectivity context extension.
Note that MA level configuration parameters provide context information for the management system to correlate faults, defects, and network failures with location information; this helps quickly identify root causes of network failures.
In TRILL OAM, one example of connectivity context is either a 12 bit VLAN ID or a 24 bit Fine Grained Label.
The connection oriented base model defines a placeholder for context
This allows other technologies to easily augment that to include technology specific extensions.
The snippet below depicts an example of augmenting connectivity context to include either a VLAN ID or Fine Grained Label.
The MEP configuration definition in the connection oriented base model already supports configuring the interface of MEP with either a MAC address or IP address.
In addition, the MEP address can be represented using a 2 octet RBridge Nickname in TRILL OAM.
Hence, the TRILL OAM model augments the MEP configuration in the base model to add a nickname case to the MEP address choice node as follows:
augment /co oam:domains/co oam:domain /co
In addition, at the Maintenance association End Point (MEP) level (i.e., at the third level), the MEP data node can be augmented with an ECMP extension.
ECMP Extension Since TRILL supports ECMP path selection, flow entropy in TRILL is defined as a 96 octet field in the Layer Independent OAM Management in the Multi Layer Environment (LIME) model extension for TRILL OAM.
The snippet below illustrates its extension.
flow entropy trill augment /co
:session:  rw flow entropy trill?
RPC Extension In the TRILL OAM YANG data model
, the continuity check and path  discovery RPC commands are extended with TRILL specific requirements.
The snippet below depicts an example of the TRILL OAM RPC extension.
:input:  ro (out of band)?
tril rb nickname  ro diagnostic vlan?
input:  ro flow entropy trill?
flow entropy trill augment /co
tril rb nickname  ro next hop rbridge
:input:  ro (out of band)?
tril rb nickname  ro diagnostic vlan?
input:  ro flow entropy trill?
flow entropy trill augment /co
tril rb nickname  ro next hop rbridge
Generic YANG Data Model Extension for MPLS TP OAM
The MPLS TP OAM YANG module can augment the connection oriented OAM module with some technology specific details.
presents the YANG data model for MPLS TP OAM.
The configuration extensions for connection oriented OAM include the MD configuration extension, Technology type extension, Technology Subtype extension, MA configuration extension, and MEP Configuration extension.
MD Configuration Extension MD level configuration parameters are management information that can be inherited in the MPLS TP OAM model and set by the connection  oriented OAM base model as default values.
For example, domain name can be set to area ID or the provider's Autonomous System Number (ASN)
[RFC6370] in the MPLS TP OAM case.
In addition, at the Maintenance Domain Level (i.e., at root level), the domain data node can be augmented with technology type and technology subtype.
Note that MD level configuration parameters provide context information for the management system to correlate faults, defects, and network failures with location information; this helps quickly identify root causes of network failures 7.2.1.1.
No MPLS TP technology type has been defined in the connection  oriented base model, hence it is required in the MPLS TP OAM model.
In MPLS TP, since different encapsulation types such as IP/UDP encapsulation and PW ACH encapsulation can be employed, the "technology sub type" data node is defined and added into the MPLS TP OAM model to further identify the encapsulation types within the MPLS TP OAM model.
Based on it, we also define a technology subtype for IP/UDP encapsulation and PW ACH encapsulation.
Other encapsulation types can be defined in the same way.
The snippet below depicts an example of several encapsulation types.
identity technology sub type { description "Certain implementations can have different encapsulation types such as IP/UDP, PW ACH, and so on.
Instead of defining separate models for each encapsulation, we define a technology subtype to further identify different encapsulations.
MA Configuration Extension MA level configuration parameters are management information that can be inherited in the MPLS TP OAM model and set by the connection  oriented OAM base model as default values.
Examples of MA Name are MPLS TP LSP MEG ID, MEG Section ID, or MEG PW ID [RFC6370].
Note that MA level configuration parameters provide context information for the management system to correlate faults, defects, and network failures with location information; this helps quickly identify root causes of network failures.
In MPLS TP, MEP ID is either a variable length label value in case of G ACH encapsulation or a 2 octet unsigned integer value in case of IP/UDP encapsulation.
One example of MEP ID is MPLS TP LSP MEP ID [RFC6370].
In the connection oriented base model, MEP ID is defined as a choice/case node that can support an int32 value, and the same definition can be used for MPLS TP with no further modification.
In addition, at the Maintenance association End Point (MEP) level (i.e., at the third level), the MEP data node can be augmented with a session extension and interface extension.
The YANG module specified in this document defines a schema for data that is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040].
The lowest NETCONF layer is the secure transport layer, and the mandatory to implement secure transport is Secure Shell (SSH) [RFC6242].
The lowest RESTCONF layer is HTTPS, and the mandatory to implement secure transport is TLS [RFC8446].
The Network Configuration Access Control Model [RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.
There are a number of data nodes defined in the YANG module that are writable/creatable/deletable (i.e., config true, which is the default).
These data nodes may be considered sensitive in some network environments.
Write operations (e.g., edit config) to these data nodes without proper protection can have a negative effect on network operations.
These are the subtrees and data nodes and their sensitivity/vulnerability:
/co oam:domains/co oam:domain/ /co oam:domains/co oam:
session Unauthorized access to any of these lists can adversely affect OAM management system handling of end to end OAM and coordination of OAM within underlying network layers.
This may lead to inconsistent configuration, reporting, and presentation for the OAM mechanisms used to manage the network.
This document registers a URI in the "IETF XML Registry" [RFC3688].
The following registration has been made: URI:
yang:ietf connection oriented oam Registrant Contact: The IESG.
N/A; the requested URI is an XML namespace.
This document registers a YANG module in the "YANG Module Names" registry [RFC6020].
ietf connection oriented oam namespace:
yang:ietf connection oriented oam prefix:
RFC 8531 Contributors Tissa Senevirathne Consultant Email:
Norman Finn CISCO Systems 510 McCarthy Blvd Milpitas, CA  95035 United States of America Email:
Samer Salam CISCO Systems 595 Burrard St. Suite 2123
, BC  V7X 1J1 Canada Email:
