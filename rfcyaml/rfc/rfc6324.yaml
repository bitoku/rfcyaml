- title: __initial_text__
  contents:
  - "           Routing Loop Attack Using IPv6 Automatic Tunnels:\n              \
    \ Problem Statement and Proposed Mitigations\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is concerned with security vulnerabilities in IPv6-in-\n\
    \   IPv4 automatic tunnels.  These vulnerabilities allow an attacker to\n   take\
    \ advantage of inconsistencies between the IPv4 routing state and\n   the IPv6\
    \ routing state.  The attack forms a routing loop that can be\n   abused as a\
    \ vehicle for traffic amplification to facilitate denial-\n   of-service (DoS)\
    \ attacks.  The first aim of this document is to\n   inform on this attack and\
    \ its root causes.  The second aim is to\n   present some possible mitigation\
    \ measures.  It should be noted that\n   at the time of this writing there are\
    \ no known reports of malicious\n   attacks exploiting these vulnerabilities.\
    \  Nonetheless, these\n   vulnerabilities can be activated by accidental misconfiguration.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6324.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. A Detailed Description of the Attack ............................4\n  \
    \ 3. Proposed Mitigation Measures ....................................6\n    \
    \  3.1. Verification of Endpoint Existence .........................6\n      \
    \     3.1.1. Neighbor Cache Check ................................6\n        \
    \   3.1.2. Known IPv4 Address Check ............................7\n      3.2.\
    \ Operational Measures .......................................7\n           3.2.1.\
    \ Avoiding a Shared IPv4 Link .........................7\n           3.2.2. A\
    \ Single Border Router ..............................8\n           3.2.3. A Comprehensive\
    \ List of Tunnel Routers ..............9\n           3.2.4. Avoidance of On-Link\
    \ Prefixes .......................9\n      3.3. Destination and Source Address\
    \ Checks .....................15\n           3.3.1. Known IPv6 Prefix Check ............................16\n\
    \   4. Recommendations ................................................17\n  \
    \ 5. Security Considerations ........................................17\n   6.\
    \ Acknowledgments ................................................18\n   7. References\
    \ .....................................................18\n      7.1. Normative\
    \ References ......................................18\n      7.2. Informative\
    \ References ....................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IPv6-in-IPv4 tunnels are an essential part of many migration\
    \ plans\n   for IPv6.  They allow two IPv6 nodes to communicate over an IPv4-only\n\
    \   network.  Automatic tunnels that assign IPv6 prefixes with stateless\n   address\
    \ mapping properties (hereafter called \"automatic tunnels\") are\n   a category\
    \ of tunnels in which a tunneled packet's egress IPv4\n   address is embedded\
    \ within the destination IPv6 address of the\n   packet.  An automatic tunnel's\
    \ router is a router that respectively\n   encapsulates and decapsulates the IPv6\
    \ packets into and out of the\n   tunnel.\n   Reference [USENIX09] pointed out\
    \ the existence of a vulnerability in\n   the design of IPv6 automatic tunnels.\
    \  Tunnel routers operate on the\n   implicit assumption that the destination\
    \ address of an incoming IPv6\n   packet is always an address of a valid node\
    \ that can be reached via\n   the tunnel.  The assumption of path validity can\
    \ introduce routing\n   loops as the inconsistency between the IPv4 routing state\
    \ and the\n   IPv6 routing state allows a routing loop to be formed.  Although\n\
    \   those loops will not trap normal data, they will catch traffic\n   targeted\
    \ at addresses that have become unavailable, and misconfigured\n   traffic can\
    \ enter the loop.\n   The looping vulnerability can be triggered accidentally,\
    \ or exploited\n   maliciously by an attacker crafting a packet that is routed\
    \ over a\n   tunnel to a node that is not associated with the packet's\n   destination.\
    \  This node may forward the packet out of the tunnel to\n   the native IPv6 network.\
    \  There, the packet is routed back to the\n   ingress point, which forwards it\
    \ back into the tunnel.  Consequently,\n   the packet loops in and out of the\
    \ tunnel.  The loop terminates only\n   when the Hop Limit field in the IPv6 header\
    \ of the packet is\n   decremented to zero.  This vulnerability can be abused\
    \ as a vehicle\n   for traffic amplification to facilitate DoS attacks [RFC4732].\n\
    \   Without compensating security measures in place, all IPv6 automatic\n   tunnels\
    \ that are based on protocol-41 encapsulation [RFC4213] are\n   vulnerable to\
    \ such an attack, including the Intra-Site Automatic\n   Tunnel Addressing Protocol\
    \ (ISATAP) [RFC5214], 6to4 [RFC3056], and\n   6rd (IPv6 Rapid Deployment on IPv4\
    \ Infrastructures) [RFC5969].  It\n   should be noted that this document does\
    \ not consider non-protocol-41\n   encapsulation attacks.  In particular, we do\
    \ not address the Teredo\n   [RFC4380] attacks described in [USENIX09].  These\
    \ attacks are\n   considered in [TEREDO-LOOPS].\n   The aim of this document is\
    \ to shed light on the routing loop attack\n   and describe possible mitigation\
    \ measures that should be considered\n   by operators of current IPv6 automatic\
    \ tunnels and by designers of\n   future ones.  We note that tunnels may be deployed\
    \ in various\n   operational environments, e.g., service provider networks, enterprise\n\
    \   networks, etc.  Specific issues related to the attack that are\n   derived\
    \ from the operational environment are not considered in this\n   document.\n\
    \   Routing loops pose a risk to the stability of a network.\n   Furthermore,\
    \ they provide an opening for denial-of-service attacks\n   that exploit the existence\
    \ of the loop to increase the traffic load\n   in the network.  Section 3 of this\
    \ document discusses a number of\n   mitigation measures.  The most desirable\
    \ mitigation, however, is to\n   operate the network in such a way that routing\
    \ loops cannot take\n   place (see Section 3.2).\n"
- title: 2.  A Detailed Description of the Attack
  contents:
  - "2.  A Detailed Description of the Attack\n   In this section, we shall denote\
    \ an IPv6 address of a node by an IPv6\n   prefix assigned to the tunnel and an\
    \ IPv4 address of the tunnel\n   endpoint, i.e., Addr(Prefix, IPv4).  Note that\
    \ the IPv4 address may\n   or may not be part of the prefix (depending on the\
    \ specification of\n   the tunnel's protocol).  The IPv6 address may be dependent\
    \ on\n   additional bits in the interface ID; however, for our discussion\n  \
    \ their exact value is not important.\n   The two victims of this attack are routers\
    \ -- R1 and R2 -- that\n   service two different tunnel prefixes -- Prf1 and Prf2.\
    \  Both routers\n   have the capability to forward IPv6 packets in and out of\
    \ their\n   respective tunnels.  The two tunnels need not be based on the same\n\
    \   tunnel protocol.  The only condition is that the two tunnel protocols\n  \
    \ be based on protocol-41 encapsulation.  The IPv4 address of R1 is\n   IP1, while\
    \ the prefix of its tunnel is Prf1.  IP2 and Prf2 are the\n   respective values\
    \ for R2.  We assume that IP1 and IP2 belong to the\n   same address realm, i.e.,\
    \ they are either both public, or both\n   private and belong to the same internal\
    \ network.  The following\n   network diagram depicts the locations of the two\
    \ routers.  The\n   numbers indicate the packets of the attack and the path they\n\
    \   traverse, as described below.\n         [ Packet 1 ]\n   v6src = Addr(Prf1,\
    \ IP2)                     [ Packet 2 ]\n   v6dst = Addr(Prf2, IP1)          \
    \      v6src = Addr(Prf1, IP2)\n   v4src = IP2; v4dst = IP1 +----------+  v6dst\
    \ = Addr(Prf2, IP1)\n              //===========>|  Router  |-----------------\\\
    \n             ||             |    R1    |                 |\n             ||\
    \             +----------+                 v\n            .-.                \
    \                         .-.\n         ,-(  _)-.                            \
    \       ,-(  _)-.\n      .-(_ IPv4  )-.                              .-(_ IPv6\
    \  )-.\n    (__   Network   )                           (__   Network   )\n  \
    \     `-(______)-'                                `-(______)-'\n             ^^\
    \                                          |\n             ||             +----------+\
    \                 |\n              \\\\============|  Router  |<----------------/\n\
    \         [ Packet 1 ]       |    R2    |    [ Packets 0 and 2 ]\n   v6src = Addr(Prf1,\
    \ IP2)  +----------+  v6src = Addr(Prf1, IP2)\n   v6dst = Addr(Prf2, IP1)    \
    \            v6dst = Addr(Prf2, IP1)\n   v4src = IP2; v4dst = IP1\n          \
    \    Legend: ====> - tunneled IPv6, ---> - native IPv6\n                Figure\
    \ 1: The Network Setting of the Attack\n   The attack is initiated by an accidentally\
    \ or maliciously produced\n   IPv6 packet (packet 0 in Figure 1) destined to a\
    \ fictitious endpoint\n   that appears to be reached via Prf2 and has IP1 as its\
    \ IPv4 address,\n   i.e., Addr(Prf2, IP1).  The source address of the packet is\
    \ an\n   address with Prf1 as the prefix and IP2 as the embedded IPv4 address,\n\
    \   i.e., Addr(Prf1, IP2).  As the prefix of the destination address is\n   Prf2,\
    \ the packet will be routed over the IPv6 network to R2.\n   R2 receives the packet\
    \ through its IPv6 interface and forwards it\n   into the tunnel with an IPv4\
    \ header having a destination address\n   derived from the IPv6 destination, i.e.,\
    \ IP1.  The source address is\n   the address of R2, i.e., IP2.  The packet (packet\
    \ 1 in Figure 1) is\n   routed over the IPv4 network to R1, which receives the\
    \ packet on its\n   IPv4 interface.  It processes the packet as a packet that\
    \ originates\n   from one of the end nodes of Prf1.\n   Since the IPv4 source\
    \ address corresponds to the IPv6 source address,\n   R1 will decapsulate the\
    \ packet.  Since the packet's IPv6 destination\n   is outside of Prf1, R1 will\
    \ forward the packet onto a native IPv6\n   interface.  The forwarded packet (packet\
    \ 2 in Figure 1) is identical\n   to the original attack packet.  Hence, it is\
    \ routed back to R2, in\n   which the loop starts again.  Note that the packet\
    \ may not\n   necessarily be transported from R1 over the native IPv6 network.\
    \  R1\n   may be connected to the IPv6 network through another tunnel.\n   The\
    \ crux of the attack is as follows.  The attacker exploits the fact\n   that R2\
    \ does not know that R1 does not configure addresses from Prf2\n   and that R1\
    \ does not know that R2 does not configure addresses from\n   Prf1.  The IPv4\
    \ network acts as a shared link layer for the two\n   tunnels.  Hence, the packet\
    \ is repeatedly forwarded by both routers.\n   It is noted that the attack will\
    \ fail when the IPv4 network cannot\n   transport packets between the tunnels,\
    \ for example, when the two\n   routers belong to different IPv4 address realms\
    \ or when ingress/\n   egress filtering is exercised between the routers.\n  \
    \ The loop will stop when the Hop Limit field of the packet reaches\n   zero.\
    \  After a single loop, the Hop Limit field is decreased by the\n   number of\
    \ IPv6 routers on the path from R1 to R2.  Therefore, the\n   number of loops\
    \ is inversely proportional to the number of IPv6 hops\n   between R1 and R2.\n\
    \   The tunnels used by R1 and R2 may be any combination of automatic\n   tunnel\
    \ types, e.g., ISATAP, 6to4, and 6rd.  This has the exception\n   that both tunnels\
    \ cannot be of type 6to4, since two 6to4 routers\n   share the same IPv6 prefix,\
    \ i.e., there is only one 6to4 prefix\n   (2002::/16) in the Internet.  For example,\
    \ if the attack were to be\n   launched on an ISATAP router (R1) and 6to4 relay\
    \ (R2), then the\n   destination and source addresses of the attack packet would\
    \ be\n   2002:IP1:* and Prf1::0200:5efe:IP2, respectively.\n"
- title: 3.  Proposed Mitigation Measures
  contents:
  - "3.  Proposed Mitigation Measures\n   This section presents some possible mitigation\
    \ measures for the\n   attack described above.  We shall discuss the advantages\
    \ and\n   disadvantages of each measure.\n   The proposed measures fall under\
    \ the following three categories:\n   o  Verification of endpoint existence\n\
    \   o  Operational measures\n   o  Destination and source address checks\n"
- title: 3.1.  Verification of Endpoint Existence
  contents:
  - "3.1.  Verification of Endpoint Existence\n   The routing loop attack relies on\
    \ the fact that a router does not\n   know whether there is an endpoint that can\
    \ be reached via its tunnel\n   that has the source or destination address of\
    \ the packet.  This\n   category includes mitigation measures that aim to verify\
    \ that there\n   is a node that participates in the tunnel and that its address\n\
    \   corresponds to the packet's destination or source addresses, as\n   appropriate.\n"
- title: 3.1.1.  Neighbor Cache Check
  contents:
  - "3.1.1.  Neighbor Cache Check\n   One way that the router can verify that an end\
    \ host exists and can be\n   reached via the tunnel is by checking whether a valid\
    \ entry exists\n   for it in the neighbor cache of the corresponding tunnel interface.\n\
    \   The neighbor cache entry can be populated through, e.g., an initial\n   reachability\
    \ check, receipt of neighbor discovery messages,\n   administrative configuration,\
    \ etc.\n   When the router has a packet to send to a potential tunnel host for\n\
    \   which there is no neighbor cache entry, it can perform an initial\n   reachability\
    \ check on the packet's destination address, e.g., as\n   specified in the second\
    \ paragraph of Section 8.4 of [RFC5214].  (The\n   router can similarly perform\
    \ a \"reverse reachability\" check on the\n   packet's source address when it\
    \ receives a packet from a potential\n   tunnel host for which there is no neighbor\
    \ cache entry.)  This\n   reachability check parallels the address resolution\
    \ specifications in\n   Section 7.2 of [RFC4861], i.e., the router maintains a\
    \ small queue of\n   packets waiting for reachability confirmation to complete.\
    \  If\n   confirmation succeeds, the router discovers that a legitimate tunnel\n\
    \   host responds to the address.  Otherwise, the router discards\n   subsequent\
    \ packets and returns ICMP destination unreachable\n   indications as specified\
    \ in Section 7.2.2 of [RFC4861].\n   Note that this approach assumes that the\
    \ neighbor cache will remain\n   coherent and not be subject to malicious attack,\
    \ which must be\n   confirmed based on specific deployment scenarios.  One possible\
    \ way\n   for an attacker to subvert the neighbor cache is to send false\n   neighbor\
    \ discovery messages with a spoofed source address.\n"
- title: 3.1.2.  Known IPv4 Address Check
  contents:
  - "3.1.2.  Known IPv4 Address Check\n   Another approach that enables a router to\
    \ verify that an end host\n   exists and can be reached via the tunnel is simply\
    \ by pre-configuring\n   the router with the set of IPv4 addresses and prefixes\
    \ that are\n   authorized to use the tunnel.  Upon this configuration, the router\n\
    \   can perform the following simple checks:\n   o  When the router forwards an\
    \ IPv6 packet into the tunnel interface\n      with a destination address that\
    \ matches an on-link prefix and that\n      embeds the IPv4 address IP1, it discards\
    \ the packet if IP1 does\n      not belong to the configured list of IPv4 addresses.\n\
    \   o  When the router receives an IPv6 packet on the tunnel's interface\n   \
    \   with a source address that matches an on-link prefix and that\n      embeds\
    \ the IPv4 address IP2, it discards the packet if IP2 does\n      not belong to\
    \ the configured list of IPv4 addresses.\n"
- title: 3.2.  Operational Measures
  contents:
  - "3.2.  Operational Measures\n   The following measures can be taken by the network\
    \ operator.  Their\n   aim is to configure the network in such a way that the\
    \ attacks cannot\n   take place.\n"
- title: 3.2.1.  Avoiding a Shared IPv4 Link
  contents:
  - "3.2.1.  Avoiding a Shared IPv4 Link\n   As noted above, the attack relies on\
    \ having an IPv4 network as a\n   shared link layer between more than one tunnel.\
    \  From this, the\n   following two mitigation measures arise:\n"
- title: 3.2.1.1.  Filtering IPv4 Protocol-41 Packets
  contents:
  - "3.2.1.1.  Filtering IPv4 Protocol-41 Packets\n   In this measure, a tunnel router\
    \ may drop all IPv4 protocol-41\n   packets received or sent over interfaces that\
    \ are attached to an\n   untrusted IPv4 network.  This will cut off any IPv4 network\
    \ as a\n   shared link.  This measure has the advantage of simplicity.  However,\n\
    \   such a measure may not always be suitable for scenarios where IPv4\n   connectivity\
    \ is essential on all interfaces.  Most notably, filtering\n   of IPv4 protocol-41\
    \ packets that belong to a 6to4 tunnel can have\n   adverse effects on unsuspecting\
    \ users [RFC6343].\n"
- title: 3.2.1.2.  Operational Avoidance of Multiple Tunnels
  contents:
  - "3.2.1.2.  Operational Avoidance of Multiple Tunnels\n   This measure mitigates\
    \ the attack by simply allowing for a single\n   IPv6 tunnel to operate in a bounded\
    \ IPv4 network.  For example, the\n   attack cannot take place in broadband home\
    \ networks.  In such cases,\n   there is a small home network having a single\
    \ residential gateway\n   that serves as a tunnel router.  A tunnel router is\
    \ vulnerable to the\n   attack only if it has at least two interfaces with a path\
    \ to the\n   Internet: a tunnel interface and a native IPv6 interface (as depicted\n\
    \   in Figure 1).  However, a residential gateway usually has only a\n   single\
    \ interface to the Internet; therefore, the attack cannot take\n   place.  Moreover,\
    \ if there are only one or a few tunnel routers in\n   the IPv4 network and all\
    \ participate in the same tunnel, then there\n   is no opportunity for perpetuating\
    \ the loop.\n   This approach has the advantage that it avoids the attack profile\n\
    \   altogether without need for explicit mitigations.  However, it\n   requires\
    \ careful configuration management, which may not be tenable\n   in large and/or\
    \ unbounded IPv4 networks.\n"
- title: 3.2.2.  A Single Border Router
  contents:
  - "3.2.2.  A Single Border Router\n   It is reasonable to assume that a tunnel router\
    \ shall accept or\n   forward tunneled packets only over its tunnel interface.\
    \  It is also\n   reasonable to assume that a tunnel router shall accept or forward\n\
    \   IPv6 packets only over its IPv6 interface.  If these two interfaces\n   are\
    \ physically different, then the network operator can mitigate the\n   attack\
    \ by ensuring that the following condition holds: there is no\n   path between\
    \ these two interfaces that does not go through the tunnel\n   router.\n   The\
    \ above condition ensures that an encapsulated packet that is\n   transmitted\
    \ over the tunnel interface will not get to another tunnel\n   router and from\
    \ there to the IPv6 interface of the first router.  The\n   condition also ensures\
    \ the reverse direction, i.e., an IPv6 packet\n   that is transmitted over the\
    \ IPv6 interface will not get to another\n   tunnel router and from there to the\
    \ tunnel interface of the first\n   router.  This condition is essentially translated\
    \ to a scenario in\n   which the tunnel router is the only border router between\
    \ the IPv6\n   network and the IPv4 network to which it is attached (as in the\n\
    \   broadband home network scenario mentioned above).\n"
- title: 3.2.3.  A Comprehensive List of Tunnel Routers
  contents:
  - "3.2.3.  A Comprehensive List of Tunnel Routers\n   If a tunnel router can be\
    \ configured with a comprehensive list of\n   IPv4 addresses of all other tunnel\
    \ routers in the network, then the\n   router can use the list as a filter to\
    \ discard any tunneled packets\n   coming from or destined to other routers. \
    \ For example, a tunnel\n   router can use the network's ISATAP Potential Router\
    \ List (PRL)\n   [RFC5214] as a filter as long as there is operational assurance\
    \ that\n   all ISATAP routers are listed and that no other types of tunnel\n \
    \  routers are present in the network.\n   This measure parallels the one proposed\
    \ for 6rd in [RFC5969] where\n   the 6rd Border Relay filters all known relay\
    \ addresses of other\n   tunnels inside the ISP's network.\n   This measure is\
    \ especially useful for intra-site tunneling\n   mechanisms, such as ISATAP and\
    \ 6rd, since filtering can be exercised\n   on well-defined site borders.  A specific\
    \ ISATAP operational scenario\n   for which this mitigation applies is described\
    \ in Section 3 of\n   [ISATAP-OPS].\n"
- title: 3.2.4.  Avoidance of On-Link Prefixes
  contents:
  - "3.2.4.  Avoidance of On-Link Prefixes\n   The looping attack exploits the fact\
    \ that a router is permitted to\n   assign non-link-local IPv6 prefixes on its\
    \ tunnel interfaces, which\n   could cause it to send tunneled packets to other\
    \ routers that do not\n   configure an address from the prefix.  Therefore, if\
    \ the router does\n   not assign non-link-local IPv6 prefixes on its tunnel interfaces,\n\
    \   there is no opportunity for it to initiate the loop.  If the router\n   further\
    \ ensures that the routing state is consistent for the packets\n   it receives\
    \ on its tunnel interfaces, there is no opportunity for it\n   to propagate a\
    \ loop initiated by a different router.\n   This mitigation measure is available\
    \ only to ISATAP routers, since\n   the ISATAP stateless address mapping operates\
    \ only on the Interface\n   Identifier portion of the IPv6 address, and not on\
    \ the IPv6 prefix.\n   This measure is also only applicable on ISATAP links on\
    \ which IPv4\n   source address spoofing is disabled.  Finally, the measure is\
    \ only\n   applicable on ISATAP links on which nodes support the Dynamic Host\n\
    \   Configuration Protocol for IPv6 (DHCPv6) [RFC3315].  The following\n   sections\
    \ discuss the operational configurations necessary to\n   implement the measure.\n"
- title: 3.2.4.1.  ISATAP Router Interface Types
  contents:
  - "3.2.4.1.  ISATAP Router Interface Types\n   ISATAP provides a Potential Router\
    \ List (PRL) to further ensure a\n   loop-free topology.  Routers that are members\
    \ of the PRL for the site\n   configure their site-facing ISATAP interfaces as\
    \ advertising router\n   interfaces (see [RFC4861], Section 6.2.2), and therefore\
    \ may send\n   Router Advertisement (RA) messages that include non-zero Router\n\
    \   Lifetimes.  Routers that are not members of the PRL for the site\n   configure\
    \ their site-facing ISATAP interfaces as non-advertising\n   router interfaces.\n"
- title: 3.2.4.2.  ISATAP Source Address Verification
  contents:
  - "3.2.4.2.  ISATAP Source Address Verification\n   ISATAP nodes employ the source\
    \ address verification checks specified\n   in Section 7.3 of [RFC5214] as a prerequisite\
    \ for decapsulation of\n   packets received on an ISATAP interface.  To enable\
    \ the on-link\n   prefix avoidance procedures outlined in this section, ISATAP\
    \ nodes\n   must employ an additional source address verification check; namely,\n\
    \   the node also considers the outer IPv4 source address correct for the\n  \
    \ inner IPv6 source address if:\n   o  a forwarding table entry exists that lists\
    \ the packet's IPv4\n      source address as the link-layer address corresponding\
    \ to the\n      inner IPv6 source address via the ISATAP interface.\n"
- title: 3.2.4.3.  ISATAP Host Behavior
  contents:
  - "3.2.4.3.  ISATAP Host Behavior\n   ISATAP hosts send Router Solicitation (RS)\
    \ messages to obtain RA\n   messages from an advertising ISATAP router as specified\
    \ in [RFC4861]\n   and [RFC5214].  When stateful address autoconfiguration services\
    \ are\n   available, the host can acquire IPv6 addresses using DHCPv6\n   [RFC3315].\n\
    \   To acquire addresses, the host performs standard DHCPv6 exchanges\n   while\
    \ mapping the IPv6 \"All_DHCP_Relay_Agents_and_Servers\" link-\n   scoped multicast\
    \ address to the IPv4 address of the advertising\n   router.  The host should\
    \ also use DHCPv6 Authentication in\n   environments where authentication of the\
    \ DHCPv6 exchanges is\n   required.\n   After the host receives IPv6 addresses,\
    \ it assigns them to its ISATAP\n   interface and forwards any of its outbound\
    \ IPv6 packets via the\n   advertising router as a default router.  The advertising\
    \ router in\n   turn maintains IPv6 forwarding table entries that list the IPv4\n\
    \   address of the host as the link-layer address of the delegated IPv6\n   addresses.\n"
- title: 3.2.4.4.  ISATAP Router Behavior
  contents:
  - "3.2.4.4.  ISATAP Router Behavior\n   In many use case scenarios (e.g., enterprise\
    \ networks, Mobile Ad Hoc\n   Networks (MANETs), etc.), advertising and non-advertising\
    \ ISATAP\n   routers can engage in a proactive dynamic IPv6 routing protocol\n\
    \   (e.g., OSPFv3, the Routing Information Protocol Next Generation\n   (RIPng),\
    \ etc.) over their ISATAP interfaces so that IPv6 routing/\n   forwarding tables\
    \ can be populated and standard IPv6 forwarding\n   between ISATAP routers can\
    \ be used.  In other scenarios (e.g., large\n   enterprise networks, etc.), this\
    \ might be impractical due to scaling\n   issues.  When a proactive dynamic routing\
    \ protocol cannot be used,\n   non-advertising ISATAP routers send RS messages\
    \ to obtain RA messages\n   from an advertising ISATAP router; i.e., they act\
    \ as \"hosts\" on their\n   non-advertising ISATAP interfaces.\n   Non-advertising\
    \ ISATAP routers can also acquire IPv6 prefixes, e.g.,\n   through the use of\
    \ DHCPv6 Prefix Delegation [RFC3633] via an\n   advertising router in the same\
    \ fashion as described above for host-\n   based DHCPv6 stateful address autoconfiguration.\
    \  The advertising\n   router in turn maintains IPv6 forwarding table entries\
    \ that list the\n   IPv4 address of the non-advertising router as the link-layer\
    \ address\n   of the next hop toward the delegated IPv6 prefixes.\n   After the\
    \ non-advertising router acquires IPv6 prefixes, it can\n   sub-delegate them\
    \ to routers and links within its attached IPv6 edge\n   networks, then can forward\
    \ any outbound IPv6 packets coming from its\n   edge networks via other ISATAP\
    \ nodes on the link.\n"
- title: 3.2.4.5.  Reference Operational Scenario
  contents:
  - "3.2.4.5.  Reference Operational Scenario\n   Figure 2 depicts a reference ISATAP\
    \ network topology for operational\n   avoidance of on-link non-link-local IPv6\
    \ prefixes.  The scenario\n   shows two advertising ISATAP routers ('A', 'B'),\
    \ two non-advertising\n   ISATAP routers ('C', 'E'), an ISATAP host ('G'), and\
    \ three ordinary\n   IPv6 hosts ('D', 'F', 'H') in a typical deployment configuration:\n\
    \                       .-(::::::::)      2001:db8:3::1\n                    .-(:::\
    \ IPv6 :::)-.  +-------------+\n                   (:::: Internet ::::) | IPv6\
    \ Host H |\n                    `-(::::::::::::)-'  +-------------+\n        \
    \               `-(::::::)-'\n                   ,~~~~~~~~~~~~~~~~~,\n       \
    \       ,----|companion gateway|--.\n             /     '~~~~~~~~~~~~~~~~~'  :\n\
    \            /                           |.\n         ,-'                    \
    \          `.\n        ;  +------------+   +------------+  )\n        :  |  Router\
    \ A  |   |  Router B  |  /    fe80::*192.0.2.5\n         : |  (ISATAP)  |   |\
    \  (ISATAP)  | ;       2001:db8:2::1\n         + +------------+   +------------+\
    \  \\    +--------------+\n        ; fe80::*192.0.2.1  fe80::*192.0.2.2 :   |\
    \   (ISATAP)   |\n        |                                   ;    |    Host G\
    \    |\n        :              IPv4 Site         -+-'    +--------------+\n  \
    \       `-. (PRL: 192.0.2.1, 192.0.2.2)  .)\n            \\                  \
    \         _)\n             `-----+--------)----+'----'\n        fe80::*192.0.2.3\
    \         fe80::*192.0.2.4          .-.\n        +--------------+         +--------------+\
    \       ,-(  _)-.\n        |   (ISATAP)   |         |   (ISATAP)   |    .-(_ IPv6\
    \  )-.\n        |   Router C   |         |   Router E   |--(__Edge Network )\n\
    \        +--------------+         +--------------+     `-(______)-'\n        \
    \ 2001:db8:0::/48          2001:db8:1::/48           |\n                |    \
    \                                 2001:db8:1::1\n               .-.          \
    \                         +-------------+\n            ,-(  _)-.       2001:db8:0::1\
    \            | IPv6 Host F |\n         .-(_ IPv6  )-.   +-------------+      \
    \      +-------------+\n       (__Edge Network )--| IPv6 Host D |\n          `-(______)-'\
    \    +-------------+\n      (* == \"5efe:\")\n                Figure 2: Reference\
    \ ISATAP Network Topology\n   In Figure 2, advertising ISATAP routers 'A' and\
    \ 'B' within the IPv4\n   site connect to the IPv6 Internet, either directly or\
    \ via a companion\n   gateway.  'A' configures a provider network IPv4 interface\
    \ with\n   address 192.0.2.1 and arranges to add the address to the provider\n\
    \   network PRL.  'A' next configures an advertising ISATAP router\n   interface\
    \ with link-local IPv6 address fe80::5efe:192.0.2.1 over the\n   IPv4 interface.\
    \  In the same fashion, 'B' configures the IPv4\n   interface address 192.0.2.2,\
    \ adds the address to the PRL, then\n   configures the IPv6 ISATAP interface link-local\
    \ address\n   fe80::5efe:192.0.2.2.\n   Non-advertising ISATAP router 'C' connects\
    \ to one or more IPv6 edge\n   networks and also connects to the site via an IPv4\
    \ interface with\n   address 192.0.2.3, but it does not add the IPv4 address to\
    \ the site's\n   PRL.  'C' next configures a non-advertising ISATAP router interface\n\
    \   with link-local address fe80::5efe:192.0.2.3, then receives the IPv6\n   prefix\
    \ 2001:db8:0::/48 through a DHCPv6 prefix delegation exchange\n   via one of 'A'\
    \ or 'B'.  'C' then engages in an IPv6 routing protocol\n   over its ISATAP interface\
    \ and announces the delegated IPv6 prefix.\n   'C' finally sub-delegates the prefix\
    \ to its attached edge networks,\n   where IPv6 host 'D' autoconfigures the address\
    \ 2001:db8:0::1.\n   Non-advertising ISATAP router 'E' connects to the site, configures\n\
    \   its ISATAP interface, receives a DHCPv6 prefix delegation, and\n   engages\
    \ in the IPv6 routing protocol the same as for router 'C'.  In\n   particular,\
    \ 'E' configures the IPv4 address 192.0.2.4, the ISATAP\n   link-local address\
    \ fe80::5efe:192.0.2.4, and the delegated IPv6\n   prefix 2001:db8:1::/48.  'E'\
    \ finally sub-delegates the prefix to its\n   attached edge networks, where IPv6\
    \ host 'F' autoconfigures IPv6\n   address 2001:db8:1::1.\n   ISATAP host 'G'\
    \ connects to the site via an IPv4 interface with\n   address 192.0.2.5, and also\
    \ configures an ISATAP host interface with\n   link-local address fe80::5efe:192.0.2.5\
    \ over the IPv4 interface.  'G'\n   next configures a default IPv6 route with\
    \ next-hop address\n   fe80::5efe:192.0.2.2 via the ISATAP interface, then receives\
    \ the IPv6\n   address 2001:db8:2::1 from a DHCPv6 address configuration exchange\n\
    \   via 'B'.  When 'G' receives the IPv6 address, it assigns the address\n   to\
    \ the ISATAP interface but does not assign a non-link-local IPv6\n   prefix to\
    \ the interface.\n   Finally, IPv6 host 'H' connects to an IPv6 network outside\
    \ of the\n   ISATAP domain.  'H' configures its IPv6 interface in a manner\n \
    \  specific to its attached IPv6 link, and autoconfigures the IPv6\n   address\
    \ 2001:db8:3::1.\n   Following this autoconfiguration, when host 'D' has an IPv6\
    \ packet to\n   send to host 'F', it prepares the packet with source address\n\
    \   2001:db8:0::1 and destination address 2001:db8:1::1, then sends the\n   packet\
    \ into the edge network where it will eventually be forwarded to\n   router 'C'.\
    \  'C' then uses ISATAP encapsulation to forward the packet\n   to router 'E',\
    \ since it has discovered a route to 2001:db8:1::/48\n   with next hop 'E' via\
    \ dynamic routing over the ISATAP interface.\n   Router 'E' finally forwards the\
    \ packet to host 'F'.\n   In a second scenario, when 'D' has a packet to send\
    \ to ISATAP host\n   'G', it prepares the packet with source address 2001:db8:0::1\
    \ and\n   destination address 2001:db8:2::1, then sends the packet into the\n\
    \   edge network where it will eventually be forwarded to router 'C' the\n   same\
    \ as above.  'C' then uses ISATAP encapsulation to forward the\n   packet to router\
    \ 'A' (i.e., a router that advertises \"default\"),\n   which in turn forwards\
    \ the packet to 'G'.  Note that this operation\n   entails two hops across the\
    \ ISATAP link (i.e., one from 'C' to 'A',\n   and a second from 'A' to 'G'). \
    \ If 'G' also participates in the\n   dynamic IPv6 routing protocol, however,\
    \ 'C' could instead forward the\n   packet directly to 'G' without involving 'A'.\n\
    \   In a third scenario, when 'D' has a packet to send to host 'H' in the\n  \
    \ IPv6 Internet, the packet is forwarded to 'C' the same as above.  'C'\n   then\
    \ forwards the packet to 'A', which forwards the packet into the\n   IPv6 Internet.\n\
    \   In a final scenario, when 'G' has a packet to send to host 'H' in the\n  \
    \ IPv6 Internet, the packet is forwarded directly to 'B', which\n   forwards the\
    \ packet into the IPv6 Internet.\n"
- title: 3.2.4.6.  Scaling Considerations
  contents:
  - "3.2.4.6.  Scaling Considerations\n   Figure 2 depicts an ISATAP network topology\
    \ with only two advertising\n   ISATAP routers within the provider network.  In\
    \ order to support\n   larger numbers of non-advertising ISATAP routers and ISATAP\
    \ hosts,\n   the provider network can deploy more advertising ISATAP routers to\n\
    \   support load balancing and generally shortest-path routing.\n   Such an arrangement\
    \ requires that the advertising ISATAP routers\n   participate in an IPv6 routing\
    \ protocol instance so that IPv6\n   address/prefix delegations can be mapped\
    \ to the correct router.  The\n   routing protocol instance can be configured\
    \ as either a full mesh\n   topology involving all advertising ISATAP routers,\
    \ or as a partial\n   mesh topology with each advertising ISATAP router associating\
    \ with\n   one or more companion gateways.  Each such companion gateway would\
    \ in\n   turn participate in a full mesh between all companion gateways.\n"
- title: 3.2.4.7.  On-Demand Dynamic Routing
  contents:
  - "3.2.4.7.  On-Demand Dynamic Routing\n   With respect to the reference operational\
    \ scenario depicted in\n   Figure 2, there will be many use cases in which a proactive\
    \ dynamic\n   IPv6 routing protocol cannot be used.  For example, in large\n \
    \  enterprise network deployments it would be impractical for all\n   routers\
    \ to engage in a common routing protocol instance, due to\n   scaling considerations.\n\
    \   In those cases, an on-demand routing capability can be enabled in\n   which\
    \ ISATAP nodes send initial packets via an advertising ISATAP\n   router and receive\
    \ redirection messages back.  For example, when a\n   non-advertising ISATAP router\
    \ 'B' has a packet to send to a host\n   located behind non-advertising ISATAP\
    \ router 'D', it can send the\n   initial packets via advertising router 'A',\
    \ which will return\n   redirection messages to inform 'B' that 'D' is a better\
    \ first hop.\n   Protocol details for this ISATAP redirection are specified in\
    \ [AERO].\n"
- title: 3.3.  Destination and Source Address Checks
  contents:
  - "3.3.  Destination and Source Address Checks\n   Tunnel routers can use a source\
    \ address check mitigation measure when\n   they forward an IPv6 packet into a\
    \ tunnel interface with an IPv6\n   source address that embeds one of the router's\
    \ configured IPv4\n   addresses.  Similarly, tunnel routers can use a destination\
    \ address\n   check mitigation measure when they receive an IPv6 packet on a tunnel\n\
    \   interface with an IPv6 destination address that embeds one of the\n   router's\
    \ configured IPv4 addresses.  These checks should correspond\n   to both tunnels'\
    \ IPv6 address formats, regardless of the type of\n   tunnel the router employs.\n\
    \   For example, if tunnel router R1 (of any tunnel protocol) forwards a\n   packet\
    \ into a tunnel interface with an IPv6 source address that\n   matches the 6to4\
    \ prefix 2002:IP1::/48, the router discards the packet\n   if IP1 is one of its\
    \ own IPv4 addresses.  In a second example, if\n   tunnel router R2 receives an\
    \ IPv6 packet on a tunnel interface with\n   an IPv6 destination address with\
    \ an off-link prefix but with an\n   interface identifier that matches the ISATAP\
    \ address suffix\n   ::0200:5efe:IP2, the router discards the packet if IP2 is\
    \ one of its\n   own IPv4 addresses.\n   Hence, a tunnel router can avoid the\
    \ attack by performing the\n   following checks:\n   o  When the router forwards\
    \ an IPv6 packet into a tunnel interface,\n      it discards the packet if the\
    \ IPv6 source address has an off-link\n      prefix but embeds one of the router's\
    \ configured IPv4 addresses.\n   o  When the router receives an IPv6 packet on\
    \ a tunnel interface, it\n      discards the packet if the IPv6 destination address\
    \ has an off-\n      link prefix but embeds one of the router's configured IPv4\n\
    \      addresses.\n   This approach has the advantage that no ancillary state\
    \ is required,\n   since checking is through static lookup in the lists of IPv4\
    \ and IPv6\n   addresses belonging to the router.  However, this approach has\
    \ some\n   inherent limitations:\n   o  The checks incur an overhead that is proportional\
    \ to the number of\n      IPv4 addresses assigned to the router.  If a router\
    \ is assigned\n      many addresses, the additional processing overhead for each\
    \ packet\n      may be considerable.  Note that an unmitigated attack packet would\n\
    \      be repetitively processed by the router until the Hop Limit\n      expires,\
    \ which may require as many as 255 iterations.  Hence, an\n      unmitigated attack\
    \ will consume far more aggregate processing\n      overhead than per-packet address\
    \ checks even if the router assigns\n      a large number of addresses.\n   o\
    \  The checks should be performed for the IPv6 address formats of\n      every\
    \ existing automatic IPv6 tunnel protocol (that uses\n      protocol-41 encapsulation).\
    \  Hence, the checks must be updated as\n      new protocols are defined.\n  \
    \ o  Before the checks can be performed, the format of the address must\n    \
    \  be recognized.  There is no guarantee that this can be generally\n      done.\
    \  For example, one cannot determine if an IPv6 address is a\n      6rd one; hence,\
    \ the router would need to be configured with a list\n      of all applicable\
    \ 6rd prefixes (which may be prohibitively large)\n      in order to unambiguously\
    \ apply the checks.\n   o  The checks cannot be performed if the embedded IPv4\
    \ address is a\n      private one [RFC1918], since it is ambiguous in scope. \
    \ Namely,\n      the private address may be legitimately allocated to another\
    \ node\n      in another routing region.\n   The last limitation may be relieved\
    \ if the router has some\n   information that allows it to unambiguously determine\
    \ the scope of\n   the address.  The check in the following subsection is one\
    \ example\n   for this.\n"
- title: 3.3.1.  Known IPv6 Prefix Check
  contents:
  - "3.3.1.  Known IPv6 Prefix Check\n   A router may be configured with the full\
    \ list of IPv6 subnet prefixes\n   assigned to the tunnels attached to its current\
    \ IPv4 routing region.\n   In such a case, it can use the list to determine when\
    \ static\n   destination and source address checks are possible.  By keeping track\n\
    \   of the list of IPv6 prefixes assigned to the tunnels in the IPv4\n   routing\
    \ region, a router can perform the following checks on an\n   address that embeds\
    \ a private IPv4 address:\n   o  When the router forwards an IPv6 packet into\
    \ its tunnel with a\n      source address that embeds a private IPv4 address and\
    \ matches an\n      IPv6 prefix in the prefix list, it determines whether the\
    \ packet\n      should be discarded or forwarded by performing the source address\n\
    \      check specified in Section 3.3.\n   o  When the router receives an IPv6\
    \ packet on its tunnel interface\n      with a destination address that embeds\
    \ a private IPv4 address and\n      matches an IPv6 prefix in the prefix list,\
    \ it determines whether\n      the packet should be discarded or forwarded by\
    \ performing the\n      destination address check specified in Section 3.3.\n\
    \   The disadvantage of this approach is that the administrative overhead\n  \
    \ for maintaining the list of IPv6 subnet prefixes associated with an\n   IPv4\
    \ routing region may become unwieldy should that list be long\n   and/or frequently\
    \ updated.\n"
- title: 4.  Recommendations
  contents:
  - "4.  Recommendations\n   In light of the mitigation measures proposed above, we\
    \ make the\n   following recommendations in decreasing order of importance:\n\
    \   1.  When possible, it is recommended that the attacks be\n       operationally\
    \ eliminated (as per the measures proposed in\n       Section 3.2).\n   2.  For\
    \ tunnel routers that keep a coherent and trusted neighbor\n       cache that\
    \ includes all legitimate endpoints of the tunnel, we\n       recommend exercising\
    \ the neighbor cache check.\n   3.  For tunnel routers that can implement the\
    \ Neighbor Reachability\n       Check, we recommend exercising it.\n   4.  For\
    \ tunnels having a small and static list of endpoints, we\n       recommend exercising\
    \ the known IPv4 address check.\n   5.  We generally do not recommend using the\
    \ destination and source\n       address checks, since they cannot mitigate routing\
    \ loops with 6rd\n       routers.  Therefore, these checks should not be used\
    \ alone unless\n       there is operational assurance that other measures are\
    \ exercised\n       to prevent routing loops with 6rd routers.\n   As noted earlier,\
    \ tunnels may be deployed in various operational\n   environments.  There is a\
    \ possibility that other mitigation measures\n   may be feasible in specific deployment\
    \ scenarios.  The above\n   recommendations are general and do not attempt to\
    \ cover such\n   scenarios.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document aims at presenting possible solutions\
    \ to the routing\n   loop attack that involves automatic tunnels' routers.  It\
    \ contains\n   various checks that aim to recognize and drop specific packets\
    \ that\n   have strong potential to cause a routing loop.  These checks do not\n\
    \   introduce new security threats.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This work has benefited from discussions on the V6OPS,\
    \ 6MAN, and\n   SECDIR mailing lists.  The document has further benefited from\n\
    \   comments received from members of the IESG during their review.\n   Dmitry\
    \ Anipko, Fred Baker, Stewart Bryant, Remi Despres, Adrian\n   Farrell, Fernando\
    \ Gont, Christian Huitema, Joel Jaeggli, and Dave\n   Thaler are acknowledged\
    \ for their contributions.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC3056]  Carpenter,\
    \ B. and K. Moore, \"Connection of IPv6 Domains\n              via IPv4 Clouds\"\
    , RFC 3056, February 2001.\n   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B.,\
    \ Lemon, T., Perkins,\n              C., and M. Carney, \"Dynamic Host Configuration\
    \ Protocol\n              for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3633]\
    \  Troan, O. and R. Droms, \"IPv6 Prefix Options for Dynamic\n              Host\
    \ Configuration Protocol (DHCP) version 6\", RFC 3633,\n              December\
    \ 2003.\n   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms\n\
    \              for IPv6 Hosts and Routers\", RFC 4213, October 2005.\n   [RFC4861]\
    \  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n              September 2007.\n\
    \   [RFC5214]  Templin, F., Gleeson, T., and D. Thaler, \"Intra-Site\n       \
    \       Automatic Tunnel Addressing Protocol (ISATAP)\", RFC 5214,\n         \
    \     March 2008.\n   [RFC5969]  Townsley, W. and O. Troan, \"IPv6 Rapid Deployment\
    \ on IPv4\n              Infrastructures (6rd) -- Protocol Specification\",\n\
    \              RFC 5969, August 2010.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [AERO]     Templin, F., Ed., \"Asymmetric Extended\
    \ Route Optimization\n              (AERO)\", Work in Progress, June 2011.\n \
    \  [ISATAP-OPS]\n              Templin, F., \"Operational Guidance for IPv6 Deployment\
    \ in\n              IPv4 Sites using ISATAP\", Work in Progress, July 2011.\n\
    \   [RFC4380]  Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n      \
    \        Network Address Translations (NATs)\", RFC 4380,\n              February\
    \ 2006.\n   [RFC4732]  Handley, M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n\
    \              Denial-of-Service Considerations\", RFC 4732,\n              December\
    \ 2006.\n   [RFC6343]  Carpenter, B., \"Advisory Guidelines for 6to4 Deployment\"\
    ,\n              RFC 6343, August 2011.\n   [TEREDO-LOOPS]\n              Gont,\
    \ F., \"Mitigating Teredo Rooting Loop Attacks\", Work\n              in Progress,\
    \ September 2010.\n   [USENIX09] Nakibly, G. and M. Arov, \"Routing Loop Attacks\
    \ using IPv6\n              Tunnels\", USENIX WOOT, August 2009.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gabi Nakibly\n   National EW Research & Simulation Center\n\
    \   Rafael - Advanced Defense Systems\n   P.O. Box 2250 (630)\n   Haifa  31021\n\
    \   Israel\n   EMail: gnakibly@yahoo.com\n   Fred L. Templin\n   Boeing Research\
    \ & Technology\n   P.O. Box 3707 MC 7L-49\n   Seattle, WA  98124\n   USA\n   EMail:\
    \ fltemplin@acm.org\n"
