- title: __initial_text__
  contents:
  - "                 Using the Internet DNS to Distribute\n                  RFC1327\
    \ Mail Address Mapping Tables\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines how to store in the Internet Domain Name System\
    \ the\n   mapping information needed by e-mail gateways and other tools to map\n\
    \   RFC822 domain names into X.400 O/R names and vice versa.  Mapping\n   information\
    \ can be managed in a distributed rather than a centralised\n   way. Gateways\
    \ located on Internet hosts can retrieve the mapping\n   information querying\
    \ the DNS instead of having fixed tables which\n   need to be centrally updated\
    \ and distributed.  This memo is a joint\n   effort of X400 operation working\
    \ group (x400ops) and RARE Mail and\n   Messaging working group (WG-MSG).\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The connectivity between the Internet SMTP mail and other\
    \ mail\n   services, including the Internet X.400 mail and the commercial X.400\n\
    \   service providers, is assured by the Mail eXchanger (MX) record\n   information\
    \ distributed via the Internet Domain Name System (DNS). A\n   number of documents\
    \ then specify in details how to convert or encode\n   addresses from/to RFC822\
    \ style to the other mail system syntax.\n   However, only conversion methods\
    \ provide, via some algorithm or a set\n   of mapping rules, a smooth translation,\
    \ resulting in addresses\n   indistinguishable from the native ones in both RFC822\
    \ and foreign\n   world.\n   RFC1327 describes a set of mappings which will enable\
    \ interworking\n   between systems operating the CCITT X.400 (1984/88) Recommendations\n\
    \   and systems using the RFC822 mail protocol, or protocols derived from\n  \
    \ RFC822. That document addresses conversion of services, addresses,\n   message\
    \ envelopes, and message bodies between the two mail systems.\n   This document\
    \ is concerned with one aspect of RFC1327: the mechanism\n   for mapping between\
    \ X.400 O/R addresses and RFC822 domain names. As\n   described in Appendix F\
    \ of RFC1327, implementation of the mappings\n   requires a database which maps\
    \ between X.400 O/R addresses and domain\n   names, and this database is statically\
    \ defined.\n   This approach requires many efforts to maintain the correct mapping:\n\
    \   all the gateways need to get coherent tables to apply the same\n   mappings,\
    \ the conversion tables must be distributed among all the\n   operational gateways,\
    \ and also every update needs to be distributed.\n   This static mechanism requires\
    \ quite a long time to be spent\n   modifying and distributing the information,\
    \ putting heavy constraints\n   on the time schedule of every update.  In fact\
    \ it does not appear\n   efficient compared to the Internet Domain Name Service\
    \ (DNS).  More\n   over it does not look feasible to distribute the database to\
    \ a large\n   number of other useful applications, like local address converters,\n\
    \   e-mail User Agents or any other tool requiring the mapping rules to\n   produce\
    \ correct results.\n   A first proposal to use the Internet DNS to store, retrieve\
    \ and\n   maintain those mappings was introduced by two of the authors (B. Cole\n\
    \   and R. Hagens) adopting two new DNS resource record (RR)  types: TO-\n   X400\
    \ and TO-822. This new proposal adopts a more complete strategy,\n   and requires\
    \ one new RR only. The distribution of the RFC1327 mapping\n   rules via DNS is\
    \ in fact an important service for the whole Internet\n   community: it completes\
    \ the information given by MX resource record\n   and it allows to produce clean\
    \ addresses when messages are exchanged\n   among the Internet RFC822 world and\
    \ the X.400 one (both Internet and\n   Public X.400 service providers).\n   A\
    \ first experiment in using the DNS without expanding the current set\n   of RR\
    \ and using available ones was in the mean time deployed by some\n   of the authors.\
    \ The existing PTR resource records were used to store\n   the mapping rules,\
    \ and a new DNS tree was created under the \".it\" top\n   level domain. The result\
    \ of the experiment was positive, and a few\n   test applications ran under this\
    \ provisional set up. This test was\n   also very useful in order to define a\
    \ possible migration strategy\n   during the deployment of the new DNS containing\
    \ the new RR. The\n   Internet DNS nameservers wishing to provide this mapping\
    \ information\n   need in fact to be modified to support the new RR type, and\
    \ in the\n   real Internet, due to the large number of different implementations,\n\
    \   this takes some time.\n   The basic idea is to adopt a new DNS RR to store\
    \ the mapping\n   information. The RFC822 to X.400 mapping rules (including the\
    \ so\n   called 'gate' rules) will be stored in the ordinary DNS tree, while\n\
    \   the definition of a new branch of the name space defined under each\n   national\
    \ top level domain is envisaged in order to contain the X.400\n   to RFC822 mappings.\
    \ A \"two-way\" mapping resolution schema is thus\n   fully implemented.\n   The\
    \ creation of the new domain name space representing the X.400 O/R\n   names structure\
    \ also provides the chance to use the DNS to distribute\n   dynamically other\
    \ X.400 related information, thus solving other\n   efficiency problems currently\
    \ affecting the X.400 MHS service.\n   In this paper we will adopt the RFC1327\
    \ mapping rules syntax, showing\n   how it can be stored into the Internet DNS.\n"
- title: 1.1 Definitions syntax
  contents:
  - "1.1 Definitions syntax\n   The definitions in this document is given in BNF-like\
    \ syntax, using\n   the following conventions:\n      |   means choice\n     \
    \ \\   is used for continuation of a definition over several lines\n      [] \
    \ means optional\n      {}  means repeated one or more times\n   The definitions,\
    \ however, are detailed only until a certain level,\n   and below it self-explaining\
    \ character text strings will be used.\n"
- title: 2. Motivation
  contents:
  - "2. Motivation\n   Implementations of RFC1327 gateways require that a database\
    \ store\n   address mapping information for X.400 and RFC822. This information\n\
    \   must be disseminated to all RFC1327 gateways. In the Internet\n   community,\
    \ the DNS has proven to be a practical mean for providing a\n   distributed name\
    \ service. Advantages of using a DNS based system over\n   a table based approach\
    \ for mapping between O/R addresses and domain\n   names are:\n     - It avoids\
    \ fetching and storing of entire mapping tables by every\n       host that wishes\
    \ to implement RFC1327 gateways and/or tools\n     - Modifications to the DNS\
    \ based mapping information can be made\n       available in a more timely manner\
    \ than with a table driven\n       approach.\n     - It allows full authority\
    \ delegation, in agreement with the\n       Internet regionalization process.\n\
    \     - Table management is not necessarily required for DNS-based\n       RFC1327\
    \ gateways.\n     - One can determine the mappings in use by a remote gateway\
    \ by\n       querying the DNS (remote debugging).\n   Also many other tools, like\
    \ address converters and User Agents can\n   take advantage of the real-time availability\
    \ of RFC1327 tables,\n   allowing a much easier maintenance of the information.\n"
- title: 3. The domain space for X.400 O/R name addresses
  contents:
  - "3. The domain space for X.400 O/R name addresses\n   Usual domain names (the\
    \ ones normally used as the global part of an\n   RFC822 e-mail address) and their\
    \ associated information, i.e., host\n   IP addresses, mail exchanger names, etc.,\
    \ are stored in the DNS as a\n   distributed database under a number of top-level\
    \ domains. Some top-\n   level domains are used for traditional categories or\
    \ international\n   organisations (EDU, COM, NET, ORG, INT, MIL...). On the other\
    \ hand\n   any country has its own two letter ISO country code as top-level\n\
    \   domain (FR, DE, GB, IT, RU, ...), including \"US\" for USA.  The\n   special\
    \ top-level/second-level couple IN-ADDR.ARPA is used to store\n   the IP address\
    \ to domain name relationship. Our proposal defines in\n   the above structure\
    \ the appropriate way to locate the X.400 O/R name\n   space, thus enabling us\
    \ to store in DNS the RFC1327 mapping data.\n   The RFC1327 mapping information\
    \ is composed by three tables: 'table1'\n   gives the translation from X.400 to\
    \ RFC822 while 'table2' and 'gate'\n   tables map RFC822 into X.400. Each mapping\
    \ table is composed by\n   mapping rules, and a single mapping rule is composed\
    \ by a keyword\n   (the argument of the mapping function derived from the address\
    \ to be\n   translated) and a translator (the mapping function parameter):\n \
    \                         keyword#translator#\n   the '#' sign is a delimiter\
    \ enclosing the translator. An example:\n                foo.bar.us#PRMD$foo\\\
    .bar.ADMD$intx.C$us#\n   Local mappings are not intended for use outside their\
    \ restricted\n   environment, thus they should not be included in DNS. If local\n\
    \   mappings are used, they should be stored using static local tables,\n   exactly\
    \ as local static host tables can be used with DNS.\n   The keyword of a 'table2'\
    \ and 'gate' table entry is a valid RFC822\n   domain; thus the usual domain name\
    \ space can be used without problems\n   to store these entries.\n   On the other\
    \ hand, the keyword of a 'table1' entry belongs to the\n   X.400 O/R name space.\
    \ The X.400 O/R name space does not usually fit\n   into the usual domain name\
    \ space, although there are a number of\n   similarities; a new name structure\
    \ is thus needed to represent it.\n   This new name structure contains the X.400\
    \ mail domains.\n   To ensure the correct functioning of the DNS system, the new\
    \ X.400\n   name structure must be hooked to the existing domain name space in\
    \ a\n   way which respects the existing name hierarchy.\n   A possible solution\
    \ was to create another special branch, starting\n   from the root of the DNS\
    \ tree, somehow similar to the in-addr.arpa\n   tree. This idea would have required\
    \ to establish a central authority\n   to coordinate at international level the\
    \ management of each national\n   X.400 name tree, including the X.400 public\
    \ service providers. This\n   coordination problem is a heavy burden if approached\
    \ globally. More\n   over the X.400 name structure is very 'country oriented':\
    \ thus while\n   it requires a coordination at national level, it does not have\n\
    \   concepts like the international root. In fact the X.400 international\n  \
    \ service is based  on a large number of bilateral agreements, and only\n   within\
    \ some communities an international coordination service exists.\n   The X.400\
    \ two letter ISO country codes, however, are the same used\n   for the RFC822\
    \ country top-level domains and this gives us an\n   appropriate hook to insert\
    \ the new branches. Our proposal is, in\n   fact, to create under each national\
    \ top level ISO country code a new\n   branch in the name space. This branch represents\
    \ exactly the X.400\n   O/R name structure as defined in each single country,\
    \ following the\n   ADMD, PRMD, O, OU hierarchy. A unique reserved label 'X42D'\
    \ is placed\n   under each country top-level domain, and hence the national X.400\n\
    \   name space derives its own structure:\n                                  \
    \  . (root)\n                                    |\n      +-----------------+-----------+--------+-----------------+...\n\
    \      |                 |                    |                 |\n     edu  \
    \              it                   us                fr\n      |            \
    \     |                    |                 |\n  +---+---+...    +-----+-----+...\
    \     +-----+-----+...     +--+---+...\n  |       |       |     |     |      \
    \  |     |     |        |      |\n ...     ...     cnr   X42D  infn      va  \
    \  ca   X42D     X42D  inria\n                        |                    | \
    \    |        |\n           +------------+------------+...   ...   ...  +----+-------+...\n\
    \           |            |            |                 |            |\n    ADMD-PtPostel\
    \  ADMD-garr  ADMD-Master400        ADMD-atlas  ADMD-red\n                   \
    \     |            |                 |            |\n             +----------+----+...\
    \   ...        +-------+------+... ...\n             |               |       \
    \          |              |\n         PRMD-infn       PRMD-STET        PRMD-Telecom\
    \   PRMD-Renault\n             |               |                 |           \
    \   |\n            ...             ...               ...            ...\n   The\
    \ creation of the X.400 new name tree at national level solves the\n   problem\
    \ of the international coordination. Actually the coordination\n   problem is\
    \ just moved at national level, but it thus becomes easier\n   to solve. The coordination\
    \ at national level between the X.400\n   communities and the Internet world is\
    \ already a requirement for the\n   creation of the national static RFC1327 mapping\
    \ tables; the use of\n   the Internet DNS gives further motivations for this coordination.\n\
    \   The coordination at national level also fits in the ongoing proposal\n   intended\
    \ to define exactly the RFC1327 Mapping Authorities. The DNS\n   in fact allows\
    \ a step by step authority distribution, up to a final\n   complete delegation,\
    \ which can be easily controlled at national level\n   accordingly with national\
    \ needs and situations. A further advantage\n   of the national based solution\
    \ is to allow each country to set up its\n   own X.400 name structure in DNS and\
    \ to deploy its own authority\n   delegation according to its local time scale\
    \ and requirements, with\n   no loss of global service in the mean time. And last,\
    \ placing the new\n   X.400 name tree and coordination process at national level\
    \ fits into\n   the Internet regionalization and internationalisation process,\
    \ as it\n   requires local bodies to take care of local coordination problems.\n\
    \   The DNS name space thus contains completely the information required\n   by\
    \ an e-mail gateway or tool to perform the X.400-RFC822 mapping: a\n   simple\
    \ query to the nearest nameserver provides it. Moreover there is\n   no more any\
    \ need to store, maintain and distribute manually any\n   mapping table. The new\
    \ X.400 name space can also contain further\n   information about the X.400 community,\
    \ as DNS allows for it a\n   complete set of resource records, and thus it allows\
    \ further\n   developments. This set of RRs in the new X.400 name space must be\n\
    \   considered 'reserved' and thus not used until further specifications.\n  \
    \ The construction of the new domain space trees will follow the same\n   procedures\
    \ used when organising at first the already existing DNS\n   space: at first the\
    \ information will be stored in a quite centralised\n   way, and distribution\
    \ of authority will be gradually achieved. A\n   separate document will describe\
    \ the implementation phase and the\n   methods to assure a smooth introduction\
    \ of the new service.\n"
- title: '4. The new DNS resource record for RFC1327 mapping rules: PX'
  contents:
  - "4. The new DNS resource record for RFC1327 mapping rules: PX\n   The specification\
    \ of the Internet DNS (RFC1035) provides a number of\n   specific resource records\
    \ (RRs) to contain specific pieces of\n   information. In particular they contain\
    \ the Mail eXchanger (MX) RR\n   and the host Address (A) records which are used\
    \ by the Internet SMTP\n   mailers. As we will store the RFC822 to X.400 mapping\
    \ information in\n   the already existing DNS name tree, we need to define a new\
    \ DNS RR in\n   order to avoid any possible clash or misuse of already existing\
    \ data\n   structures. The same new RR will also be used to store the mappings\n\
    \   from X.400 to RFC822. More over the mapping information, i.e., the\n   RFC1327\
    \ mapping rules, has a specific format and syntax which require\n   an appropriate\
    \ data structure and processing. A further advantage of\n   defining a new RR\
    \ is the ability to include flexibility for some\n   eventual future development.\n\
    \   The definition of the new 'PX' DNS resource record is:\n      class:     \
    \   IN   (Internet)\n      name:         PX   (pointer to X.400/RFC822 mapping\
    \ information)\n      value:        26\n   The PX RDATA format is:\n         \
    \ +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n          |             \
    \     PREFERENCE                   |\n          +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \          /                    MAP822                     /\n          /    \
    \                                           /\n          +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \          /                    MAPX400                    /\n          /    \
    \                                           /\n          +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \   where:\n   PREFERENCE   A 16 bit integer which specifies the preference given\
    \ to\n                this RR among others at the same owner.  Lower values\n\
    \                are preferred;\n   MAP822       A <domain-name> element containing\
    \ <rfc822-domain>, the\n                RFC822 part of the RFC1327 mapping information;\n\
    \   MAPX400      A <domain-name> element containing the value of\n           \
    \     <x400-in-domain-syntax> derived from the X.400 part of\n               \
    \ the RFC1327 mapping information (see sect. 4.2);\n   PX records cause no additional\
    \ section processing. The PX RR format\n   is the usual one:\n             <name>\
    \ [<class>] [<TTL>] <type> <RDATA>\n   When we store in DNS a 'table1' entry,\
    \ then <name> will be an X.400\n   mail domain name in DNS syntax (see sect. 4.2).\
    \ When we store a\n   'table2' or a 'gate' table entry, <name> will be an RFC822\
    \ mail\n   domain name, including both fully qualified DNS domains and mail only\n\
    \   domains (MX-only domains). All normal DNS conventions, like default\n   values,\
    \ wildcards, abbreviations and message compression, apply also\n   for all the\
    \ components of the PX RR. In particular <name>, MAP822 and\n   MAPX400, as <domain-name>\
    \ elements, must have the final \".\" (root)\n   when they are fully qualified.\n"
- title: 4.1 Additional features of the PX resource record
  contents:
  - "4.1 Additional features of the PX resource record\n   The definition of the RDATA\
    \ for the PX resource record, and the fact\n   that DNS allows a distinction between\
    \ an exact value and a wildcard\n   match for the <name> parameter, represent\
    \ an extension of the RFC1327\n   specification for mapping rules. In fact, any\
    \ RFC1327 mapping table\n   entry is an implicit wildcard entry, i.e., the rule\n\
    \      net2.it#PRMD$net2.ADMD$p400.C$it#\n   covers any RFC822 domain ending with\
    \ 'net2.it', unless more detailed\n   rules for some subdomain in 'net2.it' are\
    \ present. Thus there is no\n   possibility to specify explicitly an RFC1327 entry\
    \ as an exact match\n   only rule. In DNS an entry like\n      *.net2.it.   IN\
    \  PX  10   net2.it.  PRMD-net2.ADMD-p400.C-it.\n   specify the usual wildcard\
    \ match as for RFC1327 tables. However an\n   entry like\n      ab.net2.it.  IN\
    \  PX  10   ab.net2.it.  O-ab.PRMD-net2.ADMDb.C-it.\n   is valid only for an exact\
    \ match of 'ab.net2.it' RFC822 domain.\n   Note also that in DNS syntax there\
    \ is no '#' delimiter around MAP822\n   and MAPX400 fields: the syntax defined\
    \ in sect. 4.2 in fact does not\n   allow the <blank> (ASCII decimal 32) character\
    \ within these fields,\n   making unneeded the use of an explicit delimiter as\
    \ required in the\n   RFC1327 original syntax.\n   Another extension to the RFC1327\
    \ specifications is the PREFERENCE\n   value defined as part of the PX RDATA section.\
    \ This numeric value has\n   exactly the same meaning than the similar one used\
    \ for the MX RR. It\n   is thus possible to specify more than one single mapping\
    \ for a domain\n   (both from RFC822 to X.400 and vice versa), giving as the preference\n\
    \   order. In RFC1327 static tables, however, you cannot specify more\n   than\
    \ one mapping per each RFC822 domain, and the same restriction\n   apply for any\
    \ X.400 domain mapping to an RFC822 one.\n   More over, in the X.400 recommendations\
    \ a note suggests than an\n   ADMD=<blank> should be reserved for some special\
    \ cases. Various\n   national functional profile specifications for an X.400 MHS\
    \ states\n   that if an X.400 PRMD is reachable via any of its national ADMDs,\n\
    \   independently of its actual single or multiple connectivity with\n   them,\
    \ it should use ADMD=<blank> to advertise this fact. Again, if a\n   PRMD has\
    \ no connections to any ADMD it should use ADMD=0 to notify\n   its status, etc.\
    \ However, in most of the current real situations, the\n   ADMD service providers\
    \ do not accept messages coming from their\n   subscribers if they have a blank\
    \ ADMD, forcing them to have their own\n   ADMD value. In such a situation there\
    \ are problems in indicating\n   properly the actually working mappings for domains\
    \ with multiple\n   connectivity. The PX RDATA 'PREFERENCE' extension was introduced\
    \ to\n   take in consideration these problems.\n   However, as these extensions\
    \ are not available with RFC1327 static\n   tables, it is strongly discouraged\
    \ to use them when interworking with\n   any table based gateway or application.\
    \ The extensions were in fact\n   introduced just to add more flexibility, like\
    \ the PREFERENCE value,\n   or they were already implicit in the DNS mechanism,\
    \ like the wildcard\n   specification. They should be used very carefully or just\
    \ considered\n   'reserved for future use'. In particular, for current use, the\n\
    \   PREFERENCE value in the PX record specification should be fixed to a\n   value\
    \ of 50, and only wildcard specifications should be used when\n   specifying <name>\
    \ values.\n"
- title: 4.2 The DNS syntax for an X.400 'domain'
  contents:
  - "4.2 The DNS syntax for an X.400 'domain'\n   The syntax definition of the RFC1327\
    \ mapping rules is defined in\n   appendix F of that document. However that syntax\
    \ is not very human\n   oriented and contains a number of characters which have\
    \ a special\n   meaning in other fields of the Internet DNS. Thus in order to\
    \ avoid\n   any possible problem, especially due to some old DNS implementations\n\
    \   still being used in the Internet, we define a syntax for the X.400\n   part\
    \ of any RFC1327 mapping rules (and hence for any X.400 O/R name)\n   which makes\
    \ it compatible with a <domain-name> element, i.e.,\n   <domain-name>    ::= <subdomain>\
    \ | \" \"\n   <subdomain>      ::= <label> | <label> \".\" <subdomain>\n   <label>\
    \          ::= <alphanum>|\n                        <alphanum> {<alphanumhyphen>}\
    \ <alphanum>\n   <alphanum>       ::= \"0\"..\"9\" | \"A\"..\"Z\" | \"a\"..\"\
    z\"\n   <alphanumhyphen> ::= \"0\"..\"9\" | \"A\"..\"Z\" | \"a\"..\"z\" | \"-\"\
    \n   (see RFC1035, section 2.3.1, page 8).  The legal character set for\n   <label>\
    \ does not correspond to the IA5 Printablestring one used in\n   RFC1327 to define\
    \ mapping rules. However a very simple \"escape\n   mechanism\" can be applied\
    \ in order to bypass the problem. We can in\n   fact simply describe the X.400\
    \ part of an RFC1327 mapping rule format\n   as:\n     <map-rule>   ::= <map-elem>\
    \ | <map-elem> { \".\" <map-elem> }\n     <map-elem>   ::= <attr-label> \"$\"\
    \ <attr-value>\n     <attr-label> ::= \"C\" | \"ADMD\" | \"PRMD\" | \"O\" | \"\
    OU\"\n     <attr-value> ::= \" \" | \"@\" | IA5-Printablestring\n   As you can\
    \ notice <domain-name> and <map-rule> look similar, and also\n   <label> and <map-elem>\
    \ look the same. If we define the correct method\n   to transform a <map-elem>\
    \ into a <label> and vice versa the problem\n   to write an RFC1327 mapping rule\
    \ in <domain-name> syntax is solved.\n   The RFC822 domain part of any RFC1327\
    \ mapping rule is of course\n   already in <domain-name> syntax, and thus remains\
    \ unchanged.\n   In particular, in a 'table1' mapping rule the 'keyword' value\
    \ must be\n   converted into <x400-in-domain-syntax> (X.400 mail DNS mail domain),\n\
    \   while the 'translator' value is already a valid RFC822 domain.  Vice\n   versa\
    \ in a 'table2' or 'gate' mapping rule, the 'translator' must be\n   converted\
    \ into <x400-in-domain-syntax>, while the 'keyword' is\n   already a valid RFC822\
    \ domain.\n"
- title: 4.2.1 IA5-Printablestring to <alphanumhyphen> mappings
  contents:
  - "4.2.1 IA5-Printablestring to <alphanumhyphen> mappings\n   The problem of unmatching\
    \ IA5-Printablestring and <label> character\n   set definition is solved by a\
    \ simple character mapping rule: whenever\n   an IA5 character does not belong\
    \ to <alphanumhyphen>, then it is\n   mapped using its 3 digit decimal ASCII code,\
    \ enclosed in hyphens. A\n   small set of special rules is also defined for the\
    \ most frequent\n   cases. Moreover some frequent characters combinations used\
    \ in RFC1327\n   rules are also mapped as special cases.\n   Let's then define\
    \ the following simple rules:\n    RFC1327 rule          DNS store translation\
    \    conditions\n    -----------------------------------------------------------------\n\
    \    <attr-label>$@        <attr-label>             missing attribute\n    <attr-label>$<blank>\
    \  <attr-label>\"b\"          blank attribute\n    <attr-label>$xxx      <attr-label>-xxx\
    \         elsewhere\n   Non <alphanumhyphen> characters in <attr-value>:\n   \
    \ RFC1327 rule          DNS store translation    conditions\n    -----------------------------------------------------------------\n\
    \    -                     -h-                      hyphen\n    \\.          \
    \          -d-                      quoted dot\n    <blank>               -b-\
    \                      blank\n    <non A/N character>   -<3digit-decimal>-   \
    \    elsewhere\n   If the DNS store translation of <attr-value> happens to end\
    \ with an\n   hyphen, then this last hyphen is omitted.\n   Let's now have some\
    \ examples:\n    RFC1327 rule          DNS store translation    conditions\n \
    \   -----------------------------------------------------------------\n    PRMD$@\
    \                PRMD                     missing attribute\n    ADMD$<blank>\
    \          ADMDb                    blank attribute\n    ADMD$400-net        \
    \  ADMD-400-h-net           hyphen mapping\n    PRMD$UK\\.BD           PRMD-UK-d-BD\
    \             quoted dot mapping\n    O$ACME Inc\\.          O-ACME-b-Inc-d  \
    \         blank & final hyphen\n    PRMD$main-400-a       PRMD-main-h-400-h-a\
    \      hyphen mapping\n    O$-123-b              O--h-123-h-b             hyphen\
    \ mapping\n    OU$123-x              OU-123-h-x               hyphen mapping\n\
    \    PRMD$Adis+co          PRMD-Adis-043-co         3digit mapping\n   Thus, an\
    \ X.400 part from an RFC1327 mapping rule like\n     OU$uuu.O$@.PRMD$ppp\\.rrr.ADMD$aaa\
    \ ddd-mmm.C$cc\n   translates to\n     OU-uuu.O.PRMD-ppp-d-rrr.ADMD-aaa-b-ddd-h-mmm.C-cc\n\
    \ Another example:\n     OU$sales dept\\..O$@.PRMD$ACME.ADMD$ .C$GB\n   translates\
    \ to\n     OU-sales-b-dept-d.O.PRMD-ACME.ADMDb.C-GB\n"
- title: 4.2.2 Flow chart
  contents:
  - "4.2.2 Flow chart\n   In order to achieve the proper DNS store translations of\
    \ the X.400\n   part of an RFC1327 mapping rules or any other X.400 O/R name,\
    \ some\n   software tools will be used. It is in fact evident that the above\n\
    \   rules for converting mapping table from RFC1327 to DNS format (and\n   vice\
    \ versa) are not user friendly enough to think of a human made\n   conversion.\n\
    \   To help in designing such tools, we describe hereunder a small flow\n   chart.\
    \ The fundamental rule to be applied during translation is,\n   however, the following:\n\
    \      \"A string must be parsed from left to right, moving appropriately\n  \
    \    the pointer in order not to consider again the already translated\n     \
    \ left section of the string in subsequent analysis.\"\n   Flow chart 1 - Translation\
    \ from RFC1327 to DNS format:\n                 parse  single attribute\n    \
    \          (enclosed in \".\" separators)\n                           |\n    \
    \        (yes)  ---  <label>$@ ?  ---  (no)\n              |                 \
    \            |\n        map to <label>        (no)  <label>$<blank> ?  (yes)\n\
    \              |                 |                        |\n              | \
    \          map to <label>-        map to <label>\"b\"\n              |       \
    \          |                        |\n              |           map \"\\.\" to\
    \ -d-                |\n              |                 |                    \
    \    |\n              |           map \"-\" to -h-                 |\n       \
    \       |                 |                        |\n              |    map non\
    \ A/N char to -<3digit>-        |\n  restart     |                 |         \
    \               |\n     ^        |      remove (if any) last \"-\"           \
    \ |\n     |        |                 |                        |\n     |      \
    \  \\------->     add a  \".\"    <--------------/\n     |                   \
    \       |\n     \\----------  take  next  attribute  (if  any)\n   Flow chart\
    \ 2 - Translation from DNS to RFC1327 format:\n                parse single attribute\n\
    \            (enclosed in \".\" separators)\n                          |\n   \
    \         (yes) ---- <label> ? ---- (no)\n              |                    \
    \      |\n      map to <label>$@        (no) <label>\"b\" ? (yes)\n          \
    \    |                 |                 |\n              |           map to <label>$\
    \    map to <label>$<blank>\n              |                 |               \
    \  |\n              |           map -d- to \"\\.\"         |\n              |\
    \                 |                 |\n              |           map -h- to \"\
    -\"          |\n              |                 |                 |\n        \
    \      |           map -b- to \" \"          |\n  restart     |              \
    \   |                 |\n     ^        |   map -<3digit>- to non A/N char  |\n\
    \     |        |                 |                 |\n     |        \\-------->\
    \   add a \".\"   <----------/\n     |                         |\n     \\-------------\
    \ take next attribute (if any)\n   Note that the above flow charts deal with the\
    \ translation of the\n   attributes syntax, only.\n"
- title: 4.2.3 The Country Code convention in the <name> value.
  contents:
  - "4.2.3 The Country Code convention in the <name> value.\n   The RFC822 domain\
    \ space and the X.400 O/R address space, as said in\n   section 3, have one specific\
    \ common feature: the X.400 ISO country\n   codes are the same as the RFC822 ISO\
    \ top level domains for countries.\n   In the previous sections we have also defined\
    \ a method to write in\n   <domain-name> syntax any X.400 domain, while in section\
    \ 3 we\n   described the new name space starting at each country top level\n \
    \  domain under the X42D.cc (where 'cc' is then two letter ISO country\n   code).\n\
    \   The <name> value for a 'table1' entry in DNS should thus be derived\n   from\
    \ the X.400 domain value, translated to <domain-name> syntax,\n   adding the 'X42D.cc.'\
    \ post-fix to it, i.e.,\n      ADMD$acme.C$fr\n   produces in <domain-name> syntax\
    \ the key:\n      ADMD-acme.C-fr\n   which is post-fixed by 'X42D.fr.' resulting\
    \ in:\n      ADMD-acme.C-fr.X42D.fr.\n   However, due to the identical encoding\
    \ for X.400 country codes and\n   RFC822 country top level domains, the string\
    \ 'C-fr.X42D.fr.' is\n   clearly redundant.\n   We thus define the 'Country Code\
    \ convention' for the <name> key,\n   i.e.,\n      \"The C-cc section of an X.400\
    \ domain in <domain-name> syntax must\n      be omitted when creating a <name>\
    \ key, as it is identical to the\n      top level country code used to identify\
    \ the DNS zone where the\n      information is stored\".\n   Thus we obtain the\
    \ following <name> key examples:\n   X.400 domain                       DNS <name>\
    \ key\n   --------------------------------------------------------------------\n\
    \   ADMD$acme.C$fr                     ADMD-acme.X42D.fr.\n   PRMD$ux\\.av.ADMD$\
    \ .C$gb            PRMD-ux-d-av.ADMDb.X42D.gb.\n   PRMD$ppb.ADMD$Dat 400.C$de\
    \         PRMD-ppb.ADMD-Dat-b-400.X42D.de.\n"
- title: 4.3 Creating the appropriate DNS files
  contents:
  - "4.3 Creating the appropriate DNS files\n   Using RFC1327's assumption of an asymmetric\
    \ mapping between X.400 and\n   RFC822 addresses, two separate relations are required\
    \ to store the\n   mapping database: RFC1327 'table1' and RFC1327 'table2'; thus\
    \ also in\n   DNS we will maintain the two different sections, even if they will\n\
    \   both use the PX resource record. More over RFC1327 also specify a\n   third\
    \ table: RFC1327 'gate' Table. This additional table, however,\n   has the same\
    \ syntax rules than RFC1327 'table2' and thus the same\n   translation procedure\
    \ as 'table2' will be applied; some details about\n   the RFC1327 'gate' table\
    \ are discussed in section 4.4.\n   Let's now check how to create, from an RFC1327\
    \ mapping rule entry,\n   the appropriate DNS entry in a DNS data file. We can\
    \ again define an\n   RFC1327 mapping rule entry as defined in appendix F of that\
    \ document\n   as:\n     <x400-domain>#<rfc822-domain>#  (case A: 'table1' entry)\n\
    \   and\n     <rfc822-domain>#<x400-domain>#  (case B: 'table2' and 'gate' entry)\n\
    \   The two cases must be considered separately. Let's consider case A.\n    -\
    \ take <x400-domain> and translate it into <domain-name> syntax,\n      obtaining\
    \ <x400-in-domain-syntax>;\n    - create the <name> key from <x400-in-domain-syntax>\
    \ i.e., apply\n      the Country Code convention described in sect. 4.2.3;\n \
    \   - construct the DNS PX record as:\n      *.<name>  IN  PX  50  <rfc822-domain>\
    \  <x400-in-domain-syntax>\n   Please note that within PX RDATA the <rfc822-domain>\
    \ precedes the\n   <x400-in-domain-syntax> also for a 'table1' entry.\n   an example:\
    \ from the rule\n     PRMD$ab.ADMD$ac.C$fr#ab.fr#\n   we obtain\n     *.PRMD-ab.ADMD-ac.X42D.fr.\
    \ IN PX 50  ab.fr.  PRMD-ab.ADMD-ac.C-fr.\n   Note that <name>, <rfc822-domain>\
    \ and <x400-in-domain-syntax> are\n   fully qualified <domain-name> elements,\
    \ thus ending with a \".\".\n   Let's now consider case B.\n    - take <rfc822-domain>\
    \ as <name> key;\n    - translate <x400-domain> into <x400-in-domain-syntax>;\n\
    \    - construct the DNS PX record as:\n     *.<name>  IN  PX  50  <rfc822-domain>\
    \  <x400-in-domain-syntax>\n   an example: from the rule\n     ab.fr#PRMD$ab.ADMD$ac.C$fr#\n\
    \   we obtain\n     *.ab.fr.  IN  PX  50  ab.fr.  PRMD-ab.ADMD-ac.C-fr.\n   Again\
    \ note the fully qualified <domain-name> elements.\n   A file containing the RFC1327\
    \ mapping rules and RFC1327 'gate' table\n   written in DNS format will look like\
    \ the following fictious example:\n     !\n     ! RFC1327 table 1: X.400 --> RFC822\n\
    \     !\n     *.ADMD-acme.X42D.it.               IN  PX  50  it. ADMD-acme.C-it.\n\
    \     *.PRMD-accred.ADMD-tx400.X42D.it.  IN  PX  50   \\\n                   \
    \             accred.it. PRMD-accred.ADMD-tx400.C-it.\n     *.O-u-h-newcity.PRMD-x4net.ADMDb.X42D.it.\
    \  IN  PX  50   \\\n                       cs.ncty.it. O-u-h-newcity.PRMD-x4net.ADMDb.C-it.\n\
    \     !\n     ! RFC1327 table 2: RFC822 --> X.400\n     !\n     *.nrc.it.    IN\
    \  PX  50   nrc.it. PRMD-nrc.ADMD-acme.C-it.\n     *.ninp.it.   IN  PX  50   ninp.it.\
    \ O.PRMD-ninp.ADMD-acme.C-it.\n     *.bd.it.     IN  PX  50   bd.it. PRMD-uk-d-bd.ADMDb.C-it.\n\
    \     !\n     ! RFC1327 Gate Table\n     !\n     my.it.  IN PX 50  my.it. OU-int-h-gw.O.PRMD-ninp.ADMD-acme.C-it.G.\n\
    \     co.it.  IN PX 50  co.it. O-mhs-h-relay.PRMD-x4net.ADMDb.C-it.G.\n   (here\
    \ the \"\\\" indicates continuation on the same line, as wrapping is\n   done\
    \ only due to typographical reasons).\n   Note the special suffix \".G.\" on the\
    \ right side of the 'gate' Table\n   section whose aim is described in section\
    \ 4.4. The corresponding\n   RFC1327 tables are:\n     #\n     # RFC1327 table\
    \ 1: X.400 --> RFC822\n     #\n     ADMD$acme.C$it#it#\n     PRMD$accred.ADMD$tx400.C$it#accred.it#\n\
    \     O$u-newcity.PRMD$x4net.ADMD$ .C$it#cs.ncty.it#\n     #\n     # RFC1327 table\
    \ 2: RFC822 --> X.400\n     #\n     nrc.it#PRMD$nrc.ADMD$acme.C$it#\n     ninp.it#O.PRMD$ninp.ADMD$acme.C$it#\n\
    \     bd.it#PRMD$uk\\.bd.ADMD$ .C$it#\n     #\n     # RFC1327 Gate Table\n   \
    \  #\n     my.it#OU$int-gw.O$@.PRMD$ninp.ADMD$acme.C$it#\n     co.it#O$mhs-relay.PRMD$x4net.ADMD$\
    \ .C$t#\n"
- title: 4.4 Storing the RFC1327 Gate table
  contents:
  - "4.4 Storing the RFC1327 Gate table\n   Section 4.3.4 of RFC1327 also specify\
    \ how an address should be\n   converted between RFC822 and X.400 in case a complete\
    \ mapping is\n   impossible. To allow the use of DDAs for non mappable domains,\
    \ the\n   RFC1327 'gate' table is thus introduced. DNS must store and\n   distribute\
    \ also these data.\n   One of the major features of the DNS is the ability to\
    \ distribute the\n   authority: a certain site runs the \"primary\" nameserver\
    \ for one\n   determined sub-tree and thus it is also the only place allowed to\n\
    \   update information regarding that sub-tree. This fact allows, in our\n   case,\
    \ a further additional feature to the table based approach. In\n   fact we can\
    \ avoid one possible ambiguity about the use of the 'gate'\n   table (and thus\
    \ of DDAs encoding).\n   The authority maintaining a DNS entry in the usual RFC822\
    \ domain\n   space is the only one allowed to decide if its domain should be\n\
    \   mapped using Standard Attributes (SA) syntax or Domain Defined\n   Attributes\
    \ (DDA) one. If the authority decides that its RFC822 domain\n   should be mapped\
    \ using SA, then the PX RDATA will be a 'table2'\n   entry, otherwise it will\
    \ be a 'gate' table entry. Thus for an RFC822\n   domain we cannot have any more\
    \ two possible entries, one from 'table2\n   and another one from 'gate' table,\
    \ and the action for a gateway\n   results clearly stated.\n   The RFC1327 'gate'\
    \ table syntax is actually identical to RFC1327\n   'table2'. Thus the same syntax\
    \ translation rules from RFC1327 to DNS\n   format can be applied. However a gateway\
    \ or any other application\n   must know if the answer it got from DNS contains\
    \ some 'table2' or\n   some 'gate' table information. This is easily obtained\
    \ flagging with\n   an additional \".G.\" post-fix the PX RDATA value when it\
    \ contains a\n   'gate' table entry. The example in section 4.3 shows clearly\
    \ the\n   result. As any X.400 O/R domain must end with a country code (\"C-xx\"\
    \n   in our DNS syntax) the additional \".G.\" creates no conflicts or\n   ambiguities\
    \ at all. This postfix must obviously be removed before\n   using the RFC1327\
    \ 'gate' table data.\n"
- title: 5. Finding RFC1327 mapping information from DNS
  contents:
  - "5. Finding RFC1327 mapping information from DNS\n   The RFC1327 mapping information\
    \ is stored in DNS both in the normal\n   RFC822 domain name space, and in the\
    \ newly defined X.400 name space.\n   The information, stored in PX resource records,\
    \ does not represent a\n   full RFC822 or X.400 O/R address: it is a template\
    \ which specifies\n   the fields of the domain that are used by the mapping algorithm.\n\
    \   When mapping information is stored in the DNS, queries to the DNS are\n  \
    \ issued whenever an iterative search through the mapping table would\n   be performed\
    \ (RFC1327: section 4.3.4, State I; section 4.3.5, mapping\n   B). Due to the\
    \ DNS search mechanism, DNS by itself returns the\n   longest possible match in\
    \ the stored mapping rule with a single\n   query, thus no iteration and/or multiple\
    \ queries are needed. As\n   specified in RFC1327, a search of the mapping table\
    \ will result in\n   either success (mapping found) or failure (query failed,\
    \ mapping not\n   found).\n   When a DNS query is issued, a third possible result\
    \ is timeout. If\n   the result is timeout, the gateway operation is delayed and\
    \ then\n   retried at a later time. A result of success or failure is processed\n\
    \   according to the algorithms specified in RFC1327. If a DNS error code\n  \
    \ is returned, an error message should be logged and the gateway\n   operation\
    \ is delayed as for timeout. These pathological situations,\n   however, should\
    \ be avoided with a careful duplication and chaching\n   mechanism which DNS itself\
    \ provides.\n   Searching the nameserver which can authoritatively solve the query\
    \ is\n   automatically performed by the DNS distributed name service.\n"
- title: 5.1 A DNS query example
  contents:
  - "5.1 A DNS query example\n   An RFC1327 mail-gateway located in the Internet,\
    \ when translating\n   addresses from RFC822 to X.400, can get information about\
    \ the RFC1327\n   mapping rule asking the DNS. As an example, when translating\
    \ the\n   address SUN.CCE.NRC.IT, the gateway will just query DNS for the\n  \
    \ associated PX resource record. The DNS should contain a PX record\n   like this:\n\
    \   *.cce.nrc.it.  IN PX 50   cce.nrc.it.  O-cce.PRMD-nrc.ADMD-acme.C-it.\n  \
    \ The first query will return immediately the appropriate mapping rule\n   in\
    \ DNS store format.\n   There is no \".G.\" at the end of the obtained PX RDATA\
    \ value, thus\n   applying the syntax translation specified in paragraph 4.2 the\n\
    \   RFC1327 Table 2 mapping rule will be obtained.\n   Let's now take another\
    \ example where a 'gate' table rule is returned.\n   If we are looking for an\
    \ RFC822 domain ending with top level domain\n   \"MW\", and the DNS contains\
    \ a PX record like this,\n      *.mw.   IN  PX  50  mw.  O-cce.PRMD-nrc.ADMD-acme.C-it.G.\n\
    \   DNS will return 'mw.' and 'O-cce.PRMD-nrc.ADMD-acme.C-it.G.', i.e., a\n  \
    \ 'gate' table entry in DNS store format. Dropping the final \".G.\" and\n   applying\
    \ the syntax translation specified in paragraph 4.2 the\n   original rule will\
    \ be available. More over, the \".G.\" flag also tells\n   the gateway to use\
    \ DDA encoding for the inquired RFC822 domain.\n   On the other hand, translating\
    \ from X.400 to RFC822 the address\n      C=de; ADMD=pkz; PRMD=nfc; O=top;\n \
    \  the mail gateway should convert the syntax according to paragraph\n   4.2,\
    \ apply the 'Country code convention' described in 4.2.3 to derive\n   the appropriate\
    \ DNS translation of the X.400 O/R name and then query\n   DNS for the corresponding\
    \ PX resource record. The obtained record for\n   which the PX record must be\
    \ queried is thus:\n      O-top.PRMD-nfc.ADMD-pkz.X42D.de.\n   The DNS could contain:\n\
    \      *.ADMD-pkz.X42D.de.  IN  PX  50  pkz.de.  ADMD-pkz.C-de.\n   Assuming that\
    \ there are not more specific records in DNS, the\n   wildcard mechanism will\
    \ return the RFC1327 'table1' rule in encoded\n   format.\n"
- title: 6. Administration of mapping information
  contents:
  - "6. Administration of mapping information\n   The DNS, using the PX RR, will be\
    \ able to distribute the mapping\n   information to all RFC1327 gateways located\
    \ on the Internet. However,\n   not all RFC1327 gateways will be able to use the\
    \ Internet DNS. It is\n   expected that some gateways in a particular management\
    \ domain will\n   conform to one of the following models:\n      (a) Table-based,\
    \ (b) DNS-based, (c) X.500-based\n   Table-based management domains will continue\
    \ to submit and retrieve\n   their mapping tables from the International Mapping\
    \ Table coordinator\n   manually or via some automated procedures. Their mapping\
    \ information\n   should be made available in DNS by the appropriate DNS authority\n\
    \   using the same mechanism already in place for MX records: if a branch\n  \
    \ has not yet in place its own DNS server, some higher authority in the\n   DNS\
    \ tree will provide the service for it. A transition procedure\n   similar to\
    \ the one used to migrate from the 'hosts.txt' tables to DNS\n   can be applied\
    \ also to the deployment phase of this proposal. An\n   informational document\
    \ describing the implementation phase and the\n   detailed coordination procedures\
    \ is expected. The deployment phase\n   must also follow the directives produced\
    \ by the current work on\n   RFC1327 mapping authorities, in order to insure consistency\
    \ in the\n   mapping information itself.\n   Another distributed directory service\
    \ which can distribute the\n   RFC1327 mapping information is X.500. The coordination,\
    \ alignment and\n   uniqueness of mapping information between DNS and X.500 is\
    \ an\n   essential fact if it happens to have both systems in place. The ideal\n\
    \   solution is a dynamic alignment mechanism which transparently makes\n   the\
    \ DNS mapping information available in X.500 and vice versa. Some\n   work in\
    \ this specific field is already being done [see Costa] which\n   can result in\
    \ a global transparent directory service, where the\n   information is stored\
    \ in DNS or in X.500, but is visible completely\n   by any of the two systems.\n"
- title: 7. Conclusion
  contents:
  - "7. Conclusion\n   The introduction of the new PX resource record and the definition\
    \ of\n   the X.400 O/R name space in the DNS structure provide a good\n   repository\
    \ for mapping information. The mapping information is stored\n   in the DNS tree\
    \ structure so that it can be easily obtained using the\n   DNS distributed name\
    \ service. At the same time the definition of the\n   appropriate DNS space for\
    \ X.400 O/R names provide a repository where\n   to store and distribute some\
    \ other X.400 MHS information. The use of\n   the DNS has many known advantages\
    \ in storing, managing and updating\n   the information. A successful number of\
    \ tests have been performed\n   under the provisional top level domain \"X400.IT\"\
    , and their results\n   confirmed the advantages of the method.\n   Software to\
    \ query the DNS and then to convert between the textual\n   representation of\
    \ DNS resource records and the address format defined\n   in RFC1327 needs to\
    \ be developed. This software must also allow a\n   smooth implementation and\
    \ deployment period, eventually taking care\n   of the transition phase. A further\
    \ informational document describing\n   operational and implementation of the\
    \ service is expected.\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   We wish to thanks all those who contributed to the discussion\
    \ and\n   revision of this document: many of their ideas and suggestions\n   constitute\
    \ essential parts of this work. In particular thanks to Jon\n   Postel, Paul Mockapetris,\
    \ Rob Austin and the whole IETF x400ops, RARE\n   wg-msg and IETF namedroppers\
    \ groups. A special mention to Christian\n   Huitema for his fundamental contribution\
    \ to this work.\n"
- title: 9. References
  contents:
  - "9. References\n   [CCITT] CCITT SG 5/VII, \"Recommendation X.400, Message Handling\n\
    \       Systems: System Model - Service Elements\", October 1988.\n   [RFC 1327]\
    \ Kille, S., \"Mapping between X.400(1988)/ISO 10021 and RFC\n       822\", RFC\
    \ 1327, March 1992.\n   [RFC 1034] Mockapetris, P., \"Domain Names - Concepts\
    \ and Facilities\",\n       STD 13, RFC 1034, USC/Information Sciences Institute,\
    \ November\n       1987.\n   [RFC 1035] Mockapetris, P., \"Domain names - Implementation\
    \ and\n       Specification\", STD 13, RFC 1035, USC/Information Sciences\n  \
    \     Institute, November 1987.\n   [RFC 1033] Lottor, M., \"Domain Administrators\
    \ Operation Guide\", RFC\n       1033, SRI International, November 1987.\n   [Costa]\
    \ Costa, A., Macedo, J., and V. Freitas, \"Accessing and\n       Managing DNS\
    \ Information in the X.500 Directory\", Proceeding of\n       the 4th Joint European\
    \ Networking Conference, Trondheim, NO, May\n       1993.\n   [Houttin] Houttin,\
    \ J., Hansen, K., and S. Aumont, \"Address Mapping\n       Functions and Authorities\"\
    , Internet-DRAFT, May 1993.\n"
- title: 10. Security Considerations
  contents:
  - "10. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 11. Authors' Addresses
  contents:
  - "11. Authors' Addresses\n   Claudio Allocchio\n   Sincrotrone Trieste\n   Padriciano\
    \ 99\n   I 34012 Trieste\n   Italy\n   RFC822: Claudio.Allocchio@elettra.trieste.it\n\
    \   X.400:  C=it;A=garr;P=Trieste;O=Elettra;\n   S=Allocchio;G=Claudio;\n   Phone:\
    \  +39 40 3758523\n   Fax:    +39 40 226338\n   Antonio Blasco Bonito\n   CNUCE\
    \ - CNR\n   Reparto infr. reti\n   Viale S. Maria 36\n   I 56126 Pisa\n   Italy\n\
    \   RFC822: bonito@cnuce.cnr.it\n   X.400:  C=it;A=garr;P=cnr;O=cnuce;S=bonito;\n\
    \   Phone:  +39 50 593246\n   Fax:    +39 50 589354\n   Bruce Cole\n   Cisco Systems\
    \ Inc.\n   P.O. Box 3075\n   1525 O'Brien Drive\n   Menlo Park, CA 94026\n   U.S.A.\n\
    \   RFC822: bcole@cisco.com\n   X.400:  C=us;A= ;P=Internet;\n   DD.rfc-822=bcole(a)cisco.com;\n\
    \   Phone:  +1 415 6888245\n   Fax:    +1 415 6884575\n   Silvia Giordano\n  \
    \ Centro Svizzero di\n   Calcolo Scientifico\n   Via Cantonale\n   CH 6928 Manno\n\
    \   Switzerland\n   RFC822: giordano@cscs.ch\n   X.400:  C=ch;A=arcom;P=switch;O=cscs;\n\
    \   S=giordano;\n   Phone:  +41 91 508213\n   Fax:    +41 91 506711\n   Robert\
    \ Hagens\n   Advanced Network and Services\n   1875 Campus Commons Drive\n   Reston,\
    \ VA 22091\n   U.S.A.\n   RFC822: hagens@ans.net\n   X.400:  C=us;A= ;P=Internet;\n\
    \   DD.rfc-822=hagens(a)ans.net;\n   Phone:  +1 703 7587700\n"
