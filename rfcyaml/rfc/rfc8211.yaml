- title: __initial_text__
  contents:
  - ''
- title: Adverse Actions by a Certification Authority (CA) or Repository Manager
  contents:
  - "Adverse Actions by a Certification Authority (CA) or Repository Manager\n   \
    \         in the Resource Public Key Infrastructure (RPKI)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document analyzes actions by or against a Certification\n \
    \  Authority (CA) or an independent repository manager in the RPKI that\n   can\
    \ adversely affect the Internet Number Resources (INRs) associated\n   with that\
    \ CA or its subordinate CAs.  The analysis is done from the\n   perspective of\
    \ an affected INR holder.  The analysis is based on\n   examination of the data\
    \ items in the RPKI repository, as controlled\n   by a CA (or an independent repository\
    \ manager) and fetched by Relying\n   Parties (RPs).  The analysis does not purport\
    \ to be comprehensive; it\n   does represent an orderly way to analyze a number\
    \ of ways that errors\n   by or attacks against a CA or repository manager can\
    \ affect the RPKI\n   and routing decisions based on RPKI data.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It has been approved for\
    \ publication by the Internet\n   Engineering Steering Group (IESG).  Not all\
    \ documents approved by the\n   IESG are a candidate for any level of Internet\
    \ Standard; see\n   Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8211.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Analysis of RPKI Repository Objects . . . . . . . . .\
    \ . . . .   4\n     2.1.  CA Certificates . . . . . . . . . . . . . . . . . .\
    \ . . .   6\n     2.2.  Manifest  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   9\n     2.3.  Certificate Revocation List . . . . . . . . . . . . . .\
    \ .  12\n     2.4.  ROA . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  15\n     2.5.  Ghostbusters Record . . . . . . . . . . . . . . . . . . .  17\n\
    \     2.6.  Router Certificates . . . . . . . . . . . . . . . . . . .  18\n  \
    \ 3.  Analysis of Actions Relative to Scenarios . . . . . . . . . .  19\n    \
    \ 3.1.  Scenario A  . . . . . . . . . . . . . . . . . . . . . . .  21\n     3.2.\
    \  Scenario B  . . . . . . . . . . . . . . . . . . . . . . .  21\n     3.3.  Scenario\
    \ C  . . . . . . . . . . . . . . . . . . . . . . .  21\n     3.4.  Scenario D\
    \  . . . . . . . . . . . . . . . . . . . . . . .  22\n   4.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  22\n   5.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  23\n   6.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  23\n     6.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  23\n     6.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  25\n   Acknowledgements  . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  26\n   Authors' Addresses  . . . . . . . . . .\
    \ . . . . . . . . . . . . .  26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In the context of this document, any change to the Resource\
    \ Public\n   Key Infrastructure (RPKI) [RFC6480] that diminishes the set of\n\
    \   Internet Number Resources (INRs) associated with an INR holder, and\n   that\
    \ is contrary to the holder's wishes, is termed \"adverse\".  This\n   analysis\
    \ is done from the perspective of an affected INR holder.  An\n   action that\
    \ results in an adverse charge (as defined above) may be\n   the result of an\
    \ attack on a CA [RFC7132], an error by a CA, or an\n   error by or an attack\
    \ on a repository operator.  Note that the CA\n   that allocated the affected\
    \ INRs may be acting in accordance with\n   established policy; thus, the change\
    \ may be contractually justified\n   even though viewed as adverse by the INR\
    \ holder.  This document\n   examines the implications of adverse actions within\
    \ the RPKI with\n   respect to INRs, irrespective of the cause of the actions.\n\
    \   Additionally, when a Route Origin Authorization (ROA) or router\n   certificate\
    \ is created that \"competes\" with an existing ROA or router\n   certificate\
    \ (respectively), the creation of the new ROA or router\n   certificate may be\
    \ adverse.  (A newer ROA competes with an older ROA\n   if the newer ROA points\
    \ to a different Autonomous System Number\n   (ASN), contains the same or a more\
    \ specific prefix, and is issued by\n   a different CA.  A newer router certificate\
    \ competes with an older\n   router certificate if the newer one contains the\
    \ same ASN, contains a\n   different public key, and is issued by a different\
    \ CA.)  Note that\n   transferring resources or changing of upstream providers\
    \ may yield\n   competing ROAs and/or router certificates under some circumstances.\n\
    \   Thus, not all instances of competition are adverse actions.\n   As noted above,\
    \ adverse changes to RPKI data may arise due to several\n   types of causes. \
    \ A CA may make a mistake in managing the RPKI\n   objects it signs, or it may\
    \ be subject to an attack.  If an attack\n   allows an adversary to use the private\
    \ key of that CA to sign RPKI\n   objects, then the effect is analogous to the\
    \ CA making mistakes.\n   There is also the possibility that a CA or repository\
    \ operator may be\n   subject to legal measures that compel them to make adverse\
    \ changes to\n   RPKI data.  In many cases, such actions may be hard to distinguish\n\
    \   from mistakes or attacks, other than with respect to the time\n   required\
    \ to remedy the adverse action.  (Presumably, the CA will take\n   remedial action\
    \ when a mistake or an attack is detected, so the\n   effects are similar in these\
    \ cases.  If a CA has been legally\n   compelled to effect an adverse change,\
    \ remediation will likely not be\n   swift.)\n   This document analyzes the various\
    \ types of actions by a CA (or an\n   independent repository operator) that can\
    \ adversely affect the INRs\n   associated with that CA, as well as the INRs of\
    \ subordinate CAs.  The\n   analysis is based on examination of the data items\
    \ in the RPKI\n   repository, as controlled by a CA (or an independent repository\n\
    \   operator) and fetched by RPs.\n"
- title: 2.  Analysis of RPKI Repository Objects
  contents:
  - "2.  Analysis of RPKI Repository Objects\n   This section enumerates the RPKI\
    \ repository system objects and\n   examines how changes to them affect Route\
    \ Origin Authorizations\n   (ROAs) and router certificate validation.  Identifiers\
    \ are assigned\n   to errors for reference by later sections of this document.\
    \  Note\n   that not all adverse actions may be encompassed by this taxonomy.\n\
    \   The RPKI repository [RFC6481] contains a number of (digitally signed)\n  \
    \ objects that are fetched and processed by RPs.  Until the deployment\n   of\
    \ BGPsec [RFC8205], the principal goal of the RPKI is to enable an\n   RP to validate\
    \ ROAs [RFC6482].  A ROA binds address space to an ASN.\n   A ROA can be used\
    \ to verify BGP announcements with respect to route\n   origin [RFC6483].  The\
    \ most important objects in the RPKI for origin\n   validation are ROAs; all of\
    \ the other RPKI objects exist to enable\n   the validation of ROAs in a fashion\
    \ consistent with the INR\n   allocation system.  Thus, errors that result in\
    \ changes to a ROA, or\n   to RPKI objects needed to validate a ROA, can cause\
    \ RPs to reach\n   different (from what was intended) conclusions about the validity\
    \ of\n   the bindings expressed in a ROA.\n   When BGPsec is deployed, router\
    \ certificates [RFC8209] will be added\n   to repository publication points. \
    \ These are end entity (EE)\n   certificates used to verify signatures applied\
    \ to BGP update data and\n   to enable path validation [RFC8205].  Router certificates\
    \ are as\n   important to path validation as ROAs are to origin validation.\n\
    \   The objects contained in the RPKI repository are of two types:\n   conventional\
    \ PKI objects (certificates and Certificate Revocation\n   Lists (CRLs)) and RPKI-specific\
    \ signed objects.  The latter make use\n   of a common encapsulation format [RFC6488]\
    \ based on the Cryptographic\n   Message Syntax (CMS) [RFC5652].  A syntax error\
    \ in this common format\n   will cause an RP to reject the object, e.g., a ROA\
    \ or manifest, as\n   invalid.\n   Adverse actions take several forms:\n     \
    \ *  Deletion (D) is defined as removing an object from a\n         publication\
    \ point, without the permission of the INR holder.\n      *  Suppression (S) is\
    \ defined as not deleting an object, or not\n         publishing an object, as\
    \ intended by an INR holder.  This\n         action also includes retaining a\
    \ prior version of an object in\n         a publication point when a newer version\
    \ is available for\n         publication.\n      *  Corruption (C) is defined\
    \ as modification of a signed object in\n         a fashion not requiring access\
    \ to the private key used to sign\n         the object.  Thus, a corrupted object\
    \ will not carry a valid\n         signature.  Implicitly, the corrupted object\
    \ replaces the\n         legitimate version.\n      *  Modification (M) is defined\
    \ as publishing a syntactically\n         valid, verifiable version of an object\
    \ that differs from the\n         (existing) version authorized by the INR holder.\
    \  Implicitly,\n         the legitimate version of the affected object is deleted\
    \ and\n         replaced by the modified object.\n      *  Revocation (R) is defined\
    \ as revoking a certificate (EE or CA)\n         by placing its Serial Number\
    \ on the appropriate CRL, without\n         authorization of the INR holder.\n\
    \      *  Injection (I) is defined as introducing an instance of a signed\n  \
    \       object into a publication point (without authorization of the\n      \
    \   INR holder).  It assumes that the signature on the object will\n         be\
    \ viewed as valid by RPs.\n   The first three of these actions (deletion, suppression,\
    \ and\n   corruption) can be effected by any entity that manages the\n   publication\
    \ point of the affected INR holder.  Also, an entity with\n   the ability to act\
    \ as a man-in-the-middle between an RP and a\n   repository can effect these actions\
    \ with respect to the RP in\n   question.\n   The latter three actions (modification,\
    \ revocation, and injection)\n   nominally require access to the private key of\
    \ the INR holder.\n   All six of these actions also can be effected by a parent\
    \ CA.  A\n   parent CA could reissue the INR holder's CA certificate, but with\
    \ a\n   different public key, matching a private key to which the parent CA\n\
    \   has access.  The CA could generate new signed objects using the\n   private\
    \ key associated with the reissued certificate and publish\n   these objects at\
    \ a location of its choosing.\n   Most of these actions may be performed independently\
    \ or in\n   combination with one another.  For example, a ROA may be revoked and\n\
    \   deleted or revoked and replaced with a modified ROA.  Where\n   appropriate,\
    \ the analysis of adverse actions will distinguish between\n   individual actions,\
    \ or combinations thereof, that yield different\n   outcomes for RPs.  Recall\
    \ that the focus of the analysis is the\n   impact on ROAs and router certificates,\
    \ with respect to RP\n   processing.\n   The following sections examine how the\
    \ actions enumerated above\n   affect objects in the RPKI repository system. \
    \ Each action is\n   addressed in order (deletion, suppression, corruption, modification,\n\
    \   revocation, and injection) for each object, making it easy to see how\n  \
    \ each action has been considered with regard to each object.  (For the\n   Ghostbusters\
    \ Record [RFC6493], we condensed the discussion of the\n   actions because the\
    \ impact is the same in each case.)\n"
- title: 2.1.  CA Certificates
  contents:
  - "2.1.  CA Certificates\n   Every INR holder is represented by one or more CA certificates.\
    \  An\n   INR holder has multiple CA certificates if it holds resources\n   acquired\
    \ from different sources.  Also, every INR holder has more\n   than one CA certificate\
    \ during key rollover [RFC6489] and algorithm\n   rollover [RFC6916].\n   If a\
    \ publication point is not a \"leaf\" in the RPKI hierarchy, then\n   the publication\
    \ point will contain one or more CA certificates, each\n   representing a subordinate\
    \ CA.  Each subordinate CA certificate\n   contains a Subject Information Access\
    \ (SIA) pointer to the\n   publication point where the signed objects associated\
    \ with that CA\n   can be found [RFC6487].\n   A CA certificate is a complex data\
    \ structure; thus, errors in that\n   structure may have different implications\
    \ for RPs depending on the\n   specific data that is in error.\n   Adverse actions\
    \ against a CA certificate can cause the following\n   errors:\n      A-1.1  Deletion\n\
    \             A-1.1.1  Deletion of a CA certificate would cause an RP to\n   \
    \                   not be able to locate signed objects generated by\n      \
    \                that CA, except those that have been cached by the\n        \
    \              RP.  Thus, an RP would be unaware of changed or\n             \
    \         new (issued after the cached data) INR bindings\n                  \
    \    asserted in subordinate ROAs, and the RP would be\n                     \
    \ unable to validate new or changed router\n                      certificates.\
    \  If the missed objects were intended\n                      to replace ROAs\
    \ or router certificates prior to\n                      expiration, then when\
    \ those objects expire, RPs\n                      may cease to view them as valid.\
    \  As a result,\n                      valid routes may be viewed as NotFound\
    \ or Invalid.\n      A-1.2  Suppression\n             A-1.2.1  If publication\
    \ of a CA certificate is suppressed,\n                      the impact depends\
    \ on what changes appeared in the\n                      suppressed certificate.\
    \  If the SIA value changed,\n                      the effect would be the same\
    \ as in A-1.1 or\n                      A-1.4.3.  If the [RFC3779] extensions\
    \ in the\n                      suppressed certificate changed, the impact would\n\
    \                      be the same as in A-1.4.1.  If the Authority\n        \
    \              Information Access (AIA) extension changed in the\n           \
    \           suppressed certificate, the impact would be the\n                \
    \      same as in A-1.4.4.  Suppression of a renewed/\n                      re-issued\
    \ certificate may cause an old certificate\n                      to expire and\
    \ thus be rejected by RPs.\n      A-1.3  Corruption\n             A-1.3.1  Corruption\
    \ of a CA certificate will cause it to be\n                      rejected by RPs.\
    \  In turn, this may cause\n                      subordinate signed objects to\
    \ become invalid.  An\n                      RP that has cached the subtree under\
    \ the affected\n                      CA certificate may continue to view it as\
    \ valid,\n                      until objects expire.  But changed or new objects\n\
    \                      might not be retrieved, depending on details of\n     \
    \                 the design of the RP software.  Thus, this action\n        \
    \              may be equivalent to suppressing changes to the\n             \
    \         affected subtree.\n      A-1.4  Modification\n             A-1.4.1 \
    \ If a CA certificate is modified but still conforms\n                      to\
    \ the RPKI certificate profile [RFC7935], it will\n                      be accepted\
    \ by RPs.  If an [RFC3779] extension in\n                      this certificate\
    \ is changed to exclude INRs that\n                      were previously present,\
    \ then subordinate signed\n                      objects will become invalid if\
    \ they rely on the\n                      excised INRs.  If these objects are\
    \ CA\n                      certificates, their subordinate signed objects\n \
    \                     will be treated as invalid.  If the objects are\n      \
    \                ROAs, the binding expressed by the affected ROAs\n          \
    \            will be ignored by RPs.  If the objects are router\n            \
    \          certificates, BGPsec_PATH attributes [RFC8205]\n                  \
    \    verifiable under these certificates will be\n                      considered\
    \ invalid.\n             A-1.4.2  If the SIA extension of a CA certificate is\n\
    \                      modified to refer to another publication point,\n     \
    \                 this will cause an RP to look at another location\n        \
    \              for subordinate objects.  This could cause RPs to\n           \
    \           not acquire the objects that the INR holder\n                    \
    \  intended to be retrieved -- manifests, ROAs,\n                      router\
    \ certificates, Ghostbuster Records, or any\n                      subordinate\
    \ CA certificates associated with that\n                      CA.  If the objects\
    \ at this new location contain\n                      invalid signatures or appear\
    \ to be corrupted, they\n                      may be rejected.  In this case,\
    \ cached versions of\n                      the objects may be viewed as valid\
    \ by an RP, until\n                      they expire.  If the objects at the new\
    \ location\n                      have valid signatures and pass path validation\n\
    \                      checks, they will replace the cached objects,\n       \
    \               effectively replacing the INR holder's objects.\n            \
    \ A-1.4.3  If the AIA extension in a CA certificate is\n                     \
    \ modified, it would point to a different CA\n                      certificate,\
    \ not the parent CA certificate.  This\n                      extension is used\
    \ only for path discovery, not\n                      path validation.  Path discovery\
    \ in the RPKI is\n                      usually performed on a top-down basis,\
    \ starting\n                      with trust anchors (TAs) and recursively\n \
    \                     descending the RPKI hierarchy.  Thus, there may be\n   \
    \                   no impact on the ability of clients to acquire and\n     \
    \                 validate certificates if the AIA is modified.\n            \
    \ A-1.4.4  If the Subject Public Key Info (and Subject Key\n                 \
    \     Identifier extension) in a CA certificate is\n                      modified\
    \ to contain a public key corresponding to\n                      a private key\
    \ held by the parent, the parent could\n                      sign objects as\
    \ children of the affected CA\n                      certificate.  With this capability,\
    \ the parent\n                      could replace the INR holder, issuing new\
    \ signed\n                      objects that would be accepted by RPs (as long\
    \ as\n                      they do not violate the path validation criteria).\n\
    \                      This would enable the parent to effect\n              \
    \        modification, revocation, and injection actions\n                   \
    \   against all of the objects under the affected CA\n                      certificate,\
    \ including subordinate CA\n                      certificates.  (Note that key\
    \ rollover also yields\n                      a new CA certificate.  However,\
    \ the new\n                      certificate will coexist with the old one for\
    \ a\n                      while, which may help distinguish this legitimate\n\
    \                      activity from an adverse action.)\n      A-1.5  Revocation\n\
    \             A-1.5.1  If a CA certificate is revoked, an RP will treat\n    \
    \                  as invalid all subordinate signed objects, both\n         \
    \             immediate and transitive.  The effects are\n                   \
    \   essentially the same as described in A-3.4.2.\n      A-1.6  Injection\n  \
    \           A-1.6.1  If a CA certificate is injected, the impact will\n      \
    \                depend on the data contained in the injected\n              \
    \        certificate.  Changes will generally be equivalent\n                \
    \      to modification actions as described in A-1.4.\n"
- title: 2.2.  Manifest
  contents:
  - "2.2.  Manifest\n   Each repository publication point contains a manifest [RFC6486].\
    \  The\n   RPKI incorporates manifests to enable RPs to detect suppression and/\n\
    \   or substitution of (more recent) publication point objects, as the\n   result\
    \ of a mistake or attack.  A manifest enumerates (by filename)\n   all of the\
    \ other signed objects at the publication point.  The\n   manifest also contains\
    \ a hash of each enumerated file to enable an RP\n   to determine if the named\
    \ file content matches what the INR holder\n   identified in the manifest.\n \
    \  A manifest is an RPKI signed object, so it is validated as per\n   [RFC6488].\
    \  If a manifest is modified in a way that causes any of\n   these checks to fail,\
    \ the manifest will be considered invalid.\n   Suppression of a manifest itself\
    \ (indicated by a stale manifest) can\n   also cause an RP to not detect suppression\
    \ of other signed objects at\n   the publication point.  (Note that if a manifest's\
    \ EE certificate\n   expires at the time that the manifest is scheduled to be\
    \ replaced, a\n   delay in publication will cause the manifest to become invalid,\
    \ not\n   merely stale.  This very serious outcome should be avoided, e.g., by\n\
    \   making the manifest EE certificate's notAfter value the same as that\n   of\
    \ the CA certificate under which it was issued).  If a signed object\n   at a\
    \ publication point can be validated (using the rules applicable\n   for that\
    \ object type), then an RP may accept that object, even if\n   there is no matching\
    \ entry for it on the manifest.  However, it\n   appears that most RP software\
    \ ignores publication point data that\n   fails to match manifest entries (at\
    \ the time this document was\n   written).\n   Corruption, suppression, modification,\
    \ or deletion of a manifest\n   might not affect RP processing of other publication\
    \ point objects, as\n   specified in [RFC6486].  However, as noted above, many\
    \ RP\n   implementations ignore objects that are present at a publication\n  \
    \ point but not listed in a valid manifest.  Thus, the following\n   actions against\
    \ a manifest can impact RP processing:\n      A-2.1  Deletion\n             A-2.1.1\
    \  A manifest may be deleted from the indicated\n                      publication\
    \ point.  In this circumstance, an RP\n                      may elect to use\
    \ the previous manifest (if\n                      available) and may ignore any\
    \ new/changed objects\n                      at the publication point.  The implications\
    \ of\n                      this action are equivalent to suppression of\n   \
    \                   publication of the objects that are not recognized\n     \
    \                 by RPs because the new objects are not present in\n        \
    \              the old manifest.  For example, a new ROA could be\n          \
    \            ignored (A-1.2).  A newly issued CA certificate\n               \
    \       might be ignored (A-1.1).  A subordinate CA\n                      certificate\
    \ that was revoked might still be viewed\n                      as valid by RPs\
    \ (A-4.1).  A new or changed router\n                      certificate might be\
    \ ignored (A-6.2) as would a\n                      revised Ghostbusters Record\
    \ (A-4.1).\n      A-2.2  Suppression\n             A-2.2.1  Publication of a newer\
    \ manifest may be suppressed.\n                      Suppression of a newer manifest\
    \ probably will\n                      cause an RP to rely on a cached manifest\
    \ (if\n                      available).  The older manifest would not\n     \
    \                 enumerate newly added objects; thus, those objects\n       \
    \               might be ignored by an RP, which is equivalent to\n          \
    \            deletion of those objects (A-1.1, A-3.1, A-4.1,\n               \
    \       A-5.1, and A-6.1).\n      A-2.3  Corruption\n             A-2.3.1  A manifest\
    \ may be corrupted.  A corrupted manifest\n                      will be rejected\
    \ by RPs.  This may cause RPs to\n                      rely on a previous manifest,\
    \ with the same impact\n                      as A-2.2.  If an RP does not revert\
    \ to using a\n                      cached manifest, the impact of this action\
    \ is very\n                      severe, i.e., all publication point objects will\n\
    \                      probably be viewed as invalid, including\n            \
    \          subordinate tree objects.  This is equivalent to\n                \
    \      revoking or deleting an entire subtree (see\n                      A-4.4.2).\n\
    \      A-2.4  Modification\n             A-2.4.1  A manifest may be modified to\
    \ remove one or more\n                      objects.  Because the modified manifest\
    \ is viewed\n                      as valid by RPs, any objects that were removed\
    \ may\n                      be ignored by RPs.  This is equivalent to deleting\n\
    \                      these objects from the repository.  The impact of\n   \
    \                   this action will vary, depending on which objects\n      \
    \                are (effectively) removed.  However, the impact is\n        \
    \              equivalent to deletion of the object in question,\n           \
    \           (A-1.1, A-3.1, A-4.1, A-5.1, and A-6.1).\n             A-2.4.2  A\
    \ manifest may be modified to add one or more\n                      objects.\
    \  If an added object has a valid signature\n                      (and is not\
    \ expired), it will be accepted by RPs\n                      and processed accordingly.\
    \  If the added object\n                      was previously deleted by the INR\
    \ holder, this\n                      action is equivalent to suppressing deletion\
    \ of\n                      that object.  If the object is newly created or\n\
    \                      modified, it is equivalent to a modification or\n     \
    \                 injection action for the type of object in\n               \
    \       question and is thus discussed in the relevant\n                     \
    \ section for those actions for the object type.\n             A-2.4.3  A manifest\
    \ may be modified to list an incorrect\n                      hash for one or\
    \ more objects.  An object with an\n                      incorrect hash may be\
    \ ignored by an RP.  Thus, the\n                      effect may be equivalent\
    \ to corrupting the object\n                      in question, although the error\
    \ reported by RP\n                      software would differ from that reported\
    \ for a\n                      corrupted object.  (The manifest specifications\
    \ do\n                      not require an RP to ignore an object that has a\n\
    \                      valid signature and that is not revoked or\n          \
    \            expired, but for which the hash doesn't match the\n             \
    \         object.  However, an RP may elect to do so.)\n      A-2.5  Revocation\n\
    \             A-2.5.1  A manifest may be revoked (by including its EE\n      \
    \                certificate on the CRL for the publication point).\n        \
    \              A revoked manifest will be ignored by an RP, which\n          \
    \            probably would revert to an older (cached)\n                    \
    \  manifest.  The implications for RPs are equivalent\n                      to\
    \ A-2.1 with regard to new/changed objects.\n      A-2.6  Injection\n        \
    \     A-2.6.1  A manifest representing different objects may be\n            \
    \          injected into a publication point.  The effects\n                 \
    \     are the same as for a modified manifest (see\n                      above).\
    \  The impact will depend on the type of the\n                      affected object(s)\
    \ and is thus discussed in the\n                      relevant section(s) for\
    \ each object type.\n"
- title: 2.3.  Certificate Revocation List
  contents:
  - "2.3.  Certificate Revocation List\n   Each publication point contains a CRL that\
    \ enumerates revoked (not\n   yet expired) certificates issued by the CA associated\
    \ with the\n   publication point [RFC6481].\n   Adverse actions against a CRL\
    \ can cause the following errors:\n      A-3.1  Deletion\n             A-3.1.1\
    \  If a CRL is deleted, RPs will continue to use an\n                      older,\
    \ previously fetched Certificate Revocation\n                      List.  As a\
    \ result, they will not be informed of\n                      any changes in revocation\
    \ status of subordinate CA\n                      or router certificates or the\
    \ EE certificates of\n                      signed objects, e.g., ROAs.  This\
    \ action is\n                      equivalent to corruption of a CRL, since a\n\
    \                      corrupted CRL will not be accepted by an RP.\n        \
    \     A-3.1.2  Deletion of a CRL could cause an RP to continue to\n          \
    \            accept a ROA that no longer expresses the intent\n              \
    \        of an INR holder.  As a result, an announcement\n                   \
    \   for the affected prefixes would be viewed as\n                      Valid,\
    \ instead of NotFound or Invalid.  In this\n                      case, the effect\
    \ is analogous to A-5.2.\n             A-3.1.3  If a router certificate were revoked\
    \ and the CRL\n                      were deleted, RPs would not be aware of the\n\
    \                      revocation.  They might continue to accept the\n      \
    \                old, revoked router certificate.  If the\n                  \
    \    certificate had been revoked due to a compromise\n                      of\
    \ the router's private key, RPs would be\n                      vulnerable to\
    \ accepting routes signed by an\n                      unauthorized entity.\n\
    \             A-3.1.4  If a subordinate CA certificate were revoked on\n     \
    \                 the deleted CRL, the revocation would not take\n           \
    \           effect.  This could interfere with a transfer of\n               \
    \       address space from the subordinate CA, adversely\n                   \
    \   affecting routing to the new holder of the space.\n      A-3.2  Suppression\n\
    \             A-3.2.1  If publication of the most recent CRL is\n            \
    \          suppressed, an RP will not be informed of the most\n              \
    \        recent revocation status of a subordinate CA or\n                   \
    \   router certificates or the EE certificates of\n                      signed\
    \ objects.  If an EE certificate has been\n                      revoked and the\
    \ associated signed object is still\n                      present in the publication\
    \ point, an RP might\n                      mistakenly treat that object as valid.\
    \  (This\n                      would happen if the object is still in the\n \
    \                     manifest or if the RP is configured to process\n       \
    \               valid objects that are not on the manifest.)  This\n         \
    \             type of action is of special concern if the\n                  \
    \    affected object is a ROA, a router certificate, or\n                    \
    \  a subordinate CA certificate.  The effects here\n                      are\
    \ equivalent to CRL deletion (A-3.1), but\n                      suppression of\
    \ a new CRL may not even be reported\n                      as an error, i.e.,\
    \ if the suppressed CRL were\n                      issued before the NextUpdate\
    \ time (of the previous\n                      CRL).\n      A-3.3  Corruption\n\
    \             A-3.3.1  If a CRL is corrupted, an RP will reject it.  If a\n  \
    \                    prior CRL has not yet exceeded its NextUpdate\n         \
    \             time, an RP will continue to use the prior CRL.\n              \
    \        Even if the prior CRL has passed the NextUpdate\n                   \
    \   time, an RP may choose to continue to rely on the\n                      prior\
    \ CRL.  The effects are essentially equivalent\n                      to suppression\
    \ or deletion of a CRL (A-3.1 and\n                      A-3.2).\n      A-3.4\
    \  Modification\n             A-3.4.1  If a CRL is modified to erroneously list\
    \ a signed\n                      object's EE certificate as revoked, the\n  \
    \                    corresponding object will be treated as invalid by\n    \
    \                  RPs, even if it is present in a publication point.\n      \
    \                If this object is a ROA, the (legitimate) binding\n         \
    \             expressed by the ROA will be ignored by an RP (see\n           \
    \           A-5.5).  If a CRL is modified to erroneously list\n              \
    \        a router certificate as revoked, a path signature\n                 \
    \     associated with that certificate will be treated\n                     \
    \ as Not Valid by RPs (see A-6.5).\n             A-3.4.2  If a CRL is modified\
    \ to erroneously list a CA\n                      certificate as revoked, that\
    \ CA and all\n                      subordinate signed objects will be treated\
    \ as\n                      invalid by RPs.  Depending on the location of the\n\
    \                      affected CA in the hierarchy, these effects could\n   \
    \                   be very substantial, causing routes that should be\n     \
    \                 Valid to be treated as NotFound.\n             A-3.4.3  If a\
    \ CRL is modified to omit a revoked EE, router,\n                      or CA certificate,\
    \ RPs will likely continue to\n                      accept the revoked, signed\
    \ object as valid.  This\n                      contravenes the intent of the\
    \ INR holder.  If an\n                      RP continues to accept a revoked ROA,\
    \ it may make\n                      routing decisions on now-invalid data.  This\
    \ could\n                      cause valid routes to be de-preferenced and\n \
    \                     invalid routes to continue to be accepted.\n      A-3.5\
    \  Revocation\n             A-3.5.1  A CRL cannot be revoked per se, but it will\
    \ fail\n                      validation if the CA certificate under which it\n\
    \                      was issued is revoked.  See A-1.5 for a discussion\n  \
    \                    of that action.\n      A-3.6  Injection\n             A-3.6.1\
    \  Insertion of a bogus CRL can have the same effects\n                      as\
    \ listed above for a modified CRL, depending on\n                      how the\
    \ inserted CRL differs from the correct CRL.\n"
- title: 2.4.  ROA
  contents:
  - "2.4.  ROA\n   In addition to the generic RPKI object syntax checks, ROA validation\n\
    \   requires that the signature on the ROA can be validated using the\n   public\
    \ key from the EE certificate embedded in the ROA [RFC6482].  It\n   also requires\
    \ that the EE certificate be validated consistently with\n   the procedures described\
    \ in [RFC6482] and [RFC6487].  Adverse actions\n   against a ROA can cause the\
    \ following errors:\n      A-4.1  Deletion\n             A-4.1.1  A ROA may be\
    \ deleted from the indicated\n                      publication point.  The result\
    \ is to void the\n                      binding between the prefix(es) and the\
    \ Autonomous\n                      System (AS) number in the ROA.  An RP that\n\
    \                      previously viewed this binding as authentic will\n    \
    \                  now not have any evidence about its validity.  For\n      \
    \                origin validation, this means that a legitimate\n           \
    \           route will be treated as NotFound (if there are no\n             \
    \         other ROAs for the same prefix) or Invalid (if\n                   \
    \   there is another ROA for the same prefix, but with\n                     \
    \ a different AS number).\n      A-4.2  Suppression\n             A-4.2.1  Publication\
    \ of a newer ROA may be suppressed.  If\n                      the INR holder\
    \ intended to change the binding\n                      between the prefix(es)\
    \ and the AS number in the\n                      ROA, this change will not be\
    \ effected.  As a\n                      result, RPs may continue to believe an\
    \ old prefix/\n                      ASN binding that is no longer what the INR\
    \ holder\n                      intended.\n             A-4.2.2  If an INR holder\
    \ intends to issue and publish two\n                      (or more) new ROAs for\
    \ the same address space, one\n                      (or more) of the new ROAs\
    \ may be suppressed while\n                      the other is published.  In this\
    \ case, RPs will\n                      de-preference the suppressed prefix/ASN\
    \ binding.\n                      Suppression of the new ROA might cause traffic\
    \ to\n                      flow to an ASN other than the one(s) intended by\n\
    \                      the INR holder.\n             A-4.2.3  If an INR holder\
    \ intends to delete all ROAs for\n                      the same address space,\
    \ some of them may be\n                      retained while the others are deleted.\
    \  Preventing\n                      the deletion of some ROAs can cause traffic\
    \ to\n                      continue to be delivered to the ASNs that were\n \
    \                     advertised by these ROAs.  Deletion of all ROAs is\n   \
    \                   consistent with a transfer of address space to a\n       \
    \               different INR holder in a phased fashion.  Thus,\n           \
    \           this sort of attack could interfere with the\n                   \
    \   successful transfer of the affected address space\n                      (until\
    \ such time as the prefixes are removed from\n                      the previous\
    \ INR holder's CA certificate).\n      A-4.3  Corruption\n             A-4.3.1\
    \  A ROA may be corrupted.  A corrupted ROA will be\n                      ignored\
    \ by an RP, so the effect is essentially the\n                      same as for\
    \ A-4.1 and A-4.5.  A possible\n                      difference is that an RP\
    \ may be alerted to the\n                      fact that the ROA was corrupted,\
    \ which might\n                      attract attention to the attack.\n      A-4.4\
    \  Modification\n             A-4.4.1  A ROA may be modified so that the Autonomous\n\
    \                      System Number (ASN) or one or more of the address\n   \
    \                   blocks in a ROA is different from the values the\n       \
    \               INR holder intended for this ROA.  (This action\n            \
    \          assumes that the modified ROA's ASN and address\n                 \
    \     ranges are authorized for use by the INR holder.)\n                    \
    \  This attack will cause RPs to de-preference the\n                      legitimate\
    \ prefix/ASN binding intended by the INR\n                      holder.\n    \
    \  A-4.5  Revocation\n             A-4.5.1  A ROA may be revoked (by placing its\
    \ EE\n                      certificate on the CRL for the publication point).\n\
    \                      This has the same effect as A-4.1.\n      A-4.6  Injection\n\
    \             A-4.6.1  A ROA expressing different bindings than those\n      \
    \                published by the INR holder may be injected into a\n        \
    \              publication point.  This action could authorize an\n          \
    \            additional ASN to advertise the specified prefix,\n             \
    \         allowing that ASN to originate routes for the\n                    \
    \  prefix, thus enabling route origin spoofing.  In\n                      this\
    \ case, the injected ROA is considered to be in\n                      competition\
    \ with any existing authorized ROAs for\n                      the specified prefix.\n\
    \             A-4.6.2  An injected ROA might express a different prefix\n    \
    \                  for an ASN already authorized to originate a\n            \
    \          route, e.g., a longer prefix, which could enable\n                \
    \      that ASN to override other advertisements using\n                     \
    \ shorter prefixes.  If there are other ROAs that\n                      authorize\
    \ different ASNs to advertise routes to\n                      the injected ROA's\
    \ prefix, then the injected ROA\n                      is in competition with\
    \ these ROAs.\n"
- title: 2.5.  Ghostbusters Record
  contents:
  - "2.5.  Ghostbusters Record\n   The Ghostbusters Record [RFC6493] is a signed object\
    \ that may be\n   included at a publication point, at the discretion of the INR\
    \ holder\n   or publication point operator.  The record is validated according\
    \ to\n   [RFC6488].  Additionally, the syntax of the record is verified based\n\
    \   on the vCard profile from Section 5 of [RFC6493].  Errors in this\n   record\
    \ do not affect RP processing.  However, if an RP encounters a\n   problem with\
    \ objects at a publication point, the RP may use\n   information from the record\
    \ to contact the publication point\n   operator.\n   Adverse actions against a\
    \ Ghostbusters Record can cause the following\n   error:\n      A-5.1  Deletion,\
    \ suppression, corruption, or revocation of a\n             Ghostbusters Record\
    \ could prevent an RP from contacting the\n             appropriate entity when\
    \ a problem is detected by the RP.\n             Modification or injection of\
    \ a Ghostbusters Record could\n             cause an RP to contact the wrong entity,\
    \ thus delaying\n             remediation of a detected anomaly.  All of these\
    \ actions\n             are viewed as equivalent from an RP processing perspective;\n\
    \             they do not alter RP validation of ROAs or router\n            \
    \ certificates.  However, these actions can interfere with\n             remediation\
    \ of a problem when detected by an RP.\n"
- title: 2.6.  Router Certificates
  contents:
  - "2.6.  Router Certificates\n   Router certificates are used by RPs to verify signatures\
    \ on\n   BGPsec_PATH attributes carried in UPDATE messages.\n   Each AS is free\
    \ to determine the granularity at which router\n   certificates are managed [RFC8209].\
    \  Each participating AS is\n   represented by one or more router certificates.\
    \  During key or\n   algorithm rollover, multiple router certificates will be\
    \ present in a\n   publication point, even if the AS is normally represented by\
    \ just one\n   such certificate.\n   Adverse actions against router certificates\
    \ can cause the following\n   errors:\n      A-6.1  Deletion\n             A-6.1.1\
    \  Deletion of a router certificate would cause an RP\n                      to\
    \ be unable to verify signatures applied to\n                      BGPsec_PATH\
    \ attributes on behalf of the AS in\n                      question.  In turn,\
    \ this would cause the route to\n                      be treated with lower preference\
    \ than competing\n                      routes that have valid BGPsec_PATH attribute\n\
    \                      signatures.  (However, if another router\n            \
    \          certificate for the affected AS is valid and\n                    \
    \  contains the same AS number and public key, and it\n                      is\
    \ in use by that AS, there would be no effect on\n                      routing.\
    \  This scenario will arise if a router\n                      certificate is\
    \ renewed, i.e., issued with a new\n                      validity interval.)\n\
    \      A-6.2  Suppression\n             A-6.2.1  Suppression of a router certificate\
    \ could have the\n                      same impact as deletion of a certificate\
    \ of this\n                      type, i.e., if no router certificate was\n  \
    \                    available, BGPsec attributes that should be\n           \
    \           verified using the certificate would fail\n                      validation.\
    \  If an older certificate existed and\n                      has not expired,\
    \ it would be used by RPs.  If the\n                      older certificate contained\
    \ a different ASN, the\n                      impact would be the same as in A-6.4.\n\
    \      A-6.3  Corruption\n             A-6.3.1  Corruption of a router certificate\
    \ will result in\n                      the certificate being rejected by RPs.\
    \  Absent a\n                      valid router certificate, BGPsec_PATH attributes\n\
    \                      associated with that certificate will be\n            \
    \          unverifiable.  In turn, this would cause the route\n              \
    \        to be treated with lower preference than competing\n                \
    \      routes that have valid BGPsec_PATH attribute\n                      signatures.\n\
    \      A-6.4  Modification\n             A-6.4.1  If a router certificate is modified\
    \ to represent a\n                      different ASN, but it still passes syntax\
    \ checks,\n                      then this action could cause signatures on\n\
    \                      BGPsec_PATH attributes to be associated with the\n    \
    \                  wrong AS.  This could cause signed routes to be\n         \
    \             inconsistent with the intent of the INR holder,\n              \
    \        e.g., traffic might be routed via a different AS\n                  \
    \    than intended.\n      A-6.5  Revocation\n             A-6.5.1  If a router\
    \ certificate were revoked, BGPsec_PATH\n                      attributes verifiable\
    \ using that certificate would\n                      no longer be considered\
    \ valid.  The impact would\n                      be the same as for a deleted\
    \ certificate, as\n                      described in A-6.1.\n      A-6.6  Injection\n\
    \             A-6.6.1  Insertion of a router certificate could authorize\n   \
    \                   additional routers to sign BGPsec traffic for the\n      \
    \                targeted ASN, and thus undermine fundamental\n              \
    \        BGPsec security guarantees.  If there are\n                      existing,\
    \ authorized router certificates for the\n                      same ASN, then\
    \ the injected router certificate is\n                      in competition with\
    \ these existing certificates.\n"
- title: 3.  Analysis of Actions Relative to Scenarios
  contents:
  - "3.  Analysis of Actions Relative to Scenarios\n   This section examines the types\
    \ of problems that can arise in four\n   scenarios described below.  We consider\
    \ mistakes, (successful)\n   attacks against a CA or a publication point, and\
    \ situations in which\n   a CA or publication point manager is compelled to take\
    \ action by a\n   law enforcement authority.\n   We explore the following four\
    \ scenarios:\n      A.  An INR holder operates its own CA and manages its own\n\
    \          repository publication point.\n      B.  An INR holder operates its\
    \ own CA, but outsources management\n          of its repository publication point\
    \ to its parent or another\n          entity.\n      C.  An INR holder outsources\
    \ management of its CA to its parent,\n          but manages its own repository\
    \ publication point.\n      D.  An INR holder outsources management of its CA\
    \ and its\n          publication point to its parent.\n   Note that these scenarios\
    \ focus on the affected INR holder as the\n   party directly affected by an adverse\
    \ action.  The most serious cases\n   arise when the INR holder appears as a high-tier\
    \ CA in the RPKI\n   hierarchy; in such situations, subordinate INR holders may\
    \ be\n   affected as a result of an action.  A mistake by or an attack against\n\
    \   a \"leaf\" has more limited impact because all of the affected INRs\n   belong\
    \ to the INR holder itself.\n   In Scenario A, actions by the INR holder can adversely\
    \ affect all of\n   its resources and, transitively, resources of any subordinate\
    \ CAs.\n   (If the CA is a \"leaf\" in the RPKI, then it has no subordinate CAs\n\
    \   and the damage is limited to its own INRs.)\n   In Scenario B, actions by\
    \ the (outsourced) repository operator can\n   also adversely affect the resources\
    \ of the INR holder and those of\n   any subordinates CAs.  (If the CA is a \"\
    leaf\" in the RPKI, then it\n   has no subordinate CAs and the damage is limited,\
    \ as in Scenario A.)\n   The range of adverse effects here includes those in Scenario\
    \ A and\n   adds a new potential source of adverse actions, i.e., the outsourced\n\
    \   repository operator.\n   In Scenario C, all signed objects associated with\
    \ the INR holder are\n   generated by the parent CA but are self-hosted.  (We\
    \ expect this\n   scenario to be rare, because an INR holder that elects to outsource\n\
    \   CA operation seems unlikely to manage its own repository publication\n   point.)\
    \  Because that CA has the private key used to sign them, it\n   can generate\
    \ alternative signed objects -- ones not authorized by the\n   INR holder.  However,\
    \ erroneous objects created by the parent CA will\n   not be published by the\
    \ INR holder IF the holder checks them first.\n   Because the parent CA is acting\
    \ on behalf of the INR holder, mistakes\n   by or attacks against that entity\
    \ are equivalent to ones effected by\n   the INR holder in Scenario A.\n   The\
    \ INR holder is most vulnerable in Scenario D.  Actions by the\n   parent CA,\
    \ acting on behalf of the INR holder, can adversely affect\n   all signed objects\
    \ associated with that INR holder, including any\n   subordinate CA certificates.\
    \  These actions will presumably translate\n   directly into publication point\
    \ changes because the parent CA is\n   managing the publication point for the\
    \ INR holder.  The range of\n   adverse effects here includes those in Scenarios\
    \ A, B, and C.\n"
- title: 3.1.  Scenario A
  contents:
  - "3.1.  Scenario A\n   In this scenario, the INR holder acts as its own CA and\
    \ it manages\n   its own publication point.  Actions by the INR holder can adversely\n\
    \   affect all of its resources and, transitively, resources of any\n   subordinate\
    \ CAs.  (If the CA is a \"leaf\" in the RPKI, then it has no\n   subordinate CAs\
    \ and the damage is limited to its own INRs.)  Mistakes\n   by the INR holder\
    \ can cause any of the actions noted in Section 2.  A\n   successful attack against\
    \ this CA can effect all of the modification,\n   revocation, or injection actions\
    \ noted in that section.  (We assume\n   that objects generated by the CA are\
    \ automatically published).  An\n   attack against the publication point can effect\
    \ all of the deletion,\n   suppression, or corruption actions noted in that section.\n"
- title: 3.2.  Scenario B
  contents:
  - "3.2.  Scenario B\n   In this scenario, the INR holder acts as its own CA but\
    \ it delegates\n   management of it own publication point to a third party.  Mistakes\
    \ by\n   the INR holder can cause any of the modification, revocation, or\n  \
    \ injection actions described in Section 2.  Actions by the repository\n   operator\
    \ can adversely affect the resources of the INR holder, and\n   those of any subordinate\
    \ CAs.  (If the CA is a \"leaf\" in the RPKI,\n   then it has no subordinate CAs\
    \ and the damage is limited, as in\n   Scenario A.)  The range of adverse effects\
    \ here includes those in\n   Scenario A, and adds a new potential source of adverse\
    \ actions, i.e.,\n   the third party repository operator.  A successful attack\
    \ against the\n   CA can effect all of the modification, revocation, or injection\n\
    \   actions noted in that section (assuming that objects generated by the\n  \
    \ CA are automatically published).  Here, actions by the publication\n   point\
    \ manager (or attacks against that entity) can effect all of the\n   deletion,\
    \ suppression, or corruption actions noted in Section 2.\n"
- title: 3.3.  Scenario C
  contents:
  - "3.3.  Scenario C\n   In this scenario, the INR holder outsources management of\
    \ its CA to\n   its parent, but manages its own repository publication point.\
    \  All\n   signed objects associated with the INR holder are generated by the\n\
    \   parent CA but are self-hosted.  (We expect this scenario to be rare,\n   because\
    \ an INR holder that elects to outsource CA operation seems\n   unlikely to manage\
    \ its own repository publication point.)  Because\n   that CA has the private\
    \ key used to sign them, it can generate\n   alternative signed objects -- ones\
    \ not authorized by the INR holder.\n   However, erroneous objects created by\
    \ the parent CA will not be\n   published by the INR holder IF the holder checks\
    \ them first.  Because\n   the parent CA is acting on behalf of the INR holder,\
    \ mistakes by or\n   attacks against that entity are equivalent to ones effected\
    \ by the\n   INR holder in Scenario A.  Mistakes by the INR holder, acted upon\
    \ by\n   the parent CA, can cause any of the actions noted in Section 2.\n   Actions\
    \ unilaterally undertaken by the parent CA also can have the\n   same effect,\
    \ unless the INR holder checks the signed objects before\n   publishing them.\
    \  A successful attack against the parent CA can\n   effect all of the modification,\
    \ revocation, or injection actions\n   noted in Section 2, unless the INR holder\
    \ checks the signed objects\n   before publishing them.  An attack against the\
    \ INR holder (in its\n   role as repository operator) can effect all of the deletion,\n\
    \   suppression, or corruption actions noted in Section 2 (because the\n   INR\
    \ holder is managing its publication point), unless the INR holder\n   checks\
    \ the signed objects before publishing them.  (An attack against\n   the INR holder\
    \ implies that the path it uses to direct the parent CA\n   to issue and publish\
    \ objects has been compromised.)\n"
- title: 3.4.  Scenario D
  contents:
  - "3.4.  Scenario D\n   In this scenario, an INR holder outsources management of\
    \ both its CA\n   and its publication point to its parent.  The INR holder is\
    \ most\n   vulnerable in this scenario.  Actions by the parent CA, acting on\n\
    \   behalf of the INR holder, can adversely affect all signed objects\n   associated\
    \ with that INR holder, including any subordinate CA\n   certificates.  These\
    \ actions will presumably translate directly into\n   publication point changes,\
    \ because the parent CA is managing the\n   publication point for the INR holder.\
    \  The range of adverse effects\n   here includes those in Scenarios A, B, and\
    \ C.  Mistakes by the INR\n   holder, acted upon by the parent CA, can cause any\
    \ of the actions\n   noted in Section 2.  Actions unilaterally undertaken by the\
    \ parent CA\n   also can have the same effect.  A successful attack against the\n\
    \   parent CA can effect all of the modification, revocation, or\n   injection\
    \ actions noted in Section 2.  An attack against the parent\n   CA can also effect\
    \ all of the deletion, suppression, or corruption\n   actions noted in Section\
    \ 2 (because the parent CA is managing the INR\n   holder's publication point).\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This informational document describes a threat\
    \ model for the RPKI,\n   focusing on mistakes by or attacks against CAs and independent\n\
    \   repository managers.  It is intended to provide a basis for the\n   design\
    \ of future RPKI security mechanisms that seek to address the\n   concerns associated\
    \ with such actions.\n   The analysis in this document identifies a number of\
    \ circumstances in\n   which attacks or errors can have significant impacts on\
    \ routing.  One\n   ought not interpret this as a condemnation of the RPKI.  It\
    \ is only\n   an attempt to document the implications of a wide range of attacks\n\
    \   and errors in the context of the RPKI.  The primary alternative\n   mechanism\
    \ for disseminating routing information is Internet Routing\n   Registry (IRR)\
    \ technology [RFC2650] [RFC2725], which uses the Routing\n   Policy Specification\
    \ Language (RPSL) [RFC2622].  IRR technology\n   exhibits its own set of security\
    \ problems, which are discussed in\n   [RFC7682].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC3779]  Lynn, C., Kent, S., and K. Seo, \"\
    X.509 Extensions for IP\n              Addresses and AS Identifiers\", RFC 3779,\n\
    \              DOI 10.17487/RFC3779, June 2004,\n              <https://www.rfc-editor.org/info/rfc3779>.\n\
    \   [RFC6480]  Lepinski, M. and S. Kent, \"An Infrastructure to Support\n    \
    \          Secure Internet Routing\", RFC 6480, DOI 10.17487/RFC6480,\n      \
    \        February 2012, <https://www.rfc-editor.org/info/rfc6480>.\n   [RFC6481]\
    \  Huston, G., Loomans, R., and G. Michaelson, \"A Profile for\n             \
    \ Resource Certificate Repository Structure\", RFC 6481,\n              DOI 10.17487/RFC6481,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6481>.\n \
    \  [RFC6482]  Lepinski, M., Kent, S., and D. Kong, \"A Profile for Route\n   \
    \           Origin Authorizations (ROAs)\", RFC 6482,\n              DOI 10.17487/RFC6482,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6482>.\n \
    \  [RFC6483]  Huston, G. and G. Michaelson, \"Validation of Route\n          \
    \    Origination Using the Resource Certificate Public Key\n              Infrastructure\
    \ (PKI) and Route Origin Authorizations\n              (ROAs)\", RFC 6483, DOI\
    \ 10.17487/RFC6483, February 2012,\n              <https://www.rfc-editor.org/info/rfc6483>.\n\
    \   [RFC6486]  Austein, R., Huston, G., Kent, S., and M. Lepinski,\n         \
    \     \"Manifests for the Resource Public Key Infrastructure\n              (RPKI)\"\
    , RFC 6486, DOI 10.17487/RFC6486, February 2012,\n              <https://www.rfc-editor.org/info/rfc6486>.\n\
    \   [RFC6487]  Huston, G., Michaelson, G., and R. Loomans, \"A Profile for\n \
    \             X.509 PKIX Resource Certificates\", RFC 6487,\n              DOI\
    \ 10.17487/RFC6487, February 2012,\n              <https://www.rfc-editor.org/info/rfc6487>.\n\
    \   [RFC6488]  Lepinski, M., Chi, A., and S. Kent, \"Signed Object\n         \
    \     Template for the Resource Public Key Infrastructure\n              (RPKI)\"\
    , RFC 6488, DOI 10.17487/RFC6488, February 2012,\n              <https://www.rfc-editor.org/info/rfc6488>.\n\
    \   [RFC6489]  Huston, G., Michaelson, G., and S. Kent, \"Certification\n    \
    \          Authority (CA) Key Rollover in the Resource Public Key\n          \
    \    Infrastructure (RPKI)\", BCP 174, RFC 6489,\n              DOI 10.17487/RFC6489,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6489>.\n \
    \  [RFC6493]  Bush, R., \"The Resource Public Key Infrastructure (RPKI)\n    \
    \          Ghostbusters Record\", RFC 6493, DOI 10.17487/RFC6493,\n          \
    \    February 2012, <https://www.rfc-editor.org/info/rfc6493>.\n   [RFC6916] \
    \ Gagliano, R., Kent, S., and S. Turner, \"Algorithm Agility\n              Procedure\
    \ for the Resource Public Key Infrastructure\n              (RPKI)\", BCP 182,\
    \ RFC 6916, DOI 10.17487/RFC6916, April\n              2013, <https://www.rfc-editor.org/info/rfc6916>.\n\
    \   [RFC7935]  Huston, G. and G. Michaelson, Ed., \"The Profile for\n        \
    \      Algorithms and Key Sizes for Use in the Resource Public\n             \
    \ Key Infrastructure\", RFC 7935, DOI 10.17487/RFC7935,\n              August\
    \ 2016, <https://www.rfc-editor.org/info/rfc7935>.\n   [RFC8205]  Lepinski, M.,\
    \ Ed. and K. Sriram, Ed., \"BGPsec Protocol\n              Specification\", RFC\
    \ 8205, DOI 10.17487/RFC8205, September\n              2017, <https://www.rfc-editor.org/info/rfc8205>.\n\
    \   [RFC8209]  Reynolds, M., Turner, S., and S. Kent, \"A Profile for\n      \
    \        BGPsec Router Certificates, Certificate Revocation Lists,\n         \
    \     and Certification Requests\", RFC 8209,\n              DOI 10.17487/RFC8209,\
    \ September 2017,\n              <https://www.rfc-editor.org/info/rfc8209>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2622]  Alaettinoglu, C., Villamizar, C.,\
    \ Gerich, E., Kessens, D.,\n              Meyer, D., Bates, T., Karrenberg, D.,\
    \ and M. Terpstra,\n              \"Routing Policy Specification Language (RPSL)\"\
    , RFC 2622,\n              DOI 10.17487/RFC2622, June 1999,\n              <https://www.rfc-editor.org/info/rfc2622>.\n\
    \   [RFC2650]  Meyer, D., Schmitz, J., Orange, C., Prior, M., and C.\n       \
    \       Alaettinoglu, \"Using RPSL in Practice\", RFC 2650,\n              DOI\
    \ 10.17487/RFC2650, August 1999,\n              <https://www.rfc-editor.org/info/rfc2650>.\n\
    \   [RFC2725]  Villamizar, C., Alaettinoglu, C., Meyer, D., and S.\n         \
    \     Murphy, \"Routing Policy System Security\", RFC 2725,\n              DOI\
    \ 10.17487/RFC2725, December 1999,\n              <https://www.rfc-editor.org/info/rfc2725>.\n\
    \   [RFC5652]  Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70,\n\
    \              RFC 5652, DOI 10.17487/RFC5652, September 2009,\n             \
    \ <https://www.rfc-editor.org/info/rfc5652>.\n   [RFC7132]  Kent, S. and A. Chi,\
    \ \"Threat Model for BGP Path Security\",\n              RFC 7132, DOI 10.17487/RFC7132,\
    \ February 2014,\n              <https://www.rfc-editor.org/info/rfc7132>.\n \
    \  [RFC7682]  McPherson, D., Amante, S., Osterweil, E., Blunk, L., and\n     \
    \         D. Mitchell, \"Considerations for Internet Routing\n              Registries\
    \ (IRRs) and Routing Policy Configuration\",\n              RFC 7682, DOI 10.17487/RFC7682,\
    \ December 2015,\n              <https://www.rfc-editor.org/info/rfc7682>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors thank Richard Hansen and David Mandelberg for\
    \ their\n   extensive review, feedback, and editorial assistance.  Thanks also\
    \ go\n   to Daiming Li for her editorial assistance.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephen Kent\n   BBN Technologies\n   10 Moulton St\n\
    \   Cambridge, MA  02138-1119\n   United States of America\n   Email: kent@alum.mit.edu\n\
    \   Di Ma\n   ZDNS\n   4 South 4th St. Zhongguancun\n   Haidian, Beijing  100190\n\
    \   China\n   Email: madi@zdns.cn\n"
