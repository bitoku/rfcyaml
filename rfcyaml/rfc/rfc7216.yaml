- contents:
  - "              Location Information Server (LIS) Discovery\n                   Using
    IP Addresses and Reverse DNS\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The residential gateway is a device that has become an integral
    part\n   of home networking equipment.  Discovering a Location Information\n   Server
    (LIS) is a necessary part of acquiring location information\n   for location-based
    services.  However, discovering a LIS when a\n   residential gateway is present
    poses a configuration challenge,\n   requiring a method that is able to work around
    the obstacle presented\n   by the gateway.\n   This document describes a solution
    to this problem.  The solution\n   provides alternative domain names as input
    to the LIS discovery\n   process based on the network addresses assigned to a
    Device.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7216.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   4\n   3.  Problem Statement . . . . . . . . . . . . . . . . . . . . .
    .   4\n     3.1.  Residential Gateway . . . . . . . . . . . . . . . . . . .   6\n
    \    3.2.  Security Features of Residential Gateways . . . . . . . .   7\n   4.
    \ IP-based DNS Solution . . . . . . . . . . . . . . . . . . . .   7\n     4.1.
    \ Identification of IP Addresses  . . . . . . . . . . . . .   8\n     4.2.  Domain
    Name Selection . . . . . . . . . . . . . . . . . .   9\n     4.3.  Shortened DNS
    Names . . . . . . . . . . . . . . . . . . .   9\n     4.4.  When To Use the Reverse
    DNS Method  . . . . . . . . . . .  10\n     4.5.  Private Address Spaces  . .
    . . . . . . . . . . . . . . .  10\n     4.6.  Necessary Assumptions and Restrictions
    \ . . . . . . . . .  11\n     4.7.  Failure Modes . . . . . . . . . . . . . .
    . . . . . . . .  12\n     4.8.  Deployment Considerations . . . . . . . . . .
    . . . . . .  12\n   5.  Privacy Considerations  . . . . . . . . . . . . . . .
    . . . .  13\n   6.  Security Considerations . . . . . . . . . . . . . . . . .
    . .  13\n   7.  IAB Considerations  . . . . . . . . . . . . . . . . . . . . .
    \ 15\n   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  16\n
    \  9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  16\n     9.1.
    \ Normative References  . . . . . . . . . . . . . . . . . .  16\n     9.2.  Informative
    References  . . . . . . . . . . . . . . . . .  16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   A Location Information Server (LIS) is a service provided
    by an\n   access network.  The LIS uses knowledge of the access network\n   topology
    and other information to generate location information for\n   Devices.  Devices
    within an access network are able to acquire\n   location information from a LIS.\n
    \  The relationship between a Device and an access network might be\n   transient.
    \ Configuration of the correct LIS at the Device ensures\n   that accurate location
    information is available.  Without location\n   information, some network services
    are not available.\n   The configuration of a LIS IP address on a Device requires
    some\n   automated process.  This is particularly relevant when one considers\n
    \  that Devices might move between different access networks served by\n   different
    LISs.  LIS Discovery [RFC5986] describes a method that\n   employs the Dynamic
    Host Configuration Protocol (DHCPv4 [RFC2131],\n   DHCPv6 [RFC3315]) as input
    to U-NAPTR [RFC4848] discovery.\n   A residential gateway, or home router, provides
    a range of networking\n   functions for Devices within the network it serves.
    \ Unfortunately,\n   in most cases these functions effectively prevent the successful
    use\n   of DHCP for LIS discovery.\n   One drawback with DHCP is that universal
    deployment of a new option\n   takes a considerable amount of time.  Often, networking
    equipment\n   needs to be updated in order to support the new option.  Of\n   particular
    concern are the millions of residential gateway devices\n   used to provide Internet
    access to homes and businesses.  While\n   [RFC5986] describes functions that
    can be provided by residential\n   gateways to support LIS discovery, gateways
    built before the\n   publication of this specification are not expected (and are
    likely\n   not able) to provide these functions.\n   This document explores the
    problem of configuring Devices with a LIS\n   address when a residential gateway
    is interposed between the Device\n   and access network.  Section 3 defines the
    problem, and Section 4\n   describes a method for determining a domain name that
    can be used for\n   discovery of the LIS.\n   In some cases, the solution described
    in this document is based on a\n   UNilateral Self-Address Fixing (UNSAF) [RFC3424]
    method.  For those\n   cases, this solution is considered transitional until such
    time as\n   the recommendations for residential gateways in [RFC5986] are more\n
    \  widely deployed.  Considerations relating to UNSAF applications are\n   described
    in Section 7.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   This document uses terminology established in [RFC6280] and\n
    \  [RFC5012].  The terms \"Device\" and \"LIS\" are capitalized throughout\n   when
    they are used to identify the roles defined in [RFC6280].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Problem Statement\n   Figure 1 shows a simplified network topology for fixed
    wire-line\n   Internet access.  This arrangement is typical when wired Internet\n
    \  access is provided.  The diagram shows two network segments: the\n   access
    network provided by an Internet service provider (ISP), and\n   the residential
    network served by the residential gateway.\n   There are a number of variations
    on this arrangement, as documented\n   in Section 3.1 of [RFC5687].  In each of
    these variations, the goal\n   of LIS discovery is to identify the LIS in the
    access network.\n                    ________\n                  (/        \\)\n
    \                (( Internet ))\n                  (\\________/)\n                       |\n
    \                      |\n                 .- - -|- - - - - - - - - - - -.\n                (
    \     |                        )\n               (   +--------+       +-------+
    \   )\n     Access    (   | Access |. . . .|  LIS  |    )\n     Network   (   |
    \ Node  |       |       |    )\n      (ISP)    (   +--------+       +-------+
    \   )\n                (       \\               \\       )\n                 `-
    - - -\\- - - - - - - -\\- - -'\n                          \\               \\\n
    \                          \\               |\n                  .- - - - -\\-
    - - - - - - + -.\n                 (           \\             |   )\n                (
    \     +-------------+     :    )\n                (      | Residential |     |
    \   )\n    Residential (      |   Gateway   |     :    )\n      Network   (      +-------------+
    \    |    )\n                (         /        \\      /     )\n                (
    \       /          \\    /      )\n                (   +--------+    +--------+
    \   )\n                (   | Device |    | Device |    )\n                (   +--------+
    \   +--------+    )\n                 (                             )\n                  `-
    - - - - - - - - - - - - -'\n                   Figure 1: Simplified Network Topology\n
    \  A particularly important characteristic of this arrangement is the\n   relatively
    small geographical area served by the residential gateway.\n   Given a small enough
    area, it is reasonable to delegate the\n   responsibility for providing Devices
    within the residential network\n   with location information to the ISP.  The
    ISP is able to provide\n   location information that identifies the residence,
    which should be\n   adequate for a wide range of purposes.\n   A residential network
    that covers a larger geographical area might\n   require a dedicated LIS, a case
    that is outside the scope of this\n   document.\n   The goal of LIS discovery
    is to identify a LIS that is able to\n   provide the Device with accurate location
    information.  In the\n   network topology described, this means identifying the
    LIS in the\n   access network.  The residential gateway is a major obstacle in\n
    \  achieving this goal.\n"
  - contents:
    - "3.1.  Residential Gateway\n   A residential gateway can encompass several different
      functions\n   including: modem, Ethernet switch, wireless access point, router,\n
      \  network address translation (NAT), DHCP server, DNS relay, and\n   firewall.
      \ Of the common functions provided, the NAT function of a\n   residential gateway
      has the greatest impact on LIS discovery.\n   An ISP is typically parsimonious
      about their IP address allocations;\n   each customer is allocated a limited
      number of IP addresses.\n   Therefore, NAT is an extremely common function of
      gateways.  NAT\n   enables the use of multiple Devices within the residential
      network.\n   However, NAT also means that Devices within the residence are not\n
      \  configured by the ISP directly.\n   When it comes to discovering a LIS, the
      fact that Devices are not\n   configured by the ISP causes a significant problem.
      \ Configuration is\n   the ideal method of conveying the information necessary
      for\n   discovery.  Devices attached to residential gateways are usually\n   given
      a generic configuration that includes no information about the\n   ISP network.
      \ For instance, DNS configuration typically points to a\n   DNS relay on the
      gateway device.  This approach ensures that the\n   local network served by
      the gateway is able to operate without a\n   connection to the ISP, but it also
      means that Devices are effectively\n   ignorant of the ISP network.\n   [RFC5986]
      describes several methods that can be applied by a\n   residential gateway to
      assist Devices in acquiring location\n   information.  For instance, the residential
      gateway could forward LIS\n   address information to hosts within the network
      it serves.\n   Unfortunately, such an active involvement in the discovery process\n
      \  only works for new residential gateway devices that implement those\n   recommendations.\n
      \  Where residential gateways already exist, direct involvement of the\n   gateway
      in LIS discovery requires that the residential gateway be\n   updated or replaced.
      \ The cost of replacement is difficult to justify\n   to the owner of the gateway,
      especially when it is considered that\n   the gateway still fills its primary
      function: Internet access.\n   Furthermore, updating the software in such devices
      is not feasible in\n   many cases.  Even if software updates were made available,
      many\n   residential gateways cannot be updated remotely, inevitably leading\n
      \  to some proportion that is not updated.\n   This document therefore describes
      a method that can be used by\n   Devices to discover their LIS without any assistance
      from the\n   network.\n"
    title: 3.1.  Residential Gateway
  - contents:
    - "3.2.  Security Features of Residential Gateways\n   A network firewall function
      is often provided by residential gateways\n   as a security measure.  Security
      features like intrusion detection\n   systems help protect users from attacks.
      \ Amongst these protections\n   is a port filter that prevents both inbound
      and outbound traffic on\n   certain TCP and UDP ports.  Therefore, any solution
      needs to consider\n   the likelihood of traffic being blocked.\n"
    title: 3.2.  Security Features of Residential Gateways
  title: 3.  Problem Statement
- contents:
  - "4.  IP-based DNS Solution\n   LIS discovery [RFC5986] uses a DNS-based Dynamic
    Delegation Discovery\n   Service (DDDS) system as the basis of discovery.  Input
    to this\n   process is a domain name.  Use of DHCP for acquiring the domain name\n
    \  is specified, but alternative methods of acquisition are permitted.\n   This
    document specifies a means for a Device to discover several\n   alternative domain
    names that can be used as input to the DDDS\n   process.  These domain names are
    based on the IP address of the\n   Device.  Specifically, the domain names are
    a portion of the reverse\n   DNS trees -- either the \".in-addr.arpa.\" or \".ip6.arpa.\"
    tree.\n   The goal of this process is to make a small number of DDDS queries in\n
    \  order to find a LIS.  After LIS discovery using the DHCP-based\n   process
    in [RFC5986] has failed, a Device can:\n   1.  Collect a set of IP addresses that
    refer to the Device\n       (Section 4.1).\n   2.  Convert each IP address into
    DNS names in the \"in-addr.arpa.\" or\n       \"ip6.arpa.\" tree (Section 4.2).\n
    \  3.  Perform the DDDS process for LIS discovery on those DNS names\n       ([RFC5986]).\n
    \  4.  Shorten the DNS names by some number of labels and repeat the\n       DDDS
    process (Section 4.3).\n   A Device might be reachable at one of a number of IP
    addresses.  In\n   the process described, a Device first identifies each IP address
    from\n   which it is potentially reachable.  From each of these addresses, the\n
    \  Device then selects up to three domain names for use in discovery.\n   These
    domain names are then used as input to the DDDS process.\n"
  - contents:
    - "4.1.  Identification of IP Addresses\n   A Device identifies a set of potential
      IP addresses that currently\n   result in packets being routed to it.  These
      are ordered by\n   proximity, with those addresses that are used in adjacent
      network\n   segments being favored over those used in public or remote networks.\n
      \  The first addresses in the set are those that are assigned to local\n   network
      interfaces.\n   A Device can use the Session Traversal Utilities for NAT (STUN)\n
      \  [RFC5389] mechanism to determine its public, reflexive transport\n   address.
      \ The host uses the \"Binding Request\" message and the\n   resulting \"XOR-MAPPED-ADDRESS\"
      parameter that is returned in the\n   response.\n   Alternative methods for
      determining other IP addresses MAY be used by\n   the Device.  If enabled, the
      Port Control Protocol (PCP) [RFC6887],\n   Universal Plug and Play (UPnP) [UPnP-IGD-WANIPConnection1],
      and NAT\n   Port Mapping Protocol (NAT-PMP) [RFC6886] are each able to provide\n
      \  the external address of a residential gateway device.  These, as well\n   as
      proprietary methods for determining other addresses, might be\n   available.
      \ Because there is no assurance that these methods will be\n   supported by
      any access network, these methods are not mandated.\n   Note also that in some
      cases, methods that rely on the view of the\n   network from the residential
      gateway device could reveal an address\n   in a private address range (see Section
      4.6).\n   In many instances, the IP address produced might be from a private\n
      \  address range.  For instance, the address on a local network\n   interface
      could be from a private range allocated by the residential\n   gateway.  In
      other cases, methods that rely on the view of the\n   network (UPnP, NAT-PMP)
      from the residential gateway device could\n   reveal an address in a private
      address range if the access network\n   also uses NAT.  For a private IP address,
      the derived domain name is\n   only usable where the employed DNS server contains
      data for the\n   corresponding private IP address range.\n"
    title: 4.1.  Identification of IP Addresses
  - contents:
    - "4.2.  Domain Name Selection\n   The domain name selected for each resulting
      IP address is the name\n   that would be used for a reverse DNS lookup.  The
      domain name derived\n   from an IP version 4 address is in the \".in-addr.arpa.\"
      tree and\n   follows the construction rules in Section 3.5 of [RFC1035].  The\n
      \  domain name derived from an IP version 6 address is in the\n   \".ip6.arpa.\"
      tree and follows the construction rules in Section 2.5\n   of [RFC3596].\n"
    title: 4.2.  Domain Name Selection
  - contents:
    - "4.3.  Shortened DNS Names\n   Additional domain names are added to allow for
      a single DNS record to\n   cover a larger set of addresses.  If the search on
      the domain derived\n   from the full IP address does not produce a NAPTR record
      with the\n   desired service tag (e.g., \"LIS:HELD\"), a similar search is repeated\n
      \  based on a shorter domain name, using a part of the IP address:\n   o  For
      IP version 4, the resulting domain name SHOULD be shortened\n      successively
      by one and two labels, and the query repeated.  This\n      corresponds to a
      search on a /24 or /16 network prefix.  This\n      allows for fewer DNS records
      in the case where a single access\n      network covering an entire /24 or /16
      network is served by the\n      same LIS.\n   o  For IP version 6, the resulting
      domain SHOULD be shortened\n      successively by 16, 18, 20, and 24 labels,
      and the query repeated.\n      This corresponds to a search on a /64, /56, /48,
      or /32 network\n      prefix.\n   This set of labels is intended to provide
      network operators with a\n   degree of flexibility in where LIS discovery records
      can be placed\n   without significantly increasing the number of DNS names that
      are\n   searched.  This does not attach any other significance to these\n   specific
      zone cuts or create a classful addressing hierarchy based on\n   the reverse
      DNS tree.\n   For example, the IPv4 address \"192.0.2.75\" could result in queries\n
      \  to:\n   o  75.2.0.192.in-addr.arpa.\n   o  2.0.192.in-addr.arpa.\n   o  0.192.in-addr.arpa.\n
      \  Similarly, the IPv6 address \"2001:DB8::28e4:3a93:4429:dfb5\" could\n   result
      in queries to:\n   o  5.b.f.d.9.2.4.4.3.9.a.3.4.e.8.2.0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2\n
      \     .ip6.arpa.\n   o  0.0.0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa.\n   o  0.0.0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa.\n
      \  o  0.0.0.0.8.b.d.0.1.0.0.2.ip6.arpa.\n   o  8.b.d.0.1.0.0.2.ip6.arpa.\n   The
      limited number of labels by which each name is shortened is\n   intended to
      limit the number of DNS queries performed by Devices.  If\n   no LIS is discovered
      by this method, the result will be that no more\n   than five U-NAPTR resolutions
      are invoked for each IP address.\n"
    title: 4.3.  Shortened DNS Names
  - contents:
    - "4.4.  When To Use the Reverse DNS Method\n   The DHCP method described in [RFC5986]
      MUST be attempted on all local\n   network interfaces before attempting this
      method.  This method is\n   employed either because DHCP is unavailable, when
      the DHCP server\n   does not provide a value for the access network domain name
      option,\n   or because a request to the resulting LIS results in a HELD\n   \"notLocatable\"
      error or equivalent.\n"
    title: 4.4.  When To Use the Reverse DNS Method
  - contents:
    - "4.5.  Private Address Spaces\n   Addresses from a private-use address space
      can be used as input to\n   this method.  In many cases, this applies to addresses
      defined in\n   [RFC1918], though other address ranges could have limited\n   reachability
      where this advice also applies.  This is only possible\n   if a DNS server with
      a view of the same address space is used.\n   Public DNS servers cannot provide
      useful records for private\n   addresses.\n   Using an address from a private
      space in discovery can provide a more\n   specific answer if the DNS server
      has records for that space.\n   Figure 2 shows a network configuration where
      addresses from an ISP\n   network could better indicate the correct LIS.  Records
      in DNS B can\n   be provided for the 10.0.0.0/8 range, potentially dividing
      that range\n   so that a more local LIS can be selected.\n     _____        ________\n
      \   ( DNS ).....(/        \\)      Public\n    (__A__)    (( Internet ))     Address\n
      \               (\\________/)      Space\n                      |\n                    [NAT]\n
      \    _____       _____|_____\n    ( DNS )....(/           \\)    Private\n    (__B__)
      \  (( ISP Network ))   Address Space\n               (\\___________/)    (e.g.,
      10.0.0.0/8)\n                      |\n                  [Gateway]\n                  ____|____\n
      \               (/         \\)     Private\n               (( Residence ))    Address
      Space\n                (\\_________/)     (e.g., 192.168.0.0/16)\n                      Figure
      2: Address Space Example\n   The goal of automatic DNS configuration is usually
      to select a local\n   DNS, which suits configurations like the one shown.  However,
      use of\n   public DNS or STUN servers means that a public IP address is likely\n
      \  to be found.  For STUN in particular, selecting a public server\n   minimizes
      the need for reconfiguration when a Device moves.  Adding\n   records for the
      public address space used by an access network\n   ensures that the discovery
      process succeeds when a public address is\n   used.\n"
    title: 4.5.  Private Address Spaces
  - contents:
    - "4.6.  Necessary Assumptions and Restrictions\n   When used by a Device for
      LIS discovery, this is an UNSAF application\n   and is subject to the limitations
      described in Section 7.\n   It is not necessary that the IP address used is
      unique to the Device,\n   only that the address can be somehow related to the
      Device or the\n   access network that serves the Device.  This allows a degree
      of\n   flexibility in determining this value, although security\n   considerations
      (Section 6) might require that the address be verified\n   to limit the chance
      of falsification.\n   This solution assumes that the public, reflexive transport
      address\n   used by a Device is in some way controlled by the access network\n
      \  provider or some other related party.  This implies that the\n   corresponding
      \".in-addr.arpa.\" or \".ip6.arpa.\" record can be updated\n   by that entity
      to include a useful value for the LIS address.\n"
    title: 4.6.  Necessary Assumptions and Restrictions
  - contents:
    - "4.7.  Failure Modes\n   Successful use of private addresses relies on a DNS
      server that has\n   records for the address space that is used.  Using a public
      IP\n   address increases the likelihood of this.  This document relies on\n
      \  STUN to provide the Device with a public, reflexive transport\n   address.
      \ Configuration of a STUN server is necessary to ensure that\n   this is successful.\n
      \  In cases where a virtual private network (VPN) or other tunnel is\n   used,
      the entity providing a public IP address might not be able to\n   provide the
      Device with location information.  It is assumed that\n   this entity is able
      to identify this problem and indicate this to the\n   Device (using the \"notLocatable\"
      HELD error or similar).  This\n   problem is described in more detail in [RFC5985].\n"
    title: 4.7.  Failure Modes
  - contents:
    - "4.8.  Deployment Considerations\n   An access network provider SHOULD provide
      NAPTR records for each\n   public IP address that is used for Devices within
      the access network.\n   Any DNS server internal to a NAT SHOULD also include
      records for the\n   private address range.  These records might only be provided
      to\n   clients making requests from the private address range.  Doing so\n   allows
      clients within the private address range to discover a LIS\n   based on their
      IP address prior to any address translation.  In\n   geographically distributed
      networks that use a private address range,\n   this enables the use of a different
      LIS for different locations,\n   based on the IP address range used at each
      location.  Use of a\n   public, translated IP address for the network can still
      work, but it\n   might result in a suboptimal LIS selection.\n   A network that
      operates network address translation SHOULD provide\n   NAPTR records that reference
      a LIS endpoint with a public address.\n   This requires the reservation of an
      IP address and port for the LIS.\n   To ensure requests toward the LIS from
      within the private address\n   space do not traverse the NAT and have source
      addresses mapped by the\n   NAT, networks can provide a direct route to the
      LIS.  Clients that\n   perform discovery based on public DNS or STUN servers
      are thereby\n   easier to trace based on source address information.\n   NAPTR
      records can be provided for individual IP addresses.  To limit\n   the proliferation
      of identical records, a single record can be placed\n   at higher nodes of the
      tree (corresponding to /24 and /16 for IPv4;\n   /64, /56, /48, and /32 for
      IPv6).  A record at a higher point in the\n   tree (those with a shorter prefix)
      applies to all addresses lower in\n   the tree (those with a longer prefix);
      records at the lower point\n   override those at higher points, thus allowing
      for exceptions to be\n   specified.\n"
    title: 4.8.  Deployment Considerations
  title: 4.  IP-based DNS Solution
- contents:
  - "5.  Privacy Considerations\n   As with all uses of geolocation information, it
    is very important\n   that measures be taken to ensure that location information
    is not\n   provided to unauthorized parties.  The mechanism defined in this\n
    \  document is focused on the case where a device is learning its own\n   location
    so that it can provide that location information to\n   applications.  We assume
    that the device learning its own location is\n   not a privacy risk.  There are
    then two remaining privacy risks: the\n   use of geolocation by applications,
    and the abuse of the location\n   configuration protocol.\n   The privacy considerations
    around the use of geolocation by\n   applications vary considerably by application
    context.  A framework\n   for location privacy in applications is provided in
    [RFC6280].\n   The mechanism specified in this document allows a device to discover\n
    \  its local LIS, from which it then acquires its location using a\n   Location
    Configuration Protocol (LCP) [RFC5687].  If an unauthorized\n   third party can
    spoof the LCP to obtain a target's location\n   information, then the mechanism
    in this document could allow them to\n   discover the proper server to attack
    for a given IP address.  Thus,\n   it is important that a LIS meet the security
    requirements of the LCP\n   it implements.  For HELD, these requirements are laid
    out in\n   Section 9 of [RFC5985].\n   A Device that discovers a LIS using the
    methods in this document MUST\n   NOT provide that LIS with additional information
    that might reveal\n   its position, such as the location measurements described
    in\n   [RFC7105], unless it has a secondary method for determining the\n   authenticity
    of the LIS, such as a white list.\n"
  title: 5.  Privacy Considerations
- contents:
  - "6.  Security Considerations\n   The security considerations described in [RFC5986]
    apply to the\n   discovery process as a whole.  The primary security concern is
    with\n   the potential for an attacker to impersonate a LIS.\n   The added ability
    for a third party to discover the identity of a LIS\n   does not add any concerns,
    since the identity of a LIS is considered\n   public information.\n   In addition
    to existing considerations, this document introduces\n   further security considerations
    relating to the identification of the\n   IP address.  It is possible that an
    attacker could attempt to provide\n   a falsified IP address in an attempt to
    subvert the rest of the\n   process.\n   [RFC5389] describes attacks where an
    attacker is able to ensure that\n   a Device receives a falsified reflexive address.
    \ An on-path attacker\n   might be able to ensure that a falsified address is
    provided to the\n   Device.  Even though STUN messages are protected by a STUN
    MESSAGE-\n   INTEGRITY attribute, which is an HMAC that uses a shared secret,
    an\n   on-path attacker can capture and modify packets, altering source and\n
    \  destination addresses to provide falsified addresses.\n   This attack could
    result in an effective means of denial of service,\n   or a means to provide a
    deliberately misleading service.  Notably,\n   any LIS that is identified based
    on a falsified IP address could\n   still be a valid LIS for the given IP address,
    just not one that is\n   useful for providing the Device with location information.
    \ In this\n   case, the LIS provides a HELD \"notLocatable\" error or an equivalent.\n
    \  If the falsified IP address is under the control of the attacker, it\n   is
    possible that misleading (but verifiable) DNS records could\n   indicate a malicious
    LIS that provides false location information.\n   In all cases of falsification,
    the best remedy is to perform some\n   form of independent verification of the
    result.  No specific\n   mechanism is currently available to prevent attacks based
    on\n   falsification of reflexive addresses; it is suggested that Devices\n   attempt
    to independently verify that the reflexive transport address\n   provided is accurate.
    \ An independent, trusted source of location\n   information could aid in verification,
    even if the trusted source is\n   unable to provide information with the same
    degree of accuracy as the\n   discovered LIS.\n   Use of private address space
    effectively prevents use of the usual\n   set of trust anchors for DNSSEC.  Only
    a DNS server that is able to\n   see the same private address space can provide
    useful records.  A\n   Device that relies on DNS records in the private address
    space\n   portion of the \".in-addr.arpa.\" or \".ip6.arpa.\" trees MUST either
    use\n   an alternative trust anchor for these records or rely on other means\n
    \  of ensuring the veracity of the DNS records.\n   DNS queries that are not blocked
    as [RFC6303] demands, or directed to\n   servers outside the network, can cause
    the addresses that are in use\n   within the network to be exposed outside of
    the network.  For\n   resolvers within the network, implementing [RFC6303] avoids
    this\n   issue; otherwise, the problem cannot be avoided without blocking DNS\n
    \  queries to external servers.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IAB Considerations\n   The IAB has studied the problem of Unilateral Self-Address
    Fixing\n   (UNSAF) [RFC3424], which is the general process by which a client\n
    \  attempts to determine its address in another realm on the other side\n   of
    a NAT through a collaborative protocol reflection mechanism, such\n   as STUN.\n
    \  This section only applies to the use of this method of LIS discovery\n   by
    Devices and does not apply to its use for third-party LIS\n   discovery.\n   The
    IAB requires that protocol specifications that define UNSAF\n   mechanisms document
    a set of considerations.\n   1.  Precise definition of a specific, limited-scope
    problem that is\n       to be solved with the UNSAF proposal.\n       Section
    3 describes the limited scope of the problem addressed in\n       this document.\n
    \  2.  Description of an exit strategy/transition plan.\n       [RFC5986] describes
    behavior that residential gateways require in\n       order for this short-term
    solution to be rendered unnecessary.\n       When implementations of the recommendations
    in LIS discovery are\n       widely available, this UNSAF mechanism can be made
    obsolete.\n   3.  Discussion of specific issues that may render systems more\n
    \      \"brittle\".\n       A description of the necessary assumptions and limitations
    of\n       this solution are included in Section 4.6.\n       Use of STUN for
    discovery of a reflexive transport address is\n       inherently brittle in the
    presence of multiple NATs or address\n       realms.  In particular, brittleness
    is added by the requirement\n       of using a DNS server that is able to view
    the address realm that\n       contains the IP address in question.  If address
    realms use\n       overlapping addressing space, then there is a risk that the
    DNS\n       server provides information that is not useful to the Device.\n   4.
    \ Identify requirements for longer-term, sound technical solutions;\n       contribute
    to the process of finding the right longer-term\n       solution.\n       A longer-term
    solution is already provided in [RFC5986].\n       However, that solution relies
    on widespread deployment.  The\n       UNSAF solution provided here is an interim
    solution that enables\n       LIS access for Devices that are not able to benefit
    from\n       deployment of the recommendations in [RFC5986].\n   5.  Discussion
    of the impact of the noted practical issues with\n       existing deployed NATs
    and experience reports.\n       The UNSAF mechanism depends on the experience
    in deployment of\n       STUN [RFC5389].  On the whole, existing residential gateway\n
    \      devices are able to provide access to STUN and DNS service\n       reliably,
    although regard should be given to the size of the DNS\n       response (see [RFC5625]).\n"
  title: 7.  IAB Considerations
- contents:
  - "8.  Acknowledgements\n   Richard Barnes provided the text in Section 5.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1035]  Mockapetris, P., \"Domain names -
      implementation and\n              specification\", STD 13, RFC 1035, November
      1987.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n
      \             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3596]
      \ Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS
      Extensions to Support IP Version 6\", RFC 3596,\n              October 2003.\n
      \  [RFC5986]  Thomson, M. and J. Winterbottom, \"Discovering the Local\n              Location
      Information Server (LIS)\", RFC 5986, September\n              2010.\n   [RFC7105]
      \ Thomson, M. and J. Winterbottom, \"Using Device-Provided\n              Location-Related
      Measurements in Location Configuration\n              Protocols\", RFC 7105,
      January 2014.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC1918]  Rekhter, Y., Moskowitz, R., Karrenberg,
      D., Groot, G., and\n              E. Lear, \"Address Allocation for Private
      Internets\", BCP\n              5, RFC 1918, February 1996.\n   [RFC2131]  Droms,
      R., \"Dynamic Host Configuration Protocol\", RFC\n              2131, March
      1997.\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n
      \             and M. Carney, \"Dynamic Host Configuration Protocol for\n              IPv6
      (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3424]  Daigle, L. and IAB, \"IAB Considerations
      for UNilateral\n              Self-Address Fixing (UNSAF) Across Network Address\n
      \             Translation\", RFC 3424, November 2002.\n   [RFC4848]  Daigle,
      L., \"Domain-Based Application Service Location\n              Using URIs and
      the Dynamic Delegation Discovery Service\n              (DDDS)\", RFC 4848,
      April 2007.\n   [RFC5012]  Schulzrinne, H. and R. Marshall, \"Requirements for\n
      \             Emergency Context Resolution with Internet Technologies\",\n              RFC
      5012, January 2008.\n   [RFC5389]  Rosenberg, J., Mahy, R., Matthews, P., and
      D. Wing,\n              \"Session Traversal Utilities for NAT (STUN)\", RFC
      5389,\n              October 2008.\n   [RFC5687]  Tschofenig, H. and H. Schulzrinne,
      \"GEOPRIV Layer 7\n              Location Configuration Protocol: Problem Statement
      and\n              Requirements\", RFC 5687, March 2010.\n   [RFC6280]  Barnes,
      R., Lepinski, M., Cooper, A., Morris, J.,\n              Tschofenig, H., and
      H. Schulzrinne, \"An Architecture for\n              Location and Location Privacy
      in Internet Applications\",\n              BCP 160, RFC 6280, July 2011.\n   [RFC6303]
      \ Andrews, M., \"Locally Served DNS Zones\", BCP 163, RFC\n              6303,
      July 2011.\n   [RFC6887]  Wing, D., Cheshire, S., Boucadair, M., Penno, R.,
      and P.\n              Selkirk, \"Port Control Protocol (PCP)\", RFC 6887, April\n
      \             2013.\n   [UPnP-IGD-WANIPConnection1]\n              UPnP Forum,
      \"Internet Gateway Device (IGD) Standardized\n              Device Control Protocol
      V 1.0: WANIPConnection:1 Service\n              Template Version 1.01 For UPnP
      Version 1.0\", DCP 05-001,\n              Nov. 2001, <http://upnp.org/specs/gw/\n
      \             UPnP-gw-WANIPConnection-v1-Service.pdf>.\n   [RFC6886]  Cheshire,
      S. and M. Krochmal, \"NAT Port Mapping Protocol\n              (NAT-PMP)\",
      RFC 6886, April 2013.\n   [RFC5625]  Bellis, R., \"DNS Proxy Implementation
      Guidelines\", BCP\n              152, RFC 5625, August 2009.\n   [RFC5985]  Barnes,
      M., \"HTTP-Enabled Location Delivery (HELD)\", RFC\n              5985, September
      2010.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Martin Thomson\n   Mozilla\n   Suite 300\n   650 Castro
    Street\n   Mountain View, CA  94041\n   US\n   EMail: martin.thomson@gmail.com\n
    \  Ray Bellis\n   Nominet UK\n   Edmund Halley Road\n   Oxford  OX4 4DQ\n   United
    Kingdom\n   Phone: +44 1865 332211\n   EMail: ray.bellis@nominet.org.uk\n   URI:
    \  http://www.nominet.org.uk/\n"
  title: Authors' Addresses
