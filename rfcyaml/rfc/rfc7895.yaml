- title: __initial_text__
  contents:
  - '                          YANG Module Library

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a YANG library that provides information\n\
    \   about all the YANG modules used by a network management server (e.g.,\n  \
    \ a Network Configuration Protocol (NETCONF) server).  Simple caching\n   mechanisms\
    \ are provided to allow clients to minimize retrieval of\n   this information.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7895.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Tree Diagrams . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   2.  YANG Module Library . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n     2.1.  modules-state . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n       2.1.1.  modules-state/module-set-id . . . . . . . . . . . . .\
    \   4\n       2.1.2.  modules-state/module  . . . . . . . . . . . . . . . .  \
    \ 5\n     2.2.  YANG Library Module . . . . . . . . . . . . . . . . . . .   5\n\
    \   3.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11\n  \
    \   3.1.  YANG Module Registry  . . . . . . . . . . . . . . . . . .  11\n   4.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .  11\n   5.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  12\n     5.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  12\n     5.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  12\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  13\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   There is a need for standard mechanisms to identify the\
    \ YANG modules\n   and submodules that are in use by a server that implements\
    \ YANG data\n   models.  If a large number of YANG modules are utilized by the\n\
    \   server, then the YANG library contents needed can be relatively\n   large.\
    \  This information changes very infrequently, so it is\n   important that clients\
    \ be able to cache the YANG library contents and\n   easily identify whether their\
    \ cache is out of date.\n   YANG library information can be different on every\
    \ server and can\n   change at runtime or across a server reboot.\n   If the server\
    \ implements multiple protocols to access the YANG-\n   defined data, each such\
    \ protocol has its own conceptual instantiation\n   of the YANG library.\n   The\
    \ following information is needed by a client application (for each\n   YANG module\
    \ in the library) to fully utilize the YANG data modeling\n   language:\n   o\
    \  name: The name of the YANG module.\n   o  revision: Each YANG module and submodule\
    \ within the library has a\n      revision.  This is derived from the most recent\
    \ revision statement\n      within the module or submodule.  If no such revision\
    \ statement\n      exists, the module's or submodule's revision is the zero-length\n\
    \      string.\n   o  submodule list: The name and revision of each submodule\
    \ used by\n      the module MUST be identified.\n   o  feature list: The name\
    \ of each YANG feature supported by the\n      server MUST be identified.\n  \
    \ o  deviation list: The name of each YANG module used for deviation\n      statements\
    \ MUST be identified.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in BCP\n   14, [RFC2119].\n   The following terms are defined in [RFC6241]:\n\
    \   o  client\n   o  server\n   The following terms are defined in [YANG1.1]:\n\
    \   o  module\n   o  submodule\n   The following terms are used within this document:\n\
    \   o  YANG library: A collection of YANG modules and submodules used by\n   \
    \   a server.\n"
- title: 1.2.  Tree Diagrams
  contents:
  - "1.2.  Tree Diagrams\n   A simplified graphical representation of the data model\
    \ is used in\n   this document.  The meaning of the symbols in these diagrams\
    \ is as\n   follows:\n   o  Brackets \"[\" and \"]\" enclose list keys.\n   o\
    \  Abbreviations before data node names: \"rw\" means configuration\n      data\
    \ (read-write) and \"ro\" state data (read-only).\n   o  Symbols after data node\
    \ names: \"?\" means an optional node, \"!\"\n      means a presence container,\
    \ and \"*\" denotes a list and leaf-list.\n   o  Parentheses enclose choice and\
    \ case nodes, and case nodes are also\n      marked with a colon (\":\").\n  \
    \ o  Ellipsis (\"...\") stands for contents of subtrees that are not\n      shown.\n"
- title: 2.  YANG Module Library
  contents:
  - "2.  YANG Module Library\n   The \"ietf-yang-library\" module provides information\
    \ about the YANG\n   library used by a server.  This module is defined using YANG\
    \ version\n   1, but it supports the description of YANG modules written in any\n\
    \   revision of YANG.\n   Following is the YANG Tree Diagram for the \"ietf-yang-library\"\
    \n   module:\n      +--ro modules-state\n         +--ro module-set-id    string\n\
    \         +--ro module* [name revision]\n            +--ro name              \
    \  yang:yang-identifier\n            +--ro revision            union\n       \
    \     +--ro schema?             inet:uri\n            +--ro namespace        \
    \   inet:uri\n            +--ro feature*            yang:yang-identifier\n   \
    \         +--ro deviation* [name revision]\n            |  +--ro name        yang:yang-identifier\n\
    \            |  +--ro revision    union\n            +--ro conformance-type  \
    \  enumeration\n            +--ro submodule* [name revision]\n               +--ro\
    \ name        yang:yang-identifier\n               +--ro revision    union\n \
    \              +--ro schema?     inet:uri\n"
- title: 2.1.  modules-state
  contents:
  - "2.1.  modules-state\n   This mandatory container holds the identifiers for the\
    \ YANG data\n   model modules supported by the server.\n"
- title: 2.1.1.  modules-state/module-set-id
  contents:
  - "2.1.1.  modules-state/module-set-id\n   This mandatory leaf contains a unique\
    \ implementation-specific\n   identifier representing the current set of modules\
    \ and submodules on\n   a specific server.  The value of this leaf MUST change\
    \ whenever the\n   set of modules and submodules in the YANG library changes.\
    \  There is\n   no requirement that the same set always results in the same \"\
    module-\n   set-id\" value.\n   This leaf allows a client to fetch the module\
    \ list once, cache it,\n   and only refetch it if the value of this leaf has been\
    \ changed.\n   If the value of this leaf changes, the server also generates a\n\
    \   \"yang-library-change\" notification, with the new value of\n   \"module-set-id\"\
    .\n   Note that for a NETCONF server that implements YANG 1.1 [YANG1.1], a\n \
    \  change of the \"module-set-id\" value results in a new value for the\n   :yang-library\
    \ capability defined in [YANG1.1].  Thus, if such a\n   server implements NETCONF\
    \ notifications [RFC5277], and the\n   notification \"netconf-capability-change\"\
    \ [RFC6470], a\n   \"netconf-capability-change\" notification is generated whenever\
    \ the\n   \"module-set-id\" changes.\n"
- title: 2.1.2.  modules-state/module
  contents:
  - "2.1.2.  modules-state/module\n   This mandatory list contains one entry for each\
    \ YANG data model\n   module supported by the server.  There MUST be an entry\
    \ in this list\n   for each revision of each YANG module that is used by the server.\
    \  It\n   is possible for multiple revisions of the same module to be imported,\n\
    \   in addition to an entry for the revision that is implemented by the\n   server.\n"
- title: 2.2.  YANG Library Module
  contents:
  - "2.2.  YANG Library Module\n   The \"ietf-yang-library\" module defines monitoring\
    \ information for the\n   YANG modules used by a server.\n   The \"ietf-yang-types\"\
    \ and \"ietf-inet-types\" modules from [RFC6991]\n   are used by this module for\
    \ some type definitions.\n   <CODE BEGINS> file \"ietf-yang-library@2016-06-21.yang\"\
    \n   module ietf-yang-library {\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-yang-library\"\
    ;\n     prefix \"yanglib\";\n     import ietf-yang-types {\n       prefix yang;\n\
    \     }\n     import ietf-inet-types {\n       prefix inet;\n     }\n     organization\n\
    \       \"IETF NETCONF (Network Configuration) Working Group\";\n     contact\n\
    \       \"WG Web:   <https://datatracker.ietf.org/wg/netconf/>\n        WG List:\
    \  <mailto:netconf@ietf.org>\n        WG Chair: Mehmet Ersue\n               \
    \   <mailto:mehmet.ersue@nsn.com>\n        WG Chair: Mahesh Jethanandani\n   \
    \               <mailto:mjethanandani@gmail.com>\n        Editor:   Andy Bierman\n\
    \                  <mailto:andy@yumaworks.com>\n        Editor:   Martin Bjorklund\n\
    \                  <mailto:mbj@tail-f.com>\n        Editor:   Kent Watsen\n  \
    \                <mailto:kwatsen@juniper.net>\";\n     description\n       \"\
    This module contains monitoring information about the YANG\n        modules and\
    \ submodules that are used within a YANG-based\n        server.\n        Copyright\
    \ (c) 2016 IETF Trust and the persons identified as\n        authors of the code.\
    \  All rights reserved.\n        Redistribution and use in source and binary forms,\
    \ with or\n        without modification, is permitted pursuant to, and subject\n\
    \        to the license terms contained in, the Simplified BSD License\n     \
    \   set forth in Section 4.c of the IETF Trust's Legal Provisions\n        Relating\
    \ to IETF Documents\n        (http://trustee.ietf.org/license-info).\n       \
    \ This version of this YANG module is part of RFC 7895; see\n        the RFC itself\
    \ for full legal notices.\";\n     revision 2016-06-21 {\n       description\n\
    \         \"Initial revision.\";\n       reference\n         \"RFC 7895: YANG\
    \ Module Library.\";\n     }\n     /*\n      * Typedefs\n      */\n     typedef\
    \ revision-identifier {\n       type string {\n         pattern '\\d{4}-\\d{2}-\\\
    d{2}';\n       }\n       description\n         \"Represents a specific date in\
    \ YYYY-MM-DD format.\";\n     }\n     /*\n      * Groupings\n      */\n     grouping\
    \ module-list {\n       description\n         \"The module data structure is represented\
    \ as a grouping\n          so it can be reused in configuration or another monitoring\n\
    \          data structure.\";\n       grouping common-leafs {\n         description\n\
    \           \"Common parameters for YANG modules and submodules.\";\n        \
    \ leaf name {\n           type yang:yang-identifier;\n           description\n\
    \             \"The YANG module or submodule name.\";\n         }\n         leaf\
    \ revision {\n           type union {\n             type revision-identifier;\n\
    \             type string { length 0; }\n           }\n           description\n\
    \             \"The YANG module or submodule revision date.\n              A zero-length\
    \ string is used if no revision statement\n              is present in the YANG\
    \ module or submodule.\";\n         }\n       }\n       grouping schema-leaf {\n\
    \         description\n           \"Common schema leaf parameter for modules and\
    \ submodules.\";\n         leaf schema {\n           type inet:uri;\n        \
    \   description\n             \"Contains a URL that represents the YANG schema\n\
    \              resource for this module or submodule.\n              This leaf\
    \ will only be present if there is a URL\n              available for retrieval\
    \ of the schema for this entry.\";\n         }\n       }\n       list module {\n\
    \         key \"name revision\";\n         description\n           \"Each entry\
    \ represents one revision of one module\n            currently supported by the\
    \ server.\";\n         uses common-leafs;\n         uses schema-leaf;\n      \
    \   leaf namespace {\n           type inet:uri;\n           mandatory true;\n\
    \           description\n             \"The XML namespace identifier for this\
    \ module.\";\n         }\n         leaf-list feature {\n           type yang:yang-identifier;\n\
    \           description\n             \"List of YANG feature names from this module\
    \ that are\n              supported by the server, regardless of whether they\
    \ are\n              defined in the module or any included submodule.\";\n   \
    \      }\n         list deviation {\n           key \"name revision\";\n     \
    \      description\n             \"List of YANG deviation module names and revisions\n\
    \              used by this server to modify the conformance of\n            \
    \  the module associated with this entry.  Note that\n              the same module\
    \ can be used for deviations for\n              multiple modules, so the same\
    \ entry MAY appear\n              within multiple 'module' entries.\n        \
    \      The deviation module MUST be present in the 'module'\n              list,\
    \ with the same name and revision values.\n              The 'conformance-type'\
    \ value will be 'implement' for\n              the deviation module.\";\n    \
    \       uses common-leafs;\n         }\n         leaf conformance-type {\n   \
    \        type enumeration {\n             enum implement {\n               description\n\
    \                 \"Indicates that the server implements one or more\n       \
    \           protocol-accessible objects defined in the YANG module\n         \
    \         identified in this entry.  This includes deviation\n               \
    \   statements defined in the module.\n                  For YANG version 1.1\
    \ modules, there is at most one\n                  module entry with conformance\
    \ type 'implement' for a\n                  particular module name, since YANG\
    \ 1.1 requires that,\n                  at most, one revision of a module is implemented.\n\
    \                  For YANG version 1 modules, there SHOULD NOT be more\n    \
    \              than one module entry for a particular module name.\";\n      \
    \       }\n             enum import {\n               description\n          \
    \       \"Indicates that the server imports reusable definitions\n           \
    \       from the specified revision of the module but does\n                 \
    \ not implement any protocol-accessible objects from\n                  this revision.\n\
    \                  Multiple module entries for the same module name MAY\n    \
    \              exist.  This can occur if multiple modules import the\n       \
    \           same module but specify different revision dates in\n            \
    \      the import statements.\";\n             }\n           }\n           mandatory\
    \ true;\n           description\n             \"Indicates the type of conformance\
    \ the server is claiming\n              for the YANG module identified by this\
    \ entry.\";\n         }\n         list submodule {\n           key \"name revision\"\
    ;\n           description\n             \"Each entry represents one submodule\
    \ within the\n              parent module.\";\n           uses common-leafs;\n\
    \           uses schema-leaf;\n         }\n       }\n     }\n     /*\n      *\
    \ Operational state data nodes\n      */\n     container modules-state {\n   \
    \    config false;\n       description\n         \"Contains YANG module monitoring\
    \ information.\";\n       leaf module-set-id {\n         type string;\n      \
    \   mandatory true;\n         description\n           \"Contains a server-specific\
    \ identifier representing\n            the current set of modules and submodules.\
    \  The\n            server MUST change the value of this leaf if the\n       \
    \     information represented by the 'module' list instances\n            has\
    \ changed.\";\n       }\n       uses module-list;\n     }\n     /*\n      * Notifications\n\
    \      */\n     notification yang-library-change {\n       description\n     \
    \    \"Generated when the set of modules and submodules supported\n          by\
    \ the server has changed.\";\n       leaf module-set-id {\n         type leafref\
    \ {\n           path \"/yanglib:modules-state/yanglib:module-set-id\";\n     \
    \    }\n         mandatory true;\n         description\n           \"Contains\
    \ the module-set-id value representing the\n            set of modules and submodules\
    \ supported at the server at\n            the time the notification is generated.\"\
    ;\n       }\n     }\n   }\n   <CODE ENDS>\n"
- title: 3.  IANA Considerations
  contents:
  - '3.  IANA Considerations

    '
- title: 3.1.  YANG Module Registry
  contents:
  - "3.1.  YANG Module Registry\n   This document registers one URI in the \"IETF\
    \ XML Registry\" [RFC3688].\n   Following the format in RFC 3688, the following\
    \ registration has been\n   made.\n     URI: urn:ietf:params:xml:ns:yang:ietf-yang-library\n\
    \     Registrant Contact: The NETCONF WG of the IETF.\n     XML: N/A, the requested\
    \ URI is an XML namespace.\n   This document registers one YANG module in the\
    \ \"YANG Module Names\"\n   registry [RFC6020].\n     name:         ietf-yang-library\n\
    \     namespace:    urn:ietf:params:xml:ns:yang:ietf-yang-library\n     prefix:\
    \       yanglib\n     reference:    RFC 7895\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The YANG module defined in this memo is designed\
    \ to be accessed via\n   the NETCONF protocol [RFC6241].  The lowest NETCONF layer\
    \ is the\n   secure transport layer and the mandatory-to-implement secure\n  \
    \ transport is SSH [RFC6242].  The NETCONF access control model\n   [RFC6536]\
    \ provides the means to restrict access for particular\n   NETCONF users to a\
    \ pre-configured subset of all available NETCONF\n   protocol operations and content.\n\
    \   Some of the readable data nodes in this YANG module may be considered\n  \
    \ sensitive or vulnerable in some network environments.  It is thus\n   important\
    \ to control read access (e.g., via get, get-config, or\n   notification) to these\
    \ data nodes.  These are the subtrees and data\n   nodes and their sensitivity/vulnerability:\n\
    \   o  /modules-state/module: The module list used in a server\n      implementation\
    \ may help an attacker identify the server\n      capabilities and server implementations\
    \ with known bugs.  Although\n      some of this information may be available\
    \ to all users via the\n      NETCONF <hello> message (or similar messages in\
    \ other management\n      protocols), this YANG module potentially exposes additional\n\
    \      details that could be of some assistance to an attacker.  Server\n    \
    \  vulnerabilities may be specific to particular modules, module\n      revisions,\
    \ module features, or even module deviations.  This\n      information is included\
    \ in each module entry.  For example, if a\n      particular operation on a particular\
    \ data node is known to cause a\n      server to crash or significantly degrade\
    \ device performance, then\n      the module list information will help an attacker\
    \ identify server\n      implementations with such a defect, in order to launch\
    \ a denial-\n      of-service attack on the device.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <http://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n   \
    \           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n      \
    \        DOI 10.17487/RFC6020, October 2010,\n              <http://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <http://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n     \
    \         Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n        \
    \      <http://www.rfc-editor.org/info/rfc6242>.\n   [RFC6536]  Bierman, A. and\
    \ M. Bjorklund, \"Network Configuration\n              Protocol (NETCONF) Access\
    \ Control Model\", RFC 6536,\n              DOI 10.17487/RFC6536, March 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6536>.\n   [RFC6991]  Schoenwaelder,\
    \ J., Ed., \"Common YANG Data Types\",\n              RFC 6991, DOI 10.17487/RFC6991,\
    \ July 2013,\n              <http://www.rfc-editor.org/info/rfc6991>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC5277]  Chisholm, S. and H. Trevino, \"NETCONF\
    \ Event\n              Notifications\", RFC 5277, DOI 10.17487/RFC5277, July 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5277>.\n   [RFC6470]  Bierman,\
    \ A., \"Network Configuration Protocol (NETCONF)\n              Base Notifications\"\
    , RFC 6470, DOI 10.17487/RFC6470,\n              February 2012, <http://www.rfc-editor.org/info/rfc6470>.\n\
    \   [YANG1.1]  Bjorklund, M., \"The YANG 1.1 Data Modeling Language\", Work\n\
    \              in Progress, draft-ietf-netmod-rfc6020bis-12, April 2016.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Contributions to this material by Andy Bierman are based\
    \ upon work\n   supported by the Space & Terrestrial Communications Directorate\n\
    \   (S&TCD) under Contract No. W15P7T-13-C-A616.  Any opinions, findings,\n  \
    \ conclusions, or recommendations expressed in this material are those\n   of\
    \ the author(s) and do not necessarily reflect the views of the\n   Space & Terrestrial\
    \ Communications Directorate (S&TCD).\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andy Bierman\n   YumaWorks\n   Email: andy@yumaworks.com\n\
    \   Martin Bjorklund\n   Tail-f Systems\n   Email: mbj@tail-f.com\n   Kent Watsen\n\
    \   Juniper Networks\n   Email: kwatsen@juniper.net\n"
