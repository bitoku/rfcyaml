- title: __initial_text__
  contents:
  - '                     The Safe Response Header Field

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a HTTP response header field called Safe,\
    \ which\n   can be used to indicate that repeating a HTTP request is safe.  Such\n\
    \   an indication will allow user agents to handle retries of some safe\n   requests,\
    \ in particular safe POST requests, in a more user-friendly\n   way.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   This document defines a HTTP response header field called\
    \ Safe, which\n   can be used to indicate that repeating a HTTP request is safe.\
    \  Such\n   an indication will allow user agents to handle retries of some safe\n\
    \   requests, in particular safe POST requests, in a more user-friendly\n   way.\n"
- title: 2 Terminology and Notation
  contents:
  - "2 Terminology and Notation\n   This document uses the HTTP terminology and BNF\
    \ notation defined in\n   [1].  It uses the key words in RFC 2119 for defining\
    \ the significance\n   of each particular requirement.\n"
- title: 3 Rationale
  contents:
  - "3 Rationale\n   According to Section 9.1.1 (Safe Methods) of the HTTP/1.1\n \
    \  specification [1], POST requests are assumed to be `unsafe' by\n   default.\
    \  `Unsafe' means `causes side effects for which the user will\n   be held accountable'.\n\
    \   It is sometimes necessary for a user agent to repeat a POST request.\n   Examples\
    \ of such cases are\n     - when retrying a POST request which gave an indeterminate\
    \ error\n       result in the previous attempt\n     - when the user presses the\
    \ RELOAD button while a POST result is\n       displayed\n     - when the history\
    \ function is used to redisplay a POST result\n       which is no longer in the\
    \ history buffer.\n   If the POST request is unsafe, HTTP requires explicit user\n\
    \   confirmation is before the request is repeated.  The confirmation\n   dialog\
    \ often takes the form of a `repost form data?'  dialog box.\n   This dialog is\
    \ confusing to many users, and slows down navigation in\n   any case.\n   If the\
    \ repeated POST request is safe, the user-unfriendly\n   confirmation dialog can\
    \ be omitted.  However plain HTTP/1.1 [1] has\n   no mechanism by which agents\
    \ can tell if POST requests are safe, and\n   they must be assumed unsafe by default.\
    \  This document adds a\n   mechanism to HTTP, the Safe header field, for telling\
    \ if a POST\n   request is safe.\n   Using the Safe header field, web applications\
    \ which require the use\n   of a safe POST request, rather than a GET request,\
    \ for the submission\n   of web forms, can be made more user-friendly.  The use\
    \ of a POST\n   request may be required for a number of reasons, including\n \
    \    - the contents of the form are potentially very large\n     - the form is\
    \ used to upload a file (see [2])\n     - the application needs some internationalization\
    \ features\n       (see [3]) which are only available if the form contents are\n\
    \       transmitted in a request body the information in the form cannot\n   \
    \    be encoded in a GET request URL because of security\n       considerations.\n"
- title: 4 The Safe response header field
  contents:
  - "4 The Safe response header field\n   The Safe response header field is defined\
    \ as an addition to the\n   HTTP/1.x protocol suite.\n   The Safe response header\
    \ field is used by origin servers to indicate\n   whether repeating the received\
    \ HTTP request is safe in the sense of\n   Section 9.1.1 (Safe Methods) of the\
    \ HTTP/1.1 specification [1].  For\n   the purpose of this specification, a HTTP\
    \ request is considered to be\n   a repetition of a previous request if both requests\n\
    \     - are issued by the same user agent, and\n     - apply to the same resource,\
    \ and\n     - have the same request method, and\n     - both have no request body,\
    \ or both have request bodies which are\n       byte-wise identical after decoding\
    \ of any content and transfer\n       codings.\n   The Safe header field has the\
    \ following syntax.\n     Safe        = \"Safe\" \":\" safe-nature\n     safe-nature\
    \ = \"yes\" | \"no\"\n   An example of the header field is:\n     Safe: yes\n\
    \   If a Safe header field is absent in the response, the corresponding\n   request\
    \ MUST be considered unsafe, unless it is a GET or HEAD\n   request.  As GET and\
    \ HEAD requests are safe by definition, user\n   agents SHOULD ignore a `Safe:\
    \ no' header field in GET and HEAD\n   responses.\n   If, according to a received\
    \ Safe header field, the repeating of a\n   request is safe, the request MAY be\
    \ repeated automatically without\n   asking for user confirmation.\n"
- title: 5 Security Considerations
  contents:
  - "5 Security Considerations\n   For a discussion of the security considerations\
    \ connected to HTTP\n   form submission, see [1].  The Safe header field introduces\
    \ no new\n   security risks.\n   The use of GET requests for form submission has\
    \ some security risks\n   which are absent for submission with other HTTP methods.\
    \  By taking\n   away a counter-incentive to the use of GET requests for form\n\
    \   submission, the Safe header field may improve overall security.\n"
- title: 6 References
  contents:
  - "6 References\n   [1] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., and\n\
    \   T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\",  RFC\n   2068,\
    \ January 1997.\n   [2] Nebel, E., and L. Masinter, \"Form-based File Upload in\
    \ HTML\",\n   RFC 1867, November 1995.\n   [3] Yergeau, F., Nicol, G., Adams,\
    \ G., and M. Duerst,\n   \"Internationalization of the Hypertext Markup Language\"\
    , RFC\n   2070, January 1997.\n"
- title: 7 Author's Address
  contents:
  - "7 Author's Address\n   Koen Holtman\n   Technische Universiteit Eindhoven\n \
    \  Postbus 513\n   Kamer HG 6.57\n   5600 MB Eindhoven (The Netherlands)\n   EMail:\
    \ koen@win.tue.nl\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
