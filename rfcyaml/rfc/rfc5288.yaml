- contents:
  - '          AES Galois Counter Mode (GCM) Cipher Suites for TLS

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This memo describes the use of the Advanced Encryption Standard
    (AES)\n   in Galois/Counter Mode (GCM) as a Transport Layer Security (TLS)\n   authenticated
    encryption operation.  GCM provides both\n   confidentiality and data origin authentication,
    can be efficiently\n   implemented in hardware for speeds of 10 gigabits per second
    and\n   above, and is also well-suited to software implementations.  This\n   memo
    defines TLS cipher suites that use AES-GCM with RSA, DSA, and\n   Diffie-Hellman-based
    key exchange mechanisms.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . . . 2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . . . 2\n   3.  AES-GCM Cipher Suites . . . . . . . . . . . . . . . . . . .
    . . 2\n   4.  TLS Versions  . . . . . . . . . . . . . . . . . . . . . . . . .
    3\n   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 4\n
    \  6.  Security Considerations . . . . . . . . . . . . . . . . . . . . 4\n     6.1.
    \ Counter Reuse . . . . . . . . . . . . . . . . . . . . . . . 4\n     6.2.  Recommendations
    for Multiple Encryption Processors  . . . . 4\n   7.  Acknowledgements  . . .
    . . . . . . . . . . . . . . . . . . . . 5\n   8.  References  . . . . . . . .
    . . . . . . . . . . . . . . . . . . 6\n     8.1.  Normative References  . . .
    . . . . . . . . . . . . . . . . 6\n     8.2.  Informative References  . . . .
    . . . . . . . . . . . . . . 6\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes the use of AES [AES] in Galois Counter
    Mode\n   (GCM) [GCM] (AES-GCM) with various key exchange mechanisms as a\n   cipher
    suite for TLS.  AES-GCM is an authenticated encryption with\n   associated data
    (AEAD) cipher (as defined in TLS 1.2 [RFC5246])\n   providing both confidentiality
    and data origin authentication.  The\n   following sections define cipher suites
    based on RSA, DSA, and\n   Diffie-Hellman key exchanges; ECC-based (Elliptic Curve
    Cryptography)\n   cipher suites are defined in a separate document [RFC5289].\n
    \  AES-GCM is not only efficient and secure, but hardware\n   implementations
    can achieve high speeds with low cost and low\n   latency, because the mode can
    be pipelined.  Applications that\n   require high data throughput can benefit
    from these high-speed\n   implementations.  AES-GCM has been specified as a mode
    that can be\n   used with IPsec ESP [RFC4106] and 802.1AE Media Access Control
    (MAC)\n   Security [IEEE8021AE].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  AES-GCM Cipher Suites\n   The following cipher suites use the new authenticated
    encryption\n   modes defined in TLS 1.2 with AES in Galois Counter Mode (GCM)
    [GCM]:\n      CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256 = {0x00,0x9C}\n      CipherSuite
    TLS_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0x9D}\n      CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
    = {0x00,0x9E}\n      CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0x9F}\n
    \     CipherSuite TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = {0x00,0xA0}\n      CipherSuite
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0xA1}\n      CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
    = {0x00,0xA2}\n      CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = {0x00,0xA3}\n
    \     CipherSuite TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = {0x00,0xA4}\n      CipherSuite
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = {0x00,0xA5}\n      CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
    = {0x00,0xA6}\n      CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384 = {0x00,0xA7}\n
    \  These cipher suites use the AES-GCM authenticated encryption with\n   associated
    data (AEAD) algorithms AEAD_AES_128_GCM and\n   AEAD_AES_256_GCM described in
    [RFC5116].  Note that each of these\n   AEAD algorithms uses a 128-bit authentication
    tag with GCM (in\n   particular, as described in Section 3.5 of [RFC4366], the\n
    \  \"truncated_hmac\" extension does not have an effect on cipher suites\n   that
    do not use HMAC).  The \"nonce\" SHALL be 12 bytes long consisting\n   of two
    parts as follows: (this is an example of a \"partially\n   explicit\" nonce; see
    Section 3.2.1 in [RFC5116]).\n             struct {\n                opaque salt[4];\n
    \               opaque nonce_explicit[8];\n             } GCMNonce;\n   The salt
    is the \"implicit\" part of the nonce and is not sent in the\n   packet.  Instead,
    the salt is generated as part of the handshake\n   process: it is either the client_write_IV
    (when the client is\n   sending) or the server_write_IV (when the server is sending).
    \ The\n   salt length (SecurityParameters.fixed_iv_length) is 4 octets.\n   The
    nonce_explicit is the \"explicit\" part of the nonce.  It is chosen\n   by the
    sender and is carried in each TLS record in the\n   GenericAEADCipher.nonce_explicit
    field.  The nonce_explicit length\n   (SecurityParameters.record_iv_length) is
    8 octets.\n   Each value of the nonce_explicit MUST be distinct for each distinct\n
    \  invocation of the GCM encrypt function for any fixed key.  Failure to\n   meet
    this uniqueness requirement can significantly degrade security.\n   The nonce_explicit
    MAY be the 64-bit sequence number.\n   The RSA, DHE_RSA, DH_RSA, DHE_DSS, DH_DSS,
    and DH_anon key exchanges\n   are performed as defined in [RFC5246].\n   The Pseudo
    Random Function (PRF) algorithms SHALL be as follows:\n      For cipher suites
    ending with _SHA256, the PRF is the TLS PRF\n      [RFC5246] with SHA-256 as the
    hash function.\n      For cipher suites ending with _SHA384, the PRF is the TLS
    PRF\n      [RFC5246] with SHA-384 as the hash function.\n   Implementations MUST
    send TLS Alert bad_record_mac for all types of\n   failures encountered in processing
    the AES-GCM algorithm.\n"
  title: 3.  AES-GCM Cipher Suites
- contents:
  - "4.  TLS Versions\n   These cipher suites make use of the authenticated encryption
    with\n   additional data defined in TLS 1.2 [RFC5246].  They MUST NOT be\n   negotiated
    in older versions of TLS.  Clients MUST NOT offer these\n   cipher suites if they
    do not offer TLS 1.2 or later.  Servers that\n   select an earlier version of
    TLS MUST NOT select one of these cipher\n   suites.  Because TLS has no way for
    the client to indicate that it\n   supports TLS 1.2 but not earlier, a non-compliant
    server might\n   potentially negotiate TLS 1.1 or earlier and select one of the
    cipher\n   suites in this document.  Clients MUST check the TLS version and\n
    \  generate a fatal \"illegal_parameter\" alert if they detect an\n   incorrect
    version.\n"
  title: 4.  TLS Versions
- contents:
  - "5.  IANA Considerations\n   IANA has assigned the following values for the cipher
    suites defined\n   in this document:\n      CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
    = {0x00,0x9C}\n      CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0x9D}\n
    \     CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = {0x00,0x9E}\n      CipherSuite
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0x9F}\n      CipherSuite TLS_DH_RSA_WITH_AES_128_GCM_SHA256
    = {0x00,0xA0}\n      CipherSuite TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = {0x00,0xA1}\n
    \     CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = {0x00,0xA2}\n      CipherSuite
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = {0x00,0xA3}\n      CipherSuite TLS_DH_DSS_WITH_AES_128_GCM_SHA256
    = {0x00,0xA4}\n      CipherSuite TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = {0x00,0xA5}\n
    \     CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256 = {0x00,0xA6}\n      CipherSuite
    TLS_DH_anon_WITH_AES_256_GCM_SHA384 = {0x00,0xA7}\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Security Considerations\n   The security considerations in [RFC5246] apply
    to this document as\n   well.  The remainder of this section describes security\n
    \  considerations specific to the cipher suites described in this\n   document.\n"
  - contents:
    - "6.1.  Counter Reuse\n   AES-GCM security requires that the counter is never
      reused.  The IV\n   construction in Section 3 is designed to prevent counter
      reuse.\n   Implementers should also understand the practical considerations
      of\n   IV handling outlined in Section 9 of [GCM].\n"
    title: 6.1.  Counter Reuse
  - contents:
    - "6.2.  Recommendations for Multiple Encryption Processors\n   If multiple cryptographic
      processors are in use by the sender, then\n   the sender MUST ensure that, for
      a particular key, each value of the\n   nonce_explicit used with that key is
      distinct.  In this case, each\n   encryption processor SHOULD include, in the
      nonce_explicit, a fixed\n   value that is distinct for each processor.  The
      recommended format is\n        nonce_explicit = FixedDistinct || Variable\n
      \  where the FixedDistinct field is distinct for each encryption\n   processor,
      but is fixed for a given processor, and the Variable field\n   is distinct for
      each distinct nonce used by a particular encryption\n   processor.  When this
      method is used, the FixedDistinct fields used\n   by the different processors
      MUST have the same length.\n   In the terms of Figure 2 in [RFC5116], the Salt
      is the Fixed-Common\n   part of the nonce (it is fixed, and it is common across
      all\n   encryption processors), the FixedDistinct field exactly corresponds\n
      \  to the Fixed-Distinct field, the Variable field corresponds to the\n   Counter
      field, and the explicit part exactly corresponds to the\n   nonce_explicit.\n
      \  For clarity, we provide an example for TLS in which there are two\n   distinct
      encryption processors, each of which uses a one-byte\n   FixedDistinct field:\n
      \         Salt          = eedc68dc\n          FixedDistinct = 01       (for
      the first encryption processor)\n          FixedDistinct = 02       (for the
      second encryption processor)\n   The GCMnonces generated by the first encryption
      processor, and their\n   corresponding nonce_explicit, are:\n          GCMNonce
      \                   nonce_explicit\n          ------------------------    ----------------------------\n
      \         eedc68dc0100000000000000    0100000000000000\n          eedc68dc0100000000000001
      \   0100000000000001\n          eedc68dc0100000000000002    0100000000000002\n
      \         ...\n   The GCMnonces generated by the second encryption processor,
      and their\n   corresponding nonce_explicit, are\n          GCMNonce                    nonce_explicit\n
      \         ------------------------    ----------------------------\n          eedc68dc0200000000000000
      \   0200000000000000\n          eedc68dc0200000000000001    0200000000000001\n
      \         eedc68dc0200000000000002    0200000000000002\n          ...\n"
    title: 6.2.  Recommendations for Multiple Encryption Processors
  title: 6.  Security Considerations
- contents:
  - "7.  Acknowledgements\n   This document borrows heavily from [RFC5289].  The authors
    would like\n   to thank Alex Lam, Simon Josefsson, and Pasi Eronen for providing\n
    \  useful comments during the review of this document.\n"
  title: 7.  Acknowledgements
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [AES]         National Institute of Standards
      and Technology,\n                 \"Advanced Encryption Standard (AES)\", FIPS
      197,\n                 November 2001.\n   [GCM]         Dworkin, M., \"Recommendation
      for Block Cipher Modes of\n                 Operation: Galois/Counter Mode (GCM)
      and GMAC\",\n                 National Institute of Standards and Technology
      SP 800-\n                 38D, November 2007.\n   [RFC2119]     Bradner, S.,
      \"Key words for use in RFCs to Indicate\n                 Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n   [RFC5116]     McGrew, D., \"An Interface and
      Algorithms for\n                 Authenticated Encryption\", RFC 5116, January
      2008.\n   [RFC5246]     Dierks, T. and E. Rescorla, \"The Transport Layer\n
      \                Security (TLS) Protocol Version 1.2\", RFC 5246,\n                 August
      2008.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [IEEE8021AE]  Institute of Electrical and
      Electronics Engineers,\n                 \"Media Access Control Security\",
      IEEE Standard 802.1AE,\n                 August 2006.\n   [RFC4106]     Viega,
      J. and D. McGrew, \"The Use of Galois/Counter\n                 Mode (GCM) in
      IPsec Encapsulating Security Payload\n                 (ESP)\", RFC 4106, June
      2005.\n   [RFC4366]     Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen,\n
      \                J., and T. Wright, \"Transport Layer Security (TLS)\n                 Extensions\",
      RFC 4366, April 2006.\n   [RFC5289]     Rescorla, E., \"TLS Elliptic Curve Cipher
      Suites with\n                 SHA-256/384 and AES Galois Counter Mode\", RFC
      5289,\n                 August 2008.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Authors' Addresses\n   Joseph Salowey\n   Cisco Systems, Inc.\n   2901 3rd. Ave\n
    \  Seattle, WA  98121\n   USA\n   EMail: jsalowey@cisco.com\n   Abhijit Choudhury\n
    \  Cisco Systems, Inc.\n   3625 Cisco Way\n   San Jose, CA  95134\n   USA\n   EMail:
    abhijitc@cisco.com\n   David McGrew\n   Cisco Systems, Inc.\n   170 W Tasman Drive\n
    \  San Jose, CA  95134\n   USA\n   EMail: mcgrew@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
