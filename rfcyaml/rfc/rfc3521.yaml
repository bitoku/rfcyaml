- title: __initial_text__
  contents:
  - '         Framework for Session Set-up with Media Authorization

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Establishing multimedia streams must take into account requirements\n\
    \   for end-to-end QoS, authorization of network resource usage and\n   accurate\
    \ accounting for resources used.  During session set up,\n   policies may be enforced\
    \ to ensure that the media streams being\n   requested lie within the bounds of\
    \ the service profile established\n   for the requesting host.  Similarly, when\
    \ a host requests resources\n   to provide a certain QoS for a packet flow, policies\
    \ may be enforced\n   to ensure that the required resources lie within the bounds\
    \ of the\n   resource profile established for the requesting host.\n   To prevent\
    \ fraud and to ensure accurate billing, this document\n   describes various scenarios\
    \ and mechanisms that provide the linkage\n   required to verify that the resources\
    \ being used to provide a\n   requested QoS are in-line with the media streams\
    \ requested (and\n   authorized) for the session.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction....................................................2\n\
    \   2.  Conventions used in this document...............................3\n  \
    \ 3.  Definition of terms.............................................4\n   4.\
    \  The Coupled Model...............................................5\n       4.1\
    \   Coupled Model Message Flows...............................6\n       4.2  \
    \ Coupled Model Authorization Token.........................8\n       4.3   Coupled\
    \ Model Protocol Impacts............................8\n   5.  The Associated Model\
    \ <<using One Policy Server>>................8\n       5.1   Associated Model\
    \ Message Flows\n             <<using One Policy Server>>...............................9\n\
    \       5.2   Associated Model Authorization Token\n             <<using One Policy\
    \ Server>>..............................11\n       5.3   Associated Model Protocol\
    \ Impacts\n             <<using One Policy Server>>..............................11\n\
    \       5.4   Associated Model Network Impacts\n             <<using One Policy\
    \ Server>>..............................12\n   6.  The Associated Model <<using\
    \ Two Policy Servers>>..............12\n       6.1   Associated Model Message\
    \ Flows\n             <<using Two Policy Servers>>.............................13\n\
    \       6.2   Associated Model Authorization Token\n             <<using Two Policy\
    \ Servers>>.............................15\n       6.3   Associated Model Protocol\
    \ Impacts\n             <<using Two Policy Servers>>.............................16\n\
    \   7. The Non-Associated Model........................................16\n  \
    \     7.1   Non-Associated Model Message Flow........................17\n    \
    \   7.2   Non-Associated Model Authorization Token.................19\n      \
    \ 7.3   Non-Associated Model Protocol Impacts....................19\n   8.  Conclusions....................................................20\n\
    \   9.  Security Considerations........................................21\n  \
    \ 10. Normative References...........................................22\n   11.\
    \ Informative References.........................................23\n   12. Acknowledgments................................................23\n\
    \   13. Authors' Addresses.............................................24\n  \
    \ 14. Full Copyright Statement.......................................25\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Various mechanisms have been defined through which end hosts\
    \ can use\n   a session management protocol (e.g., SIP [6]) to indicate that QoS\n\
    \   requirements must be met in order to successfully set up a session.\n   However,\
    \ a separate protocol (e.g., RSVP [7]) is used to request the\n   resources required\
    \ to meet the end-to-end QoS of the media stream.\n   To prevent fraud and to\
    \ ensure accurate billing, some linkage is\n   required to verify that the resources\
    \ being used to provide the\n   requested QoS are in-line with the media streams\
    \ requested (and\n   authorized) for the session.\n   This document describes\
    \ such a linkage through use of a \"token\" that\n   provides capabilities similar\
    \ to that of a gate in [12] and of a\n   ticket in the push model of [10].  The\
    \ token is generated by a policy\n   server (or a session management server) and\
    \ is transparently relayed\n   through the end host to the edge router where it\
    \ is used as part of\n   the policy-controlled flow admission process.\n   In\
    \ some environments, authorization of media streams can exploit the\n   fact that\
    \ pre-established relationships exist between elements of the\n   network (e.g.,\
    \ session management servers, edge routers, policy\n   servers and end hosts).\
    \  Pre-established relationships assume that\n   the different network elements\
    \ are configured with the identities of\n   the other network elements and, if\
    \ necessary, are configured with\n   security keys, etc. required to establish\
    \ a trust relationship.  In\n   other environments, however, such pre-established\
    \ relationships may\n   not exist either due to the complexity of creating these\
    \ associations\n   a priori (e.g., in a network with many elements), or due to\
    \ the\n   different business entities involved (e.g., service provider and\n \
    \  access provider), or due to the dynamic nature of these associations\n   (e.g.,\
    \ in a mobile environment).\n   In this document, we describe these various scenarios\
    \ and the\n   mechanisms used for exchanging information between network elements\n\
    \   in order to authorize the use of resources for a service and to\n   coordinate\
    \ actions between the session and resource management\n   entities.  Specific\
    \ extensions to session management protocols (e.g.,\n   SIP [6], H.323), to resource\
    \ reservation protocols (e.g., RSVP [4],\n   YESSIR) and to policy management\
    \ protocols (e.g., COPS-PR [9], COPS-\n   RSVP [3]) required to realize these\
    \ scenarios and mechanisms are\n   beyond the scope of this document.\n   For\
    \ clarity, this document will illustrate the media authorization\n   concepts\
    \ using SIP for session signalling, RSVP for resource\n   reservation and COPS\
    \ for interaction with the policy servers.  Note,\n   however, that the framework\
    \ could be applied to a multimedia services\n   scenario using different signalling\
    \ protocols.\n"
- title: 2. Conventions used in this document
  contents:
  - "2. Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119 [1].\n"
- title: 3. Definition of terms
  contents:
  - "3. Definition of terms\n   Figure 1 introduces a generic model for session establishment,\
    \ QoS\n   and policy enforcement.\n                  +-------------------------------------+\
    \   +---+\n                  | SCD - Service Control Domain        |   |   |\n\
    \                  | +-----------------------+ +--------+|   | I |\n         \
    \         | |Session management     | |Policy  ||   | n |\n                  |\
    \ |server                 | |Server  ||   | t |\n                  | | +---------+\
    \ +------+  | |  +----+||<->| e |\n                  | | |SIP Proxy| |PEP   |<-|-|->|PDP\
    \ |||   | r |\n                  | | +---------+ +------+  | |  +----+||   | -\
    \ |\n                  | +-----------------------+ +--------+|   | c |\n     \
    \             |                                     |   | o |\n              \
    \    +-------------------------------------+   | n |\n                       \
    \                                     | n |\n                  +-------------------------------------+\
    \   | e |\n                  | RCD - Resource Control Domain       |   | c |\n\
    \                  |                                     |   | t |\n         \
    \         |                                     |   | i |\n                  |\
    \  +------------+    +-------------+  |   | n |\n   +----------+   |  |Edge Router\
    \ |    |Policy Server|  |   | g |\n   | End      |   |  |            |    |  \
    \           |  |   |   |\n   | Host     |   |  |+----------+|    |+----------+\
    \ |  |   | N |\n   |+--------+|   |  ||RSVP Agent||    ||PDP       | |  |   |\
    \ e |\n   ||RSVP    ||<->|  |+----------+|<-->|+----------+ |  |<->| t |\n   ||Client\
    \  ||   |  |+----------+|    |             |  |   | w |\n   |+--------+|   | \
    \ || PEP      ||    |             |  |   | o |\n   ||SIP User||   |  |+----------+|\
    \    |             |  |   | r |\n   ||Agent   ||   |  +------------+    +-------------+\
    \  |   | k |\n   |+--------+|   |                                     |   |  \
    \ |\n   +----------+   +-------------------------------------+   +---+\n     \
    \      Figure 1: Generic media authorization network model\n   EH - End Host:\
    \ The End Host is a device used by a subscriber to\n   access network services.\
    \  The End Host includes a client for\n   requesting network services (e.g., through\
    \ SIP) and a client for\n   requesting network resources (e.g., through RSVP).\n\
    \   ER - Edge Router: The Edge Router is a network element connecting the\n  \
    \ end host to the rest of the Resource Control Domain.  The Edge Router\n   contains\
    \ a PEP to enforce policies related to resource usage in the\n   Resource Control\
    \ Domain by the End Host.  It also contains a\n   signalling agent (e.g., for\
    \ RSVP) for handling resource reservation\n   requests from the End Host.\n  \
    \ PDP - Policy Decision Point: The PDP is a logical entity located in\n   the\
    \ Policy Server that is responsible for authorizing or denying\n   access to services\
    \ and/or resources.\n   PEP - Policy Enforcement Point: The PEP is a logical entity\
    \ that\n   enforces policy decisions made by the PDP.  Note that other PEPs may\n\
    \   reside in other network elements not shown in the model of Figure 1,\n   however\
    \ they will not be discussed in this document.\n   PS - Policy Server: The Policy\
    \ Server is a network element that\n   includes a PDP.  Note that there may be\
    \ a PS in the Service Control\n   Domain to control use of services and there\
    \ may be a separate PS in\n   the Resource Control Domain to control use of resources\
    \ along the\n   packet forwarding path.  Note also that network topology may require\n\
    \   multiple Policy Servers within either Domain, however they provide\n   consistent\
    \ policy decisions to offer the appearance of a single PDP\n   in each Domain.\n\
    \   RCD - Resource Control Domain: The Resource Control Domain is a\n   logical\
    \ grouping of elements that provide connectivity along the\n   packet forwarding\
    \ paths to and from an End Host.  The RCD contains ER\n   and PS entities whose\
    \ responsibilities include management of\n   resources along the packet forwarding\
    \ paths.  Note that there may be\n   one or more RCDs within an autonomous domain.\n\
    \   SCD - Service Control Domain: The Service Control Domain is a logical\n  \
    \ grouping of elements that offer applications and content to\n   subscribers\
    \ of their services.  The Session Management Server resides\n   in the SCD along\
    \ with a PS.  Note that there may be one or more SCDs\n   within an autonomous\
    \ domain.\n   SMS - Session Management Server: The Session Management Server is\
    \ a\n   network element providing session management services (e.g.,\n   telephony\
    \ call control).  The Session Management Server contains a\n   PEP to enforce\
    \ policies related to use of services by the End Host.\n   It also contains a\
    \ signalling agent or proxy (e.g., for SIP) for\n   handling service requests\
    \ from the End Host.\n"
- title: 4. The Coupled Model
  contents:
  - "4. The Coupled Model\n   In some environments, a pre-established trust relationship\
    \ exists\n   between elements of the network (e.g., session management servers,\n\
    \   edge routers, policy servers and end hosts).  We refer to this as the\n  \
    \ \"coupled model\", indicating the tight relationship between entities\n   that\
    \ is presumed.  The key aspects of this scenario are the\n   following:\n   -\
    \  Policy decisions, including media authorization, are made by a\n      single\
    \ Policy Server.\n   -  The Edge Router, Session Management Servers and Policy\
    \ Server\n      involved in establishing the session are known a priori.  For\n\
    \      example, the End Host may be configured to use a Session\n      Management\
    \ Server associated with the Edge Router to which the EH\n      is connected.\n\
    \   -  There are pre-defined trust relationships between the SMS and the\n   \
    \   PS and between the ER and the PS.\n                                      \
    \             +--------+\n      +------+                                     |\
    \        |\n      |      |   1     +--------------------+    2 |        |\n  \
    \    |      |-------->| Session Management |----->|        |\n      |      |<--------|\
    \      Server        |<-----|        |\n      |      |   4     +--------------------+\
    \    3 |        |\n      | End  |                                     | Policy\
    \ |\n      | Host |                                     | Server |\n      |  \
    \    |                                     |        |\n      |      |   5    \
    \ +--------------------+   6  |        |\n      |      |-------->|        Edge\
    \        |----->|        |\n      |      |<--------|       Router       |<-----|\
    \        |\n      |      |   8     +--------------------+    7 |        |\n  \
    \    +------+                                     |        |\n               \
    \                                    +--------+\n                        Figure\
    \ 2: The Coupled Model\n"
- title: 4.1   Coupled Model Message Flows
  contents:
  - "4.1   Coupled Model Message Flows\n   In this model, it is assumed that there\
    \ is one Policy Server serving\n   both the Service Control and Resource Control\
    \ Domains and that there\n   are pre-defined trust relationships between the PS\
    \ and SMS and\n   between the PS and ER.  Communications between these entities\
    \ are\n   then possible as described below.  Only the originating side flows\n\
    \   are described for simplicity.  The same concepts apply to the\n   terminating\
    \ side.\n   1. The End Host issues a session set-up request (e.g., SIP INVITE)\
    \ to\n      the Session Management Server indicating, among other things, the\n\
    \      media streams to be used in the session.  As part of this step,\n     \
    \ the End Host may authenticate itself to the Session Management\n      Server.\n\
    \   2. The Session Management Server, possibly after waiting for\n      negotiation\
    \ of the media streams to be completed, sends a policy\n      decision request\
    \ (e.g., COPS REQ) to the Policy Server in order to\n      determine if the session\
    \ set-up request should be allowed to\n      proceed.\n   3. The Policy Server\
    \ sends a decision (e.g., COPS DEC) to the Session\n      Management Server, possibly\
    \ after modifying the parameters of the\n      media to be used.  Included in\
    \ this response is a \"token\" that can\n      subsequently be used by the Policy\
    \ Server to identify the session\n      and the media it has authorized.\n   4.\
    \ The Session Management Server sends a response to the End Host\n      (e.g.,\
    \ SIP 200 or 183) indicating that session set-up is complete\n      or is progressing.\
    \  Included in this response is a description of\n      the negotiated media along\
    \ with the token from the Policy Server.\n   5. The End Host issues a request\
    \ (e.g., RSVP PATH) to reserve the\n      resources necessary to provide the required\
    \ QoS for the media\n      stream.  Included in this request is the token from\
    \ the Policy\n      Server provided via the Session Management Server.\n   6.\
    \ The Edge Router intercepts the reservation request and sends a\n      policy\
    \ decision request (e.g., COPS REQ) to the Policy Server in\n      order to determine\
    \ if the resource reservation request should be\n      allowed to proceed.  Included\
    \ in this request is the token from\n      the Policy Server provided by the End\
    \ Host.  The Policy Server\n      uses this token to correlate the request for\
    \ resources with the\n      media authorization previously provided to the Session\
    \ Management\n      Server.\n   7. The Policy Server sends a decision (e.g., COPS\
    \ DEC) to the Edge\n      Router, possibly after modifying the parameters of the\
    \ resources\n      to be reserved.\n   8. The Edge Router, possibly after waiting\
    \ for end-to-end negotiation\n      for resources to be completed, sends a response\
    \ to the End Host\n      (e.g., RSVP RESV) indicating that resource reservation\
    \ is complete\n      or is progressing.\n"
- title: 4.2   Coupled Model Authorization Token
  contents:
  - "4.2   Coupled Model Authorization Token\n   In the Coupled Model, the Policy\
    \ Server is the only network entity\n   that needs to interpret the contents of\
    \ the token.  Therefore, in\n   this model, the contents of the token are implementation\
    \ dependent.\n   Since the End Host is assumed to be untrusted, the Policy Server\n\
    \   SHOULD take measures to ensure that the integrity of the token is\n   preserved\
    \ in transit; the exact mechanisms to be used are also\n   implementation dependent.\n"
- title: 4.3   Coupled Model Protocol Impacts
  contents:
  - "4.3   Coupled Model Protocol Impacts\n   The use of a media authorization token\
    \ in the Coupled Model requires\n   the addition of new fields to several protocols:\n\
    \   -  Resource reservation protocol.  A new protocol field or object\n      MUST\
    \ be added to the resource reservation protocol to\n      transparently transport\
    \ the token from the End Host to the Edge\n      Router.  The content and internal\
    \ structure (if any) of this\n      object SHOULD be opaque to the resource reservation\
    \ protocol.  For\n      example, this is achieved in RSVP with the Policy Data\
    \ object\n      defined in [8].\n   -  Policy management protocol.  A new protocol\
    \ field or object MUST\n      be added to the policy management protocol to transparently\n\
    \      transport the token from the Policy Server to the Session\n      Management\
    \ Server and from the Edge Router to the Policy Server.\n      The content and\
    \ internal structure (if any) of this object SHOULD\n      be opaque to the policy\
    \ management protocol.  For example, this is\n      achieved in COPS-RSVP with\
    \ the Policy Data object defined in [8].\n   -  Session management protocol. \
    \ A new protocol field or object MUST\n      be added to the session management\
    \ protocol to transparently\n      transport the media authorization token from\
    \ the Session\n      Management Server to the End Host.  The content and internal\n\
    \      structure (if any) of this object SHOULD be opaque to the session\n   \
    \   management protocol (e.g., SIP [6]).\n"
- title: 5. The Associated Model <<using One Policy Server>>
  contents:
  - "5. The Associated Model <<using One Policy Server>>\n   In this scenario, there\
    \ are multiple instances of the Session\n   Management Servers, Edge Routers and\
    \ Policy Servers.  This leads to a\n   network of sufficient complexity that it\
    \ precludes distributing\n   knowledge of network topology to all network entities.\
    \  The key\n   aspects of this scenario are the following:\n   -  Policy decisions,\
    \ including media authorization, are made by the\n      same Policy Server for\
    \ both the Session Management Server and the\n      Edge Router.  However, the\
    \ Policy Server may change on a per-\n      transaction basis, i.e., on a per\
    \ policy request basis.\n   -  The Edge Router, Session Management Server and\
    \ Policy Server\n      involved in establishing the session are not known a priori.\
    \  For\n      example, the End Host may be dynamically configured to use one of\n\
    \      a pool of Session Management Servers and each of the Session\n      Management\
    \ Servers may be statically configured to use one of a\n      pool of Policy Servers.\n\
    \      In another example, the End Host may be mobile and continually\n      changing\
    \ the Edge Router that its point of attachment uses to\n      communicate with\
    \ the rest of the network.\n   -  There are pre-defined trust relationships between\
    \ the SMS and the\n      PS and between the ER and the PS.\n                 \
    \     +---------------------+    +---------+\n                      |       SMS\
    \ 'n'       |<-->|  PS 'm' |\n                      +---------------------+  \
    \ +--------+ |\n   +------+                  : : :              |        | |\n\
    \   |      |   1     +--------------------+    2 |        | |\n   |      |-------->|\
    \ Session Management |----->|        | |\n   |      |<--------|    Server 1  \
    \      |<-----|        | |\n   |      |   4     +--------------------+    3 |\
    \        | |\n   | End  |                                     | Policy | |\n \
    \  | Host |           +--------------------+    | Server | |\n   |      |    \
    \       |      ER 'n'        |    |   1    | |\n   |      |   5     +-+------------------+\
    \ |    |        | |\n   |      |-------->|        Edge        |-+  6 |       \
    \ | |\n   |      |<--------|       Router       |----->|        | |\n   |    \
    \  |   8     +--------------------+    7 |        | |\n   +------+           \
    \                    <-----|        |-+\n                                    \
    \            +--------+\n          Figure 3: The Associated Model using One Policy\
    \ Server\n"
- title: 5.1   Associated Model Message Flows <<using One Policy Server>>
  contents:
  - "5.1   Associated Model Message Flows <<using One Policy Server>>\n   In this\
    \ model, it is assumed that a Policy Server can make decisions\n   for both the\
    \ Service Control and Resource Control Domains and that\n   there are pre-defined\
    \ trust relationships between the PS and SMS and\n   between the PS and ER.  Communications\
    \ between these entities are\n   then possible as described below.  Only the originating\
    \ side flows\n   are described for simplicity.  The same concepts apply to the\n\
    \   terminating side.\n   1. The End Host issues a session set-up request (e.g.,\
    \ SIP INVITE) to\n      the Session Management Server indicating, among other\
    \ things, the\n      media streams to be used in the session.  As part of this\
    \ step,\n      the End Host may authenticate itself to the Session Management\n\
    \      Server.\n   2. The Session Management Server, possibly after waiting for\n\
    \      negotiation of the media streams to be completed, sends a policy\n    \
    \  decision request (e.g., COPS REQ) to the Policy Server in order to\n      determine\
    \ if the session set-up request should be allowed to\n      proceed.\n   3. The\
    \ Policy Server sends a decision (e.g., COPS DEC) to the Session\n      Management\
    \ Server, possibly after modifying the parameters of the\n      media to be used.\
    \  Included in this response is a \"token\" that can\n      subsequently be used\
    \ by the Policy Server to identify the session\n      and the media it has authorized.\n\
    \   4. The Session Management Server sends a response to the End Host\n      (e.g.,\
    \ SIP 200 or 183) indicating that session set-up is complete\n      or is progressing.\
    \  Included in this response is a description of\n      the negotiated media along\
    \ with the token from the Policy Server.\n   5. The End Host issues a request\
    \ (e.g., RSVP PATH) to reserve the\n      resources necessary to provide the required\
    \ QoS for the media\n      stream.  Included in this request is the token from\
    \ the Policy\n      Server provided via the Session Management Server.\n   6.\
    \ The Edge Router intercepts the reservation request and inspects\n      the token\
    \ to learn which Policy Server authorized the media.  It\n      then sends a policy\
    \ decision request to that Policy Server in\n      order to determine if the resource\
    \ reservation request should be\n      allowed to proceed.  Included in this request\
    \ is the token from\n      the Policy Server provided by the End Host.  The Policy\
    \ Server\n      uses this token to correlate the request for resources with the\n\
    \      media authorization previously provided to the Session Management\n   \
    \   Server.\n   7. The Policy Server sends a decision to the Edge Router, possibly\n\
    \      after modifying the parameters of the resources to be reserved.\n   8.\
    \ The Edge Router, possibly after waiting for end-to-end negotiation\n      for\
    \ resources to be completed, sends a response to the End Host\n      (e.g., RSVP\
    \ RESV) indicating that resource reservation is complete\n      or is progressing.\n"
- title: 5.2   Associated Model Authorization Token <<using One Policy Server>>
  contents:
  - "5.2   Associated Model Authorization Token <<using One Policy Server>>\n   Since\
    \ the ER does not know which SMS and PS are involved in session\n   establishment,\
    \ the token MUST include:\n   -  A correlation identifier.  This is information\
    \ that the Policy\n      Server can use to correlate the resource reservation\
    \ request with\n      the media authorized during session set up.  The Policy\
    \ Server is\n      the only network entity that needs to interpret the contents\
    \ of\n      the correlation identifier therefore, in this model, the contents\n\
    \      of the correlation identifier are implementation dependent.  Since\n  \
    \    the End Host is assumed to be untrusted, the Policy Server SHOULD\n     \
    \ take measures to ensure that the integrity of the correlation\n      identifier\
    \ is preserved in transit; the exact mechanisms to be\n      used are also implementation\
    \ dependent.\n   -  The identity of the authorizing entity.  This information\
    \ is used\n      by the Edge Router to determine which Policy Server should be\
    \ used\n      to solicit resource policy decisions.\n   In some environments,\
    \ an Edge Router may have no means for\n   determining if the identity refers\
    \ to a legitimate Policy Server\n   within its domain.  In order to protect against\
    \ redirection of\n   authorization requests to a bogus authorizing entity, the\
    \ token\n   SHOULD also include:\n   -  Authentication data.  This authentication\
    \ data is calculated over\n      all other fields of the token using an agreed\
    \ mechanism.  The\n      mechanism used by the Edge Router is beyond the scope\
    \ of this\n      document.\n   The detailed semantics of an authorization token\
    \ are defined in [4].\n"
- title: 5.3   Associated Model Protocol Impacts <<using One Policy Server>>
  contents:
  - "5.3   Associated Model Protocol Impacts <<using One Policy Server>>\n   The use\
    \ of a media authorization token in this version of the\n   Associated Model requires\
    \ the addition of new fields to several\n   protocols:\n   -  Resource reservation\
    \ protocol.  A new protocol field or object\n      MUST be added to the resource\
    \ reservation protocol to\n      transparently transport the token from the End\
    \ Host to the Edge\n      Router.  The content and internal structure of this\
    \ object MUST be\n      specified so that the Edge Router can distinguish between\
    \ the\n      elements of the token described in Section 5.2.  For example, this\n\
    \      is achieved in RSVP with the Policy Data object defined in [8].\n   - \
    \ Policy management protocol.  A new protocol field or object MUST\n      be added\
    \ to the policy management protocol to transparently\n      transport the token\
    \ -- or at least the correlation identifier --\n      from the Edge Router to\
    \ the Policy Server.  The content and\n      internal structure of this object\
    \ SHOULD be opaque to the policy\n      management protocol.  For example, this\
    \ is achieved in COPS-RSVP\n      with the Policy Data object defined in [8].\n\
    \   -  Session management protocol.  A new protocol field or object MUST\n   \
    \   be added to the session management protocol to transparently\n      transport\
    \ the media authorization token from the Session\n      Management Server to the\
    \ End Host.  The content and internal\n      structure of this object SHOULD be\
    \ opaque to the session\n      management protocol (e.g., SIP [6]).\n"
- title: 5.4   Associated Model Network Impacts <<using One Policy Server>>
  contents:
  - "5.4   Associated Model Network Impacts <<using One Policy Server>>\n   The use\
    \ of a media authorization token in this version of the\n   Associated Model requires\
    \ that the Edge Router inspect the token to\n   learn which Policy Server authorized\
    \ the media.  In some\n   environments, it may not be possible for the Edge Router\
    \ to perform\n   this function; in these cases, an Associated Model using Two\
    \ Policy\n   Servers (section 6) is required.\n   This version of the Associated\
    \ Model also requires that the Edge\n   Router interact with multiple Policy Servers.\
    \  Policy decisions are\n   made by the same Policy Server for both the Session\
    \ Management Server\n   and the Edge Router, however the Policy Server may change\
    \ on per-\n   transaction basis.  Note that the COPS framework does not currently\n\
    \   allow PEPs to change PDP on a per-transaction basis.  To use this\n   model,\
    \ a new framework must be defined for policy decision\n   outsourcing.  This model\
    \ also implies that the Policy Servers are\n   able to interact and/or make decisions\
    \ for the Edge Router in a\n   consistent manner (e.g., as though there is only\
    \ a single RCD Policy\n   Server).  How this is accomplished is beyond the scope\
    \ of this\n   document.\n"
- title: 6. The Associated Model <<using Two Policy Servers>>
  contents:
  - "6. The Associated Model <<using Two Policy Servers>>\n   In this scenario, there\
    \ are multiple instances of the Session\n   Management Servers, Edge Routers and\
    \ Policy Servers.  This leads to a\n   network of sufficient complexity that it\
    \ precludes distributing\n   knowledge of network topology to all network entities.\
    \  The key\n   aspects of this scenario are the following:\n   -  Policy decisions,\
    \ including media authorization, are made by\n      Policy Servers.\n   -  There\
    \ is a PS in the Resource Control Domain that is separate from\n      the PS in\
    \ the Service Control Domain.\n   -  The Edge Router, Session Management Server\
    \ and Policy Servers\n      involved in establishing the session are not known\
    \ a priori.  For\n      example, the End Host may be dynamically configured to\
    \ use one of\n      a pool of Session Management Servers or the End Host may be\
    \ mobile\n      and continually changing the Edge Router that it uses to\n   \
    \   communicate with the rest of the network.\n   -  There is a pre-defined trust\
    \ relationship between the SMS and the\n      SCD PS.\n   -  There is a pre-defined\
    \ trust relationship between the ER and the\n      RCD PS.\n   -  There is a pre-defined\
    \ trust relationship between the RCD and SCD\n      Policy Servers.\n        \
    \              +--------------------+    +--------+\n   +------+           | \
    \      SMS `n'      |    |        |\n   |      |   1     +-+------------------+\
    \ |    |  SCD   |\n   |      |-------->| Session Management |-+  2 | Policy |\n\
    \   |      |<--------|      Server        |----->| Server |\n   |      |   4 \
    \    +--------------------+<-----|        |\n   | End  |                     \
    \              3 +--------+\n   |      |                                     \
    \ 7 ^  |\n   | Host |           +--------------------+       |  v 8\n   |    \
    \  |           |       ER 'n'       |    +--------+\n   |      |   5     +-+------------------+\
    \ |    |        |\n   |      |-------->|        Edge        |-+  6 |  RCD   |\n\
    \   |      |<--------|       Router       |----->| Policy |\n   |      |   10\
    \    +--------------------+<--- -| Server |\n   +------+                     \
    \              9 |        |\n                                                +--------+\n\
    \         Figure 4: The Associated Model using Two Policy Servers\n"
- title: 6.1   Associated Model Message Flows <<using Two Policy Servers>>
  contents:
  - "6.1   Associated Model Message Flows <<using Two Policy Servers>>\n   In this\
    \ model, it is assumed that there is one Policy Server for the\n   Service Control\
    \ Domain and a different Policy Server for the Resource\n   Control Domain.  There\
    \ are pre-defined trust relationships between\n   the SCD PS and SMS, between\
    \ the RCD PS and ER and between the RCD and\n   SCD Policy Servers.  Communications\
    \ between these entities are then\n   possible as described below.  Only the originating\
    \ side flows are\n   described for simplicity.  The same concepts apply to the\
    \ terminating\n   side.\n   1.  The End Host issues a session set-up request (e.g.,\
    \ SIP INVITE)\n       to the Session Management Server indicating, among other\
    \ things,\n       the media streams to be used in the session.  As part of this\n\
    \       step, the End Host may authenticate itself to the Session\n       Management\
    \ Server.\n   2.  The Session Management Server, possibly after waiting for\n\
    \       negotiation of the media streams to be completed, sends a policy\n   \
    \    decision request (e.g., COPS REQ) to the SCD Policy Server in\n       order\
    \ to determine if the session set-up request should be\n       allowed to proceed.\n\
    \   3.  The SCD Policy Server sends a decision (e.g., COPS DEC) to the\n     \
    \  Session Management Server, possibly after modifying the\n       parameters\
    \ of the media to be used.  Included in this response is\n       a \"token\" that\
    \ can subsequently be used by the SCD Policy Server\n       to identify the session\
    \ and the media it has authorized.\n   4.  The Session Management Server sends\
    \ a response to the End Host\n       (e.g., SIP 200 or 183) indicating that session\
    \ set-up is complete\n       or is progressing.  Included in this response is\
    \ a description of\n       the negotiated media along with the token from the\
    \ SCD Policy\n       Server.\n   5.  The End Host issues a request (e.g., RSVP\
    \ PATH) to reserve the\n       resources necessary to provide the required QoS\
    \ for the media\n       stream.  Included in this request is the token from the\
    \ SCD\n       Policy Server provided via the Session Management Server.\n   6.\
    \  The Edge Router intercepts the reservation request and sends a\n       policy\
    \ decision request (e.g., COPS REQ) to the RCD Policy Server\n       in order\
    \ to determine if the resource reservation request should\n       be allowed to\
    \ proceed.  Included in this request is the token\n       from the SCD Policy\
    \ Server provided by the End Host.\n   7.  The RCD Policy Server uses this token\
    \ to learn which SCD Policy\n       Server authorized the media.  It then sends\
    \ an authorization\n       request [11] to that SCD Policy Server in order to\
    \ determine if\n       the resource reservation request should be allowed to proceed.\n\
    \       Included in this request is the token from the SCD Policy Server\n   \
    \    provided by the End Host.\n   8.  The SCD Policy Server uses this token to\
    \ correlate the request\n       for resources with the media authorization previously\
    \ provided to\n       the Session Management Server.  The SCD Policy Server sends\
    \ a\n       decision [11] to the RCD Policy Server on whether the requested\n\
    \       resources are within the bounds authorized by the SCD Policy\n       Server.\n\
    \   9.  The RCD Policy Server sends a decision (e.g., COPS DEC) to the\n     \
    \  Edge Router, possibly after modifying the parameters of the\n       resources\
    \ to be reserved.\n   10. The Edge Router, possibly after waiting for end-to-end\n\
    \       negotiation for resources to be completed, sends a response to\n     \
    \  the End Host (e.g., RSVP RESV) indicating that resource\n       reservation\
    \ is complete or is progressing\n"
- title: 6.2   Associated Model Authorization Token <<using Two Policy Servers>>
  contents:
  - "6.2   Associated Model Authorization Token <<using Two Policy Servers>>\n   Since\
    \ the RCD Policy Server does not know which SMS and SCD PS are\n   involved in\
    \ session establishment, the token MUST include:\n   -  A correlation identifier.\
    \  This is information that the SCD Policy\n      Server can use to correlate\
    \ the resource reservation request with\n      the media authorized during session\
    \ set up.  The SCD Policy Server\n      is the only network entity that needs\
    \ to interpret the contents of\n      the correlation identifier therefore, in\
    \ this model, the contents\n      of the correlation identifier are implementation\
    \ dependent.  Since\n      the End Host is assumed to be untrusted, the SCD Policy\
    \ Server\n      SHOULD take measures to ensure that the integrity of the\n   \
    \   correlation identifier is preserved in transit; the exact\n      mechanisms\
    \ to be used are also implementation dependent.\n   -  The identity of the authorizing\
    \ entity.  This information is used\n      by the RCD Policy Server to determine\
    \ which SCD Policy Server\n      should be used to verify the contents of the\
    \ resource reservation\n      request.\n   In some environments, an RCD Policy\
    \ Server may have no means for\n   determining if the identity refers to a legitimate\
    \ SCD Policy Server.\n   In order to protect against redirection of authorization\
    \ requests to\n   a bogus authorizing entity, the token SHOULD include:\n   -\
    \  Authentication data.  This authentication data is calculated over\n      all\
    \ other fields of the token using an agreed mechanism.  The\n      mechanism used\
    \ by the RCD Policy Server is beyond the scope of\n      this document.\n   Note\
    \ that the information in this token is the same as that in\n   Section 5.2 for\
    \ the \"One Policy Server\" scenario.\n   The detailed semantics of an authorization\
    \ token are defined in [4].\n"
- title: 6.3   Associated Model Protocol Impacts <<using Two Policy Servers>>
  contents:
  - "6.3   Associated Model Protocol Impacts <<using Two Policy Servers>>\n   The\
    \ use of a media authorization token in this version of the\n   Associated Model\
    \ requires the addition of new fields to several\n   protocols:\n   -  Resource\
    \ reservation protocol.  A new protocol field or object\n      MUST be added to\
    \ the resource reservation protocol to\n      transparently transport the token\
    \ from the End Host to the Edge\n      Router.  The content and internal structure\
    \ of this object SHOULD\n      be opaque to the resource reservation protocol.\
    \  For example, this\n      is achieved in RSVP with the Policy Data object defined\
    \ in [8].\n   -  Policy management protocol.  A new protocol field or object MUST\n\
    \      be added to the policy management protocol to transport the token\n   \
    \   from the SCD Policy Server to the Session Management Server and\n      from\
    \ the Edge Router to the RCD Policy Server.  The content and\n      internal structure\
    \ of this object MUST be specified so that the\n      Policy Servers can distinguish\
    \ between the elements of the token\n      described in Section 6.2.  For example,\
    \ this is achieved in COPS-\n      RSVP with the Policy Data object defined in\
    \ [8].\n   -  Session management protocol.  A new protocol field or object MUST\n\
    \      be added to the session management protocol to transparently\n      transport\
    \ the media authorization token from the Session\n      Management Server to the\
    \ End Host.  The content and internal\n      structure of this object SHOULD be\
    \ opaque to the session\n      management protocol (e.g., SIP [6]).\n   Note that\
    \ these impacts are the same as those discussed in Section\n   5.3 for the \"\
    One Policy Server\" scenario.  However the use of two\n   Policy Servers has one\
    \ additional impact:\n   -  Authorization protocol.  A new protocol field or object\
    \ MUST be\n      added to the authorization protocol to transport the token from\n\
    \      the RCD Policy Server to the SCD Policy Server.  The content and\n    \
    \  internal structure of this object MUST be specified so that the\n      Policy\
    \ Servers can distinguish between the elements of the token\n      described in\
    \ Section 6.2.\n"
- title: 7. The Non-Associated Model
  contents:
  - "7. The Non-Associated Model\n   In this scenario, the Session Management Servers\
    \ and Edge Routers are\n   associated with different Policy Servers, the network\
    \ entities do not\n   have a priori knowledge of the topology of the network and\
    \ there are\n   no pre-established trust relationships between entities in the\n\
    \   Resource Control Domain and entities in the Service Control Domain.\n   The\
    \ key aspects of this scenario are the following:\n   -  Policy decisions, including\
    \ media authorization, are made by\n      Policy Servers.\n   -  The PS in the\
    \ Resource Control Domain is separate from the PS in\n      the Service Control\
    \ Domain.\n   -  There is a pre-defined trust relationship between the SMS and\
    \ the\n      SCD PS.\n   -  There is a pre-defined trust relationship between\
    \ the ER and the\n      RCD PS.\n   -  There are no pre-defined trust relationships\
    \ between the ER and\n      SMS or between the RCD and SCD Policy Servers.\n \
    \                                               +--------+\n   +------+      \
    \                               |        |\n   |      |   1     +--------------------+\
    \    2 |  SCD   |\n   |      |-------->| Session Management |----->| Policy |\n\
    \   |      |<--------|      Server        |<-----| Server |\n   |      |   4 \
    \    +--------------------+    3 |        |\n   | End  |                     \
    \                +--------+\n   | Host |\n   |      |                        \
    \             +--------+\n   |      |   5     +--------------------+   6  |  \
    \      |\n   |      |-------->|        Edge        |----->|  RCD   |\n   |   \
    \   |<--------|       Router       |<-----| Policy |\n   |      |   8     +--------------------+\
    \    7 | Server |\n   +------+                                     |        |\n\
    \                                                +--------+\n                \
    \   Figure 5: The Non-Associated Model\n"
- title: 7.1   Non-Associated Model Message Flow
  contents:
  - "7.1   Non-Associated Model Message Flow\n   In this model it is assumed that\
    \ the policy servers make independent\n   decisions for their respective domains,\
    \ obviating the need for\n   information exchange between policy servers.  This\
    \ model also enables\n   session authorization when communication between policy\
    \ servers is\n   not possible for various reasons.  It may also be used as a means\
    \ to\n   speed up session setup and still ensure proper authorization is\n   performed.\n\
    \   This model does not preclude the possibility that the policy servers\n   may\
    \ communicate at other times for other purposes (e.g., exchange of\n   accounting\
    \ information).\n   Communications between network entities in this model is described\n\
    \   below.  Only the originating side flows are described for simplicity.\n  \
    \ The same concepts apply to the terminating side.\n   1. The End Host issues\
    \ a session set-up request (e.g., SIP INVITE) to\n      the Session Management\
    \ Server indicating, among other things, the\n      media streams to be used in\
    \ the session.  As part of this step,\n      the End Host may authenticate itself\
    \ to the Session Management\n      Server.\n   2. The Session Management Server,\
    \ possibly after waiting for\n      negotiation of the media streams to be completed,\
    \ sends a policy\n      decision request (e.g., COPS REQ) to the SCD Policy Server\
    \ in\n      order to determine if the session set-up request should be allowed\n\
    \      to proceed.\n   3. The SCD Policy Server sends a decision (e.g., COPS DEC)\
    \ to the\n      Session Management Server, possibly after modifying the parameters\n\
    \      of the media to be used.  Included in this response is a \"token\"\n  \
    \    that can subsequently be used by the RCD Policy Server to\n      determine\
    \ what media has been authorized.\n   4. The Session Management Server sends a\
    \ response to the End Host\n      (e.g., SIP 200 or 183) indicating that session\
    \ set-up is complete\n      or is progressing.  Included in this response is a\
    \ description of\n      the negotiated media along with the token from the SCD\
    \ Policy\n      Server.\n   5. The End Host issues a request (e.g., RSVP PATH)\
    \ to reserve the\n      resources necessary to provide the required QoS for the\
    \ media\n      stream.  Included in this request is the token from the SCD Policy\n\
    \      Server provided via the Session Management Server.\n   6. The Edge Router\
    \ intercepts the reservation request and sends a\n      policy decision request\
    \ (e.g., COPS REQ) to the RCD Policy Server\n      in order to determine if the\
    \ resource reservation request should\n      be allowed to proceed.  Included\
    \ in this request is the token from\n      the SCD Policy Server provided by the\
    \ End Host.\n   7. The RCD Policy Server uses this token to extract information\
    \ about\n      the media that was authorized by the SCD Policy Server.  The RCD\n\
    \      Policy Server uses this information in making its decision on\n      whether\
    \ the resource reservation should be allowed to proceed.\n      The Policy Server\
    \ sends a decision (e.g., COPS DEC) to the Edge\n      Router, possibly after\
    \ modifying the parameters of the resources\n      to be reserved.\n   8. The\
    \ Edge Router, possibly after waiting for end-to-end negotiation\n      for resources\
    \ to be completed, sends a response to the End Host\n      (e.g., RSVP RESV) indicating\
    \ that resource reservation is complete\n      or is progressing\n"
- title: 7.2   Non-Associated Model Authorization Token
  contents:
  - "7.2   Non-Associated Model Authorization Token\n   In this model, the token MUST\
    \ contain sufficient information to allow\n   the RCD Policy Server to make resource\
    \ policy decisions autonomously\n   from the SCD Policy Server.  The token is\
    \ created using information\n   about the session received by the SMS.  The information\
    \ in the token\n   MUST include:\n   -  Calling party name or IP address (e.g.,\
    \ from SDP \"c=\" parameter).\n   -  Called party name or IP address (e.g., from\
    \ SDP \"c=\" parameter).\n   -  The characteristics of (each of) the media stream(s)\
    \ authorized\n      for this session (e.g., codecs, maximum bandwidth from SDP\
    \ \"m=\"\n      and/or \"b=\" parameters).\n   -  The authorization lifetime.\
    \  To protect against replay attacks,\n      the token should be valid for only\
    \ a few seconds after the start\n      time of the session.\n   -  The identity\
    \ of the authorizing entity to allow for validation of\n      the token.\n   -\
    \  Authentication data used to prevent tampering with the token.\n      This authentication\
    \ data is calculated over all other fields of\n      the token using an agreed\
    \ mechanism.  The mechanism used by the\n      RCD Policy Server is beyond the\
    \ scope of this document.\n   Furthermore, the token MAY include:\n   -  The lifetime\
    \ of (each of) the media stream(s) (e.g., from SDP \"t=\"\n      parameter). \
    \ This field may be useful in pre-paid scenarios in\n      order to limit the\
    \ lifetime of the session.\n   -  The Calling and called party port numbers (e.g.,\
    \ from the \"m=\"\n      parameter).\n   The detailed semantics of an authorization\
    \ token are defined in [4].\n"
- title: 7.3   Non-Associated Model Protocol Impacts
  contents:
  - "7.3   Non-Associated Model Protocol Impacts\n   The use of a media authorization\
    \ token in the Non-Associated Model\n   requires the addition of new fields to\
    \ several protocols:\n   -  Resource reservation protocol.  A new protocol field\
    \ or object\n      MUST be added to the resource reservation protocol to\n   \
    \   transparently transport the token from the End Host to the Edge\n      Router.\
    \  The content and internal structure of this object SHOULD\n      be opaque to\
    \ the resource reservation protocol.  For example, this\n      is achieved in\
    \ RSVP with the Policy Data object defined in [8].\n   -  Policy management protocol.\
    \  A new protocol field or object MUST\n      be added to the policy management\
    \ protocol to transport the token\n      from the SCD Policy Server to the Session\
    \ Management Server and\n      from the Edge Router to the RCD Policy Server.\
    \  The content and\n      internal structure of this object MUST be specified\
    \ so that the\n      Policy Servers can distinguish between the elements of the\
    \ token\n      described in Section 7.2.  For example, this is achieved in COPS-\n\
    \      RSVP with the Policy Data object defined in [8].\n   -  Session management\
    \ protocol.  A new protocol field or object MUST\n      be added to the session\
    \ management protocol to transparently\n      transport the media authorization\
    \ token from the Session\n      Management Server to the End Host.  The content\
    \ and internal\n      structure of this object SHOULD be opaque to the session\n\
    \      management protocol (e.g., SIP [6]).\n"
- title: 8. Conclusions
  contents:
  - "8. Conclusions\n   This document defines three models for session set-up with\
    \ media\n   authorization:\n   -  The Coupled Model which assumes a priori knowledge\
    \ of network\n      topology and where pre-established trust relationships exist\n\
    \      between network entities.\n   -  The Associated Model where there are common\
    \ or trusted policy\n      servers but knowledge of the network topology is not\
    \ known a\n      priori.\n   -  The Non-Associated Model where knowledge of the\
    \ network topology\n      is not known a priori, where there are different policy\
    \ servers\n      involved and where a trust relationship does not exist between\
    \ the\n      policy servers.\n   The Associated Model is applicable to environments\
    \ where the network\n   elements involved in establishing a session have a pre-determined\n\
    \   trust relationship but where their identities must be determined\n   dynamically\
    \ during session set up.  The Non-Associated Model is\n   applicable to environments\
    \ where there is a complex network topology\n   and/or where trust relationships\
    \ between domains do not exist (e.g.,\n   when they are different business entities).\n\
    \   In any given network, one or more of these models may be applicable.\n   Indeed,\
    \ the model to be used may be chosen dynamically during session\n   establishment\
    \ based on knowledge of the end points involved in the\n   call.  In all cases,\
    \ however, there is no need for the End Host or\n   the Session Management Server\
    \ to understand or interpret the\n   authorization token - to them it is an opaque\
    \ protocol element that\n   is simply copied from one container protocol to another.\n\
    \   Finally, the framework defined in this document is extensible to any\n   kind\
    \ of session management protocol coupled to any one of a number of\n   resource\
    \ reservation and/or policy management protocols.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   The purpose of this document is to describe a\
    \ mechanism for media\n   authorization to prevent theft of service.\n   For the\
    \ authorization token to be effective, its integrity MUST be\n   guaranteed as\
    \ it passes through untrusted network entities such as\n   the End Host.  This\
    \ can be achieved by using authentication data.\n   There is no requirement for\
    \ encryption of the token since it does not\n   contain confidential information\
    \ that may be used by malicious users.\n   This document assumes that trust relationships\
    \ exist between various\n   network entities, as described in each of the models.\
    \  The means for\n   establishing these relationships are beyond the scope of\
    \ this\n   document.\n   The different interfaces between the network entities\
    \ described in\n   this document have different natures requiring different security\n\
    \   characteristics:\n   -  The edge router and RCD policy server MUST have a\
    \ trust\n      relationship.  If necessary, this relationship can be enforced\n\
    \      through a formal security association [14].\n   -  The network policies\
    \ exchanged over the interface between edge\n      router and RCD policy server\
    \ SHOULD be integrity protected.  This\n      can be accomplished using integrity\
    \ mechanisms built into the\n      policy control protocol (e.g., the Integrity\
    \ object in COPS [2])\n      or through generic IP security mechanisms [14].\n\
    \   -  The SCD and RCD policy servers MUST have a trust relationship in\n    \
    \  the associated model.  If necessary, this relationship can be\n      enforced\
    \ through a formal security association [14].\n   -  The information exchanged\
    \ over the interface between policy\n      servers SHOULD be integrity protected.\
    \  This can be accomplished\n      using integrity mechanisms built into the policy\
    \ exchange protocol\n      [2] or through generic IP security mechanisms [14].\n\
    \   -  The end host SHOULD be authenticated by the RCD to protect against\n  \
    \    identity theft.  The network resource request/responses should be\n     \
    \ protected against corruption and spoofing.  Thus, the interface\n      between\
    \ host and edge router SHOULD provide integrity and\n      authentication of messages.\
    \  For example, [13] provides integrity\n      and authentication of RSVP messages.\n\
    \   -  The end host SHOULD be authenticated by the SCD to protect against\n  \
    \    identity theft.  The session setup request/response should be\n      protected\
    \ against corruption and spoofing.  Thus, the interface\n      between host and\
    \ SMS SHOULD provide integrity and authentication\n      of messages.\n   -  The\
    \ SMS and the SCD policy server MUST have a a trust\n      relationship.  If necessary,\
    \ this relationship can be enforced\n      through a formal security association\
    \ [14].\n   -  The network policies exchanged over the interface between the SMS\n\
    \      and SCD policy server SHOULD be integrity protected.  This can be\n   \
    \   accomplished using integrity mechanisms built into the policy\n      control\
    \ protocol (e.g., the Integrity object in COPS [2]) or\n      through generic\
    \ IP security mechanisms [14].\n"
- title: 10. Normative References
  contents:
  - "10. Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs to\
    \ Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]\
    \  Durham, D., Boyle, J., Cohen, R., Herzog, S., Rajan, R. and A.\n        Sastry,\
    \ \"The COPS (Common Open Policy Service) Protocol\", RFC\n        2748, January\
    \ 2000.\n   [3]  Herzog, S., Boyle, J., Cohen, R., Durham, D., Rajan, R. and A.\n\
    \        Sastry, \"COPS usage for RSVP\", RFC 2749, January 2000.\n   [4]  Hamer,\
    \ L-N., Gage, B., Kosinski, B. and H. Shieh, \"Session\n        Authorization\
    \ Policy Element\", RFC 3520, April 2003.\n   [5]  Handley, M. and V. Jacobson,\
    \ \"SDP: session description\n        protocol,\" RFC 2327, April 1998.\n   [6]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n        Peterson,\
    \ J., Sparks, R., Handley, M. and E. Schooler, \"SIP:\n        Session Initiation\
    \ Protocol\", RFC 3261, June 2002.\n   [7]  Braden, R., Zhang, L., Berson, S.,\
    \ Herzog, S. and S. Jamin,\n        \"Resource ReSerVation protocol (RSVP) --\
    \  version 1 functional\n        specification,\" RFC 2205, September 1997.\n\
    \   [8]  Herzog, S., \"RSVP Extensions for Policy Control\", RFC 2750,\n     \
    \   January 2000.\n   [9]  Chan, K., Seligson, J., Durham, D., Gai, S., McCloghrie,\
    \ K.,\n        Herzog, S., Reichmeyer, F., Yavatkar, R. and A. Smith, \"COPS\n\
    \        Usage for Policy Provisioning (COPS-PR)\", RFC 3084, March 2001.\n"
- title: 11. Informative References
  contents:
  - "11. Informative References\n   [10] Vollbrecht, J., Calhoun, P., Farrell, S.,\
    \ Gommans, L., Gross,\n        G., de Bruijn, B., de Laat, C., Holdrege, M. and\
    \ P. Spence, \"AAA\n        Authorization Framework\", RFC 2904, August 2000.\n\
    \   [11] de Laat, C., Gross, G., Gommans, L., Vollbrecht, J. and D.\n        Spence,\
    \ \"Generic AAA Architecture\", RFC 2903, August 2000.\n   [12] \"PacketCable\
    \ Dynamic Quality of Service Specification\",\n        CableLabs, December 1999.\n\
    \   [13] Baker, F., Lindell, B. and M. Talwar, \"RSVP Cryptographic\n        Authentication\"\
    , RFC 2747, January 2000.\n   [14] Kent, S. and R. Atkinson, \"Security Architecture\
    \ for the\n        Internet Protocol\", RFC 2401, November 1998.\n"
- title: 12. Acknowledgments
  contents:
  - "12. Acknowledgments\n   The authors would like to thank to following people for\
    \ their useful\n   comments and suggestions related to this document: Kwok Ho\
    \ Chan, Doug\n   Reeves, Sam Christie, Matt Broda, Yajun Liu, Brett Kosinski,\
    \ Francois\n   Audet, Bill Marshall, Diana Rawlins and many others.\n"
- title: 13. Authors' Addresses
  contents:
  - "13. Authors' Addresses\n   Louis-Nicolas Hamer\n   Nortel Networks\n   PO Box\
    \ 3511 Station C\n   Ottawa, ON\n   CANADA K1Y 4H7\n   Phone: +1 613.768.3409\n\
    \   EMail: nhamer@nortelnetworks.com\n   Bill Gage\n   Nortel Networks\n   PO\
    \ Box 3511 Station C\n   Ottawa, ON\n   CANADA K1Y 4H7\n   Phone: +1 613.763.4400\n\
    \   EMail: gageb@nortelnetworks.com\n   Hugh Shieh\n   AT&T Wireless\n   7277\
    \ 164th Avenue NE\n   Redmond, WA\n   USA 98073-9761\n   Phone: +1 425.580.6898\n\
    \   EMail: hugh.shieh@attws.com\n"
- title: 14. Full Copyright Statement
  contents:
  - "14. Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
