- title: __initial_text__
  contents:
  - "     Request for Comments: 851\n     Obsoletes RFC: 802\n                  The\
    \ ARPANET 1822L Host Access Protocol\n                              Andrew G.\
    \ Malis\n                       ARPANET Mail: malis@bbn-unix\n               \
    \        Bolt Beranek and Newman Inc.\n                              50 Moulton\
    \ St.\n                           Cambridge, MA  02238\n     This RFC specifies\
    \ the ARPANET 1822L Host Access Protocol,  which\n     is  a successor to the\
    \ existing 1822 Host Access Protocol.  1822L\n     allows ARPANET hosts to use\
    \  logical  names  as  well  as  1822's\n     physical  port  locations to address\
    \ each other.  The RFC is also\n     being  presented  as  a  solicitation  of\
    \  comments   on   1822L,\n     especially   from   host   network   software\
    \   implementers  and\n     maintainers.\n     RFC 851\n                     \
    \        Table of Contents\n     1   INTRODUCTION..........................................\
    \ 1\n     2   THE ARPANET 1822L HOST ACCESS PROTOCOL................ 4\n     2.1\
    \   Addresses and Names................................. 6\n     2.2   Name Translations...................................\
    \ 8\n     2.2.1   Authorization and Effectiveness................... 8\n     2.2.2\
    \   Translation Policies............................. 11\n     2.2.3   Reporting\
    \ Destination Host Downs................. 13\n     2.2.4   1822L and 1822 Interoperability..................\
    \ 16\n     2.3   Uncontrolled Packets............................... 18\n    \
    \ 2.4   Establishing Host-IMP Communications............... 20\n     2.5   Counting\
    \ RFMS When Using 1822L..................... 22\n     2.6   1822L Name Server..................................\
    \ 24\n     3   1822L LEADER FORMATS................................. 27\n    \
    \ 3.1   Host-to-IMP 1822L Leader Format.................... 28\n     3.2   IMP-to-Host\
    \ 1822L Leader Format.................... 35\n     4   REFERENCES...........................................\
    \ 43\n     RFC 851\n                                  FIGURES\n     1822 Address\
    \ Format....................................... 6\n     1822L Name Format.........................................\
    \ 7\n     1822L Address Format...................................... 7\n     Communications\
    \ between different host types.............. 17\n     Host-to-IMP 1822L Leader\
    \ Format.......................... 28\n     NDM Message Format.......................................\
    \ 31\n     IMP-to-Host 1822L Leader Format.......................... 35\n    \
    \ Name Server Reply Format................................. 39\n     RFC 851\n\
    \     1  INTRODUCTION\n     This RFC specifies the ARPANET 1822L Host Access Protocol,\
    \  which\n     will allow hosts to use logical addressing (i.e., host names that\n\
    \     are independent of their physical location  on  the  ARPANET)  to\n    \
    \ communicate  with  each  other.  This new host access protocol is\n     known\
    \ as the ARPANET 1822L (for Logical)  Host  Access  Protocol,\n     and  is  a\
    \  successor  to  the  current  ARPANET 1822 Host Access\n     Protocol, which\
    \ is described in  sections  3.3  and  3.4  of  BBN\n     Report  1822  [1]. \
    \  Although  the  1822L protocol uses different\n     Host-IMP leaders than the\
    \ 1822 protocol, the IMPs  will  continue\n     to support the 1822 protocol,\
    \ and hosts using either protocol can\n     readily communicate with each other\
    \ (the  IMPs  will  handle  the\n     translation automatically).\n     There\
    \ is one major restriction to the  new  1822L  protocol:   it\n     will be implemented\
    \ in C/30 IMPs only, and will therefore only be\n     usable by hosts connected\
    \ to C/30 IMPs, as Honeywell and Pluribus\n     IMPs  do  not have sufficient\
    \ memory to hold the new programs and\n     tables.  This restriction  also  means\
    \  that  logical  addressing\n     cannot  be used to identify a host on a non-C/30\
    \ IMP.  While this\n     is not a problem on the ARPANET, which only has  C/30\
    \  IMPs,  the\n     restriction  will  apply  if  logical  addressing  is used\
    \ on any\n     network that mixes C/30 and non-C/30 IMPs.\n     RFC 851\n    \
    \ The RFC's terminology is consistent  with  that  used  in  Report\n     1822,\
    \ and any new terms will be defined when they are first used.\n     Familiarity\
    \  with  Report  1822  (section  3  in  particular)  is\n     assumed.   As could\
    \ be expected, the RFC makes many references to\n     Report 1822.  As a result,\
    \ it uses, as a convenient abbreviation,\n     \"see 1822(x)\" instead of \"please\
    \ refer to Report 1822, section x,\n     for further details\".\n     This RFC\
    \ updates, and obsoletes, RFC 802.  The changes from  that\n     RFC include:\n\
    \     o The Short Blocking Feature, which had also  been  described  in\n    \
    \   RFC 802, now has its own RFC, RFC 852 [2].  It was moved to its\n       own\
    \  RFC,  since  it  is  completely  independent  of   logical\n       addressing.\n\
    \     o In section 2.2, descriptions of  the  three  address  selection\n    \
    \   policies and of host error handling have been added.\n     o In section 2.3,\
    \ the IMP's uncontrolled packet service has  been\n       further  improved. \
    \ This applies to hosts using 1822 as well as\n       1822L.\n     o Pointers\
    \ on using RFNM counting with 1822L have been  added  as\n       section 2.5.\n\
    \     RFC 851\n     o Section 2.6 describes the new \"1822L name server\" in \
    \ the  IMP,\n       which  makes use of two new Host-to-IMP messages to allow\
    \ hosts\n       to do their own name-to-address mapping.\n     o In section 3.2,\
    \ the subtypes for the type  15  (1822L  Name  or\n       Address Error) IMP-to-Host\
    \ message have been changed.\n     RFC 851\n     2  THE ARPANET 1822L HOST ACCESS\
    \ PROTOCOL\n     The ARPANET 1822L Host Access  Protocol  allows  a  host  to\
    \  use\n     logical  addressing  to  communicate  with  other  hosts  on  the\n\
    \     ARPANET.  Basically, logical addressing allows hosts to refer  to\n    \
    \ each  other  using  an  1822L  name  (see  section  2.1) which is\n     independent\
    \ of a host's physical location in  the  network.   IEN\n     183  (also  published\
    \  as  BBN  Report 4473) [3] gives the use of\n     logical  addressing  considerable\
    \   justification.    Among   the\n     advantages it cites are:\n     o The ability\
    \ to refer to each host on  the  network  by  a  name\n       independent of its\
    \ location on the network.\n     o Allowing different hosts to share  the  same\
    \  host  port  on  a\n       time-division basis.\n     o Allowing a host to use\
    \ multi-homing (where a single  host  uses\n       more than one port to communicate\
    \ with the network).\n     o Allowing several hosts that provide the same service\
    \  to  share\n       the same name.\n     The main differences between the 1822\
    \ and 1822L protocols are the\n     format of the leaders that are used to introduce\
    \ messages between\n     a host and an IMP, and the specification in those leaders\
    \ of  the\n     source  and/or  destination  host(s).   Hosts  have the choice\
    \ of\n     RFC 851\n     using the 1822 or the 1822L protocol.  When a host comes\
    \ up on an\n     IMP,  it  declares  itself to be an 1822 host or an 1822L host\
    \ by\n     the type of NOP message (see section  3.1)  it  uses.   Once  up,\n\
    \     hosts  can  switch  from  one protocol to the other by issuing an\n    \
    \ appropriate NOP.  Hosts that do not use the 1822L  protocol  will\n     still\
    \  be  addressable by and can communicate with hosts that do,\n     and vice-versa.\n\
    \     Another difference between the two protocols  is  that  the  1822\n    \
    \ leaders are symmetric, while the 1822L leaders are not.  The term\n     symmetric\
    \ means that in the 1822 protocol, the exact same  leader\n     format  is used\
    \ for messages in both directions between the hosts\n     and IMPs.  For example,\
    \ a leader sent from a host  over  a  cable\n     that  was  looped  back onto\
    \ itself (via a looping plug or faulty\n     hardware) would arrive back at the\
    \ host and appear to be a  legal\n     message  from  a  real host (the destination\
    \ host of the original\n     message).  In contrast, the 1822L headers are not\
    \ symmetric,  and\n     a  host  can  detect  if  the  connection to its IMP is\
    \ looped by\n     receiving a message with the wrong leader  format.   This  allows\n\
    \     the host to take appropriate action upon detection of the loop.\n     RFC\
    \ 851\n     2.1  Addresses and Names\n     The 1822 protocol defines one form\
    \ of host specification, and the\n     1822L  protocol  defines  two additional\
    \ ways to identify network\n     hosts.  These three forms are 1822 addresses,\
    \  1822L  names,  and\n     1822L addresses.\n     1822 addresses are  the  24-bit\
    \  host  addresses  found  in  1822\n     leaders.  They have the following format:\n\
    \            1              8 9                              24\n           +----------------+---------------------------------+\n\
    \           |                |                                 |\n           |\
    \  Host number   |           IMP number            |\n           |           \
    \     |                                 |\n           +----------------+---------------------------------+\n\
    \                      Figure 1. 1822 Address Format\n     These fields are quite\
    \ large, and the ARPANET will never use more\n     than  a  fraction of the available\
    \ address space.  1822 addresses\n     are used in 1822 leaders only.\n     1822L\
    \ names are 16-bit unsigned numbers that serve as  a  logical\n     identifier\
    \  for  one  or  more  hosts.   1822L  names have a much\n     simpler format:\n\
    \     RFC 851\n                     1                             16\n       \
    \             +--------------------------------+\n                    |      \
    \                          |\n                    |           1822L name     \
    \      |\n                    |                                |\n           \
    \         +--------------------------------+\n                       Figure 2.\
    \ 1822L Name Format\n     The 1822L names are just 16-bit  unsigned  numbers,\
    \  except  that\n     bits  1  and  2 are not both zeros (see below).  This allows\
    \ over\n     49,000 hosts to be specified.\n     1822 addresses cannot be used\
    \ in 1822L leaders, but there may  be\n     a  requirement for an 1822L host to\
    \ be able to address a specific\n     physical host port or IMP fake host.  1822L\
    \  addresses  are  used\n     for  this  function.   1822L addresses form a subset\
    \ of the 1822L\n     name space, and have both bits 1 and 2 off.\n           \
    \         1   2  3          8 9             16\n                  +---+---+------------+----------------+\n\
    \                  |   |   |            |                |\n                 \
    \ | 0 | 0 |   host #   |   IMP number   |\n                  |   |   |       \
    \     |                |\n                  +---+---+------------+----------------+\n\
    \                      Figure 3. 1822L Address Format\n     This format allows\
    \ 1822L hosts to directly address hosts 0-63  at\n     IMPs  1-255  (IMP  0 does\
    \ not exist).  Note that the highest host\n     RFC 851\n     numbers are reserved\
    \  for  addressing  the  IMP's  internal  fake\n     hosts.   At  this  writing,\
    \ the IMP has seven fake hosts, so host\n     numbers 57-63 address the IMP fake\
    \ hosts, while host numbers 0-56\n     address  real  hosts  external  to the\
    \ IMP.  As the number of IMP\n     fake hosts changes, this boundary point will\
    \ also change.\n     2.2  Name Translations\n     There are a number of factors\
    \ that determine how an 1822L name is\n     translated  by  the  IMP  into a physical\
    \ address on the network.\n     These factors include which translations are legal;\
    \ in what order\n     different  translations  for  the  same name should be attempted;\n\
    \     which  legal  translations  shouldn't  be  attempted  because   a\n    \
    \ particular  host  port  is down; and the interoperability between\n     1822\
    \  and  1822L  hosts.   These  issues  are  discussed  in  the\n     following\
    \ sections.\n     2.2.1  Authorization and Effectiveness\n     Every host on a\
    \ C/30 IMP, regardless of whether it is  using  the\n     1822  or  1822L  protocol\
    \  to access the network, can have one or\n     more 1822L names (logical addresses).\
    \  Hosts using 1822L can then\n     use  these  names to address the hosts in\
    \ the network independent\n     of their  physical  locations.   Because  of \
    \ the  implementation\n     RFC 851\n     constraints mentioned in the introduction,\
    \ hosts on non-C/30 IMPs\n     cannot be assigned 1822L names.  To circumvent\
    \ this  restriction,\n     however,  1822L  hosts can also use 1822L addresses\
    \ to access all\n     of the other hosts.\n     At this point, several questions\
    \  arise:   How  are  these  names\n     assigned,  how  do  they  become  known\
    \  to  the  IMPs  (so  that\n     translations to physical addresses can be made),\
    \ and how  do  the\n     IMPs know which host is currently using a shared port?\
    \  To answer\n     each question in order:\n     Names are assigned by a central\
    \ network administrator.  When each\n     name  is  created, it is assigned to\
    \ a host (or a group of hosts)\n     at one or more specific host ports.  The\
    \ host(s) are  allowed  to\n     reside at those specific host ports, and nowhere\
    \ else.  If a host\n     moves, it will keep the same name, but the administrator\
    \  has  to\n     update  the  central  database  to  reflect  the  new  host port.\n\
    \     Changes to this database are  distributed  to  the  IMPs  by  the\n    \
    \ Network  Operations  Center  (NOC).  For a while, the host may be\n     allowed\
    \ to reside at either of (or both) the new and  old  ports.\n     Once  the  correspondence\
    \  between  a  name and one or more hosts\n     ports where it  may  be  used\
    \  has  been  made  official  by  the\n     administrator,   that  name  is  said\
    \  to  be  authorized.  1822L\n     addresses, which actually  refer  to  physical\
    \  host  ports,  are\n     always authorized in this sense.\n     RFC 851\n  \
    \   Once a host has been assigned one or more names, it  has  to  let\n     the\
    \  IMPs  know  where it is and what name(s) it is using.  There\n     are two\
    \ cases to consider, one for 1822L hosts  and  another  for\n     1822  hosts.\
    \   The following discussion only pertains to hosts on\n     C/30 IMPs.\n    \
    \ When an IMP sees an 1822L host come up on a host  port,  the  IMP\n     has\
    \  no way of knowing which host has just come up (several hosts\n     may share\
    \ the same port, or one host may prefer to  be  known  by\n     different  names\
    \  at different times).  This requires the host to\n     declare itself to the\
    \ IMP before it can actually send and receive\n     messages.   This  function\
    \  is  performed  by  a  new host-to-IMP\n     message, the Name Declaration \
    \ Message  (NDM),  which  lists  the\n     names  that  the  host would like to\
    \ be known by.  The IMP checks\n     its tables to see if each of the names is\
    \ authorized,  and  sends\n     an  NDM  Reply  to  the  host  saying  which \
    \ names were actually\n     authorized and can now be used for sending and receiving\
    \ messages\n     (i.e.,  which  names  are  effective). A host can also use an\
    \ NDM\n     message to change its list of effective names (it can add to  and\n\
    \     delete  from  the  list) at any time.  The only constraint on the\n    \
    \ host is that any names it wishes to use can become effective only\n     if they\
    \ are authorized.\n     In the second case, if a host comes up on a C/30  IMP\
    \  using  the\n     1822 protocol, the IMP automatically makes the first name\
    \ the IMP\n     RFC 851\n     finds in its tables for that host become effective.\
    \   Thus,  even\n     though  the host is using the 1822 protocol, it can still\
    \ receive\n     messages from 1822L hosts via its 1822L name.  Of course, it \
    \ can\n     also receive messages from an 1822L host via its 1822L address as\n\
    \     well.   (Remember,  the  distinction  between  1822L  names   and\n    \
    \ addresses  is that the addresses correspond to physical locations\n     on \
    \ the  network,  while   the   names   are   strictly   logical\n     identifiers).\
    \   The  IMPs translate between the different leaders\n     and send the proper\
    \ leader in each case (see section 2.2.4).\n     The third question above has\
    \ by now already been answered.   When\n     an  1822L  host comes up, it uses\
    \ the NDM message to tell the IMP\n     which host it is (which names it is known\
    \ by).  Even if this is a\n     shared port, the IMP knows which host is currently\
    \ connected.\n     Whenever a host goes down, its names  automatically  become\
    \  non-\n     effective.   When it comes back up, it has to make them effective\n\
    \     again.\n     2.2.2  Translation Policies\n     Several hosts can share the\
    \ same 1822L name.  If more than one of\n     these  hosts  is  up  at the same\
    \ time, any messages sent to that\n     1822L name will be delivered to just one\
    \  of  the  hosts  sharing\n     that  name,  and  a RFNM will be returned as\
    \ usual.  However, the\n     RFC 851\n     sending host will  not  receive  any\
    \  indication  of  which  host\n     received  the  message,  and subsequent messages\
    \ to that name are\n     not guaranteed to be sent to the  same  host.   Typically,\
    \  hosts\n     providing  exactly  the  same  service could share the same 1822L\n\
    \     name in this manner.\n     Similarly, when a host is multi-homed, the same\
    \  1822L  name  may\n     refer  to  more  than  one  host  port (all connected\
    \ to the same\n     host).  If the host is up on only one of those ports,  that\
    \  port\n     will be used for all messages addressed to the host.  However, if\n\
    \     the host were up on more than one  port,  the  message  would  be\n    \
    \ delivered  over  just  one  of  those ports, and the subnet would\n     choose\
    \ which port to use.  This port selection could change  from\n     message  to\
    \  message.   If  a  host wanted to insure that certain\n     messages were delivered\
    \ to it on specific ports,  these  messages\n     could  use  either  the  port's\
    \ 1822L address or a specific 1822L\n     name that referred to that port alone.\n\
    \     Three different address selection policies are available for  the\n    \
    \ name mapping process.  When translated, each name uses one of the\n     three\
    \ policies  (the  policy  is  pre-determined  on  a  per-name\n     basis).  The\
    \ three policies are:\n     o  Attempt each translation in the order in  which\
    \  the  physical\n        addresses  are listed in the IMP's translation tables,\
    \ to find\n     RFC 851\n        the first reachable  physical  host  address.\
    \   This  list  is\n        always  searched  from the top whenever an uncontrolled\
    \ packet\n        is to be sent or an end-to-end connection has to  be  created.\n\
    \        This is the most commonly used policy.\n     o  Selection of the closest\
    \  physical  address,  which  uses  the\n        IMP's   routing   tables   to\
    \  find  the  translation  to  the\n        destination IMP with the least delay\
    \ path.\n     o  Use load leveling. This is similar to the second  policy,  but\n\
    \        differs  in  that  searching  the  address  list  for  a valid\n    \
    \    translation starts at the address following where the previous\n        translation\
    \  search  ended.   This  attempts to spread out the\n        load from any one\
    \  IMP's  hosts  to  the  various  host  ports\n        associated  with  a  particular\
    \  name.   Note that this is NOT\n        network-wide load leveling, which would\
    \ require a  distributed\n        algorithm and tables.\n     2.2.3  Reporting\
    \ Destination Host Downs\n     As was explained in report 1822, and  as  will\
    \  be  discussed  in\n     greater detail in section 2.5, whenever regular messages\
    \ are sent\n     by a  host,  the  IMP  opens  a  subnetwork  connection  to \
    \ each\n     destination  host  from  the source host.  A connection will stay\n\
    \     open at least as long as there are  any  outstanding  (un-RFNMed)\n    \
    \ RFC 851\n     messages  using it and both the source and destination hosts stay\n\
    \     up.\n     However, the destination host may go down for some reason  during\n\
    \     the  lifetime of a connection.  If the host goes down while there\n    \
    \ are no outstanding messages  to  it  in  the  network,  then  the\n     connection\
    \  is  closed  and  no  other  action is taken until the\n     source host submits\
    \ the next message for  that  destination.   At\n     that time, ONE of the following\
    \ events will occur:\n     A1.  If 1822 or an 1822L address is being  used  to\
    \  specify  the\n          destination host, then the source host will receive\
    \ a type 7\n          (Destination Host Dead) message from the IMP.\n     A2.\
    \  If an 1822L name is being used to  specify  the  destination\n          host,\
    \  and  the  name maps to only one authorized host port,\n          then a type\
    \ 7 message will also be sent to the source host.\n     A3.  If an 1822L name\
    \ is being used to  specify  the  destination\n          host,  and  the  name\
    \  maps to more than one authorized host\n          port, then the IMP attempts\
    \ to open a connection to  another\n          authorized  and  effective  host\
    \  port for that name.  If no\n          such connection can be made, the host\
    \ will receive a type 15\n          (1822L  Name  or  Address  Error),  subtype\
    \  5 (no effective\n          translations) message (see section 3.2).  Note that\
    \ a type 7\n          message  cannot be returned to the source host, since type\
    \ 7\n          messages refer to a particular destination  host  port,  and\n\
    \     RFC 851\n          the name maps to more than one destination port.\n  \
    \   Things get a bit more complicated if there  are  any  outstanding\n     messages\
    \  on  the connection when the destination host goes down.\n     The connection\
    \ will be closed, and  one  of  the  following  will\n     occur:\n     B1.  If\
    \ 1822 or an 1822L address is being  used  to  specify  the\n          destination\
    \ host, then the source host will receive a type 7\n          message for each\
    \ outstanding message.\n     B2.  If an 1822L name is being used to  specify \
    \ the  destination\n          host, then the source host will receive a type 9\
    \ (Incomplete\n          Transmission),  subtype  3  (message  lost  due  to \
    \ network\n          failure)  message  for  each  outstanding message.  The next\n\
    \          time the source host submits another message for  that  same\n    \
    \      destination  name,  the  previous  algorithm  will  be  used\n        \
    \  (either step A2 or step A3).\n     The above two algorithms also apply when\
    \ a  host  stays  up,  but\n     declares  the  destination  name for an existing\
    \ connection to no\n     longer be effective.  In this case, however, the type\
    \ 7  messages\n     above will be replaced by type 15, subtype 3 (name not effective)\n\
    \     messages.\n     Section 2.3 discusses how destination host downs are handled\
    \  for\n     uncontrolled packets.\n     RFC 851\n     2.2.4  1822L and 1822 Interoperability\n\
    \     As  has  been  previously  stated,  1822  and  1822L  hosts   can\n    \
    \ intercommunicate,  and  the  IMPs  will  automatically handle any\n     necessary\
    \ leader and address format  conversions.   However,  not\n     every   combination\
    \   of   1822   and  1822L  hosts  allows  full\n     interoperability with regard\
    \ to the use of 1822L names.\n     The   following   figure   illustrates   how\
    \   these   addressing\n     combinations  are  handled,  showing  how  each \
    \ type of host can\n     access every other type of host.  There are three types\
    \ of hosts:\n     \"1822  on  C/30\"  signifies  an  1822 host that is on a C/30\
    \ IMP,\n     \"1822L\" signifies an 1822L host (on a C/30  IMP),  and  \"1822\
    \  on\n     non-C/30\"  signifies  a  host  on  an  non-C/30 IMP (which cannot\n\
    \     support the 1822L protocol).  The table entry shows the  protocol\n    \
    \ and  host address format(s) that the source host can use to reach\n     the\
    \ destination host.\n     RFC 851\n                                 Destination\
    \ Host\n       Source\n       Host    | 1822 on C/30   | 1822L          | 1822\
    \ on non-C/30\n       --------+----------------+----------------+-----------------\n\
    \               |                |                |\n       1822 on | 1822   \
    \        | 1822           | 1822\n       C/30    |                | (note 1) \
    \      |\n               |                |                |\n       --------+----------------+----------------+-----------------\n\
    \               |                |                |\n               | 1822L, using\
    \   | 1822L, using   | 1822L, using\n       1822L   | 1822L name or  | 1822L name\
    \ or  | 1822L address\n               |address (note 2)| address        | only\
    \ (note 2)\n               |                |                |\n       --------+----------------+----------------+-----------------\n\
    \               |                |                |\n       1822 on | 1822   \
    \        | 1822           | 1822\n       non-C/30|                | (note 1) \
    \      |\n               |                |                |\n       --------+----------------+----------------+-----------------\n\
    \       Note 1: The message is presented  to  the  destination  host\n       \
    \        with  an 1822L leader containing the 1822L addresses\n              \
    \ of the source  and  destination  hosts.   If  either\n               address\
    \  cannot be encoded as an 1822L address, then\n               the message is\
    \ not delivered and an error message is\n               sent to the source host.\n\
    \       Note 2: The message is presented  to  the  destination  host\n       \
    \        with  an  1822 leader containing the 1822 address of\n              \
    \ the source host.\n          Figure 4. Communications between different host\
    \ types\n     RFC 851\n     2.3  Uncontrolled Packets\n     Uncontrolled packets\
    \ (see 1822(3.6)) present a unique problem for\n     the  1822L protocol.  Uncontrolled\
    \ packets use none of the normal\n     ordering and error-control mechanisms in\
    \ the IMP, and do not  use\n     the  normal  subnetwork  connection  facilities.\
    \   As  a  result,\n     uncontrolled packets need to carry all  of  their  overhead\
    \  with\n     them, including source and destination names.  If 1822L names are\n\
    \     used when sending an uncontrolled packet, additional  information\n    \
    \ is  now required by the subnetwork when the packet is transferred\n     to the\
    \ destination IMP.  This means that less  host-to-host  data\n     can  be  contained\
    \  in  the  packet than is possible between 1822\n     hosts.\n     Uncontrolled\
    \ packets that are sent between 1822 hosts may contain\n     not  more  than \
    \ 991 bits of data.  Uncontrolled packets that are\n     sent to and/or from 1822L\
    \ hosts are limited to 32 bits  less,  or\n     not  more  than  959  bits.  Packets\
    \ that exceed this length will\n     result in an error indication to the host,\
    \ and  the  packet  will\n     not  be sent.  This error indication represents\
    \ an enhancement to\n     the previous level of service provided by the  IMP,\
    \  which  would\n     simply   discard  an  overly  long  uncontrolled  packet\
    \  without\n     notification.\n     RFC 851\n     Other enhancements that  are\
    \  provided  for  uncontrolled  packet\n     service  are  a  notification  to\
    \ the host of any errors that are\n     detected by the host's IMP when it receives\
    \ the packet.   A  host\n     will  be  notified if an uncontrolled packet contains\
    \ an error in\n     the 1822L  name  specification,  such  as  if  the  name \
    \ is  not\n     authorized or effective, if the remote host is unreachable (which\n\
    \     is indicated by none of its names being  effective),  if  network\n    \
    \ congestion control throttled the packet before it left the source\n     IMP,\
    \ or for any other reason the source IMP was not able to  send\n     the packet\
    \ on its way.\n     In most cases, the host will not be notified if the  uncontrolled\n\
    \     packet  was  lost  once  it  was  transmitted  by the source IMP.\n    \
    \ However, the IMP will attempt to notify  the  source  host  if  a\n     logically-addressed\
    \  uncontrolled packet was mistakenly sent to a\n     host that the source IMP\
    \ thought was effective, but which  turned\n     out  to  be  dead  or non-effective\
    \ at the destination IMP.  This\n     non-delivery notice  is  sent  back  to\
    \  the  source  IMP  as  an\n     uncontrolled  packet from the destination IMP,\
    \ so the source host\n     is not guaranteed to receive this indication.\n   \
    \  If the source IMP successfully receives the non-delivery  notice,\n     then\
    \  the  source  host  will  receive  a  type 15 (1822L Name or\n     Address Error),\
    \ subtype 6 (down or non-effective  port)  message.\n     If  the  packet  is\
    \  resubmitted or another packet is sent to the\n     RFC 851\n     same destination\
    \ name,  and  there  are  no  available  effective\n     translations,  then \
    \ the  source  host  will  receive  a type 15,\n     subtype 5 (no effective translations)\
    \ message if the  destination\n     name  has  more than one mapping; or will\
    \ receive either a type 7\n     (Destination Host Dead)  or  a  type  15,  subtype\
    \  3  (name  not\n     effective)   message   if  the  destination  name  has\
    \  a  single\n     translation.\n     Those enhancements to the uncontrolled packet\
    \  service  that  are\n     not  specific  to  logical  addressing will be available\
    \ to hosts\n     using  1822  as  well  as  1822L.   However,  logically-addressed\n\
    \     uncontrolled  packets  must  be  used  in  order  to  receive any\n    \
    \ indication that the packet was lost once it has left  the  source\n     IMP.\n\
    \     2.4  Establishing Host-IMP Communications\n     When a host comes up on\
    \ an IMP, or after there has been  a  break\n     in   the  communications  between\
    \  the  host  and  its  IMP  (see\n     1822(3.2)), the orderly flow of messages\
    \ between the host and the\n     IMP  needs  to  be properly (re)established.\
    \  This allows the IMP\n     and host to recover from most any failure  in  the\
    \  other  or  in\n     their communications path, including a break in mid-message.\n\
    \     RFC 851\n     The first messages that a host should send to its IMP  are\
    \  three\n     NOP  messages.   Three  messages  are  required to insure that\
    \ at\n     least one message will be properly read by the IMP (the first NOP\n\
    \     could be concatenated to a previous message if communications had\n    \
    \ been broken in mid-stream, and the third provides redundancy  for\n     the\
    \   second).    These   NOPs   serve  several  functions:  they\n     synchronize\
    \ the IMP with the host, they tell  the  IMP  how  much\n     padding  the  host\
    \  requires  between  the message leader and its\n     body, and they also tell\
    \ the IMP whether the host will  be  using\n     1822 or 1822L leaders.\n    \
    \ Similarly, the IMP will send three  NOPs  to  the  host  when  it\n     detects\
    \  that  the host has come up.  Actually, the IMP will send\n     six NOPs, alternating\
    \ three 1822  NOPs  with  three  1822L  NOPs.\n     Thus, the host will see three\
    \ NOPs no matter which protocol it is\n     using.   The  NOPs  will  be  followed\
    \  by  two  Interface  Reset\n     messages,  one of each style.  If the IMP receives\
    \ a NOP from the\n     host while the above sequence is occurring,  the  IMP \
    \ will  only\n     send  the  remainder  of  the NOPs and the Interface Reset\
    \ in the\n     proper style.  The 1822 NOPs will contain the 1822 address of the\n\
    \     host interface, and the 1822L NOPs will contain the corresponding\n    \
    \ 1822L address.\n     Once the IMP  and  the  host  have  sent  each  other \
    \ the  above\n     messages, regular communications can commence.  See 1822(3.2)\
    \ for\n     RFC 851\n     further details concerning the ready line,  host  tardiness,\
    \  and\n     other issues.\n     2.5  Counting RFMS When Using 1822L\n     When\
    \ a host submits a regular message using an 1822  leader,  the\n     IMP  checks\
    \  for  an  existing simplex virtual circuit connection\n     from the  source\
    \  host  to  the  destination  host.   If  such  a\n     connection   already\
    \  exists,  it  is  used.   Otherwise,  a  new\n     connection from the source\
    \ host port to the destination host port\n     is  opened.   In either case, there\
    \ may be at most eight messages\n     outstanding on that connection  at  any\
    \  one  time.   If  a  host\n     submits  a  ninth message on that connection\
    \ before it receives a\n     reply for the first message, then the host will be\
    \ blocked  until\n     the reply is sent for the first message.\n     Such connections\
    \ can stay open for some time, but are  timed  out\n     after  three minutes\
    \ of no activity, or can be closed if there is\n     contention for the connection\
    \ blocks  in  either  the  source  or\n     destination  IMP.   However, a connection\
    \ will never be closed as\n     long as there are any outstanding messages on\
    \ it.  This allows  a\n     source  host  to  count the number of replies it has\
    \ received for\n     messages to each destination host address in order to avoid\
    \ being\n     blocked   by  submitting  a  ninth  outstanding  message  on  any\n\
    \     RFC 851\n     connection.\n     When a host submits a regular message using\
    \ an  1822L  leader,  a\n     similar process occurs, except that in this case,\
    \ connections are\n     distinguished by the source  name/destination  name  combination.\n\
    \     When the message is received from a host, the IMP first looks for\n    \
    \ an open connection for that  same  source  name/destination  name\n     pair.\
    \   If  such  a  connection is found, then it is used, and no\n     further name\
    \ translation is  performed.   If,  however,  no  open\n     connection  was \
    \ found,  then the destination name is translated,\n     and a connection opened\
    \ to the physical host port.   As  long  as\n     there are any outstanding messages\
    \ on the connection it will stay\n     open, and it will have  the  same  restriction\
    \  that  only  eight\n     messages may be outstanding at any one time.  Thus,\
    \ a source host\n     can still count replies to avoid being blocked, but they\
    \ must  be\n     counted  on a source name/destination name pair basis, instead\
    \ of\n     just by destination host address as before.\n     Since connections\
    \ are based on the source name  as  well  as  the\n     destination  name,  this\
    \  implies that there may be more than one\n     open connection from physical\
    \ host port A to physical  host  port\n     B,   which   would   allow   more\
    \  than  8  outstanding  messages\n     simultaneously from the first to the second\
    \ port.   However,  for\n     this  to  occur, either the source or destination\
    \ names, or both,\n     must differ from one connection to the next.  For example,\
    \ if the\n     RFC 851\n     names  \"543\"  and  \"677\" both translate to physical\
    \ port 3 on IMP\n     51, then the host on that port could  open  four  connections\
    \  to\n     itself  by  sending  messages  from \"543\" to \"543\", from \"543\"\
    \ to\n     \"677\", from \"677\" to \"543\", and from \"677\" to \"677\".\n  \
    \   As has already been stated,  the  destination  names  in  regular\n     messages\
    \  are  only translated when connections are first opened.\n     Once a connection\
    \ is open, that connection, and  its  destination\n     physical  host port, will\
    \ continue to be used until it is closed.\n     If, in the meantime, a \"better\"\
    \ destination host  port  belonging\n     to  the  same  destination name became\
    \ available, it would not be\n     used until the next time a  new  connection\
    \  is  opened  to  that\n     destination name.\n     2.6  1822L Name Server\n\
    \     There may  be  times  when  a  host  wants  to  perform  its  own\n    \
    \ translations,  or  might need the full list of physical addresses\n     to which\
    \ a particular name maps.  For example, a connection-based\n     host-to-host\
    \  protocol  may  require  that the same physical host\n     port on a multi-homed\
    \ host be used for all  messages  using  that\n     host-to-host  connection,\
    \ and the host does not wish to trust the\n     IMP to always deliver messages\
    \ using a destination  name  to  the\n     same host port.\n     RFC 851\n   \
    \  In these cases, the host  can  submit  a  type  11  (Name  Server\n     Request)\
    \  message to the IMP, which requests the IMP to translate\n     the destination\
    \ 1822L name and return a list of the addresses  to\n     which  it maps.  The\
    \ IMP will respond with a type 11 (Name Server\n     Reply) message, which contains\
    \ the selection policy  in  use  for\n     that  name,  the  number of addresses\
    \ to which the name maps, the\n     addresses  themselves,  and  for  each  address,\
    \  whether  it  is\n     effective and its routing distance from the IMP.  See\
    \ section 3.2\n     for a complete description of the message's contents.\n  \
    \   Using this information, the source  host  can  make  an  informed\n     decision\
    \  on which of the physical host ports corresponding to an\n     1822L name to\
    \ use, and can subsequently send the messages to that\n     port, rather than\
    \ to the name.\n     The IMP also supports a different type of name service. \
    \  A  host\n     needs  to issue a Name Declaration Message to the IMP in order\
    \ to\n     make its names effective, but it may not wish to keep  its  names\n\
    \     in  some table or file in the host.  In this case, it can ask the\n    \
    \ IMP to tell it which names it is authorized to use.\n     In this case, the\
    \ host submits a  type  12  (Port  List  Request)\n     message to the IMP, and\
    \ the IMP replies with a type 12 (Port List\n     Reply) message.  It contains,\
    \ for the host port  over  which  the\n     IMP  received the request and sent\
    \ the reply, the number of names\n     RFC 851\n     that map to the port, the\
    \ list of names, and whether or not  each\n     name  is  effective.   The  host\
    \ can then use this information in\n     order  to  issue  the  Name  Declaration\
    \  Message.   Section  3.2\n     contains a complete description of the reply's\
    \ contents.\n     RFC 851\n     3  1822L LEADER FORMATS\n     The following sections\
    \ describe the formats of the  leaders  that\n     precede  messages  between\
    \  an 1822L host and its IMP.  They were\n     designed to be as compatible with\
    \ the 1822 leaders  as  possible.\n     The  second,  fifth,  and  sixth  words\
    \  are identical in the two\n     leaders, and all  of  the  existing  functionality\
    \  of  the  1822\n     leaders  has  been  retained.   In  the  first word, the\
    \ 1822 New\n     Format Flag is now also used to identify the two types  of  1822L\n\
    \     leaders, and the Handling Type has been moved to the second byte.\n    \
    \ The third and fourth words contain  the  Source  and  Destination\n     1822L\
    \ Name, respectively.\n     RFC 851\n     3.1  Host-to-IMP 1822L Leader Format\n\
    \                    1      4 5      8 9             16\n                   +--------+--------+----------------+\n\
    \                   |        |  1822L |                |\n                   |\
    \ Unused |  H2I   | Handling Type  |\n                   |        |  Flag  | \
    \               |\n                   +--------+--------+----------------+\n \
    \                   17    20 21 22 24 25            32\n                   +--------+-+------+----------------+\n\
    \                   |        |T|Leader|                |\n                   |\
    \ Unused |R|Flags |  Message Type  |\n                   |        |C|      | \
    \               |\n                   +--------+-+------+----------------+\n \
    \                   33                              48\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \           Source Host            |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \                   49                              64\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \         Destination Host         |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \                   65                     76 77    80\n                   +-------------------------+--------+\n\
    \                   |                         |        |\n                   |\
    \       Message ID        |Sub-type|\n                   |                   \
    \      |        |\n                   +-------------------------+--------+\n \
    \                   81                              96\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \              Unused              |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \               Figure 5. Host-to-IMP 1822L Leader Format\n     RFC 851\n    \
    \ Bits 1-4: Unused, must be set to zero.\n     Bits 5-8: 1822L Host-to-IMP Flag:\n\
    \          This field is set to decimal 13 (1101 in binary).\n     Bits 9-16:\
    \ Handling Type:\n          This  field  is  bit-coded  to  indicate  the   transmission\n\
    \          characteristics  of  the connection desired by the host. See\n    \
    \      1822(3.3).\n          Bit 9: Priority Bit:\n               Messages with\
    \ this bit on will be treated  as  priority\n               messages.\n      \
    \    Bits 10-16: Unused, must be zero.\n     Bits 17-20: Unused, must be zero.\n\
    \     Bit 21: Trace Bit:\n          If equal to one, this message is designated\
    \ for  tracing  as\n          it proceeds through the network.  See 1822(5.5).\n\
    \     Bits 22-24: Leader Flags:\n          Bit 22: A flag available for use by\
    \  the  destination  host.\n               See 1822(3.3) for a description of\
    \ its use by the IMP's\n               TTY Fake Host.\n          Bits 23-24: Reserved\
    \ for future use, must be zero.\n     RFC 851\n     Bits 25-32: Message Type:\n\
    \          Type 0: Regular Message  -  All  host-to-host  communication\n    \
    \           occurs  via  regular  messages, which have several sub-\n        \
    \       types, found in bits 77-80.  These sub-types are:\n               0: Standard\
    \ - The IMP uses its full message  and  error\n                    control facilities,\
    \ and host blocking may occur.\n               3: Uncontrolled  Packet  -  The\
    \  IMP  will  perform  no\n                    message-control   functions   for\
    \   this  type  of\n                    message, and network flow and  congestion\
    \  control\n                    may  cause loss of the packet.  Also see 1822(3.6)\n\
    \                    and section 2.3.\n               4-15: Unassigned.\n    \
    \      Type 1: Error Without Message ID - See 1822(3.3).\n          Type 2: Host\
    \ Going Down - see 1822(3.3).\n          Type 3: Name Declaration Message (NDM)\
    \  -  This  message  is\n               used by the host to declare which of its\
    \ 1822L names is\n               or is not effective (see section 2.2.1), or to\
    \ make all\n               of  its  names non-effective.  The first 16 bits of\
    \ the\n               data portion of the NDM message, following  the  leader\n\
    \               and  any  leader  padding, contains the number of 1822L\n    \
    \           names contained in the message.  This  is  followed  by\n        \
    \       the 1822L name entries, each 32 bits long, of which the\n            \
    \   first 16 bits is a 1822L name and the  second  16  bits\n               contains\
    \  either  of  the  integers  zero or one.  Zero\n     RFC 851\n             \
    \  indicates that the name should not  be  effective,  and\n               one\
    \  indicates  that the name should be effective.  The\n               IMP will\
    \ reply with a NDM Reply  message  (see  section\n               3.2)  indicating\
    \  which  of the names are now effective\n               and which are not.  Pictorially,\
    \ a NDM message has  the\n               following   format  (including  the \
    \ leader,  which  is\n               printed in hexadecimal):\n              \
    \   1             16 17            32 33            48\n                +----------------+----------------+----------------+\n\
    \                |                |                |                |\n      \
    \          |      0D00      |      0003      |      0000      |\n            \
    \    |                |                |                |\n                +----------------+----------------+----------------+\n\
    \                 49            64 65            80 81            96\n       \
    \         +----------------+----------------+----------------+\n             \
    \   |                |                |                |\n                |  \
    \    0000      |      0000      |      0000      |\n                |        \
    \        |                |                |\n                +----------------+----------------+----------------+\n\
    \                 97           112 113          128 129          144\n       \
    \         +----------------+----------------+----------------+\n             \
    \   |                |                |                |\n                |  #\
    \ of entries  |  1822L name #1 |     0 or 1     |\n                |         \
    \       |                |                |\n                +----------------+----------------+----------------+\n\
    \                145           160 161          176\n                +----------------+----------------+\n\
    \                |                |                |\n                |  1822L\
    \ name #2 |     0 or 1     |       etc.\n                |                |  \
    \              |\n                +----------------+----------------+\n      \
    \                 Figure 6. NDM Message Format\n     RFC 851\n               An\
    \  NDM  with  zero  entries  will  cause  all  current\n               effective\
    \ names for the host to become non-effective.\n          Type 4: NOP - This allows\
    \ the IMP to  know  which  style  of\n               leader  the  host wishes\
    \ to use.  A 1822L NOP signifies\n               that the host wishes to use 1822L\
    \ leaders, and an  1822\n               NOP signifies that the host wishes to\
    \ use 1822 leaders.\n               All of the other remarks concerning the NOP\
    \ message  in\n               1822(3.3)  still  hold.   The  host should always\
    \ issue\n               NOPs in groups of three to insure proper  reception  by\n\
    \               the IMP.  Also see section 2.4 for a further discussion\n    \
    \           on the use of the NOP message.\n          Type 8: Error with Message\
    \ ID - see 1822(3.3).\n          Type 11: Name Server Request - This allows the\
    \ host  to  use\n               the  IMP's  logical addressing tables as a name\
    \ server.\n               The destination name in the 1822L leader is translated,\n\
    \               and  the  IMP replies with a Name Server Reply message,\n    \
    \           which lists the physical host addresses  to  which  the\n        \
    \       destination name maps.\n          Type 12: Port List Request - This allows\
    \ the  physical  host\n               to  request the list of names that map to\
    \ the host port\n               over which this request was received by the  IMP.\
    \   The\n               IMP replies with a Port List Reply message, which lists\n\
    \               the names that map to the port.\n          Types 5-7,9-10,13-255:\
    \ Unassigned.\n     RFC 851\n     Bits 33-48: Source Host:\n          This field\
    \ contains one of the  source  host's  1822L  names\n          (or,  alternatively,\
    \  the 1822L address of the host port the\n          message  is  being  sent\
    \   over).    This   field   is   not\n          automatically filled in by the\
    \ IMP, as in the 1822 protocol,\n          because the host may be known by several\
    \ names and may  wish\n          to use a particular name as the source of this\
    \ message.  All\n          messages from the same host need not use the  same\
    \  name  in\n          this  field.   Each  source  name, when used, is checked\
    \ for\n          authorization, effectiveness, and actually belonging to this\n\
    \          host.  Messages using names that do not satisfy all of these\n    \
    \      requirements will not be delivered, and will instead  result\n        \
    \  in  an  error  message being sent back into the source host.\n          If\
    \ the host places its 1822L  address  in  this  field,  the\n          address\
    \ is checked to insure that it actually represents the\n          host port where\
    \ the message originated.  If the  message  is\n          destined for an 1822\
    \ host on a non-C/30 IMP, this field MUST\n          contain the source host's\
    \ 1822L address  (see  figure  4  in\n          section 2.2.4).\n     Bits 49-64:\
    \ Destination Host:\n          This field  contains  the  1822L  name  or  address\
    \  of  the\n          destination  host.   If it contains a name, the name will\
    \ be\n          checked for effectiveness, with an error message returned to\n\
    \     RFC 851\n          the  source  host  if  the  name  is  not effective.\
    \  If the\n          message is destined for an 1822 host on a non-C/30 IMP, this\n\
    \          field MUST contain the destination host's 1822L address (see\n    \
    \      figure 4 in section 2.2.4).\n     Bits 65-76: Message ID:\n          This\
    \ is a host-specified identification used in all  type  0\n          and  type\
    \  8  messages, and is also used in type 2 messages.\n          When used in type\
    \ 0 messages, bits 65-72 are also  known  as\n          the  Link  Field,  and\
    \  should  contain  values specified in\n          Assigned  Numbers  [4]  appropriate\
    \  for  the   host-to-host\n          protocol being used.\n     Bits 77-80: Sub-type:\n\
    \          This field is used as a modifier by message types 0,  2,  4,\n    \
    \      and 8.\n     Bits 81-96: Unused, must be zero.\n     RFC 851\n     3.2\
    \  IMP-to-Host 1822L Leader Format\n                    1      4 5      8 9  \
    \           16\n                   +--------+--------+----------------+\n    \
    \               |        |  1822L |                |\n                   | Unused\
    \ |  I2H   | Handling Type  |\n                   |        |  Flag  |        \
    \        |\n                   +--------+--------+----------------+\n        \
    \            17    20 21 22 24 25            32\n                   +--------+-+------+----------------+\n\
    \                   |        |T|Leader|                |\n                   |\
    \ Unused |R|Flags |  Message Type  |\n                   |        |C|      | \
    \               |\n                   +--------+-+------+----------------+\n \
    \                   33                              48\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \           Source Host            |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \                   49                              64\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \         Destination Host         |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \                   65                     76 77    80\n                   +-------------------------+--------+\n\
    \                   |                         |        |\n                   |\
    \       Message ID        |Sub-type|\n                   |                   \
    \      |        |\n                   +-------------------------+--------+\n \
    \                   81                              96\n                   +----------------------------------+\n\
    \                   |                                  |\n                   |\
    \          Message Length          |\n                   |                   \
    \               |\n                   +----------------------------------+\n \
    \               Figure 7. IMP-to-Host 1822L Leader Format\n     RFC 851\n    \
    \ Bits 1-4: Unused and set to zero.\n     Bits 5-8: 1822L IMP-to-Host Flag:\n\
    \          This field is set to decimal 14 (1110 in binary).\n     Bits 9-16:\
    \ Handling Type:\n          This has the value assigned by the source host (see\
    \  section\n          3.1).   This field is only used in message types 0, 5-9,\
    \ and\n          15.\n     Bits 17-20: Unused and set to zero.\n     Bit 21: Trace\
    \ Bit:\n          If equal to one, the source host designated this message for\n\
    \          tracing as it proceeds through the network.  See 1822(5.5).\n     Bits\
    \ 22-24: Leader Flags:\n          Bit 22: Available as a destination host flag.\n\
    \          Bits 23-24: Reserved for future use, set to zero.\n     Bits 25-32:\
    \ Message Type:\n          Type 0: Regular Message  -  All  host-to-host  communication\n\
    \               occurs  via  regular  messages, which have several sub-\n    \
    \           types.  The sub-type field (bits 77-80) is the same  as\n        \
    \       sent in the host-to-IMP leader (see section 3.1).\n          Type 1: Error\
    \ in Leader - See 1822(3.4).\n          Type 2: IMP Going Down - See 1822(3.4).\n\
    \     RFC 851\n          Type 3: NDM Reply - This is a reply to the  NDM  host-to-IMP\n\
    \               message  (see  section  3.1).   It  will  have the same\n    \
    \           number of entries as the  NDM  message  that  is  being\n        \
    \       replying  to,  and  each  listed  1822L  name  will  be\n            \
    \   accompanied by a zero or a one (see figure 6).  A  zero\n               signifies\
    \  that  the  name  is not effective, and a one\n               means that the\
    \ name is now effective.\n          Type 4: NOP - The host should discard this\
    \ message.   It  is\n               used    during    initialization    of   the\
    \   IMP/host\n               communication.  The Destination Host field will contain\n\
    \               the  1822L  Address of the host port over which the NOP\n    \
    \           is being sent.  All other fields are unused.\n          Type 5: Ready\
    \ for Next Message (RFNM) - See 1822(3.4).\n          Type 6: Dead Host Status\
    \ - See 1822(3.4).\n          Type 7: Destination Host or IMP  Dead  (or  unknown)\
    \  -  See\n               1822(3.4).\n          Type 8: Error in Data - See 1822(3.4).\n\
    \          Type 9: Incomplete Transmission - See 1822(3.4).\n          Type 10:\
    \ Interface Reset - See 1822(3.4).\n          Type 11: Name Server Reply - This\
    \ reply to the  Name  Server\n               Request  host-to-IMP  message  contains\
    \ a word with the\n               selection policy and the number of  physical\
    \  addresses\n               to  which  the  destination  name maps, followed\
    \ by two\n               words per physical address: the first word contains \
    \ an\n     RFC 851\n               1822L  address,  and  the  second  word  contains\
    \ a bit\n               signifying whether or not that  particular  translation\n\
    \               is effective and the routing distance (in 6.4 ms units)\n    \
    \           to the address's IMP.   In  figure  8,  EFF  is  1  for\n        \
    \       effective and 0 for non-effective, and POL is a two-bit\n            \
    \   number indicating the selection  policy  for  the  name\n               (see\
    \ section 2.2.2):\n               0: First reachable.\n               1: Closest\
    \ physical address.\n               2: Load leveling.\n               3: Unused.\n\
    \     RFC 851\n                 1             16 17            32 33         \
    \   48\n                +----------------+----------------+----------------+\n\
    \                |                |                |                |\n      \
    \          |      0E00      |      000B      |      0000      |\n            \
    \    |                |                |                |\n                +----------------+----------------+----------------+\n\
    \                 49            64 65            80 81            96\n       \
    \         +----------------+----------------+----------------+\n             \
    \   |                |                |                |\n                |  \
    \ dest. name   |      0000      |      0000      |\n                |        \
    \        |                |                |\n                +----------------+----------------+----------------+\n\
    \                 97           112 113          128 129          144\n       \
    \         +-+--------------+----------------+-+--------------+\n             \
    \   |P|              |                |E|              |\n                |O|\
    \  # of addrs  |  1822L addr #1 |F| routing dist |\n                |L|      \
    \        |                |F|              |\n                +-+--------------+----------------+-+--------------+\n\
    \                145           160 161          176\n                +----------------+-+--------------+\n\
    \                |                |E|              |\n                |  1822L\
    \ addr #2 |F| routine dist |       etc.\n                |                |F|\
    \              |\n                +----------------+-+--------------+\n      \
    \              Figure 8. Name Server Reply Format\n          Type 12: Port List\
    \ Reply - This is the  reply  to  the  Port\n               List  Request  host-to-IMP\
    \  message.   It  contains the\n               number of names that map to this\
    \  physical  host  port,\n               followed by two words per name: the first\
    \ word contains\n               an 1822L name that maps to this port,  and  the\
    \  second\n               contains  either a zero or a one, signifying whether\
    \ or\n               not that  particular  translation  is  effective.   The\n\
    \               format  is  identical  to  the type 3 NDM Reply message\n    \
    \ RFC 851\n               (see figure 6).\n          Type 15: 1822L Name or Address\
    \ Error - This message is  sent\n               in  response  to  a  type  0 \
    \ message  from a host that\n               contained an erroneous Source Host\
    \ or Destination  Host\n               field.  Its sub-types are:\n          \
    \     0: The Source Host 1822L name is not authorized or  not\n              \
    \      effective.\n               1: The Source Host 1822L address  does  not\
    \  match  the\n                    host port used to send the message.\n     \
    \          2: The Destination Host 1822L name is not authorized.\n           \
    \    3:  The  physical  host  to  which  this   singly-homed\n               \
    \     Destination Host name translated is authorized and\n                   \
    \ up, but not effective.  If the host  was  actually\n                    down,\
    \  a  type  7 message would be returned, not a\n                    type 15.\n\
    \               4: The Source or  Destination  Host  field  contains  a\n    \
    \                1822L  name,  but the host being addressed is on a\n        \
    \            non-C/30 IMP (see figure 4 in section 2.2.4).\n               5:\
    \ The multi-homed Destination Host name is authorized,\n                    but\
    \ has no available effective translations.\n               6: A logically-addressed\
    \ uncontrolled packet  was  sent\n                    to a dead or non-effective\
    \ host port.  However, if\n                    it is resubmitted, there may be\
    \ another  effective\n                    host  port to which the IMP may be able\
    \ to attempt\n     RFC 851\n                    to send the packet.\n        \
    \       7: Logical addressing is not in use in this network.\n               8-15:\
    \ Unassigned.\n          Types 13-14,16-255: Unassigned.\n     Bits 33-48: Source\
    \ Host:\n          For type 0 messages, this field contains the 1822L  name  or\n\
    \          address  of  the  host  that  originated  the  message.  All\n    \
    \      replies to the message should be sent to the host  specified\n        \
    \  herein.   For  message types 5-9 and 15, this field contains\n          the\
    \ source host field used in a previous type 0 message sent\n          by this\
    \ host.\n     Bits 49-64: Destination Host:\n          For type 0 messages, this\
    \ field contains the 1822L  name  or\n          address  that  the  message  was\
    \  sent  to.  This allows the\n          destination host to detect  how  it \
    \ was  specified  by  the\n          source  host.   For  message  types  5-9\
    \  and 15, this field\n          contains the destination host field used in a\
    \ previous  type\n          0 message sent by this host.\n     Bits 65-76: Message\
    \ ID:\n          For message types 0, 5, 7-9,  and  15,  this  is  the  value\n\
    \          assigned  by  the  source  host to identify the message (see\n    \
    \      section 3.1).  This field is also used by  message  types  2\n     RFC\
    \ 851\n          and 6.\n     Bits 77-80: Sub-type:\n          This field is used\
    \ as a modifier by message types 0-2,  5-7,\n          9, and 15.\n     Bits 81-96:\
    \ Message Length:\n          This field is contained in type 0, 3, 11,  and  12\
    \  messages\n          only,  and  is  the  actual  length  in  bits of the message\n\
    \          (exclusive of leader, leader padding, and hardware  padding)\n    \
    \      as computed by the IMP.\n     RFC 851\n     4  REFERENCES\n     [1]  Specifications\
    \ for the Interconnection of a Host and an IMP,\n          BBN Report 1822, December\
    \ 1981 Revision.\n     [2]  A. Malis, The ARPANET Short Blocking  Feature,  Request\
    \  For\n          Comments 852, April 1983.\n     [3]  E. C. Rosen et. al., ARPANET\
    \ Routing Algorithm Improvements,\n          Internet  Experimenter's  Note  183\
    \  (also  published as BBN\n          Report 4473, Vol. 1), August 1980, pp. 55-107.\n\
    \     [4]  J. Postel,  Assigned  Numbers,  Request  For  Comments  820,\n    \
    \      January 1983, p. 11.\n     RFC 851\n                                  \
    \ INDEX\n     1822...................................................... 4\n \
    \    1822 address.............................................. 6\n     1822 host.................................................\
    \ 5\n     1822L..................................................... 4\n     1822L\
    \ address............................................. 7\n     1822L host................................................\
    \ 5\n     1822L name................................................ 6\n     address\
    \ selection policy................................. 12\n     authorized................................................\
    \ 9\n     blocking................................................. 22\n     closest\
    \ physical address................................. 13\n     connection...............................................\
    \ 22\n     destination host..................................... 33, 41\n    \
    \ effective................................................ 10\n     first reachable..........................................\
    \ 12\n     handing type......................................... 29, 36\n    \
    \ host downs............................................... 13\n     leader flags.........................................\
    \ 29, 36\n     link field............................................... 34\n\
    \     load leveling............................................ 13\n     logical\
    \ addressing........................................ 4\n     message ID...........................................\
    \ 34, 41\n     message length........................................... 42\n\
    \     message type......................................... 30, 36\n     multi-homing..............................................\
    \ 4\n     name server...................................... 24, 32, 37\n     NDM..................................................\
    \ 10, 30\n     NDM reply............................................ 10, 37\n\
    \     NOC....................................................... 9\n     NOP...........................................\
    \ 5, 20, 32, 37\n     priority bit.............................................\
    \ 29\n     regular message...................................... 30, 36\n    \
    \ RFNM................................................. 22, 37\n     source host..........................................\
    \ 33, 41\n     standard message......................................... 30\n\
    \     sub-type............................................. 34, 42\n     symmetric.................................................\
    \ 5\n     trace bit............................................ 29, 36\n     uncontrolled\
    \ packet.................................. 18, 30\n"
