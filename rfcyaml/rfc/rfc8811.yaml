- title: __initial_text__
  contents:
  - '             DDoS Open Threat Signaling (DOTS) Architecture

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes an architecture for establishing and\n \
    \  maintaining Distributed Denial-of-Service (DDoS) Open Threat\n   Signaling\
    \ (DOTS) within and between domains.  The document does not\n   specify protocols\
    \ or protocol extensions, instead focusing on\n   defining architectural relationships,\
    \ components, and concepts used\n   in a DOTS deployment.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8811.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Context and Motivation\n     1.1.  Terminology\n  \
    \     1.1.1.  Key Words\n       1.1.2.  Definition of Terms\n     1.2.  Scope\n\
    \     1.3.  Assumptions\n   2.  DOTS Architecture\n     2.1.  DOTS Operations\n\
    \     2.2.  Components\n       2.2.1.  DOTS Client\n       2.2.2.  DOTS Server\n\
    \       2.2.3.  DOTS Gateway\n     2.3.  DOTS Agent Relationships\n       2.3.1.\
    \  Gatewayed Signaling\n   3.  Concepts\n     3.1.  DOTS Sessions\n       3.1.1.\
    \  Preconditions\n       3.1.2.  Establishing the DOTS Session\n       3.1.3.\
    \  Maintaining the DOTS Session\n     3.2.  Modes of Signaling\n       3.2.1.\
    \  Direct Signaling\n       3.2.2.  Redirected Signaling\n       3.2.3.  Recursive\
    \ Signaling\n       3.2.4.  Anycast Signaling\n       3.2.5.  Signaling Considerations\
    \ for Network Address\n               Translation\n     3.3.  Triggering Requests\
    \ for Mitigation\n       3.3.1.  Manual Mitigation Request\n       3.3.2.  Automated\
    \ Conditional Mitigation Request\n       3.3.3.  Automated Mitigation on Loss\
    \ of Signal\n   4.  IANA Considerations\n   5.  Security Considerations\n   6.\
    \  References\n     6.1.  Normative References\n     6.2.  Informative References\n\
    \   Acknowledgments\n   Contributors\n   Authors' Addresses\n"
- title: 1.  Context and Motivation
  contents:
  - "1.  Context and Motivation\n   Signaling the need for help to defend against\
    \ an active distributed\n   denial-of-service (DDoS) attack requires a common\
    \ understanding of\n   mechanisms and roles among the parties coordinating a defensive\n\
    \   response.  The signaling layer and supplementary messaging are the\n   focus\
    \ of DDoS Open Threat Signaling (DOTS).  DOTS defines a method of\n   coordinating\
    \ defensive measures among willing peers to mitigate\n   attacks quickly and efficiently,\
    \ enabling hybrid attack responses\n   coordinated locally at or near the target\
    \ of an active attack, or\n   anywhere in path between attack sources and target.\
    \  Sample DOTS use\n   cases are elaborated in [DOTS-USE-CASES].\n   This document\
    \ describes an architecture used in establishing,\n   maintaining, or terminating\
    \ a DOTS relationship within a domain or\n   between domains.\n"
- title: 1.1.  Terminology
  contents:
  - '1.1.  Terminology

    '
- title: 1.1.1.  Key Words
  contents:
  - "1.1.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 1.1.2.  Definition of Terms
  contents:
  - "1.1.2.  Definition of Terms\n   This document uses the terms defined in [RFC8612].\n"
- title: 1.2.  Scope
  contents:
  - "1.2.  Scope\n   In this architecture, DOTS clients and servers communicate using\
    \ DOTS\n   signal channel [RFC8782] and data channel [RFC8783] protocols.\n  \
    \ The DOTS architecture presented here is applicable across network\n   administrative\
    \ domains, for example, between an enterprise domain and\n   the domain of a third-party\
    \ attack mitigation service, as well as to\n   a single administrative domain.\
    \  DOTS is generally assumed to be most\n   effective when aiding coordination\
    \ of attack response between two or\n   more participating networks, but single\
    \ domain scenarios are valuable\n   in their own right, as when aggregating intra-domain\
    \ DOTS client\n   signals for an inter-domain coordinated attack response.\n \
    \  This document does not address any administrative or business\n   agreements\
    \ that may be established between involved DOTS parties.\n   Those considerations\
    \ are out of scope.  Regardless, this document\n   assumes necessary authentication\
    \ and authorization mechanisms are put\n   in place so that only authorized clients\
    \ can invoke the DOTS service.\n   A detailed set of DOTS requirements are discussed\
    \ in [RFC8612], and\n   the DOTS architecture is designed to follow those requirements.\
    \  Only\n   new behavioral requirements are described in this document.\n"
- title: 1.3.  Assumptions
  contents:
  - "1.3.  Assumptions\n   This document makes the following assumptions:\n   *  All\
    \ domains in which DOTS is deployed are assumed to offer the\n      required connectivity\
    \ between DOTS agents and any intermediary\n      network elements, but the architecture\
    \ imposes no additional\n      limitations on the form of connectivity.\n   *\
    \  Congestion and resource exhaustion are intended outcomes of a DDoS\n      attack\
    \ [RFC4732].  Some operators may utilize non-impacted paths\n      or networks\
    \ for DOTS.  However, in general, conditions should be\n      assumed to be hostile,\
    \ and DOTS must be able to function in all\n      circumstances, including when\
    \ the signaling path is significantly\n      impaired.  Congestion control requirements\
    \ are discussed in\n      Section 3 of [RFC8612].  The DOTS signal channel defined\
    \ in\n      [RFC8782] is designed to be extremely resilient under extremely\n\
    \      hostile network conditions, and it provides continued contact\n      between\
    \ DOTS agents even as DDoS attack traffic saturates the\n      link.\n   *  There\
    \ is no universal DDoS attack scale threshold triggering a\n      coordinated\
    \ response across administrative domains.  A network\n      domain administrator\
    \ or service or application owner may\n      arbitrarily set attack scale threshold\
    \ triggers, or manually send\n      requests for mitigation.\n   *  Mitigation\
    \ requests may be sent to one or more upstream DOTS\n      servers based on criteria\
    \ determined by DOTS client administrators\n      and the underlying network configuration.\
    \  The number of DOTS\n      servers with which a given DOTS client has established\n\
    \      communications is determined by local policy and is deployment\n      specific.\
    \  For example, a DOTS client of a multihomed network may\n      support built-in\
    \ policies to establish DOTS relationships with\n      DOTS servers located upstream\
    \ of each interconnection link.\n   *  The mitigation capacity and/or capability\
    \ of domains receiving\n      requests for coordinated attack response is opaque\
    \ to the domains\n      sending the request.  The domain receiving the DOTS client\
    \ signal\n      may or may not have sufficient capacity or capability to filter\n\
    \      any or all DDoS attack traffic directed at a target.  In either\n     \
    \ case, the upstream DOTS server may redirect a request to another\n      DOTS\
    \ server.  Redirection may be local to the redirecting DOTS\n      server's domain\
    \ or may involve a third-party domain.\n   *  DOTS client and server signals,\
    \ as well as messages sent through\n      the data channel, are sent across any\
    \ transit networks with the\n      same probability of delivery as any other traffic\
    \ between the DOTS\n      client domain and the DOTS server domain.  Any encapsulation\n\
    \      required for successful delivery is left untouched by transit\n      network\
    \ elements.  DOTS servers and DOTS clients cannot assume any\n      preferential\
    \ treatment of DOTS signals.  Such preferential\n      treatment may be available\
    \ in some deployments (e.g., intra-domain\n      scenarios), and the DOTS architecture\
    \ does not preclude its use\n      when available.  However, DOTS itself does\
    \ not address how that\n      may be done.\n   *  The architecture allows for,\
    \ but does not assume, the presence of\n      Quality-of-Service (QoS) policy\
    \ agreements between DOTS-enabled\n      peer networks or local QoS prioritization\
    \ aimed at ensuring\n      delivery of DOTS messages between DOTS agents.  QoS\
    \ is an\n      operational consideration only, not a functional part of the DOTS\n\
    \      architecture.\n   *  The signal and data channels are loosely coupled and\
    \ might not\n      terminate on the same DOTS server.  How the DOTS servers\n\
    \      synchronize the DOTS configuration is out of scope of this\n      specification.\n"
- title: 2.  DOTS Architecture
  contents:
  - "2.  DOTS Architecture\n   The basic high-level DOTS architecture is illustrated\
    \ in Figure 1:\n       | Mitigator | ~~~~~~~~~~ | DOTS Server |\n       | Attack\
    \ Target | ~~~~~~ | DOTS Client |\n                     Figure 1: Basic DOTS Architecture\n\
    \   A simple example instantiation of the DOTS architecture could be an\n   enterprise\
    \ as the attack target for a volumetric DDoS attack and an\n   upstream DDoS mitigation\
    \ service as the mitigator.  The service\n   provided by the mitigator is called\
    \ \"DDoS mitigation service\".  The\n   enterprise (attack target) is connected\
    \ to the Internet via a link\n   that is getting saturated, and the enterprise\
    \ suspects it is under\n   DDoS attack.  The enterprise has a DOTS client, which\
    \ obtains\n   information about the DDoS attack and signals the DOTS server for\n\
    \   help in mitigating the attack.  In turn, the DOTS server invokes one\n   or\
    \ more mitigators, which are tasked with mitigating the actual DDoS\n   attack\
    \ and, hence, aim to suppress the attack traffic while allowing\n   valid traffic\
    \ to reach the attack target.\n   The scope of the DOTS specifications is the\
    \ interfaces between the\n   DOTS client and DOTS server.  The interfaces to the\
    \ attack target and\n   the mitigator are out of scope of DOTS.  Similarly, the\
    \ operation of\n   both the attack target and the mitigator is out of scope of\
    \ DOTS.\n   Thus, DOTS specifies neither how an attack target decides it is under\n\
    \   DDoS attack nor does DOTS specify how a mitigator may actually\n   mitigate\
    \ such an attack.  A DOTS client's request for mitigation is\n   advisory in nature\
    \ and might not lead to any mitigation at all,\n   depending on the DOTS server\
    \ domain's capacity and willingness to\n   mitigate on behalf of the DOTS client\
    \ domain.\n   The DOTS client may be provided with a list of DOTS servers, each\n\
    \   associated with one or more IP addresses.  These addresses may or may\n  \
    \ not be of the same address family.  The DOTS client establishes one\n   or more\
    \ sessions by connecting to the provided DOTS server addresses.\n   As illustrated\
    \ in Figure 2, there are two interfaces between a DOTS\n   server and a DOTS client:\
    \ a signal channel and (optionally) a data\n   channel.\n     |  DOTS Client \
    \ |                                 |  DOTS Server  |\n                      \
    \   Figure 2: DOTS Interfaces\n   The primary purpose of the signal channel is\
    \ for a DOTS client to ask\n   a DOTS server for help in mitigating an attack\
    \ and for the DOTS\n   server to inform the DOTS client about the status of such\
    \ mitigation.\n   The DOTS client does this by sending a client signal that contains\n\
    \   information about the attack target(s).  The client signal may also\n   include\
    \ telemetry information about the attack, if the DOTS client\n   has such information\
    \ available.  In turn, the DOTS server sends a\n   server signal to inform the\
    \ DOTS client of whether it will honor the\n   mitigation request.  Assuming it\
    \ will, the DOTS server initiates\n   attack mitigation and periodically informs\
    \ the DOTS client about the\n   status of the mitigation.  Similarly, the DOTS\
    \ client periodically\n   informs the DOTS server about the client's status, which,\
    \ at a\n   minimum, provides client (attack target) health information; it\n \
    \  should also include efficacy information about the attack mitigation\n   as\
    \ it is now seen by the client.  At some point, the DOTS client may\n   decide\
    \ to terminate the server-side attack mitigation, which it\n   indicates to the\
    \ DOTS server over the signal channel.  A mitigation\n   may also be terminated\
    \ if a DOTS client-specified mitigation lifetime\n   is exceeded.  Note that the\
    \ signal channel may need to operate over a\n   link that is experiencing a DDoS\
    \ attack and, hence, is subject to\n   severe packet loss and high latency.\n\
    \   While DOTS is able to request mitigation with just the signal\n   channel,\
    \ the addition of the DOTS data channel provides for\n   additional, more efficient\
    \ capabilities.  The primary purpose of the\n   data channel is to support DOTS-related\
    \ configuration and policy\n   information exchange between the DOTS client and\
    \ the DOTS server.\n   Examples of such information include, but are not limited\
    \ to:\n   *  Creating identifiers, such as names or aliases, for resources for\n\
    \      which mitigation may be requested.  Such identifiers may then be\n    \
    \  used in subsequent signal channel exchanges to refer more\n      efficiently\
    \ to the resources under attack.\n   *  Drop-list management, which enables a\
    \ DOTS client to inform the\n      DOTS server about sources to suppress.\n  \
    \ *  Accept-list management, which enables a DOTS client to inform the\n     \
    \ DOTS server about sources from which traffic is always accepted.\n   *  Filter\
    \ management, which enables a DOTS client to install or\n      remove traffic\
    \ filters dropping or rate-limiting unwanted traffic.\n   *  DOTS client provisioning.\n\
    \   Note that, while it is possible to exchange the above information\n   before,\
    \ during, or after a DDoS attack, DOTS requires reliable\n   delivery of this\
    \ information and does not provide any special means\n   for ensuring timely delivery\
    \ of it during an attack.  In practice,\n   this means that DOTS deployments should\
    \ rely on such information\n   being exchanged only under normal traffic conditions.\n"
- title: 2.1.  DOTS Operations
  contents:
  - "2.1.  DOTS Operations\n   DOTS does not prescribe any specific deployment models;\
    \ however, DOTS\n   is designed with some specific requirements around the different\
    \ DOTS\n   agents and their relationships.\n   First of all, a DOTS agent belongs\
    \ to a domain that has an identity\n   that can be authenticated and authorized.\
    \  DOTS agents communicate\n   with each other over a mutually authenticated signal\
    \ channel and\n   (optionally) data channel.  However, before they can do so,\
    \ a service\n   relationship needs to be established between them.  The details\
    \ and\n   means by which this is done is outside the scope of DOTS; however, an\n\
    \   example would be for an enterprise A (DOTS client) to sign up for\n   DDoS\
    \ service from provider B (DOTS server).  This would establish a\n   (service)\
    \ relationship between the two that enables enterprise A's\n   DOTS client to\
    \ establish a signal channel with provider B's DOTS\n   server.  A and B will\
    \ authenticate each other, and B can verify that\n   A is authorized for its service.\n\
    \   From an operational and design point of view, DOTS assumes that the\n   above\
    \ relationship is established prior to a request for DDoS attack\n   mitigation.\
    \  In particular, it is assumed that bidirectional\n   communication is possible\
    \ at this time between the DOTS client and\n   DOTS server.  Furthermore, it is\
    \ assumed that additional service\n   provisioning, configuration, and information\
    \ exchange can be\n   performed by use of the data channel if operationally required.\
    \  It\n   is not until this point that the mitigation service is available for\n\
    \   use.\n   Once the mutually authenticated signal channel has been established,\n\
    \   it will remain active.  This is done to increase the likelihood that\n   the\
    \ DOTS client can signal the DOTS server for help when the attack\n   target is\
    \ being flooded, and similarly raise the probability that\n   DOTS server signals\
    \ reach the client regardless of inbound link\n   congestion.  This does not necessarily\
    \ imply that the attack target\n   and the DOTS client have to be co-located in\
    \ the same administrative\n   domain, but it is expected to be a common scenario.\n\
    \   DDoS mitigation with the help of an upstream mitigator may involve\n   some\
    \ form of traffic redirection whereby traffic destined for the\n   attack target\
    \ is steered towards the mitigator.  Common mechanisms to\n   achieve this redirection\
    \ depend on BGP [RFC4271] and DNS [RFC1035].\n   In turn, the mitigator inspects\
    \ and scrubs the traffic and forwards\n   the resulting (hopefully non-attack)\
    \ traffic to the attack target.\n   Thus, when a DOTS server receives an attack\
    \ mitigation request from a\n   DOTS client, it can be viewed as a way of causing\
    \ traffic redirection\n   for the attack target indicated.\n   DOTS relies on\
    \ mutual authentication and the pre-established service\n   relationship between\
    \ the DOTS client domain and the DOTS server\n   domain to provide authorization.\
    \  The DOTS server should enforce\n   authorization mechanisms to restrict the\
    \ mitigation scope a DOTS\n   client can request, but such authorization mechanisms\
    \ are deployment\n   specific.\n   Although co-location of DOTS server and mitigator\
    \ within the same\n   domain is expected to be a common deployment model, it is\
    \ assumed\n   that operators may require alternative models.  Nothing in this\n\
    \   document precludes such alternatives.\n"
- title: 2.2.  Components
  contents:
  - '2.2.  Components

    '
- title: 2.2.1.  DOTS Client
  contents:
  - "2.2.1.  DOTS Client\n   A DOTS client is a DOTS agent from which requests for\
    \ help\n   coordinating an attack response originate.  The requests may be in\n\
    \   response to an active, ongoing attack against a target in the DOTS\n   client\
    \ domain, but no active attack is required for a DOTS client to\n   request help.\
    \  Operators may wish to have upstream mitigators in the\n   network path for\
    \ an indefinite period and are restricted only by\n   business relationships when\
    \ it comes to duration and scope of\n   requested mitigation.\n   The DOTS client\
    \ requests attack response coordination from a DOTS\n   server over the signal\
    \ channel, including in the request the DOTS\n   client's desired mitigation scoping,\
    \ as described in [RFC8612] (SIG-\n   008).  The actual mitigation scope and countermeasures\
    \ used in\n   response to the attack are up to the DOTS server and mitigator\n\
    \   operators, as the DOTS client may have a narrow perspective on the\n   ongoing\
    \ attack.  As such, the DOTS client's request for mitigation\n   should be considered\
    \ advisory: guarantees of DOTS server availability\n   or mitigation capacity\
    \ constitute Service Level Agreements (SLAs) and\n   are out of scope for this\
    \ document.\n   The DOTS client adjusts mitigation scope and provides available\n\
    \   mitigation feedback (e.g., mitigation efficacy) at the direction of\n   its\
    \ local administrator.  Such direction may involve manual or\n   automated adjustments\
    \ in response to updates from the DOTS server.\n   To provide a metric of signal\
    \ health and distinguish an idle signal\n   channel from a disconnected or defunct\
    \ session, the DOTS client sends\n   a heartbeat over the signal channel to maintain\
    \ its half of the\n   channel.  The DOTS client similarly expects a heartbeat\
    \ from the DOTS\n   server and may consider a session terminated in the extended\
    \ absence\n   of a DOTS server heartbeat.\n"
- title: 2.2.2.  DOTS Server
  contents:
  - "2.2.2.  DOTS Server\n   A DOTS server is a DOTS agent capable of receiving, processing,\
    \ and\n   possibly acting on requests for help coordinating attack responses\n\
    \   from DOTS clients.  The DOTS server authenticates and authorizes DOTS\n  \
    \ clients as described in Section 3.1 and maintains session state,\n   tracks\
    \ requests for mitigation, reports on the status of active\n   mitigations, and\
    \ terminates sessions in the extended absence of a\n   client heartbeat or when\
    \ a session times out.\n   Assuming the preconditions discussed below exist, a\
    \ DOTS client\n   maintaining an active session with a DOTS server may reasonably\n\
    \   expect some level of mitigation in response to a request for\n   coordinated\
    \ attack response.\n   For a given DOTS client (administrative) domain, the DOTS\
    \ server\n   needs to be able to determine whether a given resource is in that\n\
    \   domain.  For example, this could take the form of associating a set\n   of\
    \ IP addresses and/or prefixes per DOTS client domain.  The DOTS\n   server enforces\
    \ authorization of signals for mitigation, filtering\n   rules, and aliases for\
    \ resources from DOTS clients.  The mechanism of\n   enforcement is not in scope\
    \ for this document but is expected to\n   restrict mitigation requests, filtering\
    \ rules, aliases for addresses\n   and prefixes, and/or services owned by the\
    \ DOTS client domain, such\n   that a DOTS client from one domain is not able\
    \ to influence the\n   network path to another domain.  A DOTS server MUST reject\
    \ mitigation\n   requests, filtering rules, and aliases for resources not owned\
    \ by the\n   requesting DOTS client's administrative domain.  The exact mechanism\n\
    \   for the DOTS servers to validate that the resources are within the\n   scope\
    \ of the DOTS client domain is deployment specific.  For example,\n   if the DOTS\
    \ client domain uses Provider-Aggregatable prefixes for its\n   resources and\
    \ leverages the DDoS mitigation service of the Internet\n   Transit Provider (ITP);\
    \ the ITP knows the prefixes assigned to the\n   DOTS client domain because they\
    \ are assigned by the ITP itself.\n   However, if the DDoS Mitigation is offered\
    \ by a third-party DDoS\n   mitigation service provider; it does not know the\
    \ resources owned by\n   the DOTS client domain.  The DDoS mitigation service\
    \ provider and the\n   DOTS client domain can opt to use the identifier validation\n\
    \   challenges discussed in [RFC8555] and [RFC8738] to identify whether\n   or\
    \ not the DOTS client domain actually controls the resources.  The\n   challenges\
    \ for validating control of resources must be performed when\n   no attack traffic\
    \ is present and works only for \"dns\" and \"ip\"\n   identifier types.  Further,\
    \ if the DOTS client lies about the\n   resources owned by the DOTS client domain,\
    \ the DDoS mitigation\n   service provider can impose penalties for violating\
    \ the SLA.  A DOTS\n   server MAY also refuse a DOTS client's mitigation request\
    \ for\n   arbitrary reasons, within any limits imposed by business or SLAs\n \
    \  between client and server domains.  If a DOTS server refuses a DOTS\n   client's\
    \ request for mitigation, the DOTS server MUST include the\n   refusal reason\
    \ in the server signal sent to the client.\n   A DOTS server is in regular contact\
    \ with one or more mitigators.  If\n   a DOTS server accepts a DOTS client's request\
    \ for help, the DOTS\n   server forwards a translated form of that request to\
    \ the mitigator(s)\n   responsible for scrubbing attack traffic.  Note that the\
    \ form of the\n   translated request passed from the DOTS server to the mitigator\
    \ is\n   not in scope; it may be as simple as an alert to mitigator operators,\n\
    \   or highly automated using vendor or open application programming\n   interfaces\
    \ supported by the mitigator.  The DOTS server MUST report\n   the actual scope\
    \ of any mitigation enabled on behalf of a client.\n   The DOTS server SHOULD\
    \ retrieve available metrics for any mitigations\n   activated on behalf of a\
    \ DOTS client and SHOULD include them in\n   server signals sent to the DOTS client\
    \ originating the request for\n   mitigation.\n   To provide a metric of signal\
    \ health and distinguish an idle signal\n   channel from a disconnected or defunct\
    \ channel, the DOTS server MUST\n   send a heartbeat over the signal channel to\
    \ maintain its half of the\n   channel.  The DOTS server similarly expects a heartbeat\
    \ from the DOTS\n   client and MAY consider a session terminated in the extended\
    \ absence\n   of a DOTS client heartbeat.\n"
- title: 2.2.3.  DOTS Gateway
  contents:
  - "2.2.3.  DOTS Gateway\n   Traditional client/server relationships may be expanded\
    \ by chaining\n   DOTS sessions.  This chaining is enabled through \"logical\n\
    \   concatenation\" of a DOTS server and a DOTS client, resulting in an\n   application\
    \ analogous to the Session Initiation Protocol (SIP)\n   [RFC3261] logical entity\
    \ of a Back-to-Back User Agent (B2BUA)\n   [RFC7092].  The term \"DOTS gateway\"\
    \ is used here in the descriptions\n   of selected scenarios involving this application.\n\
    \   A DOTS gateway may be deployed client side, server side, or both.\n   The\
    \ gateway may terminate multiple discrete client connections and\n   may aggregate\
    \ these into a single or multiple DOTS session(s).\n   The DOTS gateway will appear\
    \ as a server to its downstream agents and\n   as a client to its upstream agents,\
    \ a functional concatenation of the\n   DOTS client and server roles, as depicted\
    \ in Figure 3:\n         | c1 |----------| s1 | T | c2 |---------| s2 |\n    \
    \                       Figure 3: DOTS Gateway\n   The DOTS gateway MUST perform\
    \ full stack DOTS session termination and\n   reorigination between its client\
    \ and server side.  The details of how\n   this is achieved are implementation\
    \ specific.\n"
- title: 2.3.  DOTS Agent Relationships
  contents:
  - "2.3.  DOTS Agent Relationships\n   So far, we have only considered a relatively\
    \ simple scenario of a\n   single DOTS client associated with a single DOTS server;\
    \ however,\n   DOTS supports more advanced relationships.\n   A DOTS server may\
    \ be associated with one or more DOTS clients, and\n   those DOTS clients may\
    \ belong to different domains.  An example\n   scenario is a mitigation provider\
    \ serving multiple attack targets\n   (Figure 4).\n      DOTS clients       DOTS\
    \ server\n      +---+\n      | c |-----------\n      +---+           \\\n    \
    \  c1.example.org   \\\n                        \\\n      | c |----------------|\
    \ S |\n      c1.example.com    /  dots1.example.net\n                       /\n\
    \      +---+           /\n      | c |-----------\n      +---+\n      c2.example.com\n\
    \                Figure 4: DOTS Server with Multiple Clients\n   A DOTS client\
    \ may be associated with one or more DOTS servers, and\n   those DOTS servers\
    \ may belong to different domains.  This may be to\n   ensure high availability\
    \ or coordinate mitigation with more than one\n   directly connected ISP.  An\
    \ example scenario is for an enterprise to\n   have DDoS mitigation service from\
    \ multiple providers, as shown in\n   Figure 5.\n      DOTS client        DOTS\
    \ servers\n               -----------| S |\n             /            dots1.example.net\n\
    \            /\n      | c |---------------| S |\n            \\             dots.example.org\n\
    \             \\\n               -----------| S |\n      c.example.com       dots2.example.net\n\
    \                      Figure 5: Multihomed DOTS Client\n   Deploying a multihomed\
    \ client requires extra care and planning, as\n   the DOTS servers with which\
    \ the multihomed client communicates might\n   not be affiliated.  Should the\
    \ multihomed client simultaneously\n   request for mitigation from all servers\
    \ with which it has established\n   signal channels, the client may unintentionally\
    \ inflict additional\n   network disruption on the resources it intends to protect.\
    \  In one of\n   the worst cases, a multihomed DOTS client could cause a permanent\n\
    \   routing loop of traffic destined for the client's protected services,\n  \
    \ as the uncoordinated DOTS servers' mitigators all try to divert that\n   traffic\
    \ to their own scrubbing centers.\n   The DOTS protocol itself provides no fool-proof\
    \ method to prevent\n   such self-inflicted harms as a result of deploying multihomed\
    \ DOTS\n   clients.  If DOTS client implementations nevertheless include support\n\
    \   for multihoming, they are expected to be aware of the risks, and\n   consequently\
    \ to include measures aimed at reducing the likelihood of\n   negative outcomes.\
    \  Simple measures might include:\n   *  Requesting mitigation serially, ensuring\
    \ only one mitigation\n      request for a given address space is active at any\
    \ given time;\n   *  Dividing the protected resources among the DOTS servers,\
    \ such that\n      no two mitigators will be attempting to divert and scrub the\
    \ same\n      traffic;\n   *  Restricting multihoming to deployments in which\
    \ all DOTS servers\n      are coordinating management of a shared pool of mitigation\n\
    \      resources.\n"
- title: 2.3.1.  Gatewayed Signaling
  contents:
  - "2.3.1.  Gatewayed Signaling\n   As discussed in Section 2.2.3, a DOTS gateway\
    \ is a logical function\n   chaining DOTS sessions through concatenation of a\
    \ DOTS server and\n   DOTS client.\n   An example scenario, as shown in Figure\
    \ 6 and Figure 7, is for an\n   enterprise to have deployed multiple DOTS-capable\
    \ devices that are\n   able to signal intra-domain using TCP [RFC0793] on uncongested\
    \ links\n   to a DOTS gateway that may then transform these to a UDP [RFC0768]\n\
    \   transport inter-domain where connection-oriented transports may\n   degrade;\
    \ this applies to the signal channel only, as the data channel\n   requires a\
    \ connection-oriented transport.  The relationship between\n   the gateway and\
    \ its upstream agents is opaque to the initial clients.\n         +---+\n    \
    \     | c |\\\n                \\-----TCP-----| D |               +---+\n    \
    \     | c |--------TCP-----| T |------UDP------| S |\n                /-----TCP-----|\
    \ G |               +---+\n         | c |/\n         +---+\n         example.com\
    \       example.com           example.net\n         DOTS clients      DOTS gateway\
    \ (DOTSG)  DOTS server\n               Figure 6: Client-Side Gateway with Aggregation\n\
    \         +---+\n         | c |\\\n                \\-----TCP-----| D |------UDP------+---+\n\
    \         | c |--------TCP-----| T |------UDP------| S |\n                /-----TCP-----|\
    \ G |------UDP------+---+\n         | c |/\n         +---+\n         example.com\
    \       example.com           example.net\n         DOTS clients      DOTS gateway\
    \ (DOTSG)  DOTS server\n             Figure 7: Client-Side Gateway without Aggregation\n\
    \   This may similarly be deployed in the inverse scenario where the\n   gateway\
    \ resides in the server-side domain and may be used to\n   terminate and/or aggregate\
    \ multiple clients to a single transport as\n   shown in Figure 8 and Figure 9.\n\
    \         +---+\n         | c |\\\n                \\-----UDP-----| D |      \
    \         +---+\n         | c |--------TCP-----| T |------TCP------| S |\n   \
    \             /-----TCP-----| G |               +---+\n         | c |/\n     \
    \    +---+\n         example.com       example.net           example.net\n   \
    \      DOTS clients      DOTS gateway (DOTSG)  DOTS server\n               Figure\
    \ 8: Server-Side Gateway with Aggregation\n         +---+\n         | c |\\\n\
    \                \\-----UDP-----| D |------TCP------+---+\n         | c |--------TCP-----|\
    \ T |------TCP------| S |\n                /-----UDP-----| G |------TCP------+---+\n\
    \         | c |/\n         +---+\n         example.com       example.net     \
    \      example.net\n         DOTS clients      DOTS gateway (DOTSG)  DOTS server\n\
    \             Figure 9: Server-Side Gateway without Aggregation\n   This document\
    \ anticipates scenarios involving multiple DOTS gateways.\n   An example is a\
    \ DOTS gateway at the network client's side and another\n   one at the server\
    \ side.  The first gateway can be located at Customer\n   Premises Equipment (CPE)\
    \ to aggregate requests from multiple DOTS\n   clients enabled in an enterprise\
    \ network.  The second DOTS gateway is\n   deployed on the provider side.  This\
    \ scenario can be seen as a\n   combination of the client-side and server-side\
    \ scenarios.\n"
- title: 3.  Concepts
  contents:
  - '3.  Concepts

    '
- title: 3.1.  DOTS Sessions
  contents:
  - "3.1.  DOTS Sessions\n   In order for DOTS to be effective as a vehicle for DDoS\
    \ mitigation\n   requests, one or more DOTS clients must establish ongoing\n \
    \  communication with one or more DOTS servers.  While the preconditions\n   for\
    \ enabling DOTS in or among network domains may also involve\n   business relationships,\
    \ SLAs, or other formal or informal\n   understandings between network operators,\
    \ such considerations are out\n   of scope for this document.\n   A DOTS session\
    \ is established to support bilateral exchange of data\n   between an associated\
    \ DOTS client and a DOTS server.  In the DOTS\n   architecture, data is exchanged\
    \ between DOTS agents over signal and\n   data channels.  As such, a DOTS session\
    \ can be a DOTS signal channel\n   session, a DOTS data channel session, or both.\
    \  The DOTS server\n   couples the DOTS signal and data channel sessions using\
    \ the DOTS\n   client identity.  The DOTS session is further elaborated in the\
    \ DOTS\n   signal channel protocol defined in [RFC8782] and the DOTS data\n  \
    \ channel protocol defined in [RFC8783].\n   A DOTS agent can maintain one or\
    \ more DOTS sessions.\n   A DOTS signal channel session is associated with a single\
    \ transport\n   connection (TCP or UDP session) and a security association (a\
    \ TLS or\n   DTLS session).  Similarly, a DOTS data channel session is associated\n\
    \   with a single TCP connection and a TLS security association.\n   Mitigation\
    \ requests created using the DOTS signal channel are not\n   bound to the DOTS\
    \ signal channel session.  Instead, mitigation\n   requests are associated with\
    \ a DOTS client and can be managed using\n   different DOTS signal channel sessions.\n"
- title: 3.1.1.  Preconditions
  contents:
  - "3.1.1.  Preconditions\n   Prior to establishing a DOTS session between agents,\
    \ the owners of\n   the networks, domains, services or applications involved are\
    \ assumed\n   to have agreed upon the terms of the relationship involved.  Such\n\
    \   agreements are out of scope for this document but must be in place\n   for\
    \ a functional DOTS architecture.\n   It is assumed that, as part of any DOTS\
    \ service agreement, the DOTS\n   client is provided with all data and metadata\
    \ required to establish\n   communication with the DOTS server.  Such data and\
    \ metadata would\n   include any cryptographic information necessary to meet the\
    \ message\n   confidentiality, integrity, and authenticity requirement (SEC-002)\
    \ in\n   [RFC8612] and might also include the pool of DOTS server addresses\n\
    \   and ports the DOTS client should use for signal and data channel\n   messaging.\n"
- title: 3.1.2.  Establishing the DOTS Session
  contents:
  - "3.1.2.  Establishing the DOTS Session\n   With the required business agreements\
    \ in place, the DOTS client\n   initiates a DOTS session by contacting its DOTS\
    \ server(s) over the\n   signal channel and (possibly) the data channel.  To allow\
    \ for DOTS\n   service flexibility, neither the order of contact nor the time\n\
    \   interval between channel creations is specified.  A DOTS client MAY\n   establish\
    \ the signal channel first, and then the data channel, or\n   vice versa.\n  \
    \ The methods by which a DOTS client receives the address and\n   associated service\
    \ details of the DOTS server are not prescribed by\n   this document.  For example,\
    \ a DOTS client may be directly configured\n   to use a specific DOTS server IP\
    \ address and port, and be directly\n   provided with any data necessary to satisfy\
    \ the Peer Mutual\n   Authentication requirement (SEC-001) in [RFC8612], such\
    \ as symmetric\n   or asymmetric keys, usernames, passwords, etc.  All configuration\
    \ and\n   authentication information in this scenario is provided out of band\n\
    \   by the domain operating the DOTS server.\n   At the other extreme, the architecture\
    \ in this document allows for a\n   form of DOTS client auto-provisioning.  For\
    \ example, the domain\n   operating the DOTS server or servers might provide the\
    \ client domain\n   only with symmetric or asymmetric keys to authenticate the\n\
    \   provisioned DOTS clients.  Only the keys would then be directly\n   configured\
    \ on DOTS clients, but the remaining configuration required\n   to provision the\
    \ DOTS clients could be learned through mechanisms\n   similar to DNS SRV [RFC2782]\
    \ or DNS Service Discovery [RFC6763].\n   The DOTS client SHOULD successfully\
    \ authenticate and exchange\n   messages with the DOTS server over both the signal\
    \ and (if used) data\n   channel as soon as possible to confirm that both channels\
    \ are\n   operational.\n   As described in [RFC8612] (DM-008), the DOTS client\
    \ can configure\n   preferred values for acceptable signal loss, mitigation lifetime,\
    \ and\n   heartbeat intervals when establishing the DOTS signal channel\n   session.\
    \  A DOTS signal channel session is not active until DOTS\n   agents have agreed\
    \ on the values for these DOTS session parameters, a\n   process defined by the\
    \ protocol.\n   Once the DOTS client begins receiving DOTS server signals, the\
    \ DOTS\n   session is active.  At any time during the DOTS session, the DOTS\n\
    \   client may use the data channel to manage aliases, manage drop- and\n   accept-listed\
    \ prefixes or addresses, leverage vendor-specific\n   extensions, and so on. \
    \ Note that unlike the signal channel, there is\n   no requirement that the data\
    \ channel remains operational in attack\n   conditions.  (See \"Data Channel Requirements\"\
    \ Section 2.3 of\n   [RFC8612]).\n"
- title: 3.1.3.  Maintaining the DOTS Session
  contents:
  - "3.1.3.  Maintaining the DOTS Session\n   DOTS clients and servers periodically\
    \ send heartbeats to each other\n   over the signal channel, discussed in [RFC8612]\
    \ (SIG-004).  DOTS\n   agent operators SHOULD configure the heartbeat interval\
    \ such that the\n   frequency does not lead to accidental denials of service due\
    \ to the\n   overwhelming number of heartbeats a DOTS agent must field.\n   Either\
    \ DOTS agent may consider a DOTS signal channel session\n   terminated in the\
    \ extended absence of a heartbeat from its peer\n   agent.  The period of that\
    \ absence will be established in the\n   protocol definition.\n"
- title: 3.2.  Modes of Signaling
  contents:
  - "3.2.  Modes of Signaling\n   This section examines the modes of signaling between\
    \ agents in a DOTS\n   architecture.\n"
- title: 3.2.1.  Direct Signaling
  contents:
  - "3.2.1.  Direct Signaling\n   A DOTS session may take the form of direct signaling\
    \ between the DOTS\n   clients and servers, as shown in Figure 10.\n         \
    \  | DOTS client |<------signal session------>| DOTS server |\n              \
    \          Figure 10: Direct Signaling\n   In a direct DOTS session, the DOTS\
    \ client and server are\n   communicating directly.  Direct signaling may exist\
    \ inter- or intra-\n   domain.  The DOTS session is abstracted from the underlying\
    \ networks\n   or network elements the signals traverse; in direct signaling,\
    \ the\n   DOTS client and server are logically adjacent.\n"
- title: 3.2.2.  Redirected Signaling
  contents:
  - "3.2.2.  Redirected Signaling\n   In certain circumstances, a DOTS server may\
    \ want to redirect a DOTS\n   client to an alternative DOTS server for a DOTS\
    \ signal channel\n   session.  Such circumstances include but are not limited\
    \ to:\n   *  Maximum number of DOTS signal channel sessions with clients has\n\
    \      been reached;\n   *  Mitigation capacity exhaustion in the mitigator with\
    \ which the\n      specific DOTS server is communicating;\n   *  Mitigator outage\
    \ or other downtime such as scheduled maintenance;\n   *  Scheduled DOTS server\
    \ maintenance;\n   *  Scheduled modifications to the network path between DOTS\
    \ server\n      and DOTS client.\n   A basic redirected DOTS signal channel session\
    \ resembles the\n   following, as shown in Figure 11.\n           |          \
    \   |<-(1)--- DOTS signal ------>|               |\n           |             |<=(2)==\
    \ redirect to B ======|               |\n           | DOTS client |          \
    \                  | DOTS server A |\n           |             |X-(4)--- DOTS\
    \ signal ------X|               |\n                  ^\n                  |\n\
    \                 (3) DOTS signal channel\n                  |      session 2\n\
    \                  v\n           +---------------+\n           | DOTS server B\
    \ |\n           +---------------+\n                      Figure 11: Redirected\
    \ Signaling\n   1.  Previously established DOTS signal channel session 1 exists\n\
    \       between a DOTS client and DOTS server A.\n   2.  DOTS server A sends a\
    \ server signal redirecting the client to\n       DOTS server B.\n   3.  If the\
    \ DOTS client does not already have a separate DOTS signal\n       channel session\
    \ with the redirection target, the DOTS client\n       initiates and establishes\
    \ DOTS signal channel session 2 with DOTS\n       server B.\n   4.  Having redirected\
    \ the DOTS client, DOTS server A ceases sending\n       server signals.  The DOTS\
    \ client likewise stops sending client\n       signals to DOTS server A.  DOTS\
    \ signal channel session 1 is\n       terminated.\n"
- title: 3.2.3.  Recursive Signaling
  contents:
  - "3.2.3.  Recursive Signaling\n   DOTS is centered around improving the speed and\
    \ efficiency of a\n   coordinated response to DDoS attacks.  One scenario not\
    \ yet discussed\n   involves coordination among federated domains operating DOTS\
    \ servers\n   and mitigators.\n   In the course of normal DOTS operations, a DOTS\
    \ client communicates\n   the need for mitigation to a DOTS server, and that server\
    \ initiates\n   mitigation on a mitigator with which the server has an established\n\
    \   service relationship.  The operator of the mitigator may in turn\n   monitor\
    \ mitigation performance and capacity, as the attack being\n   mitigated may grow\
    \ in severity beyond the mitigating domain's\n   capabilities.\n   The operator\
    \ of the mitigator has limited options in the event a DOTS\n   client-requested\
    \ mitigation is being overwhelmed by the severity of\n   the attack.  Out-of-scope\
    \ business or SLAs may permit the mitigating\n   domain to drop the mitigation\
    \ and let attack traffic flow unchecked\n   to the target, but this only encourages\
    \ attack escalation.  In the\n   case where the mitigating domain is the upstream\
    \ service provider for\n   the attack target, this may mean the mitigating domain\
    \ and its other\n   services and users continue to suffer the incidental effects\
    \ of the\n   attack.\n   A recursive signaling model as shown in Figure 12 offers\
    \ an\n   alternative.  In a variation of the use case \"Upstream DDoS\n   Mitigation\
    \ by an Upstream Internet Transit Provider\" described in\n   [DOTS-USE-CASES],\
    \ a domain operating a DOTS server and mitigator also\n   operates a DOTS client.\
    \  This DOTS client has an established DOTS\n   session with a DOTS server belonging\
    \ to a separate administrative\n   domain.\n   With these preconditions in place,\
    \ the operator of the mitigator\n   being overwhelmed or otherwise performing\
    \ inadequately may request\n   mitigation for the attack target from this separate\
    \ DOTS-aware\n   domain.  Such a request recurses the originating mitigation request\n\
    \   to the secondary DOTS server in the hope of building a cumulative\n   mitigation\
    \ against the attack.\n                        example.net domain\n          \
    \              .    Gn                         .\n          +----+    1   .  +----+\
    \       +-----------+   .\n          | Cc |<--------->| Sn |~~~~~~~| Mitigator\
    \ |   .\n                        .  | Cn |       +-----------+   .\n        example.com\
    \     .  +----+                       .\n           client       .    ^      \
    \                    .\n                             |\n                     \
    \      2 |\n                             |\n                        .    v   \
    \                       .\n                        .  | So |~~~~~~~| Mitigator\
    \ |   .\n                        example.org domain\n                       Figure\
    \ 12: Recursive Signaling\n   In Figure 12, client Cc signals a request for mitigation\
    \ across\n   inter-domain DOTS session 1 to the DOTS server Sn belonging to the\n\
    \   example.net domain.  DOTS server Sn enables mitigation on mitigator\n   Mn.\
    \  DOTS server Sn is half of DOTS gateway Gn, being deployed\n   logically back\
    \ to back with DOTS client Cn, which has preexisting\n   inter-domain DOTS session\
    \ 2 with the DOTS server So belonging to the\n   example.org domain.  At any point,\
    \ DOTS server Sn MAY recurse an\n   ongoing mitigation request through DOTS client\
    \ Cn to DOTS server So,\n   in the expectation that mitigator Mo will be activated\
    \ to aid in the\n   defense of the attack target.\n   Recursive signaling is opaque\
    \ to the DOTS client.  To maximize\n   mitigation visibility to the DOTS client,\
    \ however, the recursing\n   domain SHOULD provide recursed mitigation feedback\
    \ in signals\n   reporting on mitigation status to the DOTS client.  For example,\
    \ the\n   recursing domain's DOTS server should incorporate available metrics\n\
    \   such as dropped packet or byte counts from the recursed domain's DOTS\n  \
    \ server into mitigation status messages.\n   DOTS clients involved in recursive\
    \ signaling must be able to withdraw\n   requests for mitigation without warning\
    \ or justification per SIG-006\n   in [RFC8612].\n   Operators recursing mitigation\
    \ requests MAY maintain the recursed\n   mitigation for a brief protocol-defined\
    \ period in the event the DOTS\n   client originating the mitigation withdraws\
    \ its request for help, as\n   per the discussion of managing mitigation toggling\
    \ in SIG-006 of\n   [RFC8612].\n   Deployment of recursive signaling may result\
    \ in traffic redirection,\n   examination, and mitigation extending beyond the\
    \ initial bilateral\n   relationship between DOTS client and DOTS server.  As\
    \ such, client\n   control over the network path of mitigated traffic may be reduced.\n\
    \   DOTS client operators should be aware of any privacy concerns and\n   work\
    \ with DOTS server operators employing recursive signaling to\n   ensure shared\
    \ sensitive material is suitably protected.  Typically,\n   there is a contractual\
    \ SLA negotiated among the DOTS client domain,\n   the recursed domain, and the\
    \ recursing domain to meet the privacy\n   requirements of the DOTS client domain\
    \ and authorization for the\n   recursing domain to request mitigation for the\
    \ resources controlled\n   by the DOTS client domain.\n"
- title: 3.2.4.  Anycast Signaling
  contents:
  - "3.2.4.  Anycast Signaling\n   The DOTS architecture does not assume the availability\
    \ of anycast\n   within a DOTS deployment, but neither does the architecture exclude\n\
    \   it.  Domains operating DOTS servers MAY deploy DOTS servers with an\n   anycast\
    \ Service Address as described in BCP 126 [RFC4786].  In such a\n   deployment,\
    \ DOTS clients connecting to the DOTS Service Address may\n   be communicating\
    \ with distinct DOTS servers, depending on the network\n   configuration at the\
    \ time the DOTS clients connect.  Among other\n   benefits, anycast signaling\
    \ potentially offers the following:\n   *  Simplified DOTS client configuration,\
    \ including service discovery\n      through the methods described in [RFC7094].\
    \  In this scenario, the\n      \"instance discovery\" message would be a DOTS\
    \ client initiating a\n      DOTS session to the DOTS server anycast Service Address,\
    \ to which\n      the DOTS server would reply with a redirection to the DOTS server\n\
    \      unicast address the client should use for DOTS.\n   *  Region- or customer-specific\
    \ deployments, in which the DOTS\n      Service Addresses route to distinct DOTS\
    \ servers depending on the\n      client region or the customer network in which\
    \ a DOTS client\n      resides.\n   *  Operational resiliency, spreading DOTS\
    \ signaling traffic across\n      the DOTS server domain's networks, and thereby\
    \ also reducing the\n      potential attack surface, as described in BCP 126 [RFC4786].\n"
- title: 3.2.4.1.  Anycast Signaling Considerations
  contents:
  - "3.2.4.1.  Anycast Signaling Considerations\n   As long as network configuration\
    \ remains stable, anycast DOTS\n   signaling is to the individual DOTS client\
    \ indistinct from direct\n   signaling.  However, the operational challenges inherent\
    \ in anycast\n   signaling are anything but negligible, and DOTS server operators\
    \ must\n   carefully weigh the risks against the benefits before deploying.\n\
    \   While the DOTS signal channel primarily operates over UDP per SIG-001\n  \
    \ in [RFC8612], the signal channel also requires mutual authentication\n   between\
    \ DOTS agents, with associated security state on both ends.\n   Network instability\
    \ is of particular concern with anycast signaling,\n   as DOTS signal channels\
    \ are expected to be long lived and potentially\n   operating under congested\
    \ network conditions caused by a volumetric\n   DDoS attack.\n   For example,\
    \ a network configuration altering the route to the DOTS\n   server during active\
    \ anycast signaling may cause the DOTS client to\n   send messages to a DOTS server\
    \ other than the one with which it\n   initially established a signaling session.\
    \  That second DOTS server\n   might not have the security state of the existing\
    \ session, forcing\n   the DOTS client to initialize a new DOTS session.  This\
    \ challenge\n   might in part be mitigated by use of resumption via a pre-shared\
    \ key\n   (PSK) in TLS 1.3 [RFC8446] and DTLS 1.3 [DTLS-PROTOCOL] (session\n \
    \  resumption in TLS 1.2 [RFC5246] and DTLS 1.2 [RFC6347]), but keying\n   material\
    \ must then be available to all DOTS servers sharing the\n   anycast Service Address,\
    \ which has operational challenges of its own.\n   While the DOTS client will\
    \ try to establish a new DOTS session with\n   the DOTS server now acting as the\
    \ anycast DOTS Service Address, the\n   link between DOTS client and server may\
    \ be congested with attack\n   traffic, making signal session establishment difficult.\
    \  In such a\n   scenario, anycast Service Address instability becomes a sort\
    \ of\n   signal session flapping, with obvious negative consequences for the\n\
    \   DOTS deployment.\n   Anycast signaling deployments similarly must also take\
    \ into account\n   active mitigations.  Active mitigations initiated through a\
    \ DOTS\n   session may involve diverting traffic to a scrubbing center.  If the\n\
    \   DOTS session flaps due to anycast changes as described above,\n   mitigation\
    \ may also flap as the DOTS servers sharing the anycast DOTS\n   service address\
    \ toggles mitigation on detecting DOTS session loss,\n   depending on whether\
    \ or not the client has configured mitigation on\n   loss of signal (Section 3.3.3).\n"
- title: 3.2.5.  Signaling Considerations for Network Address Translation
  contents:
  - "3.2.5.  Signaling Considerations for Network Address Translation\n   Network\
    \ address translators (NATs) are expected to be a common\n   feature of DOTS deployments.\
    \  The middlebox traversal guidelines in\n   [RFC8085] include general NAT considerations\
    \ that are applicable to\n   DOTS deployments when the signal channel is established\
    \ over UDP.\n   Additional DOTS-specific considerations arise when NATs are part\
    \ of\n   the DOTS architecture.  For example, DDoS attack detection behind a\n\
    \   NAT will detect attacks against internal addresses.  A DOTS client\n   subsequently\
    \ asked to request mitigation for the attacked scope of\n   addresses cannot reasonably\
    \ perform the task, due to the lack of\n   externally routable addresses in the\
    \ mitigation scope.\n   The following considerations do not cover all possible\
    \ scenarios but\n   are meant rather to highlight anticipated common issues when\n\
    \   signaling through NATs.\n"
- title: 3.2.5.1.  Direct Provisioning of Internal-to-External Address Mappings
  contents:
  - "3.2.5.1.  Direct Provisioning of Internal-to-External Address Mappings\n   Operators\
    \ may circumvent the problem of translating internal\n   addresses or prefixes\
    \ to externally routable mitigation scopes by\n   directly provisioning the mappings\
    \ of external addresses to internal\n   protected resources on the DOTS client.\
    \  When the operator requests\n   mitigation scoped for internal addresses, directly\
    \ or through\n   automated means, the DOTS client looks up the matching external\n\
    \   addresses or prefixes and issues a mitigation request scoped to that\n   externally\
    \ routable information.\n   When directly provisioning the address mappings, operators\
    \ must\n   ensure the mappings remain up to date or they risk losing the ability\n\
    \   to request accurate mitigation scopes.  To that aim, the DOTS client\n   can\
    \ rely on mechanisms such as [RFC8512] or [RFC7658] to retrieve\n   static explicit\
    \ mappings.  This document does not prescribe the\n   method by which mappings\
    \ are maintained once they are provisioned on\n   the DOTS client.\n"
- title: 3.2.5.2.  Resolving Public Mitigation Scope with Port Control Protocol
  contents:
  - "3.2.5.2.  Resolving Public Mitigation Scope with Port Control Protocol\n    \
    \      (PCP)\n   Port Control Protocol (PCP) [RFC6887] may be used to retrieve\
    \ the\n   external addresses/prefixes and/or port numbers if the NAT function\n\
    \   embeds a PCP server.\n   A DOTS client can use the information retrieved by\
    \ means of PCP to\n   feed the DOTS protocol(s) messages that will be sent to\
    \ a DOTS\n   server.  These messages will convey the external addresses/prefixes\n\
    \   as set by the NAT.\n   PCP also enables discovery and configuration of the\
    \ lifetime of port\n   mappings instantiated in intermediate NAT devices.  Discovery\
    \ of port\n   mapping lifetimes can reduce the dependency on heartbeat messages\
    \ to\n   maintain mappings and, therefore, reduce the load on DOTS servers and\n\
    \   the network.\n"
- title: 3.2.5.3.  Resolving Public Mitigation Scope with Session Traversal
  contents:
  - "3.2.5.3.  Resolving Public Mitigation Scope with Session Traversal\n        \
    \  Utilities (STUN)\n   An internal resource, e.g., a web server, can discover\
    \ its reflexive\n   transport address through a STUN Binding request/response\n\
    \   transaction, as described in [RFC8489].  After learning its reflexive\n  \
    \ transport address from the STUN server, the internal resource can\n   export\
    \ its reflexive transport address and internal transport address\n   to the DOTS\
    \ client, thereby enabling the DOTS client to request\n   mitigation with the\
    \ correct external scope, as depicted in Figure 13.\n   The mechanism for providing\
    \ the DOTS client with the reflexive\n   transport address and internal transport\
    \ address is unspecified in\n   this document.\n   In order to prevent an attacker\
    \ from modifying the STUN messages in\n   transit, the STUN client and server\
    \ must use the message-integrity\n   mechanism discussed in Section 9 of [RFC8489]\
    \ or use STUN over DTLS\n   [RFC7350] or STUN over TLS.  If the STUN client is\
    \ behind a NAT that\n   performs Endpoint-Dependent Mapping [RFC5128], the internal\
    \ service\n   cannot provide the DOTS client with the reflexive transport address\n\
    \   discovered using STUN.  The behavior of a NAT between the STUN client\n  \
    \ and the STUN server could be discovered using the experimental\n   techniques\
    \ discussed in [RFC5780], but note that there is currently\n   no standardized\
    \ way for a STUN client to reliably determine if it is\n   behind a NAT that performs\
    \ Endpoint-Dependent Mapping.\n               Binding         Binding\n   +--------+\
    \  request  +---+  request  +--------+\n   |  STUN  |<----------| N |<----------|\
    \  STUN  |\n   | server |           | A |           | client |\n   |        |---------->|\
    \ T |---------->|        |\n   +--------+  Binding  +---+ Binding   +--------+\n\
    \               response       response    |\n              Figure 13: Resolving\
    \ Mitigation Scope with STUN\n"
- title: 3.2.5.4.  Resolving Requested Mitigation Scope with DNS
  contents:
  - "3.2.5.4.  Resolving Requested Mitigation Scope with DNS\n   DOTS supports mitigation\
    \ scoped to DNS names.  As discussed in\n   [RFC3235], using DNS names instead\
    \ of IP addresses potentially avoids\n   the address translation problem, as long\
    \ as the same domain name is\n   internally and externally resolvable.  For example,\
    \ a detected\n   attack's internal target address can be mapped to a DNS name\
    \ through\n   a reverse lookup.  The DNS name returned by the reverse lookup can\n\
    \   then be provided to the DOTS client as the external scope for\n   mitigation.\
    \  For the reverse DNS lookup, DNS Security Extensions\n   (DNSSEC) [RFC4033]\
    \ must be used where the authenticity of response is\n   critical.\n"
- title: 3.3.  Triggering Requests for Mitigation
  contents:
  - "3.3.  Triggering Requests for Mitigation\n   [RFC8612] places no limitation on\
    \ the circumstances in which a DOTS\n   client operator may request mitigation,\
    \ nor does it demand\n   justification for any mitigation request, thereby reserving\n\
    \   operational control over DDoS defense for the domain requesting\n   mitigation.\
    \  This architecture likewise does not prescribe the\n   network conditions and\
    \ mechanisms triggering a mitigation request\n   from a DOTS client.\n   However,\
    \ considering selected possible mitigation triggers from an\n   architectural\
    \ perspective offers a model for alternative or\n   unanticipated triggers for\
    \ DOTS deployments.  In all cases, what\n   network conditions merit a mitigation\
    \ request are at the discretion\n   of the DOTS client operator.\n   The mitigation\
    \ request itself is defined by DOTS; however, the\n   interfaces required to trigger\
    \ the mitigation request in the\n   following scenarios are implementation specific.\n"
- title: 3.3.1.  Manual Mitigation Request
  contents:
  - "3.3.1.  Manual Mitigation Request\n   A DOTS client operator may manually prepare\
    \ a request for mitigation,\n   including scope and duration, and manually instruct\
    \ the DOTS client\n   to send the mitigation request to the DOTS server.  In context,\
    \ a\n   manual request is a request directly issued by the operator without\n\
    \   automated decision making performed by a device interacting with the\n   DOTS\
    \ client.  Modes of manual mitigation requests include an operator\n   entering\
    \ a command into a text interface, or directly interacting\n   with a graphical\
    \ interface to send the request.\n   An operator might do this, for example, in\
    \ response to notice of an\n   attack delivered by attack detection equipment\
    \ or software, and the\n   alerting detector lacks interfaces or is not configured\
    \ to use\n   available interfaces to translate the alert to a mitigation request\n\
    \   automatically.\n   In a variation of the above scenario, the operator may\
    \ have\n   preconfigured on the DOTS client mitigation requests for various\n\
    \   resources in the operator's domain.  When notified of an attack, the\n   DOTS\
    \ client operator manually instructs the DOTS client to send the\n   relevant\
    \ preconfigured mitigation request for the resources under\n   attack.\n   A further\
    \ variant involves recursive signaling, as described in\n   Section 3.2.3.  The\
    \ DOTS client in this case is the second half of a\n   DOTS gateway (back-to-back\
    \ DOTS server and client).  As in the\n   previous scenario, the scope and duration\
    \ of the mitigation request\n   are preexisting but, in this case, are derived\
    \ from the mitigation\n   request received from a downstream DOTS client by the\
    \ DOTS server.\n   Assuming the preconditions required by Section 3.2.3 are in\
    \ place,\n   the DOTS gateway operator may at any time manually request mitigation\n\
    \   from an upstream DOTS server, sending a mitigation request derived\n   from\
    \ the downstream DOTS client's request.\n   The motivations for a DOTS client\
    \ operator to request mitigation\n   manually are not prescribed by this architecture\
    \ but are expected to\n   include some of the following:\n   *  Notice of an attack\
    \ delivered via email or alternative messaging\n   *  Notice of an attack delivered\
    \ via phone call\n   *  Notice of an attack delivered through the interface(s)\
    \ of\n      networking monitoring software deployed in the operator's domain\n\
    \   *  Manual monitoring of network behavior through network monitoring\n    \
    \  software\n"
- title: 3.3.2.  Automated Conditional Mitigation Request
  contents:
  - "3.3.2.  Automated Conditional Mitigation Request\n   Unlike manual mitigation\
    \ requests, which depend entirely on the DOTS\n   client operator's capacity to\
    \ react with speed and accuracy to every\n   detected or detectable attack, mitigation\
    \ requests triggered by\n   detected attack conditions reduce the operational\
    \ burden on the DOTS\n   client operator and minimize the latency between attack\
    \ detection and\n   the start of mitigation.\n   Mitigation requests are triggered\
    \ in this scenario by operator-\n   specified network conditions.  Attack detection\
    \ is deployment\n   specific and not constrained by this architecture.  Similarly,\
    \ the\n   specifics of a condition are left to the discretion of the operator,\n\
    \   though common conditions meriting mitigation include the following:\n   *\
    \  Detected attack exceeding a rate in packets per second (pps).\n   *  Detected\
    \ attack exceeding a rate in bytes per second (bps).\n   *  Detected resource\
    \ exhaustion in an attack target.\n   *  Detected resource exhaustion in the local\
    \ domain's mitigator.\n   *  Number of open connections to an attack target.\n\
    \   *  Number of attack sources in a given attack.\n   *  Number of active attacks\
    \ against targets in the operator's domain.\n   *  Conditional detection developed\
    \ through arbitrary statistical\n      analysis or deep learning techniques.\n\
    \   *  Any combination of the above.\n   When automated conditional mitigation\
    \ requests are enabled,\n   violations of any of the above conditions, or any\
    \ additional\n   operator-defined conditions, will trigger a mitigation request\
    \ from\n   the DOTS client to the DOTS server.  The interfaces between the\n \
    \  application detecting the condition violation and the DOTS client are\n   implementation\
    \ specific.\n"
- title: 3.3.3.  Automated Mitigation on Loss of Signal
  contents:
  - "3.3.3.  Automated Mitigation on Loss of Signal\n   To maintain a DOTS signal\
    \ channel session, the DOTS client and the\n   DOTS server exchange regular but\
    \ infrequent messages across the\n   signal channel.  In the absence of an attack,\
    \ the probability of\n   message loss in the signaling channel should be extremely\
    \ low.  Under\n   attack conditions, however, some signal loss may be anticipated\
    \ as\n   attack traffic congests the link, depending on the attack type.\n   While\
    \ [RFC8612] specifies the DOTS protocol be robust when signaling\n   under attack\
    \ conditions, there are nevertheless scenarios in which\n   the DOTS signal is\
    \ lost in spite of protocol best efforts.  To handle\n   such scenarios, a DOTS\
    \ operator may request one or more mitigations,\n   which are triggered only when\
    \ the DOTS server ceases receiving DOTS\n   client heartbeats beyond the miss\
    \ count or interval permitted by the\n   protocol.\n   The impact of mitigating\
    \ due to loss of signal in either direction\n   must be considered carefully before\
    \ enabling it.  Attack traffic\n   congesting links is not the only reason why\
    \ signal could be lost, and\n   as such, mitigation requests triggered by signal\
    \ channel degradation\n   in either direction may incur unnecessary costs due\
    \ to scrubbing\n   traffic, adversely impact network performance and operational\
    \ expense\n   alike.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This section describes identified security considerations\
    \ for the\n   DOTS architecture.\n   Security considerations and security requirements\
    \ discussed in\n   [RFC8612] need to be taken into account.\n   DOTS is at risk\
    \ from three primary attack vectors: agent\n   impersonation, traffic injection,\
    \ and signal blocking.  These vectors\n   may be exploited individually or in\
    \ concert by an attacker to\n   confuse, disable, take information from, or otherwise\
    \ inhibit DOTS\n   agents.\n   Any attacker with the ability to impersonate a\
    \ legitimate DOTS client\n   or server or, indeed, inject false messages into\
    \ the stream may\n   potentially trigger/withdraw traffic redirection, trigger/cancel\n\
    \   mitigation activities or subvert drop-/accept-lists.  From an\n   architectural\
    \ standpoint, operators MUST ensure conformance to the\n   security requirements\
    \ defined in Section 2.4 of [RFC8612] to secure\n   data in transit.  Similarly,\
    \ as the received data may contain network\n   topology, telemetry, and threat\
    \ and mitigation information that could\n   be considered sensitive in certain\
    \ environments, it SHOULD be\n   protected at rest per required local policy.\n\
    \   DOTS agents MUST perform mutual authentication to ensure authenticity\n  \
    \ of each other, and DOTS servers MUST verify that the requesting DOTS\n   client\
    \ is authorized to request mitigation for specific target\n   resources (see Section\
    \ 2.2.2).\n   A man-in-the-middle (MITM) attacker can intercept and drop packets,\n\
    \   preventing the DOTS peers from receiving some or all of the DOTS\n   messages;\
    \ automated mitigation on loss of signal can be used as a\n   countermeasure but\
    \ with risks discussed in Section 3.3.3.\n   An attacker with control of a DOTS\
    \ client may negatively influence\n   network traffic by requesting and withdrawing\
    \ requests for mitigation\n   for particular prefixes, leading to route or DNS\
    \ flapping.  DOTS\n   operators should carefully monitor and audit DOTS clients\
    \ to detect\n   misbehavior and deter misuse.\n   Any attack targeting the availability\
    \ of DOTS servers may disrupt the\n   ability of the system to receive and process\
    \ DOTS signals resulting\n   in failure to fulfill a mitigation request.  DOTS\
    \ servers MUST be\n   given adequate protections in accordance with best current\
    \ practices\n   for network and host security.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"DNS Security Introduction and Requirements\",\n            \
    \  RFC 4033, DOI 10.17487/RFC4033, March 2005,\n              <https://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC4786]  Abley, J. and K. Lindqvist, \"Operation of Anycast\n          \
    \    Services\", BCP 126, RFC 4786, DOI 10.17487/RFC4786,\n              December\
    \ 2006, <https://www.rfc-editor.org/info/rfc4786>.\n   [RFC6887]  Wing, D., Ed.,\
    \ Cheshire, S., Boucadair, M., Penno, R., and\n              P. Selkirk, \"Port\
    \ Control Protocol (PCP)\", RFC 6887,\n              DOI 10.17487/RFC6887, April\
    \ 2013,\n              <https://www.rfc-editor.org/info/rfc6887>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8612]  Mortensen, A., Reddy,\
    \ T., and R. Moskowitz, \"DDoS Open\n              Threat Signaling (DOTS) Requirements\"\
    , RFC 8612,\n              DOI 10.17487/RFC8612, May 2019,\n              <https://www.rfc-editor.org/info/rfc8612>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [DOTS-USE-CASES]\n              Dobbins, R.,\
    \ Migault, D., Moskowitz, R., Teague, N., Xia,\n              L., and K. Nishizuka,\
    \ \"Use cases for DDoS Open Threat\n              Signaling\", Work in Progress,\
    \ Internet-Draft, draft-ietf-\n              dots-use-cases-25, 5 July 2020,\n\
    \              <https://tools.ietf.org/html/draft-ietf-dots-use-cases-\n     \
    \         25>.\n   [DTLS-PROTOCOL]\n              Rescorla, E., Tschofenig, H.,\
    \ and N. Modadugu, \"The\n              Datagram Transport Layer Security (DTLS)\
    \ Protocol Version\n              1.3\", Work in Progress, Internet-Draft, draft-ietf-tls-\n\
    \              dtls13-38, 29 May 2020,\n              <https://tools.ietf.org/html/draft-ietf-tls-dtls13-38>.\n\
    \   [RFC0768]  Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n     \
    \         DOI 10.17487/RFC0768, August 1980,\n              <https://www.rfc-editor.org/info/rfc768>.\n\
    \   [RFC0793]  Postel, J., \"Transmission Control Protocol\", STD 7,\n       \
    \       RFC 793, DOI 10.17487/RFC0793, September 1981,\n              <https://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n        \
    \      specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n            \
    \  November 1987, <https://www.rfc-editor.org/info/rfc1035>.\n   [RFC2782]  Gulbrandsen,\
    \ A., Vixie, P., and L. Esibov, \"A DNS RR for\n              specifying the location\
    \ of services (DNS SRV)\", RFC 2782,\n              DOI 10.17487/RFC2782, February\
    \ 2000,\n              <https://www.rfc-editor.org/info/rfc2782>.\n   [RFC3235]\
    \  Senie, D., \"Network Address Translator (NAT)-Friendly\n              Application\
    \ Design Guidelines\", RFC 3235,\n              DOI 10.17487/RFC3235, January\
    \ 2002,\n              <https://www.rfc-editor.org/info/rfc3235>.\n   [RFC3261]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,\
    \ Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:\
    \ Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,\
    \ June 2002,\n              <https://www.rfc-editor.org/info/rfc3261>.\n   [RFC4271]\
    \  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A\n              Border\
    \ Gateway Protocol 4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271,\
    \ January 2006,\n              <https://www.rfc-editor.org/info/rfc4271>.\n  \
    \ [RFC4732]  Handley, M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n      \
    \        Denial-of-Service Considerations\", RFC 4732,\n              DOI 10.17487/RFC4732,\
    \ December 2006,\n              <https://www.rfc-editor.org/info/rfc4732>.\n \
    \  [RFC5128]  Srisuresh, P., Ford, B., and D. Kegel, \"State of Peer-to-\n   \
    \           Peer (P2P) Communication across Network Address\n              Translators\
    \ (NATs)\", RFC 5128, DOI 10.17487/RFC5128, March\n              2008, <https://www.rfc-editor.org/info/rfc5128>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <https://www.rfc-editor.org/info/rfc5246>.\n   [RFC5780]\
    \  MacDonald, D. and B. Lowekamp, \"NAT Behavior Discovery\n              Using\
    \ Session Traversal Utilities for NAT (STUN)\",\n              RFC 5780, DOI 10.17487/RFC5780,\
    \ May 2010,\n              <https://www.rfc-editor.org/info/rfc5780>.\n   [RFC6347]\
    \  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n              Security\
    \ Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n              January 2012,\
    \ <https://www.rfc-editor.org/info/rfc6347>.\n   [RFC6763]  Cheshire, S. and M.\
    \ Krochmal, \"DNS-Based Service\n              Discovery\", RFC 6763, DOI 10.17487/RFC6763,\
    \ February 2013,\n              <https://www.rfc-editor.org/info/rfc6763>.\n \
    \  [RFC7092]  Kaplan, H. and V. Pascual, \"A Taxonomy of Session\n           \
    \   Initiation Protocol (SIP) Back-to-Back User Agents\",\n              RFC 7092,\
    \ DOI 10.17487/RFC7092, December 2013,\n              <https://www.rfc-editor.org/info/rfc7092>.\n\
    \   [RFC7094]  McPherson, D., Oran, D., Thaler, D., and E. Osterweil,\n      \
    \        \"Architectural Considerations of IP Anycast\", RFC 7094,\n         \
    \     DOI 10.17487/RFC7094, January 2014,\n              <https://www.rfc-editor.org/info/rfc7094>.\n\
    \   [RFC7350]  Petit-Huguenin, M. and G. Salgueiro, \"Datagram Transport\n   \
    \           Layer Security (DTLS) as Transport for Session Traversal\n       \
    \       Utilities for NAT (STUN)\", RFC 7350, DOI 10.17487/RFC7350,\n        \
    \      August 2014, <https://www.rfc-editor.org/info/rfc7350>.\n   [RFC7658] \
    \ Perreault, S., Tsou, T., Sivakumar, S., and T. Taylor,\n              \"Deprecation\
    \ of MIB Module NAT-MIB: Managed Objects for\n              Network Address Translators\
    \ (NATs)\", RFC 7658,\n              DOI 10.17487/RFC7658, October 2015,\n   \
    \           <https://www.rfc-editor.org/info/rfc7658>.\n   [RFC8085]  Eggert,\
    \ L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\"\
    , BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n              March 2017, <https://www.rfc-editor.org/info/rfc8085>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8489]  Petit-Huguenin,\
    \ M., Salgueiro, G., Rosenberg, J., Wing,\n              D., Mahy, R., and P.\
    \ Matthews, \"Session Traversal\n              Utilities for NAT (STUN)\", RFC\
    \ 8489, DOI 10.17487/RFC8489,\n              February 2020, <https://www.rfc-editor.org/info/rfc8489>.\n\
    \   [RFC8512]  Boucadair, M., Ed., Sivakumar, S., Jacquenet, C.,\n           \
    \   Vinapamula, S., and Q. Wu, \"A YANG Module for Network\n              Address\
    \ Translation (NAT) and Network Prefix Translation\n              (NPT)\", RFC\
    \ 8512, DOI 10.17487/RFC8512, January 2019,\n              <https://www.rfc-editor.org/info/rfc8512>.\n\
    \   [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.\n       \
    \       Kasten, \"Automatic Certificate Management Environment\n             \
    \ (ACME)\", RFC 8555, DOI 10.17487/RFC8555, March 2019,\n              <https://www.rfc-editor.org/info/rfc8555>.\n\
    \   [RFC8738]  Shoemaker, R.B., \"Automated Certificate Management\n         \
    \     Environment (ACME) IP Identifier Validation Extension\",\n             \
    \ RFC 8738, DOI 10.17487/RFC8738, February 2020,\n              <https://www.rfc-editor.org/info/rfc8738>.\n\
    \   [RFC8782]  Reddy.K, T., Ed., Boucadair, M., Ed., Patil, P.,\n            \
    \  Mortensen, A., and N. Teague, \"Distributed Denial-of-\n              Service\
    \ Open Threat Signaling (DOTS) Signal Channel\n              Specification\",\
    \ RFC 8782, DOI 10.17487/RFC8782, May 2020,\n              <https://www.rfc-editor.org/info/rfc8782>.\n\
    \   [RFC8783]  Boucadair, M., Ed. and T. Reddy.K, Ed., \"Distributed\n       \
    \       Denial-of-Service Open Threat Signaling (DOTS) Data\n              Channel\
    \ Specification\", RFC 8783, DOI 10.17487/RFC8783,\n              May 2020, <https://www.rfc-editor.org/info/rfc8783>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Matt Richardson, Roman Danyliw, Frank Xialiang,\
    \ Roland\n   Dobbins, Wei Pan, Kaname Nishizuka, Jon Shallow, Paul Kyzivat, Warren\n\
    \   Kumari, Benjamin Kaduk, and Mohamed Boucadair for their comments and\n   suggestions.\n\
    \   Special thanks to Roman Danyliw for the AD review.\n"
- title: Contributors
  contents:
  - "Contributors\n      Mohamed Boucadair\n         Orange\n         mohamed.boucadair@orange.com\n\
    \      Cristopher Gray\n         Christopher_Gray3@cable.comcast.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew Mortensen (editor)\n   Forcepoint\n   United States\
    \ of America\n   Email: andrewmortensen@gmail.com\n   Tirumaleswar Reddy.K (editor)\n\
    \   McAfee, Inc.\n   Embassy Golf Link Business Park\n   Bangalore 560071\n  \
    \ Karnataka\n   India\n   Email: kondtir@gmail.com\n   Flemming Andreasen\n  \
    \ Cisco\n   United States of America\n   Email: fandreas@cisco.com\n   Nik Teague\n\
    \   Iron Mountain\n   United States of America\n   Email: nteague@ironmountain.co.uk\n\
    \   Rich Compton\n"
