- contents:
  - '         Voice Profile for Internet Mail - version 2 (VPIMv2)

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies a restricted profile of the Internet\n   multimedia
    messaging protocols for use between voice processing\n   server platforms.  The
    profile is referred to as the Voice Profile\n   for Internet Mail (VPIM) in this
    document.  These platforms have\n   historically been special-purpose computers
    and often do not have the\n   same facilities normally associated with a traditional
    Internet\n   Email-capable computer.  As a result, VPIM also specifies additional\n
    \  functionality, as it is needed.  This profile is intended to specify\n   the
    minimum common set of features to allow interworking between\n   conforming systems.\n
    \  This document obsoletes RFC 2421 and describes version 2 of the\n   profile
    with greater precision.  No protocol changes were made in\n   this revision. A
    list of changes from RFC 2421 are noted in Appendix\n   F.  Appendix A summarizes
    the protocol profiles of this version of\n   VPIM.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.   Introduction...................................................3\n
    \       1.1.  Voice Messaging System Limitations.......................3\n        1.2.
    \ Design Goals.............................................4\n        1.3.  Applicability
    for VPIM...................................5\n   2.   Requirements Language..........................................5\n
    \  3.   Protocol Restrictions..........................................6\n   4.
    \  Voice Message Interchange Format...............................6\n        4.1.
    \ VPIM Message Addressing Formats..........................7\n        4.2.  Message
    Header Fields....................................9\n        4.3.  MIME Audio Content
    Descriptions.........................17\n        4.4.  Voice Message Content Types.............................19\n
    \       4.5.  Other MIME Contents.....................................23\n        4.6.
    \ Delivery Status Notification (DSN)......................25\n        4.7.  Message
    Disposition Notification (MDN)..................26\n        4.8.  Forwarded Messages......................................26\n
    \       4.9.  Reply Messages..........................................27\n   5.
    \  Message Transport Protocol....................................27\n        5.1.
    \ Base SMTP Protocol......................................28\n        5.2.  SMTP
    Service Extensions.................................28\n        5.3.  ESMTP - SMTP
    Downgrading................................30\n   6.   Directory Address Resolution..................................30\n
    \  7.   Management Protocols..........................................30\n        7.1.
    \ Network Management......................................31\n   8.   Conformance
    Requirements......................................31\n   9.   Security Considerations.......................................32\n
    \       9.1.  General Directive.......................................32\n        9.2.
    \ Threats and Problems....................................32\n        9.3.  Security
    Techniques.....................................33\n   10.  Normative References..........................................33\n
    \  11.  Acknowledgments...............................................36\n   12.
    \ Appendix A - VPIM Requirements Summary........................37\n   13.  Appendix
    B - Example Voice Messages...........................43\n   14.  Appendix C -
    Example Error Voice Processing Error Codes.......49\n   15.  Appendix D - Example
    Voice Processing Disposition Types.......50\n   16.  Appendix E - IANA Registrations...............................50\n
    \       16.1.  Voice Content-Disposition Parameter Definition.........51\n        16.2.
    \ Multipart/Voice-Message MIME Media Type Definition.....51\n   17.  Appendix
    F - Change History: RFC 2421 (VPIM V2) To This Doc...53\n   18.  Authors' Addresses............................................54\n
    \  19.  Full Copyright Statement......................................55\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   MIME is the Internet multipurpose, multimedia-messaging
    standard.\n   This document explicitly recognizes its capabilities and provides
    a\n   mechanism for the exchange of various messaging technologies,\n   primarily
    voice and facsimile.\n   Voice messaging evolved as telephone answering service
    into a full\n   send, receive, and forward messaging paradigm with unique message\n
    \  features, semantics and usage patterns.  Voice messaging was\n   introduced
    on special purpose computers that interface to a telephone\n   switch and provide
    call answering and voice messaging services.\n   Traditionally, messages sent
    from one voice messaging system to\n   another were transported using analog networking
    protocols based on\n   DTMF signaling and analog voice playback. As the demand
    for\n   networking increases, there was a need for a standard high-quality\n   digital
    protocol to connect these machines.  VPIM has successfully\n   demonstrated its
    usefulness as this new standard.  VPIM is widely\n   implemented and is seeing
    deployment in customer networks.  This\n   document clarifies ambiguities found
    in the earlier specification and\n   is consistent with implementation practice.
    \ The profile is referred\n   to as Voice Profile for Internet Mail (VPIM) in
    this document.\n   This document specifies a restricted profile of the Internet\n
    \  multimedia messaging protocols for use between voice processing\n   server
    platforms. These platforms have historically been special-\n   purpose computers
    and often do not have the same facilities normally\n   associated with a traditional
    Internet Email-capable computer.  As a\n   result, VPIM also specifies additional
    functionality, as it is\n   needed.  This profile is intended to specify the minimum
    common set\n   of features to allow interworking between conforming systems.\n
    \  This document obsoletes RFC 2421 and describes VPIM version 2 of with\n   greater
    precision.  No protocol changes were made in this revision.\n   A list of changes
    from RFC 2421 are noted in Appendix F.  Appendix A\n   summarizes the protocol
    profiles of this version of VPIM.\n"
  - contents:
    - "1.1.  Voice Messaging System Limitations\n   The following are typical limitations
      of voice messaging platforms\n   that were considered in creating this baseline
      profile.\n      1) Text messages are not normally received and often cannot
      be\n      easily displayed or viewed.  They can often be processed only via\n
      \     text-to-speech or text-to-fax features not currently present in\n      many
      of these machines.\n      2) Voice mail machines usually act as an integrated
      Message\n      Transfer Agent, Message Store and User Agent.  There is typically\n
      \     no relaying of messages.  RFC822 header fields may have limited\n      use
      in the context of the limited messaging features currently\n      deployed.\n
      \     3) Voice mail message stores are generally not capable of\n      preserving
      the full semantics of an Internet message.  As such,\n      use of a voice mail
      machine for gatewaying is not supported.  In\n      particular, storage of recipient
      lists, \"Received:\" lines, and\n      \"Message-ID:\" may be limited.\n      4)
      Internet-style distribution/exploder mailing lists are not\n      typically
      supported.  Voice mail machines often implement only\n      local alias lists,
      with error-to-sender and reply-to-sender\n      behavior. Reply-all capabilities
      using a Cc list are not generally\n      available.\n      5) Error reports
      must be machine-parsable so that helpful\n      responses can be voiced to users
      whose only access mechanism is a\n      telephone.\n      6) The voice mail
      systems generally limit address entry to 16 or\n      fewer numeric characters,
      and normally do not support alphanumeric\n      mailbox names.  Alpha characters
      are not generally used for\n      mailbox identification, as they cannot be
      easily entered from a\n      telephone terminal.\n   It should be noted that
      newer systems are based natively on SMTP/MIME\n   and do not suffer these limitations.
      \ In particular, some systems may\n   support media other than voice and fax.\n"
    title: 1.1.  Voice Messaging System Limitations
  - contents:
    - "1.2.  Design Goals\n   It is a goal of this profile to make as few restrictions
      and\n   additions to the existing Internet mail protocols as possible while\n
      \  satisfying the requirements for interoperability with current\n   generation
      voice messaging systems.  This goal is motivated by the\n   desire to increase
      the accessibility to digital messaging by enabling\n   the use of proven existing
      networking software for rapid development.\n   This specification is intended
      for use on a TCP/IP network; however,\n   it is possible to use the SMTP protocol
      suite over other transport\n   protocols.  The necessary protocol parameters
      for such use are\n   outside the scope of this document.\n   This profile is
      intended to be robust enough to be used in an\n   environment, such as the global
      Internet, with installed-base\n   gateways that do not understand MIME.  Full
      functionality, such as\n   reliable error messages and binary transport, will
      require careful\n   selection of gateways (e.g., via MX records) to be used
      as VPIM\n   forwarding agents. Nothing in this document precludes use of\n   general-purpose
      MIME email packages to read and compose VPIM\n   messages.  While no special
      configuration is required to receive VPIM\n   conforming messages, some may
      be required to originate conforming\n   structures.\n   It is expected that
      a system administrator who can perform TCP/IP\n   network configuration will
      manage a VPIM messaging system.  When\n   using facsimile or multiple voice
      encodings, it is suggested that the\n   system administrator maintain a list
      of the capabilities of the\n   networked mail machines to reduce the sending
      of undeliverable\n   messages due to lack of feature support.  Configuration,\n
      \  implementation and management of these directory-listing capabilities\n   are
      local matters.\n"
    title: 1.2.  Design Goals
  - contents:
    - "1.3.  Applicability for VPIM\n   VPIM is intended for the exchange of voice
      messages between\n   traditional voice messaging systems and for systems that
      need to\n   interoperate with such systems.  VPIM is intended connect voice-\n
      \  messaging systems into special-purpose voice messaging networks.\n   VPIM
      may also be used between message store servers and VPIM-aware\n   clients such
      as web servers, TUI, and GUI clients.  VPIM is not\n   intended or optimized
      for downloading to, or sending from commercial\n   email clients.\n   Internet
      Voice Messaging, the subject of a separate standards\n   initiative, is intended
      to enable general-purpose email clients to\n   send and receive voice content
      through general-purpose message stores\n   in an interoperable way.  IVM may
      also be a suitable format for\n   downloading voice messages from a VPIM server
      to a commercial email\n   client.  It may also be a suitable format for submission
      of a voice\n   message from a general-purpose client into a VPIM system.\n"
    title: 1.3.  Applicability for VPIM
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [REQ].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Protocol Restrictions\n   This protocol does not limit the number of recipients
    per message.\n   Where possible, server implementations should not restrict the
    number\n   of recipients in a single message.  It is recognized that no\n   implementation
    supports unlimited recipients, and that the number of\n   supported recipients
    may be quite low.\n   This protocol does not limit the maximum message length.\n
    \  Implementers should understand that some machines will be unable to\n   accept
    excessively long messages.  A mechanism is defined in [SIZE]\n   to declare the
    maximum message size supported.\n   The following sections describe the restrictions
    and additions to\n   Internet mail protocols that are required to be conforming
    with this\n   VPIM v2 profile.  Though various SMTP, ESMTP and MIME features are\n
    \  described here, the implementer is referred to the relevant RFCs for\n   complete
    details.  The table in Appendix A summarizes the protocol\n   details of this
    profile.\n"
  title: 3.  Protocol Restrictions
- contents:
  - "4.  Voice Message Interchange Format\n   The voice message interchange format
    is a profile of the Internet\n   Mail Protocol Suite.  Any Internet Mail message
    containing the format\n   defined in this section is referred to as a VPIM Message
    in this\n   document.  As a result, this document assumes an understanding of
    the\n   Internet Mail specifications.  Specifically, VPIM references\n   components
    from the message format standard for Internet messages\n   [RFC822], the Multipurpose
    Internet Message Extensions [MIME1-5], the\n   X.400 gateway specification [X.400],
    and the delivery status and\n   message disposition notifications [REPORT][DSN][DRPT][STATUS][MDN].\n
    \  MIME, introduced in [MIME1], is a general-purpose message body format\n   that
    is extensible to carry a wide range of body parts.  It provides\n   for encoding
    binary data so that it can be transported over the 7-bit\n   text-oriented SMTP
    protocol.  This transport encoding (denoted by the\n   \"Content-Transfer-Encoding:\"
    MIME field) is in addition to the audio\n   encoding required to generate a binary
    object.\n   MIME defines two transport-encoding mechanisms to transform binary\n
    \  data into a 7-bit representation, one designed for text-like data\n   (\"Quoted-Printable\"),
    and one for arbitrary binary data (\"Base64\").\n   While Base64 is dramatically
    more efficient for audio data, either\n   will work.  Where binary transport is
    available, no transport\n   encoding is needed, and the data can be labeled as
    \"Binary\".\n"
  - contents:
    - "4.1.  VPIM Message Addressing Formats\n   VPIM addresses SHALL use the RFC
      822 format based on the Domain Name\n   System.  This naming system has two
      components: the local part, used\n   for username or mailbox identification;
      and the host part, used for\n   global machine identification.\n"
    - contents:
      - "4.1.1.  VPIM Addresses\n   The local part of the address shall be a US-ASCII
        string uniquely\n   identifying a mailbox on a destination system.  For voice
        messaging,\n   the local part SHALL be a printable string containing the mailbox
        ID\n   of the originator or recipient.  While alpha characters and long\n
        \  mailbox identifiers MAY be permitted, short numeric local parts\n   SHOULD
        be used as most voice mail networks rely on numeric mailbox\n   identifiers
        to retain compatibility with the limited 10-digit\n   telephone keypad.  As
        a result, some voice messaging systems may only\n   be able to handle a numeric
        local part.  The reception of\n   alphanumeric local parts on these systems
        may result in the address\n   being mapped to some locally unique (but confusing
        to the recipient)\n   number or, in the worst case the address could be deleted
        making the\n   message unreplyable.  Additionally, it may be difficult to
        create\n   messages on these systems with an alphanumeric local part without\n
        \  complex key sequences or some form of directory lookup (see 6).  The\n
        \  use of the Domain Name System should be transparent to the user.  It\n
        \  is the responsibility of the voice mail machine to lookup the fully-\n
        \  qualified domain name (FQDN) based on the address entered by the user\n
        \  (see 6).\n   In the absence of a global directory, specification of the
        local part\n   is expected to conform to international or private telephone\n
        \  numbering plans.  It is likely that private numbering plans will\n   prevail
        and these are left for local definition.  However, it is\n   RECOMMENDED that
        public telephone numbers be noted according to the\n   international numbering
        plan described in [E.164].  The indication\n   that the local part is a public
        telephone number is given by a\n   preceding \"+\" (the \"+\" would not be
        entered from a telephone keypad,\n   it is added by the system as a flag).
        Since the primary information\n   in the numeric scheme is contained by the
        digits, other character\n   separators (e.g., \"-\") may be ignored (i.e.,
        to allow parsing of the\n   numeric local mailbox) or may be used to recognize
        distinct portions\n   of the telephone number (e.g., country code).  The specification
        of\n   the local part of a VPIM address can be split into the four groups\n
        \  described below:\n      1) mailbox number\n          - for use as a private
        numbering plan (any number of digits)\n          - e.g., 2722@lucent.com\n
        \     2) mailbox number+extension\n          - for use as a private numbering
        plan with extensions\n            any number of digits, use of \"+\" as separator\n
        \         - e.g., 2722+111@Lucent.com\n      3) +international number\n          -
        for international telephone numbers conforming to E.164\n            maximum
        of 15 digits\n          - e.g., +16137637582@vm.nortel.ca\n      4) +international
        number+extension\n          - for international telephone numbers conforming
        to E.164\n             maximum of 15 digits, with an extension (e.g., behind
        a\n             PBX) that has a maximum of 15 digits.\n          - e.g., +17035245550+230@ema.org\n
        \  Note that this address format is designed to be compatible with\n   current
        usage within the voice messaging industry.  It is not\n   compatible with
        the addressing formats of RFCs 2303-2304.  It is\n   expected that as telephony
        services become more widespread on the\n   Internet, these addressing formats
        will converge.\n"
      title: 4.1.1.  VPIM Addresses
    - contents:
      - "4.1.2.  Special Addresses\n   Special addresses to represent the sender are
        provided for\n   compatibility with the conventions of Internet mail.  These
        addresses\n   do not use numeric local addresses, both to conform to current\n
        \  Internet practice and to avoid conflict with existing numeric\n   addressing
        plans. Two special addresses are RESERVED for use as\n   follows:\n   postmaster@domain\n
        \  By convention, a special mailbox named \"postmaster\" MUST exist on all\n
        \  systems.  This address is used for diagnostics and should be checked\n
        \  regularly by the system manager. This mailbox is particularly likely\n
        \  to receive text messages, which is not normal on a voice-processing\n   platform.
        \ The specific handling of these messages is an individual\n   implementation
        choice.\n   non-mail-user@domain\n   If a reply to a message is not possible,
        such as a telephone-\n   answering message, then the special address \"non-mail-user\"
        SHOULD be\n   used as the originator's address.  Any text name such as \"Telephone\n
        \  Answering\", or the telephone number if it is available, is permitted.\n
        \  This special address is used as a token to indicate an unreachable\n   originator.
        A conforming implementation MUST NOT permit a reply to an\n   address from
        \"non-mail-user\".  For compatibility with the installed\n   base of mail
        user agents, implementations MUST reject the message\n   when a message addressed
        to \"non-mail-user\" is received.  The status\n   code for such NDN's is 5.1.1
        \"Mailbox does not exist\".\n   Example:\n          From: Telephone Answering
        <non-mail-user@mycompany.com>\n"
      title: 4.1.2.  Special Addresses
    - contents:
      - "4.1.3.  Distribution Lists\n   There are many ways to handle distribution
        list (DL) expansions and\n   none are 'standard'.  A VPIM implementation MAY
        support DLs.  Using a\n   simple alias is a behavior closest to what many
        voice mail systems do\n   today and what is to be used with VPIM messages.
        \ A couple of\n   important features that need special care when DLs are used
        are:\n      Reply to the originator - (Address in the RFC822 \"Reply-To:\"
        or\n                                 \"From\" field)\n      Errors to the
        submitter - (Address in the MAIL FROM field of the\n                                 ESMTP
        exchange or the \"Return-Path:\"\n                                 RFC822
        field)\n   Some proprietary voice messaging protocols include only the recipient\n
        \  of the particular copy in the envelope and include no \"header fields\"\n
        \  except date and per-message features.  Most voice messaging systems\n   do
        not provide for \"Header Information\" in their messaging queues and\n   only
        include delivery information.  As a result, recipient\n   information MAY
        be in either the \"To:\" or \"Cc:\" header fields. If all\n   recipients cannot
        be presented then the recipient header fields\n   SHOULD be omitted to indicate
        that an accurate list of recipients\n   (e.g., for use with a reply-all capability)
        is not known.\n"
      title: 4.1.3.  Distribution Lists
    title: 4.1.  VPIM Message Addressing Formats
  - contents:
    - "4.2.  Message Header Fields\n   Internet messages contain a header information
      block.  This header\n   block contains information required to identify the
      sender, the list\n   of recipients, the message send time, and other information
      intended\n   for user presentation.  Except for specialized gateway and mailing\n
      \  list cases, header fields do not indicate delivery options for the\n   transport
      of messages.\n   Distribution list processors are noted for modifying or adding
      to the\n   header fields of messages that pass through them.  VPIM systems MUST\n
      \  be able to accept and ignore header fields that are not defined here.\n   The
      following header lines are permitted for use with VPIM messages:\n"
    - contents:
      - "4.2.1.  From\n   SEND RULES\n   The originator's fully qualified domain address
        (a mailbox address\n   followed by the fully qualified domain name) MUST be
        present.\n   Systems conforming with this profile SHOULD provide the text
        personal\n   name of the voice message originator in a quoted phrase, if the
        name\n   is available.  Text names of corporate or positional mailboxes MAY
        be\n   provided as a simple string.  From: [RFC822]\n   Example:\n               From:
        \"Joe S. User\" <12145551212@mycompany.com>\n               From: Technical
        Support <611@serviceprovider.com>\n               From: Non-mail-user@myserver.mycompany.com\n
        \  Voice mail machines may not be able to support separate attributes\n   for
        the \"From:\" header fields and the SMTP MAIL FROM, VPIM-conforming\n   systems
        SHOULD set these values to the same address.  Use of\n   addresses different
        than those present in the \"From:\" header field\n   address may result in
        unanticipated behavior.\n   RECEIVE RULES\n   The user listed in the \"From:\"
        field MUST be presented in the voice\n   message envelope of the voice messaging
        system as the originator of\n   the message, though the exact presentation
        is an implementation\n   decision (e.g., the mailbox ID or the text name MAY
        be presented).\n   The \"From:\" address SHOULD be used for replies (see 4.9).\n"
      title: 4.2.1.  From
    - contents:
      - "4.2.2.  To\n   The \"To:\" field contains the recipient's fully-qualified
        domain\n   address.\n   Example:\n               To: +12145551213@mycompany.com\n
        \  SEND RULES\n   There MAY be one or more \"To:\" fields in any message.
        \ Systems SHOULD\n   provide a list of recipients only if all recipients are
        available.\n   Systems, such as gateways from protocols or legacy platforms
        that do\n   not indicate the complete list of recipients, MAY provide a \"To:\"\n
        \  line. Because these systems cannot accurately enumerate all\n   recipients
        in the \"To:\" headers, recipients SHOULD NOT be enumerated.\n   RECEIVE RULES\n
        \  Systems conforming to this profile MAY discard the addresses in the\n   \"To:\"
        fields if they are unable to store the information.  This\n   would, of course,
        make a reply-to-all capability impossible.  If\n   present, the addresses
        in the \"To:\" field MAY be used for a reply\n   message to all recipients.\n"
      title: 4.2.2.  To
    - contents:
      - "4.2.3.  Cc\n   The \"Cc:\" field contains additional recipients' fully qualified\n
        \  domain addresses.  Many voice mail systems maintain only sufficient\n   envelope
        information for message delivery and are not capable of\n   storing or providing
        a complete list of additional recipients.\n   SEND RULES\n   Conforming implementations
        MAY send \"Cc:\" lists if all recipients are\n   known at the time of origination.
        \ If not, systems SHOULD omit the\n   \"Cc:\" fields to indicate that the
        full list of recipients is unknown\n   or otherwise unavailable.  The list
        of disclosed recipients MUST NOT\n   include undisclosed recipients (i.e.,
        those sent via a blind copy).\n   Example:\n               Cc: +12145551213@mycompany.com\n
        \  RECEIVE RULES\n   Systems conforming to this profile MAY add all the addresses
        in the\n   \"Cc:\" field to the \"To:\" field, others MAY discard the addresses
        in\n   the \"Cc:\" fields.  If a list of \"Cc:\" addresses is present, these\n
        \  addresses MAY be used for a reply message to all recipients.\n"
      title: 4.2.3.  Cc
    - contents:
      - "4.2.4.  Date\n   The \"Date:\" field contains the date and time the message
        was sent by\n   the originator.\n   SEND RULES\n   The sending system MUST
        report the time the message was sent.  The\n   time zone MUST be present and
        SHOULD be represented in a four-digit\n   time zone offset, such as -0500
        for North American Eastern Standard\n   Time.  This MAY be supplemented by
        a time zone name in parentheses,\n   e.g., \"-0700 (PDT)\".\n   Example:\n
        \              Date: Wed, 28 Jul 96 10:08:49 -0800 (PST)\n   If the VPIM sender
        is relaying a message from a system that does not\n   provide a time stamp,
        the time of arrival at the gateway system\n   SHOULD be used as the date.\n
        \  RECEIVE RULES\n   Conforming implementations SHOULD be able to convert
        [RFC822] date\n   and time stamps into local time\n"
      title: 4.2.4.  Date
    - contents:
      - "4.2.5.  Sender\n   The \"Sender:\" field contains the actual address of the
        originator if\n   an agent on behalf of the author indicated in the \"From:\"
        field sends\n   the message.\n   SEND RULES\n   This header field MAY be sent
        by VPIM-conforming systems.\n   RECEIVE RULES\n   If the address in the \"Sender:\"
        field cannot be preserved in the\n   recipient's message queues or in the
        next-hop protocol from a\n   gateway, the field MAY be silently discarded.\n"
      title: 4.2.5.  Sender
    - contents:
      - "4.2.6.  Return-Path\n   The \"Return-path:\" field is added by the final
        delivering SMTP\n   server. If present, it contains the address from the MAIL
        FROM\n   parameter of the ESMTP exchange (see [RFC822]).  Any error messages\n
        \  resulting from the delivery failure MUST be sent to this address.\n   Note
        that if the \"Return-path:\" is null (\"<>\") (e.g., a call answer\n   message
        would have no return path) delivery status notifications MUST\n   NOT be sent.\n
        \  SEND RULES\n   The originating system MUST NOT add this header.\n   RECEIVE
        RULES\n   If the receiving system is incapable of storing the return path
        (or\n   MAIL FROM) to be used for subsequent delivery errors (i.e., it is
        a\n   gateway to a legacy system or protocol), the receiving system must\n
        \  otherwise ensure that further delivery errors don't happen.  Systems\n
        \  that do not support the return path MUST ensure that at the time the\n
        \  message is acknowledged (i.e., when a DSN would be sent), the message\n
        \  is delivered to the recipient's ultimate mailbox.  Non-Delivery\n   notifications
        SHOULD NOT be sent after that final delivery.\n"
      title: 4.2.6.  Return-Path
    - contents:
      - "4.2.7.  Message-id\n   The \"Message-Id:\" field contains a globally unique
        per-message\n   identifier.\n   SEND RULES\n   A globally unique message-id
        MUST be generated for each message sent\n   from a VPIM-conforming implementation.\n
        \  Example:\n               Message-Id: <12345678@mycompany.com>\n   RECEIVE
        RULES\n   When provided in the original message, it MUST be used when sending
        a\n   MDN.  This identifier MAY be used for tracking and auditing.  From\n
        \  [RFC822]\n"
      title: 4.2.7.  Message-id
    - contents:
      - "4.2.8.  Reply-To\n   If present, the \"Reply-To:\" header provides a preferred
        address to\n   which reply messages should be sent (see 4.9).  Typically,
        voice mail\n   systems can only support one originator of a message so it
        is likely\n   that this field will be ignored by the receiving system.  From:\n
        \  [RFC822]\n   SEND RULES\n   A conforming system SHOULD NOT send a \"Reply-To:\"
        header.\n   RECEIVE RULES\n   If a \"Reply-To:\" field is present, a reply-to-sender
        message MAY be\n   sent to the address specified (that is, in lieu of the
        address in the\n   \"From:\" field).  If the receiving system (e.g., multi-protocol\n
        \  gateway) only supports one address for the originator, then the\n   address
        in the \"From:\" field MUST be used and the \"Reply-To:\" field\n   MAY be
        silently discarded.\n"
      title: 4.2.8.  Reply-To
    - contents:
      - "4.2.9.  Received\n   The \"Received:\" field contains trace information added
        to the\n   beginning of a RFC822 message by MTAs.  This is the only field
        that\n   may be added by an MTA.  Information in this header is useful for\n
        \  debugging when using an US-ASCII message reader or a header-parsing\n   tool.
        \ From: [RFC822]\n   SEND RULES\n   A VPIM-conforming system MUST add a \"Received:\"
        field.  When acting\n   as a gateway, information about the system from which
        the message was\n   received SHOULD be included.\n   RECEIVE RULES\n   A VPIM-conforming
        system MUST NOT remove any \"Received:\" fields when\n   relaying messages
        to other MTAs or gateways.  These header fields MAY\n   be ignored or deleted
        when the message is received at the final\n   destination.\n"
      title: 4.2.9.  Received
    - contents:
      - "4.2.10.  MIME Version\n   The \"MIME-Version:\" field MUST be present to
        indicate that the\n   message conforms to [MIME1-5].  Systems conforming with
        this\n   specification SHOULD include a comment with the words \"(Voice 2.0)\".\n
        \  [VPIM1] defines an earlier version of this profile and uses the token\n
        \  (Voice 1.0). Example:\n               MIME-Version: 1.0 (Voice 2.0)\n   This
        identifier is intended for information only and SHOULD NOT be\n   used to
        semantically identify the message as being a VPIM message.\n   Instead, the
        presence of the multipart/voice-message content type\n   defined in section
        18.2 SHOULD be used if identification is\n   necessary.\n"
      title: 4.2.10.  MIME Version
    - contents:
      - "4.2.11.  Content-Type\n   The \"Content-Type:\" header MUST be present to
        declare the type of\n   content enclosed in the message.  The typical top-level
        content in a\n   VPIM Message SHOULD be Multipart/Voice-Message.  The allowable\n
        \  contents are detailed starting in section 4.4 of this document.\n   From:
        [MIME2]\n"
      title: 4.2.11.  Content-Type
    - contents:
      - "4.2.12.  Content-Transfer-Encoding\n   Because Internet mail was initially
        specified to carry only 7-bit\n   US-ASCII text, it may be necessary to encode
        voice and fax data into\n   a representation suitable for that environment.
        \ The \"Content-\n   Transfer-Encoding:\" header describes this transformation
        if it is\n   needed.\n   SEND RULES\n   An implementation in conformance with
        this profile SHOULD send audio\n   and/or facsimile data in \"Binary\" form
        when binary message transport\n   is available (see section 5).  When binary
        transport is not\n   available, implementations MUST encode the audio and/or
        facsimile\n   data as \"Base64\".\n   RECEIVE RULES\n   Conforming implementations
        MUST recognize and decode the standard\n   encodings, \"Binary\" (when binary
        support is available), \"7bit,\n   \"8bit\", \"Base64\" and \"Quoted-Printable\"
        per [MIME1].  The detection\n   and decoding of \"Quoted-Printable\", \"7bit\",
        and \"8bit\" MUST be\n   supported in order to meet MIME requirements and
        to preserve\n   interoperability with the fullest range of possible devices.\n"
      title: 4.2.12.  Content-Transfer-Encoding
    - contents:
      - "4.2.13.  Sensitivity\n   The \"Sensitivity:\" field, if present, indicates
        the requested privacy\n   level.  If no privacy is requested, this field is
        omitted.  The\n   header definition is as follows:\n   Sensitivity := \"Sensitivity\"
        \":\" Sensitivity-value\n   Sensitivity-value := \"Personal\" / \"Private\"
        / \"Company-Confidential\"\n   SEND RULES\n   A VPIM-conforming implementation
        MAY include this header to indicate\n   the sensitivity of a message.  If
        a user marks a message \"Private\", a\n   conforming implementation MUST send
        only the \"Private\" sensitivity\n   level.  There are no VPIM-specific semantics
        defined for the values\n   \"Personal\" or \"Company-Confidential\".  A conforming
        implementation\n   SHOULD NOT send the values \"Personal\" or \"Company-Confidential\".
        \ If\n   the message is of \"Normal\" sensitivity, this field SHOULD be omitted.\n
        \  From: [X.400]\n   RECEIVE RULES\n   If a \"Sensitivity:\" field with a
        value of \"Private\" is present in the\n   message, a conforming system MUST
        prohibit the recipient from\n   forwarding this message to any other user.
        \ A conforming system,\n   however, SHOULD allow the responder to reply to
        a sensitive message,\n   but SHOULD NOT include the original message content.
        \ The responder\n   MAY set the sensitivity of the reply message.\n   A receiving
        system MAY ignore sensitivity values of \"Personal\" and\n   \"Company Confidential\".\n
        \  If the receiving system does not support privacy and the sensitivity\n
        \  is \"Private\", a negative delivery status notification MUST be sent to\n
        \  the originator with the appropriate status code (5.6.0) \"Other or\n   undefined
        protocol status\" indicating that privacy could not be\n   assured.  The message
        contents SHOULD be returned to the sender to\n   allow for a voice context
        with the notification.  A non-delivery\n   notification to a private message
        SHOULD NOT be tagged private since\n   it will be sent to the originator.
        \ From: [X.400]\n   A message with no privacy explicitly noted (i.e., no header)
        or with\n   \"Normal\" sensitivity has no special treatment.\n"
      title: 4.2.13.  Sensitivity
    - contents:
      - "4.2.14.  Importance\n   Indicates the requested importance to be given by
        the receiving\n   system. If no special importance is requested, this header
        MAY be\n   omitted and the value of the absent header assumed to be \"normal\".\n
        \  From: [X.400]\n   Importance := \"Importance\" \":\" importance-value\n
        \  Importance-value := \"low\" / \"normal\" / \"high\"\n   SEND RULES\n   Conforming
        implementations MAY include this header to indicate the\n   importance of
        a message.\n   RECEIVE RULES\n   If the receiving system does not support
        \"Importance:\", the attribute\n   MAY be silently dropped.\n"
      title: 4.2.14.  Importance
    - contents:
      - "4.2.15.  Subject\n   The \"Subject:\" field is often provided by email systems
        but is not\n   widely supported on voice mail platforms.  From: [RFC822]\n
        \  SEND RULES\n   For compatibility with text-based mailbox interfaces, a
        text subject\n   field SHOULD be generated by a conforming implementation.
        \ It is\n   RECOMMENDED that voice-messaging systems that do not support any
        text\n   user interfaces (e.g., access only by a telephone) insert a generic\n
        \  subject header of \"VPIM Message\" or \"Voice Message\" for the benefit\n
        \  of GUI-enabled recipients.\n   RECEIVE RULES\n   It is anticipated that
        many voice-only systems will be incapable of\n   storing the subject line.
        \ The subject MAY be discarded by a\n   receiving system.\n"
      title: 4.2.15.  Subject
    title: 4.2.  Message Header Fields
  - contents:
    - '4.3.  MIME Audio Content Descriptions

      '
    - contents:
      - "4.3.1.  Content-Description\n   This field MAY be present to facilitate the
        text identification of\n   these body parts in simple email readers.  Any
        values may be used.\n   Example:\n         Content-Description: Big Telco
        Voice Message\n   SEND RULES\n   This field MAY be added to a voice body part
        to offer a freeform\n   description of the voice content.  It is useful to
        incorporate the\n   values for Content-Disposition with additional descriptions.
        \ For\n   example, this can be used to indicate product name or transcoding\n
        \  records.\n   RECEIVE RULES\n   This field MAY be displayed to the recipient.
        \ However, since it is\n   only informative it MAY be ignored.\n"
      title: 4.3.1.  Content-Description
    - contents:
      - "4.3.2.  Content-Disposition\n   This field MUST be present to allow the parsable
        identification of\n   body parts within a VPIM voice message.  This is especially
        useful\n   if, as is typical, more than one Audio/* body occurs within a single\n
        \  level (e.g., Multipart/Voice-Message).  Since a VPIM voice message is\n
        \  intended to be automatically played in the order in which the audio\n   contents
        occur, the audio contents MUST always be of disposition\n   inline.  However,
        it is still useful to include a filename value, so\n   this SHOULD be present
        if this information is available.  From:\n   [DISP]\n   SEND RULES\n   In
        order to distinguish between the various types of audio contents\n   in a
        VPIM voice message a new disposition parameter \"voice\" is\n   defined with
        IANA (see section 18.1) with the parameter values below\n   to be used as
        appropriate:\n   Audio-Type := \"voice\" \"=\" Audio-type-value\n   Audio-type-value
        := \"Voice-Message\" / \"Voice-Message-Notification\" /\n   \"Originator-Spoken-Name\"
        /\"Recipient-Spoken-Name\" /\"Spoken-Subject\"\n      Voice-Message - the
        primary voice message,\n      Voice-Message-Notification - a spoken delivery
        notification\n        or spoken disposition notification,\n      Originator-Spoken-Name
        - the spoken name of the originator,\n      Recipient-Spoken-Name - the spoken
        name of the recipient(s) if\n        available to the originator\n      Spoken-Subject-
        the spoken subject of the message, typically\n        spoken by the originator\n
        \  Note that there SHOULD only be one instance of each of these types of\n
        \  audio contents per message level.  Additional instances of a given\n   type
        (i.e., parameter value) MAY occur within an attached forwarded\n   or reply
        voice message.  If there are multiple recipients for a given\n   message,
        recipient-spoken-name MUST NOT be used.\n   RECEIVE RULES\n   Implementations
        SHOULD use this header.  However, those that do not\n   understand the \"voice\"
        parameter (or the \"Content-Disposition:\"\n   header) can safely ignore it,
        and will present the audio body parts\n   in order (but will not be able to
        distinguish between them).  If more\n   than one instance of the \"voice\"
        parameter type value is encountered\n   at one level (e.g., multiple 'Voice-Message'
        tagged contents) then\n   they SHOULD be presented together.\n"
      title: 4.3.2.  Content-Disposition
    - contents:
      - "4.3.3.  Content-Duration\n   The \"Content-Duration:\" header provides an
        indication of the audio\n   length in seconds of the segment.\n   Example:\n
        \        Content-Duration: 33\n   SEND RULES\n   This field MAY be present
        to allow the specification of the length of\n   the audio body part in seconds.\n
        \  RECEIVE RULES\n   The use of this field on reception is a local implementation
        issue.\n   From: [DUR]\n"
      title: 4.3.3.  Content-Duration
    - contents:
      - "4.3.4.  Content-Language:\n   This field MAY be present to allow the specification
        of the spoken\n   language of the audio body part.  The encoding is defined
        in [LANG].\n   Example for UK English:\n         Content-Language: en-UK\n
        \  SEND RULES\n   A sending system MAY add this field to indicate the language
        of the\n   voice.  The determination of this (e.g., automated or user-selected)\n
        \  is a local implementation issue.\n   RECEIVE RULES\n   The use of this
        field on reception is a local implementation issue.\n   It MAY be used as
        a hint to the recipient (e.g., end-user or an\n   automated translation process)
        as to the language of the voice\n   message.\n"
      title: '4.3.4.  Content-Language:'
    title: 4.3.  MIME Audio Content Descriptions
  - contents:
    - "4.4.  Voice Message Content Types\n   The content types described in this section
      are identified for use\n   within the Multipart/Voice-Message content.  This
      content is referred\n   to as a \"VPIM message\" in this document and is the
      fundamental part\n   of a \"VPIM message\".\n   Only the contents profiled can
      be sent within a VPIM voice message\n   construct (i.e., the Multipart/Voice-Message
      content type) to form a\n   simple or a more complex structure (several examples
      are given in\n   Appendix B).  The presence of other contents within a VPIM
      voice\n   message is not permitted. In the absence of a bilateral agreement,\n
      \  conforming implementations MUST NOT create a message containing\n   prohibited
      contents.  In the spirit of liberal acceptance, a\n   conforming implementation
      MAY accept and render prohibited content.\n   Systems unable to accept or render
      prohibited contents MAY discard\n   the prohibited contents as necessary to
      deliver the acceptable\n   content.  When multiple contents are present within
      the\n   Multipart/Voice-Message, they SHOULD be presented to the user in the\n
      \  order that they appear in the message.\n   Some deployed implementations
      based on a common interpretation of the\n   original VPIM v2 specification reject
      messages with prohibited\n   content rather than discard the unsupported contents.
      \ For\n   interoperability with these systems, it is especially important that\n
      \  prohibited contents not be sent within a Multipart/Voice-Message.\n"
    - contents:
      - "4.4.1.  Multipart/Voice-Message\n   This MIME multipart structure provides
        a mechanism for packaging a\n   voice message into one container that is tagged
        as VPIM v2\n   conforming.  The sub-type is identical in semantics and syntax
        to\n   multipart/mixed, as defined in [MIME2].  As such, it may be safely\n
        \  interpreted as a multipart/mixed by systems that do not understand\n   the
        sub-type (only the identification as a voice message would be\n   lost).\n
        \  In addition to the MIME required boundary parameter, a version\n   parameter
        is also required for this sub-type.  This is to distinguish\n   this refinement
        of the sub-type from the previous definition in\n   [VPIM1].  The value of
        the version parameter is \"2.0\" if the content\n   conforms to the requirements
        of this specification.  Should there be\n   further revisions of this content
        type, there MUST be backwards\n   compatibility (i.e., systems implementing
        version n can read version\n   2, and systems implementing version 2 can read
        version 2 contents\n   within a version n).\n   SEND RULES\n   The Multipart/Voice-Message
        content-type MUST only contain the\n   profiled media and content types specified
        in this section (i.e.,\n   Audio/*, Image/*, and Message/RFC822).  The most
        common will be:\n   spoken name, spoken subject, the message itself, and an
        attached fax.\n   Forwarded messages are created by simply using the Message/RFC822\n
        \  construct.\n   Conformant implementations MUST use Multipart/Voice-Message
        in a VPIM\n   message.  In most cases, this Multipart/Voice-Message Content-Type\n
        \  will be the top level but may be included within a Message/RFC822 if\n
        \  the message is forwarded or within a multipart/mixed when more than\n   one
        message is being forwarded.\n   RECEIVE RULES\n   Conformant implementations
        MUST recognize the Multipart/Voice-Message\n   content (whether it is a top-level
        content or contained in a\n   Multipart/Mixed) and MUST be able to separate
        the contents (e.g.,\n   spoken name or spoken subject).\n   The semantic of
        Multipart/Voice-Message (defined in section 18.2) is\n   identical to Multipart/Mixed
        and may be interpreted as that by\n   systems that do not recognize this content-type.\n"
      title: 4.4.1.  Multipart/Voice-Message
    - contents:
      - "4.4.2.  Message/RFC822\n   SEND RULES\n   MIME requires support of the Message/RFC822
        message encapsulation\n   body part.  This body part SHOULD be used within
        a Multipart/Voice-\n   Message to forward complete messages (see 4.8) or to
        reply with\n   original content (see 4.9).  From: [MIME2]\n   RECEIVE RULES\n
        \  The receiving system MUST accept this format and SHOULD treat this\n   attachment
        as a forwarded message.  The receiving system MAY flatten\n   the forwarding
        structure (i.e., remove this construct to leave\n   multiple voice contents
        or even concatenate the voice contents to fit\n   in a recipient's mailbox),
        if necessary.\n"
      title: 4.4.2.  Message/RFC822
    - contents:
      - "4.4.3.  Audio/32KADPCM\n   SEND RULES\n   An implementation conforming to
        this profile MUST send Audio/32KADPCM\n   by default for voice [ADPCM].  This
        encoding is a moderately-\n   compressed encoding with a data rate of 32 kbits/second
        using\n   moderate processing resources. Typically, this body contains several\n
        \  minutes of message content;  however, if used for spoken name or\n   subject
        the content is expected to be considerably shorter (i.e.,\n   about 5 and
        10 seconds respectively).\n   RECEIVE RULES\n   Receivers MUST be able to
        accept and decode Audio/32KADPCM.  If an\n   implementation can only handle
        one voice body, then multiple voice\n   bodies (if present) SHOULD be concatenated,
        and MUST NOT be\n   discarded. If concatenated, the contents SHOULD be in
        the same order\n   they appeared in the multipart.\n"
      title: 4.4.3.  Audio/32KADPCM
    - contents:
      - "4.4.4.  Image/TIFF\n   A common image encoding for facsimile, known as TIFF-F,
        is a\n   derivative of the Tag Image File Format (TIFF) and is described in\n
        \  several documents.  For the purposes of VPIM, the F Profile of TIFF\n   for
        Facsimile (TIFF-F) is defined in [TIFF-F], and the Image/TIFF\n   MIME content-type
        is defined in [TIFFREG].  While there are several\n   formats of TIFF, only
        TIFF-F is profiled for use within\n   Multipart/Voice-Message. Further, since
        the TIFF-F file format is\n   used in a store-and-forward mode with VPIM,
        the image MUST be encoded\n   so that there is only one image strip per facsimile
        page.\n   SEND RULES\n   All VPIM implementations that support facsimile MUST
        generate TIFF-F\n   compatible facsimile contents in the Image/TIFF subtype
        using the\n   application=faxbw encoding by default.  If the VPIM message
        is a\n   voice- annotated fax, the implementation SHOULD send this fax content\n
        \  in Multipart/Voice-Message.  If the message is a simple fax, an\n   implementation
        MAY send it without using the Multipart/Voice-Message\n   to be more compatible
        with fax-only (RFC 2305) implementations.\n   While any valid MIME body header
        MAY be used (e.g., Content-\n   Disposition to indicate the filename), none
        are specified to have\n   special semantics for VPIM and MAY be ignored.  Note
        that the\n   content-type parameter application=faxbw MUST be included in
        outbound\n   messages.\n   RECEIVE RULES\n   Not all VPIM systems support
        fax, but all SHOULD accept it within the\n   multipart/voice-message.  Within
        a Multipart/Voice-Message, a\n   receiving system that cannot render fax content
        SHOULD accept the\n   voice content of a VPIM message and discard the fax
        content.  Outside\n   a Multipart/Voice-Message, a recipient system MAY reject
        (with\n   appropriate NDN) the entire message if it cannot store or is not\n
        \  capable of rendering a message with fax attachments.  VPIM conforming\n
        \  systems MAY support fax outside of (or without) the Multipart/Voice-\n
        \  Message.\n   Some deployed implementations based on a common interpretation
        of the\n   original VPIM V2 specification reject messages with fax content\n
        \  within the Multipart/Voice-Message rather than discard the\n   unsupported
        contents. These systems will return the message to the\n   sender with an
        NDN indicating lack of support for fax.\n"
      title: 4.4.4.  Image/TIFF
    title: 4.4.  Voice Message Content Types
  - contents:
    - "4.5.  Other MIME Contents\n   The following MIME contents (with the exception
      of multipart/mixed in\n   section 4.5.1) MAY be included within a multipart/voice
      message.\n   Other contents MUST NOT be included.  Their handling is a local\n
      \  implementation issue.  Multipart/mixed is included to promote\n   interoperability
      with a wider range of systems and also to allow the\n   creation of more complex
      multimedia messages (with a VPIM message as\n   one part).\n"
    - contents:
      - "4.5.1.  Multipart/Mixed\n   This common MIME content-type allows the enclosing
        of several body\n   parts in a single message.\n   SEND RULES\n   A VPIM voice
        message (i.e., multipart/voice-message) MAY be included\n   within a message
        with a Multipart/Mixed top-level content type.\n   Typically, this would only
        be used when mixing non-voice and non-fax\n   contents with a voice message.\n
        \  RECEIVE RULES\n   Such a message is not itself a VPIM message and the handling
        of such\n   a construct is outside the scope of the VPIM profile.  However,
        an\n   the spirit of liberal acceptance, a conforming implementation MUST\n
        \  accept and render a VPIM voice message contained in a\n   Multipart/Mixed.\n"
      title: 4.5.1.  Multipart/Mixed
    - contents:
      - "4.5.2.  Text/Directory\n   SEND RULES\n   This content was profiled in the
        original specification of VPIM v2 as\n   a means of transporting contact information
        from the sender to the\n   recipient.  This usage did not find widespread
        adoption and is no\n   longer a feature of VPIM V2.  Conforming implementations
        SHOULD NOT\n   send the Text/Directory content type.\n   RECEIVE RULES\n   For
        compatibility with an earlier specification of VPIM v2, the\n   Text/Directory
        content type MUST be accepted by a conforming\n   implementation, but need
        not be stored, processed, or rendered to the\n   recipient.\n"
      title: 4.5.2.  Text/Directory
    - contents:
      - "4.5.3.  Proprietary Voice or Fax Formats\n   Use of any other encoding except
        the required codecs reduces\n   interoperability in the absence of explicit
        knowledge about the\n   capabilities of the recipient.  A conforming implementation
        SHOULD\n   NOT use any other encoding unless a unique identifier is registered\n
        \  with the IANA prior to use (see [MIME4]).  The voice encodings SHOULD\n
        \  be registered as subtypes of Audio. The fax encodings SHOULD be\n   registered
        as subtypes of Image.\n   SEND RULES\n   Proprietary voice encoding formats
        or other standard formats SHOULD\n   NOT be sent under this profile unless
        the sender has a reasonable\n   expectation that the recipient will accept
        the encoding.  In\n   practice, this requires explicit per-destination configuration\n
        \  information maintained either in a directory, personal address book,\n
        \  or gateway configuration tables.\n   RECEIVE RULES\n   Systems MAY accept
        other Audio/* or Image/* content types if they can\n   decode them.  Systems
        which receive Audio/* or Image/* content types\n   which they are unable to
        deposit or unable to render MUST return the\n   message (and SHOULD include
        the original content) to the originator\n   with an NDN indicating media not
        supported.\n"
      title: 4.5.3.  Proprietary Voice or Fax Formats
    - contents:
      - "4.5.4.  Text/Plain\n   MIME requires support of the basic Text/Plain content
        type (with the\n   US-ASCII character set).  This content type has limited
        applicability\n   within the voice-messaging environment.  However, because
        VPIM is a\n   MIME profile, MIME requirements SHOULD be met.\n   SEND RULES\n
        \  Conforming VPIM implementations SHOULD NOT send the Text/Plain\n   content-type.
        \ Implementations MAY send the Text/Plain content-type\n   outside the Multipart/Voice-Message.\n
        \  RECEIVE RULES\n   Within a Multipart/Voice-Message, the Text/Plain content-type
        MAY be\n   dropped from the message, if necessary, to deliver the audio/fax\n
        \  components.  The recipient SHOULD NOT reject the entire message if\n   the
        text component cannot be accepted or rendered.\n   Outside a Multipart/Voice-Message,
        conforming implementations MUST\n   accept Text/Plain; however, specific handling
        is left as an\n   implementation decision.  From: [MIME2]\n   Some deployed
        implementations based on a common interpretation of the\n   original VPIM
        V2 specification reject messages with any text content\n   rather than discard
        the unsupported contents.  These systems will\n   return the message to the
        sender with an NDN indicating lack of\n   support for text.\n"
      title: 4.5.4.  Text/Plain
    title: 4.5.  Other MIME Contents
  - contents:
    - "4.6.  Delivery Status Notification (DSN)\n   A DSN is a notification of delivery
      (positive DSN), non-delivery\n   (negative DSN), or temporary delivery delay
      (delayed DSN).  The top-\n   level content-type of a DSN is Multipart/Report,
      which is defined in\n   [REPORT].  The content-type which distinguishes DSN's
      from other\n   types of notifications is Message/Delivery-Status, which is defined\n
      \  in [DSN].\n   SEND RULES\n   A VPIM-compliant implementation MUST be able
      to send DSN's that\n   conform to [REPORT] and [DSN].  Unless requested otherwise,
      a non-\n   delivery DSN MUST be sent when any form of non-delivery of a message\n
      \  occurs.\n   A VPIM-compliant implementation SHOULD provide a spoken delivery\n
      \  status in the \"human-readable\" body part of the DSN, but MAY provide\n
      \  a textual status.\n   RECEIVE RULES\n   A VPIM-compliant implementation MUST
      be able to receive DSN's that\n   conform to [REPORT] and [DSN].\n   A VPIM-compliant
      implementation MUST be able to receive a DSN whose\n   \"human-readable\" body
      part contains a spoken delivery status phrase\n   or a textual description.
      \ Though subsequent use of the phrase or\n   text is a local implementation
      issue, the intent of the DSN MUST be\n   presented to the end user.\n"
    title: 4.6.  Delivery Status Notification (DSN)
  - contents:
    - "4.7.  Message Disposition Notification (MDN)\n   An MDN is a notification indicating
      what happens to a message after\n   it is deposited in the recipient's mailbox.
      \ An MDN can be positive\n   (message was read/played/rendered/etc.) or negative
      (message was\n   deleted before recipient could see it, etc.).  The top-level\n
      \  content-type of a MDN is Multipart/Report, which is defined in\n   [REPORT].
      \ The content-type which distinguishes MDN's from other\n   types of notifications
      is Message/Disposition-Notification, which is\n   defined in [MDN].\n   SEND
      RULES\n   A VPIM-compliant implementation SHOULD support the ability to request\n
      \  MDNs.  This is done via the use of the \"Disposition-Notification-To:\"\n
      \  header field as defined in [MDN].\n   A VPIM-compliant implementation SHOULD
      support the ability to send\n   MDNs, but these MDNs MUST conform to [REPORT]
      and [MDN].\n   When sending an MDN, a VPIM-compliant implementation SHOULD provide
      a\n   spoken message disposition in the \"human-readable\" body part of the\n
      \  MDN, but MAY provide a textual status.\n   RECEIVE RULES\n   A VPIM-compliant
      implementation SHOULD respond to an MDN request with\n   an MDN response.\n
      \  A VPIM-compliant implementation MUST be able to receive MDNs that\n   conform
      to [REPORT] and [MDN], if it is capable of requesting MDNs.\n   If a VPIM-compliant
      implementation is capable of receiving MDNs, it\n   MUST be able to receive
      a MDN whose \"human-readable\" body part\n   contains a spoken message disposition
      phrase or a textual disposition\n   description.  Though subsequent use of the
      phrase or text is a local\n   implementation issue, the intent of the MDN MUST
      be presented to the\n   end user.\n"
    title: 4.7.  Message Disposition Notification (MDN)
  - contents:
    - "4.8.  Forwarded Messages\n   VPIM v2 explicitly supports the forwarding of
      voice and fax content\n   with voice or fax annotation.  However, only the two
      constructs\n   described below are acceptable in a VPIM message.  Since only
      the\n   first (i.e., Message/RFC822) can be recognized as a forwarded message\n
      \  (or even multiple forwarded messages), it is RECOMMENDED that this\n   construct
      be used whenever possible.\n   Forwarded VPIM messages SHOULD be sent as a Multipart/Voice-Message\n
      \  with the entire original message enclosed in a Message/RFC822\n   content-type
      and the annotation as a separate Audio/* or Image/* body\n   part.  If the RFC822
      header fields are not available for the\n   forwarded content, simulated header
      fields with available information\n   SHOULD be constructed to indicate the
      original sending timestamp, and\n   the original sender as indicated in the
      \"From:\" field.  Note that at\n   least one of \"From:\", \"Subject:\", or
      \"Date:\" MUST be present.  As\n   well, the Message/RFC822 content MUST include
      at least the \"MIME-\n   Version:\", and \"Content-Type:\" header fields.  From:
      [MIME2]\n   In the event that forwarding information is lost, the entire audio\n
      \  content MAY be sent as a single Audio/* segment without including any\n   forwarding
      semantics.  An example of this loss is an AMIS message\n   being forwarded through
      an AMIS-to-VPIM gateway.\n"
    title: 4.8.  Forwarded Messages
  - contents:
    - "4.9.  Reply Messages\n   VPIM v2 explicitly supports replying to received messages.\n
      \  Support of multiple originator header fields in a reply message is\n   often
      not possible on voice messaging systems, so it may be necessary\n   to choose
      only one when gatewaying a VPIM message to another voice\n   message system.
      \ However, implementers should note that this may make\n   it impossible to
      send DSN's, MDN's, and replies to their proper\n   destinations.\n   In some
      cases, replying to a message is not possible, such as with a\n   message created
      by telephone answering (i.e., classic voice mail).\n   In this case, the From
      field SHOULD contain the special address non-\n   mail-user@domain (see 4.1.2).
      \ The recipient's VPIM system SHOULD NOT\n   offer the option to reply to this
      kind of message (unless an\n   outcalling feature is offered - which is out
      of scope for VPIM).\n"
    title: 4.9.  Reply Messages
  title: 4.  Voice Message Interchange Format
- contents:
  - "5.  Message Transport Protocol\n   Messages are transported between voice mail
    machines using the\n   Internet Extended Simple Mail Transfer Protocol (ESMTP).
    \ All\n   information required for proper delivery of the message is included\n
    \  in the ESMTP dialog.  This information, including the sender and\n   recipient
    addresses, is commonly referred to as the message\n   \"envelope\".  This information
    is equivalent to the message control\n   block in many analog voice messaging
    protocols.\n   ESMTP is a general-purpose messaging protocol, designed both to
    send\n   mail and to allow terminal console messaging.  Simple Mail Transport\n
    \  Protocol (SMTP) was originally created for the exchange of US-ASCII\n   7-bit
    text messages.  Binary and 8-bit text messages have\n   traditionally been transported
    by encoding the messages into a 7-bit\n   text-like form.  [ESMTP] formalized
    an extension mechanism for SMTP,\n   and subsequent RFCs have defined 8-bit text
    networking, command\n   streaming, binary networking, and extensions to permit
    the\n   declaration of message size for the efficient transmission of large\n
    \  messages such as multi-minute voice mail.\n   The following sections list ESMTP
    commands, keywords, and parameters\n   that are required and those that are optional
    for conformance to this\n   profile.\n"
  - contents:
    - "5.1.  Base SMTP Protocol\n   A conforming system MUST implement all mandatory
      SMTP and ESMTP\n   commands.  Any defined optional command or parameter MAY
      be\n   supported.\n"
    title: 5.1.  Base SMTP Protocol
  - contents:
    - "5.2.  SMTP Service Extensions\n   VPIM utilizes a number of SMTP Service Extensions
      to provide full-\n   featured voice messaging service.  The following extensions
      are\n   profiled for use with VPIM:\n"
    - contents:
      - "5.2.1.  DSN Extension\n   The DSN extension defines a mechanism which allows
        an SMTP client to\n   specify (a) DSN's should be generated under certain
        conditions, (b)\n   whether such DSN's should return the contents of the message,
        and (c)\n   additional information, to be returned with a DSN, that allows
        the\n   sender to identify both the recipient(s) for which the DSN was\n   issued,
        and the transaction in which the original message was sent.\n   The DSN extension
        MUST be supported by VPIM conforming\n   implementations.\n   In addition,
        beyond the requirements of [DRPT], conforming\n   implementations MUST support
        NOTIFY parameter on the RCPT command to\n   allow indication of when the originator
        requests a notification.  The\n   RET parameter SHOULD be supported to return
        the original message with\n   the notification.  Parameters ORCPT and ENVID
        MAY also be supported.\n   From: [DRPT]\n"
      title: 5.2.1.  DSN Extension
    - contents:
      - "5.2.2.  SIZE Extension\n   The SIZE extension defines a mechanism whereby
        an SMTP client and\n   server may interact to give the server an opportunity
        to decline to\n   accept a message (perhaps temporarily) based on the client's
        estimate\n   of the message size.  From: [SIZE]\n   The SIZE extension MUST
        be supported by VPIM-compliant\n   implementations.\n"
      title: 5.2.2.  SIZE Extension
    - contents:
      - "5.2.3.  ENHANCEDSTATUSCODES Extension\n   The ENHANCEDSTATUSCODES extension
        defines a mechanism whereby an SMTP\n   server augments its responses with
        the enhanced mail system status\n   codes defined in [CODES].  These codes
        can then be used to provide\n   more informative explanations of error conditions.
        \ From: [STATUS]\n   The ENHANCEDSTATUSCODES extension SHOULD be supported
        by VPIM-\n   compliant implementations.\n"
      title: 5.2.3.  ENHANCEDSTATUSCODES Extension
    - contents:
      - "5.2.4.  PIPELINING Extension\n   The PIPELINING extension defines a mechanism
        whereby an SMTP server\n   can indicate the extent of its ability to accept
        multiple commands in\n   a single TCP send operation.  Using a single TCP
        send operation for\n   multiple commands can improve SMTP performance significantly.
        \ From\n   [PIPE]\n   The PIPELINING extension SHOULD be supported by VPIM-compliant\n
        \  implementations.\n"
      title: 5.2.4.  PIPELINING Extension
    - contents:
      - "5.2.5.  CHUNKING Extension\n   The CHUNKING extension defines a mechanism
        that enables an SMTP\n   client and server to negotiate the use of the message
        data transfer\n   command \"BDAT\" (in alternative to the DATA command) for
        efficiently\n   sending large MIME messages.  From: [BINARY]\n   The CHUNKING
        extension MAY be supported by VPIM-compliant\n   implementations.\n"
      title: 5.2.5.  CHUNKING Extension
    - contents:
      - "5.2.6.  BINARYMIME Extension\n   The BINARYMIME extension defines a mechanism
        that enables an SMTP\n   client and server to negotiate the transfer of unencoded
        binary\n   message data utilizing the BDAT command.  From: [BINARY]\n   The
        BINARYMIME extension MAY be supported by VPIM-compliant\n   implementations.
        \ Note that [BINARY] specifies that if BINARYMIME is\n   to be supported,
        then CHUNKING has to be supported by definition.\n"
      title: 5.2.6.  BINARYMIME Extension
    title: 5.2.  SMTP Service Extensions
  - contents:
    - "5.3.  ESMTP - SMTP Downgrading\n   The SMTP extensions suggested or required
      for conformance to VPIM\n   fall into two categories.  The first category includes
      features that\n   increase the efficiency of the transport system such as SIZE,\n
      \  BINARYMIME, and PIPELINING.  In the event of a downgrade to a less-\n   functional
      transport system, these features can be dropped with no\n   functional change
      to the sender or recipient.\n   The second category of features is transport
      extensions in support of\n   new functions.  DSN and ENHANCEDSTATUSCODES provide
      essential\n   improvements in the handling of delivery status notifications
      to\n   bring email to the level of reliability expected of Voice Mail.  To\n
      \  ensure a consistent level of service across an intranet or the global\n   Internet,
      it is essential that VPIM-conforming ESMTP support the DSN\n   extension at
      all hops between a VPIM originating system and the\n   recipient system.  In
      the situation where a \"downgrade\" is\n   unavoidable a relay hop may be forced
      (by the next hop) to forward a\n   VPIM message without the ESMTP request for
      delivery status\n   notification.  It is RECOMMENDED that the downgrading system
      should\n   continue to attempt to deliver the message, but MUST send an\n   appropriate
      delivery status notification to the originator, e.g., the\n   message left an
      ESMTP host and was sent relayed to a non-DSN-aware\n   destination, and this
      may be the last DSN received.\n"
    title: 5.3.  ESMTP - SMTP Downgrading
  title: 5.  Message Transport Protocol
- contents:
  - "6.  Directory Address Resolution\n   It is the responsibility of a VPIM system
    to provide the fully-\n   qualified domain name (FQDN) of the recipient based
    on the address\n   entered by the user (if the entered address is not already
    a FQDN).\n   This would typically be an issue on systems that offer only a\n   telephone
    user interface.  The mapping of the dialed target number to\n   a routable FQDN
    address, allowing delivery to the destination system,\n   can be accomplished
    through implementation-specific means.\n   To facilitate a local cache, an implementation
    may wish to populate\n   local directories with the first and last names, as well
    as the\n   senders' spoken name information extracted from received messages.\n
    \  Addresses or names parsed from the header fields of VPIM messages MAY\n   be
    used to populate directories.\n"
  title: 6.  Directory Address Resolution
- contents:
  - "7.  Management Protocols\n   The Internet protocols provide a mechanism for the
    management of\n   messaging systems, from the management of the physical network\n
    \  through the management of the message queues.  SNMP SHOULD be\n   supported
    on a VPIM-conforming machine.\n"
  - contents:
    - "7.1.  Network Management\n   The digital interface to the VM and the TCP/IP
      protocols MAY be\n   managed. MIB II MAY be implemented to provide basic statistics
      and\n   reporting of TCP and IP protocol performance [MIB II].\n"
    title: 7.1.  Network Management
  title: 7.  Management Protocols
- contents:
  - "8.  Conformance Requirements\n   VPIM is a messaging application that will be
    supported in several\n   environments and be supported on differing devices.  These\n
    \  environments include traditional voice processing systems, desktop\n   voice
    messaging systems, store-and-forward relays, and protocol\n   translation gateways.\n
    \  In order to accommodate all environments, this document defines two\n   areas
    of conformance: transport and content.\n   Transport-conformant systems will pass
    VPIM messages in a store-and-\n   forward manner with assured delivery notifications
    and without the\n   loss of information.  It is expected that most store-and-forward\n
    \  Internet mail-based messaging systems will be VPIM transport-\n   conformant.\n
    \  Content-conformant systems will generate and interpret VPIM messages.\n   Conformance
    in the generation of VPIM messages indicates that the\n   restrictions of this
    profile are honored.  Only contents specified in\n   this profile or extensions
    agreed to by bilateral agreement may be\n   sent. Conformance in the interpretation
    of VPIM messages indicates\n   that all VPIM content types and constructs can
    be received;  that all\n   mandatory VPIM content types can be decoded and presented
    to the\n   recipient in an appropriate manner; and that any unrenderable\n   contents
    result in the appropriate notification.\n   A summary of the conformance requirements
    is contained in Appendix A.\n   VPIM end systems are expected to be both transport-
    and content-\n   conformant.  Voice messaging systems and protocol conversion
    gateways\n   are considered end systems.\n   Relay systems are expected to be
    transport-conformant in order to\n   receive and send conforming messages.  However,
    they must also create\n   VPIM-conforming delivery status notifications in the
    event of\n   delivery problems.\n   Desktop Email clients that support VPIM are
    expected to be content-\n   conformant.  Desktop email clients use various protocols
    and API's\n   for exchanging messages with the local message store and message\n
    \  transport system.  While these clients may benefit from VPIM\n   transport
    capabilities, specific client-server requirements are out-\n   of-scope for this
    document.\n"
  title: 8.  Conformance Requirements
- contents:
  - '9.  Security Considerations

    '
  - contents:
    - "9.1.  General Directive\n   This document is a profile of existing Internet
      mail protocols.  To\n   maintain interoperability with Internet mail, any security
      to be\n   provided should be part of the Internet security infrastructure,\n
      \  rather than a new mechanism or some other mechanism outside of the\n   Internet
      infrastructure.\n"
    title: 9.1.  General Directive
  - contents:
    - "9.2.  Threats and Problems\n   Both Internet mail and voice messaging have
      their own set of threats\n   and countermeasures.  As such, this specification
      does not create any\n   security issues not already existing in the profiled
      Internet mail\n   and voice mail protocols themselves.  This section attends
      only to\n   the set of additional threats that ensue from integrating the two\n
      \  services.\n"
    - contents:
      - "9.2.1.  Spoofed sender\n   The actual sender of the voice message might not
        be the same as that\n   specified in the \"Sender:\" or \"From:\" message
        header fields or the\n   MAIL FROM address from the SMTP envelope.  In a tightly
        constrained\n   environment, sufficient physical and software controls may
        be able to\n   ensure prevention of this problem.  In addition, the recognition
        of\n   the sender's voice may provide confidence of the sender's identity\n
        \  irrespective of that specified in \"Sender:\" or \"From:\".  It should
        be\n   recognized that SMTP implementations do not provide inherent\n   authentication
        of the senders of messages, nor are sites under\n   obligation to provide
        such authentication.\n"
      title: 9.2.1.  Spoofed sender
    - contents:
      - "9.2.2.  Unsolicited voice mail\n   Assigning an Internet mail address to
        a voice mailbox opens the\n   possibility of receiving unsolicited messages
        (either text or voice\n   mail).  Traditionally, voice mail systems operated
        in closed\n   environments and were not susceptible to unknown senders.  Voice
        mail\n   users have a higher expectation of mailbox privacy and may consider\n
        \  such messages as a security breach.  Many Internet mail systems are\n   choosing
        to block all messages from unknown sources in an attempt to\n   curb this
        problem.\n"
      title: 9.2.2.  Unsolicited voice mail
    - contents:
      - "9.2.3.  Message disclosure\n   Users of voice messaging systems have an expectation
        of a level of\n   message privacy that is higher than the level provided by
        Internet\n   mail without security enhancements.  This expectation of privacy
        by\n   users SHOULD be preserved as much as possible.\n"
      title: 9.2.3.  Message disclosure
    title: 9.2.  Threats and Problems
  - contents:
    - "9.3.  Security Techniques\n   Sufficient physical and software control may
      be acceptable in\n   constrained environments.  Further, the profile specified
      in this\n   document does not in any way preclude the use of any Internet object\n
      \  or channel security protocol to encrypt, authenticate, or non-\n   repudiate
      the messages.\n"
    title: 9.3.  Security Techniques
  title: 9.  Security Considerations
- contents:
  - "10.  Normative References\n   [8BIT]    Klensin, J., Freed, N., Rose, M., Stefferud,
    E. and D.\n             Crocker, \"SMTP Service Extension for 8bit-MIMEtransport\",\n
    \            RFC 1652, July 1994.\n   [ADPCM]   Vaudreuil, G. and G. Parsons,
    \"Toll Quality Voice - 32\n             kbit/s Adaptive Differential Pulse Code
    Modulation (ADPCM)\n             MIME Sub-type Registration\", RFC 3802, June
    2004.\n   [AMIS-A]  Audio Messaging Interchange Specifications (AMIS) - Analog\n
    \            Protocol Version 1, Issue 2, February 1992.\n   [AMIS-D]  Audio Messaging
    Interchange Specifications (AMIS) - Digital\n             Protocol Version 1,
    Issue 3, August 1993.\n   [BINARY]  Vaudreuil, G., \"SMTP Service Extensions for
    Transmission of\n             Large and Binary MIME Messages\", RFC 3030, December
    2000.\n   [CODES]   Vaudreuil, G. \"Enhanced Mail System Status Codes\", RFC\n
    \            1893, January 1996.\n   [MIMEDIR] Dawson, F., Howes, T. and M. Smith,
    \"A MIME Content-Type\n             for Directory Information\", RFC 2425, September
    1998.\n   [DISP]    Troost, R. and S. Dorner, \"Communicating Presentation\n             Information
    in Internet Messages:  The Content-Disposition\n             Header\", RFC 2183,
    August 1997.\n   [DNS1]    Mockapetris, P., \"Domain names - implementation and\n
    \            specification\", RFC 1035, November 1987.\n   [DNS2]    Mockapetris,
    P., \"Domain names - concepts and facilities\",\n             RFC 1034, November
    1987.\n   [DRPT]    Moore, K., \"Simple Mail Transfer Protocol (SMTP) Service\n
    \            Extension for Delivery Status Notifications (DSNs)\", RFC\n             3461,
    January 2003.\n   [DSN]     Moore, K. and G. Vaudreuil, \"An Extensible Message
    Format\n             for Delivery Status Notifications\", RFC 3464, January 2003.\n
    \  [DUR]     Parsons, G. and G. Vaudreuil, \"Content Duration MIME Header\n             Definition\",
    RFC 3803, June 2004.\n   [E164]    CCITT Recommendation E.164 (1991), Telephone
    Network and\n             ISDN Operation, Numbering, Routing and  Mobile Service
    -\n             Numbering Plan for the ISDN Era.\n   [ESMTP]   Klensin, J., \"Simple
    Mail Transfer Protocol\", RFC 2821,\n             April 2001.\n   [G726]    CCITT
    Recommendation G.726 (1990), General Aspects of\n             Digital Transmission
    Systems, Terminal Equipment - 40, 32,\n             24,16 kbit/s Adaptive Differential
    Pulse Code Modulation\n             (ADPCM).\n   [HOSTREQ] Braden, R., \"Requirements
    for Internet Hosts -- Application\n             and Support\", STD 3, RFC 1123,
    October 1989.\n   [LANG]    Alvestrand, H., \"Tags for the Identification of Languages\",\n
    \            BCP 47, RFC 3066, January 2001.\n   [MDN]     Hansen, T., Ed. and
    G. Vaudreuil, Ed., \"Message Disposition\n             Notification\", RFC 3798,
    May 2004.\n   [MIB II]  Rose, M., \"Management Information Base for Network\n
    \            Management of TCP/IP-based internets:  MIB-II\", RFC 1213,\n             March
    1991.\n   [MIME1]   Freed, N. and N. Borenstein,  \"Multipurpose Internet Mail\n
    \            Extensions (MIME) Part One: Format of Internet Message\n             Bodies\",
    RFC 2045, November 1996.\n   [MIME2]   Freed, N.  and N. Borenstein,  \"Multipurpose
    Internet Mail\n             Extensions (MIME) Part Two: Media Types \", RFC 2046,\n
    \            November 1996.\n   [MIME3]   Moore, K., \"Multipurpose Internet Mail
    Extensions (MIME)\n             Part Three: Message Header Extensions for Non-ASCII
    Text \",\n             RFC 2047, November 1996.\n   [MIME4]   Freed, N., Klensin,
    J. and J. Postel,  \"Multipurpose\n             Internet Mail Extensions (MIME)
    Part Four: Registration\n             Procedures\", RFC 2048, November 1996.\n
    \  [MIME5]   Freed, N. and N. Borenstein,  \"Multipurpose Internet Mail\n             Extensions
    (MIME) Part Five: Conformance Criteria and\n             Examples \", RFC 2049,
    November 1996.\n   [PIPE]    Freed, N.and A. Cargille, \"SMTP Service Extension
    for\n             Command Pipelining\" STD 60, RFC 2920, September 2000.\n   [REPORT]
    \ Vaudreuil, G., \"The Multipart/Report Content Type for the\n             Reporting
    of Mail System Administrative Messages\", RFC\n             3462, January 2003.\n
    \  [REQ]     Bradner, S., \"Key words for use in RFCs to Indicate\n             Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC822]  Crocker, D., \"Standard
    for the Format of ARPA Internet Text\n             Messages\", STD 11, RFC 822,
    August 1982.\n   [SIZE]    Klensin, J., Freed, N. and K. Moore, \"SMTP Service\n
    \            Extensions for Message Size Declaration\" STD 10, RFC 1870,\n             November
    1995.\n   [STATUS]  Freed, N., \"SMTP Service Extension for Returning Enhanced\n
    \            Error Codes\", RFC 2034, October 1996.\n   [TIFF-F]  Parsons, G.
    and J. Rafferty, \"Tag Image File Format:\n             Application F\", RFC 2306,
    March 1998.\n   [TIFFREG] Parsons, G.,  Rafferty, J. and S. Zilles, \"Tag Image
    File\n             Format: image/tiff - MIME sub-type registration\", RFC 2302,\n
    \            March 1998.\n   [V-MSG]   Vaudreuil, G. and G. Parsons, \"VPIM Voice
    Message MIME\n             Sub-type Registration\", RFC 2423, September 1998.\n
    \  [VCARD]   Dawson, F. and T. Howes, \"vCard MIME Directory Profile\" RFC\n             2426,
    September 1998.\n   [VPIM1]   Vaudreuil, G., \"Voice Profile for Internet Mail\",
    RFC 1911,\n             February 1996.\n   [VPIM2]   Vaudreuil, G. and G. Parsons,
    \"Voice Profile for Internet\n             Mail, Version 2\", RFC 2421, September
    1998.\n   [X.400]   CCITT/ISO, \"CCITT Recommendations X.400/ ISO/IEC 10021-1,\n
    \            Message Handling: System and Service Overview\", December\n             1988.\n"
  title: 10.  Normative References
- contents:
  - "11.  Acknowledgments\n   The authors would like to offer a special thanks to
    the Electronic\n   Messaging Association (EMA), especially the members of the
    Voice\n   Messaging Committee, and the IETF VPIM Work Group, for their support\n
    \  of the VPIM specification and the efforts they have made to ensure\n   its
    success.\n"
  title: 11.  Acknowledgments
- contents:
  - "12.  Appendix A - VPIM Requirements Summary\n   The following table summarizes
    the profile of VPIM version 2 detailed\n   in this document.  Since in many cases
    it is not possible to simplify\n   the qualifications for supporting each feature
    this appendix is\n   informative. The reader is recommended to read the complete\n
    \  explanation of each feature in the referenced section.  The text in\n   the
    previous sections shall be deemed authoritative if any item in\n   this table
    is ambiguous.\n   The conformance table is separated into various columns:\n      Feature
    - name of protocol feature (note that the indenting\n                indicates
    a hierarchy of conformance, i.e., the\n                conformance of a lower
    feature is only relevant if there\n                is conformance to the higher
    feature)\n      Section - reference section in main text of this document\n      Area
    - conformance area to which each feature applies:\n           C - content\n           T
    - transport\n   Status - whether the feature is mandatory, optional, or prohibited.\n
    \  The key words used in this table are to be interpreted as described\n   in
    [REQ], though the following list gives a quick overview of the\n   different degrees
    of feature conformance:\n        Must         - mandatory\n        Should       -
    required in the absence of a compelling\n                       need to omit.\n
    \       May          - optional\n        Should not   - prohibited in the absence
    of a compelling\n                       need.\n        Must not     - prohibited\n
    \  Footnote - special comment about conformance for a particular feature\n                           VPIM
    version 2 Conformance\n                                                         |
    | | | |S| |\n                                              |          | | | |
    |H| |F\n                                              |          | | | | |O|M|o\n
    \                                             |          | | |S| |U|U|o\n                                              |
    \         | | |H| |L|S|t\n                                              |          |A|M|O|
    |D|T|n\n                                              |          |R|U|U|M| | |o\n
    \                                             |          |E|S|L|A|N|N|t\n                                              |
    \         |A|T|D|Y|O|O|t\n   FEATURE                                    |SECTION
    \  | | | | |T|T|e\n   -------------------------------------------|----------|-|-|-|-|-|-|-\n
    \                                             |          | | | | | | |\n   Message
    Addressing Formats:                |          | | | | | | |\n     Use DNS host
    names                       |4.1       |C|x| | | | |\n     Use only numbers in
    mailbox IDs          |4.1.1     |C| |x| | | |\n     Numbers in mailbox IDs follow
    E.164      |4.1.1     |C| |x| | | |\n     Use alpha-numeric mailbox IDs            |4.1.1
    \    |C| | |x| | |\n     Support of postmaster@domain             |4.1.2     |C|x|
    | | | |\n     Support of non-mail-user@domain          |4.1.2     |C| |x| | |
    |\n     Support of distribution lists            |4.1.3     |C| | |x| | |\n                                              |
    \         | | | | | | |\n   Message Header Fields:                     |          |
    | | | | | |\n     Sending outbound messages                |          | | | |
    | | |\n       From                                   |4.2.1     |C|x| | | | |\n
    \        Addition of text name                |4.2.1     |C| |x| | | |\n         Same
    value as MAIL FROM              |4.2.1     |C| |x| | | |\n       To                                     |4.2.2
    \    |C| |x| | | |1\n       cc                                     |4.2.3     |C|
    | |x| | |1\n       Date                                   |4.2.4     |C|x| | |
    | |\n       Sender                                 |4.2.5     |C| | |x| | |\n
    \      Return-Path                            |4.2.6     |C| | | | |x|\n       Message-ID
    \                            |4.2.7     |C|x| | | | |\n       Reply-To                               |4.2.8
    \    |C| | | |x| |\n       Received                               |4.2.9     |C|x|
    | | | |\n       MIME Version: 1.0 (Voice 2.0)          |4.2.10    |C| |x| | |
    |\n       Content-Type                           |4.2.11    |C|x| | | | |\n       Content-Transfer-Encoding
    \             |4.2.12    |C|x| | | | |\n       Sensitivity                            |4.2.13
    \   |C| | |x| | |\n       Importance                             |4.2.14    |C|
    | |x| | |\n       Subject                                |4.2.15    |C| |x| |
    | |\n       Disposition-notification-to            |4.7       |C| |x| | | |\n
    \      Other Headers                          |4.2       |C| | |x| | |\n                                              |
    \         | | | | | | |\n                                              |          |
    | | | |H| |F\n                                              |          | | | |
    |O|M|o\n                                              |          | | |S| |U|U|o\n
    \                                             |          | | |H| |L|S|t\n                                              |
    \         |A|M|O| |D|T|n\n                                              |          |R|U|U|M|
    | |o\n                                              |          |E|S|L|A|N|N|t\n
    \                                             |          |A|T|D|Y|O|O|t\n   FEATURE
    \                                   |SECTION   | | | | |T|T|e\n   -------------------------------------------|----------|-|-|-|-|-|-|-\n
    \    Receiving inbound messages               |          | | | | | | |\n       From
    \                                  |4.2.1     |C|x| | | | |\n         Present
    text personal name           |4.2.1     |C| | |x| | |\n       To                                     |4.2.2
    \    |C|x| | | | |\n       cc                                     |4.2.3     |C|
    | |x| | |\n       Date                                   |4.2.4     |C|x| | |
    | |\n         Conversion of Date to local time     |4.2.4     |C| |x| | | |\n
    \      Sender                                 |4.2.5     |C| | |x| | |\n       Return-Path
    \                           |4.2.6     |C| |x| | | |\n       Message-ID                             |4.2.7
    \    |C| | |x| | |\n         MDN requested                        |4.2.7     |C|x|
    | | | |\n       Reply-To                               |4.2.8     |C| | |x| |
    |\n       Received                               |4.2.9     |C| | |x| | |\n       MIME
    Version: 1.0 (Voice 2.0)          |4.2.10    |C| |x| | | |\n       Content Type
    \                          |4.2.11    |C|x| | | | |\n       Content-Transfer-Encoding
    \             |4.2.12    |C|x| | | | |\n       Sensitivity                            |4.2.13
    \   |C|x| | | | |2\n       Importance                             |4.2.14    |C|
    | |x| | |\n       Subject                                |4.2.15    |C| | |x|
    | |\n       Disposition-notification-to            |4.7       |C| |x| | | |\n
    \      Other Headers                          |4.2       |C|x| | | | |3\n                                              |
    \         | | | | | | |\n   Message Content Encoding:                  |          |
    | | | | | |\n     Sending outbound audio/fax contents      |          | | | |
    | | |\n       7BIT                                   |4.2.12    |C| | | | |x|\n
    \      8BIT                                   |4.2.12    |C| | | | |x|\n       Quoted
    Printable                       |4.2.12    |C| | | | |x|\n       Base64                                 |4.2.12
    \   |C|x| | | | |4\n       Binary                                 |4.2.12    |C|
    |x| | | |5\n     Receiving inbound message contents       |          | | | | |
    | |\n       7BIT                                   |4.2.12    |C|x| | | | |\n
    \      8BIT                                   |4.2.12    |C|x| | | | |\n       Quoted
    Printable                       |4.2.12    |C|x| | | | |\n       Base64                                 |4.2.12
    \   |C|x| | | | |\n       Binary                                 |4.2.12    |C|x|
    | | | |5\n                                              |          | | | | | |
    |\n                                                         | | | | |S| |\n                                              |
    \         | | | | |H| |F\n                                              |          |
    | | | |O|M|o\n                                              |          | | |S|
    |U|U|o\n                                              |          | | |H| |L|S|t\n
    \                                             |          |A|M|O| |D|T|n\n                                              |
    \         |R|U|U|M| | |o\n                                              |          |E|S|L|A|N|N|t\n
    \                                             |          |A|T|D|Y|O|O|t\n   FEATURE
    \                                   |SECTION   | | | | |T|T|e\n   -------------------------------------------|----------|-|-|-|-|-|-|-\n
    \  Message Content Types:                     |          | | | | | | |\n     Sending
    outbound messages                |          | | | | | | |\n       Multipart/Voice-Message
    \               |4.4.1     |C|x| | | | |\n         Message/RFC822                       |4.4.2
    \    |C| |x| | | |\n         Audio/32KADPCM                       |4.4.3     |C|x|
    | | | |\n           Content-Description                |4.3.1     |C| | |x| |
    |\n           Content-Disposition                |4.3.2     |C|x| | | | |\n           Content-Duration
    \                  |4.3.3     |C| | |x| | |\n           Content-Language                   |4.3.4
    \    |C| | |x| | |\n         Image/TIFF; application=faxbw        |4.4.4     |C|x|
    | | | |7\n         Text/Directory                       |4.5.2     |C| | | |x|
    |9\n         Text/plain                           |4.5.4     |C| | | |x| |\n         Audio/*
    or Image/* (other encodings) |4.5.3     |C| | | |x| |\n         Other contents
    \                      |4.5       |C| | | | |x|\n       Multipart/Mixed                        |4.5.1
    \    |C| | |x| | |\n       Text/plain                             |4.5.4     |C|
    | |x| | |\n       Multipart/Report                       |4.6, 4.7  |C|x| | |
    | |\n          human-readable part is voice        |4.6, 4.7  |C| |x| | | |\n
    \         human-readable part is text         |4.6, 4.7  |C| | |x| | |\n          Message/Delivery-Status
    \            |4.6       |C|x| | | | |\n          Message/Disposition-Notification
    \   |4.7       |C| |x| | | |\n       Other contents                         |4.5
    \      |C| | | |x| |6\n     Receiving in inbound messages            |          |
    | | | | | |\n       Multipart/Voice-Message                |4.4.1     |C|x| |
    | | |\n         Message/RFC822                       |4.4.2     |C|x| | | | |\n
    \        Audio/32KADPCM                       |4.4.3     |C|x| | | | |\n           Content-Description
    \               |4.3.1     |C| | |x| | |\n           Content-Disposition                |4.3.2
    \    |C| |x| | | |\n           Content-Duration                   |4.3.3     |C|
    | |x| | |\n           Content-Language                   |4.3.4     |C| | |x|
    | |\n         Image/TIFF; application=faxbw        |4.4.4     |C| |x| | | |8\n
    \        Text/Directory                       |4.5.2     |C|x| | | | |9\n         Text/plain
    \                          |4.5.4     |C| | |x| | |\n         Audio/* or Image/*
    (other encodings) |4.5.3     |C| | |x| | |\n         Other contents                       |4.5
    \      |C| | |x| | |\n       Multipart/Mixed                        |4.5.1     |C|
    | |x| | |\n                                             |           | | | | |S|
    |\n                                             |           | | | | |H| |F\n                                             |
    \          | | | | |O|M|o\n                                             |           |
    | |S| |U|U|o\n                                             |           | | |H|
    |L|S|t\n                                             |           |A|M|O| |D|T|n\n
    \                                            |           |R|U|U|M| | |o\n                                             |
    \          |E|S|L|A|N|N|t\n                                             |           |A|T|D|Y|O|O|t\n
    \  FEATURE                                   |SECTION    | | | | |T|T|e\n   ------------------------------------------|-----------|-|-|-|-|-|-|-\n
    \                                            |           | | | | | | |\n      Text/plain
    \                            |4.5.4      |C|x| | | | |\n      Multipart/Report
    \                      |4.6, 4.7   |C|x| | | | |\n        human-readable part
    is voice         |4.6, 4.7   |C|x| | | | |\n        human-readable part is text
    \         |4.6, 4.7   |C|x| | | | |\n        Message/Delivery-Status              |4.6
    \       |C|x| | | | |\n        Message/Disposition-Notification     |4.7        |C|
    |x| | | |\n      Other contents                         |4.5        |C| | |x|
    | |6\n                                             |           | | | | | | |\n
    \    Forwarded Messages                      |           | | | | | | |\n       use
    Message/RFC822 construct          |4.8        |C| |x| | | |\n       simulate headers
    if none available    |4.8        |C| |x| | | |\n                                             |
    \          | | | | | | |\n     Reply Messages                          |4.9        |C|x|
    | | | |\n       send to Reply-To, else From address   |4.2.8      |C| | |x| |
    |\n       send to non-mail-user                 |4.9        |C| | | |x| |\n                                             |
    \          | | | | | | |\n     Notifications                           |           |
    | | | | | |\n       use Multipart/Report format           |4.6, 4.7   |C|x| |
    | | |\n       always send error on non-delivery     |4.6        |C|x| | | | |\n
    \      send error messages to return-path    |4.2.6      |C|x| | | | |\n                                             |
    \          | | | | | | |\n   Message Transport Protocol:               |           |
    | | | | | |\n     Base ESMTP Commands                     |           | | | |
    | | |\n       HELO                                  |5.1        |T|x| | | | |\n
    \      MAIL FROM                             |5.1        |T|x| | | | |\n       RCPT
    TO                               |5.1        |T|x| | | | |\n       DATA                                  |5.1
    \       |T|x| | | | |\n       TURN                                  |5.1        |T|
    | | | |x|\n       QUIT                                  |5.1        |T|x| | |
    | |\n       RSET                                  |5.1        |T|x| | | | |\n
    \      VRFY                                  |5.1        |T| | |x| | |\n       EHLO
    \                                 |5.1        |T|x| | | | |\n       BDAT                                  |5.1
    \       |T| | |x| | |5\n                                                         |
    | | | |S| |\n                                              |          | | | |
    |H| |F\n                                              |          | | | | |O|M|o\n
    \                                             |          | | |S| |U|U|o\n                                              |
    \         | | |H| |L|S|t\n                                              |          |A|M|O|
    |D|T|n\n                                              |          |R|U|U|M| | |o\n
    \                                             |          |E|S|L|A|N|N|t\n                                              |
    \         |A|T|D|Y|O|O|t\n   FEATURE                                    |SECTION
    \  | | | | |T|T|e\n   -------------------------------------------|----------|-|-|-|-|-|-|-\n
    \                                             |          | | | | | | |\n     ESMTP
    Keywords & Parameters              |          | | | | | | |\n       DSN                                    |5.2.1
    \    |T|x| | | | |\n         NOTIFY                               |5.2.1     |T|x|
    | | | |\n         RET                                  |5.2.1     |T| |x| | |
    |\n         ENVID                                |5.2.1     |T| | |x| | |\n         ORCPT
    \                               |5.2.1     |T| | |x| | |\n       SIZE                                   |5.2.2
    \    |T|x| | | | |\n       ENHANCEDSTATUSCODES                    |5.2.3     |T|
    |x| | | |\n       PIPELINING                             |5.2.4     |T| |x| |
    | |\n       CHUNKING                               |5.2.5     |T| | |x| | |\n
    \      BINARYMIME                             |5.2.6     |T| | |x| | |\n                                              |
    \         | | | | | | |\n     ESMTP-SMTP Downgrading                   |          |
    | | | | | |\n       send delivery report upon downgrade    |5.3       |T|x| |
    | | |\n                                              |          | | | | | | |\n
    \  Directory Address Resolution               |          | | | | | | |\n     provide
    facility to resolve addresses    |6         |C| |x| | | |\n     use headers to
    populate local directory  |6         |C| | |x| | |\n                                              |
    \         | | | | | | |\n   Management Protocols:                      |          |
    | | | | | |\n     Network management                       |7.1       |T| | |x|
    | |\n   -------------------------------------------|----------|-|-|-|-|-|-|-\n
    \  Footnotes:\n   1.  SHOULD leave blank if all recipients are not known or resolvable.\n
    \  2.  If a sensitive message is received by a system that does not\n       support
    \ sensitivity, then it MUST be returned to the originator\n       with an  appropriate
    error notification.  Also, a received\n       sensitive message MUST NOT be forwarded
    to anyone.\n   3.  If the additional header fields are not understood they MAY\n
    \      be ignored.\n   4.  When binary transport is not available.\n   5.  When
    binary transport is available.\n   6.  Other un-profiled contents MUST only be
    sent by bilateral\n       agreement.\n   7.  If fax is supported.\n   8.  If the
    fax content cannot be presented it MAY be dropped.\n   9.  Handling of a vCard
    in text/directory is no longer defined.\n"
  title: 12.  Appendix A - VPIM Requirements Summary
- contents:
  - "13.  Appendix B - Example Voice Messages\n   The following message is a full-featured
    message addressed to two\n   recipients.  The message includes the sender's spoken
    name, spoken\n   subject and a short speech segment.  The message is marked as\n
    \  important and private.\n"
  - 'To: +19725551212@vm1.mycompany.com

    '
  - 'To: +16135551234@VM1.mycompany.com

    '
  - 'From: "Parsons, Glenn" <12145551234@VM2.mycompany.com>

    '
  - 'Date: Mon, 26 Aug 93 10:20:20 -0700 (CDT)

    '
  - 'MIME-Version: 1.0  (Voice 2.0)

    '
  - "Content-type: Multipart/Voice-Message; Version=2.0;\n     Boundary=\"MessageBoundary\"\n"
  - 'Content-Transfer-Encoding: 7bit

    '
  - 'Message-ID: 123456789@VM2.mycompany.com

    '
  - 'Sensitivity: Private

    '
  - 'Importance: High

    '
  - '--MessageBoundary

    '
  - 'Content-type: Audio/32KADPCM

    '
  - 'Content-Transfer-Encoding: Base64

    '
  - 'Content-Disposition: inline; voice=Originator-Spoken-Name

    '
  - 'Content-Language: en-US

    '
  - 'Content-ID: part1@VM2-4321

    '
  - 'glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd

    '
  - '(This is a sample of the base-64 Spoken Name data)

    '
  - 'fgdhgddlkgpokpeowrit09==

    '
  - '--MessageBoundary

    '
  - 'Content-type: Audio/32KADPCM

    '
  - 'Content-Transfer-Encoding: Base64

    '
  - 'Content-Disposition: inline; voice=Spoken-Subject

    '
  - 'Content-Language: en-US

    '
  - 'Content-ID: part2@VM2-4321

    '
  - 'glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd

    '
  - '(This is a sample of the base-64 Spoken Subject data)

    '
  - 'fgdhgddlkgpokpeowrit09==

    '
  - '--MessageBoundary

    '
  - 'Content-type: Audio/32KADPCM

    '
  - 'Content-Transfer-Encoding: Base64

    '
  - 'Content-Description: Brand X Voice Message

    '
  - 'Content-Disposition: inline; voice=Voice-Message; filename=msg1.726

    '
  - 'Content-Duration: 25

    '
  - 'iIiIiIjMzN3czdze3s7d7fwfHhcvESJVe/4yEhLz8/FOQjVFRERCESL/zqrq

    '
  - '(This is a sample of the base64 message data) zb8tFdLTQt1PXj

    '
  - 'u7wjOyRhws+krdns7Rju0t4tLF7cE0K0MxOTOnRW/Pn30c8uHi9==

    '
  - '--MessageBoundary- -                         -                         -

    '
  - 'The following message is a forwarded single segment voice.  Both the

    '
  - 'forwarded message and the forwarding message contain the senders spoken

    '
  - "names.\n      To: +12145551212@vm1.mycompany.com\n      From: \"Vaudreuil, Greg\"
    <+19725552345@VM2.mycompany.com>\n      Date: Mon, 26 Aug 93 10:20:20 -0700 (CDT)\n
    \     MIME-Version: 1.0  (Voice 2.0)\n      Content-type: Multipart/Voice-Message;
    Version=2.0;\n        Boundary=\"MessageBoundary\"\n      Content-Transfer-Encoding:
    7bit\n      Message-ID: ABCD-123456789@VM2.mycompany.com\n      --MessageBoundary\n
    \     Content-type: Audio/32KADPCM\n      Content-Transfer-Encoding: Base64\n
    \     Content-Disposition: inline; voice=Originator-Spoken-Name\n      Content-Language:
    en-US\n      Content-ID: part3@VM2-4321\n      glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd\n
    \     (This is a sample of the base-64 Spoken Name data)\n      fgdhgd dlkgpokpeowrit09==\n
    \     --MessageBoundary\n      Content-type: Audio/32KADPCM\n      Content-Description:
    Forwarded Message Annotation\n      Content-Disposition: inline; voice=Voice-Message\n
    \     Content-Transfer-Encoding: Base64\n      glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd\n
    \     (This is the voiced introductory remarks encoded in base64)\n      jrgoij3o45itj09fiuvdkjgWlakgQ93ijkpokfpgokQ90gQ5tkjpokfgW\n
    \     dlkgpokpeowrit09==\n      --MessageBoundary\n      Content-type: Message/RFC822\n
    \     Content-Transfer-Encoding: 7bit\n      To: +19725552345@VM2.mycompany.com\n
    \     From: \"Parsons, Glenn, W.\" <+16135551234@VM1.mycompany.com>\n      Date:
    Mon, 26 Aug 93 8:23:10 -0500 (EST)\n      Content-type: Multipart/Voice-Message;
    Version=2.0;\n        Boundary=\"MessageBoundary2\"\n      Content-Transfer-Encoding:
    7bit\n      MIME-Version: 1.0  (Voice 2.0)\n      --MessageBoundary2\n      Content-type:
    Audio/32KADPCM\n      Content-Transfer-Encoding: Base64\n      Content-Disposition:
    inline; voice=Originator-Spoken-Name\n      Content-Language: en-US\n      Content-ID:
    part6@VM2-4321\n      glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd\n
    \     (This is a sample of the base-64 Spoken Name data) fgdhgd\n       dlkgpokpeowrit09==\n
    \     --MessageBoundary2\n      Content-type: Audio/32KADPCM\n      Content-Disposition:
    inline; voice=Voice-Message\n      Content-Transfer-Encoding: Base64\n      glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadasssdasddasdasd\n
    \     (This is the original message audio data) fgwersdfmniwrjj\n      jrgoij3o45itj09fiuvdkjgWlakgQ93ijkpokfpgokQ90gQ5tkjpokfgW\n
    \     dlkgpokpeowrit09==\n      --MessageBoundary2--\n      --MessageBoundary--\n
    \  The following example is for a DSN sent to the sender of a message by\n   a
    VPIM gateway at VM1.company.com for a mailbox which does not exist.\n      Date:
    Thu, 7 Jul 1994 17:16:05 -0400\n      From: Mail Delivery Subsystem <MAILER-DAEMON@vm.company.com>\n
    \     Message-ID: <199407072116.RAA14128@vm1.company.com>\n      Subject: Returned
    voice message\n      To: 2175552345@VM2.mycompany.com\n      MIME-Version: 1.0\n
    \     Content-Type: multipart/report; report-type=delivery-status;\n        boundary=\"RAA14128.773615765/VM1.COMPANY.COM\"\n
    \     --RAA14128.773615765/VM1.COMPANY.COM\n      Content-type: Audio/32KADPCM\n
    \     Content-Description: Spoken Delivery Status Notification\n      Content-Disposition:
    inline; voice= Voice-Message-Notification\n      Content-Transfer-Encoding: Base64\n
    \     glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadadffsssddasdasd\n      (This is
    a voiced description of the error in base64)\n      jrgoij3o45itj09fiuvdkjgWlakgQ93ijkpokfpgokQ90gdffkjpokfgW\n
    \     dlkgpokpeowrit09==\n      --RAA14128.773615765/VM1.COMPANY.COM\n      Content-type:
    Message/Delivery-Status\n      Reporting-MTA: dns; vm1.company.com\n      Original-Recipient:
    rfc822; 2145551234@VM1.mycompany.com\n      Final-Recipient: rfc822; 2145551234@VM1.mycompany.com\n
    \     Action: failed\n      Status: 5.1.1 (User does not exist)\n      Diagnostic-Code:
    smtp; 550 Mailbox not found\n      Last-Attempt-Date: Thu, 7 Jul 1994 17:15:49
    -0400\n      --RAA14128.773615765/VM1.COMPANY.COM\n      content-type: Message/RFC822\n
    \     [original VPIM message goes here]\n      --RAA14128.773615765/VM1.COMPANY.COM--\n
    \  The following example is for an MDN sent to the original sender for a\n   message
    that has been played.  This delivered VPIM message was\n   received by a corporate
    gateway and relayed to a unified mailbox.\n"
  - 'Date: Thu, 7 Jul 1994 17:16:05 -0400

    '
  - 'From: "Greg Vaudreuil" <22722@vm.company.com>

    '
  - 'Message-ID: <199407072116.RAA14128@exchange.company.com>

    '
  - 'Subject: Voice message played

    '
  - 'To: 2175552345@VM2.mycompany.com

    '
  - 'MIME-Version: 1.0

    '
  - "Content-Type: multipart/report;\n        Report-type=disposition-notification;\n
    \       Boundary=\"RAA14128.773615765/EXCHANGE.COMPANY.COM\"\n"
  - '--RAA14128.773615765/EXCHANGE.COMPANY.COM

    '
  - 'Content-type: Audio/32KADPCM

    '
  - 'Content-Description: Spoken Disposition Notification

    '
  - 'Content-Disposition: inline; voice= Voice-Message-Notification

    '
  - 'Content-Transfer-Encoding: Base64

    '
  - 'glslfdslsertiflkTfpgkTportrpkTpfgTpoiTpdadadffsssddasdasd

    '
  - '(Voiced description of the disposition action in base64)

    '
  - 'jrgoij3o45itj09fiuvdkjgWlakgQ93ijkpokfpgokQ90gdffkjpokfgW

    '
  - 'dlkgpokpeowrit09==

    '
  - '--RAA14128.773615765/EXCHANGE.COMPANY.COM

    '
  - 'Content-type: Message/Disposition-Notification

    '
  - 'Reporting-UA: gregs-laptop.dallas.company.com (Unified FooMail 3.0)

    '
  - 'Original-Recipient: rfc822;22722@vm.company.com

    '
  - 'Final-Recipient: rfc822;Greg.Vaudreuil@foomail.company.com

    '
  - 'Original-Message-ID: <199509192301.12345@vm2.mycompany.com>

    '
  - 'Disposition: manual-action/MDN-sent-automatically; displayed

    '
  - '--RAA14128.773615765/EXCHANGE.COMPANY.COM

    '
  - 'Content-type: Message/RFC822

    '
  - '[original VPIM message goes here]

    '
  - '--RAA14128.773615765/EXCHANGE.COMPANY.COM--

    '
  title: 13.  Appendix B - Example Voice Messages
- contents:
  - "14.  Appendix C - Example Error Voice Processing Error Codes\n   The following
    common voice processing errors and their corresponding\n   status codes are given
    as examples.  The text after the error codes\n   is intended only for reference
    to describe the error code.\n   Implementations should provide implementation-specific
    informative\n   comments after the error code rather than the text below.\n      Error
    condition                 RFC 1893 Error codes\n      -----------------------------
    \  --------------------------------\n      Analog delivery failed          4.4.1
    Persistent connection error\n      because remote system is busy         - busy\n
    \     Analog delivery failed          4.4.1 Persistent protocol error\n      because
    remote system is              - no answer from host\n      ring-no-answer\n      Remote
    system did not answer    5.5.5 Permanent protocol error\n      AMIS-Analog handshake
    (\"D\" in         - wrong version\n      response to \"C\" at connect\n      time)\n
    \     Mailbox does not exist          5.1.1 Permanent mailbox error\n                                            -
    does not exist\n      Mailbox full or over quota      4.2.2 Persistent mailbox
    error\n                                            - full\n      Disk full                       4.3.1
    Persistent system error\n                                            - full\n
    \     Command out of sequence         5.5.1 Permanent protocol error\n                                            -
    invalid command\n      Frame Error                     5.5.2 Permanent protocol
    error\n                                                       - syntax error\n
    \     Mailbox does not support FAX    5.6.1 Permanent media error\n                                            -
    not supported\n      Mailbox does not support TEXT   5.6.1 Permanent media error\n
    \                                           - not supported\n      Sender is not
    authorized        5.7.1 Permanent security error\n                                            -
    sender not authorized\n      Message marked private, but     5.3.3 Permanent system
    error\n      system is not private capable         - not feature capable\n"
  title: 14.  Appendix C - Example Error Voice Processing Error Codes
- contents:
  - "15.  Appendix D - Example Voice Processing Disposition Types\n   The following
    common voice processing disposition conditions and\n   their corresponding MDN
    Disposition (which contains the disposition\n   mode, type and modifier, if applicable)
    are given as examples.\n   Implementers should refer to [MDN] for a full description
    of the\n   format of message disposition notifications.\n"
  - 'Notification event               MDN Disposition mode, type & modifier

    '
  - '------------------------------   ------------------------------------

    '
  - 'Message played by recipient,    manual-action/MDN-sent-automatically;

    '
  - 'receipt automatically returned  displayed

    '
  - 'Message deleted from mailbox    manual-action/MDN-sent-automatically;

    '
  - 'by user without listening       deleted

    '
  - 'Message cleared when mailbox    manual-action/MDN-sent-automatically;

    '
  - 'deleted by admin                deleted/mailbox-terminated

    '
  - 'Message automatically deleted   automatic-action/

    '
  - 'when older than administrator   MDN-sent-automatically; deleted/

    '
  - 'set threshold                   expired

    '
  - 'Message processed, however      manual-action/MDN-sent-automatically;

    '
  - 'audio encoding unknown -        processed/error

    '
  - 'unable to play to user          Error: unknown audio encoding

    '
  title: 15.  Appendix D - Example Voice Processing Disposition Types
- contents:
  - "16.  Appendix E - IANA Registrations\n   There are no changes to the registration
    per [DISP] of the voice\n   content disposition parameter defined in the earlier
    VPIM V2\n   document, RFC 2421.  There are no changes to the registration per\n
    \  [MIME4] of the Multipart/voice-message content type defines in the\n   earlier
    VPIM v2 document, RFC 2423.\n   Both are presented here for information.\n"
  - contents:
    - "16.1.  Voice Content-Disposition Parameter Definition\n   To: IANA@IANA.ORG\n
      \  Subject: Registration of new Content-Disposition parameter\n   Content-Disposition
      parameter name: voice\n   Allowable values for this parameter:\n         Voice-Message
      - the primary voice message,\n         Voice-Message-Notification - a spoken
      delivery notification\n           or spoken disposition notification,\n         Originator-Spoken-Name
      - the spoken name of the originator,\n         Recipient-Spoken-Name - the spoken
      name of the recipient if\n           available to the originator and present
      if there is ONLY one\n           recipient,\n         Spoken-Subject- the spoken
      subject of the message, typically\n           spoken by the originator\n   Description:\n
      \  In order to distinguish between the various types of audio contents\n   in
      a VPIM voice message a new disposition parameter \"voice\" is\n   defined with
      the preceding values to be used as appropriate.  Note\n   that there SHOULD
      only be one instance of each of these types of\n   audio contents per message
      level.  Additional instances of a given\n   type (i.e., parameter value) may
      occur within an attached forwarded\n   voice message.\n"
    title: 16.1.  Voice Content-Disposition Parameter Definition
  - contents:
    - "16.2.  Multipart/Voice-Message MIME Media Type Definition\n   To: ietf-types@iana.org\n
      \  Subject: Registration of MIME media type\n            Multipart/voice-message\n
      \  MIME media type name: multipart\n   MIME subtype name: voice-message\n   Required
      parameters: boundary, version\n      The use of boundary is defined in [MIME2]\n
      \     The version parameter that contains the value \"2.0\" if\n      enclosed
      content conforms to [VPIM2R2].  The absence of this\n      parameter indicates
      conformance to the previous version\n      defined in RFC 1911 [VPIM1].\n   Optional
      parameters: none\n   Encoding considerations: 7bit, 8bit or Binary\n   Security
      considerations:\n      This definition identifies the content as being a voice\n
      \     message.  In some environments (though likely not the\n      majority),
      the loss of the anonymity of the content may be a\n      security issue.\n   Interoperability
      considerations:\n      Systems developed to conform with [VPIM1] may not conform
      to\n      this registration.  Specifically, the required version will\n      likely
      be absent, in this case the recipient system should\n      still be able to
      accept the message and will be able to\n      handle the content.  The VPIM
      v1 positional identification,\n      however, would likely be lost.\n   Published
      specification:\n      This document\n      Applications that use this media
      type:\n      Primarily voice messaging\n      Additional information:\n      Magic
      number(s): none\n      File extension(s): .VPM\n      Macintosh File Type Code(s):
      VPIM\n   Person & email address to contact for further information:\n      Glenn
      W. Parsons\n      gparsons@nortelnetworks.com\n      Gregory M. Vaudreuil\n
      \     gregv@ieee.org\n   Intended usage: COMMON\n   Author/Change controller:\n
      \     Glenn W. Parsons & Gregory M. Vaudreuil\n"
    title: 16.2.  Multipart/Voice-Message MIME Media Type Definition
  title: 16.  Appendix E - IANA Registrations
- contents:
  - "17.  Appendix F - Change History: RFC 2421 (VPIM V2) to this Document\n   The
    updated profile in this document is based on the implementation\n   and operational
    deployment experience of several vendors.  The\n   changes are categorized as
    general, content, transport and\n   conformance.  They are summarized below:\n
    \  1. General\n      - Various and substantial editorial updates to improve\n
    \       readability.\n      - Separated send rules from receive rules to aid clarity.\n
    \     - Clarified the behavior upon reception of unrecognized content\n        types
    expected with the interworking between voice and unified\n        messaging systems.
    \ (E.g., Unsupported non-audio contents should\n        be discarded to deliver
    the audio message.)\n      - Reworked the sensitivity requirements to align them
    with X.400.\n        Eliminated dependencies upon the MIXER documents.\n      -
    Reorganized the content-type descriptions for clarity\n   2. Content\n      -
    Changed handling of received lines by a gateway to SHOULD NOT\n        delete
    in a gateway.  In gateways to systems such as AMIS, it is\n        not possible
    to preserve this information.  It is intended that\n        such systems be able
    to claim conformance.\n      - Eliminated the vCard as a supported VPIM V2 content
    type.\n      - Merged in text from RFC 2423 (Multipart/voice-message)\n   3. Transport\n
    \     - None\n   4. Conformance\n      - Aligned the table of Appendix A to the
    requirements in the text.\n"
  title: '17.  Appendix F - Change History: RFC 2421 (VPIM V2) to this Document'
- contents:
  - "18.  Authors' Addresses\n   Gregory M. Vaudreuil\n   Lucent Technologies\n   7291
    Williamson Rd\n   Dallas, TX  75214\n   United States\n   EMail: gregv@ieee.org\n
    \  Glenn W. Parsons\n   Nortel Networks\n   P.O. Box 3511, Station C\n   Ottawa,
    ON  K1Y 4H7\n   Canada\n   Phone: +1-613-763-7582\n   Fax: +1-613-763-2697\n   EMail:
    GParsons@NortelNetworks.com\n"
  title: 18.  Authors' Addresses
- contents:
  - "19.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).
    \ This document is subject\n   to the rights, licenses and restrictions contained
    in BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: 19.  Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
