- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        S. Leonard
  contents:
  - "Independent Submission                                        S. Leonard\n  \
    \           The PKCS #8 EncryptedPrivateKeyInfo Media Type\n"
- title: Abstract
  contents:
  - "Abstract\n   This document registers the application/pkcs8-encrypted media type\n\
    \   for the EncryptedPrivateKeyInfo type of PKCS #8.  An instance of this\n  \
    \ media type carries a single encrypted private key, BER-encoded as a\n   single\
    \ EncryptedPrivateKeyInfo value.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8351.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Registration Application  . . . . . . . . . . . . . .\
    \ . . . .   2\n   3.  IANA Considerations . . . . . . . . . . . . . . . . . .\
    \ . . .   6\n   4.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .   6\n   5.  Normative References  . . . . . . . . . . . . . . . . . . .\
    \ .   6\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .\
    \   7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The private key is encrypted with an encryption algorithm,\
    \ which\n   could be a password-based encryption scheme as that term is used in\n\
    \   PKCS #5: Password-Based Cryptography Specification Version 2.1 as\n   published\
    \ in [RFC2898] and updated by [RFC8018].  This document\n   registers the application/pkcs8-encrypted\
    \ media type for the\n   EncryptedPrivateKeyInfo type of PKCS #8 (as originally\
    \ described in\n   [RFC5208], which was obsoleted by [RFC5958]).  An instance\
    \ of this\n   media type carries a single encrypted private key [RFC5958] BER-\n\
    \   encoded as a single EncryptedPrivateKeyInfo value.\n"
- title: 2.  Registration Application
  contents:
  - "2.  Registration Application\n   Type name: application\n   Subtype name: pkcs8-encrypted\n\
    \   Required parameters: None.\n   Optional parameters:\n      password-mapping:\
    \  The private key is encrypted with an encryption\n        algorithm, which could\
    \ be a password-based encryption scheme as\n        that term is used in PKCS\
    \ #5 ([RFC2898] and [RFC8018]).  Such\n        algorithms take a password as input.\
    \  A \"password\" is a secret\n        text value (see Section 3 of [RFC2898]\
    \ and [RFC8018]), but for\n        algorithmic purposes the term \"password\"\
    \ refers to an octet\n        string (see Section 2 of [RFC2898] and [RFC8018]).\
    \  Therefore,\n        there must be some mapping between the text value (which\
    \ might\n        be user input) and the octet string.  Section 3 of [RFC2898]\n\
    \        (which was replaced by [RFC8018]) recommends \"that applications\n  \
    \      follow some common text encoding rules\"; it then offers, but\n       \
    \ does not recommend, ASCII and UTF-8.\n        While many modern applications\
    \ support Unicode and Unicode-based\n        encodings such as UTF-8 and UTF-16,\
    \ interchange is still needed\n        with private key artifacts that are encrypted\
    \ with passwords in\n        other encodings.  Therefore, this parameter specifies\
    \ the\n        charset (see Section 1.3 of [RFC2978]) that a recipient should\n\
    \        attempt first, in \"reverse\", when mapping from a sequence of\n    \
    \    characters to an octet string.  This parameter is not\n        cryptographically\
    \ protected, so recipients cannot rely on it as\n        the exclusive mapping\
    \ possibility.\n        This parameter has similar semantics to the charset parameter\n\
    \        from text/plain, except that it only applies to the user's input\n  \
    \      (text value) of a password.  There is no default value.\n        The following\
    \ special values, which all begin with \"*\" to\n        distinguish them from\
    \ registered charsets, are defined:\n        *pkcs12      UTF-16LE with U+0000\
    \ NULL terminator: PKCS #12\n                     style, see [RFC7292].\n    \
    \    *precis      Preparation, Enforcement, and Comparison of\n              \
    \       Internationalized Strings (PRECIS) password\n                     profile,\
    \ i.e., OpaqueString from Section 4 of\n                     [RFC7613], which\
    \ was obsoleted by [RFC8265]: always\n                     UTF-8 in Normalization\
    \ Form C (NFC).\n        *precis-XXX  Any profile from the IANA \"PRECIS Profiles\"\
    \n                     registry where \"XXX\" is replaced by the profile\n   \
    \                  name as shown in the registry.\n        *hex         hexadecimal\
    \ input: the input is mapped to 0-9, A-F,\n                     and then converted\
    \ directly to octets.  If there\n                     are an odd number of hex\
    \ digits, either the final\n                     digit 0 is appended or an error\
    \ condition is\n                     raised.  Compare with Annex M.4 of\n    \
    \                 [IEEE.802.11-2012].\n        *dtmf        The characters \"\
    0\"-\"9\", \"A\"-\"D\", \"*\", and \"#\",\n                     which map to their\
    \ corresponding ASCII codes.\n                     \"A\"-\"D\" map to the uppercase\
    \ range 0x41 - 0x44.\n                     (This is to support restricted-input\
    \ devices, i.e.,\n                     telephones and telephone-like equipment.)\
    \  User\n                     input outside of these values is either ignored\
    \ or\n                     an error condition is raised.\n        Otherwise, the\
    \ value of this parameter is a charset, from the\n        IANA \"Character Sets\"\
    \ registry [CHARREG].\n        This parameter is case insensitive.\n   Encoding\
    \ considerations: Binary.\n   Security considerations:\n      Carries a cryptographic\
    \ private key.  See Section 6 of [RFC5958].\n      EncryptedPrivateKeyInfo PKCS\
    \ #8 data contains exactly one private\n      key.  Poor password choices, weak\
    \ algorithms, or improper\n      parameter selections (e.g., insufficient salting\
    \ rounds) will make\n      the confidential payloads much easier to compromise.\n\
    \   Interoperability considerations:\n      PKCS #8 is a widely recognized format\
    \ for private key information\n      on all modern cryptographic stacks.  The\
    \ contents are exactly one\n      private key (with optional key attributes),\
    \ so there is no\n      possibility for hidden \"Easter eggs\" in the payload\
    \ such as\n      unexpected certificates or miscellaneous secrets.\n      The\
    \ encrypted variation in this registration,\n      EncryptedPrivateKeyInfo (Section\
    \ 3, \"Encrypted Private Key Info\",\n      of [RFC5958], and Section 6 of PKCS\
    \ #8 as originally described in\n      [RFC5208], which was obsoleted by [RFC5958]),\
    \ is less widely used\n      for exchange than PKCS #12, but it is much simpler\
    \ to implement.\n      Actually, PKCS #12 incorporates the PKCS #8 types, so a\
    \ PKCS #12\n      processor ought to be able to process PKCS #8 data by embedding\n\
    \      the PKCS #8 data in PKCS #12 \"scaffolding\".\n      The password-mapping\
    \ parameter aids in interoperability when the\n      creator (who encrypted the\
    \ keying material) and the user (who is\n      attempting to decrypt the keying\
    \ material) are not operating in\n      the same character-encoding environment.\
    \  An anticipated scenario\n      is that the creator may have created the keying\
    \ material with a\n      password in a Shift-JIS environment a long time ago,\
    \ while the\n      user is in a UTF-8 environment.  There are potentially many\n\
    \      Unicode sequences that code for the same abstract character, such\n   \
    \   as precomposed and decomposed forms; yet, such an abstract\n      character\
    \ (however coded in Unicode) will tend to map to one\n      coding in the legacy\
    \ charset, if it can be represented at all.\n      Therefore, the password-mapping\
    \ parameter will almost never be\n      ambiguous when mapping to legacy encodings.\
    \  When mapping from one\n      Unicode form to another (such as an internal Unicode\n\
    \      representation to *pkcs12), code sequences are either preserved or\n  \
    \    folded deterministically to common Unicode code points or\n      sequences,\
    \ producing the same holistic result as mapping to legacy\n      encodings.\n\
    \      It is possible that an abstract character might map to multiple\n     \
    \ legacy encodings under the same charset.  However, the possibility\n      is\
    \ sufficiently remote as to be ignored in this media type\n      registration.\
    \  One possible workaround is to set the user's\n      (decrypting party's) local\
    \ operating environment to the password-\n      mapping legacy encoding parameter\
    \ for the purpose of generating\n      the password octet string from user input.\
    \  Another possibility is\n      to generate all possible legacy encoding combinations\
    \ from the\n      abstract text (i.e., Unicode text), attempting decryption with\n\
    \      them.  Customized behavior can be defined by updating this media\n    \
    \  type registration with a new password-mapping special value,\n      prefixed\
    \ with *.\n   Published specification:\n      RSA Laboratories PKCS #8 v1.2 RSA\
    \ Encryption Standard, November\n      1993 (republished as [RFC5208], May 2008,\
    \ and updated as\n      [RFC5958], August 2010); RFC 5958, August 2010\n   Applications\
    \ that use this media type:\n      Machines, applications, browsers, Internet\
    \ kiosks, and so on, that\n      support this standard allow a user to import,\
    \ export, and exercise\n      a single private key.\n   Fragment identifier considerations:\
    \ None.\n   Additional information:\n      Deprecated alias names for this type:\
    \ N/A\n      Magic number(s): None.\n      File extension(s): .p8e\n      Macintosh\
    \ file type code(s): None.  A uniform type identifier\n      (UTI) of \"com.rsa.pkcs-8-encrypted\"\
    \ is recommended.\n   Object Identifiers: 1.2.840.113549.1.12.10.1.2 (when in\
    \ PKCS #12)\n   Person & email address to contact for further information:\n \
    \    Sean Leonard <dev+ietf@seantek.com>\n   Intended usage: COMMON\n   Restrictions\
    \ on usage: None.\n   Author/Change controller: Sean Leonard <dev+ietf@seantek.com>\n\
    \   Provisional registration?  No\n"
- title: 3.  IANA Considerations
  contents:
  - "3.  IANA Considerations\n   IANA has registered the media type application/pkcs8-encrypted\
    \ in the\n   Standards tree using the information provided in Section 2 of this\n\
    \   document.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   See the registration template.\n"
- title: 5.  Normative References
  contents:
  - "5.  Normative References\n   [CHARREG]  IANA, \"Character Sets\", December 2013,\n\
    \              <http://www.iana.org/assignments/character-sets>.\n   [IEEE.802.11-2012]\n\
    \              IEEE, \"IEEE Standard for Information technology--\n          \
    \    Telecommunications and information exchange between\n              systems\
    \ Local and metropolitan area networks--Specific\n              requirements Part\
    \ 11: Wireless LAN Medium Access Control\n              (MAC) and Physical Layer\
    \ (PHY) Specifications\",\n              IEEE 802.11-2012, DOI 10.1109/ieeestd.2012.6178212,\n\
    \              <http://ieeexplore.ieee.org/document/6178212/>.\n   [RFC2898] \
    \ Kaliski, B., \"PKCS #5: Password-Based Cryptography\n              Specification\
    \ Version 2.0\", RFC 2898,\n              DOI 10.17487/RFC2898, September 2000,\n\
    \              <https://www.rfc-editor.org/info/rfc2898>.\n   [RFC2978]  Freed,\
    \ N. and J. Postel, \"IANA Charset Registration\n              Procedures\", BCP\
    \ 19, RFC 2978, DOI 10.17487/RFC2978,\n              October 2000, <https://www.rfc-editor.org/info/rfc2978>.\n\
    \   [RFC5208]  Kaliski, B., \"Public-Key Cryptography Standards (PKCS) #8:\n \
    \             Private-Key Information Syntax Specification Version 1.2\",\n  \
    \            RFC 5208, DOI 10.17487/RFC5208, May 2008,\n              <https://www.rfc-editor.org/info/rfc5208>.\n\
    \   [RFC5958]  Turner, S., \"Asymmetric Key Packages\", RFC 5958,\n          \
    \    DOI 10.17487/RFC5958, August 2010,\n              <https://www.rfc-editor.org/info/rfc5958>.\n\
    \   [RFC7292]  Moriarty, K., Ed., Nystrom, M., Parkinson, S., Rusch, A.,\n   \
    \           and M. Scott, \"PKCS #12: Personal Information Exchange\n        \
    \      Syntax v1.1\", RFC 7292, DOI 10.17487/RFC7292, July 2014,\n           \
    \   <https://www.rfc-editor.org/info/rfc7292>.\n   [RFC7613]  Saint-Andre, P.\
    \ and A. Melnikov, \"Preparation,\n              Enforcement, and Comparison of\
    \ Internationalized Strings\n              Representing Usernames and Passwords\"\
    , RFC 7613,\n              DOI 10.17487/RFC7613, August 2015,\n              <https://www.rfc-editor.org/info/rfc7613>.\n\
    \   [RFC8018]  Moriarty, K., Ed., Kaliski, B., and A. Rusch, \"PKCS #5:\n    \
    \          Password-Based Cryptography Specification Version 2.1\",\n        \
    \      RFC 8018, DOI 10.17487/RFC8018, January 2017,\n              <https://www.rfc-editor.org/info/rfc8018>.\n\
    \   [RFC8265] Saint-Andre, P. and A. Melnikov, \"Preparation, Enforcement,\n \
    \             and Comparison of Internationalized Strings Representing\n     \
    \         Usernames and Passwords\", RFC 8265, DOI 10.17487/RFC8265,\n       \
    \       October 2017, <https://www.rfc-editor.org/info/rfc8265>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Sean Leonard\n   Penango, Inc.\n   5900 Wilshire Blvd\n\
    \   Ste 2600\n   Los Angeles, CA  90036\n   United States of America\n   Email:\
    \ dev+ietf@seantek.com\n   URI:   http://www.penango.com/\n"
