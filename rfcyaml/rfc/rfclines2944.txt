Abstract This document specifies an authentication scheme for the Telnet protocol under the framework described in [RFC2941], using the Secure Remote Password Protocol (SRP) authentication mechanism.
The specific mechanism, SRP SHA1, is described in [RFC2945].
Command Meanings IAC SB AUTHENTICATION IS <authentication type pair
This command indicates that the client has supplied the username and is ready to receive that user's field parameters.
There is no authentication information to be sent to the remote side of the connection yet.
This should only be sent after the IAC SB AUTHENTICATION NAME command has been issued.
If the modifier byte (second byte of the authentication type pair) has any bits other than AUTH
HOW MASK set, both bytes are included in the session key hash described later.
This ensures that the authentication type pair was correctly negotiated, while maintaining backward compatibility with existing software.
IAC SB AUTHENTICATION REPLY <authentication type pair
PARAMS <values of modulus, generator, and salt> IAC SE
This command is used to pass the three parameter values used in the exponentiation to the client.
These values are often called n, g, and s. IAC SB AUTHENTICATION
<authentication type pair> EXP <client's exponential residue> IAC SE
This command is used to pass the client's exponential residue, otherwise known as A, computed against the parameters exchanged earlier.
IAC SB AUTHENTICATION REPLY <authentication type pair
> CHALLENGE <server's exponential residue> IAC SE
This command is used to pass the server's exponential residue, computed against the same parameters.
This quantity is actually the sum of two residues, i.e. g^x   g^b.
For details see [SRP] and [RFC2945].
IAC SB AUTHENTICATION IS <authentication type pair> RESPONSE <response from client>
This command gives the server proof of the client's authenticity with a 160 bit (20 byte) response.
IAC SB AUTHENTICATION REPLY <authentication type pair>
This command indicates that the authentication was successful.
The server will construct its own proof of authenticity and include it as sub option data.
IAC SB AUTHENTICATION REPLY <authentication type pair> REJECT <optional reason for rejection>
This command indicates that the authentication was not successful, and if there is any more data in the sub option, it is an ASCII text message of the reason for the rejection.
For the PARAMS command, since three pieces of data are being transmitted, each parameter is preceded by a 16 bit (two byte)
length specifier in network byte order.
The EXP commands do not have a count in front of the data because there is only one piece of data in that suboption.
The CHALLENGE, RESPONSE, and ACCEPT data also do not have a count because they are all fixed in size.
Currently, only AUTH CLIENT TO SERVER mode is supported.
Although the SRP protocol effectively performs implicit mutual authentication as a result of the two way proofs, only the AUTH HOW ONE WAY authentication mode is currently defined.
HOW MUTUAL setting is being reserved for an explicit mutual authentication variant of the SRP protocol to be defined in future specifications.
All large number data sent in the arguments of the PARAMS and EXP commands must be in network byte order, i.e. most significant byte first.
The SRP SHA1 mechanism, as described in [RFC2945] generates a 40 byte session key, which allows implementations to use different keys for incoming and outgoing traffic, increasing the security of the encrypted session.
It is recommended that the Telnet ENCRYPT method, if it is used, be able to take advantage of the longer session keys.
Examples User "tjw" may wish to log in on machine "foo".
The client would send IAC SB AUTHENTICATION NAME "tjw" IAC SE IAC SB AUTHENTICATION IS SRP AUTH IAC SE.
The server would look up the field and salt parameters for "tjw" from its password file and send them back to the client.
Client and server would then exchange exponential residues and calculate their session keys (after the client prompted "tjw" for his password).
Then, the client would send the server its proof that it knows the session key.
The server would either send back an ACCEPT or a REJECT.
If the server accepts authentication, it also sends its own proof that it knows the session key to the client.
[ The server is now free to request authentication information. ]
IAC SB AUTHENTICATION SEND SRP CLIENT ONE WAY
TELOPT SRP CLIENT ONE WAY IAC SE
[ The server has requested SRP authentication.
It has indicated a preference for ENCRYPT USING TELOPT, which requires the Telnet ENCRYPT option to be negotiated once authentication succeeds.
If the client does not support this, the server is willing to fall back to an encryption optional mode.
The client will now respond with the name of the user that it wants to log in as. ]
NAME "tjw" IAC SE IAC SB AUTHENTICATION IS
SRP CLIENT ONE WAY ENCRYPT USING TELOPT AUTH IAC SE
[ The server looks up the appropriate information for "tjw" and sends back the parameters in a PARAMS command.
The parameters consist of the values N, g, and s, each preceded with a two  byte size parameter. ]
tt tt tt tt ...
IAC SE [ Both sides send their exponential residues.
The client sends its value A and the server sends its value B.
In SRP, the CHALLENGE message may be computed but not sent before the EXP command.
IAC SB AUTHENTICATION IS SRP CLIENT ONE WAY ENCRYPT USING TELOPT EXP aa aa aa aa aa aa aa
IAC SE IAC SB AUTHENTICATION REPLY
[ The client sends its response to the server.
This is the message M in the SRP protocol, which proves possession of the session key by the client.
Since ENCRYPT USING TELOPT is specified, the two octets of the authentication type pair are appended to the session key K before the hash for M is computed.
If the client and server had agreed upon a mode without the encryption flag set, nothing would be appended to K. Both this message and the server's response are as long as the output of the hash; the length is 20 bytes for SHA 1. ]
SRP CLIENT ONE WAY ENCRYPT USING TELOPT RESPONSE
[ The server accepts the response and sends its own proof. ]
The ability to negotiate a common authentication mechanism between client and server is a feature of the authentication option that should be used with caution.
When the negotiation is performed, no authentication has yet occurred.
Therefore, each system has no way of knowing whether or not it is talking to the system it intends.
An intruder could attempt to negotiate the use of an authentication system which is either weak, or already compromised by the intruder.
Since SRP relies on the security of the underlying public key cryptosystem, the modulus "n" should be large enough to resist brute force attack.
A length of at least 1024 bits is recommended, and implementations should reject attempts to use moduli that are shorter than 512 bits, or attempts to use invalid moduli and generator parameters (non safe prime "n" or non primitive "g").
The authentication type SRP and its associated suboption values are registered with IANA.
Any suboption values used to extend the protocol as described in this document must be registered with IANA before use.
IANA is instructed not to issue new suboption values without submission of documentation of their use.
