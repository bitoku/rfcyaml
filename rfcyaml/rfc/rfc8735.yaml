- title: __initial_text__
  contents:
  - '     Scenarios and Simulation Results of PCE in a Native IP Network

    '
- title: Abstract
  contents:
  - "Abstract\n   Requirements for providing the End-to-End (E2E) performance assurance\n\
    \   are emerging within the service provider networks.  While there are\n   various\
    \ technology solutions, there is no single solution that can\n   fulfill these\
    \ requirements for a native IP network.  In particular,\n   there is a need for\
    \ a universal E2E solution that can cover both\n   intra- and inter-domain scenarios.\n\
    \   One feasible E2E traffic-engineering solution is the addition of\n   central\
    \ control in a native IP network.  This document describes\n   various complex\
    \ scenarios and simulation results when applying the\n   Path Computation Element\
    \ (PCE) in a native IP network.  This\n   solution, referred to as Centralized\
    \ Control Dynamic Routing (CCDR),\n   integrates the advantage of using distributed\
    \ protocols and the power\n   of a centralized control technology, providing traffic\
    \ engineering\n   for native IP networks in a manner that applies equally to intra-\
    \ and\n   inter-domain scenarios.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8735.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  CCDR Scenarios\n\
    \     3.1.  QoS Assurance for Hybrid Cloud-Based Application\n     3.2.  Link\
    \ Utilization Maximization\n     3.3.  Traffic Engineering for Multi-domain\n\
    \     3.4.  Network Temporal Congestion Elimination\n   4.  CCDR Simulation\n\
    \     4.1.  Case Study for CCDR Algorithm\n     4.2.  Topology Simulation\n  \
    \   4.3.  Traffic Matrix Simulation\n     4.4.  CCDR End-to-End Path Optimization\n\
    \     4.5.  Network Temporal Congestion Elimination\n   5.  CCDR Deployment Consideration\n\
    \   6.  Security Considerations\n   7.  IANA Considerations\n   8.  References\n\
    \     8.1.  Normative References\n     8.2.  Informative References\n   Acknowledgements\n\
    \   Contributors\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A service provider network is composed of thousands of routers\
    \ that\n   run distributed protocols to exchange reachability information.  The\n\
    \   path for the destination network is mainly calculated, and\n   controlled,\
    \ by the distributed protocols.  These distributed\n   protocols are robust enough\
    \ to support most applications; however,\n   they have some difficulties supporting\
    \ the complexities needed for\n   traffic-engineering applications, e.g., E2E\
    \ performance assurance, or\n   maximizing the link utilization within an IP network.\n\
    \   Multiprotocol Label Switching (MPLS) using Traffic-Engineering (TE)\n   technology\
    \ (MPLS-TE) [RFC3209] is one solution for TE networks, but\n   it introduces an\
    \ MPLS network along with related technology, which\n   would be an overlay of\
    \ the IP network.  MPLS-TE technology is often\n   used for Label Switched Path\
    \ (LSP) protection and setting up complex\n   paths within a domain.  It has not\
    \ been widely deployed for meeting\n   E2E (especially in inter-domain) dynamic\
    \ performance assurance\n   requirements for an IP network.\n   Segment Routing\
    \ [RFC8402] is another solution that integrates some\n   advantages of using a\
    \ distributed protocol and central control\n   technology, but it requires the\
    \ underlying network, especially the\n   provider edge router, to do an in-depth\
    \ label push and pop action\n   while adding complexity when coexisting with the\
    \ non-segment routing\n   network.  Additionally, it can only maneuver the E2E\
    \ paths for MPLS\n   and IPv6 traffic via different mechanisms.\n   Deterministic\
    \ Networking (DetNet) [RFC8578] is another possible\n   solution.  It is primarily\
    \ focused on providing bounded latency for a\n   flow and introduces additional\
    \ requirements on the domain edge\n   router.  The current DetNet scope is within\
    \ one domain.  The use\n   cases defined in this document do not require the additional\n\
    \   complexity of deterministic properties and so differ from the DetNet\n   use\
    \ cases.\n   This document describes several scenarios for a native IP network\n\
    \   where a Centralized Control Dynamic Routing (CCDR) framework can\n   produce\
    \ qualitative improvement in efficiency without requiring a\n   change to the\
    \ data-plane behavior on the router.  Using knowledge of\n   the Border Gateway\
    \ Protocol (BGP) session-specific prefixes\n   advertised by a router, the network\
    \ topology and the near-real-time\n   link-utilization information from network\
    \ management systems, a\n   central PCE is able to compute an optimal path and\
    \ give the\n   underlying routers the destination address to use to reach the\
    \ BGP\n   nexthop, such that the distributed routing protocol will use the\n \
    \  computed path via traditional recursive lookup procedure.  Some\n   results\
    \ from simulations of path optimization are also presented to\n   concretely illustrate\
    \ a variety of scenarios where CCDR shows\n   significant improvement over traditional\
    \ distributed routing\n   protocols.\n   This document is the base document of\
    \ the following two documents:\n   the universal solution document, which is suitable\
    \ for intra-domain\n   and inter-domain TE scenario, is described in [PCE-NATIVE-IP];\
    \ and\n   the related protocol extension contents is described in\n   [PCEP-NATIVE-IP-EXT].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, PCE is used as defined in [RFC5440].  The\
    \ following\n   terms are used as described here:\n   BRAS:   Broadband Remote\
    \ Access Server\n   CD:     Congestion Degree\n   CR:     Core Router\n   CCDR:\
    \   Centralized Control Dynamic Routing\n   E2E:    End to End\n   IDC:    Internet\
    \ Data Center\n   MAN:    Metro Area Network\n   QoS:    Quality of Service\n\
    \   SR:     Service Router\n   TE:     Traffic Engineering\n   UID:    Utilization\
    \ Increment Degree\n   WAN:    Wide Area Network\n"
- title: 3.  CCDR Scenarios
  contents:
  - "3.  CCDR Scenarios\n   The following sections describe various deployment scenarios\
    \ where\n   applying the CCDR framework is intuitively expected to produce\n \
    \  improvements based on the macro-scale properties of the framework and\n   the\
    \ scenario.\n"
- title: 3.1.  QoS Assurance for Hybrid Cloud-Based Application
  contents:
  - "3.1.  QoS Assurance for Hybrid Cloud-Based Application\n   With the emergence\
    \ of cloud computing technologies, enterprises are\n   putting more and more services\
    \ on a public-oriented cloud environment\n   while keeping core business within\
    \ their private cloud.  The\n   communication between the private and public cloud\
    \ sites spans the\n   WAN.  The bandwidth requirements between them are variable,\
    \ and the\n   background traffic between these two sites varies over time.\n \
    \  Enterprise applications require assurance of the E2E QoS performance\n   on\
    \ demand for variable bandwidth services.\n   CCDR, which integrates the merits\
    \ of distributed protocols and the\n   power of centralized control, is suitable\
    \ for this scenario.  The\n   possible solution framework is illustrated below:\n\
    \                            | Cloud-Based Application|\n     Private Cloud Site\
    \ ||       Distributed          |Public Cloud Site\n               Figure 1: Hybrid\
    \ Cloud Communication Scenario\n   As illustrated in Figure 1, the source and\
    \ destination of the \"Cloud-\n   Based Application\" traffic are located at \"\
    Private Cloud Site\" and\n   \"Public Cloud Site\", respectively.\n   By default,\
    \ the traffic path between the private and public cloud\n   site is determined\
    \ by the distributed control network.  When an\n   application requires E2E QoS\
    \ assurance, it can send these\n   requirements to the PCE and let the PCE compute\
    \ one E2E path, which\n   is based on the underlying network topology and real\
    \ traffic\n   information, in order to accommodate the application's QoS\n   requirements.\
    \  Section 4.4 of this document describes the simulation\n   results for this\
    \ use case.\n"
- title: 3.2.  Link Utilization Maximization
  contents:
  - "3.2.  Link Utilization Maximization\n   Network topology within a Metro Area\
    \ Network (MAN) is generally in a\n   star mode as illustrated in Figure 2, with\
    \ different devices\n   connected to different customer types.  The traffic from\
    \ these\n   customers is often in a tidal pattern with the links between the Core\n\
    \   Router (CR) / Broadband Remote Access Server (BRAS) and CR/Service\n   Router\
    \ (SR) experiencing congestion in different periods due to\n   subscribers under\
    \ BRAS often using the network at night and the\n   leased line users under SR\
    \ often using the network during the\n   daytime.  The link between BRAS/SR and\
    \ CR must satisfy the maximum\n   traffic volume between them, respectively, which\
    \ causes these links\n   to often be underutilized.\n                  |BRAS|\
    \   |SR|    |BRAS|   |SR|\n              Figure 2: Star-Mode Network Topology\
    \ within MAN\n   If we consider connecting the BRAS/SR with a local link loop\
    \ (which\n   is usually lower cost) and control the overall MAN topology with\
    \ the\n   CCDR framework, we can exploit the tidal phenomena between the BRAS/\n\
    \   CR and SR/CR links, maximizing the utilization of these central trunk\n  \
    \ links (which are usually higher cost than the local loops).\n              \
    \    |BRAS-----SR|    |BRAS-----SR|\n              Figure 3: Link Utilization\
    \ Maximization via CCDR\n"
- title: 3.3.  Traffic Engineering for Multi-domain
  contents:
  - "3.3.  Traffic Engineering for Multi-domain\n   Service provider networks are\
    \ often comprised of different domains,\n   interconnected with each other, forming\
    \ a very complex topology as\n   illustrated in Figure 4.  Due to the traffic\
    \ pattern to/from the MAN\n   and IDC, the utilization of the links between them\
    \ are often\n   asymmetric.  It is almost impossible to balance the utilization\
    \ of\n   these links via a distributed protocol, but this unbalance can be\n \
    \  overcome utilizing the CCDR framework.\n                  |MAN|----------------|IDC|\n\
    \                    |-----|Backbone|-----|\n                  |IDC|----------------|MAN|\n\
    \      Figure 4: Traffic Engineering for Complex Multi-domain Topology\n   A solution\
    \ for this scenario requires the gathering of NetFlow\n   information, analysis\
    \ of the source/destination autonomous system\n   (AS), and determining what the\
    \ main cause of the congested link(s)\n   is.  After this, the operator can use\
    \ the external Border Gateway\n   Protocol (eBGP) sessions to schedule the traffic\
    \ among the different\n   domains according to the solution described in the CCDR\
    \ framework.\n"
- title: 3.4.  Network Temporal Congestion Elimination
  contents:
  - "3.4.  Network Temporal Congestion Elimination\n   In more general situations,\
    \ there is often temporal congestion within\n   the service provider's network,\
    \ for example, due to daily or weekly\n   periodic bursts or large events that\
    \ are scheduled well in advance.\n   Such congestion phenomena often appear regularly,\
    \ and if the service\n   provider has methods to mitigate it, it will certainly\
    \ improve their\n   network operation capabilities and increase satisfaction for\n\
    \   customers.  CCDR is also suitable for such scenarios, as the\n   controller\
    \ can schedule traffic out of the congested links, lowering\n   their utilization\
    \ during these times.  Section 4.5 describes the\n   simulation results of this\
    \ scenario.\n"
- title: 4.  CCDR Simulation
  contents:
  - "4.  CCDR Simulation\n   The following sections describe a specific case study\
    \ to illustrate\n   the workings of the CCDR algorithm with concrete paths/metrics,\
    \ as\n   well as a procedure for generating topology and traffic matrices and\n\
    \   the results from simulations applying CCDR for E2E QoS (assured path\n   and\
    \ congestion elimination) over the generated topologies and traffic\n   matrices.\
    \  In all cases examined, the CCDR algorithm produces\n   qualitatively significant\
    \ improvement over the reference (OSPF)\n   algorithm, suggesting that CCDR will\
    \ have broad applicability.\n   The structure and scale of the simulated topology\
    \ is similar to that\n   of the real networks.  Multiple different traffic matrices\
    \ were\n   generated to simulate different congestion conditions in the network.\n\
    \   Only one of them is illustrated since the others produce similar\n   results.\n"
- title: 4.1.  Case Study for CCDR Algorithm
  contents:
  - "4.1.  Case Study for CCDR Algorithm\n   In this section, we consider a specific\
    \ network topology for case\n   study: examining the path selected by OSPF and\
    \ CCDR and evaluating\n   how and why the paths differ.  Figure 5 depicts the\
    \ topology of the\n   network in this case.  There are eight forwarding devices\
    \ in the\n   network.  The original cost and utilization are marked on it as shown\n\
    \   in the figure.  For example, the original cost and utilization for\n   the\
    \ link (1, 2) are 3 and 50%, respectively.  There are two flows: f1\n   and f2.\
    \  Both of these two flows are from node 1 to node 8.  For\n   simplicity, it\
    \ is assumed that the bandwidth of the link in the\n   network is 10 Mb/s.  The\
    \ flow rate of f1 is 1 Mb/s and the flow rate\n   of f2 is 2 Mb/s.  The threshold\
    \ of the link in congestion is 90%.\n   If the OSPF protocol, which adopts Dijkstra's\
    \ algorithm (IS-IS is\n   similar because it also uses Dijkstra's algorithm),\
    \ is applied in the\n   network, the two flows from node 1 to node 8 can only\
    \ use the OSPF\n   path (p1: 1->2->3->8).  This is because Dijkstra's algorithm\
    \ mainly\n   considers the original cost of the link.  Since CCDR considers cost\n\
    \   and utilization simultaneously, the same path as OSPF will not be\n   selected\
    \ due to the severe congestion of the link (2, 3).  In this\n   case, f1 will\
    \ select the path (p2: 1->5->6->7->8) since the new cost\n   of this path is better\
    \ than that of the OSPF path.  Moreover, the\n   path p2 is also better than the\
    \ path (p3: 1->2->4->7->8) for flow f1.\n   However, f2 will not select the same\
    \ path since it will cause new\n   congestion in the link (6, 7).  As a result,\
    \ f2 will select the path\n   (p3: 1->2->4->7->8).\n         +----+      f1  \
    \              +-------> +-----+ ----> +-----+\n         |Edge|-----------+  \
    \          |+--------|  3  |-------|  8  |\n         |Node|---------+ |      \
    \      ||+-----> +-----+ ----> +-----+\n                        | v          \
    \  |||                        |\n         |Edge|-------|  1  |--------|  2  |------|\
    \  4  |------|  7  |\n         |Node|-----> +-----+ -----> +-----+7/60% +-----+5/45%\
    \ +-----+\n         +----+  f2      |     3/50%                              |\n\
    \                         |   3/60%   +-----+ 5/55%+-----+   3/75% |\n       \
    \            (a) Dijkstra's Algorithm (OSPF/IS-IS)\n         +----+      f1  \
    \                        +-----+ ----> +-----+\n         |Edge|-----------+  \
    \           +--------|  3  |-------|  8  |\n         |Node|---------+ |      \
    \       |        +-----+ ----> +-----+\n                        | v          \
    \   |                        |||\n         |Edge|-------|  1  |--------|  2  |------|\
    \  4  |------|  7  |\n         |Node|-----> +-----+        +-----+7/60% +-----+5/45%\
    \ +-----+\n         +----+  f2     ||     3/50%                              |^\n\
    \                        ||   3/60%   +-----+5/55% +-----+   3/75% ||\n      \
    \                (b) CCDR Algorithm\n                 Figure 5: Case Study for\
    \ CCDR's Algorithm\n"
- title: 4.2.  Topology Simulation
  contents:
  - "4.2.  Topology Simulation\n   Moving on from the specific case study, we now\
    \ consider a class of\n   networks more representative of real deployments, with\
    \ a fully linked\n   core network that serves to connect edge nodes, which themselves\n\
    \   connect to only a subset of the core.  An example of such a topology\n   is\
    \ shown in Figure 6 for the case of 4 core nodes and 5 edge nodes.\n   The CCDR\
    \ simulations presented in this work use topologies involving\n   100 core nodes\
    \ and 400 edge nodes.  While the resulting graph does\n   not fit on this page,\
    \ this scale of network is similar to what is\n   deployed in production environments.\n\
    \                   |Edge|----|Core|-----|Core|---------+\n                  \
    \   |Edge|   |      X     |           |\n                   |Edge|----|Core|-----|Core|\
    \         |\n                      Figure 6: Topology of Simulation\n   For the\
    \ simulations, the number of links connecting one edge node to\n   the set of\
    \ core nodes is randomly chosen between two and thirty, and\n   the total number\
    \ of links is more than 20,000.  Each link has a\n   congestion threshold, which\
    \ can be arbitrarily set, for example, to\n   90% of the nominal link capacity\
    \ without affecting the simulation\n   results.\n"
- title: 4.3.  Traffic Matrix Simulation
  contents:
  - "4.3.  Traffic Matrix Simulation\n   For each topology, a traffic matrix is generated\
    \ based on the link\n   capacity of the topology.  It can result in many kinds\
    \ of situations\n   such as congestion, mild congestion, and non-congestion.\n\
    \   In the CCDR simulation, the dimension of the traffic matrix is\n   500*500\
    \ (100 core nodes plus 400 edge nodes).  About 20% of links are\n   overloaded\
    \ when the Open Shortest Path First (OSPF) protocol is used\n   in the network.\n"
- title: 4.4.  CCDR End-to-End Path Optimization
  contents:
  - "4.4.  CCDR End-to-End Path Optimization\n   The CCDR E2E path optimization entails\
    \ finding the best path, which\n   is the lowest in metric value, as well as having\
    \ utilization far\n   below the congestion threshold for each link of the path.\
    \  Based on\n   the current state of the network, the PCE within CCDR framework\n\
    \   combines the shortest path algorithm with a penalty theory of\n   classical\
    \ optimization and graph theory.\n   Given a background traffic matrix, which\
    \ is unscheduled, when a set\n   of new flows comes into the network, the E2E\
    \ path optimization finds\n   the optimal paths for them.  The selected paths\
    \ bring the least\n   congestion degree to the network.\n   The link Utilization\
    \ Increment Degree (UID), when the new flows are\n   added into the network, is\
    \ shown in Figure 7.  The first graph in\n   Figure 7 is the UID with OSPF, and\
    \ the second graph is the UID with\n   CCDR E2E path optimization.  The average\
    \ UID of the first graph is\n   more than 30%. After path optimization, the average\
    \ UID is less than\n   5%. The results show that the CCDR E2E path optimization\
    \ has an eye-\n   catching decrease in UID relative to the path chosen based on\
    \ OSPF.\n   While real-world results invariably differ from simulations (for\n\
    \   example, real-world topologies are likely to exhibit correlation in\n   the\
    \ attachment patterns for edge nodes to the core, which are not\n   reflected\
    \ in these results), the dramatic nature of the improvement\n   in UID and the\
    \ choice of simulated topology to resemble real-world\n   conditions suggest that\
    \ real-world deployments will also experience\n   significant improvement in UID\
    \ results.\n        60|                *                             * * *  *\
    \    *|\n        40|* * * ***** ** ***  *** *** **  **** ** *** ***** ****** **|\n\
    \    UID(%)|* * ******* ** ***  *** ******* **** ** *** ***** *********|\n   \
    \     20|******************* ***************************************|\n      \
    \   0+-----------------------------------------------------------+\n         0\
    \    100   200   300   400   500   600   700   800   900  1000\n        60|  \
    \                                                         |\n        40|     \
    \                                                      |\n    UID(%)|        \
    \                                                   |\n        20|           \
    \                                                |\n         0+-----------------------------------------------------------+\n\
    \         0    100   200   300   400   500   600   700   800   900  1000\n   \
    \                            Flow Number\n          Figure 7: Simulation Results\
    \ with Congestion Elimination\n"
- title: 4.5.  Network Temporal Congestion Elimination
  contents:
  - "4.5.  Network Temporal Congestion Elimination\n   During the simulations, different\
    \ degrees of network congestion were\n   considered.  To examine the effect of\
    \ CCDR on link congestion, we\n   consider the Congestion Degree (CD) of a link,\
    \ defined as the link\n   utilization beyond its threshold.\n   The CCDR congestion\
    \ elimination performance is shown in Figure 8.\n   The first graph is the CD\
    \ distribution before the process of\n   congestion elimination.  The average\
    \ CD of all congested links is\n   about 20%. The second graph shown in Figure\
    \ 8 is the CD distribution\n   after using the congestion elimination process.\
    \  It shows that only\n   twelve links among the total 20,000 exceed the threshold,\
    \ and all the\n   CD values are less than 3%. Thus, after scheduling the traffic\
    \ away\n   from the congested paths, the degree of network congestion is greatly\n\
    \   eliminated and the network utilization is in balance.\n               Before\
    \ congestion elimination\n         20|                *                     *\
    \      **** * ** ** *|\n         15|* * * ** *  ** **** ********* *****************************|\n\
    \     CD(%) |* ********* ******* ***************************************|\n  \
    \       10|* ********* ***********************************************|\n    \
    \      5|***********************************************************|\n      \
    \    0+-----------------------------------------------------------+\n        \
    \      0            0.5            1            1.5            2\n           \
    \             After congestion elimination\n        20|                      \
    \                                     |\n        15|                         \
    \                                  |\n    CD(%) |                            \
    \                               |\n        10|                               \
    \                            |\n        5 |                                  \
    \                         |\n        0 +-----------------------------------------------------------+\n\
    \           0            0.5            1            1.5            2\n      \
    \                      Link Number(*10000)\n          Figure 8: Simulation Results\
    \ with Congestion Elimination\n   It is clear that by using an active path-computation\
    \ mechanism that\n   is able to take into account observed link traffic/congestion,\
    \ the\n   occurrence of congestion events can be greatly reduced.  Only when a\n\
    \   preponderance of links in the network are near their congestion\n   threshold\
    \ will the central controller be unable to find a clear path\n   as opposed to\
    \ when a static metric-based procedure is used, which\n   will produce congested\
    \ paths once a single bottleneck approaches its\n   capacity.  More detailed information\
    \ about the algorithm can be found\n   in [PTCS].\n"
- title: 5.  CCDR Deployment Consideration
  contents:
  - "5.  CCDR Deployment Consideration\n   The above CCDR scenarios and simulation\
    \ results demonstrate that a\n   single general solution can be found that copes\
    \ with multiple complex\n   situations.  The specific situations considered are\
    \ not known to have\n   any special properties, so it is expected that the benefits\n\
    \   demonstrated will have general applicability.  Accordingly, the\n   integrated\
    \ use of a centralized controller for the more complex\n   optimal path computations\
    \ in a native IP network should result in\n   significant improvements without\
    \ impacting the underlying network\n   infrastructure.\n   For intra-domain or\
    \ inter-domain native IP TE scenarios, the\n   deployment of a CCDR solution is\
    \ similar with the centralized\n   controller being able to compute paths along\
    \ with no changes being\n   required to the underlying network infrastructure.\
    \  This universal\n   deployment characteristic can facilitate a generic traffic-\n\
    \   engineering solution where operators do not need to differentiate\n   between\
    \ intra-domain and inter-domain TE cases.\n   To deploy the CCDR solution, the\
    \ PCE should collect the underlying\n   network topology dynamically, for example,\
    \ via Border Gateway\n   Protocol - Link State (BGP-LS) [RFC7752].  It also needs\
    \ to gather\n   the network traffic information periodically from the network\n\
    \   management platform.  The simulation results show that the PCE can\n   compute\
    \ the E2E optimal path within seconds; thus, it can cope with a\n   change to\
    \ the underlying network in a matter of minutes.  More agile\n   requirements\
    \ would need to increase the sample rate of the underlying\n   network and decrease\
    \ the detection and notification interval of the\n   underlying network.  The\
    \ methods of gathering this information as\n   well as decreasing its latency\
    \ are out of the scope of this document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document considers mainly the integration\
    \ of distributed\n   protocols and the central control capability of a PCE.  While\
    \ it can\n   certainly simplify the management of a network in various traffic-\n\
    \   engineering scenarios as described in this document, the centralized\n   control\
    \ also brings a new point that may be easily attacked.\n   Solutions for CCDR\
    \ scenarios need to consider protection of the PCE\n   and communication with\
    \ the underlying devices.\n   [RFC5440] and [RFC8253] provide additional information.\n\
    \   The control priority and interaction process should also be carefully\n  \
    \ designed for the combination of the distributed protocol and central\n   control.\
    \  Generally, the central control instructions should have\n   higher priority\
    \ than the forwarding actions determined by the\n   distributed protocol.  When\
    \ communication between PCE and the\n   underlying devices is disrupted, the distributed\
    \ protocol should take\n   control of the underlying network.  [PCE-NATIVE-IP]\
    \ provides more\n   considerations corresponding to the solution.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux,\
    \ Ed., \"Path Computation\n              Element (PCE) Communication Protocol\
    \ (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440, March 2009,\n     \
    \         <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC7752]  Gredler, H.,\
    \ Ed., Medved, J., Previdi, S., Farrel, A., and\n              S. Ray, \"North-Bound\
    \ Distribution of Link-State and\n              Traffic Engineering (TE) Information\
    \ Using BGP\", RFC 7752,\n              DOI 10.17487/RFC7752, March 2016,\n  \
    \            <https://www.rfc-editor.org/info/rfc7752>.\n   [RFC8253]  Lopez,\
    \ D., Gonzalez de Dios, O., Wu, Q., and D. Dhody,\n              \"PCEPS: Usage\
    \ of TLS to Provide a Secure Transport for the\n              Path Computation\
    \ Element Communication Protocol (PCEP)\",\n              RFC 8253, DOI 10.17487/RFC8253,\
    \ October 2017,\n              <https://www.rfc-editor.org/info/rfc8253>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [PCE-NATIVE-IP]\n              Wang, A., Zhao,\
    \ Q., Khasanov, B., and H. Chen, \"PCE in\n              Native IP Network\",\
    \ Work in Progress, Internet-Draft,\n              draft-ietf-teas-pce-native-ip-05,\
    \ 9 January 2020,\n              <https://tools.ietf.org/html/draft-ietf-teas-pce-native-\n\
    \              ip-05>.\n   [PCEP-NATIVE-IP-EXT]\n              Wang, A., Khasanov,\
    \ B., Fang, S., and C. Zhu, \"PCEP\n              Extension for Native IP Network\"\
    , Work in Progress,\n              Internet-Draft, draft-ietf-pce-pcep-extension-native-ip-\n\
    \              05, 17 February 2020, <https://tools.ietf.org/html/draft-\n   \
    \           ietf-pce-pcep-extension-native-ip-05>.\n   [PTCS]     Zhang, P., Xie,\
    \ K., Kou, C., Huang, X., Wang, A., and Q.\n              Sun, \"A Practical Traffic\
    \ Control Scheme With Load\n              Balancing Based on PCE Architecture\"\
    ,\n              DOI 10.1109/ACCESS.2019.2902610, IEEE Access 18526773,\n    \
    \          March 2019,\n              <https://ieeexplore.ieee.org/document/8657733>.\n\
    \   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n   \
    \           and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n          \
    \    Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December 2001,\n             \
    \ <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC8402]  Filsfils, C., Ed.,\
    \ Previdi, S., Ed., Ginsberg, L.,\n              Decraene, B., Litkowski, S.,\
    \ and R. Shakir, \"Segment\n              Routing Architecture\", RFC 8402, DOI\
    \ 10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n\
    \   [RFC8578]  Grossman, E., Ed., \"Deterministic Networking Use Cases\",\n  \
    \            RFC 8578, DOI 10.17487/RFC8578, May 2019,\n              <https://www.rfc-editor.org/info/rfc8578>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Deborah Brungard, Adrian\
    \ Farrel,\n   Huaimo Chen, Vishnu Beeram, and Lou Berger for their support and\n\
    \   comments on this document.\n   Thanks to Benjamin Kaduk for his careful review\
    \ and valuable\n   suggestions on this document.  Also, thanks to Roman Danyliw,\
    \ Alvaro\n   Retana, and \xC9ric Vyncke for their reviews and comments.\n"
- title: Contributors
  contents:
  - "Contributors\n   Lu Huang contributed to the content of this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Aijun Wang\n   China Telecom\n   Beiqijia Town, Changping\
    \ District\n   Beijing\n   Beijing, 102209\n   China\n   Email: wangaj3@chinatelecom.cn\n\
    \   Xiaohong Huang\n   Beijing University of Posts and Telecommunications\n  \
    \ No.10 Xitucheng Road, Haidian District\n   Beijing\n   China\n   Email: huangxh@bupt.edu.cn\n\
    \   Caixia Kou\n   Beijing University of Posts and Telecommunications\n   No.10\
    \ Xitucheng Road, Haidian District\n   Beijing\n   China\n   Email: koucx@lsec.cc.ac.cn\n\
    \   Zhenqiang Li\n   China Mobile\n   32 Xuanwumen West Ave, Xicheng District\n\
    \   Beijing\n   100053\n   China\n   Email: li_zhenqiang@hotmail.com\n   Penghui\
    \ Mi\n   Huawei Technologies\n   Tower C of Bldg.2, Cloud Park, No.2013 of Xuegang\
    \ Road\n   Shenzhen\n   Bantian,Longgang District, 518129\n"
