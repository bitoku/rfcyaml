Abstract This document describes an Extensible Provisioning Protocol (EPP) mapping for a key relay object that relays DNSSEC key material between EPP clients using the poll queue defined in RFC 5730.
This key relay mapping will help facilitate changing the DNS operator of a domain while keeping the DNSSEC chain of trust intact.
There are certain transactions initiated by a DNS operator that require an authenticated exchange of information between DNS operators.
Often, there is no direct channel between these parties or it
is non scalable and insecure.
One such transaction is the exchange of DNSSEC key material when changing the DNS operator for DNSSEC signed zones.
We suggest that DNS operators use the administrative EPP channel to bootstrap the delegation by relaying DNSSEC key material for the zone.
In this document, we define an EPP extension to send DNSSEC key material between EPP clients.
This allows DNS operators to automatically, reliably, and securely bootstrap the transfer of a domain name while keeping the DNSSEC chain of trust intact.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].
Unless stated otherwise, the XML specifications and examples provided in this document MUST be interpreted in the character case presented in order to develop a conforming implementation.
In the examples, "C:" represents lines sent by a protocol client and "S:" represents lines returned by a protocol server.
Indentation and white space in the examples are provided only to illustrate element relationships and are not mandatory features of this protocol.
Secure Transfer of DNSSEC Key Material
Exchanging DNSSEC key material in preparation of a domain name transfer is one of the phases in the life cycle of a domain name [DNSOP].
DNS operators need to exchange DNSSEC key material before the registration data can be changed to keep the DNSSEC chain of trust intact.
This exchange is normally initiated through the gaining registrar.
The gaining and losing DNS operators could talk directly to each other (see Figure 1) to exchange the DNSKEY, but often there is no trusted path between the two.
As both can securely interact with the registry over the administrative channel through the registrar, the registry can act as a relay for the key material exchange.
The registry is merely used as a relay channel.
Therefore, it is up to the losing DNS operator to complete the intended transaction.
The registry SHOULD have certain policies in place that require the losing DNS operator to cooperate with this transaction; however, this is beyond the scope of this document.
This document focuses on the EPP protocol syntax.
: Transfer of DNSSEC Key Material
There is no distinction in the EPP protocol between Registrars and DNS operators, and there is only mention of an EPP client and EPP server.
Therefore, the term "EPP client" will be used for the interaction with the EPP server for relaying DNSSEC key material.
The DNSSEC key material is represented in EPP by a <
The <keyRelayData> contains the following elements:
One REQUIRED <keyData> element that contains the DNSSEC key material as described in [RFC5910], Section 4.
An OPTIONAL <expiry> element that describes the expected lifetime of the relayed key(s) in the zone.
When the <expiry> element is provided, the losing DNS operator SHOULD remove the inserted key material from the zone after the expiry time.
This may be because the transaction that needed the insertion should be either completed or abandoned by that time.
If a client receives a key relay object that has been sent previously, it MUST update the expiry time of the key material.
This enables the clients to update the lifetime of the key material when a transfer is delayed.
The <expiry> element MUST contain exactly one of the following child elements:
<absolute>:  The DNSSEC key material is valid from the current date and time until it expires on the specified date and time.
If a date in the past is provided, this MUST be interpreted as a revocation of a previously sent key relay object.
The DNSSEC key material is valid from the current date and time until the end of the specified duration.
If a period of zero is provided, this MUST be interpreted as a revocation of a previously sent key relay object.
A detailed description of the EPP syntax and semantics can be found in the EPP core protocol specification [RFC5730].
The command mapping described here is specifically for use in this key relay mapping.
EPP Query Commands EPP provides three commands to retrieve object information:
<check> to determine if an object is known to the server, <info> to retrieve detailed information associated with an object, and <transfer> to retrieve object transfer status information.
that semantics do not apply to key relay objects, so there is no mapping defined for the EPP <check> command and the EPP <check> response.
Command Info command semantics do not apply to the key relay objects, so there is no mapping defined for the EPP <info> command.
The EPP <info> response for key relay objects is used in the EPP poll response, as described in [RFC5730].
The key relay object created with the <create> command, described in Section 3.2.1 is inserted into the receiving client's poll queue.
The receiving client will receive the key relay object using the EPP <poll
> command, as described in [RFC5730].
When a <poll> command has been processed successfully for a key relay poll message, the EPP <
resData> element MUST contain a child <keyrelay:
> element that is identified by the keyrelay namespace.
infData> element contains the following child elements:  A REQUIRED <name> element containing the domain name for which the DNSSEC key material is relayed.
A REQUIRED <authInfo> element that contains authorization information associated with the domain object ([RFC5731], Section 3.2.1).
One or more REQUIRED <keyRelayData> elements containing data to be relayed, as defined in Section 2.1.
A server MAY apply a server policy that specifies the number of <keyRelayData> elements that can be incorporated.
When a server policy is violated, a server MUST respond with an EPP result code 2308 "Data management policy violation".
An OPTIONAL <crDate> element that contains the date and time of the submitted <create> command.
An OPTIONAL <reID> element that contains the identifier of the client that requested the key relay.
An OPTIONAL <acID> element that contains the identifier of the client that SHOULD act upon the key relay.
Example <poll> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Command completed successfully; ack to dequeue</msg
EPP <transfer> Command Transfer semantics do not apply to key relay objects, so there is no mapping defined for the EPP <transfer> command.
EPP Transform Commands EPP provides five commands to transform objects: <create> to create an instance of an object, <delete> to delete an instance of an object, <renew> to extend the validity period of an object, <transfer> to manage object sponsorship changes, and <update> to change information associated with an object.
The EPP <create> command provides a transform operation that allows a client to create a key relay object that includes the domain name and DNSSEC key material to be relayed.
> command is validated, the server MUST insert an EPP <poll> message, using the key relay info response (see Section 3.1.2), in the receiving client's poll queue that belongs to the registrar on record of the provided domain name.
In addition to the standard EPP command elements, the <create> command MUST contain a <keyrelay:create> element that is identified by the keyrelay namespace.
The <keyrelay:create> element contains the following child elements:  A REQUIRED <keyrelay:name
> element containing the domain name for which the DNSSEC key material is relayed.
A REQUIRED <authInfo> element that contains authorization information associated with the domain object ([RFC5731], Section 3.2.1).
One or more REQUIRED <keyrelay:
keyRelayData> elements containing data to be relayed, as defined in Section 2.1.
Example <create> commands: Note that in the provided example, the second <keyrelay:
keyRelayData> element has a period of zero, and thus represents the revocation of a previously sent key relay object (see Section 2.1.1).
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a server has successfully processed the <create> command, it MUST respond with a standard EPP response.
Example <create> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When a server cannot process the <create> command due to the server policy, it MUST return an EPP 2308 error message.
This might be the case when the server knows that the receiving client does not support key relay transactions.
Example <create> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
Command Delete semantics do not apply to key relay objects, so there is no mapping defined for the EPP <delete> command and
EPP <renew> Command Renew semantics do not apply to key relay objects, so there is no mapping defined for the EPP <renew> command and
EPP <transfer> Command Transfer semantics do not apply to key relay objects, so there is no mapping defined for the EPP <transfer> command and the EPP <transfer> response.
EPP <update> Command Update semantics do not apply to key relay objects, so there is no mapping defined for the EPP <update> command and
xml version "1.0" encoding "UTF 8"?
ns:domain 1.0" xmlns "http://www.w3.org/2001/XMLSchema" elementFormDefault "qualified"> <annotation> <documentation> Extensible Provisioning Protocol v1.0 protocol extension schema for relaying DNSSEC key material.
<element name "infData" type "keyrelay:infDataType
> <element name "authInfo" type "domain:authInfoType" /
> <element name "keyRelayData" type "keyrelay:keyRelayDataType" maxOccurs "
> <sequence> <element name "name" type "
> <element name "authInfo" type "domain:authInfoType" /
> <element name "keyRelayData" type "keyrelay:keyRelayDataType" maxOccurs "
> <element name "acID" type "
<element name "keyData" type "secDNS:
> <element name "absolute" type "dateTime" /
This document uses URNs to describe an XML namespace conforming to the registry mechanism described in [RFC3688].
The following URI assignment has been made by IANA:
See the "Authors' Addresses" section of this document.
: See the "Formal Syntax" section of this document.
This document uses URNs to describe an XML schema conforming to the registry mechanism described in [RFC3688].
The following URI assignment has been made by IANA:
See the "Formal Syntax" section of this document.
The EPP extension described in this document has been registered by IANA in the "Extensions for the Extensible Provisioning Protocol (EPP)" registry described in [RFC7451].
The details of the registration are as follows: Name of Extension: "Key Relay Mapping for the Extensible Provisioning Protocol" Document status:
RFC 8063 Registrant Name and Email Address: IESG,
A server SHOULD NOT perform any transformation on data under server management when processing a <keyrelay:create> command.
The intent of this command is to put DNSSEC key material on the poll queue of another client.
Exceptions to this recommendation are allowable only for the purposes of achieving interoperability with the different server policies that have already implemented this EPP extension.
Any EPP client can use this mechanism to put data on the message queue of another EPP client, allowing for the potential of a denial  of service attack.
However, this can and should be detected by the server.
A server MAY set a server policy that limits or rejects a <keyrelay:create> command if it detects that the mechanism is being abused.
For the <keyrelay:keyRelayData> data, a correct <domain:authInfo> element should be used as an indication that putting the key material on the receiving EPP clients poll queue is authorized by the  registrant  of that domain name.
The authorization of EPP clients to perform DNS changes is not covered in this document as it depends on registry specific policy.
A client that uses this mechanism to send DNSSEC key material to another client could verify through DNS that the DNSSEC key material is added to the authoritative zone of the domain.
This check can be used to verify that the DNSSEC key material has traveled end to end from the gaining DNS operator to the losing DNS operator.
This check does not tell anything about the DNSSEC chain of trust and can merely be used as a verification of a successful transfer of the DNSSEC key material.
