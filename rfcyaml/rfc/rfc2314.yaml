- title: __initial_text__
  contents:
  - "                 PKCS #10: Certification Request Syntax\n                   \
    \           Version 1.5\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Overview
  contents:
  - "Overview\n   This document describes a syntax for certification requests.\n"
- title: 1. Scope
  contents:
  - "1. Scope\n   A certification request consists of a distinguished name, a public\n\
    \   key, and optionally a set of attributes, collectively signed by the\n   entity\
    \ requesting certification. Certification requests are sent to a\n   certification\
    \ authority, who transforms the request to an X.509\n   public-key certificate,\
    \ or a PKCS #6 extended certificate. (In what\n   form the certification authority\
    \ returns the newly signed certificate\n   is outside the scope of this document.\
    \ A PKCS #7 message is one\n   possibility.)\n   The intention of including a\
    \ set of attributes is twofold: to provide\n   other information about a given\
    \ entity, such as the postal address to\n   which the signed certificate should\
    \ be returned if electronic mail is\n   not available, or a \"challenge password\"\
    \ by which the entity may\n   later request certificate revocation; and to provide\
    \ attributes for a\n   PKCS #6 extended certificate. A non-exhaustive list of\
    \ attributes is\n   given in PKCS #9.\n   Certification authorities may also require\
    \ non-electronic forms of\n   request and may return non-electronic replies. It\
    \ is expected that\n   descriptions of such forms, which are outside the scope\
    \ of this\n   document, will be available from the certification authority.\n\
    \   The preliminary intended application of this document is to support\n   PKCS\
    \ #7 cryptographic messages, but is expected that other\n   applications will\
    \ be developed.\n"
- title: 2. References
  contents:
  - "2. References\n   PKCS #1   RSA Laboratories. PKCS #1: RSA Encryption\n     \
    \        Standard. Version 1.5, November 1993.\n   PKCS #6   RSA Laboratories.\
    \ PKCS #6: Extended-Certificate\n             Syntax. Version 1.5, November 1993.\n\
    \   PKCS #7   RSA Laboratories. PKCS #7: Cryptographic Message\n             Syntax.\
    \ Version 1.5, November 1993.\n   PKCS #9   RSA Laboratories. PKCS #9: Selected\
    \ Attribute\n             Types. Version 1.1, November 1993.\n   RFC 1424  Kaliski,\
    \ B., \"Privacy Enhancement for\n             Internet Electronic Mail: Part IV:\
    \ Key\n             Certification and Related Services,\" RFC 1424,\n        \
    \     February 1993.\n   X.208     CCITT. Recommendation X.208: Specification\
    \ of\n             Abstract Syntax Notation One (ASN.1). 1988.\n   X.209     CCITT.\
    \ Recommendation X.209: Specification of\n             Basic Encoding Rules for\
    \ Abstract Syntax Notation\n             One (ASN.1). 1988.\n   X.500     CCITT.\
    \ Recommendation X.500: The Directory--\n             Overview of Concepts, Models\
    \ and\n             Services. 1988.\n   X.501     CCITT. Recommendation X.501:\
    \ The Directory--\n             Models. 1988.\n   X.509     CCITT. Recommendation\
    \ X.509: The Directory--\n             Authentication Framework. 1988.\n"
- title: 3. Definitions
  contents:
  - "3. Definitions\n   For the purposes of this document, the following definitions\
    \ apply.\n   AlgorithmIdentifier: A type that identifies an algorithm (by object\n\
    \   identifier) and any associated parameters. This type is defined in\n   X.509.\n\
    \   Attribute: A type that contains an attribute type (specified by\n   object\
    \ identifier) and one or more attribute values. This type is\n   defined in X.501.\n\
    \   ASN.1: Abstract Syntax Notation One, as defined in X.208.\n   BER: Basic Encoding\
    \ Rules, as defined in X.209.\n   Certificate: A type that binds an entity's distinguished\
    \ name to a\n   public key with a digital signature. This type is defined in X.509.\n\
    \   This type also contains the distinguished name of the certificate\n   issuer\
    \ (the signer), an issuer- specific serial number, the issuer's\n   signature\
    \ algorithm identifier, and a validity period.\n   DER: Distinguished Encoding\
    \ Rules for ASN.1, as defined in X.509,\n   Section 8.7.\n   Name: A type that\
    \ uniquely identifies or \"distinguishes\" objects in a\n   X.500 directory. This\
    \ type is defined in X.501.  In an X.509\n   certificate, the type identifies\
    \ the certificate issuer and the\n   entity whose public key is certified.\n"
- title: 4. Symbols and abbreviations
  contents:
  - "4. Symbols and abbreviations\n   No symbols or abbreviations are defined in this\
    \ document.\n"
- title: 5. General overview
  contents:
  - "5. General overview\n   The next section specifies certification request syntax.\n\
    \   This document exports one type, CertificationRequest.\n"
- title: 6. Certification request syntax
  contents:
  - "6. Certification request syntax\n   This section gives the syntax for certification\
    \ requests.\n   A certification request consists of three parts: \"certification\n\
    \   request information,\" a signature algorithm identifier, and a digital\n \
    \  signature on the certification request information. The certification\n   request\
    \ information consists of the entity's distinguished name, the\n   entity's public\
    \ key, and a set of attributes providing other\n   information about the entity.\n\
    \   The process by which a certification request is constructed involves\n   the\
    \ following steps:\n        1.   A CertificationRequestInfo value containing a\n\
    \             distinguished name, a public key, and optionally a set of\n    \
    \         attributes is constructed by an entity.\n        2.   The CertificationRequestInfo\
    \ value is signed with\n             the entity's private key. (See Section 6.2.)\n\
    \        3.   The CertificationRequestInfo value, a signature\n             algorithm\
    \ identifier, and the entity's signature are\n             collected together\
    \ into a CertificationRequest value,\n             defined below.\n   A certification\
    \ authority fulfills the request by verifying the\n   entity's signature, and,\
    \ if it is valid, constructing a X.509\n   certificate from the distinguished\
    \ name and public key, as well as an\n   issuer name, serial number, validity\
    \ period, and signature algorithm\n   of the certification authority's choice.\
    \ If the certification request\n   contains a PKCS #9 extended-certificate-attributes\
    \ attribute, the\n   certification authority also constructs a PKCS #6 extended\n\
    \   certificate from the X.509 certificate and the extended-certificate-\n   attributes\
    \ attribute value.\n   In what form the certification authority returns the new\
    \ certificate\n   is outside the scope of this document. One possibility is a\
    \ PKCS #7\n   cryptographic message with content type signedData, following the\n\
    \   degenerate case where there are no signers. The return message may\n   include\
    \ a certification path from the new certificate to the\n   certification authority.\
    \ It may also include other certificates such\n   as cross-certificates that the\
    \ certification authority considers\n   helpful, and it may include certificate-revocation\
    \ lists (CRLs).\n   Another possibility is that the certification authority inserts\
    \ the\n   new certificate into a central database.\n   This section is divided\
    \ into two parts. The first part describes the\n   certification-request-information\
    \ type CertificationRequestInfo, and\n   the second part describes the top-level\
    \ type CertificationRequest.\n   Notes.\n        1.   An entity would typically\
    \ send a certification\n             request after generating a public-key/private-key\
    \ pair, but\n             may also do so after a change in the entity's distinguished\n\
    \             name.\n        2.   The signature on the certification request\n\
    \             prevents an entity from requesting a certificate with\n        \
    \     another party's public key. Such an attack would give the\n            \
    \ entity the minor ability to pretend to be the originator of\n             any\
    \ message signed by the other party. This attack is\n             significant\
    \ only if the entity does not know the message\n             being signed, and\
    \ the signed part of the message does not\n             identify the signer. The\
    \ entity would still not be able to\n             decrypt messages intended for\
    \ the other party, of course.\n        3.   How the entity sends the certification\
    \ request to\n             a certification authority is outside the scope of this\n\
    \             document. Both paper and electronic forms are possible.\n      \
    \  4.   This document is not compatible with the\n             certification request\
    \ syntax for Privacy-Enhanced Mail, as\n             described in RFC 1424. The\
    \ syntax in this document differs\n             in three respects: It allows a\
    \ set of attributes; it does\n             not include issuer name, serial number,\
    \ or validity period;\n             and it does not require an \"innocuous\" message\
    \ to be\n             signed. The syntax in this document is designed to minimize\n\
    \             request size, an important constraint for those\n             certification\
    \ authorities accepting requests on paper.\n"
- title: 6.1 CertificationRequestInfo
  contents:
  - "6.1 CertificationRequestInfo\n   Certification request information shall have\
    \ ASN.1 type\n   CertificationRequestInfo:\n   CertificationRequestInfo ::= SEQUENCE\
    \ {\n     version Version,\n     subject Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n\
    \     attributes [0] IMPLICIT Attributes }\n   Version ::= INTEGER\n   Attributes\
    \ ::= SET OF Attribute\n   The fields of type CertificationRequestInfo have the\
    \ following\n   meanings:\n        o    version is the version number, for compatibility\n\
    \             with future revisions of this document. It shall be 0 for\n    \
    \         this version of the document.\n        o    subject is the distinguished\
    \ name of the\n             certificate subject (the entity whose public key is\
    \ to be\n             certified).\n        o    subjectPublicKeyInfo contains\
    \ information about\n             the public key being certified. The information\
    \ identifies\n             the entity's public-key algorithm (and any associated\n\
    \             parameters); examples of public-key algorithms include\n       \
    \      X.509's rsa and PKCS #1's rsaEncryption. The information\n            \
    \ also includes a bit-string representation of the entity's\n             public\
    \ key.  For both public-key algorithms just mentioned,\n             the bit string\
    \ contains the BER encoding of a value of\n             X.509/PKCS #1 type RSAPublicKey.\n\
    \        o    attributes is a set of attributes providing\n             additional\
    \ information about the subject of the\n             certificate. Some attribute\
    \ types that might be useful here\n             are defined in PKCS #9. An example\
    \ is the challenge-\n             password attribute, which specifies a password\
    \ by which the\n             entity may request that the certificate revocation.\
    \ Another\n             example is the extended-certificate-attributes attribute,\n\
    \             which specifies attributes for a PKCS #6 extended\n            \
    \ certificate.\n"
- title: 6.2 CertificationRequest
  contents:
  - "6.2 CertificationRequest\n   A certification request shall have ASN.1 type CertificationRequest:\n\
    \   CertificationRequest ::= SEQUENCE {\n     certificationRequestInfo CertificationRequestInfo,\n\
    \     signatureAlgorithm SignatureAlgorithmIdentifier,\n     signature Signature\
    \ }\n   SignatureAlgorithmIdentifier ::= AlgorithmIdentifier\n   Signature ::=\
    \ BIT STRING\n   The fields of type CertificationRequest have the following meanings:\n\
    \        o    certificateRequestInfo is the \"certification\n             request\
    \ information.\" It is the value being\n             signed.\n        o    signatureAlgorithm\
    \ identifies the signature\n             algorithm (and any associated parameters)\
    \ under\n             which the certification-request information is\n       \
    \      signed. Examples include PKCS #1's\n             md2WithRSAEncryption and\
    \ md5WithRSAEncryption.\n        o    signature is the result of signing the\n\
    \             certification request information with the\n             certification\
    \ request subject's private key.\n   The signature process consists of two steps:\n\
    \        1.   The value of the certificationRequestInfo field is\n           \
    \  DER encoded, yielding an octet string.\n        2.   The result of step 1 is\
    \ signed with the\n             certification request subject's private key under\n\
    \             the specified signature algorithm, yielding a bit\n            \
    \ string, the signature.\n   Note. The syntax for CertificationRequest could equivalently\
    \ be\n   written with the X.509 SIGNED macro:\n   CertificationRequest ::= SIGNED\
    \ CertificateRequestInfo\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed throughout this memo.\n"
- title: Revision history
  contents:
  - "Revision history\n   Version 1.0\n   Version 1.0 is the initial version.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is based on a contribution of RSA Laboratories,\
    \ a\n   division of RSA Data Security, Inc.  Any substantial use of the text\n\
    \   from this document must acknowledge RSA Data Security, Inc. RSA Data\n   Security,\
    \ Inc.  requests that all material mentioning or referencing\n   this document\
    \ identify this as \"RSA Data Security, Inc. PKCS #10\".\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Burt Kaliski\n   RSA Laboratories East\n   20 Crosby Drive\n\
    \   Bedford, MA  01730\n   Phone: (617) 687-7000\n   EMail: burt@rsa.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
