- contents:
  - "                      Generic YANG Data Model for\n Connection-Oriented Operations,
    Administration, and Maintenance (OAM)\n                               Protocols\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document presents a base YANG data model for connection-oriented\n
    \  Operations, Administration, and Maintenance (OAM) protocols.  It\n   provides
    a technology-independent abstraction of key OAM constructs\n   for such protocols.
    \ The model presented here can be extended to\n   include technology-specific
    details.  This guarantees uniformity in\n   the management of OAM protocols and
    provides support for nested OAM\n   workflows (i.e., performing OAM functions
    at different levels through\n   a unified interface).\n   The YANG data model
    in this document conforms to the Network\n   Management Datastore Architecture.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8531.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   5\n     2.1.  Abbreviations . . . . . . . . . . . . . . . . . . . . .
    .   6\n     2.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   7\n
    \    2.3.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   7\n   3.
    \ Architecture of Generic YANG Data Model for Connection-\n       Oriented OAM
    \ . . . . . . . . . . . . . . . . . . . . . . . .   7\n   4.  Overview of the
    Connection-Oriented OAM YANG Data Model . . .   8\n     4.1.  Maintenance Domain
    (MD) Configuration . . . . . . . . . .   9\n     4.2.  Maintenance Association
    (MA) Configuration  . . . . . . .  10\n     4.3.  Maintenance End Point (MEP)
    Configuration . . . . . . . .  11\n     4.4.  RPC Definitions . . . . . . . .
    . . . . . . . . . . . . .  11\n     4.5.  Notifications . . . . . . . . . . .
    . . . . . . . . . . .  14\n     4.6.  Monitor Statistics  . . . . . . . . . .
    . . . . . . . . .  14\n     4.7.  OAM Data Hierarchy  . . . . . . . . . . . .
    . . . . . . .  14\n   5.  OAM YANG Module . . . . . . . . . . . . . . . . . .
    . . . . .  19\n   6.  Base Mode . . . . . . . . . . . . . . . . . . . . . . .
    . . .  42\n     6.1.  MEP Address . . . . . . . . . . . . . . . . . . . . . .
    .  42\n     6.2.  MEP ID for Base Mode  . . . . . . . . . . . . . . . . . .  42\n
    \    6.3.  Maintenance Association . . . . . . . . . . . . . . . . .  42\n   7.
    \ Connection-Oriented OAM YANG Data Model Applicability . . . .  43\n     7.1.
    \ Generic YANG Data Model Extension for TRILL OAM . . . . .  43\n       7.1.1.
    \ MD Configuration Extension  . . . . . . . . . . . . .  43\n       7.1.2.  MA
    Configuration Extension  . . . . . . . . . . . . .  44\n       7.1.3.  MEP Configuration
    Extension . . . . . . . . . . . . .  45\n       7.1.4.  RPC Extension . . . .
    . . . . . . . . . . . . . . . .  46\n     7.2.  Generic YANG Data Model Extension
    for MPLS-TP OAM . . . .  46\n       7.2.1.  MD Configuration Extension  . . .
    . . . . . . . . . .  47\n       7.2.2.  MA Configuration Extension  . . . . .
    . . . . . . . .  48\n       7.2.3.  MEP Configuration Extension . . . . . . .
    . . . . . .  48\n   8.  Security Considerations . . . . . . . . . . . . . . .
    . . . .  49\n   9.  IANA Considerations . . . . . . . . . . . . . . . . . . .
    . .  50\n   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 50\n     10.1.  Normative References . . . . . . . . . . . . . . . . . .  50\n
    \    10.2.  Informative References . . . . . . . . . . . . . . . . .  51\n   Acknowledgments
    . . . . . . . . . . . . . . . . . . . . . . . . .  53\n   Contributors  . . .
    . . . . . . . . . . . . . . . . . . . . . . .  53\n   Authors' Addresses  . .
    . . . . . . . . . . . . . . . . . . . . .  54\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Operations, Administration, and Maintenance (OAM) are important\n
    \  networking functions that allow operators to:\n   1.  monitor network communications
    (i.e., reachability verification\n       and Continuity Check)\n   2.  troubleshoot
    failures (i.e., fault verification and localization)\n   3.  monitor service-level
    agreements and performance (i.e.,\n       performance management)\n   An overview
    of OAM tools is presented in [RFC7276].  Over the years,\n   many technologies
    have developed similar tools for fault and\n   performance management.\n   The
    different sets of OAM tools may support both connection-oriented\n   technologies
    or connectionless technologies.  In connection-oriented\n   technologies, a connection
    is established prior to the transmission\n   of data.  After the connection is
    established, no additional control\n   information such as signaling or operations
    and maintenance\n   information is required to transmit the actual user data.
    \ In\n   connectionless technologies, data is typically sent between\n   communicating
    endpoints without prior arrangement, but control\n   information is required to
    identify the destination (e.g., [G.800]).\n   The YANG data model for OAM protocols
    using connectionless\n   communications is specified in [RFC8532] and [IEEE802.1Q].\n
    \  Connectivity Fault Management as specified in [IEEE802.1Q] is a well-\n   established
    OAM standard that is widely adopted for Ethernet\n   networks.  ITU-T [G.8013],
    MEF Forum (MEF) Service OAM [MEF-17], MPLS\n   Transport Profile (MPLS-TP) [RFC6371],
    and Transparent\n   Interconnection of Lots of Links (TRILL) [RFC7455] all define
    OAM\n   mechanisms based on the manageability framework of Connectivity Fault\n
    \  Management (CFM) [IEEE802.1Q].\n   Given the wide adoption of the underlying
    OAM concepts defined in CFM\n   [IEEE802.1Q], it is a reasonable choice to develop
    the unified\n   management framework for connection-oriented OAM based on those\n
    \  concepts.  In this document, we take the CFM [IEEE802.1Q] model and\n   extend
    it to a technology-independent framework and define the\n   corresponding YANG
    data model accordingly.  The YANG data model\n   presented in this document is
    the base model for connection-oriented\n   OAM protocols and supports generic
    continuity check, connectivity\n   verification, and path discovery (traceroute).
    \ The generic YANG data\n   model for connection-oriented OAM is designed to be
    extensible to\n   other connection-oriented technologies.  Technology-dependent
    nodes\n   and remote procedure call (RPC) commands are defined in technology-\n
    \  specific YANG data models, which use and extend the base model\n   defined
    here.  As an example, Virtual eXtensible Local Area Network\n   (VXLAN) uses the
    source UDP port number for flow entropy, while TRILL\n   uses either (a) MAC addresses,
    (b) the VLAN tag or Fine-Grained\n   Label, and/or (c) IP addresses for flow entropy
    in the hashing for\n   multipath selection.  To capture this variation, corresponding
    YANG\n   data models would define the applicable structures as augmentation to\n
    \  the generic base model presented here.  This accomplishes three\n   goals:
    First, it keeps each YANG data model smaller and more\n   manageable.  Second,
    it allows independent development of\n   corresponding YANG data models.  Third,
    implementations can limit\n   support to only the applicable set of YANG data
    models (e.g., TRILL\n   RBridge may only need to implement the generic model and
    the TRILL\n   YANG data model).\n   The YANG data model presented in this document
    is generated at the\n   management layer.  Encapsulations and state machines may
    differ\n   according to each OAM protocol.  A user who wishes to issue a\n   Continuity
    Check command or a Loopback or initiate a performance\n   monitoring session can
    do so in the same manner, regardless of the\n   underlying protocol or technology
    or specific vendor implementation.\n   As an example, consider a scenario where
    connectivity from device A\n   loopback to device B fails.  Between device A and
    B there are IEEE\n   802.1 bridges a, b, and c.  Let's assume a, b, and c are
    using CFM\n   [IEEE802.1Q].  A user, upon detecting the loopback failure, may\n
    \  decide to drill down to the lower level at different segments of the\n   path
    and issue the corresponding fault verification (Loopback\n   Message) and fault
    isolation (Looktrace Message) tools, using the\n   same API.  This ability to
    drill down to a lower layer of the\n   protocol stack at a specific segment within
    a path for fault\n   localization and troubleshooting is referred to as \"nested
    OAM\n   workflow\".  It is a useful concept that leads to efficient network\n
    \  troubleshooting and maintenance workflows.  The connection-oriented\n   OAM
    YANG data model presented in this document facilitates that\n   without needing
    changes to the underlying protocols.\n   The YANG data model in this document
    conforms to the Network\n   Management Datastore Architecture defined in [RFC8342].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n   Many of the terms used in
    this document (including those set out in\n   Sections Section 2.1 and Section
    2.2) are specific to the world of\n   OAM.  This document does not attempt to
    explain the terms but does\n   assume that the reader is familiar with the concepts.
    \ For a good\n   overview, read [IEEE802.1Q].  For an example of how these OAM
    terms\n   appear in IETF work, see [RFC6371].\n"
  - contents:
    - "2.1.  Abbreviations\n   CCM   - Continuity Check Message [IEEE802.1Q]\n   ECMP
      \ - Equal-Cost Multipath\n   LBM   - Loopback Message [IEEE802.1Q]\n   LTM   -
      Linktrace Message [IEEE802.1Q]\n   MP    - Maintenance Point [IEEE802.1Q]\n
      \  MEP   - Maintenance End Point [RFC7174] (also known as Maintenance\n         association
      End Point [IEEE802.1Q] and MEG End Point [RFC6371])\n   MIP   - Maintenance
      Intermediate Point [RFC7174] (also known as\n         Maintenance domain Intermediate
      Point [IEEE802.1Q] and MEG\n         Intermediate Point [RFC6371])\n   MA    -
      Maintenance Association [IEEE802.1Q] [RFC7174]\n   MD    - Maintenance Domain
      [IEEE802.1Q]\n   MEG   - Maintenance Entity Group [RFC6371]\n   MTV   - Multi-destination
      Tree Verification Message\n   OAM   - Operations, Administration, and Maintenance
      [RFC6291]\n   TRILL - Transparent Interconnection of Lots of Links [RFC6325]\n
      \  CFM   - Connectivity Fault Management [RFC7174] [IEEE802.1Q]\n   RPC   -
      Remote Procedure Call\n   CC    - Continuity Check [RFC7276]\n   CV    - Connectivity
      Verification [RFC7276]\n"
    title: 2.1.  Abbreviations
  - contents:
    - "2.2.  Terminology\n   Continuity Checks  - Continuity Checks are used to verify
      that a\n      destination is reachable and therefore also are referred to as\n
      \     \"reachability verification\".\n   Connectivity Verification  - Connectivity
      Verification is used to\n      verify that a destination is connected.  It is
      also referred to as\n      \"path verification\" and used to verify not only
      that the two MPs\n      are connected, but also that they are connected through
      the\n      expected path, allowing detection of unexpected topology changes.\n
      \  Proactive OAM  - Proactive OAM refers to OAM actions that are carried\n      out
      continuously to permit proactive reporting of fault.  A\n      proactive OAM
      method requires persistent configuration.\n   On-demand OAM  - On-demand OAM
      refers to OAM actions that are\n      initiated via manual intervention for
      a limited time to carry out\n      diagnostics.  An on-demand OAM method requires
      only transient\n      configuration.\n"
    title: 2.2.  Terminology
  - contents:
    - "2.3.  Tree Diagrams\n   Tree diagrams used in this document follow the notation
      defined in\n   [RFC8340].\n"
    title: 2.3.  Tree Diagrams
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Architecture of Generic YANG Data Model for Connection-Oriented OAM\n   In
    this document, we define a generic YANG data model for connection-\n   oriented
    OAM protocols.  The YANG data model defined here is generic\n   in a sense that
    other technologies can extend it for technology-\n   specific needs.  The generic
    YANG data model for connection-oriented\n   OAM acts as the root for other OAM
    YANG data models.  This allows\n   users to traverse between different OAM protocols
    with ease through a\n   uniform API set.  This also enables a nested OAM workflow.
    \ Figure 1\n   depicts the relationship of different OAM YANG data models to the\n
    \  Generic YANG Data Model for connection-oriented OAM.  The Generic\n   YANG
    data model for connection-oriented OAM provides a framework\n   where technology-specific
    YANG data models can inherit constructs\n   from the base YANG data models without
    needing to redefine them\n   within the sub-technology.\n                            +-----------+\n
    \                           |Connection-|\n                            | Oriented
    \ |\n                            |  generic  |\n                            |
    OAM YANG  |\n                            +-+-+-+-+-+-+\n                                 |\n
    \                                |\n                                 |\n         +------------------------------------------+\n
    \        |                       |                  |\n     +-+-+-+-+-+          +-+-+-+-+-+
    \         +-+-+-+-+-+\n     | TRILL   |          | MPLS-TP |     . . .|  foo    |\n
    \    |OAM YANG |          |OAM YANG |          |OAM YANG |\n     +-+-+-+-+-+          +-+-+-+-+-+
    \         +-+-+-+-+-+\n           |                    |                  |\n
    \          |                    |              +-+-+-+-+-+\n           |                    |
    \        . . .|  foo    |\n           |                    |              |sub
    tech |\n           |                    |              +-+-+-+-+-+\n           |
    \                   |                  |\n           |                    |                  |\n
    \   +-------------------------------------------------------+\n    |                      Uniform
    API                      |\n    +-------------------------------------------------------+\n
    \  Figure 1: Relationship of OAM YANG Data Model to Generic (Base) YANG\n                                Data
    Model\n"
  title: 3.  Architecture of Generic YANG Data Model for Connection-Oriented OAM
- contents:
  - "4.  Overview of the Connection-Oriented OAM YANG Data Model\n   In this document,
    we adopt the concepts of the CFM [IEEE802.1Q] model\n   and structure such that
    it can be adapted to different connection-\n   oriented OAM protocols.\n   At
    the top of the model is the Maintenance Domain.  Each Maintenance\n   Domain is
    associated with a Maintenance Name and a Domain Level.\n   Under each Maintenance
    Domain, there is one or more Maintenance\n   Associations (MAs).  In TRILL, the
    MA can correspond to a Fine-\n   Grained Label.\n   Under each MA, there can be
    two or more MEPs (Maintenance End\n   Points).  MEPs are addressed by their respective
    technology-specific\n   address identifiers.  The YANG data model presented here
    provides\n   flexibility to accommodate different addressing schemes.\n   Commands
    are presented in the management protocol, which is\n   orthogonal to the Maintenance
    Domain.  These are RPC commands, in\n   YANG terms.  They provide uniform APIs
    for Continuity Check,\n   connectivity verification, path discovery (traceroute),
    and their\n   equivalents, as well as other OAM commands.\n   The OAM entities
    in the generic YANG data model defined here will be\n   either explicitly or implicitly
    configured using any of the OAM\n   tools.  The OAM tools used here are limited
    to the OAM toolset\n   specified in Section 5.1 of [RFC7276].  In order to facilitate
    a\n   zero-touch experience, this document defines a default mode of OAM.\n   The
    default mode of OAM is referred to as the \"Base Mode\" and\n   specifies default
    values for each of the model's parameters, such as\n   Maintenance Domain Level,
    Name of the Maintenance Association,\n   Addresses of MEPs, and so on.  The default
    values of these depend on\n   the technology.  Base Mode for TRILL is defined
    in [RFC7455].  Base\n   Mode for other technologies and future extensions developed
    in IETF\n   will be defined in their corresponding documents.\n   It is important
    to note that no specific enhancements are needed in\n   the YANG data model to
    support Base Mode.  Implementations that\n   comply with this document use, by
    default, the data nodes of the\n   applicable technology.  Data nodes of the Base
    Mode are read-only\n   nodes.\n"
  - contents:
    - "4.1.  Maintenance Domain (MD) Configuration\n   The container \"domains\" is
      the top-level container within the\n   \"gen-oam\" module.  Within the container
      \"domains\", a separate list is\n   maintained per MD.  The MD list uses the
      key \"md-name-string\" for\n   indexing.  The \"md-name-string\" is a leaf and
      derived from type\n   string.  Additional name formats as defined in [IEEE802.1Q],
      or other\n   standards, can be included by association of the \"md-name-format\"\n
      \  with an identity-ref.  The \"md-name-format\" indicates the format of\n   the
      augmented \"md-name\".  The \"md-name\" is presented as choice/case\n   construct.
      \ Thus, it is easily augmentable by derivative work.\n       module: ietf-connection-oriented-oam\n
      \      +--rw domains\n          +--rw domain* [technology md-name-string]\n
      \            +--rw technology        identityref\n             +--rw md-name-string
      \   md-name-string\n             +--rw md-name-format?   identityref\n             +--rw
      (md-name)?\n             |  +--:(md-name-null)\n             |     +--rw md-name-null?
      empty\n             +--rw md-level?           md-level\n             Snippet
      of Data Hierarchy Related to OAM Domains\n"
    title: 4.1.  Maintenance Domain (MD) Configuration
  - contents:
    - "4.2.  Maintenance Association (MA) Configuration\n   Within a given Maintenance
      Domain, there can be one or more\n   Maintenance Associations (MAs).  MAs are
      represented as a list and\n   indexed by the \"ma-name-string\".  Similar to
      \"md-name\" defined\n   previously, additional name formats can be added by
      augmenting the\n   name-format \"identity-ref\" and adding applicable case statements
      to\n   \"ma-name\".\n      module: ietf-connection-oriented-oam\n       +--rw
      domains\n          +--rw domain* [technology md-name-string]\n             .\n
      \            .\n             +--rw mas\n                +--rw ma* [ma-name-string]\n
      \                  +--rw ma-name-string          ma-name-string\n                   +--rw
      ma-name-format?         identityref\n                   +--rw (ma-name)?\n                   |
      \ +--:(ma-name-null)\n                   |     +--rw ma-name-null?     empty\n
      \   Snippet of Data Hierarchy Related to Maintenance Associations (MAs)\n"
    title: 4.2.  Maintenance Association (MA) Configuration
  - contents:
    - "4.3.  Maintenance End Point (MEP) Configuration\n   Within a given Maintenance
      Association (MA), there can be one or more\n   Maintenance End Points (MEPs).
      \ MEPs are represented as a list within\n   the data hierarchy and indexed by
      the key \"mep-name\".\n      module: ietf-connection-oriented-oam\n       +--rw
      domains\n          +--rw domain* [technology md-name-string]\n             +--rw
      technology                  identityref\n             .\n             .\n             +--rw
      mas\n                +--rw ma* [ma-name-string]\n                   .\n                   .\n
      \                  +--rw mep* [mep-name]\n                   |  +--rw mep-name
      \        mep-name\n                   |  +--rw (mep-id)?\n                   |
      \ |  +--:(mep-id-int)\n                   |  |     +--rw mep-id-int?      int32\n
      \                  |  +--rw mep-id-format?   identityref\n                   |
      \ +--rw (mep-address)?\n                   |  |  +--:(mac-address)\n                   |
      \ |  |  +--rw mac-address?     yang:mac-address\n                   |  |  +--:(ip-address)\n
      \                  |  |     +--rw ip-address?      inet:ip-address\n                     .
      \         .\n                     .          .\n                     .          .\n
      \    Snippet of Data Hierarchy Related to Maintenance End Point (MEP)\n"
    title: 4.3.  Maintenance End Point (MEP) Configuration
  - contents:
    - "4.4.  RPC Definitions\n   The RPC model facilitates issuing commands to a \"server\"
      (in this\n   case, to the device that need to execute the OAM command) and\n
      \  obtaining a response.  The RPC model defined here abstracts OAM-\n   specific
      commands in a technology-independent manner.\n   There are several RPC commands
      defined for the purpose of OAM.  In\n   this section, we present a snippet of
      the Continuity Check command\n   for illustration purposes.  Please refer to
      Section 4.5 for the\n   complete data hierarchy and Section 5 for the YANG module.\n
      \  module: ietf-connection-oriented-oam\n       +--rw domains\n             +--rw
      domain* [technology md-name-string]\n             +--rw technology        identityref\n
      \      .\n       .\n   rpcs:\n     +---x continuity-check {continuity-check}?\n
      \    |  +---w input\n     |  |  +---w technology?             identityref\n
      \    |  |  +---w md-name-string -> /domains/domain/md-name-string\n     |  |
      \ +---w md-level?      -> /domains/domain/md-level\n     |  |  +---w ma-name-string
      -> /domains/domain/mas/ma/ma-name-string\n     |  |  +---w cos-id?                 uint8\n
      \    |  |  +---w ttl?                    uint8\n     |  |  +---w sub-type?               identityref\n
      \    |  |  +---w source-mep?    -> /domains/domain/mas/ma/mep/mep-name\n     |
      \ |  +---w destination-mep\n     |  |  |  +---w (mep-address)?\n     |  |  |
      \ |  +--:(mac-address)\n     |  |  |  |  |  +---w mac-address?     yang:mac-address\n
      \    |  |  |  |  +--:(ip-address)\n     |  |  |  |     +---w ip-address?      inet:ip-address\n
      \    |  |  |  +---w (mep-id)?\n     |  |  |  |  +--:(mep-id-int)\n     |  |
      \ |  |     +---w mep-id-int?      int32\n     |  |  |  +---w mep-id-format?
      \  identityref\n     |  |  +---w count?                  uint32\n     |  |  +---w
      cc-transmit-interval?   time-interval\n     |  |  +---w packet-size?            uint32\n
      \    |  +--ro output\n     |     +--ro (monitor-stats)?\n     |        +--:(monitor-null)\n
      \    |           +--ro monitor-null?   empty\n     +---x continuity-verification
      {connectivity-verification}?\n     |  +---w input\n     |  |  +---w md-name-string
      -> /domains/domain/md-name-string\n     |  |  +---w md-level?      -> /domains/domain/md-level\n
      \    |  |  +---w ma-name-string -> /domains/domain/mas/ma/ma-name-string\n     |
      \ |  +---w cos-id?            uint8\n     |  |  +---w ttl?               uint8\n
      \    |  |  +---w sub-type?          identityref\n     |  |  +---w source-mep?
      \   -> /domains/domain/mas/ma/mep/mep-name\n     |  |  +---w destination-mep\n
      \    |  |  |  +---w (mep-address)?\n     |  |  |  |  +--:(mac-address)\n     |
      \ |  |  |  |  +---w mac-address?     yang:mac-address\n     |  |  |  |  +--:(ip-address)\n
      \    |  |  |  |     +---w ip-address?      inet:ip-address\n     |  |  |  +---w
      (mep-id)?\n     |  |  |  |  +--:(mep-id-int)\n     |  |  |  |     +---w mep-id-int?
      \     int32\n     |  |  |  +---w mep-id-format?   identityref\n     |  |  +---w
      count?             uint32\n     |  |  +---w interval?          time-interval\n
      \    |  |  +---w packet-size?       uint32\n     |  +--ro output\n     |     +--ro
      (monitor-stats)?\n     |        +--:(monitor-null)\n     |           +--ro monitor-null?
      \  empty\n     +---x traceroute {traceroute}?\n        +---w input\n        |
      \ +---w md-name-string -> /domains/domain/md-name-string\n        |  +---w md-level?
      \     -> /domains/domain/md-level\n        |  +---w ma-name-string -> /domains/domain/mas/ma/ma-name-string\n
      \       |  +---w cos-id?             uint8\n        |  +---w ttl?                uint8\n
      \       |  +---w command-sub-type?   identityref\n        |  +---w source-mep?
      \   -> /domains/domain/mas/ma/mep/mep-name\n        |  +---w destination-mep\n
      \       |  |  +---w (mep-address)?\n        |  |  |  +--:(mac-address)\n        |
      \ |  |  |  +---w mac-address?     yang:mac-address\n        |  |  |  +--:(ip-address)\n
      \       |  |  |     +---w ip-address?      inet:ip-address\n        |  |  +---w
      (mep-id)?\n        |  |  |  +--:(mep-id-int)\n        |  |  |     +---w mep-id-int?
      \     int32\n        |  |  +---w mep-id-format?   identityref\n        |  +---w
      count?              uint32\n        |  +---w interval?           time-interval\n
      \       +--ro output\n           +--ro response* [response-index]\n              +--ro
      response-index     uint8\n              +--ro ttl?               uint8\n              +--ro
      destination-mep\n              |  +--ro (mep-address)?\n              |  |  +--:(mac-address)\n
      \             |  |  |  +--ro mac-address?     yang:mac-address\n              |
      \ |  +--:(ip-address)\n              |  |     +--ro ip-address?      inet:ip-address\n
      \             |  +--ro (mep-id)?\n              |  |  +--:(mep-id-int)\n              |
      \ |     +--ro mep-id-int?      int32\n              |  +--ro mep-id-format?
      \  identityref\n              +--ro mip {mip}?\n              |  +--ro interface?
      \    if:interface-ref\n              |  +--ro (mip-address)?\n              |
      \    +--:(mac-address)\n              |     |  +--ro mac-address?   yang:mac-address\n
      \             |     +--:(ip-address)\n              |        +--ro ip-address?
      \   inet:ip-address\n              +--ro (monitor-stats)?\n                 +--:(monitor-null)\n
      \                   +--ro monitor-null?      empty\n      Snippet of Data Hierarchy
      Related to RPC Call Continuity-Check\n"
    title: 4.4.  RPC Definitions
  - contents:
    - "4.5.  Notifications\n   Notification is sent upon detecting a defect condition
      and upon\n   clearing a defect with a Maintenance Domain Name, MA Name, defect-\n
      \  type (the currently active defects), generating-mepid, and defect-\n   message
      to indicate more details.\n"
    title: 4.5.  Notifications
  - contents:
    - "4.6.  Monitor Statistics\n   Grouping for monitoring statistics is to be used
      by technology-\n   specific YANG modules that augment the generic YANG data
      model to\n   provide statistics due to proactive OAM-like Continuity Check\n
      \  Messages -- for example, CCM transmit, CCM receive, CCM error, etc.\n"
    title: 4.6.  Monitor Statistics
  - contents:
    - "4.7.  OAM Data Hierarchy\n   The complete data hierarchy related to the connection-oriented
      OAM\n   YANG data model is presented below.\n module: ietf-connection-oriented-oam\n
      \    +--rw domains\n        +--rw domain* [technology md-name-string]\n           +--rw
      technology        identityref\n           +--rw md-name-string    md-name-string\n
      \          +--rw md-name-format?   identityref\n           +--rw (md-name)?\n
      \          |  +--:(md-name-null)\n           |     +--rw md-name-null?     empty\n
      \          +--rw md-level?         md-level\n           +--rw mas\n              +--rw
      ma* [ma-name-string]\n                 +--rw ma-name-string    ma-name-string\n
      \                +--rw ma-name-format?   identityref\n                 +--rw
      (ma-name)?\n                 |  +--:(ma-name-null)\n                 |     +--rw
      ma-name-null?     empty\n                 +--rw (connectivity-context)?\n                 |
      \ +--:(context-null)\n                 |     +--rw context-null?     empty\n
      \                +--rw cos-id?           uint8\n                 +--rw cc-enable?
      \       boolean\n                 +--rw mep* [mep-name]\n                 |
      \ +--rw mep-name         mep-name\n                 |  +--rw (mep-id)?\n                 |
      \ |  +--:(mep-id-int)\n                 |  |     +--rw mep-id-int?      int32\n
      \                |  +--rw mep-id-format?   identityref\n                 |  +--rw
      (mep-address)?\n                 |  |  +--:(mac-address)\n                 |
      \ |  |  +--rw mac-address?     yang:mac-address\n                 |  |  +--:(ip-address)\n
      \                |  |     +--rw ip-address?      inet:ip-address\n                 |
      \ +--rw cos-id?          uint8\n                 |  +--rw cc-enable?       boolean\n
      \                |  +--rw session* [session-cookie]\n                 |     +--rw
      session-cookie             uint32\n                 |     +--rw destination-mep\n
      \                |     |  +--rw (mep-id)?\n                 |     |  |  +--:(mep-id-int)\n
      \                |     |  |     +--rw mep-id-int?      int32\n                 |
      \    |  +--rw mep-id-format?   identityref\n                 |     +--rw destination-mep-address\n
      \                |     |  +--rw (mep-address)?\n                 |     |     +--:(mac-address)\n
      \                |     |     |  +--rw mac-address?   yang:mac-address\n                 |
      \    |     +--:(ip-address)\n                 |     |        +--rw ip-address?
      \   inet:ip-address\n                 |     +--rw cos-id?                    uint8\n
      \                +--rw mip* [name] {mip}?\n                    +--rw name           string\n
      \                   +--rw interface?     if:interface-ref\n                    +--rw
      (mip-address)?\n                       +--:(mac-address)\n                       |
      \ +--rw mac-address?   yang:mac-address\n                       +--:(ip-address)\n
      \                         +--rw ip-address?    inet:ip-address\n   rpcs:\n     +---x
      continuity-check {continuity-check}?\n     |  +---w input\n     |  |  +---w
      technology?             identityref\n     |  |  +---w md-name-string -> /domains/domain/md-name-string\n
      \    |  |  +---w md-level?      -> /domains/domain/md-level\n     |  |  +---w
      ma-name-string -> /domains/domain/mas/ma/ma-name-string\n     |  |  +---w cos-id?
      \                uint8\n     |  |  +---w ttl?                    uint8\n     |
      \ |  +---w sub-type?               identityref\n     |  |  +---w source-mep?
      \   -> /domains/domain/mas/ma/mep/mep-name\n     |  |  +---w destination-mep\n
      \    |  |  |  +---w (mep-address)?\n     |  |  |  |  +--:(mac-address)\n     |
      \ |  |  |  |  +---w mac-address?     yang:mac-address\n     |  |  |  |  +--:(ip-address)\n
      \    |  |  |  |     +---w ip-address?      inet:ip-address\n     |  |  |  +---w
      (mep-id)?\n     |  |  |  |  +--:(mep-id-int)\n     |  |  |  |     +---w mep-id-int?
      \     int32\n     |  |  |  +---w mep-id-format?   identityref\n     |  |  +---w
      count?                  uint32\n     |  |  +---w cc-transmit-interval?   time-interval\n
      \    |  |  +---w packet-size?            uint32\n     |  +--ro output\n     |
      \    +--ro (monitor-stats)?\n     |        +--:(monitor-null)\n     |           +--ro
      monitor-null?   empty\n     +---x continuity-verification {connectivity-verification}?\n
      \    |  +---w input\n     |  |  +---w md-name-string -> /domains/domain/md-name-string\n
      \    |  |  +---w md-level?      -> /domains/domain/md-level\n     |  |  +---w
      ma-name-string -> /domains/domain/mas/ma/ma-name-string\n     |  |  +---w cos-id?
      \           uint8\n     |  |  +---w ttl?               uint8\n     |  |  +---w
      sub-type?          identityref\n     |  |  +---w source-mep?    -> /domains/domain/mas/ma/mep/mep-name\n
      \    |  |  +---w destination-mep\n     |  |  |  +---w (mep-address)?\n     |
      \ |  |  |  +--:(mac-address)\n     |  |  |  |  |  +---w mac-address?     yang:mac-address\n
      \    |  |  |  |  +--:(ip-address)\n     |  |  |  |     +---w ip-address?      inet:ip-address\n
      \    |  |  |  +---w (mep-id)?\n     |  |  |  |  +--:(mep-id-int)\n     |  |
      \ |  |     +---w mep-id-int?      int32\n     |  |  |  +---w mep-id-format?
      \  identityref\n     |  |  +---w count?             uint32\n     |  |  +---w
      interval?          time-interval\n     |  |  +---w packet-size?       uint32\n
      \    |  +--ro output\n     |     +--ro (monitor-stats)?\n     |        +--:(monitor-null)\n
      \    |           +--ro monitor-null?   empty\n     +---x traceroute {traceroute}?\n
      \       +---w input\n        |  +---w md-name-string -> /domains/domain/md-name-string\n
      \       |  +---w md-level?      -> /domains/domain/md-level\n        |  +---w
      ma-name-string -> /domains/domain/mas/ma/ma-name-string\n        |  +---w cos-id?
      \            uint8\n        |  +---w ttl?                uint8\n        |  +---w
      command-sub-type?   identityref\n        |  +---w source-mep?    -> /domains/domain/mas/ma/mep/mep-name\n
      \       |  +---w destination-mep\n        |  |  +---w (mep-address)?\n        |
      \ |  |  +--:(mac-address)\n        |  |  |  |  +---w mac-address?     yang:mac-address\n
      \       |  |  |  +--:(ip-address)\n        |  |  |     +---w ip-address?      inet:ip-address\n
      \       |  |  +---w (mep-id)?\n        |  |  |  +--:(mep-id-int)\n        |
      \ |  |     +---w mep-id-int?      int32\n        |  |  +---w mep-id-format?
      \  identityref\n        |  +---w count?              uint32\n        |  +---w
      interval?           time-interval\n        +--ro output\n           +--ro response*
      [response-index]\n              +--ro response-index     uint8\n              +--ro
      ttl?               uint8\n              +--ro destination-mep\n              |
      \ +--ro (mep-address)?\n              |  |  +--:(mac-address)\n              |
      \ |  |  +--ro mac-address?     yang:mac-address\n              |  |  +--:(ip-address)\n
      \             |  |     +--ro ip-address?      inet:ip-address\n              |
      \ +--ro (mep-id)?\n              |  |  +--:(mep-id-int)\n              |  |
      \    +--ro mep-id-int?      int32\n              |  +--ro mep-id-format?   identityref\n
      \             +--ro mip {mip}?\n              |  +--ro interface?     if:interface-ref\n
      \             |  +--ro (mip-address)?\n              |     +--:(mac-address)\n
      \             |     |  +--ro mac-address?   yang:mac-address\n              |
      \    +--:(ip-address)\n              |        +--ro ip-address?    inet:ip-address\n
      \             +--ro (monitor-stats)?\n                 +--:(monitor-null)\n
      \                   +--ro monitor-null?      empty\n   notifications:\n     +---n
      defect-condition-notification\n     |  +--ro technology?         identityref\n
      \    |  +--ro md-name-string -> /domains/domain/md-name-string\n     |  +--ro
      ma-name-string -> /domains/domain/mas/ma/ma-name-string\n     |  +--ro mep-name?
      \     -> /domains/domain/mas/ma/mep/mep-name\n     |  +--ro defect-type?        identityref\n
      \    |  +--ro generating-mepid\n     |  |  +--ro (mep-id)?\n     |  |  |  +--:(mep-id-int)\n
      \    |  |  |     +--ro mep-id-int?      int32\n     |  |  +--ro mep-id-format?
      \  identityref\n     |  +--ro (defect)?\n     |     +--:(defect-null)\n     |
      \    |  +--ro defect-null?        empty\n     |     +--:(defect-code)\n     |
      \       +--ro defect-code?        int32\n     +---n defect-cleared-notification\n
      \       +--ro technology?         identityref\n        +--ro md-name-string
      -> /domains/domain/md-name-string\n        +--ro ma-name-string -> /domains/domain/mas/ma/ma-name-string\n
      \       +--ro mep-name?      -> /domains/domain/mas/ma/mep/mep-name\n        +--ro
      defect-type?        identityref\n        +--ro generating-mepid\n        |  +--ro
      (mep-id)?\n        |  |  +--:(mep-id-int)\n        |  |     +--ro mep-id-int?
      \     int32\n        |  +--ro mep-id-format?   identityref\n        +--ro (defect)?\n
      \          +--:(defect-null)\n           |  +--ro defect-null?        empty\n
      \          +--:(defect-code)\n              +--ro defect-code?        int32\n
      \                          Data Hierarchy of OAM\n"
    title: 4.7.  OAM Data Hierarchy
  title: 4.  Overview of the Connection-Oriented OAM YANG Data Model
- contents:
  - "5.  OAM YANG Module\n   This module imports typedefs from [RFC6991] and [RFC8343],
    and it\n   references [RFC6371], [RFC6905], and [RFC7276].\n   <CODE BEGINS> file
    \"ietf-connection-oriented-oam@2019-04-16.yang\"\n"
  - "module ietf-connection-oriented-oam {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-connection-oriented-oam\";\n
    \ prefix co-oam;\n  import ietf-yang-types {\n    prefix yang;\n  }\n  import
    ietf-inet-types {\n    prefix inet;\n  }\n  import ietf-interfaces {\n    prefix
    if;\n  }\n  organization\n    \"IETF LIME Working Group\";\n  contact\n    \"WG
    Web:    http://datatracker.ietf.org/wg/lime\n     WG List:   <mailto:lime@ietf.org>\n
    \    Editor:    Deepak Kumar <dekumar@cisco.com>\n     Editor:    Qin Wu <bill.wu@huawei.com>\n
    \    Editor:    Michael Wang <wangzitao@huawei.com>\";\n  description\n    \"This
    YANG module defines the generic configuration,\n     statistics and RPC for connection-oriented
    OAM\n     to be used within IETF in a protocol-independent manner.\n     Functional-level
    abstraction is independent\n     with YANG modeling. It is assumed that each protocol\n
    \    maps corresponding abstracts to its native format.\n     Each protocol may
    extend the YANG data model defined\n     here to include protocol-specific extensions\n
    \    Copyright (c) 2019 IETF Trust and the persons identified as\n     authors
    of the code.  All rights reserved.\n     Redistribution and use in source and
    binary forms, with or\n     without modification, is permitted pursuant to, and
    subject\n     to the license terms contained in, the Simplified BSD License\n
    \    set forth in Section 4.c of the IETF Trust's Legal Provisions\n     Relating
    to IETF Documents\n     (http://trustee.ietf.org/license-info).\n     This version
    of this YANG module is part of RFC 8531; see\n     the RFC itself for full legal
    notices.\";\n  revision 2019-04-16 {\n    description\n      \"Initial revision.\";\n
    \   reference\n      \"RFC 8531: Generic YANG Data Model for Connection-\n       Oriented
    Operations, Administration, and Maintenance (OAM)\n       Protocols\";\n  }\n
    \ feature connectivity-verification {\n    description\n      \"This feature indicates
    that the server supports\n       executing a connectivity verification OAM command
    and\n       returning a response.  Servers that do not advertise\n       this
    feature will not support executing a\n       connectivity verification command
    or RPC model for a\n       connectivity verification command.\";\n  }\n  feature
    continuity-check {\n    description\n      \"This feature indicates that the server
    supports\n       executing a Continuity Check OAM command and\n       returning
    a response.  Servers that do not advertise\n       this feature will not support
    executing a\n       Continuity Check command or RPC model for a\n       Continuity
    Check command.\";\n  }\n  feature traceroute {\n    description\n      \"This
    feature indicates that the server supports\n       executing a traceroute OAM
    command and\n       returning a response.  Servers that do not advertise\n       this
    feature will not support executing a\n       traceroute command or RPC model for
    a\n       traceroute command.\";\n  }\n  feature mip {\n    description\n      \"This
    feature indicates that the Maintenance\n       Intermediate Point (MIP) needs
    to be explicitly configured\";\n  }\n  identity technology-types {\n    description\n
    \     \"This is the base identity of technology types that are\n       TRILL,
    MPLS-TP, etc.\";\n  }\n  identity command-sub-type {\n    description\n      \"Defines
    different RPC command subtypes,\n       e.g., TRILL OAM as specified in RFC 6905;
    this is\n       optional for most cases.\";\n    reference\n      \"RFC 6905:
    Requirements for OAM in Transparent\n       Interconnection of Lots of Links (TRILL)\";\n
    \ }\n  identity on-demand {\n    base command-sub-type;\n    description\n      \"On-demand
    activation indicates that the tool is activated\n       manually to detect a specific
    anomaly.\n       An on-demand OAM method requires only transient configuration.\";\n
    \   reference\n      \"RFC 7276: An Overview of Operations, Administration, and\n
    \      Maintenance (OAM) Tools\";\n  }\n  identity proactive {\n    base command-sub-type;\n
    \   description\n      \"Proactive activation indicates that the tool is activated
    on a\n       continual basis, where messages are sent periodically, and errors\n
    \      are detected when a certain number of expected messages are not\n       received.
    \ A proactive OAM method requires persistent\n       configuration.\";\n    reference\n
    \     \"RFC 7276: An Overview of Operations, Administration, and\n       Maintenance
    (OAM) Tools\";\n  }\n  identity name-format {\n    description\n      \"This defines
    the name format, CFM (IEEE 802.1Q) defines varying\n       styles of names.  It
    is expected that name format is an identity\n       reference to be extended with
    new types.\";\n  }\n  identity name-format-null {\n    base name-format;\n    description\n
    \     \"Defines name format as null.\";\n  }\n  identity identifier-format {\n
    \   description\n      \"Identifier-format identity can be augmented to define
    other\n       format identifiers used in MEP-ID, etc.\";\n  }\n  identity identifier-format-integer
    {\n    base identifier-format;\n    description\n      \"Defines identifier-format
    to be integer.\";\n  }\n  identity defect-types {\n    description\n      \"Defines
    different defect types, e.g.,\n       Remote Defect Indication (RDI), loss of
    continuity.\";\n  }\n  identity rdi {\n    base defect-types;\n    description\n
    \     \"The RDI indicates the\n       aggregate health of the remote Maintenance
    End Points (MEPs).\";\n  }\n  identity remote-mep-defect {\n    base defect-types;\n
    \   description\n      \"Indicates that one or more of the remote MEPs are\n       reporting
    a failure.\";\n  }\n  identity loss-of-continuity {\n    base defect-types;\n
    \   description\n      \"Indicates that there are no proactive Continuity Check
    (CC)\n       OAM packets from the source MEP (and in the case of\n       Connectivity
    Verification, this includes the requirement to have\n       the expected unique,
    technology-dependent source MEP identifier)\n       received within the interval.\";\n
    \   reference\n      \"RFC 6371: Operations, Administration, and Maintenance\n
    \      Framework for MPLS-Based Transport Networks\";\n  }\n  identity cv-defect
    {\n    base defect-types;\n    description\n      \"This function should support
    monitoring between the MEPs\n       and, in addition, between a MEP and MIP.  When
    performing\n       Connectivity Verification, the Continuity Check and\n       Connectivity
    Verification (CC-V) messages need to include\n       unique identification of
    the MEG that is being monitored and\n       the MEP that originated the message.\";\n
    \   reference\n      \"RFC 6371: Operations, Administration, and Maintenance\n
    \      Framework for MPLS-Based Transport Networks\";\n  }\n  identity invalid-oam-defect
    {\n    base defect-types;\n    description\n      \"Indicates that one or more
    invalid OAM messages have been\n       received and that 3.5 times that OAM message
    transmission\n       interval has not yet expired.\";\n  }\n  identity cross-connect-defect
    {\n    base defect-types;\n    description\n      \"Indicates that one or more
    cross-connect defect\n       (for example, a service ID does not match the VLAN)\n
    \      messages have been received and that 3.5 times that OAM message\n       transmission
    interval has not yet expired.\";\n  }\n  typedef mep-name {\n    type string;\n
    \   description\n      \"Generic administrative name for a MEP.\";\n  }\n  typedef
    time-interval {\n    type decimal64 {\n      fraction-digits 2;\n    }\n    units
    \"milliseconds\";\n    description\n      \"Time interval between packets in milliseconds.\n
    \      Time interval should not be less than 0.\n       0 means no packets are
    sent.\";\n  }\n  typedef md-name-string {\n    type string;\n    description\n
    \     \"Generic administrative name for Maintenance Domain (MD).\";\n  }\n  typedef
    ma-name-string {\n    type string;\n    description\n      \"Generic administrative
    name for a\n       Maintenance Association (MA).\";\n  }\n  typedef oam-counter32
    {\n    type yang:zero-based-counter32;\n    description\n      \"Define 32-bit
    counter for OAM.\";\n  }\n  typedef md-level {\n    type uint32 {\n      range
    \"0..255\";\n    }\n    description\n      \"Maintenance Domain Level.  The level
    may be restricted in\n       certain protocols (e.g., protocol in layer 0 to layer
    7).\";\n  }\n  grouping maintenance-domain-reference {\n    description\n      \"This
    grouping uniquely identifies a Maintenance Domain.\";\n    leaf maintenance-domain
    {\n      type leafref {\n        path \"/co-oam:domains/co-oam:domain/co-oam:md-name-string\";\n
    \     }\n      description\n        \"A reference to a specific Maintenance Domain.\";\n
    \   }\n  }\n  grouping maintenance-association-reference {\n    description\n
    \     \"This grouping uniquely identifies a\n       Maintenance Association.  It
    consists\n       of a maintenance-domain-reference and\n       a maintenance-association
    leafref.\";\n    uses maintenance-domain-reference;\n    leaf maintenance-association
    {\n      type leafref {\n        path \"/co-oam:domains/co-oam:domain[co-oam:md-name-string
    \"\n           + \"= current()/../maintenance-domain]/co-oam:mas\"\n           +
    \"/co-oam:ma/co-oam:ma-name-string\";\n      }\n      description\n        \"A
    reference to a specific Maintenance Association.\";\n    }\n  }\n  grouping maintenance-association-end-point-reference
    {\n    description\n      \"This grouping uniquely identifies\n       a Maintenance
    Association.  It consists\n       of a maintenance-association-reference and\n
    \      a maintenance-association-end-point leafref.\";\n    uses maintenance-association-reference;\n
    \   leaf maintenance-association-end-point {\n      type leafref {\n        path
    \"/co-oam:domains/co-oam:domain[co-oam:md-name-string \"\n           + \"= current()/../maintenance-domain]/co-oam:mas\"\n
    \          + \"/co-oam:ma[co-oam:ma-name-string = \"\n           + \"current()/../maintenance-association]\"\n
    \          + \"/co-oam:mep/co-oam:mep-name\";\n      }\n      description\n        \"A
    reference to a specific Maintenance\n         association End Point.\";\n    }\n
    \ }\n  grouping time-to-live {\n    leaf ttl {\n      type uint8;\n      description\n
    \       \"Time to Live.\";\n    }\n    description\n      \"Time to Live grouping.\";\n
    \ }\n  grouping defect-message {\n    choice defect {\n      case defect-null
    {\n        description\n          \"This is a placeholder when no defect status
    is needed.\";\n        leaf defect-null {\n          type empty;\n          description\n
    \           \"There is no defect to be defined; it will be defined in\n             a
    technology-specific model.\";\n        }\n      }\n      case defect-code {\n
    \       description\n          \"This is a placeholder to display defect code.\";\n
    \       leaf defect-code {\n          type int32;\n          description\n            \"Defect
    code is integer value specific to a technology.\";\n        }\n      }\n      description\n
    \       \"Defect Message choices.\";\n    }\n    description\n      \"Defect Message.\";\n
    \ }\n  grouping mep-address {\n    choice mep-address {\n      default \"ip-address\";\n
    \     case mac-address {\n        leaf mac-address {\n          type yang:mac-address;\n
    \         description\n            \"MAC Address.\";\n        }\n        description\n
    \         \"MAC Address based MEP Addressing.\";\n      }\n      case ip-address
    {\n        leaf ip-address {\n          type inet:ip-address;\n          description\n
    \           \"IP Address.\";\n        }\n        description\n          \"IP Address
    based MEP Addressing.\";\n      }\n      description\n        \"MEP Addressing.\";\n
    \   }\n    description\n      \"Grouping for MEP Address\";\n  }\n  grouping mip-address
    {\n    choice mip-address {\n      default \"ip-address\";\n      case mac-address
    {\n        leaf mac-address {\n          type yang:mac-address;\n          description\n
    \           \"MAC Address of Maintenance Intermediate Point\";\n        }\n        description\n
    \         \"MAC Address based MIP Addressing.\";\n      }\n      case ip-address
    {\n        leaf ip-address {\n          type inet:ip-address;\n          description\n
    \           \"IP Address.\";\n        }\n        description\n          \"IP Address
    based MIP Addressing.\";\n      }\n      description\n        \"MIP Addressing.\";\n
    \   }\n    description\n      \"MIP Address.\";\n  }\n  grouping maintenance-domain-id
    {\n    description\n      \"Grouping containing leaves sufficient to identify\n
    \      a Maintenance Domain.\";\n    leaf technology {\n      type identityref
    {\n        base technology-types;\n      }\n      mandatory true;\n      description\n
    \       \"Defines the technology.\";\n    }\n    leaf md-name-string {\n      type
    md-name-string;\n      mandatory true;\n      description\n        \"Defines the
    generic administrative Maintenance Domain name.\";\n    }\n  }\n  grouping md-name
    {\n    leaf md-name-format {\n      type identityref {\n        base name-format;\n
    \     }\n      description\n        \"Maintenance Domain Name format.\";\n    }\n
    \   choice md-name {\n      case md-name-null {\n        leaf md-name-null {\n
    \         when \"derived-from-or-self(../md-name-format,\"\n             + \"'name-format-null')\"
    {\n            description\n              \"MD name format is equal to null format.\";\n
    \         }\n          type empty;\n          description\n            \"MD name
    null.\";\n        }\n      }\n      description\n        \"MD name.\";\n    }\n
    \   description\n      \"MD name.\";\n  }\n  grouping ma-identifier {\n    description\n
    \     \"Grouping containing leaves sufficient to identify an MA.\";\n    leaf
    ma-name-string {\n      type ma-name-string;\n      description\n        \"MA
    name string.\";\n    }\n  }\n  grouping ma-name {\n    description\n      \"MA
    name.\";\n    leaf ma-name-format {\n      type identityref {\n        base name-format;\n
    \     }\n      description\n        \"MA name format.\";\n    }\n    choice ma-name
    {\n      case ma-name-null {\n        leaf ma-name-null {\n          when \"derived-from-or-self(../ma-name-format,\"\n
    \            + \"'name-format-null')\" {\n            description\n              \"MA.\";\n
    \         }\n          type empty;\n          description\n            \"Empty\";\n
    \       }\n      }\n      description\n        \"MA name.\";\n    }\n  }\n  grouping
    mep-id {\n    choice mep-id {\n      default \"mep-id-int\";\n      case mep-id-int
    {\n        leaf mep-id-int {\n          type int32;\n          description\n            \"MEP
    ID\n             in integer format.\";\n        }\n      }\n      description\n
    \       \"MEP ID.\";\n    }\n    leaf mep-id-format {\n      type identityref
    {\n        base identifier-format;\n      }\n      description\n        \"MEP
    ID format.\";\n    }\n    description\n      \"MEP ID.\";\n  }\n  grouping mep
    {\n    description\n      \"Defines elements within the MEP.\";\n    leaf mep-name
    {\n      type mep-name;\n      mandatory true;\n      description\n        \"Generic
    administrative name of the\n         MEP.\";\n    }\n    uses mep-id;\n    uses
    mep-address;\n  }\n  grouping monitor-stats {\n    description\n      \"Grouping
    for monitoring statistics; this will be augmented\n       by others who use this
    component.\";\n    choice monitor-stats {\n      default \"monitor-null\";\n      case
    monitor-null {\n        description\n          \"This is a placeholder when\n
    \          no monitoring statistics are needed.\";\n        leaf monitor-null
    {\n          type empty;\n          description\n            \"There are no monitoring
    statistics to be defined.\";\n        }\n      }\n      description\n        \"Define
    the monitor stats.\";\n    }\n  }\n  grouping connectivity-context {\n    description\n
    \     \"Grouping defining the connectivity context for an MA,\n       for example,
    an LSP for MPLS-TP.  This will be\n       augmented by each protocol that uses
    this component.\";\n    choice connectivity-context {\n      default \"context-null\";\n
    \     case context-null {\n        description\n          \"This is a placeholder
    when no context is needed.\";\n        leaf context-null {\n          type empty;\n
    \         description\n            \"There is no context to be defined.\";\n        }\n
    \     }\n      description\n        \"Connectivity context.\";\n    }\n  }\n  grouping
    cos {\n    description\n      \"Grouping for Priority used in transmitted packets,\n
    \      for example, in the CoS field in MPLS-TP.\";\n    leaf cos-id {\n      type
    uint8;\n      description\n        \"Class of Service (CoS) ID; this value is
    used to indicate\n         Class of Service information .\";\n    }\n  }\n  grouping
    mip-grouping {\n    uses mip-address;\n    description\n      \"Grouping for MIP\n
    \      configuration.\";\n  }\n  container domains {\n    description\n      \"Contains
    configuration related data.  Within the\n       container, there is a list of
    fault domains.  Each\n       domain has a list of MAs.\";\n    list domain {\n
    \     key \"technology md-name-string\";\n      description\n        \"Define
    a list of Domains within the\n         ietf-connection-oriented-oam module.\";\n
    \     uses maintenance-domain-id;\n      uses md-name;\n      leaf md-level {\n
    \       type md-level;\n        description\n          \"Define the MD level.\";\n
    \     }\n      container mas {\n        description\n          \"Contains configuration-related
    data.  Within the\n           container, there is a list of MAs.  Each MA has
    a\n           list of MEPs.\";\n        list ma {\n          key \"ma-name-string\";\n
    \         uses ma-identifier;\n          uses ma-name;\n          uses connectivity-context;\n
    \         uses cos {\n            description\n              \"Default class of
    service for this MA;\n               it may be overridden for particular MEPs,\n
    \              sessions, or operations.\";\n          }\n          leaf cc-enable
    {\n            type boolean;\n            description\n              \"Indicate
    whether the CC is enabled.\";\n          }\n          list mep {\n            key
    \"mep-name\";\n            description\n              \"Contain a list of MEPs.\";\n
    \           uses mep;\n            uses cos;\n            leaf cc-enable {\n              type
    boolean;\n              description\n                \"Indicate whether the CC
    is enabled.\";\n            }\n            list session {\n              key \"session-cookie\";\n
    \             description\n                \"Monitoring session to/from a particular
    remote MEP.\n                 Depending on the protocol, this could represent\n
    \                CC messages received from a single remote MEP (if the\n                 protocol
    uses multicast CCs) or a target to which\n                 unicast echo request
    CCs are sent and from which\n                 responses are received (if the protocol
    uses a\n                 unicast request/response mechanism).\";\n              leaf
    session-cookie {\n                type uint32;\n                description\n
    \                 \"Cookie to identify different sessions, when there\n                   are
    multiple remote MEPs or multiple sessions to\n                   the same remote
    MEP.\";\n              }\n              container destination-mep {\n                uses
    mep-id;\n                description\n                  \"Destination MEP.\";\n
    \             }\n              container destination-mep-address {\n                uses
    mep-address;\n                description\n                  \"Destination MEP
    Address.\";\n              }\n              uses cos;\n            }\n          }\n
    \         list mip {\n            if-feature \"mip\";\n            key \"name\";\n
    \           leaf name {\n              type string;\n              description\n
    \               \"Identifier of Maintenance Intermediate Point\";\n            }\n
    \           leaf interface {\n              type if:interface-ref;\n              description\n
    \               \"Interface.\";\n            }\n            uses mip-grouping;\n
    \           description\n              \"List for MIP.\";\n          }\n          description\n
    \           \"Maintenance Association list.\";\n        }\n      }\n    }\n  }\n
    \ notification defect-condition-notification {\n    description\n      \"When
    the defect condition is met, this notification is sent.\";\n    leaf technology
    {\n      type identityref {\n        base technology-types;\n      }\n      description\n
    \       \"The technology.\";\n    }\n    leaf md-name-string {\n      type leafref
    {\n        path \"/domains/domain/md-name-string\";\n      }\n      mandatory
    true;\n      description\n        \"Indicate which MD the defect belongs to.\";\n
    \   }\n    leaf ma-name-string {\n      type leafref {\n        path \"/domains/domain/mas/ma/ma-name-string\";\n
    \     }\n      mandatory true;\n      description\n        \"Indicate which MA
    the defect is associated with.\";\n    }\n    leaf mep-name {\n      type leafref
    {\n        path \"/domains/domain/mas/ma/mep/mep-name\";\n      }\n      description\n
    \       \"Indicate which MEP is seeing the defect.\";\n    }\n    leaf defect-type
    {\n      type identityref {\n        base defect-types;\n      }\n      description\n
    \       \"The currently active defects on the specific MEP.\";\n    }\n    container
    generating-mepid {\n      uses mep-id;\n      description\n        \"Indicate
    who is generating the defect (if known). If\n         unknown, set it to 0.\";\n
    \   }\n    uses defect-message {\n      description\n        \"Defect message
    to provide more details.\";\n    }\n  }\n  notification defect-cleared-notification
    {\n    description\n      \"When the defect is cleared, this notification is sent.\";\n
    \   leaf technology {\n      type identityref {\n        base technology-types;\n
    \     }\n      description\n        \"The technology.\";\n    }\n    leaf md-name-string
    {\n      type leafref {\n        path \"/domains/domain/md-name-string\";\n      }\n
    \     mandatory true;\n      description\n        \"Indicate which MD the defect
    belongs to\";\n    }\n    leaf ma-name-string {\n      type leafref {\n        path
    \"/domains/domain/mas/ma/ma-name-string\";\n      }\n      mandatory true;\n      description\n
    \       \"Indicate which MA the defect is associated with.\";\n    }\n    leaf
    mep-name {\n      type leafref {\n        path \"/domains/domain/mas/ma/mep/mep-name\";\n
    \     }\n      description\n        \"Indicate which MEP is seeing the defect.\";\n
    \   }\n    leaf defect-type {\n      type identityref {\n        base defect-types;\n
    \     }\n      description\n        \"The currently active defects on the specific
    MEP.\";\n    }\n    container generating-mepid {\n      uses mep-id;\n      description\n
    \       \"Indicate who is generating the defect (if known). If\n         unknown,
    set it to 0.\";\n    }\n    uses defect-message {\n      description\n        \"Defect
    message to provide more details.\";\n    }\n  }\n  rpc continuity-check {\n    if-feature
    \"continuity-check\";\n    description\n      \"Generates Continuity Check as
    per Table 4 of RFC 7276.\";\n    input {\n      leaf technology {\n        type
    identityref {\n          base technology-types;\n        }\n        description\n
    \         \"The technology.\";\n      }\n      leaf md-name-string {\n        type
    leafref {\n          path \"/domains/domain/md-name-string\";\n        }\n        mandatory
    true;\n        description\n          \"Indicate which MD the defect belongs to.\";\n
    \     }\n      leaf md-level {\n        type leafref {\n          path \"/domains/domain/md-level\";\n
    \       }\n        description\n          \"The Maintenance Domain Level.\";\n
    \     }\n      leaf ma-name-string {\n        type leafref {\n          path \"/domains/domain/mas/ma/ma-name-string\";\n
    \       }\n        mandatory true;\n        description\n          \"Indicate
    which MA the defect is associated with.\";\n      }\n      uses cos;\n      uses
    time-to-live;\n      leaf sub-type {\n        type identityref {\n          base
    command-sub-type;\n        }\n        description\n          \"Defines different
    command types.\";\n      }\n      leaf source-mep {\n        type leafref {\n
    \         path \"/domains/domain/mas/ma/mep/mep-name\";\n        }\n        description\n
    \         \"Source MEP.\";\n      }\n      container destination-mep {\n        uses
    mep-address;\n        uses mep-id {\n          description\n            \"Only
    applicable if the destination is a MEP.\";\n        }\n        description\n          \"Destination
    MEP.\";\n      }\n      leaf count {\n        type uint32;\n        default \"3\";\n
    \       description\n          \"Number of continuity-check messages to be sent.\";\n
    \     }\n      leaf cc-transmit-interval {\n        type time-interval;\n        description\n
    \         \"Time interval between echo requests.\";\n      }\n      leaf packet-size
    {\n        type uint32 {\n          range \"64..10000\";\n        }\n        description\n
    \         \"Size of continuity-check packets, in octets.\";\n      }\n    }\n
    \   output {\n      uses monitor-stats {\n        description\n          \"Stats
    of Continuity Check.\";\n      }\n    }\n  }\n  rpc continuity-verification {\n
    \   if-feature \"connectivity-verification\";\n    description\n      \"Generates
    Connectivity Verification as per Table 4 in RFC 7276.\";\n    input {\n      leaf
    md-name-string {\n        type leafref {\n          path \"/domains/domain/md-name-string\";\n
    \       }\n        mandatory true;\n        description\n          \"Indicate
    which MD the defect belongs to.\";\n      }\n      leaf md-level {\n        type
    leafref {\n          path \"/domains/domain/md-level\";\n        }\n        description\n
    \         \"The Maintenance Domain Level.\";\n      }\n      leaf ma-name-string
    {\n        type leafref {\n          path \"/domains/domain/mas/ma/ma-name-string\";\n
    \       }\n        mandatory true;\n        description\n          \"Indicate
    which MA the defect is associated with.\";\n      }\n      uses cos;\n      uses
    time-to-live;\n      leaf sub-type {\n        type identityref {\n          base
    command-sub-type;\n        }\n        description\n          \"Defines different
    command types.\";\n      }\n      leaf source-mep {\n        type leafref {\n
    \         path \"/domains/domain/mas/ma/mep/mep-name\";\n        }\n        description\n
    \         \"Source MEP.\";\n      }\n      container destination-mep {\n        uses
    mep-address;\n        uses mep-id {\n          description\n            \"Only
    applicable if the destination is a MEP.\";\n        }\n        description\n          \"Destination
    MEP.\";\n      }\n      leaf count {\n        type uint32;\n        default \"3\";\n
    \       description\n          \"Number of continuity-verification messages to
    be sent.\";\n      }\n      leaf interval {\n        type time-interval;\n        description\n
    \         \"Time interval between echo requests.\";\n      }\n      leaf packet-size
    {\n        type uint32 {\n          range \"64..10000\";\n        }\n        description\n
    \         \"Size of continuity-verification packets, in octets.\";\n      }\n
    \   }\n    output {\n      uses monitor-stats {\n        description\n          \"Stats
    of Continuity Check.\";\n      }\n    }\n  }\n  rpc traceroute {\n    if-feature
    \"traceroute\";\n    description\n      \"Generates Traceroute or Path Trace and
    returns response.\n       References RFC 7276 for common Toolset name -- for\n
    \      MPLS-TP OAM, it's Route Tracing, and for TRILL OAM, it's\n       Path Tracing
    tool.  Starts with TTL of one and increments\n       by one at each hop until
    the destination is reached or TTL\n       reaches max value.\";\n    input {\n
    \     leaf md-name-string {\n        type leafref {\n          path \"/domains/domain/md-name-string\";\n
    \       }\n        mandatory true;\n        description\n          \"Indicate
    which MD the defect belongs to.\";\n      }\n      leaf md-level {\n        type
    leafref {\n          path \"/domains/domain/md-level\";\n        }\n        description\n
    \         \"The Maintenance Domain Level.\";\n      }\n      leaf ma-name-string
    {\n        type leafref {\n          path \"/domains/domain/mas/ma/ma-name-string\";\n
    \       }\n        mandatory true;\n        description\n          \"Indicate
    which MA the defect is associated with.\";\n      }\n      uses cos;\n      uses
    time-to-live;\n      leaf command-sub-type {\n        type identityref {\n          base
    command-sub-type;\n        }\n        description\n          \"Defines different
    command types.\";\n      }\n      leaf source-mep {\n        type leafref {\n
    \         path \"/domains/domain/mas/ma/mep/mep-name\";\n        }\n        description\n
    \         \"Source MEP.\";\n      }\n      container destination-mep {\n        uses
    mep-address;\n        uses mep-id {\n          description\n            \"Only
    applicable if the destination is a MEP.\";\n        }\n        description\n          \"Destination
    MEP.\";\n      }\n      leaf count {\n        type uint32;\n        default \"1\";\n
    \       description\n          \"Number of traceroute probes to send.  In protocols
    where a\n           separate message is sent at each TTL, this is the number\n
    \          of packets to be sent at each TTL.\";\n      }\n      leaf interval
    {\n        type time-interval;\n        description\n          \"Time interval
    between echo requests.\";\n      }\n    }\n    output {\n      list response {\n
    \       key \"response-index\";\n        leaf response-index {\n          type
    uint8;\n          description\n            \"Arbitrary index for the response.
    \ In protocols that\n             guarantee there is only a single response at
    each TTL,\n             the TTL can be used as the response index.\";\n        }\n
    \       uses time-to-live;\n        container destination-mep {\n          description\n
    \           \"MEP from which the response has been received\";\n          uses
    mep-address;\n          uses mep-id {\n            description\n              \"Only
    applicable if the destination is a MEP.\";\n          }\n        }\n        container
    mip {\n          if-feature \"mip\";\n          leaf interface {\n            type
    if:interface-ref;\n            description\n              \"MIP interface.\";\n
    \         }\n          uses mip-address;\n          description\n            \"MIP
    responding with traceroute\";\n        }\n        uses monitor-stats {\n          description\n
    \           \"Stats of traceroute.\";\n        }\n        description\n          \"List
    of responses.\";\n      }\n    }\n  }\n"
  - "}\n   <CODE ENDS>\n"
  title: 5.  OAM YANG Module
- contents:
  - "6.  Base Mode\n   The Base Mode (\"default mode\" described in Section 4) defines
    the\n   default configuration that MUST be present in the devices that comply\n
    \  with this document.  Base Mode allows users to have a \"zero-touch\"\n   experience.
    \ Several parameters require technology-specific\n   definition.\n"
  - contents:
    - "6.1.  MEP Address\n   In the Base Mode of operation, the MEP Address is by
      default the IP\n   address of the interface on which the MEP is located.\n"
    title: 6.1.  MEP Address
  - contents:
    - "6.2.  MEP ID for Base Mode\n   In the Base Mode of operation, each device creates
      a single MEP\n   associated with a virtual OAM port with no physical layer (NULL
      PHY).\n   The MEP-ID associated with this MEP is zero (0).  The choice of\n
      \  MEP-ID of zero is explained below.\n   MEP-ID is a 2-octet field by default.
      \ It is never used on the wire\n   except when using CCM.  It is important to
      have a method that can\n   derive the MEP-ID of Base Mode in an automatic manner
      with no user\n   intervention.  The IP address cannot be directly used for this\n
      \  purpose, as the MEP-ID is a much smaller field.  For the Base Mode of\n   operation,
      MEP-ID is set to zero by default.\n   The CCM packet uses the MEP-ID in the
      payload.  CCM MUST NOT be used\n   in the Base Mode.  Hence, CCM MUST be disabled
      on the Maintenance\n   Association of the Base Mode.\n   If CCM is required,
      users MUST configure a separate Maintenance\n   Association and assign unique
      values for the corresponding MEP IDs.\n   CFM [IEEE802.1Q] defines MEP-ID as
      an unsigned integer in the range 1\n   to 8191.  In this document, we propose
      extending the range to 0 to\n   65535.  Value 0 is reserved for the MEP-ID in
      the Base Mode operation\n   and MUST NOT be used for other purposes.\n"
    title: 6.2.  MEP ID for Base Mode
  - contents:
    - "6.3.  Maintenance Association\n   The ID of the Maintenance Association (MA-ID)
      [IEEE802.1Q] has a\n   flexible format and includes two parts: Maintenance Domain
      Name and\n   Short MA name.  In the Base Mode of operation, the value of the\n
      \  Maintenance Domain Name must be the character string\n   \"GenericBaseMode\"
      (excluding the quotes).  In the Base Mode\n   operation, the Short MA Name format
      is set to a 2-octet integer\n   format (value 3 in Short MA Format field [IEEE802.1Q])
      and the Short\n   MA name is set to 65532 (0xFFFC).\n"
    title: 6.3.  Maintenance Association
  title: 6.  Base Mode
- contents:
  - "7.  Connection-Oriented OAM YANG Data Model Applicability\n   The \"ietf-connection-oriented-oam\"
    module defined in this document\n   provides a technology-independent abstraction
    of key OAM constructs\n   for connection-oriented protocols.  This module can
    be further\n   extended to include technology-specific details, e.g., adding new\n
    \  data nodes with technology-specific functions and parameters into\n   proper
    anchor points of the base model, so as to develop a\n   technology-specific connection-oriented
    OAM model.\n   This section demonstrates the usability of the connection-oriented\n
    \  YANG OAM data model to various connection-oriented OAM technologies,\n   e.g.,
    TRILL and MPLS-TP.  Note that, in this section, we only present\n   several snippets
    of technology-specific model extensions for\n   illustrative purposes.  The complete
    model extensions should be\n   worked on in respective protocol working groups.\n"
  - contents:
    - "7.1.  Generic YANG Data Model Extension for TRILL OAM\n   The TRILL OAM YANG
      module [TRILL-YANG-OAM] is augmenting the\n   connection-oriented OAM module
      for both configuration and RPC\n   commands.\n   In addition,the TRILL OAM YANG
      module also requires the base TRILL\n   module ([TRILL-YANG]) to be supported,
      as there is a strong\n   relationship between those modules.\n   The configuration
      extensions for connection-oriented OAM include the\n   MD configuration extension,
      technology type extension, MA\n   configuration extension, Connectivity-Context
      extension, MEP\n   Configuration extension, and ECMP extension.  In the RPC
      extension,\n   the continuity-check and path-discovery RPC are extended with
      TRILL-\n   specific parameters.\n"
    - contents:
      - "7.1.1.  MD Configuration Extension\n   MD level configuration parameters
        are management information that can\n   be inherited in the TRILL OAM model
        and set by the connection-\n   oriented base model as default values.  For
        example, domain name can\n   be set to area-ID in the TRILL OAM case.  In
        addition, at the\n   Maintenance Domain Level (i.e., at root level), the domain
        data node\n   can be augmented with technology type.\n   Note that MD level
        configuration parameters provide context\n   information for the management
        system to correlate faults, defects,\n   and network failures with location
        information; this helps quickly\n   identify root causes of network failures.\n"
      - contents:
        - "7.1.1.1.  Technology Type Extension\n   No TRILL technology type has been
          defined in the connection-oriented\n   base model.  Therefore, a technology
          type extension is required in\n   the TRILL OAM model.  The technology type
          \"trill\" is defined as an\n   identity that augments the base \"technology-types\"
          defined in the\n   connection-oriented base model:\n      identity trill{\n
          \      base co-oam:technology-types;\n       description\n        \"trill
          type\";\n      }\n"
        title: 7.1.1.1.  Technology Type Extension
      title: 7.1.1.  MD Configuration Extension
    - contents:
      - "7.1.2.  MA Configuration Extension\n   MA level configuration parameters
        are management information that can\n   be inherited in the TRILL OAM model
        and set by the connection-\n   oriented base model as default values.  In
        addition, at the\n   Maintenance Association (MA) level (i.e., at the second
        level), the\n   MA data node can be augmented with a connectivity-context
        extension.\n   Note that MA level configuration parameters provide context\n
        \  information for the management system to correlate faults, defects,\n   and
        network failures with location information; this helps quickly\n   identify
        root causes of network failures.\n"
      - contents:
        - "7.1.2.1.  Connectivity-Context Extension\n   In TRILL OAM, one example
          of connectivity-context is either a 12-bit\n   VLAN ID or a 24-bit Fine-Grained
          Label.  The connection-oriented base\n   model defines a placeholder for
          context-id.  This allows other\n   technologies to easily augment that to
          include technology-specific\n   extensions.  The snippet below depicts an
          example of augmenting\n   connectivity-context to include either a VLAN
          ID or Fine-Grained\n   Label.\n      augment /co-oam:domains/co-oam:domain\n
          \  /co-oam:mas/co-oam:ma/co-oam:connectivity-context:\n            +--:(connectivity-context-vlan)\n
          \           |  +--rw connectivity-context-vlan?   vlan\n            +--:(connectivity-context-fgl)\n
          \              +--rw connectivity-context-fgl?    fgl\n"
        title: 7.1.2.1.  Connectivity-Context Extension
      title: 7.1.2.  MA Configuration Extension
    - contents:
      - "7.1.3.  MEP Configuration Extension\n   The MEP configuration definition
        in the connection-oriented base\n   model already supports configuring the
        interface of MEP with either a\n   MAC address or IP address.  In addition,
        the MEP address can be\n   represented using a 2-octet RBridge Nickname in
        TRILL OAM.  Hence,\n   the TRILL OAM model augments the MEP configuration
        in the base model\n   to add a nickname case to the MEP address choice node
        as follows:\n   augment /co-oam:domains/co-oam:domain\n   /co-oam:mas/co-oam:ma/co-oam:mep/co-oam:mep-address:\n
        \           +--:( mep-address-trill)\n            |  +--rw mep-address-trill?
        \ tril-rb-nickname\n   In addition, at the Maintenance association End Point
        (MEP) level\n   (i.e., at the third level), the MEP data node can be augmented
        with\n   an ECMP extension.\n"
      - contents:
        - "7.1.3.1.  ECMP Extension\n   Since TRILL supports ECMP path selection,
          flow-entropy in TRILL is\n   defined as a 96-octet field in the Layer-Independent
          OAM Management\n   in the Multi-Layer Environment (LIME) model extension
          for TRILL OAM.\n   The snippet below illustrates its extension.\n      augment
          /co-oam:domains/co-oam:domain\n   /co-oam:mas/co-oam:ma/co-oam:mep:\n               +--rw
          flow-entropy-trill?   flow-entropy-trill\n      augment /co-oam:domains/co-oam:domain\n
          \  /co-oam:mas/co-oam:ma/co-oam:mep/co-oam:session:\n               +--rw
          flow-entropy-trill?   flow-entropy-trill\n"
        title: 7.1.3.1.  ECMP Extension
      title: 7.1.3.  MEP Configuration Extension
    - contents:
      - "7.1.4.  RPC Extension\n   In the TRILL OAM YANG data model, the continuity-check
        and path-\n   discovery RPC commands are extended with TRILL-specific requirements.\n
        \  The snippet below depicts an example of the TRILL OAM RPC extension.\n
        \     augment /co-oam:continuity-check/co-oam:input:\n            +--ro (out-of-band)?\n
        \           |  +--:(ipv4-address)\n            |  |  +--ro ipv4-address?      inet:ipv4-address\n
        \           |  +--:(ipv6-address)\n            |  |  +--ro ipv6-address?      inet:ipv6-address\n
        \           |  +--:(trill-nickname)\n            |     +--ro trill-nickname?
        \   tril-rb-nickname\n            +--ro diagnostic-vlan?   boolean\n      augment
        /co-oam:continuity-check/co-oam:input:\n               +--ro flow-entropy-trill?
        \  flow-entropy-trill\n      augment /co-oam:continuity-check/co-oam:output:\n
        \           +--ro upstream-rbridge?   tril-rb-nickname\n            +--ro
        next-hop-rbridge*   tril-rb-nickname\n      augment /co-oam:path-discovery/co-oam:input:\n
        \           +--ro (out-of-band)?\n            |  +--:(ipv4-address)\n            |
        \ |  +--ro ipv4-address?      inet:ipv4-address\n            |  +--:(ipv6-address)\n
        \           |  |  +--ro ipv6-address?      inet:ipv6-address\n            |
        \ +--:(trill-nickname)\n            |     +--ro trill-nickname?    tril-rb-nickname\n
        \           +--ro diagnostic-vlan?   boolean\n      augment /co-oam:path-discovery/co-oam:input:\n
        \              +--ro flow-entropy-trill?   flow-entropy-trill\n      augment
        /co-oam:path-discovery/co-oam:output/co-oam:response:\n            +--ro upstream-rbridge?
        \  tril-rb-nickname\n            +--ro next-hop-rbridge*   tril-rb-nickname\n"
      title: 7.1.4.  RPC Extension
    title: 7.1.  Generic YANG Data Model Extension for TRILL OAM
  - contents:
    - "7.2.  Generic YANG Data Model Extension for MPLS-TP OAM\n   The MPLS-TP OAM
      YANG module can augment the connection-oriented OAM\n   module with some technology-specific
      details.  [MPLS-TP-OAM-YANG]\n   presents the YANG data model for MPLS-TP OAM.\n
      \  The configuration extensions for connection-oriented OAM include the\n   MD
      configuration extension, Technology type extension, Technology\n   Subtype extension,
      MA configuration extension, and MEP Configuration\n   extension.\n"
    - contents:
      - "7.2.1.  MD Configuration Extension\n   MD level configuration parameters
        are management information that can\n   be inherited in the MPLS-TP OAM model
        and set by the connection-\n   oriented OAM base model as default values.
        \ For example, domain name\n   can be set to area-ID or the provider's Autonomous
        System Number\n   (ASN) [RFC6370] in the MPLS-TP OAM case.  In addition, at
        the\n   Maintenance Domain Level (i.e., at root level), the domain data node\n
        \  can be augmented with technology type and technology subtype.\n   Note
        that MD level configuration parameters provide context\n   information for
        the management system to correlate faults, defects,\n   and network failures
        with location information; this helps quickly\n   identify root causes of
        network failures\n"
      - contents:
        - "7.2.1.1.  Technology Type Extension\n   No MPLS-TP technology type has
          been defined in the connection-\n   oriented base model, hence it is required
          in the MPLS-TP OAM model.\n   The technology type \"mpls-tp\" is defined
          as an identity that augments\n   the base \"technology-types\" defined in
          the connection-oriented base\n   model:\n       identity mpls-tp{\n             base
          co-oam:technology-types;\n             description\n              \"mpls-tp
          type\";\n            }\n"
        title: 7.2.1.1.  Technology Type Extension
      - contents:
        - "7.2.1.2.  Technology Subtype Extension\n   In MPLS-TP, since different
          encapsulation types such as IP/UDP\n   encapsulation and PW-ACH encapsulation
          can be employed, the\n   \"technology-sub-type\" data node is defined and
          added into the MPLS-TP\n   OAM model to further identify the encapsulation
          types within the\n   MPLS-TP OAM model.  Based on it, we also define a technology
          subtype\n   for IP/UDP encapsulation and PW-ACH encapsulation.  Other\n
          \  encapsulation types can be defined in the same way.  The snippet\n   below
          depicts an example of several encapsulation types.\n   identity technology-sub-type
          {\n         description\n         \"Certain implementations can have different\n
          \         encapsulation types such as IP/UDP, PW-ACH, and so on.\n          Instead
          of defining separate models for each\n          encapsulation, we define
          a technology subtype to\n          further identify different encapsulations.\n
          \         Technology subtype is associated at the MA level.\"; }\n              identity
          technology-sub-type-udp {\n                base technology-sub-type;\n                description\n
          \                 \"Technology subtype is IP/UDP encapsulation.\";\n              }\n
          \             identity technology-sub-type-ach {\n                base technology-sub-type;\n
          \               description\n                  \"Technology subtype is PW-ACH
          encapsulation.\";\n              }\n              }\n         augment \"/co-oam:domains/co-oam:domain\"\n
          \              + \"/co-oam:mas/co-oam:ma\" {\n                leaf technology-sub-type
          {\n                  type identityref {\n                    base technology-sub-type;\n
          \                 }\n                }\n              }\n"
        title: 7.2.1.2.  Technology Subtype Extension
      title: 7.2.1.  MD Configuration Extension
    - contents:
      - "7.2.2.  MA Configuration Extension\n   MA level configuration parameters
        are management information that can\n   be inherited in the MPLS-TP OAM model
        and set by the connection-\n   oriented OAM base model as default values.
        \ Examples of MA Name are\n   MPLS-TP LSP MEG_ID, MEG Section ID, or MEG PW
        ID [RFC6370].\n   Note that MA level configuration parameters provide context\n
        \  information for the management system to correlate faults, defects,\n   and
        network failures with location information; this helps quickly\n   identify
        root causes of network failures.\n"
      title: 7.2.2.  MA Configuration Extension
    - contents:
      - "7.2.3.  MEP Configuration Extension\n   In MPLS-TP, MEP-ID is either a variable-length
        label value in case of\n   G-ACH encapsulation or a 2-octet unsigned integer
        value in case of\n   IP/UDP encapsulation.  One example of MEP-ID is MPLS-TP
        LSP_MEP_ID\n   [RFC6370].  In the connection-oriented base model, MEP-ID is
        defined\n   as a choice/case node that can support an int32 value, and the
        same\n   definition can be used for MPLS-TP with no further modification.
        \ In\n   addition, at the Maintenance association End Point (MEP) level (i.e.,\n
        \  at the third level), the MEP data node can be augmented with a\n   session
        extension and interface extension.\n"
      title: 7.2.3.  MEP Configuration Extension
    title: 7.2.  Generic YANG Data Model Extension for MPLS-TP OAM
  title: 7.  Connection-Oriented OAM YANG Data Model Applicability
- contents:
  - "8.  Security Considerations\n   The YANG module specified in this document defines
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The Network
    Configuration Access Control Model [RFC8341] provides the\n   means to restrict
    access for particular NETCONF or RESTCONF users to\n   a preconfigured subset
    of all available NETCONF or RESTCONF protocol\n   operations and content.\n   There
    are a number of data nodes defined in the YANG module that are\n   writable/creatable/deletable
    (i.e., config true, which is the\n   default).  These data nodes may be considered
    sensitive in some\n   network environments.  Write operations (e.g., edit-config)
    to these\n   data nodes without proper protection can have a negative effect on\n
    \  network operations.  These are the subtrees and data nodes and their\n   sensitivity/vulnerability:\n
    \  /co-oam:domains/co-oam:domain/\n   /co-oam:domains/co-oam:domain/co-oam:mas/co-oam:ma\n
    \  /co-oam:domains/co-oam:domain/co-oam:mas/co-oam:ma/co-oam:mep\n   /co-oam:domains/co-oam:domain/co-oam:mas/co-oam:ma/co-oam:mep/\n
    \  co-oam:session\n   Unauthorized access to any of these lists can adversely
    affect OAM\n   management system handling of end-to-end OAM and coordination of
    OAM\n   within underlying network layers.  This may lead to inconsistent\n   configuration,
    reporting, and presentation for the OAM mechanisms\n   used to manage the network.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   This document registers a URI in the \"IETF XML Registry\"
    [RFC3688].\n   The following registration has been made:\n     URI: urn:ietf:params:xml:ns:yang:ietf-connection-oriented-oam\n
    \    Registrant Contact: The IESG.\n     XML: N/A; the requested URI is an XML
    namespace.\n   This document registers a YANG module in the \"YANG Module Names\"\n
    \  registry [RFC6020].\n  name:         ietf-connection-oriented-oam\n  namespace:
    \   urn:ietf:params:xml:ns:yang:ietf-connection-oriented-oam\n  prefix:       co-oam\n
    \ reference:    RFC 8531\n"
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [IEEE802.1Q]\n              IEEE, \"IEEE Standard
      for Local and Metropolitan Area\n              Networks-Bridges and Bridged
      Networks\", IEEE Std 802.1Q.\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]
      \ Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC6370]  Bocci, M., Swallow, G., and E. Gray, \"MPLS Transport\n              Profile
      (MPLS-TP) Identifiers\", RFC 6370,\n              DOI 10.17487/RFC6370, September
      2011,\n              <https://www.rfc-editor.org/info/rfc6370>.\n   [RFC6991]
      \ Schoenwaelder, J., Ed., \"Common YANG Data Types\",\n              RFC 6991,
      DOI 10.17487/RFC6991, July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n
      \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8341]  Bierman, A. and M.
      Bjorklund, \"Network Configuration\n              Access Control Model\", STD
      91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n
      \  [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n              Management\",
      RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [G.800]    \"Unified functional architecture
      of transport networks\",\n              ITU-T Recommendation G.800, 2016.\n
      \  [G.8013]   \"OAM functions and mechanisms for Ethernet based\n              networks\",
      ITU-T Recommendation G.8013/Y.1731, 2013.\n   [MEF-17]   MEF Forum, \"Service
      OAM Requirements & Framework - Phase\n              1\", MEF 17, April 2007.\n
      \  [MPLS-TP-OAM-YANG]\n              Zhang, L., Zheng, L., Aldrin, S., and G.
      Mirsky, \"YANG\n              Data Model for MPLS-TP Operations, Administration,
      and\n              Maintenance (OAM)\", Work in Progress, draft-zhang-mpls-tp-\n
      \             yang-oam-05, October 2017.\n   [RFC6291]  Andersson, L., van Helvoort,
      H., Bonica, R., Romascanu,\n              D., and S. Mansfield, \"Guidelines
      for the Use of the \"OAM\"\n              Acronym in the IETF\", BCP 161, RFC
      6291,\n              DOI 10.17487/RFC6291, June 2011,\n              <https://www.rfc-editor.org/info/rfc6291>.\n
      \  [RFC6325]  Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani,
      \"Routing Bridges (RBridges): Base Protocol\n              Specification\",
      RFC 6325, DOI 10.17487/RFC6325, July 2011,\n              <https://www.rfc-editor.org/info/rfc6325>.\n
      \  [RFC6371]  Busi, I., Ed. and D. Allan, Ed., \"Operations,\n              Administration,
      and Maintenance Framework for MPLS-Based\n              Transport Networks\",
      RFC 6371, DOI 10.17487/RFC6371,\n              September 2011, <https://www.rfc-editor.org/info/rfc6371>.\n
      \  [RFC6905]  Senevirathne, T., Bond, D., Aldrin, S., Li, Y., and R.\n              Watve,
      \"Requirements for Operations, Administration, and\n              Maintenance
      (OAM) in Transparent Interconnection of Lots\n              of Links (TRILL)\",
      RFC 6905, DOI 10.17487/RFC6905, March\n              2013, <https://www.rfc-editor.org/info/rfc6905>.\n
      \  [RFC7174]  Salam, S., Senevirathne, T., Aldrin, S., and D. Eastlake\n              3rd,
      \"Transparent Interconnection of Lots of Links (TRILL)\n              Operations,
      Administration, and Maintenance (OAM)\n              Framework\", RFC 7174,
      DOI 10.17487/RFC7174, May 2014,\n              <https://www.rfc-editor.org/info/rfc7174>.\n
      \  [RFC7276]  Mizrahi, T., Sprecher, N., Bellagamba, E., and Y.\n              Weingarten,
      \"An Overview of Operations, Administration,\n              and Maintenance
      (OAM) Tools\", RFC 7276,\n              DOI 10.17487/RFC7276, June 2014,\n              <https://www.rfc-editor.org/info/rfc7276>.\n
      \  [RFC7455]  Senevirathne, T., Finn, N., Salam, S., Kumar, D., Eastlake\n              3rd,
      D., Aldrin, S., and Y. Li, \"Transparent\n              Interconnection of Lots
      of Links (TRILL): Fault\n              Management\", RFC 7455, DOI 10.17487/RFC7455,
      March 2015,\n              <https://www.rfc-editor.org/info/rfc7455>.\n   [RFC8340]
      \ Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP
      215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n
      \  [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and
      R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\",
      RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n
      \  [RFC8532]  Kumar, D., Wang, M., Wu, Q., Ed., Rahman, R., and\n              S.
      Raghavan, \"Generic YANG Data Model for the Management\n              of Operations,
      Administration, and Maintenance (OAM)\n              Protocols That Use Connectionless
      Communications\",\n              RFC 8532, DOI 10.17487/RFC8532, April 2019,\n
      \             <https://www.rfc-editor.org/info/rfc8532>.\n   [TRILL-YANG]\n
      \             Weiguo, H., Yizhou, L., Kumar, D., Durrani, M., Zhai, H.,\n              and
      L. Xia, \"TRILL YANG Data Model\", Work in Progress,\n              draft-ietf-trill-yang-04,
      December 2015.\n   [TRILL-YANG-OAM]\n              Kumar, D., Senevirathne,
      T., Finn, N., Salam, S., Xia, L.,\n              and H. Weiguo, \"YANG Data
      Model for TRILL Operations,\n              Administration, and Maintenance (OAM)\",
      Work in Progress,\n              draft-ietf-trill-yang-oam-05, March 2017.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgments\n   Giles Heron came up with the idea of developing a YANG data
    model as\n   a way of creating a unified OAM API set (interface); this document\n
    \  was largely inspired by that.  Alexander Clemm provided many valuable\n   tips,
    comments, and remarks that helped to refine the YANG data model\n   presented
    in this document.\n   Carlos Pignataro, David Ball, Mahesh Jethanandani, Benoit
    Claise,\n   Ladislav Lhotka, Jens Guballa, Yuji Tochio, Gregory Mirsky, Huub van\n
    \  Helvoort, Tom Taylor, Dapeng Liu, Mishael Wexler, and Adi Molkho\n   contributed
    to and participated in the development of this document.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   Tissa Senevirathne\n   Consultant\n   Email: tsenevir@gmail.com\n
    \  Norman Finn\n   CISCO Systems\n   510 McCarthy Blvd\n   Milpitas, CA  95035\n
    \  United States of America\n   Email: nfinn@cisco.com\n   Samer Salam\n   CISCO
    Systems\n   595 Burrard St. Suite 2123\n   Vancouver, BC  V7X 1J1\n   Canada\n
    \  Email: ssalam@cisco.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Deepak Kumar\n   CISCO Systems\n   510 McCarthy Blvd\n
    \  Milpitas, CA  95035\n   United States of America\n   Email: dekumar@cisco.com\n
    \  Qin Wu\n   Huawei\n   101 Software Avenue, Yuhua District\n   Nanjing, Jiangsu
    \ 210012\n   China\n   Email: bill.wu@huawei.com\n   Michael Wang\n   Huawei Technologies,
    Co., Ltd\n   101 Software Avenue, Yuhua District\n   Nanjing  210012\n   China\n
    \  Email: wangzitao@huawei.com\n"
  title: Authors' Addresses
