- contents:
  - "       An Extension to the Session Initiation Protocol (SIP) for\n                      Request
    History Information\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a standard mechanism for capturing the history\n
    \  information associated with a Session Initiation Protocol (SIP)\n   request.
    \ This capability enables many enhanced services by providing\n   the information
    as to how and why a SIP request arrives at a specific\n   application or user.
    \ This document defines an optional SIP header\n   field, History-Info, for capturing
    the history information in\n   requests.  The document also defines SIP header
    field parameters for\n   the History-Info and Contact header fields to tag the
    method by which\n   the target of a request is determined.  In addition, this\n
    \  specification defines a value for the Privacy header field that\n   directs
    the anonymization of values in the History-Info header field.\n   This document
    obsoletes RFC 4244.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7044.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n   2.  Conventions and Terminology . . . . . . . . . . . . . .
    . . .   4\n   3.  Background  . . . . . . . . . . . . . . . . . . . . . . . .
    .   5\n   4.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   6\n
    \  5.  History-Info Header Field Protocol Structure  . . . . . . . .   7\n     5.1.
    \ History-Info Header Field Example Scenario  . . . . . . .  10\n   6.  User Agent
    Handling of the History-Info Header Field  . . . .  12\n     6.1.  User Agent
    Client (UAC) Behavior  . . . . . . . . . . . .  12\n     6.2.  User Agent Server
    (UAS) Behavior  . . . . . . . . . . . .  12\n     6.3.  Back-to-Back User Agent
    (B2BUA) Behavior  . . . . . . . .  12\n   7.  Proxy/Intermediary Handling of History-Info
    Header Fields . .  13\n   8.  Redirect Server Handling of History-Info Header
    Fields  . . .  13\n   9.  Handling of History-Info Header Fields in Requests and\n
    \      Responses . . . . . . . . . . . . . . . . . . . . . . . . . .  14\n     9.1.
    \ Receiving a Request . . . . . . . . . . . . . . . . . . .  14\n     9.2.  Sending
    a Request with History-Info . . . . . . . . . . .  14\n     9.3.  Receiving a
    Response with History-Info or Request\n           Timeouts  . . . . . . . . .
    . . . . . . . . . . . . . . .  15\n     9.4.  Sending History-Info in Responses
    . . . . . . . . . . . .  16\n   10. Processing the History-Info Header Field  .
    . . . . . . . . .  16\n     10.1.  Privacy in the History-Info Header Field .
    . . . . . . .  16\n       10.1.1.  Indicating Privacy . . . . . . . . . . . .
    . . . . .  16\n       10.1.2.  Applying Privacy . . . . . . . . . . . . . . .
    . . .  17\n     10.2.  Reason in the History-Info Header Field  . . . . . . .
    .  18\n     10.3.  Indexing in the History-Info Header Field  . . . . . . .  19\n
    \    10.4.  Mechanism for Target Determination in the History-Info\n            Header
    Field . . . . . . . . . . . . . . . . . . . . . .  21\n   11. Application Considerations
    \ . . . . . . . . . . . . . . . . .  22\n   12. Application-Specific Usage  .
    . . . . . . . . . . . . . . . .  24\n     12.1.  PBX Voicemail  . . . . . . .
    . . . . . . . . . . . . . .  24\n     12.2.  Consumer Voicemail . . . . . . .
    . . . . . . . . . . . .  25\n   13. Security Considerations . . . . . . . . .
    . . . . . . . . . .  25\n   14. IANA Considerations . . . . . . . . . . . . .
    . . . . . . . .  26\n     14.1.  Registration of New SIP History-Info Header Field
    \ . . .  26\n     14.2.  Registration of \"history\" for SIP Privacy Header Field
    .  27\n     14.3.  Registration of Header Field Parameters  . . . . . . . .  27\n
    \  15. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  27\n   16.
    Changes from RFC 4244 . . . . . . . . . . . . . . . . . . . .  28\n     16.1.
    \ Backwards Compatibility  . . . . . . . . . . . . . . . .  29\n   17. References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  31\n     17.1.  Normative
    References . . . . . . . . . . . . . . . . . .  31\n     17.2.  Informative References
    . . . . . . . . . . . . . . . . .  31\n   Appendix A.  Request History Requirements
    . . . . . . . . . . . .  33\n     A.1.  Security Requirements . . . . . . . .
    . . . . . . . . . .  34\n     A.2.  Privacy Requirements  . . . . . . . . . .
    . . . . . . . .  35\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Many services that SIP is anticipated to support require
    the ability\n   to determine why and how a SIP request arrived at a specific\n
    \  application.  Examples of such services include (but are not limited\n   to)
    sessions initiated to call centers via \"click to talk\" SIP\n   Uniform Resource
    Locators (URLs) on a web page, \"call history/\n   logging\"-style services within
    intelligent \"call management\" software\n   for SIP user agents (UAs), and calls
    to voicemail servers.  Although\n   SIP implicitly provides the retarget capabilities
    that enable SIP\n   requests to be routed to chosen applications, there is a need
    for a\n   standard mechanism within SIP for communicating the retargeting\n   history
    of the requests.  This request history information allows the\n   receiving application
    to obtain information about how and why the SIP\n   request arrived at the application/user.\n
    \  This document defines a SIP header field, History-Info, to provide a\n   standard
    mechanism for capturing the request history information to\n   enable a wide variety
    of services for networks and end-users.  SIP\n   header field parameters are defined
    for the History-Info and Contact\n   header fields to tag the method by which
    the target of a request is\n   determined.  This specification also defines a
    value, \"history\", for\n   the Privacy header field.  In addition, a SIP option
    tag, \"histinfo\",\n   is defined.\n   The History-Info header field provides
    a building block for\n   development of SIP-based applications and services.  The
    requirements\n   for the solution described in this specification are included
    in\n   Appendix A.  Example scenarios using the History-Info header field\n   are
    available in [CALLFLOWS].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n
    \  The term \"retarget\" is used in this specification to refer to the\n   process
    of a SIP entity changing the Request-URI (Section 7.1 of\n   [RFC3261]) in a request
    based on the rules for determining request\n   targets as described in Section
    16.5 of [RFC3261] and of the\n   subsequent forwarding of that request as described
    in step 2 in\n   Section 16.6 of [RFC3261].  This includes changing the Request-URI\n
    \  due to a location service lookup and redirect processing.  This also\n   includes
    internal (to a proxy/SIP intermediary) changes of the URI\n   prior to the forwarding
    of the request.\n   The terms \"location service\", \"forward\", \"redirect\",
    and \"AOR\"\n   (address-of-record) are used consistently with the terminology
    in\n   [RFC3261].\n   The term \"target user\" is used in this specification as
    the human\n   user associated with one or more particular AORs (in case the human\n
    \  user has multiple aliases).\n   The references to \"domain for which the SIP
    entity/proxy/intermediary\n   is responsible\" are consistent with and intended
    to convey the same\n   context as the usage of that terminology in [RFC3261].
    \ The\n   applicability of History-Info to architectures or models outside the\n
    \  context of [RFC3261] is outside the scope of this specification.\n"
  title: 2.  Conventions and Terminology
- contents:
  - "3.  Background\n   SIP implicitly provides retargeting capabilities that enable
    SIP\n   requests to be routed to specific applications as defined in\n   [RFC3261].
    \ The motivation for capturing the request history is that\n   in the process
    of retargeting a request, old routing information can\n   be forever lost.  This
    lost information may be important history that\n   allows elements to which the
    request is retargeted to process the\n   request in a locally defined, application-specific
    manner.  This\n   document defines a mechanism for transporting the request history.\n
    \  Application-specific behavior is outside the scope of this\n   specification.\n
    \  Current network applications for other protocols provide the ability\n   for
    elements involved with the request to obtain additional\n   information relating
    to how and why the request was routed to a\n   particular destination.  The following
    are examples of such\n   applications:\n   1.  Web \"referral\" applications,
    whereby an application residing\n       within a web server determines that a
    visitor to a website has\n       arrived at the site via an \"associate\" site
    that will receive\n       some \"referral\" commission for generating this traffic.\n
    \  2.  Email relaying whereby the recipient obtains a detailed \"trace of\n       the
    path\" of the message from originator to receiver, including\n       the time
    of each relay.\n   3.  Traditional telephony services such as voicemail, call-center\n
    \      \"automatic call distribution\", and \"follow me\"-style services.\n   Several
    of the aforementioned applications currently define\n   application-specific mechanisms
    through which it is possible to\n   obtain the necessary history information.\n
    \  In addition, request history information could be used to enhance\n   basic
    SIP functionality by providing the following:\n   o  Some diagnostic information
    for debugging SIP requests.\n   o  Capturing aliases and Globally Routable User
    Agent URIs (GRUUs)\n      [RFC5627], which can be overwritten by a registrar or
    a \"home\n      proxy\" (a proxy serving as the terminal point for routing an\n
    \     address-of-record) upon receipt of the initial request.\n   o  Facilitating
    the use of limited use addresses (minted on demand)\n      and sub-addressing.\n
    \  o  Preserving service-specific URIs that can be overwritten by a\n      downstream
    proxy, such as those defined in [RFC3087], and control\n      of network announcements
    and Interactive Voice Response (IVR) with\n      a SIP URI [RFC4240].\n"
  title: 3.  Background
- contents:
  - "4.  Overview\n   The fundamental functionality provided by the request history\n
    \  information is the ability to inform proxies and user agents (UAs)\n   involved
    in processing a request about the history or progress of\n   that request.  The
    solution is to capture the Request-URIs, as a\n   request is retargeted, in a
    SIP header field: History-Info.  This\n   allows for the capturing of the history
    of a request that would be\n   lost with the normal SIP processing involved in
    the subsequent\n   retargeting of the request.\n   The History-Info header field
    is added to a request when a new\n   request is created by a User Agent Client
    (UAC) or forwarded by a\n   proxy, or when the target of a request is changed.
    \ It is possible\n   for the target of a request to be changed by the same proxy/SIP\n
    \  intermediary multiple times (referred to as 'internal retargeting').\n   A
    SIP entity changing the target of a request in response to a\n   redirect also
    propagates any History-Info header field from the\n   initial request in the new
    request.  The ABNF and detailed\n   description of the History-Info header field
    parameters, along with\n   examples, are provided in Section 5.  Sections 6, 7,
    and 8 provide\n   the detailed handling of the History-Info header field by SIP
    user\n   agents, proxies, and redirect servers, respectively.\n   This specification
    also defines three new SIP header field\n   parameters, \"rc\", \"mp\", and \"np\",
    for the History-Info and Contact\n   header fields to tag the method by which
    the target of a request is\n   determined.  Further detail on the use of these
    header field\n   parameters is provided in Section 5.\n   This specification also
    defines a priv-value for the Privacy header,\n   \"history\"; it requires anonymization
    of all the History-Info header\n   field entries in a request or to a specific
    History-Info header field\n   value (hi-entry) as described below.  Further detail
    is provided in\n   Section 10.1.\n   In addition, a SIP option tag, \"histinfo\",
    is defined.  The use of\n   this option tag is described in Section 6.1.\n"
  title: 4.  Overview
- contents:
  - "5.  History-Info Header Field Protocol Structure\n   The History-Info header
    field defined in this specification defines\n   the usage in out-of-dialog requests
    or initial requests for a dialog\n   (e.g., INVITE, REGISTER, MESSAGE, REFER and
    OPTIONS, PUBLISH and\n   SUBSCRIBE, etc.) and any non-100 provisional or final
    responses to\n   these requests.\n   The following provides details for the information
    that is captured\n   in the History-Info header field entries for each target
    used for\n   forwarding a request.\n   o  hi-targeted-to-uri: A mandatory parameter
    for capturing the\n      Request-URI for the specific request as it is forwarded.\n
    \  o  hi-index: A mandatory parameter for History-Info reflecting the\n      chronological
    order of the information, indexed to reflect the\n      forking and retargeting
    of requests.  The format for this\n      parameter is a sequence of nonnegative
    integers, separated by dots\n      to indicate the number of forward hops and
    retargets.  This\n      results in a tree representation of the history of the
    request,\n      with the lowest-level index reflecting a leaf.  By adding the
    new\n      entries in chronological order (i.e., following existing entries\n
    \     per the details in Section 10.3), including the index and sending\n      the
    messages using a secure transport, the ordering of the\n      History-Info header
    fields in the request is assured.  In\n      addition, applications may extract
    a variety of metrics (total\n      number of retargets, total number of retargets
    from a specific\n      branch, etc.) based upon the index values.\n   o  hi-target-param:
    An optional parameter reflecting the mechanism by\n      which the Request-URI
    captured in the hi-targeted-to-uri in the\n      History-Info header field value
    (hi-entry) was determined.  This\n      parameter is either an \"rc\", \"mp\",
    or \"np\" header field parameter,\n      which is interpreted as follows:\n         \"rc\":
    The hi-targeted-to-URI represents a change in\n         Request-URI, while the
    target user remains the same.  This\n         occurs, for example, when the user
    has multiple AORs as an\n         alias.  The \"rc\" header field parameter contains
    the value of\n         the hi-index in the hi-entry with an hi-targeted-to-uri
    that\n         reflects the Request-URI that was retargeted.\n         \"mp\":
    The hi-targeted-to-URI represents a user other than the\n         target user
    associated with the Request-URI in the incoming\n         request that was retargeted.
    \ This occurs when a request is\n         statically or dynamically retargeted
    to another user\n         represented by an AOR unassociated with the AOR of the
    original\n         target user.  The \"mp\" header field parameter contains the\n
    \        value of the hi-index in the hi-entry with an\n         hi-targeted-to-uri
    that reflects the Request-URI that was\n         retargeted, thus identifying
    the \"mapped from\" target.\n         \"np\": The hi-targeted-to-URI represents
    that there was no\n         change in the Request-URI.  This would apply, for
    example, when\n         a proxy merely forwards a request to a next-hop proxy
    and loose\n         routing is used.  The \"np\" header field parameter contains
    the\n         value of the hi-index in the hi-entry with an\n         hi-targeted-to-uri
    that reflects the Request-URI that was\n         copied unchanged into the request
    represented by this hi-entry.\n         That value will usually be the hi-index
    of the parent hi-entry\n         of this hi-entry.\n   o  Extension (hi-extension):
    A parameter to allow for future optional\n      extensions.  As per [RFC3261],
    any implementation not\n      understanding an extension MUST ignore it.\n   The
    ABNF syntax [RFC5234] for the History-Info header field and\n   header field parameters
    is as follows:\n   History-Info = \"History-Info\" HCOLON hi-entry *(COMMA hi-entry)\n
    \  hi-entry = hi-targeted-to-uri *(SEMI hi-param)\n   hi-targeted-to-uri = name-addr\n
    \  hi-param = hi-index / hi-target-param / hi-extension\n   hi-index = \"index\"
    EQUAL index-val\n   index-val =  number *(\".\" number)\n   number =  [ %x31-39
    *DIGIT ] DIGIT\n   hi-target-param = rc-param / mp-param / np-param\n   rc-param
    = \"rc\" EQUAL index-val\n   mp-param = \"mp\" EQUAL index-val\n   np-param =
    \"np\" EQUAL index-val\n   hi-extension = generic-param\n   The ABNF definitions
    for \"generic-param\", \"name-addr\", \"HCOLON\",\n   \"COMMA\", \"SEMI\", and
    \"EQUAL\" are from [RFC3261].\n   This document also extends the \"contact-params\"
    for the Contact\n   header field as defined in [RFC3261] with the \"rc\", \"mp\",
    and \"np\"\n   header field parameters defined above.\n   In addition to the parameters
    defined by the ABNF, an hi-entry may\n   also include a Reason header field and/or
    a Privacy header field,\n   which are both included in the \"headers\" component
    of the\n   hi-targeted-to-uri as described below:\n   o  Reason: An optional parameter
    for History-Info, reflected in the\n      History-Info header field by including
    the Reason header field\n      [RFC3326] included in the hi-targeted-to-uri.  A
    reason is\n      included in the hi-targeted-to-uri of an hi-entry to reflect\n
    \     information received in a response to the request sent to that\n      URI.\n
    \  o  Privacy: An optional parameter for History-Info, reflected in the\n      History-Info
    header field values by including the Privacy header\n      [RFC3323] with a priv-value
    of \"history\", as defined in this\n      document, included in the hi-targeted-to-uri
    or by adding the\n      Privacy header field with a priv-value of \"history\"
    to the\n      request.  The latter case indicates that the History-Info entries\n
    \     for all History-Info entries whose hi-targeted-to-uri has the same\n      domain
    as the domain for which the SIP entity processing the\n      message is responsible
    MUST be anonymized prior to forwarding,\n      whereas the use of the Privacy
    header field included in the hi\n      -targeted-to-uri means that a specific
    hi-entry MUST be\n      anonymized.\n   Note that since both the Reason and Privacy
    parameters are included\n   in the hi-targeted-to-uri, these fields will not be
    available in the\n   case that the hi-targeted-to-uri is a Tel-URI [RFC3966].\n
    \  The following provides examples of the format for the History-Info\n   header
    field.  Note that the backslash, CRLF, and whitespace between\n   the lines in
    the examples below are inserted for readability purposes\n   only.  Note, however,
    that History-Info can be broken into multiple\n   lines due to the SWS (sep whitespace)
    that is part of HCOLON, COMMA,\n   and SEMI, and there can be multiple History-Info
    header fields due to\n   the rule of Section 7.3 of [RFC3261].  Additional detailed
    examples\n   are available in [CALLFLOWS].\n   History-Info: <sip:UserA@ims.example.com>;index=1;foo=bar\n
    \  History-Info: <sip:UserA@ims.example.com?Reason=SIP%3B\\\n                 cause%3D302>;index=1.1,\\\n
    \                <sip:UserB@example.com?Privacy=history&Reason=SIP%3B\\\n                 cause%3D486>;index=1.2;mp=1.1,\\\n
    \                <sip:45432@192.168.0.3>;index=1.3;rc=1.2\n"
  - contents:
    - "5.1.  History-Info Header Field Example Scenario\n   The following is an illustrative
      example of usage of History-Info.\n   In this example, Alice (sip:alice@atlanta.example.com)
      calls Bob\n   (sip:bob@biloxi.example.com).  Alice's proxy in her home domain\n
      \  (sip:atlanta.example.com) forwards the request to Bob's proxy\n   (sip:biloxi.example.com).
      \ When the request arrives at\n   sip:biloxi.example.com, it does a location
      service lookup for\n   bob@biloxi.example.com and changes the target of the
      request to Bob's\n   Contact URIs that were provided as part of normal SIP registration.\n
      \  In this example, Bob is simultaneously contacted on a PC client and\n   on
      a phone, and Bob answers on the PC client.\n   One important thing illustrated
      by this call flow is that without\n   History-Info, Bob would \"lose\" the original
      target information or the\n   initial Request-URI, including any parameters
      in the Request-URI.\n   Bob can recover that information by locating the last
      hi-entry with\n   an \"rc\" header field parameter.  This \"rc\" header field
      parameter\n   contains the index of the hi-entry containing the lost target\n
      \  information, i.e., the sip:bob@biloxi.example.com hi-entry with\n   index=1.1.
      \ Note that in the 200 response to Alice, an hi-entry is\n   not included for
      the fork to sip:bob@192.0.2.7 (index 1.1.1) since\n   biloxi.example.com had
      not received a response from that fork at the\n   time it sent the 200 OK that
      ultimately reached Alice.\n   Additional detailed examples are available in
      [CALLFLOWS].\n      Note: This example uses loose routing procedures.\n   Alice
      \  atlanta.example.com  biloxi.example.com   Bob@pc  Bob@phone\n   |                |
      \               |                |          |\n   |   INVITE sip:bob@biloxi.example.com;p=x
      \         |          |\n   |--------------->|                |                |
      \         |\n   | Supported: histinfo             |                |          |\n
      \  | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1      |\n   |                |
      \               |                |          |\n   |                |   INVITE
      sip:bob@biloxi.example.com;p=x    |\n   |                |--------------->|
      \               |          |\n   | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1
      \     |\n   | History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n
      \  |                |                |                |          |\n   |                |
      \               |   INVITE sip:bob@192.0.2.3|\n   |                |                |--------------->|
      \         |\n   | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1\n   |
      History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n   | History-Info:
      <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1\n   |                |                |
      \               |          |\n   |                |                |   INVITE
      sip:bob@192.0.2.7|\n   |                |                |-------------------------->|\n
      \  | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1\n   | History-Info:
      <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n   | History-Info: <sip:bob@192.0.2.7>;index=1.1.2;rc=1.1\n
      \  |                |                |     200        |          |\n   |                |
      \               |<---------------|          |\n   | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1\n
      \  | History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n   | History-Info:
      <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1\n   |                |                |
      \               |          |\n   |                |     200        |                |
      \         |\n   |                |<---------------|                |          |\n
      \  | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1\n   | History-Info:
      <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n   | History-Info: <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1\n
      \  |                |                |                |          |\n   |                |
      \               | Proxy Cancels INVITE      |\n   |                |                |<=========================>|\n
      \  |     200        |                |                |          |\n   |<---------------|
      \               |                |          |\n   | History-Info: <sip:bob@biloxi.example.com;p=x>;index=1\n
      \  | History-Info: <sip:bob@biloxi.example.com;p=x>;np=1;index=1.1\n   | History-Info:
      <sip:bob@192.0.2.3>;index=1.1.1;rc=1.1\n   |     ACK        |                |
      \               |          |\n   |--------------->|    ACK         |                |
      \         |\n   |                |--------------->|     ACK        |          |\n
      \  |                |                |--------------->|          |\n                          Figure
      1: Basic Call\n"
    title: 5.1.  History-Info Header Field Example Scenario
  title: 5.  History-Info Header Field Protocol Structure
- contents:
  - "6.  User Agent Handling of the History-Info Header Field\n   This section describes
    the processing specific to UAs -- User Agent\n   Clients (UACs), User Agent Servers
    (UASs), and Back-to-Back User\n   Agents (B2BUAs) -- for the History-Info header.\n"
  - contents:
    - "6.1.  User Agent Client (UAC) Behavior\n   The UAC MUST include the \"histinfo\"
      option tag in the Supported\n   header field in any out-of-dialog requests or
      initial requests for a\n   dialog for which the UAC would like the History-Info
      header field in\n   the response.  When issuing a request, the UAC MUST follow
      the\n   procedures in Section 9.2.  In the case of an initial request, except\n
      \  where the UAC is part of a B2BUA, there is no cache of hi-entries\n   with
      which to populate the History-Info header field, and the\n   hi-index is set
      to 1 per Section 10.3.  When receiving a response,\n   the UAC MUST follow the
      procedures in Section 9.3.\n   If the UAC generates further forks of the initial
      request (either due\n   to acting on a 3xx response or internally directed forking
      to\n   multiple destinations), the successive requests will add hi-entries\n
      \  with hi-indexes of 2, 3, etc.\n"
    title: 6.1.  User Agent Client (UAC) Behavior
  - contents:
    - "6.2.  User Agent Server (UAS) Behavior\n   When receiving a request, a UAS
      MUST follow the procedures defined in\n   Section 9.2.  When sending a response
      other than a 3xx response, a\n   UAS MUST follows the procedures defined in
      Section 9.4.  When sending\n   a 3xx response, the UAS MUST follow the procedures
      defined for a\n   redirect server per Section 8.  An application at the UAS
      can make\n   use of the cached hi-entries as described in Section 11.\n"
    title: 6.2.  User Agent Server (UAS) Behavior
  - contents:
    - "6.3.  Back-to-Back User Agent (B2BUA) Behavior\n   A B2BUA MAY follow the behavior
      of a SIP intermediary, per Section 7,\n   as an alternative to following the
      behavior of a UAS per Section 6.2\n   or a UAC per Section 6.1.  In behaving
      as an intermediary, a B2BUA\n   carries forward hi-entries received in requests
      at the UAS to\n   requests being forwarded by the UAC, as well as carrying forward\n
      \  hi-entries in responses received at the UAC to the responses\n   forwarded
      by the UAS, subject to privacy considerations per\n   Section 10.1.\n"
    title: 6.3.  Back-to-Back User Agent (B2BUA) Behavior
  title: 6.  User Agent Handling of the History-Info Header Field
- contents:
  - "7.  Proxy/Intermediary Handling of History-Info Header Fields\n   This section
    describes the procedures for proxies and other SIP\n   intermediaries for the
    handling of the History-Info header fields for\n   each of the following scenarios:\n
    \  Receiving a Request:  An intermediary MUST follow the procedures in\n      Section
    9.1 for the handling of hi-entries in incoming SIP\n      requests.\n   Sending
    a Request:  For each outgoing request relating to a target in\n      the target
    set, the intermediary MUST follow the procedures of\n      Section 9.2.\n   Receiving
    a Response or Timeout:  An intermediary MUST follow the\n      procedures of Section
    9.3 when a SIP response is received or a\n      request times out.\n   Sending
    a Response:  An intermediary MUST follow the procedures of\n      Section 9.4
    for the handling of the hi-entries when sending a SIP\n      response.\n   In
    some cases, an intermediary may retarget a request more than once\n   before forwarding,
    i.e., a request is retargeted to a SIP entity that\n   is \"internal\" to the
    intermediary before the same intermediary\n   retargets the request to an external
    target.  A typical example would\n   be a proxy that retargets a request first
    to a different user (i.e.,\n   it maps to a different AOR) and then forwards it
    to a registered\n   contact bound to the same AOR.  In this case, the intermediary
    MUST\n   add an hi-entry for (each of) the internal target(s) per the\n   procedures
    in Section 9.2.  The intermediary MAY include a Reason\n   header field in the
    hi-entry with the hi-targeted-to-uri that has\n   been retargeted.  Note that
    this is shown in the INVITE (F6) in the\n   example entitled \"Sequentially Forking
    (History-Info in Response)\" in\n   [CALLFLOWS].\n"
  title: 7.  Proxy/Intermediary Handling of History-Info Header Fields
- contents:
  - "8.  Redirect Server Handling of History-Info Header Fields\n   A redirect server
    MUST follow the procedures in Section 9.1 when it\n   receives a SIP request.
    \ A redirect server MUST follow the procedures\n   in Section 9.4 when it sends
    a SIP response.  When generating the\n   Contact header field in a 3xx response,
    the redirect server MUST add\n   the appropriate \"mp\", \"np\", or \"rc\" header
    field parameter to each\n   Contact header field as described in Section 10.4,
    if applicable.\n"
  title: 8.  Redirect Server Handling of History-Info Header Fields
- contents:
  - "9.  Handling of History-Info Header Fields in Requests and Responses\n   This
    section describes the procedures for SIP entities for the\n   handling of the
    History-Info header field in SIP requests and\n   responses.\n"
  - contents:
    - "9.1.  Receiving a Request\n   When receiving a request, a SIP entity MUST keep
      a copy of the\n   hi-entries from the incoming request.  This document describes
      this\n   copy in terms of a cache containing the hi-entries associated with\n
      \  the request.  The hi-entries MUST be added to the cache in the order\n   in
      which they were received in the request.\n   If the Request-URI of the incoming
      request does not match the hi\n   -targeted-to-uri in the last hi-entry (i.e.,
      the previous SIP entity\n   that sent the request did not include a History-Info
      header field),\n   the SIP entity MUST add an hi-entry to the end of the cache,
      on\n   behalf of the previous SIP entity.  This is done as follows, before\n
      \  proceeding to Section 9.2.\n      The SIP entity MUST set the hi-targeted-to-uri
      to the value of the\n      Request-URI in the incoming request.  If the Request-URI
      is a\n      Tel-URI, it SHOULD be transformed into a SIP URI (per\n      Section
      19.1.6 of [RFC3261]) before being added as an\n      hi-targeted-to-uri.\n      If
      privacy is required, the SIP entity MUST follow the procedures\n      of Section
      10.1.\n      The SIP entity MUST set the hi-index parameter as described in\n
      \     Section 10.3.\n      The SIP entity MUST NOT include an \"rc\", \"mp\",
      or \"np\" header\n      field parameter.\n"
    title: 9.1.  Receiving a Request
  - contents:
    - "9.2.  Sending a Request with History-Info\n   When sending a request, a SIP
      entity MUST include all the hi-entries\n   from the cache that was created per
      Section 9.1.  In addition, the\n   SIP entity MUST add a new hi-entry to the
      outgoing request, but the\n   SIP entity MUST NOT add the hi-entry to the cache
      at this time.  The\n   hi-entries in the outgoing request's History-Info header
      field\n   represent the preorder of the tree of hi-entries, that is, by the\n
      \  lexicographic ordering of the hi-indexes.  The new hi-entry is\n   populated
      as follows:\n   hi-targeted-to-uri:  The hi-targeted-to-uri MUST be set to the
      value\n      of the Request-URI of the current (outgoing) request.  If the\n
      \     Request-URI is a Tel-URI, it SHOULD be transformed into a SIP URI\n      (per
      Section 19.1.6 of [RFC3261]) before being added as an\n      hi-targeted-to-uri.\n
      \  privacy:  If privacy is required, the procedures of Section 10.1 MUST\n      be
      followed.\n   hi-index:  The SIP entity MUST include an hi-index for the hi-entry\n
      \     as described in Section 10.3.\n   rc/mp/np:  The SIP entity MUST include
      an \"rc\", \"mp\", or \"np\" header\n      field parameter in the hi-entry,
      if applicable, per the procedures\n      in Section 10.4.\n"
    title: 9.2.  Sending a Request with History-Info
  - contents:
    - "9.3.  Receiving a Response with History-Info or Request Timeouts\n   When a
      SIP entity receives a non-100 response or a request times out,\n   the SIP entity
      performs the following steps:\n   Step 1:  Add hi-entry to cache\n      The
      SIP entity MUST add the hi-entry that was added to the request\n      that received
      the non-100 response or timed out to the cache, if\n      it was not already
      cached.  The hi-entry MUST be added to the\n      cache in ascending order as
      indicated by the values in the\n      hi-index parameters of the hi-entries
      (e.g., 1.2.1 comes after 1.2\n      but before 1.2.2 or 1.3).\n   Step 2:  Add
      Reason header field\n      If the response is not a 100 or 2xx response, the
      SIP entity adds\n      one or more Reason header fields to the hi-targeted-to-uri
      in the\n      (newly) cached hi-entry reflecting the SIP response code in the\n
      \     non-100 or non-2xx response, per the procedures of Section 10.2.\n   Step
      3:  Add additional hi-entries\n      The SIP entity MUST also add to the cache
      any hi-entries received\n      in the response that are not already in the cache.
      \ This situation\n      can occur when the entity that generated the non-100
      response\n      retargeted the request before generating the response.  As per\n
      \     Step 1, the hi-entries MUST be added to the cache in ascending\n      order
      as indicated by the values in the hi-index parameters of the\n      hi-entries.\n
      \  It is important to note that the cache (and the request or response)\n   does
      not contain hi-entries for requests that have not yet received a\n   non-100
      response, so there can be gaps in indices (e.g., 1.2 and 1.4\n   could be present
      but not 1.3).\n   Note that in the case that a request has traversed one or
      more\n   intermediaries that do not support RFC 4244 or this document, there\n
      \  can be duplicate indices (due to forking), which would be added to\n   the
      appropriate position in the cache in the order in which they are\n   received.\n"
    title: 9.3.  Receiving a Response with History-Info or Request Timeouts
  - contents:
    - "9.4.  Sending History-Info in Responses\n   When sending a response other than
      a 100, a SIP entity MUST include\n   all the cached hi-entries in the response,
      subject to the privacy\n   consideration in Section 10.1.2, and with the following
      exception: If\n   the received request contained no hi-entries and there is
      no\n   \"histinfo\" option tag in the Supported header field, the SIP entity\n
      \  MUST NOT include History-Info in the response.\n"
    title: 9.4.  Sending History-Info in Responses
  title: 9.  Handling of History-Info Header Fields in Requests and Responses
- contents:
  - "10.  Processing the History-Info Header Field\n   The following subsections describe
    the procedures for processing the\n   History-Info header field.  These procedures
    are applicable to SIP\n   entities such as proxies/intermediaries, redirect servers,
    or user\n   agents.\n"
  - contents:
    - "10.1.  Privacy in the History-Info Header Field\n   The privacy requirements
      for this document are described in\n   Appendix A.2.  Section 10.1.1 describes
      the insertion of the Privacy\n   header field (defined in [RFC3323]) to indicate
      the privacy to be\n   applied to the History-Info header field entries.  Section
      10.1.2\n   describes how to apply privacy to a request or response that is being\n
      \  forwarded, based on the presence of the Privacy header field.\n"
    - contents:
      - "10.1.1.  Indicating Privacy\n   As with other SIP headers described in [RFC3323],
        the\n   hi-targeted-to-uris in the History-Info header field can\n   inadvertently
        reveal information about the initiator of the request.\n   Thus, the UAC needs
        a mechanism to indicate that the\n   hi-targeted-to-uris in the hi-entries
        need to be privacy protected.\n   The Privacy header field is used by the
        UAC to indicate that privacy\n   is to be applied to all the hi-entries in
        the request as follows:\n   o  If the UAC is including a Privacy header field
        with a priv-value\n      of \"header\" in the request, then the UAC SHOULD
        NOT include a\n      priv-value of \"history\" in the Privacy header field
        in the\n      request.\n   o  If the UAC is including any priv-values other
        than \"header\" in the\n      Privacy header field, then the UAC MUST also
        include a priv-value\n      of \"history\" in the Privacy header field in
        the request.\n   o  If the UAC is not including any priv-values in the Privacy
        header\n      field in the request, then the UAC MUST add a Privacy header\n
        \     field, with a priv-value of \"history\", to the request.  The UAC\n
        \     MUST NOT include a priv-value of \"critical\" in the Privacy header\n
        \     field in the request in this case.\n   In addition, the History-Info
        header field can reveal general routing\n   and diverting information that
        is within an intermediary and that the\n   intermediary wants to privacy protect.
        \ In this case, the\n   intermediary MUST construct a Privacy header field
        with the single\n   priv-value of \"history\" and include the Privacy header
        field in the\n   hi-targeted-to-uri, for each new hi-entry created by the
        intermediary\n   whose hi-targeted-to-uri it wishes to privacy protect.  Note
        that the\n   priv-value in the Privacy header for the incoming request does
        not\n   necessarily influence whether the intermediary includes a Privacy\n
        \  header field in the hi-entries.  For example, even if the Privacy\n   header
        for the incoming request contained a priv-value of \"none\", the\n   proxy
        can still set a priv-value of \"history\" in the Privacy header\n   field
        included in the hi-targeted-to-uri.\n   Finally, the UAS may not want to reveal
        the final reached target to\n   the originator.  In this case, the UAS MUST
        include a Privacy header\n   field with a priv-value of \"history\" in the
        hi-targeted-to-uri in the\n   last hi-entry, in the response.  As noted above,
        the UAS of the\n   request MUST NOT use any other priv-values in the Privacy
        header\n   field included in the hi-entry.\n"
      title: 10.1.1.  Indicating Privacy
    - contents:
      - "10.1.2.  Applying Privacy\n   When a SIP message is forwarded to a domain
        for which the SIP\n   intermediary is not responsible, a Privacy Service at
        the boundary of\n   the domain applies the appropriate privacy based on the
        value of the\n   Privacy header field in the message header or in the \"headers\"\n
        \  component of the hi-targeted-to-uri in the individual hi-entries.\n   If
        there is a Privacy header field in the message header of a request\n   or
        response, with a priv-value of \"header\" or \"history\", then all the\n   hi-targeted-to-uris
        (in the hi-entries associated with the domain for\n   which the SIP intermediary
        is responsible) are anonymized by the\n   Privacy Service.  The Privacy Service
        MUST change any\n   hi-targeted-to-uris in these hi-entries that have not
        been anonymized\n   (evidenced by their domain not being \"anonymous.invalid\")
        to\n   anonymous URIs containing a domain of anonymous.invalid as\n   recommended
        in Section 4.1.1.3 of [RFC3323].  As defined in\n   Section 4.1.1.2 of [RFC3323],
        the recommendations of [RFC3261] for\n   anonymizing the URI Username SHOULD
        be followed (i.e., \"anonymous\" in\n   the user portion of the URI).  If
        there is a Privacy header field in\n   the \"headers\" component of the hi-targeted-to-uri
        in the hi-entries,\n   then the Privacy header field value MUST be removed
        from the\n   hi-entry.  Once all the appropriate hi-entries have been anonymized,\n
        \  the Privacy Service MUST remove the priv-value of \"history\" from the\n
        \  Privacy header field in the message header of the request or\n   response.
        \ If there are no remaining priv-values in the Privacy\n   header field, the
        Privacy Service MUST remove the Privacy header\n   field from the request
        or response per [RFC3323].\n   If there is not a Privacy header field in the
        message header of the\n   request or response that is being forwarded, but
        there is a Privacy\n   header field with a priv-value of \"history\" in the
        \"headers\"\n   component in any of the hi-targeted-uris in the hi-entries
        associated\n   with the domain for which a SIP intermediary is responsible,
        then the\n   Privacy Service MUST update those hi-targeted-to-uris as described\n
        \  above.  Any other priv-values in the Privacy header field in the\n   \"headers\"
        component of the hi-targeted-to-uris in the hi-entries MUST\n   be ignored.
        \ In any case, the Privacy Service MUST remove the Privacy\n   header field
        from the \"headers\" component of the hi-targeted-to-uris\n   in the hi-entries
        prior to forwarding.\n"
      title: 10.1.2.  Applying Privacy
    title: 10.1.  Privacy in the History-Info Header Field
  - contents:
    - "10.2.  Reason in the History-Info Header Field\n   A Reason header field is
      added when the hi-entry is added to the\n   cache based upon the receipt of
      a SIP response that is neither a 100\n   nor a 2xx response, as described in
      Section 9.3.  The SIP entity MUST\n   include a Reason header field, containing
      the SIP Response Code, in\n   the \"headers\" component of the hi-targeted-to-uri
      in the last\n   hi-entry added to the cache, unless the hi-targeted-to-uri is
      a\n   Tel-URI.  In addition, if the response contains any Reason header\n   fields
      (see [RFC3326]), then the SIP entity MUST also include the\n   Reason header
      fields in the \"headers\" component of the\n   hi-targeted-to-uri in the last
      hi-entry added to the cache.\n   If a request has timed out (instead of being
      explicitly rejected),\n   the SIP entity MUST update the cache as if the request
      received a SIP\n   error response code of 408 \"Request Timeout\".\n   A request
      can receive multiple responses that are neither 100 nor 2xx\n   responses and
      that carry or imply (for responses without Reason\n   headers, and for timeouts)
      multiple, possibly duplicated,\n   reason-values to be applied to an hi-targeted-to-uri.
      \ In these\n   situations, the SIP entity creating the History-Info header value\n
      \  would choose the appropriate Reason header field value.\n   A SIP entity
      MAY also include a Reason header field (in the \"headers\"\n   component of
      an hi-targeted-to-uri) that contains the URI of a\n   request that was retargeted
      as a result of internal retargeting.\n   If additional Reason header field parameters
      are defined in the\n   future per [RFC3326], the use of these Reason header
      field parameters\n   for the History-Info header field MUST follow the same
      rules as\n   described above.\n"
    title: 10.2.  Reason in the History-Info Header Field
  - contents:
    - "10.3.  Indexing in the History-Info Header Field\n   In order to maintain ordering
      and accurately reflect the retargeting\n   of the request, the SIP entity MUST
      add an hi-index to each hi-entry.\n   Per the syntax in Section 5, the hi-index
      consists of a series of\n   nonnegative integers separated by dots (e.g., 1.1.2).
      \ Each dot\n   reflects a SIP forwarding hop.  The nonnegative integer following\n
      \  each dot reflects the order in which a request was retargeted at the\n   hop.
      \ The highest nonnegative integer at each hop reflects the number\n   of entities
      to which the request has been retargeted at the specific\n   hop (i.e., the
      number of branches) at the time that the request\n   represented by this hi-entry
      was generated.  Thus, the indexing\n   results in a logical tree representation
      for the history of the\n   request and the hi-entries are given in the preorder
      of the tree.\n   The first index in a series of History-Info entries MUST be
      set to 1.\n   In the case that a SIP entity (intermediary or UAS) adds a first\n
      \  hi-entry on behalf of the previous hop, the hi-index MUST be set to\n   1.
      \ For each forward hop (i.e., each new level of indexing), the last\n   integers
      of the hi-indexes of the new requests MUST be generated\n   starting at 1 and
      incrementing by 1 for each additional request.\n   The basic rules for adding
      the hi-index are summarized as follows:\n   1.  Forwarding a request without
      changing the target: In the case of\n       a request that is being forwarded
      without changing the target,\n       the hi-index reflects the increasing length
      of the branch.  In\n       this case, the SIP entity MUST read the value from
      the History-\n       Info header field in the received request and MUST add
      another\n       level of indexing by appending the dot delimiter followed by
      an\n       initial value of 1 for the new level.  For example, if the\n       hi-index
      in the last History-Info header field in the received\n       request is 1.1,
      a proxy would add an hi-entry with an hi-index of\n       1.1.1 and forward
      the request.\n   2.  Retargeting within a processing entity - first instance:
      For the\n       first instance of retargeting within a processing entity, the
      SIP\n       entity MUST calculate the hi-index as prescribed for basic\n       forwarding.\n
      \  3.  Retargeting within a processing entity - subsequent instance: For\n       each
      subsequent retargeting of a request by the same SIP entity,\n       the SIP
      entity MUST calculate and add the hi-index for each new\n       branch by incrementing
      the rightmost value from the hi-index in\n       the last hi-entry.  Per the
      example above, the hi-index in the\n       next request forwarded by this same
      SIP entity would be 1.1.2.\n   4.  Retargeting based upon a response: In the
      case of retargeting due\n       to a specific response (e.g., 302), the SIP
      entity MUST calculate\n       the hi-index calculated per rule 3.  That is,
      the rightmost value\n       of the hi-index MUST be incremented (i.e., a new
      branch is\n       created).  For example, if the hi-index in the History-Info\n
      \      header field of the sent request is 1.2 and the response to the\n       request
      is a 302, then the hi-index in the History-Info header\n       field for the
      new hi-targeted-to-URI would be 1.3.\n   5.  Forking requests: If the request
      forwarding is done in multiple\n       forks (sequentially or in parallel),
      the SIP entity MUST set the\n       hi-index for each hi-entry for each forked
      request per the rules\n       above, with each new request having a unique index.
      \ Each index\n       MUST be sequentially assigned.  For example, if the index
      in the\n       last History-Info header field in the received request is 1.1,\n
      \      this processing entity would initialize its index to 1.1.1 for\n       the
      first fork, 1.1.2 for the second, and so forth.  (See\n       Figure 1 for an
      example.)  Note that, in the case of parallel\n       forking, only the hi-entry
      corresponding to the fork is included\n       in the request because no response
      can yet have been received for\n       any of the parallel forked requests.\n
      \  6.  Missing entry: If the request clearly has a gap in the hi-entry\n       (i.e.,
      the last hi-entry and Request-URI differ), the entity\n       adding an hi-entry
      MUST add a single index with a value of \"0\"\n       (i.e., the nonnegative
      integer zero) prior to adding the\n       appropriate index for the action to
      be taken.  For example, if\n       the index of the last hi-entry in the request
      received was 1.1.2\n       and there was a missing hi-entry and the request
      was being\n       forwarded to the next hop, the resulting index will be 1.1.2.0.1.\n
      \      In the case of requests that are forked by a proxy that does not\n       support
      History-Info, it is possible for hi-entries generated by\n       different entities
      to have the same index, i.e., each entity\n       supporting History-Info would
      receive a forked request with the\n       same hi-index to which they would
      add the value of \".0\" prior to\n       adding the appropriate index.  Thus,
      in the previous example,\n       each of the next-hop entities would generate
      an hi-index of\n       1.1.2.0.1.\n"
    title: 10.3.  Indexing in the History-Info Header Field
  - contents:
    - "10.4.  Mechanism for Target Determination in the History-Info Header\n       Field\n
      \  This specification defines three header field parameters, \"rc\", \"mp\",\n
      \  and \"np\".  The header field parameters \"rc\" and \"mp\" indicate the\n
      \  mechanism by which a new target for a request is determined.  The\n   header
      field \"np\" reflects that the target has not changed.  All\n   parameters contain
      an index whose value is the hi-index of the\n   hi-entry with an hi-targeted-to-uri
      that represents the Request-URI\n   that was retargeted.\n   The SIP entity
      MUST determine the specific parameter field to be\n   included in the hi-target-param,
      in the History-Info header field, as\n   the targets are added to the target
      set per the procedures in\n   Section 16.5 of [RFC3261] or per Section 8.1.3.4
      of [RFC3261] in the\n   case of retargeting to a Contact URI received in a 3xx
      response.  In\n   the latter case, the specific header field parameter in the
      Contact\n   header field becomes the header field parameter that is used in
      the\n   hi-entry when the request is retargeted.  If the Contact header field\n
      \  does not contain an \"rc\" or \"mp\" header field parameter, then the SIP\n
      \  entity MUST NOT include an \"rc\" or \"mp\" header field parameter in the\n
      \  hi-target-param in the hi-entry when the request is retargeted to a\n   Contact
      URI received in a 3xx response.  This is because the redirect\n   server is
      the only element with any knowledge on how the target was\n   determined.  Note
      that the \"np\" header field parameter is not\n   applicable in the case of
      redirection.\n   Based on the following criteria, the SIP entity (intermediary
      or\n   redirect server) determines the specific header field parameter\n   (\"rc\",
      \"mp\", or \"np\") to be used.\n   o  \"rc\": The Request-URI has changed while
      the target user associated\n      with the original Request-URI prior to retargeting
      has been\n      retained.\n   o  \"mp\": The target was determined based on
      a mapping to a user other\n      than the target user associated with the Request-URI
      being\n      retargeted.\n   o  \"np\": The target hasn't changed, and the associated
      Request-URI\n      remained the same.\n   Note that there are two scenarios
      by which the \"mp\" header field\n   parameter can be derived.\n   o  The mapping
      was done by the receiving entity on its own authority,\n      in which case
      the mp-value is the parent index of the hi-entry's\n      index.\n   o  The
      mapping was done due to receiving a 3xx response, in which\n      case the mp-value
      is an earlier sibling or descendant of an\n      earlier sibling of the hi-entry's
      index; the index is that of the\n      downstream request that received the
      3xx response.\n"
    title: 10.4.  Mechanism for Target Determination in the History-Info Header
  title: 10.  Processing the History-Info Header Field
- contents:
  - "11.  Application Considerations\n   History-Info provides a very flexible building
    block that can be used\n   by intermediaries and UAs for a variety of services.
    \ Prior to any\n   application usage of the History-Info header field parameters,
    the\n   SIP entity that processes the hi-entries MUST evaluate the hi-entries\n
    \  and determine if there are any gaps in the hi-entries.  The SIP\n   entity
    MUST be prepared to process effectively messages whose\n   hi-entries show evidence
    of \"gaps\", that is, situations that reveal\n   that not all of the forks of
    the request have been recorded in the\n   hi-entries.  Gaps are possible if the
    request is forwarded through\n   intermediaries that do not support the History-Info
    header field and\n   are reflected by the existence of hi-entries with a nonnegative\n
    \  integer of \"0\", e.g., \"1.1.0.1\".  Gaps are also possible in the case\n
    \  of parallel forking if there is an outstanding request at the time\n   the
    SIP entity sends a message.  In addition, gaps may introduce the\n   possibility
    of duplicate values for the hi-index in the case that a\n   proxy that does not
    support History-Info forks a request.  If gaps\n   are detected, the SIP entity
    MUST NOT treat this as an error but\n   SHOULD indicate to any applications that
    there are gaps.  The\n   interpretation of the information in the History-Info
    header field\n   depends upon the specific application; an application might need
    to\n   provide special handling in some cases where there are gaps.\n   The following
    describes some categories of information that\n   applications can use:\n   1.
    \ Complete history information, e.g., for debugging or other\n       operational
    and management aspects, optimization of determining\n       targets to avoid retargeting
    to the same URI, etc.  This\n       information is relevant to proxies, UACs,
    and UASs.\n   2.  Hi-entry with the index that matches the value of the \"rc\"
    header\n       field parameter in the last hi-entry with an \"rc\" header field\n
    \      parameter in the request received by a UAS, i.e., the last AOR\n       that
    was retargeted to a contact based on an AOR-to-contact\n       binding.\n   3.
    \ Hi-entry with the index that matches the value of the \"mp\" header\n       field
    parameter in the last hi-entry with an \"mp\" header field\n       parameter in
    the hi-target-param in the request received by a\n       UAS, i.e., the last Request-URI
    that was mapped to reach the\n       destination.\n   4.  Hi-entry with the index
    that matches the value of the \"rc\" header\n       field parameter in the first
    hi-entry with an \"rc\" header field\n       parameter in the request received
    by a UAS.  Note that this would\n       be the original AOR if all the entities
    involved support the\n       History-Info header field and there is an absence
    of an \"mp\"\n       header field parameter prior to the \"rc\" header field parameter\n
    \      in the hi-target-param in the History-Info header field.\n       However,
    there is no guarantee that all entities will support\n       History-Info; thus,
    the hi-entry that matches the value of the\n       \"rc\" header field parameter
    of the first hi-entry with an \"rc\"\n       header field parameter in the hi-target-param
    within the domain\n       associated with the target URI at the destination is
    more likely\n       to be useful.\n   5.  Hi-entry with the index that matches
    the value of the \"mp\" header\n       field parameter in the first hi-entry with
    an \"mp\" header field\n       parameter in the request received by a UAS.  Note
    that this would\n       be the original mapped URI if all entities supported the
    History-\n       Info header field.  However, there is no guarantee that all\n
    \      entities will support History-Info; thus, the hi-entry that\n       matches
    the value of the \"mp\" header field parameter of the first\n       hi-entry with
    an \"mp\" header field parameter within the domain\n       associated with the
    target URI at the destination is more likely\n       to be useful.\n   In many
    cases, applications are most interested in the information\n   within one or more
    particular domains; thus, only a subset of the\n   information is required.\n
    \  Some applications may use multiple types of information.  For\n   example,
    an Automatic Call Distribution (ACD) / call center\n   application that utilizes
    the hi-entry with an index that matches the\n   value of the \"mp\" header field
    parameter in the first hi-entry with\n   an \"mp\" header field parameter may
    also display other agents,\n   reflected by hi-entries prior to hi-entries with
    an \"rc\" header field\n   parameter, to whom the call was targeted prior to its
    arrival at the\n   current agent.  This could allow the agent the ability to decide
    how\n   they might forward or reroute the call if necessary (avoiding agents\n
    \  that were not previously available for whatever reason, etc.).\n   Since support
    for History-Info header field is optional, a service\n   MUST define default behavior
    for requests and responses not\n   containing History-Info header fields.  For
    example, an entity may\n   receive an incomplete set of hi-entries or hi-entries
    that are not\n   tagged appropriately with an hi-target-param in the case of entries\n
    \  added by entities that are only compliant to RFC 4244.  This may not\n   impact
    some applications (e.g., debug); however, it could require\n   some applications
    to make some default assumptions in this case.  For\n   example, in an ACD scenario,
    the application could select the oldest\n   hi-entry with the domain associated
    with the ACD system and display\n   that as the original called party.  Depending
    upon how and where the\n   request may have been retargeted, the complete list
    of agents to whom\n   the call was targeted may not be available.\n"
  title: 11.  Application Considerations
- contents:
  - "12.  Application-Specific Usage\n   The following are possible (non-normative)
    application-specific\n   usages of History-Info.\n"
  - contents:
    - "12.1.  PBX Voicemail\n   A voicemail system (VMS) typically requires the original
      called party\n   information to determine the appropriate mailbox so an appropriate\n
      \  greeting can be provided and the appropriate party notified of the\n   message.\n
      \  The original target is determined by finding the first hi-entry\n   tagged
      with \"rc\" and using the hi-entry referenced by the index of\n   the \"rc\"
      header field parameter as the target for determining the\n   appropriate mailbox.
      \ This hi-entry is used to populate the \"target\"\n   URI parameter as defined
      in [RFC4458].  The VMS can look at the last\n   hi-entry and find the target
      of the mailbox by looking at the URI\n   entry in the \"target\" URI parameter
      in the hi-entry.\n   This example usage does not work properly in the presence
      of\n   forwarding that takes place before the call reaches the company.  In\n
      \  that case, not the first hi-entry with an \"rc\" value, but the first\n   hi-entry
      with an \"rc\" value following an \"mp\" entry needs to be\n   picked.  Further
      detail for this example can be found in the call\n   flow entitled \"PBX Voicemail
      Example\" in [CALLFLOWS].\n   Note that in the case where there is no entry
      tagged with \"rc\", a VMS\n   can follow the procedures, as defined in [RFC4458],
      for the\n   \"Interaction with Request History Information\".\n"
    title: 12.1.  PBX Voicemail
  - contents:
    - "12.2.  Consumer Voicemail\n   The voicemail system in this environment typically
      requires the last\n   called party information to determine the appropriate
      mailbox so an\n   appropriate greeting can be provided and the appropriate party\n
      \  notified of the message.\n   The last target is determined by finding the
      hi-entry referenced by\n   the index of the last hi-entry tagged with \"rc\"
      for determining the\n   appropriate mailbox.  This hi-entry is used to populate
      the \"target\"\n   URI parameter as defined in [RFC4458].  The VMS can look
      at the last\n   hi-entry and find the target of the mailbox by looking for the\n
      \  \"target\" URI parameter in the hi-entry.  Further detail for this\n   example
      can be found in the call flow entitled \"Consumer Voicemail\n   Example\" in
      [CALLFLOWS].\n   In the case where there is no entry tagged with \"rc\", a VMS
      can\n   follow the procedures, as defined in [RFC4458], for the \"Interaction\n
      \  with Request History Information\".\n"
    title: 12.2.  Consumer Voicemail
  title: 12.  Application-Specific Usage
- contents:
  - "13.  Security Considerations\n   The security requirements for this specification
    are specified in\n   Appendix A.1.\n   This document defines a header field for
    SIP.  The use of the\n   Transport Layer Security (TLS) protocol [RFC5246] as
    a mechanism to\n   ensure the overall confidentiality of the History-Info header
    fields\n   (SEC-req-4) is strongly RECOMMENDED.  If TLS is NOT used, the\n   intermediary
    MUST ensure that the messages are only sent within an\n   environment that is
    secured by other means or that the messages don't\n   leave the intermediary's
    domain.  This results in History-Info's\n   having at least the same level of
    security as other headers in SIP\n   that are inserted by intermediaries.  With
    TLS, History-Info header\n   fields are no less, nor no more, secure than other
    SIP header fields,\n   which generally have even more impact on the subsequent
    processing of\n   SIP sessions than the History-Info header field.\n   Note that
    while using the SIPS scheme (as per [RFC5630]) protects\n   History-Info from
    tampering by arbitrary parties outside the SIP\n   message path, all the intermediaries
    on the path are trusted\n   implicitly.  A malicious intermediary could arbitrarily
    delete,\n   rewrite, or modify History-Info.  This specification does not attempt\n
    \  to prevent or detect attacks by malicious intermediaries.\n   In terms of ensuring
    the privacy of hi-entries, the same security\n   considerations as those described
    in [RFC3323] apply.  The Privacy\n   Service that's defined in [RFC3323] MUST
    also support the new Privacy\n   header field priv-value of \"history\" and anonymize
    hi-entries in the\n   case of a priv-value of \"header\" as described in Section
    10.1.2.\n"
  title: 13.  Security Considerations
- contents:
  - "14.  IANA Considerations\n   IANA registrations have been implemented or updated
    as detailed in\n   the following subsections.\n   This document obsoletes [RFC4244]
    but uses the same SIP header field\n   name, Privacy header field, and Option
    tag.  References to [RFC4244]\n   in the IANA \"Session Initiation Protocol (SIP)
    Parameters\" registry\n   (<http://www.iana.org/assignments/sip-parameters>) have
    been replaced\n   with references to this document.\n"
  - contents:
    - "14.1.  Registration of New SIP History-Info Header Field\n   This document
      defines a SIP header field name, History-Info; and an\n   option tag, histinfo.
      \ The following updates have been made to\n   <http://www.iana.org/assignments/sip-parameters>.\n
      \  The following row has been updated in the \"Header Fields\" sub-\n   registry:\n
      \  Header Name             Compact Form               Reference\n   -----------
      \            ------------               ---------\n   History-Info               none
      \                   [RFC7044]\n   The following has been updated in the \"Option
      Tags\" sub-registry:\n   Name        Description                                 Reference\n
      \  ----        -----------                                 ---------\n   histinfo
      \   When used with the Supported header field,  [RFC7044]\n               this
      option tag indicates the UAC supports\n               the History Information
      to be captured for\n               requests and returned in subsequent\n               responses.
      \ This tag is not used in a\n               Proxy-Require or Require header
      field,\n               since support of History-Info is optional.\n"
    title: 14.1.  Registration of New SIP History-Info Header Field
  - contents:
    - "14.2.  Registration of \"history\" for SIP Privacy Header Field\n   This document
      defines a priv-value for the SIP Privacy header field:\n   history.  The following
      updates have been made to the \"SIP Privacy\n   Header Field Values\" sub-registry
      in <http://www.iana.org/assignments\n   /sip-parameters> for the registration
      of the SIP Privacy header\n   field:\n   Privacy\n   Type     Description             Registrant
      \                Reference\n   ------   -----------             ----------                 ---------\n
      \  history  Privacy requested for   Mary Barnes                [RFC7044]\n            History-Info
      header     mary.ietf.barnes@gmail.com\n            field(s)\n"
    title: 14.2.  Registration of "history" for SIP Privacy Header Field
  - contents:
    - "14.3.  Registration of Header Field Parameters\n   This specification defines
      the following new SIP header field\n   parameters in the \"Header Field Parameters
      and Parameter Values\" sub-\n   registry in <http:/www.iana.org/assignments/sip-parameters>.\n
      \   Header Field     Parameter Name   Predefined Values  Reference\n   -------------
      \    --------------   -----------------  ---------\n    History-Info           mp
      \                No         [RFC7044]\n    History-Info           rc                 No
      \        [RFC7044]\n    History-Info           np                 No         [RFC7044]\n
      \   Contact                mp                 No         [RFC7044]\n    Contact
      \               rc                 No         [RFC7044]\n    Contact                np
      \                No         [RFC7044]\n"
    title: 14.3.  Registration of Header Field Parameters
  title: 14.  IANA Considerations
- contents:
  - "15.  Acknowledgements\n   Jonathan Rosenberg et al. produced the document that
    provided\n   additional use cases precipitating the requirement for the new header\n
    \  parameters to capture the method by which a Request-URI is\n   determined.
    \ The authors would like to acknowledge the constructive\n   feedback provided
    by Ian Elz, Paul Kyzivat, John Elwell, Hadriel\n   Kaplan, Marianne Mohali, Brett
    Tate, and Dale Worley.  John Elwell\n   also provided excellent suggestions in
    terms of document structure.\n   Dan Romascanu performed the Gen-ART review.\n
    \  Mark Watson, Cullen Jennings, and Jon Peterson provided significant\n   input
    into the initial work that resulted in the development of\n   [RFC4244].  The
    authors would like to acknowledge the constructive\n   feedback provided by Robert
    Sparks, Paul Kyzivat, Scott Orton, John\n   Elwell, Nir Chen, Palash Jain, Brian
    Stucker, Norma Ng, Anthony\n   Brown, Jayshree Bharatia, Jonathan Rosenberg, Eric
    Burger, Martin\n   Dolly, Roland Jesske, Takuya Sawada, Sebastien Prouvost, and\n
    \  Sebastien Garcin in the development of [RFC4244].\n   The authors would like
    to acknowledge the significant input from\n   Rohan Mahy on some of the normative
    aspects of the ABNF for\n   [RFC4244], particularly regarding security and the
    index (the need\n   for it as well as its format).\n"
  title: 15.  Acknowledgements
- contents:
  - "16.  Changes from RFC 4244\n   This RFC replaces [RFC4244].\n   Deployment experience
    with [RFC4244] over the years has shown a\n   number of issues, warranting an
    update:\n   o  In order to make [RFC4244] work in \"real life\", one needs to
    make\n      \"assumptions\" on how History-Info is used.  For example, numerous\n
    \     implementations filter out many entries and only leave specific\n      entries
    corresponding, for example, to first and last redirection.\n      Since vendors
    use different rules, this causes significant\n      interoperability issues.\n
    \  o  [RFC4244] is overly permissive and evasive about recording\n      entries,
    causing interoperability issues.\n   o  The examples in the call flows had errors
    and were confusing\n      because they often assume \"loose routing\".\n   o  [RFC4244]
    has lots of repetitive and unclear text due to the\n      combination of requirements
    with the solution.\n   o  [RFC4244] gratuitously mandates the use of TLS on every
    hop.  No\n      existing implementation enforces this rule, and instead, whether\n
    \     to use TLS is a general SIP issue, not an issue with [RFC4244]\n      per
    se.\n   o  [RFC4244] does not include clear procedures on how to deliver\n      current
    target URI information to the UAS when the Request-URI is\n      replaced with
    a contact.\n   o  [RFC4244] does not allow for marking History-Info entries for
    easy\n      processing by user agents.\n   The following summarizes the functional
    changes between this\n   specification and [RFC4244]:\n   1.  Added header field
    parameters to capture the specific method by\n       which a target is determined
    to facilitate processing by users of\n       the History-Info header field entries.
    \ A specific header field\n       parameter is captured for each of the target
    URIs as the target\n       set is determined (per Section 16.5 of [RFC3261]).
    \ The header\n       field parameter is used in both the History-Info and the
    Contact\n       header fields.\n   2.  Added a way to indicate a gap in History-Info
    by adding a\n       nonnegative integer of \"0\".\n   3.  Rather than recommending
    that entries be removed in the case of\n       certain values of the Privacy header
    field, the entries are\n       anonymized.\n   4.  Updated the security section
    to be equivalent to the security\n       recommendations for other SIP header
    fields inserted by\n       intermediaries.\n   5.  Removed Appendix B (\"Voicemail\")
    since a separate call flow\n       document is being published as a companion
    to this document.\n   The first two changes are intended to facilitate application
    usage of\n   the History-Info header field and eliminate the need to make\n   assumptions
    based upon the order of the entries and ensure that the\n   most complete set
    of information is available to the applications.\n   In addition, editorial changes
    were done to both condense and clarify\n   the text, moving the requirements to
    an appendix and removing the\n   inline references to the requirements.  The examples
    were simplified\n   and updated to reflect the protocol changes.  Several of the
    call\n   flows in the appendix were removed and put into a separate document\n
    \  that includes additional use cases that require the new header field\n   parameters.\n"
  - contents:
    - "16.1.  Backwards Compatibility\n   This specification is backwards compatible
      because [RFC4244] allows\n   for the addition of new optional parameters.  This
      specification adds\n   an optional SIP header field parameter to the History-Info
      and\n   Contact header fields.  Entities that have not implemented this\n   specification
      will ignore these parameters; however, per [RFC4244],\n   an entity will not
      remove these parameters from an hi-entry.  While\n   entities compliant to this
      document and [RFC4244] must be able to\n   recognize gaps in the hi-entries,
      this document requires that an\n   index of \"0\" be used in this case.  In
      comparison, [RFC4244]\n   recommended (but did not require) the use of \"1\".
      \ However, since the\n   ABNF in [RFC4244] defines the index as a DIGIT, \"0\"
      would be a valid\n   value; thus, an [RFC4244] implementation should not have
      an issue if\n   it receives hi-entries added by intermediaries compliant to
      this\n   document.\n   As for the behavior of the UACs, UASs, and intermediaries,
      the\n   following additional normative changes have been made:\n   UAC behavior\n
      \  1.  Inclusion of option tag by UAC has changed from SHOULD to MUST.\n   2.
      \ Inclusion of hi-target-entry along with hi-index has changed from\n       MAY/RECOMMEND
      to MUST/MUST.\n   3.  Behavior surrounding the addition of hi-target-entry based
      on a\n       3xx response has changed from MAY/SHOULD to MUST.\n   None of the
      behavior changes will cause any backward or forward\n   compatibility issues.\n
      \  UAS behavior\n   1.  Inclusion of hi-entry in response has changed from SHOULD
      to\n       MUST.\n   As the entity receiving response with hi-entry expected
      it with\n   SHOULD, this change will not cause any backward compatibility issues.\n
      \  Proxy/redirect server behavior\n   1.  Inclusion of the History-Info header
      field when forwarding the\n       request has changed from SHOULD to MUST.\n
      \  2.  Association of Reason with timeout/internal reason has changed\n       from
      MAY to MUST.\n   3.  Inclusion of hi-index has changed from RECOMMENDED to MUST.\n
      \  4.  Inclusion of hi-entries in the response has changed from SHOULD\n       to
      MUST.\n   None of the above behavior changes impact backwards compatibility\n
      \  since they only strengthen normative behavior to improve\n   interoperability.\n
      \  In cases where an entity that is compliant to this document receives\n   a
      request that contains hi-entries compliant only to RFC 4244 (i.e.,\n   the hi-entries
      do not contain any of the new header field\n   parameters), the entity MUST
      NOT add any of the new header field\n   parameters to the hi-entries.  The hi-entries
      MUST be cached and\n   forwarded as any other entries are, as specified in Section
      9.1.  As\n   with entities that are compliant to RFC 4244, applications must
      be\n   able to function in cases of missing information, as specified in\n   Section
      11.\n"
    title: 16.1.  Backwards Compatibility
  title: 16.  Changes from RFC 4244
- contents:
  - '17.  References

    '
  - contents:
    - "17.1.  Normative References\n   [RFC3261]   Rosenberg, J., Schulzrinne, H.,
      Camarillo, G., Johnston,\n               A., Peterson, J., Sparks, R., Handley,
      M., and E.\n               Schooler, \"SIP: Session Initiation Protocol\", RFC
      3261,\n               June 2002.\n   [RFC3326]   Schulzrinne, H., Oran, D.,
      and G. Camarillo, \"The Reason\n               Header Field for the Session
      Initiation Protocol (SIP)\",\n               RFC 3326, December 2002.\n   [RFC3323]
      \  Peterson, J., \"A Privacy Mechanism for the Session\n               Initiation
      Protocol (SIP)\", RFC 3323, November 2002.\n   [RFC2119]   Bradner, S., \"Key
      words for use in RFCs to Indicate\n               Requirement Levels\", BCP
      14, RFC 2119, March 1997.\n   [RFC5234]   Crocker, D. and P. Overell, \"Augmented
      BNF for Syntax\n               Specifications: ABNF\", STD 68, RFC 5234, January
      2008.\n   [RFC5246]   Dierks, T. and E. Rescorla, \"The Transport Layer Security\n
      \              (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC4244]
      \  Barnes, M., \"An Extension to the Session Initiation\n               Protocol
      (SIP) for Request History Information\", RFC\n               4244, November
      2005.\n"
    title: 17.1.  Normative References
  - contents:
    - "17.2.  Informative References\n   [RFC5627]   Rosenberg, J., \"Obtaining and
      Using Globally Routable\n               User Agent URIs (GRUUs) in the Session
      Initiation\n               Protocol (SIP)\", RFC 5627, October 2009.\n   [RFC5630]
      \  Audet, F., \"The Use of the SIPS URI Scheme in the Session\n               Initiation
      Protocol (SIP)\", RFC 5630, October 2009.\n   [RFC3087]   Campbell, B. and R.
      Sparks, \"Control of Service Context\n               using SIP Request-URI\",
      RFC 3087, April 2001.\n   [RFC4240]   Burger, E., Van Dyke, J., and A. Spitzer,
      \"Basic Network\n               Media Services with SIP\", RFC 4240, December
      2005.\n   [RFC3966]   Schulzrinne, H., \"The tel URI for Telephone Numbers\",
      RFC\n               3966, December 2004.\n   [RFC4458]   Jennings, C., Audet,
      F., and J. Elwell, \"Session\n               Initiation Protocol (SIP) URIs
      for Applications such as\n               Voicemail and Interactive Voice Response
      (IVR)\", RFC\n               4458, April 2006.\n   [CALLFLOWS] Barnes, M., Audet,
      F., Schubert, S., Elburg, H., and C.\n               Holmberg, \"Session Initiation
      Protocol (SIP) History-Info\n               Header Call Flow Examples\", Work
      in Progress, November\n               2013.\n"
    title: 17.2.  Informative References
  title: 17.  References
- contents:
  - "Appendix A.  Request History Requirements\n   The following list constitutes
    a set of requirements for a \"Request\n   History\" capability.\n   1.  CAPABILITY-req:
    The \"Request History\" capability provides a\n       capability to inform proxies
    and UAs involved in processing a\n       request about the history/progress of
    that request.  Although\n       this is inherently provided when the retarget
    is in response to a\n       SIP redirect, it is deemed useful for non-redirect
    retargeting\n       scenarios, as well.\n   2.  GENERATION-req: \"Request History\"
    information is generated when\n       the request is retargeted.\n       A.  In
    some scenarios, it might be possible for more than one\n           instance of
    retargeting to occur within the same proxy.  A\n           proxy MUST also generate
    \"Request History\" information for\n           the 'internal retargeting'.\n
    \      B.  An entity (UA or proxy) retargeting in response to a redirect\n           or
    REFER MUST include any \"Request History\" information from\n           the redirect/REFER
    in the new request.\n   3.  ISSUER-req: \"Request History\" information can be
    generated by a\n       UA or proxy.  It can be passed in both requests and responses.\n
    \  4.  CONTENT-req: The \"Request History\" information for each\n       occurrence
    of retargeting shall include the following:\n       A.  the new URI or address
    to which the request is in the process\n           of being retargeted,\n       B.
    \ the URI or address from which the request was retargeted, and\n           whether
    the retarget URI was an AOR,\n       C.  the mechanism by which the new URI or
    address was determined,\n       D.  the reason for the Request-URI or address
    modification, and\n       E.  chronological ordering of the \"Request History\"
    information.\n   5.  REQUEST-VALIDITY-req: \"Request History\" is applicable to
    requests\n       not sent within an early or established dialog (e.g., INVITE,\n
    \      REGISTER, MESSAGE, and OPTIONS).\n   6.  BACKWARDS-req: \"Request History\"
    information may be passed from\n       the generating entity backwards towards
    the UAC.  This is needed\n       to enable services that inform the calling party
    about the dialog\n       establishment attempts.\n   7.  FORWARDS-req: \"Request
    History\" information may also be included\n       by the generating entity in
    the request, if it is forwarded\n       onwards.\n"
  - contents:
    - "A.1.  Security Requirements\n   The \"Request History\" information is being
      inserted by a network\n   element retargeting a request, resulting in a slightly
      different\n   problem than the basic SIP header problem, thus requiring specific\n
      \  consideration.  It is recognized that these security requirements can\n   be
      generalized to a basic requirement of being able to secure\n   information that
      is inserted by proxies.\n   The potential security problems include the following:\n
      \  1.  A rogue application could insert a bogus Request History-Info\n       entry
      by either adding an additional hi-entry as a result of\n       retargeting or
      entering invalid information.\n   2.  A rogue application could rearrange the
      \"Request History\"\n       information to change the nature of the end application
      or to\n       mislead the receiver of the information.\n   3.  A rogue application
      could delete some or all of the \"Request\n       History\" information.\n   Thus,
      a security solution for \"Request History\" must meet the\n   following requirements:\n
      \  1.  SEC-req-1: The entity receiving the \"Request History\" must be\n       able
      to determine whether any of the previously added \"Request\n       History\"
      content has been altered.\n   2.  SEC-req-2: The ordering of the \"Request History\"
      information must\n       be preserved at each instance of retargeting.\n   3.
      \ SEC-req-3: The entity receiving the information conveyed by the\n       \"Request
      History\" must be able to authenticate the entity\n       providing the request.\n
      \  4.  SEC-req-4: To ensure the confidentiality of the \"Request History\"\n
      \      information, only entities that process the request SHOULD have\n       visibility
      to the information.\n   It should be noted that these security requirements
      apply to any\n   entity making use of the \"Request History\" information.\n"
    title: A.1.  Security Requirements
  - contents:
    - "A.2.  Privacy Requirements\n   Since the Request-URI that is captured could
      inadvertently reveal\n   information about the originator, there are general
      privacy\n   requirements that MUST be met:\n   1.  PRIV-req-1: The entity retargeting
      the request must ensure that\n       it maintains the network-provided privacy
      (as described in\n       [RFC3323]) associated with the request as it is retargeted.\n
      \  2.  PRIV-req-2: The entity receiving the \"Request History\" must\n       maintain
      the privacy associated with the information.  In\n       addition, local policy
      at a proxy may identify privacy\n       requirements associated with the Request-URI
      being captured in\n       the \"Request History\" information.\n   3.  PRIV-req-3:
      \"Request History\" information subject to privacy\n       shall not be included
      in outgoing messages unless it is protected\n       as described in [RFC3323].\n"
    title: A.2.  Privacy Requirements
  title: Appendix A.  Request History Requirements
- contents:
  - "Authors' Addresses\n   Mary Barnes\n   Polycom\n   TX\n   US\n   EMail: mary.ietf.barnes@gmail.com\n
    \  Francois Audet\n   Skype\n   EMail: francois.audet@skype.net\n   Shida Schubert\n
    \  NTT\n   EMail: shida@ntt-at.com\n   Hans Erik van Elburg\n   Detecon International
    Gmbh\n   Sternengasse 14-16\n   Cologne\n   Germany\n   EMail: ietf.hanserik@gmail.com\n
    \  Christer Holmberg\n   Ericsson\n   Hirsalantie 11, Jorvas\n   Finland\n   EMail:
    christer.holmberg@ericsson.com\n"
  title: Authors' Addresses
