- title: __initial_text__
  contents:
  - "           Privacy Enhancement for Internet Electronic Mail:\n              Part\
    \ II -- Certificate-Based Key Management\n"
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This RFC suggests a draft standard elective protocol\
    \ for the Internet\n   community, and requests discussion and suggestions for\
    \ improvements.\n   Distribution of this memo is unlimited.\n"
- title: ACKNOWLEDGMENT
  contents:
  - "ACKNOWLEDGMENT\n   This RFC is the outgrowth of a series of IAB Privacy Task\
    \ Force\n   meetings and of internal working papers distributed for those\n  \
    \ meetings.  We would like to thank the members of the Privacy Task\n   Force\
    \ for their comments and contributions at the meetings which led\n   to the preparation\
    \ of this RFC: David Balenson, Curt Barker, Matt\n   Bishop, Morrie Gasser, Russ\
    \ Housley, Dan Nessett, Mike Padlipsky, Rob\n   Shirey, and Steve Wilbur.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Executive Summary                                 \
    \              2\n   2.  Overview of Approach                                \
    \            3\n   3.  Architecture                                          \
    \          4\n   3.1  Scope and Restrictions                                 \
    \        4\n   3.2  Relation to X.509 Architecture                           \
    \      7\n   3.3  Entities' Roles and Responsibilities                       \
    \    7\n   3.3.1  Users and User Agents                                      \
    \  8\n   3.3.2  Organizational Notaries                                      9\n\
    \   3.3.3  Certification Authorities                                   11\n  \
    \ 3.3.3.1  Interoperation Across Certification Hierarchy Boundaries  14\n   3.3.3.2\
    \  Certificate Revocation                                    15\n   3.4  Certificate\
    \ Definition and Usage                              17\n   3.4.1  Contents and\
    \ Use                                            17\n   3.4.1.1  Version Number\
    \                                            18\n   3.4.1.2  Serial Number   \
    \                                          18\n   3.4.1.3  Subject Name      \
    \                                        18\n   3.4.1.4  Issuer Name         \
    \                                      19\n   3.4.1.5  Validity Period       \
    \                                    19\n   3.4.1.6  Subject Public Component\
    \                                  20\n   3.4.1.7  Certificate Signature     \
    \                                20\n   3.4.2  Validation Conventions        \
    \                              20\n   3.4.3  Relation with X.509 Certificate Specification\
    \               22\n   NOTES                                                 \
    \             24\n"
- title: 1.  Executive Summary
  contents:
  - "1.  Executive Summary\n   This is one of a series of RFCs defining privacy enhancement\n\
    \   mechanisms for electronic mail transferred using Internet mail\n   protocols.\
    \  RFC-1113 (the successor to RFC 1040) prescribes protocol\n   extensions and\
    \ processing procedures for RFC-822 mail messages, given\n   that suitable cryptographic\
    \ keys are held by originators and\n   recipients as a necessary precondition.\
    \  RFC-1115 specifies\n   algorithms for use in processing privacy-enhanced messages,\
    \ as called\n   for in RFC-1113.  This RFC defines a supporting key management\n\
    \   architecture and infrastructure, based on public-key certificate\n   techniques,\
    \ to provide keying information to message originators and\n   recipients.  A\
    \ subsequent RFC, the fourth in this series, will\n   provide detailed specifications,\
    \ paper and electronic application\n   forms, etc. for the key management infrastructure\
    \ described herein.\n   The key management architecture described in this RFC\
    \ is compatible\n   with the authentication framework described in X.509.  The\
    \ major\n   contributions of this RFC lie not in the specification of computer\n\
    \   communication protocols or algorithms but rather in procedures and\n   conventions\
    \ for the key management infrastructure.  This RFC\n   incorporates numerous conventions\
    \ to facilitate near term\n   implementation.  Some of these conventions may be\
    \ superceded in time\n   as the motivations for them no longer apply, e.g., when\
    \ X.500 or\n   similar directory servers become well established.\n   The RSA\
    \ cryptographic algorithm, covered in the U.S. by patents\n   administered through\
    \ RSA Data Security, Inc. (hereafter abbreviated\n   RSADSI) has been selected\
    \ for use in this key management system.\n   This algorithm has been selected\
    \ because it provides all the\n   necessary algorithmic facilities, is \"time\
    \ tested\" and is relatively\n   efficient to implement in either software or\
    \ hardware.  It is also\n   the primary algorithm identified (at this time) for\
    \ use in\n   international standards where an asymmetric encryption algorithm\
    \ is\n   required.  Protocol facilities (e.g., algorithm identifiers) exist to\n\
    \   permit use of other asymmetric algorithms if, in the future, it\n   becomes\
    \ appropriate to employ a different algorithm for key\n   management.  However,\
    \ the infrastructure described herein is specific\n   to use of the RSA algorithm\
    \ in many respects and thus might be\n   different if the underlying algorithm\
    \ were to change.\n   Current plans call for RSADSI to act in concert with subscriber\n\
    \   organizations as a \"certifying authority\" in a fashion described\n   later\
    \ in this RFC.  RSADSI will offer a service in which it will sign\n   a certificate\
    \ which has been generated by a user and vouched for\n   either by an organization\
    \ or by a Notary Public.  This service will\n   carry a $25 biennial fee which\
    \ includes an associated license to use\n   the RSA algorithm in conjunction with\
    \ privacy protection of\n   electronic mail.  Users who do not come under the\
    \ purview of the RSA\n   patent, e.g., users affiliated with the U.S. government\
    \ or users\n   outside of the U.S., may make use of different certifying authorities\n\
    \   and will not require a license from RSADSI.  Procedures for\n   interacting\
    \ with these other certification authorities, maintenance\n   and distribution\
    \ of revoked certificate lists from such authorities,\n   etc. are outside the\
    \ scope of this RFC.  However, techniques for\n   validating certificates issued\
    \ by other authorities are contained\n   within the RFC to ensure interoperability\
    \ across the resulting\n   jurisdictional boundaries.\n"
- title: 2.  Overview of Approach
  contents:
  - "2.  Overview of Approach\n   This RFC defines a key management architecture based\
    \ on the use of\n   public-key certificates, in support of the message encipherment\
    \ and\n   authentication procedures defined in RFC-1113.  In the proposed\n  \
    \ architecture, a \"certification authority\" representing an\n   organization\
    \ applies a digital signature to a collection of data\n   consisting of a user's\
    \ public component, various information that\n   serves to identify the user,\
    \ and the identity of the organization\n   whose signature is affixed.  (Throughout\
    \ this RFC we have adopted the\n   terms \"private component\" and \"public component\"\
    \ to refer to the\n   quantities which are, respectively, kept secret and made\
    \ publically\n   available in asymmetric cryptosystems.  This convention is adopted\
    \ to\n   avoid possible confusion arising from use of the term \"secret key\"\
    \ to\n   refer to either the former quantity or to a key in a symmetric\n   cryptosystem.)\
    \  This establishes a binding between these user\n   credentials, the user's public\
    \ component and the organization which\n   vouches for this binding.  The resulting\
    \ signed, data item is called\n   a certificate.  The organization identified\
    \ as the certifying\n   authority for the certificate is the \"issuer\" of that\
    \ certificate.\n   In signing the certificate, the certification authority vouches\
    \ for\n   the user's identification, especially as it relates to the user's\n\
    \   affiliation with the organization.  The digital signature is affixed\n   on\
    \ behalf of that organization and is in a form which can be\n   recognized by\
    \ all members of the privacy-enhanced electronic mail\n   community.  Once generated,\
    \ certificates can be stored in directory\n   servers, transmitted via unsecure\
    \ message exchanges, or distributed\n   via any other means that make certificates\
    \ easily accessible to\n   message originators, without regard for the security\
    \ of the\n   transmission medium.\n   Prior to sending an encrypted message, an\
    \ originator must acquire a\n   certificate for each recipient and must validate\
    \ these certificates.\n   Briefly, validation is performed by checking the digital\
    \ signature in\n   the certificate, using the public component of the issuer whose\n\
    \   private component was used to sign the certificate.  The issuer's\n   public\
    \ component is made available via some out of band means\n   (described later)\
    \ or is itself distributed in a certificate to which\n   this validation procedure\
    \ is applied recursively.\n   Once a certificate for a recipient is validated,\
    \ the public component\n   contained in the certificate is extracted and used\
    \ to encrypt the\n   data encryption key (DEK) that is used to encrypt the message\
    \ itself.\n   The resulting encrypted DEK is incorporated into the X-Key-Info\
    \ field\n   of the message header.  Upon receipt of an encrypted message, a\n\
    \   recipient employs his secret component to decrypt this field,\n   extracting\
    \ the DEK, and then uses this DEK to decrypt the message.\n   In order to provide\
    \ message integrity and data origin authentication,\n   the originator generates\
    \ a message integrity code (MIC), signs\n   (encrypts) the MIC using the secret\
    \ component of his public-key pair,\n   and includes the resulting value in the\
    \ message header in the X-MIC-\n   Info field.  The certificate of the originator\
    \ is also included in\n   the header in the X-Certificate field as described in\
    \ RFC-1113, in\n   order to facilitate validation in the absence of ubiquitous\
    \ directory\n   services.  Upon receipt of a privacy enhanced message, a recipient\n\
    \   validates the originator's certificate, extracts the public component\n  \
    \ from the certificate, and uses that value to recover (decrypt) the\n   MIC.\
    \  The recovered MIC is compared against the locally calculated\n   MIC to verify\
    \ the integrity and data origin authenticity of the\n   message.\n"
- title: 3.  Architecture
  contents:
  - '3.  Architecture

    '
- title: 3.1  Scope and Restrictions
  contents:
  - "3.1  Scope and Restrictions\n   The architecture described below is intended\
    \ to provide a basis for\n   managing public-key cryptosystem values in support\
    \ of privacy\n   enhanced electronic mail (see RFC-1113) in the Internet environment.\n\
    \   The architecture describes procedures for ordering certificates from\n   issuers,\
    \ for generating and distributing certificates, and for \"hot\n   listing\" of\
    \ revoked certificates.  Concurrent with the issuance of\n   this RFC, RFC 1040\
    \ has been updated and reissued as RFC-1113 to\n   describe the syntax and semantics\
    \ of new or revised header fields\n   used to transfer certificates, represent\
    \ the DEK and MIC in this\n   public-key context, and to segregate algorithm definitions\
    \ into a\n   separate RFC to facilitate the addition of other algorithms in the\n\
    \   future.  This RFC focuses on the management aspects of certificate-\n   based,\
    \ public-key cryptography for privacy enhanced mail while RFC-\n   1113 addresses\
    \ representation and processing aspects of such mail,\n   including changes required\
    \ by this key management technology.\n   The proposed architecture imposes conventions\
    \ for certification paths\n   which are not strictly required by the X.509 recommendation\
    \ nor by\n   the technology itself.  The decision to impose these conventions\
    \ is\n   based in part on constraints imposed by the status of the RSA\n   cryptosystem\
    \ within the U.S. as a patented algorithm, and in part on\n   the need for an\
    \ organization to assume operational responsibility for\n   certificate management\
    \ in the current (minimal) directory system\n   infrastructure for electronic\
    \ mail.  Over time, we anticipate that\n   some of these constraints, e.g., directory\
    \ service availability, will\n   change and the procedures specified in the RFC\
    \ will be reviewed and\n   modified as appropriate.\n   At this time, we propose\
    \ a system in which user certificates\n   represent the leaves in a shallow (usually\
    \ two tier) certification\n   hierarchy (tree).  Organizations which act as issuers\
    \ are represented\n   by certificates higher in the tree.  This convention minimizes\
    \ the\n   complexity of validating user certificates by limiting the length of\n\
    \   \"certification paths\" and by making very explicit the relationship\n   between\
    \ a certificate issuer and a user.  Note that only\n   organizations may act as\
    \ issuers in the proposed architecture; a user\n   certificate may not appear\
    \ in a certification path, except as the\n   terminal node in the path.  These\
    \ conventions result in a\n   certification hierarchy which is a compatible subset\
    \ of that\n   permitted under X.509, with respect to both syntax and semantics.\n\
    \   The RFC proposes that RSADSI act as a \"co-issuer\" of certificates on\n \
    \  behalf of most organizations.  This can be effected in a fashion\n   which\
    \ is \"transparent\" so that the organizations appear to be the\n   issuers with\
    \ regard to certificate formats and validation procedures.\n   This is effected\
    \ by having RSADSI generate and hold the secret\n   components used to sign certificates\
    \ on behalf of organizations.  The\n   motivation for RSADSI's role in certificate\
    \ signing is twofold.\n   First, it simplifies accounting controls in support\
    \ of licensing,\n   ensuring that RSADSI is paid for each certificate.  Second,\
    \ it\n   contributes to the overall integrity of the system by establishing a\n\
    \   uniform, high level of protection for the private-components used to\n   sign\
    \ certificates.  If an organization were to sign certificates\n   directly on\
    \ behalf of its affiliated users, the organization would\n   have to establish\
    \ very stringent security and accounting mechanisms\n   and enter into (elaborate)\
    \ legal agreements with RSADSI in order to\n   provide a comparable level of assurance.\
    \  Requests by organizations\n   to perform direct certificate signing will be\
    \ considered on a case-\n   by-case basis, but organizations are strongly urged\
    \ to make use of\n   the facilities proposed by this RFC.\n   Note that the risks\
    \ associated with disclosure of an organization's\n   secret component are different\
    \ from those associated with disclosure\n   of a user's secret component.  The\
    \ former component is used only to\n   sign certificates, never to encrypt message\
    \ traffic.  Thus the\n   exposure of an organization's secret component could\
    \ result in the\n   generation of forged certificates for users affiliated with\
    \ that\n   organization, but it would not affect privacy-enhanced messages which\n\
    \   are protected using legitimate certificates.  Also note that any\n   certificates\
    \ generated as a result of such a disclosure are readily\n   traceable to the\
    \ issuing authority which holds this component, e.g.,\n   RSADSI, due to the non-repudiation\
    \ feature of the digital signature.\n   The certificate registration and signing\
    \ procedures established in\n   this RFC would provide non-repudiable evidence\
    \ of disclosure of an\n   organization's secret component by RSADSI.  Thus this\
    \ RFC advocates\n   use of RSADSI as a co-issuer for certificates until such time\
    \ as\n   technical security mechanisms are available to provide a similar,\n \
    \  system-wide level of assurance for (distributed) certificate signing\n   by\
    \ organizations.\n   We identify two classes of exceptions to this certificate\
    \ signing\n   paradigm.  First, the RSA algorithm is patented only within the\
    \ U.S.,\n   and thus it is very likely that certificate signing by issuers will\n\
    \   arise outside of the U.S., independent of RSADSI.  Second, the\n   research\
    \ that led to the RSA algorithm was sponsored by the National\n   Science Foundation,\
    \ and thus the U.S. government retains royalty-free\n   license rights to the\
    \ algorithm.  Thus the U.S. government may\n   establish a certificate generation\
    \ facilities for its affiliated\n   users.  A number of the procedures described\
    \ in this document apply\n   only to the use of RSADSI as a certificate co-issuer;\
    \ all other\n   certificate generation practices lie outside the scope of this\
    \ RFC.\n   This RFC specifies procedures by which users order certificates\n \
    \  either directly from RSADSI or via a representative in an\n   organization\
    \ with which the user holds some affiliation (e.g., the\n   user's employer or\
    \ educational institution).  Syntactic provisions\n   are made which allow a recipient\
    \ to determine, to some granularity,\n   which identifying information contained\
    \ in the certificate is vouched\n   for by the certificate issuer.  In particular,\
    \ organizations will\n   usually be vouching for the affiliation of a user with\
    \ that\n   organization and perhaps a user's role within the organization, in\n\
    \   addition to the user's name.  In other circumstances, as discussed in\n  \
    \ section 3.3.3, a certificate may indicate that an issuer vouches only\n   for\
    \ the user's name, implying that any other identifying information\n   contained\
    \ in the certificate may not have been validated by the\n   issuer.  These semantics\
    \ are beyond the scope of X.509, but are not\n   incompatible with that recommendation.\n\
    \   The key management architecture described in this RFC has been\n   designed\
    \ to support privacy enhanced mail as defined in this RFC,\n   RFC-1113, and their\
    \ successors.  Note that this infrastructure also\n   supports X.400 mail security\
    \ facilities (as per X.411) and thus paves\n   the way for transition to the OSI/CCITT\
    \ Message Handling System\n   paradigm in the Internet in the future.  The certificate\
    \ issued to a\n   user for the $25 biennial fee will grant to the user identified\
    \ by\n   that certificate a license from RSADSI to employ the RSA algorithm\n\
    \   for certificate validation and for encryption and decryption\n   operations\
    \ in this electronic mail context.  No use of the algorithm\n   outside the scope\
    \ defined in this RFC is authorized by this license\n   as of this time.  Expansion\
    \ of the license to other Internet security\n   applications is possible but not\
    \ yet authorized.  The license granted\n   by this fee does not authorize the\
    \ sale of software or hardware\n   incorporating the RSA algorithm; it is an end-user\
    \ license, not a\n   developer's license.\n"
- title: 3.2  Relation to X.509 Architecture
  contents:
  - "3.2  Relation to X.509 Architecture\n   CCITT 1988 Recommendation X.509, \"The\
    \ Directory - Authentication\n   Framework\", defines a framework for authentication\
    \ of entities\n   involved in a distributed directory service.  Strong authentication,\n\
    \   as defined in X.509, is accomplished with the use of public-key\n   cryptosystems.\
    \  Unforgeable certificates are generated by\n   certification authorities; these\
    \ authorities may be organized\n   hierarchically, though such organization is\
    \ not required by X.509.\n   There is no implied mapping between a certification\
    \ hierarchy and the\n   naming hierarchy imposed by directory system naming attributes.\
    \  The\n   public-key certificate approach defined in X.509 has also been\n  \
    \ adopted in CCITT 1988 X.411 in support of the message handling\n   application.\n\
    \   This RFC interprets the X.509 certificate mechanism to serve the\n   needs\
    \ of privacy-enhanced mail in the Internet environment.  The\n   certification\
    \ hierarchy proposed in this RFC in support of privacy\n   enhanced mail is intentionally\
    \ a subset of that allowed under X.509.\n   In large part constraints have been\
    \ levied in order to simplify\n   certificate validation in the absence of a widely\
    \ available, user-\n   level directory service.  The certification hierarchy proposed\
    \ here\n   also embodies semantics which are not explicitly addressed by X.509,\n\
    \   but which are consistent with X.509 precepts.  The additional\n   semantic\
    \ constraints have been adopted to explicitly address\n   questions of issuer\
    \ \"authority\" which we feel are not well defined in\n   X.509.\n"
- title: 3.3  Entities' Roles and Responsibilities
  contents:
  - "3.3  Entities' Roles and Responsibilities\n   One way to explain the architecture\
    \ proposed by this RFC is to\n   examine the various roles which are defined for\
    \ various entities in\n   the architecture and to describe what is required of\
    \ each entity in\n   order for the proposed system to work properly.  The following\n\
    \   sections identify three different types of entities within this\n   architecture:\
    \ users and user agents, organizational notaries, and\n   certification authorities.\
    \  For each class of entity we describe the\n   (electronic and paper) procedures\
    \ which the entity must execute as\n   part of the architecture and what responsibilities\
    \ the entity assumes\n   as a function of its role in the architecture.  Note\
    \ that the\n   infrastructure described here applies to the situation wherein\
    \ RSADSI\n   acts as a co-issuer of certificates, sharing the role of\n   certification\
    \ authority as described later.  Other certifying\n   authority arrangements may\
    \ employ different procedures and are not\n   addressed by this RFC.\n"
- title: 3.3.1  Users and User Agents
  contents:
  - "3.3.1  Users and User Agents\n   The term User Agent (UA) is taken from CCITT\
    \ X.400 Message Handling\n   Systems (MHS) Recommendations, which define it as\
    \ follows: \"In the\n   context of message handling, the functional object, a\
    \ component of\n   MHS, by means of which a single direct user engages in message\n\
    \   handling.\"  UAs exchange messages by calling on a supporting Message\n  \
    \ Transfer Service (MTS).\n   A UA process supporting privacy-enhanced mail processing\
    \ must protect\n   the private component of its associated entity (ordinarily,\
    \ a human\n   user) from disclosure.  We anticipate that a user will employ\n\
    \   ancillary software (not otherwise associated with the UA) to generate\n  \
    \ his public/private component pair and to compute the (one-way)\n   message hash\
    \ required by the registration procedure.  The public\n   component, along with\
    \ information that identifies the user, will be\n   transferred to an organizational\
    \ notary (see below) for inclusion in\n   an order to an issuer.  The process\
    \ of generating public and private\n   components is a local matter, but we anticipate\
    \ Internet-wide\n   distribution of software suitable for component-pair generation\
    \ to\n   facilitate the process.  The mechanisms used to transfer the public\n\
    \   component and the user identification information must preserve the\n   integrity\
    \ of both quantities and bind the two during this transfer.\n   This proposal\
    \ establishes two ways in which a user may order a\n   certificate, i.e., through\
    \ the user's affiliation with an\n   organization or directly through RSADSI.\
    \  In either case, a user will\n   be required to send a paper order to RSADSI\
    \ on a form described in a\n   subsequent RFC and containing the following information:\n\
    \      1.  Distinguished Name elements (e.g., full legal name,\n          organization\
    \ name, etc.)\n      2.  Postal address\n      3.  Internet electronic mail address\n\
    \      4.  A message hash function, binding the above information to the\n   \
    \       user's public component\n   Note that the user's public component is NOT\
    \ transmitted via this\n   paper path.  In part the rationale here is that the\
    \ public component\n   consists of many (>100) digits and thus is prone to error\
    \ if it is\n   copied to and from a piece of paper.  Instead, a message hash is\n\
    \   computed on the identifying information and the public component and\n   this\
    \ (smaller) message hash value is transmitted along with the\n   identifying information.\
    \  Thus the public component is transferred\n   only via an electronic path, as\
    \ described below.\n   If the user is not affiliated with an organization which\
    \ has\n   established its own \"electronic notary\" capability (an organization\n\
    \   notary or \"ON\" as discussed in the next section), then this paper\n   registration\
    \ form must be notarized by a Notary Public.  If the user\n   is affiliated with\
    \ an organization which has established one or more\n   ONs, the paper registration\
    \ form need not carry the endorsement of a\n   Notary Public.  Concurrent with\
    \ the paper registration, the user must\n   send the information outlined above,\
    \ plus his public component,\n   either to his ON, or directly to RSADSI if no\
    \ appropriate ON is\n   available to the user.  Direct transmission to RSADSI\
    \ of this\n   information will be via electronic mail, using a representation\n\
    \   described in a subsequent RFC.  The paper registration must be\n   accompanied\
    \ by a check or money order for $25 or an organization may\n   establish some\
    \ other billing arrangement with RSADSI.  The maximum\n   (and default) lifetime\
    \ of a certificate ordered through this process\n   is two years.\n   The transmission\
    \ of ID information and public component from a user\n   to his ON is a local\
    \ matter, but we expect electronic mail will also\n   be the preferred approach\
    \ in many circumstances and we anticipate\n   general distribution of software\
    \ to support this process.  Note that\n   it is the responsibility of the user\
    \ and his organization to ensure\n   the integrity of this transfer by some means\
    \ deemed adequately secure\n   for the local computing and communication environment.\
    \  There is no\n   requirement for secrecy in conjunction with this information\n\
    \   transfer, but the integrity of the information must be ensured.\n"
- title: 3.3.2  Organizational Notaries
  contents:
  - "3.3.2  Organizational Notaries\n   An organizational notary is an individual\
    \ who acts as a clearinghouse\n   for certificate orders originating within an\
    \ administrative domain\n   such as a corporation or a university.  An ON represents\
    \ an\n   organization or organizational unit (in X.500 naming terms), and is\n\
    \   assumed to have some independence from the users on whose behalf\n   certificates\
    \ are ordered.  An ON will be restricted through\n   mechanisms implemented by\
    \ the issuing authority, e.g., RSADSI, to\n   ordering certificates properly associated\
    \ with the domain of that ON.\n   For example, an ON for BBN should not be able\
    \ to order certificates\n   for users affiliated with MIT or MITRE, nor vice versa.\
    \  Similarly,\n   if a corporation such as BBN were to establish ONs on a per-\n\
    \   subsidiary basis (corresponding to organization units in X.500 naming\n  \
    \ parlance), then an ON for the BBN Communications subsidiary should\n   not be\
    \ allowed to order a certificate for a user who claims\n   affiliation with the\
    \ BBN Software Products subsidiary.\n   It can be assumed that the set of ONs\
    \ changes relatively slowly and\n   that the number of ONs is relatively small\
    \ in comparison with the\n   number of users.  Thus a more extensive, higher assurance\
    \ process may\n   reasonably be associated with ON accreditation than with per-user\n\
    \   certificate ordering.  Restrictions on the range of information which\n  \
    \ an ON is authorized to certify are established as part of this more\n   elaborate\
    \ registration process.  The procedures by which\n   organizations and organizational\
    \ units are established in the RSADSI\n   database, and by which ONs are registered,\
    \ will be described in a\n   subsequent RFC.\n   An ON is responsible for establishing\
    \ the correctness and integrity\n   of information incorporated in an order, and\
    \ will generally vouch for\n   (certify) the accuracy of identity information\
    \ at a granularity finer\n   than that provided by a Notary Public.  We do not\
    \ believe that it is\n   feasible to enforce uniform standards for the user certification\n\
    \   process across all ONs, but we anticipate that organizations will\n   endeavor\
    \ to maintain high standards in this process in recognition of\n   the \"visibility\"\
    \ associated with the identification data contained in\n   certificates.  An ON\
    \ also may constrain the validity period of an\n   ordered certificate, restricting\
    \ it to less than the default two year\n   interval imposed by the RSADSI license\
    \ agreement.\n   An ON participates in the certificate ordering process by accepting\n\
    \   and validating identification information from a user and forwarding\n   this\
    \ information to RSADSI.  The ON accepts the electronic ordering\n   information\
    \ described above (Distinguished Name elements, mailing\n   address, public component,\
    \ and message hash computed on all of this\n   data) from a user.  (The representation\
    \ for user-to-ON transmission\n   of this data is a local matter, but we anticipate\
    \ that the encoding\n   specified for ON-to-RSADSI representation of this data\
    \ will often be\n   employed.)  The ON sends an integrity-protected (as described\
    \ in\n   RFC-1113) electronic message to RSADSI, vouching for the correctness\n\
    \   of the binding between the public component and the identification\n   data.\
    \  Thus, to support this function, each ON will hold a\n   certificate as an individual\
    \ user within the organization which he\n   represents.  RSADSI will maintain\
    \ a database which identifies the\n   users who also act as ONs and the database\
    \ will specify constraints\n   on credentials which each ON is authorized to certify.\
    \  The\n   electronic mail representation for a user's certificate data in an\
    \ ON\n   message to RSADSI will be specified in a subsequent RFC.\n"
- title: 3.3.3  Certification Authorities
  contents:
  - "3.3.3  Certification Authorities\n   In X.509 the term \"certification authority\"\
    \ is defined as \"an\n   authority trusted by one or more users to create and\
    \ assign\n   certificates\".  This alternate expansion for the acronym \"CA\"\
    \ is\n   roughly equivalent to that contemplated as a \"central authority\" in\n\
    \   RFC-1040 and RFC-1113.  The only difference is that in X.509 there is\n  \
    \ no requirement that a CA be a distinguished entity or that a CA serve\n   a\
    \ large number of users, as envisioned in these RFCs.  Rather, any\n   user who\
    \ holds a certificate can, in the X.509 context, act as a CA\n   for any other\
    \ user.  As noted above, we have chosen to restrict the\n   role of CA in this\
    \ electronic mail environment to organizational\n   entities, to simplify the\
    \ certificate validation process, to impose\n   semantics which support organizational\
    \ affiliation as a basis for\n   certification, and to facilitate license accountability.\n\
    \   In the proposed architecture, individuals who are affiliated with\n   (registered)\
    \ organizations will go through the process described\n   above, in which they\
    \ forward their certificate information to their\n   ON for certification.  The\
    \ ON will, based on local procedures, verify\n   the accuracy of the user's credentials\
    \ and forward this information\n   to RSADSI using privacy-enhanced mail to ensure\
    \ the integrity and\n   authenticity of the information.  RSADSI will carry out\
    \ the actual\n   certificate generation process on behalf of the organization\n\
    \   represented by the ON.  Recall that it is the identity of the\n   organization\
    \ which the ON represents, not the ON's identity, which\n   appears in the issuer\
    \ field of the user certificate.  Therefore it is\n   the private component of\
    \ the organization, not the ON, which is used\n   to sign the user certificate.\n\
    \   In order to carry out this procedure RSADSI will serve as the\n   repository\
    \ for the private components associated with certificates\n   representing organizations\
    \ or organizational units (but not\n   individuals).  In effect the role of CA\
    \ will be shared between the\n   organizational notaries and RSADSI.  This shared\
    \ role will not be\n   visible in the syntax of the certificates issued under\
    \ this\n   arrangement nor is it apparent from the validation procedure one\n\
    \   applies to these certificates.  In this sense, the role of RSADSI as\n   the\
    \ actual signer of certificates on behalf of organizations is\n   transparent\
    \ to this aspect of system operation.\n   If an organization were to carry out\
    \ the certificate signing process\n   locally, and thus hold the private component\
    \ associated with its\n   organization certificate, it would need to contact RSADSI\
    \ to discuss\n   security safeguards, special legal agreements, etc.  A number\
    \ of\n   requirements would be imposed on an organization if such an approach\n\
    \   were persued.  The organization would be required to execute\n   additional\
    \ legal instruments with RSADSI, e.g., to ensure proper\n   accounting for certificates\
    \ generated by the organization.  Special\n   software will be required to support\
    \ the certificate signing process,\n   distinct from the software required for\
    \ an ON.  Stringent procedural,\n   physical, personnel and computer security\
    \ safeguards would be\n   required to support this process, to maintain a relatively\
    \ high level\n   of security for the system as a whole.  Thus, at this time, it\
    \ is not\n   recommended that organizations pursue this approach although local\n\
    \   certificate generation is not expressly precluded by the proposed\n   architecture.\n\
    \   RSADSI has offered to operate a service in which it serves as a CA\n   for\
    \ users who are not affiliated with any organization or who are\n   affiliated\
    \ with an organization which has not opted to establish an\n   organizational\
    \ notary.  To distinguish certificates issued to such\n   \"non-affiliated\" users\
    \ the distinguished string \"Notary\" will appear\n   as the organizational unit\
    \ name of the issuer of the certificate.\n   This convention will be employed\
    \ throughout the system.  Thus not\n   only RSADSI but any other organization\
    \ which elects to provide this\n   type of service to non-affiliated users may\
    \ do so in a standard\n   fashion.  Hence a corporation might issue a certificate\
    \ with the\n   \"Notary\" designation to students hired for the summer, to\n \
    \  differentiate them from full-time employees.  At least in the case of\n   RSADSI,\
    \ the standards for verifying user credentials that carry this\n   designation\
    \ will be well known and widely recognized (e.g., Notary\n   Public endorsement).\n\
    \   To illustrate this convention, consider the following examples.\n   Employees\
    \ of RSADSI will hold certificates which indicate \"RSADSI\" as\n   the organization\
    \ in both the issuer field and the subject field,\n   perhaps with no organizational\
    \ unit specified.  Certificates obtained\n   directly from RSADSI, by user's who\
    \ are not affiliated with any ON,\n   will also indicate \"RSADSI\" as the organization\
    \ and will specify\n   \"Notary\" as an organizational unit in the issuer field.\
    \  However,\n   these latter certificates will carry some other designation for\n\
    \   organization (and, optionally, organizational unit) in the subject\n   field.\
    \  Moreover, an organization designated in the subject field for\n   such a certificate\
    \ will not match any for which RSADSI has an ON\n   registered (to avoid possible\
    \ confusion).\n   In all cases described above, when a certificate is generated\
    \ RSADSI\n   will send a paper reply to the ordering user, including two message\n\
    \   hash functions:\n      1.  a message hash computed on the user's identifying\
    \ information\n          and public component (and sent to RSADSI in the registration\n\
    \          process), to guarantee its integrity across the ordering\n        \
    \  process, and\n      2.  a message hash computed on the public component of\
    \ RSADSI, to\n          provide independent authentication for this public component\n\
    \          which is transmitted to the user via email (see below).\n   RSADSI\
    \ will send to the user via electronic mail (not privacy\n   enhanced) a copy\
    \ of his certificate, a copy of the organization\n   certificate identified in\
    \ the issuer field of the user's certificate,\n   and the public component used\
    \ to validate certificates signed by\n   RSADSI.  The \"issuer\" certificate is\
    \ included to simplify the\n   validation process in the absence of a user-level\
    \ directory system;\n   its distribution via this procedure will probably be phased\
    \ out in\n   the future.  Thus, as described in RFC-1113, the originator of a\n\
    \   message is encouraged, though not required, to include his\n   certificate,\
    \ and that of its issuer, in the privacy enhanced message\n   header (X-Issuer-Certificate)\
    \ to ensure that each recipient can\n   process the message using only the information\
    \ contained in this\n   header.  The organization (organizational unit) identified\
    \ in the\n   subject field of the issuer certificate should correspond to that\n\
    \   which the user claims affiliation (as declared in the subject field\n   of\
    \ his certificate).  If there is no appropriate correspondence\n   between these\
    \ fields, recipients ought to be suspicious of the\n   implied certification path.\
    \  This relationship should hold except in\n   the case of \"non-affiliated\"\
    \ users for whom the \"Notary\" convention\n   is employed.\n   In contrast, the\
    \ issuer field of the issuer's certificate will\n   specify \"RSADSI\" as the\
    \ organization, i.e., RSADSI will certify all\n   organizational certificates.\
    \  This convention allows a recipient to\n   validate any originator's certificate\
    \ (within the RSADSI\n   certification hierarchy) in just two steps.  Even if\
    \ an organization\n   establishes a certification hierarchy involving organizational\
    \ units,\n   certificates corresponding to each unit can be certified both by\n\
    \   RSADSI and by the organizational entity immediately superior to the\n   unit\
    \ in the hierarchy, so as to preserve this short certification\n   path feature.\
    \  First, the public component of RSADSI is employed to\n   validate the issuer's\
    \ certificate.  Then the issuer's public\n   component is extracted from that\
    \ certificate and is used to validate\n   the originator's certificate.  The recipient\
    \ then extracts the\n   originator's public component for use in processing the\
    \ X-Mic-Info\n   field of the message (see and RFC-1113).\n   The electronic representation\
    \ used for transmission of the data items\n   described above (between an ON and\
    \ RSADSI) will be contained in a\n   subsequent RFC.  To verify that the registration\
    \ process has been\n   successfully completed and to prepare for exchange of privacy-\n\
    \   enhanced electronic mail, the user should perform the following\n   steps:\n\
    \      1.  extract the RSADSI public component, the issuer's certificate\n   \
    \       and the user's certificate from the message\n      2.  compute the message\
    \ hash on the RSADSI public component and\n          compare the result to the\
    \ corresponding message hash that was\n          included in the paper receipt\n\
    \      3.  use the RSADSI public component to validate the signature on\n    \
    \      the issuer's certificate (RSADSI will be the issuer of this\n         \
    \ certificate)\n      4.  extract the organization public component from the validated\n\
    \          issuer's certificate and use this public component to\n          validate\
    \ the user certificate\n      5.  extract the identification information and public\
    \ component\n          from the user's certificate, compute the message hash on\
    \ it\n          and compare the result to the corresponding message hash\n   \
    \       value transmitted via the paper receipt\n   For a user whose order was\
    \ processed via an ON, successful completion\n   of these steps demonstrates that\
    \ the certificate issued to him\n   matches that which he requested and which\
    \ was certified by his ON.\n   It also demonstrates that he possesses the (correct)\
    \ public component\n   for RSADSI and for the issuer of his certificate.  For\
    \ a user whose\n   order was placed directly with RSADSI, this process demonstrates\
    \ that\n   his certificate order was properly processed by RSADSI and that he\n\
    \   possesses the valid issuer certificate for the RSADSI Notary.  The\n   user\
    \ can use the RSADSI public component to validate organizational\n   certificates\
    \ for organizations other than his own.  He can employ the\n   public component\
    \ associated with his own organization to validate\n   certificates issued to\
    \ other users in his organization.\n"
- title: 3.3.3.1  Interoperation Across Certification Hierarchy Boundaries
  contents:
  - "3.3.3.1  Interoperation Across Certification Hierarchy Boundaries\n   In order\
    \ to accommodate interoperation with other certification\n   authorities, e.g.,\
    \ foreign or U.S. government CAs, two conventions\n   will be adopted.  First,\
    \ all certifying authorities must agree to\n   \"cross-certify\" one another,\
    \ i.e., each must be willing to sign a\n   certificate in which the issuer is\
    \ that certifying authority and the\n   subject is another certifying authority.\
    \  Thus, RSADSI might generate\n   a certificate in which it is identified as\
    \ the issuer and a\n   certifying authority for the U.S. government is indentified\
    \ as the\n   subject.  Conversely, that U.S. government certifying authority would\n\
    \   generate a certificate in which it is the issuer and RSADSI is the\n   subject.\
    \  This cross-certification of certificates for \"top-level\"\n   CAs establishes\
    \ a basis for \"lower level\" (e.g., organization and\n   user) certificate validation\
    \ across the hierarchy boundaries.  This\n   avoids the need for users in one\
    \ certification hierarchy to engage in\n   some \"out-of-band\" procedure to acquire\
    \ a public-key for use in\n   validating certificates from a different certification\
    \ hierarchy.\n   The second convention is that more than one X-Issuer-Certificate\n\
    \   field may appear in a privacy-enhanced mail header.  Multiple issuer\n   certificates\
    \ can be included so that a recipient can more easily\n   validate an originator's\
    \ certificate when originator and recipient\n   are not part of a common CA hierarchy.\
    \  Thus, for example, if an\n   originator served by the RSADSI certification\
    \ hierarchy sends a\n   message to a recipient served by a U.S. government hierarchy,\
    \ the\n   originator could (optionally) include an X-Issuer-Certificate field\n\
    \   containing a certificate issued by the U.S. government CA for RSADSI.\n  \
    \ In this fashion the recipient could employ his public component for\n   the\
    \ U.S. government CA to validate this certificate for RSADSI, from\n   which he\
    \ would extract the RSADSI public component to validate the\n   certificate for\
    \ the originator's organization, from which he would\n   extract the public component\
    \ required to validate the originator's\n   certificate.  Thus, more steps can\
    \ be required to validate\n   certificates when certification hierarchy boundaries\
    \ are crossed, but\n   the same basic procedure is employed.  Remember that caching\
    \ of\n   certificates by UAs can significantly reduce the effort required to\n\
    \   process messages and so these examples should be viewed as \"worse\n   case\"\
    \ scenarios.\n"
- title: 3.3.3.2  Certificate Revocation
  contents:
  - "3.3.3.2  Certificate Revocation\n   X.509 states that it is a CA's responsibility\
    \ to maintain:\n      1.  a time-stamped list of the certificates it issued which\
    \ have\n          been revoked\n      2.  a time-stamped list of revoked certificates\
    \ representing\n          other CAs\n   There are two primary reasons for a CA\
    \ to revoke a certificate, i.e.,\n   suspected compromise of a secret component\
    \ (invalidating the\n   corresponding public component) or change of user affiliation\n\
    \   (invalidating the Distinguished Name).  As described in X.509, \"hot\n   listing\"\
    \ is one means of propagating information relative to\n   certificate revocation,\
    \ though it is not a perfect mechanism.  In\n   particular, an X.509 Revoked Certificate\
    \ List (RCL) indicates only\n   the age of the information contained in it; it\
    \ does not provide any\n   basis for determining if the list is the most current\
    \ RCL available\n   from a given CA.  To help address this concern, the proposed\n\
    \   architecture establishes a format for an RCL in which not only the\n   date\
    \ of issue, but also the next scheduled date of issue is\n   specified.  This\
    \ is a deviation from the format specified in X.509.\n   Adopting this convention,\
    \ when the next scheduled issue date arrives\n   a CA must issue a new RCL, even\
    \ if there are no changes in the list\n   of entries.  In this fashion each CA\
    \ can independently establish and\n   advertise the frequency with which RCLs\
    \ are issued by that CA.  Note\n   that this does not preclude RCL issuance on\
    \ a more frequent basis,\n   e.g., in case of some emergency, but no Internet-wide\
    \ mechanisms are\n   architected for alerting users that such an unscheduled issuance\
    \ has\n   taken place.  This scheduled RCL issuance convention allows users\n\
    \   (UAs) to determine whether a given RCL is \"out of date,\" a facility\n  \
    \ not available from the standard RCL format.\n   A recent (draft) version of\
    \ the X.509 recommendation calls for each\n   RCL to contain the serial numbers\
    \ of certificates which have been\n   revoked by the CA administering that list,\
    \ i.e., the CA that is\n   identified as the issuer for the corresponding revoked\
    \ certificates.\n   Upon receipt of a RCL, a UA should compare the entries against\
    \ any\n   cached certificate information, deleting cache entries which match\n\
    \   RCL entries.  (Recall that the certificate serial numbers are unique\n   only\
    \ for each issuer, so care must be exercised in effecting this\n   cache search.)\
    \  The UA should also retain the RCL to screen incoming\n   messages to detect\
    \ use of revoked certificates carried in these\n   message headers.  More specific\
    \ details for processing RCL are beyond\n   the scope of this RFC as they are\
    \ a function of local certificate\n   management techniques.\n   In the architecture\
    \ defined by this RFC, a RCL will be maintained for\n   each CA (organization\
    \ or organizational unit), signed using the\n   private component of that organization\
    \ (and thus verifiable using the\n   public component of that organization as\
    \ extracted from its\n   certificate).  The RSADSI Notary organizational unit\
    \ is included in\n   this collection of RCLs.  CAs operated under the auspices\
    \ of the U.S.\n   government or foreign CAs are requested to provide RCLs conforming\
    \ to\n   these conventions, at least until such time as X.509 RCLs provide\n \
    \  equivalent functionality, in support of interoperability with the\n   Internet\
    \ community.  An additional, \"top level\" RCL, will be\n   maintained by RSAD-SI,\
    \ and should be maintained by other \"top level\"\n   CAs, for revoked organizational\
    \ certificates.\n   The hot listing procedure (expect for this top level RCL)\
    \ will be\n   effected by having an ON from each organization transmit to RSADSI\
    \ a\n   list of the serial numbers of users within his organization, to be\n \
    \  hot listed.  This list will be transmitted using privacy-enhanced\n   mail\
    \ to ensure authenticity and integrity and will employ\n   representation conventions\
    \ to be provided in a subsequent RFC.\n   RSADSI will format the RCL, sign it\
    \ using the private component of\n   the organization, and transmit it to the\
    \ ON for dissemination, using\n   a representation defined in a subsequent RFC.\
    \  Means for\n   dissemination of RCLs, both within the administrative domain\
    \ of a CA\n   and across domain boundaries, are not specified by this proposal.\n\
    \   However, it is anticipated that each hot list will also be available\n   via\
    \ network information center databases, directory servers, etc.\n   The following\
    \ ASN.1 syntax, derived from X.509, defines the format of\n   RCLs for use in\
    \ the Internet privacy enhanced email environment.  See\n   the ASN.1 definition\
    \ of certificates (later in this RFC or in X.509,\n   Annex G) for comparison.\n\
    \      revokedCertificateList  ::=     SIGNED SEQUENCE {\n              signature\
    \       AlgorithmIdentifier,\n              issuer          Name,\n          \
    \    list            SEQUENCE RCLEntry,\n              lastUpdate      UTCTime,\n\
    \              nextUpdate      UTCTime}\n      RCLEntry        ::=     SEQUENCE\
    \ {\n              subject         CertificateSerialNumber,\n              revocationDate\
    \  UTCTime}\n"
- title: 3.4  Certificate Definition and Usage
  contents:
  - '3.4  Certificate Definition and Usage

    '
- title: 3.4.1  Contents and Use
  contents:
  - "3.4.1  Contents and Use\n   A certificate contains the following contents:\n\
    \      1.  version\n      2.  serial number\n      3.  certificate signature (and\
    \ associated algorithm identifier)\n      4.  issuer name\n      5.  validity\
    \ period\n      6.  subject name\n      7.  subject public component (and associated\
    \ algorithm identifier)\n   This section discusses the interpretation and use\
    \ of each of these\n   certificate elements.\n"
- title: 3.4.1.1  Version Number
  contents:
  - "3.4.1.1  Version Number\n   The version number field is intended to facilitate\
    \ orderly changes in\n   certificate formats over time.  The initial version number\
    \ for\n   certificates is zero (0).\n"
- title: 3.4.1.2  Serial Number
  contents:
  - "3.4.1.2  Serial Number\n   The serial number field provides a short form, unique\
    \ identifier for\n   each certificate generated by an issuer.  The serial number\
    \ is used\n   in RCLs to identify revoked certificates instead of including entire\n\
    \   certificates.  Thus each certificate generated by an issuer must\n   contain\
    \ a unique serial number.  It is suggested that these numbers\n   be issued as\
    \ a compact, monotonic increasing sequence.\n"
- title: 3.4.1.3  Subject Name
  contents:
  - "3.4.1.3  Subject Name\n   A certificate provides a representation of its subject's\
    \ identity and\n   organizational affiliation in the form of a Distinguished Name.\
    \  The\n   fundamental binding ensured by the privacy enhancement mechanisms is\n\
    \   that between public-key and the user identity.  CCITT Recommendation\n   X.500\
    \ defines the concept of Distinguished Name.\n   Version 2 of the U.S. Government\
    \ Open Systems Interconnection Profile\n   (GOSIP) specifies maximum sizes for\
    \ O/R Name attributes.  Since most\n   of these attributes also appear in Distinguished\
    \ Names, we have\n   adopted the O/R Name attribute size constraints specified\
    \ in GOSIP\n   and noted below.  Using these size constraints yields a maximum\n\
    \   Distinguished Name length (exclusive of ASN encoding) of two-hundred\n   fifty-nine\
    \ (259) characters, based on the required and optional\n   attributes described\
    \ below for subject names.  The following\n   attributes are required in subject\
    \ Distinguished Names for purposes\n   of this RFC:\n      1.  Country Name in\
    \ standard encoding (e.g., the two-character\n          Printable String \"US\"\
    \ assigned by ISO 3166 as the identifier\n          for the United States of America,\
    \ the string \"GB\" assigned as\n          the identifier for the United Kingdom,\
    \ or the string \"NQ\"\n          assigned as the identifier for Dronning Maud\
    \ Land).  Maximum\n          ASCII character length of three (3).\n      2.  Organizational\
    \ Name (e.g., the Printable String \"Bolt Beranek\n          and Newman, Inc.\"\
    ).  Maximum ASCII character length of\n          sixty-four (64).\n      3.  Personal\
    \ Name (e.g., the X.402/X.411 structured Printable\n          String encoding\
    \ for the name John Linn).  Maximum ASCII\n          character length of sixty-four\
    \ (64).\n   The following attributes are optional in subject Distinguished Names\n\
    \   for purposes of this RFC:\n      1.  Organizational Unit Name(s) (e.g., the\
    \ Printable String \"BBN\n          Communications Corporation\")  A hierarchy\
    \ of up to four\n          organizational unit names may be provided; the least\n\
    \          significant member of the hierarchy is represented first.\n       \
    \   Each of these attributes has a maximum ASCII character length of\n       \
    \   thirty-two (32), for a total of one-hundred and twenty-eight\n          (128)\
    \ characters if all four are present.\n"
- title: 3.4.1.4  Issuer Name
  contents:
  - "3.4.1.4  Issuer Name\n   A certificate provides a representation of its issuer's\
    \ identity, in\n   the form of a Distinguished Name.  The issuer identification\
    \ is\n   needed in order to determine the appropriate issuer public component\n\
    \   to use in performing certificate validation.  The following\n   attributes\
    \ are required in issuer Distinguished Names for purposes of\n   this RFC:\n \
    \     1.  Country Name (e.g., encoding for \"US\")\n      2.  Organizational Name\n\
    \   The following attributes are optional in issuer Distinguished Names\n   for\
    \ purposes of this RFC:\n      1.  Organizational Unit Name(s).  (A hierarchy\
    \ of up to four\n          organizational unit names may be provided; the least\
    \ significant\n          member of the hierarchy is represented first.)  If the\n\
    \          issuer is vouching for the user identity in the Notary capacity\n \
    \         described above, then exactly one instance of this field\n         \
    \ must be present and it must consist of the string \"Notary\".\n   As noted earlier,\
    \ only organizations are allowed as issuers in the\n   proposed authentication\
    \ hierarchy.  Hence the Distinguished Name for\n   an issuer should always be\
    \ that of an organization, not a user, and\n   thus no Personal Name field may\
    \ be included in the Distinguished Name\n   of an issuer.\n"
- title: 3.4.1.5  Validity Period
  contents:
  - "3.4.1.5  Validity Period\n   A certificate carries a pair of time specifiers,\
    \ indicating the start\n   and end of the time period over which a certificate\
    \ is intended to be\n   used.  No message should ever be prepared for transmission\
    \ with a\n   non-current certificate, but recipients should be prepared to receive\n\
    \   messages processed using recently-expired certificates.  This fact\n   results\
    \ from the unpredictable (and sometimes substantial)\n   transmission delay of\
    \ the staged-delivery electronic mail\n   environment.  The default and maximum\
    \ validity period for\n   certificates issued in this system will be two years.\n"
- title: 3.4.1.6  Subject Public Component
  contents:
  - "3.4.1.6  Subject Public Component\n   A certificate carries the public component\
    \ of its associated entity,\n   as well as an indication of the algorithm with\
    \ which the public\n   component is to be used.  For purposes of this RFC, the\
    \ algorithm\n   identifier will indicate use of the RSA algorithm, as specified\
    \ in\n   RFC-1115.  Note that in this context, a user's public component is\n\
    \   actually the modulus employed in RSA algorithm calculations.  A\n   \"universal\"\
    \ (public) exponent is employed in conjunction with the\n   modulus to complete\
    \ the system.  Two choices of exponents are\n   recommended for use in this context\
    \ and are described in section\n   3.4.3.  Modulus size will be permitted to vary\
    \ between 320 and 632\n   bits.\n"
- title: 3.4.1.7  Certificate Signature
  contents:
  - "3.4.1.7  Certificate Signature\n   A certificate carries a signature algorithm\
    \ identifier and a\n   signature, applied to the certificate by its issuer.  The\
    \ signature\n   is validated by the user of a certificate, in order to determine\
    \ that\n   the integrity of its contents have not been compromised subsequent\
    \ to\n   generation by a CA.  An encrypted, one-way hash will be employed as\n\
    \   the signature algorithm.  Hash functions suitable for use in this\n   context\
    \ are notoriously difficult to design and tend to be\n   computationally intensive.\
    \  Initially we have adopted a hash function\n   developed by RSADSI and which\
    \ exhibits performance roughly equivalent\n   to the DES (in software).  This\
    \ same function has been selected for\n   use in other contexts in this system\
    \ where a hash function (message\n   hash algorithm) is required, e.g., MIC for\
    \ multicast messages.  In\n   the future we expect other one-way hash functions\
    \ will be added to\n   the list of algorithms designated for this purpose.\n"
- title: 3.4.2  Validation Conventions
  contents:
  - "3.4.2  Validation Conventions\n   Validating a certificate involves verifying\
    \ that the signature\n   affixed to the certificate is valid, i.e., that the hash\
    \ value\n   computed on the certificate contents matches the value that results\n\
    \   from decrypting the signature field using the public component of the\n  \
    \ issuer.  In order to perform this operation the user must possess the\n   public\
    \ component of the issuer, either via some integrity-assured\n   channel, or by\
    \ extracting it from another (validated) certificate.\n   In the proposed architecture\
    \ this recursive operation is terminated\n   quickly by adopting the convention\
    \ that RSADSI will certify the\n   certificates of all organizations or organizational\
    \ units which act\n   as issuers for end users.  (Additional validation steps\
    \ may be\n   required for certificates issued by other CAs as described in section\n\
    \   3.3.3.1.)\n   Certification means that RSADSI will sign certificates in which\
    \ the\n   subject is the organization or organizational unit and for which\n \
    \  RSADSI is the issuer, thus implying that RSADSI vouches for the\n   credentials\
    \ of the subject.  This is an appropriate construct since\n   each ON representing\
    \ an organization or organizational unit must have\n   registered with RSADSI\
    \ via a procedure more rigorous than individual\n   user registration.  This does\
    \ not preclude an organizational unit\n   from also holding a certificate in which\
    \ the \"parent\" organization\n   (or organizational unit) is the issuer.  Both\
    \ certificates are\n   appropriate and permitted in the X.509 framework.  However,\
    \ in order\n   to facilitate the validation process in an environment where user-\n\
    \   level directory services are generally not available, we will (at\n   this\
    \ time) adopt this certification convention.\n   The public component needed to\
    \ validate certificates signed by RSADSI\n   (in its role as a CA for issuers)\
    \ is transmitted to each user as part\n   of the registration process (using electronic\
    \ mail with independent,\n   postal confirmation via a message hash).  Thus a\
    \ user will be able to\n   validate any user certificate (from the RSADSI hierarchy)\
    \ in at most\n   two steps.  Consider the situation in which a user receives a\
    \ privacy\n   enhanced message from an originator with whom the recipient has\
    \ never\n   previously corresponded.  Based on the certification convention\n\
    \   described above, the recipient can use the RSADSI public component to\n  \
    \ validate the issuer's certificate contained in the X-Issuer-\n   Certificate\
    \ field.  (We recommend that, initially, the originator\n   include his organization's\
    \ certificate in this optional field so that\n   the recipient need not access\
    \ a server or cache for this public\n   component.)  Using the issuer's public\
    \ component (extracted from this\n   certificate), the recipient can validate\
    \ the originator's certificate\n   contained in the X-Certificate field of the\
    \ header.\n   Having performed this certificate validation process, the recipient\n\
    \   can extract the originator's public component and use it to decrypt\n   the\
    \ content of the X-MIC-Info field and thus verify the data origin\n   authenticity\
    \ and integrity of the message.  Of course,\n   implementations of privacy enhanced\
    \ mail should cache validated\n   public components (acquired from incoming mail\
    \ or via the message\n   from a user registration process) to speed up this process.\
    \  If a\n   message arrives from an originator whose public component is held\
    \ in\n   the recipient's cache, the recipient can immediately employ that\n  \
    \ public component without the need for the certificate validation\n   process\
    \ described here.  Also note that the arithmetic required for\n   certificate\
    \ validation is considerably faster than that involved in\n   digitally signing\
    \ a certificate, so as to minimize the computational\n   burden on users.\n  \
    \ A separate issue associated with validation of certificates is a\n   semantic\
    \ one, i.e., is the entity identified in the issuer field\n   appropriate to vouch\
    \ for the identifying information in the subject\n   field.  This is a topic outside\
    \ the scope of X.509, but one which\n   must be addressed in any viable system.\
    \  The hierarchy proposed in\n   this RFC is designed to address this issue. \
    \ In most cases a user\n   will claim, as part of his identifying information,\
    \ affiliation with\n   some organization and that organization will have the means\
    \ and\n   responsibility for verifying this identifying information.  In such\n\
    \   circumstances one should expect an obvious relationship between the\n   Distinguished\
    \ Name components in the issuer and subject fields.\n   For example, if the subject\
    \ field of a certificate identified an\n   individual as affiliated with the \"\
    Widget Systems Division\"\n   (Organizational Unit Name) of \"Compudigicorp\"\
    \ (Organizational Name),\n   one would expect the issuer field to specify \"Compudigicorp\"\
    \ as the\n   Organizational Name and, if an Organizational Unit Name were present,\n\
    \   it should be \"Widget Systems Division.\"  If the issuer's certificate\n \
    \  indicated \"Compudigicorp\" as the subject (with no Organizational Unit\n \
    \  specified), then the issuer should be \"RSADSI.\"  If the issuer's\n   certificate\
    \ indicated \"Widget Systems Division\" as Organizational\n   Unit and \"Compudigicorp\"\
    \ as Organization in the subject field, then\n   the issuer could be either \"\
    RSADSI\" (due to the direct certification\n   convention described earlier) or\
    \ \"Compudigicorp\" (if the organization\n   elected to distribute this intermediate\
    \ level certificate).  In the\n   later case, the certificate path would involve\
    \ an additional step\n   using the certificate in which \"Compudigicorp\" is the\
    \ subject and\n   \"RSADSI\" is the issuer.  One should be suspicious if the validation\n\
    \   path does not indicate a subset relationship for the subject and\n   issuer\
    \ Distinguished Names in the certification path, expect where\n   cross-certification\
    \ is employed to cross CA boundaries.\n   It is a local matter whether the message\
    \ system presents a human user\n   with the certification path used to validate\
    \ a certificate associated\n   with incoming, privacy-enhanced mail.  We note\
    \ that a visual display\n   of the Distinguished Names involved in that path is\
    \ one means of\n   providing the user with the necessary information.  We recommend,\n\
    \   however, that certificate validation software incorporate checks and\n   alert\
    \ the user whenever the expected certification path relationships\n   are not\
    \ present.  The rationale here is that regular display of\n   certification path\
    \ data will likely be ignored by users, whereas\n   automated checking with a\
    \ warning provision is a more effective means\n   of alerting users to possible\
    \ certification path anomalies.  We urge\n   developers to provide facilities\
    \ of this sort.\n"
- title: 3.4.3  Relation with X.509 Certificate Specification
  contents:
  - "3.4.3  Relation with X.509 Certificate Specification\n   An X.509 certificate\
    \ can be viewed as two components: contents and an\n   encrypted hash.  The encrypted\
    \ hash is formed and processed as\n   follows:\n      1.  X, the hash, is computed\
    \ as a function of the certificate\n          contents\n      2.  the hash is\
    \ signed by raising X to the power e (modulo n)\n      3.  the hash's signature\
    \ is validated by raising the result of\n          step 2 to the power d (modulo\
    \ n), yielding X, which is\n          compared with the result computed as a function\
    \ of certificate\n          contents.\n   Annex C to X.509 suggests the use of\
    \ Fermat number F4 (65537 decimal,\n   1 + 2 **16 ) as a fixed value for e which\
    \ allows relatively efficient\n   authentication processing, i.e., at most seventeen\
    \ (17)\n   multiplications are required to effect exponentiation).  As an\n  \
    \ alternative one can employ three (3) as the value for e, yielding\n   even faster\
    \ exponentiation, but some precautions must be observed\n   (see RFC-1115).  Users\
    \ of the algorithm select values for d (a secret\n   quantity) and n (a non-secret\
    \ quantity) given this fixed value for e.\n   As noted earlier, this RFC proposes\
    \ that either three (3) or F4 be\n   employed as universal encryption exponents,\
    \ with the choice specified\n   in the algorithm identifier.  In particular, use\
    \ of an exponent value\n   of three (3) for certificate validation is encouraged,\
    \ to permit\n   rapid certificate validation.  Given these conventions, a user's\n\
    \   public component, and thus the quantity represented in his\n   certificate,\
    \ is actually the modulus (n) employed in this computation\n   (and in the computations\
    \ used to protect the DEK and MSGHASH, as\n   described in RFC-1113).  A user's\
    \ private component is the exponent\n   (d) cited above.\n   The X.509 certificate\
    \ format is defined (in X.509, Annex G) by the\n   following ASN.1 syntax:\n \
    \        Certificate ::= SIGNED SEQUENCE{\n                 version [0]     Version\
    \ DEFAULT v1988,\n                 serialNumber    CertificateSerialNumber,\n\
    \                 signature       AlgorithmIdentifier,\n                 issuer\
    \          Name,\n                 validity        Validity,\n               \
    \  subject         Name,\n                 subjectPublicKeyInfo    SubjectPublicKeyInfo}\n\
    \         Version ::=     INTEGER {v1988(0)}\n         CertificateSerialNumber\
    \ ::=     INTEGER\n         Validity ::=    SEQUENCE{\n                 notBefore\
    \       UTCTime,\n                 notAfter        UTCTime}\n         SubjectPublicKeyInfo\
    \ ::=        SEQUENCE{\n                 algorithm               AlgorithmIdentifier,\n\
    \                 subjectPublicKey        BIT STRING}\n         AlgorithmIdentifier\
    \ ::= SEQUENCE{\n                 algorithm       OBJECT IDENTIFIER,\n       \
    \          parameters      ANY DEFINED BY algorithm OPTIONAL}\n   All components\
    \ of this structure are well defined by ASN.1 syntax\n   defined in the 1988 X.400\
    \ and X.500 Series Recommendations, except\n   for the AlgorithmIdentifier.  An\
    \ algorithm identifier for RSA is\n   contained in Annex H of X.509 but is unofficial.\
    \  RFC-1115 will\n   provide detailed syntax and values for this field.\n"
- title: 'NOTES:'
  contents:
  - "NOTES:\n  [1]  CCITT Recommendation X.411 (1988), \"Message Handling Systems:\n\
    \       Message Transfer System: Abstract Service Definition and\n       Procedures\"\
    .\n  [2]  CCITT Recommendation X.509 (1988), \"The Directory Authentication\n\
    \       Framework\".\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n       Steve Kent\n       BBN Communications\n       50 Moulton\
    \ Street\n       Cambridge, MA 02138\n       Phone: (617) 873-3988\n       EMail:\
    \ kent@BBN.COM\n       John Linn\n       Secure Systems\n       Digital Equipment\
    \ Corporation\n       85 Swanson Road, BXB1-2/D04\n       Boxborough, MA  01719-1326\n\
    \       Phone: 508-264-5491\n       EMail: Linn@ultra.enet.dec.com\n"
