- title: __initial_text__
  contents:
  - '                           LDP Applicability

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Multiprotocol Label Switching (MPLS) is a method for forwarding\n\
    \   packets that uses short, fixed-length values carried by packets,\n   called\
    \ labels, to determine packet nexthops.  A fundamental concept\n   in MPLS is\
    \ that two Label Switching Routers (LSRs) must agree on the\n   meaning of the\
    \ labels used to forward traffic between and through\n   them.  This common understanding\
    \ is achieved by using a set of\n   procedures, called a label distribution protocol,\
    \ by which one LSR\n   informs another of label bindings it has made.  This document\n\
    \   describes the applicability of a set of such procedures called LDP\n   (for\
    \ Label Distribution Protocol) by which LSRs distribute labels to\n   support\
    \ MPLS forwarding along normally routed paths.\n"
- title: 1. LDP Applicability
  contents:
  - "1. LDP Applicability\n   A label distribution protocol is a set of procedures\
    \ by which one\n   Label Switching Router (LSR) informs another of the meaning\
    \ of labels\n   used to forward traffic between and through them.\n   The MPLS\
    \ architecture allows for the possibility of more than a\n   single method for\
    \ distributing labels, and a number of different\n   label distribution protocols\
    \ are being standardized.  Existing\n   protocols have been extended so that label\
    \ distribution can be\n   piggybacked on them, and new protocols have been defined\
    \ for the\n   explicit purpose of distributing labels.\n   This document describes\
    \ the applicability of the Label Distribution\n   Protocol (LDP), a new protocol\
    \ for label distribution designed to\n   support label distribution for MPLS forwarding\
    \ along normally routed\n   paths as determined by destination-based routing protocols.\
    \  This is\n   sometimes called MPLS hop-by-hop forwarding.\n   LDP, together\
    \ with an IP routing plane and software to program ATM\n   switch or Frame Relay\
    \ switch cross-connect tables, can implement IP\n   in a network of ATM and/or\
    \ Frame Relay switches without requiring an\n   overlay or the use of ATM-specific\
    \ or Frame Relay-specific addressing\n   or routing.\n   LDP is also useful in\
    \ situations that require efficient hop-by-hop\n   routed tunnels, such as MPLS-based\
    \ VPN architectures [RFC2574] and\n   tunneling between BGP border routers.\n\
    \   In addition, LDP includes a mechanism that makes it possible to\n   extend\
    \ it to support MPLS features that go beyond best effort hop-\n   by-hop forwarding.\n\
    \   As a stand-alone protocol for distributing labels LDP does not rely\n   on\
    \ the presence of specific routing protocols at every hop along an\n   LSP path\
    \ in order to establish an LSP.  Hence LDP is useful in\n   situations in which\
    \ an LSP must traverse nodes which may not all\n   support a common piggybacked\
    \ approach to distributing labels.\n   Traffic Engineering [TE] is expected to\
    \ be an important MPLS\n   application.  MPLS support for Traffic Engineering\
    \ uses explicitly\n   routed LSPs, which need not follow normally-routed (hop-by-hop)\n\
    \   paths.\n   Explicitly routed LSPs may be setup by CR-LDP [CRLDP-AS], a set\
    \ of\n   extensions to LDP, or by RSVP-TE [RSVP-TE-AS], a set of extensions to\n\
    \   RSVP.  There is currently no consensus on which of these protocols is\n  \
    \ technically superior.  Therefore, network administrators should make\n   a choice\
    \ between the two based upon their needs and particular\n   situation.\n"
- title: 2. Requirement Level
  contents:
  - "2. Requirement Level\n   The \"requirement level\" [RFC2026] for LDP is:\n  \
    \    Implementation of LDP is recommended for devices that perform MPLS\n    \
    \  forwarding along normally routed paths as determined by\n      destination-based\
    \ routing protocols.\n"
- title: 3. Feature Overview
  contents:
  - "3. Feature Overview\n   LDP associates a Forwarding Equivalence Class (FEC) [RFC3031]\
    \ with\n   each label it distributes.  Two LSRs which use LDP to exchange FEC-\n\
    \   label binding information are known as \"LDP Peers\", and we speak of\n  \
    \ there being an \"LDP Session\" between them.\n   LDP uses TCP for session communication.\
    \  Use of TCP ensures that\n   session messages are reliably delivered, and that\
    \ distributed labels\n   and state information associated with LSPs need not be\
    \ refreshed\n   periodically.\n   LDP includes a mechanism by which an LSR can\
    \ discover potential LDP\n   peers.  The discovery mechanism makes it unnecessary\
    \ for operators to\n   explicitly configure each LSR with its LDP peers.\n   When\
    \ an LSR discovers another LSR it follows the LDP session setup\n   procedure\
    \ to establish an LDP session.  By means of this procedure\n   the LSRs establish\
    \ a session TCP connection and use it to negotiate\n   parameters for the session,\
    \ such as the label distribution method to\n   be used (see below).  After the\
    \ LSRs agree on the parameters, the\n   session is operational and the LSRs use\
    \ the TCP connection for label\n   distribution.\n   LDP supports two different\
    \ methods for label distribution.  An LSR\n   using Downstream Unsolicited distribution\
    \ advertises FEC-label\n   bindings to its peers when it is ready to forward packets\
    \ in the FEC\n   by means of MPLS.  An LSR using Downstream on Demand distribution\n\
    \   provides FEC-label bindings to a peer in response to specific\n   requests\
    \ from the peer for a label for the FEC.\n   LDP allows LSRs flexibility in strategies\
    \ for retaining learned\n   labels.  An LSR using liberal label retention stores\
    \ all labels\n   learned from peers regardless of whether it currently needs them\
    \ for\n   forwarding, whereas one using conservative label retention stores\n\
    \   only labels for which it has immediate use and releases unneeded\n   labels\
    \ to the peer that advertised them.\n   In addition, LDP allows flexibility in\
    \ strategies for when to\n   advertise FEC-label bindings.  An LSR using independent\
    \ control mode\n   advertises FEC-label bindings to peers whenever it sees fit,\
    \ whereas\n   one using ordered control advertises bindings only when it has\n\
    \   previously received a label for the FEC from the FEC nexthop or it is\n  \
    \ an MPLS egress for the FEC.\n   Downstream on Demand distribution with conservative\
    \ label retention\n   and ordered control is appropriate in situations where labels\
    \ are a\n   relatively scarce resource that must be conserved, and Downstream\n\
    \   Unsolicited distribution with liberal label retention and independent\n  \
    \ control is appropriate where labels are plentiful and need not be\n   carefully\
    \ conserved.  However, the protocol permits other\n   combinations of distribution\
    \ method, label retention mode and control\n   mode, including hybrid variants\
    \ of them.\n   LDP defines a mechanism for loop detection to protect against\n\
    \   forwarding loops in LSPs that traverse non-TTL MPLS clouds; see\n   [RFC3031]\
    \ for discussion of situations which may benefit from this\n   mechanism.  The\
    \ loop detection mechanism is optional in the sense\n   that it may be disabled\
    \ by LSR configuration.  However, an LDP-\n   compliant LSR must implement it.\n\
    \   LDP includes an extension mechanism which supports the development of\n  \
    \ vendor-private and experimental features.  This mechanism defines\n   procedures\
    \ for introducing new types of messages and TLVs, methods an\n   LSR can use for\
    \ detecting such messages and TLVs, and procedures an\n   LSR must follow when\
    \ it receives a message or TLV it does not\n   implement.  While it is not possible\
    \ to make every future enhancement\n   backwards compatible, these procedures\
    \ facilitate the introduction of\n   new capabilities in MPLS networks that include\
    \ older implementations\n   that do not recognize them.\n"
- title: 4. Scalability Considerations
  contents:
  - "4. Scalability Considerations\n   The following factors may influence the scalability\
    \ of LDP\n   implementations:\n      -  LDP label distribution is incremental,\
    \ requiring no periodic\n         refresh of FEC-label bindings.\n      -  In\
    \ situations were label resources may be scarce (ATM and Frame\n         Relay\
    \ links) the use of the Downstream on Demand distribution\n         method with\
    \ conservative label retention ensures that only\n         those labels required\
    \ to support normally-routed paths are\n         allocated and distributed.\n\
    \      -  In situations where label resources are not scarce, the use of\n   \
    \      the Downstream Unsolicited method with liberal label retention\n      \
    \   ensures that changes in FEC nexthop from one LDP peer to\n         another\
    \ require no distribution action to update previously\n         distributed labels.\n\
    \      -  Limitations on the number of TCP connections an LSR supports\n     \
    \    limit the number of LDP peers the LSR can support.\n      -  Use of the optional\
    \ path vector based loop detection mechanism\n         imposes additional memory\
    \ and processing requirements on an\n         LSR, as well as additional LDP traffic.\
    \  Both impact\n         scalability.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   LDP defines the optional use of the TCP MD5 Signature\
    \ Option to\n   protect against the introduction of spoofed TCP segments into\
    \ LDP\n   session connection streams.  LDP use of the TCP MD5 Signature Option\n\
    \   is similar to BGP [RFC1771] use of the option specified in [RFC2385].\n"
- title: 6. References
  contents:
  - "6. References\n   [CRLDP-AS]   J. Ash, M. Girish, E. Gray, B. Jamoussi, G. Wright,\n\
    \                \"Applicability Statement for CR-LDP\", Work in Progress,\n \
    \               September 1999.\n   [RFC1771]    Rekhter, Y. and T. Li, \"A Border\
    \ Gateway Protocol 4\n                (BGP-4)\", RFC 1771, March 1995.\n   [RFC2026]\
    \    Bradner, S., \"The Internet Standards Process -- Revision\n             \
    \   3\", BCP 9, RFC 2026, October 1996.\n   [RFC2385]    Heffernan, A., \"Protection\
    \ of BGP Sessions via the TCP\n                MD5 Signature Option\", RFC 2385,\
    \ August 1998.\n   [RFC2547]    Rosen, E. and Y. Rekhter, \"BGP/MPLS VPNs\", RFC\
    \ 2547,\n                March 1999.\n   [RFC3036]    Andersson, L., Doolan, P.,\
    \ Feldman, N., Fredette, A. and\n                B. Thomas, \"LDP Specification\"\
    , RFC 3036, January 2001.\n   [RFC3031]    Rosen, E., Viswanathan, A. and R. Callon,\
    \ \"Multiprotocol\n                Label Switching Architecture\", RFC 3031, January\
    \ 2001.\n   [RSVP-TE-AS] Awduche, D., Hannan, A. and X. Xiao, \"Applicability\n\
    \                State for Extensions to RSVP for LSP-Tunnels\", Work in\n   \
    \             Progress, April 2000.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Eric Gray\n   Zaffire, Inc\n   2630 Orchard Parkway,\n\
    \   San Jose, CA 95134-2020\n   Phone:  408-894-7362\n   EMail: ewgray@mindspring.com\n\
    \   Bob Thomas\n   Cisco Systems, Inc.\n   250 Apollo Dr.\n   Chelmsford, MA 01824\n\
    \   Phone:  978-244-8078\n   EMail: rhthomas@cisco.com\n"
- title: 8. Full Copyright Statement
  contents:
  - "8. Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
