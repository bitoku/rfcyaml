- contents:
  - '              TCP Processing of the IPv4 Precedence Field

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo describes a conflict between TCP [RFC793] and DiffServ\n
    \  [RFC2475] on the use of the three leftmost bits in the TOS octet of\n   an
    IPv4 header [RFC791]. In a network that contains DiffServ-capable\n   nodes, such
    a conflict can cause failures in establishing TCP\n   connections or can cause
    some established TCP connections to be reset\n   undesirably. This memo proposes
    a modification to TCP for resolving\n   the conflict.\n   Because the IPv6 [RFC2460]
    traffic class octet does not have any\n   defined meaning except what is defined
    in RFC 2474, and in particular\n   does not define precedence or security parameter
    bits, there is no\n   conflict between TCP and DiffServ on the use of any bits
    in the IPv6\n   traffic class octet.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   In TCP, each connection has a set of states associated with
    it. Such\n   states are reflected by a set of variables stored in the TCP Control\n
    \  Block (TCB) of both ends. Such variables may include the local and\n   remote
    socket number, precedence of the connection, security level\n   and compartment,
    etc.  Both ends must agree on the setting of the\n   precedence and security parameters
    in order to establish a connection\n   and keep it open.\n   There is no field
    in the TCP header that indicates the precedence of\n   a segment. Instead, the
    precedence field in the header of the IP\n   packet is used as the indication.
    \ The security level and compartment\n   are likewise carried in the IP header,
    but as IP options rather than\n   a fixed header field.  Because of this difference,
    the problem with\n   precedence discussed in this memo does not apply to them.\n
    \  TCP requires that the precedence (and security parameters) of a\n   connection
    must remain unchanged during the lifetime of the\n   connection. Therefore, for
    an established TCP connection with\n   precedence, the receipt of a segment with
    different precedence\n   indicates an error. The connection must be reset [RFC793,
    pp. 36, 37,\n   40, 66, 67, 71].\n   With the advent of DiffServ, intermediate
    nodes may modify the\n   Differentiated Services Codepoint (DSCP) [RFC2474] of
    the IP header\n   to indicate the desired Per-hop Behavior (PHB) [RFC2475, RFC2597,\n
    \  RFC2598]. The DSCP includes the three bits formerly known as the\n   precedence
    field.  Because any modification to those three bits will\n   be considered illegal
    by endpoints that are precedence-aware, they\n   may cause failures in establishing
    connections, or may cause\n   established connections to be reset.\n"
  title: 1. Introduction
- contents:
  - "2. Terminology\n   Segment: the unit of data that TCP sends to IP\n   Precedence
    Field: the three leftmost bits in the TOS octet of an IPv4\n   header. Note that
    in DiffServ, these three bits may or may not be\n   used to denote the precedence
    of the IP packet. There is no\n   precedence field in the traffic class octet
    in IPv6.\n   TOS Field: bits 3-6 in the TOS octet of IPv4 header [RFC 1349].\n
    \  MBZ field: Must Be Zero\n   The structure of the TOS octet is depicted below:\n
    \                  0     1     2     3     4     5     6     7\n                +-----+-----+-----+-----+-----+-----+-----+-----+\n
    \               |   PRECEDENCE    |          TOS          | MBZ |\n                +-----+-----+-----+-----+-----+-----+-----+-----+\n
    \  DS Field: the TOS octet of an IPv4 header is renamed the\n   Differentiated
    Services (DS) Field by DiffServ.\n   The structure of the DS field is depicted
    below:\n                  0   1   2   3   4   5   6   7\n                +---+---+---+---+---+---+---+---+\n
    \               |         DSCP          |  CU   |\n                +---+---+---+---+---+---+---+---+\n
    \  DSCP: Differentiated Service Code Point, the leftmost 6 bits in the\n   DS
    field.\n   CU:   currently unused.\n   Per-hop Behavior (PHB): a description of
    the externally observable\n   forwarding treatment applied at a differentiated
    services-compliant\n   node to a behavior aggregate.\n"
  title: 2. Terminology
- contents:
  - "3. Problem Description\n   The manipulation of the DSCP to achieve the desired
    PHB by DiffServ-\n   capable nodes may conflict with TCP's use of the precedence
    field.\n   This conflict can potentially cause problems for TCP implementations\n
    \  that conform to RFC 793.  First, page 36 of RFC 793 states:\n       If the
    connection is in any non-synchronized state (LISTEN, SYN-\n       SENT, SYN-RECEIVED),
    and the incoming segment acknowledges\n       something not yet sent (the segment
    carries an unacceptable ACK),\n       or if an incoming segment has a security
    level or compartment\n       which does not exactly match the level and compartment
    requested\n       for the connection, a reset is sent. If our SYN has not been\n
    \      acknowledged and the precedence level of the incoming segment is\n       higher
    than the precedence level requested then either raise the\n       local precedence
    level (if allowed by the user and the system) or\n       send a reset; or if the
    precedence level of the incoming segment\n       is lower than the precedence
    level requested then continue as if\n       the precedence matched exactly (if
    the remote TCP cannot raise\n       the precedence level to match ours this will
    be detected in the\n       next segment it sends, and the connection will be terminated\n
    \      then). If our SYN has been acknowledged (perhaps in this incoming\n       segment)
    the precedence level of the incoming segment must match\n       the local precedence
    level exactly, if it does not a reset must\n       be sent.\n   This leads to
    Problem #1:  For a precedence-aware TCP module, if\n   during TCP's synchronization
    process, the precedence fields of the\n   SYN and/or ACK packets are modified
    by the intermediate nodes,\n   resulting in the received ACK packet having a different
    precedence\n   from the precedence picked by this TCP module, the TCP connection\n
    \  cannot be established, even if both modules actually agree on an\n   identical
    precedence for the connection.\n   Then, on page 37, RFC 793 states:\n       If
    the connection is in a synchronized state (ESTABLISHED, FIN-\n       WAIT-1, FIN-WAIT-2,
    CLOSE-WAIT, CLOSING, LAST-ACK, TIME-WAIT),\n       security level, or compartment,
    or precedence which does not\n       exactly match the level, and compartment,
    and precedence\n       requested for the connection, a reset is sent and connection
    goes\n       to the CLOSED state.\n   This leads to Problem #2:  For a precedence-aware
    TCP module, if the\n   precedence field of a received segment from an established
    TCP\n   connection has been changed en route by the intermediate nodes so as\n
    \  to be different from the precedence specified during the connection\n   setup,
    the TCP connection will be reset.\n   Each of problems #1 and #2 has a mirroring
    problem. They cause TCP\n   connections that must be reset according to RFC 793
    not to be reset.\n   Problem #3:  A TCP connection may be established between
    two TCP\n   modules that pick different precedence, because the precedence fields\n
    \  of the SYN and ACK packets are modified by intermediate nodes,\n   resulting
    in both modules thinking that they are in agreement for the\n   precedence of
    the connection.\n   Problem #4:  A TCP connection has been established normally
    by two\n   TCP modules that pick the same precedence. But in the middle of the\n
    \  data transmission, one of the TCP modules changes the precedence of\n   its
    segments. According to RFC 793, the TCP connection must be reset.\n   In a DiffServ-capable
    environment, if the precedence of the segments\n   is altered by intermediate
    nodes such that it retains the expected\n   value when arriving at the other TCP
    module, the connection will not\n   be reset.\n"
  title: 3. Problem Description
- contents:
  - "4. Proposed Modification to TCP\n   The proposed modification to TCP is that
    TCP must ignore the\n   precedence of all received segments. More specifically:\n
    \  (1) In TCP's synchronization process, the TCP modules at both ends\n   must
    ignore the precedence fields of the SYN and SYN ACK packets. The\n   TCP connection
    will be established if all the conditions specified by\n   RFC 793 are satisfied
    except the precedence of the connection.\n   (2) After a connection is established,
    each end sends segments with\n   its desired precedence. The precedence picked
    by one end of the TCP\n   connection may be the same or may be different from
    the precedence\n   picked by the other end (because precedence is ignored during\n
    \  connection setup time). The precedence fields may be changed by the\n   intermediate
    nodes too. In either case, the precedence of the\n   received packets will be
    ignored by the other end. The TCP connection\n   will not be reset in either case.\n
    \  Problems #1 and #2 are solved by this proposed modification. Problems\n   #3
    and #4 become non-issues because TCP must ignore the precedence.\n   In a DiffServ-capable
    environment, the two cases described in\n   problems #3 and #4 should be allowed.\n"
  title: 4. Proposed Modification to TCP
- contents:
  - "5. Security Considerations\n   A TCP implementation that terminates a connection
    upon receipt of any\n   segment with an incorrect precedence field, regardless
    of the\n   correctness of the sequence numbers in the segment's header, poses
    a\n   serious denial-of-service threat, as all an attacker must do to\n   terminate
    a connection is guess the port numbers and then send two\n   segments with different
    precedence values; one of them is certain to\n   terminate the connection.  Accordingly,
    the change to TCP processing\n   proposed in this memo would yield a significant
    gain in terms of that\n   TCP implementation's resilience.\n   On the other hand,
    the stricter processing rules of RFC 793 in\n   principle make TCP spoofing attacks
    more difficult, as the attacker\n   must not only guess the victim TCP's initial
    sequence number, but\n   also its precedence setting.\n   Finally, the security
    issues of each PHB group are addressed in the\n   PHB group's specification [RFC2597,
    RFC2598].\n"
  title: 5. Security Considerations
- contents:
  - "6. Acknowledgments\n   Our thanks to Al Smith for his careful review and comments.\n"
  title: 6. Acknowledgments
- contents:
  - "7. References\n   [RFC791]  Postel, J., \"Internet Protocol\", STD 5, RFC 791,
    September\n             1981.\n   [RFC793]  Postel, J., \"Transmission Control
    Protocol\", STD 7, RFC\n             793, September 1981.\n   [RFC1349] Almquist,
    P., \"Type of Service in the Internet Protocol\n             Suite\", RFC 1349,
    July 1992.\n   [RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version
    6\n             (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2474]
    Nichols, K., Blake, S., Baker, F. and D. Black, \"Definition\n             of
    the Differentiated Services Field (DS Field) in the IPv4\n             and IPv6
    Headers\", RFC 2474, December 1998.\n   [RFC2475] Blake, S., Black, D., Carlson,
    M., Davies, E., Wang, Z. and\n             W.  Weiss, \"An Architecture for Differentiated
    Services\",\n             RFC 2475, December 1998.\n   [RFC2597] Heinanen, J.,
    Baker, F., Weiss, W. and J. Wroclawski,\n             \"Assured Forwarding PHB
    Group\", RFC 2587, June 1999.\n   [RFC2598] Jacobson, V., Nichols, K. and K. Poduri,
    \"An Expedited\n             Forwarding PHB\", RFC 2598, June 1999.\n"
  title: 7. References
- contents:
  - "8. Authors' Addresses\n   Xipeng Xiao\n   Global Crossing\n   141 Caspian Court\n
    \  Sunnyvale, CA 94089\n   USA\n   Phone: +1 408-543-4801\n   EMail: xipeng@gblx.net\n
    \  Alan Hannan\n   iVMG, Inc.\n   112 Falkirk Court\n   Sunnyvale, CA 94087\n
    \  USA\n   Phone: +1 408-749-7084\n   EMail: alan@ivmg.net\n   Edward Crabbe\n
    \  Exodus Communications\n   2650 San Tomas Expressway\n   Santa Clara, CA 95051\n
    \  USA\n   Phone: +1 408-346-1544\n   EMail: edc@explosive.net\n   Vern Paxson\n
    \  ACIRI/ICSI\n   1947 Center Street\n   Suite 600\n   Berkeley, CA 94704-1198\n
    \  USA\n   Phone: +1 510-666-2882\n   EMail: vern@aciri.org\n"
  title: 8. Authors' Addresses
- contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 9.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
