- title: __initial_text__
  contents:
  - '  Interface to the Routing System (I2RS) Security-Related Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document presents security-related requirements for the\n \
    \  Interface to the Routing System (I2RS) protocol, which provides a new\n   interface\
    \ to the routing system described in the I2RS architecture\n   document (RFC 7921).\
    \  The I2RS protocol is implemented by reusing\n   portions of existing IETF protocols\
    \ and adding new features to them.\n   One such reuse is of the security features\
    \ of a secure transport\n   (e.g., Transport Layer Security (TLS), Secure SHell\
    \ (SSH) Protocol,\n   Datagram TLS (DTLS)) such as encryption, message integrity,\
    \ mutual\n   peer authentication, and anti-replay protection.  The new I2RS\n\
    \   features to consider from a security perspective are as follows: a\n   priority\
    \ mechanism to handle multi-headed write transactions, an\n   opaque secondary\
    \ identifier that identifies an application using the\n   I2RS client, and an\
    \ extremely constrained read-only non-secure\n   transport.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8241.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology and Concepts ........................................4\n  \
    \    2.1. Requirements Language ......................................4\n    \
    \  2.2. Security Terminology .......................................4\n      2.3.\
    \ I2RS-Specific Terminology ..................................5\n      2.4. Concepts\
    \ ...................................................5\n   3. Security Features\
    \ and Protocols: Reused and New .................6\n      3.1. Security Protocols\
    \ Reused by the I2RS Protocol .............6\n      3.2. New Features Related\
    \ to Security ...........................7\n      3.3. I2RS Protocol Security\
    \ Requirements vs. IETF\n           Management Protocols .......................................8\n\
    \   4. Security-Related Requirements ..................................10\n  \
    \    4.1. I2RS Peer (Agent and Client) Identity Authentication ......10\n    \
    \  4.2. Identity Validation before Role-Based Message Actions .....11\n      4.3.\
    \ Peer Identity, Priority, and Client Redundancy ............12\n      4.4. Multi-Channel\
    \ Transport: Secure and Non-Secure ............13\n      4.5. Management Protocol\
    \ Security ..............................15\n      4.6. Role-Based Data Model\
    \ Security ............................16\n      4.7. Security of the Environment\
    \ ...............................17\n   5. IANA Considerations ............................................17\n\
    \   6. Security Considerations ........................................17\n  \
    \ 7. References .....................................................18\n    \
    \  7.1. Normative References ......................................18\n      7.2.\
    \ Informative References ....................................18\n   Acknowledgements\
    \ ..................................................20\n   Authors' Addresses\
    \ ................................................20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Interface to the Routing System (I2RS) protocol provides\
    \ read and\n   write access to information and state within the routing system.\
    \  An\n   I2RS client interacts with one or more I2RS agents to collect\n   information\
    \ from network routing systems.  [RFC7921] describes the\n   architecture of this\
    \ interface, and this document assumes the reader\n   is familiar with this architecture\
    \ and its definitions.\n   The I2RS interface is instantiated by the I2RS protocol\
    \ connecting an\n   I2RS client and an I2RS agent associated with a routing system.\
    \  The\n   I2RS protocol is implemented by reusing portions of existing IETF\n\
    \   protocols and adding new features to them.  As a reuse protocol, it\n   can\
    \ be considered a higher-layer protocol because it can be\n   instantiated in\
    \ multiple management protocols (e.g., NETCONF\n   [RFC6241] or RESTCONF [RFC8040])\
    \ operating over a secure transport.\n   These protocols are what provide its\
    \ security.\n   This document is part of a suite of documents outlining requirements\n\
    \   for the I2RS protocol, which also includes the following:\n   o  \"An Architecture\
    \ for the Interface to the Routing System\"\n      [RFC7921]\n   o  \"I2RS Ephemeral\
    \ State Requirements\" [RFC8242]\n   o  \"Interface to the Routing System (I2RS)\
    \ Traceability: Framework\n      and Information Model\" (which discusses traceability)\
    \ [RFC7923]\n   o  \"Requirements for Subscription to YANG Datastores\" (which\n\
    \      highlights the publication/subscription requirements) [RFC7922]\n   Since\
    \ the I2RS \"higher-layer\" protocol changes the interface to the\n   routing\
    \ systems, it is important that implementers understand the new\n   security requirements\
    \ for the environment the I2RS protocol operates\n   in.  A summary of the I2RS\
    \ protocol security environment is found in\n   the I2RS architecture [RFC7921].\n\
    \   I2RS reuses the secure transport protocols (TLS, SSH, DTLS) that\n   support\
    \ encryption, message integrity, peer authentication, and key\n   distribution\
    \ protocols.  Optionally, implementers may utilize\n   Authentication, Authorization,\
    \ and Accounting (AAA) protocols (Radius\n   over TLS or Diameter over TLS) to\
    \ securely distribute identity\n   information.\n   Section 2 highlights some\
    \ of the terminology and concepts that the\n   reader is required to be familiar\
    \ with.\n   Section 3 provides an overview of security features and protocols\n\
    \   being reused (Section 3.1), lists the new security features being\n   required\
    \ (Section 3.2), and explores how existing and new security\n   features and protocols\
    \ would be paired with existing IETF management\n   protocols (Section 3.3).\n\
    \   The new features I2RS extends to these protocols are a priority\n   mechanism\
    \ to handle multi-headed writes, an opaque secondary\n   identifier to allow traceability\
    \ of an application utilizing a\n   specific I2RS client to communicate with an\
    \ I2RS agent, and non-\n   secure transport constrained to be used only for read-only\
    \ data,\n   which may include publicly available data (e.g., public BGP events,\n\
    \   public telemetry information, web service availability) and some\n   legacy\
    \ data.\n   Section 4 provides the I2RS protocol security requirements of several\n\
    \   security features.  Protocols designed to be I2RS higher-layer\n   protocols\
    \ need to fulfill these security requirements.\n"
- title: 2.  Terminology and Concepts
  contents:
  - '2.  Terminology and Concepts

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.2.  Security Terminology
  contents:
  - "2.2.  Security Terminology\n   This document uses the terminology found in [RFC4949]\
    \ and [RFC7921].\n   Specifically, this document reuses the following terms from\n\
    \   [RFC4949]:\n   o  access control\n   o  authentication\n   o  data confidentiality\n\
    \   o  data integrity\n   o  data privacy\n   o  identity\n   o  identifier\n\
    \   o  mutual authentication\n   o  role\n   o  role-based access control\n  \
    \ o  security audit trail\n   o  trust\n   [RFC7922] describes traceability for\
    \ the I2RS interface and the I2RS\n   protocol.  Traceability is not equivalent\
    \ to a security audit trail\n   or simple logging of information.  A security\
    \ audit trail may utilize\n   traceability information.\n"
- title: 2.3.  I2RS-Specific Terminology
  contents:
  - "2.3.  I2RS-Specific Terminology\n   This document discusses the security of the\
    \ multiple I2RS\n   communication channels that operate over the higher-layer\
    \ I2RS\n   protocol.  The higher-layer I2RS protocol combines a secure transport\n\
    \   and I2RS contextual information, and it reuses IETF protocols and\n   data\
    \ models to create the secure transport and the contextual\n   information driven\
    \ by the I2RS data model.  To describe how the I2RS\n   higher-layer protocol\
    \ combines other protocols, the following terms\n   are used:\n   I2RS component\
    \ protocols\n      Protocols that are reused and combined to create the I2RS higher-\n\
    \      layer protocol.\n   I2RS secure transport component protocols (required)\n\
    \      Secure transport protocols that combine to support the I2RS\n      higher-layer\
    \ protocol.\n   I2RS management component protocols (required)\n      Management\
    \ protocols that combine to provide the management-\n      information context\
    \ for the I@RS higher-layer protocol.\n   I2RS AAA component protocols (optional)\n\
    \      AAA protocols supporting the I2RS higher-layer protocol.\n"
- title: 2.4.  Concepts
  contents:
  - "2.4.  Concepts\n   The reader should be familiar with the pervasive security\n\
    \   requirements in [RFC7258].\n   This document uses the following concepts from\
    \ the I2RS architecture\n   [RFC7921] listed below with their respective section\
    \ numbers from\n   said RFC:\n   o  I2RS client, agent, and protocol (Section\
    \ 2)\n   o  I2RS higher-layer protocol (Section 7.2)\n   o  scope: read, notification,\
    \ identity, and write (Section 2)\n   o  identity and secondary identity (Section\
    \ 2)\n   o  roles or security rules (Section 2)\n   o  routing system/subsystem\
    \ (Section 2)\n   o  I2RS assumed security environment (Section 4)\n   o  I2RS\
    \ identity and authentication (Section 4.1)\n   o  scope of Authorization in I2RS\
    \ client and agent (Section 4.2)\n   o  client redundancy with a single client\
    \ identity (Section 4.3),\n   o  restrictions on I2RS in personal devices (Section\
    \ 4.4)\n   o  communication channels and I2RS higher-layer protocol\n      (Section\
    \ 7.2)\n   o  active communication versus connectivity (Section 7.5)\n   o  multi-headed\
    \ control (Section 7.8)\n   o  transaction, message, multi-message atomicity (Section\
    \ 7.9)\n"
- title: '3.  Security Features and Protocols: Reused and New'
  contents:
  - '3.  Security Features and Protocols: Reused and New

    '
- title: 3.1.  Security Protocols Reused by the I2RS Protocol
  contents:
  - "3.1.  Security Protocols Reused by the I2RS Protocol\n   I2RS requires a secure\
    \ transport protocol and key distribution\n   protocols.  The secure transport\
    \ for I2RS requires one to provide\n   peer authentication.  In addition, the\
    \ features required for I2RS\n   messages are confidentiality, authentication,\
    \ and replay protection.\n   According to [RFC8095], the secure transport protocols\
    \ that support\n   peer authentication, confidentiality, data integrity, and replay\n\
    \   protection are the following:\n   1.  TLS [RFC5246] over TCP or Stream Control\
    \ Transmission Protocol\n       (SCTP)\n   2.  DTLS over UDP with replay detection\
    \ and an anti-DoS stateless\n       cookie mechanism required for the I2RS protocol\
    \ and the DTLS\n       options of record-size negotiation and conveyance of the\
    \ Don't\n       Fragment (DF) bit are set for IPv4, or no fragmentation extension\n\
    \       headers for IPv6 to be optional in deployments are allowed by the\n  \
    \     I2RS protocol\n   3.  HTTP over TLS (over TCP or SCTP)\n   4.  HTTP over\
    \ DTLS (with the requirements and optional features\n       specified above in\
    \ item 2)\n   As detailed in Section 3.3, the following protocols would need to\
    \ be\n   extended to provide confidentiality, data integrity, peer\n   authentication,\
    \ and key distribution and to run over a secure\n   transport (TLS or DTLS):\n\
    \   o  IP Flow Information Export (IPFIX) over SCTP, TCP, or UDP\n   o  Forwarding\
    \ and Control Element Separation (ForCES) Transport\n      Mapping Layer (TML)\
    \ over SCTP\n   The specific type of key management protocols an I2RS secure\n\
    \   transport uses depends on the transport.  Key management protocols\n   utilized\
    \ for the I2RS protocols SHOULD support automatic rotation.\n   An I2RS implementer\
    \ may use AAA protocols over secure transport to\n   distribute the identities\
    \ for the I2RS client, I2RS agent, and role-\n   authorization information.  Two\
    \ AAA protocols are as follows:\n   Diameter [RFC6733] and Radius [RFC2865]. \
    \ To provide I2RS peer\n   identities with the best security, the AAA protocols\
    \ MUST be run over\n   a secure transport (Diameter over secure transport (TLS\
    \ over TCP)\n   [RFC6733]), Radius over a secure transport (TLS) [RFC6614]).\n"
- title: 3.2.  New Features Related to Security
  contents:
  - "3.2.  New Features Related to Security\n   The new features are priority, an\
    \ opaque secondary identifier, and a\n   non-secure protocol for read-only data\
    \ constrained to specific\n   standard usages.  The I2RS protocol allows multi-headed\
    \ control by\n   several I2RS clients.  This multi-headed control is based on\
    \ the\n   assumption that the operator deploying the I2RS clients, I2RS agents,\n\
    \   and the I2RS protocol will coordinate the read, write, and\n   notification\
    \ scope so the I2RS clients will not contend for the same\n   write scope.  However,\
    \ just in case there is an unforeseen overlap of\n   I2RS clients attempting to\
    \ write a particular piece of data, the I2RS\n   architecture [RFC7921] provides\
    \ the concept of each I2RS client\n   having a priority.  The I2RS client with\
    \ the highest priority will\n   have its write succeed.  This document specifies\
    \ requirements for\n   this new concept of priority (see Section 4.3).\n   The\
    \ opaque secondary identifier identifies an application that uses\n   communication\
    \ from the I2RS client to I2RS agent to manage the\n   routing system.  The secondary\
    \ identifier is opaque to the I2RS\n   protocol.  In order to protect personal\
    \ privacy, the secondary\n   identifier should not contain identifiable personal\
    \ information.\n   The last new feature related to I2RS security is the ability\
    \ to allow\n   nonconfidential data to be transferred over a non-secure transport.\n\
    \   It is expected that most I2RS data models will describe information\n   that\
    \ will be transferred with confidentiality.  Therefore, any model\n   that transfers\
    \ data over a non-secure transport is marked.  The use\n   of a non-secure transport\
    \ is optional, and an implementer SHOULD\n   create knobs that allow data marked\
    \ as nonconfidential to be sent\n   over a secure transport.\n   Nonconfidential\
    \ data can only be data with read-scope or\n   notification-scope transmission\
    \ of events.  Nonconfidential data\n   cannot have write-scope or notification-scope\
    \ configuration.\n   Examples of nonconfidential data would be the telemetry information\n\
    \   that is publicly known (e.g., BGP route-views data or website status\n   data)\
    \ or some legacy data (e.g., interface) that cannot be\n   transported using secure\
    \ transport.  The IETF I2RS data models MUST\n   indicate (in the model) the specific\
    \ data that is nonconfidential.\n   Most I2RS data models will expect that the\
    \ information described in\n   the model will be transferred with confidentiality.\n"
- title: 3.3.  I2RS Protocol Security Requirements vs. IETF Management Protocols
  contents:
  - "3.3.  I2RS Protocol Security Requirements vs. IETF Management Protocols\n   Figure\
    \ 1 provides a partial list of the candidate management\n   protocols.  It also\
    \ lists the secure transports each protocol\n   supports.  The column on the right\
    \ of the table indicates whether or\n   not the transport protocol will need I2RS\
    \ security extensions.\n     Management                         I2RS Security\n\
    \     Protocol   Transport Protocol      Extensions\n     =========  =====================\
    \   =================\n     NETCONF     TLS over TCP (*1)      None required (*2)\n\
    \     RESTCONF    HTTP over TLS with     None required (*2)\n                \
    \ X.509v3 certificates,\n                 certificate validation,\n          \
    \       mutual authentication:\n                 1) authenticated\n          \
    \          server identity,\n                 2) authenticated\n             \
    \       client identity\n                (*1)\n      ForCES    TML over SCTP \
    \          Needs an extension to\n                (*1)                    TML\
    \ to run TML over\n                                        TLS over SCTP, or\n\
    \                                        DTLS with options for\n             \
    \                           replay protection\n                              \
    \          and anti-DoS stateless\n                                        cookie\
    \ mechanism.\n                                        (DTLS record size\n    \
    \                                    negotiation and conveyance\n            \
    \                            of DF bits are optional).\n                     \
    \                   The IPsec mechanism is\n                                 \
    \       not sufficient for\n                                        I2RS traveling\
    \ over\n                                        multiple hops\n              \
    \                          (router + link) (*2)\n      IPFIX     SCTP, TCP, UDP\
    \          Needs an extension\n                TLS or DTLS for         to support\
    \ TLS or DTLS with\n                secure client (*1)      options for replay\
    \ protection\n                                        and anti-DoS stateless\n\
    \                                        cookie mechanism.\n                 \
    \                       (DTLS record size\n                                  \
    \      negotiation and conveyance\n                                        of\
    \ DF bits are optional)\n       *1 - Key management protocols MUST support appropriate\
    \ key\n            rotation.\n       *2 - Identity and role authorization distributed\
    \ by Diameter or\n            Radius MUST use Diameter over TLS or Radius over\
    \ TLS.\n   Figure 1: Candidate Management Protocols and Their Secure Transports\n"
- title: 4.  Security-Related Requirements
  contents:
  - "4.  Security-Related Requirements\n   This section discusses security requirements\
    \ based on the following\n   security functions:\n   o  peer identity authentication\
    \ (Section 4.1)\n   o  Peer Identity validation before role-based message actions\n\
    \      (Section 4.2)\n   o  peer identity and client redundancy (Section 4.3)\n\
    \   o  multi-channel transport requirements: Secure transport and non-\n     \
    \ secure Transport (Section 4.4)\n   o  management protocol security requirements\
    \ (Section 4.5)\n   o  role-based security (Section 4.6)\n   o  security environment\
    \ (Section 4.7)\n   The I2RS protocol depends upon a secure transport layer for\
    \ peer\n   authentication, data integrity, confidentiality, and replay\n   protection.\
    \  The optional non-secure transport can only be used for a\n   restricted set\
    \ of data available publicly (events or information) or\n   a select set of legacy\
    \ data.  Data passed over the non-secure\n   transport channel MUST NOT contain\
    \ any data that identifies a person.\n"
- title: 4.1.  I2RS Peer (Agent and Client) Identity Authentication
  contents:
  - "4.1.  I2RS Peer (Agent and Client) Identity Authentication\n   Requirements:\n\
    \      SEC-REQ-01: All I2RS clients and agents MUST have an identity and\n   \
    \   at least one unique identifier for each party in the I2RS protocol\n     \
    \ context.\n      SEC-REQ-02: The I2RS protocol MUST utilize these identifiers\
    \ for\n      mutual identification of the I2RS client and agent.\n      SEC-REQ-03:\
    \ Identifier distribution and the loading of these\n      identifiers into the\
    \ I2RS agent and client SHOULD occur outside\n      the I2RS protocol prior to\
    \ the I2RS protocol establishing a\n      connection between I2RS client and agent.\
    \  AAA protocols MAY be\n      used to distribute these identifiers, but other\
    \ mechanism can be\n      used.\n   Explanation:\n   These requirements are for\
    \ I2RS peer (I2RS agent and client)\n   authentication.  A secure transport (e.g.,\
    \ TLS) will authenticate\n   based on these identities, but these identities are\
    \ for the I2RS\n   management layer.  A AAA protocol distributing I2RS identity\n\
    \   information SHOULD transport its information over a secure transport.\n"
- title: 4.2.  Identity Validation before Role-Based Message Actions
  contents:
  - "4.2.  Identity Validation before Role-Based Message Actions\n   Requirements:\n\
    \      SEC-REQ-04: An I2RS agent receiving a request from an I2RS client\n   \
    \   MUST confirm that the I2RS client has a valid identity.\n      SEC-REQ-05:\
    \ An I2RS client receiving an I2RS message over a secure\n      transport MUST\
    \ confirm that the I2RS agent has a valid identifier.\n      SEC-REQ-06: An I2RS\
    \ agent receiving an I2RS message over a non-\n      secure transport MUST confirm\
    \ that the content is suitable for\n      transfer over such a transport.\n  \
    \ Explanation:\n   Each I2RS client has a scope based on its identity and the\
    \ security\n   roles (read, write, or events) associated with that identity, and\n\
    \   that scope must be considered in processing an I2RS message sent on a\n  \
    \ communication channel.  An I2RS communication channel may utilize\n   multiple\
    \ transport sessions or establish a transport session and then\n   close the transport\
    \ session.  Therefore, it is important that the\n   I2RS peers operate utilizing\
    \ valid peer identities when a message is\n   processed rather than checking if\
    \ a transport session exists.\n   During the time period when a secure transport\
    \ session is active, the\n   I2RS agent SHOULD assume that the I2RS client's identity\
    \ remains\n   valid.  Similarly, while a secure connection exists that included\n\
    \   validating the I2RS agent's identity and a message is received via\n   that\
    \ connection, the I2RS client SHOULD assume that the I2RS agent's\n   identity\
    \ remains valid.\n   The definition of what constitutes a valid identity or a\
    \ valid\n   identifier MUST be defined by the I2RS protocol.\n"
- title: 4.3.  Peer Identity, Priority, and Client Redundancy
  contents:
  - "4.3.  Peer Identity, Priority, and Client Redundancy\n   Requirements:\n    \
    \  SEC-REQ-07: Each I2RS identifier MUST be associated with just one\n      priority.\n\
    \      SEC-REQ-08: Each identifier is associated with one secondary\n      identifier\
    \ during a particular I2RS transaction (e.g., read/write\n      sequence), but\
    \ the secondary identifier may vary during the time a\n      connection between\
    \ the I2RS client and I2RS agent is active.\n   Explanation:\n   The I2RS architecture\
    \ also allows multiple I2RS clients with unique\n   identities to connect to an\
    \ I2RS agent (see Section 7.8 of\n   [RFC7921]).  The I2RS deployment using multiple\
    \ clients SHOULD\n   coordinate this multi-headed control of I2RS agents by I2RS\
    \ clients\n   so no conflict occurs in the write scope.  However, in the case\
    \ of\n   conflict on a write-scope variable, the error resolution mechanisms\n\
    \   defined by the I2RS architecture multi-headed control (Section 7.8 of\n  \
    \ [RFC7921]) allow the I2RS agent to deterministically choose one I2RS\n   client.\
    \  The I2RS client with highest priority is given permission to\n   write the\
    \ variable, and the second client receives an error message.\n   A single I2RS\
    \ client may be associated with multiple applications\n   with different tasks\
    \ (e.g., weekly configurations or emergency\n   configurations).  The secondary\
    \ identity is an opaque value that the\n   I2RS client passes to the I2RS agent\
    \ so that this opaque value can be\n   placed in the tracing file or event stream\
    \ to identify the\n   application using the communication from I2RS client to\
    \ agent.  The\n   I2RS client is trusted to simply assert the secondary identifier.\n\
    \   One example of the use of the secondary identity is the situation\n   where\
    \ an operator of a network has two applications that use an I2RS\n   client. \
    \ The first application is a weekly configuration application\n   that uses the\
    \ I2RS protocol to change configurations.  The second\n   application allows operators\
    \ to makes emergency changes to routers in\n   the network.  Both of these applications\
    \ use the same I2RS client to\n   write to an I2RS agent.  In order for traceability\
    \ to determine which\n   application (weekly configuration or emergency) wrote\
    \ some\n   configuration changes to a router, the I2RS client sends a different\n\
    \   opaque value for each of the applications.  The weekly configuration\n   secondary\
    \ opaque value could be \"xzzy-splot\" and the emergency\n   secondary opaque\
    \ value could be \"splish-splash\".\n   A second example is if the I2RS client\
    \ is used for the monitoring of\n   critical infrastructure.  The operator of\
    \ a network using the I2RS\n   client may desire I2RS client redundancy where\
    \ the monitoring\n   application with the I2RS client is deployed on two different\
    \ boxes\n   with the same I2RS client identity (see Section 4.3 of [RFC7921]).\n\
    \   These two monitoring applications pass to the I2RS client whether the\n  \
    \ application is the primary or back-up application, and the I2RS\n   client passes\
    \ this information in the I2RS secondary identifier, as\n   the figure below shows.\
    \  The primary application's secondary\n   identifier is \"primary-monitoring\"\
    , and the back-up application\n   secondary identifier is \"backup-monitoring\"\
    .  The I2RS tracing\n   information will include the secondary identifier information\
    \ along\n   with the transport information in the tracing file in the agent.\n\
    \   Application A--I2RS client--Secure transport(#1)\n    [I2RS identity 1, secondary\
    \ identifier: \"primary-monitoring\"]-->\n   Application B--I2RS client--Secure\
    \ transport(#2)\n    [I2RS identity 1, secondary identifier: \"backup-monitoring\"\
    ]-->\n         Figure 2: Primary and Back-Up Application for Monitoring\n    \
    \                   Identification Sent to Agent\n"
- title: '4.4.  Multi-Channel Transport: Secure and Non-Secure'
  contents:
  - "4.4.  Multi-Channel Transport: Secure and Non-Secure\n   Requirements:\n    \
    \  SEC-REQ-09: The I2RS protocol MUST be able to transfer data over a\n      secure\
    \ transport and optionally MAY be able to transfer data over\n      a non-secure\
    \ transport.  The default transport is a secure\n      transport, and this secure\
    \ transport is mandatory to implement in\n      all I2RS agents and in any I2RS\
    \ client that a) performs a write\n      scope transaction that is sent to the\
    \ I2RS agent or b) configures\n      an Event Scope transaction.  This secure\
    \ transport is mandatory to\n      use on any I2RS client's Write transaction\
    \ or the configuration of\n      an Event Scope transaction.\n      SEC-REQ-10:\
    \ The secure transport MUST provide data\n      confidentiality, data integrity,\
    \ and practical replay prevention.\n      SEC-REQ-11: The I2RS client and I2RS\
    \ agent SHOULD implement\n      mechanisms that mitigate DoS attacks.  This means\
    \ the secure\n      transport must support DoS prevention.  For the non-secure\n\
    \      transport, the I2RS higher-layer protocol MUST contain a transport\n  \
    \    management layer that considers the detection of DoS attacks and\n      provides\
    \ a warning over a secure transport channel.\n      SEC-REQ-12: A secure transport\
    \ MUST be associated with a key\n      management solution that can guarantee\
    \ that only the entities\n      having sufficient privileges can get the keys\
    \ to encrypt/decrypt\n      the sensitive data.\n      SEC-REQ-13: A machine-readable\
    \ mechanism to indicate that a data\n      model contains nonconfidential data\
    \ MUST be provided.  A non-\n      secure transport MAY be used to publish only\
    \ read-scope or\n      notification-scope data if the associated data model indicates\n\
    \      that the data in question is nonconfidential.\n      SEC-REQ-14: The I2RS\
    \ protocol MUST be able to support multiple\n      secure transport sessions providing\
    \ protocol and data\n      communication between an I2RS agent and client.  However,\
    \ a single\n      connection between I2RS agent and client MAY elect to use a\
    \ single\n      secure transport session or a single non-secure transport session\n\
    \      conforming to the requirements above.\n      SEC-REQ-15: Deployment configuration\
    \ knobs SHOULD be created to\n      allow operators to send \"nonconfidential\"\
    \ read scope (data or\n      event streams) over a secure transport.\n      SEC-REQ-16:\
    \ The I2RS protocol makes use of both secure and non-\n      secure transports,\
    \ but this use MUST NOT be done in any way that\n      weakens the secure transport\
    \ protocol used in the I2RS protocol or\n      other contexts that do not have\
    \ this requirement for mixing secure\n      and non-secure modes of operation.\n\
    \   Explanation:\n   The I2RS architecture defines three scopes: read, write,\
    \ and\n   notification.  Non-secure data can only be used for read and\n   notification\
    \ scopes of \"nonconfidential data\".  The configuration of\n   ephemeral data\
    \ in the I2RS agent uses write scope either for data or\n   for configuration\
    \ of event notification streams.  The requirement to\n   use secure transport\
    \ for configuration prevents accidental or\n   malevolent entities from altering\
    \ the I2RS routing system through the\n   I2RS agent.\n   It is anticipated that\
    \ the passing of most I2RS ephemeral state\n   operational statuses SHOULD be\
    \ done over a secure transport.\n   In most circumstances, the secure transport\
    \ protocol will be\n   associated with a key management system.  Most deployments\
    \ of the\n   I2RS protocol will allow for automatic key management systems.  Since\n\
    \   the data models for the I2RS protocol will control key routing\n   functions,\
    \ it is important that deployments of I2RS use automatic key\n   management systems.\n\
    \   Per BCP 107 [RFC4107], while key management systems SHOULD be\n   automatic,\
    \ the systems MAY be manual in the following scenarios:\n   a)  The environment\
    \ has limited bandwidth or high round-trip times.\n   b)  The information being\
    \ protected has low value.\n   c)  The total volume of traffic over the entire\
    \ lifetime of the long-\n       term session key will be very low.\n   d)  The\
    \ scale of the deployment is limited.\n   Operators deploying the I2RS protocol\
    \ selecting manual key management\n   SHOULD consider both short- and medium-term\
    \ plans.  Deploying\n   automatic systems initially may save effort in the long\
    \ term.\n"
- title: 4.5.  Management Protocol Security
  contents:
  - "4.5.  Management Protocol Security\n   Requirements:\n      SEC-REQ-17: In a\
    \ critical infrastructure, certain data within\n      routing elements is sensitive\
    \ and read/write operations on such\n      data SHOULD be controlled in order\
    \ to protect its confidentiality.\n      To achieve this, higher-layer protocols\
    \ MUST utilize a secure\n      transport, and they SHOULD provide access-control\
    \ functions to\n      protect confidentiality of the data.\n      SEC-REQ-18:\
    \ An integrity protection mechanism for I2RS MUST be\n      provided that will\
    \ be able to ensure the following:\n      1)  the data being protected is not\
    \ modified without detection\n          during its transportation,\n      2) \
    \ the data is actually from where it is expected to come from,\n          and\n\
    \      3)  the data is not repeated from some earlier interaction the\n      \
    \    higher-layer protocol (best effort).\n      The I2RS higher-layer protocol\
    \ operating over a secure transport\n      provides this integrity.  The I2RS\
    \ higher-layer protocol operating\n      over a non-secure transport SHOULD provide\
    \ some way for the client\n      receiving nonconfidential read-scoped or event-scoped\
    \ data over\n      the non-secure connection to detect when the data integrity\
    \ is\n      questionable; and in the event of a questionable data integrity,\n\
    \      the I2RS client should disconnect the non-secure transport\n      connection.\n\
    \      SEC-REQ-19: The I2RS higher-layer protocol MUST provide a\n      mechanism\
    \ for message traceability (requirements in [RFC7922])\n      that supports the\
    \ tracking higher-layer functions run across\n      secure connection or a non-secure\
    \ transport.\n   Explanation:\n   Most carriers do not want a router's configuration\
    \ and data-flow\n   statistics to be known by hackers or their competitors.  While\n\
    \   carriers may share peering information, most carriers do not share\n   configuration\
    \ and traffic statistics.  To achieve this, the I2RS\n   higher-layer protocol\
    \ (e.g., NETCONF) requires access control\n   (NETCONF Access Control Model [RFC6536])\
    \ for sensitive data needs to\n   be provided; and the confidentiality protection\
    \ on such data during\n   transportation needs to be enforced.\n   Integrity of\
    \ data is important even if the I2RS protocol is sending\n   nonconfidential data\
    \ over a non-secure connection.  The ability to\n   trace I2RS protocol messages\
    \ that enact I2RS transactions provides a\n   minimal aid to helping operators\
    \ check how messages enact\n   transactions on a secure or non-secure transport.\
    \  Contextual checks\n   on specific nonconfidential data sent over a non-secure\
    \ connection\n   may indicate the data has been modified.\n"
- title: 4.6.  Role-Based Data Model Security
  contents:
  - "4.6.  Role-Based Data Model Security\n   In order to make access control more\
    \ manageable, the I2RS\n   architecture [RFC7921] specifies a \"role\" to categorize\
    \ users into a\n   group (rather than handling them individually) for access-control\n\
    \   purposes (role-based access control).  Therefore, an I2RS role\n   specifies\
    \ the access control for a group as being read, write, or\n   notification.\n\
    \      SEC-REQ-20: The rules around what I2RS security role is permitted\n   \
    \   to access and manipulate what information over a secure transport\n      (which\
    \ protects the data in transit) SHOULD ensure that data of\n      any level of\
    \ sensitivity is reasonably protected from being\n      observed by those without\
    \ permission to view it, so that privacy\n      requirements are met.\n      SEC-REQ-21:\
    \ Role security MUST work when multiple transport\n      connections are being\
    \ used between the I2RS client and agent as\n      the I2RS architecture [RFC7921]\
    \ describes.\n      Sec-REQ-22: If an I2RS agent or client is tightly correlated\
    \ with\n      a person, then the I2RS protocol and data models SHOULD provide\n\
    \      additional security that protects the person's privacy.\n   Explanation:\n\
    \   An I2RS higher-layer protocol uses a management protocol (e.g.,\n   NETCONF,\
    \ RESTCONF) to pass messages in order to enact I2RS\n   transactions.  Role security\
    \ must secure data (sensitive and normal\n   data) in a router even when it is\
    \ operating over multiple connections\n   at the same time.  NETCONF can run over\
    \ TLS (over TCP or SCTP) or\n   SSH.  RESTCONF runs over HTTP over a secure transport\
    \ (TLS).  SCTP\n   [RFC4960] provides security for multiple streams plus end-to-end\n\
    \   transport of data.  Some I2RS functions may wish to operate over DTLS\n  \
    \ [RFC6347], which runs over UDP ([RFC768]) and SCTP ([RFC5764]).\n   Please note\
    \ the security of the connection between application and\n   I2RS client is outside\
    \ of the I2RS protocol or I2RS interface.\n   While I2RS clients are expected\
    \ to be related to network devices and\n   not individual people, if an I2RS client\
    \ ran on a person's phone,\n   then privacy protection to anonymize any data relating\
    \ to a person's\n   identity or location would be needed.\n   A variety of forms\
    \ of management may set policy on roles: \"operator-\n   applied knobs\", roles\
    \ that restrict personal access, data models with\n   specific \"privacy roles\"\
    , and access filters.\n"
- title: 4.7.  Security of the Environment
  contents:
  - "4.7.  Security of the Environment\n   The security for the implementation of\
    \ a protocol also considers the\n   protocol environment.  Implementers should\
    \ review the summary of the\n   I2RS security environment in [RFC7921].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This is a document about security requirements\
    \ for the I2RS protocol\n   and data models.  Security considerations for the\
    \ I2RS protocol\n   include both the protocol and the security environment.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4107]  Bellovin, S. and R. Housley, \"Guidelines for Cryptographic\n \
    \             Key Management\", BCP 107, RFC 4107, DOI 10.17487/RFC4107,\n   \
    \           June 2005, <https://www.rfc-editor.org/info/rfc4107>.\n   [RFC4949]\
    \  Shirey, R., \"Internet Security Glossary, Version 2\",\n              FYI 36,\
    \ RFC 4949, DOI 10.17487/RFC4949, August 2007,\n              <https://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC7258]  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n \
    \             Attack\", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May\n       \
    \       2014, <https://www.rfc-editor.org/info/rfc7258>.\n   [RFC7921]  Atlas,\
    \ A., Halpern, J., Hares, S., Ward, D., and T.\n              Nadeau, \"An Architecture\
    \ for the Interface to the Routing\n              System\", RFC 7921, DOI 10.17487/RFC7921,\
    \ June 2016,\n              <https://www.rfc-editor.org/info/rfc7921>.\n   [RFC7922]\
    \  Clarke, J., Salgueiro, G., and C. Pignataro, \"Interface to\n             \
    \ the Routing System (I2RS) Traceability: Framework and\n              Information\
    \ Model\", RFC 7922, DOI 10.17487/RFC7922, June\n              2016, <https://www.rfc-editor.org/info/rfc7922>.\n\
    \   [RFC7923]  Voit, E., Clemm, A., and A. Gonzalez Prieto, \"Requirements\n \
    \             for Subscription to YANG Datastores\", RFC 7923,\n             \
    \ DOI 10.17487/RFC7923, June 2016,\n              <https://www.rfc-editor.org/info/rfc7923>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC768]   Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n              DOI 10.17487/RFC0768, August 1980,\n        \
    \      <https://www.rfc-editor.org/info/rfc768>.\n   [RFC2865]  Rigney, C., Willens,\
    \ S., Rubens, A., and W. Simpson,\n              \"Remote Authentication Dial\
    \ In User Service (RADIUS)\",\n              RFC 2865, DOI 10.17487/RFC2865, June\
    \ 2000,\n              <https://www.rfc-editor.org/info/rfc2865>.\n   [RFC4960]\
    \  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n             \
    \ RFC 4960, DOI 10.17487/RFC4960, September 2007,\n              <https://www.rfc-editor.org/info/rfc4960>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <https://www.rfc-editor.org/info/rfc5246>.\n   [RFC5764]\
    \  McGrew, D. and E. Rescorla, \"Datagram Transport Layer\n              Security\
    \ (DTLS) Extension to Establish Keys for the Secure\n              Real-time Transport\
    \ Protocol (SRTP)\", RFC 5764,\n              DOI 10.17487/RFC5764, May 2010,\n\
    \              <https://www.rfc-editor.org/info/rfc5764>.\n   [RFC6241]  Enns,\
    \ R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and A. Bierman,\
    \ Ed., \"Network Configuration Protocol\n              (NETCONF)\", RFC 6241,\
    \ DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n    \
    \          Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n         \
    \     January 2012, <https://www.rfc-editor.org/info/rfc6347>.\n   [RFC6536] \
    \ Bierman, A. and M. Bjorklund, \"Network Configuration\n              Protocol\
    \ (NETCONF) Access Control Model\", RFC 6536,\n              DOI 10.17487/RFC6536,\
    \ March 2012,\n              <https://www.rfc-editor.org/info/rfc6536>.\n   [RFC6614]\
    \  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,\n              \"Transport\
    \ Layer Security (TLS) Encryption for RADIUS\",\n              RFC 6614, DOI 10.17487/RFC6614,\
    \ May 2012,\n              <https://www.rfc-editor.org/info/rfc6614>.\n   [RFC6733]\
    \  Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n              Ed.,\
    \ \"Diameter Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733, October\
    \ 2012,\n              <https://www.rfc-editor.org/info/rfc6733>.\n   [RFC8040]\
    \  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\"\
    , RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n\
    \   [RFC8095]  Fairhurst, G., Ed., Trammell, B., Ed., and M. Kuehlewind,\n   \
    \           Ed., \"Services Provided by IETF Transport Protocols and\n       \
    \       Congestion Control Mechanisms\", RFC 8095,\n              DOI 10.17487/RFC8095,\
    \ March 2017,\n              <https://www.rfc-editor.org/info/rfc8095>.\n   [RFC8242]\
    \  Haas, J. and S. Hares, \"Interface to the Routing System\n              (I2RS)\
    \ Ephemeral State Requirements\", RFC 8242,\n              DOI 10.17487/RFC8242,\
    \ September 2017,\n              <http://www.rfc-editor.org/info/rfc8242>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Wes George, Ahmed Abro,\
    \ Qin Wu, Eric\n   Yu, Joel Halpern, Scott Brim, Nancy Cam-Winget, Dacheng Zhang,\
    \ Alia\n   Atlas, and Jeff Haas for their contributions to the I2RS security\n\
    \   requirements discussion and this document.  The authors would like to\n  \
    \ thank Bob Moskowitz, Kathleen Moriarty, Stephen Farrell, Radia\n   Perlman,\
    \ Alvaro Retana, Ben Campbell, and Alissa Cooper for their\n   review of these\
    \ requirements.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Susan Hares\n   Huawei\n   7453 Hickory Hill\n   Saline,\
    \ MI  48176\n   United States of America\n   Email: shares@ndzh.com\n   Daniel\
    \ Migault\n   Ericsson\n   8275 Trans Canada Route\n   Saint Laurent, QC  H4S\n\
    \   Canada\n   Email: daniel.migault@ericsson.com\n   Joel Halpern\n   Ericsson\n\
    \   United States of America\n   Email: joel.halpern@ericsson.com\n"
