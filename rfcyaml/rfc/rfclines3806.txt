Abstract This document defines a MIB module for the management of printer finishing device subunits.
The finishing device subunits applicable to this MIB
are an integral part of the Printer System.
This MIB applies only to a Finisher Device that is connected to a Printer System.
This document describes an SNMP Management Information Base (MIB) to provide for the management of in line post processing in a fashion that is currently provided for printers, using the Printer MIB [RFC3805].
The Printer Finishing MIB includes the following features:  Provides the status of the finishing device.
Queries and controls the features and configuration of the finishing device.
Enables and disables the finishing processes.
Allows unsolicited status from the finishing device.
The Finisher MIB is defined as an extension of the Printer MIB [RFC3805] and it is expected that the information defined in this document will be incorporated into a future update of the Printer MIB.
This document provides a robust set of finishing devices, features, and functions, based upon today's state of the art of in line finishing.
Since finishing typically accompanies higher speed network printers and copiers, in contrast to simple desktop devices, no attempt is made to limit the scope to "bare minimum".
On the other hand, the Printer Finishing MIB does not duplicate the production mail preparation, custom insertion, franking, and reprints that are covered by the DMTF Large Mailing Operations standard [LMO].
Information supplied by the Printer Finishing MIB may be utilized by printer and finisher management applications engaged in monitoring status and managing configuration, and also used by print and finishing submission applications which are engaged in:  print job level finishing processes that are applied to a complete print job,  document level finishing processes that are applied individually to each document in the print job,  document level finishing processes that are applied to a selected document in the print job.
Note that not all combinations of finishing processes are permitted.
Compatible combinations of finishing processes are implementation specific.
The MIB allows invalid combinations to be identified.
The Printer MIB [RFC3805] is now successfully deployed in a large segment of the network printer market.
SNMP and/or HTTP enabled printers and software management applications are growing in numbers.
There is an increase in the availability of network printers and copiers that include in line finishing processes.
Thus a well defined and ordered set of finishing objects is now necessary for printer management.
The printer model defined in the Printer MIB includes finishing processes and the MIB was designed to later incorporate finisher objects or to be referenced by a future Finisher MIB.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Some objects in the Finisher MIB reflect the existence or amount of a given resource within the finisher.
Some examples of such resources are the size and number of sheets in an inserter tray or the existence of certain finisher options.
Some finishers have automatic sensors for these resources.
Most finishers lack sensors for every property of every resource.
The management application is allowed to write into objects that hold descriptive or existence values for finishers that cannot sense these values.
The ability to change the value of a read write object may depend on the implementation of the agent.
Many objects in the MIB are given read write access, but an implementation might only permit a management application to change the value if the finisher can not sense the value itself.
Note that even though some objects explicitly state the behavior of conditional ability to change values, any read write object may act this way.
Generally, an object is given read write access in the Finisher MIB specification if: 1.
The object involves installation of a resource that some finishers cannot themselves detect.
Therefore, external means are needed to inform the device of the installation.
(Here external means include using the operator console, or remote management application) and 2.
The finisher will behave differently if the installation of the resource is reported than if the installation were not reported; that is, the object is not to be used as a place to put information not used by the finisher, i.e., not a "sticky note".
Another way of saying this is that the finisher believes that information given it and acts as if the information were true.
The finisher may get hints that it may not know about the existence or properties of certain resources.
For example, a paper tray may be removed and re inserted.
When this removal and insertion happens, the finisher may either assume that a property, such as the size of paper in the tray, has not changed or the finisher may change the value of the associated object to "unknown", as might be done for the amount of paper in the tray.
As long as the finisher acts according to the value in  the object either strategy is acceptable.
It is an implementation specific matter as to whether or not MIB object values are persistent across power cycles or cold starts.
Where appropriate, the Printer Finishing MIB will conform to the terminology, syntax, and semantics from the DMTF Large Mailing Operations standard [LMO], the Internet Printing Protocol [RFC2911], and/or the ISO Document Printing Application [DPA].
An input tray on the finisher and not otherwise associated with the printer.
An example of a finisher input is a tray that holds finishing "inserts".
Finishing Process Axis Parallel to
Reference Edge Figure 2 Finishing Process Axis Parallel to X Axis Finisher Output:
The output of the finisher.
Because processing is in line, the finisher outputs are a direct extension of the set of printer outputs.
All Finishing Processes are defined relative to a portrait orientation of the medium, regardless of the orientation of the printed image or the direction of feed.
The 'X' and 'Y' axis, therefore, will always reference the medium as shown in figures 1 and 2, with the 'X' axis always along the short edge of the medium.
All edges and corners are also defined with the medium orientation as shown using the syntax top, bottom, left, and right.
Thus the bottom edge of the medium is at Y   0
, the left edge is at X   0, and the bottom right corner is at (X2,0) as shown in the figure 1 and at (X3,0) as shown in figure 2.
Defined by DPA as an operation on a document following the completion of the image process.
Finishing processes defined within this document are those applied to one or more instances of rectangular paper sheet media.
Defined by DPA as an operation applied by a machine such as trimming a document, folding the sheets in a document, and applying a binding to a document.
Finishing Specification:  Defined by DPA as the specific sequence of operations for a serial combination of finishing processes.
The exact sequential order of the processes, in many cases, is critical to the obtaining the desired result.
For example, a folding operation followed by trimming could provide a very different result than if the trimming was followed by the folding.
This parameter set is used to create a detailed definition of the finishing process.
Generic Finishing Process Parameters are applicable to any Finishing Specification.
Defined by DPA as the physical mechanism that is used to perform a finishing process.
The head position may be fixed or variable depending upon the capabilities of the device.
Defined by DPA as the edge of the document relative to the axis to which the finishing process is applied.
The edge of the medium defined to be the Reference Edge may be either the 'X' or the 'Y' axis, depending upon the finishing process to be performed.
Note that the Reference Edge may change from one finishing process to another for one of two reasons.
First, a subsequent process may require a different Reference Edge.
Second, the actual dimensions of the document may change, for example as a result of a folding or a trimming operation.
Defined by DPA as one of the two edges that is perpendicular to the Reference Edge.
Specifying the Jog Edge parameter indicates the edges of all sheets which correspond to the Jog Edge are aligned.
Axis:  Defined by DPA as the axis which some finishing processes are applied to or referenced from by the Head Mechanism.
Examples are the axis for a fold process or the axis for a punch process.
Defined by DPA as the position of the Heads on the Finishing Process Axis.
The offset from the Reference Edge to the Finishing Process Axis at which the finishing process takes place or is applied.
A fold in which two folds are placed in the sheet in opposite directions.
The first fold is located at 25% of the sheet length, and the second is located at 50% of the sheet length (i.e., the center of the sheet).
Z Folding is often used on 11x17 inch or A3 size sheets, when they are included in sets containing 8.5x11 inch or A4 size sheets.
Half Fold:  To fold a sheet in half so that one of the resulting dimensions are exactly half the original sheet.
Often used for signatures or booklets.
Letter Fold:  Folding a sheet roughly in thirds.
Usually performed on 8.5x11 inch or A4 size sheets for insertion into an envelope.
The process by which images are placed on a large sheet of paper in correct panel areas and in the proper orientation such that when the sheet is folded it will produce a booklet with each page in the proper order and orientation.
Adhesive Binding:  A method of attaching sheets together to form a book or booklet using glue or adhesive.
Some adhesive binding methods apply the glue to sheets individually, before merging them together for form a book, but most methods involve the application of adhesive to an entire book of sheets.
A method of binding in which a series of small rectangular holes is placed along the bind edge of the sheets.
The sheets are then held together using a tube shaped plastic binding strip with comb like fingers that fit through the holes in the sheets.
Sometimes referred to as wire binding, this binding method is a mechanical bind in which the individual leaves are held together by a wire or plastic spiral that is fed through small holes in the paper binding edge.
Padding:  Applying a non penetrating adhesive to the edge of a stack of sheets
such that the sheets can be easily peeled off one at a time.
A bind formed by punching holes into the edge of the sheets, placing a two piece plastic strip (one side formed with plastic pins that pass through the holes) along the edge and then staking the two pieces together.
A method of binding in which all pages are cut and roughed up at the back or binding edge and held together by an adhesive.
The act of placing tape over the bind edge of a set.
Sometimes contains adhesive to provide a functional bind to the set, and sometimes done for decorative purposes on a set that has been edge stapled.
Trim:  To cut the edges of a sheet or set of sheets.
Face Trim:  To cut the edges of a set of sheets on a booklet of sheets that have been folded to eliminate the "creep" or edge shingling that results from the folding process.
Gutter Trim:  To cut a larger sheet into smaller sheets eliminating the gutter between adjacent images.
This operation requires a minimum of two cuts for each gutter.
The act of cutting the edge of a sheet to form an index tab, thereby allowing quick identification and access.
The external tabs are sequentially placed along the book edge for visibility and ease of grasping.
The act of cutting a series of very small, closely spaced holes or slots into a sheet to allow for ease of separation of a portion of the sheet.
Sometimes also used to ease bending/hinging of heavy weight papers.
Scoring:  A means of applying small linear grooves or impressions along a sheet to allow easy folding.
Often used on heavy weight sheets and book covers.
The action of cutting apart a large sheet to form smaller sheets.
Usually done using a sharp circular roll system.
The process of binding a set of sheets together using a 'U' shaped piece of metal wire that is punched through the set.
The ends of the metal staple are then bent over, or 'clinched' to hold the staple in place.
Technically the term 'stapler' refers to devices that use pre cut metal staples, but the term is also commonly used to refer to devices that use wire spools and then cut/form the staple.
(see the definition of Stitch)
The process of binding a set of sheets together using a 'U' shaped piece of metal wire that is punched through the set.
The wire used to form the staple is cut and formed into a 'U' shape in the stitcher head, and the staple 'leg' length is often varied depending on the number of sheets to be bound together.
The ends of the metal staple are bent over, or 'clinched' to hold the staple in place.
Stitching can also refer to the process of sewing the edges of the signatures of a book together.
The process of stapling a set along its center line as part of a booklet making process.
Usually 2 or 3 staples are used.
The process of placing 2 staples along the bind edge of a set.
The staples are typically located at 25% and 75% of the length of the bind edge.
Although dual stapling is often performed on the long edge of a set, legal documents are frequently dual stapled along the top, or short edge of the set.
Triple Stapling:  Same as above, but using 3 staples along the bind edge, and usually applies to the long edge only.
Shrink Wrap:  A wrap of thin plastic which when heated will shrink and wrap tightly around the stack thus preparing it for shipment.
Band Wrap:  Bundling a finished stack to prepare for shipment.
Also known as Strap Wrap.
A device that rotates each sheet as received from the Media Path to the proper orientation for the finisher processing.
Finisher Subunits Integrated Into The Printer Model
The Printer Finisher Device subunits receive media from one or more Printer Media Path subunits and deliver the media to one or more Printer Output subunits after the completion of the finishing processes.
The Finisher MIB is able to provide most of the information that is required to generate a Finishing Specification.
Finishing operations that can be performed on media that are associated with a specific printer media path and output subunit.
Combinations of operations that cannot be performed.
The location of the operation on the medium, if applicable.
The physical characteristics of the result of the operation.
For example, the size and shape of a punched hole, or if a fold operation creates a letter fold or a "Z" fold.
The Finisher MIB permits an agent to describe the order that operations can be performed.
Each finishing operation supported by the printer is represented by one or more entries in the finDeviceTable.
Each entry in this table defines a "logical" finishing device, since the function of several table entries may be performed by a single finisher mechanism.
Multiple entries may also exist in the table as a result of the existence of multiple finisher mechanisms that perform the same type of operation.
One example of possible multiple entries for a single finisher device, is a hole punch operation that creates more than one hole.
This could be performed using a single die punch that moves to each required position or a multi die punch that simultaneously creates all holes.
In either case, each defined hole position may be defined as a separate table entry.
In both cases, if the punch positions can be individually selected, a table entry for each position would be necessary.
For the multi die punch, each head mechanism may have a different hole pattern or size.
If these differences are to be properly disclosed, a table entry for each head mechanism would be required.
Implicit Parameters Finishing operations that are specified by an enum define a standard operation and in many cases an implicit set of physical characteristics is to be included when specifying the enum.
If explicit values for these characteristics are not provided in the attributes table, the values defined in this section are to be implied.
All hole to hole patterns are centered along the process edge.
Offset is 0.18 inches to 0.51 inches.
Reference edge is leftEdge(5) for letter and topEdge(3) for ledger.
Reference edge is leftEdge(5) for A4 and topEdge(3) for A3.
Offset is 4.5 mm to 13 mm.
Reference edge is leftEdge(5) for B5 and topEdge(3) for B4.
7 holes and 4 slots are punched in a H S H H S H S H H S H pattern with 15, 25, 23, 20, 37, 37, 20, 23, 25, 15 mm spacing.
4 holes and 2 slots are punched in a H H S S H H pattern with a 64, 18.5, 75, 18.5, 64 mm spacing.
5 8 mm diameter fourHoleDIN(7)
5 8 mm diameter twentyTwoHoleUS(8)
, .313 inches X .125 inches twoHoleMetric(10)
round(3),  5 8 mm diameter swedish4Hole(11)
round(3),  5 8 mm diameter
5 8 mm diameter   rectang(6),  12 mm X 6
5 8 mm diameter   rectang(6)
Hole size ranges are typical and are provided as a reference only.
Exact tolerances should be site defined.
The Attribute Mechanism Attributes provide a function similar to information objects, except that attributes are identified by an enum, instead of an OID.
Thus new attributes may be registered without requiring a change to the MIB.
In addition, an implementation that does not have the functionality represented by the attribute can omit the attribute entirely, rather than having to return a distinguished value.
The agent is free to create an attribute in the Attribute Table as soon as the agent is aware of the value of the attribute.
The agent materializes finishing subunit attributes in a four indexed finDeviceAttributeTable: 1.
which device in the host 2.
finDeviceIndex which finisher subunit in the printer device 3.
finDeviceAttributeInstanceIndex which attribute instance for those attributes that can have multiple values per finishing subunit.
An agent SHALL implement any attribute if (1) the device supports the functionality represented by the attribute and (2)
the information is available to the agent.
The agent MAY create the attribute row in the finDeviceAttributeTable when the information is available or MAY create the row earlier with the designated 'unknown' value appropriate for that attribute.
If the device does not implement or does not provide access to the information about an attribute, the agent SHOULD NOT create the corresponding row in the finDeviceAttributeTable.
Useful, 'Unknown', and 'Other' Values for Objects and Attributes
Some attributes have a 'useful' Integer32 value, some have a 'useful' OCTET STRING value, some MAY have either or both depending on implementation, and some MUST have both.
See the finDeviceAttributeTypeTC textual convention for the specification of each attribute.
In some instances, objects with a MAX ACCESS of read write will result in an SNMPv1 error or SNMPv2 exception during a write operation.
The administrative security policy may restrict a class of users to read only or, more importantly, the implementation may implement a subset of read write objects as read only.
This should be expected to be the case for a device that can properly sense the value of an object and does not want the value to be externally modified.
In general, values for objects and attributes have been chosen so that a management application will be able to determine whether a 'useful', 'unknown', or 'other' value is available.
When a useful value is not available for an object that agent SHALL return a zero  length string for octet strings, the value 'unknown(2)' for enums, a '0' value for an object that represents an index in another table, and a value ' 2' for counting integers.
Since each attribute is represented by a row consisting of both the finDeviceAttributeValueAsInteger and finDeviceAttributeValueAsOctets MANDATORY objects, SNMP requires that the agent SHALL always create an attribute row with both objects specified.
However, for most attributes the agent SHALL return a "useful" value for one of the objects and SHALL return the 'other' value for the other object.
For integer only attributes, the agent SHALL always return a zero length string value for the finDeviceAttributeValueAsOctets object.
For octet string only attributes, the agent SHALL always return a ' 1' value for the finDeviceAttributeValueAsInteger object.
Data Sub types and Attribute Naming Conventions
Many attributes are sub typed to give a more specific data type than Integer32 or OCTET STRING.
The data sub type of each attribute is indicated on the first line(s) of the description.
Some attributes have several different data sub type representations.
When an attribute has both an Integer32 data sub type and an OCTET STRING data sub type, the attribute can be represented in a single row in the finDeviceAttributeTable.
In this case, the data sub type name is not included as the last part of the name of the attribute.
When the data sub types cannot be represented by a single row in the finDeviceAttributeTable, each such representation is considered a separate attribute and is assigned a separate name and enum value.
For these attributes, the name of the data sub type is the last part of the name of the attribute.
Versus Multi Value (MULTI ROW)
Attributes Most attributes shall have only one row per finishing subunit.
However, a few attributes can have multiple values per finishing subunit, where each value is a separate row in the finDeviceAttributeTable.
Unless indicated with 'MULTI ROW:' in the finDeviceAttributeTypeTC description, an agent SHALL ensure that each attribute occurs only once in the finDeviceAttributeTable for a finishing subunit.
Most of the 'MULTI ROW' attributes do not allow duplicate values, i.e., the agent SHALL ensure that each value occurs only once for a finishing subunit.
Only if the specification of the 'MULTI ROW' attribute also says "There is no restriction on the same xxx occurring in multiple rows" can the agent allow duplicate values to occur for a single finishing subunit.
Some MULTI ROW attributes are intended to go together.
Thus a set of value instances represent a single instance.
For example, the puncher attributes indicate the location, maximum size, minimum size and shape of the various holes that the puncher can produce.
So the first set of values could represent one kind of hole, and the second set another kind of hole, etc.
Index Value Attributes A number of attributes are indexes in other tables.
Such attribute names end with the word 'Index'.
If the agent has not (yet) assigned an index value for a particular index attribute for a finishing subunit, the agent shall either: (1) return the value 0 or
(2) not add this attribute to the finDeviceAttributeTable until the index value is assigned.
In the interests of brevity, the semantics for 0 is specified once here and is not repeated for each index attribute specification and a DEFVAL of 0 is indicated.
This section specifies the set of attributes that are enumerated in finAttributeTypeTC.
The data type tag definitions 'INTEGER:'  or 'OCTETS', indicate if the attribute can be represented using the object finDeviceAttributeAsInteger or the object finDeviceAttributeAsOctets, respectively.
In some cases, a choice between the two data types is possible and for a few attributes both objects may be required at the same time to properly present the value.
The enum assignments are grouped logically with values assigned in groups of 10, so that additional values may be registered in the future and assigned a value that is part of their logical grouping.
Values in the range 2
31 1 are reserved for private or experimental usage.
This range corresponds to the same range reserved in IPP.
Implementers are warned that use of such values may conflict with other implementations.
Implementers are encouraged to request registration of enum values following the procedures in Section 6.1.
An attribute that is not currently approved and registered.
A. Generic finisher subunit attributes that apply to all finisher subunit types.
The name assigned to this finisher device subunit.
The name of the vendor of this finisher device subunit.
The model name of this finisher device subunit.
The version string for this finisher device subunit.
The serial number assigned to this finisher device subunit.
Defines the maximum number of media sheets that a finisher device is able to process.
An enumeration which defines which edge of the form is the reference for this finishing process.
The Finishing Process Axis will be parallel to this axis.
Defines the offset of the Finishing Process Axis from the parallel Reference Edge.
For a value of finEdgeTC equal to TopEdge or RightEdge, the value given is to interpreted as a negative offset from the reference edge.
The units of measure are defined by the attribute finProcessOffsetUnits.
An enumeration which defines a second edge of the document to which the media is aligned.
MULTI ROW:  Defines the position of the Head Mechanism relative to the axis, 'X' or 'Y', that is perpendicular to the Process Axis.
The units of measure are defined by the attribute finProcessOffsetUnits.
MULTI ROW:  Defines the finDeviceIndex of a finishing process which cannot be combined with the process defined by the finDeviceIndex for this finDeviceAttributeTable instance.
When this condition occurs this attribute SHALL be presented in the attribute tables for both finishing processes that cannot be combined.
Defines the total number of head positions for this finishing process.
Each position many be realized by a unique head mechanism or a single head mechanism may be automatically moved to each position.
Contains an administratively define name to define the finishing specification configured for this device.
MULTI ROW:  Defines the media type which cannot be combined with the process defined by the finDeviceIndex for this finDeviceAttributeTable instance.
Values are the same as defined for finSupplyMediaInputMediaName.
MULTI ROW:  Defines the value of prtInputIndex corresponding to the printer input tray that can be used with the process defined by the finDeviceIndex for this finDeviceAttributeTable instance.
If this attribute is not present, this process can be used with any input tray in the printer.
For example, this attribute can indicate the current stapling capabilities for a stapler device for the input trays that depend upon the size and feed orientation.
So if there were two letter trays, one with A size and the other with B size, a two position stapler might specify in one row:
upper left and upper right for the input tray with A size, but only upper left for the one with B size.
Defines the finDeviceIndex of the previous finishing process for implementations in which the finishing processes are performed in a prescribed order.
Each finishing process in the fixed sequence is either performed or not performed according to the finishing instructions submitted with the job.
A value of 0 indicates that this finishing process is the first in a sequence.
Finishing processes which are not part of a fixed sequence SHALL NOT have this attribute.
Defines the finDeviceIndex of the next finishing process for implementations in which the finishing processes are performed in a prescribed order.
Each finishing process in the fixed sequence is either performed or not performed according to the finishing instructions submitted with the job.
A value of 0 indicates that this finishing process is the last in a sequence.
Finishing processes which are not part of a fixed sequence SHALL NOT have this attribute.
B. Stitcher type specific attributes (30..)
Provides additional information regarding the stitching operation.
Defines the orientation of the stitching process.
Defines enumerations that describe the angular orientation of the stitching process relative to the 'X' axis.
C. Folder type specific attributes (40..)
Provides additional information regarding the folding process.
D. Binder type specific attributes (50..)
Provides additional information regarding the binding process.
E. Trimmer type specific attributes (60..)
F. Die cutter type specific attributes (70..)
G. Puncher type specific attributes (80..) punchHoleType(80),
Provides information regarding the shape of the punched hole.
Defines the size of the punched hole in the longest dimension.
This dimension is typically measured parallel to either the long edge or the short edge of the media and the longest dimension will always be measured 90 degrees from the shortest dimension.
For a symmetrical hole, such as a round or square hole, the shortest and longest dimensions will be identical.
The units of measure are defined by the attribute finProcessOffsetUnits.
This dimension is typically measured parallel to either the long edge or the short edge of the media and the shortest dimension will always be measured 90 degrees from the longest dimension.
For a symmetrical hole, such as a round or square hole, the shortest and longest dimensions will be identical.
The units of measure are defined by the attribute finProcessOffsetUnits.
Defines the hole pattern produced by the punch process.
H. Perforator type specific attributes (90..)
I. Slitter type specific attributes (100..) slittingType(100),
Provides additional information regarding the slitting process.
J. Separation cutter type specific attributes (110..)
K. Imprinter type specific attributes (120..)
Provides additional information regarding the wrapping process.
M. Bander type specific attributes (140..)
N. Make Envelopes type specific attributes (150..)
O. Stacker type specific attributes (160..) stackOutputType(160)
Defines the job to job orientation produced by the stacker.
Defines the copy to copy output stack offset as a positive offset distance.
The units of measure are defined by finProcessOffsetUnits.
Defines the copy to copy output stack rotation measured in degrees.
The value is the positive copy to copy rotation."
Enumerations Enumerations (enums) are sets of symbolic values defined for use with one or more objects.
Commonly used enumeration sets are assigned a symbolic data type name (textual convention), rather than being specified in the SYNTAX clause of each individual object definition.
Textual conventions defined in the Finisher MIB or the companion IANA Finisher MIB are extensible by RFC publication or Designated Expert Review (see 'IANA Considerations' section of this Finisher MIB and the DESCRIPTION clause in MODULE IDENTITY of IANA Finisher MIB).
All of these textual conventions are: a) used more than once in the Finisher MIB itself; or b) imported and used in any other, including vendor private, MIB modules.
The Finisher MIB has also defined the following special values for use with objects of the syntax "Integer32" to define conditions that are outside of the normal numeric range:  other( 1), unknown( 2), and partial( 3).
The 'partial' value means that there is some supply remaining (but the amount is indeterminate) or there is some capacity remaining (but the amount is indeterminate).
The Integer32 range field indicates in which objects these special values are valid.
The Finisher MIB and the companion IANA Finisher MIB each defines one category of textual convention, according to the process employed to control the addition of new enumerations:
All of the legal values are defined in the Finisher MIB.
Additional enumerated values require the publication of a new Finisher MIB.
All of the legal values are registered in the IANA Finisher MIB.
Additional enumerated values require a Designated Expert Review defined in "Guidelines for Writing an IANA Considerations Section in RFCs" [RFC2434].
The Designated Expert will be selected by the IETF Area Director(s) of the Applications Area.
MIB Specification IANA FINISHER MIB DEFINITIONS ::
mib IMPORTS MODULE IDENTITY, mib 2 FROM SNMPv2
TEXTUAL CONVENTION FROM SNMPv2 TC;
"IANA" CONTACT INFO  "Internet Assigned Numbers Authority Postal: ICANN 4676 Admiralty Way, Suite 330 Marina del Rey, CA 90292
This MIB module defines a set of finishing related TEXTUAL CONVENTIONs for use in Finisher MIB (RFC 3806) and other MIBs which need to specify finishing mechanism details.
Any additions or changes to the contents of this MIB module require either publication of an RFC, or Designated Expert Review as defined in RFC 2434, Guidelines for Writing an IANA Considerations Section in RFCs.
The Designated Expert will be selected by the IESG Area Director(s) of the Applications Area.
The initial version of this MIB module was published in RFC 3806.
Original version, published in coordination with Finisher MIB (RFC 3806)."
, trimmer(6), dieCutter(7), puncher(8), perforater(9), slitter(10), separationCutter(11), imprinter(12), wrapper(13), bander(14)
See section 5.7 for the complete specification of each attribute."
"Specifies an edge for a Finishing Process."
The defined stitching type enumerations.
For the edgeStitch and stapleDual enums, the finReferenceEdge attribute is recommended to define the edge to which the operation applies."
"Defines the direction, relative to the top sheet in the output subunit, that the stitching operation was performed.
For a topDown(3) process, the staple will be clinched on the bottom of the stack.
This parameter can be used to determine what order the pages of a booklet are to be printed such that the staple clinch will be on the inside of the resulting booklet."
This enumeration provides a description of the angular orientation of each stitch in a single or multiple stitching operation, relative to the 'X' axis.
As with all finishing operations, the 'X' axis is always relative to the portrait orientation of the document regardless of the orientation of the printed image.
This enum is primarily applicable to corner stitching operations."
No offset, one on top of another offset(5), crissCross(6)
Printer Finishing MIB Specification Finisher MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE,
Integer32, mib 2 FROM SNMPv2
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2
] hrDeviceIndex FROM HOST RESOURCES MIB
, PrtMarkerSuppliesTypeTC FROM IANA PRINTER
PrtMarkerSuppliesSupplyUnitTC, PrtMediaUnitTC, PrtCapacityUnitTC, PrtMarkerSuppliesClassTC, PresentOnOff,
IDENTITY LAST UPDATED "200406020000Z" ORGANIZATION "PWG IEEE/ISTO Printer Working Group" CONTACT INFO "Harry Lewis IBM Phone (303
harryl@us.ibm.com Send comments to the printmib WG using the Finisher MIB Project (FIN)
For further information, access the PWG web page under 'Finisher MIB':
http://www.pwg.org/ Implementers of this specification are encouraged to join the fin mailing list in order to participate in discussions on any clarifications needed and registration proposals being reviewed in order to achieve consensus."
The MIB module for management of printers.
This version of this MIB module was published in RFC 3806.
For full legal notices see the RFC itself."
The original version of this MIB."
A   finishing device subunit may be associated with one or more   output subunits and one or more media path subunits.
MAX ACCESS not accessible STATUS
"This table defines the finishing device subunits, including information regarding possible configuration options and the status for each finisher device subunit."
"There is an entry in the finishing device table for each possible finisher process.
Each individual finisher process is implemented by a finishing device represented in this table.
"A unique value used to identify a finisher process.
Although these values may change due to a major reconfiguration of the printer system (e.g., the addition of new finishing processes), the values are normally expected to remain stable across successive power cycles."
"Defines the type of finishing process associated with this table row entry."
"Indicates if this finishing device subunit is available and whether the device subunit is enabled.
The unit of measure for specifying the capacity of this finisher device subunit."
MAX ACCESS  read write STATUS
"The maximum capacity of this finisher device subunit in finDeviceCapacityUnits.
If the device can reliably sense this value, the value is sensed by the finisher device and is read only: otherwise the value may be written by a management or control console application.
The value ( 1) means other and specifically indicates that the device places no restrictions on this parameter.
The value ( 2) means unknown.
MAX ACCESS  read write STATUS
The current capacity of this finisher device subunit in finDeviceCapacityUnits.
If the device can reliably sense this value, the value is sensed by the finisher and is read only: otherwise the value may be written by a management or control console application.
The value ( 1) means other and specifically indicates that the device places no restrictions on this parameter.
The value ( 2) means unknown.
"Indicates the media paths which can supply media for this finisher device.
The value of this object is a bit map in an octet string with each position representing the value of a prtMediaPathIndex.
For a media path that can be a source for this finisher device subunit, the bit position equal to one less than the value of prtMediaPathIndex will be set.
The bits are numbered starting with the most significant bit of the first byte being bit 0, the least significant bit of the first byte being bit 7, the most significant of the second byte being bit 8, and so on."
{ finDeviceEntry 7 } finDeviceAssociatedOutputs OBJECT
"Indicates the printer output subunits this finisher device subunit services.
The value of this object is a bit map in an octet string with each position representing the value of a prtOutputIndex.
For an output subunit that is serviced by this finisher device subunit, the bit position equal to one less than the value of prtOutputIndex will be set.
The bits are numbered starting with the most significant bit of the first byte being bit 0, the least significant bit of the first byte being bit 7, the most significant of the second byte being bit 8, and so on."
"Indicates the current status of this finisher device subunit.
"A free form text description of this device subunit in the localization specified by prtGeneralCurrentLocalization."
For example a finisher may use both   binding tape and stitching wire supplies.
A finisher may also have   more than one source for a given type of supply e.g., multiple supply   sources of ink for imprinters.
MAX ACCESS not accessible STATUS
Each unique source of supply is an entry in the finisher supply table.
Each supply entry has its own characteristics associated with it such as colorant and current supply level."
MAX ACCESS not accessible STATUS
A list of finisher devices, with their associated supplies and supplies characteristics.
"A unique value used by a finisher to identify this supply container/receptacle.
Although these values may change due to a major reconfiguration of the finisher (e.g., the addition of new supply sources to the finisher), values are normally expected to remain stable across successive power cycles."
"The value of finDeviceIndex corresponding to the finishing device subunit with which this finisher supply is associated.
The value zero indicates the associated finishing device is Unknown."
"This value indicates whether this supply entity represents a supply that is consumed or a container that is filled."
{ finSupplyEntry 3 } finSupplyType OBJECT
MAX ACCESS  read write STATUS
"The maximum capacity of this supply container/receptacle expressed in Supply Units.
If this supply container/ receptacle can reliably sense this value, the value is sensed  and is read only; otherwise the value may be written by a control panel or management application.
The value ( 1) means other and places no restrictions on this parameter.
The value ( 2) means unknown.
MAX ACCESS  read write STATUS
The current level if this supply is a container; the remaining space if this supply is a receptacle.
If this supply container/receptacle can reliably sense this value, the value is sensed and is read only; otherwise the value may be written by a control panel or management application.
The value ( 1) means other and places no restrictions on this parameter.
The value ( 2) means unknown.
A value of ( 3) means that the printer knows there is some supply or remaining space.
"The name of the color associated with this supply." REFERENCE "The PWG Standardized Media Names specification [PWGMEDIA], section 4 Media Color Names, contains the recommended values for this object.
Implementers may add additional string values.
The naming conventions in ISO 9070 are recommended in order to avoid potential name clashes."
A finisher device may have one or more associated supply media   inputs.
Each entry in this table defines an input for a   supply media type such as inserts, covers, etc.
This group is mandatory only if the printer system contains a   finisher device that requires a media supply used exclusively by a   finishing process.
Examples are inserts or covers that are not   supplied by an input subunit that provides media to the marker.
"The input subunits associated with a finisher supply media are each represented by an entry in this table."
A list of finisher supply media input subunit features and characteristics.
OCTET STRING } finSupplyMediaInputIndex OBJECT TYPE
"A unique value used by a finisher to identify this supply media input subunit.
Although these values may change due to a major reconfiguration of the finisher (e.g., the addition of new supply media input sources to the finisher), values are normally expected to remain stable across successive power cycles."
"The value of finDeviceIndex corresponding to the finishing device subunit with which this finisher media supply is associated.
The value zero indicates the associated device is unknown."
"The value of finSupplyIndex corresponding to the finishing supply subunit with which this finisher media supply is associated.
The value zero indicates the associated finishing supply is unknown or there is no applicable finisher supply table entry."
The type of technology (discriminated primarily according to the feeder mechanism type) employed by the input subunit."
The unit of measure for specifying dimensional values for this input device."
MAX ACCESS  read write STATUS
"This object provides the value of the dimension in the feed direction of the media that is placed or will be placed in this input device.
Feed dimension measurements are taken parallel to the feed direction of the device and measured in finSupplyMediaInputDimUnits.
If this input device can reliably sense this value, the value is sensed and is read only access.
Otherwise the value is read write access and may be written by management or control panel applications.
The value ( 1) means other and specifically indicates that this device places no restrictions on this parameter.
The value ( 2) indicates unknown. "
MAX ACCESS  read write STATUS
"This object provides the value of the dimension across the feed direction of the media that is placed or will be placed in this input device.
The cross feed direction is ninety degrees relative to the feed direction on this device and measured in finSupplyMediaInputDimUnits.
If this input device can reliably sense this value, the value is sensed and is read only access.
Otherwise the value is read write access and may be written by management or control panel applications.
The value ( 1) means other and specifically indicates that this device places no restrictions on this parameter.
The value ( 2) indicates unknown. "
"This value indicates the current status of this input device."
MAX ACCESS  read write STATUS
"The name of the current media contained in this input device.
Examples are Engineering Manual Cover, Section A Tab Divider or any ISO standard names."
MAX ACCESS  read write STATUS
"The weight of the media associated with this Input device in grams per meter squared.
The value ( 1) means other and specifically indicates that the device places no restriction on this parameter.
The value ( 2) means unknown.
This object can be used to calculate the weight of individual pages processed by the document finisher.
This value, when multiplied by the number of pages in a finished set, can be used to calculate the weight of a set before it is inserted into a mailing envelope."
MAX ACCESS  read write STATUS
"This object identifies the thickness of the input media processed by this document input subunit measured in micrometers.
This value may be used by devices (or operators) to set up proper machine tolerances for the feeder operation.
The value ( 2) indicates that the media thickness is unknown or not used in the setup for this input subunit."
MAX ACCESS  read write STATUS
"The name of the type of medium associated with this input subunit. " REFERENCE "The PWG Standardized Media Names specification [PWGMEDIA], section 3 Media Type Names, contains the recommended values for this object.
Implementers may add additional string values.
The naming conventions in ISO 9070 are recommended in order to avoid potential name clashes."
A finisher device subunit may have one or more parameters that   cannot be specified by any other objects in the MIB.
The   Device Attribute group facilitates the definition of these   parameters.
The objects which define the attributes are   read write, to allow both Set and Get operations.
At least one table entry must exist for each finisher device defined   by the MIB.
If no other entry is possible for a finisher device, the   deviceName(3) attribute MUST be returned.
MAX ACCESS not accessible STATUS
"The attribute table defines special parameters that are applicable only to a minority of the finisher devices.
An attribute table entry is used, rather than unique objects, to minimize the number of MIB objects and to allow for expansion without the addition of MIB objects.
Each finisher device is represented by a separate row in the device subunit attribute table."
MAX ACCESS not accessible STATUS
"Each entry defines a finisher function parameter that cannot be represented by an object in the finisher device subunit table.
OCTET STRING } finDeviceAttributeTypeIndex OBJECT
"Defines the attribute type represented by this row."
{ finDeviceAttributeEntry 1 } finDeviceAttributeInstanceIndex OBJECT TYPE SYNTAX
current DESCRIPTION "An index that allows the discrimination of an attribute instance when the same attribute occurs multiple times for a specific instance of a finisher function.
The value of this index shall be 1 if only a single instance of the attribute occurs for the specific finisher function.
Additional values shall be assigned in a contiguous manner."
MAX ACCESS  read write STATUS
"Defines the integer value of the attribute.
The value of the attribute is represented as an integer if the finAttributeTypeTC description for the attribute has the tag 'INTEGER:'.
Depending upon the attribute enum definition, this object may be either an integer, a counter, an index, or an enum.
Attributes for which the concept of an integer value is not meaningful SHALL return a value of  1 for this attribute.
MAX ACCESS  read write STATUS
"Contains the octet string value of the attribute.
The value of the attribute is represented as a string if the finAttributeTypeTC description for the attribute has the tag 'OCTETS:'.
Depending upon the attribute enum definition, this object may be either a coded character set string (text) or a binary octet string.
Attributes for which the concept of an octet string value is not meaningful SHALL contain a zero length string.
finMIBCompliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for agents that implement the finisher MIB."
this module MANDATORY GROUPS { finDeviceGroup, finSupplyGroup, finDeviceAttributeGroup } OBJECT
"It is conformant to implement this object as read only."
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only."
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only."
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only.
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only."
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only.
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only.
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only."
MIN ACCESS  read only DESCRIPTION
"It is conformant to implement this object as read only.
"It is conformant to implement this object as read only.
This group is conditionally mandatory and must be included if a finisher device requires a media supply that is used exclusively by a finishing process."
6 } finDeviceGroup OBJECT GROUP OBJECTS { finDeviceType, finDevicePresentOnOff, finDeviceCapacityUnit, finDeviceMaxCapacity, finDeviceCurrentCapacity, finDeviceAssociatedMediaPaths, finDeviceAssociatedOutputs, finDeviceStatus
, finDeviceDescription } STATUS  current DESCRIPTION
finDeviceAttributeGroup OBJECT GROUP OBJECTS { finDeviceAttributeValueAsInteger
, finDeviceAttributeValueAsOctets } STATUS  current DESCRIPTION
"The finisher device attribute group.
This group is mandatory for a finisher device that contains an inserter subunit."
The initial version of the IANA Finisher MIB defined in section 7 of this document is to be archived by IANA and subsequently maintained according to the Process specified in section 6.1 of this document.
The most current and authoritative version of the IANA Finisher MIB is available at: http://www.iana.org/assignments/ianafinisher
Internationalization Considerations See the Printer MIB [RFC3805] section 2.2.1.1, 'International Considerations'.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
finSupplyMediaInputTable finSupplyMediaInputMediaDimFeedDir  Possible severe inconvenience finSupplyMediaInputMediaDimXFeedDir
finSupplyMediaInputMediaThickness  Possible Minor inconvenience finSupplyMediaInputMediaType
Possible Minor inconvenience finDeviceAttributeTable finDeviceAttributeValueAsInteger
Possible Minor inconvenience SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
Where the operational capability of the printing device are especially vulnerable or difficult to administer, certain objects within this MIB have been tagged as READ ONLY, preventing modification.
Further, for all READ WRITE objects within the MIB, the working group has included specific conformance guidelines stating that vendors are free to implement certain objects as READ ONLY.
This conformance allowance should cover cases where specific vendor vulnerabilities may differ from product to product.
(See conformance section with regards to MIN ACCESS clauses).
