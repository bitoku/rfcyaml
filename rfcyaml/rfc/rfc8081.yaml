- contents:
  - '                    The "font" Top-Level Media Type

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This memo serves to register and document the \"font\" top-level
    media\n   type, under which subtypes for representation formats for fonts may\n
    \  be registered.  This document also serves as a registration\n   application
    for a set of intended subtypes, which are representative\n   of some existing
    subtypes already in use, and currently registered\n   under the \"application\"
    tree by their separate registrations.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8081.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Background and Justification  . . . . . . . . . . . . .
    . . .   3\n   3.  Security Considerations . . . . . . . . . . . . . . . . . .
    .   4\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5\n
    \    4.1.  Definition and Encoding . . . . . . . . . . . . . . . . .   5\n     4.2.
    \ Fragment Identifiers for Font Collections . . . . . . . .   5\n     4.3.  Registration
    Procedure  . . . . . . . . . . . . . . . . .   6\n     4.4.  Subtype Registrations
    . . . . . . . . . . . . . . . . . .   6\n       4.4.1.  Generic SFNT Font Type
    \ . . . . . . . . . . . . . . .   6\n       4.4.2.  TTF Font Type . . . . . .
    . . . . . . . . . . . . . .   9\n       4.4.3.  OpenType Layout (OTF) Font Type
    . . . . . . . . . . .  10\n       4.4.4.  Collection Font Type  . . . . . . .
    . . . . . . . . .  12\n       4.4.5.  WOFF 1.0  . . . . . . . . . . . . . . .
    . . . . . . .  14\n       4.4.6.  WOFF 2.0  . . . . . . . . . . . . . . . . .
    . . . . .  15\n   5.  References  . . . . . . . . . . . . . . . . . . . . . .
    . . .  16\n     5.1.  Normative References  . . . . . . . . . . . . . . . . .
    .  16\n     5.2.  Informative References  . . . . . . . . . . . . . . . . .  17\n
    \  Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The process of setting type in computer systems and other
    forms of\n   text presentation systems uses fonts in order to provide visual\n
    \  representations of the glyphs.  Just as with images, for example,\n   there
    are a number of ways to represent the visual information of the\n   glyphs.  Early
    font formats often used bitmaps, as these could have\n   been carefully tuned
    for maximum readability at a given size on low-\n   resolution displays.  More
    recently, scalable vector outline fonts\n   have come into widespread use.  In
    these fonts, the outlines of the\n   glyphs are described, and the presentation
    system renders the outline\n   in the desired position and size.\n   Over time,
    a number of standard formats for recording font\n   descriptions have evolved.
    \ Internet Media Types [RFC6838] are used\n   to label content carried over Internet
    protocols.  This document\n   defines a new top-level type \"font\" according
    to Section 4.2.7 of\n   [RFC6838].  This top-level type indicates that the content
    specifies\n   font data.  Under this top-level type, different representation\n
    \  formats of fonts may be registered.\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Background and Justification\n   Historically, there has not been a registration
    of formats for fonts.\n   More recently, there have been several representation
    formats\n   registered as media subtypes under the \"application\" top-level type\n
    \  (for example, \"application/font-woff\").  However, with the rapid\n   adoption
    of web fonts (based on the data from HTTP Archive\n   [HTTP-Archive-Trends] showing
    a huge increase in web font usage from\n   1% in the end of 2010 to 50% across
    all sites in the beginning of\n   2015), custom fonts on the web have become a
    core web resource.  As\n   the in-depth analysis [Font-Media-Type-Analysis] shows,
    the lack of\n   the intuitive top-level font type is causing significant confusion\n
    \  among developers -- while currently defined font subtypes are\n   severely
    under-utilized, there are many more sites that already use\n   nonexistent (but
    highly intuitive) media types such as \"font/woff\",\n   \"font/ttf\", and \"font/truetype\".
    \ At the same time, the majority of\n   sites resort to using generic types such
    as \"application/octet-\n   stream\", \"text/plain\", and \"text/html\", or use
    unregisterable types\n   such as \"application/x-font-ttf\".\n   Contrary to the
    expectations of the W3C WebFonts WG, which developed\n   Web Open Font Format
    (WOFF), the officially defined media types such\n   as \"application/font-woff\"
    and \"application/font-sfnt\" see a very\n   limited use -- their adoption rates
    trail far behind as the actual\n   use of web fonts continues to increase.  The
    members of the W3C\n   WebFonts WG concluded that the use of the \"application\"
    top-level\n   type is not ideal.  First, the \"application\" sub-tree is treated\n
    \  (correctly) with great caution with respect to viruses and other\n   active
    code.  Secondly, the lack of a top-level type means that there\n   is no opportunity
    to have a common set of optional parameters, such\n   as are specified here.  Third,
    fonts have a unique set of licensing\n   and usage restrictions, which makes it
    worthwhile to identify this\n   general category with a unique top-level type.\n
    \  The W3C WebFonts WG decided [WG-tlt] that the situation can be\n   significantly
    improved if a set of font media types is registered\n   using \"font\" as a dedicated
    top-level type.  Based on the data\n   analysis presented above, we conclude that
    it is the presence of\n   simple and highly intuitive media types for images that
    caused their\n   widespread adoption, where the correct usage of existing media
    types\n   reaches over 97% for all subtypes in the \"image\" tree.  The WG\n   considers
    that, keeping in mind a rapid adoption of fonts on the web,\n   the registration
    of the top-level media type for fonts along with the\n   intuitive set of subtypes
    that reflect popular and widely used data\n   formats would further stimulate
    the adoption of web fonts,\n   significantly simplify web server configuration
    process, and\n   facilitate the proper use of media types for fonts.\n"
  title: 2.  Background and Justification
- contents:
  - "3.  Security Considerations\n   Fonts are interpreted data structures that represent
    collections of\n   different tables containing data that represent different types
    of\n   information, including glyph outlines in various formats, hinting\n   instructions,
    metrics and layout information for multiple languages\n   and writing systems,
    rules for glyph substitution and positioning,\n   etc.  In particular, the hinting
    instructions for TrueType glyphs\n   represent executable code that has the potential
    to be maliciously\n   constructed (for example, intended to hang the interpreter).
    \ There\n   are many existing, already standardized font table tags and formats\n
    \  that allow an unspecified number of entries containing predefined\n   data
    fields for storage of variable-length binary data.  Many\n   existing font formats
    (TrueType [truetype-wiki], OpenType and OFF\n   [opentype-wiki], SIL Graphite,
    WOFF, etc.) are based on the table-\n   based SFNT (scalable font) format, which
    is extremely flexible,\n   highly extensible, and offers an opportunity to introduce
    additional\n   table structures when needed, in an upward-compatible way that
    would\n   not affect existing font rendering engines and text layout\n   implementations.
    \ However, this very extensibility may present\n   specific security concerns
    -- the flexibility and ease of adding new\n   data structures makes it easy for
    any arbitrary data to be hidden\n   inside a font file.  There is a significant
    risk that the flexibility\n   of font data structures may be exploited to hide
    malicious binary\n   content disguised as a font data component.\n   Fonts may
    contain 'hints', which are programmatic instructions that\n   are executed by
    the font engine for the alignment of graphical\n   elements of glyph outlines
    with the target display pixel grid.\n   Depending on the font technology utilized
    in the creation of a font,\n   these hints may represent active code interpreted
    and executed by the\n   font rasterizer.  Even though hints operate within the
    confines of\n   the glyph outline conversion system and have no access outside
    the\n   font rendering engine, hint instructions can be quite complex, and a\n
    \  maliciously designed complex font could cause undue resource\n   consumption
    (e.g., memory or CPU cycles) on a machine interpreting\n   it.  Indeed, fonts
    are sufficiently complex that most (if not all)\n   interpreters cannot be completely
    protected from malicious fonts\n   without undue performance penalties.\n   Widespread
    use of fonts as necessary components of visual content\n   presentation warrants
    that careful attention should be given to\n   security considerations whenever
    a font is either embedded into an\n   electronic document or transmitted alongside
    media content as a\n   linked resource.  While many existing font formats provide
    certain\n   levels of protection of data integrity (such mechanisms include,\n
    \  e.g., checksums and digital signatures), font data formats provide\n   neither
    privacy nor confidentiality protection internally; if needed,\n   such protection
    should be provided externally.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  IANA Considerations\n   This specification registers a new top-level type,
    \"font\", in the\n   standards tree, adds it as an alternative value of \"Type
    Name\" in the\n   media types registration form [Media-Type-Registration], and\n
    \  registers several subtypes for it.\n"
  - contents:
    - "4.1.  Definition and Encoding\n   The \"font\" as the primary media content
      type indicates that the\n   content identified by it requires a certain graphic
      subsystem such as\n   a font rendering engine (and, in some cases, a text layout
      and a\n   shaping engine) to process it as font data, which in turn may require\n
      \  a certain level of hardware capabilities such as certain levels of\n   CPU
      performance and available memory.  The \"font\" media type does not\n   provide
      any specific information about the underlying data format and\n   how the font
      information should be interpreted -- the subtypes\n   defined within a \"font\"
      tree name the specific font formats.\n   Unrecognized subtypes of \"font\" should
      be treated as \"application/\n   octet-stream\".  Implementations may pass unrecognized
      subtypes to a\n   common font-handling system, if such a system is available.\n"
    title: 4.1.  Definition and Encoding
  - contents:
    - "4.2.  Fragment Identifiers for Font Collections\n   Fragment identifiers for
      font collections identify one font in the\n   collection by the PostScript name
      (name ID=6) [ISO.14496-22.2015].\n   This is a string, no longer than 63 characters
      and restricted to the\n   printable ASCII subset, codes 33 ? 126, except for
      the 10 characters\n   '[', ']', '(', ')', '{', '}', '<', '>', '/', '%', which
      are forbidden\n   by [ISO.14496-22.2015].\n   In addition, the following 6 characters
      could occur in the PostScript\n   name but are forbidden in fragments by [RFC3986],
      and thus must be\n   escaped: '\"', '#', '\\', '^', '`', '|'.\n   If (following
      un-escaping) this string matches one of the PostScript\n   names in the name
      table, that font is selected.  For example, \"#Foo-\n   Bold\" refers to the
      font with PostScript name \"Foo-Bold\" and\n   \"#Caret%5Estick\" refers to
      the font with PostScript name\n   \"Caret^stick\".  If the name does not match,
      or if a fragment is not\n   specified, the first font in the collection is matched.
      \ Note that\n   the order of fonts in collections may change as the font is
      revised,\n   so relying on a particular font in a collection always being first
      is\n   unwise.\n"
    title: 4.2.  Fragment Identifiers for Font Collections
  - contents:
    - "4.3.  Registration Procedure\n   New font formats should be registered using
      the online form\n   [Media-Type-Registration].  [RFC6838] should be consulted
      on\n   registration procedures.  In particular, the font specification\n   should
      preferably be freely available.  If the font format can\n   contain multiple
      fonts, a fragment identifier syntax should also be\n   defined.\n   Note that
      new parameter sub-values may be defined in the future.  If\n   an implementation
      does not recognize a sub-value in the comma-\n   separated list, it should ignore
      the sub-value and continue\n   processing the other sub-values in the list.\n"
    title: 4.3.  Registration Procedure
  - contents:
    - "4.4.  Subtype Registrations\n   In this section, the initial entries under
      the top-level 'font' media\n   type are specified.  They also serve as examples
      for future\n   registrations.\n   For each subtype, an @font-face format identifier
      is listed.  This is\n   for use with the @font-face src descriptor, defined
      by the Cascading\n   Style Sheets Level 3 (CSS3) Fonts specification\n   [W3C.CR-css-fonts-3-20131003].
      \ That specification is normative; the\n   identifiers here are informative.\n"
    - contents:
      - "4.4.1.  Generic SFNT Font Type\n   Type name:  font\n   Subtype name:  sfnt\n
        \  Required parameters:  None\n   Optional parameters:\n      1) Name: outlines\n
        \        Values: a comma-separated subset of True Type Font (TTF),\n         Compact
        Font Format (CFF), and SVG\n         This parameter can be used to specify
        the type of outlines\n         provided by the font.  The value \"TTF\" shall
        be used when a\n         font resource contains glyph outlines in TrueType
        format, the\n         value \"CFF\" shall be used to identify fonts containing\n
        \        PostScript/CFF outlines [cff-wiki], and the value SVG\n         [svg-wiki]
        shall be used to identify fonts that include SVG\n         outlines.  TTF,
        CFF, or SVG outlines can be present in various\n         combinations in the
        same font file; therefore, this optional\n         parameter is a list containing
        one or more items, separated by\n         commas.  Order in the list is not
        significant.\n      2) Name: layout\n         Values: a comma-separated subset
        of OTL, Apple Advanced\n         Typography (AAT), and SIL\n         This
        parameter identifies the type of implemented support for\n         advanced
        text layout features.  The predefined values \"OTL\",\n         \"AAT\", and
        \"SIL\", respectively, indicate support for OpenType\n         text layout,
        Apple Advanced Typography, or Graphite SIL.  More\n         than one shaping
        and layout mechanism may be provided by the\n         same font file; therefore,
        this optional parameter is a list\n         containing one or more items,
        separated by commas.  Order in\n         the list is not significant.\n   Encoding
        considerations:  Binary\n   Interoperability considerations:  As it was noted
        in the first\n      paragraph of the Security Considerations section, a single
        font\n      file can contain encoding of the same glyphs using several\n      different
        representations, e.g., both TrueType and PostScript\n      (CFF) outlines.
        \ Existing font rendering engines may not be able\n      to process some of
        the particular outline formats, and downloading\n      a font resource that
        contains only an unsupported glyph data\n      format would be futile.  Therefore,
        it is useful to clearly\n      identify the format of the glyph outline data
        within a font using\n      an optional parameter, and allow applications to
        make decisions\n      about downloading a particular font resource sooner.
        \ Similarly,\n      another optional parameter identifies the type of text
        shaping and\n      layout mechanism that is provided by a font.\n   Published
        specification:  ISO/IEC 14496-22 \"Open Font Format\" (OFF)\n      specification
        [ISO.14496-22.2015] being developed by ISO/IEC SC29/\n      WG11.\n   Applications
        that use this media type:  All applications that are\n      able to create,
        edit, or display textual media content.\n      Note that \"font/sfnt\" is
        an abstract type from which the (widely\n      used in practice) \"font/ttf\"
        and \"font/otf\" types are conceptually\n      derived.  Use of \"font/sfnt\"
        is likely to be rare in practice, and\n      might be confined to:\n         Uncommon
        combinations such as \"font/sfnt; layout=sil\" that do\n         not have
        a shorter type\n         Cases where a new parameter value is registered\n
        \        Test cases, experimentation, etc.\n   Additional information:\n      Magic
        number(s):  The TrueType fonts and OFF / OpenType fonts\n         containing
        TrueType outlines should use 0x00010000 as the\n         'sfnt' version number.\n
        \        The OFF / OpenType fonts containing CFF data should use the tag\n
        \        'OTTO' as the 'sfnt' version number.\n      File extension(s):  Font
        file extensions used for OFF / OpenType\n         fonts: .ttf and .otf\n         Typically,
        the .ttf extension is only used for fonts containing\n         TrueType outlines,
        whereas the .otf extension can be used for\n         any OpenType/OFF font,
        and either can be used with the TrueType\n         or CFF outlines.\n      Macintosh
        file type code(s):  (no code specified)\n      Macintosh Universal Type Identifier
        code:  \"public.font\"\n      @font-face Format:  None\n      Fragment Identifiers:
        \ None\n      Deprecated Alias:  The existing registration \"application/font-\n
        \        sfnt\" is deprecated in favor of \"font/sfnt\".\n   Person & email
        address to contact for further information:\n      Vladimir Levantovsky (vladimir.levantovsky@monotype.com).\n
        \  Intended usage:  COMMON\n   Restrictions on usage:  None\n   Author:  The
        ISO/IEC 14496-22 \"Open Font Format\" specification is a\n      product of
        the ISO/IEC JTC1 SC29/WG11.\n   Change controller:  The ISO/IEC has change
        control over this\n      specification.\n"
      title: 4.4.1.  Generic SFNT Font Type
    - contents:
      - "4.4.2.  TTF Font Type\n   Type name:  font\n   Subtype name:  ttf\n   Required
        parameters:  None\n   Optional parameters:\n      Name: layout\n      Values:
        a comma-separated subset of OTL, AAT, and SIL\n         This parameter identifies
        the type of support mechanism for\n         advanced text layout features.
        \ The predefined values \"OTL\",\n         \"AAT\", and \"SIL\" respectively
        indicate support for OpenType\n         text layout, Apple Advanced Typography,
        or Graphite SIL.  More\n         than one shaping and layout mechanism may
        be provided by the\n         same font file; therefore, this optional parameter
        is a list\n         containing one or more items, separated by commas.  Order
        in\n         the list is not significant.\n   Encoding considerations:  Binary\n
        \  Interoperability considerations:  As it was noted in the first\n      paragraph
        of Section 3, a single font file can contain encoding of\n      the same glyphs
        using several different representations, e.g.,\n      both TrueType and PostScript
        (CFF) outlines.  Existing font\n      rendering engines may not be able to
        process some of the\n      particular outline formats, and downloading a font
        resource that\n      contains only an unsupported glyph data format would
        be futile.\n      Therefore, it is useful to clearly identify the format of
        the\n      glyph outline data within a font using an optional parameter, and\n
        \     allow applications to make decisions about downloading a\n      particular
        font resource sooner.  Similarly, another optional\n      parameter identifies
        the type of text shaping and layout mechanism\n      that is provided by a
        font.\n   Published specification:  ISO/IEC 14496-22 \"Open Font Format\"
        (OFF)\n      specification [ISO.14496-22.2015] being developed by ISO/IEC
        SC29/\n      WG11.\n   Applications that use this media type:  All applications
        that are\n      able to create, edit, or display textual media content.\n
        \  Additional information:\n      Magic number(s):  The TrueType fonts and
        OFF / OpenType fonts\n         containing TrueType outlines should use 0x00010000
        as the\n         'sfnt' version number.\n      File extension(s):  Font file
        extensions used for TrueType / OFF /\n         OpenType fonts: .ttf and .otf\n
        \        Typically, the .ttf extension is only used for fonts containing\n
        \        TrueType outlines, while the .otf extension may be used for any\n
        \        OpenType/OFF font, either with TrueType or CFF outlines.\n      Macintosh
        file type code(s):  (no code specified)\n      Macintosh Universal Type Identifier
        code:  \"public.truetype-font\"\n      @font-face Format:  truetype\n      Fragment
        Identifiers:  None\n   Person & email address to contact for further information:\n
        \     Vladimir Levantovsky (vladimir.levantovsky@monotype.com).\n   Intended
        usage:  COMMON\n   Restrictions on usage:  None\n   Author:  The ISO/IEC 14496-22
        \"Open Font Format\" specification is a\n      product of the ISO/IEC JTC1
        SC29/WG11.\n   Change controller:  The ISO/IEC has change control over this\n
        \     specification.\n"
      title: 4.4.2.  TTF Font Type
    - contents:
      - "4.4.3.  OpenType Layout (OTF) Font Type\n   Type name:  font\n   Subtype
        name:  otf\n   Required parameters:  None\n   Optional parameters\n      Name:
        outlines\n      Values: a comma-separated subset of TTF, CFF, and SVG\n         This
        parameter can be used to specify the type of outlines\n         provided by
        the font.  The value \"TTF\" shall be used when a\n         font resource
        contains glyph outlines in TrueType format, the\n         value \"CFF\" shall
        be used to identify fonts containing\n         PostScript/CFF outlines, and
        the value SVG shall be used to\n         identify fonts that include SVG outlines.
        \ TTF, CFF, or SVG\n         outlines can be present in various combinations
        in the same\n         font file; therefore, this optional parameter is a list\n
        \        containing one or more items, separated by commas.  Order in\n         the
        list is not significant.\n   Encoding considerations:  Binary\n   Interoperability
        considerations:  As it was noted in the first\n      paragraph of the Security
        Considerations section, a single font\n      file can contain encoding of
        the same glyphs using several\n      different representations, e.g., both
        TrueType and PostScript\n      (CFF) outlines.  Existing font rendering engines
        may not be able\n      to process some of the particular outline formats,
        and downloading\n      a font resource that contains only unsupported glyph
        data format\n      would be futile.  Therefore, it is useful to clearly identify
        the\n      format of the glyph outline data within a font using an optional\n
        \     parameter, and allow applications to make decisions about\n      downloading
        a particular font resource sooner.  Similarly, another\n      optional parameter
        identifies the type of text shaping and layout\n      mechanism that is provided
        by a font.\n   Published specification:  ISO/IEC 14496-22 \"Open Font Format\"
        (OFF)\n      specification [ISO.14496-22.2015] being developed by ISO/IEC
        SC29/\n      WG11.\n   Applications that use this media type:  All applications
        that are\n      able to create, edit, or display textual media content.\n
        \  Additional information:\n      Magic number(s):  The TrueType fonts and
        OFF / OpenType fonts\n         containing TrueType outlines should use 0x00010000
        as the\n         'sfnt' version number.\n         The OFF / OpenType fonts
        containing CFF outlines should use the\n         tag 'OTTO' as the 'sfnt'
        version number.  There is no magic\n         number for SVG outlines; these
        are always accompanied by either\n         TrueType or CFF outlines, and thus
        use the corresponding magic\n         number.\n      File extension(s):  Font
        file extensions used for OFF / OpenType\n         fonts: .ttf and .otf\n         Typically,
        the .ttf extension is only used for fonts containing\n         TrueType outlines,
        while the .otf extension can be used for any\n         OpenType/OFF font,
        either with TrueType, CFF, or SVG outlines.\n      Macintosh file type code(s):
        \ (no code specified)\n      Macintosh Universal Type Identifier code:  \"public.opentype-font\"\n
        \     @font-face Format:  opentype\n      Fragment Identifiers:  None\n   Person
        & email address to contact for further information:\n      Vladimir Levantovsky
        (vladimir.levantovsky@monotype.com).\n   Intended usage:  COMMON\n   Restrictions
        on usage:  None\n   Author:  The ISO/IEC 14496-22 \"Open Font Format\" specification
        is a\n      product of the ISO/IEC JTC1 SC29/WG11.\n   Change controller:
        \ The ISO/IEC has change control over this\n      specification.\n"
      title: 4.4.3.  OpenType Layout (OTF) Font Type
    - contents:
      - "4.4.4.  Collection Font Type\n   Type name:  font\n   Subtype name:  collection\n
        \  Required parameters:  None\n   Optional parameters\n      Name: outlines\n
        \     Values: a comma-separated subset of TTF, CFF, and SVG\n         This
        parameter can be used to specify the type of outlines\n         provided by
        the font.  The value \"TTF\" shall be used when a\n         font resource
        contains glyph outlines in TrueType format, the\n         value \"CFF\" shall
        be used to identify fonts containing\n         PostScript/CFF outlines, and
        the value SVG shall be used to\n         identify fonts that include SVG outlines.
        \ TTF, CFF, or SVG\n         outlines can be present in various combinations
        in the same\n         font file; therefore, this optional parameter is a list\n
        \        containing one or more items, separated by commas.  Order in\n         the
        list is not significant.\n   Encoding considerations:  Binary\n   Interoperability
        considerations:  As it was noted in the first\n      paragraph of the Security
        Considerations section, a single font\n      file can contain encoding of
        the same glyphs using several\n      different representations, e.g., both
        TrueType and PostScript\n      (CFF) outlines.  Existing font rendering engines
        may not be able\n      to process some of the particular outline formats,
        and downloading\n      a font resource that contains only unsupported glyph
        data format\n      would be futile.  Therefore, it is useful to clearly identify
        the\n      format of the glyph outline data within a font using an optional\n
        \     parameter, and allow applications to make decisions about\n      downloading
        a particular font resource sooner.  Similarly, another\n      optional parameter
        identifies the type of text shaping and layout\n      mechanism that is provided
        by a font.\n   Published specification:  ISO/IEC 14496-22 \"Open Font Format\"
        (OFF)\n      specification [ISO.14496-22.2015] being developed by ISO/IEC
        SC29/\n      WG11.\n   Applications that use this media type:  All applications
        that are\n      able to create, edit, or display textual media content.\n
        \  Additional information:\n      Magic number(s):  The TrueType fonts and
        OFF / OpenType fonts\n         containing TrueType outlines should use 0x00010000
        as the\n         'sfnt' version number.\n         The OFF / OpenType fonts
        containing CFF outlines should use the\n         tag 'OTTO' as the 'sfnt'
        version number.  There is no magic\n         number for SVG outlines; these
        are always accompanied by either\n         TrueType or CFF outlines, and thus
        use the corresponding magic\n         number.\n      File extension(s):  Font
        file extensions used for OFF / TrueType\n         and OpenType fonts: .ttc\n
        \     Macintosh file type code(s):  (no code specified)\n      Macintosh Universal
        Type Identifier code:  \"public.truetype-\n         collection-font\"\n      @font-face
        Format:  collection\n      Fragment Identifiers:  See Section 4.2.\n   Person
        & email address to contact for further information:\n      Vladimir Levantovsky
        (vladimir.levantovsky@monotype.com).\n   Intended usage:  COMMON\n   Restrictions
        on usage:  None\n   Author:  The ISO/IEC 14496-22 \"Open Font Format\" specification
        is a\n      product of the ISO/IEC JTC1 SC29/WG11.\n   Change controller:
        \ The ISO/IEC has change control over this\n      specification.\n"
      title: 4.4.4.  Collection Font Type
    - contents:
      - "4.4.5.  WOFF 1.0\n   Type name:  font\n   Subtype name:  woff\n   Required
        parameters:  None\n   Optional parameters:  None\n   Encoding considerations:
        \ Binary\n   Interoperability considerations:  None\n   Published specification:
        \ This media type registration updates the\n      WOFF specification [W3C.REC-WOFF-20121213]
        at W3C.\n   Applications that use this media type:  WOFF is used by web browsers,\n
        \     often in conjunction with HTML and CSS.\n   Additional information:\n
        \     Magic number(s):  The signature field in the WOFF header MUST\n         contain
        the \"magic number\" 0x774F4646 ('wOFF')\n      File extension(s):  woff\n
        \     Macintosh file type code(s):  (no code specified)\n      Macintosh Universal
        Type Identifier code:  \"org.w3.woff\"\n      @font-face Format:  woff\n      Fragment
        Identifiers:  None\n      Deprecated Alias:  The existing registration \"application/font-\n
        \        woff\" is deprecated in favor of \"font/woff\".\n   Person & email
        address to contact for further information:\n      Chris Lilley (www-font@w3.org).\n
        \  Intended usage:  COMMON\n   Restrictions on usage:  None\n   Author:  The
        WOFF specification is a work product of the World Wide\n      Web Consortium's
        WebFonts working group.\n   Change controller:  The W3C has change control
        over this\n      specification.\n"
      title: 4.4.5.  WOFF 1.0
    - contents:
      - "4.4.6.  WOFF 2.0\n   Type name:  font\n   Subtype name:  woff2\n   Required
        parameters:  None\n   Optional parameters:  None\n   Encoding considerations:
        \ Binary\n   Interoperability considerations:  WOFF 2.0 is an improvement
        on WOFF\n      1.0.  The two formats have different Internet Media Types and\n
        \     different @font-face formats, and they may be used in parallel.\n   Published
        specification:  This media type registration is extracted\n      from the
        WOFF 2.0 specification [W3C.CR-WOFF2-20150414] at W3C.\n   Applications that
        use this media type:  WOFF 2.0 is used by web\n      browsers, often in conjunction
        with HTML and CSS.\n   Additional information:\n      Magic number(s):  The
        signature field in the WOFF header MUST\n         contain the \"magic number\"
        0x774F4632 ('wOF2')\n      File extension(s):  woff2\n      Macintosh file
        type code(s):  (no code specified)\n      Macintosh Universal Type Identifier
        code:  \"org.w3.woff2\"\n      @font-face Format:  woff2\n      Fragment Identifiers:
        \ See Section 4.2.\n   Person & email address to contact for further information:\n
        \     Chris Lilley (www-font@w3.org).\n   Intended usage:  COMMON\n   Restrictions
        on usage:  None\n   Author:  The WOFF2 specification is a work product of
        the World Wide\n      Web Consortium's WebFonts working group.\n   Change
        controller:  The W3C has change control over this\n      specification.\n"
      title: 4.4.6.  WOFF 2.0
    title: 4.4.  Subtype Registrations
  title: 4.  IANA Considerations
- contents:
  - '5.  References

    '
  - contents:
    - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
      Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,
      January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n   [RFC6838]
      \ Freed, N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications
      and Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,
      January 2013,\n              <http://www.rfc-editor.org/info/rfc6838>.\n   [W3C.CR-css-fonts-3-20131003]\n
      \             Daggett, J., \"CSS Fonts Module Level 3\", World Wide Web\n              Consortium
      CR CR-css-fonts-3-20131003, October 2013,\n              <http://www.w3.org/TR/2013/CR-css-fonts-3-20131003>.\n
      \  [ISO.14496-22.2015]\n              International Organization for Standardization,
      \"Coding of\n              audio-visual objects Part 22: Open Font Format\",\n
      \             ISO Standard 14496-22, 10 2015,\n              <http://standards.iso.org/ittf/PubliclyAvailableStandards/\n
      \             c066391_ISO_IEC_14496-22_2015.zip>.\n   [W3C.REC-WOFF-20121213]\n
      \             Kew, J., Leming, T., and E. Blokland, \"WOFF File Format\n              1.0\",
      World Wide Web Consortium Recommendation\n              REC-WOFF-20121213, December
      2012,\n              <http://www.w3.org/TR/2012/REC-WOFF-20121213>.\n   [W3C.CR-WOFF2-20150414]\n
      \             Levantovsky, V. and R. Levien, \"WOFF File Format 2.0\",\n              World
      Wide Web Consortium WD CR-WOFF2-20150414, March\n              2016, <https://www.w3.org/TR/2016/CR-WOFF2-20160315/>.\n"
    title: 5.1.  Normative References
  - contents:
    - "5.2.  Informative References\n   [cff-wiki] Wikipedia, \"Compact Font Format\",
      November 2016,\n              <https://en.wikipedia.org/w/\n              index.php?title=PostScript_fonts&oldid=747740863>.\n
      \  [opentype-wiki]\n              Wikipedia, \"OpenType\", February 2017,\n
      \             <https://en.wikipedia.org/w/\n              index.php?title=OpenType&oldid=763528773>.\n
      \  [truetype-wiki]\n              Wikipedia, \"TrueType\", January 2017,\n              <https://en.wikipedia.org/w/\n
      \             index.php?title=TrueType&oldid=759367886>.\n   [svg-wiki] Wikipedia,
      \"Scalable Vector Graphics\", February 2017,\n              <https://en.wikipedia.org/w/\n
      \             index.php?title=Scalable_Vector_Graphics&oldid=763136508>.\n   [HTTP-Archive-Trends]\n
      \             Kuetell, D., \"HTTP Archive trend analysis\", March 2015,\n              <http://httparchive.org/trends.php?s=All&minlabel=Nov+15+2\n
      \             010&maxlabel=Feb+15+2015#perFonts>.\n   [Font-Media-Type-Analysis]\n
      \             Kuetell, D., \"Web Font Media Type (mime type) Analysis\n              2015\",
      2015, <http://goo.gl/zbDhUN>.\n   [WG-tlt]   W3C, \"ACTION-164: Bring widely
      used top-level type to\n              w3c-ietf liaison\", 2015,\n              <https://www.w3.org/Fonts/WG/track/actions/164>.\n
      \  [Media-Type-Registration]\n              IANA, \"Application for a Media
      Type\",\n              <http://www.iana.org/form/media-types>.\n"
    title: 5.2.  Informative References
  title: 5.  References
- contents:
  - "Author's Address\n   Chris Lilley\n   W3C\n   2004 Route des Lucioles\n   Sophia
    Antipolis  06902\n   France\n   Email: chris@w3.org\n"
  title: Author's Address
