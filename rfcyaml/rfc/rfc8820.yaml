- title: __initial_text__
  contents:
  - '                        URI Design and Ownership

    '
- title: Abstract
  contents:
  - "Abstract\n   Section 1.1.1 of RFC 3986 defines URI syntax as \"a federated and\n\
    \   extensible naming system wherein each scheme's specification may\n   further\
    \ restrict the syntax and semantics of identifiers using that\n   scheme.\"  In\
    \ other words, the structure of a URI is defined by its\n   scheme.  While it\
    \ is common for schemes to further delegate their\n   substructure to the URI's\
    \ owner, publishing independent standards\n   that mandate particular forms of\
    \ substructure in URIs is often\n   problematic.\n   This document provides guidance\
    \ on the specification of URI\n   substructure in standards.\n   This document\
    \ obsoletes RFC 7320 and updates RFC 3986.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 7841.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8820.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Intended Audience\n     1.2.\
    \  Notational Conventions\n   2.  Best Current Practices for Standardizing Structured\
    \ URIs\n     2.1.  URI Schemes\n     2.2.  URI Authorities\n     2.3.  URI Paths\n\
    \     2.4.  URI Queries\n     2.5.  URI Fragment Identifiers\n   3.  Alternatives\
    \ to Specifying Structure in URIs\n   4.  Security Considerations\n   5.  IANA\
    \ Considerations\n   6.  References\n     6.1.  Normative References\n     6.2.\
    \  Informative References\n   Appendix A.  Changes from RFC 7320\n   Acknowledgments\n\
    \   Author's Address\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   URIs [RFC3986] very often include structured application\
    \ data.  This\n   might include artifacts from filesystems (often occurring in\
    \ the path\n   component) and user information (often in the query component).\
    \  In\n   some cases, there can even be application-specific data in the\n   authority\
    \ component (e.g., some applications are spread across\n   several hostnames to\
    \ enable a form of partitioning or dispatch).\n   Implementations can impose further\
    \ constraints upon the structure of\n   URIs; for example, many web servers use\
    \ the filename extension of the\n   last path segment to determine the media type\
    \ of the response.\n   Likewise, prepackaged applications often have highly structured\
    \ URIs\n   that can only be changed in limited ways (often, just the hostname\n\
    \   and port on which they are deployed).\n   Because the owner of the URI (as\
    \ defined in [webarch],\n   Section 2.2.2.1) is choosing to use the server or\
    \ the application,\n   this can be seen as reasonable delegation of authority.\
    \  However,\n   when such conventions are mandated by a party other than the owner,\n\
    \   it can have several potentially detrimental effects:\n   *  Collisions - As\
    \ more ad hoc conventions for URI structure become\n      standardized, it becomes\
    \ more likely that there will be collisions\n      between them (especially considering\
    \ that servers, applications,\n      and individual deployments will have their\
    \ own conventions).\n   *  Dilution - When the information added to a URI is ephemeral,\
    \ this\n      dilutes its utility by reducing its stability (see [webarch],\n\
    \      Section 3.5.1) and can cause several alternate forms of the URI to\n  \
    \    exist (see [webarch], Section 2.3.1).\n   *  Rigidity - Fixed URI syntax\
    \ often interferes with desired\n      deployment patterns.  For example, if an\
    \ authority wishes to offer\n      several applications on a single hostname,\
    \ it becomes difficult to\n      impossible to do if their URIs do not allow the\
    \ required\n      flexibility.\n   *  Operational Difficulty - Supporting some\
    \ URI conventions can be\n      difficult in some implementations.  For example,\
    \ specifying that a\n      particular query parameter be used with \"http\" URIs\
    \ can preclude\n      the use of web servers that serve the response from a filesystem.\n\
    \      Likewise, an application that fixes a base path for its operation\n   \
    \   (e.g., \"/v1\") makes it impossible to deploy other applications\n      with\
    \ the same prefix on the same host.\n   *  Client Assumptions - When conventions\
    \ are standardized, some\n      clients will inevitably assume that the standards\
    \ are in use when\n      those conventions are seen.  This can lead to interoperability\n\
    \      problems; for example, if a specification documents that the \"sig\"\n\
    \      URI query parameter indicates that its payload is a cryptographic\n   \
    \   signature for the URI, it can lead to undesirable behavior.\n   Publishing\
    \ a standard that constrains an existing URI structure in\n   ways that aren't\
    \ explicitly allowed by [RFC3986] (usually, by\n   updating the URI scheme definition)\
    \ is therefore sometimes\n   problematic, both for these reasons and because the\
    \ structure of a\n   URI needs to be firmly under the control of its owner.\n\
    \   This document explains some best current practices for establishing\n   URI\
    \ structures, conventions, and formats in standards.  It also\n   offers strategies\
    \ for specifications in Section 3.\n"
- title: 1.1.  Intended Audience
  contents:
  - "1.1.  Intended Audience\n   This document's guidelines and requirements target\
    \ the authors of\n   specifications that constrain the syntax or structure of\
    \ URIs or\n   parts of them.  Two classes of such specifications are called out\n\
    \   specifically:\n   *  Protocol Extensions (\"Extensions\") - specifications\
    \ that offer new\n      capabilities that could apply to any identifier or to\
    \ a large\n      subset of possible identifiers, e.g., a new signature mechanism\n\
    \      for \"http\" URIs, metadata for any URI, or a new format.\n   *  Applications\
    \ Using URIs (\"Applications\") - specifications that use\n      URIs to meet\
    \ specific needs, e.g., an HTTP interface to particular\n      information on\
    \ a host.\n   Requirements that target the generic class \"Specifications\" apply\
    \ to\n   all specifications, including both those enumerated above and others.\n\
    \   Note that this specification ought not be interpreted as preventing\n   the\
    \ allocation of control of URIs by parties that legitimately own\n   them or have\
    \ delegated that ownership; for example, a specification\n   might legitimately\
    \ define the semantics of a URI on IANA's web site\n   as part of the establishment\
    \ of a registry.\n   There may be existing IETF specifications that already deviate\
    \ from\n   the guidance in this document.  In these cases, it is up to the\n \
    \  relevant communities (i.e., those of the URI scheme as well as any\n   relevant\
    \ community that produced the specification in question) to\n   determine an appropriate\
    \ outcome, e.g., updating the scheme\n   definition or changing the specification.\n"
- title: 1.2.  Notational Conventions
  contents:
  - "1.2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Best Current Practices for Standardizing Structured URIs
  contents:
  - "2.  Best Current Practices for Standardizing Structured URIs\n   This section\
    \ updates [RFC3986] by advising Specifications how they\n   should define structure\
    \ and semantics within URIs.  Best practices\n   differ, depending on the URI\
    \ component in question, as described\n   below.\n"
- title: 2.1.  URI Schemes
  contents:
  - "2.1.  URI Schemes\n   Applications and Extensions can require the use of one\
    \ or more\n   specific URI schemes; for example, it is perfectly acceptable to\n\
    \   require that an Application support \"http\" and \"https\" URIs.\n   However,\
    \ Applications ought not preclude the use of other URI schemes\n   in the future,\
    \ unless they are clearly only usable with the nominated\n   schemes.\n   A Specification\
    \ that defines substructure for URI schemes overall\n   (e.g., a prefix or suffix\
    \ for URI scheme names) MUST do so by\n   modifying [BCP35] (an exceptional circumstance).\n"
- title: 2.2.  URI Authorities
  contents:
  - "2.2.  URI Authorities\n   Scheme definitions define the presence, format, and\
    \ semantics of an\n   authority component in URIs; all other Specifications MUST\
    \ NOT\n   constrain or define the structure or the semantics for URI\n   authorities,\
    \ unless they update the scheme registration itself or the\n   structures it relies\
    \ upon (e.g., DNS name syntax, as defined in\n   Section 3.5 of [RFC1034]).\n\
    \   For example, an Extension or Application cannot say that the \"foo\"\n   prefix\
    \ in \"https://foo_app.example.com\" is meaningful or triggers\n   special handling\
    \ in URIs, unless they update either the \"http\" URI\n   scheme or the DNS hostname\
    \ syntax.\n   Applications can nominate or constrain the port they use, when\n\
    \   applicable.  For example, BarApp could run over port nnnn (provided\n   that\
    \ it is properly registered).\n"
- title: 2.3.  URI Paths
  contents:
  - "2.3.  URI Paths\n   Scheme definitions define the presence, format, and semantics\
    \ of a\n   path component in URIs, although these are often delegated to the\n\
    \   Application(s) in a given deployment.\n   To avoid collisions, rigidity, and\
    \ erroneous client assumptions,\n   Specifications MUST NOT define a fixed prefix\
    \ for their URI paths --\n   for example, \"/myapp\" -- unless allowed by the\
    \ scheme definition.\n   One such exception to this requirement is registered\
    \ \"well-known\"\n   URIs, as specified by [RFC8615].  See that document for a\
    \ description\n   of the applicability of that mechanism.\n   Note that this does\
    \ not apply to Applications defining a structure of\n   a URI's path \"under\"\
    \ a resource controlled by the server.  Because\n   the prefix is under control\
    \ of the party deploying the Application,\n   collisions and rigidity are avoided,\
    \ and the risk of erroneous client\n   assumptions is reduced.\n   For example,\
    \ an Application might define \"app_root\" as a deployment-\n   controlled URI\
    \ prefix.  Application-defined resources might then be\n   assumed to be present\
    \ at \"{app_root}/foo\" and \"{app_root}/bar\".\n   Extensions MUST NOT define\
    \ a structure within individual URI\n   components (e.g., a prefix or suffix),\
    \ again to avoid collisions and\n   erroneous client assumptions.\n"
- title: 2.4.  URI Queries
  contents:
  - "2.4.  URI Queries\n   The presence, format, and semantics of the query component\
    \ of URIs\n   are dependent upon many factors and can be constrained by a scheme\n\
    \   definition.  Often, they are determined by the implementation of a\n   resource\
    \ itself.\n   Applications can specify the syntax of queries for the resources\n\
    \   under their control.  However, doing so can cause operational\n   difficulties\
    \ for deployments that do not support a particular form of\n   a query.  For example,\
    \ a site may wish to support an Application\n   using \"static\" files that do\
    \ not support query parameters.\n   Extensions MUST NOT constrain the format or\
    \ semantics of queries, to\n   avoid collisions and erroneous client assumptions.\
    \  For example, an\n   Extension that indicates that all query parameters with\
    \ the name\n   \"sig\" indicate a cryptographic signature would collide with\n\
    \   potentially preexisting query parameters on sites and lead clients to\n  \
    \ assume that any matching query parameter is a signature.\n   Per the \"Form\
    \ submission\" section of [HTML5], HTML constrains the\n   syntax of query strings\
    \ used in form submission.  New form languages\n   are encouraged to allow creation\
    \ of a broader variety of URIs (e.g.,\n   by allowing the form to create new path\
    \ components, and so forth).\n"
- title: 2.5.  URI Fragment Identifiers
  contents:
  - "2.5.  URI Fragment Identifiers\n   Section 3.5 of [RFC3986] specifies fragment\
    \ identifiers' syntax and\n   semantics as being dependent upon the media type\
    \ of a potentially\n   retrieved resource.  As a result, other Specifications\
    \ MUST NOT\n   define structure within the fragment identifier, unless they are\n\
    \   explicitly defining one for reuse by media types in their definitions\n  \
    \ (for example, as JSON Pointer [RFC6901] does).\n   An Application that defines\
    \ common fragment identifiers across media\n   types not controlled by it would\
    \ engender interoperability problems\n   with handlers for those media types (because\
    \ the new, non-standard\n   syntax is not expected).\n"
- title: 3.  Alternatives to Specifying Structure in URIs
  contents:
  - "3.  Alternatives to Specifying Structure in URIs\n   Given the issues described\
    \ in Section 1, the most successful strategy\n   for Applications and Extensions\
    \ that wish to use URIs is to use them\n   in the fashion for which they were\
    \ designed: as links that are\n   exchanged as part of the protocol, rather than\
    \ statically specified\n   syntax.  Several existing specifications can aid in\
    \ this.\n   [RFC8288] specifies relation types for web links.  By providing a\n\
    \   framework for linking on the Web, where every link has a relation\n   type,\
    \ context, and target, it allows Applications to define a link's\n   semantics\
    \ and connectivity.\n   [RFC6570] provides a standard syntax for URI Templates\
    \ that can be\n   used to dynamically insert Application-specific variables into\
    \ a URI\n   to enable such Applications while avoiding impinging upon URI owners'\n\
    \   control of them.\n   [RFC8615] allows specific paths to be \"reserved\" for\
    \ standard use on\n   URI schemes that opt into that mechanism (\"http\" and \"\
    https\" by\n   default).  Note, however, that this is not a general \"escape valve\"\
    \n   for Applications that need structured URIs; see that specification\n   for\
    \ more information.\n   Specifying more elaborate structures in an attempt to\
    \ avoid\n   collisions is not an acceptable solution and does not address the\n\
    \   issues described in Section 1.  For example, prefixing query\n   parameters\
    \ with \"myapp_\" does not help, because the prefix itself is\n   subject to the\
    \ risk of collision (since it is not \"reserved\").\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document does not introduce new protocol\
    \ artifacts with security\n   considerations.  It prohibits some practices that\
    \ might lead to\n   vulnerabilities; for example, if a security-sensitive mechanism\
    \ is\n   introduced by assuming that a URI path component or query string has\n\
    \   a particular meaning, false positives might be encountered (due to\n   sites\
    \ that already use the chosen string).  See also [RFC6943].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [webarch]  Jacobs,\
    \ I. and N. Walsh, \"Architecture of the World Wide\n              Web, Volume\
    \ One\", December 2004,\n              <https://www.w3.org/TR/2004/REC-webarch-20041215>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [BCP35]    Thaler, D., Ed., Hansen, T., and\
    \ T. Hardie, \"Guidelines\n              and Registration Procedures for New URI\
    \ Schemes\", BCP 35,\n              RFC 7595, June 2015,\n              <https://www.rfc-editor.org/info/bcp35>.\n\
    \   [HTML5]    WHATWG, \"HTML - Living Standard\", Section 4.10.21, June\n   \
    \           2020, <https://html.spec.whatwg.org/#form-submission>.\n   [RFC1034]\
    \  Mockapetris, P., \"Domain names - concepts and facilities\",\n            \
    \  STD 13, RFC 1034, DOI 10.17487/RFC1034, November 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n\
    \   [RFC6570]  Gregorio, J., Fielding, R., Hadley, M., Nottingham, M.,\n     \
    \         and D. Orchard, \"URI Template\", RFC 6570,\n              DOI 10.17487/RFC6570,\
    \ March 2012,\n              <https://www.rfc-editor.org/info/rfc6570>.\n   [RFC6901]\
    \  Bryan, P., Ed., Zyp, K., and M. Nottingham, Ed.,\n              \"JavaScript\
    \ Object Notation (JSON) Pointer\", RFC 6901,\n              DOI 10.17487/RFC6901,\
    \ April 2013,\n              <https://www.rfc-editor.org/info/rfc6901>.\n   [RFC6943]\
    \  Thaler, D., Ed., \"Issues in Identifier Comparison for\n              Security\
    \ Purposes\", RFC 6943, DOI 10.17487/RFC6943, May\n              2013, <https://www.rfc-editor.org/info/rfc6943>.\n\
    \   [RFC8288]  Nottingham, M., \"Web Linking\", RFC 8288,\n              DOI 10.17487/RFC8288,\
    \ October 2017,\n              <https://www.rfc-editor.org/info/rfc8288>.\n  \
    \ [RFC8615]  Nottingham, M., \"Well-Known Uniform Resource Identifiers\n     \
    \         (URIs)\", RFC 8615, DOI 10.17487/RFC8615, May 2019,\n              <https://www.rfc-editor.org/info/rfc8615>.\n"
- title: Appendix A.  Changes from RFC 7320
  contents:
  - "Appendix A.  Changes from RFC 7320\n   Many of the requirements of RFC 7320 were\
    \ removed, in the spirit of\n   making this BCP guidance rather than rules.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to David Booth, Dave Crocker, Tim Bray, Anne van Kesteren,\n\
    \   Martin Thomson, Erik Wilde, Dave Thaler, and Barry Leiba for their\n   suggestions\
    \ and feedback.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mark Nottingham\n"
