- title: __initial_text__
  contents:
  - '                The MIME Multipart/Related Content-type

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Multipart/Related content-type provides a common mechanism for\n\
    \   representing objects that are aggregates of related MIME body parts.\n   This\
    \ document defines the Multipart/Related content-type and provides\n   examples\
    \ of its use.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Several applications of MIME, including MIME-PEM, and MIME-Macintosh\n\
    \   and other proposals, require multiple body parts that make sense only\n  \
    \ in the aggregate.  The present approach to these compound objects has\n   been\
    \ to define specific multipart subtypes for each new object.  In\n   keeping with\
    \ the MIME philosophy of having one mechanism to achieve\n   the same goal for\
    \ different purposes, this document describes a\n   single mechanism for such\
    \ aggregate or compound objects.\n   The Multipart/Related content-type addresses\
    \ the MIME representation\n   of compound objects.  The object is categorized\
    \ by a \"type\"\n   parameter.  Additional parameters are provided to indicate\
    \ a specific\n   starting body part or root and auxiliary information which may\
    \ be\n   required when unpacking or processing the object.\n   Responsibility\
    \ for the display or processing of a Multipart/Related's\n   constituent entities\
    \ rests with the application that handles the\n   compound object.\n"
- title: 2.  Multipart/Related Registration Information
  contents:
  - "2.  Multipart/Related Registration Information\n   The following form is copied\
    \ from RFC 1590, Appendix A.\n   To:  IANA@isi.edu\n   Subject:  Registration\
    \ of new Media Type content-type/subtype\n   Media Type name:           Multipart\n\
    \   Media subtype name:        Related\n   Required parameters:       Type, a\
    \ media type/subtype.\n   Optional parameters:       Start, a content-id.\n  \
    \                            Start-info, a string or content-id list.\n   Encoding\
    \ considerations:   Multipart content-types cannot have\n                    \
    \          encodings.\n   Security considerations:   Depends solely on the referenced\
    \ type.\n   Published specification:   This document.\n   Person & email address\
    \ to contact for further information:\n                              Edward Levinson\n\
    \                              Accurate Information Systems, Inc.\n          \
    \                    2 Industrial Way\n                              Eatontown,\
    \ NJ 07724\n                              +1 908 389 5550\n                  \
    \            +1 908 389 5556 (fax)\n                              ELevinson@Accurate.com\n"
- title: 3.  Intended usage
  contents:
  - "3.  Intended usage\n   The Multipart/Related media type is intended for compound\
    \ objects\n   consisting of several inter-related body parts.  For a\n   Multipart/Related\
    \ object, proper display cannot be achieved by\n   individually displaying the\
    \ constituent body parts.  The content-type\n   of the Multipart/Related object\
    \ is specified by the type parameter.\n   The \"start\" parameter, if given, points,\
    \ via a content-ID, to the\n   body part that contains the object root.  The default\
    \ root is the\n   first body part within the Multipart/Related body.\n   The relationships\
    \ among the body parts of a compound object\n   distinguishes it from other object\
    \ types.  These relationships are\n   often represented by links internal to the\
    \ object's components that\n   reference the other components.  Within a single\
    \ operating\n   environment the links are often file names, such links may be\n\
    \   represented within a MIME message using content-IDs or the value of\n   some\
    \ other \"Content-\" header.\n"
- title: 3.1.  The Type Parameter
  contents:
  - "3.1.  The Type Parameter\n   The type parameter must be specified and its value\
    \ is the MIME media\n   type of the root body part.  It permits a MIME user agent\
    \ to\n   determine the content-type without reference to the enclosed body\n \
    \  part.  If the value of the type parameter and the root body part's\n   content-type\
    \ differ then the User Agent's behavior is undefined.\n   Note: Constraining the\
    \ \"type\" parameter's value to an existing media\n   type allows the appropriate\
    \ processing to be identified without\n   creating yet another hierarchy of registered\
    \ types.  A possible\n   default action would have the MIME mail User Agent (MUA)\
    \ to display\n   the \"start\" entity alone when it could process the media type\
    \ as a\n   basic type but not as Multipart/Related.\n"
- title: 3.2.  The Start Parameter
  contents:
  - "3.2.  The Start Parameter\n   The start parameter, if given, is the content-ID\
    \ of the compound\n   object's root.  If not present the root is the first body\
    \ part in the\n   Multipart/Related entity.  The root is the element the application\n\
    \   processes first.\n   In the case of a Multipart/Alternative body part containing\
    \ several\n   entities with identical content-IDs the start entity should be\n\
    \   selected using the Multipart/Alternative rules.\n   Note: The \"start\" parameter\
    \ allows for types in which the root\n   element gets generated by the sending\
    \ application, perhaps on the\n   fly.  Such an application can create the \"\
    start\" content-id when\n   processing begins and then insert the body part when\
    \ it is complete.\n"
- title: 3.3.  The Start-Info Parameter
  contents:
  - "3.3.  The Start-Info Parameter\n   Additional information can be provided to\
    \ an application by the\n   start-info parameter.  It contains either a string\
    \ or points, via a\n   content-ID, to another MIME entity in the message.  A typical\
    \ use\n   might be to provide additional command line parameters or a MIME\n \
    \  entity giving auxiliary information for processing the compound\n   object.\n\
    \   Applications that use Multipart/Related must specify the\n   interpretation\
    \ of start-info.  User Agents shall provide the\n   parameter's value to the processing\
    \ application.  Processes can\n   distinguish a start-info reference from a token\
    \ or quoted-string by\n   examining the first non-white-space character, \"<\"\
    \ indicates a\n   content-id reference.\n"
- title: 3.4.  Syntax
  contents:
  - "3.4.  Syntax\n     related-param    := [ \";\" \"start\" \"=\" cid ]\n      \
    \                   [ \";\" \"start-info\"  \"=\"\n                          \
    \ ( cid-list / value ) ]\n                         [ \";\" \"type\"  \"=\" type\
    \ \"/\" subtype ]\n                         ; order independent\n     cid-list\
    \        := cid cid-list\n     cid             := msg-id     ; c.f. [822]\n  \
    \   value           := token / quoted-string    ; c.f. [MIME]\n              \
    \               ; value cannot begin with \"<\"\n   Note that the parameter values\
    \ will usually require quoting.  Msg-id\n   contains the special characters \"\
    <\", \">\", \"@\", and perhaps other\n   special characters.  If msg-id contains\
    \ quoted-strings, those quote\n   marks must be escaped.  Similarly, the type\
    \ parameter contains the\n   special character \"/\".\n"
- title: 4.  Examples
  contents:
  - '4.  Examples

    '
- title: 4.1 Application/X-FixedRecord
  contents:
  - "4.1 Application/X-FixedRecord\n   The X-FixedRecord content-type consists of\
    \ one or more octet- streams\n   and a list of the lengths of each record.  The\
    \ root, which lists the\n   record lengths of each record within the streams.\
    \  The record length\n   list, type Application/X-FixedRecord, consists of a set\
    \ of INTEGERs\n   in ASCII format, one per line.  Each INTEGER gives the number\
    \ of\n   octets from the octet-stream body part that constitute the next\n   \"\
    record\".\n   The example below, uses a single data block which the sender\n \
    \  processes on the fly to generate the record length list.\n   Consequently the\
    \ list appears after the data.\n     Content-Type: Multipart/Related; boundary=example-1\n\
    \             start=\"<950120.aaCC@XIson.com>\";\n             type=\"Application/X-FixedRecord\"\
    \n             start-info=\"-o ps\"\n     --example-1\n     Content-Type: Application/octet-stream\n\
    \     Content-Description: The fixed length records\n     Content-Transfer-Encoding:\
    \ base64\n     Content-ID: <950120.aaCB@XIson.com>\n     T2xkIE1hY0RvbmFsZCBoYWQgYSBmYXJtCkUgSS\n\
    \     BFIEkgTwpBbmQgb24gaGlzIGZhcm0gaGUgaGFk\n     IHNvbWUgZHVja3MKRSBJIEUgSSBPCldpdGggYS\n\
    \     BxdWFjayBxdWFjayBoZXJlLAphIHF1YWNrIHF1\n     YWNrIHRoZXJlLApldmVyeSB3aGVyZSBhIHF1YW\n\
    \     NrIHF1YWNrCkUgSSBFIEkgTwo=\n     --example-1\n     Content-Type: Application/X-FixedRecord\n\
    \     Content-ID: <950120.aaCC@XIson.com>\n     25\n     10\n     34\n     10\n\
    \     25\n     21\n     26\n     10\n     --example-1--\n"
- title: 4.2 Text/X-Okie
  contents:
  - '4.2 Text/X-Okie

    '
- title: The Text/X-Okie is an invented markup language, similar to
  contents:
  - 'The Text/X-Okie is an invented markup language, similar to

    '
- title: HTML, that permits the inclusion of images with text.  A
  contents:
  - 'HTML, that permits the inclusion of images with text.  A

    '
- title: feature of this example is the inclusion of two additional
  contents:
  - 'feature of this example is the inclusion of two additional

    '
- title: body parts, both picture. They are referred to internally by
  contents:
  - 'body parts, both picture. They are referred to internally by

    '
- title: the encapsulated document via each picture's body part
  contents:
  - 'the encapsulated document via each picture''s body part

    '
- title: content-ID.  Usage of "cid:", as in this example, may be
  contents:
  - 'content-ID.  Usage of "cid:", as in this example, may be

    '
- title: useful for a variety of compound objects.  It is not, however,
  contents:
  - 'useful for a variety of compound objects.  It is not, however,

    '
- title: a part of the Multipart/Related specification.
  contents:
  - "a part of the Multipart/Related specification.\n     Content-Type: Multipart/Related;\
    \ boundary=example-2;\n             start=\"<950118.AEBH@XIson.com>\"\n      \
    \       type=\"Text/x-Okie\"\n     --example-2\n     Content-Type: Text/x-Okie;\
    \ charset=iso-8859-1;\n             declaration=\"<950118.AEB0@XIson.com>\"\n\
    \     Content-ID: <950118.AEBH@XIson.com>\n     Content-Description: Document\n\
    \     {doc}\n     This picture was taken by an automatic camera mounted ...\n\
    \     {image file=cid:950118.AECB@XIson.com}\n     {para}\n     Now this is an\
    \ enlargement of the area ...\n     {image file=cid:950118.AFDH@XIson.com}\n \
    \    {/doc}\n     --example-2\n     Content-Type: image/jpeg\n     Content-ID:\
    \ <950118.AFDH@XIson.com>\n     Content-Transfer-Encoding: BASE64\n     Content-Description:\
    \ Picture A\n     [encoded jpeg image]\n     --example-2\n     Content-Type: image/jpeg\n\
    \     Content-ID: <950118.AECB@XIson.com>\n     Content-Transfer-Encoding: BASE64\n\
    \     Content-Description: Picture B\n     [encoded jpeg image]\n     --example-1--\n"
- title: 5.  User Agent Requirements
  contents:
  - "5.  User Agent Requirements\n   User agents that do not recognize Multipart/Related\
    \ shall, in\n   accordance with [MIME], treat the entire entity as Multipart/Mixed.\n\
    \   MIME User Agents that recognize Multipart/Related entities but are\n   unable\
    \ to process the given type shall either suppress the entire\n   Multipart/Related\
    \ body part or process the root alone.  In either\n   case the user should be\
    \ notified of the MUA's action.\n   Handling Multipart/Related differs from other\
    \ media types in that\n   processing cannot be reduced to handling the individual\
    \ entities.\n   Existing media types are handled by MIME-capable MUAs handle in\
    \ a\n   straightforward manner.  For basic media types (e.g., text, image,\n \
    \  etc.) the body of the entity can be directly passed to a display\n   process.\
    \  Composite media types can be reduced to handing one or more\n   discrete types.\n\
    \   Multipart/Related provides an irreducible composite media type.\n   The following\
    \ sections discuss what information the processing\n   application requires.\n\
    \   It is possible that an application specific \"receiving agent\" will\n   manipulate\
    \ the entities, after initial processing by the MIME User\n   Agent, prior to\
    \ invoking actual application process.  From the\n   viewpoint of the MUA, the\
    \ receiving agent is the application.  Okie,\n   above, demonstrates this; it\
    \ may need a receiving agent to parse the\n   document and substitute local file\
    \ names for the originator's file\n   names.  Other applications may just require\
    \ a table showing the\n   correspondence between the local file names and the\
    \ originator's.\n   The receiving agent takes responsibility any for such processing.\n"
- title: 5.1 Data Requirements
  contents:
  - "5.1 Data Requirements\n   MIME-capable MUAs are required to provide the application:\n\
    \   (a)  the bodies of the MIME entities and the entity Content-*\n        headers,\n\
    \   (b)  the parameters of the Multipart/Related Content-type\n        header,\
    \ and\n   (c)  the correspondence between each body's local file name,\n     \
    \   that body's header data, and, if present, the body part's\n        content-ID.\n"
- title: 5.2 Storing Multipart/Related Entities
  contents:
  - "5.2 Storing Multipart/Related Entities\n   The Multipart/Related media type will\
    \ be used for objects that have\n   internal linkages between the body parts.\
    \  When the objects are\n   stored the linkages may require processing by the\
    \ application or its\n   receiving agent.\n"
- title: 5.3 Recursion
  contents:
  - "5.3 Recursion\n   MIME is a recursive structure.  Hence one must expect a\n \
    \  Multipart/Related entity to contain other Multipart/Related entities.\n   When\
    \ a Multipart/Related entity is being processed for display or\n   storage, any\
    \ enclosed Multipart/Related entities shall be processed\n   as though they were\
    \ being stored.  It shall be the responsibility of\n   the application handling\
    \ the outermost Multipart/Related to insure\n   the appropriate processing of\
    \ embedded Multipart/Related entities.\n"
- title: 5.5 Configuration Considerations
  contents:
  - "5.5 Configuration Considerations\n   It is suggested that MUAs that use configuration\
    \ mechanisms, see\n   [CFG] for an example, refer to Multipart/Related as\n  \
    \ Multipart/Related/<type>, were <type> is the value of the \"type\"\n   parameter.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security considerations relevant to Multipart/Related\
    \ are identical\n   to those of the underlying content-type.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This proposal is the result of conversations the author\
    \ has had with\n   many people.  In particular, similar work was described by\
    \ Harald A.\n   Alvestrand (early drafts of Multipart/Related), Dave Crocker\n\
    \   (Multipart/Families), and Keith Moore (Multipart/References). In\n   addition,\
    \ James Clark, Charles Goldfarb, Gary Houston, Ned Freed, Ray\n   Moody, and Don\
    \ Stinchfield, provided both encouragement and\n   invaluable help.  The author,\
    \ however, take full responsibility for\n   all errors contained in this document.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [822]       Crocker, D., \"Standard for the Format of ARPA\n\
    \               Internet Text Messages\", STD 11, RFC 822, UDEL,\n           \
    \    August 1982.\n   [CFG]       Borenstein, N., \"A User Agent Configuration\n\
    \               Mechanism For Multimedia Mail Format Information\",\n        \
    \       RFC 1524, Bellcore, September 1993.\n   [MIME]      Borenstein, N. and\
    \ and N. Freed, \"MIME (Multipurpose\n               Internet Mail Extensions)\
    \ Part One: Mechanisms for\n               Specifying and Describing the Format\
    \ of Internet Message\n               Bodies\", RFC 1521, Bellcore, Innosoft,\
    \ September 1993.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Edward Levinson\n   Accurate Information Systems, Inc.\n\
    \   2 Industrial Way\n   Eatontown, NJ  07724-2265\n   USA\n   Phone: +1 908 389\
    \ 5550\n   EMail: ELevinson@Accurate.com\n"
