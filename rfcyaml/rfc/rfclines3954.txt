This RFC documents the NetFlow services export protocol Version 9 as it was when submitted to the IETF as a basis for further work in the IPFIX WG.
This RFC itself is not a candidate for any level of Internet Standard.
The IETF disclaims any knowledge of the fitness of this RFC for any purpose, and in particular notes that it has not had complete IETF review for such things as security, congestion control, or inappropriate interaction with deployed protocols.
The RFC Editor has chosen to publish this document at its discretion.
Abstract This document specifies the data export format for version 9 of Cisco Systems' NetFlow services, for use by implementations on the network elements and/or matching collector programs.
The version 9 export format uses templates to provide access to observations of IP packet flows in a flexible and extensible manner.
A template defines a collection of fields, with corresponding descriptions of structure and semantics.
Introduction Cisco Systems' NetFlow services provide network administrators with access to IP flow information from their data networks.
Network elements (routers and switches) gather flow data and export it to collectors.
The collected data provides fine grained metering for highly flexible and detailed resource usage accounting.
A flow is defined as a unidirectional sequence of packets with some common properties that pass through a network device.
These collected flows are exported to an external device, the NetFlow collector.
Network flows are highly granular; for example, flow records include details such as IP addresses, packet and byte counts, timestamps, Type of Service (ToS), application ports, input and output interfaces, etc.
Exported NetFlow data is used for a variety of purposes, including enterprise accounting and departmental chargebacks, ISP billing, data warehousing, network monitoring, capacity planning, application monitoring and profiling, user monitoring and profiling, security analysis, and data mining for marketing purposes.
This document specifies NetFlow version 9.
It describes the implementation specifications both from network element and NetFlow collector points of view.
These specifications should help the deployment of NetFlow version 9 across different platforms and different vendors by limiting the interoperability risks.
The NetFlow export format version 9 uses templates to provide access to observations of IP packet flows in a flexible and extensible manner.
A template defines a collection of fields, with corresponding descriptions of structure and semantics.
The template based approach provides the following advantages:  New fields can be added to NetFlow flow records without changing the structure of the export record format.
With previous NetFlow versions, adding a new field in the flow record implied a new version of the export protocol format and a new version of the NetFlow collector that supported the parsing of the new export protocol format.
Templates that are sent to the NetFlow collector contain the structural information about the exported flow record fields; therefore, if the NetFlow collector does not understand the semantics of new fields, it can still interpret the flow record.
Because the template mechanism is flexible, it allows the export of only the required fields from the flows to the NetFlow collector.
This helps to reduce the exported flow data volume and provides possible memory savings for the exporter and NetFlow collector.
Sending only the required information can also reduce network load.
The IETF IPFIX Working Group (IP Flow Information eXport) is developing a new protocol, based on the version 9 of Cisco Systems' NetFlow services.
Refer to the IPFIX Working Group documents for more details.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].
Terminology Various terms used in this document are described in this section.
Note that the terminology summary table in Section 2.1 gives a quick overview of the relationships between some of the different terms defined.
An Observation Point is a location in the network where IP packets can be observed; for example, one or a set of interfaces on a network device like a router.
Every Observation Point is associated with an Observation Domain.
The set of Observation Points that is the largest aggregatable set of flow information at the network device with NetFlow services enabled is termed an Observation Domain.
For example, a router line card composed of several interfaces with each interface being an Observation Point.
IP Flow or Flow An IP Flow, also called a Flow, is defined as a set of IP packets passing an Observation Point in the network during a certain time interval.
All packets that belong to a particular Flow have a set of common properties derived from the data contained in the packet and from the packet treatment at the Observation Point.
Flow Record A Flow Record provides information about an IP Flow observed at an Observation Point.
In this document, the Flow Data Records are also referred to as NetFlow services data and NetFlow data.
Exporter A device (for example, a router) with the NetFlow services enabled, the Exporter monitors packets entering an Observation Point and creates Flows from these packets.
The information from these Flows is exported in the form of Flow Records to the NetFlow Collector.
The NetFlow Collector receives Flow Records from one or more Exporters.
It processes the received Export Packet(s); that is, it parses and stores the Flow Record information.
Flow Records can be optionally aggregated before being stored on the hard disk.
The NetFlow Collector is also referred to as the Collector in this document.
Export Packet An Export Packet is a packet originating at the Exporter that carries the Flow Records of this Exporter and whose destination is the NetFlow Collector.
The Packet Header is the first part of an Export Packet.
The Packet Header provides basic information about the packet such as the NetFlow version, number of records contained within the packet, and sequence numbering.
Template Record A Template Record defines the structure and interpretation of fields in a Flow Data Record.
Flow Data Record A Flow Data Record is a data record that contains values of the Flow parameters corresponding to a Template Record.
Options Template Record An Options Template Record defines the structure and interpretation of fields in an Options Data Record, including defining the scope within which the Options Data Record is relevant.
The data record that contains values and scope information of the Flow measurement parameters, corresponding to an Options Template Record.
FlowSet FlowSet is a generic term for a collection of Flow Records that have a similar structure.
In an Export Packet, one or more FlowSets follow the Packet Header.
There are three different types of FlowSets: Template FlowSet, Options Template FlowSet, and Data FlowSet.
Template FlowSet A Template FlowSet is one or more Template Records that have been grouped together in an Export Packet.
An Options Template FlowSet is one or more Options Template Records that have been grouped together in an Export Packet.
A Data FlowSet is one or more records, of the same type, that are grouped together in an Export Packet.
Each record is either a Flow Data Record or an Options Data Record previously defined by a Template Record or an Options Template Record.
A Data FlowSet is composed of an Options Data Record(s) or Flow Data Record(s).
No Template Record is included.
A Template Record defines the Flow Data Record, and an Options Template Record defines the Options Data Record.
A Template FlowSet is composed of Template Record(s).
No Flow or Options Data Record is included.
An Options Template FlowSet is composed of Options Template Record(s).
No Flow or Options Data Record is included.
NetFlow High Level Picture on the Exporter 3.1.
The NetFlow Process on the Exporter
The NetFlow process on the Exporter is responsible for the creation of Flows from the observed IP packets.
The details of this process are beyond the scope of this document.
Flow Expiration A Flow is considered to be inactive if no packets belonging to the Flow have been observed at the Observation Point for a given timeout.
If any packet is seen within the timeout, the flow is considered an active flow.
A Flow can be exported under the following conditions: 1.
If the Exporter can detect the end of a Flow.
For example, if the FIN or RST bit is detected in a TCP [RFC793] connection, the Flow Record is exported.
If the Flow has been inactive for a certain period of time.
This inactivity timeout SHOULD be configurable at the Exporter, with a minimum value of 0 for an immediate expiration.
For long lasting Flows, the Exporter SHOULD export the Flow Records on a regular basis.
This timeout SHOULD be configurable at the Exporter.
If the Exporter experiences internal constraints, a Flow MAY be forced to expire prematurely; for example, counters wrapping or low memory.
Transport Protocol To achieve efficiency in terms of processing at the Exporter while handling high volumes of Export Packets, the NetFlow Export Packets are encapsulated into UDP [RFC768] datagrams for export to the NetFlow Collector.
However, NetFlow version 9 has been designed to be transport protocol independent.
Hence, it can also operate over congestion aware protocols such as SCTP [RFC2960].
Note that the Exporter can export to multiple Collectors, using independent transport protocols.
UDP [RFC768] is a non congestion aware protocol, so when deploying NetFlow version 9 in a congestion sensitive environment, make the connection between Exporter and NetFlow Collector through a dedicated link.
This ensures that any burstiness in the NetFlow traffic affects only this dedicated link.
When the NetFlow Collector can not be placed within a one hop distance from the Exporter or when the export path from the Exporter to the NetFlow Collector can not be exclusively used for the NetFlow Export Packets, the export path should be designed so that it can always sustain the maximum burstiness of NetFlow traffic from the Exporter.
Note that the congestion can occur on the Exporter in case
the export path speed is too low.
An Export Packet consists of a Packet Header followed by one or more FlowSets.
The FlowSets can be any of the possible three types: Template, Data, or Options Template.
FlowSet IDs lower than 256 are reserved for special FlowSets, such as the Template FlowSet (ID 0) and the Options Template FlowSet (ID 1).
The Data FlowSets have a FlowSet ID greater than 255.
The format of the Template, Data, and Options Template FlowSets will be discussed later in this document.
The Exporter MUST code all binary integers of the Packet Header and the different FlowSets in network byte order (also known as the big endian byte ordering).
Following are some examples of export packets: 1.
An Export Packet consisting of interleaved Template, Data, and Options Template FlowSets.
Example: a newly created Template is exported as soon as possible.
So if there is already an Export Packet with a Data FlowSet that is being prepared for export, the Template and Option FlowSets are also interleaved with this information, subject to availability of space.
An Export Packet consisting entirely of Data FlowSets.
Example: after the appropriate Template Records have been defined and transmitted to the NetFlow Collector device, the majority of Export Packets consists solely of Data FlowSets.
An Export Packet consisting entirely of Template and Options Template FlowSets.
Example: the Exporter MAY transmit a packet containing Template and Options Template FlowSets periodically to help ensure that the NetFlow Collector has the correct Template Records and Options Template Records when the corresponding Flow Data records are received.
Packet Header Field Descriptions Version Version of Flow Record format exported in this packet.
The value of this field is 9 for the current version.
The total number of records in the Export Packet, which is the sum of Options FlowSet records, Template FlowSet records, and Data FlowSet records.
sysUpTime Time in milliseconds since this device was first booted.
UNIX Secs Time in seconds since 0000 UTC 1970, at which the Export Packet leaves the Exporter.
Sequence Number Incremental sequence counter of all Export Packets sent from the current Observation Domain by the Exporter.
This value MUST be cumulative, and SHOULD be used by the Collector to identify whether any Export Packets have been missed.
Source ID A 32 bit value that identifies the Exporter Observation Domain.
NetFlow Collectors SHOULD use the combination of the source IP address and the Source ID field to separate different export streams originating from the same Exporter.
Template FlowSet Format One of the essential elements in the NetFlow format is the Template FlowSet.
Templates greatly enhance the flexibility of the Flow Record format because they allow the NetFlow Collector to process Flow Records without necessarily knowing the interpretation of all the data in the Flow Record.
The format of the Template FlowSet is as follows:
ID FlowSet ID value of 0 is reserved for the Template FlowSet.
Length Total length of this FlowSet.
Because an individual Template FlowSet MAY contain multiple Template Records, the Length value MUST be used to determine the position of the next FlowSet record, which could be any type of FlowSet.
Length is the sum of the lengths of the FlowSet ID, the Length itself, and all Template Records within this FlowSet.
Each of the newly generated Template Records is given a unique Template ID.
This uniqueness is local to the Observation Domain that generated the Template ID.
Template IDs 0 255 are reserved for Template FlowSets, Options FlowSets, and other reserved FlowSets yet to be created.
Template IDs of Data FlowSets are numbered from 256 to 65535.
Field Count Number of fields in this Template Record.
Because a Template FlowSet usually contains multiple Template Records, this field allows the Collector to determine the end of the current Template Record and the start of the next.
Field Type A numeric value that represents the type of the field.
Refer to the "Field Type Definitions" section.
The length of the corresponding Field Type, in bytes.
Refer to the "Field Type Definitions" section.
The format of the Data FlowSet is as follows:
Record 1 Field Value 1
Record 1 Field Value 2
Record 2 Field Value 1
Record 2 Field Value 2
Each Data FlowSet is associated with a FlowSet ID.
The FlowSet ID maps to a (previously generated) Template ID.
The Collector MUST use the FlowSet ID to find the corresponding Template Record and decode the Flow Records from the FlowSet.
The length of this FlowSet.
Length is the sum of the lengths of the FlowSet ID, Length itself, all Flow Records within this FlowSet, and the padding bytes, if any.
Record N Field Value M
The remainder of the Data FlowSet is a collection of Flow Data Record(s), each containing a set of field values.
The Type and Length of the fields have been previously defined in the Template Record referenced by the FlowSet ID or Template ID.
Padding The Exporter SHOULD insert some padding bytes so that the subsequent FlowSet starts at a 4 byte aligned boundary.
It is important to note that the Length field includes the padding bytes.
Padding SHOULD be using zeros.
Interpretation of the Data FlowSet format can be done only if the Template FlowSet corresponding to the Template ID is available at the Collector.
The Options Template Record (and its corresponding Options Data Record) is used to supply information about the NetFlow process configuration or NetFlow process specific data, rather than supplying information about IP Flows.
For example, the Options Template FlowSet can report the sample rate of a specific interface, if sampling is supported, along with the sampling method used.
The format of the Options Template FlowSet follows.
A FlowSet ID value of 1 is reserved for the Options Template.
Length Total length of this FlowSet.
Each Options Template FlowSet MAY contain multiple Options Template Records.
Thus, the Length value MUST be used to determine the position of the next FlowSet record, which could be either a Template FlowSet or Data FlowSet.
Length is the sum of the lengths of the FlowSet ID, the Length itself, and all Options Template Records within this FlowSet Template ID.
Template ID Template ID of this Options Template.
This value is greater than 255.
The length in bytes of any Scope field definition contained in the Options Template Record (The use of "Scope" is described below).
The length (in bytes) of any options field definitions contained in this Options Template Record.
The relevant portion of the Exporter/NetFlow process to which the Options Template Record refers.
Currently defined values are: 1 System 2 Interface 3 Line Card 4 Cache 5 Template
For example, the NetFlow process can be implemented on a per  interface basis, so if the Options Template Record were reporting on how the NetFlow process is configured, the Scope for the report would be 2 (interface).
The associated interface ID would then be carried in the associated Options Data FlowSet.
The Scope can be limited further by listing multiple scopes that all must match at the same time.
Note that the Scope fields always precede the Option fields.
The length (in bytes) of the Scope field, as it would appear in an Options Data Record.
Option 1 Field Type A numeric value that represents the type of field that would appear in the Options Template Record.
Refer to the Field Type Definitions section.
The length (in bytes) of the Option field.
Padding The Exporter SHOULD insert some padding bytes so that the subsequent FlowSet starts at a 4 byte aligned boundary.
It is important to note that the Length field includes the padding bytes.
Padding SHOULD be using zeros.
The Options Data Records are sent in Data FlowSets, on a regular basis, but not with every Flow Data Record.
How frequently these Options Data Records are exported is configurable.
See the "Templates Management" section for more details.
The format of the Data FlowSet containing Options Data Records follows.
A FlowSet ID precedes each group of Options Data Records within a Data FlowSet.
The FlowSet ID maps to a previously generated Template ID corresponding to this Options Template Record.
The Collector MUST use the FlowSet ID to map the appropriate type and length to any field values that follow.
The length of this FlowSet.
Length is the sum of the lengths of the FlowSet ID, Length itself, all the Options Data Records within this FlowSet, and the padding bytes, if any.
Record N Option Field M Value
The remainder of the Data FlowSet is a collection of Flow Records, each containing a set of scope and field values.
The type and length of the fields were previously defined in the Options Template Record referenced by the FlowSet ID or Template ID.
Padding The Exporter SHOULD insert some padding bytes so that the subsequent FlowSet starts at a 4 byte aligned boundary.
It is important to note that the Length field includes the padding bytes.
Padding SHOULD be using zeros.
The Data FlowSet format can be interpreted only if the Options Template FlowSet corresponding to the Template ID is available at the Collector.
Template Management Flow Data records that correspond to a Template Record MAY appear in the same and/or subsequent Export Packets.
The Template Record is not necessarily carried in every Export Packet.
As such, the NetFlow Collector MUST store the Template Record to interpret the corresponding Flow Data Records that are received in subsequent data packets.
A NetFlow Collector that receives Export Packets from several Observation Domains from the same Exporter MUST be aware that the uniqueness of the Template ID is not guaranteed across Observation Domains.
The Template IDs must remain constant for the life of the NetFlow process on the Exporter.
If the Exporter or the NetFlow process restarts for any reason, all information about Templates will be lost and new Template IDs will be created.
Template IDs are thus not guaranteed to be consistent across an Exporter or NetFlow process restart.
A newly created Template record is assigned an unused Template ID from the Exporter.
If the template configuration is changed, the current Template ID is abandoned and SHOULD NOT be reused until the NetFlow process or Exporter restarts.
If a Collector should receive a new definition for an already existing Template ID, it MUST discard the previous template definition and use the new one.
If a configured Template Record on the Exporter is deleted, and re  configured with exactly the same parameters, the same Template ID COULD be reused.
The Exporter sends the Template FlowSet and Options Template FlowSet under the following conditions: 1.
After a NetFlow process restarts, the Exporter MUST NOT send any Data FlowSet without sending the corresponding Template FlowSet and the required Options Template FlowSet in a previous packet or including it in the same Export Packet.
It MAY transmit the Template FlowSet and Options Template FlowSet, without any Data FlowSets, in advance to help ensure that the Collector will have the correct Template Record before receiving the first Flow or Options Data Record.
In the event of configuration changes, the Exporter SHOULD send the new template definitions at an accelerated rate.
In such a case, it MAY transmit the changed Template Record(s) and Options Template Record(s), without any data, in advance to help ensure that the Collector will have the correct template information before receiving the first data.
On a regular basis, the Exporter MUST send all the Template Records and Options Template Records to refresh the Collector.
Template IDs have a limited lifetime at the Collector and MUST be periodically refreshed.
Two approaches are taken to make sure that Templates get refreshed at the Collector:
Every N number of Export Packets.
On a time basis, so every N number of minutes.
Both options MUST be configurable by the user on the Exporter.
When one of these expiry conditions is met, the Exporter MUST send the Template FlowSet and Options Template.
In the event of a clock configuration change on the Exporter, the Exporter SHOULD send the template definitions at an accelerated rate.
The following table describes all the field type definitions that an Exporter MAY support.
The fields are a selection of Packet Header fields, lookup results (for example, the autonomous system numbers or the subnet masks), and properties of the packet such as length.
N x 8 bits for the IN BYTES
By default N is 4 Incoming counter with length N x 8 bits for the IN PKTS
setting when entering the incoming interface TCP flags; cumulative of TCP FLAGS
all the TCP flags seen in this Flow TCP/UDP source port number L4 SRC PORT
The number of contiguous bits in the source subnet SRC MASK
The number of contiguous bits in the destination DST MASK
By default N is 2, but higher values can be used IPV4 NEXT HOP
By default N is 2 BGP IPV4 NEXT HOP
Next hop router's IP address in the BGP domain IP multicast outgoing packet counter with length MUL DST PKTS
N x 8 bits for packets associated with the IP Flow.
By default N is 4 IP multicast outgoing Octet (byte) counter with length
the last packet of this Flow was switched sysUptime in msec at which FIRST SWITCHED
the first packet of this Flow was switched Outgoing counter with length N x 8 bits for the OUT BYTES
By default N is 4 Outgoing counter with length N x 8 bits for the OUT PKTS
16    IPv6 destination address IPV6 SRC
Internet Control Message ICMP TYPE
random sampling Use in connection with SAMPLING INTERVAL Timeout value (in seconds) FLOW ACTIVE TIMEOUT
for active flow entries in the NetFlow cache Timeout value
for inactive Flow entries in the NetFlow cache Type of Flow
By default N is 4 Counter with length
N x 8 bits for the number TOTAL
By default N is 4 Counter with length
By default N is 4 MPLS
LDP Forwarding Equivalent Class MPLS TOP LABEL
random sampling Use in connection with FLOW SAMPLER MODE Packet interval at which to FLOW SAMPLER RANDOM INTERVAL 50
Use in connection with FLOW SAMPLER MODE Type of Service byte DST TOS
setting when exiting outgoing interface
Source MAC Address DST MAC
Destination MAC Address Virtual LAN identifier SRC VLAN
associated with ingress interface Virtual LAN identifier DST VLAN
If not present in the template, then version 4 is assumed Flow direction: DIRECTION
Next hop router in the BGP domain Bit encoded field
MPLS label at position 1 in the stack
MPLS label at position 2 in the stack
MPLS label at position 3 in the stack
MPLS label at position 4 in the stack
MPLS label at position 5 in the stack
MPLS label at position 6 in the stack
MPLS label at position 7 in the stack
MPLS label at position 8 in the stack MPLS LABEL 9
MPLS label at position 9 in the stack
MPLS label at position 10 in the stack
The value field is a numeric identifier for the field type.
The following value fields are reserved for proprietary field types: 25, 26, 43 to 45, 51 to 54, and 65 to 69.
When extensibility is required, the new field types will be added to the list.
The new field types have to be updated on the Exporter and Collector but the NetFlow export format would remain unchanged.
Refer to the latest documentation at http://www.cisco.com for the newly updated list.
In some cases the size of a field type is fixed by definition, for example PROTOCOL, or IPV4 SRC ADDR.
However in other cases they are defined as a variant type.
This improves the memory efficiency in the collector and reduces the network bandwidth requirement between the Exporter and the Collector.
As an example, in the case IN BYTES, on an access router it might be sufficient to use a 32 bit counter (N   4), whilst on a core router
(N   8) would be required.
All counters and counter like objects are unsigned integers of size
The Collector receives Template Records from the Exporter, normally before receiving Flow Data Records (or Options Data Records).
The Flow Data Records (or Options Data Records) can then be decoded and stored locally on the devices.
If the Template Records have not been received at the time Flow Data Records (or Options Data Records) are received, the Collector SHOULD store the Flow Data Records (or Options Data Records) and decode them after the Template Records are received.
A Collector device MUST NOT assume that the Data FlowSet and the associated Template FlowSet (or Options Template FlowSet) are exported in the same Export Packet.
The Collector MUST NOT assume that one and only one Template FlowSet is present in an Export Packet.
The life of a template at the Collector is limited to a fixed refresh timeout.
Templates not refreshed from the Exporter within the timeout are expired at the Collector.
The Collector MUST NOT attempt to decode the Flow or Options Data Records with an expired Template.
At any given time the Collector SHOULD maintain the following for all the current Template Records and Options Template Records: Exporter, Observation Domain, Template ID, Template Definition,
Note that the Observation Domain is identified by the Source ID field from the Export Packet.
In the event of a clock configuration change on the Exporter, the Collector SHOULD discard all Template Records and Options Template Records associated with that Exporter, in order for Collector to learn the new set of fields:
Exporter, Observation Domain, Template ID, Template Definition, Last Received.
Template IDs are unique per Exporter and per Observation Domain.
If the Collector receives a new Template Record (for example, in the case of an Exporter restart) it MUST immediately override the existing Template Record.
Finally, note that the Collector MUST accept padding in the Data FlowSet and Options Template FlowSet, which means for the Flow Data Records, the Options Data Records and the Template Records.
Refer to the terminology summary table in Section 2.1.
The NetFlow version 9 protocol was designed with the expectation that the Exporter and Collector would remain within a single private network.
However the NetFlow version 9 protocol might be used to transport Flow Records over the public Internet which exposes the Flow Records to a number of security risks.
For example an attacker might capture, modify or insert Export Packets.
There is therefore a risk that IP Flow information might be captured or forged, or that attacks might be directed at the NetFlow Collector.
The designers of NetFlow Version 9 did not impose any confidentiality, integrity or authentication requirements on the protocol because this reduced the efficiency of the implementation and it was believed at the time that the majority of deployments would confine the Flow Records to private networks, with the Collector(s) and Exporter(s) in close proximity.
The IPFIX protocol (IP Flow Information eXport), which has chosen the NetFlow version 9 protocol as the base protocol, addresses the security considerations discussed in this section.
See the security section of IPFIX requirement draft [RFC3917] for more information.
Disclosure of Flow Information Data Because the NetFlow Version 9 Export Packets are not encrypted, the observation of Flow Records can give an attacker information about the active flows in the network, communication endpoints and traffic patterns.
This information can be used both to spy on user behavior and to plan and conceal future attacks.
The information that an attacker could derive from the interception of Flow Records depends on the Flow definition.
For example, a Flow Record containing the source and destination IP addresses might reveal privacy sensitive information regarding the end user's activities, whilst a Flow Record only containing the source and destination IP network
Forgery of Flow Records or Template Records
If Flow Records are used in accounting and/or security applications, there may be a strong incentive to forge exported Flow Records (for example to defraud the service provider, or to prevent the detection of an attack).
This can be done either by altering the Flow Records on the path between the Observer and the Collector, or by injecting forged Flow Records that pretend to be originated by the Exporter.
An attacker could forge Templates and/or Options Templates and thereby try to confuse the NetFlow Collector, rendering it unable to decode the Export Packets.
Attacks on the NetFlow Collector Denial of service attacks on the NetFlow Collector can consume so many resources from the machine that, the Collector is unable to capture or decode some NetFlow Export Packets.
Such hazards are not explicitly addressed by the NetFlow Version 9 protocol, although the normal methods used to protect a server from a DoS attack will mitigate the problem.
Examples Let us consider the example of an Export Packet composed of a Template FlowSet, a Data FlowSet (which contains three Flow Data Records), an Options Template FlowSet, and a Data FlowSet (which contains two Options Data Records).
We want to report the following Field Types:
The source IP address (IPv4), so the length is 4  The destination IP address (IPv4), so the length is 4  The next hop IP address (IPv4), so the length is 4  The number of bytes of the Flow
The number of packets of the Flow
Therefore, the Template FlowSet is composed of the following:
In this example, we report the following three Flow Records: Src IP addr.
Template FlowSet Example Per line card
(the Exporter is composed of two line cards), we want to report the following Field Types:
Total number of Export Packets Total number of exported Flows
The format of the Options Template FlowSet is as follows:
Scope 1 Field Type   3
Data FlowSet with Options Data Records Example
3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
This document was jointly written by Vamsidhar Valluri, Martin Djernaes, Ganesh Sadasivan, and Benoit Claise.
