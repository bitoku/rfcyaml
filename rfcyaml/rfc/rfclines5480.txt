Abstract This document specifies the syntax and semantics for the Subject Public Key Information field in certificates that support Elliptic Curve Cryptography.
This document updates Sections 2.3.5 and 5, and the ASN.1 module of "Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile", RFC 3279.
This document specifies the format of the subjectPublicKeyInfo field in X.509 certificates [PKI] that use Elliptic Curve Cryptography (ECC).
This document specifies the encoding formats for public keys used with the following ECC algorithms:
Elliptic Curve Digital Signature Algorithm (ECDSA); Elliptic Curve Diffie Hellman (ECDH) family schemes; and Elliptic Curve Menezes Qu Vanstone (ECMQV) family schemes.
Two methods for specifying the algorithms that can be used with the subjectPublicKey are defined.
One method allows the key to be used with any ECC algorithm, while the other method restricts the usage of the key to specific algorithms.
To promote interoperability, this document indicates which is required to implement for Certification Authorities (CAs) that implement ECC algorithms and relying parties that claim to process ECC algorithms.
The ASN.1 [X.680] module in this document includes ASN.1 for ECC algorithms.
It also includes ASN.1 for non ECC algorithms defined in [PKI ALG] and [PKI ADALG], even though the associated text is unaffected.
By updating all of the ASN.1 from [PKI ALG] in this document, implementers only need to use the module found in this document.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [MUSTSHOULD].
Subject Public Key Information Fields
In the X.509 certificate, the subjectPublicKeyInfo field has the SubjectPublicKeyInfo type, which has the following ASN.1 syntax:
The fields in SubjectPublicKeyInfo have the following meanings: algorithm is the algorithm identifier and parameters for the ECC public key.
subjectPublicKey is the ECC public key.
The AlgorithmIdentifier type, which is included for convenience [PKI], is defined as follows:
The fields in AlgorithmIdentifier have the following meanings: algorithm identifies the cryptographic algorithm with an object identifier.
parameters, which are optional, are the associated parameters for the algorithm identifier in the algorithm field.
Elliptic Curve Cryptography Public Key Algorithm Identifiers
The algorithm field in the SubjectPublicKeyInfo structure [PKI] indicates the algorithm and any associated parameters for the ECC public key (see Section 2.2).
Three algorithm identifiers are defined in this document:
id ecPublicKey indicates that the algorithms that can be used with the subject public key are unrestricted.
The key is only restricted by the values indicated in the key usage certificate extension (see Section 3).
id ecPublicKey MUST be supported.
This value is also included in certificates when a public key is used with ECDSA.
id ecDH indicates that the algorithm that can be used with the subject public key is restricted to the Elliptic Curve Diffie  Hellman algorithm.
d ecDH MAY be supported.
id ecMQV indicates that the algorithm that can be used with the subject public key is restricted to the Elliptic Curve Menezes  Qu Vanstone key agreement algorithm.
Unrestricted Algorithm Identifier and Parameters
The "unrestricted" algorithm identifier is:
} The public key (ECPoint) syntax is described in Section 2.2.
The parameter for id ecPublicKey is as follows and MUST always be present:
implicitCurve and specifiedCurve MUST NOT be used in PKIX.
Details for SpecifiedECDomain can be found in [X9.62].
Any future additions to this CHOICE should be coordinated   with ANSI X9.
The fields in ECParameters have the following meanings: namedCurve identifies all the required values for a particular set of elliptic curve domain parameters to be represented by an object identifier.
This choice MUST be supported.
implicitCurve allows the elliptic curve domain parameters to be inherited.
This choice MUST NOT be used.
specifiedCurve, which is of type SpecifiedECDomain type (defined in [X9.62]), allows all of the elliptic curve domain parameters to be explicitly specified.
This choice MUST NOT be used.
See Section 5, "ASN.1 Considerations".
The addition of any new choices in ECParameters needs to be coordinated with ANSI X9.
The AlgorithmIdentifier within SubjectPublicKeyInfo is the only place within a certificate where the elliptic curve domain parameters may be located.
If the elliptic curve domain parameters are not present, then clients MUST reject the certificate.
The namedCurve field in ECParameters uses object identifiers to name well known curves.
This document publishes curve identifiers for the fifteen NIST recommended curves [FIPS186 3].
Other documents can publish other name curve identifiers.
The NIST named curves are:
the curves are referred to as 'ansiX9' as   opposed to 'sec'.
For example, secp192r1 is the same curve as   ansix9p192r1.
Note that in [PKI ALG]
the secp192r1 curve was referred to as   prime192v1 and the secp256r1 curve was referred to as   prime256v1.
Note that [FIPS186 3] refers to secp192r1
as P 192, secp224r1 as   P 224, secp256r1
as P 384, and secp521r1
Restricted Algorithm Identifiers and Parameters Two "restricted" algorithms are defined for key agreement algorithms: the Elliptic Curve Diffie Hellman (ECDH)
key agreement family schemes and the Elliptic Curve Menezes Qu Vanstone (ECMQV) key agreement family schemes.
Both algorithms are identified by an object identifier and have parameters.
The object identifier varies based on the algorithm, but the parameters are always ECParameters and they MUST always be present (see Section 2.1.1).
The ECDH algorithm uses the following object identifier:
The ECMQV algorithm uses the following object identifier: id ecMQV
The subjectPublicKey from SubjectPublicKeyInfo is the ECC public key.
according to this document MUST support the uncompressed form and MAY support the compressed form of the ECC public key.
The hybrid form of the ECC public key from [X9.62] MUST NOT be used.
: The elliptic curve public key (a value of type ECPoint that is an OCTET STRING) is mapped to a subjectPublicKey (a value of type BIT STRING) as follows: the most significant bit of the OCTET STRING value becomes the most significant bit of the BIT STRING value, and so on; the least significant bit of the OCTET STRING becomes the least significant bit of the BIT STRING.
Conversion routines are found in Sections 2.3.1 and 2.3.2 of [SEC1].
The first octet of the OCTET STRING indicates whether the key is compressed or uncompressed.
The uncompressed form is indicated by 0x04 and the compressed form is indicated by either 0x02 or 0x03 (see 2.3.3 in [SEC1]).
The public key MUST be rejected if any other value is included in the first octet.
If the keyUsage extension is present in a Certification Authority (CA) certificate that indicates id ecPublicKey in SubjectPublicKeyInfo, then any combination of the following values MAY be present: digitalSignature; nonRepudiation; keyAgreement; keyCertSign; and cRLSign.
If the CA certificate keyUsage extension asserts keyAgreement, then it MAY assert either encipherOnly or decipherOnly.
However, this specification RECOMMENDS that if keyCertSign or cRLSign is present, then keyAgreement, encipherOnly, and decipherOnly SHOULD NOT be present.
If the keyUsage extension is present in an End Entity (EE) certificate that indicates id ecPublicKey in SubjectPublicKeyInfo, then any combination of the following values MAY be present: digitalSignature; nonRepudiation; and keyAgreement.
If the EE certificate keyUsage extension asserts keyAgreement, then it MAY assert either encipherOnly or decipherOnly.
If the keyUsage extension is present in a certificate that indicates id ecDH or id ecMQV in SubjectPublicKeyInfo, then the following MUST be present: keyAgreement; one of the following MAY be present: encipherOnly; or decipherOnly.
If the keyUsage extension is present in a certificate that indicates id ecDH or id ecMQV in SubjectPublicKeyInfo, then the following values MUST NOT be present: digitalSignature; nonRepudiation; keyTransport; keyCertSign; and cRLSign. 4.
The security considerations in [PKI ALG] apply.
When implementing ECC in X.509 Certificates and Certificate Revocation Lists (CRLs), there are three algorithm related choices that need to be made for the signatureAlgorithm field in a Certificate or CertificateList: 1)
What is the public key size?
What is the hash algorithm [FIPS180 3]?
Consideration must be given by the CA to the strength of the security provided by each of these choices.
Security is measured in bits, where a strong symmetric cipher with a key of X bits is said to provide X bits of security.
It is recommended that the bits of security provided by each choice are roughly equivalent.
The following table provides comparable minimum bits of security [SP800 57] for the ECDSA key sizes and message digest algorithms.
It also lists curves (see Section 2.1.1.1) for the key sizes.
To promote interoperability, the following choices are RECOMMENDED:
Using a larger hash value and then truncating it consumes more processing power than is necessary.
This is more important on constrained devices.
Since the signer does not know the environment that the recipient will use to validate the signature, it is better to use a hash function that provides the desired hash value output size, and no more.
There are security risks with using keys not associated with well  known and widely reviewed curves.
For example, the curve may not satisfy the Menezes Okamoto Vanstone (MOV) condition [X9.62] or
the curve may be vulnerable to the Anomalous attack [X9.62].
Additionally, either a) all of the arithmetic properties of a candidate ECC public key must be validated to ensure that it has the unique correct representation in the correct (additive) subgroup (and therefore is also in the correct EC group) specified by the associated ECC domain parameters, or
b) some of the arithmetic properties of a candidate ECC public key must be validated to ensure that it is in the correct group (but not necessarily the correct subgroup)
specified by the associated ECC domain parameters [SP800 56A].
As noted in [PKI ALG], the use of MD2 and MD5 for new applications is discouraged.
It is still reasonable to use MD2 and MD5 to verify existing signatures.
Considerations [X9.62] defines additional options for ECParameters and ECDSA Sig  Value [PKI ALG].
If an implementation needs to use these options, then use the [X9.62] ASN.1 module.
This RFC contains a conformant subset of the ASN.1 module defined in [X9.62].
If an implementation generates a PER [X.691] encoding using the ASN.1 module found in this specification, it might not achieve the same encoded output as one that uses the [X9.62] module.
PER is not required by either the PKIX or S/MIME environments.
If an implementation environment requires PER, then implementation concerns are less likely with the use of the [X9.62] module.
This document makes extensive use of object identifiers to register public key types, elliptic curves, and algorithms.
Most are registered in the ANSI X9.62 arc, with the exception of the hash algorithms (which are in the NIST arc) and many of the curves (which are in the Certicom Inc. arc; these curves have been adopted by ANSI and NIST).
Additionally, an object identifier is used to identify the ASN.1 module found in Appendix A.
It is defined in an arc delegated by IANA to the PKIX Working Group.
No further action by IANA is necessary for this document or any anticipated updates.
Module PKIX1Algorithms2008 { iso(1) identified organization(3)
45 } DEFINITIONS EXPLICIT TAGS ::
EXPORTS ALL; IMPORTS   From RFC 4055
sha512 FROM PKIX1 PSS OAEP Algorithms { iso(1) identified organization(3)
iso(1) member body(2) us(840) rsadsi(113549)digestAlgorithm(2) 5 }
SHA 384   Parameters are preferred absent
SHA 512   Parameters are preferred absent
iso(1) member body(2) us(840) x9 57(10040)
STRING   Sec 2.1.1 Unrestricted Algorithm ID, Key, and Parameters
implicitCurve and specifiedCurve MUST NOT be used in PKIX.
Details for SpecifiedECDomain can be found in [X9.62].
Any future additions to this CHOICE should be coordinated   with ANSI X9.
Restricted Algorithm IDs, Key, and Parameters:
Restricted Algorithm IDs, Key, and Parameters: ECMQV i
Parameters are ABSENT id dsa with sha224 OBJECT
Parameters are ABSENT id dsa with sha256 OBJECT
Parameters are ABSENT ecdsa with SHA224
r  INTEGER, s  INTEGER }
the curves are referred to as 'ansiX9' as   opposed to 'sec'.
is the same curve as   ansix9p192r1.
Note that in [PKI ALG]
the secp192r1 curve was referred to as   prime192v1 and the secp256r1 curve was referred to as prime256v1.
Note that [FIPS186 3] refers to secp192r1
as P 192, secp224r1 as   P 224, secp256r1
as P 384, and secp521r1
