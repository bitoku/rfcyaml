- title: __initial_text__
  contents:
  - '                Requirements for an Internet Audio Codec

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides specific requirements for an Internet audio\n\
    \   codec.  These requirements address quality, sampling rate, bit-rate,\n   and\
    \ packet-loss robustness, as well as other desirable properties.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6366.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Definitions .....................................................3\n  \
    \ 3. Applications ....................................................3\n    \
    \  3.1. Point-to-Point Calls .......................................3\n      3.2.\
    \ Conferencing ...............................................4\n      3.3. Telepresence\
    \ ...............................................5\n      3.4. Teleoperation and\
    \ Remote Software Services .................5\n      3.5. In-Game Voice Chat .........................................5\n\
    \      3.6. Live Distributed Music Performances / Internet\n           Music Lessons\
    \ ..............................................6\n      3.7. Delay-Tolerant Networking\
    \ or Push-to-Talk Services .........6\n      3.8. Other Applications .........................................7\n\
    \   4. Constraints Imposed by the Internet on the Codec ................7\n  \
    \ 5. Detailed Basic Requirements .....................................8\n    \
    \  5.1. Operating Space ............................................9\n      5.2.\
    \ Quality and Bit-Rate .......................................9\n      5.3. Packet-Loss\
    \ Robustness ....................................10\n      5.4. Computational\
    \ Resources ...................................10\n   6. Additional Considerations\
    \ ......................................12\n      6.1. Low-Complexity Audio Mixing\
    \ ...............................12\n      6.2. Encoder Side Potential for Improvement\
    \ ....................12\n      6.3. Layered Bit-Stream ........................................13\n\
    \      6.4. Partial Redundancy ........................................13\n  \
    \    6.5. Stereo Support ............................................13\n    \
    \  6.6. Bit Error Robustness ......................................13\n      6.7.\
    \ Time Stretching and Shortening ............................14\n      6.8. Input\
    \ Robustness ..........................................14\n      6.9. Support\
    \ of Audio Forensics ................................14\n      6.10. Legacy Compatibility\
    \ .....................................14\n   7. Security Considerations ........................................14\n\
    \   8. Acknowledgments ................................................15\n  \
    \ 9. Informative References .........................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document provides requirements for an audio codec designed\n\
    \   specifically for use over the Internet.  The requirements attempt to\n   address\
    \ the needs of the most common Internet interactive audio\n   transmission applications\
    \ and ensure good quality when operating in\n   conditions that are typical for\
    \ the Internet.  These requirements\n   also address the quality, sampling rate,\
    \ delay, bit-rate, and packet-\n   loss robustness.  Other desirable codec properties\
    \ are considered as\n   well.\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   Throughout this document, the following conventions refer\
    \ to the\n   sampling rate of a signal:\n      Narrowband: 8 kilohertz (kHz)\n\
    \      Wideband: 16 kHz\n      Super-wideband: 24/32 kHz\n      Full-band: 44.1/48\
    \ kHz\n   Codec bit-rates in bits per second (bit/s) will be considered without\n\
    \   counting any overhead ((IP/UDP/RTP) headers, padding, etc.).  The\n   codec\
    \ delay is the total algorithmic delay when one adds the codec\n   frame size\
    \ to the \"look-ahead\".  Thus, it is the minimum\n   theoretically achievable\
    \ end-to-end delay of a transmission system\n   that uses the codec.\n"
- title: 3.  Applications
  contents:
  - "3.  Applications\n   The following applications should be considered for Internet\
    \ audio\n   codecs, along with their requirements:\n   o  Point-to-point calls\n\
    \   o  Conferencing\n   o  Telepresence\n   o  Teleoperation\n   o  In-game voice\
    \ chat\n   o  Live distributed music performances / Internet music lessons\n \
    \  o  Delay-tolerant networking or push-to-talk services\n   o  Other applications\n"
- title: 3.1.  Point-to-Point Calls
  contents:
  - "3.1.  Point-to-Point Calls\n   Point-to-point calls are voice over IP (VoIP)\
    \ calls from two\n   \"standard\" (fixed or mobile) phones, and implemented in\
    \ hardware or\n   software.  For these applications, a wideband codec is required,\n\
    \   along with narrowband support for compatibility with a public\n   switched\
    \ telephone network (PSTN).  It is expected for the range of\n   useful bit-rates\
    \ to be 12 - 32 kilobits per second (kbit/s) for\n   wideband speech and 8 - 16\
    \ kbit/s for narrowband speech.  The codec\n   delay must be less than 40 milliseconds\
    \ (ms), but no more than 25 ms\n   is desirable.  Support for encoding music is\
    \ not required, but it is\n   desirable for the codec not to make background (on-hold)\
    \ music\n   excessively unpleasant to hear.  Also, the codec should be robust\
    \ to\n   noise (produce intelligible speech and no annoying artifacts) even at\n\
    \   lower bit-rates.\n"
- title: 3.2.  Conferencing
  contents:
  - "3.2.  Conferencing\n   Conferencing applications (that support multi-party calls)\
    \ have\n   additional requirements on top of the requirements for point-to-point\n\
    \   calls.  Conferencing systems often have higher-fidelity audio\n   equipment\
    \ and have greater network bandwidth available -- especially\n   when video transmission\
    \ is involved.  Therefore, support for super-\n   wideband audio becomes important,\
    \ with useful bit-rates in the 32 -\n   64 kbit/s range.  The ability to vary\
    \ the bit-rate, according to the\n   \"difficulty\" of the audio signal, is a\
    \ desirable feature for the\n   codec.  This not only saves bandwidth \"on average\"\
    , but it can also\n   help conference servers make more efficient use of the available\n\
    \   bandwidth, by using more bandwidth for important audio streams and\n   less\
    \ bandwidth for less important ones (e.g., background noise).\n   Conferencing\
    \ end-points often operate in hands-free conditions, which\n   creates acoustic\
    \ echo problems.  Therefore, lower delay is important,\n   as it reduces the quality\
    \ degradation due to any residual echo after\n   acoustic echo cancellation (AEC).\
    \  Consequently, the codec delay must\n   be less than 30 ms for this application.\
    \  An optional low-delay mode\n   with less than 10 ms delay is desirable, but\
    \ not required.\n   Most conferencing systems operate with a bridge that mixes\
    \ some (or\n   all) of the audio streams and sends them back to all the\n   participants.\
    \  In that case, it is important that the codec not\n   produce annoying artifacts\
    \ when two voices are present at the same\n   time.  Also, this mixing operation\
    \ should be as easy as possible to\n   perform.  To make it easier to determine\
    \ which streams have to be\n   mixed (and which are noise/silence), it must be\
    \ possible to measure\n   (or estimate) the voice activity in a packet without\
    \ having to fully\n   decode the packet (saving most of the complexity when the\
    \ packet need\n   not be decoded).  Also, the ability to save on the computational\n\
    \   complexity when mixing is also desirable, but not required.  For\n   example,\
    \ a transform codec may make it possible to mix the streams in\n   the transform\
    \ domain, without having to go back to time-domain.  Low-\n   complexity up-sampling\
    \ and down-sampling within the codec is also a\n   desirable feature when mixing\
    \ streams with different sampling rates.\n"
- title: 3.3.  Telepresence
  contents:
  - "3.3.  Telepresence\n   Most telepresence applications can be considered to be\
    \ essentially\n   very high-quality video-conferencing environments, so all of\
    \ the\n   conferencing requirements also apply to telepresence.  In addition,\n\
    \   telepresence applications require super-wideband and full-band audio\n   capability\
    \ with useful bit-rates in the 32 - 80 kbit/s range.  While\n   voice is still\
    \ the most important signal to be encoded, it must be\n   possible to obtain good\
    \ quality (even if not transparent) music.\n   Most telepresence applications\
    \ require more than one audio channel,\n   so support for stereo and multi-channel\
    \ is important.  While this can\n   always be accomplished by encoding multiple\
    \ single-channel streams,\n   it is preferable to take advantage of the redundancy\
    \ that exists\n   between channels.\n"
- title: 3.4.  Teleoperation and Remote Software Services
  contents:
  - "3.4.  Teleoperation and Remote Software Services\n   Teleoperation applications\
    \ are similar to telepresence, with the\n   exception that they involve remote\
    \ physical interactions.  For\n   example, the user may be controlling a robot\
    \ while receiving real-\n   time audio feedback from that robot.  For these applications,\
    \ the\n   delay has to be less than 10 ms.  The other requirements of\n   telepresence\
    \ (quality, bit-rate, multi-channel) apply to\n   teleoperation as well.  The\
    \ only exception is that mixing is not an\n   important issue for teleoperation.\n\
    \   The requirements for remote software services are similar to those of\n  \
    \ teleoperation.  These applications include remote desktop\n   applications,\
    \ remote virtualization, and interactive media\n   application being rendered\
    \ remotely (e.g., video games rendered on\n   central servers).  For all these\
    \ applications, full-band audio with\n   an algorithmic delay below 10 ms are\
    \ important.\n"
- title: 3.5.  In-Game Voice Chat
  contents:
  - "3.5.  In-Game Voice Chat\n   An increasing number of computer/console games make\
    \ use of VoIP to\n   allow players to communicate in real time.  The requirements\
    \ for\n   gaming are similar to those of conferencing, with the main difference\n\
    \   being that narrowband compatibility is not necessary.  While for most\n  \
    \ applications a codec delay up to 30 ms is acceptable, a low-delay (<\n   10\
    \ ms) option is highly desirable, especially for games with rapid\n   interactions.\
    \  The ability to use variable bit-rate (VBR) (with a\n   maximum allowed bit-rate)\
    \ is also highly desirable because it can\n   significantly reduce the bandwidth\
    \ requirement for a game server.\n"
- title: 3.6.  Live Distributed Music Performances / Internet Music Lessons
  contents:
  - "3.6.  Live Distributed Music Performances / Internet Music Lessons\n   Live music\
    \ over the Internet requires extremely low end-to-end delay\n   and is one of\
    \ the most demanding applications for interactive audio\n   transmission.  It\
    \ has been observed that for most scenarios, total\n   end-to-end delays up to\
    \ 25 ms could be tolerated by musicians, with\n   the absolute limit (where none\
    \ of the scenarios are possible) being\n   around 50 ms [carot09].  In order to\
    \ achieve this low delay on the\n   Internet -- either in the same city or in\
    \ a nearby city -- the\n   network propagation time must be taken into account.\
    \  When also\n   subtracting the delay of the audio buffer, jitter buffer, and\n\
    \   acoustic path, that leaves around 2 ms to 10 ms for the total delay\n   of\
    \ the codec.  Considering the speed of light in fiber, every 1 ms\n   reduction\
    \ in the codec delay increases the range over which\n   synchronization is possible\
    \ by approximately 200 km.\n   Acoustic echo is expected to be an even more important\
    \ issue for\n   network music than it is in conferencing, especially considering\
    \ that\n   the music quality requirements essentially forbid the use of a \"non-\n\
    \   linear processor\" (NLP) with AEC.  This is another reason why very\n   low\
    \ delay is essential.\n   Considering that the application is music, the full\
    \ audio bandwidth\n   (44.1 or 48 kHz sampling rate) must be transmitted with\
    \ a bit-rate\n   that is sufficient to provide near-transparent to transparent\n\
    \   quality.  With the current audio coding technology, this corresponds\n   to\
    \ approximately 64 kbit/s to 128 kbit/s per channel.  As for\n   telepresence,\
    \ support for two or more channels is often desired, so\n   it would be useful\
    \ for a codec to be able to take advantage of the\n   redundancy that is often\
    \ present between audio channels.\n"
- title: 3.7.  Delay-Tolerant Networking or Push-to-Talk Services
  contents:
  - "3.7.  Delay-Tolerant Networking or Push-to-Talk Services\n   Internet transmissions\
    \ are subjected to interruptions of connectivity\n   that severely disturb a phone\
    \ call.  This may happen in cases of\n   route changes, handovers, slow fading,\
    \ or device failures.  To\n   overcome this distortion, the phone call can be\
    \ halted and resumed\n   after the connectivity has been reestablished again.\n\
    \   Also, if transmission capacity is lower than the minimal coding rate,\n  \
    \ switching to a push-to-talk mode still allows for effective\n   communication.\
    \  In this situation, voice is transmitted at slower-\n   than-real-time bit-rate\
    \ and conversations are interrupted until the\n   speech has been transmitted.\n\
    \   These modes require interrupting the audio playout and continuing\n   after\
    \ a pause of arbitrary duration.\n"
- title: 3.8.  Other Applications
  contents:
  - "3.8.  Other Applications\n   The above list is by no means a complete list of\
    \ all applications\n   involving interactive audio transmission on the Internet.\
    \  However,\n   it is believed that meeting the needs of all these different\n\
    \   applications should be sufficient to ensure that the needs of other\n   applications\
    \ not listed will also be met.\n"
- title: 4.  Constraints Imposed by the Internet on the Codec
  contents:
  - "4.  Constraints Imposed by the Internet on the Codec\n   Packet losses are inevitable\
    \ on the Internet, and dealing with them\n   is one of the most fundamental requirements\
    \ for an Internet audio\n   codec.  While any audio codec can be combined with\
    \ a good packet-loss\n   concealment (PLC) algorithm, the important aspect is\
    \ what happens on\n   the first packets received _after_ the loss.  More specifically,\
    \ this\n   means that:\n   o  it should be possible to interpret the contents\
    \ of any received\n      packet, irrespective of previous losses as specified\
    \ in BCP 36\n      [PAYLOADS]; and\n   o  the decoder should re-synchronize as\
    \ quickly as possible (i.e.,\n      the output should quickly converge to the\
    \ output that would have\n      been obtained if no loss had occurred).\n   The\
    \ constraint of being able to decode any packet implies the\n   following considerations\
    \ for an audio codec:\n   o  The size of a compressed frame must be kept smaller\
    \ than the MTU\n      to avoid fragmentation;\n   o  The interpretation of any\
    \ parameter encoded in the bit-stream must\n      not depend on information contained\
    \ in other packets.  For\n      example, it is not acceptable for a codec to allow\
    \ signaling a\n      mode change in one packet and assume that subsequent frames\
    \ will\n      be decoded according to that mode.\n   Although the interpretation\
    \ of parameters cannot depend on other\n   packets, it is still reasonable to\
    \ use some amount of prediction\n   across frames, provided that the predictors\
    \ can resynchronize quickly\n   in case of a lost packet.  In this case, it is\
    \ important to use the\n   best compromise between the gain in coding efficiency\
    \ and the loss in\n   packet loss robustness due to the use of inter-frame prediction.\
    \  It\n   is a desirable property for the codec to allow some real-time control\n\
    \   of that trade-off, so that it can take advantage of more prediction\n   when\
    \ the loss rate is small, while being more robust to losses when\n   the loss\
    \ rate is high.\n   To improve the robustness to packet loss, it would be desirable\
    \ for\n   the codec to allow an adaptive (data- and network-dependent) amount\n\
    \   of side information to help improve audio quality when losses occur.\n   For\
    \ example, side information may include the retransmission of\n   certain parameters\
    \ encoded in the previous frame(s).\n   To ensure freedom of implementation, decoder-side-only\
    \ error\n   concealment does not need to be specified, although a functional PLC\n\
    \   algorithm is desirable as part of the codec reference implementation.\n  \
    \ Obviously, any information signaled in the bit-stream intended to aid\n   PLC\
    \ needs to be specified.\n   Another important property of the Internet is that\
    \ it is mostly a\n   best-effort network, with no guaranteed bandwidth.  This\
    \ means that\n   the codec has to be able to vary its output bit-rate dynamically\
    \ (in\n   real time), without requiring an out-of-band signaling mechanism, and\n\
    \   without causing audible artifacts at the bit-rate change boundaries.\n   Additional\
    \ desirable features are:\n   o  Having the possibility to use smooth bit-rate\
    \ changes with one\n      byte/frame resolution;\n   o  Making it possible for\
    \ a codec to adapt its bit-rate based on the\n      source signal being encoded\
    \ (source-controlled VBR) to maximize\n      the quality for a certain _average_\
    \ bit-rate.\n   Because the Internet transmits data in bytes, a codec should produce\n\
    \   compressed data in integer numbers of bytes.  In general, the codec\n   design\
    \ should take into consideration explicit congestion\n   notification (ECN) and\
    \ may include features that would improve the\n   quality of an ECN implementation.\n\
    \   The IETF has defined a set of application-layer protocols to be used\n   for\
    \ transmitting real-time transport of multimedia data, including\n   voice.  Thus,\
    \ it is important for the resulting codec to be easy to\n   use with these protocols.\
    \  For example, it must be possible to create\n   an [RTP] payload format that\
    \ conforms to BCP 36 [PAYLOADS].  If any\n   codec parameters need to be negotiated\
    \ between end-points, the\n   negotiation should be as easy as possible to carry\
    \ over session\n   initiation protocol (SIP) [RFC3261]/ session description protocol\n\
    \   (SDP) [RFC4566] or alternatively over extensible messaging and\n   presence\
    \ protocol (XMPP) [RFC6120] / Jingle [XEP-0167].\n"
- title: 5.  Detailed Basic Requirements
  contents:
  - "5.  Detailed Basic Requirements\n   This section summarizes all the constraints\
    \ imposed by the target\n   applications and by the Internet into a set of actual\
    \ requirements\n   for codec development.\n"
- title: 5.1.  Operating Space
  contents:
  - "5.1.  Operating Space\n   The operating space for the target applications can\
    \ be divided in\n   terms of delay: most applications require a \"medium delay\"\
    \ (20-30\n   ms), while a few require a \"very low delay\" (< 10 ms).  It makes\n\
    \   sense to divide the space based on delay because lowering the delay\n   has\
    \ a cost in terms of quality versus bit-rate.\n   For medium delay, the resulting\
    \ codec must be able to efficiently\n   operate within the following range of\
    \ bit-rates (per channel):\n   o  Narrowband: 8 kbit/s to 16 kbit/s\n   o  Wideband:\
    \ 12 to 32 kbit/s\n   o  Super-wideband: 24 to 64 kbit/s\n   o  Full-band: 32\
    \ to 80 kbit/s\n   Obviously, a lower-delay codec that can operate in the above\
    \ range is\n   also acceptable.\n   For very low delay, the resulting codec will\
    \ need to operate within\n   the following range of bit-rates (per channel):\n\
    \   o  Super-wideband: 32 to 80 kbit/s\n   o  Full-band: 48 to 128 kbit/s\n  \
    \ o  (Narrowband and wideband not required)\n"
- title: 5.2.  Quality and Bit-Rate
  contents:
  - "5.2.  Quality and Bit-Rate\n   The quality of a codec is directly linked to the\
    \ bit-rate, so these\n   two must be considered jointly.  When comparing the bit-rate\
    \ of\n   codecs, the overhead of IP/UDP/RTP headers should not be considered,\n\
    \   but any additional bits required in the RTP payload format, after the\n  \
    \ header (e.g., required signaling), should be considered.  In terms of\n   quality\
    \ versus bit-rate, the codec to be developed must be better\n   than the following\
    \ codecs, that are generally considered royalty-\n   free:\n   o  For narrowband:\
    \ Speex (NB) [Speex], and internet low bit-rate\n      codec (iLBC)(*) [RFC3951]\n\
    \   o  For wideband: Speex (WB) [Speex], G.722.1(*) [ITU.G722.1]\n   o  For super-wideband/fullband:\
    \ G.722.1C(*) [ITU.G722.1]\n   The codecs marked with (*) have additional licensing\
    \ restrictions,\n   but the codec to be developed should still not perform significantly\n\
    \   worse.  In addition to the quality targets listed above, a desirable\n   objective\
    \ is for the codec quality to be no worse than Adaptive\n   Multi-Rate (AMR-NB)\
    \ and Adaptive Multi-Rate Wideband (AMR-WB).\n   Quality should be measured for\
    \ multiple languages, including tonal\n   languages.  The case of multiple simultaneous\
    \ voices (as sometimes\n   happens in conferencing) should be evaluated as well.\n\
    \   The comparison with the above codecs assumes that the codecs being\n   compared\
    \ have similar delay characteristics.  The bit-rate required,\n   for a certain\
    \ level of quality, may be higher than the referenced\n   codecs in cases where\
    \ a much lower delay is required.  In that case,\n   the increase in bit-rate\
    \ must be less than the ratio between the\n   delays.\n   It is desirable for\
    \ the codecs to support source-controlled variable\n   bit-rate (VBR) to take\
    \ advantage of different inputs, that require a\n   different bit-rate, to achieve\
    \ the same quality.  However, it should\n   still be possible to use the codec\
    \ at a truly constant bit-rate to\n   ensure that no information leak is possible\
    \ when using an encrypted\n   channel.\n"
- title: 5.3.  Packet-Loss Robustness
  contents:
  - "5.3.  Packet-Loss Robustness\n   Robustness to packet loss is a very important\
    \ aspect of any codec to\n   be used on the Internet.  Codecs must maintain acceptable\
    \ quality at\n   loss rates up to 5% and maintain good intelligibility up to 15%\
    \ loss\n   rate.  At any sampling rate, bit-rate, and packet-loss rate, the\n\
    \   quality must be no less than the quality obtained with the Speex\n   codec\
    \ or the Global System for Mobile Communications - Full Rate\n   (GSM-FR) codec\
    \ in the same conditions.  The actual packet-loss\n   \"patterns\" to be used\
    \ in testing must be obtained from real packet-\n   loss traces collected on the\
    \ Internet, rather than from loss models.\n   These traces should be representative\
    \ of the typical environments in\n   which the applications of Section 3 operate.\
    \  For example, traces\n   related to VoIP calls should consider the loss patterns\
    \ observed for\n   typical home broadband and corporate connections.\n"
- title: 5.4.  Computational Resources
  contents:
  - "5.4.  Computational Resources\n   The resulting codec should be implementable\
    \ on a wide range of\n   devices, so there should be a fixed-point implementation\
    \ or at least\n   assurance that a reasonable fixed-point is possible.  The\n\
    \   computational resources figures listed below are meant to be upper\n   bounds.\
    \  Even below these bounds, resources should still be\n   minimized.  Any proposed\
    \ increase in computational resources\n   consumption (e.g., to increase quality)\
    \ should be carefully evaluated\n   even if the resulting resource consumption\
    \ is below the upper bound.\n   Having variable complexity would be useful (but\
    \ not required) in\n   achieving that goal as it would allow trading quality/bit-rate\
    \ for\n   lower complexity.\n   The computational requirements for real-time encoding\
    \ and decoding of\n   a mono signal on one core of a recent x86 CPU (as measured\
    \ with the\n   Unix \"time\" utility or equivalent) are as follows:\n   o  Narrowband:\
    \ 40 megahertz (MHz) (2% of a 2 gigahertz (GHz) CPU\n      core)\n   o  Wideband:\
    \ 80 MHz (4% of a 2 GHz CPU core)\n   o  Super-wideband/fullband: 200 MHz (10%\
    \ of a 2 GHz CPU core)\n   It is desirable that the MHz values listed above also\
    \ be achievable\n   on fixed-point digital signal processors that are capable\
    \ of single-\n   cycle multiply-accumulate operations (16x16 multiplication\n\
    \   accumulated into 32 bits).\n   For applications that require mixing (e.g.,\
    \ conferencing), it should\n   be possible to estimate the energy and/or the voice\
    \ activity status\n   of the decoded signal with less than 10% of the complexity\
    \ figures\n   listed above.\n   It is the intent to maximize the range of devices\
    \ on which a codec\n   can be implemented.  Therefore, the reference implementation\
    \ must not\n   depend on special hardware features or instructions to be present\
    \ in\n   order to meet the complexity requirement.  However, it may be\n   desirable\
    \ to take advantage of such hardware when available, (e.g.,\n   hardware accelerators\
    \ for operations like Fast Fourier Transforms\n   (FFT) and convolutions).  A\
    \ codec should also minimize the use of\n   saturating arithmetic so as to be\
    \ implementable on architectures that\n   do not provide hardware saturation (e.g.,\
    \ ARMv4).\n   The combined codec size and data read-only memory (ROM) should be\n\
    \   small enough not to cause significant implementation problems on\n   typical\
    \ embedded devices.  The codec context/state size required\n   should be no more\
    \ than 2*R*C bytes in floating-point, where R is the\n   sampling rate and C is\
    \ the number of channels.  For fixed-point, that\n   size should be less than\
    \ R*C.  The scratch space required should also\n   be less than 2*R*C bytes for\
    \ floating point or less than R*C bytes\n   for fixed-point.\n"
- title: 6.  Additional Considerations
  contents:
  - "6.  Additional Considerations\n   There are additional features or characteristics\
    \ that may be\n   desirable under some circumstances, but should not be part of\
    \ the\n   strict requirements.  The benefit of meeting these considerations\n\
    \   should be weighted against the associated cost.\n"
- title: 6.1.  Low-Complexity Audio Mixing
  contents:
  - "6.1.  Low-Complexity Audio Mixing\n   In many applications that require a mixing\
    \ server (e.g.,\n   conferencing, games), it is important to minimize the computational\n\
    \   cost of the mixing.  As much as possible, it should be possible to\n   perform\
    \ the mixing with fewer computations than it would take to\n   decode all the\
    \ streams, mix them, and re-encode the result.\n   Properties that reduce the\
    \ complexity of the mixing process include:\n   o  The ability to derive sufficient\
    \ parameters, such as loudness\n      and/or spectral envelope, for estimating\
    \ voice activity of a\n      compressed frame without fully decoding that frame;\n\
    \   o  The ability to mix the streams in an intermediate representation\n    \
    \  (e.g., transform domain), rather than having to fully decode the\n      signals\
    \ before the mixing;\n   o  The use of bit-stream layers (Section 6.3) by aggregating\
    \ a small\n      number of active streams at lower quality.\n   For conferencing\
    \ applications, the total complexity of the decoding,\n   voice activity detection\
    \ (VAD), and mixing should be considered when\n   evaluating proposals.\n"
- title: 6.2.  Encoder Side Potential for Improvement
  contents:
  - "6.2.  Encoder Side Potential for Improvement\n   In many codecs, it is possible\
    \ to improve the quality by improving\n   the encoder without breaking compatibility\
    \ (i.e., without changing\n   the decoder).  Potential for improvement varies\
    \ from one codec to\n   another.  It is generally low for pulse code modulation\
    \ (PCM) or\n   adaptive differential pulse code modulation (ADPCM) codecs and\
    \ higher\n   for perceptual transform codecs.  All things being equal, being able\n\
    \   to improve a codec after the bit-stream is a desirable property.\n   However,\
    \ this should not be done at the expense of quality in the\n   reference encoder.\
    \  Other potential improvements include signal-\n   adaptive frame size selection\
    \ and improved discontinuous transmission\n   (DTX) algorithms that take advantage\
    \ of predicting the decoder sides\n   packet loss concealment (PLC) algorithms.\n"
- title: 6.3.  Layered Bit-Stream
  contents:
  - "6.3.  Layered Bit-Stream\n   A layered codec makes it possible to transmit only\
    \ a certain subset\n   of the bits and still obtain a valid bit-stream with a\
    \ quality that\n   is equivalent to the quality that would be obtained from encoding\
    \ at\n   the corresponding rate.  While this is not a necessary feature for\n\
    \   most applications, it can be desirable for cases where a \"mixing\n   server\"\
    \ needs to handle a large number of streams with limited\n   computational resources.\n"
- title: 6.4.  Partial Redundancy
  contents:
  - "6.4.  Partial Redundancy\n   One possible way of increasing robustness to packet\
    \ loss is to\n   include partial redundancy within packets.  This can be achieved\n\
    \   either by including the base layer of the previous frame (for a\n   layered\
    \ codec) or by transmitting other parameters from the previous\n   frame(s) to\
    \ assist the PLC algorithm in case of loss.  The ability to\n   include partial\
    \ redundancy for high-loss scenarios is desirable,\n   provided that the feature\
    \ can be dynamically turned on or off (so\n   that no bandwidth is wasted in case\
    \ of loss-free transmission).\n"
- title: 6.5.  Stereo Support
  contents:
  - "6.5.  Stereo Support\n   It is highly desirable for the codec to have stereo\
    \ support.  At a\n   minimum, the codec should be able to encode two channels\n\
    \   independently without causing significant stereo image artifacts.  It\n  \
    \ is also desirable for the codec to take advantage of the inter-\n   channel\
    \ redundancy in stereo audio to reduce the bit-rate (for an\n   equivalent quality)\
    \ of stereo audio compared to coding channels\n   independently.\n"
- title: 6.6.  Bit Error Robustness
  contents:
  - "6.6.  Bit Error Robustness\n   The vast majority of Internet-based applications\
    \ do not need to be\n   robust to bit errors because packets either arrive unaltered\
    \ or do\n   not arrive at all.  Therefore, the emphasis should be on packet-loss\n\
    \   robustness and packet-loss concealment.  That being said, often, the\n   extra\
    \ robustness to bit errors can be achieved at no cost at all\n   (i.e., no increase\
    \ in size, complexity, or bit-rate; no decrease in\n   quality, or packet-loss\
    \ robustness, etc.).  In those cases, it is\n   useful to make a change that increases\
    \ the robustness to bit errors.\n   This can be useful for applications that use\
    \ UDP Lite transmission\n   (e.g., over a wireless LAN).  Robustness to packet\
    \ loss should\n   *never* be sacrificed to achieve higher bit error robustness.\n"
- title: 6.7.  Time Stretching and Shortening
  contents:
  - "6.7.  Time Stretching and Shortening\n   When adaptive jitter buffers are used,\
    \ it is often necessary to\n   stretch or shorten the audio signal to allow changes\
    \ in buffering.\n   While this operation can be performed directly on the decoder's\n\
    \   output, it is often more computationally efficient to stretch or\n   shorten\
    \ the signal directly within the decoder.  It is desirable for\n   the reference\
    \ implementation to provide a time stretching/shortening\n   implementation, although\
    \ it should not be normative.\n"
- title: 6.8.  Input Robustness
  contents:
  - "6.8.  Input Robustness\n   The systems providing input to the encoder and receiving\
    \ output from\n   the decoder may be far from ideal in actual use.  Input and\
    \ output\n   audio streams may be corrupted by compounding non-linear artifacts\n\
    \   from analog hardware and digital processing.  The codecs to be\n   developed\
    \ should be tested to ensure that they degrade gracefully\n   under adverse audio\
    \ input conditions.  Types of digital corruption\n   that may be tested include\
    \ tandeming, transcoding, low-quality\n   resampling, and digital clipping.  Types\
    \ of analog corruption that\n   may be tested include microphones with substantial\
    \ background noise,\n   analog clipping, and loudspeaker distortion.  No specific\
    \ end-to-end\n   quality requirements are mandated for use with the proposed codec.\n\
    \   It is advisable, however, that several typical in situ environments/\n   processing\
    \ chains be specified for the purpose of benchmarking end-\n   to-end quality\
    \ with the proposed codec.\n"
- title: 6.9.  Support of Audio Forensics
  contents:
  - "6.9.  Support of Audio Forensics\n   Emergency calls can be analyzed using audio\
    \ forensics if the context\n   and situation of the caller has to be identified.\
    \  Thus, it is\n   important to transmit not only the voice of the callers well,\
    \ but\n   also to transmit background noise at high quality.  In these\n   situations,\
    \ sounds or noises of low volume should also not be\n   compressed or dropped.\
    \  Therefore, the encoder must allow DTX to be\n   disabled when required (e.g.,\
    \ for emergency calls).\n"
- title: 6.10.  Legacy Compatibility
  contents:
  - "6.10.  Legacy Compatibility\n   In order to create the best possible codec for\
    \ the Internet, there is\n   no requirement for compatibility with legacy Internet\
    \ codecs.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Although this document itself does not have security\
    \ considerations,\n   this section describes the security requirements for the\
    \ codec.\n   As for any protocol to be used over the Internet, security is a very\n\
    \   important aspect to consider.  This goes beyond the obvious\n   considerations\
    \ of preventing buffer overflows and similar attacks\n   that can lead to denial-of-service\
    \ (DoS) or remote code execution.\n   One very important security aspect is to\
    \ make sure that the decoders\n   have a bounded and reasonable worst-case complexity.\
    \  This prevents\n   an attacker from causing a DoS by sending packets that are\
    \ specially\n   crafted to take a very long (or infinite) time to decode.\n  \
    \ A more subtle aspect is the information leak that can occur when the\n   codec\
    \ is used over an encrypted channel (e.g., [SRTP]).  For example,\n   it was suggested\
    \ [wright08] [white11] that use of source-controlled\n   VBR may reveal some information\
    \ about a conversation through the size\n   of the compressed packets.  Therefore,\
    \ it should be possible to use\n   the codec at a truly constant bit-rate, if\
    \ needed.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   We would like to thank all the people who contributed\
    \ directly or\n   indirectly to this document, including Slava Borilin, Christopher\n\
    \   Montgomery, Raymond (Juin-Hwey) Chen, Jason Fischl, Gregory Maxwell,\n   Alan\
    \ Duric, Jonathan Christensen, Julian Spittka, Michael Knappe,\n   Christian Hoene,\
    \ and Henry Sinnreich.  We would also like to thank\n   Cullen Jennings, Jonathan\
    \ Rosenberg, and Gregory Lebovitz for their\n   advice.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [RFC3261]    Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n                A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n                Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \                June 2002.\n   [RFC4566]    Handley, M., Jacobson, V., and C.\
    \ Perkins, \"SDP: Session\n                Description Protocol\", RFC 4566, July\
    \ 2006.\n   [RFC6120]    Saint-Andre, P., \"Extensible Messaging and Presence\n\
    \                Protocol (XMPP): Core\", RFC 6120, March 2011.\n   [XEP-0167]\
    \   Ludwig, S., Saint-Andre, P., Egan, S., McQueen, R., and\n                D.\
    \ Cionoiu, \"Jingle RTP Sessions\", XSF XEP 0167,\n                December 2009.\n\
    \   [RFC3951]    Andersen, S., Duric, A., Astrom, H., Hagen, R., Kleijn,\n   \
    \             W., and J. Linden, \"Internet Low Bit Rate Codec (iLBC)\",\n   \
    \             RFC 3951, December 2004.\n   [ITU.G722.1] International Telecommunications\
    \ Union, \"Low-complexity\n                coding at 24 and 32 kbit/s for hands-free\
    \ operation in\n                systems with low frame loss\", ITU-T Recommendation\n\
    \                G.722.1, May 2005.\n   [Speex]      Xiph.Org Foundation, \"Speex:\
    \ http://www.speex.org/\",\n                2003.\n   [carot09]    Carot, A.,\
    \ Werner, C., and T. Fischinger, \"Towards a\n                Comprehensive Cognitive\
    \ Analysis of Delay-Influenced\n                Rhythmical Interaction:\n    \
    \            http://www.carot.de/icmc2009.pdf\", 2009.\n   [PAYLOADS]   Handley,\
    \ M. and C. Perkins, \"Guidelines for Writers of\n                RTP Payload\
    \ Format Specifications\", BCP 36, RFC 2736,\n                December 1999.\n\
    \   [RTP]        Schulzrinne, H., Casner, S., Frederick, R., and V.\n        \
    \        Jacobson, \"RTP: A Transport Protocol for Real-Time\n               \
    \ Applications\", STD 64, RFC 3550, July 2003.\n   [SRTP]       Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and\n                K. Norrman, \"The Secure\
    \ Real-time Transport Protocol\n                (SRTP)\", RFC 3711, March 2004.\n\
    \   [wright08]   Wright, C., Ballard, L., Coull, S., Monrose, F., and G.\n   \
    \             Masson, \"Spot me if you can: Uncovering spoken phrases\n      \
    \          in encrypted VoIP conversations:\n                http://www.cs.jhu.edu/~cwright/oakland08.pdf\"\
    , 2008.\n   [white11]    White, A., Matthews, A., Snow, K., and F. Monrose,\n\
    \                \"Phonotactic Reconstruction of Encrypted VoIP\n            \
    \    Conversations: Hookt on fon-iks\n                http://www.cs.unc.edu/~fabian/papers/foniks-oak11.pdf\"\
    ,\n                2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jean-Marc Valin\n   Mozilla\n   650 Castro Street\n  \
    \ Mountain View, CA 94041\n   USA\n   EMail: jmvalin@jmvalin.ca\n   Koen Vos\n\
    \   Skype Technologies, S.A.\n   Stadsgarden 6\n   Stockholm, 11645\n   Sweden\n\
    \   EMail: koen.vos@skype.net\n"
