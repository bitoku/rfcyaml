- contents:
  - '              BGP/MPLS IP Virtual Private Networks (VPNs)

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes a method by which a Service Provider may
    use\n   an IP backbone to provide IP Virtual Private Networks (VPNs) for its\n
    \  customers.  This method uses a \"peer model\", in which the customers'\n   edge
    routers (CE routers) send their routes to the Service Provider's\n   edge routers
    (PE routers); there is no \"overlay\" visible to the\n   customer's routing algorithm,
    and CE routers at different sites do\n   not peer with each other.  Data packets
    are tunneled through the\n   backbone, so that the core routers do not need to
    know the VPN\n   routes.\n   This document obsoletes RFC 2547.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Virtual Private Networks ...................................4\n      1.2.
    Customer Edge and Provider Edge ............................5\n      1.3. VPNs
    with Overlapping Address Spaces .......................6\n      1.4. VPNs with
    Different Routes to the Same System ..............7\n      1.5. SP Backbone Routers
    ........................................7\n      1.6. Security ...................................................8\n
    \  2. Sites and CEs ...................................................8\n   3.
    VRFs: Multiple Forwarding Tables in PEs .........................9\n      3.1.
    VRFs and Attachment Circuits ...............................9\n      3.2. Associating
    IP Packets with VRFs ..........................10\n      3.3. Populating the VRFs
    .......................................11\n   4. VPN Route Distribution via BGP
    .................................12\n      4.1. The VPN-IPv4 Address Family ...............................13\n
    \     4.2. Encoding of Route Distinguishers ..........................14\n      4.3.
    Controlling Route Distribution ............................15\n           4.3.1.
    The Route Target Attribute .........................15\n           4.3.2. Route
    Distribution Among PEs by BGP ................17\n           4.3.3. Use of Route
    Reflectors ............................20\n           4.3.4. How VPN-IPv4 NLRI
    Is Carried in BGP ................22\n           4.3.5. Building VPNs Using Route
    Targets ..................23\n           4.3.6. Route Distribution Among VRFs
    in a Single PE .......23\n   5. Forwarding .....................................................23\n
    \  6. Maintaining Proper Isolation of VPNs ...........................26\n   7.
    How PEs Learn Routes from CEs ..................................27\n   8. How
    CEs Learn Routes from PEs ..................................30\n   9. Carriers'
    Carriers .............................................30\n   10. Multi-AS Backbones
    ............................................32\n   11. Accessing the Internet
    from a VPN .............................34\n   12. Management VPNs ...............................................36\n
    \  13. Security Considerations .......................................37\n      13.1.
    Data Plane ...............................................37\n      13.2. Control
    Plane ............................................39\n      13.3. Security of
    P and PE Devices .............................39\n   14. Quality of Service ............................................39\n
    \  15. Scalability ...................................................40\n   16.
    IANA Considerations ...........................................40\n   17. Acknowledgements
    ..............................................41\n   18. Contributors ..................................................41\n
    \  19. Normative References ..........................................44\n   20.
    Informative References ........................................45\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes a method by which a Service Provider
    may use\n   an IP backbone to provide IP Virtual Private Networks (VPNs) for its\n
    \  customers.  This method uses a \"peer model\", in which the customers'\n   edge
    routers (CE routers) send their routes to the Service Provider's\n   edge routers
    (PE routers).  Border Gateway Protocol (BGP)\n   [BGP, BGP-MP] is then used by
    the Service Provider to exchange the\n   routes of a particular VPN among the
    PE routers that are attached to\n   that VPN.  This is done in a way that ensures
    that routes from\n   different VPNs remain distinct and separate, even if two
    VPNs have an\n   overlapping address space.  The PE routers distribute, to the
    CE\n   routers in a particular VPN, the routes from other the CE routers in\n
    \  that VPN.  The CE routers do not peer with each other, hence there is\n   no
    \"overlay\" visible to the VPN's routing algorithm.  The term \"IP\"\n   in \"IP
    VPN\" is used to indicate that the PE receives IP datagrams\n   from the CE, examines
    their IP headers, and routes them accordingly.\n   Each route within a VPN is
    assigned a Multiprotocol Label Switching\n   (MPLS) [MPLS-ARCH, MPLS-BGP, MPLS-ENCAPS]
    label; when BGP distributes\n   a VPN route, it also distributes an MPLS label
    for that route.\n   Before a customer data packet travels across the Service Provider's\n
    \  backbone, it is encapsulated with the MPLS label that corresponds, in\n   the
    customer's VPN, to the route that is the best match to the\n   packet's destination
    address.  This MPLS packet is further\n   encapsulated (e.g., with another MPLS
    label or with an IP or Generic\n   Routing Encapsulation (GRE) tunnel header [MPLS-in-IP-GRE])
    so that\n   it gets tunneled across the backbone to the proper PE router.  Thus,\n
    \  the backbone core routers do not need to know the VPN routes.\n   The primary
    goal of this method is to support the case in which a\n   client obtains IP backbone
    services from a Service Provider or\n   Service Providers with which it maintains
    contractual relationships.\n   The client may be an enterprise, a group of enterprises
    that need an\n   extranet, an Internet Service Provider, an application service\n
    \  provider, another VPN Service Provider that uses this same method to\n   offer
    VPNs to clients of its own, etc.  The method makes it very\n   simple for the
    client to use the backbone services.  It is also very\n   scalable and flexible
    for the Service Provider, and allows the\n   Service Provider to add value.\n"
  - contents:
    - "1.1.  Virtual Private Networks\n   Consider a set of \"sites\" that are attached
      to a common network that\n   we call \"the backbone\".  Now apply some policy
      to create a number of\n   subsets of that set, and impose the following rule:
      two sites may\n   have IP interconnectivity over that backbone only if at least
      one of\n   these subsets contains them both.\n   These subsets are Virtual Private
      Networks (VPNs).  Two sites have IP\n   connectivity over the common backbone
      only if there is some VPN that\n   contains them both.  Two sites that have
      no VPN in common have no\n   connectivity over that backbone.\n   If all the
      sites in a VPN are owned by the same enterprise, the VPN\n   may be thought
      of as a corporate \"intranet\".  If the various sites in\n   a VPN are owned
      by different enterprises, the VPN may be thought of\n   as an \"extranet\".
      \ A site can be in more than one VPN; e.g., in an\n   intranet and in several
      extranets.  In general, when we use the term\n   \"VPN\" we will not be distinguishing
      between intranets and extranets.\n   We refer to the owners of the sites as
      the \"customers\".  We refer to\n   the owners/operators of the backbone as
      the \"Service Providers\"\n   (SPs).  The customers obtain \"VPN service\" from
      the SPs.\n   A customer may be a single enterprise, a set of enterprises, an\n
      \  Internet Service Provider, an Application Service Provider, another\n   SP
      that offers the same kind of VPN service to its own customers,\n   etc.\n   The
      policies that determine whether a particular collection of sites\n   is a VPN
      are the policies of the customers.  Some customers will want\n   the implementation
      of these policies to be entirely the\n   responsibility of the SP.  Other customers
      may want to share with the\n   SP the responsibility for implementing these
      policies.  This document\n   specifies mechanisms that can be used to implement
      these policies.\n   The mechanisms we describe are general enough to allow these
      policies\n   to be implemented either by the SP alone or by a VPN customer\n
      \  together with the SP.  Most of the discussion is focused on the\n   former
      case, however.\n   The mechanisms discussed in this document allow the implementation
      of\n   a wide range of policies.  For example, within a given VPN, one can\n
      \  allow every site to have a direct route to every other site (\"full\n   mesh\").
      \ Alternatively, one can force traffic between certain pairs\n   of sites to
      be routed via a third site.  This can be useful, e.g., if\n   it is desired
      that traffic between a pair of sites be passed through\n   a firewall, and the
      firewall is located at the third site.\n   In this document, we restrict our
      discussion to the case in which the\n   customer is explicitly purchasing VPN
      service from an SP, or from a\n   set of SPs that have agreed to cooperate to
      provide the VPN service.\n   That is, the customer is not merely purchasing
      internet access from\n   an SP, and the VPN traffic does not pass through a
      random collection\n   of interconnected SP networks.\n   We also restrict our
      discussion to the case in which the backbone\n   provides an IP service to the
      customer, rather than, e.g., a layer 2\n   service such as Frame Relay, Asynchronous
      Transfer Mode (ATM),\n   ethernet, High Level Data Link Control (HDLC), or Point-to-Point\n
      \  Protocol (PPP).  The customer may attach to the backbone via one of\n   these
      (or other) layer 2 services, but the layer 2 service is\n   terminated at the
      \"edge\" of the backbone, where the customer's IP\n   datagrams are removed
      from any layer 2 encapsulation.\n   In the rest of this introduction, we specify
      some properties that\n   VPNs should have.  The remainder of this document specifies
      a set of\n   mechanisms that can be deployed to provide a VPN model that has
      all\n   these properties.  This section also introduces some of the technical\n
      \  terminology used in the remainder of the document.\n"
    title: 1.1.  Virtual Private Networks
  - contents:
    - "1.2.  Customer Edge and Provider Edge\n   Routers can be attached to each other,
      or to end systems, in a\n   variety of different ways: PPP connections, ATM
      Virtual Circuits\n   (VCs), Frame Relay VCs, ethernet interfaces, Virtual Local
      Area\n   Networks (VLANs) on ethernet interfaces, GRE tunnels, Layer 2\n   Tunneling
      Protocol (L2TP) tunnels, IPsec tunnels, etc.  We will use\n   the term \"attachment
      circuit\" to refer generally to some such means\n   of attaching to a router.
      \ An attachment circuit may be the sort of\n   connection that is usually thought
      of as a \"data link\", or it may be\n   a tunnel of some sort; what matters
      is that it be possible for two\n   devices to be network layer peers over the
      attachment circuit.\n   Each VPN site must contain one or more Customer Edge
      (CE) devices.\n   Each CE device is attached, via some sort of attachment circuit,
      to\n   one or more Provider Edge (PE) routers.\n   Routers in the SP's network
      that do not attach to CE devices are\n   known as \"P routers\".\n   CE devices
      can be hosts or routers.  In a typical case, a site\n   contains one or more
      routers, some of which are attached to PE\n   routers.  The site routers that
      attach to the PE routers would then\n   be the CE devices, or \"CE routers\".
      \ However, there is nothing to\n   prevent a non-routing host from attaching
      directly to a PE router, in\n   which case the host would be a CE device.\n
      \  Sometimes, what is physically attached to a PE router is a layer 2\n   switch.
      \ In this case, we do NOT say that the layer 2 switch is a CE\n   device.  Rather,
      the CE devices are the hosts and routers that\n   communicate with the PE router
      through the layer 2 switch; the layer\n   2 infrastructure is transparent.  If
      the layer 2 infrastructure\n   provides a multipoint service, then multiple
      CE devices can be\n   attached to the PE router over the same attachment circuit.\n
      \  CE devices are logically part of a customer's VPN.  PE and P routers\n   are
      logically part of the SP's network.\n   The attachment circuit over which a
      packet travels when going from CE\n   to PE is known as that packet's \"ingress
      attachment circuit\", and the\n   PE as the packet's \"ingress PE\".  The attachment
      circuit over which a\n   packet travels when going from PE to CE is known as
      that packet's\n   \"egress attachment circuit\", and the PE as the packet's
      \"egress PE\".\n   We will say that a PE router is attached to a particular
      VPN if it is\n   attached to a CE device that is in a site of that VPN.  Similarly,
      we\n   will say that a PE router is attached to a particular site if it is\n
      \  attached to a CE device that is in that site.\n   When the CE device is a
      router, it is a routing peer of the PE(s) to\n   which it is attached, but it
      is NOT a routing peer of CE routers at\n   other sites.  Routers at different
      sites do not directly exchange\n   routing information with each other; in fact,
      they do not even need\n   to know of each other at all.  As a consequence, the
      customer has no\n   backbone or \"virtual backbone\" to manage, and does not
      have to deal\n   with any inter-site routing issues.  In other words, in the
      scheme\n   described in this document, a VPN is NOT an \"overlay\" on top of
      the\n   SP's network.\n   With respect to the management of the edge devices,
      clear\n   administrative boundaries are maintained between the SP and its\n
      \  customers.  Customers are not required to access the PE or P routers\n   for
      management purposes, nor is the SP required to access the CE\n   devices for
      management purposes.\n"
    title: 1.2.  Customer Edge and Provider Edge
  - contents:
    - "1.3.  VPNs with Overlapping Address Spaces\n   If two VPNs have no sites in
      common, then they may have overlapping\n   address spaces.  That is, a given
      address might be used in VPN V1 as\n   the address of system S1, but in VPN
      V2 as the address of a\n   completely different system S2.  This is a common
      situation when the\n   VPNs each use an RFC 1918 private address space.  Of
      course, within\n   each VPN, each address must be unambiguous.\n   Even two
      VPNs that do have sites in common may have overlapping\n   address spaces, as
      long as there is no need for any communication\n   between systems with such
      addresses and systems in the common sites.\n"
    title: 1.3.  VPNs with Overlapping Address Spaces
  - contents:
    - "1.4.  VPNs with Different Routes to the Same System\n   Although a site may
      be in multiple VPNs, it is not necessarily the\n   case that the route to a
      given system at that site should be the same\n   in all the VPNs.  Suppose,
      for example, we have an intranet\n   consisting of sites A, B, and C, and an
      extranet consisting of A, B,\n   C, and the \"foreign\" site D.  Suppose that
      at site A there is a\n   server, and we want clients from B, C, or D to be able
      to use that\n   server.  Suppose also that at site B there is a firewall.  We
      want\n   all the traffic from site D to the server to pass through the\n   firewall,
      so that traffic from the extranet can be access controlled.\n   However, we
      don't want traffic from C to pass through the firewall on\n   the way to the
      server, since this is intranet traffic.\n   It is possible to set up two routes
      to the server.  One route, used\n   by sites B and C, takes the traffic directly
      to site A.  The second\n   route, used by site D, takes the traffic instead
      to the firewall at\n   site B.  If the firewall allows the traffic to pass,
      it then appears\n   to be traffic coming from site B, and follows the route
      to site A.\n"
    title: 1.4.  VPNs with Different Routes to the Same System
  - contents:
    - "1.5.  SP Backbone Routers\n   The SP's backbone consists of the PE routers,
      as well as other\n   routers (\"P routers\") that do not attach to CE devices.\n
      \  If every router in an SP's backbone had to maintain routing\n   information
      for all the VPNs supported by the SP, there would be\n   severe scalability
      problems; the number of sites that could be\n   supported would be limited by
      the amount of routing information that\n   could be held in a single router.
      \ It is important therefore that the\n   routing information about a particular
      VPN only needs to be present\n   in the PE routers that attach to that VPN.
      \ In particular, the P\n   routers do not need to have ANY per-VPN routing information\n
      \  whatsoever.  (This condition may need to be relaxed somewhat when\n   multicast
      routing is considered.  This is not considered further in\n   this paper, but
      is examined in [VPN-MCAST].)\n   So just as the VPN owners do not have a backbone
      or \"virtual\n   backbone\" to administer, the SPs themselves do not have a
      separate\n   backbone or \"virtual backbone\" to administer for each VPN.  Site-to-\n
      \  site routing in the backbone is optimal (within the constraints of\n   the
      policies used to form the VPNs) and is not constrained in any way\n   by an
      artificial \"virtual topology\" of tunnels.\n   Section 10 discusses some of
      the special issues that arise when the\n   backbone spans several Service Providers.\n"
    title: 1.5.  SP Backbone Routers
  - contents:
    - "1.6.  Security\n   VPNs of the sort being discussed here, even without making
      use of\n   cryptographic security measures, are intended to provide a level
      of\n   security equivalent to that obtainable when a layer 2 backbone (e.g.,\n
      \  Frame Relay) is used.  That is, in the absence of misconfiguration or\n   deliberate
      interconnection of different VPNs, it is not possible for\n   systems in one
      VPN to gain access to systems in another VPN.  Of\n   course, the methods described
      herein do not by themselves encrypt the\n   data for privacy, nor do they provide
      a way to determine whether data\n   has been tampered with en route.  If this
      is desired, cryptographic\n   measures must be applied in addition. (See, e.g.,
      [MPLS/BGP-IPsec].)\n   Security is discussed in more detail in Section 13.\n"
    title: 1.6.  Security
  title: 1.  Introduction
- contents:
  - "2.  Sites and CEs\n   From the perspective of a particular backbone network,
    a set of IP\n   systems may be regarded as a \"site\" if those systems have mutual
    IP\n   interconnectivity that doesn't require use of the backbone.  In\n   general,
    a site will consist of a set of systems that are in\n   geographic proximity.
    \ However, this is not universally true.  If two\n   geographic locations are
    connected via a leased line, over which Open\n   Shortest Path First (OSPF) protocol
    [OSPFv2] is running, and if that\n   line is the preferred way of communicating
    between the two locations,\n   then the two locations can be regarded as a single
    site, even if each\n   location has its own CE router.  (This notion of \"site\"
    is\n   topological, rather than geographical.  If the leased line goes down,\n
    \  or otherwise ceases to be the preferred route, but the two geographic\n   locations
    can continue to communicate by using the VPN backbone, then\n   one site has become
    two.)\n   A CE device is always regarded as being in a single site (though as\n
    \  we shall see in Section 3.2, a site may consist of multiple \"virtual\n   sites\").
    \ A site, however, may belong to multiple VPNs.\n   A PE router may attach to
    CE devices from any number of different\n   sites, whether those CE devices are
    in the same or in different VPNs.\n   A CE device may, for robustness, attach
    to multiple PE routers, of\n   the same or of different service providers.  If
    the CE device is a\n   router, the PE router and the CE router will appear as
    router\n   adjacencies to each other.\n   While we speak mostly of \"sites\" as
    being the basic unit of\n   interconnection, nothing here prevents a finer degree
    of granularity\n   in the control of interconnectivity.  For example, certain
    systems at\n   a site may be members of an intranet as well as members of one
    or\n   more extranets, while other systems at the same site may be\n   restricted
    to being members of the intranet only.  However, this\n   might require that the
    site have two attachment circuits to the\n   backbone, one for the intranet and
    one for the extranet; it might\n   further require that firewall functionality
    be applied on the\n   extranet attachment circuit.\n"
  title: 2.  Sites and CEs
- contents:
  - "3.  VRFs: Multiple Forwarding Tables in PEs\n   Each PE router maintains a number
    of separate forwarding tables.  One\n   of the forwarding tables is the \"default
    forwarding table\".  The\n   others are \"VPN Routing and Forwarding tables\",
    or \"VRFs\".\n"
  - contents:
    - "3.1.  VRFs and Attachment Circuits\n   Every PE/CE attachment circuit is associated,
      by configuration, with\n   one or more VRFs.  An attachment circuit that is
      associated with a\n   VRF is known as a \"VRF attachment circuit\".\n   In the
      simplest case and most typical case, a PE/CE attachment\n   circuit is associated
      with exactly one VRF.  When an IP packet is\n   received over a particular attachment
      circuit, its destination IP\n   address is looked up in the associated VRF.
      \ The result of that\n   lookup determines how to route the packet.  The VRF
      used by a\n   packet's ingress PE for routing a particular packet is known as
      the\n   packet's \"ingress VRF\".  (There is also the notion of a packet's\n
      \  \"egress VRF\", located at the packet's egress PE; this is discussed in\n
      \  Section 5.)\n   If an IP packet arrives over an attachment circuit that is
      not\n   associated with any VRF, the packet's destination address is looked\n
      \  up in the default forwarding table, and the packet is routed\n   accordingly.
      \ Packets forwarded according to the default forwarding\n   table include packets
      from neighboring P or PE routers, as well as\n   packets from customer-facing
      attachment circuits that have not been\n   associated with VRFs.\n   Intuitively,
      one can think of the default forwarding table as\n   containing \"public routes\",
      and of the VRFs as containing \"private\n   routes\".  One can similarly think
      of VRF attachment circuits as being\n   \"private\", and of non-VRF attachment
      circuits as being \"public\".\n   If a particular VRF attachment circuit connects
      site S to a PE\n   router, then connectivity from S (via that attachment circuit)
      can be\n   restricted by controlling the set of routes that gets entered in
      the\n   corresponding VRF.  The set of routes in that VRF should be limited\n
      \  to the set of routes leading to sites that have at least one VPN in\n   common
      with S.  Then a packet sent from S over a VRF attachment\n   circuit can only
      be routed by the PE to another site S' if S' is in\n   one of the same VPNs
      as S.  That is, communication (via PE routers)\n   is prevented between any
      pair of VPN sites that have no VPN in\n   common.  Communication between VPN
      sites and non-VPN sites is\n   prevented by keeping the routes to the VPN sites
      out of the default\n   forwarding table.\n   If there are multiple attachment
      circuits leading from S to one or\n   more PE routers, then there might be multiple
      VRFs that could be used\n   to route traffic from S.  To properly restrict S's
      connectivity, the\n   same set of routes would have to exist in all the VRFs.\n
      \  Alternatively, one could impose different connectivity restrictions\n   over
      different attachment circuit from S.  In that case, some of the\n   VRFs associated
      with attachment circuits from S would contain\n   different sets of routes than
      some of the others.\n   We allow the case in which a single attachment circuit
      is associated\n   with a set of VRFs, rather than with a single VRF.  This can
      be\n   useful if it is desired to divide a single VPN into several\n   \"sub-VPNs\",
      each with different connectivity restrictions, where some\n   characteristic
      of the customer packets is used to select from among\n   the sub-VPNs.  For
      simplicity though, we will usually speak of an\n   attachment circuit as being
      associated with a single VRF.\n"
    title: 3.1.  VRFs and Attachment Circuits
  - contents:
    - "3.2.  Associating IP Packets with VRFs\n   When a PE router receives a packet
      from a CE device, it must\n   determine the attachment circuit over which the
      packet arrived, as\n   this determines in turn the VRF (or set of VRFs) that
      can be used for\n   forwarding that packet.  In general, to determine the attachment\n
      \  circuit over which a packet arrived, a PE router takes note of the\n   physical
      interface over which the packet arrived, and possibly also\n   takes note of
      some aspect of the packet's layer 2 header.  For\n   example, if a packet's
      ingress attachment circuit is a Frame Relay\n   VC, the identity of the attachment
      circuit can be determined from the\n   physical Frame Relay interface over which
      the packet arrived,\n   together with the Data Link Connection Identifier (DLCI)
      field in the\n   packet's Frame Relay header.\n   Although the PE's conclusion
      that a particular packet arrived on a\n   particular attachment circuit may
      be partially determined by the\n   packet's layer 2 header, it must be impossible
      for a customer, by\n   writing the header fields, to fool the SP into thinking
      that a packet\n   that was received over one attachment circuit really arrived
      over a\n   different one.  In the example above, although the attachment circuit\n
      \  is determined partially by inspection of the DLCI field in the Frame\n   Relay
      header, this field cannot be set freely by the customer.\n   Rather, it must
      be set to a value specified by the SP, or else the\n   packet cannot arrive
      at the PE router.\n   In some cases, a particular site may be divided by the
      customer into\n   several \"virtual sites\".  The SP may designate a particular
      set of\n   VRFs to be used for routing packets from that site and may allow
      the\n   customer to set some characteristic of the packet, which is then used\n
      \  for choosing a particular VRF from the set.\n   For example, each virtual
      site might be realized as a VLAN.  The SP\n   and the customer could agree that
      on packets arriving from a\n   particular CE, certain VLAN values would be used
      to identify certain\n   VRFs.  Of course, packets from that CE would be discarded
      by the PE\n   if they carry VLAN tag values that are not in the agreed-upon
      set.\n   Another way to accomplish this is to use IP source addresses.  In\n
      \  this case, the PE uses the IP source address in a packet received\n   from
      the CE, along with the interface over which the packet is\n   received, to assign
      the packet to a particular VRF.  Again, the\n   customer would only be able
      to select from among the particular set\n   of VRFs that that customer is allowed
      to use.\n   If it is desired to have a particular host be in multiple virtual\n
      \  sites, then that host must determine, for each packet, which virtual\n   site
      the packet is associated with.  It can do this, e.g., by sending\n   packets
      from different virtual sites on different VLANs, or out\n   different network
      interfaces.\n"
    title: 3.2.  Associating IP Packets with VRFs
  - contents:
    - "3.3. Populating the VRFs\n   With what set of routes are the VRFs populated?\n
      \  As an example, let PE1, PE2, and PE3 be three PE routers, and let\n   CE1,
      CE2, and CE3 be three CE routers.  Suppose that PE1 learns, from\n   CE1, the
      routes that are reachable at CE1's site.  If PE2 and PE3 are\n   attached, respectively,
      to CE2 and CE3, and there is some VPN V\n   containing CE1, CE2, and CE3, then
      PE1 uses BGP to distribute to PE2\n   and PE3 the routes that it has learned
      from CE1.  PE2 and PE3 use\n   these routes to populate the VRFs that they associate,
      respectively,\n   with the sites of CE2 and CE3.  Routes from sites that are
      not in VPN\n   V do not appear in these VRFs, which means that packets from
      CE2 or\n   CE3 cannot be sent to sites that are not in VPN V.\n   When we speak
      of a PE \"learning\" routes from a CE, we are not\n   presupposing any particular
      learning technique.  The PE may learn\n   routes by means of a dynamic routing
      algorithm, but it may also\n   \"learn\" routes by having those routes configured
      (i.e., static\n   routing).  (In this case, to say that the PE \"learned\" the
      routes\n   from the CE is perhaps to exercise a bit of poetic license.)\n   PEs
      also need to learn, from other PEs, the routes that belong to a\n   given VPN.
      \ The procedures to be used for populating the VRFs with\n   the proper sets
      of routes are specified in Section 4.\n   If there are multiple attachment circuits
      leading from a particular\n   PE router to a particular site, they might all
      be mapped to the same\n   forwarding table.  But if policy dictates, they could
      be mapped to\n   different forwarding tables.  For instance, the policy might
      be that\n   a particular attachment circuit from a site is used only for intranet\n
      \  traffic, while another attachment circuit from that site is used only\n   for
      extranet traffic.  (Perhaps, e.g., the CE attached to the\n   extranet attachment
      circuit is a firewall, while the CE attached to\n   the intranet attachment
      circuit is not.)  In this case, the two\n   attachment circuits would be associated
      with different VRFs.\n   Note that if two attachment circuits are associated
      with the same\n   VRF, then packets that the PE receives over one of them will
      be able\n   to reach exactly the same set of destinations as packets that the
      PE\n   receives over the other.  So two attachment circuits cannot be\n   associated
      with the same VRF unless each CE is in the exact same set\n   of VPNs as is
      the other.\n   If an attachment circuit leads to a site which is in multiple
      VPNs,\n   the attachment circuit may still associated with a single VRF, in\n
      \  which case the VRF will contain routes from the full set of VPNs of\n   which
      the site is a member.\n"
    title: 3.3. Populating the VRFs
  title: '3.  VRFs: Multiple Forwarding Tables in PEs'
- contents:
  - "4.  VPN Route Distribution via BGP\n   PE routers use BGP to distribute VPN routes
    to each other (more\n   accurately, to cause VPN routes to be distributed to each
    other).\n   We allow each VPN to have its own address space, which means that
    a\n   given address may denote different systems in different VPNs.  If two\n
    \  routes to the same IP address prefix are actually routes to different\n   systems,
    it is important to ensure that BGP not treat them as\n   comparable.  Otherwise,
    BGP might choose to install only one of them,\n   making the other system unreachable.
    \ Further, we must ensure that\n   POLICY is used to determine which packets get
    sent on which routes;\n   given that several such routes are installed by BGP,
    only one such\n   must appear in any particular VRF.\n   We meet these goals by
    the use of a new address family, as specified\n   below.\n"
  - contents:
    - "4.1.  The VPN-IPv4 Address Family\n   The BGP Multiprotocol Extensions [BGP-MP]
      allow BGP to carry routes\n   from multiple \"address families\".  We introduce
      the notion of the\n   \"VPN-IPv4 address family\".  A VPN-IPv4 address is a
      12-byte quantity,\n   beginning with an 8-byte Route Distinguisher (RD) and
      ending with a\n   4-byte IPv4 address.  If several VPNs use the same IPv4 address\n
      \  prefix, the PEs translate these into unique VPN-IPv4 address\n   prefixes.
      \ This ensures that if the same address is used in several\n   different VPNs,
      it is possible for BGP to carry several completely\n   different routes to that
      address, one for each VPN.\n   Since VPN-IPv4 addresses and IPv4 addresses are
      different address\n   families, BGP never treats them as comparable addresses.\n
      \  An RD is simply a number, and it does not contain any inherent\n   information;
      it does not identify the origin of the route or the set\n   of VPNs to which
      the route is to be distributed.  The purpose of the\n   RD is solely to allow
      one to create distinct routes to a common IPv4\n   address prefix.  Other means
      are used to determine where to\n   redistribute the route (see Section 4.3).\n
      \  The RD can also be used to create multiple different routes to the\n   very
      same system.  We have already discussed a situation in which the\n   route to
      a particular server should be different for intranet traffic\n   than for extranet
      traffic.  This can be achieved by creating two\n   different VPN-IPv4 routes
      that have the same IPv4 part, but different\n   RDs.  This allows BGP to install
      multiple different routes to the\n   same system, and allows policy to be used
      (see Section 4.3.5) to\n   decide which packets use which route.\n   The RDs
      are structured so that every Service Provider can administer\n   its own \"numbering
      space\" (i.e., can make its own assignments of\n   RDs), without conflicting
      with the RD assignments made by any other\n   Service Provider.  An RD consists
      of three fields: a 2-byte type\n   field, an administrator field, and an assigned
      number field.  The\n   value of the type field determines the lengths of the
      other two\n   fields, as well as the semantics of the administrator field.  The\n
      \  administrator field identifies an assigned number authority, and the\n   assigned
      number field contains a number that has been assigned, by\n   the identified
      authority, for a particular purpose.  For example, one\n   could have an RD
      whose administrator field contains an Autonomous\n   System number (ASN), and
      whose (4-byte) number field contains a\n   number assigned by the SP to whom
      that ASN belongs (having been\n   assigned to that SP by the appropriate authority).\n
      \  RDs are given this structure in order to ensure that an SP that\n   provides
      VPN backbone service can always create a unique RD when it\n   needs to do so.
      \ However, the structure is not meaningful to BGP;\n   when BGP compares two
      such address prefixes, it ignores the structure\n   entirely.\n   A PE needs
      to be configured such that routes that lead to a\n   particular CE become associated
      with a particular RD.  The\n   configuration may cause all routes leading to
      the same CE to be\n   associated with the same RD, or it may cause different
      routes to be\n   associated with different RDs, even if they lead to the same
      CE.\n"
    title: 4.1.  The VPN-IPv4 Address Family
  - contents:
    - "4.2.  Encoding of Route Distinguishers\n   As stated, a VPN-IPv4 address consists
      of an 8-byte Route\n   Distinguisher followed by a 4-byte IPv4 address.  The
      RDs are encoded\n   as follows:\n     - Type Field: 2 bytes\n     - Value Field:
      6 bytes\n   The interpretation of the Value field depends on the value of the\n
      \  type field.  At the present time, three values of the type field are\n   defined:
      0, 1, and 2.\n     - Type 0: The Value field consists of two subfields:\n         *
      Administrator subfield: 2 bytes\n         * Assigned Number subfield: 4 bytes\n
      \      The Administrator subfield must contain an Autonomous System\n       number.
      \ If this ASN is from the public ASN space, it must have\n       been assigned
      by the appropriate authority (use of ASN values\n       from the private ASN
      space is strongly discouraged).  The\n       Assigned Number subfield contains
      a number from a numbering space\n       that is administered by the enterprise
      to which the ASN has been\n       assigned by an appropriate authority.\n     -
      Type 1: The Value field consists of two subfields:\n         * Administrator
      subfield: 4 bytes\n         * Assigned Number subfield: 2 bytes\n       The
      Administrator subfield must contain an IP address.  If this\n       IP address
      is from the public IP address space, it must have been\n       assigned by an
      appropriate authority (use of addresses from the\n       private IP address
      space is strongly discouraged).  The Assigned\n       Number subfield contains
      a number from a numbering space which is\n       administered by the enterprise
      to which the IP address has been\n       assigned.\n     - Type 2: The Value
      field consists of two subfields:\n         * Administrator subfield: 4 bytes\n
      \        * Assigned Number subfield: 2 bytes\n       The Administrator subfield
      must contain a 4-byte Autonomous\n       System number [BGP-AS4].  If this ASN
      is from the public ASN\n       space, it must have been assigned by the appropriate
      authority\n       (use of ASN values from the private ASN space is strongly\n
      \      discouraged).  The Assigned Number subfield contains a number\n       from
      a numbering space which is administered by the enterprise to\n       which the
      ASN has been assigned by an appropriate authority.\n"
    title: 4.2.  Encoding of Route Distinguishers
  - contents:
    - "4.3.  Controlling Route Distribution\n   In this section, we discuss the way
      in which the distribution of the\n   VPN-IPv4 routes is controlled.\n   If a
      PE router is attached to a particular VPN (by being attached to\n   a particular
      CE in that VPN), it learns some of that VPN's IP routes\n   from the attached
      CE router.  Routes learned from a CE routing peer\n   over a particular attachment
      circuit may be installed in the VRF\n   associated with that attachment circuit.
      \ Exactly which routes are\n   installed in this manner is determined by the
      way in which the PE\n   learns routes from the CE.  In particular, when the
      PE and CE are\n   routing protocol peers, this is determined by the decision
      process of\n   the routing protocol; this is discussed in Section 7.\n   These
      routes are then converted to VPN-IP4 routes, and \"exported\" to\n   BGP.  If
      there is more than one route to a particular VPN-IP4 address\n   prefix, BGP
      chooses the \"best\" one, using the BGP decision process.\n   That route is
      then distributed by BGP to the set of other PEs that\n   need to know about
      it.  At these other PEs, BGP will again choose the\n   best route for a particular
      VPN-IP4 address prefix.  Then the chosen\n   VPN-IP4 routes are converted back
      into IP routes, and \"imported\" into\n   one or more VRFs.  Whether they are
      actually installed in the VRFs\n   depends on the decision process of the routing
      method used between\n   the PE and those CEs that are associated with the VRF
      in question.\n   Finally, any route installed in a VRF may be distributed to
      the\n   associated CE routers.\n"
    - contents:
      - "4.3.1.  The Route Target Attribute\n   Every VRF is associated with one or
        more Route Target (RT)\n   attributes.\n   When a VPN-IPv4 route is created
        (from an IPv4 route that the PE has\n   learned from a CE) by a PE router,
        it is associated with one or more\n   Route Target attributes.  These are
        carried in BGP as attributes of\n   the route.\n   Any route associated with
        Route Target T must be distributed to every\n   PE router that has a VRF associated
        with Route Target T.  When such a\n   route is received by a PE router, it
        is eligible to be installed in\n   those of the PE's VRFs that are associated
        with Route Target T.\n   (Whether it actually gets installed depends upon
        the outcome of the\n   BGP decision process, and upon the outcome of the decision
        process of\n   the IGP (i.e., the intra-domain routing protocol) running on
        the\n   PE/CE interface.)\n   A Route Target attribute can be thought of as
        identifying a set of\n   sites.  (Though it would be more precise to think
        of it as\n   identifying a set of VRFs.)  Associating a particular Route Target\n
        \  attribute with a route allows that route to be placed in the VRFs\n   that
        are used for routing traffic that is received from the\n   corresponding sites.\n
        \  There is a set of Route Targets that a PE router attaches to a route\n
        \  received from site S; these may be called the \"Export Targets\".  And\n
        \  there is a set of Route Targets that a PE router uses to determine\n   whether
        a route received from another PE router could be placed in\n   the VRF associated
        with site S; these may be called the \"Import\n   Targets\".  The two sets
        are distinct, and need not be the same.  Note\n   that a particular VPN-IPv4
        route is only eligible for installation in\n   a particular VRF if there is
        some Route Target that is both one of\n   the route's Route Targets and one
        of the VRF's Import Targets.\n   The function performed by the Route Target
        attribute is similar to\n   that performed by the BGP Communities attribute.
        \ However, the format\n   of the latter is inadequate for present purposes,
        since it allows\n   only a 2-byte numbering space.  It is desirable to structure
        the\n   format, similar to what we have described for RDs (see Section 4.2),\n
        \  so that a type field defines the length of an administrator field,\n   and
        the remainder of the attribute is a number from the specified\n   administrator's
        numbering space.  This can be done using BGP Extended\n   Communities.  The
        Route Targets discussed herein are encoded as BGP\n   Extended Community Route
        Targets [BGP-EXTCOMM].  They are structured\n   similarly to the RDs.\n   When
        a BGP speaker has received more than one route to the same VPN-\n   IPv4 prefix,
        the BGP rules for route preference are used to choose\n   which VPN-IPv4 route
        is installed by BGP.\n   Note that a route can only have one RD, but it can
        have multiple\n   Route Targets.  In BGP, scalability is improved if one has
        a single\n   route with multiple attributes, as opposed to multiple routes.
        \ One\n   could eliminate the Route Target attribute by creating more routes\n
        \  (i.e., using more RDs), but the scaling properties would be less\n   favorable.\n
        \  How does a PE determine which Route Target attributes to associate\n   with
        a given route?  There are a number of different possible ways.\n   The PE
        might be configured to associate all routes that lead to a\n   specified site
        with a specified Route Target.  Or the PE might be\n   configured to associate
        certain routes leading to a specified site\n   with one Route Target, and
        certain with another.\n   If the PE and the CE are themselves BGP peers (see
        Section 7), then\n   the SP may allow the customer, within limits, to specify
        how its\n   routes are to be distributed.  The SP and the customer would need
        to\n   agree in advance on the set of RTs that are allowed to be attached
        to\n   the customer's VPN routes.  The CE could then attach one or more of\n
        \  those RTs to each IP route that it distributes to the PE.  This gives\n
        \  the customer the freedom to specify in real time, within agreed-upon\n
        \  limits, its route distribution policies.  If the CE is allowed to\n   attach
        RTs to its routes, the PE MUST filter out all routes that\n   contain RTs
        that the customer is not allowed to use.  If the CE is\n   not allowed to
        attach RTs to its routes, but does so anyway, the PE\n   MUST remove the RT
        before converting the customer's route to a VPN-\n   IPv4 route.\n"
      title: 4.3.1.  The Route Target Attribute
    - contents:
      - "4.3.2.  Route Distribution Among PEs by BGP\n   If two sites of a VPN attach
        to PEs that are in the same Autonomous\n   System, the PEs can distribute
        VPN-IPv4 routes to each other by means\n   of an IBGP connection between them.
        \ (The term \"IBGP\" refers to the\n   set of protocols and procedures used
        when there is a BGP connection\n   between two BGP speakers in the same Autonomous
        System.  This is\n   distinguished from \"EBGP\", the set of procedures used
        between two BGP\n   speakers in different Autonomous Systems.)  Alternatively,
        each can\n   have an IBGP connection to a route reflector [BGP-RR].\n   When
        a PE router distributes a VPN-IPv4 route via BGP, it uses its\n   own address
        as the \"BGP next hop\".  This address is encoded as a\n   VPN-IPv4 address
        with an RD of 0.  ([BGP-MP] requires that the next\n   hop address be in the
        same address family as the Network Layer\n   Reachability Information (NLRI).)
        \ It also assigns and distributes an\n   MPLS label.  (Essentially, PE routers
        distribute not VPN-IPv4 routes,\n   but Labeled VPN-IPv4 routes.  Cf. [MPLS-BGP].)
        \ When the PE processes\n   a received packet that has this label at the top
        of the stack, the PE\n   will pop the stack, and process the packet appropriately.\n
        \  The PE may distribute the exact set of routes that appears in the\n   VRF,
        or it may perform summarization and distribute aggregates of\n   those routes,
        or it may do some of one and some of the other.\n   Suppose that a PE has
        assigned label L to route R, and has\n   distributed this label mapping via
        BGP.  If R is an aggregate of a\n   set of routes in the VRF, the PE will
        know that packets from the\n   backbone that arrive with this label must have
        their destination\n   addresses looked up in a VRF.  When the PE looks up
        the label in its\n   Label Information Base, it learns which VRF must be used.
        \ On the\n   other hand, if R is not an aggregate, then when the PE looks
        up the\n   label, it learns the egress attachment circuit, as well as the\n
        \  encapsulation header for the packet.  In this case, no lookup in the\n
        \  VRF is done.\n   We would expect that the most common case would be the
        case where the\n   route is NOT an aggregate.  The case where it is an aggregate
        can be\n   very useful though if the VRF contains a large number of host routes\n
        \  (e.g., as in dial-in), or if the VRF has an associated Local Area\n   Network
        (LAN) interface (where there is a different outgoing layer 2\n   header for
        each system on the LAN, but a route is not distributed for\n   each such system).\n
        \  Whether or not each route has a distinct label is an implementation\n   matter.
        \ There are a number of possible algorithms one could use to\n   determine
        whether two routes get assigned the same label:\n     - One may choose to
        have a single label for an entire VRF, so that\n       a single label is shared
        by all the routes from that VRF.  Then\n       when the egress PE receives
        a packet with that label, it must\n       look up the packet's IP destination
        address in that VRF (the\n       packet's \"egress VRF\"), in order to determine
        the packet's egress\n       attachment circuit and the corresponding data
        link encapsulation.\n     - One may choose to have a single label for each
        attachment\n       circuit, so that a single label is shared by all the routes
        with\n       the same \"outgoing attachment circuit\".  This enables one to\n
        \      avoid doing a lookup in the egress VRF, though some sort of\n       lookup
        may need to be done in order to determine the data link\n       encapsulation,
        e.g., an Address Resolution Protocol (ARP) lookup.\n     - One may choose
        to have a distinct label for each route.  Then if\n       a route is potentially
        reachable over more than one attachment\n       circuit, the PE/CE routing
        can switch the preferred path for a\n       route from one attachment circuit
        to another, without there being\n       any need to distribute new a label
        for that route.\n   There may be other possible algorithms as well.  The choice
        of\n   algorithm is entirely at the discretion of the egress PE, and is\n
        \  otherwise transparent.\n   In using BGP-distributed MPLS labels in this
        manner, we presuppose\n   that an MPLS packet carrying such a label can be
        tunneled from the\n   router that installs the corresponding BGP-distributed
        route to the\n   router that is the BGP next hop of that route.  This requires
        either\n   that a label switched path exist between those two routers or else\n
        \  that some other tunneling technology (e.g., [MPLS-in-IP-GRE]) can be\n
        \  used between them.\n   This tunnel may follow a \"best effort\" route,
        or it may follow a\n   traffic-engineered route.  Between a given pair of
        routers, there may\n   be one such tunnel, or there may be several, perhaps
        with different\n   Quality of Service (QoS) characteristics.  All that matters
        for the\n   VPN architecture is that some such tunnel exists.  To ensure\n
        \  interoperability among systems that implement this VPN architecture\n   using
        MPLS label switched paths as the tunneling technology, all such\n   systems
        MUST support Label Distribution Protocol (LDP) [MPLS-LDP].\n   In particular,
        Downstream Unsolicited mode MUST be supported on\n   interfaces that are neither
        Label Controlled ATM (LC-ATM) [MPLS-ATM]\n   nor Label Controlled Frame Relay
        (LC-FR) [MPLS-FR] interfaces, and\n   Downstream on Demand mode MUST be supported
        on LC-ATM interfaces and\n   LC-FR interfaces.\n   If the tunnel follows a
        best-effort route, then the PE finds the\n   route to the remote endpoint
        by looking up its IP address in the\n   default forwarding table.\n   A PE
        router, UNLESS it is a route reflector (see Section 4.3.3) or an\n   Autonomous
        System Border Router (ASBR) for an inter-provider VPN (see\n   Section 10),
        should not install a VPN-IPv4 route unless it has at\n   least one VRF with
        an Import Target identical to one of the route's\n   Route Target attributes.
        \ Inbound filtering should be used to cause\n   such routes to be discarded.
        \ If a new Import Target is later added\n   to one of the PE's VRFs (a \"VPN
        Join\" operation), it must then\n   acquire the routes it may previously have
        discarded.  This can be\n   done using the refresh mechanism described in
        [BGP-RFSH].  The\n   outbound route filtering mechanism of [BGP-ORF] can also
        be used to\n   advantage to make the filtering more dynamic.\n   Similarly,
        if a particular Import Target is no longer present in any\n   of a PE's VRFs
        (as a result of one or more \"VPN Prune\" operations),\n   the PE may discard
        all routes that, as a result, no longer have any\n   of the PE's VRF's Import
        Targets as one of their Route Target\n   attributes.\n   A router that is
        not attached to any VPN and that is not a Route\n   Reflector (i.e., a P router)
        never installs any VPN-IPv4 routes at\n   all.\n   Note that VPN Join and
        Prune operations are non-disruptive and do not\n   require any BGP connections
        to be brought down, as long as the\n   refresh mechanism of [BGP-RFSH] is
        used.\n   As a result of these distribution rules, no one PE ever needs to\n
        \  maintain all routes for all VPNs; this is an important scalability\n   consideration.\n"
      title: 4.3.2.  Route Distribution Among PEs by BGP
    - contents:
      - "4.3.3.  Use of Route Reflectors\n   Rather than having a complete IBGP mesh
        among the PEs, it is\n   advantageous to make use of BGP Route Reflectors
        [BGP-RR] to improve\n   scalability.  All the usual techniques for using route
        reflectors to\n   improve scalability (e.g., route reflector hierarchies)
        are\n   available.\n   Route reflectors are the only systems that need to
        have routing\n   information for VPNs to which they are not directly attached.\n
        \  However, there is no need to have any one route reflector know all\n   the
        VPN-IPv4 routes for all the VPNs supported by the backbone.\n   We outline
        below two different ways to partition the set of VPN-IPv4\n   routes among
        a set of route reflectors.\n      1. Each route reflector is preconfigured
        with a list of Route\n         Targets.  For redundancy, more than one route
        reflector may be\n         preconfigured with the same list.  A route reflector
        uses the\n         preconfigured list of Route Targets to construct its inbound\n
        \        route filtering.  The route reflector may use the techniques of\n
        \        [BGP-ORF] to install on each of its peers (regardless of\n         whether
        the peer is another route reflector or a PE) the set of\n         Outbound
        Route Filters (ORFs) that contains the list of its\n         preconfigured
        Route Targets.  Note that route reflectors should\n         accept ORFs from
        other route reflectors, which means that route\n         reflectors should
        advertise the ORF capability to other route\n         reflectors.\n         A
        service provider may modify the list of preconfigured Route\n         Targets
        on a route reflector.  When this is done, the route\n         reflector modifies
        the ORFs it installs on all of its IBGP\n         peers.  To reduce the frequency
        of configuration changes on\n         route reflectors, each route reflector
        may be preconfigured\n         with a block of Route Targets.  This way, when
        a new Route\n         Target is needed for a new VPN, there is already one
        or more\n         route reflectors that are (pre)configured with this Route\n
        \        Target.\n         Unless a given PE is a client of all route reflectors,
        when a\n         new VPN is added to the PE (\"VPN Join\"), it will need to
        become\n         a client of the route reflector(s) that maintain routes for\n
        \        that VPN.  Likewise, deleting an existing VPN from the PE (\"VPN\n
        \        Prune\") may result in a situation where the PE no longer needs\n
        \        to be a client of some route reflector(s).  In either case, the\n
        \        Join or Prune operation is non-disruptive (as long as\n         [BGP-RFSH]
        is used, and never requires a BGP connection to be\n         brought down,
        only to be brought right back up.\n         (By \"adding a new VPN to a PE\",
        we really mean adding a new\n         import Route Target to one of its VRFs,
        or adding a new VRF\n         with an import Route Target not had by any of
        the PE's other\n         VRFs.)\n      2. Another method is to have each PE
        be a client of some subset of\n         the route reflectors.  A route reflector
        is not preconfigured\n         with the list of Route Targets, and does not
        perform inbound\n         route filtering of routes received from its clients
        (PEs);\n         rather, it accepts all the routes received from all of its\n
        \        clients (PEs).  The route reflector keeps track of the set of\n         the
        Route Targets carried by all the routes it receives.  When\n         the route
        reflector receives from its client a route with a\n         Route Target that
        is not in this set, this Route Target is\n         immediately added to the
        set.  On the other hand, when the\n         route reflector no longer has
        any routes with a particular\n         Route Target that is in the set, the
        route reflector should\n         delay (by a few hours) the deletion of this
        Route Target from\n         the set.\n         The route reflector uses this
        set to form the inbound route\n         filters that it applies to routes
        received from other route\n         reflectors.  The route reflector may also
        use ORFs to install\n         the appropriate outbound route filtering on
        other route\n         reflectors.  Just like with the first approach, a route\n
        \        reflector should accept ORFs from other route reflectors.  To\n         accomplish
        this, a route reflector advertises ORF capability to\n         other route
        reflectors.\n         When the route reflector changes the set, it should
        immediately\n         change its inbound route filtering.  In addition, if
        the route\n         reflector uses ORFs, then the ORFs have to be immediately\n
        \        changed to reflect the changes in the set.  If the route\n         reflector
        doesn't use ORFs, and a new Route Target is added to\n         the set, the
        route reflector, after changing its inbound route\n         filtering, must
        issue BGP Refresh to other route reflectors.\n         The delay of \"a few
        hours\" mentioned above allows a route\n         reflector to hold onto routes
        with a given RT, even after it\n         loses the last of its clients that
        are interested in such\n         routes.  This protects against the need to
        reacquire all such\n         routes if the clients' \"disappearance\" is only
        temporary.\n         With this procedure, VPN Join and Prune operations are
        also\n         non-disruptive.\n         Note that this technique will not
        work properly if some client\n         PE has a VRF with an import Route Target
        that is not one of its\n         export Route Targets.\n   In these procedures,
        a PE router which attaches to a particular VPN\n   \"auto-discovers\" the
        other PEs that attach to the same VPN.  When a\n   new PE router is added,
        or when an existing PE router attaches to a\n   new VPN, no reconfiguration
        of other PE routers is needed.\n   Just as there is no one PE router that
        needs to know all the VPN-IPv4\n   routes supported over the backbone, these
        distribution rules ensure\n   that there is no one Route Reflector (RR) that
        needs to know all the\n   VPN-IPv4 routes supported over the backbone.  As
        a result, the total\n   number of such routes that can be supported over the
        backbone is not\n   bounded by the capacity of any single device, and therefore
        can\n   increase virtually without bound.\n"
      title: 4.3.3.  Use of Route Reflectors
    - contents:
      - "4.3.4.  How VPN-IPv4 NLRI Is Carried in BGP\n   The BGP Multiprotocol Extensions
        [BGP-MP] are used to encode the\n   NLRI.  If the Address Family Identifier
        (AFI) field is set to 1, and\n   the Subsequent Address Family Identifier
        (SAFI) field is set to 128,\n   the NLRI is an MPLS-labeled VPN-IPv4 address.
        \ AFI 1 is used since\n   the network layer protocol associated with the NLRI
        is still IP.\n   Note that this VPN architecture does not require the capability
        to\n   distribute unlabeled VPN-IPv4 addresses.\n   In order for two BGP speakers
        to exchange labeled VPN-IPv4 NLRI, they\n   must use BGP Capabilities Advertisement
        to ensure that they both are\n   capable of properly processing such NLRI.
        \ This is done as specified\n   in [BGP-MP], by using capability code 1 (multiprotocol
        BGP), with an\n   AFI of 1 and an SAFI of 128.\n   The labeled VPN-IPv4 NLRI
        itself is encoded as specified in\n   [MPLS-BGP], where the prefix consists
        of an 8-byte RD followed by an\n   IPv4 prefix.\n"
      title: 4.3.4.  How VPN-IPv4 NLRI Is Carried in BGP
    - contents:
      - "4.3.5.  Building VPNs Using Route Targets\n   By setting up the Import Targets
        and Export Targets properly, one can\n   construct different kinds of VPNs.\n
        \  Suppose it is desired to create a fully meshed closed user group,\n   i.e.,
        a set of sites where each can send traffic directly to the\n   other, but
        traffic cannot be sent to or received from other sites.\n   Then each site
        is associated with a VRF, a single Route Target\n   attribute is chosen, that
        Route Target is assigned to each VRF as\n   both the Import Target and the
        Export Target, and that Route Target\n   is not assigned to any other VRFs
        as either the Import Target or the\n   Export Target.\n   Alternatively, suppose
        one desired, for whatever reason, to create a\n   \"hub and spoke\" kind of
        VPN.  This could be done by the use of two\n   Route Target values, one meaning
        \"Hub\" and one meaning \"Spoke\".  At\n   the VRFs attached to the hub sites,
        \"Hub\" is the Export Target and\n   \"Spoke\" is the Import Target.  At the
        VRFs attached to the spoke\n   site, \"Hub\" is the Import Target and \"Spoke\"
        is the Export Target.\n   Thus, the methods for controlling the distribution
        of routing\n   information among various sets of sites are very flexible,
        which in\n   turn provides great flexibility in constructing VPNs.\n"
      title: 4.3.5.  Building VPNs Using Route Targets
    - contents:
      - "4.3.6.  Route Distribution Among VRFs in a Single PE\n   It is possible to
        distribute routes from one VRF to another, even if\n   both VRFs are in the
        same PE, even though in this case one cannot say\n   that the route has been
        distributed by BGP.  Nevertheless, the\n   decision to distribute a particular
        route from one VRF to another\n   within a single PE is the same decision
        that would be made if the\n   VRFs were on different PEs.  That is, it depends
        on the Route Target\n   attribute that is assigned to the route (or would
        be assigned if the\n   route were distributed by BGP), and the import target
        of the second\n   VRF.\n"
      title: 4.3.6.  Route Distribution Among VRFs in a Single PE
    title: 4.3.  Controlling Route Distribution
  title: 4.  VPN Route Distribution via BGP
- contents:
  - "5.  Forwarding\n   If the intermediate routers in the backbone do not have any\n
    \  information about the routes to the VPNs, how are packets forwarded\n   from
    one VPN site to another?\n   When a PE receives an IP packet from a CE device,
    it chooses a\n   particular VRF in which to look up the packet's destination address.\n
    \  This choice is based on the packet's ingress attachment circuit.\n   Assume
    that a match is found.  As a result we learn the packet's\n   \"next hop\".\n
    \  If the packet's next hop is reached directly over a VRF attachment\n   circuit
    from this PE (i.e., the packet's egress attachment circuit is\n   on the same
    PE as its ingress attachment circuit), then the packet is\n   sent on the egress
    attachment circuit, and no MPLS labels are pushed\n   onto the packet's label
    stack.\n   If the ingress and egress attachment circuits are on the same PE, but\n
    \  are associated with different VRFs, and if the route that best\n   matches
    the destination address in the ingress attachment circuit's\n   VRF is an aggregate
    of several routes in the egress attachment\n   circuit's VRF, it may be necessary
    to look up the packet's\n   destination address in the egress VRF as well.\n   If
    the packet's next hop is NOT reached through a VRF attachment\n   circuit, then
    the packet must travel at least one hop through the\n   backbone.  The packet
    thus has a \"BGP Next Hop\", and the BGP Next Hop\n   will have assigned an MPLS
    label for the route that best matches the\n   packet's destination address.  Call
    this label the \"VPN route label\".\n   The IP packet is turned into an MPLS packet
    with the VPN route label\n   as the sole label on the label stack.\n   The packet
    must then be tunneled to the BGP Next Hop.\n   If the backbone supports MPLS,
    this is done as follows:\n     - The PE routers (and any Autonomous System border
    routers) that\n       redistribute VPN-IPv4 addresses need to insert /32 address\n
    \      prefixes for themselves into the IGP routing tables of the\n       backbone.
    \ This enables MPLS, at each node in the backbone\n       network, to assign a
    label corresponding to the route to each PE\n       router.  To ensure interoperability
    among different\n       implementations, it is required to support LDP for setting
    up the\n       label switched paths across the backbone.  However, other methods\n
    \      of setting up these label switched paths are also possible.\n       (Some
    of these other methods may not require the presence of the\n       /32 address
    prefixes in the IGP.)\n     - If there are any traffic engineering tunnels to
    the BGP next hop,\n       and if one or more of those is available for use by
    the packet in\n       question, one of these tunnels is chosen.  This tunnel will
    be\n       associated with an MPLS label, the \"tunnel label\".  The tunnel\n
    \      label gets pushed on the MPLS label stack, and the packet is\n       forwarded
    to the tunnel's next hop.\n     - Otherwise,\n         * The packet will have
    an \"IGP Next Hop\", which is the next hop\n           along the IGP route to
    the BGP Next Hop.\n         * If the BGP Next Hop and the IGP Next Hop are the
    same, and if\n           penultimate hop popping is used, the packet is then sent
    to\n           the IGP Next Hop, carrying only the VPN route label.\n         *
    Otherwise, the IGP Next Hop will have assigned a label for\n           the route
    that best matches the address of the BGP Next Hop.\n           Call this the \"tunnel
    label\".  The tunnel label gets pushed\n           on as the packet's top label.
    \ The packet is then forwarded\n           to the IGP Next Hop.\n     - MPLS will
    then carry the packet across the backbone to the BGP\n       Next Hop, where the
    VPN label will be examined.\n   If the backbone does not support MPLS, the MPLS
    packet carrying only\n   the VPN route label may be tunneled to the BGP Next Hop
    using the\n   techniques of [MPLS-in-IP-GRE].  When the packet emerges from the\n
    \  tunnel, it will be at the BGP Next Hop, where the VPN route label\n   will
    be examined.\n   At the BGP Next Hop, the treatment of the packet depends on the
    VPN\n   route label (see Section 4.3.2).  In many cases, the PE will be able\n
    \  to determine, from this label, the attachment circuit over which the\n   packet
    should be transmitted (to a CE device), as well as the proper\n   data link layer
    header for that interface.  In other cases, the PE\n   may only be able to determine
    that the packet's destination address\n   needs to be looked up in a particular
    VRF before being forwarded to a\n   CE device.  There are also intermediate cases
    in which the VPN route\n   label may determine the packet's egress attachment
    circuit, but a\n   lookup (e.g., ARP) still needs to be done in order to determine
    the\n   packet's data link header on that attachment circuit.\n   Information
    in the MPLS header itself, and/or information associated\n   with the label, may
    also be used to provide QoS on the interface to\n   the CE.\n   In any event,
    if the packet was an unlabeled IP packet when it\n   arrived at its ingress PE,
    it will again be an unlabeled packet when\n   it leaves its egress PE.\n   The
    fact that packets with VPN route labels are tunneled through the\n   backbone
    is what makes it possible to keep all the VPN routes out of\n   the P routers.
    \ This is crucial to ensuring the scalability of the\n   scheme.  The backbone
    does not even need to have routes to the CEs,\n   only to the PEs.\n   With respect
    to the tunnels, it is worth noting that this\n   specification:\n     - DOES NOT
    require that the tunnels be point-to-point; multipoint-\n       to-point can be
    used;\n     - DOES NOT require that there be any explicit setup of the tunnels,\n
    \      either via signaling or via manual configuration;\n     - DOES NOT require
    that there be any tunnel-specific signaling;\n     - DOES NOT require that there
    be any tunnel-specific state in the P\n       or PE routers, beyond what is necessary
    to maintain the routing\n       information and (if used) the MPLS label information.\n
    \  Of course, this specification is compatible with the use of point-\n   to-point
    tunnels that must be explicitly configured and/or signaled,\n   and in some situations
    there may be reasons for using such tunnels.\n   The considerations that are relevant
    to choosing a particular\n   tunneling technology are outside the scope of this
    specification.\n"
  title: 5.  Forwarding
- contents:
  - "6.  Maintaining Proper Isolation of VPNs\n   To maintain proper isolation of
    one VPN from another, it is important\n   that no router in the backbone accept
    a tunneled packet from outside\n   the backbone, unless it is sure that both endpoints
    of that tunnel\n   are outside the backbone.\n   If MPLS is being used as the
    tunneling technology, this means that a\n   router in the backbone MUST NOT accept
    a labeled packet from any\n   adjacent non-backbone device unless the following
    two conditions\n   hold:\n      1. the label at the top of the label stack was
    actually\n         distributed by that backbone router to that non-backbone\n
    \        device, and\n      2. the backbone router can determine that use of that
    label will\n         cause the packet to leave the backbone before any labels
    lower\n         in the stack will be inspected, and before the IP header will\n
    \        be inspected.\n   The first condition ensure that any labeled packets
    received from\n   non-backbone routers have a legitimate and properly assigned
    label at\n   the top of the label stack.  The second condition ensures that the\n
    \  backbone routers will never look below that top label.  Of course,\n   the
    simplest way to meet these two conditions is just to have the\n   backbone devices
    refuse to accept labeled packets from non-backbone\n   devices.\n   If MPLS is
    not being used as the tunneling technology, then filtering\n   must be done to
    ensure that an MPLS-in-IP or MPLS-in-GRE packet can\n   be accepted into the backbone
    only if the packet's IP destination\n   address will cause it to be sent outside
    the backbone.\n"
  title: 6.  Maintaining Proper Isolation of VPNs
- contents:
  - "7.  How PEs Learn Routes from CEs\n   The PE routers that attach to a particular
    VPN need to know, for each\n   attachment circuit leading to that VPN, which of
    the VPN's addresses\n   should be reached over that attachment circuit.\n   The
    PE translates these addresses into VPN-IPv4 addresses, using a\n   configured
    RD.  The PE then treats these VPN-IPv4 routes as input to\n   BGP.  Routes from
    a VPN site are NOT leaked into the backbone's IGP.\n   Exactly which PE/CE route
    distribution techniques are possible\n   depends on whether or not a particular
    CE is in a \"transit VPN\".  A\n   \"transit VPN\" is one that contains a router
    that receives routes from\n   a \"third party\" (i.e., from a router that is not
    in the VPN, but is\n   not a PE router) and that redistributes those routes to
    a PE router.\n   A VPN that is not a transit VPN is a \"stub VPN\".  The vast
    majority\n   of VPNs, including just about all corporate enterprise networks,\n
    \  would be expected to be \"stubs\" in this sense.\n   The possible PE/CE distribution
    techniques are:\n      1. Static routing (i.e., configuration) may be used. (This
    is\n         likely to be useful only in stub VPNs.)\n      2. PE and CE routers
    may be Routing Information Protocol (RIP)\n         [RIP] peers, and the CE may
    use RIP to tell the PE router the\n         set of address prefixes that are reachable
    at the CE router's\n         site.  When RIP is configured in the CE, care must
    be taken to\n         ensure that address prefixes from other sites (i.e., address\n
    \        prefixes learned by the CE router from the PE router) are never\n         advertised
    to the PE.  More precisely:  if a PE router, say,\n         PE1, receives a VPN-IPv4
    route R1, and as a result distributes\n         an IPv4 route R2 to a CE, then
    R2 must not be distributed back\n         from that CE's site to a PE router,
    say, PE2, (where PE1 and\n         PE2 may be the same router or different routers),
    unless PE2\n         maps R2 to a VPN-IPv4 route that is different than (i.e.,\n
    \        contains a different RD than) R1.\n      3. The PE and CE routers may
    be OSPF peers.  A PE router that is\n         an OSPF peer of a CE router appears,
    to the CE router, to be an\n         area 0 router.  If a PE router is an OSPF
    peer of CE routers\n         that are in distinct VPNs, the PE must of course
    be running\n         multiple instances of OSPF.\n         IPv4 routes that the
    PE learns from the CE via OSPF are\n         redistributed into BGP as VPN-IPv4
    routes.  Extended Community\n         attributes are used to carry, along with
    the route, all the\n         information needed to enable the route to be distributed
    to\n         other CE routers in the VPN in the proper type of OSPF Link\n         State
    Advertisement (LSA).  OSPF route tagging is used to\n         ensure that routes
    received from the MPLS/BGP backbone are not\n         sent back into the backbone.\n
    \        Specification of the complete set of procedures for the use of\n         OSPF
    between PE and CE can be found in [VPN-OSPF] and\n         [OSPF-2547-DNBIT].\n
    \     4. The PE and CE routers may be BGP peers, and the CE router may\n         use
    BGP (in particular, EBGP to tell the PE router the set of\n         address prefixes
    that are at the CE router's site. (This\n         technique can be used in stub
    VPNs or transit VPNs.)\n         This technique has a number of advantages over
    the others:\n            a) Unlike the IGP alternatives, this does not require
    the PE\n               to run multiple routing algorithm instances in order to\n
    \              talk to multiple CEs.\n            b) BGP is explicitly designed
    for just this function:\n               passing routing information between systems
    run by\n               different administrations.\n            c) If the site
    contains \"BGP backdoors\", i.e., routers with\n               BGP connections
    to routers other than PE routers, this\n               procedure will work correctly
    in all circumstances.  The\n               other procedures may or may not work,
    depending on the\n               precise circumstances.\n            d) Use of
    BGP makes it easy for the CE to pass attributes of\n               the routes
    to the PE.  A complete specification of the\n               set of attributes
    and their use is outside the scope of\n               this document.  However,
    some examples of the way this\n               may be used are the following:\n
    \                - The CE may suggest a particular Route Target for each\n                   route,
    from among the Route Targets that the PE is\n                   authorized to
    attach to the route.  The PE would then\n                   attach only the suggested
    Route Target, rather than\n                   the full set.  This gives the CE
    administrator some\n                   dynamic control of the distribution of
    routes from\n                   the CE.\n                 - Additional types of
    Extended Community attributes may\n                   be defined, where the intention
    is to have those\n                   attributes passed transparently (i.e., without
    being\n                   changed by the PE routers) from CE to CE.  This would\n
    \                  allow CE administrators to implement additional route\n                   filtering,
    beyond that which is done by the PEs.\n                   This additional filtering
    would not require\n                   coordination with the SP.\n         On the
    other hand, using BGP may be something new for the CE\n         administrators.\n
    \        If a site is not in a transit VPN, note that it need not have a\n         unique
    Autonomous System Number (ASN).  Every CE whose site is\n         not in a transit
    VPN can use the same ASN.  This can be chosen\n         from the private ASN space,
    and it will be stripped out by the\n         PE.  Routing loops are prevented
    by use of the Site of Origin\n         attribute (see below).\n         What if
    a set of sites constitutes a transit VPN?  This will\n         generally be the
    case only if the VPN is itself an Internet\n         Service Provider's (ISP's)
    network, where the ISP is itself\n         buying backbone services from another
    SP.  The latter SP may be\n         called a \"carrier's carrier\".  In this case,
    the best way to\n         provide the VPN is to have the CE routers support MPLS,
    and to\n         use the technique described in Section 9.\n   When we do not
    need to distinguish among the different ways in which\n   a PE can be informed
    of the address prefixes that exist at a given\n   site, we will simply say that
    the PE has \"learned\" the routes from\n   that site.  This includes the case
    where the PE has been manually\n   configured with the routes.\n   Before a PE
    can redistribute a VPN-IPv4 route learned from a site, it\n   must assign a Route
    Target attribute (see Section 4.3.1) to the\n   route, and it may assign a Site
    of Origin attribute to the route.\n   The Site of Origin attribute, if used, is
    encoded as a Route Origin\n   Extended Community [BGP-EXTCOMM].  The purpose of
    this attribute is\n   to uniquely identify the set of routes learned from a particular\n
    \  site.  This attribute is needed in some cases to ensure that a route\n   learned
    from a particular site via a particular PE/CE connection is\n   not distributed
    back to the site through a different PE/CE\n   connection.  It is particularly
    useful if BGP is being used as the\n   PE/CE protocol, but different sites have
    not been assigned distinct\n   ASNs.\n"
  title: 7.  How PEs Learn Routes from CEs
- contents:
  - "8.  How CEs Learn Routes from PEs\n   In this section, we assume that the CE
    device is a router.\n   If the PE places a particular route in the VRF it uses
    to route\n   packets received from a particular CE, then in general, the PE may\n
    \  distribute that route to the CE.  Of course, the PE may distribute\n   that
    route to the CE only if this is permitted by the rules of the\n   PE/CE protocol.
    \ (For example, if a particular PE/CE protocol has\n   \"split horizon\", certain
    routes in the VRF cannot be redistributed\n   back to the CE.)  We add one more
    restriction on the distribution of\n   routes from PE to CE: if a route's Site
    of Origin attribute\n   identifies a particular site, that route must never be
    redistributed\n   to any CE at that site.\n   In most cases, however, it will
    be sufficient for the PE to simply\n   distribute the default route to the CE.
    \ (In some cases, it may even\n   be sufficient for the CE to be configured with
    a default route\n   pointing to the PE.)  This will generally work at any site
    that does\n   not itself need to distribute the default route to other sites.\n
    \  (E.g., if one site in a corporate VPN has the corporation's access to\n   the
    Internet, that site might need to have default distributed to the\n   other site,
    but one could not distribute default to that site\n   itself.)\n   Whatever procedure
    is used to distribute routes from CE to PE will\n   also be used to distribute
    routes from PE to CE.\n"
  title: 8.  How CEs Learn Routes from PEs
- contents:
  - "9.  Carriers' Carriers\n   Sometimes a VPN may actually be the network of an
    ISP, with its own\n   peering and routing policies.  Sometimes a VPN may be the
    network of\n   an SP that is offering VPN services in turn to its own customers.\n
    \  VPNs like these can also obtain backbone service from another SP, the\n   \"carrier's
    carrier\", using essentially the same methods described in\n   this document.
    \ However, it is necessary in these cases that the CE\n   routers support MPLS.
    \ In particular:\n     - The CE routers should distribute to the PE routers ONLY
    those\n       routes that are internal to the VPN.  This allows the VPN to be\n
    \      handled as a stub VPN.\n     - The CE routers should support MPLS, in that
    they should be able\n       to receive labels from the PE routers, and send labeled
    packets\n       to the PE routers.  They do not need to distribute labels of\n
    \      their own, though.\n     - The PE routers should distribute, to the CE
    routers, labels for\n       the routes they distribute to the CE routers.\n       The
    PE must not distribute the same label to two different CEs\n       unless one
    of the following conditions holds:\n         * The two CEs are associated with
    exactly the same set of VRFs;\n         * The PE maintains a different Incoming
    Label Map ([MPLS-ARCH])\n           for each CE.\n       Further, when the PE
    receives a labeled packet from a CE, it must\n       verify that the top label
    is one that was distributed to that CE.\n     - Routers at the different sites
    should establish BGP connections\n       among themselves for the purpose of exchanging
    external routes\n       (i.e., routes that lead outside of the VPN).\n     - All
    the external routes must be known to the CE routers.\n   Then when a CE router
    looks up a packet's destination address, the\n   routing lookup will resolve to
    an internal address, usually the\n   address of the packet's BGP next hop.  The
    CE labels the packet\n   appropriately and sends the packet to the PE.  The PE,
    rather than\n   looking up the packet's IP destination address in a VRF, uses
    the\n   packet's top MPLS label to select the BGP next hop.  As a result, if\n
    \  the BGP next hop is more than one hop away, the top label will be\n   replaced
    by two labels, a tunnel label and a VPN route label.  If the\n   BGP next hop
    is one hop away, the top label may be replaced by just\n   the VPN route label.
    \ If the ingress PE is also the egress PE, the\n   top label will just be popped.
    \ When the packet is sent from its\n   egress PE to a CE, the packet will have
    one fewer MPLS labels than it\n   had when it was first received by its ingress
    PE.\n   In the above procedure, the CE routers are the only routers in the\n   VPN
    that need to support MPLS.  If, on the other hand, all the\n   routers at a particular
    VPN site support MPLS, then it is no longer\n   required that the CE routers know
    all the external routes.  All that\n   is required is that the external routes
    be known to whatever routers\n   are responsible for putting the label stack on
    a hitherto unlabeled\n   packet and that there be label switched path that leads
    from those\n   routers to their BGP peers at other sites.  In this case, for each\n
    \  internal route that a CE router distributes to a PE router, it must\n   also
    distribute a label.\n"
  title: 9.  Carriers' Carriers
- contents:
  - "10.  Multi-AS Backbones\n   What if two sites of a VPN are connected to different
    Autonomous\n   Systems (e.g., because the sites are connected to different SPs)?\n
    \  The PE routers attached to that VPN will then not be able to maintain\n   IBGP
    connections with each other, or with a common route reflector.\n   Rather, there
    needs to be some way to use EBGP to distribute VPN-IPv4\n   addresses.\n   There
    are a number of different ways of handling this case, which we\n   present in
    order of increasing scalability.\n      a) VRF-to-VRF connections at the AS (Autonomous
    System) border\n         routers.\n         In this procedure, a PE router in
    one AS attaches directly to a\n         PE router in another.  The two PE routers
    will be attached by\n         multiple sub-interfaces, at least one for each of
    the VPNs\n         whose routes need to be passed from AS to AS.  Each PE will\n
    \        treat the other as if it were a CE router.  That is, the PEs\n         associate
    each such sub-interface with a VRF, and use EBGP to\n         distribute unlabeled
    IPv4 addresses to each other.\n         This is a procedure that \"just works\",
    and that does not\n         require MPLS at the border between ASes.  However,
    it does not\n         scale as well as the other procedures discussed below.\n
    \     b) EBGP redistribution of labeled VPN-IPv4 routes from AS to\n         neighboring
    AS.\n         In this procedure, the PE routers use IBGP to redistribute\n         labeled
    VPN-IPv4 routes either to an Autonomous System Border\n         Router (ASBR),
    or to a route reflector of which an ASBR is a\n         client.  The ASBR then
    uses EBGP to redistribute those labeled\n         VPN-IPv4 routes to an ASBR in
    another AS, which in turn\n         distributes them to the PE routers in that
    AS, or perhaps to\n         another ASBR which in turn distributes them, and so
    on.\n         When using this procedure, VPN-IPv4 routes should only be\n         accepted
    on EBGP connections at private peering points, as part\n         of a trusted
    arrangement between SPs.  VPN-IPv4 routes should\n         neither be distributed
    to nor accepted from the public\n         Internet, or from any BGP peers that
    are not trusted.  An ASBR\n         should never accept a labeled packet from
    an EBGP peer unless\n         it has actually distributed the top label to that
    peer.\n         If there are many VPNs having sites attached to different\n         Autonomous
    Systems, there does not need to be a single ASBR\n         between those two ASes
    that holds all the routes for all the\n         VPNs; there can be multiple ASBRs,
    each of which holds only the\n         routes for a particular subset of the VPNs.\n
    \        This procedure requires that there be a label switched path\n         leading
    from a packet's ingress PE to its egress PE.  Hence the\n         appropriate
    trust relationships must exist between and among\n         the set of ASes along
    the path.  Also, there must be agreement\n         among the set of SPs as to
    which border routers need to receive\n         routes with which Route Targets.\n
    \     c) Multi-hop EBGP redistribution of labeled VPN-IPv4 routes\n         between
    source and destination ASes, with EBGP redistribution\n         of labeled IPv4
    routes from AS to neighboring AS.\n         In this procedure, VPN-IPv4 routes
    are neither maintained nor\n         distributed by the ASBRs.  An ASBR must maintain
    labeled IPv4\n         /32 routes to the PE routers within its AS.  It uses EBGP
    to\n         distribute these routes to other ASes.  ASBRs in any transit\n         ASes
    will also have to use EBGP to pass along the labeled /32\n         routes.  This
    results in the creation of a label switched path\n         from the ingress PE
    router to the egress PE router.  Now PE\n         routers in different ASes can
    establish multi-hop EBGP\n         connections to each other, and can exchange
    VPN-IPv4 routes\n         over those connections.\n         If the /32 routes
    for the PE routers are made known to the P\n         routers of each AS, everything
    works normally.  If the /32\n         routes for the PE routers are NOT made known
    to the P routers\n         (other than the ASBRs), then this procedure requires
    a packet's\n         ingress PE to put a three-label stack on it.  The bottom
    label\n         is assigned by the egress PE, corresponding to the packet's\n
    \        destination address in a particular VRF.  The middle label is\n         assigned
    by the ASBR, corresponding to the /32 route to the\n         egress PE.  The top
    label is assigned by the ingress PE's IGP\n         Next Hop, corresponding to
    the /32 route to the ASBR.\n         To improve scalability, one can have the
    multi-hop EBGP\n         connections exist only between a route reflector in one
    AS and\n         a route reflector in another.  (However, when the route\n         reflectors
    distribute routes over this connection, they do not\n         modify the BGP next
    hop attribute of the routes.)  The actual\n         PE routers would then only
    have IBGP connections to the route\n         reflectors in their own AS.\n         This
    procedure is very similar to the \"carrier's carrier\"\n         procedures described
    in Section 9.  Like the previous\n         procedure, it requires that there be
    a label switched path\n         leading from a packet's ingress PE to its egress
    PE.\n"
  title: 10.  Multi-AS Backbones
- contents:
  - "11.  Accessing the Internet from a VPN\n   Many VPN sites will need to be able
    to access the public Internet, as\n   well as to access other VPN sites.  The
    following describes some of\n   the alternative ways of doing this.\n      1.
    In some VPNs, one or more of the sites will obtain Internet\n         access by
    means of an \"Internet gateway\" (perhaps a firewall)\n         attached to a
    non-VRF interface to an ISP.  The ISP may or may\n         not be the same organization
    as the SP that is providing the\n         VPN service.  Traffic to/from the Internet
    gateway would then\n         be routed according to the PE router's default forwarding\n
    \        table.\n         In this case, the sites that have Internet access may
    be\n         distributing a default route to their PEs, which in turn\n         redistribute
    it to other PEs and hence into other sites of the\n         VPN.  This provides
    Internet access for all of the VPN's sites.\n         In order to properly handle
    traffic from the Internet, the ISP\n         must distribute, to the Internet,
    routes leading to addresses\n         that are within the VPN.  This is completely
    independent of any\n         of the route distribution procedures described in
    this\n         document.  The internal structure of the VPN will in general\n
    \        not be visible from the Internet; such routes would simply lead\n         to
    the non-VRF interface that attaches to the VPN's Internet\n         gateway.\n
    \        In this model, there is no exchange of routes between a PE\n         router's
    default forwarding table and any of its VRFs.  VPN\n         route distribution
    procedures and Internet route distribution\n         procedures are completely
    independent.\n         Note that although some sites of the VPN use a VRF interface
    to\n         communicate with the Internet, ultimately all packets to/from\n         the
    Internet traverse a non-VRF interface before\n         leaving/entering the VPN,
    so we refer to this as \"non-VRF\n         Internet access\".\n         Note that
    the PE router to which the non-VRF interface attaches\n         does not necessarily
    need to maintain all the Internet routes\n         in its default forwarding table.
    \ The default forwarding table\n         could have as few as one route, \"default\",
    which leads to\n         another router (probably an adjacent one) that has the
    Internet\n         routes.  A variation of this scheme is to tunnel packets\n
    \        received over the non-VRF interface from the PE router to\n         another
    router, where this other router maintains the full set\n         of Internet routes.\n
    \     2. Some VPNs may obtain Internet access via a VRF interface (\"VRF\n         Internet
    access\").  If a packet is received by a PE over a VRF\n         interface, and
    if the packet's destination address does not\n         match any route in the
    VRF, then it may be matched against the\n         PE's default forwarding table.
    \ If a match is made there, the\n         packet can be forwarded natively through
    the backbone to the\n         Internet, instead of being forwarded by MPLS.\n
    \        In order for traffic to flow natively in the opposite direction\n         (from
    Internet to VRF interface), some of the routes from the\n         VRF must be
    exported to the Internet forwarding table.\n         Needless to say, any such
    routes must correspond to globally\n         unique addresses.\n         In this
    scheme, the default forwarding table might have the\n         full set of Internet
    routes, or it might have as little as a\n         single default route leading
    to another router that does have\n         the full set of Internet routes in
    its default forwarding\n         table.\n      3. Suppose the PE has the capability
    to store \"non-VPN routes\" in\n         a VRF.  If a packet's destination address
    matches a \"non-VPN\n         route\", then the packet is transmitted natively,
    rather than\n         being transmitted via MPLS.  If the VRF contains a non-VPN\n
    \        default route, all packets for the public Internet will match\n         it,
    and be forwarded natively to the default route's next hop.\n         At that next
    hop, the packets' destination addresses will be\n         looked up in the default
    forwarding table, and may match more\n         specific routes.\n         This
    technique would only be available if none of the CE\n         routers is distributing
    a default route.\n      4. It is also possible to obtain Internet access via a
    VRF\n         interface by having the VRF contain the Internet routes.\n         Compared
    with model 2, this eliminates the second lookup, but\n         it has the disadvantage
    of requiring the Internet routes to be\n         replicated in each such VRF.\n
    \        If this technique is used, the SP may want to make its\n         interface
    to the Internet be a VRF interface, and to use the\n         techniques of Section
    4 to distribute Internet routes, as VPN-\n         IPv4 routes, to other VRFs.\n
    \  It should be clearly understood that by default, there is no exchange\n   of
    routes between a VRF and the default forwarding table.  This is\n   done ONLY
    upon agreement between a customer and an SP, and only if it\n   suits the customer's
    policies.\n"
  title: 11.  Accessing the Internet from a VPN
- contents:
  - "12.  Management VPNs\n   This specification does not require that the sub-interface
    connecting\n   a PE router and a CE router be a \"numbered\" interface.  If it
    is a\n   numbered interface, this specification allows the addresses assigned\n
    \  to the interface to come from either the address space of the VPN or\n   the
    address space of the SP.\n   If a CE router is being managed by the Service Provider,
    then the\n   Service Provider will likely have a network management system that\n
    \  needs to be able to communicate with the CE router.  In this case,\n   the
    addresses assigned to the sub-interface connecting the CE and PE\n   routers should
    come from the SP's address space, and should be unique\n   within that space.
    \ The network management system should itself\n   connect to a PE router (more
    precisely, be at a site that connects to\n   a PE router) via a VRF interface.
    \ The address of the network\n   management system will be exported to all VRFs
    that are associated\n   with interfaces to CE routers that are managed by the
    SP.  The\n   addresses of the CE routers will be exported to the VRF associated\n
    \  with the network management system, but not to any other VRFs.\n   This allows
    communication between the CE and network management\n   system, but does not allow
    any undesired communication to or among\n   the CE routers.\n   One way to ensure
    that the proper route import/exports are done is to\n   use two Route Targets;
    call them T1 and T2.  If a particular VRF\n   interface attaches to a CE router
    that is managed by the SP, then\n   that VRF is configured to:\n     - import
    routes that have T1 attached to them, and\n     - attach T2 to addresses assigned
    to each end of its VRF\n       interfaces.\n   If a particular VRF interface attaches
    to the SP's network management\n   system, then that VRF is configured to attach
    T1 to the address of\n   that system, and to import routes that have T2 attached
    to them.\n"
  title: 12.  Management VPNs
- contents:
  - '13.  Security Considerations

    '
  - contents:
    - "13.1.  Data Plane\n   By security in the \"data plane\", we mean protection
      against the\n   following possibilities:\n     - Packets from within a VPN travel
      to a site outside the VPN, other\n       than in a manner consistent with the
      policies of the VPN.\n     - Packets from outside a VPN enter one of the VPN's
      sites, other\n       than in a manner consistent with the policies of the VPN.\n
      \  Under the following conditions:\n      1. a backbone router does not accept
      labeled packets over a\n         particular data link, unless it is known that
      that data link\n         attaches only to trusted systems, or unless it is known
      that\n         such packets will leave the backbone before the IP header or\n
      \        any labels lower in the stack will be inspected, and\n      2. labeled
      VPN-IPv4 routes are not accepted from untrusted or\n         unreliable routing
      peers,\n      3. no successful attacks have been mounted on the control plane,\n
      \  the data plane security provided by this architecture is virtually\n   identical
      to that provided to VPNs by Frame Relay or ATM backbones.\n   If the devices
      under the control of the SP are properly configured,\n   data will not enter
      or leave a VPN unless authorized to do so.\n   Condition 1 above can be stated
      more precisely.  One should discard a\n   labeled packet received from a particular
      neighbor unless one of the\n   following two conditions holds:\n     - the packet's
      top label has a label value that the receiving\n       system has distributed
      to that neighbor, or\n     - the packet's top label has a label value that the
      receiving\n       system has distributed to a system beyond that neighbor (i.e.,\n
      \      when it is known that the path from the system to which the label\n       was
      distributed to the receiving system may be via that\n       neighbor).\n   Condition
      2 above is of most interest in the case of inter-provider\n   VPNs (see Section
      10).  For inter-provider VPNs constructed according\n   to scheme b) of Section
      10, condition 2 is easily checked.  (The\n   issue of security when scheme (c)
      of Section 10 is used is for\n   further study.)\n   It is worth noting that
      the use of MPLS makes it much simpler to\n   provide data plane security than
      might be possible if one attempted\n   to use some form of IP tunneling in place
      of the MPLS outer label.\n   It is a simple matter to have one's border routers
      refuse to accept a\n   labeled packet unless the first of the above conditions
      applies to\n   it.  It is rather more difficult to configure a router to refuse
      to\n   accept an IP packet if that packet is an IP tunneled packet whose\n   destination
      address is that of a PE router; certainly, this is not\n   impossible to do,
      but it has both management and performance\n   implications.\n   MPLS-in-IP
      and MPLS-in-GRE tunneling are specified in\n   [MPLS-in-IP-GRE].  If it is desired
      to use such tunnels to carry VPN\n   packets, then the security considerations
      described in Section 8 of\n   that document must be fully understood.  Any implementation
      of\n   BGP/MPLS IP VPNs that allows VPN packets to be tunneled as described\n
      \  in that document MUST contain an implementation of IPsec that can be\n   used
      as therein described.  If the tunnel is not secured by IPsec,\n   then the technique
      of IP address filtering at the border routers,\n   described in Section 8.2
      of that document, is the only means of\n   ensuring that a packet that exits
      the tunnel at a particular egress\n   PE was actually placed in the tunnel by
      the proper tunnel head node\n   (i.e., that the packet does not have a spoofed
      source address).\n   Since border routers frequently filter only source addresses,
      packet\n   filtering may not be effective unless the egress PE can check the
      IP\n   source address of any tunneled packet it receives, and compare it to\n
      \  a list of IP addresses that are valid tunnel head addresses.  Any\n   implementation
      that allows MPLS-in-IP and/or MPLS-in-GRE tunneling to\n   be used without IPsec
      MUST allow the egress PE to validate in this\n   manner the IP source address
      of any tunneled packet that it receives.\n   In the case where a number of CE
      routers attach to a PE router via a\n   LAN interface, to ensure proper security,
      one of the following\n   conditions must hold:\n      1. All the CE routers
      on the LAN belong to the same VPN, or\n      2. A trusted and secured LAN switch
      divides the LAN into multiple\n         VLANs, with each VLAN containing only
      systems of a single VPN;\n         in this case, the switch will attach the
      appropriate VLAN tag\n         to any packet before forwarding it to the PE
      router.\n   Cryptographic privacy is not provided by this architecture, nor
      by\n   Frame Relay or ATM VPNs.  These architectures are all compatible with\n
      \  the use of cryptography on a CE-CE basis, if that is desired.\n   The use
      of cryptography on a PE-PE basis is for further study.\n"
    title: 13.1.  Data Plane
  - contents:
    - "13.2.  Control Plane\n   The data plane security of the previous section depends
      on the\n   security of the control plane.  To ensure security, neither BGP nor\n
      \  LDP connections should be made with untrusted peers.  The TCP/IP MD5\n   authentication
      option [TCP-MD5] should be used with both these\n   protocols.  The routing
      protocol within the SP's network should also\n   be secured in a similar manner.\n"
    title: 13.2.  Control Plane
  - contents:
    - "13.3.  Security of P and PE Devices\n   If the physical security of these devices
      is compromised, data plane\n   security may also be compromised.\n   The usual
      steps should be taken to ensure that IP traffic from the\n   public Internet
      cannot be used to modify the configuration of these\n   devices, or to mount
      Denial of Service attacks on them.\n"
    title: 13.3.  Security of P and PE Devices
  title: 13.  Security Considerations
- contents:
  - "14.  Quality of Service\n   Although not the focus of this paper, Quality of
    Service is a key\n   component of any VPN service.  In MPLS/BGP VPNs, existing
    L3 QoS\n   capabilities can be applied to labeled packets through the use of the\n
    \  \"experimental\" bits in the shim header [MPLS-ENCAPS], or, where ATM\n   is
    used as the backbone, through the use of ATM QoS capabilities.\n   The traffic
    engineering work discussed in [MPLS-RSVP] is also\n   directly applicable to MPLS/BGP
    VPNs.  Traffic engineering could even\n   be used to establish label switched
    paths with particular QoS\n   characteristics between particular pairs of sites,
    if that is\n   desirable.  Where an MPLS/BGP VPN spans multiple SPs, the\n   architecture
    described in [PASTE] may be useful.  An SP may apply\n   either intserv (Integrated
    Services) or diffserv (Differentiated\n   Services) capabilities to a particular
    VPN, as appropriate.\n"
  title: 14.  Quality of Service
- contents:
  - "15.  Scalability\n   We have discussed scalability issues throughout this paper.
    \ In this\n   section, we briefly summarize the main characteristics of our model\n
    \  with respect to scalability.\n   The Service Provider backbone network consists
    of (a) PE routers, (b)\n   BGP Route Reflectors, (c) P routers (that are neither
    PE routers nor\n   Route Reflectors), and, in the case of multi-provider VPNs,
    (d)\n   ASBRs.\n   P routers do not maintain any VPN routes.  In order to properly\n
    \  forward VPN traffic, the P routers need only maintain routes to the\n   PE
    routers and the ASBRs.  The use of two levels of labeling is what\n   makes it
    possible to keep the VPN routes out of the P routers.\n   A PE router maintains
    VPN routes, but only for those VPNs to which it\n   is directly attached.\n   Route
    reflectors can be partitioned among VPNs so that each partition\n   carries routes
    for only a subset of the VPNs supported by the Service\n   Provider.  Thus, no
    single route reflector is required to maintain\n   routes for all VPNs.\n   For
    inter-provider VPNs, if the ASBRs maintain and distribute VPN-\n   IPv4 routes,
    then the ASBRs can be partitioned among VPNs in a\n   similar manner, with the
    result that no single ASBR is required to\n   maintain routes for all the inter-provider
    VPNs.  If multi-hop EBGP\n   is used, then the ASBRs need not maintain and distribute
    VPN-IPv4\n   routes at all.\n   As a result, no single component within the Service
    Provider network\n   has to maintain all the routes for all the VPNs.  So the
    total\n   capacity of the network to support increasing numbers of VPNs is not\n
    \  limited by the capacity of any individual component.\n"
  title: 15.  Scalability
- contents:
  - "16.  IANA Considerations\n   The Internet Assigned Numbers Authority (IANA) has
    created a new\n   registry for the \"Route Distinguisher Type Field\" (see Section
    4.2).\n   This is a two-byte field.  Types 0, 1, and 2 are defined by this\n   document.
    \ Additional Route Distinguisher Type Field values with a\n   high-order bit of
    0 may be allocated by IANA on a \"First Come, First\n   Served\" basis [IANA].
    \ Values with a high-order bit of 1 may be\n   allocated by IANA based on \"IETF
    consensus\" [IANA].\n   This document specifies (see Section 4.3.4) the use of
    the BGP\n   Address Family Identifier (AFI) value 1, along with the BGP\n   Subsequent
    Address Family Identifier (SAFI) value 128, to represent\n   the address family
    \"VPN-IPv4 Labeled Addresses\", which is defined in\n   this document.\n   The
    use of AFI value 1 for IP is as currently specified in the IANA\n   registry \"Address
    Family Identifier\", so IANA need take no action\n   with respect to it.\n   The
    SAFI value 128 was originally specified as \"Private Use\" in the\n   IANA \"Subsequent
    Address Family Identifier\" registry.  IANA has\n   changed the SAFI value 128
    from \"private use\" to \"MPLS-labeled VPN\n   address\".\n"
  title: 16.  IANA Considerations
- contents:
  - "17. Acknowledgements\n   The full list of contributors can be found in Section
    18.\n   Significant contributions to this work have also been made by Ravi\n   Chandra,
    Dan Tappan, and Bob Thomas.\n   We also wish to thank Shantam Biswas for his review
    and\n   contributions.\n"
  title: 17. Acknowledgements
- contents:
  - "18.  Contributors\n   Tony Bogovic\n   Telcordia Technologies\n   445 South Street,
    Room 1A264B\n   Morristown, NJ 07960\n   EMail: tjb@research.telcordia.com\n   Stephen
    John Brannon\n   Swisscom AG\n   Postfach 1570\n   CH-8301\n   Glattzentrum (Zuerich),
    Switzerland\n   EMail: stephen.brannon@swisscom.com\n   Marco Carugi\n   Nortel
    Networks S.A.\n   Parc d'activites de Magny-Les Jeunes Bois  CHATEAUFORT\n   78928
    YVELINES Cedex 9 - FRANCE\n   EMail: marco.carugi@nortelnetworks.com\n   Christopher
    J. Chase\n   AT&T\n   200 Laurel Ave\n   Middletown, NJ 07748\n   USA\n   EMail:
    chase@att.com\n   Ting Wo Chung\n   Bell Nexxia\n   181 Bay Street\n   Suite 350\n
    \  Toronto, Ontario\n   M5J2T3\n   EMail: ting_wo.chung@bellnexxia.com\n   Eric
    Dean\n   Jeremy De Clercq\n   Alcatel Network Strategy Group\n   Francis Wellesplein
    1\n   2018 Antwerp, Belgium\n   EMail: jeremy.de_clercq@alcatel.be\n   Luyuan
    Fang\n   AT&T\n   IP Backbone Architecture\n   200 Laurel Ave.\n   Middletown,
    NJ 07748\n   EMail: luyuanfang@att.com\n   Paul Hitchen\n   BT\n   BT Adastral
    Park\n   Martlesham Heath,\n   Ipswich IP5 3RE\n   UK\n   EMail: paul.hitchen@bt.com\n
    \  Manoj Leelanivas\n   Juniper Networks, Inc.\n   385 Ravendale Drive\n   Mountain
    View, CA 94043 USA\n   EMail: manoj@juniper.net\n   Dave Marshall\n   Worldcom\n
    \  901 International Parkway\n   Richardson, Texas 75081\n   EMail: dave.marshall@wcom.com\n
    \  Luca Martini\n   Cisco Systems, Inc.\n   9155 East Nichols Avenue, Suite 400\n
    \  Englewood, CO, 80112\n   EMail: lmartini@cisco.com\n   Monique Jeanne Morrow\n
    \  Cisco Systems, Inc.\n   Glatt-com, 2nd floor\n   CH-8301\n   Glattzentrum,
    Switzerland\n   EMail: mmorrow@cisco.com\n   Ravichander Vaidyanathan\n   Telcordia
    Technologies\n   445 South Street, Room 1C258B\n   Morristown, NJ 07960\n   EMail:
    vravi@research.telcordia.com\n   Adrian Smith\n   BT\n   BT Adastral Park\n   Martlesham
    Heath,\n   Ipswich IP5 3RE\n   UK\n   EMail: adrian.ca.smith@bt.com\n   Vijay
    Srinivasan\n   1200 Bridge Parkway\n   Redwood City, CA 94065\n   EMail: vsriniva@cosinecom.com\n
    \  Alain Vedrenne\n   Equant\n   Heraklion, 1041 route des Dolines, BP347\n   06906
    Sophia Antipolis, Cedex, France\n   EMail: Alain.Vedrenne@equant.com\n"
  title: 18.  Contributors
- contents:
  - "19.  Normative References\n   [BGP]             Rekhter, Y. and T. Li, \"A Border
    Gateway Protocol 4\n                     (BGP-4)\", RFC 4271, January 2006.\n
    \  [BGP-MP]          Bates, T., Rekhter, Y., Chandra, R., and D. Katz,\n                     \"Multiprotocol
    Extensions for BGP-4\", RFC 2858,\n                     June 2000.\n   [BGP-EXTCOMM]
    \    Sangli, S., Tappan, D., and Y. Rekhter, \"BGP\n                     Extended
    Communities Attribute\", RFC 4360, February\n                     2006.\n   [MPLS-ARCH]
    \      Rosen, E., Viswanathan, A., and R. Callon,\n                     \"Multiprotocol
    Label Switching Architecture\", RFC\n                     3031, January 2001.\n
    \  [MPLS-BGP]        Rekhter, Y. and E. Rosen, \"Carrying Label\n                     Information
    in BGP-4\", RFC 3107, May 2001.\n   [MPLS-ENCAPS]     Rosen, E., Tappan, D., Fedorkow,
    G., Rekhter, Y.,\n                     Farinacci, D., Li, T., and A. Conta, \"MPLS
    Label\n                     Stack Encoding\", RFC 3032, January 2001.\n"
  title: 19.  Normative References
- contents:
  - "20.  Informative References\n   [BGP-AS4]         Vohra, Q. and E. Chen, \"BGP
    Support for Four-Octet\n                     AS Number Space\", Work in Progress,
    March 2004.\n   [BGP-ORF]         Chen, E. and Y. Rekhter, \"Cooperative Route\n
    \                    Filtering Capability for BGP-4\", Work in Progress,\n                     March
    2004.\n   [BGP-RFSH]        Chen, E., \"Route Refresh Capability for BGP-4\",
    RFC\n                     2918, September 2000.\n   [BGP-RR]          Bates, T.,
    Chandra, R., and E. Chen, \"BGP Route\n                     Reflection - An Alternative
    to Full Mesh IBGP\", RFC\n                     2796, April 2000.\n   [IANA]            Narten,
    T. and H. Alvestrand, \"Guidelines for\n                     Writing an IANA Considerations
    Section in RFCs\",\n                     BCP 26, RFC 2434, October 1998.\n   [MPLS-ATM]
    \       Davie, B., Lawrence, J., McCloghrie, K., Rosen, E.,\n                     Swallow,
    G., Rekhter, Y., and P. Doolan, \"MPLS\n                     using LDP and ATM
    VC Switching\", RFC 3035, January\n                     2001.\n   [MPLS/BGP-IPsec]
    \ Rosen, E., De Clercq, J., Paridaens, O., T'Joens,\n                     Y.,
    and C. Sargor, \"Architecture for the Use of\n                     PE-PE IPsec
    Tunnels in BGP/MPLS IP VPNs\", Work in\n                     Progress, March 2004.\n
    \  [MPLS-FR]         Conta, A., Doolan, P., and A. Malis, \"Use of Label\n                     Switching
    on Frame Relay Networks Specification\",\n                     RFC 3034, January
    2001.\n   [MPLS-in-IP-GRE]  Worster, T., Rekhter, Y., and E. Rosen,\n                     \"Encapsulating
    MPLS in IP or Generic Routing\n                     Encapsulation (GRE)\", RFC
    4023, March 2005.\n   [MPLS-LDP]        Andersson, L., Doolan, P., Feldman, N.,
    Fredette,\n                     A., and B. Thomas, \"LDP Specification\", RFC
    3036,\n                     January 2001.\n   [MPLS-RSVP]       Awduche, D., Berger,
    L., Gan, D., Li, T.,\n                     Srinivasan, V., and G. Swallow, \"RSVP-TE:\n
    \                    Extensions to RSVP for LSP Tunnels\", RFC 3209,\n                     December
    2001.\n   [OSPFv2]          Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April\n
    \                    1998.\n   [PASTE]           Li, T. and Y. Rekhter, \"A Provider
    Architecture for\n                     Differentiated Services and Traffic Engineering\n
    \                    (PASTE)\", RFC 2430, October 1998.\n   [RIP]             Malkin,
    G., \"RIP Version 2\", STD 56, RFC 2453,\n                     November 1998.\n
    \  [OSPF-2547-DNBIT] Rosen, E., Psenak, P., and P. Pillay-Esnault,\n                     \"Using
    an LSA Options Bit to Prevent Looping in\n                     BGP/MPLS IP VPNs\",
    Work in Progress, March 2004.\n   [TCP-MD5]         Heffernan, A., \"Protection
    of BGP Sessions via the\n                     TCP MD5 Signature Option\", RFC
    2385, August 1998.\n   [VPN-MCAST]       Rosen, E., Cai, Y., and J. Wijsnands,
    \"Multicast in\n                     MPLS/BGP VPNs\", Work in Progress, May 2004.\n
    \  [VPN-OSPF]        Rosen, E., Psenak, P., and P. Pillay-Esnault, \"OSPF\n                     as
    the PE/CE Protocol in BGP/MPLS VPNs\", Work in\n                     Progress,
    February 2004.\n"
  title: 20.  Informative References
- contents:
  - "Authors' Addresses\n   Eric C. Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Avenue\n   Boxborough, MA 01719\n   EMail: erosen@cisco.com\n   Yakov Rekhter\n
    \  Juniper Networks\n   1194 N. Mathilda Avenue\n   Sunnyvale, CA 94089\n   EMail:
    yakov@juniper.net\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
