- title: __initial_text__
  contents:
  - '           Host Identity Protocol (HIP) Rendezvous Extension

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a rendezvous extension for the Host Identity\n\
    \   Protocol (HIP).  The rendezvous extension extends HIP and the HIP\n   registration\
    \ extension for initiating communication between HIP nodes\n   via HIP rendezvous\
    \ servers.  Rendezvous servers improve reachability\n   and operation when HIP\
    \ nodes are multi-homed or mobile.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Overview of Rendezvous Server Operation  . . . . . . .\
    \ . . . .  4\n     3.1.  Diagram Notation . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n     3.2.  Rendezvous Client Registration . . . . . . . . . . . .\
    \ . .  6\n     3.3.  Relaying the Base Exchange . . . . . . . . . . . . . . .\
    \ .  6\n   4.  Rendezvous Server Extensions . . . . . . . . . . . . . . . . .\
    \  7\n     4.1.  RENDEZVOUS Registration Type . . . . . . . . . . . . . . .  7\n\
    \     4.2.  Parameter Formats and Processing . . . . . . . . . . . . .  8\n  \
    \     4.2.1.  RVS_HMAC Parameter . . . . . . . . . . . . . . . . . .  8\n    \
    \   4.2.2.  FROM Parameter . . . . . . . . . . . . . . . . . . . .  9\n      \
    \ 4.2.3.  VIA_RVS Parameter  . . . . . . . . . . . . . . . . . . 10\n     4.3.\
    \  Modified Packets Processing  . . . . . . . . . . . . . . . 10\n       4.3.1.\
    \  Processing Outgoing I1 Packets . . . . . . . . . . . . 10\n       4.3.2.  Processing\
    \ Incoming I1 Packets . . . . . . . . . . . . 11\n       4.3.3.  Processing Outgoing\
    \ R1 Packets . . . . . . . . . . . . 11\n       4.3.4.  Processing Incoming R1\
    \ Packets . . . . . . . . . . . . 11\n   5.  Security Considerations  . . . .\
    \ . . . . . . . . . . . . . . . 12\n   6.  IANA Considerations  . . . . . . .\
    \ . . . . . . . . . . . . . . 12\n   7.  Acknowledgments  . . . . . . . . . .\
    \ . . . . . . . . . . . . . 13\n   8.  References . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 13\n     8.1.  Normative References . . . . . . . .\
    \ . . . . . . . . . . . 13\n     8.2.  Informative References . . . . . . . .\
    \ . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Host Identity Protocol (HIP) Architecture [RFC4423]\
    \ introduces\n   the rendezvous mechanism to help a HIP node to contact a frequently\n\
    \   moving HIP node.  The rendezvous mechanism involves a third party,\n   the\
    \ rendezvous server (RVS), which serves as an initial contact point\n   (\"rendezvous\
    \ point\") for its clients.  The clients of an RVS are HIP\n   nodes that use\
    \ the HIP Registration Extension [RFC5203] to register\n   their HIT->IP address\
    \ mappings with the RVS.  After this\n   registration, other HIP nodes can initiate\
    \ a base exchange using the\n   IP address of the RVS instead of the current IP\
    \ address of the node\n   they attempt to contact.  Essentially, the clients of\
    \ an RVS become\n   reachable at the RVS's IP address.  Peers can initiate a HIP\
    \ base\n   exchange with the IP address of the RVS, which will relay this\n  \
    \ initial communication such that the base exchange may successfully\n   complete.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This section defines terms used throughout the remainder\
    \ of this\n   specification.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n   In addition to the terminology defined in the HIP\
    \ specification\n   [RFC5201] and the HIP Registration Extension [RFC5203], this\
    \ document\n   defines and uses the following terms:\n   Rendezvous Service\n\
    \      A HIP service provided by a rendezvous server to its rendezvous\n     \
    \ clients.  The rendezvous server offers to relay some of the\n      arriving\
    \ base exchange packets between the initiator and\n      responder.\n   Rendezvous\
    \ Server (RVS)\n      A HIP registrar providing rendezvous service.\n   Rendezvous\
    \ Client\n      A HIP requester that has registered for rendezvous service at\
    \ a\n      rendezvous server.\n   Rendezvous Registration\n      A HIP registration\
    \ for rendezvous service, established between a\n      rendezvous server and a\
    \ rendezvous client.\n"
- title: 3.  Overview of Rendezvous Server Operation
  contents:
  - "3.  Overview of Rendezvous Server Operation\n   Figure 1 shows a simple HIP base\
    \ exchange without a rendezvous\n   server, in which the initiator initiates the\
    \ exchange directly with\n   the responder by sending an I1 packet to the responder's\
    \ IP address,\n   as per the HIP specification [RFC5201].\n                  \
    \     +-----+                +-----+\n                       |     |-------I1------>|\
    \     |\n                       |  I  |<------R1-------|  R  |\n             \
    \          |     |-------I2------>|     |\n                       |     |<------R2-------|\
    \     |\n                       +-----+                +-----+\n          Figure\
    \ 1: HIP base exchange without rendezvous server.\n   The End-Host Mobility and\
    \ Multihoming with the Host Identity Protocol\n   specification [RFC5206] allows\
    \ a HIP node to notify its peers about\n   changes in its set of IP addresses.\
    \  This specification presumes\n   initial reachability of the two nodes with\
    \ respect to each other.\n   However, such a HIP node MAY also want to be reachable\
    \ to other\n   future correspondent peers that are unaware of its location change.\n\
    \   The HIP Architecture [RFC4423] introduces rendezvous servers with\n   whom\
    \ a HIP node MAY register its host identity tags (HITs) and\n   current IP addresses.\
    \  An RVS relays HIP packets arriving for these\n   HITs to the node's registered\
    \ IP addresses.  When a HIP node has\n   registered with an RVS, it SHOULD record\
    \ the IP address of its RVS in\n   its DNS record, using the HIP DNS resource\
    \ record type defined in the\n   HIP DNS Extension [RFC5205].\n              \
    \                     +-----+\n                          +--I1--->| RVS |---I1--+\n\
    \                          |        +-----+       |\n                        \
    \  |                      v\n                       +-----+                +-----+\n\
    \                       |     |<------R1-------|     |\n                     \
    \  |  I  |-------I2------>|  R  |\n                       |     |<------R2-------|\
    \     |\n                       +-----+                +-----+\n           Figure\
    \ 2: HIP base exchange with a rendezvous server.\n   Figure 2 shows a HIP base\
    \ exchange involving a rendezvous server.  It\n   is assumed that HIP node R previously\
    \ registered its HITs and current\n   IP addresses with the RVS, using the HIP\
    \ Registration Extension\n   [RFC5203].  When the initiator I tries to establish\
    \ contact with the\n   responder R, it must send the I1 of the base exchange either\
    \ to one\n   of R's IP addresses (if known via DNS or other means) or to one of\n\
    \   R's rendezvous servers.  Here, I obtains the IP address of R's\n   rendezvous\
    \ server from R's DNS record and then sends the I1 packet of\n   the HIP base\
    \ exchange to RVS.  RVS, noticing that the HIT contained\n   in the arriving I1\
    \ packet is not one of its own, MUST check its\n   current registrations to determine\
    \ if it needs to relay the packets.\n   Here, it determines that the HIT belongs\
    \ to R and then relays the I1\n   packet to the registered IP address.  R then\
    \ completes the base\n   exchange without further assistance from RVS by sending\
    \ an R1\n   directly to the I's IP address, as obtained from the I1 packet.  In\n\
    \   this specification, the client of the RVS is always the responder.\n   However,\
    \ there might be reasons to allow a client to initiate a base\n   exchange through\
    \ its own RVS, like NAT and firewall traversal.  This\n   specification does not\
    \ address such scenarios, which should be\n   specified in other documents.\n"
- title: 3.1.  Diagram Notation
  contents:
  - "3.1.  Diagram Notation\n  Notation       Significance\n  --------       ------------\n\
    \  I, R           I and R are the respective source and destination IP\n     \
    \            addresses in the IP header.\n  HIT-I, HIT-R   HIT-I and HIT-R are\
    \ the initiator's and the\n                 responder's HITs in the packet, respectively.\n\
    \  REG_REQ        A REG_REQUEST parameter is present in the HIP header.\n  REG_RES\
    \        A REG_RESPONSE parameter is present in the HIP header.\n  FROM:I    \
    \     A FROM parameter containing the IP address I is\n                 present\
    \ in the HIP header.\n  RVS_HMAC       An RVS_HMAC parameter containing an HMAC\
    \ keyed with the\n                 appropriate registration key is present in\
    \ the HIP\n                 header.\n  VIA:RVS        A VIA_RVS parameter containing\
    \ the IP address RVS of a\n                 rendezvous server is present in the\
    \ HIP header.\n"
- title: 3.2.  Rendezvous Client Registration
  contents:
  - "3.2.  Rendezvous Client Registration\n   Before a rendezvous server starts to\
    \ relay HIP packets to a\n   rendezvous client, the rendezvous client needs to\
    \ register with it to\n   receive rendezvous service by using the HIP Registration\
    \ Extension\n   [RFC5203] as illustrated in the following schema:\n          \
    \       +-----+                            +-----+\n                 |     | \
    \           I1              |     |\n                 |     |--------------------------->|\
    \     |\n                 |     |<---------------------------|     |\n       \
    \          |  I  |         R1(REG_INFO)       | RVS |\n                 |    \
    \ |         I2(REG_REQ)        |     |\n                 |     |--------------------------->|\
    \     |\n                 |     |<---------------------------|     |\n       \
    \          |     |         R2(REG_RES)        |     |\n                 +-----+\
    \                            +-----+\n          Rendezvous client registering\
    \ with a rendezvous server.\n"
- title: 3.3.  Relaying the Base Exchange
  contents:
  - "3.3.  Relaying the Base Exchange\n   If a HIP node and one of its rendezvous\
    \ servers have a rendezvous\n   registration, the rendezvous servers relay inbound\
    \ I1 packets (that\n   contain one of the client's HITs) by rewriting the IP header.\
    \  They\n   replace the destination IP address of the I1 packet with one of the\n\
    \   IP addresses of the owner of the HIT, i.e., the rendezvous client.\n   They\
    \ MUST also recompute the IP checksum accordingly.\n   Because of egress filtering\
    \ on the path from the RVS to the client\n   [RFC2827][RFC3013], a HIP rendezvous\
    \ server SHOULD replace the source\n   IP address, i.e., the IP address of I,\
    \ with one of its own IP\n   addresses.  The replacement IP address SHOULD be\
    \ chosen according to\n   relevant IPv4 and IPv6 specifications [RFC1122][RFC3484].\
    \  Because\n   this replacement conceals the initiator's IP address, the RVS MUST\n\
    \   append a FROM parameter containing the original source IP address of\n   the\
    \ packet.  This FROM parameter MUST be integrity protected by an\n   RVS_HMAC\
    \ keyed with the corresponding rendezvous registration\n   integrity key [RFC5203].\n\
    \                                               I1(RVS, R, HIT-I, HIT-R\n    \
    \     I1(I, RVS, HIT-I, HIT-R) +---------+     FROM:I, RVS_HMAC)\n         +----------------------->|\
    \         |--------------------+\n         |                        |   RVS  \
    \ |                    |\n         |                        |         |      \
    \              |\n         |                        +---------+              \
    \      |\n         |                                                       V\n\
    \        +-----+        R1(R, I, HIT-R, HIT-I, VIA:RVS)       +-----+\n      \
    \  |     |<---------------------------------------------|     |\n        |   \
    \  |                                              |     |\n        |  I  |   \
    \         I2(I, R, HIT-I, HIT-R)            |  R  |\n        |     |--------------------------------------------->|\
    \     |\n        |     |<---------------------------------------------|     |\n\
    \        +-----+             R2(R, I, HIT-R, HIT-I)           +-----+\n      \
    \           Rendezvous server rewriting IP addresses.\n   This modification of\
    \ HIP packets at a rendezvous server can be\n   problematic because the HIP protocol\
    \ uses integrity checks.  Because\n   the I1 does not include HMAC or SIGNATURE\
    \ parameters, these two end-\n   to-end integrity checks are unaffected by the\
    \ operation of rendezvous\n   servers.\n   The RVS SHOULD verify the checksum\
    \ field of an I1 packet before doing\n   any modifications.  After modification,\
    \ it MUST recompute the\n   checksum field using the updated HIP header, which\
    \ possibly included\n   new FROM and RVS_HMAC parameters, and a pseudo-header\
    \ containing the\n   updated source and destination IP addresses.  This enables\
    \ the\n   responder to validate the checksum of the I1 packet \"as is\", without\n\
    \   having to parse any FROM parameters.\n"
- title: 4.  Rendezvous Server Extensions
  contents:
  - "4.  Rendezvous Server Extensions\n   This section describes extensions to the\
    \ HIP Registration Extension\n   [RFC5203], allowing a HIP node to register with\
    \ a rendezvous server\n   for rendezvous service and notify the RVS aware of changes\
    \ to its\n   current location.  It also describes an extension to the HIP\n  \
    \ specification [RFC5201] itself, allowing establishment of HIP\n   associations\
    \ via one or more HIP rendezvous server(s).\n"
- title: 4.1.  RENDEZVOUS Registration Type
  contents:
  - "4.1.  RENDEZVOUS Registration Type\n   This specification defines an additional\
    \ registration for the HIP\n   Registration Extension [RFC5203] that allows registering\
    \ with a\n   rendezvous server for rendezvous service.\n   Number   Registration\
    \ Type\n   ------   -----------------\n   1        RENDEZVOUS\n"
- title: 4.2.  Parameter Formats and Processing
  contents:
  - '4.2.  Parameter Formats and Processing

    '
- title: 4.2.1.  RVS_HMAC Parameter
  contents:
  - "4.2.1.  RVS_HMAC Parameter\n   The RVS_HMAC is a non-critical parameter whose\
    \ only difference with\n   the HMAC parameter defined in the HIP specification\
    \ [RFC5201] is its\n   \"type\" code.  This change causes it to be located after\
    \ the FROM\n   parameter (as opposed to the HMAC):\n Type        65500\n Length\
    \      Variable.  Length in octets, excluding Type, Length, and\n            \
    \ Padding.\n HMAC        HMAC computed over the HIP packet, excluding the\n  \
    \           RVS_HMAC parameter and any following parameters.  The\n          \
    \   HMAC is keyed with the appropriate HIP integrity key\n             (HIP-lg\
    \ or HIP-gl) established when rendezvous\n             registration happened.\
    \  The HIP \"checksum\" field MUST be set\n             to zero, and the HIP header\
    \ length in the HIP common header\n             MUST be calculated not to cover\
    \ any excluded parameter\n             when the HMAC is calculated.  The size\
    \ of the\n             HMAC is the natural size of the hash computation\n    \
    \         output depending on the used hash function.\n   To allow a rendezvous\
    \ client and its RVS to verify the integrity of\n   packets flowing between them,\
    \ both SHOULD protect packets with an\n   added RVS_HMAC parameter keyed with\
    \ the HIP-lg or HIP-gl integrity\n   key established while registration occurred.\
    \  A valid RVS_HMAC SHOULD\n   be present on every packet flowing between a client\
    \ and a server and\n   MUST be present when a FROM parameter is processed.\n"
- title: 4.2.2.  FROM Parameter
  contents:
  - "4.2.2.  FROM Parameter\n     0                   1                   2      \
    \             3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |             Type              |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                             Address                           |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Type        65498\n    Length      16\n    Address     An IPv6 address or\
    \ an IPv4-in-IPv6 format IPv4 address.\n   A rendezvous server MUST add a FROM\
    \ parameter containing the original\n   source IP address of a HIP packet whenever\
    \ the source IP address in\n   the IP header is rewritten.  If one or more FROM\
    \ parameters are\n   already present, the new FROM parameter MUST be appended\
    \ after the\n   existing ones.\n   Whenever an RVS inserts a FROM parameter, it\
    \ MUST insert an RVS_HMAC\n   protecting the packet integrity, especially the\
    \ IP address included\n   in the FROM parameter.\n"
- title: 4.2.3.  VIA_RVS Parameter
  contents:
  - "4.2.3.  VIA_RVS Parameter\n     0                   1                   2   \
    \                3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |             Type              |             Length            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                            Address                            |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    .                               .                               .\n    .\
    \                               .                               .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    |\
    \                            Address                            |\n    |     \
    \                                                          |\n    |          \
    \                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Type        65502\n    Length      Variable\n    Address     An IPv6 address\
    \ or an IPv4-in-IPv6 format IPv4 address.\n   After the responder receives a relayed\
    \ I1 packet, it can begin to\n   send HIP packets addressed to the initiator's\
    \ IP address, without\n   further assistance from an RVS.  For debugging purposes,\
    \ it MAY\n   include a subset of the IP addresses of its RVSs in some of these\n\
    \   packets.  When a responder does so, it MUST append a newly created\n   VIA_RVS\
    \ parameter at the end of the HIP packet.  The main goal of\n   using the VIA_RVS\
    \ parameter is to allow operators to diagnose\n   possible issues encountered\
    \ while establishing a HIP association via\n   an RVS.\n"
- title: 4.3.  Modified Packets Processing
  contents:
  - "4.3.  Modified Packets Processing\n   The following subsections describe the\
    \ differences of processing of\n   I1 and R1 while a rendezvous server is involved\
    \ in the base exchange.\n"
- title: 4.3.1.  Processing Outgoing I1 Packets
  contents:
  - "4.3.1.  Processing Outgoing I1 Packets\n   An initiator SHOULD NOT send an opportunistic\
    \ I1 with a NULL\n   destination HIT to an IP address that is known to be a rendezvous\n\
    \   server address, unless it wants to establish a HIP association with\n   the\
    \ rendezvous server itself and does not know its HIT.\n   When an RVS rewrites\
    \ the source IP address of an I1 packet due to\n   egress filtering, it MUST add\
    \ a FROM parameter to the I1 that\n   contains the initiator's source IP address.\
    \  This FROM parameter MUST\n   be protected by an RVS_HMAC keyed with the integrity\
    \ key established\n   at rendezvous registration.\n"
- title: 4.3.2.  Processing Incoming I1 Packets
  contents:
  - "4.3.2.  Processing Incoming I1 Packets\n   When a rendezvous server receives\
    \ an I1 whose destination HIT is not\n   its own, it consults its registration\
    \ database to find a registration\n   for the rendezvous service established by\
    \ the HIT owner.  If it finds\n   an appropriate registration, it relays the packet\
    \ to the registered\n   IP address.  If it does not find an appropriate registration,\
    \ it\n   drops the packet.\n   A rendezvous server SHOULD interpret any incoming\
    \ opportunistic I1\n   (i.e., an I1 with a NULL destination HIT) as an I1 addressed\
    \ to\n   itself and SHOULD NOT attempt to relay it to one of its clients.\n  \
    \ When a rendezvous client receives an I1, it MUST validate any present\n   RVS_HMAC\
    \ parameter.  If the RVS_HMAC cannot be verified, the packet\n   SHOULD be dropped.\
    \  If the RVS_HMAC cannot be verified and a FROM\n   parameter is present, the\
    \ packet MUST be dropped.\n   A rendezvous client acting as responder SHOULD drop\
    \ opportunistic I1s\n   that include a FROM parameter, because this indicates\
    \ that the I1 has\n   been relayed.\n"
- title: 4.3.3.  Processing Outgoing R1 Packets
  contents:
  - "4.3.3.  Processing Outgoing R1 Packets\n   When a responder replies to an I1\
    \ relayed via an RVS, it MUST append\n   to the regular R1 header a VIA_RVS parameter\
    \ containing the IP\n   addresses of the traversed RVSs.\n"
- title: 4.3.4.  Processing Incoming R1 Packets
  contents:
  - "4.3.4.  Processing Incoming R1 Packets\n   The HIP specification [RFC5201] mandates\
    \ that a system receiving an\n   R1 MUST first check to see if it has sent an\
    \ I1 to the originator of\n   the R1 (i.e., the system is in state I1-SENT). \
    \ When the R1 is\n   replying to a relayed I1, this check SHOULD be based on HITs\
    \ only.\n   In case the IP addresses are also checked, then the source IP address\n\
    \   MUST be checked against the IP address included in the VIA_RVS\n   parameter.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This section discusses the known threats introduced\
    \ by these HIP\n   extensions and the implications on the overall security of\
    \ HIP.  In\n   particular, it argues that the extensions described in this document\n\
    \   do not introduce additional threats to the Host Identity Protocol.\n   It\
    \ is difficult to encompass the whole scope of threats introduced by\n   rendezvous\
    \ servers because their presence has implications both at\n   the IP and HIP layers.\
    \  In particular, these extensions might allow\n   for redirection, amplification,\
    \ and reflection attacks at the IP\n   layer, as well as attacks on the HIP layer\
    \ itself, for example, man-\n   in-the-middle attacks against the HIP base exchange.\n\
    \   If an initiator has a priori knowledge of the responder's host\n   identity\
    \ when it first contacts the responder via an RVS, it has a\n   means to verify\
    \ the signatures in the HIP base exchange, which\n   protects against man-in-the-middle\
    \ attacks.\n   If an initiator does not have a priori knowledge of the responder's\n\
    \   host identity (so-called \"opportunistic initiators\"), it is almost\n   impossible\
    \ to defend the HIP exchange against these attacks, because\n   the public keys\
    \ exchanged cannot be authenticated.  The only approach\n   would be to mitigate\
    \ hijacking threats on HIP state by requiring an\n   R1 answering an opportunistic\
    \ I1 to come from the same IP address\n   that originally sent the I1.  This procedure\
    \ retains a level of\n   security that is equivalent to what exists in the Internet\
    \ today.\n   However, for reasons of simplicity, this specification does not allow\n\
    \   the establishment of a HIP association via a rendezvous server in an\n   opportunistic\
    \ manner.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This section is to be interpreted according to the\
    \ Guidelines for\n   Writing an IANA Considerations Section in RFCs [RFC2434].\n\
    \   This document updates the IANA Registry for HIP Parameters Types by\n   assigning\
    \ new HIP Parameter Types values for the new HIP Parameters\n   defined in Section\
    \ 4.2:\n   o  RVS_HMAC (defined in Section 4.2.1)\n   o  FROM (defined in Section\
    \ 4.2.2)\n   o  VIA_RVS (defined in Section 4.2.3)\n   This document defines an\
    \ additional registration for the HIP\n   Registration Extension [RFC5203] that\
    \ allows registering with a\n   rendezvous server for rendezvous service.\n  \
    \ Number   Registration Type\n   ------   -----------------\n   1        RENDEZVOUS\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The following people have provided thoughtful and helpful\
    \ discussions\n   and/or suggestions that have improved this document: Marcus\
    \ Brunner,\n   Tom Henderson, Miika Komu, Mika Kousa, Pekka Nikander, Justino\n\
    \   Santos, Simon Schuetz, Tim Shepard, Kristian Slavov, Martin\n   Stiemerling,\
    \ and Juergen Quittek.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1122]  Braden, R., \"Requirements for Internet\
    \ Hosts -\n              Communication Layers\", STD 3, RFC 1122, October 1989.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2434]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 2434,\n              October 1998.\n   [RFC3484]\
    \  Draves, R., \"Default Address Selection for Internet\n              Protocol\
    \ version 6 (IPv6)\", RFC 3484, February 2003.\n   [RFC5201]  Moskowitz, R., Nikander,\
    \ P., Jokela, P., Ed., and T.\n              Henderson, \"Host Identity Protocol\"\
    , RFC 5201, April 2008.\n   [RFC5203]  Laganier, J., Koponen, T., and L. Eggert,\
    \ \"Host Identity\n              Protocol (HIP) Registration Extension\", RFC\
    \ 5203,\n              April 2008.\n   [RFC5205]  Nikander, P. and J. Laganier,\
    \ \"Host Identity Protocol\n              (HIP) Domain Name System (DNS) Extensions\"\
    , RFC 5205,\n              April 2008.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2827]  Ferguson, P. and D. Senie, \"Network\
    \ Ingress Filtering:\n              Defeating Denial of Service Attacks which\
    \ employ IP Source\n              Address Spoofing\", BCP 38, RFC 2827, May 2000.\n\
    \   [RFC3013]  Killalea, T., \"Recommended Internet Service Provider\n       \
    \       Security Services and Procedures\", BCP 46, RFC 3013,\n              November\
    \ 2000.\n   [RFC4423]  Moskowitz, R. and P. Nikander, \"Host Identity Protocol\n\
    \              (HIP) Architecture\", RFC 4423, May 2006.\n   [RFC5206]  Henderson,\
    \ T., Ed., \"End-Host Mobility and Multihoming\n              with the Host Identity\
    \ Protocol\", RFC 5206, April 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Julien Laganier\n   DoCoMo Communications Laboratories\
    \ Europe GmbH\n   Landsberger Strasse 312\n   Munich  80687\n   Germany\n   Phone:\
    \ +49 89 56824 231\n   EMail: julien.ietf@laposte.net\n   URI:   http://www.docomolab-euro.com/\n\
    \   Lars Eggert\n   Nokia Research Center\n   P.O. Box 407\n   Nokia Group  00045\n\
    \   Finland\n   Phone: +358 50 48 24461\n   EMail: lars.eggert@nokia.com\n   URI:\
    \   http://research.nokia.com/people/lars_eggert/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
