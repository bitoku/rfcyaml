- title: __initial_text__
  contents:
  - "                  Implementation Notes and Experience for\n                 \
    \        The Internet Ethernet MIB\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \    1\n   2. Observations ................................................  \
    \  2\n   3. Conclusions .................................................    3\n\
    \   4. Final Action ................................................    4\n  \
    \ 5. Implementation Data .........................................    5\n   6.\
    \ Security Considerations .....................................    7\n   7. Author's\
    \ Address ............................................    7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Ethernet MIB Working group has been tasked with the\
    \ following two\n   work items:\n   1)  Develop a document explaining the rationale\
    \ for assigning\n       MANDATORY status to MIB variables which are optional in\n\
    \       the relevant IEEE 802.3 specification (the technical\n       basis for\
    \ the Internet Ethernet MIB). This shall not be a\n       standards-track document.\n\
    \   (2) Develop an implementation report on the Ethernet MIB.\n       This report\
    \ shall cover MIB variables which are\n       implemented in both Ethernet interface\
    \ chips, and in\n       software (i.e., drivers), and discuss the issues\n   \
    \    pertaining to both.  This report shall also summarize\n       field experience\
    \ with the MIB variables, especially\n       concentrating on those variables\
    \ which are in dispute.\n       This document shall not be a standards-track document.\n\
    \       While the Ethernet MIB is progressing through the\n       standardization\
    \ process, this document shall be\n       periodically updated to reflect the\
    \ latest implementation\n       and operational experience.\n   This document\
    \ reflects the currently known status of 11 different\n   implementations of the\
    \ MIB by 7 different vendors on 7 different\n   Ethernet interface chips.\n"
- title: 2.  Observations
  contents:
  - "2.  Observations\n   There are some interesting points to be noted from this\
    \ information:\n   1)  Only 4 variables are actually implemented in all\n    \
    \   implementations: AlignmentErrors, FCSErrors,\n       ExcessiveCollisions and\
    \ InternalMacTransmitErrors.\n   2)  There were another five variables implemented\
    \ in all but\n       one of the reported implementations,\n       SingleCollisionFrames,\
    \ MultipleCollisionFrames,\n       LateCollisions, FrameTooLongs, and CarrierSenseErrors.\n\
    \       Three of these variables exist in implementations that\n       use the\
    \ same chip as the implementation that does not\n       contain the variable.\
    \  Specifically:\n    A)   SingleCollisionFrames is not implemented in\n     \
    \    implementation number 3, which uses the AMD LANCE.\n         However, other\
    \ AMD LANCE implementations (7, 8, and 10)\n         do implement the variable,\
    \ implying that it is\n         available on the LANCE.\n    B)   MultipleCollisionFrames\
    \ is not implemented in\n         implementation number 3, which uses the AMD\
    \ LANCE.\n         However, other AMD LANCE implementations (7, 8, and 10)\n \
    \        do implement the variable, implying that it is\n         available on\
    \ the LANCE.\n    C)   LateCollisions is not implemented in implementation\n \
    \        number 1, which uses the Intel 82586. However, another\n         Intel\
    \ 82586 based implementation (11) does implement\n         the variable, implying\
    \ that it is available on the\n         Intel 82586.\n    D)   CarrierSenseErrors\
    \ is not implemented on implementation\n         number 2, which is based on the\
    \ Fujitsu 86950 chip.\n         However, there is only one implementation based\
    \ on this\n         chip and I have not been able to locate a data sheet on\n\
    \         this part so no conclusion can be drawn at this time.\n    E)   FrameTooLongs\
    \ is not implemented on implementation\n         number 5, which is based on the\
    \ National NIC 8390 chip.\n         However, there is only one implementation\
    \ based on this\n         chip and I have not been able to locate a data sheet\
    \ on\n         this part. It should also be noted that this variable\n       \
    \  is easily maintained by software as a \"driver-level\"\n         function.\n\
    \   (3)  Of the 22 variables in the MIB, 11, or 1/2 of the\n        variables,\
    \ were implemented in about 1/2 or less of the\n        implementations.\n   4)\
    \   The number of variables implemented per implementation\n        ranges from\
    \ a low of 11 to a high of 16. The average\n        number of variables truly\
    \ implemented is 12.8.\n   5)   The IEEE 802.3 encapsulation-specific variables\n\
    \        (InRangeLengthErrors, and OutOfRangeLengthFields) are in\n        2 and\
    \ 0 implementations respectively.\n"
- title: 3.  Conclusions
  contents:
  - "3.  Conclusions\n   From this, the author concludes that:\n   The control variables\
    \ (IntializeMAC, etc.) are not widely\n   implemented, but this may be due to\
    \ an aversion to implementing\n   writable variables until security is in place.\n\
    \   One vendor has stated that the reason that these variables were not\n   implemented\
    \ was that the vendor did not believe the variables to be\n   useful, and that\
    \ they were hard to implement.  Furthermore, this\n   vendor has recommended dropping\
    \ the variables entirely.\n   The two IEEE 802.3 encapsulation variables (InRangeLengthErrors\
    \ and\n   OutOfRangeLengthFields) are barely implemented. In Santa Fe, the\n \
    \  Working group discussed moving them to an optional, 802.3 specific,\n   group.\
    \ The author believes that this is justified by this\n   implementation data.\n\
    \   The collision histogram variables are also barely implemented.  They\n   should\
    \ be in their own optional group -- and they are.\n   Of the remaining 13 statistical\
    \ variables, 9 of them are in 10 or 11\n   implementations. This is good.\n  \
    \ Two of them (SQETestErrors and ExcessiveDeferrals) are in 3 and 1\n   implementations,\
    \ respectively. This is bad.\n   The remaining variables (DeferredTransmissions\
    \ and\n   InternalMacReceiveErrors) are in 8 or 9 implementations.\n   It should\
    \ be noted that one of the two systems that do not implement\n   DeferredTransmissions\
    \ is based on the AMD LANCE, and other AMD LANCE\n   based systems do implement\
    \ this counter, leading to the conclusion\n   that DeferredTransmissions could\
    \ easily be on all but one of the\n   implementations.\n   The other such variable,\
    \ InternalMacReceiveErrors, is a general\n   catchall for all other errors. If\
    \ no other errors are detected by the\n   hardware or software then returning\
    \ 0 for the counter is perfectly\n   acceptable.\n   This all seems to imply either:\n\
    \   1)  Splitting the statistics group into two groups, one of\n       which is\
    \ optional and contains SQETestErrors and\n       ExcessiveDeferrals, or\n   2)\
    \  Eliminating SQETestErrors and ExcessiveDeferrals) from\n       the MIB.\n \
    \  The variables with 8 or 9 implementations are a bit more problematic.\n   They\
    \ are implemented in more than 2/3s of the implementations, but it\n   may not\
    \ be appropriate to call this widespread implementation.\n   However, it seems\
    \ to be safe to conclude that the non-implementations\n   of these variables is\
    \ due to local implementation considerations\n   rather than a fundamental lack\
    \ of support for the variable.\n"
- title: 4.  Final Action
  contents:
  - "4.  Final Action\n   After consideration at the San Diego IETF Meeting on 17\
    \ March 1992,\n   the Ethernet MIB Working Group made the following recommendations:\n\
    \   1)  The dot3TestTdrValue object will be deprecated from the\n       standard\
    \ mib.  There are effectively no implementations\n       of this object, and some\
    \ chips were reported to return an\n       incorrect value for the TDR count.\n\
    \   2)  The dot3StatsInRangeLengthErrors object and the\n       dot3StatsOutOfRangeLengthFields\
    \ object will be deprecated\n       from the MIB. These objects were not widely\
    \ implemented\n       and their utility in diagnosing network problems was\n \
    \      strongly questioned.\n   3)  The dot3InitializeMac object, the dot3MacSubLayerStatus\n\
    \       object, the dot3MulticastReceiveStatus object, and the\n       dot3TxEnabled\
    \ object will be deprecated from the MIB.\n       These objects were not widely\
    \ implemented and their\n       utility in diagnosing network problems was strongly\n\
    \       questioned.\n   4)  The dot3StatsExcessiveDeferrals object will be deprecated\n\
    \       from the MIB.  Only one system implemented this object.\n       Furthermore,\
    \ its exact definition was called into question.\n   5)  The dot3StatsSQETestErrors\
    \ object received few\n       implementations.  However, the working group strongly\n\
    \       supported its retention in the MIB on the basis that\n       certain forms\
    \ of transceiver and cable errors that are\n       not uncommon can only be detected\
    \ with this counter.\n   6)  The collision histogram table (dot3CollTable) will\
    \ be\n       kept as an optional group, even though the objects are\n       not\
    \ widely implemented nor is there hardware support on\n       all reported chips.\n"
- title: 5.  Implementation Data
  contents:
  - "5.  Implementation Data\n   The following raw data has been provided by vendors,\
    \ each developing\n   an implementation of the Ethernet MIB.  Each reported implementation\n\
    \   has a separate column in the following table. For each\n   implementation/MIB\
    \ Variable, a single character code has been entered\n   indicating the rough\
    \ implementation status of the variable.  These\n   codes are:\n   Y    Fully\
    \ implemented, reports a truthful count, or\n        indication of state. All\
    \ values may be written to the\n        variable with the expected action occurring.\n\
    \   N    Not implemented at all. Would return a noSuchName error\n        if accessed.\n\
    \   C    Implemented but returns a constant value for gets and\n        returns\
    \ a badValue error for any set attempt to set the\n        variable to a value\
    \ other than this constant (writable\n        variables only).\n             \
    \            MIB           Implementation\n                    Variable 1  2 \
    \ 3  4  5  6  7  8  9  10 11 Yesses\n               InitializeMac C  C  Y  Y \
    \ Y  Y  Y  C7 C7 N  Y   6\n           MacSubLayerStatus C  C  Y  Y  Y  Y  Y  C7\
    \ C7 N  C   5\n      MulticastReceiveStatus C  C  Y  C3 Y  C  C  C7 C7 N  C  \
    \ 2\n                   TxEnabled C  C  Y  Y  Y  Y  Y  C7 C7 N  C   5\n      \
    \          TestTdrValue C  1  C  C4 C  C  C  C4 C4 N  C   1\n             AlignmentErrors\
    \ Y  Y  Y  Y  Y  Y  Y  Y  Y  Y  Y  11\n                   FCSErrors Y  Y  Y  Y\
    \  Y  Y  Y  Y  Y  Y  Y  11\n       SingleCollisionFrames Y  Y  Y  N  Y  Y  Y \
    \ Y  Y  Y  Y  10\n     MultipleCollisionFrames Y  Y  Y  N  Y  Y  Y  Y  Y  Y  Y\
    \  10\n               SQETestErrors Y  C  C  C  Y  C  C  C  C  Y  C   3\n    \
    \   DeferredTransmissions Y  C  Y  N  Y  Y  Y  Y  Y  Y  Y   9\n              LateCollisions\
    \ C  Y  Y  Y  Y  Y  Y  Y  Y  Y  Y  10\n         ExcessiveCollisions Y  Y  Y  Y\
    \  Y  Y  Y  Y  Y  Y  Y  11\n   InternalMacTransmitErrors Y  Y  Y  Y  Y  Y  Y \
    \ Y  Y  Y  Y  11\n          CarrierSenseErrors Y  C  Y  Y  Y  Y  Y  Y  Y  Y  Y\
    \  10\n          ExcessiveDeferrals C  C  Y  C  C  C  C  C  C  N  C   1\n    \
    \           FrameTooLongs Y  Y2 Y  Y  C  Y  Y  Y  Y  Y  Y  10\n         InRangeLengthErrors\
    \ C  C  C  N5 C  Y  Y  C  C  N  C   2\n      OutOfRangeLengthFields C  C  C  C6\
    \ C  C  C  C  C  N  C   0\n    InternalMacReceiveErrors Y  Y  Y  Y  Y  C  C  Y\
    \  Y  Y  C   8\n                   CollCount Y  Y  C  N  N  N  N  C  C  N  Y \
    \  3\n             CollFrequencies Y  Y  C  N  N  N  N  C  C  N  Y   3\n     \
    \                 Yesses 13 11 16 11 15 14 14 11 11 12 13\n   Notes:\n   1   \
    \ does not implement TDR test, but reports TDR from last\n        collision!\n\
    \   2    Not supported by the chip, detected solely in software.\n   3    But\
    \ set to disabled(2) -> badValue\n   4    Underlying TDR function not implemented\
    \ on this chip.\n   5    Only counts frames too short though.\n   6    Due to\
    \ Ethernet encapsulation\n   7    Implementation does not support set operations\
    \ but\n        reports the correct value for these.\n   The implementations are:\n\
    \            Implementation   Vendor   Chip\n                         1   1  \
    \      Intel 82586\n                         2   1        Fujitsu 86950\n    \
    \                     3   2        Sonic\n                         4   3     \
    \   AMD Lance\n                         5   4        National NIC 8390C\n    \
    \                     6   4        Intel 82596\n                         7   4\
    \        AMD Lance\n                         8   5        AMD Lance\n        \
    \                 9   5        AMD ILACC\n                        10   6     \
    \   AMD Lance\n                        11   7        Intel 82586\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 7. Author's Address
  contents:
  - "7. Author's Address\n   Frank J. Kastenholz\n   FTP Software\n   2 High Street\n\
    \   North Andover Mass 01845\n   Phone:  508-685-4000\n   EMail:  kasten@ftp.com\n"
