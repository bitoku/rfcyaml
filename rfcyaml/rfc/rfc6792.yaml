- title: __initial_text__
  contents:
  - '           Guidelines for Use of the RTP Monitoring Framework

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo proposes an extensible Real-time Transport Protocol (RTP)\n\
    \   monitoring framework for extending the RTP Control Protocol (RTCP)\n   with\
    \ a new RTCP Extended Reports (XR) block type to report new\n   metrics regarding\
    \ media transmission or reception quality.  In this\n   framework, a new XR block\
    \ should contain a single metric or a small\n   number of metrics relevant to\
    \ a single parameter of interest or\n   concern, rather than containing a number\
    \ of metrics that attempt to\n   provide full coverage of all those parameters\
    \ of concern to a\n   specific application.  Applications may then \"mix and match\"\
    \ to\n   create a set of blocks that cover their set of concerns.  Where\n   possible,\
    \ a specific block should be designed to be reusable across\n   more than one\
    \ application, for example, for all of voice, streaming\n   audio, and video.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6792.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. RTP Monitoring Framework ........................................5\n    \
    \  3.1. Overview of the RTP Monitoring Framework ...................5\n      3.2.\
    \ Location of Monitors .......................................7\n   4. Issues\
    \ with Reporting Metrics Blocks Using RTCP XR Extensions ...8\n      4.1. Using\
    \ a Compound Metrics Block .............................8\n      4.2. Correlating\
    \ RTCP XR with Non-RTP Data ......................8\n      4.3. Measurement Information\
    \ Duplication ........................9\n      4.4. Consumption of XR Block Code\
    \ Points ........................9\n   5. Guidelines for Reporting Metrics Blocks\
    \ Using RTCP XR ...........9\n      5.1. Use a Single Metric in the Metrics Block\
    \ ...................9\n      5.2. Include the Payload Type in the Metrics Block\
    \ .............10\n      5.3. Use RTCP SDES to Correlate XRs with Non-RTP Data\
    \ ..........10\n      5.4. Reduce Measurement Information Repetition across\n\
    \           Metrics Blocks ............................................11\n  \
    \ 6. An Example of a Metrics Block ..................................11\n   7.\
    \ Application to RFC 5117 Topologies .............................12\n      7.1.\
    \ Applicability to Translators ..............................13\n      7.2. Applicability\
    \ to MCUs .....................................13\n   8. Security Considerations\
    \ ........................................14\n   9. Acknowledgements ...............................................14\n\
    \   10. Informative References ........................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Multimedia services using the Real-time Transport Protocol\
    \ (RTP) are\n   seeing increased use.  Standard methods for gathering RTP performance\n\
    \   metrics from these applications are needed to manage uncertainties in\n  \
    \ the behavior and availability of their services.  Standards such as\n   \"RTP\
    \ Control Protocol Extended Reports (RTCP XR)\" [RFC3611] as well\n   as other\
    \ RTCP extensions to sender reports (SRs) and receiver reports\n   (RRs) [RFC3550]\
    \ are being developed for the purpose of collecting and\n   reporting performance\
    \ metrics from endpoint devices that can be used\n   to correlate the metrics,\
    \ provide end-to-end service visibility, and\n   measure and monitor Quality of\
    \ Experience (QoE) [RFC6390].\n   However, the proliferation of RTP-/RTCP-specific\
    \ metrics for\n   transport and application quality monitoring has been identified\
    \ as a\n   potential problem for interoperability when using RTP/RTCP to\n   communicate\
    \ all the parameters of concern to a specific application.\n   Given that different\
    \ applications layered on RTP may have some\n   monitoring requirements in common,\
    \ these metrics should be satisfied\n   by a common design.\n   The objective\
    \ of this document is to describe an extensible RTP\n   monitoring framework to\
    \ provide a small number of reusable Quality of\n   Service (QoS) / QoE metrics\
    \ that facilitate reduced implementation\n   costs and help maximize interoperability.\
    \  \"Guidelines for Extending\n   the RTP Control Protocol (RTCP)\" [RFC5968]\
    \ has stated that where RTCP\n   is to be extended with a new metric, the preferred\
    \ mechanism is by\n   the addition of a new RTCP XR [RFC3611] block.  This memo\
    \ assumes\n   that all the guidelines from RFC 5968 must apply on top of the\n\
    \   guidelines in this document.  Guidelines for developing new\n   performance\
    \ metrics are specified in [RFC6390].  New RTCP XR report\n   block definitions\
    \ should not define new performance metrics but\n   should rather refer to metrics\
    \ defined elsewhere.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This memo is informative and as such contains no normative\n\
    \   requirements.\n   In addition, the following terms are defined:\n   Transport-level\
    \ metrics\n      A set of metrics that characterize the three transport impairments\n\
    \      of packet loss, packet delay, and jitter (also known as delay\n      variation).\
    \  These metrics should be usable by any application\n      that uses RTP transport.\n\
    \   Application-level metrics\n      Metrics relating to application-specific\
    \ parameters or QoE-related\n      parameters.  Application-specific parameters\
    \ are measured at the\n      application level and focus on quality of content\
    \ rather than\n      network performance.  QoE-related parameters reflect the\
    \ end-to-\n      end performance at the services level and are usually measured\
    \ at\n      the user endpoint.  One example of such metrics is the QoE metric\n\
    \      as specified in the QoE Metrics Report Block; see [QOE_BLOCK].\n   End-system\
    \ metrics\n      Metrics relating to the way a terminal deals with transport\n\
    \      impairments affecting the incident RTP stream.  These may include\n   \
    \   de-jitter buffering, packet loss concealment, and the use of\n      redundant\
    \ streams (if any) for correction of error or loss.\n   Direct metrics\n     \
    \ Metrics that can be directly measured or calculated and are not\n      dependent\
    \ on other metrics.\n   Interval metrics\n      Metrics measured over the course\
    \ of a single reporting interval\n      between two successive report blocks.\
    \  This may be the most recent\n      RTCP reporting interval ([RFC3550], Section\
    \ 6.2) or some other\n      interval signaled using an RTCP Measurement Information\
    \ XR Block\n      [RFC6776].  An example interval metric is the count of the number\n\
    \      of RTP packets lost over the course of the last RTCP reporting\n      interval.\n\
    \   Cumulative metrics\n      Metrics measured over several reporting intervals\
    \ for accumulating\n      statistics.  The time period over which measurements\
    \ are\n      accumulated can be the complete RTP session, or some other\n    \
    \  interval signaled using an RTCP Measurement Information XR Block\n      [RFC6776].\
    \  An example cumulative metric is the total number of\n      RTP packets lost\
    \ since the start of the RTP session.\n   Sampled metrics\n      Metrics measured\
    \ at a particular time instant and sampled from the\n      values of a continuously\
    \ measured or calculated metric within a\n      reporting interval (generally,\
    \ the value of some measurement as\n      taken at the end of the reporting interval).\
    \  An example is the\n      inter-arrival jitter reported in RTCP SR and RR packets,\
    \ which is\n      continually updated as each RTP data packet arrives but is only\n\
    \      reported based on a snapshot of the value that is sampled at the\n    \
    \  instant the reporting interval ends.\n"
- title: 3.  RTP Monitoring Framework
  contents:
  - "3.  RTP Monitoring Framework\n   There are many ways in which the performance\
    \ of an RTP session can be\n   monitored.  These include RTP-based mechanisms\
    \ such as the RTP MIB\n   module [RFC2959]; or the Session Initiation Protocol\
    \ (SIP) event\n   package for RTCP summary reports [RFC6035]; or non-RTP mechanisms\n\
    \   such as generic MIBs, NetFlow [RFC3954], IP Flow Information Export\n   (IPFIX)\
    \ [RFC5101] [RFC5102], and so on.  Together, these provide\n   useful mechanisms\
    \ for exporting data on the performance of an RTP\n   session to non-RTP network\
    \ management systems.  It is desirable to\n   also perform in-session monitoring\
    \ of RTP performance.  RTCP provides\n   the means to do this.  In the following,\
    \ we review the RTP Monitoring\n   Framework, and give guidance for using and\
    \ extending RTCP for\n   monitoring RTP sessions.  One major benefit of such a\
    \ framework is\n   ease of integration with other RTP/RTCP mechanisms.\n"
- title: 3.1.  Overview of the RTP Monitoring Framework
  contents:
  - "3.1.  Overview of the RTP Monitoring Framework\n   The RTP monitoring Framework\
    \ comprises the following two key\n   functional components described below:\n\
    \   o  Monitor\n   o  RTP Metrics Block\n   \"Monitor\" is the functional component\
    \ defined in the RTP\n   specification [RFC3550].  It acts as a repository of\
    \ information\n   gathered for monitoring purposes.\n   According to the definition\
    \ of \"monitor\" in [RFC3550], the end system\n   that runs an application program\
    \ that sends or receives RTP data\n   packets, an intermediate system that forwards\
    \ RTP packets to end\n   devices, or a third party that observes the RTP and RTCP\
    \ traffic but\n   does not make itself visible to the RTP Session participants\
    \ can play\n   the role of the monitor within the RTP monitoring framework.  As\n\
    \   shown in Figure 1, the third-party monitor can be a passive monitor\n   that\
    \ sees the RTP/RTCP stream pass it, or a system that gets sent\n   RTCP reports\
    \ but not RTP and uses that to collect information.  The\n   third-party monitor\
    \ should be placed on the RTP/RTCP path between the\n   sender, the intermediate\
    \ system, and the receiver.\n   The RTP Metrics Block (MB) conveys real-time application\
    \ QoS/QoE\n   metric information and is used by the monitor to exchange information\n\
    \   with other monitors in the appropriate report block format.  The\n   information\
    \ contained in the RTP MBs is collected by monitors and can\n   be formulated\
    \ as various types of metrics, e.g., direct metrics/\n   composed performance\
    \ metrics [RFC6390] or interval metrics/cumulative\n   metrics/sampled metrics,\
    \ etc.  Both the RTCP and RTCP XR can be\n   extended to transport these metrics,\
    \ e.g., the basic RTCP reception\n   report [RFC3550] that conveys reception statistics\
    \ (i.e., transport-\n   level statistics) for multiple RTP media streams, the\
    \ RTCP XRs\n   [RFC3611] that supplement the existing RTCP packets and provide\
    \ more\n   detailed feedback on reception quality, and an RTCP NACK [RFC4585]\n\
    \   that provides feedback on the RTP sequence numbers for a subset of\n   the\
    \ lost packets or all the currently lost packets.  Ultimately, the\n   metric\
    \ information collected by monitors within the RTP monitoring\n   framework may\
    \ go to the network management tools beyond the RTP\n   monitoring framework;\
    \ e.g., as shown in Figure 1, the monitors may\n   export the metric information\
    \ derived from the RTP monitoring\n   framework to the management system using\
    \ non-RTP means.\n                  +-----------+                  +----------+\n\
    \                  |Third-Party|                  |Management|\n             \
    \     |  Monitor  |          >>>>>>>>|  System  |<<<<<\n                  +-----------+\
    \          ^       +----------+    ^\n                      :   ^            \
    \  ^                       ^\n                      :   |              ^     \
    \                  ^\n   +---------------+  :   |       +-------------+      \
    \  +-------------+\n   | +-----------+ |  :   |       |+-----------+|        |+-----------+|\n\
    \   | |  Monitor  | |..:...|.......||  Monitor  ||........||  Monitor  ||\n  \
    \ | +-----------+ |      |       |+-----------+|        |+-----------+|\n   |\
    \               |------+------>|             |------->|             |\n   | RTP\
    \ Sender    |              |RTP Mixer or |        |RTP Receiver |\n   |      \
    \         |              |Translator   |        |             |\n   +---------------+\
    \              +-------------+        +-------------+\n   ----> RTP media traffic\n\
    \   ..... RTCP control channel\n   >>>>> Non-RTP/RTCP management flows\n     \
    \            Figure 1: Example Showing the Components\n                      of\
    \ the RTP Monitoring Framework\n   RTP may be used with multicast groups: both\
    \ Any-Source Multicast\n   (ASM) and Source-Specific Multicast (SSM).  These groups\
    \ can be\n   monitored using RTCP.  In the ASM case, the monitor is a member of\n\
    \   the multicast group and listens to RTCP reports from all members of\n   the\
    \ ASM group.  In the SSM case, there is a unicast feedback target\n   that receives\
    \ RTCP feedback from receivers and distributes it to\n   other members of the\
    \ SSM group (see Figure 1 of [RFC5760]).  The\n   monitor will need to be co-located\
    \ with the feedback target to\n   receive all feedback from the receivers (this\
    \ may also be an\n   intermediate system).  In both ASM and SSM scenarios, receivers\
    \ can\n   send RTCP reports to enhance reception-quality reporting.\n"
- title: 3.2.  Location of Monitors
  contents:
  - "3.2.  Location of Monitors\n   As shown in Figure 1, there are several possible\
    \ locations from which\n   RTP sessions can be monitored.  These include end systems\
    \ that\n   terminate RTP sessions, intermediate systems that are an active part\n\
    \   of an RTP session, and third-party devices that passively monitor an\n   RTP\
    \ session.  Not every RTP session will include monitoring, and\n   those sessions\
    \ that are monitored will not all include each type of\n   monitor.  The performance\
    \ metrics collected by monitors can be\n   divided into end-system metrics, application-level\
    \ metrics, and\n   transport-level metrics.  Some of these metrics may be specific\
    \ to\n   the measurement point of the monitor or may depend on where the\n   monitors\
    \ are located in the network, while others are more general\n   and can be collected\
    \ in any monitoring location.\n   End-system monitoring is monitoring that is\
    \ deployed on devices that\n   terminate RTP flows.  Flows can be terminated in\
    \ user equipment, such\n   as phones, videoconferencing systems, or IPTV set-top\
    \ boxes.\n   Alternatively, they can be terminated in devices that gateway between\n\
    \   RTP and other transport protocols.  Transport-level metrics, end-\n   system\
    \ metrics, and application-level metrics that don't reflect the\n   end-to-end\
    \ user experience may be collected at all types of end\n   systems, but some application-level\
    \ metrics (i.e., quality of\n   experience (QoE) metrics) may only be applicable\
    \ for user-facing end\n   systems.\n   RTP sessions can include intermediate systems\
    \ that are an active part\n   of the system.  These intermediate systems include\
    \ RTP mixers and\n   translators, Multipoint Control Units (MCUs), retransmission\
    \ servers,\n   etc.  If the intermediate system establishes separate RTP sessions\
    \ to\n   the other participants, then it must act as an end system in each of\n\
    \   those separate RTP sessions for the purposes of monitoring.  If a\n   single\
    \ RTP session traverses the intermediate system, then the\n   intermediate system\
    \ can be assigned a synchronization source (SSRC)\n   in that session, which it\
    \ can use for its reports.  Transport-level\n   metrics may be collected at such\
    \ an intermediate system.\n   Third-party monitors may be deployed that passively\
    \ monitor RTP\n   sessions for network management purposes.  Third-party monitors\
    \ often\n   do not send reports into the RTP session being monitored but instead\n\
    \   collect transport-level metrics, end-system metrics, and application-\n  \
    \ level metrics.  In some cases, however, third-party monitors can send\n   reports\
    \ to some or all participants in the session being monitored.\n   For example,\
    \ in a media streaming scenario, third-party monitors may\n   be deployed that\
    \ passively monitor the session and send reception-\n   quality reports to the\
    \ media source but not to the receivers.\n"
- title: 4.  Issues with Reporting Metrics Blocks Using RTCP XR Extensions
  contents:
  - "4.  Issues with Reporting Metrics Blocks Using RTCP XR Extensions\n   The following\
    \ sections discuss four issues that have come up in the\n   past with reporting\
    \ metrics blocks using RTCP XR extensions.\n"
- title: 4.1.  Using a Compound Metrics Block
  contents:
  - "4.1.  Using a Compound Metrics Block\n   A compound metrics block is designed\
    \ to contain a large number of\n   parameters from different classes for a specific\
    \ application in a\n   single block.  For example, \"RTP Control Protocol Extended\
    \ Reports\n   (RTCP XR)\" [RFC3611] defines seven report block formats for network\n\
    \   management and quality monitoring.  Some of these block types defined\n  \
    \ in the RTCP XRs [RFC3611] are only specifically designed for\n   conveying multicast\
    \ inference of network characteristics (MINC) or\n   voice over IP (VoIP) monitoring.\
    \  However, different applications\n   layered on RTP may have different monitoring\
    \ requirements.  Designing\n   a compound metrics block only for specific applications\
    \ may increase\n   implementation costs and minimize interoperability.\n"
- title: 4.2.  Correlating RTCP XR with Non-RTP Data
  contents:
  - "4.2.  Correlating RTCP XR with Non-RTP Data\n   The Canonical End-Point Identifier\
    \ SDES Item (CNAME), as defined in\n   RTP [RFC3550], is an example of an existing\
    \ tool that allows binding\n   an SSRC that may change to a name that is fixed\
    \ within one RTP\n   session.  The CNAME may also be fixed across multiple RTP\
    \ sessions\n   from the same source.  However, there may be situations where RTCP\n\
    \   reports are sent to other participating endpoints using a non-RTP\n   protocol\
    \ in a session.  For example, as described in [RFC6035] in\n   relation to summary\
    \ reports, the data contained in RTCP XR VoIP\n   metrics reports [RFC3611] is\
    \ forwarded to a central collection server\n   system using SIP.  In such a case,\
    \ there is a large portfolio of\n   quality parameters that can be associated\
    \ with real-time\n   applications, e.g., VOIP applications, but only a minimal\
    \ number of\n   parameters are included in the RTCP XRs.  With this minimal number\
    \ of\n   RTCP statistical parameters mapped to non-RTCP measurements, it is\n\
    \   hard to provide accurate measurements of real-time application\n   quality,\
    \ conduct detailed data analysis, and create timely alerts for\n   users.  Therefore,\
    \ a correlation between RTCP XRs and non-RTP data\n   should be provided.\n"
- title: 4.3.  Measurement Information Duplication
  contents:
  - "4.3.  Measurement Information Duplication\n   We may set a measurement interval\
    \ for the session and monitor RTP\n   packets within one or several consecutive\
    \ report intervals.  In such\n   a case, extra measurement information (e.g.,\
    \ extended sequence number\n   of the first packet, measurement period) may be\
    \ expected.  However,\n   if we put such extra measurement information into each\
    \ metrics block,\n   there may be situations where an RTCP XR packet that contains\n\
    \   multiple metrics blocks will report on the same streams from the same\n  \
    \ source.  In other words, duplicated data for the measurement is\n   provided\
    \ multiple times, once in every metrics block.  Though this\n   design ensures\
    \ immunity to packet loss, it may result in more\n   packetization complexity,\
    \ and this processing overhead is not\n   completely trivial in some cases.  Therefore,\
    \ a compromise between\n   processing overhead and reliability should be taken\
    \ into account.\n"
- title: 4.4.  Consumption of XR Block Code Points
  contents:
  - "4.4.  Consumption of XR Block Code Points\n   The RTCP XR block namespace is\
    \ limited by the 8-bit block type field\n   in the RTCP XR header.  Space exhaustion\
    \ may be a concern in the\n   future.  In anticipation of the potential need to\
    \ extend the block\n   type space, it is noted that Block Type 255 is reserved\
    \ for future\n   extensions in [RFC3611].\n"
- title: 5.  Guidelines for Reporting Metrics Blocks Using RTCP XR
  contents:
  - '5.  Guidelines for Reporting Metrics Blocks Using RTCP XR

    '
- title: 5.1.  Use a Single Metric in the Metrics Block
  contents:
  - "5.1.  Use a Single Metric in the Metrics Block\n   Different applications using\
    \ RTP for media transport certainly have\n   differing requirements for metrics\
    \ transported in RTCP to support\n   their operation.  For many applications,\
    \ the basic metrics for\n   transport impairments provided in RTCP SR and RR packets\
    \ [RFC3550]\n   (together with source identification provided in RTCP Source\n\
    \   Description (SDES) packets) are sufficient.  For other applications,\n   additional\
    \ metrics may be required or at least may be sufficiently\n   useful to justify\
    \ the overhead, in terms of both processing in\n   endpoints and of increased\
    \ session bandwidth.  For example, an IPTV\n   application using Forward Error\
    \ Correction (FEC) might use either a\n   metric of post-repair loss or a metric\
    \ giving detailed information\n   about pre-repair loss bursts to optimize payload\
    \ bandwidth and the\n   strength of FEC required for changing network conditions.\
    \  However,\n   there are many metrics available.  It is likely that different\n\
    \   applications or classes of applications will wish to use different\n   metrics.\
    \  Any one application is likely to require metrics for more\n   than one parameter,\
    \ but if this is the case, different applications\n   will almost certainly require\
    \ different combinations of metrics.  If\n   larger blocks are defined containing\
    \ multiple metrics to address the\n   needs of each application, it becomes likely\
    \ that many such different\n   larger blocks are defined, which poses a danger\
    \ to interoperability.\n   To avoid this pitfall, this memo recommends the definition\
    \ of metrics\n   blocks containing a very small number of individual metrics\n\
    \   characterizing only one parameter of interest to an application\n   running\
    \ over RTP.  For example, at the RTP transport layer, the\n   parameter of interest\
    \ might be packet delay variation, and\n   specifically the metric \"IP Packet\
    \ Delay Variation (IPDV)\" defined by\n   [Y1540].  See Section 6 for architectural\
    \ considerations for a\n   metrics block, using as an example a metrics block\
    \ to report packet\n   delay variation.  Further, it is appropriate to not only\
    \ define\n   report blocks separately but also to do so in separate documents\n\
    \   where possible.  This makes it easier to evolve the reports (i.e., to\n  \
    \ update each type of report block separately) and also makes it easier\n   to\
    \ require compliance with a particular report block.\n"
- title: 5.2.  Include the Payload Type in the Metrics Block
  contents:
  - "5.2.  Include the Payload Type in the Metrics Block\n   There are some classes\
    \ of metrics that can only be interpreted with\n   knowledge of the media codec\
    \ that is being used (audio mean opinion\n   scores (MOSs) were the triggering\
    \ example, but there may be others).\n   In such cases, the correlation of an\
    \ RTCP XR with RTP data is needed.\n   Report blocks that require such correlation\
    \ need to include the\n   payload type of the reported media.  In addition, it\
    \ is necessary to\n   signal the details and parameters of the payload format\
    \ to which that\n   payload type is bound using some out-of-band means (e.g.,\
    \ as part of\n   a Session Description Protocol (SDP) offer/answer exchange).\n"
- title: 5.3.  Use RTCP SDES to Correlate XRs with Non-RTP Data
  contents:
  - "5.3.  Use RTCP SDES to Correlate XRs with Non-RTP Data\n   There may be situations\
    \ where more than one media transport protocol\n   is used by one application\
    \ to interconnect to the same session in the\n   gateway.  For example, one RTCP\
    \ XR packet is sent to the\n   participating endpoints using non-RTP-based media\
    \ transport (e.g.,\n   using SIP) in a VoIP session.  One crucial factor lies\
    \ in how to\n   handle the different identities that correspond to these different\n\
    \   media transport protocols.\n   This memo recommends an approach to facilitate\
    \ the correlation of the\n   RTCP session with other session-related non-RTP data.\
    \  That is to\n   say, if there is a need to correlate RTP sessions with non-RTP\n\
    \   sessions, then the correlation information needed should be conveyed\n   in\
    \ a new RTCP SDES item, since such correlation information describes\n   the source\
    \ rather than providing a quality report.  An example use\n   case is where a\
    \ participant endpoint may convey a call identifier or\n   a global call identifier\
    \ associated with the SSRC of a measured RTP\n   stream.  In such a case, the\
    \ participant endpoint uses the SSRC to\n   bind the call identifier using the\
    \ SDES item in the SDES RTCP packet\n   and sends this correlation to the network\
    \ management system.  A flow\n   measurement tool that is configured with the\
    \ 5-tuple and is not call-\n   aware then forwards the RTCP XRs along with the\
    \ SSRC of the measured\n   RTP stream, which is included in the XR Block header\
    \ and 5-tuple to\n   the network management system.  The network management system\
    \ can\n   then correlate this report using SSRC with other diagnostic\n   information,\
    \ such as call detail records.\n"
- title: 5.4.  Reduce Measurement Information Repetition across Metrics Blocks
  contents:
  - "5.4.  Reduce Measurement Information Repetition across Metrics Blocks\n   When\
    \ multiple metrics blocks are carried in one RTCP XR packet,\n   reporting on\
    \ the same stream from the same source for the same time\n   period, RTCP should\
    \ use the SSRC to identify and correlate the\n   multiple metrics blocks placed\
    \ between Measurement Information\n   Blocks; see \"Measurement Identity and Information\
    \ Reporting Using a\n   Source Description (SDES) Item and an RTCP Extended Report\
    \ (XR)\n   Block\" [RFC6776].  [RFC6776] enables an RTCP sender to convey the\n\
    \   common time period and the number of packets sent during this period.\n  \
    \ If the measurement interval for a metric is different from the RTCP\n   reporting\
    \ interval, then this measurement duration in the Measurement\n   Information\
    \ Block should be used to specify the interval.  When there\n   may be multiple\
    \ Measurement Information Blocks with the same SSRC in\n   one RTCP XR compound\
    \ packet, the Measurement Information Block should\n   be put in order and followed\
    \ by all the metrics blocks associated\n   with this Measurement Information Block.\
    \  New RTCP XR metrics blocks\n   that rely on the Measurement Information Block\
    \ must specify the\n   response in case the new RTCP XR metrics block is received\
    \ without an\n   associated Measurement Information Block.  In most cases, it\
    \ is\n   expected that the correct response is to discard the received metric.\n\
    \   In order to reduce measurement information repetition in one RTCP XR\n   compound\
    \ packet containing multiple metrics blocks, the measurement\n   information shall\
    \ be sent before the related metrics blocks that are\n   from the same reporting\
    \ interval.  Note that for packet loss\n   robustness, if the report blocks for\
    \ the same interval span more than\n   one RTCP packet, then each block must have\
    \ the measurement identity\n   information sent together with itself in the same\
    \ RTCP compound\n   packet, even though the information will be the same.\n"
- title: 6.  An Example of a Metrics Block
  contents:
  - "6.  An Example of a Metrics Block\n   This section uses the example of an existing\
    \ proposed metrics block\n   to illustrate the application of the principles set\
    \ out in Section 5.\n   The example [RFC6798] is a block to convey information\
    \ about packet\n   delay variation (PDV) only, consistent with the principle that\
    \ a\n   metrics block should address only one parameter of interest.  One\n  \
    \ simple metric of PDV is available in the RTCP RR packet as the\n   \"inter-arrival\
    \ jitter\" field.  There are other PDV metrics with a\n   certain similarity in\
    \ metric structure that may be more useful to\n   certain applications.  Two such\
    \ metrics are the IPDV metric ([Y1540]\n   [RFC3393]) and the mean absolute packet\
    \ delay variation 2 (MAPDV2)\n   metric [G1020].  The use of these metrics is\
    \ consistent with the\n   principle in Section 5 of the RTCP guidelines document\
    \ [RFC5968] that\n   metrics should usually be defined elsewhere, so that RTCP\
    \ standards\n   define only the transport of the metric rather than its nature.\
    \  The\n   purpose of this section is to illustrate the architectural\n   considerations,\
    \ using the example of [RFC6798], rather than to\n   document the design of the\
    \ PDV metrics block or to provide a tutorial\n   on PDV in general.\n   Given\
    \ the availability of at least three metrics for PDV, there are\n   design options\
    \ for the allocation of metrics to RTCP XR blocks:\n   o  Provide an RTCP XR block\
    \ per metric.\n   o  Provide a single RTCP XR block that contains all three metrics.\n\
    \   o  Provide a single RTCP block to convey any one of the three\n      metrics,\
    \ together with an identifier to inform the receiving RTP\n      system of the\
    \ specific metric being conveyed.\n   In choosing between these options, extensibility\
    \ is important,\n   because additional metrics of PDV may well be standardized\
    \ and\n   require inclusion in this framework.  The first option is extensible\n\
    \   but only by the use of additional RTCP XR blocks, which may consume\n   the\
    \ limited namespace for RTCP XR blocks at an unacceptable rate.\n   The second\
    \ option is not extensible and so could be rejected on that\n   basis, but in\
    \ any case a single application is quite unlikely to\n   require the transport\
    \ of more than one metric for PDV.  Hence, the\n   third option was chosen.  This\
    \ implies the creation of a subsidiary\n   namespace to enumerate the PDV metrics\
    \ that may be transported by\n   this block, as discussed further in [RFC6798].\n"
- title: 7.  Application to RFC 5117 Topologies
  contents:
  - "7.  Application to RFC 5117 Topologies\n   The topologies specified in [RFC5117]\
    \ fall into two categories.  The\n   first category relates to the RTP system\
    \ model utilizing multicast\n   and/or unicast.  The topologies in this category\
    \ are specifically\n   Topo-Point-to-Point, Topo-Multicast, Topo-Translator (both\
    \ variants\n   Topo-Trn-Translator and Topo-Media-Translator as well as combinations\n\
    \   of the two), and Topo-Mixer.  These topologies use RTP end systems,\n   RTP\
    \ mixers, and RTP translators as defined in [RFC3550].  For the\n   purposes of\
    \ reporting connection quality to other RTP systems, RTP\n   mixers and RTP end\
    \ systems are very similar.  Mixers resynchronize\n   packets and do not relay\
    \ RTCP reports received from one cloud towards\n   other cloud(s).  Translators\
    \ do not resynchronize packets and should\n   forward certain RTCP reports between\
    \ clouds.  In this category, the\n   RTP system (end system, mixer, or translator)\
    \ that originates,\n   terminates, or forwards RTCP XR blocks is expected to handle\
    \ RTCP,\n   including RTCP XR, according to RTP [RFC3550].  Provided this\n  \
    \ expectation is met, an RTP system using RTCP XR is architecturally no\n   different\
    \ from an RTP system of the same class (end system, mixer, or\n   translator)\
    \ that does not use RTCP XR.  The second category relates\n   to deployed system\
    \ models used in many H.323 [H323] videoconferences.\n   The topologies in this\
    \ category are Topo-Video-switch-MCU and\n   Topo-RTCP-terminating-MCU.  Such\
    \ topologies based on systems (e.g.,\n   MCUs) do not behave according to RTP\
    \ [RFC3550].\n   Considering that the translator and MCU are two typical intermediate\n\
    \   systems in these two categories mentioned above, this document will\n   take\
    \ them as two typical examples to explain how RTCP XR works in\n   different [RFC5117]\
    \ topologies.\n"
- title: 7.1.  Applicability to Translators
  contents:
  - "7.1.  Applicability to Translators\n   Section 7.2 of the RTP specification [RFC3550]\
    \ describes the\n   processing of RTCP by translators.  RTCP XR is within the\
    \ scope of\n   the recommendations of [RFC3550].  Some RTCP XR metrics blocks\
    \ may\n   usefully be measured at, and reported by, translators.  As described\n\
    \   in [RFC3550], this creates a requirement for the translator to\n   allocate\
    \ an SSRC for the monitor co-located with itself so that the\n   monitor may populate\
    \ the SSRC in the RTCP XR packet header as the\n   packet sender SSRC and send\
    \ it out (although the translator is not a\n   synchronization source in the sense\
    \ of originating RTP media\n   packets).  It must also supply this SSRC and the\
    \ corresponding CNAME\n   in RTCP SDES packets.\n   In RTP sessions where one\
    \ or more translators generate any RTCP\n   traffic towards their next-neighbor\
    \ RTP system, other translators in\n   the session have a choice as to whether\
    \ they forward a translator's\n   RTCP packets.  Forwarding may provide additional\
    \ information to other\n   RTP systems in the connection but increases RTCP bandwidth\
    \ and may in\n   some cases present a security risk.  RTP translators may have\n\
    \   forwarding behavior based on local policy, which might differ between\n  \
    \ different interfaces of the same translator.\n"
- title: 7.2.  Applicability to MCUs
  contents:
  - "7.2.  Applicability to MCUs\n   Topo-Video-switch-MCU and Topo-RTCP-terminating-MCU\
    \ suffer from the\n   difficulties described in [RFC5117].  These difficulties\
    \ apply to\n   systems sending, and expecting to receive, RTCP XR blocks as much\
    \ as\n   to systems using other RTCP packet types.  For example, a participant\n\
    \   RTP end system may send media to a video switch MCU.  If the media\n   stream\
    \ is not selected for forwarding by the switch, neither RTCP RR\n   packets nor\
    \ RTCP XR blocks referring to the end system's generated\n   stream will be received\
    \ at the RTP end system.  Strictly speaking,\n   the RTP end system can only conclude\
    \ that its RTP has been lost in\n   the network, though an RTP end system complying\
    \ with the robustness\n   principle of [RFC1122] should survive with essential\
    \ functions (i.e.,\n   media distribution) unimpaired.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document focuses on the RTCP reporting extension\
    \ using RTCP XR\n   and should not give rise to any new security vulnerabilities\
    \ beyond\n   those described in RTCP XRs [RFC3611].  However, it also describes\n\
    \   the architectural framework to be used for monitoring at the RTP\n   layer.\
    \  The security issues with monitoring need to be considered.\n   In RTP sessions,\
    \ an RTP system may use its own SSRC to send its\n   monitoring reports towards\
    \ its next-neighbor RTP system.  Other RTP\n   systems in the session may have\
    \ a choice as to whether they forward\n   this RTP system's RTCP packets.  This\
    \ presents a security issue,\n   since the information in the report may be exposed\
    \ by the other RTP\n   system to any malicious node.  Therefore, if the information\
    \ is\n   considered sensitive, the monitoring reports should be secured to the\n\
    \   same extent as the RTP flows that they measure.  If encryption is\n   used\
    \ and the encrypted monitoring report is received by the RTP\n   system that deploys\
    \ the third-party monitor, the RTP system may\n   decrypt the monitor report for\
    \ the third-party monitor based on local\n   policy (e.g., third-party monitors\
    \ are allowed access to the metric)\n   and forward it to the third-party monitor;\
    \ otherwise, the third-party\n   monitor should discard the received encrypted\
    \ monitoring report.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank Colin Perkins, Charles\
    \ Eckel, Robert\n   Sparks, Salvatore Loreto, Graeme Gibbs, Debbie Greenstreet,\
    \ Keith\n   Drage, Dan Romascanu, Ali C. Begen, Roni Even, Magnus Westerlund,\n\
    \   Meral Shirazipour, Tina Tsou, Barry Leiba, Benoit Claise, Russ\n   Housley,\
    \ and Stephen Farrell for their valuable comments and\n   suggestions on early\
    \ versions of this document.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [G1020]      ITU-T, \"Performance parameter definitions\
    \ for quality of\n                speech and other voiceband applications utilizing\
    \ IP\n                networks\", ITU-T Rec. G.1020, July 2006.\n   [H323]   \
    \    ITU-T, \"Packet-based multimedia communications systems\",\n            \
    \    ITU-T Rec. H.323, December 2009.\n   [QOE_BLOCK]  Clark, A., Wu, Q., Schott,\
    \ R., and G. Zorn, \"RTP Control\n                Protocol (RTCP) Extended Report\
    \ (XR) Blocks for QoE\n                Metric Reporting\", Work in Progress, October\
    \ 2012.\n   [RFC1122]    Braden, R., \"Requirements for Internet Hosts -\n   \
    \             Communication Layers\", STD 3, RFC 1122, October 1989.\n   [RFC2959]\
    \    Baugher, M., Strahm, B., and I. Suconick, \"Real-Time\n                Transport\
    \ Protocol Management Information Base\",\n                RFC 2959, October 2000.\n\
    \   [RFC3393]    Demichelis, C. and P. Chimento, \"IP Packet Delay\n         \
    \       Variation Metric for IP Performance Metrics (IPPM)\",\n              \
    \  RFC 3393, November 2002.\n   [RFC3550]    Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V.\n                Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \                Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3611]  \
    \  Friedman, T., Caceres, R., and A. Clark, \"RTP Control\n                Protocol\
    \ Extended Reports (RTCP XR)\", RFC 3611,\n                November 2003.\n  \
    \ [RFC3954]    Claise, B., \"Cisco Systems NetFlow Services Export\n         \
    \       Version 9\", RFC 3954, October 2004.\n   [RFC4585]    Ott, J., Wenger,\
    \ S., Sato, N., Burmeister, C., and J.\n                Rey, \"Extended RTP Profile\
    \ for Real-time Transport\n                Control Protocol (RTCP)-Based Feedback\
    \ (RTP/AVPF)\",\n                RFC 4585, July 2006.\n   [RFC5101]    Claise,\
    \ B., \"Specification of the IP Flow Information\n                Export (IPFIX)\
    \ Protocol for the Exchange of IP Traffic\n                Flow Information\"\
    , RFC 5101, January 2008.\n   [RFC5102]    Quittek, J., Bryant, S., Claise, B.,\
    \ Aitken, P., and J.\n                Meyer, \"Information Model for IP Flow Information\n\
    \                Export\", RFC 5102, January 2008.\n   [RFC5117]    Westerlund,\
    \ M. and S. Wenger, \"RTP Topologies\",\n                RFC 5117, January 2008.\n\
    \   [RFC5760]    Ott, J., Chesterfield, J., and E. Schooler, \"RTP Control\n \
    \               Protocol (RTCP) Extensions for Single-Source Multicast\n     \
    \           Sessions with Unicast Feedback\", RFC 5760,\n                February\
    \ 2010.\n   [RFC5968]    Ott, J. and C. Perkins, \"Guidelines for Extending the\n\
    \                RTP Control Protocol (RTCP)\", RFC 5968, September 2010.\n  \
    \ [RFC6035]    Pendleton, A., Clark, A., Johnston, A., and H.\n              \
    \  Sinnreich, \"Session Initiation Protocol Event Package\n                for\
    \ Voice Quality Reporting\", RFC 6035, November 2010.\n   [RFC6390]    Clark,\
    \ A. and B. Claise, \"Guidelines for Considering New\n                Performance\
    \ Metric Development\", BCP 170, RFC 6390,\n                October 2011.\n  \
    \ [RFC6776]    Clark, A. and Q. Wu, \"Measurement Identity and\n             \
    \   Information Reporting Using a Source Description (SDES)\n                Item\
    \ and an RTCP Extended Report (XR) Block\", RFC 6776,\n                October\
    \ 2012.\n   [RFC6798]    Clark, A. and Q. Wu, \"RTP Control Protocol (RTCP)\n\
    \                Extended Report (XR) Block for Packet Delay Variation\n     \
    \           Metric Reporting\", RFC 6798, November 2012.\n   [Y1540]      ITU-T,\
    \ \"IP packet transfer and availability performance\n                parameters\"\
    , ITU-T Rec. Y.1540, March 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Qin Wu (editor)\n   Huawei\n   101 Software Avenue, Yuhua\
    \ District\n   Nanjing, Jiangsu  210012\n   China\n   EMail: sunseawq@huawei.com\n\
    \   Geoff Hunt\n   Unaffiliated\n   EMail: r.geoff.hunt@gmail.com\n   Philip Arden\n\
    \   BT\n   Orion 3/7 PP4\n   Adastral Park\n   Martlesham Heath\n   Ipswich, Suffolk\
    \  IP5 3RE\n   United Kingdom\n   Phone: +44 1473 644192\n   EMail: philip.arden@bt.com\n"
