- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                         T. Henderson
  contents:
  - "Internet Research Task Force (IRTF)                         T. Henderson\n  \
    \         The Host Identity Protocol (HIP) Experiment Report\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is a report from the IRTF Host Identity Protocol (HIP)\n\
    \   research group documenting the collective experiences and lessons\n   learned\
    \ from studies, related experimentation, and designs completed\n   by the research\
    \ group.  The document summarizes implications of\n   adding HIP to host protocol\
    \ stacks, Internet infrastructure, and\n   applications.  The perspective of a\
    \ network operator, as well as a\n   list of HIP experiments, are presented as\
    \ well.  Portions of this\n   report may be relevant also to other network overlay-based\n\
    \   architectures or to attempts to deploy alternative networking\n   architectures.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the IRTF HIP\n   Research Group of the Internet Research Task Force (IRTF).\
    \  Documents\n   approved for publication by the IRSG are not a candidate for\
    \ any\n   level of Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6538.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. What is HIP? ...............................................3\n  \
    \    1.2. Terminology ................................................4\n    \
    \  1.3. Scope ......................................................4\n      1.4.\
    \ Organization ...............................................5\n   2. Host Stack\
    \ Implications .........................................6\n      2.1. Modifications\
    \ to TCP/IP Stack Implementations ..............6\n           2.1.1. ESP Implementation\
    \ Extensions .......................8\n      2.2. User-Space Implementations .................................9\n\
    \      2.3. Issues Common to Both Implementation Approaches ............9\n  \
    \         2.3.1. User-Space Handling of HITs .........................9\n    \
    \       2.3.2. Opportunistic Mode .................................10\n      \
    \     2.3.3. Resolving HITs to Addresses ........................12\n        \
    \   2.3.4. IPsec Management API Extensions ....................12\n          \
    \ 2.3.5. Transport Protocol Issues ..........................12\n           2.3.6.\
    \ Legacy NAT Traversal ...............................14\n           2.3.7. Local\
    \ Management of Host Identity Namespace ........14\n           2.3.8. Interactions\
    \ with Host Firewalls ...................15\n      2.4. IPv4 versus IPv6 Issues\
    \ ...................................15\n      2.5. What Have Early Adopters Learned\
    \ from Experience? .........16\n   3. Infrastructure Implications ....................................17\n\
    \      3.1. Impact on DNS .............................................17\n  \
    \    3.2. HIP-Aware Middleboxes .....................................17\n    \
    \  3.3. HIT Resolution Infrastructure .............................18\n      3.4.\
    \ Rendezvous Servers ........................................18\n      3.5. Hybrid\
    \ DNS-DHT Resolution .................................19\n   4. Application Implications\
    \ .......................................20\n      4.1. Non-Intrusive HIP Insertion\
    \ ...............................20\n      4.2. Referrals .................................................20\n\
    \      4.3. Latency ...................................................21\n  \
    \ 5. Network Operator's Perspective .................................21\n    \
    \  5.1. Management of the Host Identity Namespace .................21\n      5.2.\
    \ Use of ESP Encryption .....................................22\n      5.3. Access\
    \ Control Lists Based on HITs ........................22\n      5.4. Firewall\
    \ Issues ...........................................23\n   6. User Privacy Issues\
    \ ............................................24\n   7. Experimental Basis of\
    \ This Report ..............................25\n   8. Related Work on ID-Locator\
    \ Split ...............................27\n   9. Security Considerations ........................................28\n\
    \   10. Acknowledgments ...............................................28\n  \
    \ 11. Informative References ........................................29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document summarizes the work and experiences of the\
    \ IRTF's Host\n   Identity Protocol research group (HIP-RG) in the 2004-2009 time\n\
    \   frame.  The HIP-RG was chartered to explore the possible benefits and\n  \
    \ consequences of deploying the Host Identity Protocol architecture\n   [RFC4423]\
    \ in the Internet and to explore extensions to HIP.\n   This document was developed\
    \ over several years as the main charter\n   item for the HIP research group,\
    \ and it has received inputs and\n   reviews from most of the active research\
    \ group participants.  There\n   is research group consensus to publish it.\n"
- title: 1.1.  What is HIP?
  contents:
  - "1.1.  What is HIP?\n   The Host Identity Protocol architecture introduces a new\
    \ namespace,\n   the \"host identity\" namespace, to the Internet architecture.\
    \  The\n   express purpose of this new namespace is to allow for the decoupling\n\
    \   of identifiers (host identities) and locators (IP addresses) at the\n   internetworking\
    \ layer of the architecture.  The contributors to HIP\n   have expected that HIP\
    \ will enable alternative solutions for several\n   of the Internet's challenging\
    \ technical problems, including\n   potentially host mobility, host multihoming,\
    \ site multihoming, IPv6\n   transition, NAT traversal, and network-level security.\
    \  Although\n   there have been many architectural proposals to decouple identifiers\n\
    \   and locators over the past 20 years, HIP is one of the most actively\n   developed\
    \ proposals in this area [book.gurtov].\n   The Host Identity Protocol itself\
    \ provides a rapid exchange of host\n   identities (public keys) between hosts\
    \ and uses a Diffie-Hellman key\n   exchange that is compliant with Sigma (\"\
    SIGn-and-MAc\") to establish\n   shared secrets between such endpoints [RFC5201].\
    \  The protocol is\n   designed to be resistant to Denial-of-Service (DoS) and\
    \ Man-in-the-\n   Middle (MitM) attacks, and when used together with another suitable\n\
    \   security protocol, such as Encapsulated Security Payload (ESP)\n   [RFC4303],\
    \ it provides encryption and/or authentication protection\n   for upper-layer\
    \ protocols such as TCP and UDP, while enabling\n   continuity of communications\
    \ across network-layer address changes.\n   A number of Experimental RFC specifications\
    \ were published by the\n   IETF's HIP working group, including the HIP base protocol\
    \ [RFC5201],\n   ESP encapsulation [RFC5202], registration extensions [RFC5203],\
    \ HIP\n   rendezvous servers [RFC5204], DNS resource records [RFC5205], and\n\
    \   mobility management [RFC5206].  Host identities are represented as\n   Overlay\
    \ Routable Cryptographic Hash Identifiers (ORCHIDs) [RFC4843]\n   in Internet\
    \ protocols.  Additionally, the research group published\n   one RFC on requirements\
    \ for traversing NATs and firewalls [RFC5207]\n   and the working group later\
    \ published specification text for legacy\n   NAT traversal [RFC5770].  As of\
    \ this writing, work has commenced on\n   moving the above specifications to Standards\
    \ Track status.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The terms used in this document are defined elsewhere in\
    \ various\n   documents.  In particular, readers are suggested to review Section\
    \ 3\n   of [RFC4423] for a listing of HIP-specific terminology.\n"
- title: 1.3.  Scope
  contents:
  - "1.3.  Scope\n   The research group has been tasked with producing an \"experiment\n\
    \   report\" documenting the collective experiences and lessons learned\n   from\
    \ other studies, related experimentation, and designs completed by\n   the research\
    \ group.  The question of whether the basic identifier-\n   locator split assumption\
    \ is valid falls beyond the scope of this\n   research group.  When indicated\
    \ by its studies, the HIP-RG can\n   suggest extensions and modifications to the\
    \ protocol and\n   architecture.  It has also been in scope for the RG to study,\
    \ in a\n   wider sense, what the consequences and effects that wide-scale\n  \
    \ adoption of any type of separation of the identifier and locator\n   roles of\
    \ IP addresses is likely to have.\n   During the period of time when the bulk\
    \ of this report was drafted\n   (2004-2009), several research projects and open\
    \ source software\n   projects were formed to study HIP.  These projects have\
    \ been\n   developing software enabling HIP to be interoperable according to the\n\
    \   Experimental RFCs as well as supporting extensions not yet specified\n   by\
    \ RFCs.\n   The research group has been most active in two areas.  First and\n\
    \   foremost, the research group has studied extensions to HIP that went\n   beyond\
    \ the scope and charter of the IETF HIP working group and the\n   set of RFCs\
    \ (RFC 5201-5206) initially published in April 2008.  Some\n   of this work (NAT\
    \ traversal, certificate formats for HIP, legacy\n   application support, and\
    \ a native sockets API for HIP) ultimately\n   flowed into the IETF HIP working\
    \ group upon its recharter in 2008.\n   Other extensions (e.g., HIP in the Internet\
    \ Indirection\n   Infrastructure (i3) overlay, use of distributed hash tables\
    \ for HIT-\n   based (Host Identity Tag) lookups, mobile router extensions, etc.)\n\
    \   are either still being worked on in the research group or have been\n   abandoned.\
    \  Most of the energy of the research group during this time\n   period has been\
    \ in studying extensions of HIPs or the application of\n   HIP to new problem\
    \ domains (such as the Internet of Things).  Second,\n   the research group has\
    \ discussed the progress and outcome of the\n   implementations and experiments\
    \ conducted so far, as well as\n   discussing perspectives from different participants\
    \ (end users,\n   operators, enterprises) on HIP deployment.  It is this latter\n\
    \   category of work (and not the extensions to HIP) on which this report\n  \
    \ is focused.\n   Finally, the research group was chartered to study, but did\
    \ not\n   rigorously study (due to lack of inputs), the following issues:\n  \
    \ o  Objective comparisons of HIP with other mechanisms (although the\n      research\
    \ group did hold some discussions concerning the relation\n      of HIP to other\
    \ efforts such as the End-Middle-End (EME) research\n      group, the Routing\
    \ research group (RRG), and shim6-based\n      protocols).\n   o  Large scale\
    \ deployments (thousands of hosts or greater).\n   o  Exploration of whether introducing\
    \ an identity-locator mechanism\n      would be architecturally sound, deployed\
    \ at wide scale.\n   o  Changes to the HIP baseline architecture and protocol\
    \ or other\n      identity-locator separation architectures.\n"
- title: 1.4.  Organization
  contents:
  - "1.4.  Organization\n   In this report, we summarize the collective experience\
    \ of early\n   implementers and adopters of HIP, organized as follows:\n   o \
    \ Section 2 describes the implications of supporting HIP on an end\n      host.\n\
    \   o  Section 3 covers a number of issues regarding the deployment of\n     \
    \ and interaction with network infrastructure, including middlebox\n      traversal,\
    \ name resolution, Access Control Lists (ACLs), and HIP\n      infrastructure\
    \ such as rendezvous servers.\n   Whereas the two previous sections focus on the\
    \ implementation and\n   deployment of the network plumbing to make HIP work,\
    \ the next three\n   focus on the impact on users and operators of the network.\n\
    \   o  Section 4 examines how the support of HIP in the host and network\n   \
    \   infrastructure affects applications; whether and how HIP provides\n      benefits\
    \ or drawbacks to HIP-enabled and legacy applications.\n   o  Section 5 provides\
    \ an operator's perspective on HIP deployment.\n   o  Section 6 discusses user\
    \ privacy issues.\n   In closing, in Section 7, we list the experimental activities\
    \ and\n   research that have contributed to this report, and in Section 8 we\n\
    \   briefly summarize related work.\n"
- title: 2.  Host Stack Implications
  contents:
  - "2.  Host Stack Implications\n   HIP is primarily an extension to the TCP/IP stack\
    \ of Internet hosts,\n   and, in this section, we summarize some experiences that\
    \ several\n   implementation groups have encountered in developing this extension.\n\
    \   Our discussion here draws on experience of implementers in adding HIP\n  \
    \ to general-purpose computing platforms such as laptops, desktops,\n   servers,\
    \ and PDAs.  There are two primary ways to support HIP on such\n   an end host.\
    \  The first is to make changes to the kernel\n   implementation to directly support\
    \ the decoupling of identifier and\n   locator.  Although this type of modification\
    \ has data throughput\n   performance benefits, it is also the more challenging\
    \ to deploy.  The\n   second approach is to implement all HIP processing in the\
    \ user-space\n   and configure the kernel to route packets through user-space\
    \ for HIP\n   processing.\n   The following public HIP implementations are known\
    \ and actively\n   maintained:\n   o  HIP4BSD (http://www.hip4inter.net) -- FreeBSD\
    \ kernel modifications\n      and user-space keying daemon;\n   o  HIPL (http://hipl.hiit.fi)\
    \ -- Linux kernel and user-space\n      implementation;\n   o  OpenHIP (http://www.openhip.org)\
    \ -- User-space keying daemon and\n      packet processing for Linux, Windows\
    \ XP/Vista/7, and Apple OS X.\n   In the following, we first describe issues specific\
    \ to the way in\n   which HIP is added to a stack, then we discuss general issues\n\
    \   surrounding both implementation approaches.\n"
- title: 2.1.  Modifications to TCP/IP Stack Implementations
  contents:
  - "2.1.  Modifications to TCP/IP Stack Implementations\n   In this section, we focus\
    \ on the support of HIP assuming the\n   following:\n   o  HIP is implemented\
    \ by directly changing the TCP/IP stack\n      implementation.\n   o  Applications\
    \ (using the sockets API) are unaware of HIP.\n   A HIP implementation typically\
    \ consists of a key management process\n   that coordinates with an IPsec-extended\
    \ stack, as shown in Figure 1.\n   In practice, HIP has been implemented entirely\
    \ in the user-space,\n   entirely in the kernel, or as a hybrid with a user-space\
    \ key\n   management process and a kernel-level ESP.\n    +--------------------+\
    \                       +--------------------+\n    |                    |   \
    \                    |                    |\n    |                    |      \
    \                 |                    |\n    |   +------------+   |         \
    \              |   +------------+   |\n    |   |    Key     |   |         HIP\
    \           |   |    Key     |   |\n    |   | Management | <-+-----------------------+->\
    \ | Management |   |\n    |   |  Process   |   |                       |   | \
    \ Process   |   |\n    |   +------------+   |                       |   +------------+\
    \   |\n    |         ^          |                       |         ^          |\n\
    \    |         |          |                       |         |          |\n   \
    \ |         v          |                       |         v          |\n    | \
    \  +------------+   |                       |   +------------+   |\n    |   |\
    \   IPsec-   |   |        ESP            |   |   IPsec-   |   |\n    |   |  Extended\
    \  |   |                       |   |  Extended  |   |\n    |   |   Stack    |\
    \ <-+-----------------------+-> |   Stack    |   |\n    |   |            |   |\
    \                       |   |            |   |\n    |   +------------+   |   \
    \                    |   +------------+   |\n    |                    |      \
    \                 |                    |\n    |                    |         \
    \              |                    |\n    |     Initiator      |            \
    \           |     Responder      |\n    +--------------------+               \
    \        +--------------------+\n                      Figure 1: HIP Deployment\
    \ Model\n   Figure 2 summarizes the main implementation impact of supporting HIP,\n\
    \   and is discussed further in subsequent sections.  To enable HIP\n   natively\
    \ in an implementation requires extensions to the key\n   management interface\
    \ (here depicted as PF_KEY API [RFC2367]) with the\n   security association database\
    \ (SAD) and security policy database\n   (SPD).  It also requires changes to the\
    \ ESP implementation itself to\n   support BEET-mode (Bound End-to-End Tunnel)\
    \ processing [BEET-MODE],\n   extensions to the name resolution library, and (in\
    \ the future)\n   interactions with transport protocols to respond correctly to\n\
    \   mobility and multihoming events [TCP-RLCI].\n                  |-----------------------|\n\
    \    --------      |   ----------     ----------\n    | HIP  |--    ----|  App\
    \ v6 |    |  App v4 |\n    -------- |    |   ----------     ----------\n     \
    \ |      |    |       | HIT           | LSI\n      |    ------------   | AF_INET6\
    \      | AF_INET\n      |    | resolver |   |               |\n      |    ------------\
    \   |  sockets API  |        user-space\n    --|-------------------|-------------------------------\n\
    \      | sockets and       |               |        kernel\n      | PF_KEY API\
    \    ---------           |\n      |-------------> |TCP/UDP|<-----------\n    \
    \  |               ---------\n      |                   |\n    ----------    \
    \    ---------\n    | SAD/SPD|<-----> | ESP   |  {HIT_s, HIT_d} <-> SPI\n    ----------\
    \        ---------  {HIT_s, HIT_d, SPI} <-> {IP_s,IP_d,SPI}\n                \
    \          |\n                      ---------\n                      |  IP   |\n\
    \                      ---------\n    Figure 2: Overview of Typical Implementation\
    \ Changes to Support HIP\n   Legacy applications can continue to use the standard\
    \ AF_INET6 (for\n   IPv6) and AF_INET (for IPv4) sockets API.  IPv6 applications\
    \ bind\n   directly to a Host Identity Tag (HIT), which is a part of IPv6\n  \
    \ address space reserved for ORCHIDs.  IPv4 applications bind to a\n   Local Scope\
    \ Identifier (LSI) that has significance only within a\n   host; the HIP layer\
    \ translates from LSIs and HITs to the IP addresses\n   that are still used underneath\
    \ for HIP base exchange.\n"
- title: 2.1.1.  ESP Implementation Extensions
  contents:
  - "2.1.1.  ESP Implementation Extensions\n   HIP uses a Bound End-to-End Tunnel\
    \ (BEET) mode of ESP operation,\n   which mixes tunnel-mode semantics with transport-mode\
    \ syntax.  BEET\n   is not supported by all operating system distributions at\
    \ present, so\n   kernel modifications might be needed to obtain true kernel support\n\
    \   using existing IPsec code.  At the time of writing, the BEET mode has\n  \
    \ been adopted to vanilla Linux and FreeBSD kernels.\n   The HIPL project has\
    \ contributed an IPsec BEET patch for the Linux\n   kernel.  The kernel-level\
    \ support could potentially allow all Linux\n   implementations of HIP to run\
    \ in the user-space and use a common\n   interface towards the kernel.\n   One\
    \ inconvenience experienced in current Linux IPsec implementation\n   (due to\
    \ the native IPsec implementation, not HIP specifically) is a\n   loss of the\
    \ first data packet that triggers the HIP association\n   establishment.  Instead,\
    \ this packet should be cached and transmitted\n   after the association is established.\n"
- title: 2.2.  User-Space Implementations
  contents:
  - "2.2.  User-Space Implementations\n   HIP can be implemented entirely in the user-space,\
    \ an approach that\n   is essential for supporting HIP on hosts for which operating\
    \ system\n   modifications are not possible.  Even on modifiable operating\n \
    \  systems, there is often a significant deployment advantage in\n   deploying\
    \ HIP only as a user-space implementation.  All three open-\n   source implementations\
    \ provide user-space implementations and binary\n   packages (RPMs, DEBs, self-extracting\
    \ installers) typical of\n   application deployment on the target systems.\n \
    \  When HIP is deployed in the user-space, some technique is necessary\n   to\
    \ identify packets that require HIP processing and divert them to\n   the user-space\
    \ for such processing and to re-inject them into the\n   stack for further transport\
    \ protocol processing.  A commonly used\n   technique is to deploy a virtual device\
    \ in the kernel such as a\n   network tap (TAP) device, although operating systems\
    \ may provide\n   other means for diverting packets to user-space.  Routing or\
    \ packet\n   filtering rules must be applied to divert the right packets to these\n\
    \   devices.\n   As an example, the user-space implementation may install a route\
    \ that\n   directs all packets with destination addresses corresponding to HITs\n\
    \   or LSIs to such a virtual device.  In the user-space daemon, the ESP\n   header\
    \ and possibly the UDP header is applied, an outer IP address\n   replaces the\
    \ HIT, and the packet is re-sent to the kernel.  In the\n   reverse direction,\
    \ a socket associated to ESP or a UDP port number\n   may be used to receive ESP-protected\
    \ packets.  HIP signaling packets\n   themselves may be sent and received by a\
    \ raw socket bound to the HIP\n   number or UDP port when UDP encapsulation is\
    \ used.\n"
- title: 2.3.  Issues Common to Both Implementation Approaches
  contents:
  - '2.3.  Issues Common to Both Implementation Approaches

    '
- title: 2.3.1.  User-Space Handling of HITs
  contents:
  - "2.3.1.  User-Space Handling of HITs\n   Much initial experimentation with HIP\
    \ has involved using HITs\n   directly in IPv6 socket calls, without any resolution\
    \ infrastructure\n   to learn the HIT based on, for example, a domain name, or\
    \ to resolve\n   the IP address.  To experiment with HIP using HITs requires a\
    \ priori\n   HIT exchange, in the absence of a resolution service.  Manual\n \
    \  exchange of HITs has been a major inconvenience for experimentation.\n   It\
    \ can be overcome via 1) opportunistic HIP mode (RFC 5201, Section\n   4.1.6),\
    \ 2) storing HITs in DNS AAAA entries and looking them up by\n   domain name,\
    \ 3) name resolution service for HITs such as OpenDHT\n   [RFC6537], 4) an ad\
    \ hoc HIT exchange service to populate files on\n   each machine, or 5) support\
    \ for DNS extensions described in RFC 5205.\n   Over time, support for these techniques\
    \ has varied.  The HIPL project\n   has experimented with all of them.  OpenHIP\
    \ lacks support for option\n   2, and HIP4BSD lacks support for options 1 and\
    \ 3.\n   Implementing opportunistic HIP mode in a clean way is challenging, as\n\
    \   HITs need to be known when an application binds or connects to a\n   socket.\
    \  Approach 2 has been difficult in practice due to resistance\n   of sysadmins\
    \ to include AAAA entries for HITs in the DNS server, and\n   is a non-standards-compliant\
    \ use of the resource record.  Approach 3\n   is being progressed with two independent\
    \ implementations of a HIP-\n   OpenDHT interface.  At the moment, the easiest\
    \ way for enabling\n   experimentation appears to be approach 4 when a shell script\
    \ based on\n   Secure SHell (SSH) and Secure Copy (SCP) can connect to a peer\n\
    \   machine and copy HITs to the local configuration files.  However,\n   this\
    \ approach is not scalable or secure for the long run.  HIPL\n   developers have\
    \ had positive experiences with alternative 5.\n"
- title: 2.3.2.  Opportunistic Mode
  contents:
  - "2.3.2.  Opportunistic Mode\n   In opportunistic mode, the Initiator starts a\
    \ base exchange without\n   knowledge of the Responder's HIT.  The main advantage\
    \ of the\n   opportunistic mode is that it does not require additional lookup\n\
    \   infrastructure for HIs [RFC5205] [RFC6537].\n   The opportunistic mode also\
    \ has a few disadvantages.  First, the\n   Initiator may not identify the Responder\
    \ uniquely just based on the\n   IP address in the presence of private address\
    \ realms [RFC5770].\n   Second, the Initiator has to settle for a \"leap of faith\"\
    ; that is,\n   assume there is no man-in-the-middle attack.  However, this can\
    \ be\n   partially mitigated by using certificates at the Responder side\n   [RFC6253]\
    \ or by prompting the user using a graphical interface to\n   explicitly accept\
    \ the connection [paper.usable-security].\n   The opportunistic mode requires\
    \ only minor changes in the state\n   machine of the Responder and small changes\
    \ for the Initiator\n   [paper.leap-of-faith].  While the Responder can just select\
    \ a\n   suitable HIT upon receiving the first HIP base exchange packet (known\n\
    \   as an \"I1\") without a predefined HIT for the Responder, the Initiator\n\
    \   should be more careful in processing the first packet from the\n   Responder,\
    \ known as the \"R1\".  For example, the Initiator should make\n   sure that it\
    \ can disambiguate simultaneously initiated opportunistic\n   base exchanges from\
    \ each other.\n   In the context of the HIPL project, the opportunistic mode has\
    \ been\n   successfully applied at the HIP layer for service registration\n  \
    \ [RFC5203].  HIP4BSD implemented opportunistic mode successfully with\n   small\
    \ modifications to the FreeBSD socket layer to support\n   opportunistic mode.\
    \  However, the Linux implementation was more\n   challenging, as described below.\n\
    \   The HIPL project experimented with opportunistic mode by interposing\n   a\
    \ shim at two different layers.  In the first approach, an API-based\n   shim\
    \ was implemented to capture socket calls from the application.\n   This was somewhat\
    \ complicated to implement and explicitly enabling an\n   individual application\
    \ (or groups of applications) to use the\n   opportunistic mode was required.\
    \  In the second approach\n   [paper.leap-of-faith], the shim was placed between\
    \ the network and\n   transport layers.  Upon successful base exchange, the shim\
    \ translated\n   IP-based packet flows to HIT-based packet flows by re-injecting\
    \ the\n   translated packets back to the networking stack.\n   Unless bypassed\
    \ for DNS, both of the opportunistic mode\n   implementation approaches in HIPL\
    \ subjected the application(s) to\n   undergo opportunistic mode procedures also\
    \ for DNS requests.  Both\n   approaches also implemented an optional \"fall back\"\
    \ to non-HIP base\n   connectivity if the peer did not support HIP.  The detection\
    \ of peer\n   support for HIP was based on timeouts.  To avoid timeouts completely\n\
    \   and to reduce the delay to a single Round-Trip Time (RTT) for TCP,\n   the\
    \ project also experimented with TCP-specific extensions\n   [thesis.bishaj].\n\
    \   The OpenHIP project experimented with opportunistic mode through the\n   use\
    \ of an opportunistic (-o) option.  For the Responder, this option\n   determines\
    \ whether or not HIP accepts I1s received with a zeroed\n   receiver's HIT.  On\
    \ the Initiator's side, this option allows one to\n   configure a name and LSI\
    \ in the known Host Identities file.  When the\n   HIT field is missing, an I1\
    \ is sent with a zeroed receiver's HIT.\n   The LSI is needed by an IPv4 application\
    \ to trigger the association.\n   Note that, normally, the LSI used is based on\
    \ the bottom 24 bits of\n   the HIT, but in the case of opportunistic mode, the\
    \ HIT is unknown;\n   thus, the LSI may differ from the HIT.\n   As a summary\
    \ of the opportunistic mode experimentation, it is\n   possibly best suited for\
    \ HIP-aware applications.  Either it can be\n   used by HIP itself in registration\
    \ extensions or by native HIP\n   applications [RFC6317].  This way, the inherent\
    \ security trade-offs\n   of the opportunistic mode are explicitly visible to\
    \ the user through\n   the HIP-aware application.\n"
- title: 2.3.3.  Resolving HITs to Addresses
  contents:
  - "2.3.3.  Resolving HITs to Addresses\n   When HIP is used in opportunistic mode,\
    \ the Initiator does not know\n   the Responder's HIT, but it does know its IP\
    \ address.  In most other\n   cases, however, the kernel or applications may know\
    \ the HITs and not\n   the IP addresses; in these cases, an IP address resolution\
    \ step for\n   HITs must take place.\n   A few techniques have been experimented\
    \ with.  First, OpenDHT can\n   also use HITs as keys for IP address records.\
    \  Second, work by\n   Ponomarev has shown that the reverse DNS tree may be used\
    \ for reverse\n   lookups of the ORCHID space [HIT2IP].  Third, the need for resolution\n\
    \   may trigger some type of HIP bootstrap message, similar in some sense\n  \
    \ to an Address Resolution Protocol (ARP) message (to resolve the HIT).\n   The\
    \ bootstrap (BOS) packet used to be present in the early revisions\n   of the\
    \ HIP base specifications, but it was removed from the final\n   specifications\
    \ due to insufficient interest at the time.  The HIPL\n   implementation currently\
    \ sends an I1 to a link broadcast IP address\n   if it doesn't know the IP address\
    \ of the peer.  It has triggered\n   warnings in some Windows hosts running antivirus\
    \ software that\n   classified broadcasts with unknown protocol number as intrusion\n\
    \   attempts.  The utility of this technique is limited to the local\n   link.\n"
- title: 2.3.4.  IPsec Management API Extensions
  contents:
  - "2.3.4.  IPsec Management API Extensions\n   A generic key management API for\
    \ IP security is known as PF_KEY API\n   [RFC2367].  PK_KEY is a socket protocol\
    \ family that can be used by\n   trusted applications to access the IPsec key\
    \ engine in the operating\n   system.  Users of this interface typically need\
    \ sysadmin privileges.\n   HIP-related extensions to the PF_KEY interface define\
    \ a new protocol\n   IPPROTO_HIP.  Their main functionality is replacing the TCP\
    \ and UDP\n   checksum with a HIP-compatible checksum (because the transport\n\
    \   pseudoheader is based on HITs) in incoming and outgoing packets.\n   Recent\
    \ Linux kernel versions do not require patching for these\n   extensions.\n"
- title: 2.3.5.  Transport Protocol Issues
  contents:
  - "2.3.5.  Transport Protocol Issues\n   When an application triggers a HIP base\
    \ exchange through the\n   transport protocol, the first data packet can be lost\
    \ unless the HIP\n   and IPsec implementation is able to buffer the packet until\
    \ the base\n   exchange completes and IPsec SAs are set up.  The loss of the data\n\
    \   packet when it is a TCP SYN packet results in TCP timeout [RFC6298]\n   that\
    \ unnecessarily delays the application.  A loss of a UDP packet\n   can cause\
    \ even longer timeouts in applications.  Therefore, it was\n   found to be important\
    \ for HIP implementations to support the\n   buffering of the packet.  On the\
    \ other hand, if the HIP base exchange\n   or UPDATE takes longer than 1 second,\
    \ which is the case on\n   lightweight devices, a spurious timeout can occur at\
    \ the transport\n   layer.  The HIP implementation could prevent this scenario\
    \ by\n   manipulating timeout values at the transport layer or, alternatively,\n\
    \   dropping the original or retransmitted duplicate packet.\n   The multihoming\
    \ support in [RFC5206] is intended for the purpose of\n   failover, when a host\
    \ starts using an alternative locator when a\n   current locator fails.  However,\
    \ a host could used this multihoming\n   support for load balancing across different\
    \ locators.  Multihoming in\n   this manner could potentially cause issues with\
    \ transport protocol\n   congestion control and loss detection mechanisms.  However,\
    \ no\n   experimental results from using HIP multihoming in this capacity have\n\
    \   been reported.\n   The use of paths with different characteristics can also\
    \ impact the\n   estimate of a retransmission timer at the sender's transport\
    \ layer.\n   TCP uses a smoothed average of the path's Round-Trip Time and its\n\
    \   variation as the estimate for a retransmission timeout.  After the\n   retransmission\
    \ timer expires, the sender retransmits all outstanding\n   packets in go-back-N\
    \ fashion.\n   When multihoming is used for simultaneous data transmission from\n\
    \   several locators, there can easily be scenarios when the\n   retransmission\
    \ timeout does not correspond to the actual value.  When\n   packets simply experience\
    \ different RTT, its variation is high, which\n   sets the retransmission timeout\
    \ value unnecessarily high.  When\n   packets are lost, the sender waits excessively\
    \ long before\n   retransmitting.  Fortunately, modern TCP implementations deploying\n\
    \   Selective Acknowledgments (SACKs) and Limited Transmit are not\n   relying\
    \ on retransmission timeouts except when most outstanding\n   packets are lost.\n\
    \   Load balancing among several paths requires some estimate of each\n   path's\
    \ capacity.  The TCP congestion control algorithm assumes that\n   all packets\
    \ flow along the same path.  To perform load balancing, the\n   HIP layer can\
    \ attempt to estimate parameters such as the delay,\n   bandwidth, and loss rate\
    \ of each path.  A HIP scheduler could then\n   distribute packets among the paths\
    \ according to their capacity and\n   delay, to maximize overall utilization and\
    \ minimize reordering.  The\n   design of the scheduler is a topic of current\
    \ research work; none are\n   reported to exist.  Different network paths can\
    \ have different\n   Maximum Transmission Unit (MTU) sizes.  Transport protocols\
    \ perform\n   MTU discovery typically only in the beginning of a connection. \
    \ As\n   HIP hides mobility from the transport layer, it can happen that\n   packets\
    \ on the new path get fragmented without knowledge of the\n   transport protocol.\
    \  To solve this problem, the HIP layer could\n   inform the transport layer of\
    \ mobility events.  Protocols to support\n   such notifications to the transport\
    \ layer have been proposed to the\n   IETF in the past, including transport triggers\
    \ [TRIGTRAN],\n   lightweight mobility detection and response (LMDR) [LMDR], and\
    \ TCP\n   response to connectivity change [TCP-RLCI].\n"
- title: 2.3.6.  Legacy NAT Traversal
  contents:
  - "2.3.6.  Legacy NAT Traversal\n   Legacy NAT traversal for outbound-initiated\
    \ connections to a publicly\n   addressed Responder has been implemented by all\
    \ three HIP\n   implementations; two (HIPL and HIP4BSD) implement Interactive\n\
    \   Connectivity Establishment (ICE) techniques [RFC5770] for inbound NAT\n  \
    \ traversal.  It has also been reported that the use of Teredo\n   [RFC4380] over\
    \ HIP was simpler than the modifications required for\n   ICE techniques because\
    \ Teredo effectively manifests itself as a\n   routable, virtual locator to the\
    \ system.  UDP encapsulation is now\n   the default mode of HIP operation for\
    \ OpenHIP's IPv4 HIP\n   implementation.  Finding an IPv6 NAT implementation for\
    \ experiments\n   has been difficult.  In addition, the initial implementations\
    \ of NAT\n   traversal for HIP based on ICE techniques proved to be complicated\
    \ to\n   implement or integrate, and a native NAT traversal mode is now under\n\
    \   development for HIP [NAT-TRAVERSAL].  NAT traversal is expected to be\n  \
    \ a major mode of HIP operation in the future.\n"
- title: 2.3.7.  Local Management of Host Identity Namespace
  contents:
  - "2.3.7.  Local Management of Host Identity Namespace\n   One issue not being addressed\
    \ by some experimental implementations is\n   how to perform source HIT selection\
    \ across possibly multiple host\n   identities (some may be unpublished).  This\
    \ is akin to source address\n   selection for transport sockets.  How much HIP\
    \ policy to expose to\n   users is a user interface issue.  Default or automatic\
    \ configuration\n   guesses might have undesirable privacy implications for the\
    \ user.\n   Helsinki University of Technology (TKK, now Aalto) has implemented\
    \ an\n   extension of the native HIP API to control multiple host identities\n\
    \   [thesis.karlsson].  A problem with Linux routing and multiple\n   identities\
    \ was discovered by the HIPL development group.  As Linux\n   routing is based\
    \ on longest prefix match, having multiple HITs on\n   virtual devices is problematic\
    \ from the viewpoint of access control\n   because the stack selects the source\
    \ HIT based on the destination\n   HIT.  A coarse-grained solution for this is\
    \ to terminate the longest\n   prefix match for ORCHIDs in the Linux networking\
    \ statck.  However, a\n   more fine-grained solution tries to return a source\
    \ HIT matching to\n   the algorithm used for generating the destination HIT in\
    \ order to\n   facilitate compatibility with new algorithms standardized in the\n\
    \   future.\n   There are security and privacy issues with storing private keys\n\
    \   securely on a host.  Current implementations simply store private\n   keys\
    \ in a file that is readable only by applications with root\n   privileges.  This\
    \ may not be a sufficient level of protection, as\n   keys could be read directly\
    \ from the disk or, e.g., some application\n   with a set-user-id flag.  Keys\
    \ may be stored on a trusted platform\n   module (TPM), but there are no reported\
    \ HIP experiments with such a\n   configuration.  In a Boeing pilot project, temporary\
    \ certificates\n   were generated from a key on a USB SIM chip and used in the\
    \ HIP base\n   exchange.  Use of certificates in HIP requires extensions to the\
    \ HIP\n   specifications [RFC6253].  Another option is encrypting keys on disks\n\
    \   and keeping a passkey in memory (like in Secure Socket Layer (SSL)\n   certificates\
    \ on servers, that ask for a password when booting Linux).\n"
- title: 2.3.8.  Interactions with Host Firewalls
  contents:
  - "2.3.8.  Interactions with Host Firewalls\n   HIP is presently an experimental\
    \ protocol, and some default firewall\n   configuration scripts on popular Linux\
    \ distributions do not permit\n   the HIP number.  Determining which rules to\
    \ modify without\n   compromising other policies can be tricky; the default rule\
    \ set on a\n   previous SuSE Linux distribution was discovered to contain over\
    \ one\n   hundred rules.  Moreover, it may be the case that the end user has no\n\
    \   control over the firewall settings, if administered by an enterprise\n   IT\
    \ department.  However, the use of HIP over UDP has alleviated some\n   of these\
    \ concerns.  When using HIP over UDP, the firewall needs to\n   allow outbound\
    \ UDP packets and responses to them.\n"
- title: 2.4.  IPv4 versus IPv6 Issues
  contents:
  - "2.4.  IPv4 versus IPv6 Issues\n   HIP has been oriented towards IPv6 deployment,\
    \ but all\n   implementations have also added support for IPv4.  HIP supports\
    \ IPv6\n   applications well, as the HITs are used from the general IPv6 address\n\
    \   space using the ORCHID prefix.  HITs are statistically unique,\n   although\
    \ they are not routable at the IP layer.  Therefore, a mapping\n   between HITs\
    \ and routable IP addresses is necessary at the HIP layer,\n   unless an overlay\
    \ network or broadcast technique is available to\n   route packets based on HITs.\n\
    \   For IPv4 applications, a 32-bit Local Scope Identifier (LSI) is\n   necessary\
    \ at the sockets API.  The LSI is an alias for a host\n   identity and is only\
    \ meaningful within one host.  Note that an IPv4\n   address may be used as an\
    \ LSI if it is configured to refer to a\n   particular host identity on a given\
    \ host, or LSIs may be drawn from\n   an unallocated IPv4 address range, but lack\
    \ of coordination on the\n   LSI space may hinder implementation portability.\n\
    \   HIP makes it possible to use IPv6 applications over the IPv4 network\n   and\
    \ vice versa.  This has been called \"interfamily operation\"\n   (flexibility\
    \ between different address families) and is enabled by\n   the fact that the\
    \ transport pseudoheader is always based on HITs\n   regardless of whether the\
    \ application or the underlying network path\n   is based on IPv4.  All three\
    \ open source HIP implementations have\n   demonstrated some form of interfamily\
    \ handoff support.  The\n   interfamily portion of the BEET patch in the Linux\
    \ kernel was found\n   more difficult to complete compared with the single-family\n\
    \   processing.\n   HIP also provides the potential to perform cross-family support,\n\
    \   whereby one side of a transport session is IPv6 based and another is\n   IPv4\
    \ based [paper.handovers].\n"
- title: 2.5.  What Have Early Adopters Learned from Experience?
  contents:
  - "2.5.  What Have Early Adopters Learned from Experience?\n   Implementing HIP\
    \ in current stacks or as overlays on unmodified\n   stacks has generally been\
    \ successful.  Below are some caveats and\n   open issues.\n   Experimental results\
    \ comparing a kernel versus user-space HIP\n   implementations in terms of performance\
    \ and DoS resilience would be\n   useful.  If the kernel implementation is shown\
    \ to perform\n   significantly better than the user-space implementation, it may\
    \ be a\n   sufficient justification to incorporate HIP within the kernel.\n  \
    \ However, experiences on general purpose laptops and servers suggests\n   that\
    \ for typical client use of HIP, user-space implementations\n   perform adequately.\n\
    \   Although the HIPL kernel-based keying implementation was submitted to\n  \
    \ the Linux kernel development process, the implementation was not\n   accepted.\
    \  The kernel developers felt that since Mobile IP (MIP) and\n   the Internet\
    \ Key Exchange Protocol (IKE) are implemented as user-\n   space signaling daemons\
    \ in Linux, that should be the approach for\n   HIP, too.  Furthermore, the kernel\
    \ patch was somewhat big, affecting\n   the kernel in many places and having several\
    \ databases.  The Linux\n   kernel maintainers did eventually accept the BEET\
    \ patch.\n   Some users have been explicitly asking about the coexistence of HIP\n\
    \   with other VPN and Mobile IP software.  On Windows, VPN clients tend\n   to\
    \ install their own versions of TAP drivers that might conflict with\n   the driver\
    \ used by the OpenHIP implementation.  There may also be\n   issues due to lack\
    \ of coordination leading to unintended HIP-over-VPN\n   sessions or lack of coordination\
    \ of the ESP Security Parameter Index\n   (SPI) space.  However, these types of\
    \ conflicts are only speculation\n   and were not reported to the research group;\
    \ only some positive\n   reports of HIP and VPN software properly coexisting have\
    \ been\n   reported by the HIPL group.\n   With legacy applications, LSI support\
    \ is important because IPv6 is\n   not widely used in applications.  The main\
    \ issues in getting\n   applications to work well over HIP have been related to\
    \ bugs in the\n   implementations themselves, or latency related issues (such\
    \ as TCP\n   timeouts due to Linux IPsec implementation).  There have been no\n\
    \   major obstacles encountered in practice, and there has also been some\n  \
    \ experience in using HIP with native applications [paper.p2psip].\n"
- title: 3.  Infrastructure Implications
  contents:
  - "3.  Infrastructure Implications\n   This section focuses on the deployment of\
    \ infrastructure to support\n   HIP hosts.\n"
- title: 3.1.  Impact on DNS
  contents:
  - "3.1.  Impact on DNS\n   HIP DNS extensions [RFC5205] were developed by NEC Eurolabs\
    \ and\n   contributed to OpenHIP and were also developed by the HIPL project,\n\
    \   both for the BIND9 DNS server.  Legacy applications do not query for\n   HIP\
    \ resource records, but DNS proxies (local resolvers) interpose\n   themselves\
    \ in the resolution path and can query for HI records.  The\n   BIND 9 deployment\
    \ for HIPL uses binary blob format to store the HIP\n   resource records; this\
    \ means that no changes to the DNS server are\n   required.\n   There have been\
    \ no studies reported on the impact of changes based on\n   [RFC5205] to HIP on\
    \ the existing DNS.  There have been some studies\n   on using DNS to store HITs\
    \ in the reverse tree [HIT2IP].\n"
- title: 3.2.  HIP-Aware Middleboxes
  contents:
  - "3.2.  HIP-Aware Middleboxes\n   A design of a HIP registration protocol for architectured\
    \ NATs (NATs\n   that are HIP aware and use HIP identifiers to distinguish between\n\
    \   hosts) has been completed and published as RFC 5204.  Performance\n   measurement\
    \ results with a prototype are available, but\n   experimentation on a wide scale\
    \ is still missing.  RFC 5207 provides\n   a problem statement for HIP-aware NATs\
    \ and middleboxes [RFC5207].\n   As argued by Aura, et al. [paper.hipanalysis],\
    \ the encryption of the\n   Initiator Host Identity (HI) prevents policy-based\
    \ NAT and firewall\n   support, and middlebox authentication, for HIP.  The catch\
    \ is that\n   when the HI is encrypted, middleboxes in the network cannot verify\n\
    \   the signature of the second base exchange packet from the Initiator\n   (I2)\
    \ and, thus, cannot safely create a state for the HIP association.\n   On the\
    \ other hand, if the HI is not encrypted, a stateful middlebox\n   can process\
    \ the I2 and create protocol state for the session.\n"
- title: 3.3.  HIT Resolution Infrastructure
  contents:
  - "3.3.  HIT Resolution Infrastructure\n   OpenDHT HIT-to-IP address resolution\
    \ has been implemented by Aalborg\n   University, Denmark, Helsinki Institute\
    \ for Information Technology\n   for HIPL, and by Boeing for OpenHIP [RFC6537].\n\
    \   The prototype of the Host Identity Indirection Infrastructure (Hi3)\n   has\
    \ been implemented using OpenHIP and HIPL.  A set of 25 i3 servers\n   was running\
    \ on PlanetLab for several years.  While a PlanetLab\n   account is required to\
    \ run the servers, anybody could openly use the\n   provided service.\n   The\
    \ main idea of Hi3 is to transmit HIP control packets using the i3\n   system\
    \ as a lookup and rendezvous service, while transmitting data\n   packets efficiently\
    \ end-to-end using IPsec.  Performance measurements\n   were conducted comparing\
    \ the association setup latency, throughput,\n   and RTT of Hi3 with plain IP,\
    \ HIP, and i3 [paper.hi3].\n   One difficulty has been with debugging the i3 system.\
    \  In some cases,\n   the messages did not traverse i3 correctly, due to its distributed\n\
    \   nature and lack of tracing tools.  Making the system work has been\n   challenging.\
    \  Further, since the original research work was done, the\n   i3 servers have\
    \ gone offline.\n   NATs and firewalls have been a major disturbance in Hi3 experiments.\n\
    \   Many networks did not allow incoming UDP packets to go through,\n   therefore,\
    \ preventing messages from i3 servers to reach the client.\n   So far, the Hi3\
    \ system has been evaluated on a larger scale only\n   analytically.  The problem\
    \ is that running a larger number of clients\n   to create a sufficient load for\
    \ the server is difficult.  A cluster\n   on the order of a hundred Linux servers\
    \ is needed for this purpose.\n   Contacts to a State Supercomputer Centre in\
    \ Finland have not been\n   successful so far.  A possible option is to use one\
    \ of the existing\n   Emulab installations, e.g., in Utah, for these tests.\n"
- title: 3.4.  Rendezvous Servers
  contents:
  - "3.4.  Rendezvous Servers\n   A rendezvous server (RVS) [RFC5204] has been implemented\
    \ by HIIT for\n   HIPL, and an implementation also exists for OpenHIP.  The concept\
    \ has\n   been extended to a relay server in [RFC5770].  Initial\n   experimentation\
    \ with the HIPL implementation produced the following\n   observations:\n   o\
    \  RVS may be better than dynamic DNS updates for hosts that change\n      their\
    \ address rapidly.\n   o  Registration of a HIP host to RVS costs a base exchange.\n\
    \   o  UPDATE and CLOSE packets sent through rendezvous servers is\n      advised;\
    \ RVS handling of UPDATE messages can typically solve the\n      double jump [MULTI-HOMED]\
    \ mobility problem.\n   The following advanced concepts need further study:\n\
    \   o  Multiple RVSs per host for fault tolerance (e.g., one rendezvous\n    \
    \  node crashes) and an algorithm for selecting the best RVS.\n   o  Load balancing.\
    \  An RVS server could distribute I1s to different\n      Responders if the Responder's\
    \ identity is shared or opportunistic\n      HIP is used.\n   o  Offering a rendezvous\
    \ service in a P2P fashion by HIP hosts.\n"
- title: 3.5.  Hybrid DNS-DHT Resolution
  contents:
  - "3.5.  Hybrid DNS-DHT Resolution\n   In addition to pure DNS and pure DHT HIP\
    \ name resolution, a hybrid\n   approach combining the standard DNS interface\
    \ for clients with last-\n   hop DHT resolution was developed.  The idea is that\
    \ the benefits of\n   DNS solution (wide deployment, support for legacy applications)\
    \ could\n   be combined with advantages of DHT (fault tolerance, efficiency in\n\
    \   handling flat data keys).  The DHT is typically run internally by the\n  \
    \ organization managing the last-hop DNS zone and the DNS server.  That\n   way,\
    \ the HITs belonging to that organization could be stored locally\n   by the organization\
    \ that improves deployability of the resolution\n   system.  However, organizations\
    \ could also share a DHT between\n   themselves or connect their DNS servers to\
    \ a publicly available DHT,\n   such as OpenDHT.  The benefit of running a DHT\
    \ on a local server\n   cluster compared to a geographically spread DHT is higher\
    \ performance\n   due to decreased internal DHT latencies.\n   The system was\
    \ prototyped by modifying the BIND DNS server to\n   redirect the queries for\
    \ HITs to a DHT server.  The interface was\n   implemented in XML according to\
    \ specifications [RFC6537].  The system\n   is completely backward compatible\
    \ to legacy applications since the\n   standard DNS resolver interface is used.\n\
    \   Performance of the system was evaluated by performing a rapid\n   sequence\
    \ of requests for querying and updating the HIT-to-IP address\n   mapping.  The\
    \ request rate was varied from 1 to 200 requests per\n   second.  The average\
    \ latency of one query request was less than 50 ms\n   and the secured updated\
    \ latency less than 100 ms with a low request\n   rate.  However, the delay was\
    \ increasing exponentially with the\n   request rate, reaching 1 second for 200\
    \ requests per second (update\n   rate 0) and almost 2 seconds (update rate 0.5).\
    \  Furthermore, the\n   maximum delay exceeded the mean by several times.\n  \
    \ Based on experiments, a multi-processor system could handle more than\n   1000\
    \ queries per second.  The latencies are dominated by the DHT\n   resolution delay,\
    \ and the DNS component is rather small.  This is\n   explained by the relative\
    \ inefficiency of used DHT implementation\n   (Bamboo) and could be definitely\
    \ improved in the future.\n"
- title: 4.  Application Implications
  contents:
  - "4.  Application Implications\n   In a deployed HIP environment, applications\
    \ may be HIP aware or HIP\n   unaware.  RFC 5338 [RFC5338] describes various techniques\
    \ to allow\n   HIP to support unmodified applications.  Some additional application\n\
    \   considerations are listed below.\n"
- title: 4.1.  Non-Intrusive HIP Insertion
  contents:
  - "4.1.  Non-Intrusive HIP Insertion\n   One way to support legacy applications\
    \ that use dynamic linking is to\n   dynamically interpose a modified resolver\
    \ library.  Using HIPL,\n   several legacy applications were shown to work without\
    \ changes using\n   dynamic re-linking of the resolver library.  For example,\
    \ the Firefox\n   web browser successfully worked with an Apache web server. \
    \ The re-\n   linking just requires configuring an LD_PRELOAD system variable\
    \ that\n   can be performed in a user shell profile file or as a start-up\n  \
    \ wrapper for an application.  This provides the user with fine-grained\n   policy\
    \ control over which applications use HIP, which could\n   alternately be considered\
    \ a benefit or a drawback depending on\n   whether the user is burdened with such\
    \ policy choices.  The technique\n   was also found to be sensitive to loading\
    \ LD_PRELOAD twice, in which\n   case the order of linking dynamic libraries must\
    \ be coded carefully.\n   Another method for transparently using HIP, which has\
    \ no reported\n   implementation experience, is via local application proxies\
    \ (e.g.,\n   squid web proxy) that are modified to be HIP aware.  Discussion of\n\
    \   proxies for HIP is a current focus of research group activities\n   [HIPRG-PROXIES].\n"
- title: 4.2.  Referrals
  contents:
  - "4.2.  Referrals\n   A concern that FTP would not work due to the problem of application\n\
    \   referrals, i.e., passing the IP address within application messages,\n   was\
    \ discovered not to be a problem for FTP in practice.  It is shown\n   to work\
    \ well both in the passive and active modes [paper.namespace].\n   It remains\
    \ an open question how big problem referrals really are in\n   the practice. \
    \ At least, they do not seem used for the client side\n   because they are behind\
    \ NATs, and, therefore, client addresses are\n   unsuitable as referrals.\n"
- title: 4.3.  Latency
  contents:
  - "4.3.  Latency\n   Some applications may be sensitive to additional RTTs or processing\n\
    \   due to HIP resolutions or the protocol itself.  For instance, page\n   load\
    \ speed for web browsers is a critical metric for browser\n   designers.  Some\
    \ applications or deployments may not wish to trade\n   application speed for\
    \ the security and mobility management that HIP\n   offers.\n"
- title: 5.  Network Operator's Perspective
  contents:
  - "5.  Network Operator's Perspective\n   There is no known deployment of HIP by\
    \ a data service provider.\n   However, some issues regarding HIP have been brought\
    \ to the HIP\n   research group by a network provider and are summarized below\
    \ and in\n   [HIP-OPERATORS].\n"
- title: 5.1.  Management of the Host Identity Namespace
  contents:
  - "5.1.  Management of the Host Identity Namespace\n   When a network operator deploys\
    \ HIP for its customers, several issues\n   with management of host identities\
    \ arise.  The operator may prefer to\n   generate the host identity itself rather\
    \ than let each host create\n   the identities.  Several factors can create such\
    \ a need.  Public-\n   private key generation is a demanding operation that can\
    \ take tens of\n   seconds on a lightweight device, such as a mobile phone.  After\n\
    \   generating a host identity, the operator can immediately insert it\n   into\
    \ its own AAA databases and network firewalls.  This way, the\n   users would\
    \ not need to be concerned with technical details of host\n   identity management.\n\
    \   The operator may use a Public Key Infrastructure (PKI) to certify\n   host\
    \ identities of its customers.  Then, it uses the private key of\n   an operator's\
    \ Certificate Authority (CA) to sign the public key of\n   its customers.  This\
    \ way, third parties possessing the public key of\n   the CA can verify the customer's\
    \ host identity and use this\n   information, e.g., for admission control to infrastructure.\
    \  Such\n   practice raises the security level of HIP when self-generated host\n\
    \   identities are used.\n   When the operator is using neither PKI nor DNS Security\
    \ (DNSSEC) host\n   names, the problem of securely exchanging host identities\
    \ remains.\n   When HIP is used in opportunistic mode, a man-in-the-middle can\
    \ still\n   intercept the exchange and replace the host identities with its own.\n\
    \   For instance, the signaling provided by SIP could be used to deliver\n   host\
    \ identities if it were secured by existing mechanisms in the\n   operator's network.\n"
- title: 5.2.  Use of ESP Encryption
  contents:
  - "5.2.  Use of ESP Encryption\n   The research group has discussed whether operators\
    \ can provide\n   \"value-added\" services and priority, and comply with wiretapping\n\
    \   laws, if all sessions are encrypted.  This is not so much a HIP issue\n  \
    \ as a general end-to-end encryption issue.\n   The processing power of mobile\
    \ devices also must be considered.  One\n   study evaluated the use of HIP and\
    \ ESP on lightweight devices (Nokia\n   N770 Internet Tablets having 200 MHz processors)\
    \ [paper.mobiarch].\n   The overhead of using ESP on such a platform was found\
    \ to be\n   tolerable, about 30% in terms of throughput.  With a bulk TCP\n  \
    \ transfer over WiFi, transfer without HIP was producing 4.86 Mbps,\n   while\
    \ over ESP security associations set up by HIP it was 3.27 Mbps.\n   A lightweight\
    \ HIP base exchange for this purpose is being developed\n   at the time of this\
    \ writing [HIP-DEX].\n   It is also possible to use HIP in a NULL encryption configuration\
    \ if\n   one of SHA1 or MD5 authentication are used.\n"
- title: 5.3.  Access Control Lists Based on HITs
  contents:
  - "5.3.  Access Control Lists Based on HITs\n   A firewall typically separates an\
    \ organization's network from the\n   rest of the Internet.  An Access Control\
    \ List (ACL) specifies packet\n   forwarding policies in the firewall.  Current\
    \ firewalls can filter\n   out packets based on IP addresses, transport protocol,\
    \ and port\n   values.  These values are often unprotected in data packets and\
    \ can\n   be spoofed by an attacker.  By trying out common well-known ports and\n\
    \   a range of IP addresses, an attacker can often penetrate the firewall\n  \
    \ defenses.\n   Furthermore, legacy firewalls often disallow IPsec traffic and\
    \ drop\n   HIP control packets.  HIP allows ACLs to be protected based on packet\n\
    \   exchanges that may be authenticated by middleboxes.  However, HITs\n   are\
    \ not aggregatable, so HIT-based ACLs may be longer in length (due\n   to an inability\
    \ to group hosts with a single entry) and harder to\n   deal with by human users\
    \ (due to the length of the HIT compared with\n   an IPv4 or IPv6 prefix).\n \
    \  Additionally, operators would like to grant access to the clients\n   from\
    \ domains such as example.com regardless of their current locators\n   or HITs.\
    \  This is difficult without a forward confirmed reverse DNS\n   to use for non-repudiation\
    \ purposes.\n"
- title: 5.4.  Firewall Issues
  contents:
  - "5.4.  Firewall Issues\n   Helsinki University of Technology (TKK, now Aalto)\
    \ has implemented a\n   HIP firewall based on Linux iptables [paper.firewall]\
    \ that operates\n   in user-space.\n   In general, firewalls can be stateless,\
    \ filtering packets based only\n   on the ACL, and stateful, following and remembering\
    \ packet flows.\n   Stateless firewalls are simple to implement but provide only\
    \ coarse-\n   grained protection.  However, their performance can be efficient\n\
    \   since packet processing requires little memory or CPU resources.  A\n   stateful\
    \ firewall determines if a packet belongs to an existing flow\n   or starts a\
    \ new flow.  A flow identifier combines information from\n   several protocol\
    \ headers to classify packets.  A firewall removes the\n   state when the flow\
    \ terminates (e.g., a TCP connection is closed) or\n   after a timeout.  A firewall\
    \ can drop suspicious packets that fail a\n   checksum or contain sequence numbers\
    \ outside of the current sliding\n   window.\n   A transparent firewall does not\
    \ require that hosts within the\n   protected network register or even know of\
    \ the existence of the\n   firewall.  An explicit firewall requires registration\
    \ and\n   authentication of the hosts.\n   A HIP-aware firewall operating in the\
    \ middle identifies flows using\n   HITs of communicating hosts, as well as SPI\
    \ values and IP addresses.\n   The firewall must link together the HIP base exchange\
    \ and subsequent\n   IPsec ESP data packets.  During the base exchange, the firewall\n\
    \   learns the SPI values from I2 and R2 packets.  Then, the firewall\n   only\
    \ allows ESP packets with a known SPI value and arriving from the\n   same IP\
    \ address as during the base exchange.  If the host changes its\n   location and\
    \ the IP address, the firewall, if still on the path,\n   learns about the changes\
    \ by following the mobility update packets.\n   It is possible to implement a\
    \ stateless, end-host-based firewall to\n   reuse existing higher-layer mechanisms\
    \ such as access control lists\n   in the system.  In this mode of operation,\
    \ HITs would be used in the\n   access control lists, and while the base exchange\
    \ might complete, ESP\n   is not passed to the transport layer unless the HITs\
    \ are allowed in\n   the access control list.\n   A HIP host can register to an\
    \ explicit firewall using the usual\n   procedure [RFC5203].  The registration\
    \ enables the host and the\n   firewall to authenticate each other.  In a common\
    \ case, where the\n   Initiator and Responder hosts are located behind different\
    \ firewalls,\n   the Initiator may need to first register with its own firewall,\
    \ and\n   afterward, with the Responder's firewall.\n   Some researchers have\
    \ suggested that a firewall for security-critical\n   environments should get\
    \ involved in the base exchange and UPDATE\n   procedures with middlebox-injected\
    \ echo requests.  Otherwise, the\n   firewall can be circumvented with replay\
    \ attacks if there is a\n   compromised node within the network that the firewall\
    \ is trying to\n   protect [HIP-MIDDLE].\n"
- title: 6.  User Privacy Issues
  contents:
  - "6.  User Privacy Issues\n   Using public keys for identifying hosts creates a\
    \ privacy problem as\n   third parties can determine the source host even if attached\
    \ to a\n   different location in the network.  Various transactions of the host\n\
    \   could be linked together if the host uses the same public key.\n   Furthermore,\
    \ using a static IP address also allows linking of\n   transactions of the host.\
    \  Multiplexing multiple hosts behind a\n   single NAT or using short address\
    \ leases from DHCP can reduce the\n   problem of user tracking.  However, IPv6\
    \ addresses could reduce the\n   occurrence of NAT translation and cause additional\
    \ privacy issues\n   related to the use of Media Access Control (MAC) addresses\
    \ in IPv6\n   address autoconfiguration.  HIP does provide for the use of anonymous\n\
    \   (unpublished) HITs in cases in which the Initiator prefers to remain\n   anonymous,\
    \ but the Responder must be willing to accept sessions from\n   anonymous peers.\n\
    \   With mutual authentication, the HIP Initiator should not have to\n   reveal\
    \ its identity (public key) to either a passive adversary or an\n   active attacker.\
    \  The HIP Initiator can authenticate the Responder's\n   R1 packet before encrypting\
    \ its host identity with the Diffie-\n   Hellman-generated keying material and\
    \ sending it in the I2 packet.\n   The authentication step upon receiving an R1\
    \ defeats the active\n   attacker (impersonator) of the Responder, and the act\
    \ of encrypting\n   the identity defeats the passive adversary.  Since the Responder\n\
    \   sends its public key unencrypted in the first reply message (R1) to\n   the\
    \ Initiator, the Responder's identity will be revealed to third-\n   party on-path\
    \ eavesdroppers.  However, if the Responder authenticates\n   the Initiator and\
    \ performs access controls before sending the R1, the\n   Responder can avoid\
    \ disclosing its public key to an active attacker.\n   DNS records can provide\
    \ information combining host identity and\n   location information, the host public\
    \ key, and host IP address.\n   Therefore, identity and location privacy are related\
    \ and should be\n   treated in an integrated approach.  The goal of the BLIND\
    \ is to\n   provide a framework for identity and location privacy [paper.blind]\n\
    \   [HIP-PRIVACY].  The identity protection is achieved by hiding the\n   actual\
    \ public keys from third parties so that only the trusted hosts\n   can recognize\
    \ the keys.  Location privacy is achieved by integrating\n   traffic forwarding\
    \ with NAT translation and decoupling host\n   identities from locators.  The\
    \ use of random IP and MAC addresses\n   also reduces the issue of location privacy\
    \ shifting the focus to\n   protecting host identifiers from third parties.  This\
    \ approach is, by\n   its very nature, incompatible with middlebox authentication.\n\
    \   To prevent revealing the identity, the host public key and its hash\n   (HIT)\
    \ can be encrypted with a secret key known beforehand to both\n   Initiator and\
    \ Responder.  However, this is a requirement that cannot\n   be easily implemented\
    \ in practice.  The BLIND framework provides\n   protection from active and passive\
    \ attackers using a modified HIP\n   base exchange.  If the host avoids storing\
    \ its public keys in the\n   reverse DNS or DHT repository, the framework achieves\
    \ full location\n   and identity privacy.\n   An alternative approach to reducing\
    \ privacy threats of persistent\n   identifiers is to replace them with short-lived\
    \ identifiers that are\n   changed regularly to prevent user tracking.  Furthermore,\
    \ identifiers\n   must be changed simultaneously at all protocol layers; otherwise,\
    \ an\n   adversary could still link the new identifier by looking at an\n   identifier\
    \ at another protocol layer that remained the same after the\n   change.  The\
    \ HIP privacy architecture that simultaneously changes\n   identifiers on MAC,\
    \ IP, and HIP/IPsec layers was developed at\n   Helsinki University of Technology\
    \ (TKK, now Aalto) [thesis.takkinen].\n   HIP could be extended in the future\
    \ to allow active sessions to\n   migrate identities.\n"
- title: 7.  Experimental Basis of This Report
  contents:
  - "7.  Experimental Basis of This Report\n   This report is derived from reported\
    \ experiences and research results\n   of early adopters, implementers, and research\
    \ activities.  In\n   particular, a number of implementations have been in development\n\
    \   since 2002 (Section 2).\n   One production-level deployment of HIP has been\
    \ reported.  Boeing has\n   described how it uses HIP to build Layer 2 VPNs over\
    \ untrusted\n   wireless networks [HIPLS].  This use case is not a traditional\
    \ end-\n   host-based use of HIP, but rather, it is one that uses HIP-aware\n\
    \   middleboxes to create ESP tunnels on-demand between provider-edge\n   (PE)\
    \ devices.\n   The InfraHIP II project is deploying HIP infrastructure (test\n\
    \   servers, rendezvous and relay servers) in the public Internet.\n   The following\
    \ is a possibly incomplete list of past and current\n   research activities related\
    \ to HIP.\n   o  Boeing Research & Technology (J. Ahrenholz, O. Brewer, J. Fang,\
    \ T.\n      Henderson, D. Mattes, J. Meegan, R. Paine, S. Venema, OpenHIP\n  \
    \    implementation, Secure Mobile Architecture)\n   o  NomadicLab, Ericsson (P.\
    \ Jokela, P. Nikander, J. Melen.  BSD HIP\n      implementation)\n   o  Helsinki\
    \ Institute for Information Technology (HIIT) (A. Gurtov,\n      M. Komu, A. Pathak,\
    \ D. Beltrami.  HIPL, legacy NAT traversal,\n      firewall, i3, native API)\n\
    \   o  Helsinki University of Technology (TKK, now Aalto) (Janne\n      Lindqvist,\
    \ Niklas Karlsson, Laura Takkinen, and Essi Vehmersalo.\n      HIP security and\
    \ firewalls, multiple identities, and privacy\n      management)\n   o  University\
    \ of California, Berkeley (A. Joseph, HIP proxy\n      implementation)\n   o \
    \ Laboratory of Computer Architecture and Networks, Polytechnic\n      School\
    \ of University of Sao Paulo, Brazil (T. Carvalho, HIP\n      measurements, Hi3)\n\
    \   o  Telecom Italia (M. Morelli, comparing existing HIP\n      implementations)\n\
    \   o  NEC Heidelberg (L. Eggert, M. Esteban, V. Schmitt working on RVS\n    \
    \  implementation, DNS, NAT traversal)\n   o  University of Hamburg-Harburg (M.\
    \ Shanmugam, A. Nagarajan, HIP\n      registration protocol)\n   o  University\
    \ of Tuebingen (K. Wehrle, T. Lebenslauf to work on Hi3\n      or HIP-OpenDHT)\n\
    \   o  University of Parma (UNIPR), Department of Information Engineering\n  \
    \    Parma, Italy.  (N. Fedotova, HIP for P2P)\n   o  Siemens (H. Tschofenig,\
    \ HIP middleboxes)\n   o  Denmark (Aalborg University, Lars Roost, Gustav Haraldsson,\
    \ Per\n      Toft, HIP evaluation project, OpenDHT-HIP interface)\n   o  Microsoft\
    \ Research, Cambridge (T. Aura, HIP analysis)\n   o  MIT (H. Balakrishnan.  Delegation-Oriented\
    \ Architecture)\n   o  Huawei (D. Zhang, X. Xu, hierarchical HIP architecture,\
    \ HIP proxy,\n      key revocation)\n"
- title: 8.  Related Work on ID-Locator Split
  contents:
  - "8.  Related Work on ID-Locator Split\n   This section briefly summarizes the\
    \ related work on the ID-locator\n   split with particular focus on recent IETF\
    \ and IRTF activity.  In the\n   academic research community, several related\
    \ proposals were explored\n   prior to the founding of this research group, such\
    \ as the Internet\n   Indirection Infrastructure (i3) [paper.i3], IPNL [paper.layered],\n\
    \   DataRouter [paper.datarouter], Network Pointers [paper.netpointers],\n   FARA\
    \ [paper.fara], and TRIAD [paper.triad].\n   The topic of whether a new namespace\
    \ is needed for the Internet has\n   been controversial.  The Namespace Research\
    \ Group (NSRG) at the IRTF\n   was not able to reach consensus on the issue, nor\
    \ even to publish a\n   final report.  Yet, there seems to be little disagreement\
    \ that, for\n   many scenarios, some level of indirection from network name to\n\
    \   network location is essential or highly desirable to provide adequate\n  \
    \ service.  Mobile IP [RFC6275] is one example that reuses an existing\n   namespace\
    \ for host naming.  Since Mobile IP was finalized, many new\n   variants to providing\
    \ this indirection have been suggested.  Even\n   prior to Mobile IP, the IETF\
    \ has published informational documents\n   describing architectures separating\
    \ network name and location,\n   including the work of Jerome Saltzer [RFC1498]\
    \ and Nimrod [RFC1992].\n   Most recently, there have been standardization and\
    \ development\n   efforts in the IETF and IRTF as follows:\n   o  The Site Multihoming\
    \ in IPv6 (multi6) WG documented the ways that\n      multihoming is currently\
    \ implemented in IPv4 networks and\n      evaluated several approaches for advanced\
    \ multihoming.  The\n      security threats and impact on transport protocols\
    \ were covered\n      during the evaluation.  The work continued in another WG,\
    \ Site\n      Multihoming by IPv6 Intermediation (shim6), which is focusing on\n\
    \      specifications of one selected approach [RFC5533].  Shim6 uses the\n  \
    \    approach of inserting a shim layer between the IP and the\n      transport\
    \ layers that hides effects of changes in the set of\n      available addresses.\
    \  The applications are using one active\n      address that supports referrals.\
    \  Shim6 relies on\n      cryptographically generated IPv6 addresses to solve\
    \ the address\n      ownership problem.  HIP and shim6 are architecturally similar\
    \ and\n      use a common format for control packets.  HIP specifications\n  \
    \    define only simple multihoming scenarios leaving such important\n      issues\
    \ as interface selection untouched.  Shim6 offers\n      complementary functionality\
    \ that can be reused in HIP [REAP4HIP].\n      The OpenHIP implementation integrates\
    \ HIP and shim6 protocols in\n      the same framework, with the goal of allowing\
    \ HIP to reuse the\n      shim6 failure detection protocol.  Furthermore, HIP\
    \ and shim6\n      socket APIs have been jointly designed [RFC6317] [RFC6316].\n\
    \   o  The IRTF Routing Research Group (RRG) has explored a class of\n      solutions\
    \ to the global routing scalability problem that involve\n      either separation\
    \ of the existing IP address space into those used\n      for identifiers and\
    \ locators as in LISP [LISP] and Six/One Router\n      [SIX-ONE] and those advocating\
    \ a fuller separation of these roles\n      including ILNP [ILNP] and RANGI [RANGI].\n\
    \   o  The End-Middle-End research group considered the potential for an\n   \
    \   explicit signaling and policy control plane for middleboxes and\n      endpoints\
    \ [EME]; at a joint meeting at IETF 69, the HIP and EME\n      research groups\
    \ discussed whether the EME framework could help HIP\n      with middlebox traversal.\n\
    \   o  The IETF Multipath TCP working group is developing mechanisms to\n    \
    \  simultaneously use multiple paths in a regular TCP session.  The\n      MPTCP\
    \ solution aims to solve the multihoming problem also\n      addressed by HIP\
    \ but by solving it for TCP specifically.\n   o  The Unmanaged Internet Protocol\
    \ bears several similarities to the\n      HIP architecture, such as the focus\
    \ on identifiers that are not\n      centrally managed that are also based on\
    \ a cryptographic hash of a\n      node's public key [thesis.ford].\n   o  Apple\
    \ Back To My Mac service provides secure connections between\n      hosts using\
    \ IPsec between a pair of host identifiers.  However,\n      the host identifier\
    \ is reported to be an IPv6 Unique Local\n      Addressing (ULA) address rather\
    \ than a HIP identifier [RFC6281].\n   Although the HIP research group has not\
    \ formally tried to compare HIP\n   with other ID-locator split approaches, such\
    \ discussions have\n   occurred on other lists such as the Routing research group\
    \ mailing\n   list, and a comparison of HIP's mobility management solution with\n\
    \   other approaches was published in [MOBILITY-COMPARISON].\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document is an informational survey of HIP-related\
    \ research and\n   experience.  Space precludes a full accounting of all security\
    \ issues\n   associated with the approaches surveyed here, but the individually\n\
    \   referenced documents may discuss security considerations for their\n   respective\
    \ protocol component.  HIP security considerations for the\n   base HIP protocol\
    \ can be found in Section 8 of [RFC5201].\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Miika Komu, Pekka Nikander, Ari Keranen, and Jeff Ahrenholz\
    \ have\n   provided helpful comments on earlier draft versions of this document.\n\
    \   Miika Komu also contributed the section on opportunistic mode.  We\n   also\
    \ thank Dacheng Zhang for contributions on hierarchical HIP\n   architectures\
    \ and the Crypto Forum Research Group (Adam Back and Paul\n   Hoffman) for clarification\
    \ of Diffie-Hellman privacy properties.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [BEET-MODE] Nikander, P. and J. Melen, \"A Bound\
    \ End-to-End Tunnel\n               (BEET) mode for ESP\", Work in Progress, August\
    \ 2008.\n   [EME]       Francis, P., Guha, S., Brim, S., and M. Shore, \"An EME\n\
    \               Signaling Protocol Design\", Work in Progress, April 2007.\n \
    \  [HIP-DEX]   Moskowitz, R., \"HIP Diet EXchange (DEX)\", Work\n            \
    \   in Progress, March 2011.\n   [HIP-MIDDLE]\n               Hummen, R., Heer,\
    \ T., Wehrle, K., and M. Komu, \"End-Host\n               Authentication for HIP\
    \ Middleboxes\", Work in Progress,\n               October 2011.\n   [HIP-OPERATORS]\n\
    \               Dietz, T., Brunner, M., Papadoglou, N., Raptis, V., and\n    \
    \           K.  Kypris, \"Issues of HIP in an Operators Networks\",\n        \
    \       Work in Progress, October 2005.\n   [HIP-PRIVACY]\n               Zhang,\
    \ D. and M. Komu, \"An Extension of HIP Base Exchange\n               to Support\
    \ Identity Privacy\", Work in Progress,\n               July 2011.\n   [HIPLS]\
    \     Henderson, T., Venema, S., and D. Mattes, \"HIP-based\n               Virtual\
    \ Private LAN Service (HIPLS)\", Work in Progress,\n               September 2011.\n\
    \   [HIPRG-PROXIES]\n               Zhang, D., Xu, X., Yao, J., and Z. Cao, \"\
    Investigation in\n               HIP Proxies\", Work in Progress, October 2011.\n\
    \   [HIT2IP]    Ponomarev, O. and A. Gurtov, \"Embedding Host Identity\n     \
    \          Tags Data in DNS\", Work in Progress, July 2009.\n   [ILNP]      Atkinson,\
    \ R., \"ILNP Concept of Operations\", Work\n               in Progress, July 2011.\n\
    \   [LISP]      Farinacci, D., Fuller, V., Meyer, D., and D. Lewis,\n        \
    \       \"Locator/ID Separation Protocol (LISP)\", Work\n               in Progress,\
    \ November 2011.\n   [LMDR]      Swami, Y., Le, K., and W. Eddy, \"Lightweight\
    \ Mobility\n               Detection and Response (LMDR) Algorithm for TCP\",\
    \ Work\n               in Progress, February 2006.\n   [MOBILITY-COMPARISON]\n\
    \               Thaler, D., \"A Comparison of IP Mobility-Related\n          \
    \     Protocols\", Work in Progress, October 2006.\n   [MULTI-HOMED]\n       \
    \        Huitema, C., \"Multi-homed TCP\", Work in Progress,\n               May\
    \ 1995.\n   [NAT-TRAVERSAL]\n               Keranen, A. and J. Melen, \"Native\
    \ NAT Traversal Mode for\n               the Host Identity Protocol\", Work in\
    \ Progress,\n               January 2011.\n   [RANGI]     Xu, X., \"Routing Architecture\
    \ for the Next Generation\n               Internet (RANGI)\", Work in Progress,\
    \ August 2010.\n   [REAP4HIP]  Oliva, A. and M. Bagnulo, \"Fault tolerance configurations\n\
    \               for HIP multihoming\", Work in Progress, July 2007.\n   [RFC1498]\
    \   Saltzer, J., \"On the Naming and Binding of Network\n               Destinations\"\
    , RFC 1498, August 1993.\n   [RFC1992]  Castineyra, I., Chiappa, N., and M. Steenstrup,\
    \ \"The\n               Nimrod Routing Architecture\", RFC 1992, August 1996.\n\
    \   [RFC2367]   McDonald, D., Metz, C., and B. Phan, \"PF_KEY Key\n          \
    \     Management API, Version 2\", RFC 2367, July 1998.\n   [RFC4303]   Kent,\
    \ S., \"IP Encapsulating Security Payload (ESP)\",\n               RFC 4303, December\
    \ 2005.\n   [RFC4380]   Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n\
    \               Network Address Translations (NATs)\", RFC 4380,\n           \
    \    February 2006.\n   [RFC4423]   Moskowitz, R. and P. Nikander, \"Host Identity\
    \ Protocol\n               (HIP) Architecture\", RFC 4423, May 2006.\n   [RFC4843]\
    \   Nikander, P., Laganier, J., and F. Dupont, \"An IPv6\n               Prefix\
    \ for Overlay Routable Cryptographic Hash\n               Identifiers (ORCHID)\"\
    , RFC 4843, April 2007.\n   [RFC5201]   Moskowitz, R., Nikander, P., Jokela, P.,\
    \ and T.\n               Henderson, \"Host Identity Protocol\", RFC 5201,\n  \
    \             April 2008.\n   [RFC5202]   Jokela, P., Moskowitz, R., and P. Nikander,\
    \ \"Using the\n               Encapsulating Security Payload (ESP) Transport Format\n\
    \               with the Host Identity Protocol (HIP)\", RFC 5202,\n         \
    \      April 2008.\n   [RFC5203]   Laganier, J., Koponen, T., and L. Eggert, \"\
    Host Identity\n               Protocol (HIP) Registration Extension\", RFC 5203,\n\
    \               April 2008.\n   [RFC5204]   Laganier, J. and L. Eggert, \"Host\
    \ Identity Protocol (HIP)\n               Rendezvous Extension\", RFC 5204, April\
    \ 2008.\n   [RFC5205]   Nikander, P. and J. Laganier, \"Host Identity Protocol\n\
    \               (HIP) Domain Name System (DNS) Extensions\", RFC 5205,\n     \
    \          April 2008.\n   [RFC5206]   Nikander, P., Henderson, T., Vogt, C.,\
    \ and J. Arkko,\n               \"End- Host Mobility and Multihoming with the\
    \ Host\n               Identity Protocol\", RFC 5206, April 2008.\n   [RFC5207]\
    \   Stiemerling, M., Quittek, J., and L. Eggert, \"NAT and\n               Firewall\
    \ Traversal Issues of Host Identity Protocol (HIP)\n               Communication\"\
    , RFC 5207, April 2008.\n   [RFC5338]   Henderson, T., Nikander, P., and M. Komu,\
    \ \"Using the Host\n               Identity Protocol with Legacy Applications\"\
    , RFC 5338,\n               September 2008.\n   [RFC5533]   Nordmark, E. and M.\
    \ Bagnulo, \"Shim6: Level 3 Multihoming\n               Shim Protocol for IPv6\"\
    , RFC 5533, June 2009.\n   [RFC5770]   Komu, M., Henderson, T., Tschofenig, H.,\
    \ Melen, J., and\n               A.  Keranen, \"Basic Host Identity Protocol (HIP)\n\
    \               Extensions for Traversal of Network Address Translators\",\n \
    \              RFC 5770, April 2010.\n   [RFC6253]   Heer, T. and S. Varjonen,\
    \ \"Host Identity Protocol\n               Certificates\", RFC 6253, May 2011.\n\
    \   [RFC6275]   Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n    \
    \           Support in IPv6\", RFC 6275, July 2011.\n   [RFC6281]   Cheshire,\
    \ S., Zhu, Z., Wakikawa, R., and L. Zhang,\n               \"Understanding Apple's\
    \ Back to My Mac (BTMM) Service\",\n               RFC 6281, June 2011.\n   [RFC6298]\
    \   Paxson, V., Allman, M., Chu, J., and M. Sargent,\n               \"Computing\
    \ TCP's Retransmission Timer\", RFC 6298,\n               June 2011.\n   [RFC6316]\
    \   Komu, M., Bagnulo, M., Slavov, K., and S. Sugimoto,\n               \"Sockets\
    \ Application Program Interface (API) for\n               Multihoming Shim\",\
    \ RFC 6316, July 2011.\n   [RFC6317]   Komu, M. and T. Henderson, \"Basic Socket\
    \ Interface\n               Extensions for the Host Identity Protocol (HIP)\"\
    ,\n               RFC 6317, July 2011.\n   [RFC6537]   Ahrenholz, J., \"Host Identity\
    \ Protocol Distributed Hash\n               Table Interface\", RFC 6537, February\
    \ 2012.\n   [SIX-ONE]   Vogt, C., \"Six/One: A Solution for Routing and Addressing\n\
    \               in IPv6\", Work in Progress, October 2009.\n   [TCP-RLCI]  Schuetz,\
    \ S., Koutsianas, N., Eggert, L., Eddy, W., Swami,\n               Y., and K.\
    \ Le, \"TCP Response to Lower-Layer Connectivity-\n               Change Indications\"\
    , Work in Progress, February 2008.\n   [TRIGTRAN]  Dawkins, S., Williams, C.,\
    \ and A. Yegin, \"Framework and\n               Requirements for TRIGTRAN\", Work\
    \ in Progress,\n               February 2003.\n   [book.gurtov]\n            \
    \   Gurtov, A., \"Host Identity Protocol (HIP): Towards the\n               Secure\
    \ Mobile Internet\", ISBN 978-0-470-99790-1, Wiley\n               and Sons, (Hardcover,\
    \ p 332), June 2008.\n   [paper.blind]\n               Ylitalo, J. and P. Nikander,\
    \ \"BLIND: A complete identity\n               protection framework for end-points\"\
    , Proc. of\n               the Twelfth International Workshop on Security Protoc\n\
    \               ols, April 2004.\n   [paper.datarouter]\n               Touch,\
    \ J. and V. Pingali, \"DataRouter:  A Network-Layer\n               Service for\
    \ Application-Layer Forwarding\",  Proceedings\n               of International\
    \ Workshop on Active Networks (IWAN),\n               May 2003.\n   [paper.fara]\n\
    \               Clark, D., Braden, R., Falk, A., and V. Pingali, \"FARA:\n   \
    \            Reorganizing the Addressing Architecture\",  Proceedings\n      \
    \         of ACM SIGCOMM FDNA Workshop, August 2003.\n   [paper.firewall]\n  \
    \             Lindqvist, J., Vehmersalo, E., Komu, M., and J. Manner,\n      \
    \         \"Enterprise Network Packet Filtering for Mobile\n               Cryptographic\
    \ Identities\", International Journal of\n               Handheld Computing Research\
    \ (IJHCR), Volume 1, Issue\n               1, Pages 79-94, January 2010.\n   [paper.handovers]\n\
    \               Varjonen, S., Komu, M., and A. Gurtov, \"Secure and\n        \
    \       Efficient IPv4/IPv6 Handovers Using Host-Based\n               Identifier-Locator\
    \ Split\",  Proceedings of the 17th\n               International Conference \
    \ Software, Telecommunications,\n               and Computer Networks, September\
    \ 2009.\n   [paper.hi3] Gurtov, A., Korzon, D., Lukyanenko, A., and P. Nikander,\n\
    \               \"Hi3: An Efficient and Secure Networking Architecture for\n \
    \              Mobile Hosts\", Computer communication, 31 (2008), p.\n       \
    \        2457- 2467, <http://www.cs.helsinki.fi/u/gurtov/papers/\n           \
    \    comcom_hi3.pdf>.\n   [paper.hipanalysis]\n               Aura, T., Nagarajan,\
    \ A., and A. Gurtov, \"Analysis of the\n               HIP Base Exchange Protocol\"\
    ,  Proc. of the 10th\n               Australasian Conference on Information Security\
    \ and\n               Privacy (ACISP), July 2005.\n   [paper.i3]  Stoica, I.,\
    \ Adkins, D., Zhuang, S., Shenker, S., and S.\n               Surana, \"Internet\
    \ Indirection Infrastructure (i3)\",\n                Proceedings of ACM SIGCOMM,\
    \ August 2002.\n   [paper.layered]\n               Balakrishnan, H., Lakshminarayanan,\
    \ K., Ratnasamy, S.,\n               Shenker, S., Stoica, I., and M. Walfish,\
    \ \"A Layered\n               Naming Architecture for the Internet\",  Proceedings\
    \ of\n               ACM SIGCOMM, August 2004.\n   [paper.leap-of-faith]\n   \
    \            Komu, M. and J. Lindqvist, \"Leap-of-faith security is\n        \
    \       enough for IP mobility\", Proceedings of the 6th IEEE\n              \
    \ Conference on Consumer Communications and Networking\n               Conference\
    \ (CCNC 09), 2009.\n   [paper.mobiarch]\n               Khurri, A., Vorobyeva,\
    \ E., and A. Gurtov, \"Performance of\n               Host Identity Protocol on\
    \ Lightweight Hardware\",\n                Proceedings of ACM MobiArch, August\
    \ 2007.\n   [paper.namespace]\n               Komu, M., Tarkoma, S., Kangasharju,\
    \ J., and A. Gurtov,\n               \"Applying a Cryptographic Namespace to Applications\"\
    ,\n                Proc. of First International ACM Workshop on Dynamic\n    \
    \           Interconnection of Networks, September 2005.\n   [paper.netpointers]\n\
    \               Tschudin, C. and R. Gold, \"Network pointers\", ACM SIGCOMM\n\
    \               Computer Communications Review, Vol. 33, Issue 1,\n          \
    \     January 2003.\n   [paper.p2psip]\n               Koskela, J., Heikkila,\
    \ J., and A. Gurtov, \"A secure P2P\n               SIP system with SPAM prevention\"\
    ,  ACM Mobile Computer\n               Communications Review, July 2009.\n   [paper.triad]\n\
    \               Cheriton, D. and M. Gritter, \"TRIAD: A New\n               Next-Generation\
    \ Internet Architecture\", July 2000,\n               <http://www-dsg.stanford.edu/triad/triad.ps.gz>.\n\
    \   [paper.usable-security]\n               Karvone, K., Komu, M., and A. Gurtov,\
    \ \"Usable Security\n               Management with Host Identity Protocol\",\
    \  Proc. of the\n               IEEE/ACS International Conference on Computer\
    \ Systems and\n               Applications, May 2009.\n   [thesis.bishaj]\n  \
    \             Bishaj, B., \"Efficient Leap of Faith Security with Host\n     \
    \          Identity Protocol\",  Master thesis, Helsinki University\n        \
    \       of Technology, June 2008.\n   [thesis.ford]\n               Ford, B.,\
    \ \"UIA:  A Global Connectivity Architecture for\n               Mobile Personal\
    \ Devices\",  Doctoral thesis, Massachusetts\n               Institute of Technology,\
    \ September 2008.\n   [thesis.karlsson]\n               Karlsson, N., \"Enabling\
    \ Multiple Host Identities on\n               Linux\",  Master thesis, Helsinki\
    \ University of\n               Technology, September 2005.\n   [thesis.takkinen]\n\
    \               Takkinen, L., \"Host Identity Protocol Privacy\n             \
    \  Management\", Master thesis, March 2006,\n               <http://www.tml.tkk.fi/~anttiyj/Laura-Privacy.pdf>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Henderson\n   The Boeing Company\n   P.O. Box 3707\n\
    \   Seattle, WA\n   USA\n   EMail: thomas.r.henderson@boeing.com\n   Andrei Gurtov\n\
    \   University of Oulu\n   Centre for Wireless Communications CWC\n   P.O. Box\
    \ 4500\n   FI-90014 University of Oulu\n   Finland\n   EMail: gurtov@ee.oulu.fi\n"
