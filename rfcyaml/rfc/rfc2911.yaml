- title: __initial_text__
  contents:
  - '          Internet Printing Protocol/1.1: Model and Semantics

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents, which together describe\n\
    \   all aspects of a new Internet Printing Protocol (IPP).  IPP is an\n   application\
    \ level protocol that can be used for distributed printing\n   using Internet\
    \ tools and technologies.  This document describes a\n   simplified model consisting\
    \ of abstract objects, their attributes,\n   and their operations that is independent\
    \ of encoding and transport.\n   The model consists of a Printer and a Job object.\
    \  A Job optionally\n   supports multiple documents.  IPP 1.1 semantics allow\
    \ end-users and\n   operators to query printer capabilities, submit print jobs,\
    \ inquire\n   about the status of print jobs and printers, cancel, hold, release,\n\
    \   and restart print jobs.  IPP 1.1 semantics allow operators to pause,\n   resume,\
    \ and purge (jobs from) Printer objects.  This document also\n   addresses security,\
    \ internationalization, and directory issues.\n   The full set of IPP documents\
    \ includes:\n     Design Goals for an Internet Printing Protocol [RFC2567]\n \
    \    Rationale for the Structure and Model and Protocol for the Internet\n   \
    \  Printing Protocol [RFC2568]\n     Internet Printing Protocol/1.1: Model and\
    \ Semantics (this document)\n     Internet Printing Protocol/1.1: Encoding and\
    \ Transport [RFC2910]\n     Internet Printing Protocol/1.1: Implementer's Guide\
    \ [IPP-IIG]\n     Mapping between LPD and IPP Protocols [RFC2569]\n   The \"Design\
    \ Goals for an Internet Printing Protocol\" document takes a\n   broad look at\
    \ distributed printing functionality, and it enumerates\n   real-life scenarios\
    \ that help to clarify the features that need to be\n   included in a printing\
    \ protocol for the Internet.  It identifies\n   requirements for three types of\
    \ users: end users, operators, and\n   administrators.  It calls out a subset\
    \ of end user requirements that\n   are satisfied in IPP/1.0.  A few OPTIONAL\
    \ operator operations have\n   been added to IPP/1.1.\n   The \"Rationale for\
    \ the Structure and Model and Protocol for the\n   Internet Printing Protocol\"\
    \ document describes IPP from a high level\n   view, defines a roadmap for the\
    \ various documents that form the suite\n   of IPP specification documents, and\
    \ gives background and rationale\n   for the IETF working group's major decisions.\n\
    \   The \"Internet Printing Protocol/1.1: Encoding and Transport\" document\n\
    \   is a formal mapping of the abstract operations and attributes defined\n  \
    \ in the model document onto HTTP/1.1 [RFC2616].  It defines the\n   encoding\
    \ rules for a new Internet MIME media type called\n   \"application/ipp\".  This\
    \ document also defines the rules for\n   transporting over HTTP a message body\
    \ whose Content-Type is\n   \"application/ipp\".  This document defines a new\
    \ scheme named 'ipp'\n   for identifying IPP printers and jobs.\n   The \"Internet\
    \ Printing Protocol/1.1: Implementer's Guide\" document\n   gives insight and\
    \ advice to implementers of IPP clients and IPP\n   objects.  It is intended to\
    \ help them understand IPP/1.1 and some of\n   the considerations that may assist\
    \ them in the design of their client\n   and/or IPP object implementations.  For\
    \ example, a typical order of\n   processing requests is given, including error\
    \ checking.  Motivation\n   for some of the specification decisions is also included.\n\
    \   The \"Mapping between LPD and IPP Protocols\" document gives some\n   advice\
    \ to implementers of gateways between IPP and LPD (Line Printer\n   Daemon) implementations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction                                     \
    \            9\n   1.1   Simplified Printing Model                           \
    \       10\n   2.   IPP Objects                                              \
    \   12\n   2.1   Printer Object                                             13\n\
    \   2.2   Job Object                                                 15\n   2.3\
    \   Object Relationships                                       16\n   2.4   Object\
    \ Identity                                            17\n   3.   IPP Operations\
    \                                              20\n   3.1   Common Semantics \
    \                                          21\n   3.1.1  Required Parameters \
    \                                      21\n   3.1.2  Operation IDs and Request\
    \ IDs                             22\n   3.1.3  Attributes                   \
    \                             22\n   3.1.4  Character Set and Natural Language\
    \ Operation Attribute    24\n   3.1.4.1   Request Operation Attributes       \
    \                    25\n   3.1.4.2   Response Operation Attributes          \
    \                29\n   3.1.5  Operation Targets                             \
    \            30\n   3.1.6  Operation Response Status Codes and Status Messages\
    \       32\n   3.1.6.1   \"status-code\" (type2 enum)                        \
    \     32\n   3.1.6.2   \"status-message\" (text(255))                        \
    \   33\n   3.1.6.3   \"detailed-status-message\" (text(MAX))                 \
    \ 33\n   3.1.6.4   \"document-access-error\" (text(MAX))                    34\n\
    \   3.1.7  Unsupported Attributes                                    34\n   3.1.8\
    \  Versions                                                  36\n   3.1.9  Job\
    \ Creation Operations                                   38\n   3.2   Printer Operations\
    \                                         41\n   3.2.1  Print-Job Operation  \
    \                                     41\n   3.2.1.1   Print-Job Request     \
    \                                 41\n   3.2.1.2   Print-Job Response        \
    \                             46\n   3.2.2  Print-URI Operation              \
    \                         48\n   3.2.3  Validate-Job Operation               \
    \                     49\n   3.2.4  Create-Job Operation                     \
    \                 49\n   3.2.5  Get-Printer-Attributes Operation             \
    \             50\n   3.2.5.1   Get-Printer-Attributes Request                \
    \         51\n   3.2.5.2   Get-Printer-Attributes Response                   \
    \     53\n   3.2.6  Get-Jobs Operation                                       \
    \ 54\n   3.2.6.1   Get-Jobs Request                                       54\n\
    \   3.2.6.2   Get-Jobs Response                                      56\n   3.2.7\
    \  Pause-Printer Operation                                   57\n   3.2.7.1  \
    \ Pause-Printer Request                                  59\n   3.2.7.2   Pause-Printer\
    \ Response                                 60\n   3.2.8  Resume-Printer Operation\
    \                                  60\n   3.2.9  Purge-Jobs Operation        \
    \                              61\n   3.3   Job Operations                   \
    \                          62\n   3.3.1  Send-Document Operation             \
    \                      62\n   3.3.1.1   Send-Document Request                \
    \                  64\n   3.3.1.2   Send-Document Response                   \
    \              65\n   3.3.2  Send-URI Operation                              \
    \          66\n   3.3.3  Cancel-Job Operation                                \
    \      66\n   3.3.3.1   Cancel-Job Request                                   \
    \  67\n   3.3.3.2   Cancel-Job Response                                    68\n\
    \   3.3.4  Get-Job-Attributes Operation                              69\n   3.3.4.1\
    \   Get-Job-Attributes Request                             69\n   3.3.4.2   Get-Job-Attributes\
    \ Response                            70\n   3.3.5  Hold-Job Operation       \
    \                                 71\n   3.3.5.1   Hold-Job Request          \
    \                             72\n   3.3.5.2   Hold-Job Response             \
    \                         73\n   3.3.6  Release-Job Operation                \
    \                     74\n   3.3.7  Restart-Job Operation                    \
    \                 75\n   3.3.7.1   Restart-Job Request                       \
    \             76\n   3.3.7.2   Restart-Job Response                          \
    \         78\n   4.   Object Attributes                                      \
    \     78\n   4.1   Attribute Syntaxes                                        \
    \ 78\n   4.1.1  'text'                                                    79\n\
    \   4.1.1.1   'textWithoutLanguage'                                  80\n   4.1.1.2\
    \   'textWithLanguage'                                     80\n   4.1.2  'name'\
    \                                                    81\n   4.1.2.1   'nameWithoutLanguage'\
    \                                  82\n   4.1.2.2   'nameWithLanguage'       \
    \                              82\n   4.1.2.3   Matching 'name' attribute values\
    \                       83\n   4.1.3  'keyword'                              \
    \                   84\n   4.1.4  'enum'                                     \
    \               85\n   4.1.5  'uri'                                          \
    \           85\n   4.1.6  'uriScheme'                                        \
    \       86\n   4.1.7  'charset'                                              \
    \   86\n   4.1.8  'naturalLanguage'                                         87\n\
    \   4.1.9  'mimeMediaType'                                           87\n   4.1.9.1\
    \ Application/octet-stream -- Auto-Sensing                 88\n           the\
    \ document format\n   4.1.10 'octetString'                                   \
    \          89\n   4.1.11 'boolean'                                           \
    \      89\n   4.1.12 'integer'                                               \
    \  89\n   4.1.13 'rangeOfInteger'                                          90\n\
    \   4.1.14 'dateTime'                                                90\n   4.1.15\
    \ 'resolution'                                              90\n   4.1.16 '1setOf\
    \  X'                                               90\n   4.2   Job Template\
    \ Attributes                                    91\n   4.2.1  job-priority (integer(1:100))\
    \                             94\n   4.2.2  job-hold-until (type3 keyword | name\
    \ (MAX))               95\n   4.2.3  job-sheets (type3 keyword | name(MAX))  \
    \                  96\n   4.2.4  multiple-document-handling (type2 keyword)  \
    \              96\n   4.2.5  copies (integer(1:MAX))                         \
    \          98\n   4.2.6  finishings (1setOf type2 enum)                      \
    \      98\n   4.2.7  page-ranges (1setOf rangeOfInteger (1:MAX))             \
    \ 101\n   4.2.8  sides (type2 keyword)                                    102\n\
    \   4.2.9  number-up (integer(1:MAX))                               102\n   4.2.10\
    \ orientation-requested (type2 enum)                       103\n   4.2.11 media\
    \ (type3 keyword | name(MAX))                        104\n   4.2.12 printer-resolution\
    \ (resolution)                          105\n   4.2.13 print-quality (type2 enum)\
    \                               105\n   4.3   Job Description Attributes     \
    \                           106\n   4.3.1  job-uri (uri)                     \
    \                       107\n   4.3.2  job-id (integer(1:MAX))               \
    \                   108\n   4.3.3  job-printer-uri (uri)                     \
    \               108\n   4.3.4  job-more-info (uri)                           \
    \           108\n   4.3.5  job-name (name(MAX))                              \
    \       108\n   4.3.6  job-originating-user-name (name(MAX))                 \
    \   109\n   4.3.7  job-state (type1 enum)                                   109\n\
    \   4.3.7.1   Forwarding Servers                                    112\n   4.3.7.2\
    \   Partitioning of Job States                            112\n   4.3.8  job-state-reasons\
    \ (1setOf  type2 keyword)                113\n   4.3.9  job-state-message (text(MAX))\
    \                            118\n   4.3.10 job-detailed-status-messages (1setOf\
    \ text(MAX))          118\n   4.3.11 job-document-access-errors (1setOf text(MAX))\
    \            118\n   4.3.12 number-of-documents (integer(0:MAX))             \
    \        119\n   4.3.13 output-device-assigned (name(127))                   \
    \    119\n   4.3.14 Event Time Job Description Attributes                    119\n\
    \   4.3.14.1  time-at-creation (integer(MIN:MAX))                   120\n   4.3.14.2\
    \  time-at-processing (integer(MIN:MAX))                 120\n   4.3.14.3  time-at-completed\
    \ (integer(MIN:MAX))                  120\n   4.3.14.4  job-printer-up-time (integer(1:MAX))\
    \                  120\n   4.3.14.5  date-time-at-creation (dateTime)        \
    \              121\n   4.3.14.6  date-time-at-processing (dateTime)          \
    \          121\n   4.3.14.7  date-time-at-completed (dateTime)               \
    \      121\n   4.3.15 number-of-intervening-jobs (integer(0:MAX))            \
    \  121\n   4.3.16 job-message-from-operator (text(127))                    121\n\
    \   4.3.17 Job Size Attributes                                      121\n   4.3.17.1\
    \  job-k-octets (integer(0:MAX))                         122\n   4.3.17.2  job-impressions\
    \ (integer(0:MAX))                      122\n   4.3.17.3  job-media-sheets (integer(0:MAX))\
    \                     123\n   4.3.18 Job Progress Attributes                 \
    \                 123\n   4.3.18.1  job-k-octets-processed (integer(0:MAX))  \
    \             123\n   4.3.18.2  job-impressions-completed (integer(0:MAX))   \
    \         123\n   4.3.18.3  job-media-sheets-completed (integer(0:MAX))      \
    \     124\n   4.3.19 attributes-charset (charset)                            \
    \ 124\n   4.3.20 attributes-natural-language (naturalLanguage)            124\n\
    \   4.4   Printer Description Attributes                            124\n   4.4.1\
    \  printer-uri-supported (1setOf uri)                       126\n   4.4.2  uri-authentication-supported\
    \ (1setOf type2 keyword)      127\n   4.4.3  uri-security-supported (1setOf type2\
    \ keyword)            128\n   4.4.4  printer-name (name(127))                \
    \                 129\n   4.4.5  printer-location (text(127))                \
    \             129\n   4.4.6  printer-info (text(127))                        \
    \         130\n   4.4.7  printer-more-info (uri)                             \
    \     130\n   4.4.8  printer-driver-installer (uri)                          \
    \ 130\n   4.4.9  printer-make-and-model (text(127))                       130\n\
    \   4.4.10 printer-more-info-manufacturer (uri)                     130\n   4.4.11\
    \ printer-state (type1 enum)                               131\n   4.4.12 printer-state-reasons\
    \ (1setOf type2 keyword)             131\n   4.4.13 printer-state-message (text(MAX))\
    \                        134\n   4.4.14 ipp-versions-supported (1setOf type2 keyword)\
    \            134\n   4.4.15 operations-supported (1setOf type2 enum)         \
    \        135\n   4.4.16 multiple-document-jobs-supported (boolean)           \
    \    136\n   4.4.17 charset-configured (charset)                             136\n\
    \   4.4.18 charset-supported (1setOf charset)                       137\n   4.4.19\
    \ natural-language-configured (naturalLanguage)            137\n   4.4.20 generated-natural-language-supported\n\
    \          (1setOf naturalLanguage)                                 137\n   4.4.21\
    \ document-format-default (mimeMediaType)                  138\n   4.4.22 document-format-supported\
    \ (1setOf mimeMediaType)         138\n   4.4.23 printer-is-accepting-jobs (boolean)\
    \                      138\n   4.4.24 queued-job-count (integer(0:MAX))      \
    \                  138\n   4.4.25 printer-message-from-operator (text(127))  \
    \              139\n   4.4.26 color-supported (boolean)                      \
    \          139\n   4.4.27 reference-uri-schemes-supported (1setOf uriScheme) \
    \      139\n   4.4.28 pdl-override-supported (type2 keyword)                 \
    \  139\n   4.4.29 printer-up-time (integer(1:MAX))                         140\n\
    \   4.4.30 printer-current-time (dateTime)                          140\n   4.4.31\
    \ multiple-operation-time-out (integer(1:MAX))             141\n   4.4.32 compression-supported\
    \ (1setOf type3 keyword)             141\n   4.4.33 job-k-octets-supported (rangeOfInteger(0:MAX))\
    \           142\n   4.4.34 job-impressions-supported (rangeOfInteger(0:MAX)) \
    \       142\n   4.4.35 job-media-sheets-supported (rangeOfInteger(0:MAX))    \
    \   142\n   4.4.36 pages-per-minute (integer(0:MAX))                        142\n\
    \   4.4.37 pages-per-minute-color (integer(0:MAX))                  142\n   5.\
    \   Conformance                                                143\n   5.1   Client\
    \ Conformance Requirements                           143\n   5.2   IPP Object\
    \ Conformance Requirements                       145\n   5.2.1  Objects      \
    \                                            145\n   5.2.2  Operations       \
    \                                        145\n   5.2.3  IPP Object Attributes\
    \                                    146\n   5.2.4  Versions                 \
    \                                146\n   5.2.5  Extensions                   \
    \                            147\n   5.2.6  Attribute Syntaxes               \
    \                        147\n   5.2.7  Security                             \
    \                    148\n   5.3   Charset and Natural Language Requirements \
    \                148\n   6.   IANA Considerations                            \
    \            148\n   6.1   Typed 'keyword' and 'enum' Extensions             \
    \        149\n   6.2   Attribute Extensibility                               \
    \    151\n   6.3   Attribute Syntax Extensibility                            152\n\
    \   6.4   Operation Extensibility                                   152\n   6.5\
    \   Attribute Group Extensibility                             153\n   6.6   Status\
    \ Code Extensibility                                 153\n   6.7   Out-of-band\
    \ Attribute Value Extensibility                 154\n   6.8   Registration of\
    \ MIME types/sub-types for document-formats 154\n   6.9   Registration of charsets\
    \ for use in 'charset'\n         attribute values                            \
    \              154\n   7.   Internationalization Considerations              \
    \          154\n   8.   Security Considerations                              \
    \      158\n   8.1   Security Scenarios                                      \
    \  159\n   8.1.1  Client and Server in the Same Security Domain            159\n\
    \   8.1.2  Client and Server in Different Security Domains          159\n   8.1.3\
    \  Print by Reference                                       160\n   8.2   URIs\
    \ in Operation, Job, and Printer attributes            160\n   8.3   URIs for\
    \ each authentication mechanisms                   160\n   8.4   Restricted Queries\
    \                                        161\n   8.5   Operations performed by\
    \ operators and system\n         administrators                              \
    \              161\n   8.6   Queries on jobs submitted using non-IPP protocols\
    \         162\n   9.   References                                            \
    \     162\n   10.  Authors' Addresses                                        \
    \ 166\n   11.  Formats for IPP Registration Proposals                     168\n\
    \   11.1  Type2 keyword attribute values registration               169\n   11.2\
    \  Type3 keyword attribute values registration               169\n   11.3  Type2\
    \ enum attribute values registration                  169\n   11.4  Type3 enum\
    \ attribute values registration                  170\n   11.5  Attribute registration\
    \                                    170\n   11.6  Attribute Syntax registration\
    \                             171\n   11.7  Operation registration           \
    \                         171\n   11.8  Attribute Group registration         \
    \                     171\n   11.9  Status code registration                 \
    \                 172\n   11.10 Out-of-band Attribute Value registration     \
    \             172\n   12.  APPENDIX A: Terminology                           \
    \         173\n   12.1  Conformance Terminology                              \
    \     173\n   12.1.1 NEED NOT                                                \
    \ 173\n   12.2  Model Terminology                                         173\n\
    \   12.2.1 Keyword                                                  173\n   12.2.2\
    \ Attributes                                               173\n   12.2.2.1  Attribute\
    \ Name                                        173\n   12.2.2.2  Attribute Group\
    \ Name                                  174\n   12.2.2.3  Attribute Value    \
    \                                   174\n   12.2.2.4  Attribute Syntax       \
    \                               174\n   12.2.3 Supports                      \
    \                           174\n   12.2.4 print-stream page                 \
    \                       176\n   12.2.5 impression                            \
    \                   177\n   13. APPENDIX B: Status Codes and Suggested Status\
    \ Code Messages 177\n   13.1  Status Codes                                   \
    \           178\n   13.1.1 Informational                                     \
    \       178\n   13.1.2 Successful Status Codes                               \
    \   178\n   13.1.2.1  successful-ok (0x0000)                                178\n\
    \   13.1.2.2  successful-ok-ignored-or-substituted-attributes\n             (0x0001)\
    \                                              179\n   13.1.2.3  successful-ok-conflicting-attributes\
    \ (0x0002)         179\n   13.1.3 Redirection Status Codes                   \
    \              179\n   13.1.4 Client Error Status Codes                      \
    \          179\n   13.1.4.1  client-error-bad-request (0x0400)               \
    \      180\n   13.1.4.2  client-error-forbidden (0x0401)                     \
    \  180\n   13.1.4.3  client-error-not-authenticated (0x0402)               180\n\
    \   13.1.4.4  client-error-not-authorized (0x0403)                  180\n   13.1.4.5\
    \  client-error-not-possible (0x0404)                    180\n   13.1.4.6  client-error-timeout\
    \ (0x0405)                         181\n   13.1.4.7  client-error-not-found (0x0406)\
    \                       181\n   13.1.4.8  client-error-gone (0x0407)         \
    \                   181\n   13.1.4.9  client-error-request-entity-too-large (0x0408)\
    \        182\n   13.1.4.10 client-error-request-value-too-long (0x0409)      \
    \    182\n   13.1.4.11 client-error-document-format-not-supported (0x040A)   182\n\
    \   13.1.4.12 client-error-attributes-or-values-not-supported\n             (0x040B)\
    \                                              183\n   13.1.4.13 client-error-uri-scheme-not-supported\
    \ (0x040C)        183\n   13.1.4.14 client-error-charset-not-supported (0x040D)\
    \           183\n   13.1.4.15 client-error-conflicting-attributes (0x040E)   \
    \       183\n   13.1.4.16 client-error-compression-not-supported (0x040F)    \
    \   184\n   13.1.4.17 client-error-compression-error (0x0410)               184\n\
    \   13.1.4.18 client-error-document-format-error (0x0411)           184\n   13.1.4.19\
    \ client-error-document-access-error (0x0412)           184\n   13.1.5    Server\
    \ Error Status Codes                             185\n   13.1.5.1  server-error-internal-error\
    \ (0x0500)                  185\n   13.1.5.2  server-error-operation-not-supported\
    \ (0x0501)         185\n   13.1.5.3  server-error-service-unavailable (0x0502)\
    \             185\n   13.1.5.4  server-error-version-not-supported (0x0503)  \
    \         185\n   13.1.5.5  server-error-device-error (0x0504)               \
    \     186\n   13.1.5.6  server-error-temporary-error (0x0505)                \
    \ 186\n   13.1.5.7  server-error-not-accepting-jobs (0x0506)              187\n\
    \   13.1.5.8  server-error-busy (0x0507)                            187\n   13.1.5.9\
    \  server-error-job-canceled (0x0508)                    187\n   13.1.5.10 server-error-multiple-document-jobs-not-supported\n\
    \             (0x0509)                                              187\n   13.2\
    \  Status Codes for IPP Operations                           187\n   14.  APPENDIX\
    \ C:  \"media\" keyword values                        190\n   15.  APPENDIX D:\
    \ Processing IPP Attributes                      208\n   15.1  Fidelity      \
    \                                            209\n   15.2  Page Description Language\
    \ (PDL) Override                  210\n   15.3  Using Job Template Attributes\
    \ During Document Processing  212\n   16.  APPENDIX E: Generic Directory Schema\
    \                       214\n   17.  APPENDIX F:  Differences between the IPP/1.0\
    \ and IPP/1.1\n        \"Model and Semantics\" Documents                     \
    \       215\n   18.  Full Copyright Statement                                \
    \   224\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Internet Printing Protocol (IPP) is an application level\
    \ protocol\n   that can be used for distributed printing using Internet tools\
    \ and\n   technologies.  IPP version 1.1 (IPP/1.1) focuses primarily on end\n\
    \   user functionality with a few administrative operations included.\n   This\
    \ document is just one of a suite of documents that fully define\n   IPP.  The\
    \ full set of IPP documents includes:\n     Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n     Rationale for the Structure and Model and Protocol\
    \ for the Internet\n     Printing Protocol [RFC2568]\n     Internet Printing Protocol/1.1:\
    \ Model and Semantics (this document)\n     Internet Printing Protocol/1.1: Encoding\
    \ and Transport [RFC2910]\n     Internet Printing Protocol/1.1: Implementer's\
    \ Guide [IPP-IIG]\n     Mapping between LPD and IPP Protocols [RFC2569]\n   Anyone\
    \ reading these documents for the first time is strongly\n   encouraged to read\
    \ the IPP documents in the above order.\n   This document is laid out as follows:\n\
    \   - The rest of Section 1 is an introduction to the IPP simplified\n     model\
    \ for distributed printing.\n   - Section 2 introduces the object types covered\
    \ in the model with\n     their basic behaviors, attributes, and interactions.\n\
    \   - Section 3 defines the operations included in IPP/1.1.  IPP\n     operations\
    \ are synchronous, therefore, for each operation, there is\n     a both request\
    \ and a response.\n   - Section 4 defines the attributes (and their syntaxes)\
    \ that are used\n     in the model.\n   - Sections 5 - 6 summarizes the implementation\
    \ conformance\n     requirements for objects that support the protocol and IANA\n\
    \     considerations, respectively.\n   - Sections 7 - 11 cover the Internationalization\
    \ and Security\n     considerations as well as References, Author contact information,\n\
    \     and Formats for Registration Proposals.\n   - Sections 12 - 14 are appendices\
    \ that cover Terminology, Status\n     Codes and Messages, and \"media\" keyword\
    \ values.\n       Note: This document uses terms such as \"attributes\", \"keywords\"\
    ,\n       and \"support\".  These terms have special meaning and are defined\n\
    \       in the model terminology section 12.2.  Capitalized terms, such\n    \
    \   as MUST, MUST NOT, REQUIRED, SHOULD, SHOULD NOT, MAY, NEED NOT,\n       and\
    \ OPTIONAL, have special meaning relating to conformance.\n       These terms\
    \ are defined in section 12.1 on conformance\n       terminology, most of which\
    \ is taken from RFC 2119 [RFC2119].\n   - Section 15 is an appendix that helps\
    \ to clarify the effects of\n     interactions between related attributes and\
    \ their values.\n   - Section 16 is an appendix that enumerates the subset of\
    \ Printer\n     attributes that form a generic directory schema.  These attributes\n\
    \     are useful when registering a Printer so that a client can find the\n  \
    \   Printer not just by name, but by filtered searches as well.\n   - Section\
    \ 17 is an appendix summarizing the additions and changes\n     from the IPP/1.0\
    \ \"Model and Semantics\" document [RFC2566] to make\n     this IPP/1.1 document.\n\
    \   - Section 18 is the full copyright notice.\n"
- title: 1.1 Simplified Printing Model
  contents:
  - "1.1 Simplified Printing Model\n   In order to achieve its goal of realizing a\
    \ workable printing\n   protocol for the Internet, the Internet Printing Protocol\
    \ (IPP) is\n   based on a simplified printing model that abstracts the many\n\
    \   components of real world printing solutions.  The Internet is a\n   distributed\
    \ computing environment where requesters of print services\n   (clients, applications,\
    \ printer drivers, etc.) cooperate and interact\n   with print service providers.\
    \  This model and semantics document\n   describes a simple, abstract model for\
    \ IPP even though the underlying\n   configurations may be complex \"n-tier\"\
    \ client/server systems.  An\n   important simplifying step in the IPP model is\
    \ to expose only the key\n   objects and interfaces required for printing.  The\
    \ model described in\n   this model document does not include features, interfaces,\
    \ and\n   relationships that are beyond the scope of the first version of IPP\n\
    \   (IPP/1.1).  IPP/1.1 incorporates many of the relevant ideas and\n   lessons\
    \ learned from other specification and development efforts\n   [HTPP] [ISO10175]\
    \ [LDPA] [P1387.4] [PSIS] [RFC1179] [SWP].  IPP is\n   heavily influenced by the\
    \ printing model introduced in the Document\n   Printing Application (DPA) [ISO10175]\
    \ standard.  Although DPA\n   specifies both end user and administrative features,\
    \ IPP version 1.1\n   (IPP/1.1) focuses primarily on end user functionality with\
    \ a few\n   additional OPTIONAL operator operations.\n   The IPP/1.1 model encapsulates\
    \ the important components of\n   distributed printing into two object types:\n\
    \      - Printer (Section 2.1)\n      - Job (Section 2.2)\n   Each object type\
    \ has an associated set of operations (see section 3)\n   and attributes (see\
    \ section 4).\n   It is important, however, to understand that in real system\n\
    \   implementations (which lie underneath the abstracted IPP/1.1 model),\n   there\
    \ are other components of a print service which are not\n   explicitly defined\
    \ in the IPP/1.1 model. The following figure\n   illustrates where IPP/1.1 fits\
    \ with respect to these other\n   components.\n                              \
    \  +--------------+\n                                |  Application |\n      \
    \                o         +. . . . . . . |\n                     \\|/       \
    \ |   Spooler    |\n                     / \\        +. . . . . . . |   +---------+\n\
    \                   End-User     | Print Driver |---|  File   |\n         +-----------+\
    \ +-----+  +------+-------+   +----+----+\n         |  Browser  | | GUI |    \
    \     |                |\n         +-----+-----+ +--+--+         |           \
    \     |\n               |          |            |                |\n         \
    \      |      +---+------------+---+            |\n   N   D   S   |      |   \
    \   IPP Client    |------------+\n   O   I   E   |      +---------+----------+\n\
    \   T   R   C   |                |\n   I   E   U   |\n   F   C   R   --------------\
    \ Transport ------------------\n   I   T   I\n   C   O   T                   \
    \ |         --+\n   A   R   Y           +--------+--------+  |\n   T   Y     \
    \          |    IPP Server   |  |\n   I                   +--------+--------+\
    \  |\n   O                            |           |\n   N                   +-----------------+\
    \  | IPP Printer\n                       |  Print Service  |  |\n            \
    \           +-----------------+  |\n                                |        \
    \ --+\n                       +-----------------+\n                       | Output\
    \ Device(s)|\n                       +-----------------+\n   An IPP Printer object\
    \ encapsulates the functions normally associated\n   with physical output devices\
    \ along with the spooling, scheduling and\n   multiple device management functions\
    \ often associated with a print\n   server. Printer objects are optionally registered\
    \ as entries in a\n   directory where end users find and select them based on\
    \ some sort of\n   filtered and context based searching mechanism (see section\
    \ 16).  The\n   directory is used to store relatively static information about\
    \ the\n   Printer, allowing end users to search for and find Printers that\n \
    \  match their search criteria, for example: name, context, printer\n   capabilities,\
    \ etc.  The more dynamic information, such as state,\n   currently loaded and\
    \ ready media, number of jobs at the Printer,\n   errors, warnings, and so forth,\
    \ is directly associated with the\n   Printer object itself rather than with the\
    \ entry in the directory\n   which only represents the Printer object.\n   IPP\
    \ clients implement the IPP protocol on the client side and give\n   end users\
    \ (or programs running on behalf of end users) the ability to\n   query Printer\
    \ objects and submit and manage print jobs.  An IPP\n   server is just that part\
    \ of the Printer object that implements the\n   server-side protocol.  The rest\
    \ of the Printer object implements (or\n   gateways into) the application semantics\
    \ of the print service itself.\n   The Printer objects may be embedded in an output\
    \ device or may be\n   implemented on a host on the network that communicates\
    \ with an output\n   device.\n   When a job is submitted to the Printer object\
    \ and the Printer object\n   validates the attributes in the submission request,\
    \ the Printer\n   object creates a new Job object.  The end user then interacts\
    \ with\n   this new Job object to query its status and monitor the progress of\n\
    \   the job.  An end user can also cancel their print jobs by using the\n   Job\
    \ object's Cancel-Job operation.  An end-user can also hold,\n   release, and\
    \ restart their print jobs using the Job object's OPTIONAL\n   Hold-Job, Release-Job,\
    \ and Restart-Job operations, if implemented.\n   A privileged operator or administrator\
    \ of a Printer object can\n   cancel, hold, release, and restart any user's job\
    \ using the REQUIRED\n   Cancel-Job and the OPTIONAL Hold-Job, Release-Job, and\
    \ Restart-Job\n   operations.  In additional privileged operator or administrator\
    \ of a\n   Printer object can pause, resume, or purge (jobs from) a Printer\n\
    \   object using the OPTIONAL Pause-Printer, Resume-Printer, and Purge-\n   Jobs\
    \ operations, if implemented.\n   The notification service is out of scope for\
    \ this IPP/1.1 document,\n   but using such a notification service, the end user\
    \ is able to\n   register for and receive Printer specific and Job specific events.\n\
    \   An end user can query the status of Printer objects and can follow\n   the\
    \ progress of Job objects by polling using the Get-Printer-\n   Attributes, Get-Jobs,\
    \ and Get-Job-Attributes operations.\n"
- title: 2. IPP Objects
  contents:
  - "2. IPP Objects\n   The IPP/1.1 model introduces objects of type Printer and Job.\
    \  Each\n   type of object models relevant aspects of a real-world entity such\
    \ as\n   a real printer or real print job.  Each object type is defined as a\n\
    \   set of possible attributes that may be supported by instances of that\n  \
    \ object type.  For each object (instance), the actual set of supported\n   attributes\
    \ and values describe a specific implementation.  The\n   object's attributes\
    \ and values describe its state, capabilities,\n   realizable features, job processing\
    \ functions, and default behaviors\n   and characteristics.  For example, the\
    \ Printer object type is defined\n   as a set of attributes that each Printer\
    \ object potentially supports.\n   In the same manner, the Job object type is\
    \ defined as a set of\n   attributes that are potentially supported by each Job\
    \ object.\n   Each attribute included in the set of attributes defining an object\n\
    \   type is labeled as:\n   - \"REQUIRED\": each object MUST support the attribute.\n\
    \   - \"RECOMMENDED\": each object SHOULD support the attribute.\n   - \"OPTIONAL\"\
    : each object MAY support the attribute.\n   Some definitions of attribute values\
    \ indicate that an object MUST or\n   SHOULD support the value; otherwise, support\
    \ of the value is\n   OPTIONAL.\n   However, if an implementation supports an\
    \ attribute, it MUST support\n   at least one of the possible values for that\
    \ attribute.\n"
- title: 2.1 Printer Object
  contents:
  - "2.1 Printer Object\n   The major component of the IPP/1.1 model is the Printer\
    \ object.  A\n   Printer object implements the server-side of the IPP/1.1 protocol.\n\
    \   Using the protocol, end users may query the attributes of the Printer\n  \
    \ object and submit print jobs to the Printer object.  The actual\n   implementation\
    \ components behind the Printer abstraction may take on\n   different forms and\
    \ different configurations.  However, the model\n   abstraction allows the details\
    \ of the configuration of real\n   components to remain opaque to the end user.\
    \  Section 3 describes\n   each of the Printer operations in detail.\n   The capabilities\
    \ and state of a Printer object are described by its\n   attributes.  Printer\
    \ attributes are divided into two groups:\n   - \"job-template\" attributes: These\
    \ attributes describe supported job\n     processing capabilities and defaults\
    \ for the Printer object. (See\n     section 4.2)\n   - \"printer-description\"\
    \ attributes: These attributes describe the\n     Printer object's identification,\
    \ state, location, references to\n     other sources of information about the\
    \ Printer object, etc. (see\n     section 4.4)\n   Since a Printer object is an\
    \ abstraction of a generic document output\n   device and print service provider,\
    \ a Printer object could be used to\n   represent any real or virtual device with\
    \ semantics consistent with\n   the Printer object, such as a fax device, an imager,\
    \ or even a CD\n   writer.\n   Some examples of configurations supporting a Printer\
    \ object include:\n      1) An output device with no spooling capabilities\n \
    \     2) An output device with a built-in spooler\n      3) A print server supporting\
    \ IPP with one or more associated\n         output devices\n         3a) The associated\
    \ output devices may or may not be capable of\n             spooling jobs\n  \
    \       3b) The associated output devices may or may not support IPP\n   The following\
    \ figures show some examples of how Printer objects can\n   be realized on top\
    \ of various distributed printing configurations.\n   The embedded case below\
    \ represents configurations 1 and 2. The hosted\n   and fan-out figures below\
    \ represent configurations 3a and 3b.\n   In this document the term \"client\"\
    \ refers to a software entity that\n   sends IPP operation requests to an IPP\
    \ Printer object and accepts IPP\n   operation responses.  A client MAY be:\n\
    \      1. contained within software controlled by an end user, e.g.\n        \
    \ activated by the \"Print\" menu item in an application or\n      2. the print\
    \ server component that sends IPP requests to either an\n         output device\
    \ or another \"downstream\" print server.\n   The term \"IPP Printer\" is a network\
    \ entity that accepts IPP operation\n   requests and returns IPP operation responses.\
    \  As such, an IPP object\n   MAY be:\n      1. an (embedded) device component\
    \ that accepts IPP requests and\n         controls the device or\n      2. a component\
    \ of a print server that accepts IPP requests (where\n         the print server\
    \ controls one or more networked devices using\n         IPP or other protocols).\n\
    \   Legend:\n   ##### indicates a Printer object which is\n         either embedded\
    \ in an output device or is\n         hosted in a server.  The Printer object\n\
    \         might or might not be capable of queuing/spooling.\n   any   indicates\
    \ any network protocol or direct\n         connect, including IPP\n   embedded\
    \ printer:\n                                             output device\n     \
    \                                      +---------------+\n    O   +--------+ \
    \                        |  ###########  |\n   /|\\  | client |------------IPP------------>#\
    \ Printer #  |\n   / \\  +--------+                         |  # Object  #  |\n\
    \                                           |  ###########  |\n              \
    \                             +---------------+\n   hosted printer:\n        \
    \                                   +---------------+\n    O   +--------+    \
    \    ###########      |               |\n   /|\\  | client |--IPP--># Printer\
    \ #-any->| output device |\n   / \\  +--------+        # Object  #      |    \
    \           |\n                          ###########      +---------------+\n\
    \                                            +---------------+\n   fan out:  \
    \                               |               |\n                          \
    \              +-->| output device |\n                                    any/\
    \    |               |\n    O   +--------+      ###########   /     +---------------+\n\
    \   /|\\  | client |-IPP-># Printer #--*\n   / \\  +--------+      # Object  #\
    \   \\     +---------------+\n                        ########### any\\    | \
    \              |\n                                        +-->| output device\
    \ |\n                                            |               |\n         \
    \                                   +---------------+\n"
- title: 2.2 Job Object
  contents:
  - "2.2 Job Object\n   A Job object is used to model a print job.  A Job object contains\n\
    \   documents.  The information required to create a Job object is sent\n   in\
    \ a create request from the end user via an IPP Client to the\n   Printer object.\
    \  The Printer object validates the create request, and\n   if the Printer object\
    \ accepts the request, the Printer object creates\n   the new Job object.  Section\
    \ 3 describes each of the Job operations\n   in detail.\n   The characteristics\
    \ and state of a Job object are described by its\n   attributes.  Job attributes\
    \ are grouped into two groups as follows:\n      - \"job-template\" attributes:\
    \ These attributes can be supplied by\n        the client or end user and include\
    \ job processing instructions\n        which are intended to override any Printer\
    \ object defaults\n        and/or instructions embedded within the document data.\
    \ (See\n        section 4.2)\n      - \"job-description\" attributes: These attributes\
    \ describe the Job\n        object's identification, state, size, etc. The client\
    \ supplies\n        some of these attributes, and the Printer object generates\n\
    \        others. (See section 4.3)\n   An implementation MUST support at least\
    \ one document per Job object.\n   An implementation MAY support multiple documents\
    \ per Job object.  A\n   document is either:\n      - a stream of document data\
    \ in a format supported by the Printer\n        object (typically a Page Description\
    \ Language - PDL), or\n      - a reference to such a stream of document data\n\
    \   In IPP/1.1, a document is not modeled as an IPP object, therefore it\n   has\
    \ no object identifier or associated attributes.  All job\n   processing instructions\
    \ are modeled as Job object attributes.  These\n   attributes are called Job Template\
    \ attributes and they apply equally\n   to all documents within a Job object.\n"
- title: 2.3 Object Relationships
  contents:
  - "2.3 Object Relationships\n   IPP objects have relationships that are maintained\
    \ persistently along\n   with the persistent storage of the object attributes.\n\
    \   A Printer object can represent either one or more physical output\n   devices\
    \ or a logical device which \"processes\" jobs but never actually\n   uses a physical\
    \ output device to put marks on paper.  Examples of\n   logical devices include\
    \ a Web page publisher or a gateway into an\n   online document archive or repository.\
    \  A Printer object contains\n   zero or more Job objects.\n   A Job object is\
    \ contained by exactly one Printer object, however the\n   identical document\
    \ data associated with a Job object could be sent to\n   either the same or a\
    \ different Printer object.  In this case, a\n   second Job object would be created\
    \ which would be almost identical to\n   the first Job object, however it would\
    \ have new (different) Job\n   object identifiers (see section 2.4).\n   A Job\
    \ object is either empty (before any documents have been added)\n   or contains\
    \ one or more documents.  If the contained document is a\n   stream of document\
    \ data, that stream can be contained in only one\n   document.  However, there\
    \ can be identical copies of the stream in\n   other documents in the same or\
    \ different Job objects.  If the\n   contained document is just a reference to\
    \ a stream of document data,\n   other documents (in the same or different Job\
    \ object(s)) may contain\n   the same reference.\n"
- title: 2.4 Object Identity
  contents:
  - "2.4 Object Identity\n   All Printer and Job objects are identified by a Uniform\
    \ Resource\n   Identifier (URI) [RFC2396] so that they can be persistently and\n\
    \   unambiguously referenced.  Since every URL is a specialized form of a\n  \
    \ URI, even though the more generic term URI is used throughout the\n   rest of\
    \ this document, its usage is intended to cover the more\n   specific notion of\
    \ URL as well.\n   An administrator configures Printer objects to either support\
    \ or not\n   support authentication and/or message privacy using Transport Layer\n\
    \   Security (TLS) [RFC2246] (the mechanism for security configuration is\n  \
    \ outside the scope of this IPP/1.1 document).  In some situations,\n   both types\
    \ of connections (both authenticated and unauthenticated)\n   can be established\
    \ using a single communication channel that has some\n   sort of negotiation mechanism.\
    \  In other situations, multiple\n   communication channels are used, one for\
    \ each type of security\n   configuration.  Section 8 provides a full description\
    \ of all security\n   considerations and configurations.\n   If a Printer object\
    \ supports more than one communication channel,\n   some or all of those channels\
    \ might support and/or require different\n   security mechanisms.  In such cases,\
    \ an administrator could expose\n   the simultaneous support for these multiple\
    \ communication channels as\n   multiple URIs for a single Printer object where\
    \ each URI represents\n   one of the communication channels to the Printer object.\
    \ To support\n   this flexibility, the IPP Printer object type defines a multi-valued\n\
    \   identification attribute called the \"printer-uri-supported\"\n   attribute.\
    \  It MUST contain at least one URI.  It MAY contain more\n   than one URI.  That\
    \ is, every Printer object will have at least one\n   URI that identifies at least\
    \ one communication channel to the Printer\n   object, but it may have more than\
    \ one URI where each URI identifies a\n   different communication channel to the\
    \ Printer object.  The\n   \"printer-uri-supported\" attribute has two companion\
    \ attributes, the\n   \"uri-security-supported\" attribute and the \"uri-authentication-\n\
    \   supported\". Both have the same cardinality as \"printer-uri-\n   supported\"\
    .  The purpose of the \"uri-security-supported\" attribute is\n   to indicate\
    \ the security mechanisms (if any) used for each URI listed\n   in \"printer-uri-supported\"\
    . The purpose of the \"uri-authentication-\n   supported\" attribute is to indicate\
    \ the authentication mechanisms (if\n   any) used for each URI listed in \"printer-uri-supported\"\
    .  These\n   three attributes are fully described in sections 4.4.1, 4.4.2, and\n\
    \   4.4.3.\n   When a job is submitted to the Printer object via a create request,\n\
    \   the client supplies only a single Printer object URI.  The client\n   supplied\
    \ Printer object URI MUST be one of the values in the\n   \"printer-uri-supported\"\
    \ Printer attribute.\n   IPP/1.1 does not specify how the client obtains the client\
    \ supplied\n   URI, but it is RECOMMENDED that a Printer object be registered\
    \ as an\n   entry in a directory service.  End-users and programs can then\n \
    \  interrogate the directory searching for Printers. Section 16 defines\n   a\
    \ generic schema for Printer object entries in the directory service\n   and describes\
    \ how the entry acts as a bridge to the actual IPP\n   Printer object.  The entry\
    \ in the directory that represents the IPP\n   Printer object includes the possibly\
    \ many URIs for that Printer\n   object as values in one its attributes.\n   When\
    \ a client submits a create request to the Printer object, the\n   Printer object\
    \ validates the request and creates a new Job object.\n   The Printer object assigns\
    \ the new Job object a URI which is stored\n   in the \"job-uri\" Job attribute.\
    \  This URI is then used by clients as\n   the target for subsequent Job operations.\
    \  The Printer object\n   generates a Job URI based on its configured security\
    \ policy and the\n   URI used by the client in the create request.\n   For example,\
    \ consider a Printer object that supports both a\n   communication channel secured\
    \ by the use of SSL3 (using HTTP over\n   SSL3 with an \"https\" schemed URI)\
    \ and another open communication\n   channel that is not secured with SSL3 (using\
    \ a simple \"http\" schemed\n   URI).  If a client were to submit a job using\
    \ the secure URI, the\n   Printer object would assign the new Job object a secure\
    \ URI as well.\n   If a client were to submit a job using the open-channel URI,\
    \ the\n   Printer would assign the new Job object an open-channel URI.\n   In\
    \ addition, the Printer object also populates the Job object's\n   \"job-printer-uri\"\
    \ attribute.  This is a reference back to the Printer\n   object that created\
    \ the Job object.  If a client only has access to a\n   Job object's \"job-uri\"\
    \ identifier, the client can query the Job's\n   \"job-printer-uri\" attribute\
    \ in order to determine which Printer\n   object created the Job object.  If the\
    \ Printer object supports more\n   than one URI, the Printer object picks the\
    \ one URI supplied by the\n   client when creating the job to build the value\
    \ for and to populate\n   the Job's \"job-printer-uri\" attribute.\n   Allowing\
    \ Job objects to have URIs allows for flexibility and\n   scalability.  For example,\
    \ in some implementations, the Printer\n   object might create Jobs that are processed\
    \ in the same local\n   environment as the Printer object itself.  In this case,\
    \ the Job URI\n   might just be a composition of the Printer's URI and some unique\n\
    \   component for the Job object, such as the unique 32-bit positive\n   integer\
    \ mentioned later in this paragraph.  In other implementations,\n   the Printer\
    \ object might be a central clearing-house for validating\n   all Job object creation\
    \ requests, but the Job object itself might be\n   created in some environment\
    \ that is remote from the Printer object.\n   In this case, the Job object's URI\
    \ may have no physical-location\n   relationship at all to the Printer object's\
    \ URI.  Again, the fact\n   that Job objects have URIs allows for flexibility\
    \ and scalability,\n   however, many existing printing systems have local models\
    \ or\n   interface constraints that force print jobs to be identified using\n\
    \   only a 32-bit positive integer rather than an independent URI.  This\n   numeric\
    \ Job ID is only unique within the context of the Printer\n   object to which\
    \ the create request was originally submitted.\n   Therefore, in order to allow\
    \ both types of client access to IPP Job\n   objects (either by Job URI or by\
    \ numeric Job ID), when the Printer\n   object successfully processes a create\
    \ request and creates a new Job\n   object, the Printer object MUST generate both\
    \ a Job URI and a Job ID.\n   The Job ID (stored in the \"job-id\" attribute)\
    \ only has meaning in the\n   context of the Printer object to which the create\
    \ request was\n   originally submitted. This requirement to support both Job URIs\
    \ and\n   Job IDs allows all types of clients to access Printer objects and Job\n\
    \   objects no matter the local constraints imposed on the client\n   implementation.\n\
    \   In addition to identifiers, Printer objects and Job objects have\n   names\
    \ (\"printer-name\" and \"job-name\").  An object name NEED NOT be\n   unique\
    \ across all instances of all objects. A Printer object's name\n   is chosen and\
    \ set by an administrator through some mechanism outside\n   the scope of this\
    \ IPP/1.1 document.  A Job object's name is\n   optionally chosen and supplied\
    \ by the IPP client submitting the job.\n   If the client does not supply a Job\
    \ object name, the Printer object\n   generates a name for the new Job object.\
    \  In all cases, the name only\n   has local meaning.\n   To summarize:\n    \
    \  - Each Printer object is identified with one or more URIs.  The\n        Printer's\
    \ \"printer-uri-supported\" attribute contains the URI(s).\n      - The Printer\
    \ object's \"uri-security-supported\" attribute\n        identifies the communication\
    \ channel security protocols that may\n        or may not have been configured\
    \ for the various Printer object\n        URIs (e.g., 'tls' or 'none').\n    \
    \  - The Printer object's \"uri-authentication-supported\" attribute\n       \
    \ identifies the authentication mechanisms that may or may not\n        have been\
    \ configured for the various Printer object URIs (e.g.,\n        'digest' or 'none').\n\
    \      - Each Job object is identified with a Job URI.  The Job's \"job-\n   \
    \     uri\" attribute contains the URI.\n      - Each Job object is also identified\
    \ with Job ID which is a 32-\n        bit, positive integer.  The Job's \"job-id\"\
    \ attribute contains\n        the Job ID.  The Job ID is only unique within the\
    \ context of the\n        Printer object  which created the Job object.\n    \
    \  - Each Job object has a \"job-printer-uri\" attribute which contains\n    \
    \    the URI of the Printer object that was used to create the Job\n        object.\
    \  This attribute is used to determine the Printer object\n        that created\
    \ a Job object when given only the URI for the Job\n        object.  This linkage\
    \ is necessary to determine the languages,\n        charsets, and operations which\
    \ are supported on that Job (the\n        basis for such support comes from the\
    \ creating Printer object).\n      - Each Printer object has a name (which is\
    \ not necessarily\n        unique).  The administrator chooses and sets this name\
    \ through\n        some mechanism outside the scope of this IPP/1.1 document.\
    \  The\n        Printer object's \"printer-name\" attribute contains the name.\n\
    \      - Each Job object has a name (which is not necessarily unique).\n     \
    \   The client optionally supplies this name in the create request.\n        If\
    \ the client does not supply this name, the Printer object\n        generates\
    \ a name for the Job object. The Job object's \"job-name\"\n        attribute\
    \ contains the name.\n"
- title: 3. IPP Operations
  contents:
  - "3. IPP Operations\n   IPP objects support operations.  An operation consists\
    \ of a request\n   and a response.  When a client communicates with an IPP object,\
    \ the\n   client issues an operation request to the URI for that object.\n   Operation\
    \ requests and responses have parameters that identify the\n   operation.  Operations\
    \ also have attributes that affect the run-time\n   characteristics of the operation\
    \ (the intended target, localization\n   information, etc.).  These operation-specific\
    \ attributes are called\n   operation attributes (as compared to object attributes\
    \ such as\n   Printer object attributes or Job object attributes).  Each request\n\
    \   carries along with it any operation attributes, object attributes,\n   and/or\
    \ document data required to perform the operation.  Each request\n   requires\
    \ a response from the object.  Each response indicates success\n   or failure\
    \ of the operation with a status code as a response\n   parameter.  The response\
    \ contains any operation attributes, object\n   attributes, and/or status messages\
    \ generated during the execution of\n   the operation request.\n   This section\
    \ describes the semantics of the IPP operations, both\n   requests and responses,\
    \ in terms of the parameters, attributes, and\n   other data associated with each\
    \ operation.\n   The IPP/1.1 Printer operations are:\n     Print-Job (section\
    \ 3.2.1)\n     Print-URI (section 3.2.2)\n     Validate-Job (section 3.2.3)\n\
    \     Create-Job (section 3.2.4)\n     Get-Printer-Attributes (section 3.2.5)\n\
    \     Get-Jobs (section 3.2.6)\n     Pause-Printer (section 3.3.5)\n     Resume-Printer\
    \ (section 3.3.6)\n     Purge-Jobs (section 3.3.7)\n   The Job operations are:\n\
    \     Send-Document (section 3.3.1)\n     Send-URI (section 3.3.2)\n     Cancel-Job\
    \ (section 3.3.3)\n     Get-Job-Attributes (section 3.3.4)\n     Hold-Job (section\
    \ 3.3.5)\n     Release-Job (section 3.3.6)\n     Restart-Job (section 3.3.7)\n\
    \   The Send-Document and Send-URI Job operations are used to add a new\n   document\
    \ to an existing multi-document Job object created using the\n   Create-Job operation.\n"
- title: 3.1 Common Semantics
  contents:
  - "3.1 Common Semantics\n   All IPP operations require some common parameters and\
    \ operation\n   attributes.  These common elements and their semantic characteristics\n\
    \   are defined and described in more detail in the following sections.\n"
- title: 3.1.1 Required Parameters
  contents:
  - "3.1.1 Required Parameters\n   Every operation request contains the following\
    \ REQUIRED parameters:\n      - a \"version-number\",\n      - an \"operation-id\"\
    ,\n      - a \"request-id\", and\n      - the attributes that are REQUIRED for\
    \ that type of request.\n   Every operation response contains the following REQUIRED\
    \ parameters:\n      - a \"version-number\",\n      - a \"status-code\",\n   \
    \   - the \"request-id\" that was supplied in the corresponding request,\n   \
    \     and\n      - the attributes that are REQUIRED for that type of response.\n\
    \   The \"Encoding and Transport\" document [RFC2910] defines special rules\n\
    \   for the encoding of these parameters.  All other operation elements\n   are\
    \ represented using the more generic encoding rules for attributes\n   and groups\
    \ of attributes.\n"
- title: 3.1.2 Operation IDs and Request IDs
  contents:
  - "3.1.2 Operation IDs and Request IDs\n   Each IPP operation request includes an\
    \ identifying \"operation-id\"\n   value.  Valid values are defined in the \"\
    operations-supported\"\n   Printer attribute section (see section 4.4.15).  The\
    \ client specifies\n   which operation is being requested by supplying the correct\n\
    \   \"operation-id\" value.\n   In addition, every invocation of an operation\
    \ is identified by a\n   \"request-id\" value. For each request, the client chooses\
    \ the\n   \"request-id\" which MUST be an integer (possibly unique depending on\n\
    \   client requirements) in the range from 1 to 2**31 - 1 (inclusive).\n   This\
    \ \"request-id\" allows clients to manage multiple outstanding\n   requests. The\
    \ receiving IPP object copies all 32-bits of the client-\n   supplied \"request-id\"\
    \ attribute into the response so that the client\n   can match the response with\
    \ the correct outstanding request, even if\n   the \"request-id\" is out of range.\
    \  If the request is terminated\n   before the complete \"request-id\" is received,\
    \ the IPP object rejects\n   the request and returns a response with a \"request-id\"\
    \ of 0.\n   Note: In some cases, the transport protocol underneath IPP might be\
    \ a\n   connection oriented protocol that would make it impossible for a\n   client\
    \ to receive responses in any order other than the order in\n   which the corresponding\
    \ requests were sent.  In such cases, the\n   \"request-id\" attribute would not\
    \ be essential for correct protocol\n   operation.  However, in other mappings,\
    \ the operation responses can\n   come back in any order.  In these cases, the\
    \ \"request-id\" would be\n   essential.\n"
- title: 3.1.3 Attributes
  contents:
  - "3.1.3 Attributes\n   Operation requests and responses are both composed of groups\
    \ of\n   attributes and/or document data.  The attributes groups are:\n      -\
    \ Operation Attributes: These attributes are passed in the\n        operation\
    \ and affect the IPP object's behavior while processing\n        the operation\
    \ request and may affect other attributes or groups\n        of attributes.  Some\
    \ operation attributes describe the document\n        data associated with the\
    \ print job and are associated with new\n        Job objects, however most operation\
    \ attributes do not persist\n        beyond the life of the operation.  The description\
    \ of each\n        operation attribute includes conformance statements indicating\n\
    \        which operation attributes are REQUIRED and which are OPTIONAL\n    \
    \    for an IPP object to support and which attributes a client MUST\n       \
    \ supply in a request and an IPP object MUST supply in a response.\n      - Job\
    \ Template Attributes: These attributes affect the processing\n        of a job.\
    \  A client OPTIONALLY supplies Job Template Attributes\n        in a create request,\
    \ and the receiving object MUST be prepared\n        to receive all supported\
    \ attributes.  The Job object can later\n        be queried to find out what Job\
    \ Template attributes were\n        originally requested in the create request,\
    \ and such attributes\n        are returned in the response as Job Object Attributes.\
    \  The\n        Printer object can be queried about its Job Template attributes\n\
    \        to find out what type of job processing capabilities are\n        supported\
    \ and/or what the default job processing behaviors are,\n        though such attributes\
    \ are returned in the response as Printer\n        Object Attributes.  The \"\
    ipp-attribute-fidelity\" operation\n        attribute affects processing of all\
    \ client-supplied Job Template\n        attributes (see sections 3.2.1.2 and 15\
    \ for a full description\n        of \"ipp-attribute-fidelity\" and its relationship\
    \ to other\n        attributes).\n      - Job Object Attributes: These attributes\
    \ are returned in response\n        to a query operation directed at a Job object.\n\
    \      - Printer Object Attributes: These attributes are returned in\n       \
    \ response to a query operation directed at a Printer object.\n      - Unsupported\
    \ Attributes: In a create request, the client supplies\n        a set of Operation\
    \ and Job Template attributes.  If any of these\n        attributes or their values\
    \ is unsupported by the Printer object,\n        the Printer object returns the\
    \ set of unsupported attributes in\n        the response.  Sections 3.1.7, 3.2.1.2,\
    \ and  15 give a full\n        description of how Job Template attributes supplied\
    \ by the\n        client in a create request are processed by the Printer object\n\
    \        and how unsupported attributes are returned to the client.\n        Because\
    \ of extensibility, any IPP object might receive a request\n        that contains\
    \ new or unknown attributes or values for which it\n        has no support. In\
    \ such cases, the IPP object processes what it\n        can and returns the unsupported\
    \ attributes in the response. The\n        Unsupported Attribute group is defined\
    \ for all operation\n        responses for returning unsupported attributes that\
    \ the client\n        supplied in the request.\n   Later in this section, each\
    \ operation is formally defined by\n   identifying the allowed and expected groups\
    \ of attributes for each\n   request and response.  The model identifies a specific\
    \ order for each\n   group in each request or response, but the attributes within\
    \ each\n   group may be in any order, unless specified otherwise.\n   The attributes\
    \ within a group MUST be unique; if an attribute with\n   the same name occurs\
    \ more than once, the group is mal-formed.\n   Clients MUST NOT submit such malformed\
    \ requests and Printers MUST NOT\n   return such malformed responses.  If such\
    \ a malformed request is\n   submitted to a Printer, the Printer MUST either (1)\
    \ reject the\n   request with the 'client-error-bad-request' status code (see\
    \ section\n   13.1.4.1) or (2) process the request normally after selecting only\n\
    \   one of the attribute instances, depending on implementation.  Which\n   attribute\
    \ is selected when there are duplicate attributes depends on\n   implementation.\
    \  The IPP Printer MUST NOT use the values from more\n   than one such duplicate\
    \ attribute instance.\n   Each attribute definition includes the attribute's name\
    \ followed by\n   the name of its attribute syntax(es) in parenthesizes.  In addition,\n\
    \   each 'integer' attribute is followed by the allowed range in\n   parentheses,\
    \ (m:n), for values of that attribute.  Each 'text' or\n   'name' attribute is\
    \ followed by the maximum size in octets in\n   parentheses, (size), for values\
    \ of that attribute. For more details\n   on attribute syntax notation, see the\
    \ descriptions of these\n   attributes syntaxes in section 4.1.\n   Note: Document\
    \ data included in the operation is not strictly an\n   attribute, but it is treated\
    \ as a special attribute group for\n   ordering purposes.  The only operations\
    \ that support supplying the\n   document data within an operation request are\
    \ Print-Job and Send-\n   Document.  There are no operation responses that include\
    \ document\n   data.\n   Some operations are REQUIRED for IPP objects to support;\
    \ the others\n   are OPTIONAL (see section 5.2.2).  Therefore, before using an\n\
    \   OPTIONAL operation, a client SHOULD first use the REQUIRED Get-\n   Printer-Attributes\
    \ operation to query the Printer's \"operations-\n   supported\" attribute in\
    \ order to determine which OPTIONAL Printer and\n   Job operations are actually\
    \ supported.  The client SHOULD NOT use an\n   OPTIONAL operation that is not\
    \ supported.  When an IPP object\n   receives a request to perform an operation\
    \ it does not support, it\n   returns the 'server-error-operation-not-supported'\
    \ status code (see\n   section 13.1.5.2).  An IPP object is non-conformant if\
    \ it does not\n   support a REQUIRED operation.\n"
- title: 3.1.4 Character Set and Natural Language Operation Attributes
  contents:
  - "3.1.4 Character Set and Natural Language Operation Attributes\n   Some Job and\
    \ Printer attributes have values that are text strings and\n   names intended\
    \ for human understanding rather than machine\n   understanding (see the 'text'\
    \ and 'name' attribute syntax\n   descriptions in section 4.1).  The following\
    \ sections describe two\n   special Operation Attributes called \"attributes-charset\"\
    \ and\n   \"attributes-natural-language\".  These attributes are always part of\n\
    \   the Operation Attributes group.  For most attribute groups, the order\n  \
    \ of the attributes within the group is not important.  However, for\n   these\
    \ two attributes within the Operation Attributes group, the order\n   is critical.\
    \  The \"attributes-charset\" attribute MUST be the first\n   attribute in the\
    \ group and the \"attributes-natural-language\"\n   attribute MUST be the second\
    \ attribute in the group.  In other words,\n   these attributes MUST be supplied\
    \ in every IPP request and response,\n   they MUST come first in the group, and\
    \ MUST come in the specified\n   order.  For job creation operations, the IPP\
    \ Printer implementation\n   saves these two attributes with the new Job object\
    \ as Job Description\n   attributes.  For the sake of brevity in this document,\
    \ these\n   operation attribute descriptions are not repeated with every\n   operation\
    \ request and response, but have a reference back to this\n   section instead.\n"
- title: 3.1.4.1 Request Operation Attributes
  contents:
  - "3.1.4.1 Request Operation Attributes\n   The client MUST supply and the Printer\
    \ object MUST support the\n   following REQUIRED operation attributes in every\
    \ IPP/1.1 operation\n   request:\n      \"attributes-charset\" (charset):\n  \
    \       This operation attribute identifies the charset (coded\n         character\
    \ set and encoding method) used by any 'text' and\n         'name' attributes\
    \ that the client is supplying in this request.\n         It also identifies the\
    \ charset that the Printer object MUST use\n         (if supported) for all 'text'\
    \ and 'name' attributes and status\n         messages that the Printer object\
    \ returns in the response to\n         this request. See Sections 4.1.1 and 4.1.2\
    \ for the definition\n         of the 'text' and 'name' attribute syntaxes.\n\
    \         All clients and IPP objects MUST support the 'utf-8' charset\n     \
    \    [RFC2279] and MAY support additional charsets provided that\n         they\
    \ are registered with IANA [IANA-CS].  If the Printer object\n         does not\
    \ support the client supplied charset value, the Printer\n         object MUST\
    \ reject the request, set the \"attributes-charset\" to\n         'utf-8' in the\
    \ response, and return the 'client-error-charset-\n         not-supported' status\
    \ code and any 'text' or 'name' attributes\n         using the 'utf-8' charset.\
    \ The Printer NEED NOT return any\n         attributes in the Unsupported Attributes\
    \ Group (See sections\n         3.1.7 and 3.2.1.2).  The Printer object MUST indicate\
    \ the\n         charset(s) supported as the values of the \"charset-supported\"\
    \n         Printer attribute (see Section 4.4.18), so that the client can\n  \
    \       query to determine which charset(s) are supported.\n         Note to client\
    \ implementers: Since IPP objects are only\n         required to support the 'utf-8'\
    \ charset, in order to maximize\n         interoperability with multiple IPP object\
    \ implementations, a\n         client may want to supply 'utf-8' in the \"attributes-charset\"\
    \n         operation attribute, even though the client is only passing and\n \
    \        able to present a simpler charset, such as US-ASCII [ASCII] or\n    \
    \     ISO-8859-1 [ISO8859-1].  Then the client will have to filter\n         out\
    \ (or charset convert) those characters that are returned in\n         the response\
    \ that it cannot present to its user.  On the other\n         hand, if both the\
    \ client and the IPP objects also support a\n         charset in common besides\
    \ utf-8, the client may want to use\n         that charset in order to avoid charset\
    \ conversion or data loss.\n         See the 'charset' attribute syntax description\
    \ in Section 4.1.7\n         for the syntax and semantic interpretation of the\
    \ values of\n         this attribute and for example values.\n      \"attributes-natural-language\"\
    \ (naturalLanguage):\n         This operation attribute identifies the natural\
    \ language used\n         by any 'text' and 'name' attributes that the client\
    \ is\n         supplying in this request.  This attribute also identifies the\n\
    \         natural language that the Printer object SHOULD use for all\n      \
    \   'text' and 'name' attributes and status messages that the\n         Printer\
    \ object returns in the response to this request.  See\n         the 'naturalLanguage'\
    \ attribute syntax description in section\n         4.1.8 for the syntax and semantic\
    \ interpretation of the values\n         of this attribute and for example values.\n\
    \         There are no REQUIRED natural languages required for the\n         Printer\
    \ object to support.  However, the Printer object's\n         \"generated-natural-language-supported\"\
    \ attribute identifies the\n         natural languages supported by the Printer\
    \ object and any\n         contained Job objects for all text strings generated\
    \ by the IPP\n         object.  A client MAY query this attribute to determine\
    \ which\n         natural language(s) are supported for generated messages.\n\
    \         For any of the attributes for which the Printer object\n         generates\
    \ text, i.e., for the \"job-state-message\", \"printer-\n         state-message\"\
    , and status messages (see Section 3.1.6), the\n         Printer object MUST be\
    \ able to generate these text strings in\n         any of its supported natural\
    \ languages.  If the client requests\n         a natural language that is not\
    \ supported, the Printer object\n         MUST return these generated messages\
    \ in the Printer's\n         configured natural language as specified by the Printer's\n\
    \         \"natural-language-configured\" attribute\" (see Section 4.4.19).\n\
    \         For other 'text' and 'name' attributes supplied by the client,\n   \
    \      authentication system, operator, system administrator, or\n         manufacturer\
    \ (i.e., for \"job-originating-user-name\", \"printer-\n         name\" (name),\
    \ \"printer-location\" (text), \"printer-info\" (text),\n         and \"printer-make-and-model\"\
    \ (text)), the Printer object is\n         only required to support the configured\
    \ natural language of the\n         Printer identified by the Printer object's\
    \ \"natural-language-\n         configured\" attribute, though support of additional\
    \ natural\n         languages for these attributes is permitted.\n         For\
    \ any 'text' or 'name' attribute in the request that is in a\n         different\
    \ natural language than the value supplied in the\n         \"attributes-natural-language\"\
    \ operation attribute, the client\n         MUST use the Natural Language Override\
    \ mechanism (see sections\n         4.1.1.2 and 4.1.2.2) for each such attribute\
    \ value supplied.\n         The client MAY use the Natural Language Override mechanism\n\
    \         redundantly, i.e., use it even when the value is in the same\n     \
    \    natural language as the value supplied in the \"attributes-\n         natural-language\"\
    \ operation attribute of the request.\n         The IPP object MUST accept any\
    \ natural language and any Natural\n         Language Override, whether the IPP\
    \ object supports that natural\n         language or not (and independent of the\
    \ value of the \"ipp-\n         attribute-fidelity\" Operation attribute).  That\
    \ is the IPP\n         object accepts all client supplied values no matter what\
    \ the\n         values are in the Printer object's \"generated-natural-\n    \
    \     language-supported\" attribute.  That attribute, \"generated-\n        \
    \ natural-language-supported\", only applies to generated\n         messages,\
    \ not client supplied messages.  The IPP object MUST\n         remember that natural\
    \ language for all client-supplied\n         attributes, and when returning those\
    \ attributes in response to\n         a query, the IPP object MUST indicate that\
    \ natural language.\n         Each value whose attribute syntax type is 'text'\
    \ or 'name' (see\n         sections 4.1.1 and 4.1.2) has an Associated Natural-Language.\n\
    \         This document does not specify how this association is stored\n    \
    \     in a Printer or Job object.  When such a value is encoded in a\n       \
    \  request or response, the natural language is either implicit or\n         explicit:\n\
    \         - In the implicit case, the value contains only the text/name\n    \
    \       value, and the language is specified by the \"attributes-\n          \
    \ natural-language\" operation attribute in the request or\n           response\
    \ (see sections 4.1.1.1 textWithoutLanguage and\n           4.1.2.1 nameWithoutLanguage).\n\
    \         - In the explicit case (also known as the Natural-Language\n       \
    \    Override case), the value contains both the language and the\n          \
    \ text/name value (see sections 4.1.1.2 textWithLanguage and\n           4.1.2.2\
    \ nameWithLanguage).\n         For example, the \"job-name\" attribute MAY be\
    \ supplied by the\n         client in a create request.  The text value for this\
    \ attribute\n         will be in the natural language identified by the \"attribute-\n\
    \         natural-language\" attribute, or if different, as identified by\n  \
    \       the Natural Language Override mechanism.  If supplied, the IPP\n     \
    \    object will use the value of the \"job-name\" attribute to\n         populate\
    \ the Job object's \"job-name\" attribute.  Whenever any\n         client queries\
    \ the Job object's \"job-name\" attribute, the IPP\n         object returns the\
    \ attribute as stored and uses the Natural\n         Language Override mechanism\
    \ to specify the natural language, if\n         it is different from that reported\
    \ in the \"attributes-natural-\n         language\" operation attribute of the\
    \ response.  The IPP object\n         MAY use the Natural Language Override mechanism\
    \ redundantly,\n         i.e., use it even when the value is in the same natural\n\
    \         language as the value supplied in the \"attributes-natural-\n      \
    \   language\" operation attribute of the response.\n         An IPP object MUST\
    \ NOT reject a request based on a supplied\n         natural language in an \"\
    attributes-natural-language\" Operation\n         attribute or in any attribute\
    \ that uses the Natural Language\n         Override.\n   Clients SHOULD NOT supply\
    \ 'text' or 'name' attributes that use an\n   illegal combination of natural language\
    \ and charset.  For example,\n   suppose a Printer object supports charsets 'utf-8',\
    \ 'iso-8859-1', and\n   'iso-8859-7'.  Suppose also, that it supports natural\
    \ languages 'en'\n   (English), 'fr' (French), and 'el' (Greek).  Although the\
    \ Printer\n   object supports the charset 'iso-8859-1' and natural language 'el',\n\
    \   it probably does not support the combination of Greek text strings\n   using\
    \ the 'iso-8859-1' charset.  The Printer object handles this\n   apparent incompatibility\
    \ differently depending on the context in\n   which it occurs:\n      - In a create\
    \ request: If the client supplies a text or name\n        attribute (for example,\
    \ the \"job-name\" operation attribute) that\n        uses an apparently incompatible\
    \ combination, it is a client\n        choice that does not affect the Printer\
    \ object or its correct\n        operation.  Therefore, the Printer object simply\
    \ accepts the\n        client supplied value, stores it with the Job object, and\n\
    \        responds back with the same combination whenever the client (or\n   \
    \     any client) queries for that attribute.\n      - In a query-type operation,\
    \ like Get-Printer-Attributes: If the\n        client requests an apparently incompatible\
    \ combination, the\n        Printer object responds (as described in section 3.1.4.2)\
    \ using\n        the Printer's configured natural language rather than the\n \
    \       natural language requested by the client.\n   In either case, the Printer\
    \ object does not reject the request\n   because of the apparent incompatibility.\
    \  The potential incompatible\n   combination of charset and natural language\
    \ can occur either at the\n   global operation level or at the Natural Language\
    \ Override\n   attribute-by-attribute level.  In addition, since the response\
    \ always\n   includes explicit charset and natural language information, there\
    \ is\n   never any question or ambiguity in how the client interprets the\n  \
    \ response.\n"
- title: 3.1.4.2 Response Operation Attributes
  contents:
  - "3.1.4.2 Response Operation Attributes\n   The Printer object MUST supply and\
    \ the client MUST support the\n   following REQUIRED operation attributes in every\
    \ IPP/1.1 operation\n   response:\n      \"attributes-charset\" (charset):\n \
    \        This operation attribute identifies the charset used by any\n       \
    \  'text' and 'name' attributes that the Printer object is\n         returning\
    \ in this response.  The value in this response MUST be\n         the same value\
    \ as the \"attributes-charset\" operation attribute\n         supplied by the\
    \ client in the request.  If this is not possible\n         (i.e., the charset\
    \ requested is not supported), the request\n         would have been rejected.\
    \  See \"attributes-charset\" described\n         in Section 3.1.4.1 above.\n\
    \         If the Printer object supports more than just the 'utf-8'\n        \
    \ charset, the Printer object MUST be able to code convert\n         between each\
    \ of the charsets supported on a highest fidelity\n         possible basis in\
    \ order to return the 'text' and 'name'\n         attributes in the charset requested\
    \ by the client.  However,\n         some information loss MAY occur during the\
    \ charset conversion\n         depending on the charsets involved.  For example,\
    \ the Printer\n         object may convert from a UTF-8 'a' to a US-ASCII 'a'\
    \ (with no\n         loss of information), from an ISO Latin 1 CAPITAL LETTER\
    \ A WITH\n         ACUTE ACCENT to US-ASCII 'A' (losing the accent), or from a\n\
    \         UTF-8 Japanese Kanji character to some ISO Latin 1 error\n         character\
    \ indication such as '?', decimal code equivalent, or\n         to the absence\
    \ of a character, depending on implementation.\n         Whether an implementation\
    \ that supports more than one charset\n         stores the data in the charset\
    \ supplied by the client or code\n         converts to one of the other supported\
    \ charsets, depends on\n         implementation.  The strategy should try to minimize\
    \ loss of\n         information during code conversion.  On each response, such\
    \ an\n         implementation converts from its internal charset to that\n   \
    \      requested.\n      \"attributes-natural-language\" (naturalLanguage):\n\
    \         This operation attribute identifies the natural language used\n    \
    \     by any 'text' and 'name' attributes that the IPP object is\n         returning\
    \ in this response.  Unlike the \"attributes-charset\"\n         operation attribute,\
    \ the IPP object NEED NOT return the same\n         value as that supplied by\
    \ the client in the request.  The IPP\n         object MAY return the natural\
    \ language of the Job object or the\n         Printer's configured natural language\
    \ as identified by the\n         Printer object's \"natural-language-configured\"\
    \ attribute,\n         rather than the natural language supplied by the client.\
    \  For\n         any 'text' or 'name' attribute or status message in the\n   \
    \      response that is in a different natural language than the value\n     \
    \    returned in the \"attributes-natural-language\" operation\n         attribute,\
    \ the IPP object MUST use the Natural Language\n         Override mechanism (see\
    \ sections 4.1.1.2 and 4.1.2.2) on each\n         attribute value returned.  The\
    \ IPP object MAY use the Natural\n         Language Override mechanism redundantly,\
    \ i.e., use it even when\n         the value is in the same natural language as\
    \ the value supplied\n         in the \"attributes-natural-language\" operation\
    \ attribute of the\n         response.\n"
- title: 3.1.5 Operation Targets
  contents:
  - "3.1.5 Operation Targets\n   All IPP operations are directed at IPP objects. \
    \ For Printer\n   operations, the operation is always directed at a Printer object\n\
    \   using one of its URIs (i.e., one of the values in the Printer\n   object's\
    \ \"printer-uri-supported\" attribute).  Even if the Printer\n   object supports\
    \ more than one URI, the client supplies only one URI\n   as the target of the\
    \ operation.  The client identifies the target\n   object by supplying the correct\
    \ URI in the \"printer-uri (uri)\"\n   operation attribute.\n   For Job operations,\
    \ the operation is directed at either:\n      - The Job object itself using the\
    \ Job object's URI.  In this case,\n        the client identifies the target object\
    \ by supplying the correct\n        URI in the \"job-uri (uri)\" operation attribute.\n\
    \      - The Printer object that created the Job object using both the\n     \
    \   Printer objects URI and the Job object's Job ID.  Since the\n        Printer\
    \ object that created the Job object generated the Job ID,\n        it MUST be\
    \ able to correctly associate the client supplied Job\n        ID with the correct\
    \ Job object.  The client supplies the Printer\n        object's URI in the \"\
    printer-uri (uri)\" operation attribute and\n        the Job object's Job ID in\
    \ the \"job-id (integer(1:MAX))\"\n        operation attribute.\n   If the operation\
    \ is directed at the Job object directly using the Job\n   object's URI, the client\
    \ MUST NOT include the redundant \"job-id\"\n   operation attribute.\n   The operation\
    \ target attributes are REQUIRED operation attributes\n   that MUST be included\
    \ in every operation request.  Like the charset\n   and natural language attributes\
    \ (see section 3.1.4), the operation\n   target attributes are specially ordered\
    \ operation attributes.  In all\n   cases, the operation target attributes immediately\
    \ follow the\n   \"attributes-charset\" and \"attributes-natural-language\" attributes\n\
    \   within the operation attribute group, however the specific ordering\n   rules\
    \ are:\n      - In the case where there is only one operation target attribute\n\
    \        (i.e., either only the \"printer-uri\" attribute or only the\n      \
    \  \"job-uri\" attribute), that attribute MUST be the third attribute\n      \
    \  in the operation attributes group.\n      - In the case where Job operations\
    \ use two operation target\n        attributes (i.e., the \"printer-uri\" and\
    \ \"job-id\" attributes),\n        the \"printer-uri\" attribute MUST be the third\
    \ attribute and the\n        \"job-id\" attribute MUST be the fourth attribute.\n\
    \   In all cases, the target URIs contained within the body of IPP\n   operation\
    \ requests and responses must be in absolute format rather\n   than relative format\
    \ (a relative URL identifies a resource with the\n   scope of the HTTP server,\
    \ but does not include scheme, host or port).\n   The following rules apply to\
    \ the use of port numbers in URIs that\n   identify IPP objects:\n      1. If\
    \ the URI scheme allows the port number to be explicitly\n         included in\
    \ the URI string, and a port number is specified\n         within the URI, then\
    \ that port number MUST be used by the\n         client to contact the IPP object.\n\
    \      2. If the URI scheme allows the port number to be explicitly\n        \
    \ included in the URI string, and a port number is not specified\n         within\
    \ the URI, then default port number implied by that URI\n         scheme MUST\
    \ be used by the client to contact the IPP object.\n      3. If the URI scheme\
    \ does not allow an explicit port number to be\n         specified within the\
    \ URI, then the default port number implied\n         by that URI MUST be used\
    \ by the client to contact the IPP\n         object.\n   Note: The IPP \"Encoding\
    \ and Transport document [RFC2910] shows a\n   mapping of IPP onto HTTP/1.1 [RFC2616]\
    \ and defines a new default port\n   number for using IPP over HTTP/1.1.\n"
- title: 3.1.6 Operation Response Status Codes and Status Messages
  contents:
  - "3.1.6 Operation Response Status Codes and Status Messages\n   Every operation\
    \ response includes a REQUIRED \"status-code\" parameter\n   and an OPTIONAL \"\
    status-message\" operation attribute, and an OPTIONAL\n   \"detailed-status-message\"\
    \ operation attribute.  The Print-URI and\n   Send-URI response MAY include an\
    \ OPTIONAL \"document-access-error\"\n   operation attribute.\n"
- title: 3.1.6.1 "status-code" (type2 enum)
  contents:
  - "3.1.6.1 \"status-code\" (type2 enum)\n   The REQUIRED \"status-code\" parameter\
    \ provides information on the\n   processing of a request.\n   The status code\
    \ is intended for use by automata.  A client\n   implementation of IPP SHOULD\
    \ convert status code values into any\n   localized message that has semantic\
    \ meaning to the end user.\n   The \"status-code\" value is a numeric value that\
    \ has semantic meaning.\n   The \"status-code\" syntax is similar to a \"type2\
    \ enum\" (see section\n   4.1 on \"Attribute Syntaxes\") except that values can\
    \ range only from\n   0x0000 to 0x7FFF.  Section 13 describes the status codes,\
    \ assigns the\n   numeric values, and suggests a corresponding status message\
    \ for each\n   status code for use by the client when the user's natural language\
    \ is\n   English.\n   If the Printer performs an operation with no errors and\
    \ it encounters\n   no problems, it MUST return the status code 'successful-ok'\
    \ in the\n   response.  See section 13.\n   If the client supplies unsupported\
    \ values for the following\n   parameters or Operation attributes, the Printer\
    \ object MUST reject\n   the operation, NEED NOT return the unsupported attribute\
    \ value in the\n   Unsupported Attributes group, and MUST return the indicated\
    \ status\n   code:\n        Parameter/Attribute                 Status code\n\
    \        version-number      server-error-version-not-supported\n        operation-id\
    \        server-error-operation-not-supported\n        attributes-charset  client-error-charset-not-supported\n\
    \        compression         client-error-compression-not-supported\n        document-format\
    \     client-error-document-format-not-supported\n        document-uri       \
    \ client-error-uri-scheme-not-supported,\n                             client-error-document-access-error\n\
    \   If the client supplies unsupported values for other attributes, or\n   unsupported\
    \ attributes, the Printer returns the status code defined\n   in section 3.1.7\
    \ on Unsupported Attributes.\n"
- title: 3.1.6.2 "status-message" (text(255))
  contents:
  - "3.1.6.2 \"status-message\" (text(255))\n   The OPTIONAL \"status-message\" operation\
    \ attribute provides a short\n   textual description of the status of the operation.\
    \  The \"status-\n   message\" attribute's syntax is \"text(255)\", so the maximum\
    \ length is\n   255 octets (see section 4.1.1).  The status message is intended\
    \ for\n   the human end user.  If a response does include a \"status-message\"\
    \n   attribute, an IPP client NEED NOT examine or display the messages,\n   however\
    \ it SHOULD do so in some implementation specific manner.  The\n   \"status-message\"\
    \ is especially useful for a later version of a\n   Printer object to return as\
    \ supplemental information for the human\n   user to accompany a status code that\
    \ an earlier version of a client\n   might not understand.\n   If the Printer\
    \ object supports the \"status-message\" operation\n   attribute, the Printer\
    \ object MUST be able to generate this message\n   in any of the natural languages\
    \ identified by the Printer object's\n   \"generated-natural-language-supported\"\
    \ attribute (see the\n   \"attributes-natural-language\" operation attribute specified\
    \ in\n   section 3.1.4.1.  Section 13 suggests the text for the status message\n\
    \   returned by the Printer for use with the English natural language.\n   As\
    \ described in section 3.1.4.1 for any returned 'text' attribute, if\n   there\
    \ is a choice for generating this message, the Printer object\n   uses the natural\
    \ language indicated by the value of the \"attributes-\n   natural-language\"\
    \ in the client request if supported, otherwise the\n   Printer object uses the\
    \ value in the Printer object's own \"natural-\n   language-configured\" attribute.\n\
    \   If the Printer object supports the \"status-message\" operation\n   attribute,\
    \ it SHOULD use the REQUIRED 'utf-8' charset to return a\n   status message for\
    \ the following error status codes (see section 13):\n   'client-error-bad-request',\
    \ 'client-error-charset-not-supported',\n   'server-error-internal-error', 'server-error-operation-not-\n\
    \   supported', and 'server-error-version-not-supported'.  In this case,\n   it\
    \ MUST set the value of the \"attributes-charset\" operation attribute\n   to\
    \ 'utf-8' in the error response.\n"
- title: 3.1.6.3 "detailed-status-message" (text(MAX))
  contents:
  - "3.1.6.3 \"detailed-status-message\" (text(MAX))\n   The OPTIONAL \"detailed-status-message\"\
    \ operation attribute provides\n   additional more detailed technical and implementation-specific\n\
    \   information about the operation.  The \"detailed-status-message\"\n   attribute's\
    \ syntax is \"text(MAX)\", so the maximum length is 1023\n   octets (see section\
    \ 4.1.1).    If the Printer objects supports the\n   \"detailed-status-message\"\
    \ operation attribute, the Printer NEED NOT\n   localize the message, since it\
    \ is intended for use by the system\n   administrator or other experienced technical\
    \ persons.  Localization\n   might obscure the technical meaning of such messages.\
    \  Clients MUST\n   NOT attempt to parse the value of this attribute.  See the\n\
    \   \"document-access-error\" operation attribute (section 3.1.6.4) for\n   additional\
    \ errors that a program can process.\n"
- title: 3.1.6.4 "document-access-error" (text(MAX))
  contents:
  - "3.1.6.4 \"document-access-error\" (text(MAX))\n   This OPTIONAL operation attribute\
    \ provides additional information\n   about any document access errors encountered\
    \ by the Printer before it\n   returned a response to the Print-URI (section 3.2.2)\
    \ or Send-URI\n   (section 3.3.1) operation.  For errors in the protocol identified\
    \ by\n   the URI scheme in the \"document-uri\" operation attribute, such as\n\
    \   'http:' or 'ftp:', the error code is returned in parentheses,\n   followed\
    \ by the URI.  For example:\n      (404) http://ftp.pwg.org/pub/pwg/ipp/new_MOD/ipp-model-v11.pdf\n\
    \   Most Internet protocols use decimal error codes (unlike IPP), so the\n   ASCII\
    \ error code representation is in decimal.\n"
- title: 3.1.7 Unsupported Attributes
  contents:
  - "3.1.7 Unsupported Attributes\n   The Unsupported Attributes group contains attributes\
    \ that are not\n   supported by the operation. This group is primarily for the\
    \ job\n   creation operations, but all operations can return this group.\n   A\
    \ Printer object MUST include an Unsupported Attributes group in a\n   response\
    \ if the status code is one of the following:  'successful-\n   ok-ignored-or-substituted-attributes',\
    \ 'successful-ok-conflicting-\n   attributes', 'client-error-attributes-or-values-not-supported'\
    \ or\n   'client-error-conflicting-attributes'.\n   If the status code is one\
    \ of the four specified in the preceding\n   paragraph, the Unsupported Attributes\
    \ group MUST contain all of those\n   attributes and only those attributes that\
    \ are:\n      a. an Operation or Job Template attribute supplied in the request,\n\
    \         and\n      b. unsupported by the printer. See below for details on the\
    \ three\n         categories \"unsupported\" attributes.\n   If the status code\
    \ is one of those in the table in section 3.1.6.1,\n   the Unsupported Attributes\
    \ group NEED NOT contain the unsupported\n   parameter or attribute indicated\
    \ in that table.\n   If the Printer object is not returning any Unsupported Attributes\
    \ in\n   the response, the Printer object SHOULD omit Group 2 rather than\n  \
    \ sending an empty group.  However, a client MUST be able to accept an\n   empty\
    \ group.\n   Unsupported attributes fall into three categories:\n      1. The\
    \ Printer object does not support the supplied attribute (no\n         matter\
    \ what the attribute syntax or value).\n      2. The Printer object does support\
    \ the attribute, but does not\n         support some or all of the particular\
    \ attribute syntaxes or\n         values supplied by the client (i.e., the Printer\
    \ object does\n         not have those attribute syntaxes or values in its\n \
    \        corresponding \"xxx-supported\" attribute).\n      3. The Printer object\
    \ does support the attributes and values\n         supplied, but the particular\
    \ values are in conflict with one\n         another, because they violate a constraint,\
    \ such as not being\n         able to staple transparencies.\n   In the case of\
    \ an unsupported attribute name, the Printer object\n   returns the client-supplied\
    \ attribute with a substituted value of\n   'unsupported'.  This value's syntax\
    \ type is \"out-of-band\" and its\n   encoding is defined by special rules for\
    \ \"out-of-band\" values in the\n   \"Encoding and Transport\" document [RFC2910].\
    \   Its value indicates no\n   support for the attribute itself (see the beginning\
    \ of section 4.1).\n   In the case of a supported attribute with one or more unsupported\n\
    \   attribute syntaxes or values, the Printer object simply returns the\n   client-supplied\
    \ attribute with the unsupported attribute syntaxes or\n   values as supplied\
    \ by the client.  This indicates support for the\n   attribute, but no support\
    \ for that particular attribute syntax or\n   value.  If the client supplies a\
    \ multi-valued attribute with more\n   than one value and the Printer object supports\
    \ the attribute but only\n   supports a subset of the client-supplied attribute\
    \ syntaxes or\n   values, the Printer object\n   MUST return only those attribute\
    \ syntaxes or values that are\n   unsupported.\n   In the case of two (or more)\
    \ supported attribute values that are in\n   conflict with one another (although\
    \ each is supported independently,\n   the values conflict when requested together\
    \ within the same job), the\n   Printer object MUST return all the values that\
    \ it ignores or\n   substitutes to resolve the conflict, but not any of the values\
    \ that\n   it is still using.  The choice for exactly how to resolve the\n   conflict\
    \ is implementation dependent.  See sections 3.2.1.2 and 15.\n   See The Implementer's\
    \ Guide [IPP-IIG] for an example.\n"
- title: 3.1.8 Versions
  contents:
  - "3.1.8 Versions\n   Each operation request and response carries with it a \"version-\n\
    \   number\" parameter.  Each value of the \"version-number\" is in the form\n\
    \   \"X.Y\" where X is the major version number and Y is the minor version\n \
    \  number.  By including a version number in the client request, it\n   allows\
    \ the client  to identify which version of IPP it is interested\n   in using,\
    \ i.e., the version whose conformance requirements the client\n   may be depending\
    \ upon the Printer to meet.\n   If the IPP object does not support that major\
    \ version number supplied\n   by the client, i.e., the major version field of\
    \ the \"version-number\"\n   parameter does not match any of the values of the\
    \ Printer's \"ipp-\n   versions-supported\" (see section 4.4.14), the object MUST\
    \ respond\n   with a status code of 'server-error-version-not-supported' along\
    \ with\n   the closest version number that is supported (see section 13.1.5.4).\n\
    \   If the major version number is supported, but the minor version\n   number\
    \ is not, the IPP object SHOULD accept and attempt to perform\n   the request\
    \ (or reject the request if the operation is not\n   supported), else it rejects\
    \ the request and returns the 'server-\n   error-version-not-supported' status\
    \ code.  In all cases, the IPP\n   object MUST return the \"version-number\" that\
    \ it supports that is\n   closest to the version number supplied by the client\
    \ in the request.\n   There is no version negotiation per se.  However, if after\
    \ receiving\n   a 'server-error-version-not-supported' status code from an IPP\n\
    \   object, a client SHOULD try again with a different version number. A\n   client\
    \ MAY also determine the versions supported either from a\n   directory that conforms\
    \ to Appendix E (see section 16) or by querying\n   the Printer object's \"ipp-versions-supported\"\
    \ attribute (see section\n   4.4.14) to determine which versions are supported.\n\
    \   An IPP object implementation MUST support version '1.1', i.e., meet\n   the\
    \ conformance requirements for IPP/1.1 as specified in this\n   document and [RFC2910].\
    \  It is recommended that IPP object\n   implementations accept any request with\
    \ the major version '1' (or\n   reject the request if the operation is not supported).\n\
    \   There is only one notion of \"version number\" that covers both IPP\n   Model\
    \ and IPP Protocol changes. Thus the version number MUST change\n   when introducing\
    \ a new version of the Model and Semantics document\n   (this document) or a new\
    \ version of the \"Encoding and Transport\"\n   document [RFC2910].\n   Changes\
    \ to the major version number of the Model and Semantics\n   document indicate\
    \ structural or syntactic changes that make it\n   impossible for older version\
    \ of IPP clients and Printer objects to\n   correctly parse and correctly process\
    \ the new or changed attributes,\n   operations and responses.  If the major version\
    \ number changes, the\n   minor version numbers is set to zero.  As an example,\
    \ adding the\n   REQUIRED \"ipp-attribute-fidelity\" attribute to version '1.1'\
    \ (if it\n   had not been part of version '1.0'), would have required a change\
    \ to\n   the major version number, since an IPP/1.0 Printer would not have\n \
    \  processed a request with the correct semantics that contained the\n   \"ipp-attribute-fidelity\"\
    \ attribute that it did not know about.  Items\n   that might affect the changing\
    \ of the major version number include\n   any changes to the Model and Semantics\
    \ document (this document) or\n   the \"Encoding and Transport\" document [RFC2910]\
    \ itself, such as:\n      - reordering of ordered attributes or attribute sets\n\
    \      - changes to the syntax of existing attributes\n      - adding REQUIRED\
    \ (for an IPP object to support) operation\n        attribute groups\n      -\
    \ adding values to existing REQUIRED operation attributes\n      - adding REQUIRED\
    \ operations\n   Changes to the minor version number indicate the addition of\
    \ new\n   features, attributes and attribute values that may not be understood\n\
    \   by all IPP objects, but which can be ignored if not understood.\n   Items\
    \ that might affect the changing of the minor version number\n   include any changes\
    \ to the model objects and attributes but not the\n   encoding and transport rules\
    \ [RFC2910] (except adding attribute\n   syntaxes).  Examples of such changes\
    \ are:\n      - grouping all extensions not included in a previous version into\n\
    \        a new version\n      - adding new attribute values\n      - adding new\
    \ object attributes\n      - adding OPTIONAL (for an IPP object to support) operation\n\
    \        attributes (i.e., those attributes that an IPP object can ignore\n  \
    \      without confusing clients)\n      - adding OPTIONAL (for an IPP object\
    \ to support) operation\n        attribute groups (i.e., those attributes that\
    \ an IPP object can\n        ignore without confusing clients)\n      - adding\
    \ new attribute syntaxes\n      - adding OPTIONAL operations\n      - changing\
    \ Job Description attributes or Printer Description\n        attributes from OPTIONAL\
    \ to REQUIRED or vice versa.\n      - adding OPTIONAL attribute syntaxes to an\
    \ existing attribute.\n   The encoding of the \"version-number\" MUST NOT change\
    \ over any version\n   number (either major or minor).  This rule guarantees that\
    \ all future\n   versions will be backwards compatible with all previous versions\
    \ (at\n   least for checking  the \"version-number\").  In addition, any protocol\n\
    \   elements (attributes, error codes, tags, etc.) that are not carried\n   forward\
    \ from one version to the next are deprecated so that they can\n   never be reused\
    \ with new semantics.\n   Implementations that support a certain  version NEED\
    \ NOT support ALL\n   previous versions.  As each new  version is defined (through\
    \ the\n   release of a new IPP specification document), that version will\n  \
    \ specify which previous  versions MUST and which versions SHOULD be\n   supported\
    \ in compliant implementations.\n"
- title: 3.1.9 Job Creation Operations
  contents:
  - "3.1.9 Job Creation Operations\n   In order to \"submit a print job\" and create\
    \ a new Job object, a\n   client issues a create request.  A create request is\
    \ any one of\n   following three operation requests:\n      - The Print-Job Request:\
    \ A client that wants to submit a print job\n        with only a single document\
    \ uses the Print-Job operation.  The\n        operation allows for the client\
    \ to \"push\" the document data to\n        the Printer object by including the\
    \ document data in the request\n        itself.\n      - The Print-URI Request:\
    \ A client that wants to submit a print job\n        with only a single document\
    \ (where the Printer object \"pulls\"\n        the document data instead of the\
    \ client \"pushing\" the data to\n        the Printer object) uses the Print-URI\
    \ operation.   In this\n        case, the client includes in the request only\
    \ a URI reference to\n        the document data (not the document data itself).\n\
    \      - The Create-Job Request: A client that wants to submit a print\n     \
    \   job with multiple documents uses the Create-Job operation.  This\n       \
    \ operation is followed by an arbitrary number (one or more) of\n        Send-Document\
    \ and/or Send-URI operations (each creating another\n        document for the\
    \ newly create Job object).  The Send-Document\n        operation includes the\
    \ document data in the request (the client\n        \"pushes\" the document data\
    \ to the printer), and the Send-URI\n        operation includes only a URI reference\
    \ to the document data in\n        the request (the Printer \"pulls\" the document\
    \ data from the\n        referenced location).  The last Send-Document or Send-URI\n\
    \        request for a given Job object includes a \"last-document\"\n       \
    \ operation attribute set to 'true' indicating that this is the\n        last\
    \ request.\n   Throughout this model document, the term \"create request\" is\
    \ used to\n   refer to any of these three operation requests.\n   A Create-Job\
    \ operation followed by only one Send-Document operation\n   is semantically equivalent\
    \ to a Print-Job operation, however, for\n   performance reasons, the client SHOULD\
    \ use the Print-Job operation\n   for all single document jobs.  Also, Print-Job\
    \ is a REQUIRED\n   operation (all implementations MUST support it) whereas Create-Job\
    \ is\n   an OPTIONAL operation, hence some implementations might not support\n\
    \   it.\n   Job submission time is the point in time when a client issues a\n\
    \   create request.  The initial state of every Job object is the\n   'pending',\
    \ 'pending-held', or 'processing' state (see section 4.3.7).\n   When the Printer\
    \ object begins processing the print job, the Job\n   object's state moves to\
    \ 'processing'.  This is known as job\n   processing time.  There are validation\
    \ checks that must be done at\n   job submission time and others that must be\
    \ performed at job\n   processing time.\n   At job submission time and at the\
    \ time a Validate-Job operation is\n   received, the Printer MUST do the following:\n\
    \      1. Process the client supplied attributes and either accept or\n      \
    \   reject the request\n      2. Validate the syntax of and support for the scheme\
    \ of any client\n         supplied URI\n   At job submission time the Printer\
    \ object MUST validate whether or\n   not the supplied attributes, attribute syntaxes,\
    \ and values are\n   supported by matching them with the Printer object's corresponding\n\
    \   \"xxx-supported\" attributes.  See section 3.1.7 for details.  [IPP-\n   IIG]\
    \ presents suggested steps for an IPP object to either accept or\n   reject any\
    \ request and additional steps for processing create\n   requests.\n   At job\
    \ submission time the Printer object NEED NOT perform the\n   validation checks\
    \ reserved for job processing time such as:\n      1. Validating the document\
    \ data\n      2. Validating the actual contents of any client supplied URI\n \
    \        (resolve the reference and follow the link to the document\n        \
    \ data)\n   At job submission time, these additional job processing time\n   validation\
    \ checks are essentially useless, since they require\n   actually parsing and\
    \ interpreting the document data, are not\n   guaranteed to be 100% accurate,\
    \ and MUST be done, yet again, at job\n   processing time.  Also, in the case\
    \ of a URI, checking for\n   availability at job submission time does not guarantee\
    \ availability\n   at job processing time.  In addition, at job processing time,\
    \ the\n   Printer object might discover any of the following conditions that\n\
    \   were not detectable at job submission time:\n      - runtime errors in the\
    \ document data,\n      - nested document data that is in an unsupported format,\n\
    \      - the URI reference is no longer valid (i.e., the server hosting\n    \
    \    the document might be down), or\n      - any other job processing error\n\
    \   At job submission time, a Printer object, especially a non-spooling\n   Printer,\
    \ MAY accept jobs that it does not have enough space for.  In\n   such a situation,\
    \ a Printer object MAY stop reading data from a\n   client for an indefinite period\
    \ of time.  A client MUST be prepared\n   for a write operation to block for an\
    \ indefinite period of time (see\n   section 5.1 on client conformance).\n   When\
    \ a Printer object has too little space for starting a new job, it\n   MAY reject\
    \ a new create request. In this case, a Printer object MUST\n   return a response\
    \ (in reply to the rejected request) with a status-\n   code of 'server-error-busy'\
    \ (see section 14.1.5.8) and it MAY close\n   the connection before receiving\
    \ all bytes of the operation.  A\n   Printer SHOULD indicate that it is temporarily\
    \ unable to accept jobs\n   by setting the 'spool-space-full' value in its \"\
    printer-state-\n   reasons\" attribute and removing the value when it can accept\
    \ another\n   job (see section 4.4.12).\n   When receiving a 'server-error-busy'\
    \ status-code in an operation\n   response, a client MUST be prepared for the\
    \ Printer object to close\n   the connection before the client has sent all of\
    \ the data (especially\n   for the Print-Job operation). A client MUST be prepared\
    \ to keep\n   submitting a create request until the IPP Printer object accepts\
    \ the\n   create request.\n   At job processing time, since the Printer object\
    \ has already\n   responded with a successful status code in the response to the\
    \ create\n   request, if the Printer object detects an error, the Printer object\n\
    \   is unable to inform the end user of the error with an operation\n   status\
    \ code.   In this case, the Printer, depending on the error, can\n   set the job\
    \ object's \"job-state\", \"job-state-reasons\", or \"job-\n   state-message\"\
    \ attributes to the appropriate value(s) so that later\n   queries can report\
    \ the correct job status.\n   Note: Asynchronous notification of events is outside\
    \ the scope of\n   this IPP/1.1 document.\n"
- title: 3.2 Printer Operations
  contents:
  - "3.2 Printer Operations\n   All Printer operations are directed at Printer objects.\
    \  A client\n   MUST always supply the \"printer-uri\" operation attribute in\
    \ order to\n   identify the correct target of the operation.\n"
- title: 3.2.1 Print-Job Operation
  contents:
  - "3.2.1 Print-Job Operation\n   This REQUIRED operation allows a client to submit\
    \ a print job with\n   only one document and supply the document data (rather\
    \ than just a\n   reference to the data).  See Section 15 for the suggested steps\
    \ for\n   processing create operations and their Operation and Job Template\n\
    \   attributes.\n"
- title: 3.2.1.1 Print-Job Request
  contents:
  - "3.2.1.1 Print-Job Request\n   The following groups of attributes are supplied\
    \ as part of the\n   Print-Job Request:\n   Group 1: Operation Attributes\n  \
    \    Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in section\
    \ 3.1.4.1.  The Printer object\n         MUST copy these values to the corresponding\
    \ Job Description\n         attributes described in sections 4.3.19 and 4.3.20.\n\
    \      Target:\n         The \"printer-uri\" (uri) operation attribute which is\
    \ the target\n         for this operation as described in section 3.1.5.\n   \
    \   Requesting User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute\
    \ SHOULD be\n         supplied by the client as described in section 8.3.\n  \
    \    \"job-name\" (name(MAX)):\n         The client OPTIONALLY supplies this attribute.\
    \  The Printer\n         object MUST support this attribute.  It contains the\
    \ client\n         supplied Job name.  If this attribute is supplied by the\n\
    \         client, its value is used for the \"job-name\" attribute of the\n  \
    \       newly created Job object.  The client MAY automatically include\n    \
    \     any information that will help the end-user distinguish amongst\n      \
    \   his/her jobs, such as the name of the application program along\n        \
    \ with information from the document, such as the document name,\n         document\
    \ subject, or source file name.  If this attribute is\n         not supplied by\
    \ the client, the Printer generates a name to use\n         in the \"job-name\"\
    \ attribute of the newly created Job object\n         (see Section 4.3.5).\n \
    \     \"ipp-attribute-fidelity\" (boolean):\n         The client OPTIONALLY supplies\
    \ this attribute.  The Printer\n         object MUST support this attribute. \
    \ The value 'true' indicates\n         that total fidelity to client supplied\
    \ Job Template attributes\n         and values is required, else the Printer object\
    \ MUST reject the\n         Print-Job request.  The value 'false' indicates that\
    \ a\n         reasonable attempt to print the Job object is acceptable and\n \
    \        the Printer object MUST accept the Print-Job request. If not\n      \
    \   supplied, the Printer object assumes the value is 'false'.  All\n        \
    \ Printer objects MUST support both types of job processing.  See\n         section\
    \ 15 for a full description of \"ipp-attribute-fidelity\"\n         and its relationship\
    \ to other attributes, especially the\n         Printer object's \"pdl-override-supported\"\
    \ attribute.\n      \"document-name\" (name(MAX)):\n         The client OPTIONALLY\
    \ supplies this attribute.  The Printer\n         object MUST support this attribute.\
    \   It contains the client\n         supplied document name.  The document name\
    \ MAY be different\n         than the Job name.  Typically, the client software\n\
    \         automatically supplies the document name on behalf of the end\n    \
    \     user by using a file name or an application generated name.  If\n      \
    \   this attribute is supplied, its value can be used in a manner\n         defined\
    \ by each implementation.  Examples include: printed\n         along with the\
    \ Job (job start sheet, page adornments, etc.),\n         used by accounting or\
    \ resource tracking management tools, or\n         even stored along with the\
    \ document as a document level\n         attribute.  IPP/1.1 does not support\
    \ the concept of document\n         level attributes.\n      \"compression\" (type3\
    \ keyword):\n         The client OPTIONALLY supplies this attribute.  The Printer\n\
    \         object MUST support this attribute and the \"compression-\n        \
    \ supported\" attribute (see section 4.4.32).  The client supplied\n         \"\
    compression\" operation attribute identifies the compression\n         algorithm\
    \ used on the document data. The following cases exist:\n         a) If the client\
    \ omits this attribute, the Printer object MUST\n            assume that the data\
    \ is not compressed   (i.e. the Printer\n            follows the rules below as\
    \ if the client supplied the\n            \"compression\" attribute with a value\
    \ of 'none').\n         b) If the client supplies this attribute, but the value\
    \ is not\n            supported by the Printer object, i.e., the value is not\
    \ one\n            of the values of the Printer object's \"compression-\n    \
    \        supported\" attribute, the Printer object MUST reject the\n         \
    \   request, and return the 'client-error-compression-not-\n            supported'\
    \ status code. See section 3.1.7 for returning\n            unsupported attributes\
    \ and values.\n         c) If the client supplies the attribute and the Printer\
    \ object\n            supports the attribute value, the Printer object uses the\n\
    \            corresponding decompression algorithm on the document data.\n   \
    \      d) If the decompression algorithm fails before the Printer\n          \
    \  returns an operation response, the Printer object MUST\n            reject\
    \ the request and return the 'client-error-\n            compression-error' status\
    \ code.\n         e) If the decompression algorithm fails after the Printer\n\
    \            returns an operation response, the Printer object MUST abort\n  \
    \          the job and add the 'compression-error' value to the job's\n      \
    \      \"job-state-reasons\" attribute.\n         f) If the decompression algorithm\
    \ succeeds, the document data\n            MUST then have the format specified\
    \ by the job's \"document-\n            format\" attribute, if supplied (see \"\
    document-format\"\n            operation attribute definition below).\n      \"\
    document-format\" (mimeMediaType):\n         The client OPTIONALLY supplies this\
    \ attribute.  The Printer\n         object MUST support this attribute.  The value\
    \ of this\n         attribute identifies the format of the supplied document data.\n\
    \         The following cases exist:\n         a) If the client does not supply\
    \ this attribute, the Printer\n            object assumes that the document data\
    \ is in the format\n            defined by the Printer object's \"document-format-default\"\
    \n            attribute. (i.e. the Printer follows the rules below as if\n   \
    \         the client supplied the \"document-format\" attribute with a\n     \
    \       value equal to the printer's default value).\n         b) If the client\
    \ supplies this attribute, but the value is not\n            supported by the\
    \ Printer object, i.e., the value is not one\n            of the values of the\
    \ Printer object's \"document-format-\n            supported\" attribute, the\
    \ Printer object MUST reject the\n            request and return the 'client-error-document-format-not-\n\
    \            supported' status code.\n         c) If the client supplies this\
    \ attribute and its value is\n            'application/octet-stream' (i.e. to\
    \ be auto-sensed, see\n            Section 4.1.9.1), and the format is not one\
    \ of the\n            document-formats that the Printer can auto-sense, and this\n\
    \            check occurs before the Printer returns an operation\n          \
    \  response, then the Printer MUST reject the request and\n            return\
    \ the  'client-error-document-format-not-supported'\n            status code.\n\
    \         d) If the client supplies this attribute, and the value is\n       \
    \     supported by the Printer object, the Printer is capable of\n           \
    \ interpreting the document data.\n         e) If interpreting of the document\
    \ data fails before the\n            Printer returns an operation response, the\
    \ Printer object\n            MUST reject the request and return the 'client-error-\n\
    \            document-format-error' status code.\n         f) If interpreting\
    \ of the document data fails after the Printer\n            returns an operation\
    \ response, the Printer object MUST abort\n            the job and add the 'document-format-error'\
    \ value to the\n            job's \"job-state-reasons\" attribute.\n      \"document-natural-language\"\
    \ (naturalLanguage):\n         The client OPTIONALLY supplies this attribute.\
    \  The Printer\n         object OPTIONALLY supports this attribute. This attribute\n\
    \         specifies the natural language of the document for those\n         document-formats\
    \ that require a specification of the natural\n         language in order to image\
    \ the document unambiguously. There\n         are no particular values required\
    \ for the Printer object to\n         support.\n      \"job-k-octets\" (integer(0:MAX)):\n\
    \         The client OPTIONALLY supplies this attribute.  The Printer\n      \
    \   object OPTIONALLY supports this attribute and the \"job-k-\n         octets-supported\"\
    \ attribute (see section 4.4.33).  The client\n         supplied \"job-k-octets\"\
    \ operation attribute identifies the\n         total size of the document(s) in\
    \ K octets being submitted (see\n         section 4.3.17.1 for the complete semantics).\
    \  If the client\n         supplies the attribute and the Printer object supports\
    \ the\n         attribute, the value of the attribute is used to populate the\n\
    \         Job object's \"job-k-octets\" Job Description attribute.\n         For\
    \ this attribute and the following two attributes (\"job-\n         impressions\"\
    , and \"job-media-sheets\"), if the client supplies\n         the attribute, but\
    \ the Printer object does not support the\n         attribute, the Printer object\
    \ ignores the client-supplied\n         value.  If the client supplies the attribute\
    \ and the Printer\n         supports the attribute, and the value is within the\
    \ range of\n         the corresponding Printer object's \"xxx-supported\" attribute,\n\
    \         the Printer object MUST use the value to populate the Job\n        \
    \ object's \"xxx\" attribute.  If the client supplies the attribute\n        \
    \ and the Printer supports the attribute, but the value is\n         outside the\
    \ range of the corresponding Printer object's \"xxx-\n         supported\" attribute,\
    \ the Printer object MUST copy the\n         attribute and its value to the Unsupported\
    \ Attributes response\n         group, reject the request, and return the 'client-error-\n\
    \         attributes-or-values-not-supported' status code.  If the client\n  \
    \       does not supply the attribute, the Printer object MAY choose to\n    \
    \     populate the corresponding Job object attribute depending on\n         whether\
    \ the Printer object supports the attribute and is able\n         to calculate\
    \ or discern the correct value.\n      \"job-impressions\" (integer(0:MAX)):\n\
    \         The client OPTIONALLY supplies this attribute.  The Printer\n      \
    \   object OPTIONALLY supports this attribute and the \"job-\n         impressions-supported\"\
    \ attribute (see section 4.4.34).  The\n         client supplied \"job-impressions\"\
    \ operation attribute\n         identifies the total size in number of impressions\
    \ of the\n         document(s) being submitted (see section 4.3.17.2 for the\n\
    \         complete semantics).\n         See last paragraph under \"job-k-octets\"\
    .\n      \"job-media-sheets\" (integer(0:MAX)):\n         The client OPTIONALLY\
    \ supplies this attribute.  The Printer\n         object OPTIONALLY supports this\
    \ attribute and the \"job-media-\n         sheets-supported\" attribute (see section\
    \ 4.4.35).  The client\n         supplied \"job-media-sheets\" operation attribute\
    \ identifies the\n         total number of media sheets to be produced for this\
    \ job (see\n         section 4.3.17.3 for the complete semantics).\n         See\
    \ last paragraph under \"job-k-octets\".\n   Group 2: Job Template Attributes\n\
    \      The client OPTIONALLY supplies a set of Job Template attributes as\n  \
    \    defined in section 4.2.  If the client is not supplying any Job\n      Template\
    \ attributes in the request, the client SHOULD omit Group 2\n      rather than\
    \ sending an empty group.  However, a Printer object\n      MUST be able to accept\
    \ an empty group.\n   Group 3: Document Content\n      The client MUST supply\
    \ the document data to be processed.\n      In addition to the MANDATORY parameters\
    \ required for every\n      operation request, the simplest Print-Job Request\
    \ consists of just\n      the \"attributes-charset\" and \"attributes-natural-language\"\
    \n      operation attributes; the \"printer-uri\" target operation\n      attribute;\
    \ the Document Content and nothing else.  In this simple\n      case, the Printer\
    \ object:\n      - creates a new Job object (the Job object contains a single\n\
    \        document),\n      - stores a generated Job name in the \"job-name\" attribute\
    \ in the\n        natural language and charset requested (see Section 3.1.4.1)\
    \ (if\n        those are supported, otherwise using the Printer object's\n   \
    \     default natural language and charset), and\n      - at job processing time,\
    \ uses its corresponding default value\n        attributes for the supported Job\
    \ Template attributes that were\n        not supplied by the client as IPP attribute\
    \ or embedded\n        instructions in the document data.\n"
- title: 3.2.1.2 Print-Job Response
  contents:
  - "3.2.1.2 Print-Job Response\n   The Printer object MUST return to the client the\
    \ following sets of\n   attributes as part of the Print-Job Response:\n   Group\
    \ 1: Operation Attributes\n      Status Message:\n         In addition to the\
    \ REQUIRED status code returned in every\n         response, the response OPTIONALLY\
    \ includes a \"status-message\"\n         (text(255)) and/or a \"detailed-status-message\"\
    \ (text(MAX))\n         operation attribute as described in sections 13 and 3.1.6.\
    \  If\n         the client supplies unsupported or conflicting Job Template\n\
    \         attributes or values, the Printer object MUST reject or accept\n   \
    \      the Print-Job request depending on the whether the client\n         supplied\
    \ a 'true' or 'false' value for the \"ipp-attribute-\n         fidelity\" operation\
    \ attribute.  See the Implementer's Guide\n         [IPP-IIG] for a complete description\
    \ of the suggested steps for\n         processing a create request.\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in section 3.1.4.2.\n   Group 2: Unsupported\
    \ Attributes\n      See section 3.1.7 for details on returning Unsupported Attributes.\n\
    \      The value of the \"ipp-attribute-fidelity\" supplied by the client\n  \
    \    does not affect what attributes the Printer object returns in this\n    \
    \  group.  The value of \"ipp-attribute-fidelity\" only affects whether\n    \
    \  the Print-Job operation is accepted or rejected.  If the job is\n      accepted,\
    \ the client may query the job using the Get-Job-\n      Attributes operation\
    \ requesting the unsupported attributes that\n      were returned in the create\
    \ response to see which attributes were\n      ignored (not stored on the Job\
    \ object) and which attributes were\n      stored with other (substituted) values.\n\
    \   Group 3: Job Object Attributes\n      \"job-uri\" (uri):\n         The Printer\
    \ object MUST return the Job object's URI by\n         returning the contents\
    \ of the REQUIRED \"job-uri\" Job object\n         attribute.  The client uses\
    \ the Job object's URI when directing\n         operations at the Job object.\
    \  The Printer object always uses\n         its configured security policy when\
    \ creating the new URI.\n         However, if the Printer object supports more\
    \ than one URI, the\n         Printer object also uses information about which\
    \ URI was used\n         in the Print-Job Request to generated the new URI so\
    \ that the\n         new URI references the correct access channel.  In other\
    \ words,\n         if the Print-Job Request comes in over a secure channel, the\n\
    \         Printer object MUST generate a Job URI that uses the secure\n      \
    \   channel as well.\n      \"job-id\" (integer(1:MAX)):\n         The Printer\
    \ object MUST return the Job object's Job ID by\n         returning the REQUIRED\
    \  \"job-id\" Job object attribute.  The\n         client uses this \"job-id\"\
    \ attribute in conjunction with the\n         \"printer-uri\" attribute used in\
    \ the Print-Job Request when\n         directing Job operations at the Printer\
    \ object.\n      \"job-state\" (type1 enum):\n         The Printer object MUST\
    \ return the Job object's REQUIRED \"job-\n         state\" attribute. The value\
    \ of this attribute (along with the\n         value of the next attribute:  \"\
    job-state-reasons\") is taken\n         from a \"snapshot\" of the new Job object\
    \ at some meaningful\n         point in time (implementation defined) between\
    \ when the Printer\n         object receives the Print-Job Request and when the\
    \ Printer\n         object returns the response.\n      \"job-state-reasons\"\
    \ (1setOf type2 keyword):\n         The Printer object MUST return the Job object's\
    \ REQUIRED \"job-\n         state-reasons\" attribute.\n      \"job-state-message\"\
    \ (text(MAX)):\n         The Printer object OPTIONALLY returns the Job object's\
    \ OPTIONAL\n         \"job-state-message\" attribute.  If the Printer object supports\n\
    \         this attribute then it MUST be returned in the response.  If\n     \
    \    this attribute is not returned in the response, the client can\n        \
    \ assume that the \"job-state-message\" attribute is not supported\n         and\
    \ will not be returned in a subsequent Job object query.\n      \"number-of-intervening-jobs\"\
    \ (integer(0:MAX)):\n         The Printer object OPTIONALLY returns the Job object's\
    \ OPTIONAL\n         \"number-of-intervening-jobs\" attribute.  If the Printer\
    \ object\n         supports this attribute then it MUST be returned in the\n \
    \        response.  If this attribute is not returned in the response,\n     \
    \    the client can assume that the \"number-of-intervening-jobs\"\n         attribute\
    \ is not supported and will not be returned in a\n         subsequent Job object\
    \ query.\n         Note: Since any printer state information which affects a job's\n\
    \         state is reflected in the \"job-state\" and \"job-state-reasons\"\n\
    \         attributes, it is sufficient to return only these attributes\n     \
    \    and no specific printer status attributes.\n   Note: In addition to the MANDATORY\
    \ parameters required for every\n   operation response, the simplest response\
    \ consists of the just the\n   \"attributes-charset\" and \"attributes-natural-language\"\
    \ operation\n   attributes and the \"job-uri\", \"job-id\", and \"job-state\"\
    \ Job Object\n   Attributes.  In this simplest case, the status code is 'successful-\n\
    \   ok' and there is no \"status-message\" or \"detailed-status-message\"\n  \
    \ operation attribute.\n"
- title: 3.2.2 Print-URI Operation
  contents:
  - "3.2.2 Print-URI Operation\n   This OPTIONAL operation is identical to the Print-Job\
    \ operation\n   (section 3.2.1) except that a client supplies a URI reference\
    \ to the\n   document data using the \"document-uri\" (uri) operation attribute\
    \ (in\n   Group 1) rather than including the document data itself.  Before\n \
    \  returning the response, the Printer MUST validate that the Printer\n   supports\
    \ the retrieval method (e.g., http, ftp, etc.) implied by the\n   URI, and MUST\
    \ check for valid URI syntax.  If the client-supplied URI\n   scheme is not supported,\
    \ i.e. the value is not in the Printer\n   object's \"referenced-uri-scheme-supported\"\
    \ attribute, the Printer\n   object MUST reject the request and return the 'client-error-uri-\n\
    \   scheme-not-supported' status code.\n   The IPP Printer MAY validate the accessibility\
    \ of the document as\n   part of the operation or subsequently.  If the Printer\
    \ determines an\n   accessibility problem before returning an operation response,\
    \ it\n   rejects the request and returns the 'client-error-document-access-\n\
    \   error' status code.  The Printer MAY also return a specific document\n   access\
    \ error code using the \"document-access-error\" operation\n   attribute (see\
    \ section 3.1.6.4).\n   If the Printer determines this document accessibility\
    \ problem after\n   accepting the request and returning an operation response\
    \ with one of\n   the successful status codes, the Printer adds the 'document-access-\n\
    \   error' value to the job's \"job-state-reasons\" attribute and MAY\n   populate\
    \ the job's \"job-document-access-errors\" Job Description\n   attribute (see\
    \ section 4.3.11).  See The Implementer's Guide [IPP-\n   IIG] for suggested additional\
    \ checks.\n   If the Printer object supports this operation, it MUST support the\n\
    \   \"reference-uri-schemes-supported\" Printer attribute (see section\n   4.4.27).\n\
    \   It is up to the IPP object to interpret the URI and subsequently\n   \"pull\"\
    \ the document from the source referenced by the URI string.\n"
- title: 3.2.3 Validate-Job Operation
  contents:
  - "3.2.3 Validate-Job Operation\n   This REQUIRED operation is similar to the Print-Job\
    \ operation\n   (section 3.2.1) except that a client supplies no document data\
    \ and\n   the Printer allocates no resources (i.e., it does not create a new\n\
    \   Job object).  This operation is used only to verify capabilities of a\n  \
    \ printer object against whatever attributes are supplied by the client\n   in\
    \ the Validate-Job request.  By using the Validate-Job operation a\n   client\
    \ can validate that an identical Print-Job operation (with the\n   document data)\
    \ would be accepted. The Validate-Job operation also\n   performs the same security\
    \ negotiation as the Print-Job operation\n   (see section 8), so that a client\
    \ can check that the client and\n   Printer object security requirements can be\
    \ met before performing a\n   Print-Job operation.\n   The Validate-Job operation\
    \ does not accept a \"document-uri\" attribute\n   in order to allow a client\
    \ to check that the same Print-URI operation\n   will be accepted, since the client\
    \ doesn't send the data with the\n   Print-URI operation.  The client SHOULD just\
    \ issue the Print-URI\n   request.\n   The Printer object returns the same status\
    \ codes, Operation\n   Attributes (Group 1) and Unsupported Attributes (Group\
    \ 2) as the\n   Print-Job operation.  However, no Job Object Attributes (Group\
    \ 3) are\n   returned, since no Job object is created.\n"
- title: 3.2.4 Create-Job Operation
  contents:
  - "3.2.4 Create-Job Operation\n   This OPTIONAL operation is similar to the Print-Job\
    \ operation\n   (section 3.2.1) except that in the Create-Job request, a client\
    \ does\n   not supply document data or any reference to document data.  Also,\n\
    \   the client does not supply any of the \"document-name\", \"document-\n   format\"\
    , \"compression\", or \"document-natural-language\" operation\n   attributes.\
    \  This operation is followed by one or more Send-Document\n   or Send-URI operations.\
    \  In each of those operation requests, the\n   client OPTIONALLY supplies the\
    \ \"document-name\", \"document-format\",\n   and \"document-natural-language\"\
    \ attributes for each document in the\n   multi-document Job object.\n   If a\
    \ Printer object supports the Create-Job operation, it MUST also\n   support the\
    \ Send-Document operation and also MAY support the Send-URI\n   operation.\n \
    \  If the Printer object supports this operation, it MUST support the\n   \"multiple-operation-time-out\"\
    \ Printer attribute (see section 4.4.31).\n   If the Printer object supports this\
    \ operation, then it MUST support\n   the \"multiple-document-jobs-supported\"\
    \ Printer Description attribute\n   (see section 4.4.16) and indicate whether\
    \ or not it supports\n   multiple-document jobs.\n   If the Printer object supports\
    \ this operation and supports multiple\n   documents in a job, then it MUST support\
    \ the \"multiple-document-\n   handling\" Job Template job attribute with at least\
    \ one value (see\n   section 4.2.4) and the associated \"multiple-document-handling-\n\
    \   default\" and \"multiple-document-handling-supported\" Job Template\n   Printer\
    \ attributes (see section 4.2).\n   After the Create-Job operation has completed,\
    \ the value of the \"job-\n   state\" attribute is similar to the \"job-state\"\
    \ after a Print-Job,\n   even though no document-data has arrived.  A Printer\
    \ MAY set the\n   'job-data-insufficient' value of the job's \"job-state-reason\"\
    \n   attribute to indicate that processing cannot begin until sufficient\n   data\
    \ has arrived and set the \"job-state\" to either 'pending' or\n   'pending-held'.\
    \  A non-spooling printer that doesn't implement the\n   'pending' job state may\
    \ even set the \"job-state\" to 'processing',\n   even though there is not yet\
    \ any data to process.  See sections 4.3.7\n   and 4.3.8.\n"
- title: 3.2.5 Get-Printer-Attributes Operation
  contents:
  - "3.2.5 Get-Printer-Attributes Operation\n   This REQUIRED operation allows a client\
    \ to request the values of the\n   attributes of a Printer object.   In the request,\
    \ the client supplies\n   the set of Printer attribute names and/or attribute\
    \ group names in\n   which the requester is interested.  In the response, the\
    \ Printer\n   object returns a corresponding attribute set with the appropriate\n\
    \   attribute values filled in.\n   For Printer objects, the possible names of\
    \ attribute groups are:\n      - 'job-template': the subset of the Job Template\
    \ attributes that\n        apply to a Printer object (the last two columns of\
    \ the table in\n        Section 4.2) that the implementation supports for Printer\n\
    \        objects.\n      - 'printer-description': the subset of the attributes\
    \ specified in\n        Section 4.4 that the implementation supports for Printer\n\
    \        objects.\n      - 'all': the special group 'all' that includes all attributes\
    \ that\n        the implementation supports for Printer objects.\n   Since a client\
    \ MAY request specific attributes or named groups, there\n   is a potential that\
    \ there is some overlap.  For example, if a client\n   requests, 'printer-name'\
    \ and 'all', the client is actually requesting\n   the \"printer-name\" attribute\
    \ twice: once by naming it explicitly, and\n   once by inclusion in the 'all'\
    \ group.  In such cases, the Printer\n   object NEED NOT return each attribute\
    \ only once in the response even\n   if it is requested multiple times.  The client\
    \ SHOULD NOT request the\n   same attribute in multiple ways.\n   It is NOT REQUIRED\
    \ that a Printer object support all attributes\n   belonging to a group (since\
    \ some attributes are OPTIONAL).  However,\n   it is REQUIRED that each Printer\
    \ object support all group names.\n"
- title: 3.2.5.1 Get-Printer-Attributes Request
  contents:
  - "3.2.5.1 Get-Printer-Attributes Request\n   The following sets of attributes are\
    \ part of the Get-Printer-\n   Attributes Request:\n   Group 1: Operation Attributes\n\
    \      Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in section\
    \ 3.1.4.1.\n      Target:\n         The \"printer-uri\" (uri) operation attribute\
    \ which is the target\n         for this operation as described in section 3.1.5.\n\
    \      Requesting User Name:\n         The \"requesting-user-name\" (name(MAX))\
    \ attribute SHOULD be\n         supplied by the client as described in section\
    \ 8.3.\n      \"requested-attributes\" (1setOf keyword):\n         The client\
    \ OPTIONALLY supplies a set of attribute names and/or\n         attribute group\
    \ names in whose values the requester is\n         interested.  The Printer object\
    \ MUST support this attribute.\n         If the client omits this attribute, the\
    \ Printer MUST respond as\n         if this attribute had been supplied with a\
    \ value of 'all'.\n      \"document-format\" (mimeMediaType):\n         The client\
    \ OPTIONALLY supplies this attribute.  The Printer\n         object MUST support\
    \ this attribute.  This attribute is useful\n         for a Printer object to\
    \ determine the set of supported\n         attribute values that relate to the\
    \ requested document format.\n         The Printer object MUST return the attributes\
    \ and values that\n         it uses to validate a job on a create or Validate-Job\
    \ operation\n         in which this document format is supplied. The Printer object\n\
    \         SHOULD return only (1) those attributes that are supported for\n   \
    \      the specified format and (2) the attribute values that are\n         supported\
    \ for the specified document format.  By specifying the\n         document format,\
    \ the client can get the Printer object to\n         eliminate the attributes\
    \ and values that are not supported for\n         a specific document format.\
    \  For example, a Printer object\n         might have multiple interpreters to\
    \ support both\n         'application/postscript' (for PostScript) and 'text/plain'\
    \ (for\n         text) documents.  However, for only one of those interpreters\n\
    \         might the Printer object be able to support \"number-up\" with\n   \
    \      values of '1', '2', and '4'.  For the other interpreter it\n         might\
    \ be able to only support \"number-up\" with a value of '1'.\n         Thus a\
    \ client can use the Get-Printer-Attributes operation to\n         obtain the\
    \ attributes and values that will be used to\n         accept/reject a create\
    \ job operation.\n         If the Printer object does not distinguish between\
    \ different\n         sets of supported values for each different document format\n\
    \         when validating jobs in the create and Validate-Job operations,\n  \
    \       it MUST NOT distinguish between different document formats in\n      \
    \   the Get-Printer-Attributes operation. If the Printer object\n         does\
    \ distinguish between different sets of supported values for\n         each different\
    \ document format specified by the client, this\n         specialization applies\
    \ only to the following Printer object\n         attributes:\n      - Printer\
    \ attributes that are Job Template attributes (\"xxx-\n        default\" \"xxx-supported\"\
    , and \"xxx-ready\" in the Table in\n        Section 4.2),\n      - \"pdl-override-supported\"\
    ,\n      - \"compression-supported\",\n      - \"job-k-octets-supported\",\n \
    \     - \"job-impressions-supported\",\n      - \"job-media-sheets-supported\"\
    ,\n      - \"printer-driver-installer\",\n      - \"color-supported\", and\n \
    \     - \"reference-uri-schemes-supported\"\n      The values of all other Printer\
    \ object attributes (including\n      \"document-format-supported\") remain invariant\
    \ with respect to the\n      client supplied document format (except for new Printer\n\
    \      description attribute as registered according to section 6.2).\n      If\
    \ the client omits this \"document-format\" operation attribute,\n      the Printer\
    \ object MUST respond as if the attribute had been\n      supplied with the value\
    \ of the Printer object's \"document-format-\n      default\" attribute.  It is\
    \ RECOMMENDED that the client always\n      supply a value for \"document-format\"\
    , since the Printer object's\n      \"document-format-default\" may be 'application/octet-stream',\
    \ in\n      which case the returned attributes and values are for the union of\n\
    \      the document formats that the Printer can automatically sense.\n      For\
    \ more details, see the description of the 'mimeMediaType'\n      attribute syntax\
    \ in section 4.1.9.\n      If the client supplies a value for the \"document-format\"\
    \ Operation\n      attribute that is not supported by the Printer, i.e., is not\
    \ among\n      the values of the Printer object's \"document-format-supported\"\
    \n      attribute, the Printer object MUST reject the operation and return\n \
    \     the 'client-error-document-format-not-supported' status code.\n"
- title: 3.2.5.2 Get-Printer-Attributes Response
  contents:
  - "3.2.5.2 Get-Printer-Attributes Response\n   The Printer object returns the following\
    \ sets of attributes as part\n   of the Get-Printer-Attributes Response:\n   Group\
    \ 1: Operation Attributes\n      Status Message:\n        In addition to the REQUIRED\
    \ status code returned in every\n        response, the response OPTIONALLY includes\
    \ a \"status-message\"\n        (text(255)) and/or a \"detailed-status-message\"\
    \ (text(MAX))\n        operation attribute as described in sections 13 and  3.1.6.\n\
    \      Natural Language and Character Set:\n        The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n        attributes as described in section\
    \ 3.1.4.2.\n   Group 2: Unsupported Attributes\n      See section 3.1.7 for details\
    \ on returning Unsupported Attributes.\n      The response NEED NOT contain the\
    \ \"requested-attributes\" operation\n      attribute with any supplied values\
    \ (attribute keywords) that were\n      requested by the client but are not supported\
    \ by the IPP object.\n      If the Printer object does return unsupported attributes\n\
    \      referenced in the \"requested-attributes\" operation attribute and\n  \
    \    that attribute included group names, such as 'all', the\n      unsupported\
    \ attributes MUST NOT include attributes described in\n      the standard but\
    \ not supported by the implementation.\n   Group 3: Printer Object Attributes\n\
    \      This is the set of requested attributes and their current values.\n   \
    \   The Printer object ignores (does not respond with) any requested\n      attribute\
    \ which is not supported.  The Printer object MAY respond\n      with a subset\
    \ of the supported attributes and values, depending on\n      the security policy\
    \ in force.  However, the Printer object MUST\n      respond with the 'unknown'\
    \ value for any supported attribute\n      (including all REQUIRED attributes)\
    \ for which the Printer object\n      does not know the value.  Also the Printer\
    \ object MUST respond\n      with the 'no-value' for any supported attribute (including\
    \ all\n      REQUIRED attributes) for which the system administrator has not\n\
    \      configured a value.  See the description of the \"out-of-band\"\n     \
    \ values in the beginning of Section 4.1.\n"
- title: 3.2.6 Get-Jobs Operation
  contents:
  - "3.2.6 Get-Jobs Operation\n   This REQUIRED operation allows a client to retrieve\
    \ the list of Job\n   objects belonging to the target Printer object.  The client\
    \ may also\n   supply a list of Job attribute names and/or attribute group names.\
    \  A\n   group of Job object attributes will be returned for each Job object\n\
    \   that is returned.\n   This operation is similar to the Get-Job-Attributes\
    \ operation, except\n   that this Get-Jobs operation returns attributes from possibly\
    \ more\n   than one object.\n"
- title: 3.2.6.1 Get-Jobs Request
  contents:
  - "3.2.6.1 Get-Jobs Request\n   The client submits the Get-Jobs request to a Printer\
    \ object.\n   The following groups of attributes are part of the Get-Jobs Request:\n\
    \   Group 1: Operation Attributes\n      Natural Language and Character Set:\n\
    \         The \"attributes-charset\" and \"attributes-natural-language\"\n   \
    \      attributes as described in section 3.1.4.1.\n      Target:\n         The\
    \ \"printer-uri\" (uri) operation attribute which is the target\n         for\
    \ this operation as described in section 3.1.5.\n      Requesting User Name:\n\
    \         The \"requesting-user-name\" (name(MAX)) attribute SHOULD be\n     \
    \    supplied by the client as described in section 8.3.\n      \"limit\" (integer(1:MAX)):\n\
    \         The client OPTIONALLY supplies this attribute.  The Printer\n      \
    \   object MUST support this attribute. It is an integer value that\n        \
    \ determines the maximum number of jobs that a client will\n         receive from\
    \ the Printer even if \"which-jobs\" or \"my-jobs\"\n         constrain which\
    \ jobs are returned.  The limit is a \"stateless\n         limit\" in that if\
    \ the value supplied by the client is 'N', then\n         only the first 'N' jobs\
    \ are returned in the Get-Jobs Response.\n         There is no mechanism to allow\
    \ for the next 'M' jobs after the\n         first 'N' jobs.  If the client does\
    \ not supply this attribute,\n         the Printer object responds with all applicable\
    \ jobs.\n      \"requested-attributes\" (1setOf type2 keyword):\n         The\
    \ client OPTIONALLY supplies this attribute.  The Printer\n         object MUST\
    \ support this attribute.  It is a set of Job\n         attribute names and/or\
    \ attribute groups names in whose values\n         the requester is interested.\
    \  This set of attributes is\n         returned for each Job object that is returned.\
    \  The allowed\n         attribute group names are the same as those defined in\
    \ the\n         Get-Job-Attributes operation in section 3.3.4.  If the client\n\
    \         does not supply this attribute, the Printer MUST respond as if\n   \
    \      the client had supplied this attribute with two values: 'job-\n       \
    \  uri' and 'job-id'.\n      \"which-jobs\" (type2 keyword):\n         The client\
    \ OPTIONALLY supplies this attribute.  The Printer\n         object MUST support\
    \ this attribute.  It indicates which Job\n         objects MUST be returned by\
    \ the Printer object. The values for\n         this attribute are:\n      'completed':\
    \ This includes any Job object whose state is\n         'completed', 'canceled',\
    \ or 'aborted'.\n      'not-completed': This includes any Job object whose state\
    \ is\n         'pending', 'processing', 'processing-stopped', or 'pending-\n \
    \        held'.\n         A Printer object MUST support both values.  However,\
    \ if the\n         implementation does not keep jobs in the 'completed',\n   \
    \      'canceled', and 'aborted' states, then it returns no jobs when\n      \
    \   the 'completed' value is supplied.\n         If a client supplies some other\
    \ value, the Printer object MUST\n         copy the attribute and the unsupported\
    \ value to the Unsupported\n         Attributes response group, reject the request,\
    \ and return the\n         'client-error-attributes-or-values-not-supported' status\
    \ code.\n         If the client does not supply this attribute, the Printer\n\
    \         object MUST respond as if the client had supplied the attribute\n  \
    \       with a value of 'not-completed'.\n      \"my-jobs\" (boolean):\n     \
    \    The client OPTIONALLY supplies this attribute.  The Printer\n         object\
    \ MUST support this attribute.  It indicates whether jobs\n         from all users\
    \ or just the jobs submitted by the requesting\n         user of this request\
    \ MUST be considered as candidate jobs to be\n         returned by the Printer\
    \ object.  If the client does not supply\n         this attribute, the Printer\
    \ object MUST respond as if the\n         client had supplied the attribute with\
    \ a value of 'false',\n         i.e., jobs from all users.  The means for authenticating\
    \ the\n         requesting user and matching the jobs is described in section\n\
    \         8.\n"
- title: 3.2.6.2 Get-Jobs Response
  contents:
  - "3.2.6.2 Get-Jobs Response\n   The Printer object returns all of the Job objects\
    \ up to the number\n   specified by the \"limit\" attribute that match the criteria\
    \ as defined\n   by the attribute values supplied by the client in the request.\
    \  It is\n   possible that no Job objects are returned since there may literally\n\
    \   be no Job objects at the Printer, or there may be no Job objects that\n  \
    \ match the criteria supplied by the client.  If the client requests\n   any Job\
    \ attributes at all, there is a set of Job Object Attributes\n   returned for\
    \ each Job object.\n   It is not an error for the Printer to return 0 jobs. If\
    \ the response\n   returns 0 jobs because there are no jobs matching the criteria,\
    \ and\n   the request would have returned 1 or more jobs with a status code of\n\
    \   'successful-ok' if there had been jobs matching the criteria, then\n   the\
    \ status code for 0 jobs MUST be 'successful-ok'.\n   Group 1: Operation Attributes\n\
    \      Status Message:\n        In addition to the REQUIRED status code returned\
    \ in every\n        response, the response OPTIONALLY includes a \"status-message\"\
    \n        (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n     \
    \   operation attribute as described in sections 13 and 3.1.6.\n      Natural\
    \ Language and Character Set:\n        The \"attributes-charset\" and \"attributes-natural-language\"\
    \n        attributes as described in section 3.1.4.2.\n   Group 2: Unsupported\
    \ Attributes\n      See section 3.1.7 for details on returning Unsupported Attributes.\n\
    \      The response NEED NOT contain the \"requested-attributes\" operation\n\
    \      attribute with any supplied values (attribute keywords) that were\n   \
    \   requested by the client but are not supported by the IPP object.\n      If\
    \ the Printer object does return unsupported attributes\n      referenced in the\
    \ \"requested-attributes\" operation attribute and\n      that attribute included\
    \ group names, such as 'all', the\n      unsupported attributes MUST NOT include\
    \ attributes described in\n      the standard but not supported by the implementation.\n\
    \   Groups 3 to N: Job Object Attributes\n      The Printer object responds with\
    \ one set of Job Object Attributes\n      for each returned Job object.  The Printer\
    \ object ignores (does\n      not respond with) any requested attribute or value\
    \ which is not\n      supported or which is restricted by the security policy\
    \ in force,\n      including whether the requesting user is the user that submitted\n\
    \      the job (job originating user) or not (see section 8).  However,\n    \
    \  the Printer object MUST respond with the 'unknown' value for any\n      supported\
    \ attribute (including all REQUIRED attributes) for which\n      the Printer object\
    \ does not know the value, unless it would\n      violate the security policy.\
    \  See the description of the \"out-of-\n      band\" values in the beginning\
    \ of Section 4.1.\n      Jobs are returned in the following order:\n      - If\
    \ the client requests all 'completed' Jobs (Jobs in the\n        'completed',\
    \ 'aborted', or 'canceled' states), then the Jobs are\n        returned newest\
    \ to oldest (with respect to actual completion\n        time)\n      - If the\
    \ client requests all 'not-completed' Jobs (Jobs in the\n        'pending', 'processing',\
    \ 'pending-held', and 'processing-\n        stopped' states), then Jobs are returned\
    \ in relative\n        chronological order of expected time to complete (based\
    \ on\n        whatever scheduling algorithm is configured for the Printer\n  \
    \      object).\n"
- title: 3.2.7 Pause-Printer Operation
  contents:
  - "3.2.7 Pause-Printer Operation\n   This OPTIONAL operation allows a client to\
    \ stop the Printer object\n   from scheduling jobs on all its devices.  Depending\
    \ on\n   implementation, the Pause-Printer operation MAY also stop the Printer\n\
    \   from processing the current job or jobs.  Any job that is currently\n   being\
    \ printed is either stopped as soon as the implementation permits\n   or is completed,\
    \ depending on implementation.  The Printer object\n   MUST still accept create\
    \ operations to create new jobs, but MUST\n   prevent any jobs from entering the\
    \ 'processing' state.\n   If the Pause-Printer operation is supported, then the\
    \ Resume-Printer\n   operation MUST be supported, and vice-versa.\n   The IPP\
    \ Printer stops the current job(s) on its device(s) that were\n   in the 'processing'\
    \ or 'processing-stopped' states as soon as the\n   implementation permits.  If\
    \ the implementation will take appreciable\n   time to stop, the IPP Printer adds\
    \ the 'moving-to-paused' value to\n   the Printer object's \"printer-state-reasons\"\
    \ attribute (see section\n   4.4.12).  When the device(s) have all stopped, the\
    \ IPP Printer\n   transitions the Printer object to the 'stopped' state, removes\
    \ the\n   'moving-to-paused' value, if present, and adds the 'paused' value to\n\
    \   the Printer object's \"printer-state-reasons\" attribute.\n   When the current\
    \ job(s) complete that were in the 'processing' state,\n   the IPP Printer transitions\
    \ them to the 'completed' state.  When the\n   current job(s) stop in mid processing\
    \ that were in the 'processing'\n   state, the IPP Printer transitions them to\
    \ the 'processing-stopped'\n   state and adds the 'printer-stopped' value to the\
    \ job's \"job-state-\n   reasons\" attribute.\n   For any jobs that are 'pending'\
    \ or 'pending-held', the 'printer-\n   stopped' value of the jobs' \"job-state-reasons\"\
    \ attribute also\n   applies.  However, the IPP Printer NEED NOT update those\
    \ jobs' \"job-\n   state-reasons\" attributes and only need return the 'printer-stopped'\n\
    \   value when those jobs are queried (so-called \"lazy evaluation\").\n   Whether\
    \ the Pause-Printer operation affects jobs that were submitted\n   to the device\
    \ from other sources than the IPP Printer object in the\n   same way that the\
    \ Pause-Printer operation affects jobs that were\n   submitted to the IPP Printer\
    \ object using IPP, depends on\n   implementation, i.e., on whether the IPP protocol\
    \ is being used as a\n   universal management protocol or just to manage IPP jobs,\n\
    \   respectively.\n   The IPP Printer MUST accept the request in any state and\
    \ transition\n   the Printer to the indicated new \"printer-state\" before returning\
    \ as\n   follows:\n     Current        New      \"printer   IPP Printer's response\
    \ status\n    \"printer-    \"printer-   -state-          code and action:\n \
    \    state\"       state\"    reasons\"\n  'idle'       'stopped'    'paused'\
    \  'successful-ok'\n  'processing' 'processing' 'moving-  OPTION 1: 'successful-ok';\n\
    \                              to-       Later, when all output has\n        \
    \                      paused'   stopped, the \"printer-state\"\n            \
    \                            becomes 'stopped', and the\n                    \
    \                    'paused' value replaces the\n                           \
    \             'moving-to-paused' value in the\n                              \
    \          \"printer-state-reasons\"\n                                       \
    \ attribute\n  'processing' 'stopped'    'paused'  OPTION 2: 'successful-ok';\n\
    \                                        all device output stopped\n         \
    \                               immediately\n  'stopped'    'stopped'    'paused'\
    \  'successful-ok'\n   Access Rights: The authenticated user (see section 8.3)\
    \ performing\n   this operation must be an operator or administrator of the Printer\n\
    \   object (see Sections 1 and 8.5).   Otherwise, the IPP Printer MUST\n   reject\
    \ the operation and return:  'client-error-forbidden', 'client-\n   error-not-authenticated',\
    \ or 'client-error-not-authorized' as\n   appropriate.\n"
- title: 3.2.7.1 Pause-Printer Request
  contents:
  - "3.2.7.1 Pause-Printer Request\n   The following groups of attributes are part\
    \ of the Pause-Printer\n   Request:\n   Group 1: Operation Attributes\n      Natural\
    \ Language and Character Set:\n        The \"attributes-charset\" and \"attributes-natural-language\"\
    \n        attributes as described in section 3.1.4.1.\n      Target:\n       \
    \ The \"printer-uri\" (uri) operation attribute which is the target\n        for\
    \ this operation as described in section 3.1.5.\n      Requesting User Name:\n\
    \        The \"requesting-user-name\" (name(MAX)) attribute SHOULD be\n      \
    \  supplied by the client as described in section 8.3.\n"
- title: 3.2.7.2 Pause-Printer Response
  contents:
  - "3.2.7.2 Pause-Printer Response\n   The following groups of attributes are part\
    \ of the Pause-Printer\n   Response:\n   Group 1: Operation Attributes\n     \
    \ Status Message:\n        In addition to the REQUIRED status code returned in\
    \ every\n        response, the response OPTIONALLY includes a \"status-message\"\
    \n        (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n     \
    \   operation attribute as described in sections 13 and  3.1.6.\n      Natural\
    \ Language and Character Set:\n        The \"attributes-charset\" and \"attributes-natural-language\"\
    \n        attributes as described in section 3.1.4.2.\n   Group 2: Unsupported\
    \ Attributes\n      See section 3.1.7 for details on returning Unsupported Attributes.\n"
- title: 3.2.8 Resume-Printer Operation
  contents:
  - "3.2.8 Resume-Printer Operation\n   This operation allows a client to resume the\
    \ Printer object\n   scheduling jobs on all its devices.  The Printer object MUST\
    \ remove\n   the 'paused' and 'moving-to-paused' values from the Printer object's\n\
    \   \"printer-state-reasons\" attribute, if present.  If there are no other\n\
    \   reasons to keep a device paused (such as media-jam), the IPP Printer\n   is\
    \ free to transition itself to the 'processing' or 'idle' states,\n   depending\
    \ on whether there are jobs to be processed or not,\n   respectively, and the\
    \ device(s) resume processing jobs.\n   If the Pause-Printer operation is supported,\
    \ then the Resume-Printer\n   operation MUST be supported, and vice-versa.\n \
    \  The IPP Printer removes the 'printer-stopped' value from any job's\n   \"job-state-reasons\"\
    \ attributes contained in that Printer.\n   The IPP Printer MUST accept the request\
    \ in any state, transition the\n   Printer object to the indicated new state as\
    \ follows:\n     Current    New \"printer-  IPP Printer's response status code\
    \ and\n    \"printer-      state\"                     action:\n      state\"\n\
    \   'idle'       'idle'         'successful-ok'\n   'processing' 'processing'\
    \   'successful-ok'\n   'stopped'    'processing'   'successful-ok';\n       \
    \                        when there are jobs to be processed\n   'stopped'   \
    \ 'idle'         'successful-ok';\n                               when there are\
    \ no jobs to be processed.\n   Access Rights: The authenticated user (see section\
    \ 8.3) performing\n   this operation must be an operator or administrator of the\
    \ Printer\n   object (see Sections 1 and 8.5).  Otherwise, the IPP Printer MUST\n\
    \   reject the operation and return:  'client-error-forbidden', 'client-\n   error-not-authenticated',\
    \ or 'client-error-not-authorized' as\n   appropriate.\n   The Resume-Printer\
    \ Request and Resume-Printer Response have the same\n   attribute groups and attributes\
    \ as the Pause-Printer operation (see\n   sections 3.2.7.1 and 3.2.7.2).\n"
- title: 3.2.9 Purge-Jobs Operation
  contents:
  - "3.2.9 Purge-Jobs Operation\n   This OPTIONAL operation allows a client to remove\
    \ all jobs from an\n   IPP Printer object, regardless of their job states, including\
    \ jobs in\n   the Printer object's Job History (see Section 4.3.7.2).  After a\n\
    \   Purge-Jobs operation has been performed, a Printer object MUST return\n  \
    \ no jobs in subsequent Get-Job-Attributes and Get-Jobs responses\n   (until new\
    \ jobs are submitted).\n   Whether the Purge-Jobs (and Get-Jobs) operation affects\
    \ jobs that\n   were submitted to the device from other sources than the IPP Printer\n\
    \   object in the same way that the Purge-Jobs operation affects jobs\n   that\
    \ were submitted to the IPP Printer object using IPP, depends on\n   implementation,\
    \ i.e., on whether the IPP protocol is being used as a\n   universal management\
    \ protocol or just to manage IPP jobs,\n   respectively.\n   Note:  if an operator\
    \ wants to cancel all jobs without clearing out\n   the Job History, the operator\
    \ uses the Cancel-Job operation on each\n   job instead of using the Purge-Jobs\
    \ operation.\n   The Printer object MUST accept this operation in any state and\n\
    \   transition the Printer object to the 'idle' state.\n   Access Rights: The\
    \ authenticated user (see section 8.3) performing\n   this operation must be an\
    \ operator or administrator of the Printer\n   object (see Sections 1 and 8.5).\
    \  Otherwise, the IPP object MUST\n   reject the operation and return: client-error-forbidden,\
    \ client-\n   error-not-authenticated, and client-error-not-authorized as\n  \
    \ appropriate.\n   The Purge-Jobs Request and Purge-Jobs Response have the same\n\
    \   attribute groups and attributes as the Pause-Printer operation (see\n   sections\
    \ 3.2.7.1 and 3.2.7.2).\n"
- title: 3.3 Job Operations
  contents:
  - "3.3 Job Operations\n   All Job operations are directed at Job objects.  A client\
    \ MUST always\n   supply some means of identifying the Job object in order to\
    \ identify\n   the correct target of the operation.  That job identification MAY\n\
    \   either be a single Job URI or a combination of a Printer URI with a\n   Job\
    \ ID.  The IPP object implementation MUST support both forms of\n   identification\
    \ for every job.\n"
- title: 3.3.1 Send-Document Operation
  contents:
  - "3.3.1 Send-Document Operation\n   This OPTIONAL operation allows a client to\
    \ create a multi-document\n   Job object that is initially \"empty\" (contains\
    \ no documents).  In the\n   Create-Job response, the Printer object returns the\
    \ Job object's URI\n   (the \"job-uri\" attribute) and the Job object's 32-bit\
    \ identifier (the\n   \"job-id\" attribute).  For each new document that the client\
    \ desires\n   to add, the client uses a Send-Document operation.  Each Send-\n\
    \   Document Request contains the entire stream of document data for one\n   document.\n\
    \   If the Printer supports this operation but does not support multiple\n   documents\
    \ per job, the Printer MUST reject subsequent Send-Document\n   operations supplied\
    \ with data and return the 'server-error-multiple-\n   document-jobs-not-supported'.\
    \  However, the Printer MUST accept the\n   first document with a 'true' or 'false'\
    \ value for the \"last-document\"\n   operation attribute (see below), so that\
    \ clients MAY always submit\n   one document jobs with a 'false' value for \"\
    last-document\" in the\n   first Send-Document and a 'true' for \"last-document\"\
    \ in the second\n   Send-Document (with no data).\n   Since the Create-Job and\
    \ the send operations (Send-Document or Send-\n   URI operations) that follow\
    \ could occur over an arbitrarily long\n   period of time for a particular job,\
    \ a client MUST send another send\n   operation within an IPP Printer defined\
    \ minimum time interval after\n   the receipt of the previous request for the\
    \ job.  If a Printer object\n   supports the Create-Job and Send-Document operations,\
    \ the Printer\n   object MUST support the \"multiple-operation-time-out\" attribute\
    \ (see\n   section 4.4.31).  This attribute indicates the minimum number of\n\
    \   seconds the Printer object will wait for the next send operation\n   before\
    \ taking some recovery action.\n   An IPP object MUST recover from an errant client\
    \ that does not supply\n   a send operation, sometime after the minimum time interval\
    \ specified\n   by the Printer object's \"multiple-operation-time-out\" attribute.\n\
    \   Such recovery MAY include any of the following or other recovery\n   actions:\n\
    \      1. Assume that the Job is an invalid job, start the process of\n      \
    \   changing the job state to 'aborted', add the 'aborted-by-\n         system'\
    \ value to the job's \"job-state-reasons\" attribute (see\n         section 4.3.8),\
    \ and clean up all resources associated with the\n         Job.  In this case,\
    \ if another send operation is finally\n         received, the Printer responds\
    \ with an \"client-error-not-\n         possible\" or \"client-error-not-found\"\
    \ depending on whether or\n         not the Job object is still around when the\
    \ send operation\n         finally arrives.\n      2. Assume that the last send\
    \ operation received was in fact the\n         last document (as if the \"last-document\"\
    \ flag had been set to\n         'true'), close the Job object, and proceed to\
    \ process it (i.e.,\n         move the Job's state to 'pending').\n      3. Assume\
    \ that the last send operation received was in fact the\n         last document,\
    \ close the Job, but move it to the 'pending-held'\n         and add the 'submission-interrupted'\
    \ value to the job's \"job-\n         state-reasons\" attribute (see section 4.3.8).\
    \  This action\n         allows the user or an operator to determine whether to\
    \ continue\n         processing the Job by moving it back to the 'pending' state\n\
    \         using the Release-Job operation (see section 3.3.6) or to\n        \
    \ cancel the job using the Cancel-Job operation (see section\n         3.3.3).\n\
    \   Each implementation is free to decide the \"best\" action to take\n   depending\
    \ on local policy, whether any documents have been added,\n   whether the implementation\
    \ spools jobs or not,  and/or any other\n   piece of information available to\
    \ it.  If the choice is to abort the\n   Job object, it is possible that the Job\
    \ object may already have been\n   processed to the point that some media sheet\
    \ pages have been printed.\n   Access Rights: The authenticated user (see section\
    \ 8.3) performing\n   this operation must either be the job owner (as determined\
    \ in the\n   Create-Job operation) or an operator or administrator of the Printer\n\
    \   object (see Sections 1 and 8.5).  Otherwise, the IPP object MUST\n   reject\
    \ the operation and return: 'client-error-forbidden', 'client-\n   error-not-authenticated',\
    \ or 'client-error-not-authorized' as\n   appropriate.\n"
- title: 3.3.1.1 Send-Document Request
  contents:
  - "3.3.1.1 Send-Document Request\n   The following attribute sets are part of the\
    \ Send-Document Request:\n   Group 1: Operation Attributes\n      Natural Language\
    \ and Character Set:\n        The \"attributes-charset\" and \"attributes-natural-language\"\
    \n        attributes as described in section 3.1.4.1.\n      Target:\n       \
    \ Either (1) the \"printer-uri\" (uri) plus \"job-id\"\n        (integer(1:MAX))or\
    \ (2) the \"job-uri\" (uri) operation\n        attribute(s) which define the target\
    \ for this operation as\n        described in section 3.1.5.\n      Requesting\
    \ User Name:\n        The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n        supplied by the client as described in section 8.3.\n      \"document-name\"\
    \ (name(MAX)):\n        The client OPTIONALLY supplies this attribute.  The Printer\n\
    \        object MUST support this attribute.  It contains the client\n       \
    \ supplied document name.  The document name MAY be different than\n        the\
    \ Job name.  It might be helpful, but NEED NOT be unique\n        across multiple\
    \ documents in the same Job.  Typically, the\n        client software automatically\
    \ supplies the document name on\n        behalf of the end user by using a file\
    \ name or an application\n        generated name.  See the description of the\
    \ \"document-name\"\n        operation attribute in the Print-Job Request (section\
    \ 3.2.1.1)\n        for more information about this attribute.\n      \"compression\"\
    \ (type3 keyword):\n        See the description of \"compression\" for the Print-Job\
    \ operation\n        in Section 3.2.1.1.\n      \"document-format\" (mimeMediaType):\n\
    \        See the description of \"document-format\" for the Print-Job\n      \
    \  operation in Section 3.2.1.1.\n      \"document-natural-language\" (naturalLanguage):\n\
    \        The client OPTIONALLY supplies this attribute.  The Printer\n       \
    \ object OPTIONALLY supports this attribute.  This attribute\n        specifies\
    \ the natural language of the document for those\n        document-formats that\
    \ require a specification of the natural\n        language in order to image the\
    \ document unambiguously.  There\n        are no particular values required for\
    \ the Printer object to\n        support.\n      \"last-document\" (boolean):\n\
    \        The client MUST supply this attribute.  The Printer object MUST\n   \
    \     support this attribute. It is a boolean flag that is set to\n        'true'\
    \ if this is the last document for the Job, 'false'\n        otherwise.\n   Group\
    \ 2: Document Content\n      The client MUST supply the document data if the \"\
    last-document\"\n      flag is set to 'false'.  However, since a client might\
    \ not know\n      that the previous document sent with a Send-Document (or Send-URI)\n\
    \      operation was the last document (i.e., the \"last-document\"\n      attribute\
    \ was set to 'false'), it is legal to send a Send-Document\n      request with\
    \ no document data where the \"last-document\" flag is\n      set to 'true'. \
    \ Such a request MUST NOT increment the value of the\n      Job object's \"number-of-documents\"\
    \ attribute, since no real\n      document was added to the job.  It is not an\
    \ error for a client to\n      submit a job with no actual document data, i.e.,\
    \ only a single\n      Create-Job and Send-Document request with a \"last-document\"\
    \n      operation attribute set to 'true' with no document data.\n"
- title: 3.3.1.2 Send-Document Response
  contents:
  - "3.3.1.2 Send-Document Response\n   The following sets of attributes are part\
    \ of the Send-Document\n   Response:\n   Group 1: Operation Attributes\n     \
    \ Status Message:\n         In addition to the REQUIRED status code returned in\
    \ every\n         response, the response OPTIONALLY includes a \"status-message\"\
    \n         (text(255)) and/or a \"detailed-status-message\" (text(MAX))\n    \
    \     operation attribute as described in sections 13 and 3.1.6.\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in section 3.1.4.2.\n   Group 2: Unsupported\
    \ Attributes\n      See section 3.1.7 for details on returning Unsupported Attributes.\n\
    \   Group 3: Job Object Attributes\n      This is the same set of attributes as\
    \ described in the Print-Job\n      response (see section 3.2.1.2).\n"
- title: 3.3.2 Send-URI Operation
  contents:
  - "3.3.2 Send-URI Operation\n   This OPTIONAL operation is identical to the Send-Document\
    \ operation\n   (see section 3.3.1) except that a client MUST supply a URI reference\n\
    \   (\"document-uri\" operation attribute) rather than the document data\n   itself.\
    \  If a Printer object supports this operation, clients can use\n   both Send-URI\
    \ or Send-Document operations to add new documents to an\n   existing multi-document\
    \ Job object.  However, if a client needs to\n   indicate that the previous Send-URI\
    \ or Send-Document was the last\n   document,  the client MUST use the Send-Document\
    \ operation with no\n   document data and the \"last-document\" flag set to 'true'\
    \ (rather than\n   using a Send-URI operation with no \"document-uri\" operation\n\
    \   attribute).\n   If a Printer object supports this operation, it MUST also\
    \ support the\n   Print-URI operation (see section 3.2.2).\n   The Printer object\
    \ MUST validate the syntax and URI scheme of the\n   supplied URI before returning\
    \ a response, just as in the Print-URI\n   operation.  The IPP Printer MAY validate\
    \ the accessibility of the\n   document as part of the operation or subsequently\
    \ (see section\n   3.2.2).\n"
- title: 3.3.3 Cancel-Job Operation
  contents:
  - "3.3.3 Cancel-Job Operation\n   This REQUIRED operation allows a client to cancel\
    \ a Print Job from\n   the time the job is created up to the time it is completed,\
    \ canceled,\n   or aborted.  Since a Job might already be printing by the time\
    \ a\n   Cancel-Job is received, some media sheet pages might be printed\n   before\
    \ the job is actually terminated.\n   The IPP object MUST accept or reject the\
    \ request based on the job's\n   current state and transition the job to the indicated\
    \ new state as\n   follows:\n       Current \"job-    New \"job-     IPP object's\
    \ response status\n           state\"         state\"             code and action:\n\
    \      'pending'       'canceled'     'successful-ok'\n      'pending-held'  'canceled'\
    \     'successful-ok'\n      'processing'    'canceled'     'successful-ok'\n\
    \      'processing'    'processing'   'successful-ok'  See Rule 1\n      'processing'\
    \    'processing'   'client-error-not-possible'\n                            \
    \         See Rule 2\n      'processing-    'canceled'     'successful-ok'\n \
    \     stopped'\n      'processing-    'processing-   'successful-ok'  See Rule\
    \ 1\n      stopped'        stopped'\n      'processing-    'processing-   'client-error-not-possible'\n\
    \      stopped'        stopped'       See Rule 2\n      'completed'     'completed'\
    \    'client-error-not-possible'\n      'canceled'      'canceled'     'client-error-not-possible'\n\
    \      'aborted'       'aborted'      'client-error-not-possible'\n   Rule 1:\
    \  If the implementation requires some measurable time to\n   cancel the job in\
    \ the 'processing' or 'processing-stopped' job\n   states, the IPP object MUST\
    \ add the 'processing-to-stop-point' value\n   to the job's \"job-state-reasons\"\
    \ attribute and then transition the\n   job to the 'canceled' state when the processing\
    \ ceases (see section\n   4.3.8).\n   Rule 2:  If the Job object already has the\
    \ 'processing-to-stop-point'\n   value in its \"job-state-reasons\" attribute,\
    \ then the Printer object\n   MUST reject a Cancel-Job operation.\n   Access Rights:\
    \ The authenticated user (see section 8.3) performing\n   this operation must\
    \ either be the job owner or an operator or\n   administrator of the Printer object\
    \ (see Sections 1 and 8.5).\n   Otherwise, the IPP object MUST reject the operation\
    \ and return:\n    'client-error-forbidden', 'client-error-not-authenticated',\
    \ or\n   'client-error-not-authorized' as appropriate.\n"
- title: 3.3.3.1 Cancel-Job Request
  contents:
  - "3.3.3.1 Cancel-Job Request\n   The following groups of attributes are part of\
    \ the Cancel-Job\n   Request:\n   Group 1: Operation Attributes\n      Natural\
    \ Language and Character Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in section 3.1.4.1.\n      Target:\n      \
    \   Either (1) the \"printer-uri\" (uri) plus \"job-id\"\n         (integer(1:MAX))or\
    \ (2) the \"job-uri\" (uri) operation\n         attribute(s) which define the\
    \ target for this operation as\n         described in section 3.1.5.\n      Requesting\
    \ User Name:\n         The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n         supplied by the client as described in section 8.3.\n      \"message\"\
    \ (text(127)):\n         The client OPTIONALLY supplies this attribute.  The Printer\n\
    \         object OPTIONALLY supports this attribute. It is a message to\n    \
    \     the operator.  This \"message\" attribute is not the same as the\n     \
    \    \"job-message-from-operator\" attribute.  That attribute is used\n      \
    \   to report a message from the operator to the end user that\n         queries\
    \ that attribute.  This \"message\" operation attribute is\n         used to send\
    \ a message from the client to the operator along\n         with the operation\
    \ request.  It is an implementation decision\n         of how or where to display\
    \ this message to the operator (if at\n         all).\n"
- title: 3.3.3.2 Cancel-Job Response
  contents:
  - "3.3.3.2 Cancel-Job Response\n   The following sets of attributes are part of\
    \ the Cancel-Job Response:\n   Group 1: Operation Attributes\n      Status Message:\n\
    \         In addition to the REQUIRED status code returned in every\n        \
    \ response, the response OPTIONALLY includes a \"status-message\"\n         (text(255))\
    \ and/or a \"detailed-status-message\" (text(MAX))\n         operation attribute\
    \ as described in sections 13 and 3.1.6.\n      Natural Language and Character\
    \ Set:\n         The \"attributes-charset\" and \"attributes-natural-language\"\
    \n         attributes as described in section 3.1.4.2.\n   Group 2: Unsupported\
    \ Attributes\n      See section 3.1.7 for details on returning Unsupported Attributes.\n\
    \   Once a successful response has been sent, the implementation\n   guarantees\
    \ that the Job will eventually end up in the 'canceled'\n   state. Between the\
    \ time of the Cancel-Job operation is accepted and\n   when the job enters the\
    \ 'canceled' job-state (see section 4.3.7), the\n   \"job-state-reasons\" attribute\
    \ SHOULD contain the 'processing-to-\n   stop-point'\n   value which indicates\
    \ to later queries that although the Job might\n   still be 'processing', it will\
    \ eventually end up in the\n   'canceled' state, not the 'completed' state.\n"
- title: 3.3.4 Get-Job-Attributes Operation
  contents:
  - "3.3.4 Get-Job-Attributes Operation\n   This REQUIRED operation allows a client\
    \ to request the values of\n   attributes of a Job object and it is almost identical\
    \ to the Get-\n   Printer-Attributes operation (see section 3.2.5).  The only\n\
    \   differences are that the operation is directed at a Job object rather\n  \
    \ than a Printer object, there is no \"document-format\" operation\n   attribute\
    \ used when querying a Job object, and the returned attribute\n   group is a set\
    \ of Job object attributes rather than a set of Printer\n   object attributes.\n\
    \   For Jobs, the possible names of attribute groups are:\n      - 'job-template':\
    \ the subset of the Job Template attributes that\n        apply to a Job object\
    \ (the first column of the table in Section\n        4.2) that the implementation\
    \ supports for Job objects.\n      - 'job-description': the subset of the Job\
    \ Description attributes\n        specified in Section 4.3 that the implementation\
    \ supports for\n        Job objects.\n      - 'all': the special group 'all' that\
    \ includes all attributes that\n        the implementation supports for Job objects.\n\
    \   Since a client MAY request specific attributes or named groups, there\n  \
    \ is a potential that there is some overlap.  For example, if a client\n   requests,\
    \ 'job-name' and 'job-description', the client is actually\n   requesting the\
    \ \"job-name\" attribute once by naming it explicitly, and\n   once by inclusion\
    \ in the 'job-description' group.  In such cases, the\n   Printer object NEED\
    \ NOT return the attribute only once in the\n   response even if it is requested\
    \ multiple times.  The client SHOULD\n   NOT request the same attribute in multiple\
    \ ways.\n   It is NOT REQUIRED that a Job object support all attributes belonging\n\
    \   to a group (since some attributes are OPTIONAL).  However it is\n   REQUIRED\
    \ that each Job object support all these group names.\n"
- title: 3.3.4.1 Get-Job-Attributes Request
  contents:
  - "3.3.4.1 Get-Job-Attributes Request\n   The following groups of attributes are\
    \ part of the Get-Job-Attributes\n   Request when the request is directed at a\
    \ Job object:\n   Group 1: Operation Attributes\n      Natural Language and Character\
    \ Set:\n        The \"attributes-charset\" and \"attributes-natural-language\"\
    \n        attributes as described in section 3.1.4.1.\n      Target:\n       \
    \ Either (1) the \"printer-uri\" (uri) plus \"job-id\"\n        (integer(1:MAX))\
    \ or (2) the \"job-uri\" (uri) operation\n        attribute(s) which define the\
    \ target for this operation as\n        described in section 3.1.5.\n      Requesting\
    \ User Name:\n        The \"requesting-user-name\" (name(MAX)) attribute SHOULD\
    \ be\n        supplied by the client as described in section 8.3.\n      \"requested-attributes\"\
    \ (1setOf keyword):\n        The client OPTIONALLY supplies this attribute.  The\
    \ IPP object\n        MUST support this attribute.   It is a set of attribute\
    \ names\n        and/or attribute group names in whose values the requester is\n\
    \        interested.  If the client omits this attribute, the IPP object\n   \
    \     MUST respond as if this attribute had been supplied with a value\n     \
    \   of 'all'.\n"
- title: 3.3.4.2 Get-Job-Attributes Response
  contents:
  - "3.3.4.2 Get-Job-Attributes Response\n   The Printer object returns the following\
    \ sets of attributes as part\n   of the Get-Job-Attributes Response:\n   Group\
    \ 1: Operation Attributes\n      Status Message:\n         In addition to the\
    \ REQUIRED status code returned in every\n         response, the response OPTIONALLY\
    \ includes a \"status-message\"\n         (text(255)) and/or a \"detailed-status-message\"\
    \ (text(MAX))\n         operation attribute as described in sections 13 and 3.1.6.\n\
    \      Natural Language and Character Set:\n         The \"attributes-charset\"\
    \ and \"attributes-natural-language\"\n         attributes as described in section\
    \ 3.1.4.2.  The \"attributes-\n         natural-language\" MAY be the natural\
    \ language of the Job\n         object, rather than the one requested.\n   Group\
    \ 2: Unsupported Attributes\n      See section 3.1.7 for details on returning\
    \ Unsupported Attributes.\n      The response NEED NOT contain the \"requested-attributes\"\
    \ operation\n      attribute with any supplied values (attribute keywords) that\
    \ were\n      requested by the client but are not supported by the IPP object.\n\
    \      If the Printer object does return unsupported attributes\n      referenced\
    \ in the \"requested-attributes\" operation attribute and\n      that attribute\
    \ included group names, such as 'all', the\n      unsupported attributes MUST\
    \ NOT include attributes described in\n      the standard but not supported by\
    \ the implementation.\n   Group 3: Job Object Attributes\n      This is the set\
    \ of requested attributes and their current values.\n      The IPP object ignores\
    \ (does not respond with) any requested\n      attribute or value which is not\
    \ supported or which is restricted\n      by the security policy in force, including\
    \ whether the requesting\n      user is the user that submitted the job (job originating\
    \ user) or\n      not (see section 8).  However, the IPP object MUST respond with\n\
    \      the 'unknown' value for any supported attribute (including all\n      REQUIRED\
    \ attributes) for which the IPP object does not know the\n      value, unless\
    \ it would violate the security policy.  See the\n      description of the \"\
    out-of-band\" values in the beginning of\n      Section 4.1.\n"
- title: 3.3.5 Hold-Job Operation
  contents:
  - "3.3.5 Hold-Job Operation\n   This OPTIONAL operation allows a client to hold\
    \ a pending job in the\n   queue so that it is not eligible for scheduling.  If\
    \ the Hold-Job\n   operation is supported, then the Release-Job operation MUST\
    \ be\n   supported, and vice-versa.  The OPTIONAL \"job-hold-until\" operation\n\
    \   attribute allows a client to specify whether to hold the job\n   indefinitely\
    \ or until a specified time period, if supported.\n   The IPP object MUST accept\
    \ or reject the request based on the job's\n   current state and transition the\
    \ job to the indicated new state as\n   follows:\n        Current \"job-     New\
    \ \"job-state\"   IPP object's response status\n            state\"          \
    \                       code and action:\n      'pending'         'pending-held'\
    \     'successful-ok'  See Rule 1\n      'pending'         'pending'         \
    \ 'successful-ok'  See Rule 2\n      'pending-held'    'pending-held'     'successful-ok'\
    \  See Rule 1\n      'pending-held'    'pending'          'successful-ok'  See\
    \ Rule 2\n      'processing'      'processing'       'client-error-not-possible'\n\
    \      'processing-      'processing-       'client-error-not-possible'\n    \
    \  stopped'          stopped'\n      'completed'       'completed'        'client-error-not-possible'\n\
    \      'canceled'        'canceled'         'client-error-not-possible'\n    \
    \  'aborted'         'aborted'          'client-error-not-possible'\n   Rule 1:\
    \  If the implementation supports multiple reasons for a job to\n   be in the\
    \ 'pending-held' state, the IPP object MUST add the 'job-\n   hold-until-specified'\
    \ value to the job's \"job-state-reasons\"\n   attribute.\n   Rule 2:  If the\
    \ IPP object supports the \"job-hold-until\" operation\n   attribute, but the\
    \ specified time period has already started (or is\n   the 'no-hold' value) and\
    \ there are no other reasons to hold the job,\n   the IPP object MUST make the\
    \ job be a candidate for processing\n   immediately (see Section 4.2.2) by putting\
    \ the job in the 'pending'\n   state.\n   Note:  In order to keep the Hold-Job\
    \ operation simple, such a request\n   is rejected when the job is in the 'processing'\
    \ or 'processing-\n   stopped' states.  If an operation is needed to hold jobs\
    \ while in\n   these states, it will be added as an additional operation, rather\n\
    \   than overloading the Hold-Job operation.  Then it is clear to clients\n  \
    \ by querying the Printer object's \"operations-supported\" (see Section\n   4.4.15)\
    \ and the Job object's \"job-state\" (see Section 4.3.7)\n   attributes which\
    \ operations are possible.\n   Access Rights: The authenticated user (see section\
    \ 8.3) performing\n   this operation must either be the job owner or an operator\
    \ or\n   administrator of the Printer object (see Sections 1 and 8.5).\n   Otherwise,\
    \ the IPP object MUST reject the operation and return:\n   'client-error-forbidden',\
    \ 'client-error-not-authenticated', or\n   'client-error-not-authorized' as appropriate.\n"
- title: 3.3.5.1 Hold-Job Request
  contents:
  - "3.3.5.1 Hold-Job Request\n   The groups and operation attributes are the same\
    \ as for a Cancel-Job\n   request (see section 3.3.3.1), with the addition of\
    \ the following\n   Group 1 Operation attribute:\n      \"job-hold-until\" (type3\
    \ keyword | name(MAX)):\n         The client OPTIONALLY supplies this Operation\
    \ attribute.  The\n         IPP object MUST support this operation attribute in\
    \ a Hold-Job\n         request, if it supports the \"job-hold-until\" Job template\n\
    \         attribute in create operations.  See section 4.2.2.  The IPP\n     \
    \    object SHOULD support the \"job-hold-until\" Job Template\n         attribute\
    \ for use in job create operations with at least the\n         'indefinite' value,\
    \ if it supports the Hold-Job operation.\n         Otherwise, a client cannot\
    \ create a job and hold it immediately\n         (without picking some supported\
    \ time period in the future).\n         If supplied and supported as specified\
    \ in the Printer's \"job-\n         hold-until-supported\" attribute, the IPP\
    \ object copies the\n         supplied operation attribute to the Job object,\
    \ replacing the\n         job's previous \"job-hold-until\" attribute, if present,\
    \ and\n         makes the job a candidate for scheduling during the supplied\n\
    \         named time period.\n         If supplied, but either the \"job-hold-until\"\
    \ Operation\n         attribute itself or the value supplied is not supported,\
    \ the\n         IPP object accepts the request, returns the unsupported\n    \
    \     attribute or value in the Unsupported Attributes Group\n         according\
    \ to section 3.1.7, returns the 'successful-ok-\n         ignored-or-substituted-attributes,\
    \ and holds the job\n         indefinitely until a client performs a subsequent\
    \ Release-Job\n         operation.\n         If the client (1) supplies a value\
    \ that specifies a time period\n         that has already started or the 'no-hold'\
    \ value (meaning don't\n         hold the job) and (2) the IPP object supports\
    \ the \"job-hold-\n         until\" operation attribute and there are no other\
    \ reasons to\n         hold the job, the IPP object MUST accept the operation\
    \ and make\n         the job be a candidate for processing immediately (see Section\n\
    \         4.2.2).\n         If the client does not supply a \"job-hold-until\"\
    \ Operation\n         attribute in the request, the IPP object MUST populate the\
    \ job\n         object with a \"job-hold-until\" attribute with the 'indefinite'\n\
    \         value (if IPP object supports the \"job-hold-until\" attribute)\n  \
    \       and hold the job indefinitely, until a client performs a\n         Release-Job\
    \ operation.\n"
- title: 3.3.5.2 Hold-Job Response
  contents:
  - "3.3.5.2 Hold-Job Response\n   The groups and attributes are the same as for a\
    \ Cancel-Job response\n   (see section 3.3.3.2).\n"
- title: 3.3.6 Release-Job Operation
  contents:
  - "3.3.6 Release-Job Operation\n   This OPTIONAL operation allows a client to release\
    \ a previously held\n   job so that it is again eligible for scheduling.  If the\
    \ Hold-Job\n   operation is supported, then the Release-Job operation MUST be\n\
    \   supported, and vice-versa.\n   This operation removes the \"job-hold-until\"\
    \ job attribute, if\n   present, from the job object that had been supplied in\
    \ the create or\n   most recent Hold-Job or Restart-Job operation and removes\
    \ its effect\n   on the job.  The IPP object MUST remove the 'job-hold-until-\n\
    \   specified' value from the job's \"job-state-reasons\" attribute, if\n   present.\
    \  See section 4.3.8.\n   The IPP object MUST accept or reject the request based\
    \ on the job's\n   current state and transition the job to the indicated new state\
    \ as\n   follows:\n        Current \"job-   New \"job-state\"    IPP object's\
    \ response status\n           state\"                                code and\
    \ action:\n      'pending'        'pending'        'successful-ok'\n         \
    \                                No effect on the job.\n      'pending-held' \
    \  'pending-held'   'successful-ok'  See Rule 1\n      'pending-held'   'pending'\
    \        'successful-ok'\n      'processing'     'processing'     'successful-ok'\n\
    \                                         No effect on the job.\n      'processing-\
    \     'processing-     'successful-ok'\n       stopped'         stopped'     \
    \    No effect on the job.\n      'completed'      'completed'      'client-error-not-possible'\n\
    \      'canceled'       'canceled'       'client-error-not-possible'\n      'aborted'\
    \        'aborted'        'client-error-not-possible'\n   Rule 1:  If there are\
    \ other reasons to keep the job in the 'pending-\n   held' state, such as 'resources-are-not-ready',\
    \ the job remains in\n   the 'pending-held' state.  Thus the 'pending-held' state\
    \ is not just\n   for jobs that have the 'job-hold-until' applied to them, but\
    \ are for\n   any reason to keep the job from being a candidate for scheduling\
    \ and\n   processing, such as 'resources-are-not-ready'.  See the \"job-hold-\n\
    \   until\" attribute (section 4.2.2).\n   Access Rights: The authenticated user\
    \ (see section 8.3) performing\n   this operation must either be the job owner\
    \ or an operator or\n   administrator of the Printer object (see Sections 1 and\
    \ 8.5).\n   Otherwise, the IPP object MUST reject the operation and return:\n\
    \   'client-error-forbidden', 'client-error-not-authenticated', or\n   'client-error-not-authorized'\
    \ as appropriate.\n   The Release-Job Request and Release-Job Response have the\
    \ same\n   attribute groups and attributes as the Cancel-Job operation (see\n\
    \   section 3.3.3.1 and 3.3.3.2).\n"
- title: 3.3.7 Restart-Job Operation
  contents:
  - "3.3.7 Restart-Job Operation\n   This OPTIONAL operation allows a client to restart\
    \ a job that is\n   retained in the queue after processing has completed (see\
    \ section\n   4.3.7.2).\n   The job is moved to the 'pending' or 'pending-held'\
    \ job state and\n   restarts at the beginning on the same IPP Printer object with\
    \ the\n   same attribute values.  If any of the documents in the job were\n  \
    \ passed by reference (Print-URI or Send-URI), the Printer MUST re-\n   fetch\
    \ the data, since the semantics of Restart-Job are to repeat all\n   Job processing.\
    \  The Job Description attributes that accumulate job\n   progress, such as \"\
    job-impressions-completed\", \"job-media-sheets-\n   completed\", and \"job-k-octets-processed\"\
    , MUST be reset to 0 so that\n   they give an accurate record of the job from\
    \ its restart point.  The\n   job object MUST continue to use the same \"job-uri\"\
    \ and \"job-id\"\n   attribute values.\n   Note:  If in the future an operation\
    \ is needed that does not reset\n   the job progress attributes, then a new operation\
    \ will be defined\n   which makes a copy of the job, assigns a new \"job-uri\"\
    \ and \"job-id\"\n   to the copy and resets the job progress attributes in the\
    \ new copy\n   only.\n   The IPP object MUST accept or reject the request based\
    \ on the job's\n   current state, transition the job to the indicated new state\
    \ as\n   follows:\n        Current \"job-   New \"job-state\"    IPP object's\
    \ response status\n           state\"                                code and\
    \ action:\n      'pending'        'pending'        'client-error-not-possible'\n\
    \      'pending-held'   'pending-held'   'client-error-not-possible'\n      'processing'\
    \     'processing'     'client-error-not-possible'\n      'processing-     'processing-\
    \     'client-error-not-possible'\n      stopped'         stopped'\n      'completed'\
    \      'pending' or     'successful-ok' - job is started\n                   \
    \     'pending-held'   over.\n      'completed'      'completed'      'client-error-not-possible'\
    \ -\n                                         see Rule 1\n      'canceled'   \
    \    'pending' or     'successful-ok' - job is started\n                     \
    \   'pending-held'   over.\n      'canceled'       'canceled'       'client-error-not-possible'\
    \ -\n                                         see Rule 1\n      'aborted'    \
    \    'pending' or     'successful-ok' - job is started\n                     \
    \   'pending-held'   over.\n      'aborted'        'aborted'        'client-error-not-possible'\
    \ -\n                                         see Rule 1\n   Rule 1:  If the Job\
    \ Retention Period has expired for the job in this\n   state, then the IPP object\
    \ rejects the operation.  See section\n   4.3.7.2.\n   Note:  In order to prevent\
    \ a user from inadvertently restarting a job\n   in the middle, the Restart-Job\
    \ request is rejected when the job is in\n   the 'processing' or 'processing-stopped'\
    \ states.  If in the future an\n   operation is needed to hold or restart jobs\
    \ while in these states, it\n   will be added as an additional operation, rather\
    \ than overloading the\n   Restart-Job operation, so that it is clear that the\
    \ user intended\n   that the current job not be completed.\n   Access Rights:\
    \ The authenticated user (see section 8.3) performing\n   this operation must\
    \ either be the job owner or an operator or\n   administrator of the Printer object\
    \ (see Sections 1 and 8.5).\n   Otherwise, the IPP object MUST reject the operation\
    \ and return:\n   'client-error-forbidden', 'client-error-not-authenticated',\
    \ or\n   'client-error-not-authorized' as appropriate.\n"
- title: 3.3.7.1 Restart-Job Request
  contents:
  - "3.3.7.1 Restart-Job Request\n   The groups and attributes are the same as for\
    \ a Cancel-Job request\n   (see section 3.3.3.1), with the addition of the following\
    \ Group 1\n   Operation attribute:\n      \"job-hold-until\" (type3 keyword |\
    \ name(MAX)):\n         The client OPTIONALLY supplies this attribute.  The IPP\
    \ object\n         MUST support this Operation attribute in a Restart-Job request,\n\
    \         if it supports the \"job-hold-until\" Job Template attribute in\n  \
    \       create operations.  See section 4.2.2.  Otherwise, the IPP\n         object\
    \ NEED NOT support the \"job-hold-until\" Operation\n         attribute in a Restart-Job\
    \ request.\n         If supplied and supported as specified in the Printer's \"\
    job-\n         hold-until-supported\" attribute, the IPP object copies the\n \
    \        supplied Operation attribute to the Job object, replacing the\n     \
    \    job's previous \"job-hold-until\" attribute, if present, and\n         makes\
    \ the job a candidate for scheduling during the supplied\n         named time\
    \ period.  See section 4.2.2.\n         If supplied, but the value is not supported,\
    \ the IPP object\n         accepts the request, returns the unsupported attribute\
    \ or value\n         in the Unsupported Attributes Group according to section\
    \ 3.1.7,\n         returns the 'successful-ok-ignored-or-substituted-attributes'\n\
    \         status code, and holds the job indefinitely until a client\n       \
    \  performs a subsequent Release-Job operation.\n         If supplied, but the\
    \ \"job-hold-until\" Operation attribute\n         itself is not supported, the\
    \ IPP object accepts the request,\n         returns the unsupported attribute\
    \ with the out-of-band\n         'unsupported' value in the Unsupported Attributes\
    \ Group\n         according to section 3.1.7, returns the 'successful-ok-\n  \
    \       ignored-or-substituted-attributes' status code, and restarts\n       \
    \  the job, i.e., ignores the \"job-hold-until\" attribute.\n         If the client\
    \ (1) supplies a value that specifies a time period\n         that has already\
    \ started or the 'no-hold' value (meaning don't\n         hold the job) and (2)\
    \ the IPP object supports the \"job-hold-\n         until\" operation attribute\
    \ and there are no other reasons to\n         hold the job, the IPP object makes\
    \ the job a candidate for\n         processing immediately (see Section 4.2.2).\n\
    \         If the client does not supply a \"job-hold-until\" operation\n     \
    \    attribute in the request, the IPP object removes the \"job-\n         hold-until\"\
    \ attribute, if present, from the job.  If there are\n         no other reasons\
    \ to hold the job, the Restart-Job operation\n         makes the job a candidate\
    \ for processing immediately (see\n         Section 4.2.2).\n"
- title: 3.3.7.2 Restart-Job Response
  contents:
  - "3.3.7.2 Restart-Job Response\n   The groups and attributes are the same as for\
    \ a Cancel-Job response\n   (see section 3.3.3.2).\n   Note:  In the future an\
    \ OPTIONAL Modify-Job or Set-Job-Attributes\n   operation may be specified that\
    \ allows the client to modify other\n   attributes before releasing the restarted\
    \ job.\n"
- title: 4. Object Attributes
  contents:
  - "4. Object Attributes\n   This section describes the attributes with their corresponding\n\
    \   attribute syntaxes and values that are part of the IPP model.  The\n   sections\
    \ below show the objects and their associated attributes which\n   are included\
    \ within the scope of this protocol.  Many of these\n   attributes are derived\
    \ from other relevant documents:\n      - Document Printing Application (DPA)\
    \ [ISO10175]\n      - RFC 1759 Printer MIB [RFC1759]\n   Each attribute is uniquely\
    \ identified in this document using a\n   \"keyword\" (see section 12.2.1) which\
    \ is the name of the attribute.\n   The keyword is included in the section header\
    \ describing that\n   attribute.\n   Note:  Not only are keywords used to identify\
    \ attributes, but one of\n   the attribute syntaxes described below is \"keyword\"\
    \ so that some\n   attributes have keyword values.  Therefore, these attributes\
    \ are\n   defined as having an attribute syntax that is a set of keywords.\n"
- title: 4.1 Attribute Syntaxes
  contents:
  - "4.1 Attribute Syntaxes\n   This section defines the basic attribute syntax types\
    \ that all\n   clients and IPP objects MUST be able to accept in responses and\n\
    \   accept in requests, respectively.  Each attribute description in\n   sections\
    \ 3 and 4 includes the name of attribute syntax(es) in the\n   heading (in parentheses).\
    \  A conforming implementation of an\n   attribute MUST include the semantics\
    \ of the attribute syntax(es) so\n   identified.  Section 6.3 describes how the\
    \ protocol can be extended\n   with new attribute syntaxes.\n   The attribute\
    \ syntaxes are specified in the following sub-sections,\n   where the sub-section\
    \ heading is the keyword name of the attribute\n   syntax inside the single quotes.\
    \  In operation requests and responses\n   each attribute value MUST be represented\
    \ as one of the attribute\n   syntaxes specified in the sub-section heading for\
    \ the attribute.  In\n   addition, the value of an attribute in a response (but\
    \ not in a\n   request) MAY be one of the \"out-of-band\" values whose special\n\
    \   encoding rules are defined in the \"Encoding and Transport\" document\n  \
    \ [RFC2910].   Standard \"out-of-band\" values are:\n      'unknown': The attribute\
    \ is supported by the IPP object, but the\n         value is unknown to the IPP\
    \ object for some reason.\n      'unsupported': The attribute is unsupported by\
    \ the IPP object.\n         This value MUST be returned only as the value of an\
    \ attribute\n         in the Unsupported Attributes Group.\n      'no-value':\
    \ The attribute is supported by the Printer object, but\n         the administrator\
    \ has not yet configured a value.\n   All attributes in a request MUST have one\
    \ or more values as defined\n   in Sections 4.2 to 4.4.  Thus clients MUST NOT\
    \ supply attributes with\n   \"out-of-band\" values for operations defined in\
    \ this document.  All\n   attributes in a response MUST have one or more values\
    \ as defined in\n   Sections 4.2 to 4.4 or a single \"out-of-band\" value.\n \
    \  Most attributes are defined to have a single attribute syntax.\n   However,\
    \ a few attributes (e.g., \"job-sheet\", \"media\", \"job-hold-\n   until\") are\
    \ defined to have several attribute syntaxes, depending on\n   the value.  These\
    \ multiple attribute syntaxes are separated by the\n   \"|\" character in the\
    \ sub-section heading to indicate the choice.\n   Since each value MUST be tagged\
    \ as to its attribute syntax in the\n   protocol, a single-valued attribute instance\
    \ may have any one of its\n   attribute syntaxes and a multi-valued attribute\
    \ instance may have a\n   mixture of its defined attribute syntaxes.\n"
- title: 4.1.1 'text'
  contents:
  - "4.1.1 'text'\n   A text attribute is an attribute whose value is a sequence of\
    \ zero or\n   more characters encoded in a maximum of 1023 ('MAX') octets.  MAX\
    \ is\n   the maximum length for each value of any text attribute.  However, if\n\
    \   an attribute will always contain values whose maximum length is much\n   less\
    \ than MAX, the definition of that attribute will include a\n   qualifier that\
    \ defines the maximum length for values of that\n   attribute.  For example: \
    \ the \"printer-location\" attribute is\n   specified as \"printer-location (text(127))\"\
    .  In this case, text\n   values for \"printer-location\" MUST NOT exceed 127\
    \ octets; if supplied\n   with a longer text string via some external interface\
    \ (other than the\n   protocol), implementations are free to truncate to this\
    \ shorter\n   length limitation.\n   In this document, all text attributes are\
    \ defined using the 'text'\n   syntax.  However, 'text' is used only for brevity;\
    \ the formal\n   interpretation of 'text' is: 'textWithoutLanguage |\n   textWithLanguage'.\
    \  That is, for any attribute defined in this\n   document using the 'text' attribute\
    \ syntax, all IPP objects and\n   clients MUST support both the 'textWithoutLanguage'\
    \ and\n   'textWithLanguage' attribute syntaxes.  However, in actual usage and\n\
    \   protocol execution, objects and clients accept and return only one of\n  \
    \ the two syntax per attribute.  The syntax 'text' never appears \"on-\n   the-wire\"\
    .\n   Both 'textWithoutLanguage' and 'textWithLanguage' are needed to\n   support\
    \ the real world needs of interoperability between sites and\n   systems that\
    \ use different natural languages as the basis for human\n   communication.  Generally,\
    \ one natural language applies to all text\n   attributes in a given request or\
    \ response. The language is indicated\n   by the \"attributes-natural-language\"\
    \ operation attribute defined in\n   section 3.1.4 or \"attributes-natural-language\"\
    \ job attribute defined\n   in section 4.3.20, and there is no need to identify\
    \ the natural\n   language for each text string on a value-by-value basis.  In\
    \ these\n   cases, the attribute syntax 'textWithoutLanguage' is used for text\n\
    \   attributes.  In other cases, the client needs to supply or the\n   Printer\
    \ object needs to return a text value in a natural language\n   that is different\
    \ from the rest of the text values in the request or\n   response.  In these cases,\
    \ the client or Printer object uses the\n   attribute syntax 'textWithLanguage'\
    \ for text attributes (this is the\n   Natural Language Override mechanism described\
    \ in section 3.1.4).\n   The 'textWithoutLanguage' and 'textWithLanguage' attribute\
    \ syntaxes\n   are described in more detail in the following sections.\n"
- title: 4.1.1.1 'textWithoutLanguage'
  contents:
  - "4.1.1.1 'textWithoutLanguage'\n   The 'textWithoutLanguage' syntax indicates\
    \ a value that is sequence\n   of zero or more characters encoded in a maximum\
    \ of 1023 (MAX) octets.\n   Text strings are encoded using the rules of some charset.\
    \  The\n   Printer object MUST support the UTF-8 charset [RFC2279] and MAY\n \
    \  support additional charsets to represent 'text' values, provided that\n   the\
    \ charsets are registered with IANA [IANA-CS].  See Section 4.1.7\n   for the\
    \ definition of the 'charset' attribute syntax, including\n   restricted semantics\
    \ and examples of charsets.\n"
- title: 4.1.1.2 'textWithLanguage'
  contents:
  - "4.1.1.2 'textWithLanguage'\n   The 'textWithLanguage' attribute syntax is a compound\
    \ attribute\n   syntax consisting of two parts: a 'textWithoutLanguage' part encoded\n\
    \   in a maximum of 1023 (MAX) octets plus an additional\n   'naturalLanguage'\
    \ (see section 4.1.8) part that overrides the natural\n   language in force. \
    \ The 'naturalLanguage' part explicitly identifies\n   the natural language that\
    \ applies to the text part of that value and\n   that value alone.  For any give\
    \ text attribute, the\n   'textWithoutLanguage' part is limited to the maximum\
    \ length defined\n   for that 'text' attribute, and the 'naturalLanguage' part\
    \ is always\n   limited to 63 (additional) octets.  Using the 'textWithLanguage'\n\
    \   attribute syntax rather than the normal 'textWithoutLanguage' syntax\n   is\
    \ the so-called Natural Language Override mechanism and MUST be\n   supported\
    \ by all IPP objects and clients.\n   If the attribute is multi-valued (1setOf\
    \ text), then the\n   'textWithLanguage' attribute syntax MUST be used to explicitly\n\
    \   specify each attribute value whose natural language needs to be\n   overridden.\
    \  Other values in a multi-valued 'text' attribute in a\n   request or a response\
    \ revert to the natural language of the operation\n   attribute.\n   In a create\
    \ request, the Printer object MUST accept and store with\n   the Job object any\
    \ natural language in the \"attributes-natural-\n   language\" operation attribute,\
    \ whether the Printer object supports\n   that natural language or not.  Furthermore,\
    \ the Printer object MUST\n   accept and store any 'textWithLanguage' attribute\
    \ value, whether the\n   Printer object supports that natural language or not.\
    \  These\n   requirements are independent of the value of the \"ipp-attribute-\n\
    \   fidelity\" operation attribute that the client MAY supply.\n   Example:  If\
    \ the client supplies the \"attributes-natural-language\"\n   operation attribute\
    \ with the value: 'en' indicating English, but the\n   value of the \"job-name\"\
    \ attribute is in French, the client MUST use\n   the 'textWithLanguage' attribute\
    \ syntax with the following two\n   values:\n      'fr': Natural Language Override\
    \ indicating French\n      'Rapport Mensuel': the job name in French\n   See the\
    \ \"Encoding and Transport\" document [RFC2910] section 3.9 for\n   the encoding\
    \ of the two parts and Appendix A for a detailed example\n   of the 'textWithLanguage'\
    \ attribute syntax.\n"
- title: 4.1.2 'name'
  contents:
  - "4.1.2 'name'\n   This syntax type is used for user-friendly strings, such as\
    \ a Printer\n   name, that, for humans, are more meaningful than identifiers.\
    \  Names\n   are never translated from one natural language to another.  The\n\
    \   'name' attribute syntax is essentially the same as 'text', including\n   the\
    \ REQUIRED support of UTF-8 except that the sequence of characters\n   is limited\
    \ so that its encoded form MUST NOT exceed 255 (MAX) octets.\n   Also like 'text',\
    \ 'name' is really an abbreviated notation for either\n   'nameWithoutLanguage'\
    \ or 'nameWithLanguage'.  That is, all IPP\n   objects and clients MUST support\
    \ both the 'nameWithoutLanguage' and\n   'nameWithLanguage' attribute syntaxes.\
    \  However, in actual usage and\n   protocol execution, objects and clients accept\
    \ and return only one of\n   the two syntax per attribute.  The syntax 'name'\
    \ never appears \"on-\n   the-wire\".\n   Only the 'text' and 'name' attribute\
    \ syntaxes permit the Natural\n   Language Override mechanism.\n   Some attributes\
    \ are defined as 'type3 keyword | name'.  These\n   attributes support values\
    \ that are either type3 keywords or names.\n   This dual-syntax mechanism enables\
    \ a site administrator to extend\n   these attributes to legally include values\
    \ that are locally defined\n   by the site administrator.  Such names are not\
    \ registered with IANA.\n"
- title: 4.1.2.1 'nameWithoutLanguage'
  contents:
  - "4.1.2.1 'nameWithoutLanguage'\n   The 'nameWithoutLanguage' syntax indicates\
    \ a value that is sequence\n   of zero or more characters encoded in a maximum\
    \ of 255 (MAX) octets.\n"
- title: 4.1.2.2 'nameWithLanguage'
  contents:
  - "4.1.2.2 'nameWithLanguage'\n   The 'nameWithLanguage' attribute syntax is a compound\
    \ attribute\n   syntax consisting of two parts: a 'nameWithoutLanguage' part encoded\n\
    \   in a maximum of 1023 (MAX) octets plus an additional\n   'naturalLanguage'\
    \ (see section 4.1.8) part that overrides the natural\n   language in force. \
    \ The 'naturalLanguage' part explicitly identifies\n   the natural language that\
    \ applies to that name value and that name\n   value alone.  For any give text\
    \ attribute, the 'textWithoutLanguage'\n   part is limited to the maximum length\
    \ defined for that 'text'\n   attribute, and the 'naturalLanguage' part is always\
    \ limited to 63\n   (additional) octets.  Using the 'textWithLanguage' attribute\
    \ syntax\n   rather than the normal 'textWithoutLanguage' syntax is the so-called\n\
    \   Natural Language Override mechanism and MUST be supported by all IPP\n   objects\
    \ and clients.\n   The 'nameWithLanguage' attribute syntax behaves the same as\
    \ the\n   'textWithLanguage' syntax.  Using the 'textWithLanguage' attribute\n\
    \   syntax rather than the normal 'textWithoutLanguage' syntax is the\n   so-called\
    \ Natural Language Override mechanism and MUST be supported\n   by all IPP objects\
    \ and clients.  If a name is in a language that is\n   different than the rest\
    \ of the object or operation, then this\n   'nameWithLanguage' syntax is used\
    \ rather than the generic\n   'nameWithoutLanguage' syntax.\n   If the attribute\
    \ is multi-valued (1setOf text), then the\n   'nameWithLanguage' attribute syntax\
    \ MUST be used to explicitly\n   specify each attribute value whose natural language\
    \ needs to be\n   overridden.\n   Other values in a multi-valued 'name' attribute\
    \ in a request or a\n   response revert to the natural language of the operation\
    \ attribute.\n   In a create request, the Printer object MUST accept and store\
    \ with\n   the Job object any natural language in the \"attributes-natural-\n\
    \   language\" operation attribute, whether the Printer object supports\n   that\
    \ natural language or not.  Furthermore, the Printer object MUST\n   accept and\
    \ store any 'nameWithLanguage' attribute value, whether the\n   Printer object\
    \ supports that natural language or not.  These\n   requirements are independent\
    \ of the value of the \"ipp-attribute-\n   fidelity\" operation attribute that\
    \ the client MAY supply.\n   Example:  If the client supplies the \"attributes-natural-language\"\
    \n   operation attribute with the value:  'en' indicating English, but the\n \
    \  \"printer-name\" attribute is in German, the client MUST use the\n   'nameWithLanguage'\
    \ attribute syntax as follows:\n      'de':  Natural Language Override indicating\
    \ German\n      'Farbdrucker':  the Printer name in German\n   See the \"Encoding\
    \ and Transport\" document [RFC2910] section 3.9 for\n   the encoding of the two\
    \ parts and Appendix A for a detailed example\n   of the 'nameWithLanguage' attribute\
    \ syntax.\n"
- title: 4.1.2.3 Matching 'name' attribute values
  contents:
  - "4.1.2.3 Matching 'name' attribute values\n   For purposes of matching two 'name'\
    \ attribute values for equality,\n   such as in job validation (where a client-supplied\
    \ value for\n   attribute \"xxx\" is checked to see if the value is among the\
    \ values of\n   the Printer object's corresponding \"xxx-supported\" attribute),\
    \ the\n   following match rules apply:\n      1. 'keyword' values never match\
    \ 'name' values.\n      2. 'name' (nameWithoutLanguage and nameWithLanguage) values\
    \ match\n         if (1) the name parts match and (2) the Associated Natural-\n\
    \         Language parts (see section 3.1.4.1) match.  The matching rules\n  \
    \       are:\n         a. the name parts match if the two names are identical\n\
    \            character by character, except it is RECOMMENDED that case\n    \
    \        be ignored.  For example: 'Ajax-letter-head-white' MUST\n           \
    \ match 'Ajax-letter-head-white' and SHOULD match 'ajax-\n            letter-head-white'\
    \ and 'AJAX-LETTER-HEAD-WHITE'.\n         b. the Associated Natural-Language parts\
    \ match if the shorter\n            of the two meets the syntactic requirements\
    \ of RFC 1766\n            [RFC1766] and matches byte for byte with the longer.\
    \  For\n            example, 'en' matches 'en', 'en-us' and 'en-gb', but matches\n\
    \            neither 'fr' nor 'e'.\n"
- title: 4.1.3 'keyword'
  contents:
  - "4.1.3 'keyword'\n   The 'keyword' attribute syntax is a sequence of characters,\
    \ length: 1\n   to 255, containing only the US-ASCII [ASCII] encoded values for\n\
    \   lowercase letters (\"a\" - \"z\"), digits (\"0\" - \"9\"), hyphen (\"-\"),\
    \ dot\n   (\".\"), and underscore (\"_\").  The first character MUST be a lowercase\n\
    \   letter.  Furthermore, keywords MUST be in U.S. English.\n   This syntax type\
    \ is used for enumerating semantic identifiers of\n   entities in the abstract\
    \ protocol, i.e., entities identified in this\n   document.  Keywords are used\
    \ as attribute names or values of\n   attributes.  Unlike 'text' and 'name' attribute\
    \ values, 'keyword'\n   values MUST NOT use the Natural Language Override mechanism,\
    \ since\n   they MUST always be US-ASCII and U.S. English.\n   Keywords are for\
    \ use in the protocol.  A user interface will likely\n   provide a mapping between\
    \ protocol keywords and displayable user-\n   friendly words and phrases which\
    \ are localized to the natural\n   language of the user.  While the keywords specified\
    \ in this document\n   MAY be displayed to users whose natural language is U.S.\
    \ English,\n   they MAY be mapped to other U.S. English words for U.S. English\n\
    \   users, since the user interface is outside the scope of this\n   document.\n\
    \   In the definition for each attribute of this syntax type, the full\n   set\
    \ of defined keyword values for that attribute are listed.\n   When a keyword\
    \ is used to represent an attribute (its name), it MUST\n   be unique within the\
    \ full scope of all IPP objects and attributes.\n   When a keyword is used to\
    \ represent a value of an attribute, it MUST\n   be unique just within the scope\
    \ of that attribute.  That is, the same\n   keyword MUST NOT be used for two different\
    \ values within the same\n   attribute to mean two different semantic ideas. \
    \ However, the same\n   keyword MAY be used across two or more attributes, representing\n\
    \   different semantic ideas for each attribute.  Section 6.1 describes\n   how\
    \ the protocol can be extended with new keyword values.  Examples\n   of attribute\
    \ name keywords:\n      \"job-name\"\n      \"attributes-charset\"\n   Note: \
    \ This document uses \"type1\", \"type2\", and \"type3\" prefixes to\n   the \"\
    keyword\" basic syntax to indicate different levels of review for\n   extensions\
    \ (see section 6.1).\n"
- title: 4.1.4 'enum'
  contents:
  - "4.1.4 'enum'\n   The 'enum' attribute syntax is an enumerated integer value that\
    \ is in\n   the range from 1 to 2**31 - 1 (MAX).   Each value has an associated\n\
    \   'keyword' name.  In the definition for each attribute of this syntax\n   type,\
    \ the full set of possible values for that attribute are listed.\n   This syntax\
    \ type is used for attributes for which there are enum\n   values assigned by\
    \ other standards, such as SNMP MIBs.  A number of\n   attribute enum values in\
    \ this document are also used for\n   corresponding attributes in other standards\
    \ [RFC1759].  This syntax\n   type is not used for attributes to which the administrator\
    \ may assign\n   values.  Section 6.1 describes how the protocol can be extended\
    \ with\n   new enum values.\n   Enum values are for use in the protocol.  A user\
    \ interface will\n   provide a mapping between protocol enum values and displayable\
    \ user-\n   friendly words and phrases which are localized to the natural\n  \
    \ language of the user.  While the enum symbols specified in this\n   document\
    \ MAY be displayed to users whose natural language is U.S.\n   English, they MAY\
    \ be mapped to other U.S. English words for U.S.\n   English users, since the\
    \ user interface is outside the scope of this\n   document.\n   Note: SNMP MIBs\
    \ use '2' for 'unknown' which corresponds to the IPP\n   \"out-of-band\" value\
    \ 'unknown'.  See the description of the \"out-of-\n   band\" values at the beginning\
    \ of Section 4.1.  Therefore, attributes\n   of type 'enum' start at '3'.\n  \
    \ Note:  This document uses \"type1\", \"type2\", and \"type3\" prefixes to\n\
    \   the \"enum\" basic syntax to indicate different levels of review for\n   extensions\
    \ (see section 6.1).\n"
- title: 4.1.5 'uri'
  contents:
  - "4.1.5 'uri'\n   The 'uri' attribute syntax is any valid Uniform Resource Identifier\n\
    \   or URI [RFC2396].  Most often, URIs are simply Uniform Resource\n   Locators\
    \ or URLs.  The maximum length of URIs used as values of IPP\n   attributes is\
    \ 1023 octets.  Although most other IPP attribute syntax\n   types allow for only\
    \ lower-cased values, this attribute syntax type\n   conforms to the case-sensitive\
    \ and case-insensitive rules specified\n   in [RFC2396].  See also [IPP-IIG] for\
    \ a discussion of case in URIs.\n"
- title: 4.1.6 'uriScheme'
  contents:
  - "4.1.6 'uriScheme'\n   The 'uriScheme' attribute syntax is a sequence of characters\n\
    \   representing a URI scheme according to RFC 2396 [RFC2396].  Though\n   RFC\
    \ 2396 requires that the values be case-insensitive, IPP requires\n   all lower\
    \ case values in IPP attributes to simplify comparing by IPP\n   clients and Printer\
    \ objects.\n   Standard values for this syntax type are the following keywords:\n\
    \      'ipp':  for IPP schemed URIs (e.g., \"ipp:...\")\n      'http':  for HTTP\
    \ schemed URIs (e.g., \"http:...\")\n      'https':  for use with HTTPS schemed\
    \ URIs (e.g., \"https:...\") (not\n         on IETF standards track)\n      'ftp':\
    \ for FTP schemed URIs (e.g., \"ftp:...\")\n      'mailto': for SMTP schemed URIs\
    \ (e.g., \"mailto:...\")\n      'file': for file schemed URIs (e.g., \"file:...\"\
    )\n   A Printer object MAY support any URI 'scheme' that has been\n   registered\
    \ with IANA [IANA-MT]. The maximum length of URI 'scheme'\n   values used to represent\
    \ IPP attribute values is 63 octets.\n"
- title: 4.1.7 'charset'
  contents:
  - "4.1.7 'charset'\n   The 'charset' attribute syntax is a standard identifier for\
    \ a\n   charset.  A charset is a coded character set and encoding scheme.\n  \
    \ Charsets are used for labeling certain document contents and 'text'\n   and\
    \ 'name' attribute values.  The syntax and semantics of this\n   attribute syntax\
    \ are specified in RFC 2046 [RFC2046] and contained in\n   the IANA character-set\
    \ Registry [IANA-CS] according to the IANA\n   procedures [RFC2278].  Though RFC\
    \ 2046 requires that the values be\n   case-insensitive US-ASCII [ASCII], IPP\
    \ requires all lower case values\n   in IPP attributes to simplify comparing by\
    \ IPP clients and Printer\n   objects.  When a character-set in the IANA registry\
    \ has more than one\n   name (alias), the name labeled as \"(preferred MIME name)\"\
    , if\n   present, MUST be used.\n   The maximum length of 'charset' values used\
    \ to represent IPP\n   attribute values is 63 octets.\n   Some examples are:\n\
    \      'utf-8':  ISO 10646 Universal Multiple-Octet Coded Character Set\n    \
    \     (UCS) represented as the UTF-8 [RFC2279] transfer encoding\n         scheme\
    \ in which US-ASCII is a subset charset.\n      'us-ascii':  7-bit American Standard\
    \ Code for Information\n         Interchange (ASCII), ANSI X3.4-1986 [ASCII].\
    \  That standard\n         defines US-ASCII, but RFC 2045 [RFC2045] eliminates\
    \ most of the\n         control characters from conformant usage in MIME and IPP.\n\
    \      'iso-8859-1':  8-bit One-Byte Coded Character Set, Latin Alphabet\n   \
    \      Nr 1 [ISO8859-1].  That standard defines a coded character set\n      \
    \   that is used by Latin languages in the Western Hemisphere and\n         Western\
    \ Europe.  US-ASCII is a subset charset.\n   Some attribute descriptions MAY place\
    \ additional requirements on\n   charset values that may be used, such as REQUIRED\
    \ values that MUST be\n   supported or additional restrictions, such as requiring\
    \ that the\n   charset have US- ASCII as a subset charset.\n"
- title: 4.1.8 'naturalLanguage'
  contents:
  - "4.1.8 'naturalLanguage'\n   The 'naturalLanguage' attribute syntax is a standard\
    \ identifier for a\n   natural language and optionally a country.  The values\
    \ for this\n   syntax type are defined by RFC 1766 [RFC1766].  Though RFC 1766\n\
    \   requires that the values be case-insensitive US-ASCII [ASCII], IPP\n   requires\
    \ all lower case to simplify comparing by IPP clients and\n   Printer objects.\
    \  Examples include:\n      'en':  for English\n      'en-us': for US English\n\
    \      'fr': for French\n      'de':  for German\n   The maximum length of 'naturalLanguage'\
    \ values used to represent IPP\n   attribute values is 63 octets.\n"
- title: 4.1.9 'mimeMediaType'
  contents:
  - "4.1.9 'mimeMediaType'\n   The 'mimeMediaType' attribute syntax is the Internet\
    \ Media Type\n   (sometimes called MIME type) as defined by RFC 2046 [RFC2046]\
    \ and\n   registered according to the procedures of RFC 2048 [RFC2048] for\n \
    \  identifying a document format.  The value MAY include a charset, or\n   other,\
    \ parameter, depending on the specification of the Media Type in\n   the IANA\
    \ Registry [IANA-MT].  Although most other IPP syntax types\n   allow for only\
    \ lower-cased values, this syntax type allows for\n   mixed-case values which\
    \ are case-insensitive.\n   Examples are:\n      'text/html': An HTML document\n\
    \      'text/plain': A plain text document in US-ASCII (RFC 2046\n         indicates\
    \ that in the absence of the charset parameter MUST\n         mean US-ASCII rather\
    \ than simply unspecified) [RFC2046].\n      'text/plain; charset=US-ASCII': \
    \ A plain text document in US-ASCII\n         [52, 56].\n      'text/plain; charset=ISO-8859-1':\
    \  A plain text document in ISO\n         8859-1 (Latin 1) [ISO8859-1].\n    \
    \  'text/plain; charset=utf-8':  A plain text document in ISO 10646\n        \
    \ represented as UTF-8 [RFC2279]\n      'application/postscript':  A PostScript\
    \ document [RFC2046]\n      'application/vnd.hp-PCL':  A PCL document [IANA-MT]\
    \ (charset\n         escape sequence embedded in the document data)\n      'application/pdf':\
    \  Portable Document Format - see IANA MIME Media\n         Type registry\n  \
    \    'application/octet-stream': Auto-sense - see section 4.1.9.1\n   The maximum\
    \ length of a 'mimeMediaType' value to represent IPP\n   attribute values is 255\
    \ octets.\n"
- title: 4.1.9.1 Application/octet-stream -- Auto-Sensing the document format
  contents:
  - "4.1.9.1 Application/octet-stream -- Auto-Sensing the document format\n   One\
    \ special type is 'application/octet-stream'.  If the Printer\n   object supports\
    \ this value, the Printer object MUST be capable of\n   auto-sensing the format\
    \ of the document data using an\n   implementation-dependent method that examines\
    \ some number of octets\n   of the document data, either as part of the create\
    \ operation and/or\n   at document processing time.  During auto-sensing, a Printer\
    \ may\n   determine that the document-data has a format that the Printer\n   doesn't\
    \ recognize.  If the Printer determines this problem before\n   returning an operation\
    \ response, it rejects the request and returns\n   the 'client-error-document-format-not-supported'\
    \ status code.  If the\n   Printer determines this problem after accepting the\
    \ request and\n   returning an operation response with one of the successful status\n\
    \   codes, the Printer adds the 'unsupported-document-format' value to\n   the\
    \ job's \"job-state-reasons\" attribute.\n   If the Printer object's default value\
    \ attribute \"document-format-\n   default\" is set to 'application/octet-stream',\
    \ the Printer object not\n   only supports auto-sensing of the document format,\
    \ but will depend on\n   the result of applying its auto-sensing when the client\
    \ does not\n   supply the \"document-format\" attribute.  If the client supplies\
    \ a\n   document format value, the Printer MUST rely on the supplied\n   attribute,\
    \ rather than trust its auto-sensing algorithm.  To\n   summarize:\n      1. If\
    \ the client does not supply a document format value, the\n         Printer MUST\
    \ rely on its default value setting (which may be\n         'application/octet-stream'\
    \ indicating an auto-sensing\n         mechanism).\n      2. If the client supplies\
    \ a value other than 'application/octet-\n         stream', the client is supplying\
    \ valid information about the\n         format of the document data and the Printer\
    \ object MUST trust\n         the client supplied value more than the outcome\
    \ of applying an\n         automatic format detection mechanism.  For example,\
    \ the client\n         may be requesting the printing of a PostScript file as\
    \ a\n         'text/plain' document.  The Printer object MUST print a text\n \
    \        representation of the PostScript commands rather than interpret\n   \
    \      the stream of PostScript commands and print the result.\n      3. If the\
    \ client supplies a value of 'application/octet-stream',\n         the client\
    \ is indicating that the Printer object MUST use its\n         auto-sensing mechanism\
    \ on the client supplied document data\n         whether auto-sensing is the Printer\
    \ object's default or not.\n   Note:  Since the auto-sensing algorithm is probabilistic,\
    \ if the\n   client requests both auto-sensing (\"document-format\" set to\n \
    \  'application/octet-stream') and true fidelity (\"ipp-attribute-\n   fidelity\"\
    \ set to 'true'), the Printer object might not be able to\n   guarantee exactly\
    \ what the end user intended (the auto-sensing\n   algorithm might mistake one\
    \ document format for another), but it is\n   able to guarantee that its auto-sensing\
    \ mechanism be used.\n   When a Printer performs auto-sensing of a document in\
    \ a submitted\n   job, it is RECOMMENDED that the Printer indicate to the user\
    \ that\n   such auto-sensing has occurred and which document-format was auto-\n\
    \   sensed by printing that information on the job's job-start-sheet.\n"
- title: 4.1.10 'octetString'
  contents:
  - "4.1.10 'octetString'\n   The 'octetString' attribute syntax is a sequence of\
    \ octets encoded in\n   a maximum of 1023 octets which is indicated in sub-section\
    \ headers\n   using the notation: octetString(MAX).  This syntax type is used\
    \ for\n   opaque data.\n"
- title: 4.1.11 'boolean'
  contents:
  - "4.1.11 'boolean'\n   The 'boolean' attribute syntax has only two values:  'true'\
    \ and\n   'false'.\n"
- title: 4.1.12 'integer'
  contents:
  - "4.1.12 'integer'\n   The 'integer' attribute syntax is an integer value that\
    \ is in the\n   range from -2**31 (MIN) to 2**31 - 1 (MAX).  Each individual\n\
    \   attribute may specify the range constraint explicitly in sub-section\n   headers\
    \ if the range is different from the full range of possible\n   integer values.\
    \  For example:  job-priority (integer(1:100)) for the\n   \"job-priority\" attribute.\
    \  However, the enforcement of that\n   additional constraint is up to the IPP\
    \ objects, not the protocol.\n"
- title: 4.1.13 'rangeOfInteger'
  contents:
  - "4.1.13 'rangeOfInteger'\n   The 'rangeOfInteger' attribute syntax is an ordered\
    \ pair of integers\n   that defines an inclusive range of integer values.  The\
    \ first integer\n   specifies the lower bound and the second specifies the upper\
    \ bound.\n   If a range constraint is specified in the header description for\
    \ an\n   attribute in this document whose attribute syntax is 'rangeOfInteger'\n\
    \   (i.e., 'X:Y' indicating X as a minimum value and Y as a maximum\n   value),\
    \ then the constraint applies to both integers.\n"
- title: 4.1.14 'dateTime'
  contents:
  - "4.1.14 'dateTime'\n   The 'dateTime' attribute syntax is a standard, fixed length,\
    \ 11 octet\n   representation of the \"DateAndTime\" syntax as defined in RFC\
    \ 2579\n   [RFC2579].  RFC 2579 also identifies an 8 octet representation of a\n\
    \   \"DateAndTime\" value, but IPP objects MUST use the 11 octet\n   representation.\
    \  A user interface will provide a mapping between\n   protocol dateTime values\
    \ and displayable user-friendly words or\n   presentation values and phrases which\
    \ are localized to the natural\n   language and date format of the user, including\
    \ time zone.\n"
- title: 4.1.15 'resolution'
  contents:
  - "4.1.15 'resolution'\n   The 'resolution' attribute syntax specifies a two-dimensional\n\
    \   resolution in the indicated units.  It consists of 3 values: a cross\n   feed\
    \ direction resolution (positive integer value), a feed direction\n   resolution\
    \ (positive integer value), and a units value.  The\n   semantics of these three\
    \ components are taken from the Printer MIB\n   [RFC1759] suggested values.  That\
    \ is, the cross feed direction\n   component resolution component is the same\
    \ as the\n   prtMarkerAddressabilityXFeedDir object in the Printer MIB, the feed\n\
    \   direction component resolution component is the same as the\n   prtMarkerAddressabilityFeedDir\
    \ in the Printer MIB, and the units\n   component is the same as the prtMarkerAddressabilityUnit\
    \ object in\n   the Printer MIB (namely, '3' indicates dots per inch and '4'\n\
    \   indicates dots per centimeter).  All three values MUST be present\n   even\
    \ if the first two values are the same.  Example:  '300', '600',\n   '3' indicates\
    \ a 300 dpi cross-feed direction resolution, a 600 dpi\n   feed direction resolution,\
    \ since a '3' indicates dots per inch (dpi).\n"
- title: 4.1.16 '1setOf  X'
  contents:
  - "4.1.16 '1setOf  X'\n   The '1setOf  X' attribute syntax is 1 or more values of\
    \ attribute\n   syntax type X.  This syntax type is used for multi-valued attributes.\n\
    \   The syntax type is called '1setOf' rather than just 'setOf' as a\n   reminder\
    \ that the set of values MUST NOT be empty (i.e., a set of\n   size 0).  Sets\
    \ are normally unordered.  However each attribute\n   description of this type\
    \ may specify that the values MUST be in a\n   certain order for that attribute.\n"
- title: 4.2 Job Template Attributes
  contents:
  - "4.2 Job Template Attributes\n   Job Template attributes describe job processing\
    \ behavior.  Support\n   for Job Template attributes by a Printer object is OPTIONAL\
    \ (see\n   section 12.2.3 for a description of support for OPTIONAL attributes).\n\
    \   Also, clients OPTIONALLY supply Job Template attributes in create\n   requests.\n\
    \   Job Template attributes conform to the following rules.  For each Job\n  \
    \ Template attribute called \"xxx\":\n      1. If the Printer object supports\
    \ \"xxx\" then it MUST support both\n         a \"xxx-default\" attribute (unless\
    \ there is a \"No\" in the table\n         below) and a \"xxx-supported\" attribute.\
    \  If the Printer object\n         doesn't support \"xxx\", then it MUST support\
    \ neither an \"xxx-\n         default\" attribute nor an \"xxx-supported\" attribute,\
    \ and it\n         MUST treat an attribute \"xxx\" supplied by a client as\n \
    \        unsupported.  An attribute \"xxx\" may be supported for some\n      \
    \   document formats and not supported for other document formats.\n         For\
    \ example, it is expected that a Printer object would only\n         support \"\
    orientation-requested\" for some document formats (such\n         as 'text/plain'\
    \ or 'text/html') but not others (such as\n         'application/postscript').\n\
    \      2. \"xxx\" is OPTIONALLY supplied by the client in a create request.\n\
    \         If \"xxx\" is supplied, the client is indicating a desired job\n   \
    \      processing behavior for this Job.  When \"xxx\" is not supplied,\n    \
    \     the client is indicating that the Printer object apply its\n         default\
    \ job processing behavior at job processing time if the\n         document content\
    \ does not contain an embedded instruction\n         indicating an xxx-related\
    \ behavior.\n         Since an administrator MAY change the default value attribute\n\
    \         after a Job object has been submitted but before it has been\n     \
    \    processed, the default value used by the Printer object at job\n        \
    \ processing time may be different that the default value in\n         effect\
    \ at job submission time.\n      3. The \"xxx-supported\" attribute is a Printer\
    \ object attribute\n         that describes which job processing behaviors are\
    \ supported by\n         that Printer object.  A client can query the Printer\
    \ object to\n         find out what xxx-related behaviors are supported by inspecting\n\
    \         the returned values of the \"xxx-supported\" attribute.\n         Note:\
    \ The \"xxx\" in each \"xxx-supported\" attribute name is\n         singular,\
    \ even though an \"xxx-supported\" attribute usually has\n         more than one\
    \ value, such as \"job-sheet-supported\", unless the\n         \"xxx\" Job Template\
    \ attribute is plural, such as \"finishings\" or\n         \"sides\".  In such\
    \ cases the \"xxx-supported\" attribute names\n         are: \"finishings- supported\"\
    \ and \"sides-supported\".\n      4. The \"xxx-default\" default value attribute\
    \ describes what will\n         be done at job processing time when no other job\
    \ processing\n         information is supplied by the client (either explicitly\
    \ as an\n         IPP attribute in the create request or implicitly as an\n  \
    \       embedded instruction within the document data).\n   If an application\
    \ wishes to present an end user with a list of\n   supported values from which\
    \ to choose, the application SHOULD query\n   the Printer object for its supported\
    \ value attributes.  The\n   application SHOULD also query the default value attributes.\
    \  If the\n   application then limits selectable values to only those value that\n\
    \   are supported, the application can guarantee that the values supplied\n  \
    \ by the client in the create request all fall within the set of\n   supported\
    \ values at the Printer.  When querying the Printer, the\n   client MAY enumerate\
    \ each attribute by name in the Get-Printer-\n   Attributes Request, or the client\
    \ MAY just name the \"job-template\"\n   group in order to get the complete set\
    \ of supported attributes (both\n   supported and default attributes).\n   The\
    \ \"finishings\" attribute is an example of a Job Template attribute.\n   It can\
    \ take on a set of values such as 'staple', 'punch', and/or\n   'cover'.  A client\
    \ can query the Printer object for the \"finishings-\n   supported\" attribute\
    \ and the \"finishings-default\" attribute.  The\n   supported attribute contains\
    \ a set of supported values.  The default\n   value attribute contains the finishing\
    \ value(s) that will be used for\n   a new Job if the client does not supply a\
    \ \"finishings\" attribute in\n   the create request and the document data does\
    \ not contain any\n   corresponding finishing instructions.  If the client does\
    \ supply the\n   \"finishings\" attribute in the create request, the IPP object\n\
    \   validates the value or values to make sure that they are a subset of\n   the\
    \ supported values identified in the Printer object's \"finishings-\n   supported\"\
    \ attribute.  See section 3.1.7.\n   The table below summarizes the names and\
    \ relationships for all Job\n   Template attributes. The first column of the table\
    \ (labeled \"Job\n   Attribute\") shows the name and syntax for each Job Template\
    \ attribute\n   in the Job object. These are the attributes that can optionally\
    \ be\n   supplied by the client in a create request.   The last two columns\n\
    \   (labeled \"Printer: Default Value Attribute\" and \"Printer: Supported\n \
    \  Values Attribute\") show the name and syntax for each Job Template\n   attribute\
    \ in the Printer object (the default value attribute and the\n   supported values\
    \ attribute).  A \"No\" in the table means the Printer\n   MUST NOT support the\
    \ attribute (that is, the attribute is simply not\n   applicable).  For brevity\
    \ in the table, the 'text' and 'name' entries\n   do not show the maximum length\
    \ for each attribute.\n     +===================+======================+======================+\n\
    \     | Job Attribute     |Printer: Default Value|  Printer: Supported  |\n  \
    \   |                   |   Attribute          |   Values Attribute   |\n    \
    \ +===================+======================+======================+\n     |\
    \ job-priority      | job-priority-default |job-priority-supported|\n     | (integer\
    \ 1:100)   | (integer 1:100)      |(integer 1:100)       |\n     +-------------------+----------------------+----------------------+\n\
    \     | job-hold-until    | job-hold-until-      |job-hold-until-       |\n  \
    \   | (type3 keyword |  |  default             | supported            |\n    \
    \ |    name)          |  (type3 keyword |    |(1setOf (             |\n     |\
    \                   |    name)             |type3 keyword | name))|\n     +-------------------+----------------------+----------------------+\n\
    \     | job-sheets        | job-sheets-default   |job-sheets-supported  |\n  \
    \   | (type3 keyword |  | (type3 keyword |     |(1setOf (             |\n    \
    \ |    name)          |    name)             |type3 keyword | name))|\n     +-------------------+----------------------+----------------------+\n\
    \     |multiple-document- |multiple-document-    |multiple-document-    |\n  \
    \   | handling          | handling-default     |handling-supported    |\n    \
    \ | (type2 keyword)   | (type2 keyword)      |(1setOf type2 keyword)|\n     +-------------------+----------------------+----------------------+\n\
    \     | copies            | copies-default       | copies-supported     |\n  \
    \   | (integer (1:MAX)) | (integer (1:MAX))    | (rangeOfInteger      |\n    \
    \ |                   |                      |       (1:MAX))       |\n     +-------------------+----------------------+----------------------+\n\
    \     | finishings        | finishings-default   | finishings-supported |\n  \
    \   |(1setOf type2 enum)|(1setOf type2 enum)   |(1setOf type2 enum)   |\n    \
    \ +-------------------+----------------------+----------------------+\n     |\
    \ page-ranges       | No                   | page-ranges-         |\n     | (1setOf\
    \           |                      | supported (boolean)  |\n     |   rangeOfInteger\
    \  |                      |                      |\n     |        (1:MAX))   |\
    \                      |                      |\n     +-------------------+----------------------+----------------------+\n\
    \     | sides             | sides-default        | sides-supported      |\n  \
    \   | (type2 keyword)   | (type2 keyword)      |(1setOf type2 keyword)|\n    \
    \ +-------------------+----------------------+----------------------+\n     |\
    \ number-up         | number-up-default    | number-up-supported  |\n     | (integer\
    \ (1:MAX)) | (integer (1:MAX))    |(1setOf (integer      |\n     |           \
    \        |                      | (1:MAX) |            |\n     |             \
    \      |                      |  rangeOfInteger      |\n     |               \
    \    |                      |   (1:MAX)))          |\n     +-------------------+----------------------+----------------------+\n\
    \     | orientation-      |orientation-requested-|orientation-requested-|\n  \
    \   |  requested        |  default             |  supported           |\n    \
    \ |   (type2 enum)    |  (type2 enum)        |  (1setOf type2 enum) |\n     +-------------------+----------------------+----------------------+\n\
    \     | media             | media-default        | media-supported      |\n  \
    \   | (type3 keyword |  | (type3 keyword |     |(1setOf (             |\n    \
    \ |    name)          |    name)             |type3 keyword | name))|\n     |\
    \                   |                      |                      |\n     |  \
    \                 |                      | media-ready          |\n     |    \
    \               |                      |(1setOf (             |\n     |      \
    \             |                      |type3 keyword | name))|\n     +-------------------+----------------------+----------------------+\n\
    \     | printer-resolution| printer-resolution-  | printer-resolution-  |\n  \
    \   | (resolution)      |  default             | supported            |\n    \
    \ |                   | (resolution)         |(1setOf resolution)   |\n     +-------------------+----------------------+----------------------+\n\
    \     | print-quality     | print-quality-default| print-quality-       |\n  \
    \   | (type2 enum)      | (type2 enum)         | supported            |\n    \
    \ |                   |                      |(1setOf type2 enum)   |\n     +-------------------+----------------------+----------------------+\n"
- title: 4.2.1 job-priority (integer(1:100))
  contents:
  - "4.2.1 job-priority (integer(1:100))\n   This attribute specifies a priority for\
    \ scheduling the Job. A higher\n   value specifies a higher priority. The value\
    \ 1 indicates the lowest\n   possible priority. The value 100 indicates the highest\
    \ possible\n   priority.  Among those jobs that are ready to print, a Printer\
    \ MUST\n   print all jobs with a priority value of n before printing those with\n\
    \   a priority value of n-1 for all n.\n   If the Printer object supports this\
    \ attribute, it MUST always support\n   the full range from 1 to 100.  No administrative\
    \ restrictions are\n   permitted.  This way an end-user can always make full use\
    \ of the\n   entire range with any Printer object.  If privileged jobs are\n \
    \  implemented outside IPP/1.1, they MUST have priorities higher than\n   100,\
    \ rather than restricting the range available to end-users.\n   If the client\
    \ does not supply this attribute and this attribute is\n   supported by the Printer\
    \ object, the Printer object MUST use the\n   value of the Printer object's \"\
    job-priority-default\" at job\n   submission time (unlike most Job Template attributes\
    \ that are used if\n   necessary at job processing time).\n   The syntax for the\
    \ \"job-priority-supported\" is also integer(1:100).\n   This single integer value\
    \ indicates the number of priority levels\n   supported.  The Printer object MUST\
    \ take the value supplied by the\n   client and map it to the closest integer\
    \ in a sequence of n integers\n   values that are evenly distributed over the\
    \ range from 1 to 100 using\n   the formula:\n      roundToNearestInt((100x+50)/n)\n\
    \   where n is the value of \"job-priority-supported\" and x ranges from 0\n \
    \  through n-1.\n   For example, if n=1 the sequence of values is 50;  if n=2,\
    \ the\n   sequence of values is:  25 and 75;  if n = 3, the sequence of values\n\
    \   is:  17, 50 and 83;  if n = 10, the sequence of values is: 5, 15, 25,\n  \
    \ 35, 45, 55, 65, 75, 85, and 95;  if n = 100, the sequence of values\n   is:\
    \  1, 2, 3, ... 100.\n   If the value of the Printer object's \"job-priority-supported\"\
    \ is 10\n   and the client supplies values in the range 1 to 10, the Printer\n\
    \   object maps them to 5, in the range 11 to 20, the Printer object maps\n  \
    \ them to 15, etc.\n"
- title: 4.2.2 job-hold-until (type3 keyword | name (MAX))
  contents:
  - "4.2.2 job-hold-until (type3 keyword | name (MAX))\n   This attribute specifies\
    \ the named time period during which the Job\n   MUST become a candidate for printing.\n\
    \   Standard keyword values for named time periods are:\n      'no-hold': immediately,\
    \ if there are not other reasons to hold the\n         job\n      'indefinite':\
    \  - the job is held indefinitely, until a client\n         performs a Release-Job\
    \ (section 3.3.6)\n      'day-time': during the day\n      'evening': evening\n\
    \      'night': night\n      'weekend': weekend\n      'second-shift': second-shift\
    \ (after close of business)\n      'third-shift': third-shift (after midnight)\n\
    \   An administrator MUST associate allowable print times with a named\n   time\
    \ period (by means outside the scope of this IPP/1.1 document).\n   An administrator\
    \ is encouraged to pick names that suggest the type of\n   time period. An administrator\
    \ MAY define additional values using the\n   'name' or 'keyword' attribute syntax,\
    \ depending on implementation.\n   If the value of this attribute specifies a\
    \ time period that is in the\n   future, the Printer SHOULD add the 'job-hold-until-specified'\
    \ value\n   to the job's \"job-state-reasons\" attribute, MUST move the job to\
    \ the\n   'pending-held' state, and MUST NOT schedule the job for printing\n \
    \  until the specified time-period arrives.\n   When the specified time period\
    \ arrives, the Printer MUST remove the\n   'job-hold-until-specified' value from\
    \ the job's \"job-state-reason\"\n   attribute, if present.  If there are no other\
    \ job state reasons that\n   keep the job in the 'pending-held' state, the Printer\
    \ MUST consider\n   the job as a candidate for processing by moving the job to\
    \ the\n   'pending' state.\n   If this job attribute value is the named value\
    \ 'no-hold', or the\n   specified time period has already started, the job MUST\
    \ be a\n   candidate for processing immediately.\n   If the client does not supply\
    \ this attribute and this attribute is\n   supported by the Printer object, the\
    \ Printer object MUST use the\n   value of the Printer object's \"job-hold-until-default\"\
    \ at job\n   submission time (unlike most Job Template attributes that are used\
    \ if\n   necessary at job processing time).\n"
- title: 4.2.3 job-sheets (type3 keyword | name(MAX))
  contents:
  - "4.2.3 job-sheets (type3 keyword | name(MAX))\n   This attribute determines which\
    \ job start/end sheet(s), if any, MUST\n   be printed with a job.\n   Standard\
    \ keyword values are:\n      'none': no job sheet is printed\n      'standard':\
    \ one or more site specific standard job sheets are\n         printed, e.g. a\
    \ single start sheet or both start and end sheet is\n         printed\n   An administrator\
    \ MAY define additional values using the 'name' or\n   'keyword' attribute syntax,\
    \ depending on implementation.\n   The effect of this attribute on jobs with multiple\
    \ documents MAY be\n   affected by the \"multiple-document-handling\" job attribute\
    \ (section\n   4.2.4), depending on the job sheet semantics.\n"
- title: 4.2.4 multiple-document-handling (type2 keyword)
  contents:
  - "4.2.4 multiple-document-handling (type2 keyword)\n   This attribute is relevant\
    \ only if a job consists of two or more\n   documents. This attribute MUST be\
    \ supported with at least one value\n   if the Printer supports multiple documents\
    \ per job (see sections\n   3.2.4 and 3.3.1).  The attribute controls finishing\
    \ operations and\n   the placement of one or more print-stream pages into impressions\
    \ and\n   onto media sheets.  When the value of the \"copies\" attribute exceeds\n\
    \   1, it also controls the order in which the copies that result from\n   processing\
    \ the documents are produced. For the purposes of this\n   explanations, if \"\
    a\" represents an instance of document data, then\n   the result of processing\
    \ the data in document \"a\" is a sequence of\n   media sheets represented by\
    \ \"a(*)\".\n   Standard keyword values are:\n      'single-document': If a Job\
    \ object has multiple documents, say,\n         the document data is called a\
    \ and b, then the result of\n         processing all the document data (a and\
    \ then b) MUST be treated\n         as a single sequence of media sheets for finishing\
    \ operations;\n         that is, finishing would be performed on the concatenation\
    \ of\n         the sequences a(*),b(*).  The Printer object MUST NOT force the\n\
    \         data in each document instance to be formatted onto a new\n        \
    \ print-stream page, nor to start a new impression on a new media\n         sheet.\
    \ If more than one copy is made, the ordering of the sets\n         of media sheets\
    \ resulting from processing the document data\n         MUST be a(*), b(*), a(*),\
    \ b(*), start on a new media sheet.\n      'separate-documents-uncollated-copies':\
    \ If a Job object has\n         multiple documents, say, the document data is\
    \ called a and b,\n         then the result of processing the data in each document\n\
    \         instance MUST be treated as a single sequence of media sheets\n    \
    \     for finishing operations; that is, the sets a(*) and b(*) would\n      \
    \   each be finished separately. The Printer object MUST force each\n        \
    \ copy of the result of processing the data in a single document\n         to\
    \ start on a new media sheet. If more than one copy is made,\n         the ordering\
    \ of the sets of media sheets resulting from\n         processing the document\
    \ data MUST be a(*), a(*), ..., b(*),\n         b(*) ... .\n      'separate-documents-collated-copies':\
    \ If a Job object has multiple\n         documents, say, the document data is\
    \ called a and b, then the\n         result of processing the data in each document\
    \ instance MUST be\n         treated as a single sequence of media sheets for\
    \ finishing\n         operations; that is, the sets a(*) and b(*) would each be\n\
    \         finished separately. The Printer object MUST force each copy of\n  \
    \       the result of processing the data in a single document to start\n    \
    \     on a new media sheet.  If more than one copy is made, the\n         ordering\
    \ of the sets of media sheets resulting from processing\n         the document\
    \ data MUST be a(*), b(*), a(*), b(*), ... .\n      'single-document-new-sheet':\
    \  Same as 'single-document', except\n         that the Printer object MUST ensure\
    \ that the first impression\n         of each document instance in the job is\
    \ placed on a new media\n         sheet.  This value allows multiple documents\
    \ to be stapled\n         together with a single staple where each document starts\
    \ on a\n         new sheet.\n   The 'single-document' value is the same as 'separate-documents-\n\
    \   collated-copies' with respect to ordering of print-stream pages, but\n   not\
    \ media sheet generation, since 'single-document' will put the\n   first page\
    \ of the next document on the back side of a sheet if an odd\n   number of pages\
    \ have been produced so far for the job, while\n   'separate-documents-collated-\
    \ copies' always forces the next document\n   or document copy on to a new sheet.\
    \  In addition, if the \"finishings\"\n   attribute specifies 'staple', then with\
    \ 'single-document', documents\n   a and b are stapled together as a single document\
    \ with no regard to\n   new sheets, with 'single-document-new-sheet', documents\
    \ a and b are\n   stapled together as a single document, but document b starts\
    \ on a new\n   sheet, but with 'separate-documents-uncollated-copies' and\n  \
    \ 'separate-documents-collated-copies', documents a and b are stapled\n   separately.\n\
    \   Note: None of these values provide means to produce uncollated sheets\n  \
    \ within a document, i.e., where multiple copies of sheet n are\n   produced before\
    \ sheet n+1 of the same document.\n   The relationship of this attribute and the\
    \ other attributes that\n   control document processing is described in section\
    \ 15.3.\n"
- title: 4.2.5 copies (integer(1:MAX))
  contents:
  - "4.2.5 copies (integer(1:MAX))\n   This attribute specifies the number of copies\
    \ to be printed.\n   On many devices the supported number of collated copies will\
    \ be\n   limited by the number of physical output bins on the device, and may\n\
    \   be different from the number of uncollated copies which can be\n   supported.\n\
    \   Note: The effect of this attribute on jobs with multiple documents is\n  \
    \ controlled by the \"multiple-document-handling\" job attribute (section\n  \
    \ 4.2.4) and the relationship of this attribute and the other\n   attributes that\
    \ control document processing is described in section\n   15.3.\n"
- title: 4.2.6 finishings (1setOf type2 enum)
  contents:
  - "4.2.6 finishings (1setOf type2 enum)\n   This attribute identifies the finishing\
    \ operations that the Printer\n   uses for each copy of each printed document\
    \ in the Job. For Jobs with\n   multiple documents, the \"multiple-document-handling\"\
    \ attribute\n   determines what constitutes a \"copy\" for purposes of finishing.\n\
    \   Standard enum values are:\n   Value  Symbolic Name and Description\n   '3'\
    \    'none':  Perform no finishing\n   '4'    'staple':  Bind the document(s)\
    \ with one or more staples. The\n             exact number and placement of the\
    \ staples is site-\n             defined.\n   '5'    'punch':  This value indicates\
    \ that holes are required in the\n             finished document. The exact number\
    \ and placement of the\n             holes is site-defined  The punch specification\
    \ MAY be\n             satisfied (in a site- and implementation-specific manner)\n\
    \             either by drilling/punching, or by substituting pre-\n         \
    \    drilled media.\n   '6'    'cover':  This value is specified when it is desired\
    \ to select\n             a non-printed (or pre-printed) cover for the document.\n\
    \             This does not supplant the specification of a printed\n        \
    \     cover (on cover stock medium) by the document itself.\n   '7'    'bind':\
    \  This value indicates that a binding is to be applied\n             to the document;\
    \ the type and placement of the binding is\n             site-defined.\n   '8'\
    \    'saddle-stitch':  Bind the document(s) with one or more\n             staples\
    \ (wire stitches) along the middle fold.  The exact\n             number and placement\
    \ of the staples and the middle fold\n             is implementation and/or site-defined.\n\
    \   '9'    'edge-stitch':  Bind the document(s) with one or more staples\n   \
    \          (wire stitches) along one edge.  The exact number and\n           \
    \  placement of the staples is implementation and/or site-\n             defined.\n\
    \   '10'-'19'   reserved for future generic finishing enum values.\n   The following\
    \ values are more specific; they indicate a corner or an\n   edge as if the document\
    \ were a portrait document (see below):\n   '20'   'staple-top-left':  Bind the\
    \ document(s) with one or more\n             staples in the top left corner.\n\
    \   '21'   'staple-bottom-left':  Bind the document(s) with one or more\n    \
    \         staples in the bottom left corner.\n   '22'   'staple-top-right':  Bind\
    \ the document(s) with one or more\n             staples in the top right corner.\n\
    \   '23'   'staple-bottom-right':  Bind the document(s) with one or more\n   \
    \          staples in the bottom right corner.\n   '24'   'edge-stitch-left':\
    \  Bind the document(s) with one or more\n             staples (wire stitches)\
    \ along the left edge.  The exact\n             number and placement of the staples\
    \ is implementation\n             and/or site-defined.\n   '25'   'edge-stitch-top':\
    \  Bind the document(s) with one or more\n             staples (wire stitches)\
    \ along the top edge.  The exact\n             number and placement of the staples\
    \ is implementation\n             and/or site-defined.\n   '26'   'edge-stitch-right':\
    \  Bind the document(s) with one or more\n             staples (wire stitches)\
    \ along the right edge.  The exact\n             number and placement of the staples\
    \ is implementation\n             and/or site-defined.\n   '27'   'edge-stitch-bottom':\
    \  Bind the document(s) with one or more\n             staples (wire stitches)\
    \ along the bottom edge.  The exact\n             number and placement of the\
    \ staples is implementation\n             and/or site-defined.\n   '28'   'staple-dual-left':\
    \  Bind the document(s) with two staples\n             (wire stitches) along the\
    \ left edge assuming a portrait\n             document (see above).\n   '29' \
    \  'staple-dual-top':  Bind the document(s) with two staples\n             (wire\
    \ stitches) along the top edge assuming a portrait\n             document (see\
    \ above).\n   '30'   'staple-dual-right':  Bind the document(s) with two staples\n\
    \             (wire stitches) along the right edge assuming a portrait\n     \
    \        document (see above).\n   '31'   'staple-dual-bottom':  Bind the document(s)\
    \ with two staples\n             (wire stitches) along the bottom edge assuming\
    \ a portrait\n             document (see above).\n   The 'staple-xxx' values are\
    \ specified with respect to the document as\n   if the document were a portrait\
    \ document.  If the document is\n   actually a landscape or a reverse-landscape\
    \ document, the client\n   supplies the appropriate transformed value.  For example,\
    \ to position\n   a staple in the upper left hand corner of a landscape document\
    \ when\n   held for reading, the client supplies the 'staple-bottom-left' value\n\
    \   (since landscape is defined as a +90 degree rotation of the image\n   with\
    \ respect to the media from portrait, i.e., anti-clockwise).  On\n   the other\
    \ hand, to position a staple in the upper left hand corner of\n   a reverse-landscape\
    \ document when held for reading, the client\n   supplies the 'staple-top-right'\
    \ value (since reverse-landscape is\n   defined as a -90 degree rotation of the\
    \ image with respect to the\n   media from portrait, i.e., clockwise).\n   The\
    \ angle (vertical, horizontal, angled) of each staple with respect\n   to the\
    \ document depends on the implementation which may in turn\n   depend on the value\
    \ of the attribute.\n   Note: The effect of this attribute on jobs with multiple\
    \ documents is\n   controlled by the \"multiple-document-handling\" job attribute\
    \ (section\n   4.2.4) and the relationship of this attribute and the other\n \
    \  attributes that control document processing is described in section\n   15.3.\n\
    \   If the client supplies a value of 'none' along with any other\n   combination\
    \ of values, it is the same as if only that other\n   combination of values had\
    \ been supplied (that is the 'none' value has\n   no effect).\n"
- title: 4.2.7 page-ranges (1setOf rangeOfInteger (1:MAX))
  contents:
  - "4.2.7 page-ranges (1setOf rangeOfInteger (1:MAX))\n   This attribute identifies\
    \ the range(s) of print-stream pages that the\n   Printer object uses for each\
    \ copy of each document which are to be\n   printed.  Nothing is printed for any\
    \ pages identified that do not\n   exist in the document(s).  Ranges MUST be in\
    \ ascending order, for\n   example: 1-3, 5-7, 15-19 and MUST NOT overlap, so that\
    \ a non-spooling\n   Printer object can process the job in a single pass.  If\
    \ the ranges\n   are not ascending or are overlapping, the IPP object MUST reject\
    \ the\n   request and return the 'client-error-bad-request' status code.  The\n\
    \   attribute is associated with print-stream pages not application-\n   numbered\
    \ pages (for example, the page numbers found in the headers\n   and or footers\
    \ for certain word processing applications).\n   For Jobs with multiple documents,\
    \ the \"multiple-document-handling\"\n   attribute determines what constitutes\
    \ a \"copy\" for purposes of the\n   specified page range(s).  When \"multiple-document-handling\"\
    \ is\n   'single-document', the Printer object MUST apply each supplied page\n\
    \   range once to the concatenation of the print-stream pages.  For\n   example,\
    \ if there are 8 documents of 10 pages each, the page-range\n   '41:60' prints\
    \ the pages in the 5th and 6th documents as a single\n   document and none of\
    \ the pages of the other documents are printed.\n   When \"multiple-document-\
    \ handling\" is 'separate-documents-\n   uncollated-copies' or 'separate-documents-collated-copies',\
    \ the\n   Printer object MUST apply each supplied page range repeatedly to each\n\
    \   document copy.  For the same job, the page-range '1:3, 10:10' would\n   print\
    \ the first 3 pages and the 10th page of each of the 8 documents\n   in the Job,\
    \ as 8 separate documents.\n   In most cases, the exact pages to be printed will\
    \ be generated by a\n   device driver and this attribute would not be required.\
    \  However,\n   when printing an archived document which has already been formatted,\n\
    \   the end user may elect to print just a subset of the pages contained\n   in\
    \ the document.  In this case, if page-range = n.m is specified, the\n   first\
    \ page to be printed will be page n. All subsequent pages of the\n   document\
    \ will be printed through and including page m.\n   \"page-ranges-supported\"\
    \ is a boolean value indicating whether or not\n   the printer is capable of supporting\
    \ the printing of page ranges.\n   This capability may differ from one PDL to\
    \ another. There is no\n   \"page-ranges-default\" attribute.  If the \"page-ranges\"\
    \ attribute is\n   not supplied by the client, all pages of the document will\
    \ be\n   printed.\n   Note: The effect of this attribute on jobs with multiple\
    \ documents is\n   controlled by the \"multiple-document-handling\" job attribute\
    \ (section\n   4.2.4) and the relationship of this attribute and the other\n \
    \  attributes that control document processing is described in section\n   15.3.\n"
- title: 4.2.8 sides (type2 keyword)
  contents:
  - "4.2.8 sides (type2 keyword)\n   This attribute specifies how print-stream pages\
    \ are to be imposed\n   upon the sides of an instance of a selected medium, i.e.,\
    \ an\n   impression.\n   The standard keyword values are:\n      'one-sided':\
    \ imposes each consecutive print-stream page upon the\n         same side of consecutive\
    \ media sheets.\n      'two-sided-long-edge': imposes each consecutive pair of\
    \ print-\n         stream pages upon front and back sides of consecutive media\n\
    \         sheets, such that the orientation of each pair of print-stream\n   \
    \      pages on the medium would be correct for the reader as if for\n       \
    \  binding on the long edge.  This imposition is sometimes called\n         'duplex'\
    \ or 'head-to-head'.\n      'two-sided-short-edge': imposes each consecutive pair\
    \ of print-\n         stream pages upon front and back sides of consecutive media\n\
    \         sheets, such that the orientation of each pair of print-stream\n   \
    \      pages on the medium would be correct for the reader as if for\n       \
    \  binding on the short edge.  This imposition is sometimes called\n         'tumble'\
    \ or 'head-to-toe'.\n      'two-sided-long-edge', 'two-sided-short-edge',\n  \
    \       'tumble', and 'duplex' all work the same for portrait or\n         landscape.\
    \  However\n         'head-to-toe' is\n      'tumble' in portrait but 'duplex'\
    \ in landscape.  'head-to-head'\n         also switches between 'duplex' and 'tumble'\
    \ when using portrait\n         and landscape modes.\n   Note: The effect of this\
    \ attribute on jobs with multiple documents is\n   controlled by the \"multiple-document-handling\"\
    \ job attribute (section\n   4.2.4) and the relationship of this attribute and\
    \ the other\n   attributes that control document processing is described in section\n\
    \   15.3.\n"
- title: 4.2.9 number-up (integer(1:MAX))
  contents:
  - "4.2.9 number-up (integer(1:MAX))\n   This attribute specifies the number of print-stream\
    \ pages to impose\n   upon a single side of an instance of a selected medium.\
    \  For example,\n   if the value is:\n   Value  Description\n   '1'    the Printer\
    \ MUST place one print-stream page on a single side\n             of an instance\
    \ of the selected medium (MAY add some sort\n             of translation, scaling,\
    \ or rotation).\n   '2'    the Printer MUST place two print-stream pages on a\
    \ single side\n             of an instance of the selected medium (MAY add some\
    \ sort\n             of translation, scaling, or rotation).\n   '4'    the Printer\
    \ MUST place four print-stream pages on a single\n             side of an instance\
    \ of the selected medium (MAY add some\n             sort of translation, scaling,\
    \ or rotation).\n   This attribute primarily controls the translation, scaling\
    \ and\n   rotation of print-stream pages.\n   Note: The effect of this attribute\
    \ on jobs with multiple documents is\n   controlled by the \"multiple-document-handling\"\
    \ job attribute (section\n   4.2.4) and the relationship of this attribute and\
    \ the other\n   attributes that control document processing is described in section\n\
    \   15.3.\n"
- title: 4.2.10 orientation-requested (type2 enum)
  contents:
  - "4.2.10 orientation-requested (type2 enum)\n   This attribute indicates the desired\
    \ orientation for printed print-\n   stream pages; it does not describe the orientation\
    \ of the client-\n   supplied print-stream pages.\n   For some document formats\
    \ (such as 'application/postscript'), the\n   desired orientation of the print-stream\
    \ pages is specified within the\n   document data.  This information is generated\
    \ by a device driver\n   prior to the submission of the print job.  Other document\
    \ formats\n   (such as 'text/plain') do not include the notion of desired\n  \
    \ orientation within the document data.  In the latter case it is\n   possible\
    \ for the Printer object to bind the desired orientation to\n   the document data\
    \ after it has been submitted.  It is expected that a\n   Printer object would\
    \ only support \"orientations-requested\" for some\n   document formats (e.g.,\
    \ 'text/plain' or 'text/html') but not others\n   (e.g., 'application/postscript').\
    \  This is no different than any\n   other Job Template attribute since section\
    \ 4.2, item 1, points out\n   that a Printer object may support or not support\
    \ any Job Template\n   attribute based on the document format supplied by the\
    \ client.\n   However, a special mention is made here since it is very likely\
    \ that\n   a Printer object will support \"orientation-requested\" for only a\n\
    \   subset of the supported document formats.\n   Standard enum values are:\n\
    \   Value  Symbolic Name and Description\n   '3'    'portrait':  The content will\
    \ be imaged across the short edge\n             of the medium.\n   '4'    'landscape':\
    \  The content will be imaged across the long edge\n             of the medium.\
    \  Landscape is defined to be a rotation of\n             the print-stream page\
    \ to be imaged by +90 degrees with\n             respect to the medium (i.e. anti-clockwise)\
    \ from the\n             portrait orientation.  Note:  The +90 direction was\n\
    \             chosen because simple finishing on the long edge is the\n      \
    \       same edge whether portrait or landscape\n   '5'    'reverse-landscape':\
    \  The content will be imaged across the\n             long edge of the medium.\
    \  Reverse-landscape is defined to\n             be a rotation of the print-stream\
    \ page to be imaged by -\n             90 degrees with respect to the medium (i.e.\
    \ clockwise)\n             from the portrait orientation.  Note: The 'reverse-\n\
    \             landscape' value was added because some applications\n         \
    \    rotate landscape -90 degrees from portrait, rather than\n             +90\
    \ degrees.\n   '6'    'reverse-portrait':  The content will be imaged across the\n\
    \             short edge of the medium.  Reverse-portrait is defined to\n    \
    \         be a rotation of the print-stream page to be imaged by\n           \
    \  180 degrees with respect to the medium from the portrait\n             orientation.\
    \  Note: The 'reverse-portrait' value was\n             added for use with the\
    \ \"finishings\" attribute in cases\n             where the opposite edge is desired\
    \ for finishing a\n             portrait document on simple finishing devices\
    \ that have\n             only one finishing position.  Thus a 'text'/plain'\n\
    \             portrait document can be stapled \"on the right\" by a\n       \
    \      simple finishing device as is common use with some middle\n           \
    \  eastern languages such as Hebrew.\n   Note: The effect of this attribute on\
    \ jobs with multiple documents is\n   controlled by the \"multiple-document-handling\"\
    \ job attribute (section\n   4.2.4) and the relationship of this attribute and\
    \ the other\n   attributes that control document processing is described in section\n\
    \   15.3.\n"
- title: 4.2.11 media (type3 keyword | name(MAX))
  contents:
  - "4.2.11 media (type3 keyword | name(MAX))\n   This attribute identifies the medium\
    \ that the Printer uses for all\n   impressions of the Job.\n   The values for\
    \ \"media\" include medium-names, medium-sizes, input-\n   trays and electronic\
    \ forms so that one attribute specifies the media.\n   If a Printer object supports\
    \ a medium name as a value of this\n   attribute, such a medium name implicitly\
    \ selects an input-tray that\n   contains the specified medium.  If a Printer\
    \ object supports a medium\n   size as a value of this attribute, such a medium\
    \ size implicitly\n   selects a medium name that in turn implicitly selects an\
    \ input-tray\n   that contains the medium with the specified size.  If a Printer\n\
    \   object supports an input-tray as the value of this attribute, such an\n  \
    \ input-tray implicitly selects the medium that is in that input-tray\n   at the\
    \ time the job prints.  This case includes manual-feed input-\n   trays.  If a\
    \ Printer object supports an electronic form as the value\n   of this attribute,\
    \ such an electronic form implicitly selects a\n   medium-name that in turn implicitly\
    \ selects an input-tray that\n   contains the medium specified by the electronic\
    \ form.  The electronic\n   form also implicitly selects an image that the Printer\
    \ MUST merge\n   with the document data as its prints each page.\n   Standard\
    \ keyword values are taken from ISO DPA [ISO10175], the\n   Printer MIB [RFC1759],\
    \ and ASME-Y14.1M [ASME-Y14.1M] and are listed\n   in section 14.  An administrator\
    \ MAY define additional values using\n   the 'name' or 'keyword' attribute syntax,\
    \ depending on\n   implementation.\n   There is also an additional Printer attribute\
    \ named \"media-ready\"\n   which differs from \"media-supported\" in that legal\
    \ values only\n   include the subset of \"media-supported\" values that are physically\n\
    \   loaded and ready for printing with no operator intervention required.\n  \
    \ If an IPP object supports \"media-supported\", it NEED NOT support\n   \"media-ready\"\
    .\n   The relationship of this attribute and the other attributes that\n   control\
    \ document processing is described in section 15.3.\n"
- title: 4.2.12 printer-resolution (resolution)
  contents:
  - "4.2.12 printer-resolution (resolution)\n   This attribute identifies the resolution\
    \ that Printer uses for the\n   Job.\n"
- title: 4.2.13 print-quality (type2 enum)
  contents:
  - "4.2.13 print-quality (type2 enum)\n   This attribute specifies the print quality\
    \ that the Printer uses for\n   the Job.\n   The standard enum values are:\n \
    \  Value  Symbolic Name and Description\n   '3'    'draft': lowest quality available\
    \ on the printer\n   '4'    'normal': normal or intermediate quality on the printer\n\
    \   '5'    'high': highest quality available on the printer\n"
- title: 4.3 Job Description Attributes
  contents:
  - "4.3 Job Description Attributes\n   The attributes in this section form the attribute\
    \ group called \"job-\n   description\".  The following table summarizes these\
    \ attributes.  The\n   third column indicates whether the attribute is a REQUIRED\
    \ attribute\n   that MUST be supported by Printer objects.  If it is not indicated\
    \ as\n   REQUIRED, then it is OPTIONAL.  The maximum size in octets for 'text'\n\
    \   and 'name' attributes is indicated in parenthesizes.\n   +----------------------------+----------------------+--------------+\n\
    \   |      Attribute             |     Syntax           |   REQUIRED?  |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-uri                    | uri                  |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-id                     | integer(1:MAX)       |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-printer-uri            | uri                  |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-more-info              | uri                  |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-name                   | name (MAX)           |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-originating-user-name  | name (MAX)           |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-state                  | type1 enum           |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-state-reasons          | 1setOf type2 keyword |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-state-message          | text (MAX)           |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-detailed-status-       | 1setOf text (MAX)    |              |\n   |\
    \       messages             |                      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-document-access-errors | 1setOf text (MAX)    |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | number-of-documents        | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | output-device-assigned     | name (127)           |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | time-at-creation           | integer (MIN:MAX)    |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | time-at-processing         | integer (MIN:MAX)    |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | time-at-completed          | integer (MIN:MAX)    |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-printer-up-time        | integer (1:MAX)      |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | date-time-at-creation      | dateTime             |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | date-time-at-processing    | dateTime             |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | date-time-at-completed     | dateTime             |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | number-of-intervening-jobs | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-message-from-operator  | text (127)           |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-k-octets               | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-impressions            | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-media-sheets           | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-k-octets-processed     | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-impressions-completed  | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | job-media-sheets-completed | integer (0:MAX)      |              |\n   +----------------------------+----------------------+--------------+\n\
    \   | attributes-charset         | charset              |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n\
    \   | attributes-natural-language| naturalLanguage      |  REQUIRED    |\n   +----------------------------+----------------------+--------------+\n"
- title: 4.3.1 job-uri (uri)
  contents:
  - "4.3.1 job-uri (uri)\n   This REQUIRED attribute contains the URI for the job.\
    \  The Printer\n   object, on receipt of a new job, generates a URI which identifies\
    \ the\n   new Job.  The Printer object returns the value of the \"job-uri\"\n\
    \   attribute as part of the response to a create request.  The precise\n   format\
    \ of a Job URI is implementation dependent.  If the Printer\n   object supports\
    \ more than one URI and there is some relationship\n   between the newly formed\
    \ Job URI and the Printer object's URI, the\n   Printer object uses the Printer\
    \ URI supplied by the client in the\n   create request.  For example, if the create\
    \ request comes in over a\n   secure channel, the new Job URI MUST use the same\
    \ secure channel.\n   This can be guaranteed because the Printer object is responsible\
    \ for\n   generating the Job URI and the Printer object is aware of its\n   security\
    \ configuration and policy as well as the Printer URI used in\n   the create request.\n\
    \   For a description of this attribute and its relationship to \"job-id\"\n \
    \  and \"job-printer-uri\" attribute, see the discussion in section 2.4 on\n \
    \  \"Object Identity\".\n"
- title: 4.3.2 job-id (integer(1:MAX))
  contents:
  - "4.3.2 job-id (integer(1:MAX))\n   This REQUIRED attribute contains the ID of\
    \ the job.  The Printer, on\n   receipt of a new job, generates an ID which identifies\
    \ the new Job on\n   that Printer.  The Printer returns the value of the \"job-id\"\
    \n   attribute as part of the response to a create request.  The 0 value\n   is\
    \ not included to allow for compatibility with SNMP index values\n   which also\
    \ cannot be 0.\n   For a description of this attribute and its relationship to\
    \ \"job-uri\"\n   and \"job-printer-uri\" attribute, see the discussion in section\
    \ 2.4 on\n   \"Object Identity\".\n"
- title: 4.3.3 job-printer-uri (uri)
  contents:
  - "4.3.3 job-printer-uri (uri)\n   This REQUIRED attribute identifies the Printer\
    \ object that created\n   this Job object.  When a Printer object creates a Job\
    \ object, it\n   populates this attribute with the Printer object URI that was\
    \ used in\n   the create request.  This attribute permits a client to identify\
    \ the\n   Printer object that created this Job object when only the Job\n   object's\
    \ URI is available to the client.  The client queries the\n   creating Printer\
    \ object to determine which languages, charsets,\n   operations, are supported\
    \ for this Job.\n   For a description of this attribute and its relationship to\
    \ \"job-uri\"\n   and \"job-id\" attribute, see the discussion in section 2.4\
    \ on \"Object\n   Identity\".\n"
- title: 4.3.4 job-more-info (uri)
  contents:
  - "4.3.4 job-more-info (uri)\n   Similar to \"printer-more-info\", this attribute\
    \ contains the URI\n   referencing some resource with more information about this\
    \ Job\n   object, perhaps an HTML page containing information about the Job.\n"
- title: 4.3.5 job-name (name(MAX))
  contents:
  - "4.3.5 job-name (name(MAX))\n   This REQUIRED attribute is the name of the job.\
    \  It is a name that is\n   more user friendly than the \"job-uri\" attribute\
    \ value.  It does not\n   need to be unique between Jobs.  The Job's \"job-name\"\
    \ attribute is\n   set to the value supplied by the client in the \"job-name\"\
    \ operation\n   attribute in the create request (see Section 3.2.1.1).   If, however,\n\
    \   the \"job-name\" operation attribute is not supplied by the client in\n  \
    \ the create request, the Printer object, on creation of the Job, MUST\n   generate\
    \ a name.  The printer SHOULD generate the value of the Job's\n   \"job-name\"\
    \ attribute from the first of the following sources that\n   produces a value:\
    \ 1) the \"document-name\" operation attribute of the\n   first (or only) document,\
    \ 2) the \"document-URI\" attribute of the\n   first (or only) document, or 3)\
    \ any other piece of Job specific\n   and/or Document Content information.\n"
- title: 4.3.6 job-originating-user-name (name(MAX))
  contents:
  - "4.3.6 job-originating-user-name (name(MAX))\n   This REQUIRED attribute contains\
    \ the name of the end user that\n   submitted the print job.  The Printer object\
    \ sets this attribute to\n   the most authenticated printable name that it can\
    \ obtain from the\n   authentication service over which the IPP operation was\
    \ received.\n   Only if such is not available, does the Printer object use the\
    \ value\n   supplied by the client in the \"requesting-user-name\" operation\n\
    \   attribute of the create operation (see Sections 4.4.2, 4.4.3, and 8).\n  \
    \ Note:  The Printer object needs to keep an internal originating user\n   id\
    \ of some form, typically as a credential of a principal, with the\n   Job object.\
    \  Since such an internal attribute is implementation-\n   dependent and not of\
    \ interest to clients, it is not specified as a\n   Job Description attribute.\
    \  This originating user id is used for\n   authorization checks (if any) on all\
    \ subsequent operations.\n"
- title: 4.3.7 job-state (type1 enum)
  contents:
  - "4.3.7 job-state (type1 enum)\n   This REQUIRED attribute identifies the current\
    \ state of the job.\n   Even though the IPP protocol defines seven values for\
    \ job states\n   (plus the out-of-band 'unknown' value - see Section 4.1),\n \
    \  implementations only need to support those states which are\n   appropriate\
    \ for the particular implementation.  In other words, a\n   Printer supports only\
    \ those job states implemented by the output\n   device and available to the Printer\
    \ object implementation.\n   Standard enum values are:\n   Values Symbolic Name\
    \ and Description\n   '3'  'pending':  The job is a candidate to start processing,\
    \ but is\n           not yet processing.\n   '4'  'pending-held':  The job is\
    \ not a candidate for processing for\n           any number of reasons but will\
    \ return to the 'pending'\n           state as soon as the reasons are no longer\
    \ present.  The\n           job's \"job-state-reason\" attribute MUST indicate\
    \ why the\n           job is no longer a candidate for processing.\n   '5'  'processing':\
    \  One or more of:\n           1.  the job is using, or is attempting to use,\
    \ one or\n           more purely software processes that are analyzing,\n    \
    \       creating, or interpreting a PDL, etc.,\n           2.  the job is using,\
    \ or is attempting to use, one or\n           more hardware devices that are interpreting\
    \ a PDL, making\n           marks on a medium, and/or performing finishing, such\
    \ as\n           stapling, etc.,\n           3. the Printer object has made the\
    \ job ready for\n           printing, but the output device is not yet printing\
    \ it,\n           either because the job hasn't reached the output device\n  \
    \         or because the job is queued in the output device or some\n        \
    \   other spooler, awaiting the output device to print it.\n           When the\
    \ job is in the 'processing' state, the entire job\n           state includes\
    \ the detailed status represented in the\n           Printer object's \"printer-state\"\
    , \"printer-state-\n           reasons\", and \"printer-state-message\" attributes.\n\
    \           Implementations MAY, though they NEED NOT,  include\n           additional\
    \ values in the job's \"job-state-reasons\"\n           attribute to indicate\
    \ the progress of the job, such as\n           adding the 'job-printing' value\
    \ to indicate when the\n           output device is actually making marks on paper\
    \ and/or\n           the 'processing-to-stop-point' value to indicate that the\n\
    \           IPP object is in the process of canceling or aborting the\n      \
    \     job.  Most implementations won't bother with this nuance.\n   '6'  'processing-stopped':\
    \  The job has stopped while processing\n           for any number of reasons\
    \ and will return to the\n           'processing' state as soon as the reasons\
    \ are no longer\n           present.\n           The job's \"job-state-reason\"\
    \ attribute MAY indicate why\n           the job has stopped processing.  For\
    \ example, if the\n           output device is stopped, the 'printer-stopped'\
    \ value MAY\n           be included in the job's \"job-state-reasons\" attribute.\n\
    \           Note:  When an output device is stopped, the device\n           usually\
    \ indicates its condition in human readable form\n           locally at the device.\
    \  A client can obtain more complete\n           device status remotely by querying\
    \ the Printer object's\n           \"printer-state\", \"printer-state-reasons\"\
    \ and \"printer-\n           state-message\" attributes.\n   '7'  'canceled':\
    \  The job has been canceled by a Cancel-Job\n           operation and the Printer\
    \ object has completed canceling\n           the job and all job status attributes\
    \ have reached their\n           final values for the job.  While the Printer\
    \ object is\n           canceling the job, the job remains in its current state,\n\
    \           but the job's \"job-state-reasons\" attribute SHOULD\n           contain\
    \ the 'processing-to-stop-point' value and one of\n           the 'canceled-by-user',\
    \ 'canceled-by-operator', or\n           'canceled-at-device' value.  When the\
    \ job moves to the\n           'canceled' state, the  'processing-to-stop-point'\
    \ value,\n           if present, MUST be removed, but the 'canceled-by-xxx',\n\
    \           if present, MUST remain.\n   '8'  'aborted':  The job has been aborted\
    \ by the system, usually\n           while the job was in the 'processing' or\
    \ 'processing-\n           stopped' state and the Printer has completed aborting\
    \ the\n           job and all job status attributes have reached their\n     \
    \      final values for the job.  While the Printer object is\n           aborting\
    \ the job, the job remains in its current state,\n           but the job's \"\
    job-state-reasons\" attribute SHOULD\n           contain the 'processing-to-stop-point'\
    \ and 'aborted-by-\n           system' values.  When the job moves to the 'aborted'\n\
    \           state, the  'processing-to-stop-point' value, if present,\n      \
    \     MUST be removed, but the 'aborted-by-system' value, if\n           present,\
    \ MUST remain.\n   '9'  'completed':  The job has completed successfully or with\n\
    \           warnings or errors after processing and all of the job\n         \
    \  media sheets have been successfully stacked in the\n           appropriate\
    \ output bin(s) and all job status attributes\n           have reached their final\
    \ values for the job.  The job's\n           \"job-state-reasons\" attribute SHOULD\
    \ contain one of:\n           'completed-successfully', 'completed-with-warnings',\
    \ or\n           'completed-with-errors' values.\n   The final value for this\
    \ attribute MUST be one of: 'completed',\n   'canceled', or 'aborted' before the\
    \ Printer removes the job\n   altogether.  The length of time that jobs remain\
    \ in the 'canceled',\n   'aborted', and 'completed' states depends on implementation.\
    \  See\n   section 4.3.7.2.\n   The following figure shows the normal job state\
    \ transitions.\n                                                      +----> canceled\n\
    \                                                     /\n       +----> pending\
    \ --------> processing ---------+------> completed\n       |         ^       \
    \            ^               \\\n   --->+         |                   |      \
    \          +----> aborted\n       |         v                   v            \
    \   /\n       +----> pending-held    processing-stopped ---+\n   Normally a job\
    \ progresses from left to right.  Other state\n   transitions are unlikely, but\
    \ are not forbidden.  Not shown are the\n   transitions to the 'canceled' state\
    \ from the 'pending', 'pending-\n   held', and 'processing-stopped' states.\n\
    \   Jobs reach one of the three terminal states: 'completed', 'canceled',\n  \
    \ or 'aborted', after the jobs have completed all activity, including\n   stacking\
    \ output media, after the jobs have completed all activity,\n   and all job status\
    \ attributes have reached their final values for the\n   job.\n"
- title: 4.3.7.1 Forwarding Servers
  contents:
  - "4.3.7.1 Forwarding Servers\n   As with all other IPP attributes, if the implementation\
    \ cannot\n   determine the correct value for this attribute, it SHOULD respond\n\
    \   with the out-of-band value 'unknown' (see section 4.1) rather than\n   try\
    \ to guess at some possibly incorrect value and give the end user\n   the wrong\
    \ impression about the state of the Job object.  For example,\n   if the implementation\
    \ is just a gateway into some printing system\n   from which it can normally get\
    \ status, but temporarily is unable,\n   then the implementation should return\
    \ the 'unknown' value.  However,\n   if the implementation is a gateway to a printing\
    \ system that never\n   provides detailed status about the print job, the implementation\
    \ MAY\n   set the IPP Job object's state  to 'completed', provided that it also\n\
    \   sets the 'queued-in-device' value in the job's \"job-state-reasons\"\n   attribute\
    \ (see section 4.3.8).\n"
- title: 4.3.7.2 Partitioning of Job States
  contents:
  - "4.3.7.2 Partitioning of Job States\n   This section partitions the 7 job states\
    \ into phases:  Job Not\n   Completed, Job Retention, Job History, and Job Removal.\
    \  This section\n   also explains the 'job-restartable' value of the \"job-state-reasons\"\
    \n   Job Description attribute for use with the Restart-Job operation.\n   Job\
    \ Not Completed:  When a job is in the 'pending', 'pending-held',\n   'processing',\
    \ or 'processing-stopped' states, the job is not\n   completed.\n   Job Retention:\
    \  When a job enters one of the three terminal job\n   states:  'completed', 'canceled',\
    \ or 'aborted', the IPP Printer\n   object MAY \"retain\" the job in a restartable\
    \ condition for an\n   implementation-defined time period.  This time period MAY\
    \ be zero\n   seconds and MAY depend on the terminal job state.  This phase is\n\
    \   called Job Retention.  While in the Job Retention phase, the job's\n   document\
    \ data is retained and a client may restart the job using the\n   Restart-Job\
    \ operation.  If the IPP object supports the Restart-Job\n   operation, then it\
    \ SHOULD indicate that the job is restartable by\n   adding the 'job-restartable'\
    \ value to the job's \"job-state-reasons\"\n   attribute (see Section 4.3.8) during\
    \ the Job Retention phase.\n   Job History:  After the Job Retention phase expires\
    \ for a job, the\n   Printer object deletes the document data for the job and\
    \ the job\n   becomes part of the Job History.  The Printer object MAY also delete\n\
    \   any number of the job attributes.  Since the job is no longer\n   restartable,\
    \ the Printer object MUST remove the 'job-restartable'\n   value from the job's\
    \ \"job-state-reasons\" attribute, if present.\n   Job Removal:  After the job\
    \ has remained in the Job History for an\n   implementation-defined time, such\
    \ as when the number of jobs exceeds\n   a fixed number or after a fixed time\
    \ period (which MAY be zero\n   seconds), the IPP Printer removes the job from\
    \ the system.\n   Using the Get-Jobs operation and supplying the 'not-completed'\
    \ value\n   for the \"which-jobs\" operation attribute, a client is requesting\
    \ jobs\n   in the Job Not Completed phase.  Using the Get-Jobs operation and\n\
    \   supplying the 'completed' value for the \"which-jobs\" operation\n   attribute,\
    \ a client is requesting jobs in the Job Retention and Job\n   History phases.\
    \  Using the Get-Job-Attributes operation, a client is\n   requesting a job in\
    \ any phase except Job Removal.  After Job Removal,\n   the Get-Job-Attributes\
    \ and Get-Jobs operations no longer are capable\n   of returning any information\
    \ about a job.\n"
- title: 4.3.8 job-state-reasons (1setOf type2 keyword)
  contents:
  - "4.3.8 job-state-reasons (1setOf type2 keyword)\n   This REQUIRED attribute provides\
    \ additional information about the\n   job's current state, i.e., information\
    \ that augments the value of the\n   job's \"job-state\" attribute.\n   These\
    \ values MAY be used with any job state or states for which the\n   reason makes\
    \ sense.  Some of these value definitions indicate\n   conformance requirements;\
    \ the rest are OPTIONAL.  Furthermore, when\n   implemented, the Printer MUST\
    \ return these values when the reason\n   applies and MUST NOT return them when\
    \ the reason no longer applies\n   whether the value of the Job's \"job-state\"\
    \ attribute changed or not.\n   When the Job does not have any reasons for being\
    \ in its current\n   state, the value of the Job's \"job-state-reasons\" attribute\
    \ MUST be\n   'none'.\n   Note: While values cannot be added to the 'job-state'\
    \ attribute\n   without impacting deployed clients that take actions upon receiving\n\
    \   \"job-state\" values, it is the intent that additional \"job-state-\n   reasons\"\
    \ values can be defined and registered without impacting such\n   deployed clients.\
    \  In other words, the \"job-state-reasons\" attribute\n   is intended to be extensible.\n\
    \   The following standard keyword values are defined.  For ease of\n   understanding,\
    \ the values are presented in the order in which the\n   reasons are likely to\
    \ occur (if implemented), starting with the\n   'job-incoming' value:\n      'none':\
    \  There are no reasons for the job's current state.  This\n         state reason\
    \ is semantically equivalent to \"job-state-reasons\"\n         without any value\
    \ and MUST be used when there is no other\n         value, since the 1setOf attribute\
    \ syntax requires at least one\n         value.\n      'job-incoming':  Either\
    \ (1) the Printer has accepted the Create-\n         Job operation and is expecting\
    \ additional Send-Document and/or\n         Send-URI operations, or (2) the Printer\
    \ is retrieving/accepting\n         document data as a result of a Print-Job,\
    \ Print-URI, Send-\n         Document or Send-URI operation.\n      'job-data-insufficient':\
    \  The Create-Job operation has been\n         accepted by the Printer, but the\
    \ Printer is expecting\n         additional document data before it can move the\
    \ job into the\n         'processing' state.  If a Printer starts processing before\
    \ it\n         has received all data, the Printer removes the 'job-data-\n   \
    \      insufficient' reason, but the 'job-incoming' remains.  If a\n         Printer\
    \ starts processing after it has received all data, the\n         Printer removes\
    \ the 'job-data-insufficient' reason and the\n         'job-incoming' at the same\
    \ time.\n      'document-access-error':  After accepting a Print-URI or Send-URI\n\
    \         request, the Printer could not access one or more documents\n      \
    \   passed by reference.  This reason is intended to cover any file\n        \
    \ access problem, including file does not exist and access denied\n         because\
    \ of an access control problem.  The Printer MAY also\n         indicate the document\
    \ access error using the \"job-document-\n         access-errors\" Job Description\
    \ attribute (see section 4.3.11).\n         Whether the Printer aborts the job\
    \ and moves the job to the\n         'aborted' job state or prints all documents\
    \ that are accessible\n         and moves the job to the 'completed' job state\
    \ and adds the\n         'completed-with-errors' value in the job's \"job-state-reasons\"\
    \n         attribute depends on implementation and/or site policy.  This\n   \
    \      value SHOULD be supported if the Print-URI or Send-URI\n         operations\
    \ are supported.\n      'submission-interrupted':  The job was not completely\
    \ submitted\n         for some unforeseen reason, such as: (1) the Printer has\n\
    \         crashed before the job was closed by the client, (2) the\n         Printer\
    \ or the document transfer method has crashed in some\n         non-recoverable\
    \ way before the document data was entirely\n         transferred to the Printer,\
    \ (3) the client crashed or failed to\n         close the job before the time-out\
    \ period.  See section 4.4.31.\n      'job-outgoing':  The Printer is transmitting\
    \ the job to the output\n         device.\n      'job-hold-until-specified': \
    \ The value of the job's \"job-hold-\n         until\" attribute was specified\
    \ with a time period that is still\n         in the future.  The job MUST NOT\
    \ be a candidate for processing\n         until this reason is removed and there\
    \ are no other reasons to\n         hold the job.  This value SHOULD be supported\
    \ if the \"job-\n         hold-until\" Job Template attribute is supported.\n\
    \      'resources-are-not-ready':  At least one of the resources needed\n    \
    \     by the job, such as media, fonts, resource objects, etc., is\n         not\
    \ ready on any of the physical printer's for which the job is\n         a candidate.\
    \  This condition MAY be detected when the job is\n         accepted, or subsequently\
    \ while the job is pending or\n         processing, depending on implementation.\
    \  The job may remain in\n         its current state or be moved to the 'pending-held'\
    \ state,\n         depending on implementation and/or job scheduling policy.\n\
    \      'printer-stopped-partly':  The value of the Printer's \"printer-\n    \
    \     state-reasons\" attribute contains the value 'stopped-partly'.\n      'printer-stopped':\
    \  The value of the Printer's \"printer-state\"\n         attribute is 'stopped'.\n\
    \      'job-interpreting': Job is in the 'processing' state, but more\n      \
    \   specifically, the Printer is interpreting the document data.\n      'job-queued':\
    \ Job is in the 'processing' state, but more\n         specifically, the Printer\
    \ has queued the document data.\n      'job-transforming': Job is in the 'processing'\
    \ state, but more\n         specifically, the Printer is interpreting document\
    \ data and\n         producing another electronic representation.\n      'job-queued-for-marker':\
    \ Job is in any of the 'pending-held',\n         'pending', or 'processing' states,\
    \ but more specifically, the\n         Printer has completed enough processing\
    \ of the document to be\n         able to start marking and the job is waiting\
    \ for the marker.\n         Systems that require human intervention to release\
    \ jobs using\n         the Release-Job operation, put the job into the 'pending-held'\n\
    \         job state.  Systems that automatically select a job to use the\n   \
    \      marker put the job into the  'pending' job state or keep the\n        \
    \ job in the 'processing' job state while waiting for the marker,\n         depending\
    \ on implementation.  All implementations put the job\n         into (or back\
    \ into) the 'processing' state when marking does\n         begin.\n      'job-printing':\
    \  The output device is marking media. This value is\n         useful for Printers\
    \ which spend a great deal of time processing\n         (1) when no marking is\
    \ happening and then want to show that\n         marking is now happening or (2)\
    \ when the job is in the process\n         of being canceled or aborted while\
    \ the job remains in the\n         'processing' state, but the marking has not\
    \ yet stopped so that\n         impression or sheet counts are still increasing\
    \ for the job.\n      'job-canceled-by-user':  The job was canceled by the owner\
    \ of the\n         job using the Cancel-Job request, i.e., by a user whose\n \
    \        authenticated identity is the same as the value of the\n         originating\
    \ user that created the Job object, or by some other\n         authorized end-user,\
    \ such as a member of the job owner's\n         security group.  This value SHOULD\
    \ be supported.\n      'job-canceled-by-operator':  The job was canceled by the\
    \ operator\n         using the Cancel-Job request, i.e., by a user who has been\n\
    \         authenticated as having operator privileges (whether local or\n    \
    \     remote).  If the security policy is to allow anyone to cancel\n        \
    \ anyone's job, then this value may be used when the job is\n         canceled\
    \ by other than the owner of the job.  For such a\n         security policy, in\
    \ effect, everyone is an operator as far as\n         canceling jobs with IPP\
    \ is concerned.  This value SHOULD be\n         supported if the implementation\
    \ permits canceling by other than\n         the owner of the job.\n      'job-canceled-at-device':\
    \  The job was canceled by an unidentified\n         local user, i.e., a user\
    \ at a console at the device.  This\n         value SHOULD be supported if the\
    \ implementation supports\n         canceling jobs at the console.\n      'aborted-by-system':\
    \  The job (1) is in the process of being\n         aborted, (2) has been aborted\
    \ by the system and placed in the\n         'aborted' state, or (3) has been aborted\
    \ by the system and\n         placed in the 'pending-held' state, so that a user\
    \ or operator\n         can manually try the job again.  This value SHOULD be\n\
    \         supported.\n      'unsupported-compression': The job was aborted by\
    \ the system\n         because the Printer determined while attempting to decompress\n\
    \         the document-data's that the compression is actually not among\n   \
    \      those supported by the Printer.  This value MUST be supported,\n      \
    \   since \"compressions is a REQUIRED operation attribute.\n      'compression-error':\
    \ The job was aborted by the system because the\n         Printer encountered\
    \ an error in the document-data while\n         decompressing it.  If the Printer\
    \ posts this reason, the\n         document-data has already passed any tests\
    \ that would have led\n         to the 'unsupported-compression' job-state-reason.\n\
    \      'unsupported-document-format': The job was aborted by the system\n    \
    \     because the document-data's document-format is not among those\n       \
    \  supported by the Printer.  If the client specifies the\n         document-format\
    \ as 'application/octet-stream', the printer MAY\n         abort the job and post\
    \ this reason even though the format is a\n         member of the \"document-format-supported\"\
    \ printer attribute,\n         but not among the auto-sensed document-formats.\
    \  This value\n         MUST be supported, since \"document-format\" is a REQUIRED\n\
    \         operation attribute.\n      'document-format-error': The job was aborted\
    \ by the system because\n         the Printer encountered an error in the document-data\
    \ while\n         processing it.  If the Printer posts this reason, the\n    \
    \     document-data has already passed any tests that would have led\n       \
    \  to the 'unsupported-document-format' job-state-reason.\n      'processing-to-stop-point':\
    \  The requester has issued a Cancel-Job\n         operation or the Printer object\
    \ has aborted the job, but is\n         still performing some actions on the job\
    \ until a specified stop\n         point occurs or job termination/cleanup is\
    \ completed.\n         If the implementation requires some measurable time to\
    \ cancel\n         the job in the 'processing' or 'processing-stopped' job states,\n\
    \         the IPP object MUST use this value to indicate that the Printer\n  \
    \       object is still performing some actions on the job while the\n       \
    \  job remains in the 'processing' or 'processing-stopped' state.\n         After\
    \ all the job's job description attributes have stopped\n         incrementing,\
    \ the Printer object moves the job from the\n         'processing' state to the\
    \ 'canceled' or\n         'aborted' job states.\n      'service-off-line':  The\
    \ Printer is off-line and accepting no\n         jobs.  All 'pending' jobs are\
    \ put into the 'pending-held'\n         state.  This situation could be true if\
    \ the service's or\n         document transform's input is impaired or broken.\n\
    \      'job-completed-successfully':  The job completed successfully.\n      \
    \   This value SHOULD be supported.\n      'job-completed-with-warnings':  The\
    \ job completed with warnings.\n         This value SHOULD be supported if the\
    \ implementation detects\n         warnings.\n      'job-completed-with-errors':\
    \  The job completed with errors (and\n         possibly warnings too).  This\
    \ value SHOULD be supported if the\n         implementation detects errors.\n\
    \      'job-restartable' - This job is retained (see section 4.3.7.2) and\n  \
    \       is currently able to be restarted using the Restart-Job\n         operation\
    \ (see section 3.3.7).  If 'job-restartable' is a value\n         of the job's\
    \ 'job-state-reasons' attribute, then the IPP object\n         MUST accept a Restart-Job\
    \ operation for that job.  This value\n         SHOULD be supported if the Restart-Job\
    \ operation is supported.\n      'queued-in-device': The job has been forwarded\
    \ to a device or\n         print system that is unable to send back status.  The\
    \ Printer\n         sets the job's \"job-state \" attribute to 'completed'  and\
    \ adds\n         the 'queued-in-device' value to the job's \"job-state-reasons\"\
    \n         attribute to indicate that the Printer has no additional\n        \
    \ information about the job and never will have any better\n         information.\
    \  See section 4.3.7.1.\n"
- title: 4.3.9 job-state-message (text(MAX))
  contents:
  - "4.3.9 job-state-message (text(MAX))\n   This attribute specifies information\
    \ about the \"job-state\" and \"job-\n   state-reasons\" attributes in human readable\
    \ text.  If the Printer\n   object supports this attribute, the Printer object\
    \ MUST be able to\n   generate this message in any of the natural languages identified\
    \ by\n   the Printer's \"generated-natural-language-supported\" attribute (see\n\
    \   the \"attributes-natural-language\" operation attribute specified in\n   Section\
    \ 3.1.4.1).\n   The value SHOULD NOT contain additional information not contained\
    \ in\n   the values of the \"job-state\" and \"job-states-reasons\" attributes,\n\
    \   such as interpreter error information.  Otherwise, application\n   programs\
    \ might attempt to parse the (localized text).  For such\n   additional information\
    \ such as interpreter errors for application\n   program consumption or specific\
    \ document access errors, new\n   attributes with keyword values, needs to be\
    \ developed and registered.\n"
- title: 4.3.10 job-detailed-status-messages (1setOf text(MAX))
  contents:
  - "4.3.10 job-detailed-status-messages (1setOf text(MAX))\n   This attribute specifies\
    \ additional detailed and technical\n   information about the job.  The Printer\
    \ NEED NOT localize the\n   message(s), since they are intended for use by the\
    \ system\n   administrator or other experienced technical persons.  Localization\n\
    \   might obscure the technical meaning of such messages.  Clients MUST\n   NOT\
    \ attempt to parse the value of this attribute.  See \"job-\n   document-access-errors\"\
    \ (section 4.3.11) for additional errors that a\n   program can process.\n"
- title: 4.3.11 job-document-access-errors (1setOf text(MAX))
  contents:
  - "4.3.11 job-document-access-errors (1setOf text(MAX))\n   This attribute provides\
    \ additional information about each document\n   access error for this job encountered\
    \ by the Printer after it\n   returned a response to the Print-URI or Send-URI\
    \ operation and\n   subsequently attempted to access document(s) supplied in the\
    \ Print-\n   URI or Send-URI operation.  For errors in the protocol that is\n\
    \   identified by the URI scheme in the \"document-uri\" operation\n   attribute,\
    \ such as 'http:' or 'ftp:', the error code is returned in\n   parentheses, followed\
    \ by the URI.  For example:\n      (404) http://ftp.pwg.org/pub/pwg/ipp/new_MOD/ipp-model-v11.pdf\n\
    \   Most Internet protocols use decimal error codes (unlike IPP), so the\n   ASCII\
    \ error code representation is in decimal.\n"
- title: 4.3.12 number-of-documents (integer(0:MAX))
  contents:
  - "4.3.12 number-of-documents (integer(0:MAX))\n   This attribute indicates the\
    \ number of documents in the job, i.e.,\n   the number of Send-Document, Send-URI,\
    \ Print-Job, or Print-URI\n   operations that the Printer has accepted for this\
    \ job, regardless of\n   whether the document data has reached the Printer object\
    \ or not.\n   Implementations supporting the OPTIONAL Create-Job/Send-\n   Document/Send-URI\
    \ operations SHOULD support this attribute so that\n   clients can query the number\
    \ of documents in each job.\n"
- title: 4.3.13 output-device-assigned (name(127))
  contents:
  - "4.3.13 output-device-assigned (name(127))\n   This attribute identifies the output\
    \ device to which the Printer\n   object has assigned this job.  If an output\
    \ device implements an\n   embedded Printer object, the Printer object NEED NOT\
    \ set this\n   attribute.  If a print server implements a Printer object, the\
    \ value\n   MAY be empty (zero- length string) or not returned until the Printer\n\
    \   object assigns an output device to the job.  This attribute is\n   particularly\
    \ useful when a single Printer object supports multiple\n   devices (so called\
    \ \"fan-out\" - see section 2.1).\n"
- title: 4.3.14 Event Time Job Description Attributes
  contents:
  - "4.3.14 Event Time Job Description Attributes\n   This section defines the Job\
    \ Description attributes that indicate the\n   time at which certain events occur\
    \ for a job.  If the job event has\n   not yet occurred, then the IPP object MUST\
    \ return the 'no-value'\n   out-of-band value (see the beginning of Section 4.1).\
    \  The \"time-at-\n   xxx(integer)\" attributes represent time as an 'integer'\
    \ representing\n   the number of seconds since the device was powered up (informally\n\
    \   called \"time ticks\").  The \"date-time-at-xxx(dateTime)\" attributes\n \
    \  represent time as 'dateTime' representing date and time (including an\n   offset\
    \ from UTC).\n   In order to populate these attributes, the Printer object copies\
    \ the\n   value(s) of the following Printer Description attributes at the time\n\
    \   the event occurs:\n      1. the value in the Printer's \"printer-up-time\"\
    \ attribute for the\n         \"time-at-xxx(integer)\" attributes\n      2. the\
    \ value in the Printer's \"printer-current-time\" attribute for\n         the\
    \ \"date-time-at-xxx(dateTime)\" attributes.\n   If the Printer resets its \"\
    printer-up-time\" attribute to 1 on power-\n   up (see section 4.4.29) and has\
    \ persistent jobs, then it MUST change\n   all of jobs' \"time-at-xxx(integer)\"\
    \ (time tick) job attributes whose\n   events have occurred either to:\n     \
    \ 1. 0 to indicate that the event happened before the most recent\n         power\
    \ up OR\n      2. the negative of the number of seconds before the most recent\n\
    \         power-up that the event took place, though the negative number\n   \
    \      NEED NOT reflect the exact number of seconds.\n   If a client queries a\
    \ \"time-at-xxx(integer)\" time tick Job attribute\n   and finds the value to\
    \ be 0 or negative, the client MUST assume that\n   the event occurred in some\
    \ life other than the Printer's current\n   life.\n   Note: A Printer does not\
    \ change the values of any \"date-time-at-\n   xxx(dateTime)\" job attributes\
    \ on power-up.\n"
- title: 4.3.14.1 time-at-creation (integer(MIN:MAX))
  contents:
  - "4.3.14.1 time-at-creation (integer(MIN:MAX))\n   This REQUIRED attribute indicates\
    \ the time at which the Job object\n   was created.\n"
- title: 4.3.14.2 time-at-processing (integer(MIN:MAX))
  contents:
  - "4.3.14.2 time-at-processing (integer(MIN:MAX))\n   This REQUIRED attribute indicates\
    \ the time at which the Job object\n   first began processing after the create\
    \ operation or the most recent\n   Restart-Job operation.  The out-of-band 'no-value'\
    \ value is returned\n   if the job has not yet been in the 'processing' state\
    \ (see the\n   beginning of Section 4.1).\n"
- title: 4.3.14.3 time-at-completed (integer(MIN:MAX))
  contents:
  - "4.3.14.3 time-at-completed (integer(MIN:MAX))\n   This REQUIRED attribute indicates\
    \ the time at which the Job object\n   completed (or was canceled or aborted).\
    \  The out-of-band 'no-value'\n   value is returned if the job has not yet completed,\
    \ been canceled, or\n   aborted (see the beginning of Section 4.1).\n"
- title: 4.3.14.4 job-printer-up-time (integer(1:MAX))
  contents:
  - "4.3.14.4 job-printer-up-time (integer(1:MAX))\n   This REQUIRED Job Description\
    \ attribute indicates the amount of time\n   (in seconds) that the Printer implementation\
    \ has been up and running.\n   This attribute is an alias for the \"printer-up-time\"\
    \ Printer\n   Description attribute (see Section 4.4.29).\n   A client MAY request\
    \ this attribute in a Get-Job-Attributes or Get-\n   Jobs request and use the\
    \ value returned in combination with other\n   requested Event Time Job Description\
    \ Attributes in order to display\n   time attributes to a user.  The difference\
    \ between this attribute and\n   the 'integer' value of a \"time-at-xxx\" attribute\
    \ is the number of\n   seconds ago that the \"time-at-xxx\" event occurred.  A\
    \ client can\n   compute the wall-clock time at which the \"time-at-xxx\" event\
    \ occurred\n   by subtracting this difference from the client's wall-clock time.\n"
- title: 4.3.14.5 date-time-at-creation (dateTime)
  contents:
  - "4.3.14.5 date-time-at-creation (dateTime)\n   This attribute indicates the date\
    \ and time at which the Job object\n   was created.\n"
- title: 4.3.14.6 date-time-at-processing (dateTime)
  contents:
  - "4.3.14.6 date-time-at-processing (dateTime)\n   This attribute indicates the\
    \ date and time at which the Job object\n   first began processing after the create\
    \ operation or the most recent\n   Restart-Job operation.\n"
- title: 4.3.14.7 date-time-at-completed (dateTime)
  contents:
  - "4.3.14.7 date-time-at-completed (dateTime)\n   This attribute indicates the date\
    \ and time at which the Job object\n   completed (or was canceled or aborted).\n"
- title: 4.3.15 number-of-intervening-jobs (integer(0:MAX))
  contents:
  - "4.3.15 number-of-intervening-jobs (integer(0:MAX))\n   This attribute indicates\
    \ the number of jobs that are \"ahead\" of this\n   job in the relative chronological\
    \ order of expected time to complete\n   (i.e., the current scheduled order).\
    \ For efficiency, it is only\n   necessary to calculate this value when an operation\
    \ is performed that\n   requests this attribute.\n"
- title: 4.3.16 job-message-from-operator (text(127))
  contents:
  - "4.3.16 job-message-from-operator (text(127))\n   This attribute provides a message\
    \ from an operator, system\n   administrator or \"intelligent\" process to indicate\
    \ to the end user\n   the reasons for modification or other management action\
    \ taken on a\n   job.\n"
- title: 4.3.17 Job Size Attributes
  contents:
  - "4.3.17 Job Size Attributes\n   This sub-section defines job attributes that describe\
    \ the size of the\n   job.  These attributes are not intended to be counters;\
    \ they are\n   intended to be useful routing and scheduling information if known.\n\
    \   For these attributes, the Printer object may try to compute the value\n  \
    \ if it is not supplied in the create request.  Even if the client does\n   supply\
    \ a value for these three attributes in the create request, the\n   Printer object\
    \ MAY choose to change the value if the Printer object\n   is able to compute\
    \ a value which is more accurate than the client\n   supplied value.  The Printer\
    \ object may be able to determine the\n   correct value for these attributes either\
    \ right at job submission\n   time or at any later point in time.\n"
- title: 4.3.17.1 job-k-octets (integer(0:MAX))
  contents:
  - "4.3.17.1 job-k-octets (integer(0:MAX))\n   This attribute specifies the total\
    \ size of the document(s) in K\n   octets, i.e., in units of 1024 octets requested\
    \ to be processed in\n   the job.  The value MUST be rounded up, so that a job\
    \ between 1 and\n   1024 octets MUST be indicated as being 1, 1025 to 2048 MUST\
    \ be 2,\n   etc.\n   This value MUST NOT include the multiplicative factors contributed\
    \ by\n   the number of copies specified by the \"copies\" attribute, independent\n\
    \   of whether the device can process multiple copies without making\n   multiple\
    \ passes over the job or document data and independent of\n   whether the output\
    \ is collated or not.  Thus the value is independent\n   of the implementation\
    \ and indicates the size of the document(s)\n   measured in K octets independent\
    \ of the number of copies.\n   This value MUST also not include the multiplicative\
    \ factor due to a\n   copies instruction embedded in the document data.  If the\
    \ document\n   data actually includes replications of the document data, this\
    \ value\n   will include such replication.  In other words, this value is always\n\
    \   the size of the source document data, rather than a measure of the\n   hardcopy\
    \ output to be produced.\n"
- title: 4.3.17.2 job-impressions (integer(0:MAX))
  contents:
  - "4.3.17.2 job-impressions (integer(0:MAX))\n   This attribute specifies the total\
    \ size in number of impressions of\n   the document(s) being submitted (see the\
    \ definition of impression in\n   section 12.2.5).\n   As with \"job-k-octets\"\
    , this value MUST NOT include the\n   multiplicative factors contributed by the\
    \ number of copies specified\n   by the \"copies\" attribute, independent of whether\
    \ the device can\n   process multiple copies without making multiple passes over\
    \ the job\n   or document data and independent of whether the output is collated\
    \ or\n   not.  Thus the value is independent of the implementation and\n   reflects\
    \ the size of the document(s) measured in impressions\n   independent of the number\
    \ of copies.\n   As with \"job-k-octets\", this value MUST also not include the\n\
    \   multiplicative factor due to a copies instruction embedded in the\n   document\
    \ data.  If the document data actually includes replications\n   of the document\
    \ data, this value will include such replication.  In\n   other words, this value\
    \ is always the number of impressions in the\n   source document data, rather\
    \ than a measure of the number of\n   impressions to be produced by the job.\n"
- title: 4.3.17.3 job-media-sheets (integer(0:MAX))
  contents:
  - "4.3.17.3 job-media-sheets (integer(0:MAX))\n   This attribute specifies the total\
    \ number of media sheets to be\n   produced for this job.\n   Unlike the \"job-k-octets\"\
    \ and the \"job-impressions\" attributes, this\n   value MUST include the multiplicative\
    \ factors contributed by the\n   number of copies specified by the \"copies\"\
    \ attribute and a 'number of\n   copies' instruction embedded in the document\
    \ data, if any.  This\n   difference allows the system administrator to control\
    \ the lower and\n   upper bounds of both (1) the size of the document(s) with\
    \ \"job-k-\n   octets-supported\" and \"job-impressions-supported\" and (2) the\
    \ size of\n   the job with \"job-media-sheets-supported\".\n"
- title: 4.3.18 Job Progress Attributes
  contents:
  - "4.3.18 Job Progress Attributes\n   This sub-section defines job attributes that\
    \ describe the progress of\n   the job.  These attributes are intended to be counters.\
    \  That is, the\n   value for a job that has not started processing MUST be 0.\
    \  When the\n   job's \"job-state\" is 'processing' or 'processing-stopped', this\
    \ value\n   is intended to contain the amount of the job that has been processed\n\
    \   to the time at which the attributes are requested.  When the job\n   enters\
    \ the 'completed', 'canceled', or 'aborted' states, these values\n   are the final\
    \ values for the job.\n"
- title: 4.3.18.1 job-k-octets-processed (integer(0:MAX))
  contents:
  - "4.3.18.1 job-k-octets-processed (integer(0:MAX))\n   This attribute specifies\
    \ the total number of octets processed in K\n   octets, i.e., in units of 1024\
    \ octets so far.  The value MUST be\n   rounded up, so that a job between 1 and\
    \ 1024 octets inclusive MUST be\n   indicated as being 1, 1025 to 2048 inclusive\
    \ MUST be 2, etc.\n   For implementations where multiple copies are produced by\
    \ the\n   interpreter with only a single pass over the data, the final value\n\
    \   MUST be equal to the value of the \"job-k-octets\" attribute.  For\n   implementations\
    \ where multiple copies are produced by the interpreter\n   by processing the\
    \ data for each copy, the final value MUST be a\n   multiple of the value of the\
    \ \"job-k-octets\" attribute.\n"
- title: 4.3.18.2 job-impressions-completed (integer(0:MAX))
  contents:
  - "4.3.18.2 job-impressions-completed (integer(0:MAX))\n   This job attribute specifies\
    \ the number of impressions completed for\n   the job so far.  For printing devices,\
    \ the impressions completed\n   includes interpreting, marking, and stacking the\
    \ output.\n"
- title: 4.3.18.3 job-media-sheets-completed (integer(0:MAX))
  contents:
  - "4.3.18.3 job-media-sheets-completed (integer(0:MAX))\n   This job attribute specifies\
    \ the media-sheets completed marking and\n   stacking for the entire job so far\
    \ whether those sheets have been\n   processed on one side or on both.\n"
- title: 4.3.19 attributes-charset (charset)
  contents:
  - "4.3.19 attributes-charset (charset)\n   This REQUIRED attribute is populated\
    \ using the value in the client\n   supplied \"attributes-charset\" attribute\
    \ in the create request.  It\n   identifies the charset (coded character set and\
    \ encoding method) used\n   by any Job attributes with attribute syntax 'text'\
    \ and 'name' that\n   were supplied by the client in the create request.  See\
    \ Section 3.1.4\n   for a complete description of the \"attributes-charset\" operation\n\
    \   attribute.\n   This attribute does not indicate the charset in which the 'text'\
    \ and\n   'name' values are stored internally in the Job object.  The internal\n\
    \   charset is implementation-defined.  The IPP object MUST convert from\n   whatever\
    \ the internal charset is to that being requested in an\n   operation as specified\
    \ in Section 3.1.4.\n"
- title: 4.3.20 attributes-natural-language (naturalLanguage)
  contents:
  - "4.3.20 attributes-natural-language (naturalLanguage)\n   This REQUIRED attribute\
    \ is populated using the value in the client\n   supplied \"attributes-natural-language\"\
    \ attribute in the create\n   request.  It identifies the natural language used\
    \ for any Job\n   attributes with attribute syntax 'text' and 'name' that were\
    \ supplied\n   by the client in the create request.  See Section 3.1.4 for a\n\
    \   complete description of the \"attributes-natural-language\" operation\n  \
    \ attribute.  See Sections 4.1.1.2 and 4.1.2.2 for how a Natural\n   Language\
    \ Override may be supplied explicitly for each 'text' and\n   'name' attribute\
    \ value that differs from the value identified by the\n   \"attributes-natural-language\"\
    \ attribute.\n"
- title: 4.4 Printer Description Attributes
  contents:
  - "4.4 Printer Description Attributes\n   These attributes form the attribute group\
    \ called \"printer-\n   description\".  The following table summarizes these attributes,\
    \ their\n   syntax, and whether or not they are REQUIRED for a Printer object\
    \ to\n   support.  If they are not indicated as REQUIRED, they are OPTIONAL.\n\
    \   The maximum size in octets for 'text' and 'name' attributes is\n   indicated\
    \ in parenthesizes.\n   Note: How these attributes are set by an Administrator\
    \ is outside the\n   scope of this IPP/1.1 document.\n  +----------------------------+---------------------------+-----------+\n\
    \  |      Attribute             |     Syntax                | REQUIRED? |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-uri-supported      | 1setOf uri                |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | uri-security-supported     | 1setOf type2 keyword      |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | uri-authentication-        | 1setOf type2 keyword      |  REQUIRED |\n  |\
    \     supported              |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-name               | name (127)                |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-location           | text (127)                |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-info               | text (127)                |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-more-info          | uri                       |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-driver-installer   | uri                       |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-make-and-model     | text (127)                |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-more-info-         | uri                       |           |\n  |\
    \ manufacturer               |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-state              | type1 enum                |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-state-reasons      | 1setOf type2 keyword      |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-state-message      | text (MAX)                |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | ipp-versions-supported     | 1setOf type2 keyword      |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | operations-supported       | 1setOf type2 enum         |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | multiple-document-jobs-    | boolean                   |           |\n  |\
    \     supported              |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | charset-configured         | charset                   |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | charset-supported          | 1setOf charset            |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | natural-language-configured| naturalLanguage           |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | generated-natural-language-| 1setOf naturalLanguage    |  REQUIRED |\n  |\
    \ supported                  |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | document-format-default    | mimeMediaType             |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | document-format-supported  | 1setOf mimeMediaType      |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-is-accepting-jobs  | boolean                   |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | queued-job-count           | integer (0:MAX)           |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-message-from-      | text (127)                |           |\n  |\
    \ operator                   |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | color-supported            | boolean                   |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | reference-uri-schemes-     | 1setOf uriScheme          |           |\n  |\
    \   supported                |                           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | pdl-override-supported     | type2 keyword             |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-up-time            | integer (1:MAX)           |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | printer-current-time       | dateTime                  |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | multiple-operation-time-out| integer (1:MAX)           |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | compression-supported      | 1setOf type3 keyword      |  REQUIRED |\n  +----------------------------+---------------------------+-----------+\n\
    \  | job-k-octets-supported     | rangeOfInteger (0:MAX)    |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | job-impressions-supported  | rangeOfInteger (0:MAX)    |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | job-media-sheets-supported | rangeOfInteger (0:MAX)    |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | pages-per-minute           | integer(0:MAX)            |           |\n  +----------------------------+---------------------------+-----------+\n\
    \  | pages-per-minute-color     | integer(0:MAX)            |           |\n  +----------------------------+---------------------------+-----------+\n"
- title: 4.4.1 printer-uri-supported (1setOf uri)
  contents:
  - "4.4.1 printer-uri-supported (1setOf uri)\n   This REQUIRED Printer attribute\
    \ contains at least one URI for the\n   Printer object.  It OPTIONALLY contains\
    \ more than one URI for the\n   Printer object.    An administrator determines\
    \ a Printer object's\n   URI(s) and configures this attribute to contain those\
    \ URIs by some\n   means outside the scope of this IPP/1.1 document.  The precise\
    \ format\n   of this URI is implementation dependent and depends on the protocol.\n\
    \   See the next two sections for a description of the \"uri-security-\n   supported\"\
    \ and \"uri-authentication-supported\" attributes, both of\n   which are the REQUIRED\
    \ companion attributes to this \"printer-uri-\n   supported\" attribute.  See\
    \ section 2.4 on Printer object identity and\n   section 8.2 on security and URIs\
    \ for more information.\n"
- title: 4.4.2 uri-authentication-supported (1setOf type2 keyword)
  contents:
  - "4.4.2 uri-authentication-supported (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute MUST have the same cardinality\n   (contain the same number of values)\
    \ as the \"printer-uri-supported\"\n   attribute.  This attribute identifies the\
    \ Client Authentication\n   mechanism associated with each URI listed in the \"\
    printer-uri-\n   supported\" attribute. The Printer object uses the specified\
    \ mechanism\n   to identify the authenticated user (see section 8.3).  The \"\
    i th\"\n   value in \"uri-authentication-supported\" corresponds to the \"i th\"\
    \n   value in \"printer-uri-supported\" and it describes the authentication\n\
    \   mechanisms used by the Printer when accessed via that URI.  See\n   [RFC2910]\
    \ for more details on Client Authentication.\n   The following standard keyword\
    \ values are defined:\n      'none': There is no authentication mechanism associated\
    \ with the\n         URI.  The Printer object assumes that the authenticated user\
    \ is\n         \"anonymous\".\n      'requesting-user-name': When a client performs\
    \ an operation whose\n         target is the associated URI, the Printer object\
    \ assumes that\n         the authenticated user is specified by the \"requesting-user-\n\
    \         name\" Operation attribute (see section 8.3). If the\n         \"requesting-user-name\"\
    \ attribute is absent in a request, the\n         Printer object assumes that\
    \ the authenticated user is\n         \"anonymous\".\n      'basic': When a client\
    \ performs an operation whose target is the\n         associated URI, the Printer\
    \ object challenges the client with\n         HTTP basic authentication [RFC2617].\
    \ The Printer object assumes\n         that the authenticated user is the name\
    \ received via the basic\n         authentication mechanism.\n      'digest':\
    \ When a client performs an operation whose target is the\n         associated\
    \ URI, the Printer object challenges the client with\n         HTTP digest authentication\
    \ [RFC2617]. The Printer object\n         assumes that the authenticated user\
    \ is the name received via\n         the digest authentication mechanism.\n  \
    \    'certificate': When a client performs an operation whose target is\n    \
    \     the associated URI, the Printer object expects the client to\n         provide\
    \ a certificate. The Printer object assumes that the\n         authenticated user\
    \ is the textual name contained within the\n         certificate.\n"
- title: 4.4.3 uri-security-supported (1setOf type2 keyword)
  contents:
  - "4.4.3 uri-security-supported (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute MUST have the same cardinality\n   (contain the same number of values)\
    \ as the \"printer-uri-supported\"\n   attribute.  This attribute identifies the\
    \ security mechanisms used\n   for each URI listed in the \"printer-uri-supported\"\
    \ attribute.  The \"i\n   th\" value in \"uri-security-supported\" corresponds\
    \ to the \"i th\" value\n   in \"printer-uri-supported\" and it describes the\
    \ security mechanisms\n   used for accessing the Printer object via that URI.\
    \  See [RFC2910]\n   for more details on security mechanisms.\n   The following\
    \ standard keyword values are defined:\n      'none': There are no secure communication\
    \ channel protocols in use\n         for the given URI.\n      'ssl3': SSL3 [SSL]\
    \ is the secure communications channel protocol\n         in use for the given\
    \ URI.\n      'tls':  TLS [RFC2246] is the secure communications channel\n   \
    \      protocol in use for the given URI.\n   This attribute is orthogonal to\
    \ the definition of a Client\n   Authentication mechanism.  Specifically, 'none'\
    \ does not exclude\n   Client Authentication. See section 4.4.2.\n   Consider\
    \ the following example.  For a single Printer object, an\n   administrator configures\
    \ the \"printer-uri-supported\",  \"uri-\n   authentication-supported\" and \"\
    uri-security-supported\" attributes as\n   follows:\n     \"printer-uri-supported\"\
    : 'xxx://acme.com/open-use-printer',\n        'xxx://acme.com/restricted-use-printer',\n\
    \        'xxx://acme.com/private-printer'\n     \"uri-authentication-supported\"\
    : 'none', 'digest', 'basic'\n     \"uri-security-supported\": 'none', 'none',\
    \ 'tls'\n   Note:  'xxx'  is not a valid scheme.  See the IPP/1.1 \"Transport\
    \ and\n   Encoding\" document [RFC2910] for the actual URI schemes to be used\
    \ in\n   object target attributes.\n   In this case, one Printer object has three\
    \ URIs.\n      - For the first URI, 'xxx://acme.com/open-use-printer', the value\n\
    \        'none' in \"uri-security-supported\" indicates that there is no\n   \
    \     secure channel protocol configured to run under HTTP.  The value\n     \
    \   of 'none' in \"uri-authentication-supported\" indicates that all\n       \
    \ users are 'anonymous'.  There will be no challenge and the\n        Printer\
    \ will ignore \"requesting-user-name\".\n      - For the second URI, 'xxx://acme.com/restricted-use-printer',\
    \ the\n        value 'none' in \"uri-security-supported\" indicates that there\
    \ is\n        no secure channel protocol configured to run under HTTP. The\n \
    \       value of 'digest' in \"uri-authentication-supported\" indicates\n    \
    \    that the Printer will issue a challenge and that the Printer\n        will\
    \ use the name supplied by the digest mechanism to determine\n        the authenticated\
    \ user (see section 8.3).\n      - For the third URI, 'xxx://acme.com/private-printer',\
    \ the value\n        'tls' in \"uri-security-supported\" indicates that TLS is\
    \ being\n        used to secure the channel.  The client SHOULD be prepared to\n\
    \        use TLS framing to negotiate an acceptable ciphersuite to use\n     \
    \   while communicating with the Printer object.  In this case, the\n        name\
    \ implies the use of a secure communications channel, but the\n        fact is\
    \ made explicit by the presence of the 'tls' value in\n        \"uri-security-supported\"\
    .  The client does not need to resort to\n        understanding which security\
    \ it must use by following naming\n        conventions or by parsing the URI to\
    \ determine which security\n        mechanisms are implied.  The value of 'basic'\
    \ in \"uri-\n        authentication-supported\" indicates that the Printer will\
    \ issue\n        a challenge and that the Printer will use the name supplied by\n\
    \        the digest mechanism to determine the authenticated user (see\n     \
    \   section 8.3).  Because this challenge occurs in a tls session,\n        the\
    \ channel is secure.\n   It is expected that many IPP Printer objects will be\
    \ configured to\n   support only one channel (either configured to use TLS access\
    \ or not)\n   and only one authentication mechanism. Such Printer objects only\
    \ have\n   one URI listed in the \"printer-uri-supported\" attribute.  No matter\n\
    \   the configuration of the Printer object (whether it has only one URI\n   or\
    \ more than one URI), a client MUST supply only one URI in the\n   target \"printer-uri\"\
    \ operation attribute.\n"
- title: 4.4.4 printer-name (name(127))
  contents:
  - "4.4.4 printer-name (name(127))\n   This REQUIRED Printer attribute contains the\
    \ name of the Printer\n   object.  It is a name that is more end-user friendly\
    \ than a URI. An\n   administrator determines a printer's name and sets this attribute\
    \ to\n   that name. This name may be the last part of the printer's URI or it\n\
    \   may be unrelated.  In non-US-English locales, a name may contain\n   characters\
    \ that are not allowed in a URI.\n"
- title: 4.4.5 printer-location (text(127))
  contents:
  - "4.4.5 printer-location (text(127))\n   This Printer attribute identifies the\
    \ location of the device. This\n   could include things like: \"in Room 123A,\
    \ second floor of building\n   XYZ\".\n"
- title: 4.4.6 printer-info (text(127))
  contents:
  - "4.4.6 printer-info (text(127))\n   This Printer attribute identifies the descriptive\
    \ information about\n   this Printer object.  This could include things like:\
    \ \"This printer\n   can be used for printing color transparencies for HR presentations\"\
    ,\n   or \"Out of courtesy for others, please print only small (1-5 page)\n  \
    \ jobs at this printer\", or even \"This printer is going away on July 1,\n  \
    \ 1997, please find a new printer\".\n"
- title: 4.4.7 printer-more-info (uri)
  contents:
  - "4.4.7 printer-more-info (uri)\n   This Printer attribute contains a URI used\
    \ to obtain more information\n   about this specific Printer object.  For example,\
    \ this could be an\n   HTTP type URI referencing an HTML page accessible to a\
    \ Web Browser.\n   The information obtained from this URI is intended for end\
    \ user\n   consumption.  Features outside the scope of IPP can be accessed from\n\
    \   this URI.  The information is intended to be specific to this printer\n  \
    \ instance and site specific services (e.g. job pricing, services\n   offered,\
    \ end user assistance). The device manufacturer may initially\n   populate this\
    \ attribute.\n"
- title: 4.4.8 printer-driver-installer (uri)
  contents:
  - "4.4.8 printer-driver-installer (uri)\n   This Printer attribute contains a URI\
    \ to use to locate the driver\n   installer for this Printer object.   This attribute\
    \ is intended for\n   consumption by automata.  The mechanics of print driver\
    \ installation\n   is outside the scope of this IPP/1.1 document.  The device\n\
    \   manufacturer may initially populate this attribute.\n"
- title: 4.4.9 printer-make-and-model (text(127))
  contents:
  - "4.4.9 printer-make-and-model (text(127))\n   This Printer attribute identifies\
    \ the make and model of the device.\n   The device manufacturer may initially\
    \ populate this attribute.\n"
- title: 4.4.10 printer-more-info-manufacturer (uri)
  contents:
  - "4.4.10 printer-more-info-manufacturer (uri)\n   This Printer attribute contains\
    \ a URI used to obtain more information\n   about this type of device.  The information\
    \ obtained from this URI is\n   intended for end user consumption.  Features outside\
    \ the scope of IPP\n   can be accessed from this URI (e.g., latest firmware, upgrades,\
    \ print\n   drivers, optional features available, details on color support). \
    \ The\n   information is intended to be germane to this printer without regard\n\
    \   to site specific modifications or services. The device manufacturer\n   may\
    \ initially populate this attribute.\n"
- title: 4.4.11 printer-state (type1 enum)
  contents:
  - "4.4.11 printer-state (type1 enum)\n   This REQUIRED Printer attribute identifies\
    \ the current state of the\n   device.  The \"printer-state reasons\" attribute\
    \ augments the\n   \"printer-state\" attribute to give more detailed information\
    \ about the\n   Printer in the given printer state.\n   A Printer object need\
    \ only update this attribute before responding to\n   an operation which requests\
    \ the attribute; the Printer object NEED\n   NOT update this attribute continually,\
    \ since asynchronous event\n   notification is not part of IPP/1.1.  A Printer\
    \ NEED NOT implement\n   all values if they are not applicable to a given implementation.\n\
    \   The following standard enum values are defined:\n   Value  Symbolic Name and\
    \ Description\n   '3'    'idle':  Indicates that new jobs can start processing\
    \ without\n                waiting.\n   '4'    'processing':  Indicates that jobs\
    \ are processing; new jobs\n                will wait before processing.\n   '5'\
    \    'stopped':  Indicates that no jobs can be processed and\n               \
    \ intervention is required.\n   Values of \"printer-state-reasons\", such as 'spool-area-full'\
    \ and\n   'stopped-partly', MAY be used to provide further information.\n"
- title: 4.4.12 printer-state-reasons (1setOf type2 keyword)
  contents:
  - "4.4.12 printer-state-reasons (1setOf type2 keyword)\n   This REQUIRED Printer\
    \ attribute supplies additional detail about the\n   device's state.  Some of\
    \ the these value definitions indicate\n   conformance requirements; the rest\
    \ are OPTIONAL.\n   Each keyword value MAY have a suffix to indicate its level\
    \ of\n   severity.  The three levels are: report (least severe), warning, and\n\
    \   error (most severe).\n      - '-report':  This suffix indicates that the reason\
    \ is a \"report\".\n        An implementation may choose to omit some or all reports.\
    \ Some\n        reports specify finer granularity about the printer state;\n \
    \       others serve as a precursor to a warning. A report MUST contain\n    \
    \    nothing that could affect the printed output.\n      - '-warning': This suffix\
    \ indicates that the reason is a\n        \"warning\".  An implementation may\
    \ choose to omit some or all\n        warnings. Warnings serve as a precursor\
    \ to an error. A warning\n        MUST contain nothing that prevents a job from\
    \ completing, though\n        in some cases the output may be of lower quality.\n\
    \      - '-error': This suffix indicates that the reason is an \"error\".\n  \
    \      An implementation MUST include all errors. If this attribute\n        contains\
    \ one or more errors, printer MUST be in the stopped\n        state.\n   If the\
    \ implementation does not add any one of the three suffixes, all\n   parties MUST\
    \ assume that the reason is an \"error\".\n   If a Printer object controls more\
    \ than one output device, each value\n   of this attribute MAY apply to one or\
    \ more of the output devices.  An\n   error on one output device that does not\
    \ stop the Printer object as a\n   whole MAY appear as a warning in the Printer's\
    \ \"printer-state-reasons\n   attribute\".  If the \"printer-state\" for such\
    \ a Printer has a value of\n   'stopped', then there MUST be an error reason among\
    \ the values in the\n   \"printer-state-reasons\" attribute.\n   The following\
    \ standard keyword values are defined:\n      'other': The device has detected\
    \ an error other than one listed in\n         this document.\n      'none': There\
    \ are not reasons. This state reason is semantically\n         equivalent to \"\
    printer-state-reasons\" without any value and\n         MUST be used, since the\
    \ 1setOf attribute syntax requires at\n         least one value.\n      'media-needed':\
    \ A tray has run out of media.\n      'media-jam': The device has a media jam.\n\
    \      'moving-to-paused':  Someone has paused the Printer object using\n    \
    \     the Pause-Printer operation (see section 3.2.7) or other means,\n      \
    \   but the device(s) are taking an appreciable time to stop.\n         Later,\
    \ when all output has stopped, the \"printer-state\" becomes\n         'stopped',\
    \ and the 'paused' value replaces the 'moving-to-\n         paused' value in the\
    \ \"printer-state-reasons\" attribute.  This\n         value MUST be supported,\
    \ if the Pause-Printer operation is\n         supported and the implementation\
    \ takes significant time to\n         pause a device in certain circumstances.\n\
    \      'paused': Someone has paused the Printer object using the Pause-\n    \
    \     Printer operation (see section 3.2.7) or other means and the\n         Printer\
    \ object's \"printer-state\" is 'stopped'.  In this state,\n         a Printer\
    \ MUST NOT produce printed output, but it MUST perform\n         other operations\
    \ requested by a client.  If a Printer had been\n         printing a job when\
    \ the Printer was paused, the Printer MUST\n         resume printing that job\
    \ when the Printer is no longer paused\n         and leave no evidence in the\
    \ printed output of such a pause.\n         This value MUST be supported, if the\
    \ Pause-Printer operation is\n         supported.\n      'shutdown': Someone has\
    \ removed a Printer object from service, and\n         the device may be powered\
    \ down or physically removed.  In this\n         state, a Printer object MUST\
    \ NOT produce printed output, and\n         unless the Printer object is realized\
    \ by a print server that is\n         still active, the Printer object MUST perform\
    \ no other\n         operations requested by a client, including returning this\n\
    \         value. If a Printer object had been printing a job when it was\n   \
    \      shutdown, the Printer NEED NOT resume printing that job when\n        \
    \ the Printer is no longer shutdown. If the Printer resumes\n         printing\
    \ such a job, it may leave evidence in the printed\n         output of such a\
    \ shutdown, e.g. the part printed before the\n         shutdown may be printed\
    \ a second time after the shutdown.\n      'connecting-to-device': The Printer\
    \ object has scheduled a job on\n         the output device and is in the process\
    \ of connecting to a\n         shared network output device (and might not be\
    \ able to actually\n         start printing the job for an arbitrarily long time\
    \ depending\n         on the usage of the output device by other servers on the\n\
    \         network).\n      'timed-out': The server was able to connect to the\
    \ output device\n         (or is always connected), but was unable to get a response\
    \ from\n         the output device.\n      'stopping': The Printer object is in\
    \ the process of stopping the\n         device and will be stopped in a while.\
    \ When the device is\n         stopped, the Printer object will change the Printer\
    \ object's\n         state to 'stopped'.  The 'stopping-warning' reason is never\
    \ an\n         error, even for a Printer with a single output device.  When an\n\
    \         output-device ceases accepting jobs, the Printer will have this\n  \
    \       reason while the output device completes printing.\n      'stopped-partly':\
    \ When a Printer object controls more than one\n         output device, this reason\
    \ indicates that one or more output\n         devices are stopped.  If the reason\
    \ is a report, fewer than\n         half of the output devices are stopped.  If\
    \ the reason is a\n         warning, fewer than all of the output devices are\
    \ stopped.\n      'toner-low': The device is low on toner.\n      'toner-empty':\
    \  The device is out of toner.\n      'spool-area-full': The limit of persistent\
    \ storage allocated for\n         spooling has been reached.  The Printer is temporarily\
    \ unable\n         to accept more jobs.  The Printer will remove this value when\n\
    \         it is able to accept more jobs.  This value SHOULD be used by a\n  \
    \       non-spooling Printer that only accepts one or a small number\n       \
    \  jobs at a time or a spooling Printer that has filled the spool\n         space.\n\
    \      'cover-open': One or more covers on the device are open.\n      'interlock-open':\
    \ One or more interlock devices on the printer are\n         unlocked.\n     \
    \ 'door-open': One or more doors on the device are open.\n      'input-tray-missing':\
    \ One or more input trays are not in the\n         device.\n      'media-low':\
    \ At least one input tray is low on media.\n      'media-empty': At least one\
    \ input tray is empty.\n      'output-tray-missing': One or more output trays\
    \ are not in the\n         device\n      'output-area-almost-full': One or more\
    \ output area is almost full\n         (e.g. tray, stacker, collator).\n     \
    \ 'output-area-full': One or more output area is full. (e.g. tray,\n         stacker,\
    \ collator)\n      'marker-supply-low': The device is low on at least one marker\n\
    \         supply.  (e.g. toner, ink, ribbon)\n      'marker-supply-empty: The\
    \ device is out of at least one marker\n         supply. (e.g. toner, ink, ribbon)\n\
    \      'marker-waste-almost-full': The device marker supply waste\n         receptacle\
    \ is almost full.\n      'marker-waste-full': The device marker supply waste receptacle\
    \ is\n         full.\n      'fuser-over-temp': The fuser temperature is above\
    \ normal.\n      'fuser-under-temp': The fuser temperature is below normal.\n\
    \      'opc-near-eol': The optical photo conductor is near end of life.\n    \
    \  'opc-life-over': The optical photo conductor is no longer\n         functioning.\n\
    \      'developer-low': The device is low on developer.\n      'developer-empty:\
    \ The device is out of developer.\n      'interpreter-resource-unavailable': An\
    \ interpreter resource is\n         unavailable (i.e. font, form)\n"
- title: 4.4.13 printer-state-message (text(MAX))
  contents:
  - "4.4.13 printer-state-message (text(MAX))\n   This Printer attribute specifies\
    \ information about the \"printer-\n   state\" and \"printer-state-reasons\" attributes\
    \ in human readable text.\n   If the Printer object supports this attribute, the\
    \ Printer object\n   MUST be able to generate this message in any of the natural\
    \ languages\n   identified by the Printer's \"generated-natural-language-supported\"\
    \n   attribute (see the \"attributes-natural-language\" operation attribute\n\
    \   specified in Section 3.1.4.1).\n"
- title: 4.4.14 ipp-versions-supported (1setOf type2 keyword)
  contents:
  - "4.4.14 ipp-versions-supported (1setOf type2 keyword)\n   This REQUIRED attribute\
    \ identifies the IPP protocol version(s) that\n   this Printer supports, including\
    \ major and minor versions, i.e., the\n   version numbers for which this Printer\
    \ implementation meets the\n   conformance requirements.  For version number validation,\
    \ the Printer\n   matches the (two-octet binary) \"version-number\" parameter\
    \ supplied by\n   the client in each request (see sections 3.1.1 and 3.1.8) with\
    \ the\n   (US-ASCII) keyword values of this attribute.\n   The following standard\
    \ keyword values are defined:\n      '1.0': Meets the conformance requirement\
    \ of IPP version 1.0 as\n         specified in RFC 2566 [RFC2566] and RFC 2565\
    \ [RFC2565]\n         including any extensions registered according to Section\
    \ 6 and\n         any extension defined in this version or any future version\
    \ of\n         the IPP \"Model and Semantics\" document or the IPP \"Encoding\
    \ and\n         Transport\" document following the rules, if any, when the\n \
    \        \"version-number\" parameter is '1.0'.\n      '1.1': Meets the conformance\
    \ requirement of IPP version 1.1 as\n         specified in this document and [RFC2910]\
    \ including any\n         extensions registered according to Section 6 and any\
    \ extension\n         defined in any future versions of the IPP \"Model and Semantics\"\
    \n         document or the IPP Encoding and Transport document following\n   \
    \      the rules, if any, when the \"version-number\" parameter is\n         '1.1'.\n"
- title: 4.4.15 operations-supported (1setOf type2 enum)
  contents:
  - "4.4.15 operations-supported (1setOf type2 enum)\n   This REQUIRED Printer attribute\
    \ specifies the set of supported\n   operations for this Printer object and contained\
    \ Job objects.\n   This attribute is encoded as any other enum attribute syntax\n\
    \   according to [RFC2910] as 32-bits.  However, all 32-bit enum values\n   for\
    \ this attribute MUST NOT exceed 0x00008FFF, since these same\n   values are also\
    \ passed in two octets in the \"operation-id\" parameter\n   (see section 3.1.1)\
    \ in each Protocol request with the two high order\n   octets omitted in order\
    \ to indicate the operation being performed\n   [RFC2910].\n   The following standard\
    \ enum and \"operation-id\" (see section 3.1.2)\n   values are defined:\n    \
    \ Value               Operation Name\n     -----------------   -------------------------------------\n\
    \     0x0000              reserved, not used\n     0x0001              reserved,\
    \ not used\n     0x0002              Print-Job\n     0x0003              Print-URI\n\
    \     0x0004              Validate-Job\n     0x0005              Create-Job\n\
    \     0x0006              Send-Document\n     0x0007              Send-URI\n \
    \    0x0008              Cancel-Job\n     0x0009              Get-Job-Attributes\n\
    \     0x000A              Get-Jobs\n     0x000B              Get-Printer-Attributes\n\
    \     0x000C              Hold-Job\n     0x000D              Release-Job\n   \
    \  0x000E              Restart-Job\n     0x000F              reserved for a future\
    \ operation\n     0x0010              Pause-Printer\n     0x0011             \
    \ Resume-Printer\n     0x0012              Purge-Jobs\n     0x0013-0x3FFF    \
    \   reserved for future IETF standards track\n                         operations\
    \ (see section 6.4)\n     0x4000-0x8FFF       reserved for vendor extensions (see\
    \ section 6.4)\n"
- title: 4.4.16 multiple-document-jobs-supported (boolean)
  contents:
  - "4.4.16 multiple-document-jobs-supported (boolean)\n   This Printer attribute\
    \ indicates whether or not the Printer supports\n   more than one document per\
    \ job, i.e., more than one Send-Document or\n   Send-Data operation with document\
    \ data.  If the Printer supports the\n   Create-Job and Send-Document operations\
    \ (see section 3.2.4 and\n   3.3.1), it MUST support this attribute.\n"
- title: 4.4.17 charset-configured (charset)
  contents:
  - "4.4.17 charset-configured (charset)\n   This REQUIRED Printer attribute identifies\
    \ the charset that the\n   Printer object has been configured to represent 'text'\
    \ and 'name'\n   Printer attributes that are set by the operator, system\n   administrator,\
    \ or manufacturer, i.e., for \"printer-name\" (name),\n   \"printer-location\"\
    \ (text), \"printer-info\" (text), and \"printer-make-\n   and-model\" (text).\
    \  Therefore, the value of the Printer object's\n   \"charset-configured\" attribute\
    \ MUST also be among the values of the\n   Printer object's \"charset-supported\"\
    \ attribute.\n"
- title: 4.4.18 charset-supported (1setOf charset)
  contents:
  - "4.4.18 charset-supported (1setOf charset)\n   This REQUIRED Printer attribute\
    \ identifies the set of charsets that\n   the Printer and contained Job objects\
    \ support in attributes with\n   attribute syntax 'text' and 'name'. At least\
    \ the value 'utf-8' MUST\n   be present, since IPP objects MUST support the UTF-8\
    \ [RFC2279]\n   charset.  If a Printer object supports a charset, it means that\
    \ for\n   all attributes of syntax 'text' and 'name' the IPP object MUST (1)\n\
    \   accept the charset in requests and return the charset in responses as\n  \
    \ needed.\n   If more charsets than UTF-8 are supported, the IPP object MUST\n\
    \   perform charset conversion between the charsets as described in\n   Section\
    \ 3.1.4.2.\n"
- title: 4.4.19 natural-language-configured (naturalLanguage)
  contents:
  - "4.4.19 natural-language-configured (naturalLanguage)\n   This REQUIRED Printer\
    \ attribute identifies the natural language that\n   the Printer object has been\
    \ configured to represent 'text' and 'name'\n   Printer attributes that are set\
    \ by the operator, system\n   administrator, or manufacturer, i.e., for \"printer-name\"\
    \ (name),\n   \"printer-location\" (text), \"printer-info\" (text), and \"printer-make-\n\
    \   and-model\" (text).  When returning these Printer attributes, the\n   Printer\
    \ object MAY return them in the configured natural language\n   specified by this\
    \ attribute, instead of the natural language\n   requested by the client in the\
    \ \"attributes-natural-language\"\n   operation attribute.  See Section 3.1.4.1\
    \ for the specification of\n   the OPTIONAL multiple natural language support.\
    \  Therefore, the value\n   of the Printer object's \"natural-language-configured\"\
    \ attribute MUST\n   also be among the values of the Printer object's \"generated-natural-\n\
    \   language-supported\" attribute.\n"
- title: 4.4.20 generated-natural-language-supported (1setOf naturalLanguage)
  contents:
  - "4.4.20 generated-natural-language-supported (1setOf naturalLanguage)\n   This\
    \ REQUIRED Printer attribute identifies the natural language(s)\n   that the Printer\
    \ object and contained Job objects support in\n   attributes with attribute syntax\
    \ 'text' and 'name'.  The natural\n   language(s) supported depends on implementation\
    \ and/or configuration.\n   Unlike charsets, IPP objects MUST accept requests\
    \ with any natural\n   language or any Natural Language Override whether the natural\n\
    \   language is supported or not.\n   If a Printer object supports a natural language,\
    \ it means that for\n   any of the attributes for which the Printer or Job object\
    \ generates\n   messages, i.e., for the \"job-state-message\" and \"printer-state-\n\
    \   message\" attributes and Operation Messages (see Section 3.1.5) in\n   operation\
    \ responses, the Printer and Job objects MUST be able to\n   generate messages\
    \ in any of the Printer's supported natural\n   languages.  See section 3.1.4\
    \ for the definition of 'text' and 'name'\n   attributes in operation requests\
    \ and responses.\n   Note: A Printer object that supports multiple natural languages,\n\
    \   often has separate catalogs of messages, one for each natural\n   language\
    \ supported.\n"
- title: 4.4.21 document-format-default (mimeMediaType)
  contents:
  - "4.4.21 document-format-default (mimeMediaType)\n   This REQUIRED Printer attribute\
    \ identifies the document format that\n   the Printer object has been configured\
    \ to assume if the client does\n   not supply a \"document-format\" operation\
    \ attribute in any of the\n   operation requests that supply document data.  The\
    \ standard values\n   for this attribute are Internet Media types (sometimes called\
    \ MIME\n   types).  For further details see the description of the\n   'mimeMediaType'\
    \ attribute syntax in Section 4.1.9.\n"
- title: 4.4.22 document-format-supported (1setOf mimeMediaType)
  contents:
  - "4.4.22 document-format-supported (1setOf mimeMediaType)\n   This REQUIRED Printer\
    \ attribute identifies the set of document\n   formats that the Printer object\
    \ and contained Job objects can\n   support. For further details see the description\
    \ of the\n   'mimeMediaType' attribute syntax in Section 4.1.9.\n"
- title: 4.4.23 printer-is-accepting-jobs (boolean)
  contents:
  - "4.4.23 printer-is-accepting-jobs (boolean)\n   This REQUIRED Printer attribute\
    \ indicates whether the printer is\n   currently able to accept jobs, i.e., is\
    \ accepting Print-Job, Print-\n   URI, and Create-Job requests.  If the value\
    \ is 'true', the printer is\n   accepting jobs.  If the value is 'false', the\
    \ Printer object is\n   currently rejecting any jobs submitted to it.  In this\
    \ case, the\n   Printer object returns the 'server-error-not-accepting-jobs' status\n\
    \   code.\n   This value is independent of the \"printer-state\" and \"printer-state-\n\
    \   reasons\" attributes because its value does not affect the current\n   job;\
    \ rather it affects future jobs.  This attribute, when 'false',\n   causes the\
    \ Printer to reject jobs even when the \"printer-state\" is\n   'idle' or, when\
    \ 'true', causes the Printer object to accepts jobs\n   even when the \"printer-state\"\
    \ is 'stopped'.\n"
- title: 4.4.24 queued-job-count (integer(0:MAX))
  contents:
  - "4.4.24 queued-job-count (integer(0:MAX))\n   This REQUIRED Printer attribute\
    \ contains a count of the number of\n   jobs that are either 'pending', 'processing',\
    \ 'pending-held', or\n   'processing-stopped' and is set by the Printer object.\n"
- title: 4.4.25 printer-message-from-operator (text(127))
  contents:
  - "4.4.25 printer-message-from-operator (text(127))\n   This Printer attribute provides\
    \ a message from an operator, system\n   administrator or \"intelligent\" process\
    \ to indicate to the end user\n   information or status of the printer, such as\
    \ why it is unavailable\n   or when it is expected to be available.\n"
- title: 4.4.26 color-supported (boolean)
  contents:
  - "4.4.26 color-supported (boolean)\n   This Printer attribute identifies whether\
    \ the device is capable of\n   any type of color printing at all, including highlight\
    \ color.  All\n   document instructions having to do with color are embedded within\
    \ the\n   document PDL (none are external IPP attributes in IPP/1.1).\n   Note:\
    \  end-users are able to determine the nature and details of the\n   color support\
    \ by querying the \"printer-more-info-manufacturer\"\n   Printer attribute.\n"
- title: 4.4.27 reference-uri-schemes-supported (1setOf uriScheme)
  contents:
  - "4.4.27 reference-uri-schemes-supported (1setOf uriScheme)\n   This Printer attribute\
    \ specifies which URI schemes are supported for\n   use in the \"document-uri\"\
    \ operation attribute of the Print-URI or\n   Send-URI operation.  If a Printer\
    \ object supports these optional\n   operations, it MUST support the \"reference-uri-schemes-supported\"\
    \n   Printer attribute with at least the following schemed URI value:\n      'ftp':\
    \  The Printer object will use an FTP 'get' operation as\n         defined in\
    \ RFC 2228 [RFC2228] using FTP URLs as defined by\n         [RFC2396] and [RFC2316].\n\
    \   The Printer object MAY OPTIONALLY support other URI schemes (see\n   section\
    \ 4.1.6).\n"
- title: 4.4.28 pdl-override-supported (type2 keyword)
  contents:
  - "4.4.28 pdl-override-supported (type2 keyword)\n   This REQUIRED Printer attribute\
    \ expresses the ability for a\n   particular Printer implementation to either\
    \ attempt to override\n   document data instructions with IPP attributes or not.\n\
    \   This attribute takes on the following keyword values:\n      - 'attempted':\
    \ This value indicates that the Printer object\n         attempts to make the\
    \ IPP attribute values take precedence over\n         embedded instructions in\
    \ the document data, however there is no\n         guarantee.\n      - 'not-attempted':\
    \ This value indicates that the Printer object\n         makes no attempt to make\
    \ the IPP attribute values take\n         precedence over embedded instructions\
    \ in the document data.\n   Section 15 contains a full description of how this\
    \ attribute\n   interacts with and affects other IPP attributes, especially the\n\
    \   \"ipp-attribute-fidelity\" attribute.\n"
- title: 4.4.29 printer-up-time (integer(1:MAX))
  contents:
  - "4.4.29 printer-up-time (integer(1:MAX))\n   This REQUIRED Printer attribute indicates\
    \ the amount of time (in\n   seconds) that this Printer instance has been up and\
    \ running.  The\n   value is a monotonically increasing value starting from 1\
    \ when the\n   Printer object is started-up (initialized, booted, etc.).  This\
    \ value\n   is used to populate the Event Time Job Description Job attributes\n\
    \   \"time-at-creation\", \"time-at-processing\", and \"time-at-completed\"\n\
    \   (see section 4.3.14).\n   If the Printer object goes down at some value 'n',\
    \ and comes back up,\n   the implementation MAY:\n      1. Know how long it has\
    \ been down, and resume at some value\n         greater than 'n', or\n      2.\
    \ Restart from 1.\n   In other words, if the device or devices that the Printer\
    \ object is\n   representing are restarted or power cycled, the Printer object\
    \ MAY\n   continue counting this value or MAY reset this value to 1 depending\n\
    \   on implementation.  However, if the Printer object software ceases\n   running,\
    \ and restarts without knowing the last value for \"printer-\n   up-time\", the\
    \ implementation MUST reset this value to 1.  If this\n   value is reset and the\
    \ Printer has persistent jobs, the Printer MUST\n   reset the \"time-at-xxx(integer)\
    \ Event Time Job Description attributes\n   according to Section 4.3.14.  An implementation\
    \ MAY use both\n   implementation alternatives, depending on warm versus cold\
    \ start,\n   respectively.\n"
- title: 4.4.30 printer-current-time (dateTime)
  contents:
  - "4.4.30 printer-current-time (dateTime)\n   This Printer attribute indicates the\
    \ current date and time.  This\n   value is used to populate the Event Time Job\
    \ Description attributes:\n   \"date-time-at-creation\", \"date-time-at-processing\"\
    , and \"date-time-\n   at-completed\" (see Section 4.3.14).\n   The date and time\
    \ is obtained on a \"best efforts basis\" and does not\n   have to be that precise\
    \ in order to work in practice.  A Printer\n   implementation sets the value of\
    \ this attribute by obtaining the date\n   and time via some implementation-dependent\
    \ means, such as getting the\n   value from a network time server, initialization\
    \ at time of\n   manufacture, or setting by an administrator.  See [IPP-IIG] for\n\
    \   examples.  If an implementation supports this attribute and the\n   implementation\
    \ knows that it has not yet been set, then the\n   implementation MUST return\
    \ the value of this attribute using the\n   out-of-band 'no-value' meaning not\
    \ configured.  See the beginning of\n   section 4.1.\n   The time zone of this\
    \ attribute NEED NOT be the time zone used by\n   people located near the Printer\
    \ object or device.  The client MUST\n   NOT expect that the time zone of any\
    \ received 'dateTime' value to be\n   in the time zone of the client or in the\
    \ time zone of the people\n   located near the printer.\n   The client SHOULD\
    \ display any dateTime attributes to the user in\n   client local time by converting\
    \ the 'dateTime' value returned by the\n   server to the time zone of the client,\
    \ rather than using the time\n   zone returned by the Printer in attributes that\
    \ use the 'dateTime'\n   attribute syntax.\n"
- title: 4.4.31 multiple-operation-time-out (integer(1:MAX))
  contents:
  - "4.4.31 multiple-operation-time-out (integer(1:MAX))\n   This Printer attributes\
    \ identifies the minimum time (in seconds) that\n   the Printer object waits for\
    \ additional Send-Document or Send-URI\n   operations to follow a still-open Job\
    \ object before taking  any\n   recovery actions, such as the ones indicated in\
    \ section 3.3.1.  If\n   the Printer object supports the Create-Job and Send-Document\n\
    \   operations (see section 3.2.4 and 3.3.1), it MUST support this\n   attribute.\n\
    \   It is RECOMMENDED that vendors supply a value for this attribute that\n  \
    \ is between 60 and 240 seconds.  An implementation MAY allow a system\n   administrator\
    \ to set this attribute (by means outside this IPP/1.1\n   document).  If so,\
    \ the system administrator MAY be able to set values\n   outside this range.\n"
- title: 4.4.32 compression-supported (1setOf type3 keyword)
  contents:
  - "4.4.32 compression-supported (1setOf type3 keyword)\n   This REQUIRED Printer\
    \ attribute identifies the set of supported\n   compression algorithms for document\
    \ data.  Compression only applies\n   to the document data; compression does not\
    \ apply to the encoding of\n   the IPP operation itself.  The supported values\
    \ are used to validate\n   the client supplied \"compression\" operation attributes\
    \ in Print-Job,\n   Send-Document, and Send-URI requests.\n   Standard keyword\
    \ values are :\n   'none': no compression is used.\n   'deflate':  ZIP public\
    \ domain inflate/deflate) compression technology\n      in RFC 1951 [RFC1951]\n\
    \   'gzip' GNU zip compression technology described in RFC 1952\n      [RFC1952].\n\
    \   'compress': UNIX compression technology in RFC 1977 [RFC1977]\n"
- title: 4.4.33 job-k-octets-supported (rangeOfInteger(0:MAX))
  contents:
  - "4.4.33 job-k-octets-supported (rangeOfInteger(0:MAX))\n   This Printer attribute\
    \ specifies the upper and lower bounds of total\n   sizes of jobs in K octets,\
    \ i.e., in units of 1024 octets. The\n   supported values are used to validate\
    \ the client supplied \"job-k-\n   octets\" operation attributes in create requests.\
    \  The corresponding\n   job description attribute \"job-k-octets\" is defined\
    \ in section\n   4.3.17.1.\n"
- title: 4.4.34 job-impressions-supported (rangeOfInteger(0:MAX))
  contents:
  - "4.4.34 job-impressions-supported (rangeOfInteger(0:MAX))\n   This Printer attribute\
    \ specifies the upper and lower bounds for the\n   number of impressions per job.\
    \ The supported values are used to\n   validate the client supplied \"job-impressions\"\
    \ operation attributes\n   in create requests.  The corresponding job description\
    \ attribute\n   \"job-impressions\" is defined in section 4.3.17.2.\n"
- title: 4.4.35 job-media-sheets-supported (rangeOfInteger(0:MAX))
  contents:
  - "4.4.35 job-media-sheets-supported (rangeOfInteger(0:MAX))\n   This Printer attribute\
    \ specifies the upper and lower bounds for the\n   number of media sheets per\
    \ job. The supported values are used to\n   validate the client supplied \"job-media-sheets\"\
    \ operation attributes\n   in create requests.  The corresponding Job attribute\
    \ \"job-media-\n   sheets\" is defined in section 4.3.17.3.\n"
- title: 4.4.36 pages-per-minute (integer(0:MAX))
  contents:
  - "4.4.36 pages-per-minute (integer(0:MAX))\n   This Printer attributes specifies\
    \ the nominal number of pages per\n   minute to the nearest whole number which\
    \ may be generated by this\n   printer (e.g., simplex, black-and-white).  This\
    \ attribute is\n   informative, not a service guarantee.  Generally, it is the\
    \ value\n   used in the marketing literature to describe the device.\n   A value\
    \ of 0 indicates a device that takes more than two minutes to\n   process a page.\n"
- title: 4.4.37 pages-per-minute-color (integer(0:MAX))
  contents:
  - "4.4.37 pages-per-minute-color (integer(0:MAX))\n   This Printer attributes specifies\
    \ the nominal number of pages per\n   minute to the nearest whole number which\
    \ may be generated by this\n   printer when printing color (e.g., simplex, color).\
    \  For purposes of\n   this attribute, \"color\" means the same as for the \"\
    color-supported\"\n   attribute, namely, the device is capable of any type of\
    \ color\n   printing at all, including highlight color.  This attribute is\n \
    \  informative, not a service guarantee.  Generally, it is the value\n   used\
    \ in the marketing literature to describe the color capabilities\n   of this device.\n\
    \   A value of 0 indicates a device that takes more than two minutes to\n   process\
    \ a page.\n   If a color device has several color modes, it MAY use the pages-per-\n\
    \   minute value for this attribute that corresponds to the mode that\n   produces\
    \ the highest number.\n   Black and white only printers MUST NOT support this\
    \ attribute.  If\n   this attribute is present, then the \"color-supported\" Printer\n\
    \   description attribute MUST be present and have a 'true' value.\n   The values\
    \ of these two attributes returned by the Get-Printer-\n   Attributes operation\
    \ MAY be affected by the \"document-format\"\n   attribute supplied by the client\
    \ in the Get-Printer-Attributes\n   request.  In other words, the implementation\
    \ MAY have different\n   speeds depending on the document format being processed.\
    \  See section\n   3.2.5.1 Get-Printer-Attributes.\n"
- title: 5. Conformance
  contents:
  - "5. Conformance\n   This section describes conformance issues and requirements.\
    \ This\n   document introduces model entities such as objects, operations,\n \
    \  attributes, attribute syntaxes, and attribute values.  These\n   conformance\
    \ sections describe the conformance requirements which\n   apply to these model\
    \ entities.\n"
- title: 5.1 Client Conformance Requirements
  contents:
  - "5.1 Client Conformance Requirements\n   This section describes the conformance\
    \ requirements for a client (see\n   section 2.1), whether it be:\n      1. contained\
    \ within software controlled by an end user, e.g.\n         activated by the \"\
    Print\" menu item in an application that sends\n         IPP requests or\n   \
    \   2. the print server component that sends IPP requests to either an\n     \
    \    output device or another \"downstream\" print server.\n   A conforming client\
    \ MUST support all REQUIRED operations as defined\n   in this document.  For each\
    \ attribute included in an operation\n   request, a conforming client MUST supply\
    \ a value whose type and value\n   syntax conforms to the requirements of the\
    \ Model document as\n   specified in Sections 3 and 4.  A conforming client MAY\
    \ supply any\n   IETF standards track extensions and/or vendor extensions in an\n\
    \   operation request, as long as the extensions meet the requirements in\n  \
    \ Section 6.\n   Otherwise, there are no conformance requirements placed on the\
    \ user\n   interfaces provided by IPP clients or their applications.  For\n  \
    \ example, one application might not allow an end user to submit\n   multiple\
    \ documents per job, while another does.  One application\n   might first query\
    \ a Printer object in order to supply a graphical\n   user interface (GUI) dialogue\
    \ box with supported and default values\n   whereas a different implementation\
    \ might not.\n   When sending a request, an IPP client NEED NOT supply any attributes\n\
    \   that are indicated as OPTIONALLY supplied by the client.\n   A client MUST\
    \ be able to accept any of the attribute syntaxes defined\n   in Section 4.1,\
    \ including their full range, that may be returned to\n   it in a response from\
    \ a Printer object.  In particular for each\n   attribute that the client supports\
    \ whose attribute syntax is 'text',\n   the client MUST accept and process both\
    \ the 'textWithoutLanguage' and\n   'textWithLanguage' forms.  Similarly, for\
    \ each attribute that the\n   client supports whose attribute syntax is 'name',\
    \ the client MUST\n   accept and process both the 'nameWithoutLanguage' and\n\
    \   'nameWithLanguage' forms.  For presentation purposes, truncation of\n   long\
    \ attribute values is not recommended.  A recommended approach\n   would be for\
    \ the client implementation to allow the user to scroll\n   through long attribute\
    \ values.\n   A response MAY contain attribute groups, attributes, attribute\n\
    \   syntaxes, values, and status codes that the client does not expect.\n   Therefore,\
    \ a client implementation MUST gracefully handle such\n   responses and not refuse\
    \ to inter-operate with a conforming Printer\n   that is returning IETF standards\
    \ track extension or vendor\n   extensions, including attribute groups, attributes,\
    \ attribute\n   syntaxes, attribute values, status codes, and out-of-band attribute\n\
    \   values that conform to Section 6.  Clients may choose to ignore any\n   parameters,\
    \ attribute groups, attributes, attribute syntaxes, or\n   values that they do\
    \ not understand.\n   While a client is sending data to a printer, it SHOULD do\
    \ its best to\n   prevent a channel from being closed by a lower layer when the\
    \ channel\n   is blocked (i.e. flow-controlled off) for whatever reason, e.g.\
    \ 'out\n   of paper' or 'job ahead hasn't freed up enough memory'.  However, the\n\
    \   layer that launched the print submission (e.g. an end user) MAY close\n  \
    \ the channel in order to cancel the job.  When a client closes a\n   channel,\
    \ a Printer MAY print all or part of the received portion of\n   the document.\
    \  See the \"Encoding and Transport\" document [RFC2910]\n   for more details.\n\
    \   A client MUST support Client Authentication as defined in the IPP/1.1\n  \
    \ Encoding and Transport document [RFC2910].  A client SHOULD support\n   Operation\
    \ Privacy and Server Authentication as defined in the IPP/1.1\n   Encoding and\
    \ Transport document [RFC2910].  See also section 8 of\n   this document.\n"
- title: 5.2 IPP Object Conformance Requirements
  contents:
  - "5.2 IPP Object Conformance Requirements\n   This section specifies the conformance\
    \ requirements for conforming\n   implementations of IPP objects (see section\
    \ 2).  These requirements\n   apply to an IPP object whether it is:\n      (1)\
    \ an (embedded) device component that accepts IPP requests and\n      controls\
    \ the device or\n      (2) a component of a print server that accepts IPP requests\
    \ (where\n      the print server control one or more networked devices using IPP\
    \ or\n      other protocols).\n"
- title: 5.2.1 Objects
  contents:
  - "5.2.1 Objects\n   Conforming implementations MUST implement all of the model\
    \ objects as\n   defined in this document in the indicated sections:\n      Section\
    \ 2.1 - Printer Object\n      Section 2.2 - Job Object\n"
- title: 5.2.2 Operations
  contents:
  - "5.2.2 Operations\n   Conforming IPP object implementations MUST implement all\
    \ of the\n   REQUIRED model operations, including REQUIRED responses, as defined\n\
    \   in this document in the indicated sections:\n      For a Printer object:\n\
    \         Print-Job (section 3.2.1)               REQUIRED\n         Print-URI\
    \ (section 3.2.2)               OPTIONAL\n         Validate-Job (section 3.2.3)\
    \            REQUIRED\n         Create-Job (section 3.2.4)              OPTIONAL\n\
    \         Get-Printer-Attributes (section 3.2.5)  REQUIRED\n         Get-Jobs\
    \ (section 3.2.6)                REQUIRED\n         Pause-Printer (section 3.2.7)\
    \           OPTIONAL\n         Resume-Printer (section 3.2.8)          OPTIONAL\n\
    \         Purge-Jobs (section 3.2.9)              OPTIONAL\n      For a Job object:\n\
    \         Send-Document (section 3.3.1)           OPTIONAL\n         Send-URI\
    \ (section 3.3.2)                OPTIONAL\n         Cancel-Job (section 3.3.3)\
    \              REQUIRED\n         Get-Job-Attributes (section 3.3.4)      REQUIRED\n\
    \         Hold-Job (section 3.3.5)                OPTIONAL\n         Release-Job\
    \ (section 3.3.6)             OPTIONAL\n         Restart-Job (section 3.3.7) \
    \            OPTIONAL\n   Conforming IPP objects MUST support all REQUIRED operation\
    \ attributes\n   and all values of such attributes if so indicated in the description.\n\
    \   Conforming IPP objects MUST ignore all unsupported or unknown\n   operation\
    \ attributes or operation attribute groups received in a\n   request, but MUST\
    \ reject a request that contains a supported\n   operation attribute that contains\
    \ an unsupported value.\n   Conforming IPP objects MAY return operation responses\
    \ that contain\n   attributes groups, attributes names,  attribute syntaxes, attribute\n\
    \   values, and status codes that are extensions to this standard.  The\n   additional\
    \ attribute groups MAY occur in any order.\n   The following section on object\
    \ attributes specifies the support\n   required for object attributes.\n"
- title: 5.2.3 IPP Object Attributes
  contents:
  - "5.2.3 IPP Object Attributes\n   Conforming IPP objects MUST support all of the\
    \ REQUIRED object\n   attributes, as defined in this document in the indicated\
    \ sections.\n   If an object supports an attribute, it MUST support only those\
    \ values\n   specified in this document or through the extension mechanism\n \
    \  described in section 5.2.4. It MAY support any non-empty subset of\n   these\
    \ values.  That is, it MUST support at least one of the specified\n   values and\
    \ at most all of them.\n"
- title: 5.2.4 Versions
  contents:
  - "5.2.4 Versions\n   IPP/1.1 clients MUST meet the conformance requirements for\
    \ clients\n   specified in this document and [RFC2910].  IPP/1.1 clients MUST\
    \ send\n   requests containing a \"version-number\" parameter with a '1.1' value.\n\
    \   IPP/1.1 Printer and Job objects MUST meet the conformance\n   requirements\
    \ for IPP objects specified in this document and\n   [RFC2910].   IPP/1.1 objects\
    \ MUST accept requests containing a\n   \"version-number\" parameter with a '1.1'\
    \ value (or reject the request\n   if the operation is not supported).\n   It\
    \ is beyond the scope of this specification to mandate conformance\n   with previous\
    \ versions.  IPP/1.1 was deliberately designed, however,\n   to make supporting\
    \ previous versions easy.  It is worth noting that,\n   at the time of composing\
    \ this specification (1999), we would expect\n   IPP/1.1 Printer implementations\
    \ to:\n     understand any valid request in the format of IPP/1.0, or 1.1;\n \
    \    respond appropriately with a response containing the same\n     \"version-number\"\
    \ parameter value used by the client in the request.\n   And we would expect IPP/1.1\
    \ clients to:\n     understand any valid response in the format of IPP/1.0, or\
    \ 1.1.\n   It is recommended that IPP/1.1 clients try supplying alternate\n  \
    \ version numbers if they receive a 'server-error-version-not-\n   supported'\
    \ error return in a response.\n"
- title: 5.2.5 Extensions
  contents:
  - "5.2.5 Extensions\n   A conforming IPP object MAY support IETF standards track\
    \ extensions\n   and vendor extensions, as long as the extensions meet the\n \
    \  requirements specified in Section 6.\n   For each attribute included in an\
    \ operation response, a conforming\n   IPP object MUST return a value whose type\
    \ and value syntax conforms\n   to the requirement of the Model document as specified\
    \ in Sections 3\n   and 4.\n"
- title: 5.2.6 Attribute Syntaxes
  contents:
  - "5.2.6 Attribute Syntaxes\n   An IPP object MUST be able to accept any of the\
    \ attribute syntaxes\n   defined in Section 4.1, including their full range, in\
    \ any operation\n   in which a client may supply attributes or the system administrator\n\
    \   may configure attributes (by means outside the scope of this IPP/1.1\n   document).\
    \  In particular for each attribute that the IPP object\n   supports whose attribute\
    \ syntax is 'text', the IPP object MUST accept\n   and process both the 'textWithoutLanguage'\
    \ and 'textWithLanguage'\n   forms.  Similarly, for each attribute that the IPP\
    \ object supports\n   whose attribute syntax is 'name', the IPP object MUST accept\
    \ and\n   process both the 'nameWithoutLanguage' and 'nameWithLanguage' forms.\n\
    \   Furthermore, an IPP object MUST return attributes to the client in\n   operation\
    \ responses that conform to the syntax specified in Section\n   4.1, including\
    \ their full range if supplied previously by a client.\n"
- title: 5.2.7 Security
  contents:
  - "5.2.7 Security\n   An IPP Printer implementation SHOULD contain support for Client\n\
    \   Authentication as defined in the IPP/1.1 Encoding and Transport\n   document\
    \ [RFC2910].  A Printer implementation MAY allow an\n   administrator to configure\
    \ the Printer so that all, some, or none of\n   the users are authenticated. \
    \ See also section 8 of this document.\n   An IPP Printer implementation SHOULD\
    \ contain support for Operation\n   Privacy and Server Authentication as defined\
    \ in the IPP/1.1 Encoding\n   and Transport document [RFC2910].  A Printer implementation\
    \ MAY allow\n   an administrator to configure the degree of support for Operation\n\
    \   Privacy and Server Authentication.  See also section 8 of this\n   document.\n\
    \   Security MUST NOT be compromised when a client supplies a lower\n   \"version-number\"\
    \ parameter in a request.  For example, if an IPP/1.1\n   conforming Printer object\
    \ accepts version '1.0' requests and is\n   configured to enforce Digest Authentication,\
    \ it MUST do the same for\n   a version '1.0' request.\n"
- title: 5.3 Charset and Natural Language Requirements
  contents:
  - "5.3 Charset and Natural Language Requirements\n   All clients and IPP objects\
    \ MUST support the 'utf-8' charset as\n   defined in section 4.1.7.\n   IPP objects\
    \ MUST be able to accept any client request which correctly\n   uses the \"attributes-natural-language\"\
    \ operation attribute or the\n   Natural Language Override mechanism on any individual\
    \ attribute\n   whether or not the natural language is supported by the IPP object.\n\
    \   If an IPP object supports a natural language, then it MUST be able to\n  \
    \ translate (perhaps by table lookup) all generated 'text' or 'name'\n   attribute\
    \ values into one of the supported languages (see section\n   3.1.4).  That is,\
    \ the IPP object that supports a natural language\n   NEED NOT be a general purpose\
    \ translator of any arbitrary 'text' or\n   'name' value supplied by the client\
    \ into that natural language.\n   However, the object MUST be able to translate\
    \ (automatically\n   generate) any of its own attribute values and messages into\
    \ that\n   natural language.\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   This section describes the procedures for defining\
    \ semantics for the\n   following IETF standards track extensions and vendor extensions\
    \ to\n   the IPP/1.1 Model and Semantics document:\n      1. keyword attribute\
    \ values\n      2. enum attribute values\n      3. attributes\n      4. attribute\
    \ syntaxes\n      5. operations\n      6. attribute groups\n      7. status codes\n\
    \      8. out-of-band attribute values\n   Extensions registered for use with\
    \ IPP/1.1 are OPTIONAL for client\n   and IPP object conformance to the IPP/1.1\
    \ \"Model and Semantics\"\n   document (this document).\n   These extension procedures\
    \ are aligned with the guidelines as set\n   forth by the IESG [IANA-CON].  Section\
    \ 11 describes how to propose\n   new registrations for consideration.  IANA will\
    \ reject registration\n   proposals that leave out required information or do\
    \ not follow the\n   appropriate format described in Section 11.  The IPP/1.1\
    \ Model and\n   Semantics document may also be extended by an appropriate RFC\
    \ that\n   specifies any of the above extensions.\n"
- title: 6.1 Typed 'keyword' and 'enum' Extensions
  contents:
  - "6.1 Typed 'keyword' and 'enum' Extensions\n   IPP allows for 'keyword' and 'enum'\
    \ extensions (see sections 4.1.2.3\n   and 4.1.4).  This document uses prefixes\
    \ to the 'keyword' and 'enum'\n   basic attribute syntax type in order to communicate\
    \ extra information\n   to the reader through its name. This extra information\
    \ is not\n   represented in the protocol because it is unimportant to a client\
    \ or\n   Printer object.  The list below describes the prefixes and their\n  \
    \ meaning.\n      \"type1\":  This IPP specification document must be revised\
    \ (or\n         another IETF standards track document which augments this\n  \
    \       document) to add a new keyword or a new enum.  No vendor\n         defined\
    \ keywords or enums are allowed.\n      \"type2\":  Implementers can, at any time,\
    \ add new keyword or enum\n         values by proposing the complete specification\
    \ to IANA:\n         iana@iana.org\n         IANA will forward the registration\
    \ proposal to the IPP\n         Designated Expert who will review the proposal\
    \ with a mailing\n         list that the Designated Expert keeps for this purpose.\n\
    \         Initially, that list will be the mailing list used by the IPP\n    \
    \     WG:\n            ipp@pwg.org\n         even after the IPP WG is disbanded\
    \ as permitted by [IANA-CON].\n         The IPP Designated Expert is appointed\
    \ by the IESG Area\n         Director responsible for IPP, according to [IANA-CON].\n\
    \         When a type2 keyword or enum is approved, the IPP Designated\n     \
    \    Expert becomes the point of contact for any future maintenance\n        \
    \ that might be required for that registration.\n      \"type3\":  Implementers\
    \ can, at any time, add new keyword and enum\n         values by submitting the\
    \ complete specification to IANA as for\n         type2 who will forward the proposal\
    \ to the IPP Designated\n         Expert.  While no additional technical review\
    \ is required, the\n         IPP Designated Expert may, at his/her discretion,\
    \ forward the\n         proposal to the same mailing list as for type2 registrations\n\
    \         for advice and comment.\n         When a type3 keyword or enum is approved\
    \ by the IPP Designated\n         Expert, the original proposer becomes the point\
    \ of contact for\n         any future maintenance that might be required for that\n\
    \         registration.\n   For type2 and type3 keywords, the proposer includes\
    \ the name of the\n   keyword in the registration proposal and the name is part\
    \ of the\n   technical review.\n   After type2 and type3 enums specifications\
    \ are approved, the IPP\n   Designated Expert in consultation with IANA assigns\
    \ the next\n   available enum number for each enum value.\n   IANA will publish\
    \ approved type2 and type3 keyword and enum\n   attributes value registration\
    \ specifications in:\n      ftp.isi.edu/iana/assignments/ipp/attribute-values/xxx/yyy.txt\n\
    \   where xxx is the attribute name that specifies the initial values and\n  \
    \ yyy.txt is a descriptive file name that contains one or more enums or\n   keywords\
    \ approved at the same time.  For example, if several\n   additional enums for\
    \ stapling are approved for use with the\n   \"finishings\" attribute (and \"\
    finishings-default\" and \"finishings-\n   supported\" attributes), IANA will\
    \ publish the additional values in\n   the file:\n      ftp.isi.edu/iana/assignments/ipp/attribute-\n\
    \      values/finishings/stapling.txt\n   Note: Some attributes are defined to\
    \ be: 'type3 keywords' | 'name'\n   which allows for attribute values to be extended\
    \ by a site\n   administrator with administrator defined names.  Such names are\
    \ not\n   registered with IANA.\n   By definition, each of the three types above\
    \ assert some sort of\n   registry or review process in order for extensions to\
    \ be considered\n   valid.  Each higher numbered level (1, 2, 3) tends to be decreasingly\n\
    \   less stringent than the previous level.   Therefore, any typeN value\n   MAY\
    \ be registered using a process for some typeM where M is less than\n   N, however\
    \ such registration is NOT REQUIRED.  For example, a type3\n   value MAY be registered\
    \ in a type 1 manner (by being included in a\n   future version of an IPP specification),\
    \ however, it is NOT REQUIRED.\n   This document defines keyword and enum values\
    \ for all of the above\n   types, including type3 keywords.\n   For vendor keyword\
    \ extensions, implementers SHOULD use keywords with\n   a suitable distinguishing\
    \ prefix, such as \"xxx-\" where xxx follows\n   the syntax rules for keywords\
    \ (see section 4.1.3) and is the\n   (lowercase) fully qualified company name\
    \ registered with IANA for use\n   in domain names [RFC1035].  For example, if\
    \ the company XYZ Corp. had\n   obtained the domain name \"XYZ.com\", then a vendor\
    \ keyword 'abc' would\n   be: 'xyz.com-abc'.\n   Note: RFC 1035 [RFC1035] indicates\
    \ that while upper and lower case\n   letters are allowed in domain names, no\
    \ significance is attached to\n   the case.  That is, two names with the same\
    \ spelling but different\n   case are to be treated as if identical.  Also, the\
    \ labels in a domain\n   name must follow the rules for ARPANET host names:  They\
    \ must start\n   with a letter, end with a letter or digit, and have as interior\n\
    \   characters only letters, digits, and hyphen.  Labels must be 63\n   characters\
    \ or less.  Labels are separated by the \".\" character.\n   For vendor enum extensions,\
    \ implementers MUST use values in the\n   reserved integer range which is 2**30\
    \ to 2**31-1.\n"
- title: 6.2 Attribute Extensibility
  contents:
  - "6.2 Attribute Extensibility\n   Attribute names (see section 4.1.3) are type2\
    \ keywords.  Therefore,\n   new attributes may be registered and have the same\
    \ status as\n   attributes in this document by following the type2 extension rules.\n\
    \   For vendor attribute extensions, implementers SHOULD use keywords\n   with\
    \ a suitable distinguishing prefix as described in Section 6.1.\n   IANA will\
    \ publish approved attribute registration specifications as\n   separate files:\n\
    \      ftp.isi.edu/iana/assignments/ipp/attributes/xxx-yyy.txt\n   where \"xxx-yyy\"\
    \ is the new attribute name.\n   If a new Printer object attribute is defined\
    \ and its values can be\n   affected by a specific document format, its specification\
    \ needs to\n   contain the following sentence:\n         \"The value of this attribute\
    \ returned in a Get-Printer-\n         Attributes response MAY depend on the \"\
    document-format\"\n         attribute supplied (see Section 3.2.5.1).\"\n   If\
    \ the specification does not, then its value in the Get-Printer-\n   Attributes\
    \ response MUST NOT depend on the \"document-format\" supplied\n   in the request.\
    \  When a new Job Template attribute is registered, the\n   value of the Printer\
    \ attributes MAY vary with \"document-format\"\n   supplied in the request without\
    \ the specification having to indicate\n   so.\n"
- title: 6.3 Attribute Syntax Extensibility
  contents:
  - "6.3 Attribute Syntax Extensibility\n   Attribute syntaxes (see section 4.1) are\
    \ like type2 enums.\n   Therefore, new attribute syntaxes may be registered and\
    \ have the same\n   status as attribute syntaxes in this document by following\
    \ the type2\n   extension rules described in Section 6.1.  The initial set of\
    \ value\n   codes that identify each of the attribute syntaxes have been assigned\n\
    \   in the \"Encoding and Transport\" document [RFC2910], including a\n   designated\
    \ range for vendor extension.\n   For attribute syntaxes, the IPP Designated Expert\
    \ in consultation\n   with IANA assigns the next attribute syntax code in the\
    \ appropriate\n   range as specified in [RFC2910].  IANA will publish approved\n\
    \   attribute syntax registration specifications as separate files:\n      ftp.isi.edu/iana/assignments/ipp/attribute-syntaxes/xxx-yyy.txt\n\
    \   where 'xxx-yyy' is the new attribute syntax name.\n"
- title: 6.4 Operation Extensibility
  contents:
  - "6.4 Operation Extensibility\n   Operations (see section 3) may also be registered\
    \ following the type2\n   procedures described in Section 6.1, though major new\
    \ operations will\n   usually be done by a new standards track RFC that augments\
    \ this\n   document.  For vendor operation extensions, implementers MUST use the\n\
    \   range for the \"operation-id\" in requests specified in Section 4.4.15\n \
    \  \"operations-supported\" Printer attribute.\n   For operations, the IPP Designated\
    \ Expert in consultation with IANA\n   assigns the next operation-id code as specified\
    \ in Section 4.4.15.\n   IANA will publish approved operation registration specifications\
    \ as\n   separate files:\n      ftp.isi.edu/iana/assignments/ipp/operations/Xxx-Yyy.txt\n\
    \   where \"Xxx-Yyy\" is the new operation name.\n"
- title: 6.5 Attribute Group Extensibility
  contents:
  - "6.5 Attribute Group Extensibility\n   Attribute groups (see section 3.1.3) passed\
    \ in requests and responses\n   may be registered following the type2 procedures\
    \ described in Section\n   6.1.  The initial set of attribute group tags have\
    \ been assigned in\n   the \"Encoding and Transport\" document [RFC2910], including\
    \ a\n   designated range for vendor extension.\n   For attribute groups, the IPP\
    \ Designated Expert in consultation with\n   IANA assigns the next attribute group\
    \ tag code in the appropriate\n   range as specified in [RFC2910].  IANA will\
    \ publish approved\n   attribute group registration specifications as separate\
    \ files:\n      ftp.isi.edu/iana/assignments/ipp/attribute-group-tags/xxx-yyy-\n\
    \      tag.txt\n   where 'xxx-yyy-tag' is the new attribute group tag name.\n"
- title: 6.6 Status Code Extensibility
  contents:
  - "6.6 Status Code Extensibility\n   Operation status codes (see section 3.1.6.1)\
    \ may also be registered\n   following the type2 procedures described in Section\
    \ 6.1.  The values\n   for status codes are allocated in ranges as specified in\
    \ Section 14\n   for each status code class:\n      \"informational\" - Request\
    \ received, continuing process\n      \"successful\" - The action was successfully\
    \ received, understood, and\n         accepted\n      \"redirection\" - Further\
    \ action must be taken in order to complete the\n         request\n      \"client-error\"\
    \ - The request contains bad syntax or cannot be\n         fulfilled\n      \"\
    server-error\" - The IPP object  failed to fulfill an apparently\n         valid\
    \ request\n   For vendor operation status code extensions, implementers MUST use\n\
    \   the top of each range as specified in Section 13.\n   For operation status\
    \ codes, the IPP Designated Expert in consultation\n   with IANA assigns the next\
    \ status code in the appropriate class range\n   as specified in Section 13. \
    \ IANA will publish approved status code\n   registration specifications as separate\
    \ files:\n      ftp.isi.edu/iana/assignments/ipp/status-codes/xxx-yyy.txt\n  \
    \ where \"xxx-yyy\" is the new operation status code keyword.\n"
- title: 6.7 Out-of-band Attribute Value Extensibility
  contents:
  - "6.7 Out-of-band Attribute Value Extensibility\n   Out-of-band attribute values\
    \ (see the beginning of section 4.1)\n   passed in requests and responses may\
    \ be registered following the\n   type2 procedures described in Section 6.1. \
    \ The initial set of out-\n   of-band attribute value tags have been assigned\
    \ in the \"Encoding and\n   Transport\" document [RFC2910].\n   For out-of-band\
    \ attribute value tags, the IPP Designated Expert in\n   consultation with IANA\
    \ assigns the next out-of-band attribute value\n   tag code in the appropriate\
    \ range as specified in [RFC2910].  IANA\n   will publish approved out-of-band\
    \ attribute value tags registration\n   specifications as separate files:\n  \
    \    ftp.isi.edu/iana/assignments/ipp/out-of-band-attribute-value-\n      tags/xxx-yyy-tag.txt\n\
    \   where 'xxx-yyy-tag' is the new out-of-band attribute value tag name.\n"
- title: 6.8 Registration of MIME types/sub-types for document-formats
  contents:
  - "6.8 Registration of MIME types/sub-types for document-formats\n   The \"document-format\"\
    \ attribute's syntax is 'mimeMediaType'.  This\n   means that valid values are\
    \ Internet Media Types (see Section 4.1.9).\n   RFC 2045 [RFC2045] defines the\
    \ syntax for valid Internet media types.\n   IANA is the registry for all Internet\
    \ media types.\n"
- title: 6.9 Registration of charsets for use in 'charset' attribute values
  contents:
  - "6.9 Registration of charsets for use in 'charset' attribute values\n   The \"\
    attributes-charset\" attribute's syntax is 'charset'.  This means\n   that valid\
    \ values are charsets names.  When a charset in the IANA\n   registry has more\
    \ than one name (alias), the name labeled as\n   \"(preferred MIME name)\", if\
    \ present, MUST be used (see Section\n   4.1.7).  IANA is the registry for charsets\
    \ following the procedures\n   of [RFC2278].\n"
- title: 7. Internationalization Considerations
  contents:
  - "7. Internationalization Considerations\n   Some of the attributes have values\
    \ that are text strings and names\n   which are intended for human understanding\
    \ rather than machine\n   understanding (see the 'text' and 'name' attribute syntaxes\
    \ in\n   Sections 4.1.1 and 4.1.2).\n   In each operation request, the client\n\
    \      - identifies the charset and natural language of the request which\n  \
    \      affects each supplied 'text' and 'name' attribute value, and\n      - requests\
    \ the charset and natural language for attributes\n        returned by the IPP\
    \ object in operation responses (as described\n        in Section 3.1.4.1).\n\
    \   In addition, the client MAY separately and individually identify the\n   Natural\
    \ Language Override of a supplied 'text' or 'name' attribute\n   using the 'textWithLanguage'\
    \ and 'nameWithLanguage' technique\n   described section 4.1.1.2 and 4.1.2.2 respectively.\n\
    \   All IPP objects MUST support the UTF-8 [RFC2279] charset in all\n   'text'\
    \ and 'name' attributes supported.  If an IPP object supports\n   more than the\
    \ UTF-8 charset, the object MUST convert between them in\n   order to return the\
    \ requested charset to the client according to\n   Section 3.1.4.2.  If an IPP\
    \ object supports more than one natural\n   language, the object SHOULD return\
    \ 'text' and 'name' values in the\n   natural language requested where those values\
    \ are generated by the\n   Printer (see Section 3.1.4.1).\n   For Printers that\
    \ support multiple charsets and/or multiple natural\n   languages in 'text' and\
    \ 'name' attributes, different jobs may have\n   been submitted in differing charsets\
    \ and/or natural languages.  All\n   responses MUST be returned in the charset\
    \ requested by the client.\n   However, the Get-Jobs operation uses the 'textWithLanguage'\
    \ and\n   'nameWithLanguage' mechanism to identify the differing natural\n   languages\
    \ with each job attribute returned.\n   The Printer object also has configured\
    \ charset and natural language\n   attributes.   The client can query the Printer\
    \ object to determine\n   the list of charsets and natural languages supported\
    \ by the Printer\n   object and what the Printer object's configured values are.\
    \  See the\n   \"charset-configured\", \"charset-supported\", \"natural-language-\n\
    \   configured\", and \"generated-natural-language-supported\" Printer\n   description\
    \ attributes for more details.\n   The \"charset-supported\" attributed identifies\
    \ the supported charsets.\n   If a charset is supported, the IPP object MUST be\
    \ capable of\n   converting to and from that charset into any other supported\
    \ charset.\n   In many cases, an IPP object will support only one charset and\
    \ it\n   MUST be the UTF-8 charset.\n   The \"charset-configured\" attribute identifies\
    \ the one supported\n   charset which is the native charset given the current\
    \ configuration\n   of the IPP object (administrator defined).\n   The \"generated-natural-language-supported\"\
    \ attribute identifies the\n   set of supported natural languages for generated\
    \ messages; it is not\n   related to the set of natural languages that must be\
    \ accepted for\n   client supplied 'text' and 'name' attributes.  For client supplied\n\
    \   'text' and 'name' attributes, an IPP object MUST accept ALL supplied\n   natural\
    \ languages.  Just because a Printer object is currently\n   configured to support\
    \ 'en-us' natural language does not mean that the\n   Printer object should reject\
    \ a job if the client supplies a job name\n   that is in 'fr-ca'.\n   The \"natural-language-configured\"\
    \ attribute identifies the one\n   supported natural language for generated messages\
    \ which is the native\n   natural language given the current configuration of\
    \ the IPP object\n   (administrator defined).\n   Attributes of type 'text' and\
    \ 'name' are populated from different\n   sources.  These attributes can be categorized\
    \ into following groups\n   (depending on the source of the attribute):\n    \
    \  1. Some attributes are supplied by the client (e.g., the client\n         supplied\
    \ \"job-name\", \"document-name\", and \"requesting-user-\n         name\" operation\
    \ attributes along with the corresponding Job\n         object's \"job-name\"\
    \ and \"job-originating-user-name\"\n         attributes).  The IPP object MUST\
    \ accept these attributes in\n         any natural language no matter what the\
    \ set of supported\n         languages for generated messages\n      2. Some attributes\
    \ are supplied by the system administrator (e.g.,\n         the Printer object's\
    \ \"printer-name\" and \"printer-location\"\n         attributes).  These too\
    \ can be in any natural language.  If the\n         natural language for these\
    \ attributes is different than what a\n         client requests, then they must\
    \ be reported using the Natural\n         Language Override mechanism.\n     \
    \ 3. Some attributes are supplied by the device manufacturer (e.g.,\n        \
    \ the Printer object's \"printer-make-and-model\" attribute).\n         These\
    \ too can be in any natural language.  If the natural\n         language for these\
    \ attributes is different than what a client\n         requests, then they must\
    \ be reported using the Natural Language\n         Override mechanism.\n     \
    \ 4. Some attributes are supplied by the operator (e.g., the Job\n         object's\
    \ \"job-message-from-operator\" attribute). These too can\n         be in any\
    \ natural language.  If the natural language for these\n         attributes is\
    \ different than what a client requests, then they\n         must be reported\
    \ using the Natural Language Override mechanism.\n      5. Some attributes are\
    \ generated by the IPP object (e.g., the Job\n         object's \"job-state-message\"\
    \ attribute, the Printer object's\n         \"printer-state-message\" attribute,\
    \ and the \"status-message\"\n         operation attribute).  These attributes\
    \ can only be in one of\n         the \"generated-natural-language-supported\"\
    \ natural languages.\n         If a client requests some natural language for\
    \ these attributes\n         other than one of the supported values, the IPP object\
    \ SHOULD\n         respond using the value of the \"natural-language-configured\"\
    \n         attribute (using the Natural Language Override mechanism if\n     \
    \    needed).\n   The 'text' and 'name' attributes specified in this version of\
    \ this\n   document (additional ones will be registered according to the\n   procedures\
    \ in Section 6) are:\n                    Attributes                         \
    \   Source\n   Operation Attributes:\n        job-name (name)                \
    \         client\n        document-name (name)                    client\n   \
    \     requesting-user-name (name)             client\n        status-message (text)\
    \                   Job or Printer object\n        detailed-status-message (text)\
    \          Job or Printer object -\n                                         \
    \       see rule 1\n        document-access-error (text)            Job or Printer\
    \ object -\n                                                see rule 1\n   Job\
    \ Template Attributes:\n        job-hold-until (keyword | name)         client\
    \ matches\n                                                administrator-configured\n\
    \        job-hold-until-default (keyword | name) client matches\n            \
    \                                    administrator-configured\n        job-hold-until-supported\
    \ (keyword |     client matches\n        name)                               \
    \    administrator-configured\n        job-sheets (keyword | name)           \
    \  client matches\n                                                administrator-configured\n\
    \        job-sheets-default (keyword | name)     client matches\n            \
    \                                    administrator-configured\n        job-sheets-supported\
    \ (keyword | name)   client matches\n                                        \
    \        administrator-configured\n        media (keyword | name)            \
    \      client matches\n                                                administrator-configured\n\
    \        media-default (keyword | name)          client matches\n            \
    \                                    administrator-configured\n        media-supported\
    \ (keyword | name)        client matches\n                                   \
    \             administrator-configured\n        media-ready (keyword | name) \
    \           client matches\n                                                administrator-configured\n\
    \   Job Description Attributes:\n        job-name (name)                     \
    \    client or Printer object\n        job-originating-user-name (name)      \
    \  Printer object\n        job-state-message (text)                Job or Printer\
    \ object\n        output-device-assigned (name(127))      administrator\n    \
    \    job-message-from-operator (text(127))   operator\n        job-detailed-status-messages\
    \ (1setOf    Job or Printer object -\n        text)                          \
    \         see rule 1\n        job-document-access-errors (1setOf      Job or Printer\
    \ object -\n        text)                                   see rule 1\n   Printer\
    \ Description Attributes:\n        printer-name (name(127))                administrator\n\
    \        printer-location (text(127))            administrator\n        printer-info\
    \ (text(127))                administrator\n        printer-make-and-model (text(127))\
    \      administrator or\n                                                manufacturer\n\
    \        printer-state-message (text)            Printer object\n        printer-message-from-operator\
    \           operator\n        (text(127))\n   Rule 1 - Neither the Printer nor\
    \ the client localizes these message\n   attributes, since they are intended for\
    \ use by the system\n   administrator or other experienced technical persons.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   It is difficult to anticipate the security risks\
    \ that might exist in\n   any given IPP environment. For example, if IPP is used\
    \ within a given\n   corporation over a private network, the risks of exposing\
    \ document\n   data may be low enough that the corporation will choose not to\
    \ use\n   encryption on that data.  However, if the connection between the\n \
    \  client and the IPP object is over a public network, the client may\n   wish\
    \ to protect the content of the information during transmission\n   through the\
    \ network with encryption.\n   Furthermore, the value of the information being\
    \ printed may vary from\n   one IPP environment to the next. Printing payroll\
    \ checks, for\n   example, would have a different value than printing public\n\
    \   information from a file.  There is also the possibly of denial-of-\n   service\
    \ attacks, but denial-of-service attacks against printing\n   resources are not\
    \ well understood and there is no published\n   precedents regarding this scenario.\n\
    \   Once the authenticated identity of the requester has been supplied to\n  \
    \ the IPP object, the object uses that identity to enforce any\n   authorization\
    \ policy that might be in place.  For example, one site's\n   policy might be\
    \ that only the job owner is allowed to cancel a job.\n   The details and mechanisms\
    \ to set up a particular access control\n   policy are not part of IPP/1.1, and\
    \ must be established via some\n   other type of administrative or access control\
    \ framework.  However,\n   there are operation status codes that allow an IPP\
    \ server to return\n   information back to a client about any potential access\
    \ control\n   violations for an IPP object.\n   During a create operation, the\
    \ client's identity is recorded in the\n   Job object in an implementation-defined\
    \ attribute.  This information\n   can be used to verify a client's identity for\
    \ subsequent operations\n   on that Job object in order to enforce any access\
    \ control policy that\n   might be in effect.  See section 8.3 below for more\
    \ details.\n   Since the security levels or the specific threats that an IPP system\n\
    \   administrator may be concerned with cannot be anticipated, IPP MUST\n   be\
    \ capable of operating with different security mechanisms and\n   security policies\
    \ as required by the individual installation.\n   Security policies might vary\
    \ from very strong, to very weak, to none\n   at all, and corresponding security\
    \ mechanisms will be required.\n"
- title: 8.1 Security Scenarios
  contents:
  - "8.1 Security Scenarios\n   The following sections describe specific security\
    \ attacks for IPP\n   environments.  Where examples are provided they should be\
    \ considered\n   illustrative of the environment and not an exhaustive set. Not\
    \ all of\n   these environments will necessarily be addressed in initial\n   implementations\
    \ of IPP.\n"
- title: 8.1.1 Client and Server in the Same Security Domain
  contents:
  - "8.1.1 Client and Server in the Same Security Domain\n   This environment is typical\
    \ of internal networks where traditional\n   office workers print the output of\
    \ personal productivity applications\n   on shared work-group printers, or where\
    \ batch applications print\n   their output on large production printers. Although\
    \ the identity of\n   the user may be trusted in this environment, a user might\
    \ want to\n   protect the content of a document against such attacks as\n   eavesdropping,\
    \ replaying or tampering.\n"
- title: 8.1.2 Client and Server in Different Security Domains
  contents:
  - "8.1.2 Client and Server in Different Security Domains\n   Examples of this environment\
    \ include printing a document created by\n   the client on a publicly available\
    \ printer, such as at a commercial\n   print shop; or printing a document remotely\
    \ on a business associate's\n   printer.  This latter operation is functionally\
    \ equivalent to sending\n   the document to the business associate as a facsimile.\
    \ Printing\n   sensitive information on a Printer in a different security domain\n\
    \   requires strong security measures. In this environment authentication\n  \
    \ of the printer is required as well as protection against unauthorized\n   use\
    \ of print resources. Since the document crosses security domains,\n   protection\
    \ against eavesdropping and document tampering are also\n   required. It will\
    \ also be important in this environment to protect\n   Printers against \"spamming\"\
    \ and malicious document content.\n"
- title: 8.1.3 Print by Reference
  contents:
  - "8.1.3 Print by Reference\n   When the document is not stored on the client, printing\
    \ can be done\n   by reference. That is, the print request can contain a reference,\
    \ or\n   pointer, to the document instead of the actual document itself (see\n\
    \   sections 3.2.2 and 3.3.2). Standard methods currently do not exist\n   for\
    \ remote entities to \"assume\" the credentials of a client for\n   forwarding\
    \ requests to a 3rd party. It is anticipated that Print-By-\n   Reference will\
    \ be used to access \"public\" documents and that\n   sophisticated methods for\
    \ authenticating \"proxies\" is not specified\n   in this document.\n"
- title: 8.2 URIs in Operation, Job, and Printer attributes
  contents:
  - "8.2 URIs in Operation, Job, and Printer attributes\n   The \"printer-uri-supported\"\
    \ attribute contains the Printer object's\n   URI(s).  Its companion attribute,\
    \ \"uri-security-supported\",\n   identifies the security mechanism used for each\
    \ URI listed in the\n   \"printer-uri-supported\" attribute.  For each Printer\
    \ operation\n   request, a client MUST supply only one URI in the \"printer-uri\"\
    \n   operation attribute.  In other words, even though the Printer\n   supports\
    \ more than one URI, the client only interacts with the\n   Printer object using\
    \ one if its URIs.  This duality is not needed for\n   Job objects, since the\
    \ Printer objects is the factory for Job\n   objects, and the Printer object will\
    \ generate the correct URI for new\n   Job objects depending on the Printer object's\
    \ security configuration.\n"
- title: 8.3 URIs for each authentication mechanisms
  contents:
  - "8.3 URIs for each authentication mechanisms\n   Each URI has an authentication\
    \ mechanism associated with it. If the\n   URI is the i'th element of \"printer-uri-supported\"\
    , then\n   authentication mechanism is the \"i th\" element of \"uri-\n   authentication-supported\"\
    . For a list of possible authentication\n   mechanisms, see section 4.4.2.\n \
    \  The Printer object uses an authentication mechanism to determine the\n   name\
    \ of the user performing an operation. This user is called the\n   \"authenticated\
    \ user\". The credibility of authentication depends on\n   the mechanism that\
    \ the Printer uses to obtain the user's name. When\n   the authentication mechanism\
    \ is 'none', all authenticated users are\n   \"anonymous\".\n   During job creation\
    \ operations, the Printer initializes the value of\n   the \"job-originating-user-name\"\
    \ attribute (see section 4.3.6) to be\n   the authenticated user. The authenticated\
    \ user is this case is called\n   the \"job owner\".\n   If an implementation\
    \ can be configured to support more than one\n   authentication mechanism (see\
    \ section 4.4.2), then it MUST implement\n   rules for determining equality of\
    \ authenticated user names which have\n   been authenticated via different authentication\
    \ mechanisms.  One\n   possible policy is that identical names that are authenticated\
    \ via\n   different mechanisms are different.  For example, a user can cancel\n\
    \   his job only if he uses the same authentication mechanism for both\n   Cancel-Job\
    \ and Print-Job.  Another policy is that identical names\n   that are authenticated\
    \ via different mechanism are the same if the\n   authentication mechanism for\
    \ the later operation is not less strong\n   than the authentication mechanism\
    \ for the earlier job creation\n   operation.  For example, a user can cancel\
    \ his job only if he uses\n   the same or stronger authentication mechanism for\
    \ Cancel-Job and\n   Print-Job. With this second policy a job submitted via 'requesting-\n\
    \   user-name' authentication could be canceled via 'digest'\n   authentication.\
    \ With the first policy, the job could not be canceled\n   in this way.\n   A\
    \ client is able to determine the authentication mechanism used to\n   create\
    \ a job. It is the i'th value of the Printer's \"uri-\n   authentication-supported\"\
    \ attribute (see section 4.4.2), where i is\n   the index of the element of the\
    \ Printer's \"printer-uri-supported\"\n   attribute (see section 4.4.1) equal\
    \ to the job's \"job-printer-uri\"\n   attribute (see section 4.3.3).\n"
- title: 8.4 Restricted Queries
  contents:
  - "8.4 Restricted Queries\n   In many IPP operations, a client supplies a list of\
    \ attributes to be\n   returned in the response.  For security reasons, an IPP\
    \ object may be\n   configured not to return all attributes (or all values) that\
    \ a client\n   requests.  The job attributes returned MAY depend on whether the\n\
    \   requesting user is the same as the user that submitted the job. The\n   IPP\
    \ object MAY even return none of the requested attributes. In such\n   cases,\
    \ the status returned is the same as if the object had returned\n   all requested\
    \ attributes.  The client cannot tell by such a response\n   whether the requested\
    \ attribute was present or absent on the object.\n"
- title: 8.5 Operations performed by operators and system administrators
  contents:
  - "8.5 Operations performed by operators and system administrators\n   For the three\
    \ printer operations Pause-Printer, Resume-Printer, and\n   Purge-Jobs (see sections\
    \ 3.2.7, 3.2.8 and 3.2.9), the requesting user\n   is intended to be an operator\
    \ or administrator of the Printer object\n   (see section 1).  Otherwise, the\
    \ IPP Printer MUST reject the\n   operation and return:  'client-error-forbidden',\
    \ 'client-error-not-\n   authenticated', or 'client-error-not-authorized' as appropriate.\
    \  For\n   operations on jobs, the requesting user is intended to be the job\n\
    \   owner or may be an operator or administrator of the Printer object.\n   The\
    \ means for authorizing an operator or administrator of the Printer\n   object\
    \ are not specified in this document.\n"
- title: 8.6 Queries on jobs submitted using non-IPP protocols
  contents:
  - "8.6 Queries on jobs submitted using non-IPP protocols\n   If the device that\
    \ an IPP Printer is representing is able to accept\n   jobs using other job submission\
    \ protocols in addition to IPP, it is\n   RECOMMENDED that such an implementation\
    \ at least allow such \"foreign\"\n   jobs to be queried using Get-Jobs returning\
    \ \"job-id\" and \"job-uri\" as\n   'unknown'.  Such an implementation NEED NOT\
    \ support all of the same\n   IPP job attributes as for IPP jobs.  The IPP object\
    \ returns the\n   'unknown' out-of-band value for any requested attribute of a\
    \ foreign\n   job that is supported for IPP jobs, but not for foreign jobs.\n\
    \   It is further RECOMMENDED, that the IPP Printer generate \"job-id\" and\n\
    \   \"job-uri\" values for such \"foreign jobs\", if possible, so that they\n\
    \   may be targets of other IPP operations, such as Get-Job-Attributes\n   and\
    \ Cancel-Job.  Such an implementation also needs to deal with the\n   problem\
    \ of authentication of such foreign jobs.  One approach would\n   be to treat\
    \ all such foreign jobs as belonging to users other than\n   the user of the IPP\
    \ client.  Another approach would be for the\n   foreign job to belong to 'anonymous'.\
    \  Only if the IPP client has\n   been authenticated as an operator or administrator\
    \ of the IPP Printer\n   object, could the foreign jobs be queried by an IPP request.\n\
    \   Alternatively, if the security policy is to allow users to query\n   other\
    \ users' jobs, then the foreign jobs would also be visible to an\n   end-user\
    \ IPP client using Get-Jobs and Get-Job-Attributes.\n"
- title: 9. References
  contents:
  - "9. References\n   [ASME-Y14.1M] Metric Drawing Sheet Size and Format, ASME Y14.1M-1995.\n\
    \                 This standard defines metric sheet sizes and formats\n     \
    \            for engineering drawings.\n   [ASCII]       Coded Character Set -\
    \ 7-bit American Standard Code for\n                 Information Interchange (ASCII),\
    \ ANSI X3.4-1986. This\n                 standard is the specification of the\
    \ US-ASCII charset.\n   [BCP-11]      Bradner S. and R. Hovey, \"The Organizations\
    \ Involved in\n                 the IETF Standards Process\", BCP 11, RFC 2028,\
    \ October\n                 1996.\n   [HTPP]        J. Barnett, K. Carter, R.\
    \ DeBry,  \"Initial Draft -\n                 Hypertext Printing Protocol - HTPP/1.0\"\
    , October 1996,\n              ftp://ftp.pwg.org/pub/pwg/ipp/historic/htpp/overview.ps.gz\n\
    \   [IANA-CON]    Narten, T. and H. Alvestrand, \"Guidelines for Writing\n   \
    \              an IANA Considerations Section in RFCs\", BCP 26, RFC\n       \
    \          2434, October 1998.\n   [IANA-CS]     IANA Registry of Coded Character\
    \ Sets:\n                 ftp://ftp.isi.edu/in-notes/iana/assignments/character-\n\
    \                 sets\n   [IANA-MT]     IANA Registry of Media Types:  ftp://ftp.isi.edu/in-\n\
    \                 notes/iana/assignments/media-types/\n   [IPP-IIG]     Hastings,\
    \ T., Manros, C., Kugler, C., Holst, H., and P.\n                 Zehler, \"Internet\
    \ Printing Protocol/1.1:  draft-ietf-\n                 ipp-implementers-guide-v11-01.txt,\
    \ work in progress,\n                 May 30, 2000.\n   [ISO10646-1]  ISO/IEC\
    \ 10646-1:1993, \"Information technology --\n                 Universal Multiple-Octet\
    \ Coded Character Set (UCS) -\n                 Part 1: Architecture and Basic\
    \ Multilingual Plane,\n                 JTC1/SC2.\"\n   [ISO8859-1]   ISO/IEC\
    \ 8859-1:1987, \"Information technology -- 8-bit\n                 One-Byte Coded\
    \ Character Set - Part 1: Latin Alphabet\n                 Nr 1\", 1987, JTC1/SC2.\n\
    \   [ISO10175]    ISO/IEC 10175 Document Printing Application (DPA), June\n  \
    \               1996.\n   [LDPA]        T. Hastings,  S. Isaacson,  M. MacKay,\
    \ C. Manros, D.\n                 Taylor, P. Zehler,  \"LDPA - Lightweight Document\n\
    \                 Printing Application\", October 1996,\n              ftp://ftp.pwg.org/pub/pwg/ipp/historic/ldpa/ldpa8.pdf.gz\n\
    \   [P1387.4]     Kirk, M. (editor), POSIX System Administration - Part\n    \
    \             4:  Printing Interfaces, POSIX 1387.4 D8, 1994.\n   [PSIS]     \
    \   Herriot, R. (editor), X/Open A Printing System\n                 Interoperability\
    \ Specification (PSIS), August 1995.\n   [PWG]         Printer Working Group,\
    \ http://www.pwg.org.\n   [RFC1035]     Mockapetris, P., \"Domain Names - Implementation\
    \ and\n                 Specification\", STD 13, RFC 1035, November 1987.\n  \
    \ [RFC1179]     McLaughlin, L., \"Line Printer Daemon Protocol\", RFC\n      \
    \           1179, August 1990.\n   [RFC1759]     Smith, R., Wright, F., Hastings,\
    \ T., Zilles, S. and J.\n                 Gyllenskog, \"Printer MIB\", RFC 1759,\
    \ March 1995.\n   [RFC1766]     Alvestrand, H., \"Tags for the Identification\
    \ of\n                 Languages\", RFC 1766, March 1995.\n   [RFC1951]     Deutsch,\
    \ P., \"DEFLATE Compressed Data Format\n                 Specification version\
    \ 1.3 \", RFC 1951, May 1996.\n   [RFC1952]     Deutsch, P., \"GZIP file format\
    \ specification version\n                 4.3\", RFC 1952, May 1996.\n   [RFC1977]\
    \     Schryver, V., \"PPP BSD Compression Protocol\", RFC 1977,\n            \
    \     August 1996.\n   [RFC2026]     Bradner, S., \"The Internet Standards Process\
    \ --\n                 Revision 3\", BCP 9, RFC 2026, October 1996.\n   [RFC2045]\
    \     Freed, N. and  N. Borenstein, \", Multipurpose Internet\n              \
    \   Mail Extensions (MIME) Part One: Format of Internet\n                 Message\
    \ Bodies\", RFC 2045, November 1996.\n   [RFC2046]     Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet\n                 Mail Extensions (MIME) Part Two: Media\
    \ Types\", RFC\n                 2046, November 1996.\n   [RFC2048]     Freed,\
    \ N., Klensin, J. and J. Postel, \"Multipurpose\n                 Internet Mail\
    \ Extension (MIME) Part Four: Registration\n                 Procedures\", RFC\
    \ 2048, November 1996.\n   [RFC2119]     Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2228]     Horowitz, M. and S. Lunt, \"FTP Security Extensions\"\
    ,\n                 RFC 2228, October 1997.\n   [RFC2246]     Dierks, T. and C.\
    \ Allen, \"The TLS Protocol Version\n                 1.0\", RFC 2246, January\
    \ 1999.\n   [RFC2277]     Alvestrand, H., \"IETF Policy on Character Sets and\n\
    \                 Languages\" BCP 18, RFC 2277, January 1998.\n   [RFC2278]  \
    \   Freed, N. and J. Postel: \"IANA CharSet Registration\n                 Procedures\"\
    , BCP 19, RFC 2278, January 1998.\n   [RFC2279]     Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO\n                 10646\", RFC 2279, January 1998.\n   [RFC2316]\
    \     Bellovin, S., \"Report of the IAB Security Architecture\n              \
    \   Workshop\", RFC 2316, April 1998.\n   [RFC2396]     Berners-Lee, T., Fielding,\
    \ R. and L. Masinter, \"Uniform\n                 Resource Identifiers (URI):\
    \ Generic Syntax\", RFC 2396,\n                 August 1998.\n   [RFC2565]   \
    \  Herriot, R., Butler, S., Moore, P. and R. Turner,\n                 \"Internet\
    \ Printing Protocol/1.0: Encoding and\n                 Transport\", RFC 2565,\
    \ April 1999.\n   [RFC2566]     deBry, R., Hastings, T., Herriot, R., Isaacson,\
    \ S. and\n                 P. Powell, \"Internet Printing Protocol/1.0: Model\
    \ and\n                 Semantics\", RFC 2566, April 1999.\n   [RFC2567]     Wright,\
    \ D., \"Design Goals for an Internet Printing\n                 Protocol\", RFC\
    \ 2567, April 1999.\n   [RFC2568]     Zilles, S., \"Rationale for the Structure\
    \ and Model and\n                 Protocol for the Internet Printing Protocol\"\
    , RFC 2568,\n                 April 1999.\n   [RFC2569]     Herriot, R., Hastings,\
    \ T., Jacobs, N. and J. Martin,\n                 \"Mapping between LPD and IPP\
    \ Protocols\", RFC 2569,\n                 April 1999.\n   [RFC2579]     McCloghrie,\
    \ K., Perkins, D. and J. Schoenwaelder,\n                 \"Textual Conventions\
    \ for SMIv2\", STD 58, RFC 2579,\n                 April 1999.\n   [RFC2616] \
    \    Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n                 Masinter,\
    \ L., Leach, P. and T. Berners-Lee, \"Hypertext\n                 Transfer Protocol\
    \ - HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2617]     Franks, J., Hallam-Baker,\
    \ P., Hostetler, J., Lawrence,\n                 S., Leach, P., Luotonen, A. and\
    \ L. Stewart, \"HTTP\n                 Authentication:  Basic and Digest Access\n\
    \                 Authentication\", RFC 2617, June 1999.\n   [RFC2639]     Hastings,\
    \ T. and C. Manros, \"Internet Printing\n                 Protocol/1.0: Encoding\
    \ and Transport\", RFC 2639, July\n                 1999.\n   [RFC2910]     Herriot,\
    \ R., Butler, S., Moore, P., Turner, R. and J.\n                 Wenn, \"Internet\
    \ Printing Protocol/1.1: Encoding and\n                 Transport\", RFC 2910,\
    \ September 2000.\n   [SSL]         Netscape, The SSL Protocol, Version 3, (Text\
    \ version\n                 3.02), November 1996.\n   [SWP]         P. Moore,\
    \ B. Jahromi, S. Butler, \"Simple Web Printing\n                 SWP/1.0\", May\
    \ 7, 1997,\n                 ftp://ftp.pwg.org/pub/pwg/ipp/new_PRO/swp9705.pdf\n"
- title: 10. Authors' Addresses
  contents:
  - "10. Authors' Addresses\n   Scott A. Isaacson, Editor\n   Novell, Inc.\n   122\
    \ E 1700 S\n   Provo, UT   84606\n   Phone: 801-861-7366\n   Fax:   801-861-2517\n\
    \   EMail: sisaacson@novell.com\n   Tom Hastings\n   Xerox Corporation\n   737\
    \ Hawaii St.  ESAE 231\n   El Segundo, CA   90245\n   Phone: 310-333-6413\n  \
    \ Fax:   310-333-5514\n   EMail: hastings@cp10.es.xerox.com\n   Robert Herriot\n\
    \   Xerox Corp.\n   3400 Hill View Ave, Building 1\n   Palo Alto, CA 94304\n \
    \  Phone: 650-813-7696\n   Fax:  650-813-6860\n   EMail: robert.herriot@pahv.xerox.com\n\
    \   Roger deBry\n   Utah Valley State College\n   Orem, UT 84058\n   Phone: (801)\
    \ 222-8000\n   EMail: debryro@uvsc.edu\n   Patrick Powell\n   Astart Technologies\n\
    \   9475 Chesapeake Dr., Suite D\n   San Diego, CA  95123\n   Phone: (619) 874-6543\n\
    \   Fax:   (619) 279-8424\n   EMail: papowell@astart.com\n   IPP Web Page:  http://www.pwg.org/ipp/\n\
    \   IPP Mailing List:  ipp@pwg.org\n   To subscribe to the ipp mailing list, send\
    \ the following email:\n      1) send it to majordomo@pwg.org\n      2) leave\
    \ the subject line blank\n      3) put the following two lines in the message\
    \ body:\n            subscribe ipp\n            end\n   Implementers of this specification\
    \ document are encouraged to join\n   IPP Mailing List in order to participate\
    \ in any discussions of\n   clarification issues and review of registration proposals\
    \ for\n   additional attributes and values.\n   Other Participants:\n   Chuck\
    \ Adams - Tektronix             Shivaun Albright - HP\n   Stefan Andersson - Axis\
    \             Jeff Barnett - IBM\n   Ron Bergman - Hitachi Koki Imaging  Dennis\
    \ Carney - IBM\n   Systems\n   Keith Carter - IBM                  Angelo Caruso\
    \ - Xerox\n   Rajesh Chawla - TR Computing        Nancy Chen - Okidata\n   Solutions\n\
    \   Josh Cohen - Microsoft              Jeff Copeland - QMS\n   Andy Davidson\
    \ - Tektronix           Roger deBry - IBM\n   Maulik Desai - Auco            \
    \     Mabry Dozier - QMS\n   Lee Farrell - Canon Information     Satoshi Fujitami\
    \ - Ricoh\n   Systems\n   Steve Gebert - IBM                  Sue Gleeson - Digital\n\
    \   Charles Gordon - Osicom             Brian Grimshaw - Apple\n   Jerry Hadsell\
    \ - IBM                 Richard Hart - Digital\n   Tom Hastings - Xerox      \
    \          Henrik Holst - I-data\n   Stephen Holmstead                   Zhi-Hong\
    \ Huang - Zenographics\n   Scott Isaacson - Novell             Babek Jahromi -\
    \ Microsoft\n   Swen Johnson - Xerox                David Kellerman - Northlake\n\
    \                                       Software\n   Robert Kline - TrueSpectra\
    \          Charles Kong - Panasonic\n   Carl Kugler - IBM                   Dave\
    \ Kuntz - Hewlett-Packard\n   Takami Kurono - Brother             Rick Landau\
    \ - Digital\n   Scott Lawrence - Agranot Systems    Greg LeClair - Epson\n   Dwight\
    \ Lewis - Lexmark              Harry Lewis - IBM\n   Tony Liao - Vivid Image \
    \            Roy Lomicka - Digital\n   Pete Loya - HP                      Ray\
    \ Lutz - Cognisys\n   Mike MacKay - Novell, Inc.          David Manchala - Xerox\n\
    \   Carl-Uno Manros - Xerox             Jay Martin - Underscore\n   Stan McConnell\
    \ - Xerox              Larry Masinter - Xerox\n   Sandra Matts - Hewlett Packard\
    \      Peter Michalek - Shinesoft\n   Ira McDonald - High North Inc.      Mike\
    \ Moldovan - G3 Nova\n   Tetsuya Morita - Ricoh              Yuichi Niwa - Ricoh\n\
    \   Pat Nogay - IBM                     Ron Norton - Printronics\n   Hugo Parra,\
    \ Novell                  Bob Pentecost - Hewlett-Packard\n   Patrick Powell -\
    \ Astart             Jeff Rackowitz - Intermec\n   Technologies\n   Eric Random\
    \ - Peerless              Rob Rhoads - Intel\n   Xavier Riley - Xerox        \
    \        Gary Roberts - Ricoh\n   David Roach - Unisys                Stuart Rowley\
    \ - Kyocera\n   Yuji Sasaki - Japan Computer        Richard Schneider - Epson\n\
    \   Industry\n   Kris Schoff - HP                    Katsuaki Sekiguchi - Canon\n\
    \   Bob Setterbo - Adobe                Gail Songer - Peerless\n   Hideki Tanaka\
    \ - Cannon              Devon Taylor - Novell\n   Mike Timperman - Lexmark   \
    \         Atsushi Uchino - Epson\n   Shigeru Ueda - Canon                Bob Von\
    \ Andel - Allegro Software\n   William Wagner - NetSilicon/DPI     Jim Walker\
    \ - DAZEL\n   Chris Wellens - Interworking Labs   Trevor Wells - Hewlett Packard\n\
    \   Craig Whittle - Sharp Labs          Rob Whittle - Novell, Inc.\n   Jasper\
    \ Wong - Xionics               Don Wright - Lexmark\n   Michael Wu - Heidelberg\
    \ Digital     Rick Yardumian - Xerox\n   Michael Yeung - Toshiba             Lloyd\
    \ Young - Lexmark\n   Atsushi Yuki - Kyocera              Peter Zehler - Xerox\n\
    \   William Zhang- Canon Information    Frank Zhao - Panasonic\n   Systems\n \
    \  Steve Zilles - Adobe                Rob Zirnstein - Canon Information\n   \
    \                                    Systems\n"
- title: 11. Formats for IPP Registration Proposals
  contents:
  - "11. Formats for IPP Registration Proposals\n   In order to propose an IPP extension\
    \ for registration, the proposer\n   must submit an application to IANA by email\
    \ to \"iana@iana.org\" or by\n   filling out the appropriate form on the IANA\
    \ web pages\n   (http://www.iana.org).  This section specifies the required\n\
    \   information and the formats for proposing registrations of extensions\n  \
    \ to IPP as provided in Section 6 for:\n      1. type2 'keyword' attribute values\n\
    \      2. type3 'keyword' attribute values\n      3. type2 'enum' attribute values\n\
    \      4. type3 'enum' attribute values\n      5. attributes\n      6. attribute\
    \ syntaxes\n      7. operations\n      8. status codes\n      9. out-of-band attribute\
    \ values\n"
- title: 11.1 Type2 keyword attribute values registration,
  contents:
  - "11.1 Type2 keyword attribute values registration,\n   Type of registration: \
    \ type2 keyword attribute value\n   Name of attribute to which this keyword specification\
    \ is to be added:\n   Proposed keyword name of this keyword value:\n   Specification\
    \ of this keyword value (follow the style of IPP Model\n   Section 4.1.2.3):\n\
    \   Name of proposer:\n   Address of proposer:\n   Email address of proposer:\n\
    \   Note:  For type2 keywords, the Designated Expert will be the point of\n  \
    \ contact for the approved registration specification, if any\n   maintenance\
    \ of the registration specification is needed.\n"
- title: 11.2 Type3 keyword attribute values registration
  contents:
  - "11.2 Type3 keyword attribute values registration\n   Type of registration:  type3\
    \ keyword attribute value\n   Name of attribute to which this keyword specification\
    \ is to be added:\n   Proposed keyword name of this keyword value:\n   Specification\
    \ of this keyword value (follow the style of IPP Model\n   Section 4.1.2.3):\n\
    \   Name of proposer:\n   Address of proposer:\n   Email address of proposer:\n\
    \   Note:  For type3 keywords, the proposer will be the point of contact\n   for\
    \ the approved registration specification, if any maintenance of\n   the registration\
    \ specification is needed.\n"
- title: 11.3 Type2 enum attribute values registration
  contents:
  - "11.3 Type2 enum attribute values registration\n   Type of registration:  type2\
    \ enum attribute value\n   Name of attribute to which this enum specification\
    \ is to be added:\n   Keyword symbolic name of this enum value:\n   Numeric value\
    \ (to be assigned by the IPP Designated Expert in\n   consultation with IANA):\n\
    \   Specification of this enum value (follow the style of IPP Model\n   Section\
    \ 4.1.4):\n   Name of proposer:\n   Address of proposer:\n   Email address of\
    \ proposer:\n   Note:  For type2 enums, the Designated Expert will be the point\
    \ of\n   contact for the approved registration specification, if any\n   maintenance\
    \ of the registration specification is needed.\n"
- title: 11.4 Type3 enum attribute values registration
  contents:
  - "11.4 Type3 enum attribute values registration\n   Type of registration:  type3\
    \ enum attribute value\n   Name of attribute to which this enum specification\
    \ is to be added:\n   Keyword symbolic name of this enum value:\n   Numeric value\
    \ (to be assigned by the IPP Designated Expert in\n   consultation with IANA):\n\
    \   Specification of this enum value (follow the style of IPP Model\n   Section\
    \ 4.1.4):\n   Name of proposer:\n   Address of proposer:\n   Email address of\
    \ proposer:\n   Note:  For type3 enums, the proposer will be the point of contact\
    \ for\n   the approved registration specification, if any maintenance of the\n\
    \   registration specification is needed.\n"
- title: 11.5 Attribute registration
  contents:
  - "11.5 Attribute registration\n   Type of registration:  attribute\n   Proposed\
    \ keyword name of this attribute:\n   Types of attribute (Operation, Job Template,\
    \ Job Description, Printer\n   Description):\n   Operations to be used with if\
    \ the attribute is an operation attribute:\n   Object (Job, Printer, etc. if bound\
    \ to an object):\n   Attribute syntax(es) (include 1setOf and range as in Section\
    \ 4.2):\n   If attribute syntax is 'keyword' or 'enum', is it type2 or type3:\n\
    \   If this is a Printer attribute, MAY the value returned depend on\n   \"document-format\"\
    \ (See Section 6.2):\n   If this is a Job Template attribute, how does its specification\
    \ depend\n   on the value of the \"multiple-document-handling\" attribute:\n \
    \  Specification of this attribute (follow the style of IPP Model Section\n  \
    \ 4.2):\n   Name of proposer:\n   Address of proposer:\n   Email address of proposer:\n\
    \   Note:  For attributes, the IPP Designated Expert will be the point of\n  \
    \ contact for the approved registration specification, if any\n   maintenance\
    \ of the registration specification is needed.\n"
- title: 11.6 Attribute Syntax registration
  contents:
  - "11.6 Attribute Syntax registration\n   Type of registration:  attribute syntax\n\
    \   Proposed name of this attribute syntax:\n   Type of attribute syntax (integer,\
    \ octetString, character-string,  see\n   [RFC2910]):\n   Numeric tag according\
    \ to [RFC2910] (to be assigned by the IPP\n   Designated Expert in consultation\
    \ with IANA):\n   Specification of this attribute (follow the style of IPP Model\
    \ Section\n   4.1):\n   Name of proposer:\n   Address of proposer:\n   Email address\
    \ of proposer:\n   Note:  For attribute syntaxes, the IPP Designated Expert will\
    \ be the\n   point of contact for the approved registration specification, if\
    \ any\n   maintenance of the registration specification is needed.\n"
- title: 11.7 Operation registration
  contents:
  - "11.7 Operation registration\n   Type of registration:  operation\n   Proposed\
    \ name of this operation:\n   Numeric operation-id value according to section\
    \ 4.4.15 (to be assigned\n   by the IPP Designated Expert in consultation with\
    \ IANA):\n   Object Target (Job, Printer, etc. that operation is upon):\n   Specification\
    \ of this operation (follow the style of IPP Model Section\n   3):\n   Name of\
    \ proposer:\n   Address of proposer:\n   Email address of proposer:\n   Note:\
    \  For operations, the IPP Designated Expert will be the point of\n   contact\
    \ for the approved registration specification, if any\n   maintenance of the registration\
    \ specification is needed.\n"
- title: 11.8 Attribute Group registration
  contents:
  - "11.8 Attribute Group registration\n   Type of registration:  attribute group\n\
    \   Proposed name of this attribute group:\n   Numeric tag according to [RFC2910]\
    \ (to be assigned by the IPP\n   Designated Expert in consultation with IANA):\n\
    \   Operation requests and group number for each operation in which the\n   attribute\
    \ group occurs:\n   Operation responses and group number for each operation in\
    \ which the\n   attribute group occurs:\n   Specification of this attribute group\
    \ (follow the style of IPP Model\n   Section 3):\n   Name of proposer:\n   Address\
    \ of proposer:\n   Email address of proposer:\n   Note:  For attribute groups,\
    \ the IPP Designated Expert will be the\n   point of contact for the approved\
    \ registration specification, if any\n   maintenance of the registration specification\
    \ is needed.\n"
- title: 11.9 Status code registration
  contents:
  - "11.9 Status code registration\n   Type of registration:  status code\n   Keyword\
    \ symbolic name of this status code value:\n   Numeric value (to be assigned by\
    \ the IPP Designated Expert in\n   consultation with IANA):\n   Operations that\
    \ this status code may be used with:\n   Specification of this status code (follow\
    \ the style of IPP Model\n   Section 13 APPENDIX B:  Status Codes and Suggested\
    \ Status Code\n   Messages):\n   Name of proposer:\n   Address of proposer:\n\
    \   Email address of proposer:\n   Note:  For status codes, the Designated Expert\
    \ will be the point of\n   contact for the approved registration specification,\
    \ if any\n   maintenance of the registration specification is needed.\n"
- title: 11.10 Out-of-band Attribute Value registration
  contents:
  - "11.10 Out-of-band Attribute Value registration\n   Type of registration:  out-of-band\
    \ attribute value\n   Proposed name of this out-of-band attribute value:\n   Numeric\
    \ tag according to [RFC2910] (to be assigned by the IPP Designated\n   Expert\
    \ in consultation with IANA):\n   Operations that this out-of-band attribute value\
    \ may be used with:\n   Attributes that this out-of-band attribute value may be\
    \ used with:\n   Specification of this out-of-band attribute value (follow the\
    \ style of\n   the beginning of IPP Model Section 4.1):\n   Name of proposer:\n\
    \   Address of proposer:\n   Email address of proposer:\n   Note:  For out-of-band\
    \ attribute values, the IPP Designated Expert\n   will be the point of contact\
    \ for the approved registration\n   specification, if any maintenance of the registration\
    \ specification\n   is needed.\n"
- title: '12. APPENDIX A: Terminology'
  contents:
  - "12. APPENDIX A: Terminology\n   This specification document uses the terminology\
    \ defined in this\n   section.\n"
- title: 12.1 Conformance Terminology
  contents:
  - "12.1 Conformance Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\", \"MAY\", and  \"OPTIONAL\"\
    \ in this document are to be\n   interpreted as described in RFC 2119 [RFC2119].\n"
- title: 12.1.1 NEED NOT
  contents:
  - "12.1.1 NEED NOT\n   This term is not included in RFC 2119.  The verb \"NEED NOT\"\
    \ indicates\n   an action that the subject of the sentence does not have to implement\n\
    \   in order to claim conformance to the standard.  The verb \"NEED NOT\"\n  \
    \ is used instead of \"MAY NOT\" since \"MAY NOT\" sounds like a\n   prohibition.\n"
- title: 12.2 Model Terminology
  contents:
  - '12.2 Model Terminology

    '
- title: 12.2.1 Keyword
  contents:
  - "12.2.1 Keyword\n   Keywords are used within this document as identifiers of semantic\n\
    \   entities within the abstract model (see section 4.1.2.3).  Attribute\n   names,\
    \ some attribute values, attribute syntaxes, and attribute group\n   names are\
    \ represented as keywords.\n"
- title: 12.2.2 Attributes
  contents:
  - "12.2.2 Attributes\n   An attribute is an item of information that is associated\
    \ with an\n   instance of an IPP object.  An attribute consists of an attribute\n\
    \   name and one or more attribute values.  Each attribute has a specific\n  \
    \ attribute syntax.  All object attributes are defined in section 4 and\n   all\
    \ operation attributes are defined in section 3.\n   Job Template Attributes are\
    \ described in section 4.2. The client\n   optionally supplies Job Template attributes\
    \ in a create request\n   (operation requests that create Job objects).  The Printer\
    \ object has\n   associated attributes which define supported and default values\
    \ for\n   the Printer.\n"
- title: 12.2.2.1 Attribute Name
  contents:
  - "12.2.2.1 Attribute Name\n   Each attribute is uniquely identified in this document\
    \ by its\n   attribute name.  An attribute name is a keyword.  The keyword\n \
    \  attribute name is given in the section header describing that\n   attribute.\
    \  In running text in this document, attribute names are\n   indicated inside\
    \ double quotation marks (\") where the quotation marks\n   are not part of the\
    \ keyword itself.\n"
- title: 12.2.2.2 Attribute Group Name
  contents:
  - "12.2.2.2 Attribute Group Name\n   Related attributes are grouped into named groups.\
    \  The name of the\n   group is a keyword.  The group name may be used in place\
    \ of naming\n   all the attributes in the group explicitly.  Attribute groups\
    \ are\n   defined in section 3.\n"
- title: 12.2.2.3 Attribute Value
  contents:
  - "12.2.2.3 Attribute Value\n   Each attribute has one or more values.  Attribute\
    \ values are\n   represented in the syntax type specified for that attribute.\
    \ In\n   running text in this document, attribute values are indicated inside\n\
    \   single quotation marks ('), whether their attribute syntax is\n   keyword,\
    \ integer, text, etc.  where the quotation marks are not part\n   of the value\
    \ itself.\n"
- title: 12.2.2.4 Attribute Syntax
  contents:
  - "12.2.2.4 Attribute Syntax\n   Each attribute is defined using an explicit syntax\
    \ type.  In this\n   document, each syntax type is defined as a keyword with specific\n\
    \   meaning.  The \"Encoding and Transport\" document [RFC2910] indicates\n  \
    \ the actual \"on-the-wire\" encoding rules for each syntax type.\n   Attribute\
    \ syntax types are defined in section 4.1.\n"
- title: 12.2.3 Supports
  contents:
  - "12.2.3 Supports\n   By definition, a Printer object supports an attribute only\
    \ if that\n   Printer object responds with the corresponding attribute populated\n\
    \   with some value(s) in a response to a query for that attribute.  A\n   Printer\
    \ object supports an attribute value if the value is one of the\n   Printer object's\
    \ \"supported values\" attributes.  The device behind a\n   Printer object may\
    \ exhibit a behavior that corresponds to some IPP\n   attribute, but if the Printer\
    \ object, when queried for that\n   attribute, doesn't respond with the attribute,\
    \ then as far as IPP is\n   concerned, that implementation does not support that\
    \ feature. If the\n   Printer object's \"xxx-supported\" attribute is not populated\
    \ with a\n   particular value (even if that value is a legal value for that\n\
    \   attribute), then that Printer object does not support that particular\n  \
    \ value.\n   A conforming implementation MUST support all REQUIRED attributes.\n\
    \   However, even for REQUIRED attributes, conformance to IPP does not\n   mandate\
    \ that all implementations support all possible values\n   representing all possible\
    \ job processing behaviors and features.  For\n   example, if a given instance\
    \ of a Printer supports only certain\n   document formats, then that Printer responds\
    \ with the \"document-\n   format-supported\" attribute populated with a set of\
    \ values, possibly\n   only one, taken from the entire set of possible values\
    \ defined for\n   that attribute. This limited set of values represents the Printer's\n\
    \   set of supported document formats.  Supporting an attribute and some\n   set\
    \ of values for that attribute enables IPP end users to be aware of\n   and make\
    \ use of those features associated with that attribute and\n   those values. \
    \ If an implementation chooses to not support an\n   attribute or some specific\
    \ value, then IPP end users would have no\n   ability to make use of that feature\
    \ within the context of IPP itself.\n   However, due to existing practice and\
    \ legacy systems which are not\n   IPP aware, there might be some other mechanism\
    \ outside the scope of\n   IPP to control or request the \"unsupported\" feature\
    \ (such as embedded\n   instructions within the document data itself).\n   For\
    \ example, consider the \"finishings-supported\" attribute.\n      1) If a Printer\
    \ object is not physically capable of stapling, the\n         \"finishings-supported\"\
    \ attribute MUST NOT be populated with the\n         value of 'staple'.\n    \
    \  2) A Printer object is physically capable of stapling, however an\n       \
    \  implementation chooses not to support stapling in the IPP\n         \"finishings\"\
    \ attribute.  In this case, 'staple' MUST NOT be a\n         value in the \"finishings-supported\"\
    \ Printer object attribute.\n         Without support for the value 'staple',\
    \ an IPP end user would\n         have no means within the protocol itself to\
    \ request that a Job\n         be stapled.  However, an existing document data\
    \ formatter might\n         be able to request that the document be stapled directly\
    \ with\n         an embedded instruction within the document data.  In this\n\
    \         case, the IPP implementation does not \"support\" stapling,\n      \
    \   however the end user is still able to have some control over\n         the\
    \ stapling of the completed job.\n      3) A Printer object is physically capable\
    \ of stapling, and an\n         implementation chooses to support stapling in\
    \ the IPP\n         \"finishings\" attribute. In this case, 'staple' MUST be a\
    \ value\n         in the \"finishings-supported\" Printer object attribute. Doing\n\
    \         so, would enable end users to be aware of and make use of the\n    \
    \     stapling feature using IPP attributes.\n   Even though support for Job Template\
    \ attributes by a Printer object\n   is OPTIONAL, it is RECOMMENDED that if the\
    \ device behind a Printer\n   object is capable of realizing any feature or function\
    \ that\n   corresponds to an IPP attribute and some associated value, then that\n\
    \   implementation SHOULD support that IPP attribute and value.\n   The set of\
    \ values in any of the supported value attributes is set\n   (populated) by some\
    \ administrative process or automatic sensing\n   mechanism that is outside the\
    \ scope of this IPP/1.1 document.  For\n   administrative policy and control reasons,\
    \ an administrator may\n   choose to make only a subset of possible values visible\
    \ to the end\n   user.  In this case, the real output device behind the IPP Printer\n\
    \   abstraction may be capable of a certain feature, however an\n   administrator\
    \ is specifying that access to that feature not be\n   exposed to the end user\
    \ through the IPP protocol.  Also, since a\n   Printer object may represent a\
    \ logical print device (not just a\n   physical device) the actual process for\
    \ supporting a value is\n   undefined and left up to the implementation.  However,\
    \ if a Printer\n   object supports a value, some manual human action may be needed\
    \ to\n   realize the semantic action associated with the value, but no end\n \
    \  user action is required.\n   For example, if one of the values in the \"finishings-supported\"\
    \n   attribute is 'staple', the actual process might be an automatic\n   staple\
    \ action by a physical device controlled by some command sent to\n   the device.\
    \  Or, the actual process of stapling might be a manual\n   action by an operator\
    \ at an operator attended Printer object.\n   For another example of how supported\
    \ attributes function, consider a\n   system administrator who desires to control\
    \ all print jobs so that no\n   job sheets are printed in order to conserve paper.\
    \  To force no job\n   sheets, the system administrator sets the only supported\
    \ value for\n   the \"job-sheets-supported\" attribute to 'none'.  In this case,\
    \ if a\n   client requests anything except 'none', the create request is\n   rejected\
    \ or the \"job-sheets\" value is ignored (depending on the value\n   of \"ipp-attribute-fidelity\"\
    ).  To force the use of job start/end\n   sheets on all jobs, the administrator\
    \ does not include the value\n   'none' in the \"job-sheets- supported\" attribute.\
    \  In this case, if a\n   client requests 'none', the create request is rejected\
    \ or the \"job-\n   sheets\" value is ignored (again depending on the value of\
    \ \"ipp-\n   attribute-fidelity\").\n"
- title: 12.2.4 print-stream page
  contents:
  - "12.2.4 print-stream page\n   A \"print-stream page\" is a page according to the\
    \ definition of pages\n   in the language used to express the document data.\n"
- title: 12.2.5 impression
  contents:
  - "12.2.5 impression\n   An \"impression\" is the image (possibly many print-stream\
    \ pages in\n   different configurations) imposed onto a single media page.\n"
- title: '13. APPENDIX B:  Status Codes and Suggested Status Code Messages'
  contents:
  - "13. APPENDIX B:  Status Codes and Suggested Status Code Messages\n   This section\
    \ defines status code enum keywords and values that are\n   used to provide semantic\
    \ information on the results of an operation\n   request.  Each operation response\
    \ MUST include a status code.  The\n   response MAY also contain a status message\
    \ that provides a short\n   textual description of the status.  The status code\
    \ is intended for\n   use by automata, and the status message is intended for\
    \ the human end\n   user.  Since the status message is an OPTIONAL component of\
    \ the\n   operation response, an IPP application (i.e., a browser, GUI, print\n\
    \   driver or gateway) is NOT REQUIRED to examine or display the status\n   message,\
    \ since it MAY not be returned to the application.\n   The prefix of the status\
    \ keyword defines the class of response as\n   follows:\n      \"informational\"\
    \ - Request received, continuing process\n      \"successful\" - The action was\
    \ successfully received, understood,\n         and accepted\n      \"redirection\"\
    \ - Further action must be taken in order to complete\n         the request\n\
    \      \"client-error\" - The request contains bad syntax or cannot be\n     \
    \    fulfilled\n      \"server-error\" - The IPP object  failed to fulfill an\
    \ apparently\n         valid request\n   As with type2 enums, IPP status codes\
    \ are extensible.  IPP clients\n   are NOT REQUIRED to understand the meaning\
    \ of all registered status\n   codes, though such understanding is obviously desirable.\
    \  However,\n   IPP clients MUST understand the class of any status code, as\n\
    \   indicated by the prefix, and treat any unrecognized response as being\n  \
    \ equivalent to the first status code of that class, with the exception\n   that\
    \ an unrecognized response MUST NOT be cached.  For example, if an\n   unrecognized\
    \ status code of \"client-error-xxx-yyy\" is received by the\n   client, it can\
    \ safely assume that there was something wrong with its\n   request and treat\
    \ the response as if it had received a \"client-\n   error-bad-request\" status\
    \ code.  In such cases, IPP applications\n   SHOULD present the OPTIONAL message\
    \ (if present) to the end user\n   since the message is likely to contain human\
    \ readable information\n   which will help to explain the unusual status.  The\
    \ name of the enum\n   is the suggested status message for US English.\n   The\
    \ status code values range from 0x0000 to 0x7FFF.  The value ranges\n   for each\
    \ status code class are as follows:\n      \"successful\" - 0x0000 to 0x00FF\n\
    \      \"informational\" - 0x0100 to 0x01FF\n      \"redirection\" - 0x0200 to\
    \ 0x02FF\n      \"client-error\" - 0x0400 to 0x04FF\n      \"server-error\" -\
    \ 0x0500 to 0x05FF\n   The top half (128 values) of each range (0x0n40 to 0x0nFF,\
    \ for n = 0\n   to 5) is reserved for vendor use within each status code class.\n\
    \   Values 0x0600 to 0x7FFF are reserved for future assignment by IETF\n   standards\
    \ track documents and MUST NOT be used.\n"
- title: 13.1 Status Codes
  contents:
  - "13.1 Status Codes\n   Each status code is described below. Section 13.1.5.9 contains\
    \ a\n   table that indicates which status codes apply to which operations.\n \
    \  The Implementer's Guide [IPP-IIG] describe the suggested steps for\n   processing\
    \ IPP attributes for all operations, including returning\n   status codes.\n"
- title: 13.1.1 Informational
  contents:
  - "13.1.1 Informational\n   This class of status code indicates a provisional response\
    \ and is to\n   be used for informational purposes only.\n   There are no status\
    \ codes defined in IPP/1.1 for this class of status\n   code.\n"
- title: 13.1.2 Successful Status Codes
  contents:
  - "13.1.2 Successful Status Codes\n   This class of status code indicates that the\
    \ client's request was\n   successfully received, understood, and accepted.\n"
- title: 13.1.2.1 successful-ok (0x0000)
  contents:
  - "13.1.2.1 successful-ok (0x0000)\n   The request has succeeded and no request\
    \ attributes were substituted\n   or ignored.  In the case of a response to a\
    \ create request, the\n   'successful-ok' status code indicates that the request\
    \ was\n   successfully received and validated, and that the Job object has been\n\
    \   created; it does not indicate that the job has been processed.  The\n   transition\
    \ of the Job object into the 'completed' state is the only\n   indicator that\
    \ the job has been printed.\n"
- title: 13.1.2.2 successful-ok-ignored-or-substituted-attributes (0x0001)
  contents:
  - "13.1.2.2 successful-ok-ignored-or-substituted-attributes (0x0001)\n   The request\
    \ has succeeded, but some supplied (1) attributes were\n   ignored or (2) unsupported\
    \ values were substituted with supported\n   values or were ignored in order to\
    \ perform the operation without\n   rejecting it.  Unsupported attributes, attribute\
    \ syntaxes, or values\n   MUST be returned in the Unsupported Attributes group\
    \ of the response\n   for all operations.  There is an exception to this rule\
    \ for the query\n   operations:  Get-Printer-Attributes, Get-Jobs, and Get-Job-Attributes\n\
    \   for the \"requested-attributes\" operation attribute only.  When the\n   supplied\
    \ values of the \"requested-attributes\" operation attribute are\n   requesting\
    \ attributes that are not supported, the IPP object MAY, but\n   is NOT REQUIRED\
    \ to, return the \"requested-attributes\" attribute in\n   the Unsupported Attribute\
    \ response group (with the unsupported values\n   only).  See sections 3.1.7 and\
    \ 3.2.1.2.\n"
- title: 13.1.2.3 successful-ok-conflicting-attributes (0x0002)
  contents:
  - "13.1.2.3 successful-ok-conflicting-attributes (0x0002)\n   The request has succeeded,\
    \ but some supplied attribute values\n   conflicted with the values of other supplied\
    \ attributes.  These\n   conflicting values were either (1) substituted with (supported)\n\
    \   values or (2) the attributes were removed in order to process the job\n  \
    \ without rejecting it.  Attributes or values which conflict with other\n   attributes\
    \ and have been substituted or ignored MUST be returned in\n   the Unsupported\
    \ Attributes group of the response for all operations\n   as supplied by the client.\
    \  See sections 3.1.7 and 3.2.1.2.\n"
- title: 13.1.3 Redirection Status Codes
  contents:
  - "13.1.3 Redirection Status Codes\n   This class of status code indicates that\
    \ further action needs to be\n   taken to fulfill the request.\n   There are no\
    \ status codes defined in IPP/1.1 for this class of status\n   code.\n"
- title: 13.1.4 Client Error Status Codes
  contents:
  - "13.1.4 Client Error Status Codes\n   This class of status code is intended for\
    \ cases in which the client\n   seems to have erred.  The IPP object SHOULD return\
    \ a message\n   containing an explanation of the error situation and whether it\
    \ is a\n   temporary or permanent condition.\n"
- title: 13.1.4.1 client-error-bad-request (0x0400)
  contents:
  - "13.1.4.1 client-error-bad-request (0x0400)\n   The request could not be understood\
    \ by the IPP object due to\n   malformed syntax (such as the value of a fixed\
    \ length attribute whose\n   length does not match the prescribed length for that\
    \ attribute - see\n   the Implementer's Guide [IPP-IIG] ).  The IPP application\
    \ SHOULD NOT\n   repeat the request without modifications.\n"
- title: 13.1.4.2 client-error-forbidden (0x0401)
  contents:
  - "13.1.4.2 client-error-forbidden (0x0401)\n   The IPP object understood the request,\
    \ but is refusing to fulfill it.\n   Additional authentication information or\
    \ authorization credentials\n   will not help and the request SHOULD NOT be repeated.\
    \  This status\n   code is commonly used when the IPP object does not wish to\
    \ reveal\n   exactly why the request has been refused or when no other response\
    \ is\n   applicable.\n"
- title: 13.1.4.3 client-error-not-authenticated (0x0402)
  contents:
  - "13.1.4.3 client-error-not-authenticated (0x0402)\n   The request requires user\
    \ authentication.  The IPP client may repeat\n   the request with suitable authentication\
    \ information. If the request\n   already included authentication information,\
    \ then this status code\n   indicates that authorization has been refused for\
    \ those credentials.\n   If this response contains the same challenge as the prior\
    \ response,\n   and the user agent has already attempted authentication at least\n\
    \   once, then the response message may contain relevant diagnostic\n   information.\
    \  This status codes reveals more information than\n   \"client-error-forbidden\"\
    .\n"
- title: 13.1.4.4 client-error-not-authorized (0x0403)
  contents:
  - "13.1.4.4 client-error-not-authorized (0x0403)\n   The requester is not authorized\
    \ to perform the request.  Additional\n   authentication information or authorization\
    \ credentials will not help\n   and the request SHOULD NOT be repeated.  This\
    \ status code is used\n   when the IPP object wishes to reveal that the authentication\n\
    \   information is understandable, however, the requester is explicitly\n   not\
    \ authorized to perform the request.  This status codes reveals\n   more information\
    \ than \"client-error-forbidden\" and \"client-error-\n   not-authenticated\"\
    .\n"
- title: 13.1.4.5 client-error-not-possible (0x0404)
  contents:
  - "13.1.4.5 client-error-not-possible (0x0404)\n   This status code is used when\
    \ the request is for something that can\n   not happen.  For example, there might\
    \ be a request to cancel a job\n   that has already been canceled or aborted by\
    \ the system.  The IPP\n   client SHOULD NOT repeat the request.\n"
- title: 13.1.4.6 client-error-timeout (0x0405)
  contents:
  - "13.1.4.6 client-error-timeout (0x0405)\n   The client did not produce a request\
    \ within the time that the IPP\n   object was prepared to wait.  For example,\
    \ a client issued a Create-\n   Job operation and then, after a long period of\
    \ time, issued a Send-\n   Document operation and this error status code was returned\
    \ in\n   response to the Send-Document request  (see section 3.3.1).  The IPP\n\
    \   object might have been forced to clean up resources that had been\n   held\
    \ for the waiting additional Documents.  The IPP object was forced\n   to close\
    \ the Job since the client took too long.  The client SHOULD\n   NOT repeat the\
    \ request without modifications.\n"
- title: 13.1.4.7 client-error-not-found (0x0406)
  contents:
  - "13.1.4.7 client-error-not-found (0x0406)\n   The IPP object has not found anything\
    \ matching the request URI.  No\n   indication is given of whether the condition\
    \ is temporary or\n   permanent.  For example, a client with an old reference\
    \ to a Job (a\n   URI) tries to cancel the Job, however in the mean time the Job\
    \ might\n   have been completed and all record of it at the Printer has been\n\
    \   deleted.  This status code, 'client-error-not-found' is returned\n   indicating\
    \ that the referenced Job can not be found.  This error\n   status code is also\
    \ used when a client supplies a URI as a reference\n   to the document data in\
    \ either a Print-URI or Send-URI operation, but\n   the document can not be found.\n\
    \   In practice, an IPP application should avoid a not found situation by\n  \
    \ first querying and presenting a list of valid Printer URIs and Job\n   URIs\
    \ to the end-user.\n"
- title: 13.1.4.8 client-error-gone (0x0407)
  contents:
  - "13.1.4.8 client-error-gone (0x0407)\n   The requested object is no longer available\
    \ and no forwarding address\n   is known.  This condition should be considered\
    \ permanent.  Clients\n   with link editing capabilities should delete references\
    \ to the\n   request URI after user approval.  If the IPP object does not know\
    \ or\n   has no facility to determine, whether or not the condition is\n   permanent,\
    \ the status code \"client-error-not-found\" should be used\n   instead.\n   This\
    \ response is primarily intended to assist the task of maintenance\n   by notifying\
    \ the recipient that the resource is intentionally\n   unavailable and that the\
    \ IPP object administrator desires that remote\n   links to that resource be removed.\
    \ It is not necessary to mark all\n   permanently unavailable resources as \"\
    gone\" or to keep the mark for\n   any length of time -- that is left to the discretion\
    \ of the IPP\n   object administrator and/or Printer implementation.\n"
- title: 13.1.4.9 client-error-request-entity-too-large (0x0408)
  contents:
  - "13.1.4.9 client-error-request-entity-too-large (0x0408)\n   The IPP object is\
    \ refusing to process a request because the request\n   entity is larger than\
    \ the IPP object is willing or able to process.\n   An IPP Printer returns this\
    \ status code when it limits the size of\n   print jobs and it receives a print\
    \ job that exceeds that limit or\n   when the attributes are so many that their\
    \ encoding causes the\n   request entity to exceed IPP object capacity.\n"
- title: 13.1.4.10 client-error-request-value-too-long (0x0409)
  contents:
  - "13.1.4.10 client-error-request-value-too-long (0x0409)\n   The IPP object is\
    \ refusing to service the request because one or more\n   of the client-supplied\
    \ attributes has a variable length value that is\n   longer than the maximum length\
    \ specified for that attribute.  The IPP\n   object might not have sufficient\
    \ resources (memory, buffers, etc.) to\n   process (even temporarily), interpret,\
    \ and/or ignore a value larger\n   than the maximum length.  Another use of this\
    \ error code is when the\n   IPP object supports the processing of a large value\
    \ that is less than\n   the maximum length, but during the processing of the request\
    \ as a\n   whole, the object may pass the value onto some other system component\n\
    \   which is not able to accept the large value.  For more details, see\n   the\
    \ Implementer's Guide [IPP-IIG] .\n   Note:  For attribute values that are URIs,\
    \ this rare condition is\n   only likely to occur when a client has improperly\
    \ submitted a request\n   with long query information (e.g. an IPP application\
    \ allows an end-\n   user to enter an invalid URI), when the client has descended\
    \ into a\n   URI \"black hole\" of redirection (e.g., a redirected URI prefix\
    \ that\n   points to a suffix of itself), or when the IPP object is under attack\n\
    \   by a client attempting to exploit security holes present in some IPP\n   objects\
    \ using fixed-length buffers for reading or manipulating the\n   Request-URI.\n"
- title: 13.1.4.11 client-error-document-format-not-supported (0x040A)
  contents:
  - "13.1.4.11 client-error-document-format-not-supported (0x040A)\n   The IPP object\
    \ is refusing to service the request because the\n   document data is in a format,\
    \ as specified in the \"document-format\"\n   operation attribute, that is not\
    \ supported by the Printer object.\n   This error is returned independent of the\
    \ client-supplied \"ipp-\n   attribute-fidelity\".  The Printer object MUST return\
    \ this status\n   code, even if there are other Job Template attributes that are\
    \ not\n   supported as well, since this error is a bigger problem than with Job\n\
    \   Template attributes.  See sections 3.1.6.1, 3.1.7, and 3.2.1.1.\n"
- title: 13.1.4.12 client-error-attributes-or-values-not-supported (0x040B)
  contents:
  - "13.1.4.12 client-error-attributes-or-values-not-supported (0x040B)\n   In a create\
    \ request, if the Printer object does not support one or\n   more attributes,\
    \ attribute syntaxes, or attribute values supplied in\n   the request and the\
    \ client supplied the \"ipp-attribute-fidelity\"\n   operation attribute with\
    \ the 'true' value, the Printer object MUST\n   return this status code.  The\
    \ Printer object MUST also return in the\n   Unsupported Attributes Group all\
    \ the attributes and/or values\n   supplied by the client that are not supported.\
    \  See section 3.1.7.\n   For example, if the request indicates 'iso-a4' media,\
    \ but that media\n   type is not supported by the Printer object.  Or, if the\
    \ client\n   supplies a Job Template attribute and the attribute itself is not\n\
    \   even supported by the Printer.  If the \"ipp-attribute-fidelity\"\n   attribute\
    \ is 'false', the Printer MUST ignore or substitute values\n   for unsupported\
    \ Job Template attributes and values rather than reject\n   the request and return\
    \ this status code.\n   For any operation where a client requests attributes (such\
    \ as a Get-\n   Jobs, Get-Printer-Attributes, or Get-Job-Attributes operation),\
    \ if\n   the IPP object does not support one or more of the requested\n   attributes,\
    \ the IPP object simply ignores the unsupported requested\n   attributes and processes\
    \ the request as if they had not been\n   supplied, rather than returning this\
    \ status code.  In this case, the\n   IPP object MUST return the 'successful-ok-ignored-or-substituted-\n\
    \   attributes' status code and MAY return the unsupported attributes as\n   values\
    \ of the \"requested-attributes\" in the Unsupported Attributes\n   Group (see\
    \ section 13.1.2.2).\n"
- title: 13.1.4.13 client-error-uri-scheme-not-supported (0x040C)
  contents:
  - "13.1.4.13 client-error-uri-scheme-not-supported (0x040C)\n   The scheme of the\
    \ client-supplied URI in a Print-URI or a Send-URI\n   operation is not supported.\
    \  See sections 3.1.6.1 and 3.1.7.\n"
- title: 13.1.4.14 client-error-charset-not-supported (0x040D)
  contents:
  - "13.1.4.14 client-error-charset-not-supported (0x040D)\n   For any operation,\
    \ if the IPP Printer does not support the charset\n   supplied by the client in\
    \ the \"attributes-charset\" operation\n   attribute, the Printer MUST reject\
    \ the operation and return this\n   status and any 'text' or 'name' attributes\
    \ using the 'utf-8' charset\n   (see Section 3.1.4.1).  See sections 3.1.6.1 and\
    \  3.1.7.\n"
- title: 13.1.4.15 client-error-conflicting-attributes (0x040E)
  contents:
  - "13.1.4.15 client-error-conflicting-attributes (0x040E)\n   The request is rejected\
    \ because some attribute values conflicted with\n   the values of other attributes\
    \ which this document does not permit to\n   be substituted or ignored.  The Printer\
    \ object MUST also return in\n   the Unsupported Attributes Group the conflicting\
    \ attributes supplied\n   by the client.  See sections 3.1.7 and 3.2.1.2.\n"
- title: 13.1.4.16 client-error-compression-not-supported (0x040F)
  contents:
  - "13.1.4.16 client-error-compression-not-supported (0x040F)\n   The IPP object\
    \ is refusing to service the request because the\n   document data, as specified\
    \ in the \"compression\" operation attribute,\n   is compressed in a way that\
    \ is not supported by the Printer object.\n   This error is returned independent\
    \ of the client-supplied \"ipp-\n   attribute-fidelity\".  The Printer object\
    \ MUST return this status\n   code, even if there are other Job Template attributes\
    \ that are not\n   supported as well, since this error is a bigger problem than\
    \ with Job\n   Template attributes.  See sections 3.1.6.1, 3.1.7, and 3.2.1.1.\n"
- title: 13.1.4.17 client-error-compression-error (0x0410)
  contents:
  - "13.1.4.17 client-error-compression-error (0x0410)\n   The IPP object is refusing\
    \ to service the request because the\n   document data cannot be decompressed\
    \ when using the algorithm\n   specified by the \"compression\" operation attribute.\
    \  This error is\n   returned independent of the client-supplied \"ipp-attribute-fidelity\"\
    .\n   The Printer object MUST return this status code, even if there are\n   Job\
    \ Template attributes that are not supported as well, since this\n   error is\
    \ a bigger problem than with Job Template attributes.  See\n   sections 3.1.7\
    \ and 3.2.1.1.\n"
- title: 13.1.4.18 client-error-document-format-error (0x0411)
  contents:
  - "13.1.4.18 client-error-document-format-error (0x0411)\n   The IPP object is refusing\
    \ to service the request because Printer\n   encountered an error in the document\
    \ data while interpreting it.\n   This error is returned independent of the client-supplied\
    \ \"ipp-\n   attribute-fidelity\".  The Printer object MUST return this status\n\
    \   code, even if there are Job Template attributes that are not\n   supported\
    \ as well, since this error is a bigger problem than with Job\n   Template attributes.\
    \  See sections 3.1.7 and 3.2.1.1.\n"
- title: 13.1.4.19 client-error-document-access-error (0x0412)
  contents:
  - "13.1.4.19 client-error-document-access-error (0x0412)\n   The IPP object is refusing\
    \ to service the Print-URI or Send-URI\n   request because Printer encountered\
    \ an access error while attempting\n   to validate the accessibility or access\
    \ the document data specified\n   in the \"document-uri\" operation attribute.\
    \  The Printer MAY also\n   return a specific document access error code using\
    \ the \"document-\n   access-error\" operation attribute (see section 3.1.6.4).\
    \  This error\n   is returned independent of the client-supplied \"ipp-attribute-\n\
    \   fidelity\".  The Printer object MUST return this status code, even if\n  \
    \ there are Job Template attributes that are not supported as well,\n   since\
    \ this error is a bigger problem than with Job Template\n   attributes.  See sections\
    \ 3.1.6.1 and 3.1.7.\n"
- title: 13.1.5 Server Error Status Codes
  contents:
  - "13.1.5 Server Error Status Codes\n   This class of status codes indicates cases\
    \ in which the IPP object is\n   aware that it has erred or is incapable of performing\
    \ the request.\n   The IPP object SHOULD include a message containing an explanation\
    \ of\n   the error situation, and whether it is a temporary or permanent\n   condition.\n"
- title: 13.1.5.1 server-error-internal-error (0x0500)
  contents:
  - "13.1.5.1 server-error-internal-error (0x0500)\n   The IPP object encountered\
    \ an unexpected condition that prevented it\n   from fulfilling the request. \
    \ This error status code differs from\n   \"server-error-temporary-error\" in\
    \ that it implies a more permanent\n   type of internal error.  It also differs\
    \ from \"server-error-device-\n   error\" in that it implies an unexpected condition\
    \ (unlike a paper-jam\n   or out-of-toner problem which is undesirable but expected).\
    \  This\n   error status code indicates that probably some knowledgeable human\n\
    \   intervention is required.\n"
- title: 13.1.5.2 server-error-operation-not-supported (0x0501)
  contents:
  - "13.1.5.2 server-error-operation-not-supported (0x0501)\n   The IPP object does\
    \ not support the functionality required to fulfill\n   the request. This is the\
    \ appropriate response when the IPP object\n   does not recognize an operation\
    \ or is not capable of supporting it.\n   See sections 3.1.6.1 and 3.1.7.\n"
- title: 13.1.5.3 server-error-service-unavailable (0x0502)
  contents:
  - "13.1.5.3 server-error-service-unavailable (0x0502)\n   The IPP object is currently\
    \ unable to handle the request due to a\n   temporary overloading or maintenance\
    \ of the IPP object.  The\n   implication is that this is a temporary condition\
    \ which will be\n   alleviated after some delay. If known, the length of the delay\
    \ may be\n   indicated in the message.  If no delay is given, the IPP application\n\
    \   should handle the response as it would for a \"server-error-\n   temporary-error\"\
    \ response.  If the condition is more permanent, the\n   error status codes \"\
    client-error-gone\" or \"client-error-not-found\"\n   could be used.\n"
- title: 13.1.5.4 server-error-version-not-supported (0x0503)
  contents:
  - "13.1.5.4 server-error-version-not-supported (0x0503)\n   The IPP object does\
    \ not support, or refuses to support, the IPP\n   protocol version that was supplied\
    \ as the value of the \"version-\n   number\" operation parameter in the request.\
    \  The IPP object is\n   indicating that it is unable or unwilling to complete\
    \ the request\n   using the same major and minor version number as supplied in\
    \ the\n   request other than with this error message. The error response SHOULD\n\
    \   contain a \"status-message\" attribute (see section 3.1.6.2) describing\n\
    \   why that version is not supported and what other versions are\n   supported\
    \ by that IPP object.  See sections 3.1.6.1, 3.1.7, and\n   3.1.8.\n   The error\
    \ response MUST identify in the \"version-number\" operation\n   parameter the\
    \ closest version number that the IPP object does\n   support.  For example, if\
    \ a client supplies version '1.0' and an\n   IPP/1.1 object supports version '1.0',\
    \ then it responds with version\n   '1.0' in all responses to such a request.\
    \  If the IPP/1.1 object does\n   not support version '1.0', then it should accept\
    \ the request and\n   respond with version '1.1' or may reject the request and\
    \ respond with\n   this error code and version\n   '1.1'.  If a client supplies\
    \ a version '1.2', the IPP/1.1 object\n   should accept the request and return\
    \ version '1.1' or may reject the\n   request and respond with this error code\
    \ and version '1.1'.  See\n   sections 3.1.8 and 4.4.14.\n"
- title: 13.1.5.5 server-error-device-error (0x0504)
  contents:
  - "13.1.5.5 server-error-device-error (0x0504)\n   A printer error, such as a paper\
    \ jam, occurs while the IPP object\n   processes a Print or Send operation.  The\
    \ response contains the true\n   Job Status (the values of the \"job-state\" and\
    \ \"job-state-reasons\"\n   attributes).  Additional information can be returned\
    \ in the OPTIONAL\n   \"job-state-message\" attribute value or in the OPTIONAL\
    \ status message\n   that describes the error in more detail.  This error status\
    \ code is\n   only returned in situations where the Printer is unable to accept\
    \ the\n   create request because of such a device error.  For example, if the\n\
    \   Printer is unable to spool, and can only accept one job at a time,\n   the\
    \ reason it might reject a create request is that the printer\n   currently has\
    \ a paper jam.  In many cases however, where the Printer\n   object can accept\
    \ the request even though the Printer has some error\n   condition, the 'successful-ok'\
    \ status code will be returned.  In such\n   a case, the client would look at\
    \ the returned Job Object Attributes\n   or later query the Printer to determine\
    \ its state and state reasons.\n"
- title: 13.1.5.6 server-error-temporary-error (0x0505)
  contents:
  - "13.1.5.6 server-error-temporary-error (0x0505)\n   A temporary error such as\
    \ a buffer full write error, a memory\n   overflow (i.e. the document data exceeds\
    \ the memory of the Printer),\n   or a disk full condition, occurs while the IPP\
    \ Printer processes an\n   operation.  The client MAY try the unmodified request\
    \ again at some\n   later point in time with an expectation that the temporary\
    \ internal\n   error condition may have been cleared.  Alternatively, as an\n\
    \   implementation option, a Printer object MAY delay the response until\n   the\
    \ temporary condition is cleared so that no error is returned.\n"
- title: 13.1.5.7 server-error-not-accepting-jobs (0x0506)
  contents:
  - "13.1.5.7 server-error-not-accepting-jobs (0x0506)\n   A temporary error indicating\
    \ that the Printer is not currently\n   accepting jobs, because the administrator\
    \ has set the value of the\n   Printer's \"printer-is-accepting-jobs\" attribute\
    \ to 'false' (by means\n   outside the scope of this IPP/1.1 document).\n"
- title: 13.1.5.8 server-error-busy (0x0507)
  contents:
  - "13.1.5.8 server-error-busy (0x0507)\n   A temporary error indicating that the\
    \ Printer is too busy processing\n   jobs and/or other requests. The client SHOULD\
    \ try the unmodified\n   request again at some later point in time with an expectation\
    \ that\n   the temporary busy condition will have been cleared.\n"
- title: 13.1.5.9 server-error-job-canceled (0x0508)
  contents:
  - "13.1.5.9 server-error-job-canceled (0x0508)\n   An error indicating that the\
    \ job has been canceled by an operator or\n   the system while the client was\
    \ transmitting the data to the IPP\n   Printer.  If a job-id and job-uri had been\
    \ created, then they are\n   returned in the Print-Job, Send-Document, or Send-URI\
    \ response as\n   usual; otherwise, no job-id and job-uri are returned in the\
    \ response.\n"
- title: 13.1.5.10 server-error-multiple-document-jobs-not-supported (0x0509)
  contents:
  - "13.1.5.10 server-error-multiple-document-jobs-not-supported (0x0509)\n   The\
    \ IPP object does not support multiple documents per job and a\n   client attempted\
    \ to supply document data with a second Send-Document\n   or Send-URI operation.\n"
- title: 13.2 Status Codes for IPP Operations
  contents:
  - "13.2 Status Codes for IPP Operations\n   PJ = Print-Job, PU = Print-URI, CJ =\
    \ Create-Job, SD = Send-Document\n   SU = Send-URI, V = Validate-Job, GA = Get-Job-Attributes\
    \ and\n   Get-Printer-Attributes, GJ = Get-Jobs, C = Cancel-Job\n            \
    \                                      IPP Operations\n   IPP Status Keyword \
    \                      PJ PU CJ SD SU V GA GJ C\n   ------------------       \
    \                -- -- -- -- -- - -- -- -\n   successful-ok                  \
    \          x  x  x  x  x  x x  x  x\n   successful-ok-ignored-or-substituted-\
    \    x  x  x  x  x  x x  x  x\n        attributes\n   successful-ok-conflicting-attributes\
    \     x  x  x  x  x  x x  x  x\n   client-error-bad-request                 x\
    \  x  x  x  x  x x  x  x\n   client-error-forbidden                   x  x  x\
    \  x  x  x x  x  x\n   client-error-not-authenticated           x  x  x  x  x\
    \  x x  x  x\n   client-error-not-authorized              x  x  x  x  x  x x \
    \ x  x\n   client-error-not-possible                x  x  x  x  x  x x  x  x\n\
    \   client-error-timeout                              x  x\n   client-error-not-found\
    \                   x  x  x  x  x  x x  x  x\n   client-error-gone           \
    \             x  x  x  x  x  x x  x  x\n   client-error-request-entity-too-large\
    \    x  x  x  x  x  x x  x  x\n   client-error-request-value-too-long      x \
    \ x  x  x  x  x x  x  x\n   client-error-document-format-not-        x  x    \
    \ x  x  x x\n        supported\n   client-error-attributes-or-values-not-   x\
    \  x  x  x  x  x x  x  x\n        supported\n   client-error-uri-scheme-not-supported\
    \       x        x\n   client-error-charset-not-supported       x  x  x  x  x\
    \  x x  x  x\n   client-error-conflicting-attributes      x  x  x  x  x  x x \
    \ x  x\n   client-error-compression-not-supported   x  x     x  x  x\n   client-error-compression-error\
    \           x  x     x  x\n   client-error-document-format-error       x  x  \
    \   x  x\n   client-error-document-access-error          x        x\n   server-error-internal-error\
    \              x  x  x  x  x  x x  x  x\n   server-error-operation-not-supported\
    \        x  x  x  x\n   server-error-service-unavailable         x  x  x  x  x\
    \  x x  x  x\n   server-error-version-not-supported       x  x  x  x  x  x x \
    \ x  x\n   server-error-device-error                x  x  x  x  x\n   server-error-temporary-error\
    \             x  x  x  x  x\n   server-error-not-accepting-jobs          x  x\
    \  x        x\n   server-error-busy                        x  x  x  x  x  x x\
    \  x  x\n   server-error-job-canceled                x        x  x\n   server-error-multiple-document-jobs-\
    \              x  x\n          not-supported\n   HJ = Hold-Job, RJ = Release-Job,\
    \ RS = Restart-Job\n   PP = Pause-Printer, RP = Resume-Printer, PJ = Purge-Jobs\n\
    \                                            IPP Operations (cont.)\n   IPP Status\
    \ Keyword                       HJ RJ RS PP RP PJ\n   ------------------     \
    \                  -- -- -- -- -- --\n   successful-ok                       \
    \     x  x  x  x  x  x\n   successful-ok-ignored-or-substituted-    x  x  x  x\
    \  x  x\n        attributes\n   successful-ok-conflicting-attributes     x  x\
    \  x  x  x  x\n   client-error-bad-request                 x  x  x  x  x  x\n\
    \   client-error-forbidden                   x  x  x  x  x  x\n   client-error-not-authenticated\
    \           x  x  x  x  x  x\n   client-error-not-authorized              x  x\
    \  x  x  x  x\n   client-error-not-possible                x  x  x  x  x  x\n\
    \   client-error-timeout\n   client-error-not-found                   x  x  x\
    \  x  x  x\n   client-error-gone                        x  x  x  x  x  x\n   client-error-request-entity-too-large\
    \    x  x  x  x  x  x\n   client-error-request-value-too-long      x  x  x  x\
    \  x  x\n   client-error-document-format-not-\n        supported\n   client-error-attributes-or-values-not-\
    \   x  x  x  x  x  x\n        supported\n   client-error-uri-scheme-not-supported\n\
    \   client-error-charset-not-supported       x  x  x  x  x  x\n   client-error-conflicting-attributes\
    \      x  x  x  x  x  x\n   client-error-compression-not-supported\n   client-error-compression-error\n\
    \   client-error-document-format-error\n   client-error-document-access-error\n\
    \   server-error-internal-error              x  x  x  x  x  x\n   server-error-operation-not-supported\
    \     x  x  x  x  x  x\n   server-error-service-unavailable         x  x  x  x\
    \  x  x\n   server-error-version-not-supported       x  x  x  x  x  x\n   server-error-device-error\n\
    \   server-error-temporary-error             x  x  x  x  x  x\n   server-error-not-accepting-jobs\n\
    \   server-error-busy                        x  x  x  x  x  x\n   server-error-job-canceled\n\
    \   server-error-multiple-document-jobs-\n          not-supported\n"
- title: '14.  APPENDIX C:  "media" keyword values'
  contents:
  - "14.  APPENDIX C:  \"media\" keyword values\n   Standard keyword values are taken\
    \ from several sources.\n   Standard values are defined (taken from DPA[ISO10175]\
    \ and the Printer\n   MIB[RFC1759]):\n    'default': The default medium for the\
    \ output device\n    'iso-a4-white': Specifies the ISO A4 white medium: 210 mm\
    \ x 297 mm\n    'iso-a4-colored': Specifies the ISO A4 colored medium: 210 mm\
    \ x 297\n       mm\n    'iso-a4-transparent' Specifies the ISO A4 transparent\
    \ medium: 210 mm\n       x 297 mm\n    'iso-a3-white': Specifies the ISO A3 white\
    \ medium: 297 mm x 420 mm\n    'iso-a3-colored': Specifies the ISO A3 colored\
    \ medium: 297 mm x 420\n       mm\n    'iso-a5-white': Specifies the ISO A5 white\
    \ medium: 148 mm x 210 mm\n    'iso-a5-colored': Specifies the ISO A5 colored\
    \ medium: 148 mm x 210\n       mm\n    'iso-b4-white': Specifies the ISO B4 white\
    \ medium: 250 mm x 353 mm\n    'iso-b4-colored': Specifies the ISO B4 colored\
    \ medium: 250 mm x 353\n       mm\n    'iso-b5-white': Specifies the ISO B5 white\
    \ medium: 176 mm x 250 mm\n    'iso-b5-colored': Specifies the ISO B5 colored\
    \ medium: 176 mm x 250\n       mm\n    'jis-b4-white': Specifies the JIS B4 white\
    \ medium: 257 mm x 364 mm\n    'jis-b4-colored': Specifies the JIS B4 colored\
    \ medium: 257 mm x 364\n       mm\n    'jis-b5-white': Specifies the JIS B5 white\
    \ medium: 182 mm x 257 mm\n    'jis-b5-colored': Specifies the JIS B5 colored\
    \ medium: 182 mm x 257\n       mm\n   The following standard values are defined\
    \ for North American media:\n    'na-letter-white': Specifies the North American\
    \ letter white medium\n    'na-letter-colored': Specifies the North American letter\
    \ colored\n       medium\n    'na-letter-transparent': Specifies the North American\
    \ letter\n       transparent medium\n    'na-legal-white': Specifies the North\
    \ American legal white medium\n    'na-legal-colored': Specifies the North American\
    \ legal colored\n       medium\n   The following standard values are defined for\
    \ envelopes:\n    'iso-b4-envelope': Specifies the ISO B4 envelope medium\n  \
    \  'iso-b5-envelope': Specifies the ISO B5 envelope medium\n    'iso-c3-envelope':\
    \ Specifies the ISO C3 envelope medium\n    'iso-c4-envelope': Specifies the ISO\
    \ C4 envelope medium\n    'iso-c5-envelope': Specifies the ISO C5 envelope medium\n\
    \    'iso-c6-envelope': Specifies the ISO C6 envelope medium\n    'iso-designated-long-envelope':\
    \ Specifies the ISO Designated Long\n       envelope medium\n    'na-10x13-envelope':\
    \ Specifies the North American 10x13 envelope\n       medium\n    'na-9x12-envelope':\
    \ Specifies the North American 9x12 envelope\n       medium\n    'monarch-envelope':\
    \ Specifies the Monarch envelope\n    'na-number-10-envelope': Specifies the North\
    \ American number 10\n       business envelope medium\n    'na-7x9-envelope':\
    \ Specifies the North American 7x9 inch envelope\n    'na-9x11-envelope': Specifies\
    \ the North American 9x11 inch\n       envelope\n    'na-10x14-envelope': Specifies\
    \ the North American 10x14 inch\n       envelope\n    'na-number-9-envelope':\
    \ Specifies the North American number 9\n       business envelope\n    'na-6x9-envelope':\
    \ Specifies the North American 6x9 inch envelope\n    'na-10x15-envelope': Specifies\
    \ the North American 10x15 inch\n       envelope\n   The following standard values\
    \ are defined for the less commonly used\n   media:\n 'executive-white': Specifies\
    \ the white executive medium\n 'folio-white': Specifies the folio white medium\n\
    \ 'invoice-white': Specifies the white invoice medium\n 'ledger-white': Specifies\
    \ the white ledger medium\n 'quarto-white': Specified the white quarto medium\n\
    \ 'iso-a0-white': Specifies the ISO A0 white medium: 841 mm x 1189 mm\n 'iso-a0-transparent':\
    \ Specifies the ISO A0 transparent medium: 841 mm\n    x 1189 mm\n 'iso-a0-translucent':\
    \ Specifies the ISO A0 translucent medium: 841 mm\n    x 1189 mm\n 'iso-a1-white':\
    \ Specifies the ISO A1 white medium: 594 mm x 841 mm\n 'iso-a1-transparent': Specifies\
    \ the ISO A1 transparent medium: 594 mm\n    x 841 mm\n 'iso-a1-translucent':\
    \ Specifies the ISO A1 translucent medium: 594 mm\n    x 841 mm\n 'iso-a2-white':\
    \ Specifies the ISO A2 white medium: 420 mm x 594 mm\n 'iso-a2-transparent': Specifies\
    \ the ISO A2 transparent medium: 420 mm\n    x 594 mm\n 'iso-a2-translucent':\
    \ Specifies the ISO A2 translucent medium: 420 mm\n    x 594 mm\n 'iso-a3-transparent':\
    \ Specifies the ISO A3 transparent medium: 297 mm\n    x 420 mm\n 'iso-a3-translucent':\
    \ Specifies the ISO A3 translucent medium: 297 mm\n    x 420 mm\n 'iso-a4-translucent':\
    \ Specifies the ISO A4 translucent medium: 210 mm\n    x 297 mm\n 'iso-a5-transparent':\
    \ Specifies the ISO A5 transparent medium: 148 mm\n    x 210 mm\n 'iso-a5-translucent':\
    \ Specifies the ISO A5 translucent medium: 148 mm\n    x 210 mm\n 'iso-a6-white':\
    \ Specifies the ISO A6 white medium: 105 mm x 148 mm\n 'iso-a7-white': Specifies\
    \ the ISO A7 white medium: 74 mm x 105 mm\n 'iso-a8-white': Specifies the ISO\
    \ A8 white medium: 52 mm x 74 mm\n 'iso-a9-white': Specifies the ISO A9 white\
    \ medium: 37 mm x 52 mm\n 'iso-a10-white': Specifies the ISO A10 white medium:\
    \ 26 mm x 37 mm\n 'iso-b0-white': Specifies the ISO B0 white medium: 1000 mm x\
    \ 1414 mm\n 'iso-b1-white': Specifies the ISO B1 white medium: 707 mm x 1000 mm\n\
    \ 'iso-b2-white': Specifies the ISO B2 white medium: 500 mm x 707 mm\n 'iso-b3-white':\
    \ Specifies the ISO B3 white medium: 353 mm x 500 mm\n 'iso-b6-white': Specifies\
    \ the ISO B6 white medium: 125 mm x 176 mm\n 'iso-b7-white': Specifies the ISO\
    \ B7 white medium: 88 mm x 125 mm\n 'iso-b8-white': Specifies the ISO B8 white\
    \ medium: 62 mm x 88 mm\n 'iso-b9-white': Specifies the ISO B9 white medium: 44\
    \ mm x 62 mm\n 'iso-b10-white': Specifies the ISO B10 white medium: 31 mm x 44\
    \ mm\n 'jis-b0-white': Specifies the JIS B0 white medium: 1030 mm x 1456 mm\n\
    \ 'jis-b0-transparent': Specifies the JIS B0 transparent medium: 1030\n    mm\
    \ x 1456 mm\n 'jis-b0-translucent': Specifies the JIS B0 translucent medium: 1030\n\
    \    mm x 1456 mm\n 'jis-b1-white': Specifies the JIS B1 white medium: 728 mm\
    \ x 1030 mm\n 'jis-b1-transparent': Specifies the JIS B1 transparent medium: 728\
    \ mm\n    x 1030 mm\n 'jis-b1-translucent': Specifies the JIS B1 translucent medium:\
    \ 728 mm\n    x 1030 mm\n 'jis-b2-white': Specifies the JIS B2 white medium: 515\
    \ mm x 728 mm\n 'jis-b2-transparent': Specifies the JIS B2 transparent medium:\
    \ 515 mm\n    x 728 mm\n 'jis-b2-translucent': Specifies the JIS B2 translucent\
    \ medium: 515 mm\n    x 728 mm\n 'jis-b3-white': Specifies the JIS B3 white medium:\
    \ 364 mm x 515 mm\n 'jis-b3-transparent': Specifies the JIS B3 transparent medium:\
    \ 364 mm\n    x 515 mm\n 'jis-b3-translucent': Specifies the JIS B3 translucent\
    \ medium: 364 mm\n    x 515 mm\n 'jis-b4-transparent': Specifies the JIS B4 transparent\
    \ medium: 257 mm\n    x 364 mm\n 'jis-b4-translucent': Specifies the JIS B4 translucent\
    \ medium: 257 mm\n    x 364 mm\n 'jis-b5-transparent': Specifies the JIS B5 transparent\
    \ medium: 182 mm\n    x 257 mm\n 'jis-b5-translucent': Specifies the JIS B5 translucent\
    \ medium: 182 mm\n    x 257 mm\n 'jis-b6-white': Specifies the JIS B6 white medium:\
    \ 128 mm x 182 mm\n 'jis-b7-white': Specifies the JIS B7 white medium: 91 mm x\
    \ 128 mm\n 'jis-b8-white': Specifies the JIS B8 white medium: 64 mm x 91 mm\n\
    \ 'jis-b9-white': Specifies the JIS B9 white medium: 45 mm x 64 mm\n 'jis-b10-white':\
    \ Specifies the JIS B10 white medium: 32 mm x 45 mm\n   The following standard\
    \ values are defined for American Standard (i.e.\n   ANSI) engineering media:\n\
    \    'a-white': Specifies the engineering ANSI A size white medium: 8.5\n    \
    \   inches x 11 inches\n    'a-transparent': Specifies the engineering ANSI A\
    \ size transparent\n       medium: 8.5 inches x 11 inches\n    'a-translucent':\
    \ Specifies the engineering ANSI A size translucent\n       medium: 8.5 inches\
    \ x 11 inches\n    'b-white': Specifies the engineering ANSI B size white medium:\
    \ 11\n       inches x 17 inches\n    'b-transparent': Specifies the engineering\
    \ ANSI B size transparent\n       medium: 11 inches x 17 inches)\n    'b-translucent':\
    \ Specifies the engineering ANSI B size translucent\n       medium: 11 inches\
    \ x 17 inches\n    'c-white': Specifies the engineering ANSI C size white medium:\
    \ 17\n       inches x 22 inches\n    'c-transparent': Specifies the engineering\
    \ ANSI C size transparent\n       medium: 17 inches x 22 inches\n    'c-translucent':\
    \ Specifies the engineering ANSI C size translucent\n       medium: 17 inches\
    \ x 22 inches\n    'd-white': Specifies the engineering ANSI D size white medium:\
    \ 22\n       inches x 34 inches\n    'd-transparent': Specifies the engineering\
    \ ANSI D size transparent\n       medium: 22 inches x 34 inches\n    'd-translucent':\
    \ Specifies the engineering ANSI D size translucent\n       medium: 22 inches\
    \ x 34 inches\n    'e-white': Specifies the engineering ANSI E size white medium:\
    \ 34\n       inches x 44 inches\n    'e-transparent': Specifies the engineering\
    \ ANSI E size transparent\n       medium: 34 inches x 44 inches\n    'e-translucent':\
    \ Specifies the engineering ANSI E size translucent\n       medium: 34 inches\
    \ x 44 inches\n   The following standard values are defined for American Standard\
    \ (i.e.\n   ANSI) engineering media for devices that provide the \"synchro-cut\"\
    \n   feature (see section 14.1):\n 'axsynchro-white': Specifies the roll paper\
    \ having the width of the\n    longer edge (11 inches) of the engineering ANSI\
    \ A size white medium\n    and cuts synchronizing with data.\n 'axsynchro-transparent':\
    \ Specifies the roll paper having the width of\n    the longer edge (11 inches)\
    \ of the engineering ANSI A size\n    transparent medium and cuts synchronizing\
    \ with data.\n 'axsynchro-translucent': Specifies the roll paper having the width\
    \ of\n    the longer edge (11 inches) of the engineering ANSI A size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'bxsynchro-white': Specifies the\
    \ roll paper having the width of the\n    longer edge (17 inches) of the engineering\
    \ ANSI B size white medium\n    and cuts synchronizing with data.\n 'bxsynchro-transparent':\
    \ Specifies the roll paper having the width of\n    the longer edge (17 inches)\
    \ of the engineering ANSI B size\n    transparent medium and cuts synchronizing\
    \ with data.\n 'bxsynchro-translucent': Specifies the roll paper having the width\
    \ of\n    the longer edge (17 inches) of the engineering ANSI B size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'cxsynchro-white': Specifies the\
    \ roll paper having the width of the\n    longer edge (22 inches) of the engineering\
    \ ANSI C size white medium\n    and cuts synchronizing with data.\n 'cxsynchro-transparent':\
    \ Specifies the roll paper having the width of\n    the longer edge (22 inches)\
    \ of the engineering ANSI C size\n    transparent medium and cuts synchronizing\
    \ with data.\n 'cxsynchro-translucent': Specifies the roll paper having the width\
    \ of\n    the longer edge (22 inches) of the engineering ANSI C size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'dxsynchro-white': Specifies the\
    \ roll paper having the width of the\n    longer edge (34 inches) of the engineering\
    \ ANSI D size white medium\n    and cuts synchronizing with data.\n 'dxsynchro-transparent':\
    \ Specifies the roll paper having the width of\n    the longer edge (34 inches)\
    \ of the engineering ANSI D size\n    transparent medium and cuts synchronizing\
    \ with data.\n 'dxsynchro-translucent': Specifies the roll paper having the width\
    \ of\n    the longer edge (34 inches) of the engineering ANSI D size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'exsynchro-white': Specifies the\
    \ roll paper having the width of the\n    longer edge (44 inches) of the engineering\
    \ ANSI E size white medium\n    and cuts synchronizing with data.\n 'exsynchro-transparent':\
    \ Specifies the roll paper having the width of\n    the longer edge (44 inches)\
    \ of the engineering ANSI E size\n    transparent medium and cuts synchronizing\
    \ with data.\n 'exsynchro-translucent': Specifies the roll paper having the width\
    \ of\n    the longer edge (44 inches) of the engineering ANSI E size\n    translucent\
    \ medium and cuts synchronizing with data.\n   The following standard values are\
    \ defined for American Architectural\n   engineering media:\n 'arch-a-white':\
    \ Specifies the Architectural A size white medium: 9\n    inches x 12 inches\n\
    \ 'arch-a-transparent': Specifies the Architectural A size transparent\n    medium:\
    \ 9 inches x 12 inches\n 'arch-a-translucent': Specifies the Architectural A size\
    \ translucent\n    medium: 9 inches x 12 inches\n 'arch-b-white': Specifies the\
    \ Architectural B size white medium: 12\n    inches x 18 inches\n 'arch-b-transparent':\
    \ Specifies the Architectural B size transparent\n    medium: 12 inches x 18 inches\n\
    \ 'arch-b-translucent': Specifies the Architectural B size translucent\n    medium:\
    \ 12 inches x 18 inches\n 'arch-c-white': Specifies the Architectural C size white\
    \ medium: 18\n    inches x 24 inches\n 'arch-c-transparent': Specifies the Architectural\
    \ C size transparent\n    medium: 18 inches x 24 inches\n 'arch-c-translucent':\
    \ Specifies the Architectural C size translucent\n    medium: 18 inches x 24 inches\n\
    \ 'arch-d-white': Specifies the Architectural D size white medium: 24\n    inches\
    \ x 36 inches\n 'arch-d-transparent': Specifies the Architectural D size transparent\n\
    \    medium: 24 inches x 36 inches\n 'arch-d-translucent': Specifies the Architectural\
    \ D size translucent\n    medium: 24 inches x 36 inches\n 'arch-e-white': Specifies\
    \ the Architectural E size white medium: 36\n    inches x 48 inches\n 'arch-e-transparent':\
    \ Specifies the Architectural E size transparent\n    medium: 36 inches x 48 inches\n\
    \ 'arch-e-translucent': Specifies the Architectural E size translucent\n    medium:\
    \ 36 inches x 48 inches\n   The following standard values are defined for American\
    \ Architectural\n   engineering media for devices that provide the \"synchro-cut\"\
    \ feature\n   (see section 14.1):\n 'arch-axsynchro-white': Specifies the roll\
    \ paper having the width of\n    the longer edge (12 inches) of the Architectural\
    \ A size white\n    medium and cuts synchronizing with data.\n 'arch-axsynchro-transparent':\
    \ Specifies the roll paper having the\n    width of the longer edge (12 inches)\
    \ of the Architectural A size\n    transparent medium and cuts synchronizing with\
    \ data.\n 'arch-axsynchro-translucent': Specifies the roll paper having the\n\
    \    width of the longer edge (12 inches) of the Architectural A size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'arch-bxsynchro-white': Specifies\
    \ the roll paper having the width of\n    the longer edge (18 inches) of the Architectural\
    \ B size white\n    medium and cuts synchronizing with data.\n 'arch-bxsynchro-transparent':\
    \ Specifies the roll paper having the\n    width of the longer edge (18 inches)\
    \ of the Architectural B size\n    transparent medium and cuts synchronizing with\
    \ data.\n 'arch-bxsynchro-translucent': Specifies the roll paper having the\n\
    \    width of the longer edge (18 inches) of the Architectural B size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'arch-cxsynchro-white': Specifies\
    \ the roll paper having the width of\n    the longer edge (24 inches) of the Architectural\
    \ C size white\n    medium and cuts synchronizing with data.\n 'arch-cxsynchro-transparent':\
    \ Specifies the roll paper having the\n    width of the longer edge (24 inches)\
    \ of the Architectural C size\n    transparent medium and cuts synchronizing with\
    \ data.\n 'arch-cxsynchro-translucent': Specifies the roll paper having the\n\
    \    width of the longer edge (24 inches) of the Architectural C size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'arch-dxsynchro-white': Specifies\
    \ the roll paper having the width of\n    the longer edge (36 inches) of the Architectural\
    \ D size white\n    medium and cuts synchronizing with data.\n 'arch-dxsynchro-transparent':\
    \ Specifies the roll paper having the\n    width of the longer edge (36 inches)\
    \ of the Architectural D size\n    transparent medium and cuts synchronizing with\
    \ data.\n 'arch-dxsynchro-translucent': Specifies the roll paper having the\n\
    \    width of the longer edge (36 inches) of the Architectural D size\n    translucent\
    \ medium and cuts synchronizing with data.\n 'arch-exsynchro-white': Specifies\
    \ the roll paper having the width of\n    the longer edge (48 inches) of the Architectural\
    \ E size white\n    medium and cuts synchronizing with data.\n 'arch-exsynchro-transparent':\
    \ Specifies the roll paper having the\n    width of the longer edge (48 inches)\
    \ of the Architectural E size\n    transparent medium and cuts synchronizing with\
    \ data.\n 'arch-exsynchro-translucent': Specifies the roll paper having the\n\
    \    width of the longer edge (48 inches) of the Architectural E size\n    translucent\
    \ medium and cuts synchronizing with data.\n   The following standard values are\
    \ defined for Japanese and European\n   Standard (i.e. ISO) engineering media,\
    \ which are of a long fixed size\n   [ASME-Y14.1M]:\n 'iso-a1x3-white': Specifies\
    \ the ISO A1X3 white medium having the\n      width of the longer edge (841 mm)\
    \ of the ISO A1 medium\n 'iso-a1x3-transparent': Specifies the ISO A1X3 transparent\
    \ medium\n      having the width of the longer edge (841 mm) of the ISO A1\n \
    \     medium\n 'iso-a1x3-translucent': Specifies the ISO A1X3 translucent medium\n\
    \      having the width of the longer edge (841 mm) of the ISO A1\n      medium\n\
    \ 'iso-a1x4-white': Specifies the ISO A1X4 white medium having the\n      width\
    \ of the longer edge (841 mm) of the ISO A1 medium\n 'iso-a1x4-transparent': Specifies\
    \ the ISO A1X4 transparent medium\n      having the width of the longer edge (841\
    \ mm) of the ISO A1\n      medium\n 'iso-a1x4- translucent': Specifies the ISO\
    \ A1X4 translucent medium\n      having the width of the longer edge (841 mm)\
    \ of the ISO A1\n      medium\n 'iso-a2x3-white': Specifies the ISO A2X3 white\
    \ medium having the\n      width of the longer edge (594 mm) of the ISO A2 medium\n\
    \ 'iso-a2x3-transparent': Specifies the ISO A2X3 transparent medium\n      having\
    \ the width of the longer edge (594 mm) of the ISO A2\n      medium\n 'iso-a2x3-translucent':\
    \ Specifies the ISO A2X3 translucent medium\n      having the width of the longer\
    \ edge (594 mm) of the ISO A2\n      medium\n 'iso-a2x4-white': Specifies the\
    \ ISO A2X4 white medium having the\n      width of the longer edge (594 mm) of\
    \ the ISO A2 medium\n 'iso-a2x4-transparent': Specifies the ISO A2X4 transparent\
    \ medium\n      having the width of the longer edge (594 mm) of the ISO A2\n \
    \     medium\n 'iso-a2x4-translucent': Specifies the ISO A2X4 translucent medium\n\
    \      having the width of the longer edge (594 mm) of the ISO A2\n      medium\n\
    \ 'iso-a2x5-white': Specifies the ISO A2X5 white medium having the\n      width\
    \ of the longer edge (594 mm) of the ISO A2 medium\n 'iso-a2x5-transparent': Specifies\
    \ the ISO A2X5 transparent medium\n      having the width of the longer edge (594\
    \ mm) of the ISO A2\n      medium\n 'iso-a2x5-translucent': Specifies the ISO\
    \ A2X5 translucent medium\n      having the width of the longer edge (594 mm)\
    \ of the ISO A2\n      medium\n 'iso-a3x3-white': Specifies the ISO A3X3 white\
    \ medium having the\n      width of the longer edge (420 mm) of the ISO A3 medium\n\
    \ 'iso-a3x3-transparent': Specifies the ISO A3X3 transparent medium\n      having\
    \ the width of the longer edge (420 mm) of the ISO A3\n      medium\n 'iso-a3x3-translucent':\
    \ Specifies the ISO A3X3 translucent medium\n      having the width of the longer\
    \ edge (420 mm) of the ISO A3\n      medium\n 'iso-a3x4-white': Specifies the\
    \ ISO A3X4 white medium having the\n      width of the longer edge (420 mm) of\
    \ the ISO A3 medium\n 'iso-a3x4-transparent': Specifies the ISO A3X4 transparent\
    \ medium\n      having the width of the longer edge (420 mm) of the ISO A3\n \
    \     medium\n 'iso-a3x4-translucent': Specifies the ISO A3X4 translucent medium\n\
    \      having the width of the longer edge (420 mm) of the ISO A3\n      medium\n\
    \ 'iso-a3x5-white': Specifies the ISO A3X5 white medium having the\n      width\
    \ of the longer edge (420 mm) of the ISO A3 medium\n 'iso-a3x5-transparent': Specifies\
    \ the ISO A3X5 transparent medium\n      having the width of the longer edge (420\
    \ mm) of the ISO A3\n      medium\n 'iso-a3x5-translucent': Specifies the ISO\
    \ A3X5 translucent medium\n      having the width of the longer edge (420 mm)\
    \ of the ISO A3\n      medium\n 'iso-a3x6-white': Specifies the ISO A3X6 white\
    \ medium having the\n      width of the longer edge (420 mm) of the ISO A3 medium\n\
    \ 'iso-a3x6-transparent': Specifies the ISO A3X6 transparent medium\n      having\
    \ the width of the longer edge (420 mm) of the ISO A3\n      medium\n 'iso-a3x6-translucent':\
    \ Specifies the ISO A3X6 translucent medium\n      having the width of the longer\
    \ edge (420 mm) of the ISO A3\n      medium\n 'iso-a3x7-white': Specifies the\
    \ ISO A3X7 white medium having the\n      width of the longer edge (420 mm) of\
    \ the ISO A3 medium\n 'iso-a3x7-transparent': Specifies the ISO A3X7 transparent\
    \ medium\n      having the width of the longer edge (420 mm) of the ISO A3\n \
    \     medium\n 'iso-a3x7-translucent'': Specifies the ISO A3X7 translucent' medium\n\
    \      having the width of the longer edge (420 mm) of the ISO A3\n      medium\n\
    \ 'iso-a4x3-white': Specifies the ISO A4X3 white medium having the\n      width\
    \ of the longer edge (297 mm) of the ISO A4 medium\n 'iso-a4x3-transparent': Specifies\
    \ the ISO A4X3 transparent medium\n      having the width of the longer edge (297\
    \ mm) of the ISO A4\n      medium\n 'iso-a4x3-translucent'': Specifies the ISO\
    \ A4X3 translucent' medium\n      having the width of the longer edge (297 mm)\
    \ of the ISO A4\n      medium\n 'iso-a4x4-white': Specifies the ISO A4X4 white\
    \ medium having the\n      width of the longer edge (297 mm) of the ISO A4 medium\n\
    \ 'iso-a4x4-transparent': Specifies the ISO A4X4 transparent medium\n      having\
    \ the width of the longer edge (297 mm) of the ISO A4\n      medium\n 'iso-a4x4-translucent':\
    \ Specifies the ISO A4X4 translucent medium\n      having the width of the longer\
    \ edge (297 mm) of the ISO A4\n      medium\n 'iso-a4x5-white': Specifies the\
    \ ISO A4X5 white medium having the\n      width of the longer edge (297 mm) of\
    \ the ISO A4 medium\n 'iso-a4x5-transparent': Specifies the ISO A4X5 transparent\
    \ medium\n      having the width of the longer edge (297 mm) of the ISO A4\n \
    \     medium\n 'iso-a4x5-translucent': Specifies the ISO A4X5 translucent medium\n\
    \      having the width of the longer edge (297 mm) of the ISO A4\n      medium\n\
    \ 'iso-a4x6-white': Specifies the ISO A4X6 white medium having the\n      width\
    \ of the longer edge (297 mm) of the ISO A4 medium\n 'iso-a4x6-transparent': Specifies\
    \ the ISO A4X6 transparent medium\n      having the width of the longer edge (297\
    \ mm) of the ISO A4\n      medium\n 'iso-a4x6-translucent': Specifies the ISO\
    \ A4X6 translucent medium\n      having the width of the longer edge (297 mm)\
    \ of the ISO A4\n      medium\n 'iso-a4x7-white': Specifies the ISO A4X7 white\
    \ medium having the\n      width of the longer edge (297 mm) of the ISO A4 medium\n\
    \ 'iso-a4x7-transparent': Specifies the ISO A4X7 transparent medium\n      having\
    \ the width of the longer edge (297 mm) of the ISO A4\n      medium\n 'iso-a4x7-translucent':\
    \ Specifies the ISO A4X7 translucent medium\n      having the width of the longer\
    \ edge (297 mm) of the ISO A4\n      medium\n 'iso-a4x8-white': Specifies the\
    \ ISO A4X8 white medium having the\n      width of the longer edge (297 mm) of\
    \ the ISO A4 medium\n 'iso-a4x8-transparent': Specifies the ISO A4X8 transparent\
    \ medium\n      having the width of the longer edge (297 mm) of the ISO A4\n \
    \     medium\n 'iso-a4x8-translucent': Specifies the ISO A4X8 translucent medium\n\
    \      having the width of the longer edge (297 mm) of the ISO A4\n      medium\n\
    \ 'iso-a4x9-white': Specifies the ISO A4X9 white medium having the\n      width\
    \ of the longer edge (297 mm) of the ISO A4 medium\n 'iso-a4x9-transparent': Specifies\
    \ the ISO A4X9 transparent medium\n      having the width of the longer edge (297\
    \ mm) of the ISO A4\n      medium\n 'iso-a4x9-translucent': Specifies the ISO\
    \ A4X9 translucent medium\n      having the width of the longer edge (297 mm)\
    \ of the ISO A4\n      medium\n   The following standard values are defined for\
    \ Japanese and European\n   Standard (i.e. ISO) engineering media, which are either\
    \ a long fixed\n   size [ASME-Y14.1M] or roll feed, for devices that provide the\n\
    \   \"synchro-cut\" feature (see section 14.1):\n 'iso-a0xsynchro-white': Specifies\
    \ the paper having the width of the\n      longer edge (1189 mm) of the ISO A0\
    \ white medium and cuts\n      synchronizing with data.\n 'iso-a0xsynchro-transparent':\
    \ Specifies the paper having the width of\n      the longer edge (1189 mm) of\
    \ the ISO A0 transparent medium and\n      cuts synchronizing with data.\n 'iso-a0xsynchro-translucent':\
    \ Specifies the paper having the width of\n      the longer edge (1189 mm) of\
    \ the ISO A0 translucent medium and\n      cuts synchronizing with data.\n 'iso-a1xsynchro-white':\
    \ Specifies the paper having the width of the\n      longer edge (841 mm) of the\
    \ ISO A1 white medium and cuts\n      synchronizing with data.\n 'iso-a1xsynchro-transparent':\
    \ Specifies the paper having the width of\n      the longer edge (841 mm) of the\
    \ ISO A1 transparent medium and\n      cuts synchronizing with data.\n 'iso-a1xsynchro-translucent':\
    \ Specifies the paper having the width of\n      the longer edge (841 mm) of the\
    \ ISO A1 translucent medium and\n      cuts synchronizing with data.\n 'iso-a2xsynchro-white':\
    \ Specifies the paper having the width of the\n      longer edge (594 mm) of the\
    \ ISO A2 white medium and cuts\n      synchronizing with data.\n 'iso-a2xsynchro-transparent':\
    \ Specifies the paper having the width of\n      the longer edge (594 mm) of the\
    \ ISO A2 transparent medium and\n      cuts synchronizing with data.\n 'iso-a2xsynchro-translucent':\
    \ Specifies the paper having the width of\n      the longer edge (594 mm) of the\
    \ ISO A2 translucent medium and\n      cuts synchronizing with data.\n 'iso-a3xsynchro-white':\
    \ Specifies the paper having the width of the\n      longer edge (420 mm) of the\
    \ ISO A3 white medium and cuts\n      synchronizing with data.\n 'iso-a3xsynchro-transparent':\
    \ Specifies the paper having the width of\n      the longer edge (420 mm) of the\
    \ ISO A3 transparent medium and\n      cuts synchronizing with data.\n 'iso-a3xsynchro-translucent':\
    \ Specifies the paper having the width of\n      the longer edge (420 mm) of the\
    \ ISO A3 translucent medium and\n      cuts synchronizing with data.\n 'iso-a4xsynchro-white':\
    \ Specifies the paper having the width of the\n      longer edge (297 mm) of the\
    \ ISO A4 white medium and cuts\n      synchronizing with data.\n 'iso-a4xsynchro-transparent':\
    \ Specifies the paper having the width of\n      the longer edge (297 mm) of the\
    \ ISO A4 transparent medium and\n      cuts synchronizing with data.\n 'iso-a4xsynchro-translucent':\
    \ Specifies the paper having the width of\n      the longer edge (297 mm) of the\
    \ ISO A4 transparent medium and\n      cuts synchronizing with data.\n   The following\
    \ standard values are defined for American Standard (i.e.\n   ANSI) engineering\
    \ media, American Architectural engineering media,\n   and Japanese and European\
    \ Standard (i.e. ISO) engineering media,\n   which are either a long fixed size\
    \ [ASME-Y14.1M] or roll feed, for\n   devices that provide the \"synchro-cut\"\
    \ feature and/or the \"auto-\n   select\" feature (see section 14.1):\n 'auto-white':\
    \ Specifies that the printer selects the white medium\n      with the appropriate\
    \ fixed size (e.g. a1, a2, etc.) or data-\n      synchro size, and the selection\
    \ is implementation-defined.\n 'auto-transparent': Specifies that the printer\
    \ selects the\n      transparent medium with the appropriate fixed size (e.g.\
    \ a1, a2,\n      etc.) or data-synchro size, and the selection is implementation-\n\
    \      defined.\n 'auto-translucent': Specifies that the printer selects the\n\
    \      translucent medium with the appropriate fixed size (e.g. a1, a2,\n    \
    \  etc.) or data-synchro size, and the selection is implementation-\n      defined.\n\
    \ 'auto-fixed-size-white': Specifies that the printer selects the white\n    \
    \  medium with the appropriate fixed size (e.g. a1, a2, etc.) or\n      the appropriate\
    \ long fixed size listed above.\n 'auto-fixed-size-transparent': Specifies that\
    \ the printer selects the\n      transparent medium with the appropriate fixed\
    \ size (e.g. a1, a2,\n      etc.) or the appropriate long fixed size listed above.\n\
    \ 'auto-fixed-size-translucent': Specifies that the printer selects the\n    \
    \  translucent medium with the appropriate fixed size (e.g. a1, a2,\n      etc.)\
    \ or the appropriate long fixed size listed above.\n 'auto-synchro-white': Specifies\
    \ that the printer selects the white\n      paper with the appropriate width and\
    \ cuts it synchronizing with\n      data.\n 'auto-synchro-transparent': Specifies\
    \ that the printer selects the\n      transparent paper with the appropriate width\
    \ and cuts it\n      synchronizing with data.\n 'auto-synchro-translucent': Specifies\
    \ that the printer selects the\n      translucent paper with the appropriate width\
    \ and cuts it\n      synchronizing with data.\n   The following standard values\
    \ are defined for input-trays (from ISO\n   DPA and the Printer MIB):\n    'top':\
    \ The top input tray in the printer.\n    'middle': The middle input tray in the\
    \ printer.\n    'bottom': The bottom input tray in the printer.\n    'envelope':\
    \ The envelope input tray in the printer.\n    'manual': The manual feed input\
    \ tray in the printer.\n    'large-capacity': The large capacity input tray in\
    \ the printer.\n    'main': The main input tray\n    'side': The side input tray\n\
    \   The following standard values are defined for media sizes (from ISO\n   DPA):\n\
    \ 'iso-a0': Specifies the ISO A0 size: 841 mm by 1189 mm as defined in\n    ISO\
    \ 216\n 'iso-a1': Specifies the ISO A1 size: 594 mm by 841 mm as defined in\n\
    \    ISO 216\n 'iso-a2': Specifies the ISO A2 size: 420 mm by 594 mm as defined\
    \ in\n    ISO 216\n 'iso-a3': Specifies the ISO A3 size: 297 mm by 420 mm as defined\
    \ in\n    ISO 216\n 'iso-a4': Specifies the ISO A4 size: 210 mm by 297 mm as defined\
    \ in\n    ISO 216\n 'iso-a5': Specifies the ISO A5 size: 148 mm by 210 mm as defined\
    \ in\n    ISO 216\n 'iso-a6': Specifies the ISO A6 size: 105 mm by 148 mm as defined\
    \ in\n    ISO 216\n 'iso-a7': Specifies the ISO A7 size: 74 mm by 105 mm as defined\
    \ in\n    ISO 216\n 'iso-a8': Specifies the ISO A8 size: 52 mm by 74 mm as defined\
    \ in ISO\n    216\n 'iso-a9': Specifies the ISO A9 size: 37 mm by 52 mm as defined\
    \ in ISO\n    216\n 'iso-a10': Specifies the ISO A10 size: 26 mm by 37 mm as defined\
    \ in\n    ISO 216\n 'iso-b0': Specifies the ISO B0 size: 1000 mm by 1414 mm as\
    \ defined in\n    ISO 216\n 'iso-b1': Specifies the ISO B1 size: 707 mm by 1000\
    \ mm as defined in\n    ISO 216\n 'iso-b2': Specifies the ISO B2 size: 500 mm\
    \ by 707 mm as defined in\n    ISO 216\n 'iso-b3': Specifies the ISO B3 size:\
    \ 353 mm by 500 mm as defined in\n    ISO 216\n 'iso-b4': Specifies the ISO B4\
    \ size: 250 mm by 353 mm as defined in\n    ISO 216\n 'iso-b5': Specifies the\
    \ ISO B5 size: 176 mm by 250 mm as defined in\n    ISO 216\n 'iso-b6': Specifies\
    \ the ISO B6 size: 125 mm by 176 mm as defined in\n    ISO 216\n 'iso-b7': Specifies\
    \ the ISO B7 size: 88 mm by 125 mm as defined in\n    ISO 216\n 'iso-b8': Specifies\
    \ the ISO B8 size: 62 mm by 88 mm as defined in ISO\n    216\n 'iso-b9': Specifies\
    \ the ISO B9 size: 44 mm by 62 mm as defined in ISO\n    216\n 'iso-b10': Specifies\
    \ the ISO B10 size: 31 mm by 44 mm as defined in\n    ISO 216\n 'na-letter': Specifies\
    \ the North American letter size: 8.5 inches by\n    11 inches\n 'na-legal': Specifies\
    \ the North American legal size: 8.5 inches by 14\n    inches\n 'na-8x10': Specifies\
    \ the North American 8 inches by 10 inches\n 'na-5x7': Specifies the North American\
    \ 5 inches by 7 inches\n 'executive': Specifies the executive size (7.25 X 10.5\
    \ in)\n 'folio': Specifies the folio size (8.5 X 13 in)\n 'invoice': Specifies\
    \ the invoice size (5.5 X 8.5 in)\n 'ledger': Specifies the ledger size (11 X\
    \ 17 in)\n 'quarto': Specifies the quarto size (8.5 X 10.83 in)\n 'iso-c3': Specifies\
    \ the ISO C3 size: 324 mm by 458 mm as defined in\n    ISO 269\n 'iso-c4': Specifies\
    \ the ISO C4 size: 229 mm by 324 mm as defined in\n    ISO 269\n 'iso-c5': Specifies\
    \ the ISO C5 size: 162 mm by 229 mm as defined in\n    ISO 269\n 'iso-c6': Specifies\
    \ the ISO C6 size: 114 mm by 162 mm as defined in\n    ISO 269\n 'iso-designated-long':\
    \ Specifies the ISO Designated Long size: 110 mm\n    by 220 mm as defined in\
    \ ISO 269\n 'na-10x13-envelope': Specifies the North American 10x13 size: 10\n\
    \    inches by 13 inches\n 'na-9x12-envelope': Specifies the North American 9x12\
    \ size: 9 inches\n    by 12 inches\n 'na-number-10-envelope': Specifies the North\
    \ American number 10\n    business envelope size: 4.125 inches by 9.5 inches\n\
    \ 'na-7x9-envelope': Specifies the North American 7x9 inch envelope\n    size\n\
    \ 'na-9x11-envelope': Specifies the North American 9x11 inch envelope\n    size\n\
    \ 'na-10x14-envelope': Specifies the North American 10x14 inch envelope\n    size\n\
    \ 'na-number-9-envelope': Specifies the North American number 9\n    business\
    \ envelope size\n 'na-6x9-envelope': Specifies the North American 6x9 envelope\
    \ size\n 'na-10x15-envelope': Specifies the North American 10x15 envelope size\n\
    \ 'monarch-envelope': Specifies the Monarch envelope size (3.87 x 7.5\n    in)\n\
    \ 'jis-b0': Specifies the JIS B0 size: 1030mm x 1456mm\n 'jis-b1': Specifies the\
    \ JIS B1 size: 728mm x 1030mm\n 'jis-b2': Specifies the JIS B2 size: 515mm x 728mm\n\
    \ 'jis-b3': Specifies the JIS B3 size: 364mm x 515mm\n 'jis-b4': Specifies the\
    \ JIS B4 size: 257mm x 364mm\n 'jis-b5': Specifies the JIS B5 size: 182mm x 257mm\n\
    \ 'jis-b6': Specifies the JIS B6 size: 128mm x 182mm\n 'jis-b7': Specifies the\
    \ JIS B7 size: 91mm x 128mm\n 'jis-b8': Specifies the JIS B8 size: 64mm x 91mm\n\
    \ 'jis-b9': Specifies the JIS B9 size: 45mm x 64mm\n 'jis-b10': Specifies the\
    \ JIS B10 size: 32mm x 45mm\n   The following standard values are defined for\
    \ American Standard (i.e.\n   ANSI) engineering media sizes:\n    'a': Specifies\
    \ the engineering ANSI A size medium: 8.5 inches x 11\n       inches\n    'b':\
    \ Specifies the engineering ANSI B size medium: 11 inches x 17\n       inches\n\
    \    'c': Specifies the engineering ANSI C size medium: 17 inches x 22\n     \
    \  inches\n    'd': Specifies the engineering ANSI D size medium: 22 inches x\
    \ 34\n       inches\n    'e': Specifies the engineering ANSI E size medium: 34\
    \ inches x 44\n       inches\n   The following standard values are defined for\
    \ American Architectural\n   engineering media sizes:\n    'arch-a': Specifies\
    \ the Architectural A size medium: 9 inches x 12\n       inches\n    'arch-b':\
    \ Specifies the Architectural B size medium: 12 inches x 18\n       inches\n \
    \   'arch-c': Specifies the Architectural C size medium: 18 inches x 24\n    \
    \   inches\n    'arch-d': Specifies the Architectural D size medium: 24 inches\
    \ x 36\n       inches\n    'arch-e': Specifies the Architectural E size medium:\
    \ 36 inches x 48\n       inches\n"
- title: 14.1. Examples
  contents:
  - "14.1. Examples\n   Below are examples to supplement the engineering media value\n\
    \   definitions.\n   Example 1:  \"Synchro-Cut\", a device cutting the roll paper\
    \ in\n   synchronization with the data\n     data height:          A1 height\n\
    \     data width (shaded):  A1 width < data width < (A1 width) x 2\n     specified\
    \ value:      'iso-a1xsynchro-white'\n               |                    |\n\
    \               |<--- data width --->|\n               |                    |\n\
    \               |              |     |        |\n               |<- A1 width ->|<-\
    \ A1 width ->|\n               |              |     |        |\n     cross  ^\
    \  |              |     |        |\n      feed  |  +--------------------------------------------/\n\
    \ direction  |  |//////////////|/////|        |     ^       /\n            | \
    \ |//////////////|/////|        |     |      /\n            |  |//////////////|/////|\
    \        |     |     /\n            |  |//////////////|/////|        |     | \
    \    \\\n"
- title: <-----------+- |//////////////|/////|        |    A1      \  roll
  contents:
  - '<-----------+- |//////////////|/////|        |    A1      \  roll

    '
- title: feed        |  |//////////////|/////|        |   height    \  paper
  contents:
  - 'feed        |  |//////////////|/////|        |   height    \  paper

    '
- title: direction      |//////////////|/////|        |     |        \
  contents:
  - "direction      |//////////////|/////|        |     |        \\\n            \
    \   |//////////////|/////|        |     |        /\n               |//////////////|/////|\
    \        |     v       /\n               +------------------------------------------/\n\
    \                                    |\n                                    |\n\
    \                                    |<------ CUT HERE (to synchronize\n     \
    \                               |                with data width)\n          \
    \                          |\n   Example 2: \"Auto-Cut\", a device cutting the\
    \ roll paper at multiples\n   of fixed-size media width\n     data height:   \
    \       A1 height\n     data width (shaded):  A1 width < data width < (A1 width)\
    \ x 2\n     specified value:      'auto-fixed-size-white'\n                 |\
    \                    |\n                 |<--- data width --->|\n            \
    \     |                    |\n                 |              |     |        |\n\
    \                 |<- A1 width ->|<- A1 width ->|\n                 |        \
    \      |     |        |\n     cross  ^    |              |     |        |\n  \
    \    feed  |    +--------------------------------------------/\n direction  |\
    \    |//////////////|/////|        |     ^       /\n            |    |//////////////|/////|\
    \        |     |      /\n            |    |//////////////|/////|        |    \
    \ |     /\n            |    |//////////////|/////|        |     |     \\\n"
- title: <-----------+-   |//////////////|/////|        |    A1      \  roll
  contents:
  - '<-----------+-   |//////////////|/////|        |    A1      \  roll

    '
- title: feed        |    |//////////////|/////|        |   height    \  paper
  contents:
  - 'feed        |    |//////////////|/////|        |   height    \  paper

    '
- title: direction        |//////////////|/////|        |     |        \
  contents:
  - "direction        |//////////////|/////|        |     |        \\\n          \
    \       |//////////////|/////|        |     |        /\n                 |//////////////|/////|\
    \        |     v       /\n                 +------------------------------------------/\n\
    \                                               |\n                          \
    \                     |\n                                               |<---\
    \ CUT HERE\n                                               |      (to synchronize\n\
    \                                               |       with data width)\n   Example\
    \ 3:  the 'iso-a4x4-white' fixed size paper\n     paper height:         A4 height\n\
    \     paper width:          (A4 width) x 4\n     specified value:      'iso-a4x4-white'\n\
    \   |              |              |              |              |\n   |<- A4 width\
    \ ->|<- A4 width ->|<- A4 width ->|<- A4 width ->|\n   |              |      \
    \        |              |              |\n   |              |              | \
    \             |              |\n   +-----------------------------------------------------------+\n\
    \   |       ^      |              |              |              |\n   |      \
    \ |      |              |              |              |\n   |       |      | \
    \             |              |              |\n   |      A4      |           \
    \   |              |              |\n   |    height    |              |      \
    \        |              |\n   |       |      |              |              | \
    \             |\n   |       |      |              |              |           \
    \   |\n   |       |      |              |              |              |\n   |\
    \       v      |              |              |              |\n   +-----------------------------------------------------------+\n\
    \   Example 4: \"Synchro-Cut\", a device cutting the fixed size paper in\n   synchronization\
    \ with the data\n     data height:          A4 height\n     data width (shaded):\
    \  (A4 width) x 2 < data width < (A4 width) x 3\n     specified value:      'iso-a4xsynchro-white'\n\
    \                    |                                   |\n                 \
    \   |<---------- data width ----------->|\n                    |             \
    \                      |\n                    |              |              |\
    \     |        |\n                    |<- A4 width ->|<- A4 width ->|<- A4 width\
    \ ->|\n                    |              |              |     |        |\n  \
    \      cross  ^    |              |              |     |        |\n         feed\
    \  |    +--------------------------------------------+\n    direction  |    |//////////////|//////////////|/////|\
    \    ^   |\n               |    |//////////////|//////////////|/////|    |   |\n\
    \               |    |//////////////|//////////////|/////|    |   |\n        \
    \       |    |//////////////|//////////////|/////|    |   |\n   <-----------+-\
    \   |//////////////|//////////////|/////|   A4   |\n   feed        |    |//////////////|//////////////|/////|\
    \ height |\n   direction        |//////////////|//////////////|/////|    |   |\n\
    \                    |//////////////|//////////////|/////|    |   |\n        \
    \            |//////////////|//////////////|/////|    v   |\n                \
    \    +--------------------------------------------+\n                        \
    \                                |\n                                         \
    \ CUT HERE ---->|\n                                    (to synchronize     |\n\
    \                                    with data width)    |\n"
- title: '15. APPENDIX D: Processing IPP Attributes'
  contents:
  - "15. APPENDIX D: Processing IPP Attributes\n   When submitting a print job to\
    \ a Printer object, the IPP model allows\n   a client to supply operation and\
    \ Job Template attributes along with\n   the document data.  These Job Template\
    \ attributes in the create\n   request affect the rendering, production and finishing\
    \ of the\n   documents in the job.  Similar types of instructions may also be\n\
    \   contained in the document to be printed, that is, embedded within the\n  \
    \ print data itself.  In addition, the Printer has a set of attributes\n   that\
    \ describe what rendering and finishing options which are\n   supported by that\
    \ Printer.  This model, which allows for flexibility\n   and power, also introduces\
    \ the potential that at job submission time,\n   these client-supplied attributes\
    \ may conflict with either:\n      - what the implementation is capable of realizing\
    \ (i.e., what the\n        Printer supports), as well as\n      - the instructions\
    \ embedded within the print data itself.\n   The following sections describe how\
    \ these two types of conflicts are\n   handled in the IPP model.\n"
- title: 15.1 Fidelity
  contents:
  - "15.1 Fidelity\n   If there is a conflict between what the client requests and\
    \ what a\n   Printer object supports, the client may request one of two possible\n\
    \   conflict handling mechanisms:\n      1) either reject the job since the job\
    \ can not be processed\n         exactly as specified, or\n      2) allow the\
    \ Printer to make any changes necessary to proceed with\n         processing the\
    \ Job the best it can.\n   In the first case the client is indicating to the Printer\
    \ object:\n   \"Print the job exactly as specified with no exceptions, and if\
    \ that\n   can't be done, don't even bother printing the job at all.\" In the\n\
    \   second case, the client is indicating to the Printer object: \"It is\n   more\
    \ important to make sure the job is printed rather than be\n   processed exactly\
    \ as specified; just make sure the job is printed\n   even if some client-supplied\
    \ attributes need to be changed or\n   ignored.\"\n   The IPP model accounts for\
    \ this situation by introducing an \"ipp-\n   attribute-fidelity\" attribute.\n\
    \   In a create request, \"ipp-attribute-fidelity\" is a boolean operation\n \
    \  attribute that is OPTIONALLY supplied by the client.  The value\n   'true'\
    \ indicates that total fidelity to client supplied Job Template\n   attributes\
    \ and values is required.  The client is requesting that the\n   Job be printed\
    \ exactly as specified, and if that is not possible then\n   the job MUST be rejected\
    \ rather than processed incorrectly.  The\n   value 'false' indicates that a reasonable\
    \ attempt to print the Job is\n   acceptable.  If a Printer does not support some\
    \ of the client\n   supplied Job Template attributes or values, the Printer MUST\
    \ ignore\n   them or substitute any supported value for unsupported values,\n\
    \   respectively.  The Printer may choose to substitute the default value\n  \
    \ associated with that attribute, or use some other supported value\n   that is\
    \ similar to the unsupported requested value.  For example, if\n   a client supplies\
    \ a \"media\" value of 'na-letter', the Printer may\n   choose to substitute 'iso-a4'\
    \ rather than a default value of\n   'envelope'. If the client does not supply\
    \ the \"ipp-attribute-\n   fidelity\" attribute, the Printer assumes a value of\
    \ 'false'.\n   Each Printer implementation MUST support both types of \"fidelity\"\
    \n   printing (that is whether the client supplies a value of 'true' or\n   'false'):\n\
    \      - If the client supplies 'false' or does not supply the attribute,\n  \
    \      the Printer object MUST always accept the request by ignoring\n       \
    \ unsupported Job Template attributes and by substituting\n        unsupported\
    \ values of supported Job Template attributes with\n        supported values.\n\
    \      - If the client supplies 'true', the Printer object MUST reject\n     \
    \   the request if the client supplies unsupported Job Template\n        attributes.\n\
    \   Since a client can always query a Printer to find out exactly what is\n  \
    \ and is not supported, \"ipp-attribute-fidelity\" set to 'false' is\n   useful\
    \ when:\n      1) The End-User uses a command line interface to request\n    \
    \     attributes that might not be supported.\n      2) In a GUI context, if the\
    \ End User expects the job might be\n         moved to another printer and prefers\
    \ a sub-optimal result to\n         nothing at all.\n      3) The End User just\
    \ wants something reasonable in lieu of nothing\n         at all.\n"
- title: 15.2 Page Description Language (PDL) Override
  contents:
  - "15.2 Page Description Language (PDL) Override\n   If there is a conflict between\
    \ the value of an IPP Job Template\n   attribute and a corresponding instruction\
    \ in the document data, the\n   value of the IPP attribute SHOULD take precedence\
    \ over the document\n   instruction.  Consider the case where a previously formatted\
    \ file of\n   document data is sent to an IPP Printer.  In this case, if the client\n\
    \   supplies any attributes at job submission time, the client desires\n   that\
    \ those attributes override the embedded instructions.  Consider\n   the case\
    \ were a previously formatted document has embedded in it\n   commands to load\
    \ 'iso-a4' media.  However, the document is passed to\n   an end user that only\
    \ has access to a printer with 'na-letter' media\n   loaded.  That end user most\
    \ likely wants to submit that document to\n   an IPP Printer with the \"media\"\
    \ Job Template attribute set to 'na-\n   letter'.  The job submission attribute\
    \ should take precedence over\n   the embedded PDL instruction.  However, until\
    \ companies that supply\n   document data interpreters allow a way for external\
    \ IPP attributes to\n   take precedence over embedded job production instructions,\
    \ a Printer\n   might not be able to support the semantics that IPP attributes\n\
    \   override the embedded instructions.\n   The IPP model accounts for this situation\
    \ by introducing a \"pdl-\n   override-supported\" attribute that describes the\
    \ Printer objects\n   capabilities to override instructions embedded in the PDL\
    \ data\n   stream.  The value of the \"pdl-override-supported\" attribute is\n\
    \   configured by means outside the scope of this IPP/1.1 document.\n   This REQUIRED\
    \ Printer attribute takes on the following values:\n      - 'attempted': This\
    \ value indicates that the Printer object\n        attempts to make the IPP attribute\
    \ values take precedence over\n        embedded instructions in the document data,\
    \ however there is no\n        guarantee.\n      - 'not-attempted': This value\
    \ indicates that the Printer object\n        makes no attempt to make the IPP\
    \ attribute values take\n        precedence over embedded instructions in the\
    \ document data.\n   At job processing time, an implementation that supports the\
    \ value of\n   'attempted' might do one of several different actions:\n      1)\
    \ Generate an output device specific command sequence to realize\n         the\
    \ feature represented by the IPP attribute value.\n      2) Parse the document\
    \ data itself and replace the conflicting\n         embedded instruction with\
    \ a new embedded instruction that\n         matches the intent of the IPP attribute\
    \ value.\n      3) Indicate to the Printer that external supplied attributes take\n\
    \         precedence over embedded instructions and then pass the\n         external\
    \ IPP attribute values to the document data interpreter.\n      4) Anything else\
    \ that allows for the semantics that IPP attributes\n         override embedded\
    \ document data instructions.\n   Since 'attempted' does not offer any type of\
    \ guarantee, even though a\n   given Printer object might not do a very \"good\"\
    \ job of attempting to\n   ensure that IPP attributes take a higher precedence\
    \ over instructions\n   embedded in the document data, it would still be a conforming\n\
    \   implementation.\n   At job processing time, an implementation that supports\
    \ the value of\n   'not-attempted' might do one of the following actions:\n  \
    \    1) Simply pre-pend the document data with the PDL instruction that\n    \
    \     corresponds to the client-supplied PDL attribute, such that if\n       \
    \  the document data also has the same PDL instruction, it will\n         override\
    \ what the Printer object pre-pended.  In other words,\n         this implementation\
    \ is using the same implementation semantics\n         for the client-supplied\
    \ IPP attributes as for the Printer\n         object defaults.\n      2) Parse\
    \ the document data and replace the conflicting embedded\n         instruction\
    \ with a new embedded instruction that approximates,\n         but does not match,\
    \ the semantic intent of the IPP attribute\n         value.\n   Note:  The \"\
    ipp-attribute-fidelity\" attribute applies to the\n   Printer's ability to either\
    \ accept or reject other unsupported Job\n   Template attributes.  In other words,\
    \ if \"ipp-attribute-fidelity\" is\n   set to 'true', a Job is accepted if and\
    \ only if the client supplied\n   Job Template attributes and values are supported\
    \ by the Printer.\n   Whether these attributes actually affect the processing\
    \ of the Job\n   when the document data contains embedded instructions depends\
    \ on the\n   ability of the Printer to override the instructions embedded in the\n\
    \   document data with the semantics of the IPP attributes.  If the\n   document\
    \ data attributes can be overridden (\"pdl-override-supported\"\n   set to 'attempted'),\
    \ the Printer makes an attempt to use the IPP\n   attributes when processing the\
    \ Job. If the document data attributes\n   can not be overridden (\"pdl-override-supported\"\
    \ set to 'not-\n   attempted'), the Printer makes no attempt to override the embedded\n\
    \   document data instructions with the IPP attributes when processing\n   the\
    \ Job, and hence, the IPP attributes may fail to affect the Job\n   processing\
    \ and output when the corresponding instruction is embedded\n   in the document\
    \ data.\n"
- title: 15.3 Using Job Template Attributes During Document Processing.
  contents:
  - "15.3 Using Job Template Attributes During Document Processing.\n   The Printer\
    \ object uses some of the Job object's Job Template\n   attributes during the\
    \ processing of the document data associated with\n   that job.  These include,\
    \ but are not limited to, \"orientation-\n   requested\", \"number-up\", \"sides\"\
    , \"media\", and \"copies\".  The\n   processing of each document in a Job Object\
    \ MUST follow the steps\n   below. These steps are intended only to identify when\
    \ and how\n   attributes are to be used in processing document data and any\n\
    \   alternative steps that accomplishes the same effect can be used to\n   implement\
    \ this specification document.\n      1. Using the client supplied \"document-format\"\
    \ attribute or some\n         form of document format detection algorithm (if\
    \ the value of\n         \"document-format\" is not specific enough), determine\
    \ whether or\n         not the document data has already been formatted for printing.\n\
    \         If the document data has been formatted, then go to step 2.\n      \
    \   Otherwise, the document data MUST be formatted. The formatting\n         detection\
    \ algorithm is implementation defined and is not\n         specified by this document.\
    \  The formatting of the document\n         data uses the \"orientation-requested\"\
    \ attribute to determine\n         how the formatted print data should be placed\
    \ on a print-stream\n         page, see section 4.2.10 for the details.\n    \
    \  2. The document data is in the form of a print-stream in a known\n        \
    \ media type. The \"page-ranges\" attribute is used to select, as\n         specified\
    \ in section 4.2.7, a sub-sequence of the pages in the\n         print-stream\
    \ that are to be processed and images.\n      3. The input to this step is a sequence\
    \ of print-stream pages.\n         This step is controlled by the \"number-up\"\
    \ attribute. If the\n         value of \"number-up\" is N, then during the processing\
    \ of the\n         print-stream pages, each N print-stream pages are positioned,\n\
    \         as specified in section 4.2.9, to create a single impression.\n    \
    \     If a given document does not have N more print-stream pages,\n         then\
    \ the completion of the impression is controlled by the\n         \"multiple-document-handling\"\
    \ attribute as described in section\n         4.2.4; when the value of this attribute\
    \ is 'single-document' or\n         'single-document-new-sheet', the print-stream\
    \ pages of document\n         data from subsequent documents is used to complete\
    \ the\n         impression.\n         The size(scaling), position(translation)\
    \ and rotation of the\n         print-stream pages on the impression is implementation\
    \ defined.\n         Note that during this process the print-stream pages may\
    \ be\n         rendered to a form suitable for placing on the impression; this\n\
    \         rendering is controlled by the values of the \"printer-\n         resolution\"\
    \ and \"print-quality\" attributes as described in\n         sections 4.2.12 and\
    \ 4.2.13. In the case N=1, the impression is\n         nearly the same as the\
    \ print-stream page; the differences would\n         only be in the size, position\
    \ and rotation of the print-stream\n         page and/or any decoration, such\
    \ as a frame to the page, that\n         is added by the implementation.\n   \
    \   4. The collection of impressions is placed, in sequence, onto\n         sides\
    \ of the media sheets. This placement is controlled by the\n         \"sides\"\
    \ attribute and the orientation of the print-stream page,\n         as described\
    \ in section 4.2.8. The orientation of the print-\n         stream pages affects\
    \ the orientation of the impression; for\n         example, if \"number-up\" equals\
    \ 2, then, typically, two portrait\n         print-stream pages become one landscape\
    \ impression. Note that\n         the placement of impressions onto media sheets\
    \ is also\n         controlled by the \"multiple-document-handling\" attribute\
    \ as\n         described in section 4.2.4.\n      5. The \"copies\" and \"multiple-document-handling\"\
    \ attributes are\n         used to determine how many copies of each media instance\
    \ are\n         created and in what order. See sections 4.2.5 and 4.2.4 for the\n\
    \         details.\n      6. When the correct number of copies are created, the\
    \ media\n         instances are finished according to the values of the\n    \
    \     \"finishings\" attribute as described in 4.2.6. Note that\n         sometimes\
    \ finishing operations may require manual intervention\n         to perform the\
    \ finishing operations on the copies, especially\n         uncollated copies.\
    \ This document allows any or all of the\n         processing steps to be performed\
    \ automatically or manually at\n         the discretion of the Printer object.\n"
- title: '16. APPENDIX E: Generic Directory Schema'
  contents:
  - "16. APPENDIX E: Generic Directory Schema\n   This section defines a generic schema\
    \ for an entry in a directory\n   service.  A directory service is a means by\
    \ which service users can\n   locate service providers.  In IPP environments,\
    \ this means that IPP\n   Printers can be registered (either automatically or\
    \ with the help of\n   an administrator) as entries of type printer in the directory\
    \ using\n   an implementation specific mechanism such as entry attributes, entry\n\
    \   type fields, specific branches, etc.  Directory clients can search or\n  \
    \ browse for entries of type printer.  Clients use the directory\n   service to\
    \ find entries based on naming, organizational contexts, or\n   filtered searches\
    \ on attribute values of entries.  For example, a\n   client can find all printers\
    \ in the \"Local Department\" context.\n   Authentication and authorization are\
    \ also often part of a directory\n   service so that an administrator can place\
    \ limits on end users so\n   that they are only allowed to find entries to which\
    \ they have certain\n   access rights.  IPP itself does not require any specific\
    \ directory\n   service protocol or provider.\n   Note: Some directory implementations\
    \ allow for the notion of\n   \"aliasing\".  That is, one directory entry object\
    \ can appear as\n   multiple directory entry object with different names for each\
    \ object.\n   In each case, each alias refers to the same directory entry object\n\
    \   which refers to a single IPP Printer object.\n   The generic schema is a subset\
    \ of IPP Printer Job Template and\n   Printer Description attributes (sections\
    \ 4.2 and 4.4).  These\n   attributes are identified as either RECOMMENDED or\
    \ OPTIONAL for the\n   directory entry itself.  This conformance labeling is NOT\
    \ the same\n   conformance labeling applied to the attributes of IPP Printers\n\
    \   objects.  The conformance labeling in this Appendix is intended to\n   apply\
    \ to directory templates and to IPP Printer implementations that\n   subscribe\
    \ by adding one or more entries to a directory.  RECOMMENDED\n   attributes SHOULD\
    \ be associated with each directory entry.  OPTIONAL\n   attributes MAY be associated\
    \ with the directory entry (if known or\n   supported).  In addition, all directory\
    \ entry attributes SHOULD\n   reflect the current attribute values for the corresponding\
    \ Printer\n   object.\n   The names of attributes in directory schema and entries\
    \ SHOULD be the\n   same as the IPP Printer attribute names as shown, as much\
    \ as\n   possible.\n   In order to bridge between the directory service and the\
    \ IPP Printer\n   object, one of the RECOMMENDED directory entry attributes is\
    \ the\n   Printer object's \"printer-uri-supported\" attribute.  The directory\n\
    \   client queries the \"printer-uri-supported\" attribute (or its\n   equivalent)\
    \ in the directory entry and then the IPP client addresses\n   the IPP Printer\
    \ object using one of its URIs.  The \"uri-security-\n   supported\" attribute\
    \ identifies the protocol (if any) used to secure\n   a channel.\n   The following\
    \ attributes define the generic schema for directory\n   entries of type PRINTER:\n\
    \     printer-uri-supported              RECOMMENDED    Section 4.4.1\n     uri-authentication-supported\
    \       RECOMMENDED    Section 4.4.2\n     uri-security-supported            \
    \ RECOMMENDED    Section 4.4.3\n     printer-name                       RECOMMENDED\
    \    Section 4.4.4\n     printer-location                   RECOMMENDED    Section\
    \ 4.4.5\n     printer-info                       OPTIONAL       Section 4.4.6\n\
    \     printer-more-info                  OPTIONAL       Section 4.4.7\n     printer-make-and-model\
    \             RECOMMENDED    Section 4.4.9\n     ipp-versions-supported      \
    \       RECOMMENDED    Section 4.4.14\n     multiple-document-jobs-supported \
    \  OPTIONAL       Section 4.4.16\n     charset-supported                  OPTIONAL\
    \       Section 4.4.18\n     generated-natural-language-\n        supported  \
    \                     OPTIONAL       Section 4.4.20\n     document-format-supported\
    \          RECOMMENDED    Section 4.4.22\n     color-supported               \
    \     RECOMMENDED    Section 4.4.26\n     compression-supported              RECOMMENDED\
    \    Section 4.4.32\n     pages-per-minute                   OPTIONAL       Section\
    \ 4.4.36\n     pages-per-minute-color             OPTIONAL       Section 4.4.37\n\
    \     finishings-supported               OPTIONAL       Section 4.2.6\n     number-up-supported\
    \                OPTIONAL       Section 4.2.7\n     sides-supported          \
    \          RECOMMENDED    Section 4.2.8\n     media-supported                \
    \    RECOMMENDED    Section 4.2.11\n     printer-resolution-supported       OPTIONAL\
    \       Section 4.2.12\n     print-quality-supported            OPTIONAL     \
    \  Section 4.2.13\n"
- title: '17. APPENDIX F:  Differences between the IPP/1.0 and IPP/1.1 "Model and'
  contents:
  - "17. APPENDIX F:  Differences between the IPP/1.0 and IPP/1.1 \"Model and\n  \
    \  Semantics\" Documents\n   This Appendix is divided into two lists that summarize\
    \ the\n   differences between IPP/1.1 (this document) and IPP/1.0 [RFC2566].\n\
    \   The section numbers refer to the numbers in this document which in\n   some\
    \ cases have changed from RFC 2566.  When a change affects\n   multiple sections,\
    \ the item is listed once in the order of the first\n   section affected and the\
    \ remaining affected section numbers are\n   indicated.\n   The first list contains\
    \ extensions and clarifications and the second\n   list contains changes in semantics\
    \ or conformance.  However, client\n   and IPP object implementations of IPP/1.0\
    \ MAY implement any of the\n   extensions and clarifications in this document.\n\
    \   The following extensions and clarifications have been incorporated\n   into\
    \ this document:\n      1.  Section 2.1 - clarified that the term \"client\" can\
    \ be either\n          contained in software controlled by an end user or a part\
    \ of a\n          print server that controls devices.\n      2.  Section 2 - clarified\
    \ that the term \"IPP object\" and \"Printer\n          object\" can either be\
    \ embedded in a device object or part of a\n          print server that accepts\
    \ IPP requests.\n      3.  Section 2.4 - added the description of the new \"uri-\n\
    \          authentication-supported\" Printer Description attribute.\n      4.\
    \  Section 3.1.3, 3.1.6, 3.2.5.2, and 3.2.6.2 - clarified the\n          error\
    \ handling for operation attributes that have their own\n          status code.\n\
    \      5.  Section 3.1.3 - clarified that multiple occurrences of the\n      \
    \    same attribute in an attribute group is mal-formed.  An IPP\n          Printer\
    \ MAY reject the request or choose one of the\n          attributes.\n      6.\
    \  Section 3.1.6 - reorganized this section into sub-sections to\n          separately\
    \ describe \"status-code\", \"status-message\",\n          \"detailed-status-message\"\
    , and \"document-access-error\"\n          attributes.\n      7.  Section 3.1.6.1\
    \ - clarified the error status codes and their\n          relationship to operation\
    \ attributes.\n      8.  Section 3.1.6.3 - Added the OPTIONAL \"detailed-status-message\n\
    \          (text(MAX))\" operation attribute to provide additional more\n    \
    \      detailed information about a response.\n      9.  Section 3.1.6.4 and 3.2.2\
    \ - Added the OPTIONAL \"document-\n          access-error (text(MAX))\" operation\
    \ attribute for use with\n          Print-URI and Send-URI responses.\n      10.\
    \ Sections 3.1.7 - Added this new section to clarify returning\n          Unsupported\
    \ Attributes for all operations, including only\n          returning attributes\
    \ that were in the request.  Moved the text\n          from section 3.2.1.2 Unsupported\
    \ Attributes to this section.\n      11. Sections 3.1.7 and 4.1 - clarified the\
    \ encoding of the \"out-\n          of-band\" 'unsupported' and 'unknown' values.\n\
    \      12. Section 3.1.8 - clarified that only the version number\n          parameter\
    \ will be carried forward into future major or minor\n          versions of the\
    \ protocol.\n      13. Section 3.1.8 - relaxed the requirements to increment the\n\
    \          major version number in future versions of the Model and\n        \
    \  Semantics document.\n      14. Section 3.1.9, and 3.2.5 - added the 'processing'\
    \ state to the\n          list of job states that a job can be in after a Create-Job\n\
    \          operation.\n      15. Section 3.1.9 - clarified that a non-spooling\
    \ Printer MAY\n          accept zero or more subsequent jobs while processing\
    \ a job and\n          flow control them down.  Subsequent create requests are\n\
    \          rejected with the 'server-error-busy' error status.\n      16. Section\
    \ 3.2.1.1 - clarified the validation of the\n          \"compression\" operation\
    \ attribute and its relationship to the\n          validation of the \"document-format\"\
    \ attribute and returning\n          Unsupported Attributes.\n      17. Sections\
    \ 3.2.1.1, 4.3.8, 13.1.4.16, and 13.1.4.17 - added the\n          'client-error-compression-not-supported',\
    \ 'client-error-\n          compression-error' status codes and the 'unsupported-\n\
    \          compression' and 'compression-error' job-state-reasons.\n      18.\
    \ Sections 3.2.1.1 and 4.3.8 - added 'unsupported-document-\n          format'\
    \ and 'document-format-error' job-state-reasons.\n      19. Sections 3.2.2, 4.3.8\
    \ and 13.1.4.19 - added 'client-error-\n          document-access-error' status\
    \ code and 'document-access-error'\n          job state reason.\n      20. Section\
    \ 3.2.5.2 and 3.2.6.2 - clarified that the Unsupported\n          Attributes group\
    \ MUST NOT include attributes not requested in\n          the Get-Printer-Attributes\
    \ request.\n      21. Section 3.2.6 - clarified that \"limit\" takes precedence\
    \ over\n          \"which-jobs\" and \"my-jobs'.\n      22. Section 3.2.6.2 -\
    \ clarified that Get-Jobs returns\n          'successful-ok' when no jobs to return.\n\
    \      23. Sections 3.2.7, 3.2.8, and 3.2.9 - added the OPTIONAL Pause-\n    \
    \      Printer, Resume-Printer, and Purge-Jobs operations\n      24. Section 3.3.1\
    \  - clarified that the authorization required for\n          a Send-Document\
    \ request MUST be the same user as the Create-\n          Job or an operator.\n\
    \      25. Section 3.3.1.1 - clarified that a Create-Job Send-Document\n     \
    \     with \"last-document\" = 'true' and no data is not an error; its\n     \
    \     a job with no documents.\n      26. Sections 3.3.5, 3.3.6, and 3.3.7 - added\
    \ the OPTIONAL Hold-\n          Job, Release-Job, and Restart-Job operations.\
    \  Clarified the\n          Restart-Job operation so that the Printer MUST re-fetch\
    \ any\n          documents passed by-reference (Print-URI or Send-URI).\n    \
    \  27. Section 4.1 - clarified that the encoding of the out-of-band\n        \
    \  values are specified in the Encoding and Transport\" document.\n      28. Section\
    \ 4.1 - Clarified that the requirement that clients MUST\n          NOT send \"\
    out-of-band\" values in requests applies only to\n          operations defined\
    \ in this document.  Other operations are\n          allowed to define \"out-of-band\"\
    \ values that clients can\n          supply.\n      29. Sections 4.1.1 and 4.1.2\
    \ - clarified that the maximum 'text'\n          and 'name' values of 1023 and\
    \ 255 are for the\n          'textWithoutLanguage' portion of the 'textWithLanguage'\
    \ form,\n          so that the maximum number of octets for the actual text and\n\
    \          name data is the same for the without and with language forms;\n  \
    \        the 'naturalLanguage' part is in addition.\n      30. Section 4.1.9 -\
    \ clarified that 'mimeMediaType' values can\n          include any parameters\
    \ from the IANA Registry, not just\n          charset parameters.\n      31. Section\
    \ 4.1.9.1 - clarified that 'application/octet-stream'\n          auto-sensing\
    \ can happen at create request time and/or\n          job/document processing\
    \ time.\n      32. Section 4.1.9.1 - clarified that auto-sensing involves the\n\
    \          Printer examining some number of octets of document data using\n  \
    \        an implementation-dependent method.\n      33. Section 4.1.14 - clarified\
    \ that the localization of dateTime\n          by the client includes the time\
    \ zone.\n      34. Section 4.2 - clarified that xxx-supported have multiple\n\
    \          keywords and/or names by adding parentheses to the table to\n     \
    \     give:  (1setOf (type3 keyword | name))\n      35. Section 4.2.2 - added\
    \ the 'indefinite' keyword value to the\n          \"job-hold-until\" attribute\
    \ for use with the create operations\n          and Hold-Job and Restart-Job operations.\n\
    \      36. Section 4.2.6 - added more enum values to the \"finishings\" Job\n\
    \          Template attribute.\n      37. Section 4.2.6 - clarified that the landscape\
    \ definition is a\n          rotation of the image with respect to the medium.\n\
    \      38. Section 4.3.7 - added that a forwarding server that cannot get\n  \
    \        any job state MAY return the job's state as 'completed',\n          provided\
    \ that it also return the new 'queued-in-device' job\n          state reason.\n\
    \      39. Section 4.3.7.2 - added the Partitioning of Job States section\n  \
    \        to clarify the concepts of Job Retention, Job History, and Job\n    \
    \      Removal.\n      40. Section 4.3.8 - added 'job-data-insufficient' job state\
    \ reason\n          to indicate whether sufficient data has arrived for the\n\
    \          document to start to be processed.\n      41. Section 4.3.8 - added\
    \ 'document-access-error' job state reason\n          to indicate an access error\
    \ of any kind.\n      42. Section 4.3.8 - added 'job-queued-for-marker' job state\
    \ reason\n          to indicate whether the job has completed some processing\
    \ and\n          is waiting for the marker.\n      43. Section 4.3.8 - added 'unsupported-compression'\
    \ and\n          'compression-error' job state reasons to indicate compression\n\
    \          not supported or compression processing error after the create\n  \
    \        has been accepted.\n      44. Section 4.3.8 - added 'unsupported-document-format'\
    \ and\n          'document-format-error' job state reasons to indicate document\n\
    \          not supported or document format processing error after the\n     \
    \     create has been accepted.\n      45. Section 4.3.8 - added 'queued-in-device'\
    \ job state reason to\n          indicate that a job as been forwarded to a print\
    \ system or\n          device that does not provide any job status.\n      46.\
    \ Section 4.3.10 - added \"job-detailed-status-messages (1setOf\n          text(MAX))\
    \ for returning detailed error messages.\n      47. Section 4.3.11 - added the\
    \ \"job-document-access-errors (1setOf\n          text(MAX))\n      48. Section\
    \ 4.3.14.2 - clarified that the time recorded is the\n          first time processing\
    \ since the create operation or the\n          Restart-Job operation.\n      49.\
    \ Section 4.3.14.2 and 4.3.14.3 - clarified that the out-of-band\n          value\
    \ 'no-value' is returned if the job has not started\n          processing or has\
    \ not completed, respectively.\n      50. Section 4.3.14 - Added the OPTIONAL\
    \ \"date-time-at-creation\",\n          \"date-time-at-processing\", and \"date-time-at-completed\"\
    \ Event\n          Time Job Description attributes\n      51. Section 4.4.3 -\
    \ added the 'tls' value to \"uri-security-\n          supported\" attribute.\n\
    \      52. Section 4.4.3 - clarified \"uri-security-supported\" is\n         \
    \ orthogonal to Client Authentication so that 'none' does not\n          exclude\
    \ Client Authentication.\n      53. Section 4.4.11 - simplified the \"printer-state\"\
    \ descriptions\n          while generalizing to allow high end devices that interpret\n\
    \          one or more jobs while marking another.  Indicated that\n         \
    \ 'spool-area-full' and 'stopped-partly' \"printer-state-reasons\"\n         \
    \ may be used to provide further state information.\n      54. Section 4.4.12\
    \ - added the 'moving-to-paused' keyword value to\n          the \"printer-state-reasons\"\
    \ attribute for use with the Pause-\n          Printer operation.\n      55. Section\
    \ 4.4.12 - replaced the duplicate 'marker-supply-low'\n          keyword with\
    \ the missing 'toner-empty' keyword for the\n          \"printer-state-reasons\"\
    \ attribute.  (This correction was also\n          made before RFC 2566 was published).\n\
    \      56. Section 4.4.12 - clarified 'spool-area-full' \"printer-state-\n   \
    \       reasons\" to include non-spooling printers to indicate when it\n     \
    \     can and cannot accept another job.\n      57. Section 4.4.15 - added the\
    \ enum values to the \"operations-\n          supported\" attribute for the new\
    \ operations.  Clarified that\n          the values of this attribute are encoded\
    \ as any enum, namely\n          32-bit values.\n      58. Section 4.4.30 - clarified\
    \ that the dateTime value of\n          \"printer-current-time\" is on a \"best\
    \ efforts basis\".  If a\n          proper date-time cannot be obtained, the implementation\n\
    \          returns the 'no-value' out-of-band value.  Also clarified that\n  \
    \        the time zone NEED NOT be the time zone that the people near\n      \
    \    the device use and that the client SHOULD display the dateTime\n        \
    \  attributes in the user's local time.\n      59. Sections 4.4.36 and 4.4.37\
    \ - added the OPTIONAL \"pages-per-\n          minute\" and \"pages-per-minute-color\"\
    \ Printer Description\n          attributes.\n      60. Section 5.1 - clarified\
    \ that the client conformance\n          requirements apply to clients controlled\
    \ by an end user and\n          clients in servers.\n      61. Section 5.1 - clarified\
    \ that any response MAY contain\n          additional attribute groups, attributes,\
    \ attribute syntaxes,\n          or attribute values.\n      62. Section 5.1 -\
    \ clarified that a client SHOULD do its best to\n          prevent a channel from\
    \ being closed by a lower layer when the\n          channel is flow controlled\
    \ off by the IPP Printer.\n      63. Section 5.2 - clarified that the IPP object\
    \ requirements apply\n          to objects embedded in devices or that are parts\
    \ of servers.\n      64. Section 5.2.2 - clarified that IPP objects MAY return\n\
    \          operation responses that contain attribute groups, attribute\n    \
    \      names, attribute syntaxes, attribute values, and status codes\n       \
    \   that are extensions to this standard.\n      65. Section 6 - changed the terminology\
    \ of \"private extensions\" to\n          \"vendor extensions\" and indicated\
    \ that they are registered\n          with IANA along with IETF standards track\
    \ extensions.\n      66. Section 6.7 - inserted this section on registering out-of-band\n\
    \          attribute values with IANA as extensions.\n      67. Section 8.3 -\
    \ clarified the use of URIs for each Client\n          Authentication mechanism.\n\
    \      68. Section 8.5 - added the security discussion around the new\n      \
    \    operator/administrator operations.\n      69. Section 13.1.4.16 - added client-error-compression-not-\n\
    \          supported (0x040F)\n      70. Section 13.1.4.17 - added client-error-compression-error\n\
    \          (0x0410)\n      71. Section 13.1.4.18 - added client-error-document-format-error\n\
    \          (0x0411)\n      72. Section 13.1.4.19 - added client-error-document-access-error\n\
    \          (0x0412)\n      73. Section 13.1.5.10 - added server-error-multiple-document-\n\
    \          jobs-not-supported (0x0509)\n      74. Section 14 - added 'a-white',\
    \ 'b-white', 'c-white', 'd-white',\n          and 'e-white' and clarified that\
    \ the existing 'a', 'b', 'c',\n          'd', and 'e' values are size values.\
    \  Added American,\n          Japanese, and European Engineering sizes, filled\
    \ out\n          -transparent and - translucent media names and drawings for\n\
    \          the synchro cut sizes.\n      75. Section 16 - softened the RECOMMENDATION\
    \ for IPP Printer\n          attributes in a Directory schema so that they can\
    \ have\n          equivalents.\n      76. Section 16 - added the OPTIONAL \"pages-per-minute\"\
    \ and\n          \"pages-per-minute-color\" Printer attributes to the Directory\n\
    \          schema.\n      77. Section 16 - added OPTIONAL \"multiple-document-jobs-supported\"\
    \n          to the Directory schema.\n      78. Section 16 - added RECOMMENDED\
    \ \"uri-authentication-supported\",\n          \"ipp-versions-supported\", and\
    \ \"compression-supported\" to the\n          Directory schema.\n   The following\
    \ changes in semantics and/or conformance have been\n   incorporated into this\
    \ document:\n      1.  Section 3.1.6.3 - allowed a Printer to localize the\n \
    \         \"detailed-status-message\" operation response attribute, but\n    \
    \      indicated that such localization might obscure the technical\n        \
    \  meaning of such messages.\n      2.  Section 3.1.8, 5.2.4, and 13.1.5.4 - Clients\
    \ and IPP objects\n          MUST support version 1.1 conformance requirements.\
    \   It is\n          recommended that they interoperate with 1.0.  Also clarified\n\
    \          that IPP Printers MUST accept '1.1' requests.   It is\n          recommended\
    \ that they also accept '1.x' requests.\n      3.  Section 3.2.1.1 and section\
    \ 4.4.32 - changed the \"compression\"\n          operation and the \"compression-supported\"\
    \ Printer Description\n          attribute from OPTIONAL to REQUIRED.\n      4.\
    \  Sections 3.2.1.2 and 4.3.8 - changed \"job-state-reasons\" from\n         \
    \ RECOMMENDED to REQUIRED, so that \"job-state-reasons\" MUST be\n          returned\
    \ in create operation responses.\n      5.  Sections 3.2.4, 3.3.1, 4.4.16, and\
    \ 16 - changed Create-\n          Job/Send-Document so that they MAY be implemented\
    \ while only\n          supporting one document jobs.  Added the \"multiple-document-\n\
    \          jobs-supported\" boolean Printer Description attribute to\n       \
    \   indicate whether Create-Job/Send-Document support multiple\n          document\
    \ jobs or not.  Added to the Directory schema.\n      6.  Section 4.1.9 - deleted\
    \ 'text/plain; charset=iso-10646-ucs-2',\n          since binary is not legal\
    \ with the 'text' type.\n      7.  Section 4.1.9.1 - added the RECOMMENDATION\
    \ that a Printer\n          indicate by printing on the job's job-start-sheet\
    \ that auto-\n          sensing has occurred and what document format was auto-sensed.\n\
    \      8.  Section 4.2.4 - indicated that the \"multiple-document-\n         \
    \ handling\" Job Template attribute MUST be supported with at\n          least\
    \ one value if the Printer supports multiple documents per\n          job\n  \
    \    9.  Section 4.3.7.2 - indicated that the 'job-restartable' job\n        \
    \  state reason SHOULD be supported if the Restart-Job operation\n          is\
    \ supported.\n      10. Section 4.3.8 - changed \"job-state-reasons\" from RECOMMENDED\n\
    \          to REQUIRED.\n      11. Section 4.3.8 - clarified the conformance of\
    \ the values of the\n          \"job-state-reasons\" attribute by copying conformance\n\
    \          requirements from other sections of the document so that it is\n  \
    \        clear from reading the definition of \"job-state-reasons\" which\n  \
    \        values MUST or SHOULD be supported.  The 'none',\n          'unsupported-compression',\
    \ and 'unsupported-document-format'\n          values MUST be supported.  The\
    \ 'job-hold-until-specified'\n          SHOULD be specified if the \"job-hold-until\"\
    \ Job Template is\n          supported.  The following values SHOULD be supported:\
    \  'job-\n          canceled-by-user', 'aborted-by-system', and 'job-completed-\n\
    \          successfully'.  The\n          'job-canceled-by-operator' SHOULD be\
    \ supported if the\n          implementation permits canceling by other than the\
    \ job owner.\n          The 'job-canceled-at-device' SHOULD be supported if the\
    \ device\n          supports canceling jobs at the console.  The 'job-completed-\n\
    \          with-warnings' SHOULD be supported, if the implementation\n       \
    \   detects warnings.  The 'job-completed-with-errors' SHOULD be\n          supported\
    \ if the implementation detects errors.  The 'job-\n          restartable' SHOULD\
    \ be supported if the Restart-Job operation\n          is supported.\n      12.\
    \ Section 4.3.10 - allowed a Printer to localize the \"job-\n          detailed-status-message\"\
    \ Job Description attribute, but\n          indicated that such localization might\
    \ obscure the technical\n          meaning of such messages.\n      13. Section\
    \ 4.3.14 - changed the \"time-at-creation\", \"time-at-\n          processing\"\
    , and \"time-at-completed\" Event Time Job\n          Description attributes from\
    \ OPTIONAL to REQUIRED.\n      14. Section 4.3.14.4 - added the REQUIRED \"job-printer-up-time\n\
    \          (integer(1:MAX))\" Job Description attribute as an alias for\n    \
    \      \"printer-up-time\" to reduce number of operations to get job\n       \
    \   times.\n      15. Section 4.4.2 - added the REQUIRED \"uri-authentication-\n\
    \          supported (1setOf type2 keyword)\" Printer Description\n          attribute\
    \ to describe the Client Authentication used by each\n          Printer URI.\n\
    \      16. Section 4.4.12 - changed \"printer-state-reasons\" Printer\n      \
    \    Description attribute from OPTIONAL to REQUIRED.\n      17. Section 4.4.12\
    \ - changed 'paused' value of \"printer-state-\n          reasons\" to MUST if\
    \ Pause-Printer operation is supported.\n      18. Section 4.4.14 - added the\
    \ REQUIRED \"ipp-versions-supported\n          (1setOf keyword)\" Printer Description\
    \ attribute, since IPP/1.1\n          Printers do not have to support version\
    \ '1.0' conformance\n          requirements.  Section 4.4.16 - added the \"multiple-document-\n\
    \          jobs-supported (boolean)\" Printer Description attribute so\n     \
    \     that a client can tell whether a Printer that supports\n          Create-Job/Send-Document\
    \ supports multiple document jobs or\n          not.  This attribute is REQUIRED\
    \ if the Create-Job operation\n          is supported.\n      19. Section 4.4.24\
    \ - changed the \"queued-job-count\" Printer\n          Description attribute\
    \ from RECOMMENDED to REQUIRED.\n      20. Section 4.4.32 - changed \"compression-supported\
    \ (1setOf type3\n          keyword)\" Printer Description attribute from OPTIONAL\
    \ to\n          REQUIRED.\n      21. Section 5.1 - changed the client security\
    \ requirements from\n          RECOMMENDED non-standards track SSL3 to MUST support\
    \ Client\n          Authentication as defined in the IPP/1.1 Encoding and\n  \
    \        Transport document [RFC2910].  A client SHOULD support\n          Operation\
    \ Privacy and Server Authentication as defined in the\n          IPP/1.1 Encoding\
    \ and Transport document [RFC2910].\n      22. Section 5.2.7 - changed the IPP\
    \ object security requirements\n          from OPTIONAL non-standards track SSL3\
    \ to SHOULD contain\n          support for Client Authentication as defined in\
    \ the IPP/1.1\n          Encoding and Transport document [RFC2910].  A Printer\n\
    \          implementation MAY allow an administrator to configure the\n      \
    \    Printer so that all, some, or none of the users are\n          authenticated.\
    \  An IPP Printer implementation SHOULD contain\n          support for Operation\
    \ Privacy and Server Authentication as\n          defined in the IPP/1.1 Encoding\
    \ and Transport document\n          [RFC2910].  A Printer implementation MAY allow\
    \ an\n          administrator to configure the degree of support for Operation\n\
    \          Privacy and Server Authentication.  Security MUST NOT be\n        \
    \  compromised when the client supplies a lower version-number in\n          a\
    \ request.\n      23. Section 14 (Appendix C): Corrected typo, changing the keyword\n\
    \          'iso-10-white' to 'iso-a10-white'.\n   See also the \"IPP/1.1 Encoding\
    \ and Transport\" [RFC2910] document for\n   differences between IPP/1.0 [RFC2565]\
    \ and IPP/1.1 [RFC2910].\n"
- title: 18.  Full Copyright Statement
  contents:
  - "18.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
