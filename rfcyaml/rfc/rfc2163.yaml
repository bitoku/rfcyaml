- contents:
  - "                  Using the Internet DNS to Distribute\n            MIXER Conformant
    Global Address Mapping (MCGAM)\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo is the complete technical specification to store in the\n
    \  Internet Domain Name System (DNS) the mapping information (MCGAM)\n   needed
    by MIXER conformant e-mail gateways and other tools to map\n   RFC822 domain names
    into X.400 O/R names and vice versa.  Mapping\n   information can be managed in
    a distributed rather than a centralised\n   way. Organizations can publish their
    MIXER mapping or preferred\n   gateway routing information using just local resources
    (their local\n   DNS server), avoiding the need for a strong coordination with
    any\n   centralised organization. MIXER conformant gateways and tools located\n
    \  on Internet hosts can retrieve the mapping information querying the\n   DNS
    instead of having fixed tables which need to be centrally updated\n   and distributed.\n
    \  This memo obsoletes RFC1664. It includes the changes introduced by\n   MIXER
    specification with respect to RFC1327: the new 'gate1' (O/R\n   addresses to domain)
    table is fully supported. Full backward\n   compatibility with RFC1664 specification
    is mantained, too.\n   RFC1664 was a joint effort of IETF X400 operation working
    group\n   (x400ops) and TERENA (formely named \"RARE\") Mail and Messaging\n   working
    group (WG-MSG). This update was performed by the IETF MIXER\n   working group.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   The connectivity between the Internet SMTP mail and other
    mail\n   services, including the Internet X.400 mail and the commercial X.400\n
    \  service providers, is assured by the Mail eXchanger (MX) record\n   information
    distributed via the Internet Domain Name System (DNS). A\n   number of documents
    then specify in details how to convert or encode\n   addresses from/to RFC822
    style to the other mail system syntax.\n   However, only conversion methods provide,
    via some algorithm or a set\n   of mapping rules, a smooth translation, resulting
    in addresses\n   indistinguishable from the native ones in both RFC822 and foreign\n
    \  world.\n   MIXER describes a set of mappings (MIXER Conformant Global Address\n
    \  Mapping - MCGAM) which will enable interworking between systems\n   operating
    the CCITT X.400 (1984/88/92) Recommendations and systems\n   using using the RFC822
    mail protocol, or protocols derived from\n   RFC822. That document addresses conversion
    of services, addresses,\n   message envelopes, and message bodies between the
    two mail systems.\n   This document is concerned with one aspect of MIXER: the
    mechanism\n   for mapping between X.400 O/R addresses and RFC822 domain names.
    As\n   described in Appendix F of MIXER, implementation of the mappings\n   requires
    a database which maps between X.400 O/R addresses and domain\n   names; in RFC1327
    this database was statically defined.\n   The original approach in RFC1327 required
    many efforts to maintain\n   the correct mapping: all the gateways needed to get
    coherent tables\n   to apply the same mappings, the conversion tables had to be\n
    \  distributed among all the operational gateways, and also every update\n   needed
    to be distributed.\n   The concept of mapping rules distribution and use has been
    revised in\n   the new MIXER specification, introducing the concept of MIXER\n
    \  Conformant Global Address Mapping (MCGAM). A MCGAM does not need to\n   be
    globally installed by any MIXER conformant gateway in the world\n   any more.
    However MIXER requires now efficient methods to publish its\n   MCGAM.\n   Static
    tables are one of the possible methods to publish MCGAM.\n   However this static
    mechanism requires quite a long time to be spent\n   modifying and distributing
    the information, putting heavy constraints\n   on the time schedule of every update.
    \ In fact it does not appear\n   efficient compared to the Internet Domain Name
    Service (DNS).  More\n   over it does not look feasible to distribute the database
    to a large\n   number of other useful applications, like local address converters,\n
    \  e-mail User Agents or any other tool requiring the mapping rules to\n   produce
    correct results.\n   Two much more efficient methods are proposed by MIXER for
    publication\n   of MCGAM: the Internet DNS and X.500. This memo is the complete\n
    \  technical specification for publishing MCGAM via Internet DNS.\n   A first
    proposal to use the Internet DNS to store, retrieve and\n   maintain those mappings
    was introduced by two of the authors of\n   RFC1664 (B. Cole and R. Hagens) adopting
    two new DNS resource record\n   (RR)  types: TO-X400 and TO-822. This proposal
    now adopts a more\n   complete strategy, and requires one new RR only. The distribution
    of\n   MCGAMs via DNS is in fact an important service for the whole Internet\n
    \  community: it completes the information given by MX resource record\n   and
    it allows to produce clean addresses when messages are exchanged\n   among the
    Internet RFC822 world and the X.400 one (both Internet and\n   Public X.400 service
    providers).\n   A first experiment in using the DNS without expanding the current
    set\n   of RR and using available ones was deployed by some of the authors of\n
    \  RFC1664 at the time of its development. The existing PTR resource\n   records
    were used to store the mapping rules, and a new DNS tree was\n   created under
    the \".it\" top level domain. The result of the\n   experiment was positive, and
    a few test applications ran under this\n   provisional set up. This test was also
    very useful in order to define\n   a possible migration strategy during the deployment
    of the new DNS\n   containing the new RR. The Internet DNS nameservers wishing
    to\n   provide this mapping information need in fact to be modified to\n   support
    the new RR type, and in the real Internet, due to the large\n   number of different
    implementations, this takes some time.\n   The basic idea is to adopt a new DNS
    RR to store the mapping\n   information. The RFC822 to X.400 mapping rules (including
    the so\n   called 'gate2' rules) will be stored in the ordinary DNS tree, while\n
    \  the definition of a new branch of the name space defined under each\n   national
    top level domain is envisaged in order to contain the X.400\n   to RFC822 mappings
    ('table1' and 'gate1'). A \"two-way\" mapping\n   resolution schema is thus fully
    implemented.\n   The creation of the new domain name space representing the X.400
    O/R\n   names structure also provides the chance to use the DNS to distribute\n
    \  dynamically other X.400 related information, thus solving other\n   efficiency
    problems currently affecting the X.400 MHS service.\n   In this paper we will
    adopt the MCGAM syntax, showing how it can be\n   stored into the Internet DNS.\n"
  - contents:
    - "1.1 Definitions syntax\n   The definitions in this document is given in BNF-like
      syntax, using\n   the following conventions:\n      |   means choice\n      \\
      \  is used for continuation of a definition over several lines\n      []  means
      optional\n      {}  means repeated one or more times\n   The definitions, however,
      are detailed only until a certain level,\n   and below it self-explaining character
      text strings will be used.\n"
    title: 1.1 Definitions syntax
  title: 1. Introduction
- contents:
  - "2. Motivation\n   Implementations of MIXER gateways require that a database store\n
    \  address mapping information for X.400 and RFC822. This information\n   must
    be made available (published) to all MIXER gateways. In the\n   Internet community,
    the DNS has proven to be a practical mean for\n   providing a distributed name
    service. Advantages of using a DNS based\n   system over a table based approach
    for mapping between O/R addresses\n   and domain names are:\n     - It avoids
    fetching and storing of entire mapping tables by every\n       host that wishes
    to implement MIXER gateways and/or tools\n     - Modifications to the DNS based
    mapping information can be made\n       available in a more timely manner than
    with a table driven\n       approach.\n     - It allows full authority delegation,
    in agreement with the\n       Internet regionalization process.\n     - Table
    management is not necessarily required for DNS-based\n       MIXER gateways.\n
    \    - One can determine the mappings in use by a remote gateway by\n       querying
    the DNS (remote debugging).\n   Also many other tools, like address converters
    and User Agents can\n   take advantage of the real-time availability of MIXER
    tables,\n   allowing a much easier maintenance of the information.\n"
  title: 2. Motivation
- contents:
  - "3. The domain space for X.400 O/R name addresses\n   Usual domain names (the
    ones normally used as the global part of an\n   RFC822 e-mail address) and their
    associated information, i.e., host\n   IP addresses, mail exchanger names, etc.,
    are stored in the DNS as a\n   distributed database under a number of top-level
    domains. Some top-\n   level domains are used for traditional categories or international\n
    \  organisations (EDU, COM, NET, ORG, INT, MIL...). On the other hand\n   any
    country has its own two letter ISO country code as top-level\n   domain (FR, DE,
    GB, IT, RU, ...), including \"US\" for USA.  The\n   special top-level/second-level
    couple IN-ADDR.ARPA is used to store\n   the IP address to domain name relationship.
    This memo defines in the\n   above structure the appropriate way to locate the
    X.400 O/R name\n   space, thus enabling to store in DNS the MIXER mappings (MCGAMs).\n
    \  The MIXER mapping information is composed by four tables:\n    - 'table1' and
    'gate1' gives the translation from X.400 to RFC822;\n    - 'table2' and 'gate2'
    tables map RFC822 into X.400.\n   Each mapping table is composed by mapping rules,
    and a single mapping\n   rule is composed by a keyword (the argument of the mapping
    function\n   derived from the address to be translated) and a translator (the\n
    \  mapping function parameter):\n                            keyword#translator#\n
    \  the '#' sign is a delimiter enclosing the translator. An example:\n                 foo.bar.us#PRMD$foo\\.bar.ADMD$intx.C$us#\n
    \  Local mappings are not intended for use outside their restricted\n   environment,
    thus they should not be included in DNS. If local\n   mappings are used, they
    should be stored using static local tables,\n   exactly as local static host tables
    can be used with DNS.\n   The keyword of a 'table2' and 'gate2' table entry is
    a valid RFC822\n   domain; thus the usual domain name space can be used without
    problems\n   to store these entries.\n   On the other hand, the keyword of a 'table1'
    and 'gate1' entry\n   belongs to the X.400 O/R name space. The X.400 O/R name
    space does\n   not usually fit into the usual domain name space, although there
    are\n   a number of similarities; a new name structure is thus needed to\n   represent
    it. This new name structure contains the X.400 mail\n   domains.\n   To ensure
    the correct functioning of the DNS system, the new X.400\n   name structure must
    be hooked to the existing domain name space in a\n   way which respects the existing
    name hierarchy.\n   A possible solution was to create another special branch,
    starting\n   from the root of the DNS tree, somehow similar to the in-addr.arpa\n
    \  tree. This idea would have required to establish a central authority\n   to
    coordinate at international level the management of each national\n   X.400 name
    tree, including the X.400 public service providers. This\n   coordination problem
    is a heavy burden if approached globally. More\n   over the X.400 name structure
    is very 'country oriented': thus while\n   it requires a coordination at national
    level, it does not have\n   concepts like the international root. In fact the
    X.400 international\n   service is based  on a large number of bilateral agreements,
    and only\n   within some communities an international coordination service exists.\n
    \  The X.400 two letter ISO country codes, however, are the same used\n   for
    the RFC822 country top-level domains and this gives us an\n   appropriate hook
    to insert the new branches. The proposal is, in\n   fact, to create under each
    national top level ISO country code a new\n   branch in the name space. This branch
    represents exactly the X.400\n   O/R name structure as defined in each single
    country, following the\n   ADMD, PRMD, O, OU hierarchy. A unique reserved label
    'X42D' is placed\n   under each country top-level domain, and hence the national
    X.400\n   name space derives its own structure:\n                                    .
    (root)\n                                    |\n      +-----------------+-----------+--------+-----------------+...\n
    \     |                 |                    |                 |\n     edu                it
    \                  us                fr\n      |                 |                    |
    \                |\n  +---+---+...    +-----+-----+...     +-----+-----+...     +--+---+...\n
    \ |       |       |     |     |        |     |     |        |      |\n ...     ...
    \    cnr   X42D  infn      va    ca   X42D     X42D  inria\n                        |
    \                   |     |        |\n           +------------+------------+...
    \  ...   ...  +----+-------+...\n           |            |            |                 |
    \           |\n    ADMD-PtPostel  ADMD-garr  ADMD-Master400        ADMD-atlas
    \ ADMD-red\n                        |            |                 |            |\n
    \            +----------+----+...   ...        +-------+------+... ...\n             |
    \              |                 |              |\n         PRMD-infn       PRMD-STET
    \       PRMD-Telecom   PRMD-Renault\n             |               |                 |
    \             |\n            ...             ...               ...            ...\n
    \  The creation of the X.400 new name tree at national level solves the\n   problem
    of the international coordination. Actually the coordination\n   problem is just
    moved at national level, but it thus becomes easier\n   to solve. The coordination
    at national level between the X.400\n   communities and the Internet world is
    already a requirement for the\n   creation of the national static MIXER mapping
    tables; the use of the\n   Internet DNS gives further motivations for this coordination.\n
    \  The coordination at national level also fits in the new concept of\n   MCGAM
    pubblication. The DNS in fact allows a step by step authority\n   distribution,
    up to a final complete delegation: thus organizations\n   whishing to publish
    their MCGAM just need to receive delegation also\n   for their branch of the new
    X.400 name space. A further advantage of\n   the national based solution is to
    allow each country to set up its\n   own X.400 name structure in DNS and to deploy
    its own authority\n   delegation according to its local time scale and requirements,
    with\n   no loss of global service in the mean time. And last, placing the new\n
    \  X.400 name tree and coordination process at national level fits into\n   the
    Internet regionalization and internationalisation process, as it\n   requires
    local bodies to take care of local coordination problems.\n   The DNS name space
    thus contains completely the information required\n   by an e-mail gateway or
    tool to perform the X.400-RFC822 mapping: a\n   simple query to the nearest nameserver
    provides it. Moreover there is\n   no more any need to store, maintain and distribute
    manually any\n   mapping table. The new X.400 name space can also contain further\n
    \  information about the X.400 community, as DNS allows for it a\n   complete
    set of resource records, and thus it allows further\n   developments. This set
    of RRs in the new X.400 name space must be\n   considered 'reserved' and thus
    not used until further specifications.\n   The construction of the new domain
    space trees will follow the same\n   procedures used when organising at first
    the already existing DNS\n   space: at first the information will be stored in
    a quite centralised\n   way, and distribution of authority will be gradually achieved.
    A\n   separate document will describe the implementation phase and the\n   methods
    to assure a smooth introduction of the new service.\n"
  title: 3. The domain space for X.400 O/R name addresses
- contents:
  - "4. The new DNS resource record for MIXER mapping rules: PX\n   The specification
    of the Internet DNS (RFC1035) provides a number of\n   specific resource records
    (RRs) to contain specific pieces of\n   information. In particular they contain
    the Mail eXchanger (MX) RR\n   and the host Address (A) records which are used
    by the Internet SMTP\n   mailers. As we will store the RFC822 to X.400 mapping
    information in\n   the already existing DNS name tree, we need to define a new
    DNS RR in\n   order to avoid any possible clash or misuse of already existing
    data\n   structures. The same new RR will also be used to store the mappings\n
    \  from X.400 to RFC822. More over the mapping information, i.e., the\n   MCGAMs,
    has a specific format and syntax which require an appropriate\n   data structure
    and processing. A further advantage of defining a new\n   RR is the ability to
    include flexibility for some eventual future\n   development.\n   The definition
    of the new 'PX' DNS resource record is:\n      class:        IN   (Internet)\n
    \     name:         PX   (pointer to X.400/RFC822 mapping information)\n      value:
    \       26\n   The PX RDATA format is:\n          +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \         |                  PREFERENCE                   |\n          +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \         /                    MAP822                     /\n          /                                               /\n
    \         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n          /                    MAPX400
    \                   /\n          /                                               /\n
    \         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n   where:\n   PREFERENCE
    \  A 16 bit integer which specifies the preference given to\n                this
    RR among others at the same owner.  Lower values\n                are preferred;\n
    \  MAP822       A <domain-name> element containing <rfc822-domain>, the\n                RFC822
    part of the MCGAM;\n   MAPX400      A <domain-name> element containing the value
    of\n                <x400-in-domain-syntax> derived from the X.400 part of\n                the
    MCGAM (see sect. 4.2);\n   PX records cause no additional section processing.
    The PX RR format\n   is the usual one:\n             <name> [<class>] [<TTL>]
    <type> <RDATA>\n   When we store in DNS a 'table1' or a 'gate1' entry, then <name>
    will\n   be an X.400 mail domain name in DNS syntax (see sect. 4.2). When we\n
    \  store a 'table2' or a 'gate2' table entry, <name> will be an RFC822\n   mail
    domain name, including both fully qualified DNS domains and mail\n   only domains
    (MX-only domains). All normal DNS conventions, like\n   default values, wildcards,
    abbreviations and message compression,\n   apply also for all the components of
    the PX RR. In particular <name>,\n   MAP822 and MAPX400, as <domain-name> elements,
    must have the final\n   \".\" (root) when they are fully qualified.\n"
  - contents:
    - "4.1 Additional features of the PX resource record\n   The definition of the
      RDATA for the PX resource record, and the fact\n   that DNS allows a distinction
      between an exact value and a wildcard\n   match for the <name> parameter, represent
      an extension of the MIXER\n   specification for mapping rules. In fact, any
      MCGAM entry is an\n   implicit wildcard entry, i.e., the rule\n      net2.it#PRMD$net2.ADMD$p400.C$it#\n
      \  covers any RFC822 domain ending with 'net2.it', unless more detailed\n   rules
      for some subdomain in 'net2.it' are present. Thus there is no\n   possibility
      to specify explicitly a MCGAM as an exact match only\n   rule. In DNS an entry
      like\n      *.net2.it.   IN  PX  10   net2.it.  PRMD-net2.ADMD-p400.C-it.\n
      \  specify the usual wildcard match as for MIXER tables. However an\n   entry
      like\n      ab.net2.it.  IN  PX  10   ab.net2.it.  O-ab.PRMD-net2.ADMDb.C-it.\n
      \  is valid only for an exact match of 'ab.net2.it' RFC822 domain.\n   Note
      also that in DNS syntax there is no '#' delimiter around MAP822\n   and MAPX400
      fields: the syntax defined in sect. 4.2 in fact does not\n   allow the <blank>
      (ASCII decimal 32) character within these fields,\n   making unneeded the use
      of an explicit delimiter as required in the\n   MIXER original syntax.\n   Another
      extension to the MIXER specifications is the PREFERENCE value\n   defined as
      part of the PX RDATA section. This numeric value has\n   exactly the same meaning
      than the similar one used for the MX RR. It\n   is thus possible to specify
      more than one single mapping for a domain\n   (both from RFC822 to X.400 and
      vice versa), giving as the preference\n   order. In MIXER static tables, however,
      you cannot specify more than\n   one mapping per each RFC822 domain, and the
      same restriction apply\n   for any X.400 domain mapping to an RFC822 one.\n
      \  More over, in the X.400 recommendations a note suggests than an\n   ADMD=<blank>
      should be reserved for some special cases. Various\n   national functional profile
      specifications for an X.400 MHS states\n   that if an X.400 PRMD is reachable
      via any of its national ADMDs,\n   independently of its actual single or multiple
      connectivity with\n   them, it should use ADMD=<blank> to advertise this fact.
      Again, if a\n   PRMD has no connections to any ADMD it should use ADMD=0 to
      notify\n   its status, etc. However, in most of the current real situations,
      the\n   ADMD service providers do not accept messages coming from their\n   subscribers
      if they have a blank ADMD, forcing them to have their own\n   ADMD value. In
      such a situation there are problems in indicating\n   properly the actually
      working mappings for domains with multiple\n   connectivity. The PX RDATA 'PREFERENCE'
      extension was introduced to\n   take in consideration these problems.\n   However,
      as these extensions are not available with MIXER static\n   tables, it is strongly
      discouraged to use them when interworking with\n   any table based gateway or
      application. The extensions were in fact\n   introduced just to add more flexibility,
      like the PREFERENCE value,\n    or they were already implicit in the DNS mechanism,
      like the\n   wildcard specification. They should be used very carefully or just\n
      \  considered 'reserved for future use'. In particular, for current use,\n   the
      PREFERENCE value in the PX record specification should be fixed\n   to a value
      of 50, and only wildcard specifications should be used\n   when specifying <name>
      values.\n"
    title: 4.1 Additional features of the PX resource record
  - contents:
    - "4.2 The DNS syntax for an X.400 'domain'\n   The syntax definition of the MCGAM
      rules is defined in appendix F of\n   that document. However that syntax is
      not very human oriented and\n   contains a number of characters which have a
      special meaning in other\n   fields of the Internet DNS. Thus in order to avoid
      any possible\n   problem, especially due to some old DNS implementations still
      being\n   used in the Internet, we define a syntax for the X.400 part of any\n
      \  MCGAM rules (and hence for any X.400 O/R name) which makes it\n   compatible
      with a <domain-name> element, i.e.,\n   <domain-name>    ::= <subdomain> | \"
      \"\n   <subdomain>      ::= <label> | <label> \".\" <subdomain>\n   <label>
      \         ::= <alphanum>|\n                        <alphanum> {<alphanumhyphen>}
      <alphanum>\n   <alphanum>       ::= \"0\"..\"9\" | \"A\"..\"Z\" | \"a\"..\"z\"\n
      \  <alphanumhyphen> ::= \"0\"..\"9\" | \"A\"..\"Z\" | \"a\"..\"z\" | \"-\"\n
      \  (see RFC1035, section 2.3.1, page 8).  The legal character set for\n   <label>
      does not correspond to the IA5 Printablestring one used in\n   MIXER to define
      MCGAM rules. However a very simple \"escape mechanism\"\n   can be applied in
      order to bypass the problem. We can in fact simply\n   describe the X.400 part
      of a MCGAM rule format as:\n     <map-rule>   ::= <map-elem> | <map-elem> {
      \".\" <map-elem> }\n     <map-elem>   ::= <attr-label> \"$\" <attr-value>\n
      \    <attr-label> ::= \"C\" | \"ADMD\" | \"PRMD\" | \"O\" | \"OU\"\n     <attr-value>
      ::= \" \" | \"@\" | IA5-Printablestring\n   As you can notice <domain-name>
      and <map-rule> look similar, and also\n   <label> and <map-elem> look the same.
      If we define the correct method\n   to transform a <map-elem> into a <label>
      and vice versa the problem\n   to write a MCGAM rule in <domain-name> syntax
      is solved.\n   The RFC822 domain part of any MCGAM rule is of course already
      in\n   <domain-name> syntax, and thus remains unchanged.\n   In particular,
      in a 'table1' or 'gate1' mapping rule the 'keyword'\n   value must be converted
      into <x400-in-domain-syntax> (X.400 mail DNS\n   mail domain), while the 'translator'
      value is already a valid RFC822\n   domain.  Vice versa in a 'table2' or 'gate2'
      mapping rule, the\n   'translator' must be converted into <x400-in-domain-syntax>,
      while\n   the 'keyword' is already a valid RFC822 domain.\n"
    - contents:
      - "4.2.1 IA5-Printablestring to <alphanumhyphen> mappings\n   The problem of
        unmatching IA5-Printablestring and <label> character\n   set definition is
        solved by a simple character mapping rule: whenever\n   an IA5 character does
        not belong to <alphanumhyphen>, then it is\n   mapped using its 3 digit decimal
        ASCII code, enclosed in hyphens. A\n   small set of special rules is also
        defined for the most frequent\n   cases. Moreover some frequent characters
        combinations used in MIXER\n   rules are also mapped as special cases.\n   Let's
        then define the following simple rules:\n    MCGAM rule            DNS store
        translation    conditions\n    -----------------------------------------------------------------\n
        \   <attr-label>$@        <attr-label>             missing attribute\n    <attr-label>$<blank>
        \ <attr-label>\"b\"          blank attribute\n    <attr-label>$xxx      <attr-label>-xxx
        \        elsewhere\n   Non <alphanumhyphen> characters in <attr-value>:\n
        \   MCGAM rule            DNS store translation    conditions\n    -----------------------------------------------------------------\n
        \   -                     -h-                      hyphen\n    \\.                    -d-
        \                     quoted dot\n    <blank>               -b-                      blank\n
        \   <non A/N character>   -<3digit-decimal>-       elsewhere\n   If the DNS
        store translation of <attr-value> happens to end with an\n   hyphen, then
        this last hyphen is omitted.\n   Let's now have some examples:\n    MCGAM
        rule            DNS store translation    conditions\n    -----------------------------------------------------------------\n
        \   PRMD$@                PRMD                     missing attribute\n    ADMD$<blank>
        \         ADMDb                    blank attribute\n    ADMD$400-net          ADMD-400-h-net
        \          hyphen mapping\n    PRMD$UK\\.BD           PRMD-UK-d-BD             quoted
        dot mapping\n    O$ACME Inc\\.          O-ACME-b-Inc-d           blank & final
        hyphen\n    PRMD$main-400-a       PRMD-main-h-400-h-a      hyphen mapping\n
        \   O$-123-b              O--h-123-h-b             hyphen mapping\n    OU$123-x
        \             OU-123-h-x               hyphen mapping\n    PRMD$Adis+co          PRMD-Adis-043-co
        \        3digit mapping\n   Thus, an X.400 part from a MCGAM like\n     OU$uuu.O$@.PRMD$ppp\\.rrr.ADMD$aaa
        ddd-mmm.C$cc\n   translates to\n     OU-uuu.O.PRMD-ppp-d-rrr.ADMD-aaa-b-ddd-h-mmm.C-cc\n
        \  Another example:\n     OU$sales dept\\..O$@.PRMD$ACME.ADMD$ .C$GB\n   translates
        to\n     OU-sales-b-dept-d.O.PRMD-ACME.ADMDb.C-GB\n"
      title: 4.2.1 IA5-Printablestring to <alphanumhyphen> mappings
    - contents:
      - "4.2.2 Flow chart\n   In order to achieve the proper DNS store translations
        of the X.400\n   part of a MCGAM or any other X.400 O/R name, some software
        tools will\n   be used. It is in fact evident that the above rules for converting\n
        \  mapping table from MIXER to DNS format (and vice versa) are not user\n
        \  friendly enough to think of a human made conversion.\n   To help in designing
        such tools, we describe hereunder a small flow\n   chart. The fundamental
        rule to be applied during translation is,\n   however, the following:\n      \"A
        string must be parsed from left to right, moving appropriately\n      the
        pointer in order not to consider again the already translated\n      left
        section of the string in subsequent analysis.\"\n   Flow chart 1 - Translation
        from MIXER to DNS format:\n                 parse  single attribute\n              (enclosed
        in \".\" separators)\n                           |\n            (yes)  ---
        \ <label>$@ ?  ---  (no)\n              |                             |\n
        \       map to <label>        (no)  <label>$<blank> ?  (yes)\n              |
        \                |                        |\n              |           map
        to <label>-        map to <label>\"b\"\n              |                 |
        \                       |\n              |           map \"\\.\" to -d-                |\n
        \             |                 |                        |\n              |
        \          map \"-\" to -h-                 |\n              |                 |
        \                       |\n              |    map non A/N char to -<3digit>-
        \       |\n  restart     |                 |                        |\n     ^
        \       |      remove (if any) last \"-\"            |\n     |        |                 |
        \                       |\n     |        \\------->     add a  \".\"    <--------------/\n
        \    |                          |\n     \\----------  take  next  attribute
        \ (if  any)\n   Flow chart 2 - Translation from DNS to MIXER format:\n                parse
        single attribute\n            (enclosed in \".\" separators)\n                          |\n
        \           (yes) ---- <label> ? ---- (no)\n              |                          |\n
        \     map to <label>$@        (no) <label>\"b\" ? (yes)\n              |                 |
        \                |\n              |           map to <label>$    map to <label>$<blank>\n
        \             |                 |                 |\n              |           map
        -d- to \"\\.\"         |\n              |                 |                 |\n
        \             |           map -h- to \"-\"          |\n              |                 |
        \                |\n              |           map -b- to \" \"          |\n
        \ restart     |                 |                 |\n     ^        |   map
        -<3digit>- to non A/N char  |\n     |        |                 |                 |\n
        \    |        \\-------->   add a \".\"   <----------/\n     |                         |\n
        \    \\------------- take next attribute (if any)\n   Note that the above
        flow charts deal with the translation of the\n   attributes syntax, only.\n"
      title: 4.2.2 Flow chart
    - contents:
      - "4.2.3 The Country Code convention in the <name> value.\n   The RFC822 domain
        space and the X.400 O/R address space, as said in\n   section 3, have one
        specific common feature: the X.400 ISO country\n   codes are the same as the
        RFC822 ISO top level domains for countries.\n   In the previous sections we
        have also defined a method to write in\n   <domain-name> syntax any X.400
        domain, while in section 3 we\n   described the new name space starting at
        each country top level\n   domain under the X42D.cc (where 'cc' is then two
        letter ISO country\n   code).\n   The <name> value for a 'table1' or 'gate1'
        entry in DNS should thus\n   be derived from the X.400 domain value, translated
        to <domain-name>\n   syntax, adding the 'X42D.cc.' post-fix to it, i.e.,\n
        \    ADMD$acme.C$fr\n   produces in <domain-name> syntax the key:\n     ADMD-acme.C-fr\n
        \  which is post-fixed by 'X42D.fr.' resulting in:\n     ADMD-acme.C-fr.X42D.fr.\n
        \  However, due to the identical encoding for X.400 country codes and\n   RFC822
        country top level domains, the string 'C-fr.X42D.fr.' is\n   clearly redundant.\n
        \  We thus define the 'Country Code convention' for the <name> key,\n   i.e.,\n
        \    \"The C-cc section of an X.400 domain in <domain-name> syntax must\n
        \    be omitted when creating a <name> key, as it is identical to the\n     top
        level country code used to identify the DNS zone where the\n     information
        is stored\".\n   Thus we obtain the following <name> key examples:\n   X.400
        domain                       DNS <name> key\n   --------------------------------------------------------------------\n
        \  ADMD$acme.C$fr                     ADMD-acme.X42D.fr.\n   PRMD$ux\\.av.ADMD$
        .C$gb            PRMD-ux-d-av.ADMDb.X42D.gb.\n   PRMD$ppb.ADMD$Dat 400.C$de
        \        PRMD-ppb.ADMD-Dat-b-400.X42D.de.\n"
      title: 4.2.3 The Country Code convention in the <name> value.
    title: 4.2 The DNS syntax for an X.400 'domain'
  - contents:
    - "4.3 Creating the appropriate DNS files\n   Using MIXER's assumption of an asymmetric
      mapping between X.400 and\n   RFC822 addresses, two separate relations are required
      to store the\n   mapping database: MIXER 'table1' and MIXER 'table2'; thus also
      in DNS\n   we will maintain the two different sections, even if they will both\n
      \  use the PX resource record. More over MIXER also specify two\n   additional
      tables: MIXER 'gate1' and 'gate2' tables. These additional\n   tables, however,
      have the same syntax rules than MIXER 'table1' and\n   'table2' respectively,
      and thus the same translation procedure as\n   'table1' and 'table2' will be
      applied; some details about the MIXER\n   'gate1' and 'gate2' tables are discussed
      in section 4.4.\n   Let's now check how to create, from an MCGAM entry, the
      appropriate\n   DNS entry in a DNS data file. We can again define an MCGAM entry
      as\n   defined in appendix F of that document as:\n     <x400-domain>#<rfc822-domain>#
      \ (case A: 'table1' and 'gate1'\n     entry)\n   and\n     <rfc822-domain>#<x400-domain>#
      \ (case B: 'table2' and 'gate2'\n     entry)\n   The two cases must be considered
      separately. Let's consider case A.\n    - take <x400-domain> and translate it
      into <domain-name> syntax,\n     obtaining <x400-in-domain-syntax>;\n    - create
      the <name> key from <x400-in-domain-syntax> i.e., apply\n     the Country Code
      convention described in sect. 4.2.3;\n    - construct the DNS PX record as:\n
      \     *.<name>  IN  PX  50  <rfc822-domain>  <x400-in-domain-syntax>\n   Please
      note that within PX RDATA the <rfc822-domain> precedes the\n   <x400-in-domain-syntax>
      also for a 'table1' and 'gate1' entry.\n   an example: from the 'table1' rule\n
      \    PRMD$ab.ADMD$ac.C$fr#ab.fr#\n   we obtain\n     *.PRMD-ab.ADMD-ac.X42D.fr.
      IN PX 50  ab.fr.  PRMD-ab.ADMD-ac.C-fr.\n   Note that <name>, <rfc822-domain>
      and <x400-in-domain-syntax> are\n   fully qualified <domain-name> elements,
      thus ending with a \".\".\n   Let's now consider case B.\n    - take <rfc822-domain>
      as <name> key;\n    - translate <x400-domain> into <x400-in-domain-syntax>;\n
      \   - construct the DNS PX record as:\n     *.<name>  IN  PX  50  <rfc822-domain>
      \ <x400-in-domain-syntax>\n   an example: from the 'table2' rule\n     ab.fr#PRMD$ab.ADMD$ac.C$fr#\n
      \  we obtain\n     *.ab.fr.  IN  PX  50  ab.fr.  PRMD-ab.ADMD-ac.C-fr.\n   Again
      note the fully qualified <domain-name> elements.\n   A file containing the MIXER
      mapping rules and MIXER 'gate1' and\n   'gate2' table written in DNS format
      will look like the following\n   fictious example:\n     !\n     ! MIXER table
      1: X.400 --> RFC822\n     !\n     *.ADMD-acme.X42D.it.               IN  PX
      \ 50  it. ADMD-acme.C-it.\n     *.PRMD-accred.ADMD-tx400.X42D.it.  IN  PX  50
      \  \\\n                                accred.it. PRMD-accred.ADMD-tx400.C-it.\n
      \    *.O-u-h-newcity.PRMD-x4net.ADMDb.X42D.it.  IN  PX  50   \\\n                       cs.ncty.it.
      O-u-h-newcity.PRMD-x4net.ADMDb.C-it.\n     !\n     ! MIXER table 2: RFC822 -->
      X.400\n     !\n     *.nrc.it.    IN  PX  50   nrc.it. PRMD-nrc.ADMD-acme.C-it.\n
      \    *.ninp.it.   IN  PX  50   ninp.it. O.PRMD-ninp.ADMD-acme.C-it.\n     *.bd.it.
      \    IN  PX  50   bd.it. PRMD-uk-d-bd.ADMDb.C-it.\n     !\n     ! MIXER Gate
      1 Table\n     !\n     *.ADMD-XKW-h-Mail.X42D.it.         IN  PX  50   \\\n                            XKW-gateway.it.
      ADMD-XKW-h-Mail.C-it.G.\n     *.PRMD-Super-b-Inc.ADMDb.X42D.it.  IN  PX  50
      \  \\\n                            GlobalGw.it. PRMD-Super-b-Inc.ADMDb.C-it.G.\n
      \    !\n     ! MIXER Gate 2 Table\n     !\n     my.it.  IN PX 50  my.it. OU-int-h-gw.O.PRMD-ninp.ADMD-acme.C-it.G.\n
      \    co.it.  IN PX 50  co.it. O-mhs-h-relay.PRMD-x4net.ADMDb.C-it.G.\n   (here
      the \"\\\" indicates continuation on the same line, as wrapping is\n   done
      only due to typographical reasons).\n   Note the special suffix \".G.\" on the
      right side of the 'gate1' and\n   'gate2' Tables section whose aim is described
      in section 4.4. The\n   corresponding MIXER tables are:\n     #\n     # MIXER
      table 1: X.400 --> RFC822\n     #\n     ADMD$acme.C$it#it#\n     PRMD$accred.ADMD$tx400.C$it#accred.it#\n
      \    O$u-newcity.PRMD$x4net.ADMD$ .C$it#cs.ncty.it#\n     #\n     # MIXER table
      2: RFC822 --> X.400\n     #\n     nrc.it#PRMD$nrc.ADMD$acme.C$it#\n     ninp.it#O.PRMD$ninp.ADMD$acme.C$it#\n
      \    bd.it#PRMD$uk\\.bd.ADMD$ .C$it#\n     #\n     # MIXER Gate 1 Table\n     #\n
      \    ADMD$XKW-Mail.C$it#XKW-gateway.it#\n     PRMD$Super Inc.ADMD$ .C$it#GlobalGw.it#\n
      \    #\n     # MIXER Gate 2 Table\n     #\n     my.it#OU$int-gw.O$@.PRMD$ninp.ADMD$acme.C$it#\n
      \    co.it#O$mhs-relay.PRMD$x4net.ADMD$ .C$t#\n"
    title: 4.3 Creating the appropriate DNS files
  - contents:
    - "4.4 Storing the MIXER 'gate1' and 'gate2' tables\n   Section 4.3.4 of MIXER
      also specify how an address should be\n   converted between RFC822 and X.400
      in case a complete mapping is\n   impossible. To allow the use of DDAs for non
      mappable domains, the\n   MIXER 'gate2' table is thus introduced.\n   In a totally
      similar way, when an X.400 address cannot be completely\n   converted in RFC822,
      section 4.3.5 of MIXER specifies how to encode\n   (LHS encoding) the address
      itself, pointing then to the appropriate\n   MIXER conformant gateway, indicated
      in the MIXER 'gate1' table.\n   DNS must store and distribute also these 'gate1'
      and 'gate2' data.\n   One of the major features of the DNS is the ability to
      distribute the\n   authority: a certain site runs the \"primary\" nameserver
      for one\n   determined sub-tree and thus it is also the only place allowed to\n
      \  update information regarding that sub-tree. This fact allows, in our\n   case,
      a further additional feature to the table based approach. In\n   fact we can
      avoid one possible ambiguity about the use of the 'gate1'\n   and 'gate2' tables
      (and thus of LHS and DDAs encoding).\n   The authority maintaining a DNS entry
      in the usual RFC822 domain\n   space is the only one allowed to decide if its
      domain should be\n   mapped using Standard Attributes (SA) syntax or Domain
      Defined\n   Attributes (DDA) one. If the authority decides that its RFC822 domain\n
      \  should be mapped using SA, then the PX RDATA will be a 'table2'\n   entry,
      otherwise it will be a 'gate2' table entry. Thus for an RFC822\n   domain we
      cannot have any more two possible entries, one from 'table2\n   and another
      one from 'gate2' table, and the action for a gateway\n   results clearly stated.\n
      \  Similarly, the authority mantaining a DNS entry in the new X.400 name\n   space
      is the only one allowed to decide if its X.400 domain should be\n   mapped using
      SA syntax or Left Hand Side (LHS) encoding. If the\n   authority decides that
      its X.400 domain should be mapped using SA,\n   then the PX RDATA will be a
      'table1' entry, otherwise it will be a\n   'gate1' table entry. Thus also for
      an X.400 domain we cannot have any\n   more two possible entries, one from 'table1'
      and another one from\n   'gate1' table, and the action for a gateway results
      clearly stated.\n   The MIXER 'gate1' table syntax is actually identical to
      MIXER\n   'table1', and 'gate2' table syntax is identical to MIXER 'table2'.\n
      \  Thus the same syntax translation rules from MIXER to DNS format can\n   be
      applied in both cases. However a gateway or any other application\n   must know
      if the answer it got from DNS contains some 'table1',\n   'table2' or some 'gate1',
      'gate2' table information. This is easily\n   obtained flagging with an additional
      \".G.\" post-fix the PX RDATA\n   value when it contains a 'gate1' or 'gate2'
      table entry. The example\n   in section 4.3 shows clearly the result. As any
      X.400 O/R domain must\n   end with a country code (\"C-xx\" in our DNS syntax)
      the additional\n   \".G.\" creates no conflicts or ambiguities at all. This
      postfix must\n   obviously be removed before using the MIXER 'gate1' or 'gate2'
      table\n   data.\n"
    title: 4.4 Storing the MIXER 'gate1' and 'gate2' tables
  title: '4. The new DNS resource record for MIXER mapping rules: PX'
- contents:
  - "5. Finding MIXER mapping information from DNS\n   The MIXER mapping information
    is stored in DNS both in the normal\n   RFC822 domain name space, and in the newly
    defined X.400 name space.\n   The information, stored in PX resource records,
    does not represent a\n   full RFC822 or X.400 O/R address: it is a template which
    specifies\n   the fields of the domain that are used by the mapping algorithm.\n
    \  When mapping information is stored in the DNS, queries to the DNS are\n   issued
    whenever an iterative search through the mapping table would\n   be performed
    (MIXER: section 4.3.4, State I; section 4.3.5, mapping\n   B). Due to the DNS
    search mechanism, DNS by itself returns the\n   longest possible match in the
    stored mapping rule with a single\n   query, thus no iteration and/or multiple
    queries are needed. As\n   specified in MIXER, a search of the mapping table will
    result in\n   either success (mapping found) or failure (query failed, mapping
    not\n   found).\n   When a DNS query is issued, a third possible result is timeout.
    If\n   the result is timeout, the gateway operation is delayed and then\n   retried
    at a later time. A result of success or failure is processed\n   according to
    the algorithms specified in MIXER. If a DNS error code\n   is returned, an error
    message should be logged and the gateway\n   operation is delayed as for timeout.
    These pathological situations,\n   however, should be avoided with a careful duplication
    and chaching\n   mechanism which DNS itself provides.\n   Searching the nameserver
    which can authoritatively solve the query is\n   automatically performed by the
    DNS distributed name service.\n"
  - contents:
    - "5.1 A DNS query example\n   An MIXER mail-gateway located in the Internet,
      when translating\n   addresses from RFC822 to X.400, can get information about
      the MCGAM\n   rule asking the DNS. As an example, when translating the address\n
      \  SUN.CCE.NRC.IT, the gateway will just query DNS for the associated PX\n   resource
      record. The DNS should contain a PX record like this:\n   *.cce.nrc.it.  IN
      PX 50   cce.nrc.it.  O-cce.PRMD-nrc.ADMD-acme.C-it.\n   The first query will
      return immediately the appropriate mapping rule\n   in DNS store format.\n   There
      is no \".G.\" at the end of the obtained PX RDATA value, thus\n   applying the
      syntax translation specified in paragraph 4.2 the MIXER\n   Table 2 mapping
      rule will be obtained.\n   Let's now take another example where a 'gate2' table
      rule is\n   returned.  If we are looking for an RFC822 domain ending with top\n
      \  level domain \"MW\", and the DNS contains a PX record like this,\n      *.mw.
      \  IN  PX  50  mw.  O-cce.PRMD-nrc.ADMD-acme.C-it.G.\n   DNS will return 'mw.'
      and 'O-cce.PRMD-nrc.ADMD-acme.C-it.G.', i.e., a\n   'gate2' table entry in DNS
      store format. Dropping the final \".G.\" and\n   applying the syntax translation
      specified in paragraph 4.2 the\n   original rule will be available. More over,
      the \".G.\" flag also tells\n   the gateway to use DDA encoding for the inquired
      RFC822 domain.\n   On the other hand, translating from X.400 to RFC822 the address\n
      \     C=de; ADMD=pkz; PRMD=nfc; O=top;\n   the mail gateway should convert the
      syntax according to paragraph\n   4.2, apply the 'Country code convention' described
      in 4.2.3 to derive\n   the appropriate DNS translation of the X.400 O/R name
      and then query\n   DNS for the corresponding PX resource record. The obtained
      record for\n   which the PX record must be queried is thus:\n      O-top.PRMD-nfc.ADMD-pkz.X42D.de.\n
      \  The DNS could contain:\n      *.ADMD-pkz.X42D.de.  IN  PX  50  pkz.de.  ADMD-pkz.C-de.\n
      \  Assuming that there are not more specific records in DNS, the\n   wildcard
      mechanism will return the MIXER 'table1' rule in encoded\n   format.\n   Finally,
      an example where a 'gate1' rule is involved. If we are\n   looking for an X.400
      domain ending with ADMD=PWT400; C=US; , and the\n   DNS contains a PX record
      like this,\n      *.ADMD-PWT400.X42D.us.  IN  PX  50  intGw.com. ADMD-PWT400.C-us.G.\n
      \  DNS will return 'intGw.com.' and 'ADMD-PWT400.C-us.G.', i.e., a\n   'gate1'
      table entry in DNS store format. Dropping the final \".G.\" and\n   applying
      the syntax translation specified in paragraph 4.2 the\n   original rule will
      be available. More over, the \".G.\" flag also tells\n   the gateway to use
      LHS encoding for the inquired X.400 domain.\n"
    title: 5.1 A DNS query example
  title: 5. Finding MIXER mapping information from DNS
- contents:
  - "6. Administration of mapping information\n   The DNS, using the PX RR, is able
    to distribute the MCGAM rules to\n   all MIXER gateways located on the Internet.
    However, not all MIXER\n   gateways will be able to use the Internet DNS. It is
    expected that\n   some gateways in a particular management domain will conform
    to one\n   of the following models:\n     (a) Table-based, (b) DNS-based, (c)
    X.500-based\n   Table-based management domains will continue to publish their
    MCGAM\n   rules and retrieve the mapping tables via the International Mapping\n
    \  Table coordinator, manually or via some automated procedures. Their\n   MCGAM
    information can be made available also in DNS by the\n   appropriate DNS authorities,
    using the same mechanism already in\n   place for MX records: if a branch has
    not yet in place its own DNS\n   server, some higher authority in the DNS tree
    will provide the\n   service for it. A transition procedure similar to the one
    used to\n   migrate from the 'hosts.txt' tables to DNS can be applied also to
    the\n   deployment phase of this specification. An informational document\n   describing
    the implementation phase and the detailed coordination\n   procedures is expected.\n
    \  Another distributed directory service which can distribute the MCGAM\n   information
    is X.500. Coordination with table-based domains can be\n   obtained in an identical
    way as for the DNS case.\n   Coordination of MCGAM information between DNS and
    X.500 is more\n   complex, as it requies some kind of uploading information between
    the\n   two systems. The ideal solution is a dynamic alignment mechanism\n   which
    transparently makes the DNS mapping information available in\n   X.500 and vice
    versa. Some work in this specific field is already\n   being done [see Costa]
    which can result in a global transparent\n   directory service, where the information
    is stored in DNS or in\n   X.500, but is visible completely by any of the two
    systems.\n   However we must remind that MIXER concept of MCGAM rules publication\n
    \  is different from the old RFC1327 concept of globally distributed,\n   coordinated
    and unique mapping rules. In fact MIXER does not requires\n   any more for any
    conformant gateway or tool to know the complete set\n   of MCGAM: it only requires
    to use some set (eventually empty) of\n   valid MCGAM rules, published either
    by Tables, DNS or X.500\n   mechanisms or any combination of these methods. More
    over MIXER\n   specifies that also incomplete sets of MCGAM can be used, and\n
    \  supplementary local unpublished (but valid) MCGAM can also be used.\n   As
    a consequence, the problem of coordination between the three\n   systems proposed
    by MIXER for MCGAM publication is non essential, and\n   important only for efficient
    operational matters. It does not in fact\n   affect the correct behaviour of MIXER
    conformant gateways and tools.\n"
  title: 6. Administration of mapping information
- contents:
  - "7. Conclusion\n   The introduction of the new PX resource record and the definition
    of\n   the X.400 O/R name space in the DNS structure provide a good\n   repository
    for MCGAM information. The mapping information is stored\n   in the DNS tree structure
    so that it can be easily obtained using the\n   DNS distributed name service.
    At the same time the definition of the\n   appropriate DNS space for X.400 O/R
    names provide a repository where\n   to store and distribute some other X.400
    MHS information. The use of\n   the DNS has many known advantages in storing,
    managing and updating\n   the information. A successful number of tests were been
    performed\n   under the provisional top level domain \"X400.IT\" when RFC1664
    was\n   developed, and their results confirmed the advantages of the method.\n
    \  Operational exeprience for over 2 years with RFC1664 specification\n   confirmed
    the feasibility of the method, and helped identifying some\n   operational procedures
    to deploy the insertion of MCGAM into DNS.\n   Software to query the DNS and then
    to convert between the textual\n   representation of DNS resource records and
    the address format defined\n   in MIXER was developed with RFC1664. This software
    also allows a\n   smooth implementation and deployment period, eventually taking
    care\n   of the transition phase. This software can be easily used (with\n   little
    or null modification) also for this updated specification,\n   supporting the
    new 'gate1' MIXER table. DNS software implementations\n   supporting RFC1664 also
    supports with no modification this memo new\n   specification.\n   A further informational
    document describing operational and\n   implementation of the service is expected.\n"
  title: 7. Conclusion
- contents:
  - "8. Acknowledgements\n   We wish to thanks all those who contributed to the discussion
    and\n   revision of this document: many of their ideas and suggestions\n   constitute
    essential parts of this work. In particular thanks to Jon\n   Postel, Paul Mockapetris,
    Rob Austin and the whole IETF x400ops,\n   TERENA wg-msg and IETF namedroppers
    groups. A special mention to\n   Christian Huitema for his fundamental contribution
    to this work.\n   This document is a revision of RFC1664, edited by one of its
    authors\n   on behalf of the IETF MIXER working group. The current editor wishes\n
    \  to thank here also the authors of RFC1664:\n     Antonio Blasco Bonito     RFC822:
    bonito@cnuce.cnr.it\n     CNUCE - CNR               X.400:  C=it;A=garr;P=cnr;\n
    \    Reparto infr. reti                O=cnuce;S=bonito;\n     Viale S. Maria
    36\n     I 56126 Pisa\n     Italy\n     Bruce Cole                RFC822: bcole@cisco.com\n
    \    Cisco Systems Inc.        X.400:  C=us;A= ;P=Internet;\n     P.O. Box 3075
    \                    DD.rfc-822=bcole(a)cisco.com;\n     1525 O'Brien Drive\n
    \    Menlo Park, CA 94026\n     U.S.A.\n     Silvia Giordano           RFC822:
    giordano@cscs.ch\n     Centro Svizzero di        X.400:  C=ch;A=arcom;P=switch;O=cscs;\n
    \    Calcolo Scientifico               S=giordano;\n     Via Cantonale\n     CH
    6928 Manno\n     Switzerland\n     Robert Hagens                   RFC822: hagens@ans.net\n
    \    Advanced Network and Services   X.400:  C=us;A= ;P=Internet;\n     1875 Campus
    Commons Drive               DD.rfc-822=hagens(a)ans.net;\n     Reston, VA 22091\n
    \    U.S.A.\n"
  title: 8. Acknowledgements
- contents:
  - "9. References\n   [CCITT] CCITT SG 5/VII, \"Recommendation X.400, Message Handling\n
    \      Systems: System Model - Service Elements\", October 1988.\n   [RFC 1327]
    Kille, S., \"Mapping between X.400(1988)/ISO 10021 and RFC\n       822\", RFC
    1327, March 1992.\n   [RFC 1034] Mockapetris, P., \"Domain Names - Concepts and
    Facilities\",\n       STD 13, RFC 1034, USC/Information Sciences Institute, November\n
    \      1987.\n   [RFC 1035] Mockapetris, P., \"Domain names - Implementation and\n
    \      Specification\", STD 13, RFC 1035, USC/Information Sciences\n       Institute,
    November 1987.\n   [RFC 1033] Lottor, M., \"Domain Administrators Operation Guide\",
    RFC\n       1033, SRI International, November 1987.\n   [RFC 2156] Kille, S. E.,
    \" MIXER (Mime Internet X.400 Enhanced\n       Relay): Mapping between X.400 and
    RFC 822/MIME\", RFC 2156,\n       January 1998.\n   [Costa] Costa, A., Macedo,
    J., and V. Freitas, \"Accessing and\n       Managing DNS Information in the X.500
    Directory\", Proceeding of\n       the 4th Joint European Networking Conference,
    Trondheim, NO, May\n       1993.\n"
  title: 9. References
- contents:
  - "10. Security Considerations\n   This document specifies a means by which DNS
    \"PX\" records can direct\n   the translation between X.400 and Internet mail
    addresses.\n   This can indirectly affect the routing of mail across an gateway\n
    \  between X.400 and Internet Mail.  A succesful attack on this service\n   could
    cause incorrect translation of an originator address (thus\n   \"forging\" the
    originator address), or incorrect translation of a\n   recipient address (thus
    directing the mail to an unauthorized\n   recipient, or making it appear to an
    authorized recipient, that the\n   message was intended for recipients other than
    those chosen by the\n   originator) or could force the mail path via some particular
    gateway\n   or message transfer agent where mail security can be affected by\n
    \  compromised software.\n   There are several means by which an attacker might
    be able to deliver\n   incorrect PX records to a client.  These include: (a) compromise
    of a\n   DNS server,  (b) generating a counterfeit response to a client's DNS\n
    \  query, (c) returning incorrect \"additional information\" in response\n   to
    an unrelated query.\n   Clients using PX records SHOULD ensure that routing and
    address\n   translations are based only on authoritative answers.  Once DNS\n
    \  Security mechanisms [RFC 2065] become more widely deployed, clients\n   SHOULD
    employ those mechanisms to verify the authenticity and\n   integrity of PX records.\n"
  title: 10. Security Considerations
- contents:
  - "11. Author's Address\n   Claudio Allocchio\n   Sincrotrone Trieste\n   SS 14
    Km 163.5 Basovizza\n   I 34012 Trieste\n   Italy\n   RFC822: Claudio.Allocchio@elettra.trieste.it\n
    \  X.400:  C=it;A=garr;P=Trieste;O=Elettra;\n   S=Allocchio;G=Claudio;\n   Phone:
    \ +39 40 3758523\n   Fax:    +39 40 3758565\n"
  title: 11. Author's Address
- contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 12.  Full Copyright Statement
