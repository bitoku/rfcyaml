- contents:
  - "             Inter-Destination Media Synchronization (IDMS)\n                 Using
    the RTP Control Protocol (RTCP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a new RTP Control Protocol (RTCP) Packet Type\n
    \  and an RTCP Extended Report (XR) Block Type to be used for achieving\n   Inter-Destination
    Media Synchronization (IDMS).  IDMS is the process\n   of synchronizing playout
    across multiple media receivers.  Using the\n   RTCP XR IDMS Report Block defined
    in this document, media playout\n   information from participants in a synchronization
    group can be\n   collected.  Based on the collected information, an RTCP IDMS
    Settings\n   Packet can then be sent to distribute a common target playout point\n
    \  to which all the distributed receivers, sharing a media experience,\n   can
    synchronize.\n   Typical use cases in which IDMS is useful are social TV, shared\n
    \  service control (i.e., applications where two or more geographically\n   separated
    users are watching a media stream together), distance\n   learning, networked
    video walls, networked loudspeakers, etc.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7272.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   2.  Rationale . . . . . . . . . . . . . . . . . . . . . . . . .
    .   3\n     2.1.  Applicability of RTCP to IDMS . . . . . . . . . . . . . .   3\n
    \    2.2.  IDMS and ETSI . . . . . . . . . . . . . . . . . . . . . .   4\n   3.
    \ Inter-Destination Media Synchronization (IDMS) Use Cases  . .   4\n   4.  Overview
    of IDMS Operation  . . . . . . . . . . . . . . . . .   5\n   5.  Architecture
    for Inter-Destination Media Synchronization  . .   7\n     5.1.  Media Synchronization
    Application Server (MSAS) . . . . .   7\n     5.2.  Synchronization Client (SC)
    . . . . . . . . . . . . . . .   8\n     5.3.  Communication between MSAS and SCs
    \ . . . . . . . . . . .   8\n   6.  RTCP XR IDMS Report Block . . . . . . . .
    . . . . . . . . . .   8\n   7.  RTCP Packet Type for IDMS (IDMS Settings Packet)
    \ . . . . . .  11\n   8.  Timing and NTP Considerations . . . . . . . . . . .
    . . . . .  13\n   9.  On the Use of Presentation Timestamps . . . . . . . . .
    . . .  14\n   10. SDP Signaling for RTCP IDMS Settings Packet . . . . . . . .
    .  15\n   11. SDP Rules . . . . . . . . . . . . . . . . . . . . . . . . . .  16\n
    \    11.1.  Offer/Answer Rules . . . . . . . . . . . . . . . . . . .  16\n     11.2.
    \ Declarative Cases  . . . . . . . . . . . . . . . . . . .  17\n   12. Security
    Considerations . . . . . . . . . . . . . . . . . . .  17\n   13. IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .  18\n     13.1.  RTCP IDMS Packet Type
    \ . . . . . . . . . . . . . . . . .  18\n     13.2.  RTCP XR IDMS Report Block
    \ . . . . . . . . . . . . . . .  19\n     13.3.  RTCP-IDMS SDP Attribute  . .
    . . . . . . . . . . . . . .  19\n     13.4.  IDMS XR Block SPST Registry  . .
    . . . . . . . . . . . .  19\n     13.5.  Contact Information for Registrations
    \ . . . . . . . . .  20\n   14. Contributors  . . . . . . . . . . . . . . . .
    . . . . . . . .  20\n   15. References  . . . . . . . . . . . . . . . . . . .
    . . . . . .  21\n     15.1.  Normative References . . . . . . . . . . . . . .
    . . . .  21\n     15.2.  Informative References . . . . . . . . . . . . . . .
    . .  21\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   IDMS refers to the playout of media streams at two or more\n
    \  geographically distributed locations in a time-synchronized manner.\n   It
    can be applied to both unicast and multicast media streams and can\n   be applied
    to any type and/or combination of streaming media, such as\n   audio, video, and
    text (subtitles).  [Ishibashi2006] and\n   [Boronat2009] provide an overview of
    technologies and algorithms for\n   IDMS.\n   Inter-Destination Media Synchronization
    (IDMS) requires the exchange\n   of information on media arrival and presentation
    times among\n   participants in an IDMS session.  It may also require signaling
    for\n   the initiation and maintenance of IDMS sessions and groups of\n   receivers.\n
    \  The presented RTCP specification for IDMS is independent of the\n   synchronization
    algorithm employed, which is out of scope of this\n   document.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
      2119 [RFC2119].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - '2.  Rationale

    '
  - contents:
    - "2.1.  Applicability of RTCP to IDMS\n   Currently, a large share of real-time
      applications make use of RTP\n   and RTCP [RFC3550].  RTP provides end-to-end
      network transport\n   functions suitable for applications requiring real-time
      data\n   transport, such as audio, video, or data, over multicast or unicast\n
      \  network services.  The timestamps, sequence numbers, and payload\n   (content)
      type identification mechanisms provided by RTP packets are\n   very useful for
      reconstructing the original media timing and the\n   original order of packets
      and for detecting packet loss at the\n   receiver.\n   The data transport is
      augmented by a control protocol (RTCP) to allow\n   monitoring of the data delivery
      in a manner that is scalable to large\n   groups and to provide minimal control
      and identification\n   functionality.  RTP receivers and senders provide reception
      quality\n   feedback by sending out RTCP receiver report (RR) and sender report\n
      \  (SR) packets [RFC3550], respectively, which may be augmented by\n   extended
      report (XR) blocks [RFC3611].\n   IDMS involves the collection, summarization,
      and distribution of RTP\n   packet arrival and presentation times.  As information
      on RTP packet\n   arrival times and presentation times can be considered reception\n
      \  quality feedback information, RTCP is well suited for carrying out\n   IDMS.\n"
    title: 2.1.  Applicability of RTCP to IDMS
  - contents:
    - "2.2.  IDMS and ETSI\n   A first version of IDMS for use with RTP/RTCP was standardized
      by\n   ETSI Telecommunications and Internet converged Services and Protocols\n
      \  for Advanced Networking (TISPAN) in [TS183063], resulting in an IANA\n   registration
      for an RTCP XR Block Type.  This work was then brought\n   as input to the IETF
      AVTCORE WG for further standardization,\n   leveraging the RTP/RTCP expertise
      present in the AVTCORE WG.  This\n   document is the result of that effort.\n
      \  Although the IDMS protocol described in this document has evolved\n   significantly
      from the version that was originally specified by ETSI\n   TISPAN, it is still
      backwards compatible with the ETSI version.  As\n   such, it had been decided
      in ETSI to update the TS 183 063 document\n   to reference this document as
      the normative specification of IDMS.\n   This update can be found in newer versions
      of TS 183 063 (i.e.,\n   versions higher than 3.5.2).  In accordance, this document
      proposes\n   to update the IANA registration for the RTCP XR IDMS Report Block
      to\n   point to this document.  Finally, this document proposes an IANA\n   registry
      for Synchronization Packet Sender Type (SPST) values,\n   allowing the registration
      of extensions to this document.\n"
    title: 2.2.  IDMS and ETSI
  title: 2.  Rationale
- contents:
  - "3.  Inter-Destination Media Synchronization (IDMS) Use Cases\n   There is a large
    number of use cases in which IDMS might be useful.\n   This section will highlight
    some of them.  It should be noted that\n   this section is in no way meant to
    be exhaustive.\n   A first usage scenario for IDMS is social TV.  Social TV is
    the\n   combination of media content consumption by two or more users at\n   different
    devices and locations combined with real-time communication\n   between those
    users.  An example of social TV is when two or more\n   users are watching the
    same television broadcast at different devices\n   and locations, while communicating
    with each other using text, audio,\n   and/or video.  A skew in their media playout
    processes can have\n   adverse effects on their experience.  A well-known use
    case here is\n   one friend experiencing a goal in a football match well before
    or\n   after another friend(s).\n   Another potential use case for IDMS is a networked
    video wall.  A\n   video wall consists of multiple computer monitors, video projectors,\n
    \  or television sets tiled together contiguously or overlapped in order\n   to
    form one large screen.  Each of the screens reproduces a portion\n   of the larger
    picture.  In some implementations, each screen may be\n   individually connected
    to the network and receive its portion of the\n   overall image from a network-connected
    video server or video scaler.\n   Screens are refreshed at 60 hertz (every 16-2/3
    milliseconds) or\n   potentially faster.  If the refresh is not synchronized,
    the effect\n   of multiple screens acting as one is broken, with users noticing\n
    \  tearing effects and no longer perceiving a single image.\n   A third usage
    scenario is that of networked loudspeakers in which two\n   or more speakers are
    connected to the network individually.  Such\n   situations can, for example,
    be found in large conference rooms,\n   legislative chambers, classrooms (especially
    those supporting\n   distance learning), and other large-scale environments such
    as\n   stadiums.  Since humans are more sensitive to differences in audio\n   delay
    compared to video delay, this use case needs even more accuracy\n   than the video
    wall use case.  Depending on the exact application,\n   the need for accuracy
    can then be in the range of microseconds.\n"
  title: 3.  Inter-Destination Media Synchronization (IDMS) Use Cases
- contents:
  - "4.  Overview of IDMS Operation\n   This section provides a brief example of how
    the RTCP functionality\n   is used for achieving IDMS.  The section is tutorial
    in nature and\n   does not contain any normative statements.\n             Alice's
    \ . . . . . . .tv:abc.com . . . . . . . Bob's\n        TV (Sync Client)         (Sync
    Server)      Laptop (Sync Client)\n               |                       |                          |\n
    \              |      Media Session    |                          |\n               |<=====================>|
    \                         |\n               |            Invite(URL, SyncGroupId)
    \             |\n               |------------------------------------------------->|\n
    \              |                       |   Media Session Setup    |\n               |
    \                      |<========================>|\n               |                       |
    \                         |\n               |                 Call Setup                       |\n
    \              |<================================================>|\n               |
    \                      |                          |\n               |       RTP
    Packets     |        RTP Packets       |\n               |<----------------------|------------------------->|\n
    \              |  RR + XR IDMS Report  |                          |\n               |---------------------->|
    \   RR + XR IDMS Report   |\n               |                       |<-------------------------|\n
    \              |   RTCP IDMS Settings  |    RTCP IDMS Settings    |\n               |<----------------------|------------------------->|\n
    \              |                       |                          |\n                  Figure
    1: Example of a Typical IDMS Session\n   Alice is watching TV in her living room.
    \ At some point, she sees\n   that Bob's favorite team is playing football.  She
    sends him an\n   invite to watch the program together.  Embedded in the invitation
    is\n   the link to the media server and a unique sync-group identifier.\n   Bob,
    who is also at home, receives the invite on his laptop.  He\n   accepts Alice's
    invitation, and the RTP client on his laptop sets up\n   a session with the media
    server.  A Voice over IP (VoIP) connection\n   to Alice's TV is also set up, so
    that Alice and Bob can talk while\n   watching the game together.\n   As is common
    with RTP, both the RTP client in Alice's TV as well as\n   the one in Bob's laptop
    send periodic RTCP RRs to the media server.\n   However, in order to make sure
    Alice and Bob see the events in the\n   football game at the same time, their
    clients also periodically send\n   an RTCP XR IDMS Report Block to the Sync Server
    function of the media\n   server.  Included in the RTCP XR IDMS Report Blocks
    are timestamps on\n   when both Alice and Bob received (and, optionally, when
    they played\n   out) a particular RTP packet.\n   The Sync Server function in
    the media server calculates a reference\n   client from the received RTCP XR IDMS
    Report Blocks (e.g., by\n   selecting the most lagged client as the reference
    for IDMS).  It then\n   sends an RTCP IDMS Settings Packet containing the playout
    information\n   of this reference client to the sync clients of both Alice and
    Bob.\n   In this case, Bob's connection has the longest delay and the\n   reference
    client, therefore, includes a delay similar to the one\n   experienced by Bob.
    \ Upon reception of this information, Alice's RTP\n   client can choose what to
    do with this information.  In this case, it\n   decreases its playout rate temporarily
    until the playout time matches\n   with the reference client playout (and, thus,
    matches Bob's playout).\n   Another option for Alice's TV would be to simply pause
    playback until\n   it catches up.  The exact implementation of the synchronization\n
    \  algorithm is up to the client.\n   Upon reception of the RTCP IDMS Settings
    Packet, Bob's client does\n   not have to do anything since it is already synchronized
    to the\n   reference client (since it is based on Bob's delay).  Note that other\n
    \  synchronization algorithms may introduce even more delay than the one\n   experienced
    by the most delayed client, e.g., to account for delay\n   variations, for new
    clients joining an existing synchronization\n   group, etc.\n   For this functionality
    to work correctly, it is necessary that the\n   wallclocks of the receivers are
    synchronized with each other.  While\n   Alice and Bob both report when they receive,
    and optionally when they\n   playout, certain RTP packets, in order to correlate
    their reports to\n   each other, it is necessary that their wallclocks are synchronized.\n"
  title: 4.  Overview of IDMS Operation
- contents:
  - "5.  Architecture for Inter-Destination Media Synchronization\n   The architecture
    for IDMS, which is based on a sync-maestro\n   architecture [Boronat2009], is
    diagrammed below.  In this particular\n   case, the Synchronization Client (SC)
    and Media Synchronization\n   Application Server (MSAS) entities are shown as
    additional\n   functionality for the RTP receiver and sender, respectively.\n
    \     +-----------------------+        +-----------------------+\n      |                       |
    \ SR +  |                       |\n      |      RTP Receiver     |  RTCP  |      RTP
    Sender       |\n      |                       |  IDMS  |                       |\n
    \     |  +-----------------+  | <----- |  +-----------------+  |\n      |  |                 |
    \ |        |  |                 |  |\n      |  | Synchronization |  |        |
    \ |      Media      |  |\n      |  |     Client      |  |        |  | Synchronization
    |  |\n      |  |      (SC)       |  |        |  |   Application   |  |\n      |
    \ |                 |  |        |  |      Server     |  |\n      |  |                 |
    \ | RR+XR  |  |      (MSAS)     |  |\n      |  |                 |  | -----> |
    \ |                 |  |\n      |  +-----------------+  |        |  +-----------------+
    \ |\n      |                       |        |                       |\n      +-----------------------+
    \       +-----------------------+\n                  Figure 2: IDMS Architecture
    Diagram\n"
  - contents:
    - "5.1.  Media Synchronization Application Server (MSAS)\n   An MSAS collects
      RTP packet arrival times and presentation times from\n   one or more SCs in
      a synchronization group by receiving RTCP XR IDMS\n   reports.  The MSAS summarizes
      and distributes this information to the\n   SCs in the synchronization group
      as synchronization settings via the\n   RTCP IDMS Settings Packet messages,
      e.g., by determining the SC with\n   the most lagged playout and using its reported
      RTP packet arrival\n   time and presentation time as a summary.\n   It should
      be noted that while the diagram above shows the MSAS as\n   part of the RTP
      sender, this is not necessary.  For example, an MSAS\n   might also be implemented
      as an independent function in the network\n   or in a master/slave type of architecture
      where one of the SC devices\n   also acts as an MSAS.  Wherever the MSAS is
      implemented, it is\n   important that the MSAS has access to the RTP stream
      to which the XR\n   reports apply, so that it is able to correlate the RTCP
      XR IDMS\n   reports coming from different SCs.\n"
    title: 5.1.  Media Synchronization Application Server (MSAS)
  - contents:
    - "5.2.  Synchronization Client (SC)\n   An SC reports on RTP packet arrival times
      and presentation times of a\n   media stream.  It can receive IDMS Settings
      Packets containing\n   summaries of such information and use that to adjust
      its playout\n   buffer.  The SC sends RTCP XR IDMS reports to the MSAS.\n"
    title: 5.2.  Synchronization Client (SC)
  - contents:
    - "5.3.  Communication between MSAS and SCs\n   Two different message types are
      used for the communication between\n   MSAS and SCs.  For the SC->MSAS message
      containing the arrival and\n   playout information of a particular client, an
      RTCP XR IDMS Report\n   Block is used (see Section 6).  For the MSAS->SC message
      containing\n   the synchronization settings instructions, a new RTCP IDMS Settings\n
      \  Packet is defined (see Section 7).\n"
    title: 5.3.  Communication between MSAS and SCs
  title: 5.  Architecture for Inter-Destination Media Synchronization
- contents:
  - "6.  RTCP XR IDMS Report Block\n   This section specifies a new RTCP XR Block
    Type, the RTCP XR IDMS\n   Report Block, for reporting IDMS information to an
    MSAS.  In\n   particular, it is used to provide feedback information on arrival\n
    \  times and presentation times of RTP packets.  Its definition is based\n   on
    [RFC3550] and [RFC3611].\n   In most cases, a single RTP receiver will only be
    part of a single\n   IDMS session, i.e., it will report on arrival and presentation
    times\n   of RTP packets from a single RTP stream in a certain synchronization\n
    \  group.  In some cases, however, an RTP receiver may be a member of\n   multiple
    synchronization groups for the same RTP stream, e.g.,\n   watching a single television
    program simultaneously with different\n   groups.  In even further cases, a receiver
    may wish to synchronize\n   different RTP streams at the same time, either as
    part of the same\n   synchronization group or as part of multiple synchronization
    groups.\n   These are all valid scenarios for IDMS and will require multiple\n
    \  reports by an SC.\n   This document does not define new rules for when to send
    RTCP\n   reports, but uses the existing rules specified in [RFC3550] for\n   sending
    RTCP reports.  When the RTCP reporting timer allows an SC to\n   send an IDMS
    report, the SC SHOULD report on an RTP packet received\n   during the period since
    the last RTCP XR IDMS Report Block was sent.\n   Because of RTP timestamp rollover,
    there is ambiguity in mapping RTP\n   timestamps to NTP timestamps.  The recommendation
    to report on recent\n   RTP packets serves to manage this ambiguity.  For more
    details on\n   which packet to report on, see below under \"Packet Received RTP\n
    \  timestamp\".\n    0                   1                   2                   3\n
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |     BT=12     | SPST  |Resrv|P|         block length=7        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |     PT      |               Resrv                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |              Media Stream Correlation Identifier              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |                     SSRC of media source                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |      Packet Received NTP timestamp, most significant word     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |      Packet Received NTP timestamp, least significant word    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |              Packet Received RTP timestamp                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |              Packet Presented NTP timestamp                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The RTCP XR IDMS Report Block consists of 8 32-bit words, with the\n   following
    fields:\n   Block Type (BT): 8 bits.  It identifies the block format.  Its value\n
    \  is set to 12.\n   Synchronization Packet Sender Type (SPST): 4 bits.  This
    field\n   identifies the role of the packet sender for this specific Extended\n
    \  Report.  It can have the following values, as enumerated in a\n   registry
    maintained by IANA (see Section 13.4):\n      SPST=0 Reserved for future use.\n
    \     SPST=1 The packet sender is an SC.  It uses this XR to report\n      synchronization
    status information.  Timestamps relate to the SC\n      input.\n      SPST=2-4
    Values defined by ETSI TISPAN (see [TS183063]).\n      SPST=5-15 Unassigned.\n
    \  Reserved bits (Resrv): 3 bits.  These bits are reserved for future\n   definition.
    \ In the absence of such a definition, the bits in this\n   field MUST be set
    to zero at transmission and MUST be ignored by the\n   receiver.\n   Packet Presented
    NTP timestamp flag (P): 1 bit.  Bit set to 1 if the\n   Packet Presented NTP timestamp
    field contains a value, 0 if it is\n   empty.  If this flag is set to 0, then
    the Packet Presented NTP\n   timestamp SHALL be ignored by the receiver.\n   Block
    Length: 16 bits.  This field indicates the length of the block\n   in 32-bit words
    minus one and is set to 7, as this RTCP XR IDMS Block\n   Report has a fixed length.\n
    \  Payload Type (PT): 7 bits.  This field identifies the format of the\n   media
    payload, according to [RFC3551].  This is the payload type of\n   the RTP packet
    reported upon.  The PT field is needed in the case\n   where the MSAS is neither
    the media server nor a receiver of the\n   media stream, i.e., it is implemented
    as a third-party entity.  In\n   such cases, the MSAS needs the PT to determine
    the rate of\n   advancement of the timestamps of the RTP media stream to be able
    to\n   relate reports from different SCs on different RTP timestamp values.\n
    \  Reserved bits (Resrv): 25 bits.  These bits are reserved for future\n   use
    and SHALL be set to 0 at transmission and MUST be ignored by the\n   receiver.\n
    \  Media Stream Correlation Identifier: 32 bits.  This identifier is\n   used
    to correlate synchronized media streams.  The value 0 (all bits\n   are set \"0\")
    indicates that this field is empty.  The value 2^32-1\n   (all bits are set \"1\")
    is reserved for future use.  If the RTCP\n   Packet Sender is an SC (SPST=1),
    then the Media Stream Correlation\n   Identifier field contains the Synchronization
    Group Identifier\n   (SyncGroupId) to which the report applies.\n   Synchronization
    Source (SSRC): 32 bits.  The SSRC of the media source\n   is set to the value
    of the SSRC identifier carried in the RTP header\n   [RFC3550] of the RTP packet
    to which the XR IDMS relates.\n   Packet Received NTP timestamp: 64 bits.  This
    timestamp reflects the\n   wallclock time at the moment of arrival of the first
    octet of the RTP\n   packet to which the XR IDMS relates.  It is formatted based
    on the\n   NTP timestamp format as specified in [RFC5905].  See Section 8 for\n
    \  more information on how this field is used.\n   Packet Received RTP timestamp:
    32 bits.  This timestamp has the value\n   of the RTP timestamp carried in the
    RTP header [RFC3550] of the RTP\n   packet to which the XR IDMS relates.  Several
    consecutive RTP packets\n   will have equal timestamps if they are (logically)
    generated at once,\n   e.g., belong to the same video frame.  It may well be the
    case that\n   one receiver reports on the first RTP packet that has a certain
    RTP\n   timestamp, and a second receiver reports on the last RTP packet that\n
    \  has that same RTP timestamp.  This would lead to an error in the\n   synchronization
    algorithm due to the faulty interpretation of\n   considering both reports to
    be on the same RTP packet.  When\n   reporting on an RTP packet, which is one
    of several consecutive RTP\n   packets having equal timestamps, an SC SHOULD report
    on the RTP\n   packet it received with the lowest sequence number.  Note that\n
    \  'lowest sequence number' here is meant to be the first in the\n   sequence
    of RTP packets just received, not from an earlier time\n   before the last wrap
    around of RTP timestamps (unless this wrap\n   around occurs during the sequence
    with equal RTP timestamps).\n   Packet Presented NTP timestamp: 32 bits.  This
    timestamp reflects the\n   wallclock time at the moment the rendered media unit
    (e.g., video\n   frame or audio sample) contained in the first byte of the associated\n
    \  RTP packet is presented to the user.  It is based on the time format\n   used
    by NTP and consists of the least significant 16 bits of the NTP\n   seconds part
    and the most significant 16 bits of the NTP fractional\n   second part.  If no
    Packet Presented NTP timestamp is available, this\n   field SHALL be set to 0
    and be considered empty, and the Packet\n   Presented NTP timestamp flag (P) SHALL
    be set to 0.  With regards to\n   NTP epoch and rollover, the value of the Packet
    Presented NTP\n   timestamp is considered to always be greater than the Packet
    Received\n   NTP timestamp and to be within 2^16 seconds of it.  Presented in
    this\n   context means the moment the data is played out to the user of the\n
    \  system, i.e., sound played out through speakers, video images being\n   displayed
    on some display, etc.  The accuracy resulting from the\n   synchronization algorithm
    will only be as good as the accuracy with\n   which the SCs can determine the
    delay between receiving packets and\n   presenting them to the end user.  If no
    presentation timestamps are\n   reported by SCs, the ability to accurately synchronize
    playout may be\n   limited.\n"
  title: 6.  RTCP XR IDMS Report Block
- contents:
  - "7.  RTCP Packet Type for IDMS (IDMS Settings Packet)\n   This section specifies
    the RTCP packet type for indicating\n   synchronization settings instructions
    to the receivers of the RTP\n   media stream.  Its definition is based on [RFC3550].
    \ Synchronization\n   settings take the form of a report referencing a real or
    hypothetical\n   RTP packet selected or contrived by the MSAS.\n    0                   1
    \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
    6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |V=2|P| Resrv   |     PT=211    |             length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |                     SSRC of packet sender                     |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n
    \  |                     SSRC of media source                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |              Media Stream Correlation Identifier              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |      Packet Received NTP timestamp, most significant word     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |      Packet Received NTP timestamp, least significant word    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |              Packet Received RTP timestamp                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |     Packet Presented NTP timestamp, most significant word     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |     Packet Presented NTP timestamp, least significant word    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The first 64 bits form the header of the RTCP packet type, as defined\n   in
    [RFC3550].  The SSRC of the packet sender identifies the sender of\n   the specific
    RTCP packet.\n   The RTCP IDMS Settings Packet consists of 7 32-bit words, with
    the\n   following fields:\n   PT: 211, as registered by IANA.\n   SSRC: 32 bits.
    \ The SSRC of the media source is set to the value of\n   the SSRC identifier
    of the media source carried in the RTP header\n   [RFC3550] of the RTP packet
    to which the RTCP IDMS Settings Packet\n   relates.\n   Media Stream Correlation
    Identifier: 32 bits.  This identifier is\n   used to correlate synchronized media
    streams.  The value 0 (all bits\n   are set \"0\") indicates that this field is
    empty.  The value 2^32-1\n   (all bits are set \"1\") is reserved for future use.
    \ The Media Stream\n   Correlation Identifier contains the SyncGroupId of the
    group to which\n   this packet is sent.\n   Packet Received NTP timestamp: 64
    bits.  This timestamp reflects the\n   wallclock time at the reference client
    at the moment it received the\n   first octet of the RTP packet to which this
    packet relates.  It can\n   be used by the synchronization algorithm on the receiving
    SC to\n   adjust its playout timing in order to achieve synchronization, e.g.,\n
    \  to set the required playout delay.  The timestamp is formatted based\n   on
    the NTP timestamp format as specified in [RFC5905].  See Section 8\n   for more
    information on how this field is used.  Because RTP\n   timestamps do wrap around,
    the sender of this packet MUST use recent\n   values, i.e., choose NTP timestamps
    that reflect current time and not\n   too far in the future or in the past so
    as to create ambiguity with\n   regards to RTP timestamp wrap around.\n   Packet
    Received RTP timestamp: 32 bits.  This timestamp has the value\n   of the RTP
    timestamp carried in the RTP header [RFC3550] of the RTP\n   packet to which the
    XR IDMS relates.  This SHOULD relate to the first\n   arriving RTP packet containing
    this particular RTP timestamp, in case\n   multiple consecutive RTP packets contain
    the same RTP timestamp.\n   Packet Presented NTP timestamp: 64 bits.  This timestamp
    reflects the\n   wallclock time at the reference client at the moment it presented
    the\n   rendered media unit (e.g., video frame or audio sample) contained in\n
    \  the first octet of the associated RTP packet to the user.  The\n   timestamp
    is formatted based on the NTP timestamp format as specified\n   in [RFC5905].
    \ If no Packet Presented NTP timestamp is available,\n   this field SHALL be set
    to 0 and be considered empty.  This field MAY\n   be left empty if none or only
    one of the receivers reported on\n   presentation timestamps.  Presented here
    means the moment the data is\n   played out to the user of the system.\n   In
    some use cases (e.g., phased array transducers), the level of\n   control an MSAS
    might need to have over the exact moment of playout\n   is so precise that a 32-bit
    Presented timestamp will not suffice.\n   For this reason, this RTCP packet type
    for IDMS includes a 64-bit\n   Presented Timestamp field.  Since an MSAS will
    in practice always add\n   some extra delay to the delay reported by the most
    lagged receiver\n   (to account for packet jitter), it suffices for the RTCP XR
    IDMS\n   Report Block with which the SCs report on their playout to have a\n   32-bit
    Presented Timestamp field.\n"
  title: 7.  RTCP Packet Type for IDMS (IDMS Settings Packet)
- contents:
  - "8.  Timing and NTP Considerations\n   To achieve IDMS, the different receivers
    involved need synchronized\n   wallclocks as a common timeline for synchronization.
    \ This\n   synchronized clock is used for reporting the Packet Received NTP\n
    \  timestamp and the Packet Presented NTP timestamp, and for\n   interpretation
    of these fields in received IDMS Settings Packets.\n   Depending on the synchronization
    accuracy required, different clock\n   synchronization methods can be used.  For
    social TV, synchronization\n   accuracy should be achieved on the order of hundreds
    of milliseconds.\n   In that case, correct use of NTP on receivers will in most
    situations\n   achieve the required accuracy.  As a guideline, to deal with clock\n
    \  drift of receivers, receivers should synchronize their clocks at the\n   beginning
    of a synchronized session.  In case of high required\n   accuracy, the synchronized
    clocks of different receivers should not\n   drift beyond the accuracy required
    for the synchronization mechanism.\n   In practice, this can mean that receivers
    need to synchronize their\n   clocks repeatedly during a synchronization session.\n
    \  Because of the stringent synchronization requirements for achieving\n   good
    audio quality in some use cases, a high accuracy will be needed.\n   In this case,
    use of the global NTP system may not be sufficient.\n   For improved accuracy,
    a local NTP server could be set up, or some\n   other more accurate clock synchronization
    mechanism can be used, such\n   as GPS time or the Precision Time Protocol [IEEE1588-2008].\n
    \  [RFC7273] defines a set of Session Description Protocol (SDP)\n   parameters
    for signaling the clock synchronization source or sources\n   available to and
    used by the individual receivers.  SCs MAY use\n   [RFC7273] to indicate their
    clock synchronization source or sources\n   in use and available.  Using these
    parameters, an SC can indicate\n   which synchronization source is being used
    at the moment.  An SC can\n   also indicate any other synchronization sources
    available to it.\n   This allows multiple SCs in an IDMS session to use the same
    or a\n   similar clock source for their session.\n   Applications performing IDMS
    may or may not be able to choose a\n   synchronization method for the system clock
    because this may be a\n   system-wide setting that the application cannot change.
    \ How\n   applications deal with this is up to the implementation.  The\n   application
    might control the system clock, or it might use a\n   separate application clock
    or even a separate IDMS session clock.  It\n   might also report on the system
    clock and the synchronization method\n   used, without being able to change it.\n
    \  [RFC7164] presents some guidelines on how RTP senders and receivers\n   should
    deal with leap seconds.  When relying on NTP for clock\n   synchronization, IDMS
    is particularly sensitive to\n   leap-second-induced timing discrepancies.  It
    is RECOMMENDED to take\n   the guidelines specified in [RFC7164] into account
    when implementing\n   IDMS.\n"
  title: 8.  Timing and NTP Considerations
- contents:
  - "9.  On the Use of Presentation Timestamps\n   A receiver can report on different
    timing events, i.e., on packet\n   arrival times and on playout or presentation
    times.  A receiver SHALL\n   report on arrival times and a receiver MAY report
    on playout times.\n   RTP packet arrival times are relatively easy to report on.
    \ Normally,\n   the processing and playout of the same media stream by different\n
    \  receivers will take roughly the same amount of time.  Synchronizing\n   on
    packet arrival times may lead to some accuracy loss, but it will\n   be adequate
    for many applications, such as social TV.\n   Also, if the receivers are in some
    way controlled, e.g., having the\n   same buffer settings and decoding and rendering
    times, high accuracy\n   can be achieved.  However, if all receivers in a synchronization\n
    \  session have the ability to report on and, thus, synchronize on\n   actual
    presentation times, this will be more accurate.  It is up to\n   the applications
    and implementations of this RTCP extension whether\n   to implement and use presentation
    timestamps.\n"
  title: 9.  On the Use of Presentation Timestamps
- contents:
  - "10.  SDP Signaling for RTCP IDMS Settings Packet\n   The SDP attribute rtcp-idms
    is used to signal the use of the RTCP\n   IDMS Settings Packet and the associated
    RTCP XR IDMS Report Block.\n   It is also used to carry an identifier of the synchronization
    group\n   to which clients belong or will belong.  The SDP attribute is used as\n
    \  a media-level attribute during session setup.  This means that in\n   case
    of multiple related streams, IDMS is performed on one of them.\n   The other streams
    will be synchronized to this reference or master\n   stream using existing inter-stream
    synchronization (such as lip-sync)\n   solutions, i.e., using sender reports based
    on a common clock source.\n   Basic guidelines for choosing the media stream for
    IDMS is to choose\n   audio above video, as humans are most sensitive to degradation
    in\n   audio synchronization.  When using multi-description or multi-view\n   codecs,
    the IDMS control should be performed on the base layer.\n   This SDP attribute
    is defined as follows, using Augmented Backus-Naur\n   Form [RFC5234].\n   rtcp-idms
    = \"a=\" \"rtcp-idms\" \":\" sync-grp CRLF\n   sync-grp = \"sync-group=\" SyncGroupId\n
    \  SyncGroupId = 1*10DIGIT ; Decimal value from 0 through 4294967294\n   DIGIT
    = %x30-39\n   SyncGroupId is a 32-bit unsigned integer and represented in decimal.\n
    \  SyncGroupId identifies a group of SCs for IDMS.  The value\n   SyncGroupId=0
    represents an empty SyncGroupId.  The value 4294967295\n   (2^32-1) is reserved
    for future use.  For a description on the value\n   of SyncGroupId to include,
    see Section 11.\n   The following is an example of the SDP attribute for IDMS.\n
    \  a=rtcp-idms:sync-group=42\n"
  title: 10.  SDP Signaling for RTCP IDMS Settings Packet
- contents:
  - '11.  SDP Rules

    '
  - contents:
    - "11.1.  Offer/Answer Rules\n   The SDP usage for IDMS follows the rules defined
      in [RFC4566] and\n   Section 5 of [RFC3611] on SDP signaling with the exception
      of what is\n   stated here.  The IDMS usage of RTCP is a loosely coupled\n   collaborative
      attribute, in the sense that receivers send their\n   status information and,
      in response, the MSAS asynchronously sends\n   synchronization setting instructions.
      \ The rtcp-idms attribute, thus,\n   indicates the ability to send and receive
      indicated RTCP messages.\n   This section defines how this SDP attribute should
      be used with\n   regard to an offer/answer context.\n   It is expected that,
      in most cases, the rtcp-idms attribute will be\n   used in an offer/answer context
      where receivers will have\n   predetermined, through some means outside the
      scope of this document,\n   a SyncGroupId before the media session is set up.
      \ However, A sender\n   that assigns a SyncGroupId is also supported for cases,
      for example,\n   where the MSAS contains group management functionality and
      is\n   co-located with or otherwise communicates with the sender.  Thus,\n   both
      senders and receivers can insert the attribute and the\n   SyncGroupId.  Furthermore,
      the attribute is allowed to be inserted\n   for more than one media stream,
      allowing an SC to become part of\n   multiple synchronization groups simultaneously.
      \ This effectively\n   couples two (or more) synchronization groups to each
      other.  If the\n   rtcp-idms attribute is inserted more than once for a particular
      media\n   session, each SyncGroupId SHALL only be inserted once.\n   In order
      to join an IDMS session, the receiver (the SC) inserts the\n   rtcp-idms attribute
      as a media-level attribute in the SDP offer.\n   This SDP offer can be an initial
      offer if the media session is\n   starting as a synchronized session.  The SDP
      offer can also be an\n   update to an existing media session, converting the
      session to an\n   IDMS session.  If the receiver has a predetermined SyncGroupId
      value,\n   it SHOULD use this value for setting the SyncGroupId parameter in
      the\n   rtcp-idms attribute.  If the receiver does not know the SyncGroupId\n
      \  to be used, it MAY leave the SyncGroupId parameter empty by setting\n   its
      value to 0.\n   The sender SHALL include the rtcp-idms attribute in its answer.
      \ If\n   the value of the SyncGroupId parameter in the offer is not empty (not\n
      \  equal to 0), the sender SHOULD NOT change the SyncGroupId in its\n   answer.
      \ If the SyncGroupId is empty, the sender SHALL include the\n   proper SyncGroupId
      in its answer.  If the sender receives an offer\n   with the value of the SyncGroupId
      parameter set to 0, and cannot\n   determine the proper SyncGroupId, it SHALL
      remove the attribute from\n   its answer.\n   A sender receiving an SDP offer
      without the rtcp-idms attribute can\n   also decide that IDMS is applicable
      to that media session.  In such a\n   case, the sender MAY insert the rtcp-idms
      attribute, including a non-\n   empty SyncGroupId, as part of its answer.\n
      \  A receiver receiving an rtcp-idms attribute as part of the SDP answer\n   from
      a sender SHALL start sending RTCP XR IDMS reports (following all\n   the normal
      RTCP rules for sending RTCP XR IDMS Report Blocks) and\n   SHALL be ready to
      start receiving IDMS Settings.  As usual, if a\n   receiver does not support
      the attribute (e.g., in case of an MSAS-\n   inserted IDMS attribute), it SHALL
      ignore the attribute.\n   Different updates are applicable to such an IDMS session.
      \ Updates\n   can be sent omitting the rtcp-idms attribute, thereby ending\n
      \  involvement in the synchronization session.  Updates can also be sent\n   including
      the rtcp-idms attribute, but with a different SyncGroupId.\n   This indicates
      a switch in the synchronization group.\n"
    title: 11.1.  Offer/Answer Rules
  - contents:
    - "11.2.  Declarative Cases\n   In certain situations, there is no offer/answer
      context, but only a\n   declarative modus.  In this case, the MSAS just inserts
      the rtcp-idms\n   attribute and a valid SyncGroupId.  Any receiver receiving
      the rtcp-\n   idms attribute in such a declarative case SHALL start sending
      RTCP XR\n   IDMS Report Blocks and SHALL be ready to start receiving RTCP IDMS\n
      \  Settings Packets.\n"
    title: 11.2.  Declarative Cases
  title: 11.  SDP Rules
- contents:
  - "12.  Security Considerations\n   The security considerations described in [RFC3611]
    apply to this\n   document as well.\n   The RTCP XR IDMS Report Block defined
    in this document is used to\n   collect, summarize, and distribute information
    on packet reception\n   and playout times of streaming media.  The information
    may be used to\n   orchestrate the media playout at multiple devices.\n   Errors
    in the information, either accidental or malicious, may lead\n   to undesired
    behavior.  For example, if one device erroneously or\n   maliciously reports a
    two-hour delayed playout, then another device\n   in the same synchronization
    group could decide to delay its playout\n   by two hours as well, in order to
    keep its playout synchronized.  A\n   user would likely interpret this two-hour
    delay as a malfunctioning\n   service.\n   Therefore, the application logic of
    both SCs and MSASs should check\n   for out-of-bound information.  Differences
    in playout time exceeding\n   configured limits (e.g., more than ten seconds)
    could be an\n   indication of such out-of-bound information.\n   Apart from checking
    for out-of-bound information in the endpoints, an\n   IDMS implementation can
    reduce its vulnerability to attacks by\n   including source authentication and
    message integrity measures,\n   reducing the potential for man-in-the-middle attacks.
    \ [RFC7201]\n   provides an overview of the security options in RTP environments
    and\n   includes a set of recommendations for message integrity and source\n   authentication
    that are applicable to IDMS.  In addition to\n   preventing man-in-the-middle
    attacks from inserting erroneous IDMS\n   reports, the message confidentiality
    mechanisms outlined in [RFC7201]\n   also prevent third parties from determining
    that two or more end\n   hosts are receiving the same stream by looking at the
    Media Stream\n   Correlation Identifier.\n   Apart from attacking an IDMS session
    directly by sending incorrect\n   IDMS reports, and with it introducing delays
    for all devices in a\n   synchronization group, another potential vulnerability
    comes from the\n   clock synchronization method used.  Should an attacker succeed
    in\n   adjusting an SC's wallclock, that SC will report incorrect IDMS\n   reports.
    \ In order to prevent such clock synchronization attacks, it\n   is recommended
    to use a secure time synchronization service.\n"
  title: 12.  Security Considerations
- contents:
  - "13.  IANA Considerations\n   This document defines a new RTCP packet type, the
    RTCP IDMS Packet\n   (IDMS Settings), within the existing Internet Assigned Numbers\n
    \  Authority (IANA) registry of RTCP Control Packet Types.  This\n   document
    also defines a new RTCP XR Block Type, the RTCP XR IDMS\n   Report Block, within
    the existing IANA registry of RTCP Extended\n   Reports (RTCP XR) Block Types.\n
    \  Further, this document defines a new SDP attribute \"rtcp-idms\" within\n   the
    existing IANA registry of SDP Parameters, which is part of the\n   \"att-field
    (media level only)\".  Finally, this document defines a new\n   IANA registry
    subordinate to the IANA RTCP Extended Reports (RTCP XR)\n   Block Type Registry:
    the IDMS XR Block SPST Registry.\n"
  - contents:
    - "13.1.  RTCP IDMS Packet Type\n   This document assigns the packet type value
      211 in the IANA 'RTCP\n   Control Packet types (PT)' registry to the RTCP IDMS
      Packet (IDMS\n   Settings).\n"
    title: 13.1.  RTCP IDMS Packet Type
  - contents:
    - "13.2.  RTCP XR IDMS Report Block\n   This document updates the assignment of
      value 12 from the RTCP XR\n   Block Type for reporting IDMS information as per
      [TS183063] to the\n   RTCP XR IDMS Report Block defined in this document.\n
      \  The RTCP XR IDMS Report Block contains an extensible SPST value\n   field;
      therefore, a new registry for this field is required.  This\n   new registry
      is defined in Section 13.4.\n"
    title: 13.2.  RTCP XR IDMS Report Block
  - contents:
    - "13.3.  RTCP-IDMS SDP Attribute\n   The SDP attribute \"rtcp-idms\" defined
      by this document is registered\n   with the IANA registry of SDP Parameters
      as follows:\n      SDP Attribute (\"att-field\"):\n         Attribute name:
      rtcp-idms\n         Long form: RTCP IDMS Parameters\n         Type of name:
      att-field\n         Type of attribute: media level\n         Subject to charset:
      no\n         Purpose: see Section 10 of this document\n         Reference: this
      document\n         Values: see this document\n"
    title: 13.3.  RTCP-IDMS SDP Attribute
  - contents:
    - "13.4.  IDMS XR Block SPST Registry\n   This document defines a new IANA registry
      subordinate to the IANA\n   RTCP Extended Reports (RTCP XR) Block Type Registry:
      the IDMS XR\n   Block SPST Registry.\n   Initial values for the IDMS XR Block
      SPST Registry are given below;\n   future assignments are to be made through
      the Specification Required\n   policy [RFC5226].  The registry is limited to
      16 entries (numbered\n   0-15), with 0 being Reserved.  Values 5-15 are available
      for\n   assignment.\n   In accordance with [RFC5226], a Designated Expert will
      review any\n   applications made to IANA for the registry.  Primary criteria
      for the\n   Designated Expert to use when reviewing new applications are clarity\n
      \  of the specification and, due to the relatively small value range of\n   SPST
      values available, potential overlap in functionality with\n   existing SPST
      registrations.\n   Value           Name                         Reference\n
      \  -----           ----                         ---------\n   1               Synchronization
      Client       This document, Section 7\n   2               MSAS                         [TS183063]\n
      \  3               SC Prime Input               [TS183063]\n   4               SC
      Prime Output              [TS183063]\n"
    title: 13.4.  IDMS XR Block SPST Registry
  - contents:
    - "13.5.  Contact Information for Registrations\n   The contact information for
      the registrations is:\n   Ray van Brandenburg (ray.vanbrandenburg@tno.nl)\n
      \  Brassersplein 2\n   2612CT, Delft, The Netherlands\n"
    title: 13.5.  Contact Information for Registrations
  title: 13.  IANA Considerations
- contents:
  - "14.  Contributors\n   The following people have provided substantial contributions
    to this\n   document: Omar Niamut, Fabian Walraven, Ishan Vaishnavi, and Rufael\n
    \  Mekuria.  In addition, the authors would like to thank Aidan\n   Williams,
    Colin Perkins, Magnus Westerlund, Roni Even, Peter\n   Musgrave, Ali Begen, Qin
    Wu, and Rob Koenen for their review comments\n   and contributions to the text.\n"
  title: 14.  Contributors
- contents:
  - '15.  References

    '
  - contents:
    - "15.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,
      \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD
      64, RFC 3550, July 2003.\n   [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP
      Profile for Audio and\n              Video Conferences with Minimal Control\",
      STD 65, RFC 3551,\n              July 2003.\n   [RFC3611]  Friedman, T., Caceres,
      R., and A. Clark, \"RTP Control\n              Protocol Extended Reports (RTCP
      XR)\", RFC 3611, November\n              2003.\n   [RFC4566]  Handley, M., Jacobson,
      V., and C. Perkins, \"SDP: Session\n              Description Protocol\", RFC
      4566, July 2006.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for
      Writing an\n              IANA Considerations Section in RFCs\", BCP 26, RFC
      5226,\n              May 2008.\n   [RFC5234]  Crocker, D. and P. Overell, \"Augmented
      BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234, January
      2008.\n   [RFC5905]  Mills, D., Martin, J., Burbank, J., and W. Kasch, \"Network\n
      \             Time Protocol Version 4: Protocol and Algorithms\n              Specification\",
      RFC 5905, June 2010.\n   [RFC7273]  Williams, A., Gross, K., van Brandenburg,
      R., and H.\n              Stokking, \"RTP Clock Source Signalling\", RFC 7273,
      June\n              2014.\n"
    title: 15.1.  Normative References
  - contents:
    - "15.2.  Informative References\n   [Boronat2009]\n              Boronat, F.,
      Lloret, J., and M. Garcia, \"Multimedia group\n              and inter-stream
      synchronization techniques: a comparative\n              study\", Elsevier Information
      Systems 34, Pages 108-131,\n              March 2009,\n              <http://www.sciencedirect.com/science/article/pii/\n
      \             S0306437908000525>.\n   [IEEE1588-2008]\n              IEEE, \"1588-2008
      - IEEE Standard for a Precision Clock\n              Synchronization Protocol
      for Networked Measurement and\n              Control Systems\", July 2008,\n
      \             <http://standards.ieee.org/findstds/\n              standard/1588-2008.html>.\n
      \  [Ishibashi2006]\n              Ishibashi, Y., Nagasaka, M., and N. Fujiyoshi,
      \"Subjective\n              assessment of fairness among users in multipoint\n
      \             communications\", Proceedings of the 2006 ACM SIGCHI\n              international
      conference on Advances in computer\n              entertainment technology,
      Article No. 69, June 2006,\n              <http://dl.acm.org/citation.cfm?id=1178905>.\n
      \  [RFC7164]  Gross, K. and R. Brandenburg, \"RTP and Leap Seconds\", RFC\n
      \             7164, March 2014.\n   [RFC7201]  Westerlund, M. and C. Perkins,
      \"Options for Securing RTP\n              Sessions\", RFC 7201, April 2014.\n
      \  [TS183063] ETSI, \"Telecommunications and Internet converged Services\n              and
      Protocols for Advanced Networking (TISPAN); IMS-based\n              IPTV stage
      3 specification\", TS 183 063 v3.5.2, March\n              2011.\n"
    title: 15.2.  Informative References
  title: 15.  References
- contents:
  - "Authors' Addresses\n   Ray van Brandenburg\n   TNO\n   Brassersplein 2\n   Delft
    \ 2612CT\n   The Netherlands\n   Phone: +31-88-866-7000\n   EMail: ray.vanbrandenburg@tno.nl\n
    \  Hans Stokking\n   TNO\n   Brassersplein 2\n   Delft  2612CT\n   The Netherlands\n
    \  Phone: +31-88-866-7000\n   EMail: hans.stokking@tno.nl\n   M. Oskar van Deventer\n
    \  TNO\n   Brassersplein 2\n   Delft  2612CT\n   The Netherlands\n   Phone: +31-88-866-7000\n
    \  EMail: oskar.vandeventer@tno.nl\n   Fernando Boronat\n   Universitat Politecnica
    de Valencia (UPV)\n   Valencia  46730\n   Spain\n   Phone: +34 962 849 341\n   EMail:
    fboronat@dcom.upv.es\n   Mario Montagud\n   Universitat Politecnica de Valencia
    (UPV)\n   Valencia  46730\n   Spain\n   Phone: +34 962 849 341\n   EMail: mamontor@posgrado.upv.es\n
    \  Kevin Gross\n   AVA Networks\n   Phone: +1-303-447-0517\n   EMail: Kevin.Gross@AVAnw.com\n"
  title: Authors' Addresses
