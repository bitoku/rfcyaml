- title: __initial_text__
  contents:
  - "                Loop-Free Alternate (LFA) Applicability\n                   in\
    \ Service Provider (SP) Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   In this document, we analyze the applicability of the Loop-Free\n\
    \   Alternate (LFA) method of providing IP fast reroute in both the core\n   and\
    \ access parts of Service Provider networks.  We consider both the\n   link and\
    \ node failure cases, and provide guidance on the\n   applicability of LFAs to\
    \ different network topologies, with special\n   emphasis on the access parts\
    \ of the network.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6571.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Access Network ..................................................6\n    \
    \  3.1. Triangle ...................................................8\n      \
    \     3.1.1. E1C1 Failure ........................................8\n        \
    \   3.1.2. C1E1 Failure ........................................9\n          \
    \ 3.1.3. uLoop ...............................................9\n           3.1.4.\
    \ Conclusion .........................................10\n      3.2. Full Mesh\
    \ .................................................10\n           3.2.1. E1A1\
    \ Failure .......................................10\n           3.2.2. A1E1 Failure\
    \ .......................................11\n           3.2.3. A1C1 Failure .......................................11\n\
    \           3.2.4. C1A1 Failure .......................................12\n  \
    \         3.2.5. uLoop ..............................................12\n    \
    \       3.2.6. Conclusion .........................................12\n      3.3.\
    \ Square ....................................................13\n           3.3.1.\
    \ E1A1 Failure .......................................13\n           3.3.2. A1E1\
    \ Failure .......................................14\n           3.3.3. A1C1 Failure\
    \ .......................................15\n           3.3.4. C1A1 Failure .......................................15\n\
    \           3.3.5. Conclusion .........................................17\n  \
    \         3.3.6. A Square Might Become a Full Mesh ..................17\n    \
    \       3.3.7. A Full Mesh Might Be More Economical Than a\n                 \
    \ Square .............................................17\n      3.4. Extended\
    \ U ................................................18\n           3.4.1. E1A1\
    \ Failure .......................................19\n           3.4.2. A1E1 Failure\
    \ .......................................20\n           3.4.3. A1C1 Failure .......................................20\n\
    \           3.4.4. C1A1 Failure .......................................21\n  \
    \         3.4.5. Conclusion .........................................21\n    \
    \  3.5. Dual-Plane Core and Its Impact on the Access LFA\n           Analysis\
    \ ..................................................21\n      3.6. Two-Tiered\
    \ IGP Metric Allocation ..........................22\n      3.7. uLoop Analysis\
    \ ............................................22\n      3.8. Summary ...................................................23\n\
    \   4. Core Network ...................................................24\n  \
    \    4.1. Simulation Framework ......................................25\n    \
    \  4.2. Data Set ..................................................26\n      4.3.\
    \ Simulation Results ........................................26\n   5. Core and\
    \ Access Protection Schemes Are Independent .............27\n   6. Simplicity\
    \ and Other LFA Benefits ..............................27\n   7. Capacity Planning\
    \ with LFA in Mind .............................28\n      7.1. Coverage Estimation\
    \ - Default Topology ....................28\n      7.2. Coverage Estimation in\
    \ Relation to Traffic ................29\n      7.3. Coverage Verification for\
    \ a Given Set of Demands ..........29\n      7.4. Modeling - What-If Scenarios\
    \ - Coverage Impact ............29\n      7.5. Modeling - What-If Scenarios -\
    \ Load Impact ................30\n      7.6. Discussion on Metric Recommendations\
    \ ......................31\n   8. Security Considerations ........................................32\n\
    \   9. Conclusions ....................................................32\n  \
    \ 10. Acknowledgments ...............................................32\n   11.\
    \ References ....................................................33\n      11.1.\
    \ Normative References .....................................33\n      11.2. Informative\
    \ References ...................................33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In this document, we analyze the applicability of the Loop-Free\n\
    \   Alternate (LFA) [RFC5714] [RFC5286] method of providing IP fast\n   reroute\
    \ (IPFRR) in both the core and access parts of Service Provider\n   (SP) networks.\
    \  We consider both the link and node failure cases, and\n   provide guidance\
    \ on the applicability of LFAs to different network\n   topologies, with special\
    \ emphasis on the access parts of the network.\n   We first introduce the terminology\
    \ used in this document in\n   Section 2.  In Section 3, we describe typical access\
    \ network designs,\n   and we analyze them for LFA applicability.  In Section\
    \ 4, we describe\n   a simulation framework for the study of LFA applicability\
    \ in SP core\n   networks, and present results based on various SP networks. \
    \ We then\n   emphasize the independence between protection schemes used in the\n\
    \   core and at the access level of the network.  Finally, we discuss the\n  \
    \ key benefits of the LFA method, which stem from its simplicity, and\n   we draw\
    \ some conclusions.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   We use IS-IS [RFC1195] [IS-IS] as a reference.  It is assumed\
    \ that\n   normal routing (i.e., when traffic is not being fast-rerouted around\n\
    \   a failure) occurs along the shortest path.  The analysis is equally\n   applicable\
    \ to OSPF [RFC2328] [RFC5340].\n   A per-prefix LFA for a destination D at a node\
    \ S is a pre-computed\n   backup IGP next hop for that destination.  This backup\
    \ IGP next hop\n   can be link-protecting or node-protecting.  In this document,\
    \ we\n   assume that all links to be protected with LFAs are point-to-point.\n\
    \   Link-protecting: A neighbor N is a link-protecting per-prefix LFA for\n  \
    \ S's route to D if equation eq1 is satisfied.  This is in line with\n   the definition\
    \ of an LFA in [RFC5714].\n                            eq1: ND < NS + SD\n   \
    \           where XY refers to the IGP distance from X to Y\n                \
    \               Equation eq1\n   Node-protecting: A neighbor N is a node-protecting\
    \ LFA for S's route\n   to D with initial IGP next hop F if N is a link-protecting\
    \ LFA for D\n   and equation eq2 is satisfied.  This is in line with the definition\n\
    \   of a Loop-Free Node-Protecting Alternate (also known as a node-\n   protecting\
    \ LFA) in [RFC5714].\n                             eq2: ND < NF + FD\n       \
    \                        Equation eq2\n   De facto node-protecting LFA: This is\
    \ a link-protecting LFA that\n   turns out to be node-protecting.  This occurs\
    \ in cases illustrated by\n   the following examples:\n   o  The LFA candidate\
    \ that is picked by S actually satisfies Equation\n      eq2, but S did not verify\
    \ that property.  The show command issued\n      by the operator would not indicate\
    \ this LFA as \"node-protecting\",\n      while in practice (de facto), it is.\n\
    \   o  A cascading effect of multiple LFAs can also provide de facto node\n  \
    \    protection.  Equation eq2 is not satisfied, but the combined\n      activation\
    \ of LFAs by some other neighbors of the failing node F\n      provides (de facto)\
    \ node protection.  In other words, it puts the\n      data plane in a state such\
    \ that packets forwarded by S ultimately\n      reach a neighbor of F that has\
    \ a node-protecting LFA.  Note that\n      in this case, S cannot indicate the\
    \ node-protecting behavior of\n      the repair without running additional computations.\n\
    \   Per-link LFA: A per-link LFA for the link SF is one pre-computed\n   backup\
    \ IGP next hop for all of the destinations reached through SF.\n   This is a neighbor\
    \ of the repairing node that is a per-prefix LFA for\n   all of the destinations\
    \ that the repairing node reaches through SF.\n   Note that such a per-link LFA\
    \ exists if S has a per-prefix LFA for\n   destination F.\n                  \
    \              D\n                               / \\\n                      \
    \     10 /   \\ 10\n                             /     \\\n                  \
    \          G       H----------.\n                            |       |       \
    \   |\n                          1 |     1 |          |\n                    \
    \        |       |          |\n                            B       C         \
    \ | 10\n                            |       |\\         |\n                  \
    \          |       | \\        |\n                            |       |  \\ 6\
    \     |\n                            |       |   \\      |\n                 \
    \         7 |    10 |    E     F\n                            |       |   /  \
    \   /\n                            |       |  / 6   / 5\n                    \
    \        |       | /     /\n                            |       |/     /\n   \
    \                         A-------S-----/\n                                7\n\
    \                            Figure 1: Example 1\n   In Figure 1, considering\
    \ the protection of link SC, we can see that\n   A, E, and F are per-prefix LFAs\
    \ for destination D, as none of them\n   use S to reach D.\n   For destination\
    \ D, A and F are node-protecting LFAs, as they do not\n   reach D through node\
    \ C, while E is not node-protecting for S, as it\n   reaches D through C.\n  \
    \ If S does not compute and select node-protecting LFAs, there is a\n   chance\
    \ that S picks the non-node-protecting LFA E, although A and F\n   were node-protecting\
    \ LFAs.  If S enforces the selection of node-\n   protecting LFAs, then in the\
    \ case of the single failure of link SC,\n   S will first activate its LFA, deviate\
    \ traffic addressed to D along\n   S-A-B-G-D and/or S-F-H-D, and then converge\
    \ to its post-convergence\n   optimal path S-E-C-H-D.\n   A reaches C via S; thus,\
    \ A is not a per-link LFA for link SC.  E\n   reaches C through link EC; thus,\
    \ E is a per-link LFA for link SC.\n   This per-link LFA does not provide de facto\
    \ node protection.  Upon\n   failure of node C, S would fast-reroute D-destined\
    \ packets to its\n   per-link LFA (= E).  E would itself detect the failure of\
    \ EC; hence,\n   it would activate its own per-link LFA (= S).  Traffic addressed\
    \ to D\n   would be trapped in a loop; hence, there is no de facto node\n   protection\
    \ behavior.\n   If there were a link between E and F that E would pick as its\
    \ LFA for\n   destination D, then E would provide de facto node protection for\
    \ S,\n   as upon the activation of its LFA, S would deviate traffic addressed\n\
    \   to D towards E.  In turn, E deviates that traffic to F, which does\n   not\
    \ reach D through C.\n   F is a per-link LFA for link SC, as F reaches C via H.\
    \  This per-link\n   LFA is de facto node-protecting for destination D, as F reaches\
    \ D via\n   F-H-D.\n   Micro-Loop (uLoop): the occurrence of a transient forwarding\
    \ loop\n   during a routing transition (as defined in [RFC5715]).\n   In Figure\
    \ 1, the loss of link SE cannot create any uLoop, because of\n   the following:\n\
    \   1.  The link is only used to reach destination E.\n   2.  S is the sole node\
    \ changing its path to E upon link SE failure.\n   3.  S's shortest path to E\
    \ after the failure goes via C.\n   4.  C's best path to E (before and after link\
    \ SC failure) is via CE.\n   On the other hand, upon failure of link AB, a micro-loop\
    \ may form for\n   traffic destined to B.  Indeed, if A updates its Forwarding\n\
    \   Information Base (FIB) before S, A will reroute B-destined traffic\n   towards\
    \ S, while S is still forwarding this traffic to A.\n"
- title: 3.  Access Network
  contents:
  - "3.  Access Network\n   The access part of the network often represents the majority\
    \ of the\n   nodes and links.  It is organized in several tens or more of regions\n\
    \   interconnected by the core network.  Very often, the core acts as an\n   IS-IS\
    \ level-2 domain (OSPF area 0), while each access region is\n   confined in an\
    \ IS-IS level-1 domain (OSPF non-0 area).  Very often,\n   the network topology\
    \ within each access region is derived from a\n   unique template common across\
    \ the whole access network.  Within an\n   access region itself, the network is\
    \ made of several aggregation\n   regions, each following the same interconnection\
    \ topologies.\n   For these reasons, in the next sections, we base the analysis\
    \ of the\n   LFA applicability in a single access region, with the following\n\
    \   assumptions:\n   o  Two routers (C1 and C2) provide connectivity between the\
    \ access\n      region and the rest of the network.  If a link connects these\
    \ two\n      routers in the region area, then it has a symmetric IGP metric c.\n\
    \   o  We analyze a single aggregation region within the access region.\n    \
    \  Two aggregation routers (A1 and A2) interconnect the aggregation\n      region\
    \ to the two routers C1 and C2 for the analyzed access\n      region.  If a link\
    \ connects A1 to A2, then it has a symmetric IGP\n      metric a.  If a link connects\
    \ a router A to a router C, then for\n      the sake of generality we will call\
    \ d the metric for the directed\n      link CA and u the metric for the directed\
    \ link AC.\n   o  We analyze two edge routers, E1 and E2, in the access region.\n\
    \      Each is dual-homed directly either to C1 and C2 (Section 3.1) or\n    \
    \  to A1 and A2 (Sections 3.2, 3.3, and 3.4).  The directed link\n      metric\
    \ between Cx/Ax and Ey is d and u in the opposite direction.\n   o  We assume\
    \ a multi-level IGP domain.  The analyzed access region\n      forms a level-1\
    \ (L1) domain.  The core is the level-2 (L2) domain.\n      We assume that the\
    \ link between C1 and C2, if it exists, is\n      configured as L1L2.  We assume\
    \ that the loopbacks of the C routers\n      are part of the L2 topology.  L1\
    \ routers learn about them as\n      propagated routes (L2=>L1 with the Down bit\
    \ set).  We remind the\n      reader that if an L1L2 router learns about X/x as\
    \ an L1 path P1,\n      an L2 path P2, and an L1L2 path P12, then it will prefer\
    \ path P1.\n      If path P1 is lost, then it will prefer path P2.\n   o  We assume\
    \ that all of the C, A, and E routers may be connected to\n      customers; hence,\
    \ we analyze LFA coverage for the loopbacks of\n      each type of node.\n   o\
    \  We assume that no useful traffic is directed to router-to-router\n      subnets;\
    \ hence, we do not analyze LFA applicability for such\n      subnets.\n   o  A\
    \ prefix P models an important IGP destination that is not present\n      in the\
    \ local access region.  The IGP metric from C1 to P is x, and\n      the metric\
    \ from C2 to P is x + e.\n   o  We analyze LFA coverage against all link and node\
    \ failures within\n      the access region.\n   o  WxYz refers to the link from\
    \ Wx to Yz.\n   o  We assume that c < d + u and a < d + u (a commonly agreed-upon\n\
    \      design rule).\n   o  In the square access design (Section 3.3), we assume\
    \ that c < a (a\n      commonly agreed-upon design rule).\n   o  We analyze the\
    \ most frequent topologies found in an access region.\n   o  We first analyze\
    \ per-prefix LFA applicability and then per-link.\n   o  The topologies are symmetric\
    \ with respect to a vertical axis;\n      hence, we only detail the logic for\
    \ the link and node failures of\n      the left half of the topology.\n"
- title: 3.1.  Triangle
  contents:
  - "3.1.  Triangle\n   We describe the LFA applicability for the failures of C1E1,\
    \ E1, and\n   C1 (Figure 2).\n                                     P\n       \
    \                             / \\\n                                  x/   \\\
    x+e\n                                  /     \\\n                            \
    \     C1--c--C2\n                                  |\\   /|\n                \
    \                  | \\ / |\n                               d/u|  \\  |d/u\n \
    \                                 | / \\ |\n                                 \
    \ |/   \\|\n                                 E1     E2\n                     \
    \       Figure 2: Triangle\n"
- title: 3.1.1.  E1C1 Failure
  contents:
  - '3.1.1.  E1C1 Failure

    '
- title: 3.1.1.1.  Per-Prefix LFA
  contents:
  - "3.1.1.1.  Per-Prefix LFA\n   Three destinations are impacted by this link failure:\
    \ C1, E2, and P.\n   The LFA for destination C1 is C2, because eq1: c < d + u.\
    \  Node\n   protection for route C1 is not applicable.  (If C1 goes down, traffic\n\
    \   destined to C1 is lost anyway.)\n   The LFA to E2 is via C2, because eq1:\
    \ d < d + u + d.  It is node-\n   protecting, because eq2: d < c + d.\n   The\
    \ LFA to P is via C2, because c < d + u.  It is node-protecting if\n   eq2: x\
    \ + e < x + c, i.e., if e < c.  This relationship between e and\n   c is an important\
    \ aspect of the analysis, which is discussed in\n   detail in Sections 3.5 and\
    \ 3.6.\n   Conclusion: All important intra-PoP (Point of Presence) routes with\n\
    \   primary interface E1C1 benefit from LFA link and node protection.\n   All\
    \ important inter-PoP routes with primary interface E1C1 benefit\n   from LFA\
    \ link protection, and also from node protection if e < c.\n"
- title: 3.1.1.2.  Per-Link LFA
  contents:
  - "3.1.1.2.  Per-Link LFA\n   We have a per-prefix LFA to C1; hence, we have a per-link\
    \ LFA for\n   link E1C1.  All impacted destinations are protected against link\n\
    \   failure.  In the case of C1 node failure, the traffic to C1 is lost\n   (by\
    \ definition), the traffic to E2 is de facto protected against node\n   failure,\
    \ and the traffic to P is de facto protected when e < c.\n"
- title: 3.1.2.  C1E1 Failure
  contents:
  - '3.1.2.  C1E1 Failure

    '
- title: 3.1.2.1.  Per-Prefix LFA
  contents:
  - "3.1.2.1.  Per-Prefix LFA\n   C1 only has one primary route via C1E1: the route\
    \ to E1\n   (because c < d + u).\n   C1's LFA to E1 is via C2, because eq1: d\
    \ < c + d.\n   Node protection upon E1's failure is not applicable, as the only\n\
    \   impacted traffic is sinked at E1 and hence is lost anyway.\n   Conclusion:\
    \ All important routes with primary interface C1E1 benefit\n   from LFA link protection.\
    \  Node protection is not applicable.\n"
- title: 3.1.2.2.  Per-Link LFA
  contents:
  - "3.1.2.2.  Per-Link LFA\n   We have a per-prefix LFA to E1; hence, we have a per-link\
    \ LFA for\n   link C1E1.  De facto node protection is not applicable.\n"
- title: 3.1.3.  uLoop
  contents:
  - "3.1.3.  uLoop\n   The IGP convergence cannot create any uLoop.  See Section 3.7.\n"
- title: 3.1.4.  Conclusion
  contents:
  - "3.1.4.  Conclusion\n   All important intra-PoP routes benefit from LFA link and\
    \ node\n   protection or de facto node protection.  All important inter-PoP\n\
    \   routes benefit from LFA link protection.  De facto node protection is\n  \
    \ ensured if e < c.  (This is particularly the case for dual-plane core\n   or\
    \ two-tiered IGP metric design; see Sections 3.5 and 3.6.)\n   The IGP convergence\
    \ does not cause any uLoop.\n   Per-link LFAs and per-prefix LFAs provide the\
    \ same protection\n   benefits.\n"
- title: 3.2.  Full Mesh
  contents:
  - "3.2.  Full Mesh\n   We describe the LFA applicability for the failures of C1A1,\
    \ A1E1, E1,\n   A1, and C1 (Figure 3).\n                                     P\n\
    \                                    / \\\n                                  x/\
    \   \\x+e\n                                  /     \\\n                      \
    \           C1--c--C2\n                                  |\\   /|\n          \
    \                        | \\ / |\n                              d/u |  \\  |\
    \ d/u\n                                  | / \\ |\n                          \
    \        |/   \\|\n                                 A1--a--A2\n              \
    \                    |\\   /|\n                                  | \\ / |\n  \
    \                             d/u|  \\  |d/u\n                               \
    \   | / \\ |\n                                  |/   \\|\n                   \
    \              E1     E2\n                            Figure 3: Full Mesh\n"
- title: 3.2.1.  E1A1 Failure
  contents:
  - '3.2.1.  E1A1 Failure

    '
- title: 3.2.1.1.  Per-Prefix LFA
  contents:
  - "3.2.1.1.  Per-Prefix LFA\n   Four destinations are impacted by this link failure:\
    \ A1, C1, E2,\n   and P.\n   The LFA for A1 is A2: eq1: a < d + u.  Node protection\
    \ for route A1\n   is not applicable.  (If A1 goes down, traffic to A1 is lost\
    \ anyway.)\n   The LFA for C1 is A2: eq1: u < d + u + u.  Node protection for\
    \ route\n   C1 is guaranteed: eq2: u < a + u.\n   The LFA to E2 is via A2: eq1:\
    \ d < d + u + d.  Node protection is\n   guaranteed: eq2: d < a + d.\n   The LFA\
    \ to P is via A2: eq1: u + x < d + u + u + x.  Node protection\n   is guaranteed:\
    \ eq2: u + x < a + u + x.\n   Conclusion: All important intra-PoP and inter-PoP\
    \ routes with primary\n   interface E1A1 benefit from LFA link and node protection.\n"
- title: 3.2.1.2.  Per-Link LFA
  contents:
  - "3.2.1.2.  Per-Link LFA\n   We have a per-prefix LFA to A1; hence, we have a per-link\
    \ LFA for\n   link E1A1.  All impacted destinations are protected against link\n\
    \   failure.  De facto node protection is provided for all destinations\n   (except\
    \ to A1, which is not applicable).\n"
- title: 3.2.2.  A1E1 Failure
  contents:
  - '3.2.2.  A1E1 Failure

    '
- title: 3.2.2.1.  Per-Prefix LFA
  contents:
  - "3.2.2.1.  Per-Prefix LFA\n   A1 only has one primary route via A1E1: the route\
    \ to E1\n   (because a < d + u).\n   A1's LFA to E1 is via A2: eq1: d < a + d.\n\
    \   Node protection upon E1's failure is not applicable, as the only\n   impacted\
    \ traffic is sinked at E1 and hence is lost anyway.\n   Conclusion: All important\
    \ routes with primary interface A1E1 benefit\n   from LFA link protection.  Node\
    \ protection is not applicable.\n"
- title: 3.2.2.2.  Per-Link LFA
  contents:
  - "3.2.2.2.  Per-Link LFA\n   We have a per-prefix LFA to E1; hence, we have a per-link\
    \ LFA for\n   link C1E1.  De facto node protection is not applicable.\n"
- title: 3.2.3.  A1C1 Failure
  contents:
  - '3.2.3.  A1C1 Failure

    '
- title: 3.2.3.1.  Per-Prefix LFA
  contents:
  - "3.2.3.1.  Per-Prefix LFA\n   Two destinations are impacted by this link failure:\
    \ C1 and P.\n   The LFA for C1 is C2, because eq1: c < d + u.  Node protection\
    \ for\n   route C1 is not applicable.  (If C1 goes down, traffic to C1 is lost\n\
    \   anyway.)\n   The LFA for P is via C2, because c < d + u.  It is de facto protected\n\
    \   against node failure if eq2: x + e < x + c.\n   Conclusion: All important\
    \ intra-PoP routes with primary interface\n   A1C1 benefit from LFA link protection.\
    \  (Node protection is not\n   applicable.)  All important inter-PoP routes with\
    \ primary interface\n   E1C1 benefit from LFA link protection (and from de facto\
    \ node\n   protection if e < c).\n"
- title: 3.2.3.2.  Per-Link LFA
  contents:
  - "3.2.3.2.  Per-Link LFA\n   We have a per-prefix LFA to C1; hence, we have a per-link\
    \ LFA for\n   link A1C1.  All impacted destinations are protected against link\n\
    \   failure.  In the case of C1 node failure, the traffic to C1 is lost\n   (by\
    \ definition), and the traffic to P is de facto node protected\n   if e < c.\n"
- title: 3.2.4.  C1A1 Failure
  contents:
  - '3.2.4.  C1A1 Failure

    '
- title: 3.2.4.1.  Per-Prefix LFA
  contents:
  - "3.2.4.1.  Per-Prefix LFA\n   C1 has three routes via C1A1: A1, E1, and E2.  E2\
    \ behaves like E1 and\n   hence is not analyzed further.\n   C1's LFA to A1 is\
    \ via C2, because eq1: d < c + d.  Node protection\n   upon A1's failure is not\
    \ applicable, as the traffic to A1 is lost\n   anyway.\n   C1's LFA to E1 is via\
    \ A2: eq1: d < u + d + d.  Node protection upon\n   A1's failure is guaranteed,\
    \ because eq2: d < a + d.\n   Conclusion: All important routes with primary interface\
    \ C1A1 benefit\n   from LFA link protection.  Node protection is guaranteed where\n\
    \   applicable.\n"
- title: 3.2.4.2.  Per-Link LFA
  contents:
  - "3.2.4.2.  Per-Link LFA\n   We have a per-prefix LFA to A1; hence, we have a per-link\
    \ LFA for\n   link C1E1.  De facto node protection is available.\n"
- title: 3.2.5.  uLoop
  contents:
  - "3.2.5.  uLoop\n   The IGP convergence cannot create any uLoop.  See Section 3.7.\n"
- title: 3.2.6.  Conclusion
  contents:
  - "3.2.6.  Conclusion\n   All important intra-PoP routes benefit from LFA link and\
    \ node\n   protection.\n   All important inter-PoP routes benefit from LFA link\
    \ protection.\n   They benefit from node protection upon failure of A nodes. \
    \ They\n   benefit from node protections upon failure of C nodes if e < c.\n \
    \  (This is particularly the case for dual-plane core or two-tiered IGP\n   metric\
    \ design; see Sections 3.5 and 3.6.)\n   The IGP convergence does not cause any\
    \ uLoop.\n   Per-link LFAs and per-prefix LFAs provide the same protection\n \
    \  benefits.\n"
- title: 3.3.  Square
  contents:
  - "3.3.  Square\n   We describe the LFA applicability for the failures of C1A1,\
    \ A1E1, E1,\n   A1, and C1 (Figure 4).\n                                 P\n \
    \                               / \\\n                              x/   \\x+e\n\
    \                              /     \\\n                             C1--c--C2\n\
    \                              |\\    | \\\n                              | \\\
    \   |  +-------+\n                          d/u |  \\  |           \\\n      \
    \                        |   +-|-----+      \\\n                             \
    \ |     |      \\      \\\n                             A1--a--A2     A3--a--A4\n\
    \                              |\\   /|       |    /\n                       \
    \       | \\ / |       |   /\n                           d/u|  \\  |d/u    | \
    \ /\n                              | / \\ |       | /\n                      \
    \        |/   \\|       |/\n                             E1     E2      E3\n \
    \                            Figure 4: Square\n"
- title: 3.3.1.  E1A1 Failure
  contents:
  - '3.3.1.  E1A1 Failure

    '
- title: 3.3.1.1.  Per-Prefix LFA
  contents:
  - "3.3.1.1.  Per-Prefix LFA\n   E1 has six routes via E1A1: A1, C1, P, E2, A3, and\
    \ E3.\n   E1's LFA route to A1 is via A2, because eq1: a < d + u.  Node\n   protection\
    \ for traffic to A1 upon A1 node failure is not applicable.\n   E1's LFA route\
    \ to A3 is via A2, because eq1: u + c + d < d + u +\n   u + d.  This LFA is guaranteed\
    \ to be node-protecting, because\n   eq2: u + c + d < a + u + d.\n   E1's LFA\
    \ route to C1 is via A2, because eq1: u + c < d + u + u.  This\n   LFA is guaranteed\
    \ to be node-protecting, because eq2: u + c < a + u.\n   E1's primary route to\
    \ E2 is via ECMP(E1A1, E1A2) (Equal-Cost\n   Multi-Path).  The LFA for the first\
    \ ECMP path (via A1) is the second\n   ECMP path (via A2).  This LFA is guaranteed\
    \ to be node-protecting,\n   because eq2: d < a + d.\n   E1's primary route to\
    \ E3 is via ECMP(E1A1, E1A2).  The LFA for the\n   first ECMP path (via A1) is\
    \ the second ECMP path (via A2).  This LFA\n   is guaranteed to be node-protecting,\
    \ because eq2: u + d + d < a + u +\n   d + d.\n   If e = 0: E1's primary route\
    \ to P is via ECMP(E1A1, E1A2).  The LFA\n   for the first ECMP path (via A1)\
    \ is the second ECMP path (via A2).\n   This LFA is guaranteed to be node-protecting,\
    \ because eq2: u + x + 0\n   < a + u + x.\n   If e <> 0: E1's primary route to\
    \ P is via E1A1.  Its LFA is via A2,\n   because eq1: u + c + x < d + u + u +\
    \ x.  This LFA is guaranteed to be\n   node-protecting, because eq2: u + c + x\
    \ < a + u + x.\n   Conclusion: All important intra-PoP and inter-PoP routes with\
    \ primary\n   interface E1A1 benefit from LFA link protection and node protection.\n"
- title: 3.3.1.2.  Per-Link LFA
  contents:
  - "3.3.1.2.  Per-Link LFA\n   We have a per-prefix LFA for A1; hence, we have a\
    \ per-link LFA for\n   link E1A1.  All important intra-PoP and inter-PoP routes\
    \ with primary\n   interface E1A1 benefit from LFA per-link protection and de\
    \ facto node\n   protection.\n"
- title: 3.3.2.  A1E1 Failure
  contents:
  - '3.3.2.  A1E1 Failure

    '
- title: 3.3.2.1.  Per-Prefix LFA
  contents:
  - "3.3.2.1.  Per-Prefix LFA\n   A1 only has one primary route via A1E1: the route\
    \ to E1.\n   A1's LFA for route E1 is the path via A2, because eq1: d < a + d.\n\
    \   Node protection is not applicable.\n   Conclusion: All important routes with\
    \ primary interface A1E1 benefit\n   from LFA link protection.  Node protection\
    \ is not applicable.\n"
- title: 3.3.2.2.  Per-Link LFA
  contents:
  - "3.3.2.2.  Per-Link LFA\n   All important routes with primary interface A1E1 benefit\
    \ from LFA\n   link protection.  De facto node protection is not applicable.\n"
- title: 3.3.3.  A1C1 Failure
  contents:
  - '3.3.3.  A1C1 Failure

    '
- title: 3.3.3.1.  Per-Prefix LFA
  contents:
  - "3.3.3.1.  Per-Prefix LFA\n   Four destinations are impacted when A1C1 fails:\
    \ C1, A3, E3, and P.\n   A1's LFA to C1 is via A2, because eq1: u + c < a + u.\
    \  Node\n   protection is not applicable for traffic to C1 when C1 fails.\n  \
    \ A1's LFA to A3 is via A2, because eq1: u + c + d < a + u + d.  It is\n   de\
    \ facto node-protecting, as a < u + c + d (as we assumed\n   a < u + d).  Indeed,\
    \ for destination A3, A2 forwards traffic to C2,\n   and C2 has a node-protecting\
    \ LFA -- A4 -- for the failure of link\n   C2C1, as a < u + c + d.  Hence, the\
    \ cascading application of LFAs by\n   A1 and C2 during the failure of C1 provides\
    \ de facto node protection.\n   A1's LFA to E3 is via A2, because eq1: u + d +\
    \ d < a + u + d + d.  It\n   is node-protecting, because eq2: u + d + d < u +\
    \ c + d + d.\n   A1's primary route to P is via C1 (even if e = 0, u + x < u +\
    \ c + x).\n   The LFA is via A2, because eq1: u + c + x < a + u + x (case where\n\
    \   c <= e) and eq1: u + x + e < a + u + x (case where c >= e).  This LFA\n  \
    \ is node-protecting (from the viewpoint of A1 computing eq2) if\n   eq2: u +\
    \ x + e < u + c + x.  This inequality is true if e < c.\n   Conclusion: All important\
    \ intra-PoP routes with primary interface\n   A1C1 benefit from LFA link protection\
    \ and node protection.  Note that\n   A3 benefits from de facto node protection.\
    \  All important inter-PoP\n   routes with primary interface A1C1 benefit from\
    \ LFA link protection.\n   They also benefit from node protection if e < c.\n"
- title: 3.3.3.2.  Per-Link LFA
  contents:
  - "3.3.3.2.  Per-Link LFA\n   All important intra-PoP routes with primary interface\
    \ A1C1 benefit\n   from LFA link protection and de facto node protection.  All\
    \ important\n   inter-PoP routes with primary interface A1C1 benefit from LFA\
    \ link\n   protection.  They also benefit from de facto node protection if\n \
    \  e < c.\n"
- title: 3.3.4.  C1A1 Failure
  contents:
  - '3.3.4.  C1A1 Failure

    '
- title: 3.3.4.1.  Per-Prefix LFA
  contents:
  - "3.3.4.1.  Per-Prefix LFA\n   Three destinations are impacted by C1A1 link failure:\
    \ A1, E1, and E2.\n   E2's analysis is the same as E1 and hence is omitted.\n\
    \   C1 has no LFA for A1.  Indeed, its neighbors (C2 and A3) have a\n   shortest\
    \ path to A1 via C1.  This is due to the assumption (c < a).\n   C1's LFA for\
    \ E1 is via C2, because eq1: d + d < c + d + d.  It\n   provides node protection,\
    \ because eq2: d + d < d + a + d.\n   Conclusion: All important intra-PoP routes\
    \ with primary interface\n   A1C1, except A1, benefit from LFA link protection\
    \ and node\n   protection.\n"
- title: 3.3.4.2.  Per-Link LFA
  contents:
  - "3.3.4.2.  Per-Link LFA\n   C1 does not have a per-prefix LFA for destination\
    \ A1; hence, there is\n   no per-link LFA for link C1A1.\n"
- title: 3.3.4.3.  Assumptions on the Values of c and a
  contents:
  - "3.3.4.3.  Assumptions on the Values of c and a\n   The commonly agreed-upon design\
    \ rule (c < a) is especially beneficial\n   for a deployment using per-link LFA:\
    \ it provides a per-link LFA for\n   the most important direction (A1C1).  Indeed,\
    \ there are many more\n   destinations reachable over A1C1 than over C1A1.  As\
    \ the IGP\n   convergence duration is proportional to the number of routes to\n\
    \   update, there is a better benefit in leveraging LFA FRR for link A1C1\n  \
    \ than for link C1A1.\n   Note as well that the consequence of this assumption\
    \ is much more\n   important for per-link LFA than for per-prefix LFA.\n   For\
    \ per-prefix LFAs, in the case of link C1A1 failure, we do have a\n   per-prefix\
    \ LFA for E1, E2, and any node subtended below A1 and A2.\n   Typically, most\
    \ of the traffic traversing link C1A1 is directed to\n   these E nodes; hence,\
    \ the lack of per-prefix LFAs for the destination\n   A1 might be insignificant.\
    \  This is a good example of the coverage\n   benefit of per-prefix LFAs over\
    \ per-link LFAs.\n   In the remainder of this section, we analyze the consequence\
    \ of not\n   having c < a.\n   It definitely has a negative impact upon per-link\
    \ LFAs.\n   With c > a, C1A1 has a per-link LFA, while A1C1 has no per-link LFA.\n\
    \   The number of destinations impacted by A1C1 failure is much larger\n   than\
    \ the direction C1A1; hence, the protection is provided for the\n   wrong direction.\n\
    \   For per-prefix LFAs, the availability of an LFA depends on the\n   topology\
    \ and needs to be assessed individually for each per-prefix\n   LFA.  Some backbone\
    \ topologies will lead to very good protection\n   coverage, while some others\
    \ might provide very poor coverage.\n   More specifically, upon A1C1 failure,\
    \ the coverage of a remote\n   destination P depends on whether e < a.  In such\
    \ a case, A2 is de\n   facto node-protecting per-prefix LFA for P.\n   Such a\
    \ study likely requires a planning tool, as each remote\n   destination P would\
    \ have a different e value (exception: all of the\n   edge devices of other aggregation\
    \ pairs within the same region, as\n   for these e = 0 by definition, e.g., E3.)\n\
    \   Finally, note that c = a is the worst choice.  In this case, C1 has\n   no\
    \ per-prefix LFA for A1 (and vice versa); hence, there is no\n   per-link LFA\
    \ for C1A1 and A1C1.\n"
- title: 3.3.5.  Conclusion
  contents:
  - "3.3.5.  Conclusion\n   All important intra-PoP routes benefit from LFA link and\
    \ node\n   protection with one exception: C1 has no per-prefix LFA to A1.\n  \
    \ All important inter-PoP routes benefit from LFA link protection.\n   They benefit\
    \ from node protection if e < c.\n   Per-link LFA provides the same protection\
    \ coverage as per-prefix LFA,\n   with two exceptions: first, C1A1 has no per-link\
    \ LFA at all.  Second,\n   when per-prefix LFA provides node protection (eq2 is\
    \ satisfied),\n   per-link LFA provides effective de facto node protection.\n"
- title: 3.3.6.  A Square Might Become a Full Mesh
  contents:
  - "3.3.6.  A Square Might Become a Full Mesh\n   If the vertical links of the square\
    \ are made of parallel links (at\n   the IP topology or below), then one should\
    \ consider splitting these\n   \"vertical links\" into \"vertical and crossed\
    \ links\".  The topology\n   becomes \"full mesh\".  One should also ensure that\
    \ the two resulting\n   sets of links (vertical and crossed) do not share any\
    \ Shared Risk\n   Link Group (SRLG).\n   A typical scenario in which this is prevented\
    \ would be when the A1C1\n   bandwidth may be within a building while the A1C2\
    \ is between\n   buildings.  Hence, while from a router-port viewpoint the operation\n\
    \   is cost-neutral, from a cost-of-bandwidth viewpoint it is not.\n"
- title: 3.3.7.  A Full Mesh Might Be More Economical Than a Square
  contents:
  - "3.3.7.  A Full Mesh Might Be More Economical Than a Square\n   In a full mesh,\
    \ the vertical and crossed links play the dominant\n   role, as they support most\
    \ of the primary and backup paths.  The\n   capacity of the horizontal links can\
    \ be dimensioned on the basis of\n   traffic destined to a single C node or a\
    \ single A node, and to a\n   single E node.\n"
- title: 3.4.  Extended U
  contents:
  - "3.4.  Extended U\n   For the Extended U topology, we define the following terminology:\n\
    \      C1L1: the node \"C1\" as seen in topology L1.\n      C1L2: the node \"\
    C1\" as seen in topology L2.\n      C1LO: the loopback of C1.  This loopback is\
    \ in L2.\n      C2LO: the loopback of C2.  This loopback is in L2.\n   We remind\
    \ the reader that C1 and C2 are L1L2 routers and that their\n   loopbacks are\
    \ in L2 only.\n                                  P\n                         \
    \        / \\\n                               x/   \\x+e\n                   \
    \            /     \\\n                              C1<...>C2\n             \
    \                  |\\    | \\\n                               | \\   |  +-------+\n\
    \                           d/u |  \\  |           \\\n                      \
    \         |   +-|-----+      \\\n                               |     |      \\\
    \      \\\n                              A1--a--A2     A3--a--A4\n           \
    \                    |\\   /|       |    /\n                               | \\\
    \ / |       |   /\n                            d/u|  \\  |d/u    |  /\n      \
    \                         | / \\ |       | /\n                               |/\
    \   \\|       |/\n                              E1     E2      E3\n          \
    \                 Figure 5: Extended U\n   There is no L1 link between C1 and\
    \ C2.  There might be an L2 link\n   between C1 and C2.  This is not relevant,\
    \ as this is not seen from\n   the viewpoint of the L1 topology, which is the\
    \ focus of our analysis.\n   It is guaranteed that there is a path from C1LO to\
    \ C2LO within the L2\n   topology (except if the L2 topology partitions, which\
    \ is very\n   unlikely and hence not analyzed here).  We call \"c\" its path cost.\n\
    \   Once again, we assume that c < a.\n   We exploit this property to create a\
    \ tunnel T between C1LO and C2LO.\n   Once again, as the source and destination\
    \ addresses are the loopbacks\n   of C1 and C2 and these loopbacks are in L2 only,\
    \ it is guaranteed\n   that the tunnel does not transit via the L1 domain.\n \
    \  IS-IS does not run over the tunnel; hence, the tunnel is not used for\n   any\
    \ primary paths within the L1 or L2 topology.\n   Within level-1, we configure\
    \ C1 (C2) with a level-1 LFA extended\n   neighbor \"C2 via tunnel T\" (\"C1 via\
    \ tunnel T\").\n   A router supporting such an extension learns that it has one\n\
    \   additional potential neighbor in topology level-1 when checking for\n   LFAs.\n\
    \   The L1 topology learns about C1LO as an L2=>L1 route with the Down\n   bit\
    \ set, propagated by C1L1 and C2L1.  The metric advertised by C2L1\n   is bigger\
    \ than the metric advertised by C1L1 by \"c\".\n   The L1 topology learns about\
    \ P as an L2=>L1 route with the Down bit\n   set, propagated by C1L1 and C2L1.\
    \  The metric advertised by C2L1 is\n   bigger than the metric advertised by C1L1\
    \ by \"e\".  This implies that\n   e <= c.\n"
- title: 3.4.1.  E1A1 Failure
  contents:
  - '3.4.1.  E1A1 Failure

    '
- title: 3.4.1.1.  Per-Prefix LFA
  contents:
  - "3.4.1.1.  Per-Prefix LFA\n   Five destinations are impacted by E1A1 link failure:\
    \ A1, C1LO, E2,\n   E3, and P.\n   The LFA for A1 is via A2, because eq1: a <\
    \ d + u.  Node protection\n   for traffic to A1 upon A1 node failure is not applicable.\n\
    \   The LFA for E2 is via A2, because eq1: d < d + u + d.  Node\n   protection\
    \ is guaranteed, because eq2: d < a + d.\n   The LFA for E3 is via A2, because\
    \ eq1: u + d + d < d + u + d + d.\n   Node protection is guaranteed, because eq2:\
    \ u + d + d\n   < a + u + d + d.\n   The LFA for C1LO is via A2, because eq1:\
    \ u + c < d + u + u.  Node\n   protection is guaranteed, because eq2: u + c <\
    \ a + u.\n   If e = 0: E1's primary route to P is via ECMP(E1A1, E1A2).  The LFA\n\
    \   for the first ECMP path (via A1) is the second ECMP path (via A2).\n   Node\
    \ protection is possible, because eq2: u + x < a + u + x.\n   If e <> 0: E1's\
    \ primary route to P is via E1A1.  Its LFA is via A2,\n   because eq1: a + c +\
    \ x < d + u + u + x.  Node protection is\n   guaranteed, because eq2: u + x +\
    \ e < a + u + x <=> e < a.  This is\n   true, because e <= c and c < a.\n   Conclusion:\
    \ Same as that for the square topology.\n"
- title: 3.4.1.2.  Per-Link LFA
  contents:
  - "3.4.1.2.  Per-Link LFA\n   Same as the square topology.\n"
- title: 3.4.2.  A1E1 Failure
  contents:
  - '3.4.2.  A1E1 Failure

    '
- title: 3.4.2.1.  Per-Prefix LFA
  contents:
  - "3.4.2.1.  Per-Prefix LFA\n   Same as the square topology.\n"
- title: 3.4.2.2.  Per-Link LFA
  contents:
  - "3.4.2.2.  Per-Link LFA\n   Same as the square topology.\n"
- title: 3.4.3.  A1C1 Failure
  contents:
  - '3.4.3.  A1C1 Failure

    '
- title: 3.4.3.1.  Per-Prefix LFA
  contents:
  - "3.4.3.1.  Per-Prefix LFA\n   Three destinations are impacted when A1C1 fails:\
    \ C1, E3, and P.\n   A1's LFA to C1LO is via A2, because eq1: u + c < a + u. \
    \ Node\n   protection is not applicable for traffic to C1 when C1 fails.\n   A1's\
    \ LFA to E3 is via A2, because eq1: u + d + d < d + u + u + d + d.\n   Node protection\
    \ is guaranteed, because eq2: u + d + d < a + u +\n   d + d.\n   A1's primary\
    \ route to P is via C1 (even if e = 0, u + x < a + u + x).\n   The LFA is via\
    \ A2, because eq1: u + x + e < a + u + x <=> e < a\n   (which is true; see above).\
    \  Node protection is guaranteed, because\n   eq2: u + x + e < a + u + x.\n  \
    \ Conclusion: Same as that for the square topology.\n"
- title: 3.4.3.2.  Per-Link LFA
  contents:
  - "3.4.3.2.  Per-Link LFA\n   Same as the square topology.\n"
- title: 3.4.4.  C1A1 Failure
  contents:
  - '3.4.4.  C1A1 Failure

    '
- title: 3.4.4.1.  Per-Prefix LFA
  contents:
  - "3.4.4.1.  Per-Prefix LFA\n   Three destinations are impacted by C1A1 link failure:\
    \ A1, E1, and E2.\n   E2's analysis is the same as E1 and hence is omitted.\n\
    \   C1L1 has an LFA for A1 via the extended neighbor C2L1 reachable via\n   tunnel\
    \ T.  Indeed, eq1 is true: d + a < d + a + u + d.  From the\n   viewpoint of C1L1,\
    \ C2L1's path to C1L1 is C2L1-A2-A1-C1L1.  Remember\n   that the tunnel is not\
    \ seen by IS-IS for computing primary paths!\n   Node protection is not applicable\
    \ for traffic to A1 when A1 fails.\n   C1L1's LFA for E1 is via extended neighbor\
    \ C2L1 (over tunnel T),\n   because eq1: d + d < d + a + u + d + d.  Node protection\
    \ is\n   guaranteed, because eq2: d + d < d + a + d.\n"
- title: 3.4.4.2.  Per-Link LFA
  contents:
  - "3.4.4.2.  Per-Link LFA\n   C1 has a per-prefix LFA for destination A1; hence,\
    \ there is a\n   per-link LFA for the link C1A1.  Node resistance is applicable\
    \ for\n   traffic to E1 (and E2).\n"
- title: 3.4.5.  Conclusion
  contents:
  - "3.4.5.  Conclusion\n   The Extended U topology is as good as the square topology.\n\
    \   It does not require any crossed links between the A and C nodes\n   within\
    \ an aggregation region.  It does not need an L1 link between\n   the C routers\
    \ in an access region.  Note that a link between the C\n   routers might exist\
    \ in the L2 topology.\n"
- title: 3.5.  Dual-Plane Core and Its Impact on the Access LFA Analysis
  contents:
  - "3.5.  Dual-Plane Core and Its Impact on the Access LFA Analysis\n   A dual-plane\
    \ core is defined as follows:\n   o  Each access region k is connected to the\
    \ core by two C routers\n      (C(1,k) and C(2,k)).\n   o  C(1,k) is part of plane-1\
    \ of the dual-plane core.\n   o  C(2,k) is part of plane-2 of the dual-plane core.\n\
    \   o  C(1,k) has a link to C(2, l) iff k = l.\n   o  {C(1,k) has a link to C(1,\
    \ l)} iff {C(2,k) has a link to C(2, l)}.\n   In a dual-plane core design, e =\
    \ 0; hence, the LFA node-protection\n   coverage is improved in all of the analyzed\
    \ topologies.\n"
- title: 3.6.  Two-Tiered IGP Metric Allocation
  contents:
  - "3.6.  Two-Tiered IGP Metric Allocation\n   A two-tiered IGP metric allocation\
    \ scheme is defined as follows:\n   o  All of the link metrics used in the L2\
    \ domain are part of\n      range R1.\n   o  All of the link metrics used in an\
    \ L1 domain are part of range R2.\n   o  Range R1 << range R2 such that the difference\
    \ e = C2P - C1P is\n      smaller than any link metric within an access region.\n\
    \   Assuming such an IGP metric allocation, the following properties are\n   guaranteed:\
    \ c < a, e < c, and e < a.\n"
- title: 3.7.  uLoop Analysis
  contents:
  - "3.7.  uLoop Analysis\n   In this section, we analyze a case where the routing\
    \ transition\n   following the failure of a link may have some uLoop potential\
    \ for one\n   destination.  Then, we show that all of the other cases do not have\n\
    \   uLoop potential.\n   In the square design, upon the failure of link C1A1,\
    \ traffic\n   addressed to A1 can undergo a transient forwarding loop as C1\n\
    \   reroutes traffic to C2, which initially reaches A1 through C1, as\n   c <\
    \ a.  This loop will actually occur when C1 updates its FIB for\n   destination\
    \ A1 before C2.\n   It can be shown that all of the other routing transitions\
    \ following a\n   link failure in the analyzed topologies do not have uLoop potential.\n\
    \   Indeed, in each case, for all destinations affected by the failure,\n   the\
    \ rerouting nodes deviate their traffic directly to adjacent nodes\n   whose paths\
    \ towards these destinations do not change.  As a\n   consequence, all of these\
    \ routing transitions cannot undergo\n   transient forwarding loops.\n   For example,\
    \ in the square topology, the failure of directed link\n   A1C1 does not lead\
    \ to any uLoop.  The destinations reached over that\n   directed link are C1 and\
    \ P.  A1's and E1's shortest paths to these\n   destinations after the convergence\
    \ go via A2.  A2's path to C1 and P\n   is not using A1C1 before the failure;\
    \ hence, no uLoop may occur.\n"
- title: 3.8.  Summary
  contents:
  - "3.8.  Summary\n   In this section, we summarize the applicability of LFAs detailed\
    \ in\n   the previous sections.  For link protection, we use \"Full\" to refer\n\
    \   to the applicability of LFAs for each destination, reached via any\n   link\
    \ of the topology.  For node protection, we use \"Yes\" to refer to\n   the fact\
    \ that node protection is achieved for a given node.\n   1.  Intra-Area Destinations\n\
    \          Link Protection\n          +  Triangle: Full\n          +  Full Mesh:\
    \ Full\n          +  Square: Full, except C1 has no LFA for dest A1\n        \
    \  +  Extended U: Full\n          Node Protection\n          +  Triangle: Yes\n\
    \          +  Full Mesh: Yes\n          +  Square: Yes\n          +  Extended\
    \ U: Yes\n   2.  Inter-Area Destinations\n          Link Protection\n        \
    \  +  Triangle: Full\n          +  Full Mesh: Full\n          +  Square: Full\n\
    \          +  Extended U: Full\n          Node Protection\n          +  Triangle:\
    \ Yes, if e < c\n          +  Full Mesh: Yes for A failure, if e < c for C failure\n\
    \          +  Square: Yes for A failure, if e < c for C failure\n          + \
    \ Extended U: Yes, if e <= c and c < a\n   3.  uLoops\n       *  Triangle: None\n\
    \       *  Full Mesh: None\n       *  Square: None, except traffic to A1 when\
    \ C1A1 fails\n       *  Extended U: None, if a > e\n   4.  Per-Link LFA vs. Per-Prefix\
    \ LFA\n       *  Triangle: Same\n       *  Full Mesh: Same\n       *  Square:\
    \ Same, except C1A1 has no per-link LFA.  In practice,\n          this means that\
    \ per-prefix LFAs will be used.  (Hence, C1 has\n          no LFA for dest = E1\
    \ and dest = A1.)\n       *  Extended U: Same\n"
- title: 4.  Core Network
  contents:
  - "4.  Core Network\n   In the backbone, the optimization of the network design\
    \ to achieve\n   the maximum LFA protection is less straightforward than in the\
    \ case\n   of the access/aggregation network.\n   The main optimization objectives\
    \ for backbone topology design are\n   cost, latency, and bandwidth, constrained\
    \ by the availability of\n   fiber.  Optimizing the design for local IP restoration\
    \ is more likely\n   to be considered as a non-primary objective.  For example,\
    \ the way\n   the fiber is laid out and the resulting cost to change it lead to\n\
    \   ring topologies in some backbone networks.\n   Also, the capacity-planning\
    \ process is already complex in the\n   backbone.  The process needs to make sure\
    \ that the traffic matrix\n   (demand) is supported by the underlying network\
    \ (capacity) under all\n   possible variations of the underlying network (what-if\
    \ scenario\n   related to one-SRLG failure).  Classically, \"supported\" means\
    \ that no\n   congestion is experienced and that the demands are routed along\
    \ the\n   appropriate latency paths.  Selecting the LFA method as a\n   deterministic\
    \ FRR solution for the backbone would require enhancement\n   of the capacity-planning\
    \ process to add a third constraint: Each\n   variation of the underlying network\
    \ should lead to sufficient LFA\n   coverage.  (We detail this aspect in Section\
    \ 7.)\n   On the other hand, the access network is based on many replications\n\
    \   of a small number of well-known (well-engineered) topologies.  The\n   LFA\
    \ coverage is deterministic and is independent of additions/\n   insertions of\
    \ a new edge device, a new aggregation sub-region, or a\n   new access region.\n\
    \   In practice, we believe that there are three profiles for the\n   backbone\
    \ applicability of the LFA method:\n      In the first profile, the designer plans\
    \ all of the network\n      resilience on IGP convergence.  In such a case, the\
    \ LFA method is\n      a free bonus.  If an LFA is available, then the loss of\n\
    \      connectivity is likely reduced by a factor of 10 (50 msec vs.\n      500\
    \ msec); otherwise, the loss of connectivity depends on IGP\n      convergence,\
    \ which is the initial target anyway.  The LFA method\n      should be very successful\
    \ here, as it provides a significant\n      improvement without any additional\
    \ cost.\n      In the second profile, the designer seeks a very high and\n   \
    \   deterministic FRR coverage, and he either does not want or cannot\n      engineer\
    \ the topology.  The LFA method should not be considered in\n      this case.\
    \  MPLS Traffic Engineering (TE) FRR would perform much\n      better in this\
    \ environment.  Explicit routing ensures that a\n      backup path exists, whatever\
    \ the underlying topology.\n      In the third profile, the designer seeks a very\
    \ high and\n      deterministic FRR coverage, and he does engineer the topology.\n\
    \      The LFA method is appealing in this scenario, as it can provide a\n   \
    \   very simple way to obtain protection.  Furthermore, in practice,\n      the\
    \ requirement for FRR coverage might be limited to a certain\n      part of the\
    \ network (e.g., a given sub-topology) and/or is likely\n      limited to a subset\
    \ of the demands within the traffic matrix.  In\n      such a case, if the relevant\
    \ part of the network natively provides\n      a high degree of LFA protection\
    \ for demands of interest, it might\n      actually be straightforward to improve\
    \ the topology and achieve\n      the level of protection required for the sub-topology\
    \ and the\n      demands that matter.  Once again, the practical problem needs\
    \ to\n      be considered (which sub-topology, and which real demands need\n \
    \     50 msec), as it is often simpler than the theoretical generic one.\n   For\
    \ the reasons explained previously, the backbone applicability\n   should be analyzed\
    \ on a case-by-case basis, and it is difficult to\n   derive generic rules.\n\
    \   In order to help the reader to assess the LFA applicability in his\n   own\
    \ case, we provide some simulation results based on 11 real\n   backbone topologies\
    \ in the next section.\n"
- title: 4.1.  Simulation Framework
  contents:
  - "4.1.  Simulation Framework\n   In order to perform an analysis of LFA applicability\
    \ in the core, we\n   usually receive the complete IS-IS/OSPF linkstate database\
    \ taken on a\n   core router.  We parse it to obtain the topology.  During this\n\
    \   process, we eliminate all nodes connected to the topology with a\n   single\
    \ link and all prefixes except a single \"node address\" per\n   router.  We compute\
    \ the availability of per-prefix LFAs to all of\n   these node addresses, which\
    \ we hereafter call \"destinations\".  We\n   treat each link in each direction.\n\
    \   For each (directed) link, we compute whether we have a per-prefix LFA\n  \
    \ to the next hop.  If so, we have a per-link LFA for the link.\n   The per-link-LFA\
    \ coverage for a topology T is the fraction of the\n   number of links with a\
    \ per-link LFA divided by the total number of\n   links.\n   For each link, we\
    \ compute the number of destinations whose primary\n   path involves the analyzed\
    \ link.  For each such destination, we\n   compute whether a per-prefix LFA exists.\n\
    \   The per-prefix LFA coverage for a topology T is the following\n   fraction:\n\
    \   (the sum across all links of the number of destinations with a\n   primary\
    \ path over the link and a per-prefix LFA)\n   divided by\n   (the sum across\
    \ all links of the number of destinations with a\n   primary path over the link)\n"
- title: 4.2.  Data Set
  contents:
  - "4.2.  Data Set\n   Our data set is based on 11 SP core topologies with different\n\
    \   geographical scopes: worldwide, national, and regional.  The number\n   of\
    \ nodes ranges from 600 to 16.  The average link-to-node ratio is\n   2.3, with\
    \ a minimum of 1.2 and maximum of 6.\n"
- title: 4.3.  Simulation Results
  contents:
  - "4.3.  Simulation Results\n               +----------+--------------+----------------+\n\
    \               | Topology | Per-Link LFA | Per-Prefix LFA |\n               +----------+--------------+----------------+\n\
    \               |    T1    |      45%     |       76%      |\n               |\
    \    T2    |      49%     |       98%      |\n               |    T3    |    \
    \  88%     |       99%      |\n               |    T4    |      68%     |    \
    \   84%      |\n               |    T5    |      75%     |       94%      |\n\
    \               |    T6    |      87%     |       98%      |\n               |\
    \    T7    |      16%     |       67%      |\n               |    T8    |    \
    \  87%     |       99%      |\n               |    T9    |      67%     |    \
    \   79%      |\n               |    T10   |      98%     |       99%      |\n\
    \               |    T11   |      59%     |       77%      |\n               |\
    \  Average |      67%     |       89%      |\n               |  Median  |    \
    \  68%     |       94%      |\n               +----------+--------------+----------------+\n\
    \                        Table 1: Core LFA Coverages\n   In Table 1, we observe\
    \ a wide variation in terms of LFA coverage\n   across topologies: from 67% to\
    \ 99% for the per-prefix LFA coverage,\n   and from 16% to 98% for the per-link\
    \ LFA coverage.  Several\n   topologies have been optimized for LFAs (T3, 6, 8,\
    \ and 10).  This\n   illustrates the need for case-by-case analysis when considering\
    \ LFAs\n   for core networks.\n   It should be noted that, contrary to the access/aggregation\n\
    \   topologies, per-prefix LFA outperforms per-link LFA in the backbone.\n"
- title: 5.  Core and Access Protection Schemes Are Independent
  contents:
  - "5.  Core and Access Protection Schemes Are Independent\n   Specifically, a design\
    \ might use LFA FRR in the access and MPLS TE\n   FRR in the core.\n   The LFA\
    \ method provides great benefits for the access network, due to\n   its excellent\
    \ access coverage and its simplicity.\n   MPLS TE FRR's topology independence\
    \ might prove beneficial in the\n   core when the LFA FRR coverage is judged too\
    \ small and/or the\n   designer feels unable to optimize the topology to improve\
    \ the LFA\n   coverage.\n"
- title: 6.  Simplicity and Other LFA Benefits
  contents:
  - "6.  Simplicity and Other LFA Benefits\n   The LFA solution provides significant\
    \ benefits that mainly stem from\n   its simplicity.\n   Behavior of LFAs is an\
    \ automated process that makes fast restoration\n   an intrinsic part of the IGP,\
    \ with no additional configuration burden\n   in the IGP or any other protocol.\n\
    \   Thanks to this integration, the use of multiple areas in the IGP does\n  \
    \ not make fast restoration more complex to achieve than in a single\n   area\
    \ IGP design.\n   There is no requirement for network-wide upgrade, as LFAs do\
    \ not\n   require any protocol change and hence can be deployed router by\n  \
    \ router.\n   With LFAs, the backup paths are pre-computed and installed in the\n\
    \   data plane in advance of the failure.  Assuming a fast enough FIB\n   update\
    \ time compared to the total number of (important) destinations,\n   a \"<50-msec\
    \ repair\" requirement becomes achievable.  With a prefix-\n   independent implementation,\
    \ LFAs have a fixed repair time, as the\n   repair time depends on the failure\
    \ detection time and the time\n   required to activate the behavior of an LFA,\
    \ which does not scale\n   with the number of destinations to be fast-rerouted.\n\
    \   Link and node protection are provided together and without any\n   operational\
    \ differences.  (As a comparison, MPLS TE FRR link and node\n   protections require\
    \ different types of backup tunnels and different\n   grades of operational complexity.)\n\
    \   Also, compared to MPLS TE FRR, an important simplicity aspect of the\n   LFA\
    \ solution is that it does not require the introduction of yet\n   another virtual\
    \ layer of topology.  Maintaining a virtual topology of\n   explicit MPLS TE tunnels\
    \ clearly increases the complexity of the\n   network.  MPLS TE tunnels would\
    \ have to be represented in a network\n   management system in order to be monitored\
    \ and managed.  In large\n   networks, this may significantly contribute to the\
    \ number of network\n   entities polled by the network management system and monitored\
    \ by\n   operational staff.  An LFA, on the other hand, only has to be\n   monitored\
    \ for its operational status once per router, and it needs to\n   be considered\
    \ in the network-planning process.  If the latter is done\n   based on offline\
    \ simulations for failure cases anyway, the\n   incremental cost of supporting\
    \ LFAs for a defined set of demands may\n   be relatively low.\n   The per-prefix\
    \ mode of LFAs allows for simpler and more efficient\n   capacity planning.  As\
    \ the backup path of each destination is\n   optimized individually, the load\
    \ to be fast-rerouted can be spread on\n   a set of shortest repair paths (as\
    \ opposed to a single backup\n   tunnel).  This leads to a simpler and more efficient\
    \ capacity-\n   planning process that takes congestion during protection into\n\
    \   account.\n"
- title: 7.  Capacity Planning with LFA in Mind
  contents:
  - "7.  Capacity Planning with LFA in Mind\n   We briefly describe the functionality\
    \ a designer should expect from a\n   capacity-planning tool that supports LFAs,\
    \ and the related capacity-\n   planning process.\n"
- title: 7.1.  Coverage Estimation - Default Topology
  contents:
  - "7.1.  Coverage Estimation - Default Topology\n   Per-Link LFA Coverage Estimation:\
    \ The tool would color each\n   unidirectional link in, depending on whether or\
    \ not per-link LFAs are\n   available.\n   Per-Prefix LFA Coverage Estimation:\
    \ The tool would color each\n   unidirectional link with a colored gradient, based\
    \ on the percent of\n   destinations that have a per-prefix LFA.\n   In addition\
    \ to the visual GUI reporting, the tool should provide\n   detailed tables that\
    \ list, on a per-interface basis, the percentage\n   of LFAs, the number of prefixes\
    \ with LFAs, the number of prefixes\n   without LFAs, and a list of those prefixes\
    \ without LFAs.\n   Furthermore, the tool should list and provide percentages\
    \ for the\n   traffic matrix demands with less than 100% source-to-destination\
    \ LFA\n   coverage, as well as average coverage (number of links on which a\n\
    \   demand has an LFA/number of links traversed by this demand) for every\n  \
    \ demand (using a threshold).\n   The user should be able to alter the color scheme\
    \ to show whether\n   these LFAs are guaranteed node-protecting or de facto node-\n\
    \   protecting, or only link-protecting.\n   This functionality provides the same\
    \ level of information as we\n   described in Sections 4.1 to 4.3.\n"
- title: 7.2.  Coverage Estimation in Relation to Traffic
  contents:
  - "7.2.  Coverage Estimation in Relation to Traffic\n   Instead of reporting the\
    \ coverage as a ratio of the number of\n   destinations with a backup, one might\
    \ prefer a ratio of the amount of\n   traffic on a link that benefits from protection.\n\
    \   This is likely much more relevant, as not all destinations are equal,\n  \
    \ and it is much more important to have an LFA for a destination\n   attracting\
    \ lots of traffic rather than an unpopular destination.\n"
- title: 7.3.  Coverage Verification for a Given Set of Demands
  contents:
  - "7.3.  Coverage Verification for a Given Set of Demands\n   Depending on the requirements\
    \ on the network, it might be more\n   relevant to verify the complete LFA coverage\
    \ of a given sub-topology,\n   or a given set of demands, rather than to calculate\
    \ the relative\n   coverage of the overall traffic.  This is most likely true\
    \ for the\n   third engineering profile described in Section 4.\n   In that case,\
    \ the tool should be able to separately report the LFA\n   coverage on a given\
    \ set of demands and highlight each part of the\n   network that does not support\
    \ 100% coverage for any of those demands.\n"
- title: 7.4.  Modeling - What-If Scenarios - Coverage Impact
  contents:
  - "7.4.  Modeling - What-If Scenarios - Coverage Impact\n   The tool should be able\
    \ to compute the coverage for all of the\n   possible topologies that result from\
    \ a set of expected failures\n   (i.e., one-SRLG failure).\n   Filtering the key\
    \ information from the huge amount of generated data\n   should be a key property\
    \ of the tool.\n   For example, the user could set a threshold (at least 80% per-prefix\n\
    \   LFA coverage in all one-SRLG what-if scenarios), and the tool would\n   report\
    \ only the cases where this condition is not met, hopefully with\n   some assistance\
    \ on how to remedy the problem (IGP metric\n   optimization).\n   As an application\
    \ example, a designer who is not able to ensure that\n   c < a could leverage\
    \ such a tool to assess the per-prefix LFA\n   coverage for square aggregation\
    \ topologies grafted to the backbone of\n   his network.  The tool would analyze\
    \ the per-prefix LFA availability\n   for each remote destination and would help\
    \ optimize the backbone\n   topology to increase the LFA protection coverage for\
    \ failures within\n   the square aggregation topologies.\n"
- title: 7.5.  Modeling - What-If Scenarios - Load Impact
  contents:
  - "7.5.  Modeling - What-If Scenarios - Load Impact\n   The tool should be able\
    \ to compute the link load for all routing\n   states that result from a set of\
    \ expected failures (i.e., one-SRLG\n   failure).\n   The routing states that\
    \ should be supported are 1) network-wide\n   converged state before the failure,\
    \ 2) state in which all of the LFAs\n   protecting the failure are active, and\
    \ 3) network-wide converged\n   state after the failure.\n   Filtering the key\
    \ information from the huge amount of generated data\n   should be a key property\
    \ of the tool.\n   For example, the user could set a threshold (at most 100% link\
    \ load\n   in all one-SRLG what-if scenarios), and the tool would report only\n\
    \   the cases where this condition is violated, hopefully with some\n   assistance\
    \ on how to remedy the problem (IGP metric optimization).\n   The tool should\
    \ be able to do this for the aggregate load, and on a\n   per-class-of-service\
    \ basis as well.\n      Note: In cases where the traffic matrix is unknown, an\n\
    \      intermediate solution consists of identifying the destinations\n      that\
    \ would attract traffic (i.e., Provider Edge (PE) routers), and\n      those that\
    \ would not (i.e., Provider (P) routers).  One could\n      achieve this by creating\
    \ a traffic matrix with equal demands\n      between the sources/destinations\
    \ that would attract traffic (PE to\n      PE).  This will be more relevant than\
    \ considering all demands\n      between all prefixes (e.g., when there is no\
    \ customer traffic from\n      P to P).\n"
- title: 7.6.  Discussion on Metric Recommendations
  contents:
  - "7.6.  Discussion on Metric Recommendations\n   While LFA FRR has many benefits\
    \ (Section 6), LFA FRR's applicability\n   depends on topology.\n   The purpose\
    \ of this document is to show how to introduce a level of\n   control over this\
    \ topology parameter.\n   On the one hand, we wanted to show that by adopting\
    \ a small set of\n   IGP metric constraints and a repetition of well-behaved patterns,\
    \ the\n   designer could deterministically guarantee maximum link and node\n \
    \  protection for the vast majority of the network (the access/\n   aggregation).\
    \  By doing so, he would obtain an extremely simple\n   resiliency solution.\n\
    \   On the other hand, we also wanted to show that it might not be so bad\n  \
    \ to not apply (all of) these constraints.\n   Indeed, we explained in Section\
    \ 3.3.4.3 that the per-prefix LFA\n   coverage in a square where c >= a might\
    \ still be very good, depending\n   on the backbone topology.\n   We showed in\
    \ Section 4.3 that the median per-prefix LFA coverage for\n   11 SP backbone topologies\
    \ still provides 94% coverage.  (Most of\n   these topologies were built without\
    \ any idea of LFA!)\n   Furthermore, we showed that any topology may be analyzed\
    \ with an LFA-\n   aware capacity-planning tool.  This would readily assess the\
    \ coverage\n   of per-prefix LFAs and would assist the designer in fine-tuning\
    \ it to\n   obtain the level of protection he seeks.\n   While this document highlights\
    \ LFA applicability and benefits for SP\n   networks, it also notes that LFAs\
    \ are not meant to replace MPLS\n   TE FRR.\n   With a very LFA-unfriendly topology,\
    \ a designer seeking guaranteed\n   <50-msec protection might be better off leveraging\
    \ the explicit-\n   routed backup capability of MPLS TE FRR to provide 100% protection\n\
    \   while ensuring no congestion along the backup paths during\n   protection.\n\
    \   But when LFAs provide 100% link and node protection without any\n   uLoop,\
    \ then clearly the LFA method seems a technology to consider to\n   drastically\
    \ simplify the operation of a large-scale network.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security considerations applicable to LFAs\
    \ are described in\n   [RFC5286].  This document does not introduce any new security\n\
    \   considerations.\n"
- title: 9.  Conclusions
  contents:
  - "9.  Conclusions\n   The LFA method is an important protection alternative for\
    \ IP/MPLS\n   networks.\n   Its simplicity benefit is significant, in terms of\
    \ automation and\n   integration with the default IGP behavior and the absence\
    \ of any\n   requirement for network-wide upgrade.  The technology does not\n\
    \   require any protocol change and hence can be deployed router by\n   router.\n\
    \   At first sight, these significant simplicity benefits are negated by\n   the\
    \ topological dependency of its applicability.\n   The purpose of this document\
    \ is to highlight that very frequent\n   access and aggregation topologies benefit\
    \ from excellent link and\n   node LFA coverage.\n   A second objective consists\
    \ of describing the three different\n   profiles of LFA applicability for the\
    \ IP/MPLS core networks and\n   illustrating them with simulation results based\
    \ on real SP core\n   topologies.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   We would like to thank Alvaro Retana and especially\
    \ Stewart Bryant\n   for their valuable comments on this work.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC5286]  Atlas, A., Ed., and A. Zinin, Ed.,\
    \ \"Basic Specification\n              for IP Fast Reroute: Loop-Free Alternates\"\
    , RFC 5286,\n              September 2008.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC5714]  Shand, M. and S. Bryant, \"IP Fast\
    \ Reroute Framework\",\n              RFC 5714, January 2010.\n   [RFC5715]  Shand,\
    \ M. and S. Bryant, \"A Framework for Loop-Free\n              Convergence\",\
    \ RFC 5715, January 2010.\n   [RFC1195]  Callon, R., \"Use of OSI IS-IS for routing\
    \ in TCP/IP and\n              dual environments\", RFC 1195, December 1990.\n\
    \   [IS-IS]    ISO/IEC 10589:2002, Second Edition, \"Intermediate System\n   \
    \           to Intermediate System Intra-Domain Routeing Exchange\n          \
    \    Protocol for use in Conjunction with the Protocol for\n              Providing\
    \ the Connectionless-mode Network Service\n              (ISO 8473)\", 2002.\n\
    \   [RFC2328]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n  \
    \ [RFC5340]  Coltun, R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n      \
    \        for IPv6\", RFC 5340, July 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Clarence Filsfils (editor)\n   Cisco Systems\n   Brussels\
    \  1000\n   BE\n   EMail: cf@cisco.com\n   Pierre Francois (editor)\n   Institute\
    \ IMDEA Networks\n   Avda. del Mar Mediterraneo, 22\n   Leganese  28918\n   ES\n\
    \   EMail: pierre.francois@imdea.org\n   Mike Shand\n   EMail: imc.shand@googlemail.com\n\
    \   Bruno Decraene\n   France Telecom\n   38-40 rue du General Leclerc\n   92794\
    \ Issy Moulineaux cedex 9\n   FR\n   EMail: bruno.decraene@orange.com\n   James\
    \ Uttaro\n   AT&T\n   200 S. Laurel Avenue\n   Middletown, NJ  07748\n   US\n\
    \   EMail: uttaro@att.com\n   Nicolai Leymann\n   Deutsche Telekom\n   Winterfeldtstrasse\
    \ 21\n   10781, Berlin\n   DE\n   EMail: N.Leymann@telekom.de\n   Martin Horneffer\n\
    \   Deutsche Telekom\n   Hammer Str. 216-226\n   48153, Muenster\n   DE\n   EMail:\
    \ Martin.Horneffer@telekom.de\n"
