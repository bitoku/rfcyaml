- contents:
  - "         Managed Objects for Time Division Multiplexing (TDM)\n                  over
    Packet Switched Networks (PSNs)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects for pseudowire\n   encapsulation for
    structured or unstructured Time-Division\n   Multiplexing (TDM) (T1, E1, T3, E3)
    circuits over a Packet Switched\n   Network (PSN).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions .....................................................3\n   3.
    Terminology .....................................................3\n   4. The
    Internet-Standard Management Framework ......................4\n   5. Overview
    ........................................................4\n   6. TDM MIB Module
    Usage ............................................4\n      6.1. Structure of TDM
    MIB .......................................4\n      6.2. TDM Connection Configuration
    Procedure .....................5\n      6.3. TDM PW Monitoring ..........................................6\n
    \  7. Example of Actual TDM PW Setup ..................................6\n   8.
    Object Definition ...............................................9\n   9. Security
    Considerations ........................................37\n   10. IANA Considerations
    ...........................................39\n   11. References ....................................................39\n
    \     11.1. Normative References .....................................39\n      11.2.
    Informative References ...................................40\n   12. Acknowledgements
    ..............................................41\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes a model for managing TDM pseudowires,
    i.e.,\n   TDM data encapsulated for transmission over a Packet Switched Network\n
    \  (PSN).  The term TDM in this document is limited to the scope of\n   Plesiochronous
    Digital Hierarchy (PDH).  It is currently specified to\n   carry any TDM Signals
    in either Structure Agnostic Transport mode\n   (E1, T1, E3, and T3) or in Structure
    Aware Transport mode (E1, T1,\n   and NxDS0) as defined in the Pseudowire Emulation
    Edge-to-Edge (PWE3)\n   TDM Requirements document [RFC4197].\n   This document
    is closely related to [SATOP], [TDMOIP], and [CESOPSN],\n   which describe the
    encapsulation of TDM signals and provide the\n   Circuit Emulation Service over
    a PSN.\n   The TDM management model consists of several MIB modules, following\n
    \  the layering model described in the PWE3 Architecture document\n   [RFC3985].
    \ The TDM MIB module described in this document works\n   closely with the MIB
    modules described in [DS3MIB], [DS1MIB],\n   [DS0MIB], [IFMIB], [PWMIB], and with
    the textual conventions defined\n   in [PWTC].  The conceptual layering and relationship
    among all those\n   is described in Figure 1 below.  A TDM connection will be
    a\n   pseudowire (PW) connection.  It will not be treated as an interface\n   and
    will therefore not be represented in the ifTable.\n                     Figure
    1: Conceptual Layering\n                          +-------------------+\n                          |
    \    TDM MIB       |  DS1MIB, DS3MIB,\n                          +-------------------+
    \ DS0MIB\n                                   |\n                          +-------------------+
    \ PW-TDM-MIB,\n             Service      |    TDM PW MIB     |  PW-CESOPSN-MIB,\n
    \             Layer       +-------------------+  PW-TDMOIP-MIB\n            -
    - - - - - - - - - -  | - - - - - - - - - - - - - - -\n             Generic      +-------------------+\n
    \              PW         | Generic PW MIBS   |  PW-TC-MIB,\n              Layer
    \      +-------------------+  PW-MIB\n            - - - - - - - - - - - -| - -
    - - - - - - - - - - - - -\n                          +-------------------+\n              PSN
    VC      |   MPLS VC MIBS    |  PW-MPLS-MIB\n              Layer       +-------------------+\n
    \           - - - - - - - - - - - -| - - - - - - - - - - - - - - -\n                          +-------------------+\n
    \              PSN        |    MPLS MIBs      |  MPLS-TE-STD-MIB,\n              Layer
    \      +-------------------+  MPLS-LSR-STD-MIB\n"
  title: 1.  Introduction
- contents:
  - "2.   Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [BCP14].\n"
  title: 2.   Conventions
- contents:
  - "3.  Terminology\n   The basic terminology used to refer to transmission direction
    in this\n   document is taken from [SATOP], which describes a mechanism for\n
    \  transporting Structure-Agnostic (TDM) bit-streams over a packet-\n   oriented
    network.  To simplify this document, the terminology is used\n   for structured
    and unstructured TDM as well.\n   \"PSN-bound\" references the traffic direction
    where TDM data is\n   received, adapted to the packet based on the number of payload
    bytes\n   per packet, assigned a relevant TDM header (sequence numbers, flags,\n
    \  and timestamps (if the RTP header is used)), prepended multiplexing\n   layer
    and PSN headers, and sent into the PSN.\n   Conversely, the \"CE-bound\" references
    the traffic direction where\n   packets are received from the PSN, packet payloads
    are reassembled by\n   including a jitter buffer where payload of the received
    TDM packets\n   is stored prior to play out to the TDM line.  The size of this
    buffer\n   SHOULD be locally configurable to allow accommodation to the PSN-\n
    \  specific packet delay variation.\n   The CE-bound TDM interworking function
    (IWF) SHOULD use the sequence\n   number in the control word for the detection
    of lost (Loss of Packet\n   State (LOPS)) and mis-ordered packets.  If the RTP
    header is used,\n   the RTP sequence numbers MAY be used for the same purposes.\n"
  title: 3.  Terminology
- contents:
  - "4.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 4.  The Internet-Standard Management Framework
- contents:
  - "5.  Overview\n   This MIB module is designed to satisfy the following requirements
    and\n   constraints:\n   1.  Fit within the architecture defined by [RFC3985]
    and [PWMIB].\n   2.  Support edge-to-edge emulation of any TDM connections.\n
    \  3.  Configure the connection.  The connection-specific behavior is\n       provided
    via the supplement MIB modules.\n   4.  Report various alarms, counters, and status
    objects.\n"
  title: 5.  Overview
- contents:
  - '6.  TDM MIB Module Usage

    '
  - contents:
    - "6.1.  Structure of TDM MIB\n   The MIB consists of five tables;\n   - The TDM
      PW Table (pwTDMTable) contains generic TDM information\n     regarding the PW
      connection.  It contains the ifIndex of the TDM\n     interface, an index to
      an entry in the generic configuration table\n     (pwTDMCfgTable), an index
      to an entry in the specific configuration\n     table (pwCXXXCfgTable, where
      XXX can be TDMoIP (TDM over IP) or\n     CESoPSN (Circuit Emulation Service
      over PSN)), config error\n     indications, and various status indications.
      \ The two indices of\n     the two configuration tables are providing the connection\n
      \    parameters.  The TDM interface can be a full link of any TDM type\n     like
      E1 or DS3, for example, or the interface of the bundle holding\n     the collection
      of time slots to be transmitted.  Based on the TDM\n     PW type, the relevant
      pwXXXCfgTable from the relevant MIB module\n     will be used.  The specific
      types are:\n      o  17 Structure-agnostic E1 over Packet\n      o  18 Structure-agnostic
      T1 (DS1) over Packet\n      o  19 Structure-agnostic E3 over Packet\n      o
      \ 20 Structure-agnostic T3 (DS3) over Packet\n      o  21 CESoPSN basic mode
      (XXX=CESoPSN)\n      o  22 TDMoIP AAL1mode (XXX=TDMoIP)\n      o  23 CESoPSN
      TDM with CAS (XXX=CESoPSN)\n      o  24 TDMoIP AAL2 Mode (XXX=TDMoIP)\n   -
      The TDM Generic Parameter Table (pwTDMCfgTable) contains TDM\n     generic configurable
      parameters for any TDM type.\n   - The TDM Performance Current Table (pwTDMPerfCurrentTable)
      contains\n     TDM statistics for the current 15-minute period.\n   - The TDM
      Performance Interval Table (pwTDMPerfIntervalTable)\n     contains TDM statistics
      for historical intervals (usually 96 15-\n     minute entries to cover a 24
      hour period).\n   - The TDM Performance One-Day Interval Table\n     (pwTDMPerf1DayIntervalTable)
      contains TDM statistics for historical\n     intervals accumulated per day.
      \ Usually 30 one-day entries to cover\n     a monthly period.\n"
    title: 6.1.  Structure of TDM MIB
  - contents:
    - "6.2.  TDM Connection Configuration Procedure\n   Configuring a TDM PW involves
      the following steps:\n   First, configure the parameters of the interface-specific
      layer using\n   the DS1-MIB and or the DS3-MIB.\n   Next, if applicable, create
      a bundle of time slots using the DS0\n   Bundle MIB [DS0MIB].\n   Next, create
      an entry in the pwTable and configure the PSN tunnels:\n   - Follow steps as
      defined in [PWMIB].\n   NOTE: The agent should create an entry in the pwTDMTable
      for any\n   entry created in the pwTable with pwType equal to a value between\n
      \  (17) and (24).\n   Next complete the TDM PW configuration:\n   - If necessary,
      create an entry in the relevant pwXXXCfgTable and in\n     the pwTDMTable (suitable
      entries may already exist in both tables).\n   - Set the index of the relevant
      pwXXXCfgTable entry and of the\n     relevant pwTDMCfgTable entry in the pwTDMTable.\n"
    title: 6.2.  TDM Connection Configuration Procedure
  - contents:
    - "6.3.  TDM PW Monitoring\n   Upon making the TDM PW operational, the pwTDMPerfCurrentTable,\n
      \  pwTDMPerfIntervalTable, and PwTDMPerf1DayIntervalTable can be used to\n   monitor
      the various counters, indicators, and conditions of the PW.\n   All performance
      parameters are accumulated in daily intervals and in\n   15-minute intervals.
      \ The number of daily intervals kept by the agent\n   is based on the specific
      implementation.  The 15-minute intervals, up\n   to 96 intervals (24 hours worth),
      are all kept by the agent.  Fewer\n   than 96 intervals of data will be available
      if the agent has been\n   restarted within the last 24 hours.  Performance parameters
      continue\n   to be collected when the interface is down.  There is no requirement\n
      \  for an agent to ensure a fixed relationship between the start of a\n   15-minute
      interval and any wall clock; however, some agents may align\n   the 15-minute
      intervals with quarter hours.  Performance parameters\n   are of types PerfCurrentCount
      and PerfIntervalCount.  These textual\n   conventions are all Gauge32, and they
      are used because it is possible\n   for these objects to decrease.\n"
    title: 6.3.  TDM PW Monitoring
  title: 6.  TDM MIB Module Usage
- contents:
  - "7.  Example of Actual TDM PW Setup\n   This section provides an example of using
    the various MIB objects\n   described in the following section to set up a TDM
    PW connection.\n   The first example is setting a connection of DS1 type.  The
    second\n   example is setting a connection with a bandwidth of 3 DS0 (time\n   slots).\n
    \  While those examples are not meant to illustrate all options of the\n   MIB,
    they are intended as an aid to understanding some of the key\n   concepts.  See
    [PWMIB] for an example of setting up PSN tunnels.\n   First example:\n   1.  Configure
    the DS1 interface using DS1-MIB.\n   2.  If needed, create an entry in the pwTDMCfgTable
    (assuming index =\n       10); verify that there are no errors in the configuration
    using\n       the relevant object.\n   3.  Get a new pwIndexNext [PWMIB] and create
    a new pwTable entry\n       using the value of pwIndexNext (assume here, the PW
    index = 20).\n   4.  Set the pwType [PWMIB] of the new entry to the relevant value\n
    \      (17) or (18).  This should create a new entry in the pwTDMTable.\n   5.
    \ Configure the newly created TDM PW with the required pointers,\n       indices,
    and the relevant entry in pwTDMCfgTable (index 10).\n   In [DS1MIB] dsx1IfIndex
    (ifIndex = 5)\n      In pwTDMCfgTable entry: Set the connection characteristic\n
    \     parameters:\n      {\n      pwTDMCfgPayloadSize     = 43 -- payload bytes\n
    \     pwTDMCfgPktReorder      = FALSE\n      pwTDMCfgRtpHdrUsed      = FALSE\n
    \     pwTDMCfgJtrBfrDepth     = 30000 -- micro-seconds\n      }\n      In pwTDMTable
    entry: Set the relevant ifIndex, the generic TDM\n      index, and the specific
    TDM index to complete creation:\n      {\n        pwTDMIfIndex          = 5    --
    IfIndex of associated entry\n                                       -- in DS1
    table\n        pwGenTDMCfgIndex      = 10   -- Index of associated entry\n                                       --
    in pwTDMCfgTable.\n        pwRelTDMCfgIndex      = 0    -- No Index in associated
    entry\n                                       -- in pwXXXCfgTable.\n      }\n
    \  Verify that there are no error bits set in pwTDMConfigError.\n   Second example:\n
    \  1.  Configure the DS1 interface using DS1-MIB.\n   2.  Set up a bundle and
    get its dsx0BundleIfIndex.  Setting up the\n       bundle should involve using
    IFMIB properly.\n   3.  Since structured TDMoIP circuit is defined, the next MIB
    module\n       to be used is TDMoIP-MIB.\n   4.  If needed, create an entry in
    the pwTDMCfgTable (assuming index =\n       7).\n   5.  If needed, create an entry
    in the pwXXXCfgTable (index = 11).\n       XXX can be TDMoIP or CESoPSN.\n   6.
    \ Verify that there are no errors in the configuration using the\n       relevant
    object when signaling is in use.\n   7.  Get a new pwIndexNext [PWMIB] and create
    a new pwTable entry\n       using the value of pwIndexNext.\n   8.  Set the pwType
    [PWMIB] of the new entry to (24).  This should\n       create a new entry in the
    pwTDMTable.\n   9.  Configure the newly created TDM PW with the required pointers,\n
    \      indices, and the relevant entries in pwTDMCfgTable and in\n       pwXXXCfgTable
    (assuming indices 7 and 11).\n      In [DS1MIB] dsx1IfIndex (ifIndex)   = 5\n
    \     In [DS0MIB] dsx0BundleIfIndex       = 8\n      In pwTDMTable entry: Set
    the relevant ifIndex, the generic\n      TDM index, and the specific TDM index
    to complete creation:\n      {\n        pwTDMIfIndex          =  8   -- IfIndex
    of associated entry\n                                     -- in DS0 table\n        pwGenTDMCfgIndex
    \    =  7   -- Index of associated entry\n                                     --
    in pwTDMCfgTable.\n        pwRelTDMCfgIndex     = 11   -- Index of associated
    entry\n                                     -- in pwXXXCfgTable.\n        -- pwXXXCfgTable
    might be an implementation specific table too.\n      }\n   Verify that there
    are no error bits set in pwTDMConfigError.\n"
  title: 7.  Example of Actual TDM PW Setup
- contents:
  - "8.   Object Definition\n   PW-TDM-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n     MODULE-IDENTITY,
    OBJECT-TYPE,\n     Integer32, Counter32, Unsigned32, mib-2\n        FROM SNMPv2-SMI\n
    \    MODULE-COMPLIANCE, OBJECT-GROUP\n        FROM SNMPv2-CONF\n     TEXTUAL-CONVENTION,
    TruthValue,  RowStatus, StorageType,\n      TimeStamp\n        FROM SNMPv2-TC\n
    \    InterfaceIndexOrZero\n        FROM IF-MIB                 -- [IFMIB]\n     SnmpAdminString\n
    \       FROM SNMP-FRAMEWORK-MIB     -- [RFC3411]\n     PerfCurrentCount, PerfIntervalCount\n
    \       FROM PerfHist-TC-MIB\n     pwIndex\n        FROM PW-STD-MIB\n     PwCfgIndexOrzero\n
    \       FROM PW-TC-STD-MIB;\n   -- The TDM MIB\n     pwTDMMIB MODULE-IDENTITY\n
    \    LAST-UPDATED \"200906150000Z\"\n     ORGANIZATION \"Pseudo-Wire Emulation
    Edge-to-Edge (PWE3)\n                   Working Group\"\n     CONTACT-INFO\n         \"
    \       Orly Nicklass\n          Postal: RADVISION Ltd.\n                  24Raul
    Wallenberg St.\n                  Tel Aviv, Israel\n                  Email: orlyn@radvision.com\n
    \         The PWE3 Working Group (email distribution pwe3@ietf.org,\n          http://www.ietf.org/html.charters/pwe3-charter.html)\n
    \         \"\n     DESCRIPTION\n         \"This MIB contains managed object definitions
    for\n          encapsulating TDM (T1,E1, T3, E3, NxDS0) as\n          pseudo-wires
    over packet-switching networks (PSN).\n          This MIB supplements the PW-STD-MIB
    as in: Zelig, D.,\n          Nadeau, T. 'Pseudowire (PW) Management Information
    Base'.\n          The PW-STD-MIB contains structures and MIB associations\n          generic
    to pseudowire (PW) emulation.  PW-specific\n          MIBs (such as this) contain
    config and stats for specific\n          PW types.\n          Copyright (c) 2009
    IETF Trust and the persons identified as\n          authors of the code.  All
    rights reserved.\n          Redistribution and use in source and binary forms,
    with or\n          without modification, are permitted provided that the\n          following
    conditions are met:\n          - Redistributions of source code must retain the
    above\n            copyright notice, this list of conditions and the\n            following
    disclaimer.\n          - Redistributions in binary form must reproduce the above\n
    \           copyright notice, this list of conditions and the following\n            disclaimer
    in the documentation and/or other materials\n            provided with the distribution.\n
    \         - Neither the name of Internet Society, IETF or IETF Trust,\n            nor
    the names of specific contributors, may be used to\n            endorse or promote
    products derived from this software\n            without specific prior written
    permission.\n          THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n
    \         CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES,\n          INCLUDING,
    BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n          MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE\n          DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
    OWNER OR\n          CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n
    \         SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n          NOT
    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n          LOSS OF USE,
    DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n          HOWEVER CAUSED AND ON ANY
    THEORY OF LIABILITY, WHETHER IN\n          CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR\n          OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    OF THIS\n          SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n
    \         This version of this MIB module is part of RFC 5604;\n          see
    the RFC itself for full legal notices.\n          \"\n     REVISION  \"200906150000Z\"\n
    \    DESCRIPTION\n         \"Initial version published as part of RFC 5604.\"\n
    \    ::= { mib-2 186 }\n   -- Local Textual conventions\n      PwTDMCfgIndex ::=
    TEXTUAL-CONVENTION\n        STATUS      current\n        DESCRIPTION\n             \"Index
    into the relevant pwXXXCfgTable.\"\n        SYNTAX Unsigned32 (1..4294967295)\n
    \  -- Notifications\n   pwTDMNotifications OBJECT IDENTIFIER\n                                ::=
    { pwTDMMIB 0 }\n   -- Tables, Scalars\n   pwTDMObjects       OBJECT IDENTIFIER\n
    \                               ::= { pwTDMMIB 1 }\n   -- Conformance\n   pwTDMConformance
    \  OBJECT IDENTIFIER\n                                ::= { pwTDMMIB 2 }\n   --
    TDM PW table\n   pwTDMTable OBJECT-TYPE\n     SYNTAX        SEQUENCE OF PwTDMEntry\n
    \    MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n
    \        \"This table contains basic information including the\n          ifIndex
    and pointers to entries in the relevant TDM\n          config tables for this
    TDM PW.\"\n     ::= { pwTDMObjects 1 }\n   pwTDMEntry OBJECT-TYPE\n     SYNTAX
    \       PwTDMEntry\n     MAX-ACCESS    not-accessible\n     STATUS        current\n
    \    DESCRIPTION\n         \"This table is indexed by the same index that was\n
    \         created for the associated entry in the PW Table\n          (in the
    PW-STD-MIB).\n            - The PwIndex.\n          An entry is created in this
    table by the agent for every\n          entry in the pwTable with a pwType equal
    to one of the\n          following:\n          e1Satop(17), t1Satop(18), e3Satop(19),
    t3Satop(20),\n          basicCesPsn(21), basicTdmIp(22), tdmCasCesPsn(23),\n          or
    tdmCasTdmIp(24).\n          Unless otherwise specified, all writeable objects
    in this\n          table MUST NOT be changed after row activation in the\n          generic
    pwTable (see [PWMIB]) and values must persist\n          after reboot.\"\n     INDEX
    \ { pwIndex }\n        ::= { pwTDMTable 1 }\n   PwTDMEntry ::= SEQUENCE {\n        pwTDMRate
    \                     Integer32,\n        pwTDMIfIndex                   InterfaceIndexOrZero,\n
    \       pwGenTDMCfgIndex               PwCfgIndexOrzero,\n        pwRelTDMCfgIndex
    \              PwCfgIndexOrzero,\n        pwTDMConfigError               BITS,\n
    \       pwTDMTimeElapsed               Integer32,\n        pwTDMValidIntervals
    \           Integer32,\n        pwTDMValidDayIntervals         Integer32,\n        pwTDMLastEsTimeStamp
    \          TimeStamp\n        }\n   pwTDMRate OBJECT-TYPE\n     SYNTAX     Integer32\n
    \    MAX-ACCESS    read-write\n     STATUS        current\n     DESCRIPTION\n
    \        \"The parameter represents the bit-rate of the TDM service\n          in
    multiples of the 'basic' 64 Kbit/s rate [TDMCP-EXT].\n          It complements
    the definition of pwType used in\n          PW-STD-MIB.\n          For structure-agnostic
    mode, the following should be used:\n          a) (Structure-Agnostic TDM over
    Packet) Satop E1 - 32\n          b) Satop T1 emulation:\n             i)   MUST
    be set to 24 in the basic emulation mode\n             ii)  MUST be set to 25
    for the 'Octet-aligned T1'\n                  emulation mode\n          c) Satop
    E3 - 535\n          d) Satop T3 - 699\n          For all kinds of structure-aware
    emulation, this parameter\n          MUST be set to N where N is the number of
    DS0 channels\n          in the corresponding attachment circuit.\"\n     REFERENCE\n
    \     \"TDMCP-EXT\"\n     DEFVAL { 32 }\n     ::= { pwTDMEntry 1 }\n   pwTDMIfIndex
    OBJECT-TYPE\n     SYNTAX        InterfaceIndexOrZero\n     MAX-ACCESS    read-write\n
    \    STATUS        current\n     DESCRIPTION\n         \"This is a unique index
    within the ifTable.  It represents\n          the interface index of the full
    link or the interface\n          index for the bundle holding the group of\n          time
    slots to be transmitted via this PW connection.\n          A value of zero indicates
    an interface index that has yet\n          to be determined.\n          Once set,
    if the TDM ifIndex is (for some reason) later\n          removed, the agent SHOULD
    delete the associated PW rows\n          (e.g., this pwTDMTable entry).  If the
    agent does not\n          delete the rows, the agent MUST set this object to\n
    \         zero.\"\n     ::= { pwTDMEntry 2 }\n   pwGenTDMCfgIndex OBJECT-TYPE\n
    \    SYNTAX        PwCfgIndexOrzero\n     MAX-ACCESS    read-write\n     STATUS
    \       current\n     DESCRIPTION\n         \"Index to the generic parameters
    in the TDM configuration\n          table that appears in this MIB module.  It
    is likely that\n          multiple TDM PWs of the same characteristic will share\n
    \         a single TDM Cfg entry.\"\n     ::= { pwTDMEntry 3 }\n   pwRelTDMCfgIndex
    OBJECT-TYPE\n     SYNTAX        PwCfgIndexOrzero\n     MAX-ACCESS    read-write\n
    \    STATUS        current\n     DESCRIPTION\n         \"Index to the relevant
    TDM configuration table entry\n          that appears in one of the related MIB
    modules\n          such as TDMoIP or CESoPSN.  It is likely that\n          multiple
    TDM PWs of the same characteristic will share\n          a single configuration
    entry of the relevant type.\n          The value 0 implies no entry in other related
    MIBs.\"\n     ::= { pwTDMEntry 4 }\n   pwTDMConfigError OBJECT-TYPE\n     SYNTAX
    BITS {\n           notApplicable                 ( 0),\n           tdmTypeIncompatible
    \          ( 1),\n           peerRtpIncompatible           ( 2),\n           peerPayloadSizeIncompatible
    \  ( 3)\n           }\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"Any of the bits are set if the local configuration
    is\n          not compatible with the peer configuration as available\n          from
    the various parameters options.  Setting is done based\n          on signaling,
    or else value (0) will be set.\n          -tdmTypeIncompatible bit is set if the
    local configuration\n          is not carrying the same TDM type as the peer configuration.\n
    \         -peerRtpIncompatible bit is set if the local configuration\n          is
    configured to send RTP packets for this PW, and the\n          remote is not capable
    of accepting RTP packets.\n          -peerPayloadSizeIncompatible bit is set if
    the local\n          configuration is not carrying the same Payload Size as the\n
    \         peer configuration.\"\n     ::= { pwTDMEntry 5}\n   pwTDMTimeElapsed
    OBJECT-TYPE\n      SYNTAX  Integer32 (1..900)\n      MAX-ACCESS  read-only\n      STATUS
    \ current\n      DESCRIPTION\n          \"The number of seconds, including partial
    seconds,\n           that have elapsed since the beginning of the current\n           measurement
    period.  If, for some reason, such as an\n           adjustment in the system's
    time-of-day clock, the\n           current interval exceeds the maximum value,
    the\n           agent will return the maximum value.\"\n      ::= { pwTDMEntry
    6}\n   pwTDMValidIntervals OBJECT-TYPE\n      SYNTAX  Integer32 (0..96)\n      MAX-ACCESS
    \ read-only\n      STATUS  current\n      DESCRIPTION\n          \"The number
    of previous 15-minute intervals for which data\n           was collected.\n           An
    agent with TDM capability must be capable of supporting\n           at least n
    intervals.  The minimum value of n is 4.  The\n           default of n is 32 and
    the maximum value of n is 96.\n           The value will be n unless the measurement
    was (re-)\n           started within the last (n*15) minutes, in which case,\n
    \          the value will be the number of complete 15-minute\n           intervals
    for which the agent has at least some data.\n           In certain cases (e.g.,
    in the case where the agent is\n           a proxy), it is possible that some
    intervals are unavailable.\n           In this case, this interval is the maximum
    interval number\n           for which data is available.\"\n      ::= { pwTDMEntry
    7}\n   pwTDMValidDayIntervals OBJECT-TYPE\n      SYNTAX  Integer32 (0..30)\n      MAX-ACCESS
    \ read-only\n      STATUS  current\n      DESCRIPTION\n          \"The number
    of previous days for which data\n           was collected.\n           An agent
    with TDM capability must be capable of supporting\n           at least n intervals.
    \ The minimum value of n is 1.  The\n           default of n is 1 and the maximum
    value of n is 30.\"\n      ::= { pwTDMEntry 8}\n   pwTDMLastEsTimeStamp OBJECT-TYPE\n
    \    SYNTAX      TimeStamp\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n         \"The value of sysUpTime at the most recent occasion
    at\n          which the TDM PW entered the ES or SES state.\"\n     ::= { pwTDMEntry
    11}\n   -- End of TDM PW table\n   -- PW Generic TDM PW Configuration Table\n
    \  pwTDMCfgIndexNext OBJECT-TYPE\n     SYNTAX            Unsigned32\n     MAX-ACCESS
    \       read-only\n     STATUS            current\n     DESCRIPTION\n         \"This
    object contains the value to be used for\n          pwTDMCfgIndex when creating
    entries in the\n          pwTDMCfgTable.  The value 0 indicates that no\n          unassigned
    entries are available.  To obtain the\n          value of pwTDMCfgIndexNext for
    a new entry in the\n          pwTDMCfgTable, the manager issues a management\n
    \         protocol retrieval operation.  The agent will\n          determine through
    its local policy when this\n          index value will be made available for reuse.\"\n
    \    ::= { pwTDMObjects 2 }\n   pwTDMCfgTable   OBJECT-TYPE\n     SYNTAX                  SEQUENCE
    OF PwTDMCfgEntry\n     MAX-ACCESS              not-accessible\n     STATUS                  current\n
    \    DESCRIPTION\n         \"This table contains a set of parameters that may
    be\n          referenced by one or more TDM PWs in pwTDMTable.\"\n     ::= { pwTDMObjects
    3 }\n   pwTDMCfgEntry  OBJECT-TYPE\n       SYNTAX            PwTDMCfgEntry\n       MAX-ACCESS
    \       not-accessible\n       STATUS            current\n       DESCRIPTION\n
    \          \"These parameters define the characteristics of a\n            TDM
    PW.  They are grouped here to ease NMS burden.\n            Once an entry is created
    here it may be re-used\n            by many PWs.\n            Unless otherwise
    specified, all objects in this table\n            MUST NOT be changed after row
    activation (see [PWMIB]).\"\n     INDEX  { pwTDMCfgIndex }\n        ::= { pwTDMCfgTable
    1 }\n   PwTDMCfgEntry ::= SEQUENCE {\n        pwTDMCfgIndex                    PwTDMCfgIndex,\n
    \       pwTDMCfgRowStatus                RowStatus,\n        pwTDMCfgPayloadSize
    \             Unsigned32,\n        pwTDMCfgPktReorder               TruthValue,\n
    \       pwTDMCfgRtpHdrUsed               TruthValue,\n        pwTDMCfgJtrBfrDepth
    \             Unsigned32,\n        pwTDMCfgPayloadSuppression       INTEGER,\n
    \       pwTDMCfgConsecPktsInSynch        Unsigned32,\n        pwTDMCfgConsecMissPktsOutSynch
    \  Unsigned32,\n        pwTDMCfgSetUp2SynchTimeOut       Unsigned32,\n        pwTDMCfgPktReplacePolicy
    \        INTEGER,\n        pwTDMCfgAvePktLossTimeWindow     Integer32,\n        pwTDMCfgExcessivePktLossThreshold
    \  Unsigned32,\n        pwTDMCfgAlarmThreshold           Unsigned32,\n        pwTDMCfgClearAlarmThreshold
    \     Unsigned32,\n        pwTDMCfgMissingPktsToSes         Unsigned32,\n        pwTDMCfgTimestampMode
    \           INTEGER,\n        pwTDMCfgStorageType              StorageType,\n
    \       pwTDMCfgPktFiller                Unsigned32,\n        pwTDMCfgName                     SnmpAdminString\n
    \       }\n   pwTDMCfgIndex   OBJECT-TYPE\n     SYNTAX        PwTDMCfgIndex\n
    \    MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n
    \        \"Index to an entry in this table.  When an NMS creates\n          a
    new entry/row in this table, it best makes use of\n          the value of the
    pwTDMCfgIndexNext object in order to\n          find a free or available index
    value.\"\n     ::= { pwTDMCfgEntry 1 }\n   pwTDMCfgRowStatus    OBJECT-TYPE\n
    \    SYNTAX               RowStatus\n     MAX-ACCESS           read-create\n     STATUS
    \              current\n     DESCRIPTION\n         \"Object used for creating,
    modifying, and deleting\n          a row from this table.  The following objects
    cannot be\n          modified if the entry is in use and the status is active:\n
    \         pwTDMCfgPayloadSize, pwTDMCfgRtpHdrUsed,\n          pwTDMCfgJtrBfrDepth,
    and pwTDMCfgPayloadSuppression.\n          The row cannot be deleted if the entry
    is in use.\"\n     ::= { pwTDMCfgEntry 2 }\n   pwTDMCfgPayloadSize OBJECT-TYPE\n
    \    SYNTAX        Unsigned32\n     MAX-ACCESS    read-create\n     STATUS        current\n
    \    DESCRIPTION\n         \"The value of this object indicates the PayLoad Size
    (in bytes)\n          to be defined during the PW setUp.  Upon TX, implementation\n
    \         must be capable of carrying that amount of bytes.\n          Upon RX,
    when the Low Entry Networking (LEN) field is set\n          to 0, the payload
    of packet MUST assume this size, and if\n          the actual packet size is inconsistent
    with this length,\n          the packet MUST be considered to be malformed.\"\n
    \    ::= { pwTDMCfgEntry 4 }\n   pwTDMCfgPktReorder OBJECT-TYPE\n     SYNTAX        TruthValue\n
    \    MAX-ACCESS    read-create\n     STATUS        current\n     DESCRIPTION\n
    \        \"If set to True: as CE-bound packets are queued in the\n          jitter
    buffer, out of order packets are re-ordered.  The\n          maximum sequence
    number differential (i.e., the range in\n          which re-sequencing can occur)
    is dependant on the depth\n          of the jitter buffer.  See pwTDMCfgJtrBfrDepth.\n
    \         NOTE: Some implementations may not support this feature.\n          The
    agent should then reject a SET request for true.\"\n     ::= { pwTDMCfgEntry 5
    }\n   pwTDMCfgRtpHdrUsed OBJECT-TYPE\n     SYNTAX        TruthValue\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"If set
    to False: an RTP header is not pre-pended to the\n          TDM packet.\"\n     REFERENCE\n
    \     \"SATOP\"\n     DEFVAL { false }\n     ::= { pwTDMCfgEntry 6 }\n   pwTDMCfgJtrBfrDepth
    OBJECT-TYPE\n     SYNTAX        Unsigned32\n     UNITS         \"microsecond\"\n
    \    MAX-ACCESS    read-create\n     STATUS        current\n     DESCRIPTION\n
    \        \"The size of this buffer SHOULD be locally\n          configured to
    allow accommodation to the PSN-specific packet\n          delay variation.\n          If
    configured to a value not supported by the\n          implementation, the agent
    MUST return an error code\n          'jtrBfrDepth' in 'pwTDMConfigError'.\n          NOTE:
    jitter buffers are a limited resource to\n          be managed.  The actual size
    should be at least twice as big\n          as the value of pwTDMCfgJtrBfrDepth.\"\n
    \    DEFVAL { 3000 }\n     ::= { pwTDMCfgEntry 7 }\n   pwTDMCfgPayloadSuppression
    \ OBJECT-TYPE\n     SYNTAX        INTEGER\n                    {\n                       enable
    \ ( 1),\n                       disable ( 2)\n                    }\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"Selecting
    'enable' means: Payload suppression is allowed.\n          Payload MAY be omitted
    in order to conserve bandwidth.\n          Selecting 'disable' means: No suppression
    under any\n          condition.\n          Object MAY be changed at any time.\"\n
    \   DEFVAL { disable }\n     ::= { pwTDMCfgEntry 8 }\n   pwTDMCfgConsecPktsInSynch
    \         OBJECT-TYPE\n     SYNTAX        Unsigned32 (1..10)\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"The
    number of consecutive packets with sequential\n          sequence numbers that
    are required to exit the\n          LOPS.\n          Object MAY be changed only
    when the related PW is\n          defined as not active.\"\n     REFERENCE\n         \"SATOP\"\n
    \    DEFVAL { 2 }\n     ::= { pwTDMCfgEntry 9 }\n   pwTDMCfgConsecMissPktsOutSynch
    \ OBJECT-TYPE\n     SYNTAX        Unsigned32 (1..15)\n     MAX-ACCESS    read-create\n
    \    STATUS        current\n     DESCRIPTION\n         \"The number of consecutive
    missing packets that are\n          required to enter the LOPS.\n          Object
    MAY be changed only when the related PW is\n          defined as not active.\"\n
    \    REFERENCE\n         \"SATOP\"\n     DEFVAL { 10 }\n     ::= { pwTDMCfgEntry
    10 }\n   pwTDMCfgSetUp2SynchTimeOut OBJECT-TYPE\n     SYNTAX        Unsigned32\n
    \    UNITS         \"millisecond\"\n     MAX-ACCESS    read-create\n     STATUS
    \       current\n     DESCRIPTION\n         \"The amount of time the host should
    wait before declaring the\n          pseudowire in a down state, if the number
    of consecutive\n          TDM packets that have been received after changing the\n
    \         administrative status to up and after finalization of\n          signaling
    (if supported) between the two PEs is smaller\n          than pwTDMCfgConsecPktsInSynch.
    \ Once the PW has\n          OperStatus of 'up', this parameter is no longer valid.
    \ This\n          parameter is defined to ensure that the host does not\n          prematurely
    inform failure of the PW.  In particular, PW\n          'down' notifications should
    not be sent before expiration\n          of this timer.  This parameter is valid
    only after\n          administrative changes of the status of the PW.  If the
    PW\n          fails due to network impairments, a 'down' notification\n          should
    be sent.\n          Object MAY be changed only when the related PW is\n          defined
    as not active.\"\n     DEFVAL {5000}\n     ::= { pwTDMCfgEntry 11 }\n   pwTDMCfgPktReplacePolicy
    OBJECT-TYPE\n     SYNTAX        INTEGER\n                         {\n                          allOnes
    (1),\n                          implementationSpecific(2),\n                          filler
    (3)  --user defined\n                          }\n     MAX-ACCESS    read-create\n
    \    STATUS        current\n     DESCRIPTION\n         \"This parameter determines
    the value to be played when CE bound\n          packets over/underflow the jitter
    buffer, or are missing\n          for any reason.  This byte pattern is sent (played)
    on\n          the TDM line.  Selecting implementationSpecific(2) implies an\n
    \         agent-specific algorithm.  Selecting filler(3) requires\n          the
    setting of pwTDMCfgPktFiller.\n          Object MAY be changed only when the related
    PW is\n          defined as not active.\"\n     DEFVAL { allOnes } -- Play AIS\n
    \    ::= { pwTDMCfgEntry 12 }\n   pwTDMCfgAvePktLossTimeWindow OBJECT-TYPE\n     SYNTAX
    \       Integer32\n     UNITS         \"millisecond\"\n     MAX-ACCESS    read-create\n
    \    STATUS        current\n     DESCRIPTION\n         \"The length of time over
    which the average packet\n          loss rate should be computed to detect excessive
    packet\n          loss rate.\n          Object MAY be changed only when the related
    PW is\n          defined as not active.\"\n     ::= { pwTDMCfgEntry 13}\n   pwTDMCfgExcessivePktLossThreshold
    OBJECT-TYPE\n     SYNTAX        Unsigned32\n     UNITS         \"Percent\"\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"Excessive
    packet loss rate is detected by computing the\n          average packet-loss rate
    over a pwTDMCfgAvePktLossTimeWindow\n          amount of time and comparing it
    with this threshold value.\n          The rate is expressed in percentage.\n          Object
    MAY be changed only when the related PW is\n          defined as not active.\"\n
    \    ::= { pwTDMCfgEntry 14 }\n   pwTDMCfgAlarmThreshold OBJECT-TYPE\n     SYNTAX
    \       Unsigned32\n     UNITS         \"milisec\"\n     MAX-ACCESS    read-create\n
    \    STATUS        current\n     DESCRIPTION\n         \"Alarms are only reported
    when the defect state persists\n          for the length of time specified by
    this object.\n          Object MAY be changed only when the related PW is\n          defined
    as not active.\"\n     DEFVAL { 2500 }\n     ::= { pwTDMCfgEntry 15 }\n   pwTDMCfgClearAlarmThreshold
    OBJECT-TYPE\n     SYNTAX        Unsigned32\n     UNITS         \"milisec\"\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"Alarm
    MUST be cleared after the corresponding defect is\n          undetected for the
    amount of time specified by this object.\n          Object MAY be changed only
    when the related PW is\n          defined as not active.\"\n     DEFVAL { 10000
    }\n     ::= { pwTDMCfgEntry 16 }\n   pwTDMCfgMissingPktsToSes OBJECT-TYPE\n     SYNTAX
    \       Unsigned32\n     UNITS         \"Percent\"\n     MAX-ACCESS    read-create\n
    \    STATUS        current\n     DESCRIPTION\n         \"Percent of missing packets
    detected (consecutive or not)\n          within a 1-second window to cause a Severely
    Error\n          Second (SES) to be counted.\n          Object MAY be changed
    only when the related PW is\n          defined as not active.\"\n     DEFVAL {
    30 }\n     ::= { pwTDMCfgEntry 17 }\n   pwTDMCfgTimestampMode  OBJECT-TYPE\n     SYNTAX
    \       INTEGER\n                    {\n                     notApplicable (1),\n
    \                    absolute      (2),\n                     differential  (3)\n
    \                   }\n     MAX-ACCESS    read-create\n     STATUS        current\n
    \    DESCRIPTION\n         \"Timestamp generation MAY be used in one of the following\n
    \         modes:\n          1. Absolute mode: The PSN-bound IWF sets timestamps\n
    \          using the clock recovered from the incoming TDM attachment\n           circuit.
    \ As a consequence, the timestamps are closely\n           correlated with the
    sequence numbers.  All TDM\n           implementations that support usage of the
    RTP header MUST\n           support this mode.\n          2. Differential mode:
    Both IWFs have access to a common high-\n           quality timing source, and
    this source is used for timestamp\n           generation.  Support of this mode
    is OPTIONAL.\n           Object MAY be changed only when the related PW is\n           defined
    as not active.\"\n     ::= { pwTDMCfgEntry 18 }\n   pwTDMCfgStorageType  OBJECT-TYPE\n
    \    SYNTAX            StorageType\n     MAX-ACCESS        read-create\n     STATUS
    \           current\n     DESCRIPTION\n         \"This variable indicates the
    storage type for this\n          row.  Conceptual rows having the value permanent(4)
    must\n          allow write-access to all columnar objects.\"\n     ::= { pwTDMCfgEntry
    19 }\n   pwTDMCfgPktFiller OBJECT-TYPE\n      SYNTAX        Unsigned32 (0..255)\n
    \     MAX-ACCESS    read-create\n      STATUS        current\n      DESCRIPTION\n
    \         \"Filler byte pattern played out on the TDM\n          interface if
    pwTDMCfgPktReplacePolicy\n          was set to filler(3).\n          Object MAY
    be changed only when the related PW is\n          defined as not active.\"\n      DEFVAL\n
    \         { 255 } -- Play all ones, equal to AIS indications.\n      ::= { pwTDMCfgEntry
    20 }\n   pwTDMCfgName OBJECT-TYPE\n     SYNTAX        SnmpAdminString\n     MAX-ACCESS
    \   read-create\n     STATUS        current\n     DESCRIPTION\n         \"A descriptive
    string, preferably a unique name, to an entry\n         in this table.\n         Object
    MAY be changed at any time.\"\n     ::= { pwTDMCfgEntry 21 }\n   -- End of Table\n
    \  -- The following counters work together to integrate\n   -- errors and the
    lack of errors on the TDM PW.  An error is\n   -- caused by a missing packet.
    \ A missing packet can be a result\n   -- of: packet loss in the network, (uncorrectable)
    packet out\n   -- of sequence, packet length error, jitter buffer overflow,\n
    \  -- and jitter buffer underflow.  The result is declaring whether\n   -- or
    not the TDM PW is in Loss of Packet State (LOPS).\n   -- TDM PW Performance Current
    Table\n   pwTDMPerfCurrentTable OBJECT-TYPE\n     SYNTAX        SEQUENCE OF PwTDMPerfCurrentEntry\n
    \    MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n
    \        \"The current 15-minute interval counts are in\n          this table.\n
    \         This table provides per TDM PW performance information.\"\n     ::=
    { pwTDMObjects 5 }\n   pwTDMPerfCurrentEntry OBJECT-TYPE\n     SYNTAX        PwTDMPerfCurrentEntry\n
    \    MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n
    \        \"An entry in this table is created by the agent for every\n          pwTDMTable
    entry.  After 15 minutes, the contents of this\n          table entry are copied
    to a new entry in the\n          pwTDMPerfInterval table, and the counts in this
    entry\n          are reset to zero.\"\n     INDEX  { pwIndex }\n     ::= { pwTDMPerfCurrentTable
    1 }\n   PwTDMPerfCurrentEntry ::= SEQUENCE {\n        pwTDMPerfCurrentMissingPkts
    \        PerfCurrentCount,\n        pwTDMPerfCurrentPktsReOrder         PerfCurrentCount,\n
    \       pwTDMPerfCurrentJtrBfrUnderruns     PerfCurrentCount,\n        pwTDMPerfCurrentMisOrderDropped
    \    PerfCurrentCount,\n        pwTDMPerfCurrentMalformedPkt        PerfCurrentCount,\n
    \       pwTDMPerfCurrentESs                 PerfCurrentCount,\n        pwTDMPerfCurrentSESs
    \               PerfCurrentCount,\n        pwTDMPerfCurrentUASs                PerfCurrentCount,\n
    \       pwTDMPerfCurrentFC                  PerfCurrentCount\n     }\n   pwTDMPerfCurrentMissingPkts
    OBJECT-TYPE\n     SYNTAX        PerfCurrentCount\n     MAX-ACCESS    read-only\n
    \    STATUS       current\n     DESCRIPTION\n         \"Number of missing packets
    (as detected via control word\n          sequence number gaps).\"\n     ::= {
    pwTDMPerfCurrentEntry 1 }\n   pwTDMPerfCurrentPktsReOrder OBJECT-TYPE\n     SYNTAX
    \       PerfCurrentCount\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"Number of packets detected out of sequence (via control\n
    \         word sequence number) but successfully re-ordered.\n          Note:
    some implementations may not support this feature.\"\n     ::= { pwTDMPerfCurrentEntry
    2 }\n   pwTDMPerfCurrentJtrBfrUnderruns OBJECT-TYPE\n     SYNTAX        PerfCurrentCount\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"Number
    of times a packet needed to be played\n          out and the jitter buffer was
    empty.\"\n     ::= { pwTDMPerfCurrentEntry 3 }\n   pwTDMPerfCurrentMisOrderDropped
    OBJECT-TYPE\n     SYNTAX        PerfCurrentCount\n     MAX-ACCESS    read-only\n
    \    STATUS        current\n     DESCRIPTION\n         \"Number of packets detected
    out of order (via control word\n          sequence numbers) that could not be
    re-ordered or could\n          not fit in the jitter buffer.\"\n      ::= { pwTDMPerfCurrentEntry
    4 }\n   pwTDMPerfCurrentMalformedPkt OBJECT-TYPE\n     SYNTAX        PerfCurrentCount\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"Number
    of packets detected with unexpected size or\n          bad headers' stack.\"\n
    \    ::= { pwTDMPerfCurrentEntry 5 }\n   pwTDMPerfCurrentESs OBJECT-TYPE\n      SYNTAX
    \      PerfCurrentCount\n      MAX-ACCESS   read-only\n      STATUS       current\n
    \     DESCRIPTION\n          \"The counter associated with the number of Error\n
    \          Seconds encountered.  Any malformed packet, sequence error,\n           LOPS,
    and the like are considered as Error Seconds.\"\n      ::= { pwTDMPerfCurrentEntry
    6 }\n   pwTDMPerfCurrentSESs OBJECT-TYPE\n      SYNTAX        PerfCurrentCount\n
    \     MAX-ACCESS    read-only\n      STATUS        current\n      DESCRIPTION\n
    \         \"The counter associated with the number of\n           Severely Error
    Seconds encountered.\"\n      ::= { pwTDMPerfCurrentEntry 7 }\n   pwTDMPerfCurrentUASs
    OBJECT-TYPE\n      SYNTAX        PerfCurrentCount\n      MAX-ACCESS    read-only\n
    \     STATUS        current\n      DESCRIPTION\n          \"The counter associated
    with the number of\n           Unavailable Seconds encountered.  Any consecutive\n
    \          ten seconds of SES are counted as one Unavailable\n           Seconds
    (UAS).\"\n      ::= { pwTDMPerfCurrentEntry 8 }\n   pwTDMPerfCurrentFC OBJECT-TYPE\n
    \     SYNTAX        PerfCurrentCount\n      MAX-ACCESS    read-only\n      STATUS
    \       current\n      DESCRIPTION\n          \"TDM Failure Counts (FC-TDM).  The
    number of TDM failure\n           events.  A failure event begins when the LOPS
    failure\n           is declared, and it ends when the failure is cleared.  A\n
    \          failure event that begins in one period and ends in\n           another
    period is counted only in the period in which\n           it begins.\"\n      ::=
    { pwTDMPerfCurrentEntry 9 }\n   -- End TDM PW Performance Current Interval Table\n
    \  -- TDM PW Performance Interval Table\n   pwTDMPerfIntervalTable OBJECT-TYPE\n
    \    SYNTAX        SEQUENCE OF PwTDMPerfIntervalEntry\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n         \"This table provides performance
    information per TDM PW\n          similar to the pwTDMPerfCurrentTable above.
    \ However,\n          these counts represent historical 15-minute intervals.\n
    \         Typically, this table will have a maximum of 96 entries\n          for
    a 24 hour period, but is not limited to this.\"\n     ::= { pwTDMObjects 6 }\n
    \  pwTDMPerfIntervalEntry OBJECT-TYPE\n     SYNTAX        PwTDMPerfIntervalEntry\n
    \    MAX-ACCESS    not-accessible\n     STATUS        current\n     DESCRIPTION\n
    \        \"An entry in this table is created by the agent for\n          every
    pwTDMPerfCurrentEntry that is 15 minutes old.\n          The contents of the Current
    entry are copied to the new\n          entry here.  The Current entry then resets
    its counts\n          to zero for the next current 15-minute interval.\"\n     INDEX
    \ { pwIndex, pwTDMPerfIntervalNumber }\n     ::= { pwTDMPerfIntervalTable 1 }\n
    \  PwTDMPerfIntervalEntry ::= SEQUENCE {\n        pwTDMPerfIntervalNumber           Unsigned32,\n
    \       pwTDMPerfIntervalValidData        TruthValue,\n        pwTDMPerfIntervalDuration
    \        Unsigned32,\n        pwTDMPerfIntervalMissingPkts      PerfIntervalCount,\n
    \       pwTDMPerfIntervalPktsReOrder      PerfIntervalCount,\n        pwTDMPerfIntervalJtrBfrUnderruns
    \ PerfIntervalCount,\n        pwTDMPerfIntervalMisOrderDropped  PerfIntervalCount,\n
    \       pwTDMPerfIntervalMalformedPkt     PerfIntervalCount,\n        pwTDMPerfIntervalESs
    \             PerfIntervalCount,\n        pwTDMPerfIntervalSESs             PerfIntervalCount,\n
    \       pwTDMPerfIntervalUASs             PerfIntervalCount,\n        pwTDMPerfIntervalFC
    \              PerfIntervalCount\n        }\n   pwTDMPerfIntervalNumber OBJECT-TYPE\n
    \    SYNTAX        Unsigned32 (1..96)\n     MAX-ACCESS    not-accessible\n     STATUS
    \       current\n     DESCRIPTION\n         \"A number (normally between 1 and
    96 to cover a 24 hour\n          period) that identifies the interval for which
    the set\n          of statistics is available.  The interval identified by 1\n
    \         is the most recently completed 15-minute interval, and\n          the
    interval identified by N is the interval immediately\n          preceding the
    one identified by N-1.  The minimum range of\n          N is 1 through 4.  The
    default range is 1 through 32.  The\n          maximum value of N is 1 through
    96.\"\n     ::= { pwTDMPerfIntervalEntry 1 }\n   pwTDMPerfIntervalValidData OBJECT-TYPE\n
    \    SYNTAX        TruthValue\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"This variable indicates if the data for this interval\n
    \         is valid.\"\n     ::= { pwTDMPerfIntervalEntry 2 }\n   pwTDMPerfIntervalDuration
    OBJECT-TYPE\n      SYNTAX      Unsigned32\n      UNITS       \"seconds\"\n      MAX-ACCESS
    \ read-only\n      STATUS      current\n      DESCRIPTION\n        \"The duration
    of a particular interval in seconds.\n         Adjustments in the system's time-of-day
    clock may\n         cause the interval to be greater or less than the\n         normal
    value.  Therefore, this actual interval value\n         is provided.\"\n      ::=
    { pwTDMPerfIntervalEntry 3 }\n   pwTDMPerfIntervalMissingPkts OBJECT-TYPE\n     SYNTAX
    \       PerfIntervalCount\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"Number of missing packets (as detected via control\n
    \         word sequence number gaps).\"\n     ::= { pwTDMPerfIntervalEntry 4 }\n
    \  pwTDMPerfIntervalPktsReOrder OBJECT-TYPE\n     SYNTAX        PerfIntervalCount\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"Number
    of packets detected out of sequence (via control\n          word sequence number)
    but successfully re-ordered.\n          Note: some implementations may not support
    this\n          feature.\"\n     ::= { pwTDMPerfIntervalEntry 5 }\n   pwTDMPerfIntervalJtrBfrUnderruns
    OBJECT-TYPE\n     SYNTAX        PerfIntervalCount\n     MAX-ACCESS    read-only\n
    \    STATUS        current\n     DESCRIPTION\n         \"Number of times a packet
    needed to be played\n          out and the jitter buffer was empty.\"\n     ::=
    { pwTDMPerfIntervalEntry 6 }\n   pwTDMPerfIntervalMisOrderDropped OBJECT-TYPE\n
    \    SYNTAX        PerfIntervalCount\n     MAX-ACCESS    read-only\n     STATUS
    \       current\n     DESCRIPTION\n         \"Number of packets detected out of
    order (via control word\n          sequence numbers) that could not be re-ordered
    or could\n          not fit in the jitter buffer.\"\n     ::= { pwTDMPerfIntervalEntry
    7 }\n   pwTDMPerfIntervalMalformedPkt OBJECT-TYPE\n     SYNTAX        PerfIntervalCount\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"Number
    of packets detected with unexpected size, or\n          bad headers' stack\"\n
    \    ::= { pwTDMPerfIntervalEntry 8 }\n   pwTDMPerfIntervalESs OBJECT-TYPE\n     SYNTAX
    \      PerfIntervalCount\n     MAX-ACCESS   read-only\n     STATUS       current\n
    \    DESCRIPTION\n         \"The counter associated with the number of Error\n
    \         Seconds encountered.\"\n     ::= { pwTDMPerfIntervalEntry 9 }\n   pwTDMPerfIntervalSESs
    OBJECT-TYPE\n     SYNTAX        PerfIntervalCount\n     MAX-ACCESS    read-only\n
    \    STATUS        current\n     DESCRIPTION\n         \"The counter associated
    with the number of\n          Severely Error Seconds encountered.\"\n     ::=
    { pwTDMPerfIntervalEntry 10 }\n   pwTDMPerfIntervalUASs OBJECT-TYPE\n     SYNTAX
    \       PerfIntervalCount\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"The counter associated with the number of\n          Unavailable
    Seconds encountered.\"\n     ::= { pwTDMPerfIntervalEntry 11 }\n   pwTDMPerfIntervalFC
    OBJECT-TYPE\n     SYNTAX        PerfIntervalCount\n     MAX-ACCESS    read-only\n
    \    STATUS        current\n     DESCRIPTION\n         \"TDM Failure Counts (FC-TDM).
    \ The number of TDM failure\n          events.  A failure event begins when the
    LOPS failure\n          is declared, and it ends when the failure is cleared.
    \ A\n          failure event that begins in one period and ends in\n          another
    period is counted only in the period in which\n          it begins.\"\n     ::=
    { pwTDMPerfIntervalEntry 12 }\n   -- End TDM PW Performance Interval Table\n   --
    TDM PW 1day Performance Table\n   pwTDMPerf1DayIntervalTable OBJECT-TYPE\n     SYNTAX
    \       SEQUENCE OF PwTDMPerf1DayIntervalEntry\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n         \"This table provides performance
    information per TDM PW\n          similar to the pwTDMPerfIntervalTable above.
    \ However,\n          these counters represent historical one-day intervals up
    to\n          one full month.  The table consists of real-time data, as\n          such
    it is not persistence across re-boot.\"\n     ::= { pwTDMObjects 7 }\n   pwTDMPerf1DayIntervalEntry
    OBJECT-TYPE\n     SYNTAX        PwTDMPerf1DayIntervalEntry\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n         \"An entry is created in
    this table by the agent\n          for every entry in the pwTDMTable table.\"\n
    \    INDEX  { pwIndex,pwTDMPerf1DayIntervalNumber }\n        ::= { pwTDMPerf1DayIntervalTable
    1 }\n   PwTDMPerf1DayIntervalEntry ::= SEQUENCE {\n        pwTDMPerf1DayIntervalNumber
    \               Unsigned32,\n        pwTDMPerf1DayIntervalValidData             TruthValue,\n
    \       pwTDMPerf1DayIntervalDuration              Unsigned32,\n        pwTDMPerf1DayIntervalMissingPkts
    \          Counter32,\n        pwTDMPerf1DayIntervalPktsReOrder           Counter32,\n
    \       pwTDMPerf1DayIntervalJtrBfrUnderruns       Counter32,\n        pwTDMPerf1DayIntervalMisOrderDropped
    \      Counter32,\n        pwTDMPerf1DayIntervalMalformedPkt          Counter32,\n
    \       pwTDMPerf1DayIntervalESs                   Counter32,\n        pwTDMPerf1DayIntervalSESs
    \                 Counter32,\n        pwTDMPerf1DayIntervalUASs                  Counter32,\n
    \       pwTDMPerf1DayIntervalFC                    Counter32\n        }\n   pwTDMPerf1DayIntervalNumber
    OBJECT-TYPE\n     SYNTAX        Unsigned32 (1..30)\n     MAX-ACCESS    not-accessible\n
    \    STATUS        current\n     DESCRIPTION\n         \"The number of intervals
    where 1 indicates the current day\n          measured period and 2 and above indicate
    previous days,\n          respectively.\"\n     ::= { pwTDMPerf1DayIntervalEntry
    1 }\n   pwTDMPerf1DayIntervalValidData OBJECT-TYPE\n     SYNTAX        TruthValue\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"This
    variable indicates if the data for this interval\n          is valid.\"\n     ::=
    { pwTDMPerf1DayIntervalEntry 2 }\n   pwTDMPerf1DayIntervalDuration OBJECT-TYPE\n
    \    SYNTAX      Unsigned32\n     UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"The duration of a particular
    interval in seconds.\n        Adjustments in the system's time-of-day clock may\n
    \       cause the interval to be greater or less than the\n        normal value.
    \ Therefore, this actual interval value\n        is provided.\"\n     ::= { pwTDMPerf1DayIntervalEntry
    3 }\n   pwTDMPerf1DayIntervalMissingPkts OBJECT-TYPE\n     SYNTAX        Counter32\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n       \"Number
    of missing packets (as detected via control word\n        sequence number gaps).\"\n
    \    ::= { pwTDMPerf1DayIntervalEntry 4 }\n   pwTDMPerf1DayIntervalPktsReOrder
    OBJECT-TYPE\n     SYNTAX        Counter32\n     MAX-ACCESS    read-only\n     STATUS
    \       current\n     DESCRIPTION\n         \"Number of packets detected out of
    sequence (via control\n          word sequence number) but successfully re-ordered.\n
    \         Note: some implementations may not support this\n          feature.\"\n
    \    ::= { pwTDMPerf1DayIntervalEntry 5 }\n   pwTDMPerf1DayIntervalJtrBfrUnderruns
    OBJECT-TYPE\n     SYNTAX        Counter32\n     MAX-ACCESS    read-only\n     STATUS
    \       current\n     DESCRIPTION\n         \"Number of times a packet needed
    to be played\n          out and the jitter buffer was empty.\"\n     ::= { pwTDMPerf1DayIntervalEntry
    6 }\n   pwTDMPerf1DayIntervalMisOrderDropped OBJECT-TYPE\n     SYNTAX        Counter32\n
    \    MAX-ACCESS    read-only\n     STATUS        current\n     DESCRIPTION\n         \"Number
    of packets detected out of order (via control word\n          sequence numbers)
    that could not be re-ordered or could\n          not fit in the jitter buffer.\"\n
    \    ::= { pwTDMPerf1DayIntervalEntry 7 }\n   pwTDMPerf1DayIntervalMalformedPkt
    OBJECT-TYPE\n     SYNTAX        Counter32\n     MAX-ACCESS    read-only\n     STATUS
    \       current\n     DESCRIPTION\n         \"Number of packets detected with
    unexpected size or\n          bad headers' stack.\"\n     ::= { pwTDMPerf1DayIntervalEntry
    8 }\n   pwTDMPerf1DayIntervalESs OBJECT-TYPE\n     SYNTAX       Counter32\n     MAX-ACCESS
    \  read-only\n     STATUS       current\n     DESCRIPTION\n         \"The counter
    associated with the number of Error\n          Seconds encountered.\"\n     ::=
    { pwTDMPerf1DayIntervalEntry 9 }\n   pwTDMPerf1DayIntervalSESs OBJECT-TYPE\n     SYNTAX
    \       Counter32\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"The counter associated with the number of Severely\n
    \         Error Seconds.\"\n     ::= { pwTDMPerf1DayIntervalEntry 10 }\n   pwTDMPerf1DayIntervalUASs
    OBJECT-TYPE\n     SYNTAX        Counter32\n     MAX-ACCESS    read-only\n     STATUS
    \       current\n     DESCRIPTION\n         \"The counter associated with the
    number of\n          UnAvailable Seconds.\n          NOTE: When first entering
    the UAS state, the number\n          of SES to UAS is added to this object, then
    as each\n          additional UAS occurs, this object increments by one.\"\n     ::=
    { pwTDMPerf1DayIntervalEntry 11 }\n   pwTDMPerf1DayIntervalFC OBJECT-TYPE\n     SYNTAX
    \       Counter32\n     MAX-ACCESS    read-only\n     STATUS        current\n
    \    DESCRIPTION\n         \"TDM Failure Counts (FC-TDM).  The number of TDM failure\n
    \         events.  A failure event begins when the LOPS failure\n          is
    declared, and it ends when the failure is cleared.\"\n     ::= { pwTDMPerf1DayIntervalEntry
    12 }\n   -- End of PW TDM Performance table\n   -- Conformance Information\n   pwTDMCompliances
    OBJECT IDENTIFIER ::= { pwTDMConformance 1 }\n   pwTDMGroups      OBJECT IDENTIFIER
    ::= { pwTDMConformance 2 }\n   pwTDMModuleCompliance MODULE-COMPLIANCE\n      STATUS
    \ current\n      DESCRIPTION\n          \"The compliance statement for agent that
    support TDM PW\n           over PSN operation.\"\n      MODULE  -- this module\n
    \         MANDATORY-GROUPS { pwTDMGroup,\n                             pwTDMPerfCurrentGroup,\n
    \                            pwTDMPerfIntervalGroup,\n                             pwTDMPerf1DayIntervalGroup\n
    \                          }\n                     OBJECT pwGenTDMCfgIndex\n                     MIN-ACCESS
    read-only\n                     DESCRIPTION\n                         \"The ability
    to set an index pointer\n                         is not required.\"\n                     OBJECT
    pwRelTDMCfgIndex\n                     MIN-ACCESS read-only\n                     DESCRIPTION\n
    \                        \"The ability to set an index pointer\n                         is
    not required.\"\n                     OBJECT pwTDMCfgPktReorder\n                     MIN-ACCESS
    read-only\n                     DESCRIPTION\n                         \"The ability
    to set the packet reordering\n                         is not required.  If the
    feature is not\n                         supported, the value set by the agent
    MUST\n                         be FALSE.\"\n                     OBJECT pwTDMCfgRtpHdrUsed\n
    \                    MIN-ACCESS read-only\n                     DESCRIPTION\n
    \                        \"The ability to set whether or not to use the\n                          RTP
    header is not required.\"\n                     OBJECT pwTDMCfgPayloadSuppression\n
    \                    MIN-ACCESS read-only\n                     DESCRIPTION\n
    \                        \"The ability to set this object is not\n                          required.\"\n
    \                    OBJECT pwTDMCfgPktReplacePolicy\n                     MIN-ACCESS
    read-only\n                     DESCRIPTION\n                         \"The ability
    to set the replace policy\n                         is not required.\"\n                     OBJECT
    pwTDMCfgStorageType\n                     MIN-ACCESS read-only\n                     DESCRIPTION\n
    \                        \"The ability to set the storage type is\n                         not
    required.\"\n                     OBJECT pwTDMCfgPktFiller\n                     MIN-ACCESS
    read-only\n                     DESCRIPTION\n                         \"The ability
    to set the filler pattern\n                         is not required.\"\n                     OBJECT
    pwTDMCfgName\n                     MIN-ACCESS read-only\n                     DESCRIPTION\n
    \                        \"The ability to set an alias\n                         is
    not required.\"\n      ::= { pwTDMCompliances 1 }\n   -- Units of conformance\n
    \  pwTDMGroup OBJECT-GROUP\n     OBJECTS {\n              pwTDMRate,\n              pwTDMIfIndex,\n
    \             pwGenTDMCfgIndex,\n              pwRelTDMCfgIndex,\n              pwTDMConfigError,\n
    \             pwTDMTimeElapsed,\n              pwTDMValidIntervals,\n              pwTDMValidDayIntervals,\n
    \             pwTDMLastEsTimeStamp,\n              pwTDMCfgIndexNext,\n              pwTDMCfgRowStatus,\n
    \             pwTDMCfgPayloadSize,\n              pwTDMCfgPktReorder,\n              pwTDMCfgRtpHdrUsed,\n
    \             pwTDMCfgJtrBfrDepth,\n              pwTDMCfgPayloadSuppression,\n
    \             pwTDMCfgConsecPktsInSynch,\n              pwTDMCfgConsecMissPktsOutSynch,\n
    \             pwTDMCfgSetUp2SynchTimeOut,\n              pwTDMCfgPktReplacePolicy,\n
    \             pwTDMCfgAvePktLossTimeWindow ,\n              pwTDMCfgExcessivePktLossThreshold,\n
    \             pwTDMCfgAlarmThreshold ,\n              pwTDMCfgClearAlarmThreshold,\n
    \             pwTDMCfgMissingPktsToSes,\n              pwTDMCfgTimestampMode,\n
    \             pwTDMCfgStorageType,\n              pwTDMCfgPktFiller,\n              pwTDMCfgName\n
    \             }\n     STATUS  current\n     DESCRIPTION\n         \"Collection
    of objects for basic TDM PW config and\n          status.\"\n     ::= { pwTDMGroups
    1 }\n   pwTDMPerfCurrentGroup OBJECT-GROUP\n     OBJECTS {\n              pwTDMPerfCurrentMissingPkts,\n
    \             pwTDMPerfCurrentPktsReOrder,\n              pwTDMPerfCurrentJtrBfrUnderruns,\n
    \             pwTDMPerfCurrentMisOrderDropped,\n              pwTDMPerfCurrentMalformedPkt,\n
    \             pwTDMPerfCurrentESs,\n              pwTDMPerfCurrentSESs,\n              pwTDMPerfCurrentUASs,\n
    \             pwTDMPerfCurrentFC\n              }\n     STATUS  current\n     DESCRIPTION\n
    \        \"Collection of current statistics objects for TDM PWs.\"\n     ::= {
    pwTDMGroups 2 }\n   pwTDMPerfIntervalGroup OBJECT-GROUP\n     OBJECTS {\n              pwTDMPerfIntervalValidData,\n
    \             pwTDMPerfIntervalDuration,\n              pwTDMPerfIntervalMissingPkts,\n
    \             pwTDMPerfIntervalPktsReOrder,\n              pwTDMPerfIntervalJtrBfrUnderruns,\n
    \             pwTDMPerfIntervalMisOrderDropped,\n              pwTDMPerfIntervalMalformedPkt,\n
    \             pwTDMPerfIntervalESs,\n              pwTDMPerfIntervalSESs,\n              pwTDMPerfIntervalUASs,\n
    \             pwTDMPerfIntervalFC\n     }\n     STATUS  current\n     DESCRIPTION\n
    \           \"Collection of Interval statistics objects for TDM PWs.\"\n     ::=
    { pwTDMGroups 3 }\n   pwTDMPerf1DayIntervalGroup OBJECT-GROUP\n     OBJECTS {\n
    \             pwTDMPerf1DayIntervalValidData,\n              pwTDMPerf1DayIntervalDuration,\n
    \             pwTDMPerf1DayIntervalMissingPkts,\n              pwTDMPerf1DayIntervalPktsReOrder,\n
    \             pwTDMPerf1DayIntervalJtrBfrUnderruns,\n              pwTDMPerf1DayIntervalMisOrderDropped,\n
    \             pwTDMPerf1DayIntervalMalformedPkt,\n              pwTDMPerf1DayIntervalESs,\n
    \             pwTDMPerf1DayIntervalSESs,\n              pwTDMPerf1DayIntervalUASs,\n
    \             pwTDMPerf1DayIntervalFC\n              }\n     STATUS  current\n
    \    DESCRIPTION\n            \"Collection of Daily statistics objects for TDM
    PWs.\"\n     ::= { pwTDMGroups 4 }\n   END\n"
  title: 8.   Object Definition
- contents:
  - "9.  Security Considerations\n   It is clear that this MIB module is potentially
    useful for monitoring\n   of TDM PWs.  This MIB can also be used for configuration
    of certain\n   objects, and anything that can be configured can be incorrectly\n
    \  configured, with potentially disastrous results.\n   There are a number of
    management objects defined in this MIB module\n   with a MAX-ACCESS clause of
    read-write and/or read-create.  Such\n   objects may be considered sensitive or
    vulnerable in some network\n   environments.  The support for SET operations in
    a non-secure\n   environment without proper protection can have a negative effect
    on\n   network operations.  These are the tables and objects and their\n   sensitivity/vulnerability:\n
    \  The pwTDMTable and pwTDMCfgTable contain objects of TDM PW parameters\n   on
    a Provider Edge (PE) device.  Unauthorized access to objects in\n   these tables
    could result in disruption of traffic on the network.\n   The use of stronger
    mechanisms such as SNMPv3 security should be\n   considered where possible.  Specifically,
    SNMPv3 VACM and USM MUST be\n   used with any SNMPV3 agent, which implements this
    MIB module.\n   Administrators should consider whether read access to these objects\n
    \  should be allowed, since read access may be undesirable under certain\n   circumstances.\n
    \  Some of the readable objects in this MIB module (i.e., objects with a\n   MAX-ACCESS
    other than not-accessible) may be considered sensitive or\n   vulnerable in some
    network environments.  It is thus important to\n   control even GET and/or NOTIFY
    access to these objects and possibly\n   to even encrypt the values of these objects
    when sending them over\n   the network via SNMP.  These are the tables and objects
    and their\n   sensitivity/vulnerability:\n   The pwTDMTable, pwTDMPerfCurrentTable,
    pwTDMPerfIntervalTable, and\n   pwTDMPerf1DayIntervalTable collectively show the
    TDM pseudowire\n   connectivity topology and its performance characteristics.\n
    \  If an Administrator does not want to reveal this information, then\n   these
    tables should be considered sensitive/vulnerable.\n   SNMP versions prior to SNMPv3
    did not include adequate security.\n   Even if the network itself is secure (for
    example by using IPsec),\n   even then, there is no control as to who on the secure
    network is\n   allowed to access and GET/SET (read/change/create/delete) the objects\n
    \  in this MIB module.\n   It is RECOMMENDED that implementers consider the security
    features as\n   provided by the SNMPv3 framework (see [RFC3410], section 8),\n
    \  including full support for the SNMPv3 cryptographic mechanisms (for\n   authentication
    and privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n
    \  RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable
    cryptographic security.  It is then a customer/operator\n   responsibility to
    ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   The MIB module in this document uses the following
    IANA-assigned\n   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:\n
    \  Descriptor OBJECT IDENTIFIER value\n   ---------- -----------------------\n
    \  pwTDMMIB   { mib-2 186 }\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [SATOP]      Vainshtein, A., Ed., and YJ. Stein,
      Ed., \"Structure-\n                Agnostic Time Division Multiplexing (TDM)
      over Packet\n                (SAToP)\", RFC 4553, June 2006.\n   [TDMCP-EXT]
      \ Vainshtein, A. and Y(J). Stein, \"Control Protocol\n                Extensions
      for the Setup of Time-Division Multiplexing\n                (TDM) Pseudowires
      in MPLS Networks\", RFC 5287, August\n                2008.\n   [PWMIB]      Nadeau,
      T., Ed., and D. Zelig, Ed., \"Pseudowire (PW)\n                Management Information
      Base\", RFC 5601, July 2009.\n   [PWTC]       Nadeau, T., Ed., Zelig, D., Ed.,
      and O. Nicklass, Ed.,\n                \"Definitions for Textual Conventions
      for Pseudowire (PW)\n                Management\", RFC 5542, May 2009.\n   [DS1MIB]
      \    Nicklass, O., Ed., \"Definitions of Managed Objects for\n                the
      DS1, J1, E1, DS2, and E2 Interface Types\", RFC 4805,\n                March
      2007.\n   [DS3MIB]     Nicklass, O., Ed., \"Definitions of Managed Objects for\n
      \               the DS3/E3 Interface Type\", RFC 3896, September 2004.\n   [DS0MIB]
      \    Fowler, D., Ed., \"Definitions of Managed Objects for the\n                DS0
      and DS0 Bundle Interface Type\", RFC 2494, January\n                1999.\n
      \  [IFMIB]      McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n                MIB\",
      RFC 2863, June 2000.\n   [RFC2578]    McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \               \"Structure of Management Information Version 2 (SMIv2)\",\n
      \               STD 58, RFC 2578, April 1999.\n   [RFC2579]    McCloghrie, K.,
      Perkins, D., and J. Schoenwaelder,\n                \"Textual Conventions for
      SMIv2\", STD 58, RFC 2579, April\n                1999.\n   [RFC2580]    McCloghrie,
      K., Perkins, D., and J. Schoenwaelder,\n                \"Conformance Statements
      for SMIv2\", STD 58, RFC 2580,\n                April 1999.\n   [RFC3411]    Harrington,
      D., Presuhn, R., and B. Wijnen, \"An\n                Architecture for Describing
      Simple Network Management\n                Protocol (SNMP) Management Frameworks\",
      STD 62, RFC\n                3411, December 2002.\n   [BCP14]      Bradner,
      S., \"Key words for use in RFCs to Indicate\n                Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC4197]    Riegel, M., Ed., \"Requirements
      for Edge-to-Edge\n                Emulation of Time Division Multiplexed (TDM)
      Circuits\n                over Packet Switching Networks\", RFC 4197, October
      2005.\n   [RFC3985]    Bryant, S., Ed., and P. Pate, Ed., \"Pseudo Wire\n                Emulation
      Edge-to-Edge (PWE3) Architecture\", RFC 3985,\n                March 2005.\n
      \  [TDMOIP]     Y(J). Stein, Shashoua, R., Insler, R., and M. Anavi,\n                \"Time
      Division Multiplexing over IP (TDMoIP)\", RFC 5087,\n                December
      2007.\n   [CESOPSN]    Vainshtein A., Sasson, I., Sadovski, A., Metz, E.,\n
      \               Frost, T., and P. Pate \"Structured TDM Circuit Emulation\n
      \               Service over Packet Switched Network (CESoPSN)\", Work in\n
      \               Progress, October 2003.\n   [RFC3410]    Case, J., Mundy, R.,
      Partain, D., and B. Stewart,\n                \"Introduction and Applicability
      Statements for\n                Internet-Standard Management Framework\", RFC
      3410,\n                December 2002.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "12.  Acknowledgements\n   This document was produced by the PWE3 Working Group.
    \ Special thanks\n   to Yaakov Stein, Doron Tzur, Sasha Vainshtein, and Ron Cohen
    for\n   close review and good suggestions.\n"
  title: 12.  Acknowledgements
- contents:
  - "Author's Address\n   Orly Nicklass\n   RADVISION Ltd.\n   24 Raul Wallenberg
    St.\n   Tel Aviv\n   ISRAEL\n   Phone: +972 3 7679444\n   EMail: orlyn@radvision.com\n"
  title: Author's Address
