- contents:
  - '               The Text/Plain Format and DelSp Parameters

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This specification establishes two parameters (Format and DelSP)
    to\n   be used with the Text/Plain media type.  In the presence of these\n   parameters,
    trailing whitespace is used to indicate flowed lines and\n   a canonical quote
    indicator is used to indicate quoted lines.  This\n   results in an encoding which
    appears as normal Text/Plain in older\n   implementations, since it is in fact
    normal Text/Plain, yet provides\n   for superior wrapping/flowing, and quoting.\n
    \  This document supersedes the one specified in RFC 2646, \"The\n   Text/Plain
    Format Parameter\", and adds the DelSp parameter to\n   accommodate languages/coded
    character sets in which ASCII spaces are\n   not used or appear rarely.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in this Document . . . . . . . . . . .
    . . .   2\n   3.  The Problem . . . . . . . . . . . . . . . . . . . . . . . .
    .   3\n       3.1.  Paragraph Text. . . . . . . . . . . . . . . . . . . . .   3\n
    \      3.2.  Embarrassing Line Wrap  . . . . . . . . . . . . . . . .   3\n       3.3.
    \ New Media Types . . . . . . . . . . . . . . . . . . . .   4\n   4.  The Format
    and DelSp Parameters . . . . . . . . . . . . . . .   5\n       4.1.  Interpreting
    Format=Flowed. . . . . . . . . . . . . . .   6\n       4.2.  Generating Format=Flowed
    \ . . . . . . . . . . . . . . .   7\n       4.3.  Usenet Signature Convention
    . . . . . . . . . . . . . .   9\n       4.4.  Space-Stuffing  . . . . . . . .
    . . . . . . . . . . . .   9\n       4.5.  Quoting . . . . . . . . . . . . . .
    . . . . . . . . . .   9\n       4.6.  Digital Signatures and Encryption . . .
    . . . . . . . .  11\n       4.7.  Examples. . . . . . . . . . . . . . . . . .
    . . . . . .  12\n   5.  Interoperability. . . . . . . . . . . . . . . . . . .
    . . . .  12\n   6.  ABNF. . . . . . . . . . . . . . . . . . . . . . . . . . .
    . .  13\n   7.  Failure Modes . . . . . . . . . . . . . . . . . . . . . . . .
    \ 14\n       7.1.  Trailing White Space Corruption . . . . . . . . . . . .  14\n
    \  8.  Security Considerations . . . . . . . . . . . . . . . . . . .  15\n   9.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15\n   10. Internationalization
    Considerations . . . . . . . . . . . . .  15\n   11. Acknowledgments . . . . .
    . . . . . . . . . . . . . . . . . .  15\n   12. Normative References. . . . .
    . . . . . . . . . . . . . . . .  16\n   13. Informative References. . . . . .
    . . . . . . . . . . . . . .  16\n   Appendix A: Changes from RFC 2646 . . . .
    . . . . . . . . . . . .  18\n   Author's Address. . . . . . . . . . . . . . .
    . . . . . . . . . .  19\n   Full Copyright Statement. . . . . . . . . . . . .
    . . . . . . . .  20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Interoperability problems have been observed with erroneous
    labelling\n   of paragraph text as Text/Plain, and with various forms of\n   \"embarrassing
    line wrap\".  (See Section 3.)\n   Attempts to deploy new media types, such as
    Text/Enriched [Rich] and\n   Text/HTML [HTML] have suffered from a lack of backwards
    compatibility\n   and an often hostile user reaction at the receiving end.\n   What
    is required is a format which is in all significant ways\n   Text/Plain, and therefore
    is quite suitable for display as\n   Text/Plain, and yet allows the sender to
    express to the receiver\n   which lines are quoted and which lines are considered
    a logical\n   paragraph, and thus eligible to be flowed (wrapped and joined) as\n
    \  appropriate.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in this Document\n   The key words \"REQUIRED\", \"MUST\",
    \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\",\n   and \"MAY\" in this document are
    to be interpreted as described in \"Key\n   words for use in RFCs to Indicate
    Requirement Levels\" [KEYWORDS].\n   The term \"paragraph\" is used here to mean
    a series of lines which are\n   logically to be treated as a unit for display
    purposes and eligible\n   to be flowed (wrapped and joined) as appropriate to
    fit in the\n   display window and when creating text for replies, forwarding,
    etc.\n"
  title: 2.  Conventions Used in this Document
- contents:
  - "3.  The Problem\n   The Text/Plain media type is the lowest common denominator
    of\n   Internet email, with lines of no more than 998 characters (by\n   convention
    usually no more than 78), and where the carriage-return\n   and line-feed (CRLF)
    sequence represents a line break (see [MIME-IMT]\n   and [MSG-FMT]).\n   Text/Plain
    is usually displayed as preformatted text, often in a\n   fixed font.  That is,
    the characters start at the left margin of the\n   display window, and advance
    to the right until a CRLF sequence is\n   seen, at which point a new line is started,
    again at the left margin.\n   When a line length exceeds the display window, some
    clients will wrap\n   the line, while others invoke a horizontal scroll bar.\n
    \  Text which meets this description is defined by this memo as \"fixed\".\n   Some
    interoperability problems have been observed with this format:\n"
  - contents:
    - "3.1.  Paragraph Text\n   Many modern programs use a proportional-spaced font,
      and use CRLF to\n   represent paragraph breaks.  Line breaks are \"soft\", occurring
      as\n   needed on display.  That is, characters are grouped into a paragraph\n
      \  until a CRLF sequence is seen, at which point a new paragraph is\n   started.
      \ Each paragraph is displayed, starting at the left margin\n   (or paragraph
      indent), and continuing to the right until a word is\n   encountered which does
      not fit in the remaining display width.  This\n   word is displayed at the left
      margin of the next line.  This\n   continues until the paragraph ends (a CRLF
      is seen).  Extra vertical\n   space is left between paragraphs.\n   Text which
      meets this description is defined by this memo as\n   \"flowed\".\n   Numerous
      software products erroneously label this format as\n   Text/Plain, resulting
      in much user discomfort.\n"
    title: 3.1.  Paragraph Text
  - contents:
    - "3.2.  Embarrassing Line Wrap\n   As Text/Plain messages are quoted in replies
      or forwarded messages,\n   each line gradually increases in length, eventually
      being arbitrarily\n   hard wrapped, resulting in \"embarrassing line wrap\".
      \ This produces\n   text which is, at best, hard to read, and often confuses\n
      \  attributions.\n   Example:\n      >>>>>>This is a comment from the first
      message to show a\n      >quoting example.\n      >>>>>This is a comment from
      the second message to show a\n      >quoting example.\n      >>>>This is a comment
      from the third message.\n      >>>This is a comment from the fourth message.\n
      \  It can be confusing to assign attribution to lines 2 and 4 above.\n   In
      addition, as devices with display widths smaller than 79 or 80\n   characters
      become more popular, embarrassing line wrap has become\n   even more prevalent,
      even with unquoted text.\n   Example:\n      This is paragraph text that is\n
      \     meant to be flowed across\n      several lines.\n      However, the sending
      mailer is\n      converting it to fixed text at\n      a width of 72\n      characters,
      which causes it to\n      look like this when shown on a\n      PDA with only\n
      \     30 character lines.\n"
    title: 3.2.  Embarrassing Line Wrap
  - contents:
    - "3.3.  New Media Types\n   Attempts to deploy new media types, such as Text/Enriched
      [Rich] and\n   Text/HTML [HTML] have suffered from a lack of backwards compatibility\n
      \  and an often hostile user reaction at the receiving end.\n   In particular,
      Text/Enriched requires that open angle brackets (\"<\")\n   and hard line breaks
      be doubled, with resulting user unhappiness when\n   viewed as Text/Plain.  Text/HTML
      requires even more alteration of\n   text, with a corresponding increase in
      user complaints.\n   A proposal to define a new media type to explicitly represent
      the\n   paragraph form suffered from a lack of interoperability with\n   currently
      deployed software.  Some programs treat unknown subtypes of\n   TEXT as an attachment.\n
      \  What is desired is a format which is in all significant ways\n   Text/Plain,
      and therefore is quite suitable for display as\n   Text/Plain, and yet allows
      the sender to express to the receiver\n   which lines can be considered a logical
      paragraph, and thus flowed\n   (wrapped and joined) as appropriate.\n"
    title: 3.3.  New Media Types
  title: 3.  The Problem
- contents:
  - "4.  The Format and DelSp Parameters\n   This specification defines two MIME parameters
    for use with\n   Text/Plain:\n      Name:  Format\n      Value:  Fixed, Flowed\n
    \     Name:  DelSp\n      Value:  Yes, No\n   (Neither the parameter names nor
    values are case sensitive.)\n   If Format is not specified, or if the value is
    not recognized, a\n   value of Fixed is assumed.  The semantics of the Fixed value
    are the\n   usual associated with Text/Plain [MIME-IMT].\n   A Format value of
    Flowed indicates that the definition of flowed text\n   (as specified in this
    memo) was used on generation, and MAY be used\n   on reception.\n   Note that
    because Format is a parameter of the Text/Plain content-\n   type, any content-transfer-encoding
    used is irrelevant to the\n   processing of flowed text.\n   If DelSp is not specified,
    or if its value is not recognized, a value\n   of No is assumed.  The use of DelSp
    without a Format value of Flowed\n   is undefined.  When creating messages, DelSp
    SHOULD NOT be specified\n   in Text content types other than Text/Plain with Format
    = Flowed.\n   When receiving messages, DelSp SHOULD be ignored if used in a Text\n
    \  content type other than Text/Plain with Format = Flowed.\n   This section discusses
    flowed text; section 6 provides a formal\n   definition.\n   Section 5 discusses
    interoperability.\n   Note that this memo describes an on-the-wire format.  It
    does not\n   address formats for local file storage.\n"
  - contents:
    - "4.1.  Interpreting Format=Flowed\n   If the first character of a line is a
      quote mark (\">\"), the line is\n   considered to be quoted (see Section 4.5).
      \ Logically, all quote\n   marks are counted and deleted, resulting in a line
      with a non-zero\n   quote depth, and content.  (The agent is of course free
      to display\n   the content with quote marks or excerpt bars or anything else.)\n
      \  Logically, this test for quoted lines is done before any other tests\n   (that
      is, before checking for space-stuffed and flowed).\n   If the first character
      of a line is a space, the line has been\n   space-stuffed (see Section 4.4).
      \ Logically, this leading space is\n   deleted before examining the line further
      (that is, before checking\n   for flowed).\n   If the line ends in a space,
      the line is flowed.  Otherwise it is\n   fixed.  The exception to this rule
      is a signature separator line,\n   described in Section 4.3.  Such lines end
      in a space but are neither\n   flowed nor fixed.\n   If the line is flowed and
      DelSp is \"yes\", the trailing space\n   immediately prior to the line's CRLF
      is logically deleted.  If the\n   DelSp parameter is \"no\" (or not specified,
      or set to an unrecognized\n   value), the trailing space is not deleted.\n   Any
      remaining trailing spaces are part of the line's content, but the\n   CRLF of
      a soft line break is not.\n   A series of one or more flowed lines followed
      by one fixed line is\n   considered a paragraph, and MAY be flowed (wrapped
      and unwrapped) as\n   appropriate on display and in the construction of new
      messages (see\n   Section 4.5).\n   An interpreting agent SHOULD allow for three
      exceptions to the rule\n   that paragraphs end with a fixed line.  These exceptions
      are\n   improperly constructed messages: a flowed line SHOULD be considered\n
      \  to end the paragraph if it is followed by a line of a different quote\n   depth
      (see 4.5) or by a signature separator (see 4.3); the end of the\n   body also
      ends the paragraph.\n   A line consisting of one or more spaces (after deleting
      a space\n   acting as stuffing) is considered a flowed line.\n   An empty line
      (just a CRLF) is a fixed line.\n   Note that, for Unicode text, [Annex-14] provides
      guidance for\n   choosing at which characters to wrap a line.\n"
    title: 4.1.  Interpreting Format=Flowed
  - contents:
    - "4.2.  Generating Format=Flowed\n   When generating Format=Flowed text, lines
      SHOULD be 78 characters or\n   shorter, including any trailing white space and
      also including any\n   space added as part of stuffing (see Section 4.4).  As
      suggested\n   values, any paragraph longer than 78 characters in total length
      could\n   be wrapped using lines of 72 or fewer characters.  While the specific\n
      \  line length used is a matter of aesthetics and preference, longer\n   lines
      are more likely to require rewrapping and to encounter\n   difficulties with
      older mailers.  (It has been suggested that 66\n   character lines are the most
      readable.)\n   The restriction to 78 or fewer characters between CRLFs on the
      wire\n   is to conform to [MSG-FMT].\n   (In addition to conformance to [MSG-FMT],
      there is a historical need\n   that all lines, even when displayed by a non-flowed-aware
      program,\n   will fit in a standard 79- or 80-column screen without having to
      be\n   wrapped.  The limit is 78, not 79 or 80, because while 79 or 80 fit\n
      \  on a line, the last column is often reserved for a line-wrap\n   indicator.)\n
      \  When creating flowed text, the generating agent wraps, that is,\n   inserts
      'soft' line breaks as needed.  Soft line breaks are added at\n   natural wrapping
      points, such as between words.  A soft line break is\n   a SP CRLF sequence.\n
      \  There are two techniques for inserting soft line breaks.  The older\n   technique,
      established by RFC 2646, creates a soft line break by\n   inserting a CRLF after
      the occurrence of a space.  With this\n   technique, soft line breaks are only
      possible where spaces already\n   occur.  When this technique is used, the DelSp
      parameter SHOULD be\n   used; if used it MUST be set to \"no\".\n   The newer
      technique, suitable for use even with languages/coded\n   character sets in
      which the ASCII space character is rare or not\n   used, creates a soft line
      break by inserting a SP CRLF sequence.\n   When this technique is used, the
      DelSp parameter MUST be used and\n   MUST be set to \"yes\".  Note that because
      of space-stuffing (see\n   Section 4.4), when this technique is used and a soft
      line break is\n   inserted at a point where a SP already exists (such as between\n
      \  words), if the SP CRLF sequence is added immediately before the SP,\n   the
      pre-existing SP becomes leading and thus requires stuffing.  It\n   is RECOMMENDED
      that agents avoid this by inserting the SP CRLF\n   sequence following the existing
      SP.\n   Generating agents MAY use either method within each Text/Plain body\n
      \  part.\n   Regardless of which technique is used, a generating agent SHOULD
      NOT\n   insert a space in an unnatural location, such as into a word (a\n   sequence
      of printable characters, not containing spaces, in a\n   language/coded character
      set in which spaces are common).  If faced\n   with such a word which exceeds
      78 characters (but less than 998\n   characters, the [SMTP] limit on line length),
      the agent SHOULD send\n   the word as is and exceed the 78-character limit on
      line length.\n   A generating agent SHOULD:\n   o  Ensure all lines (fixed and
      flowed) are 78 characters or fewer in\n      length, counting any trailing space
      as well as a space added as\n      stuffing, but not counting the CRLF, unless
      a word by itself\n      exceeds 78 characters.\n   o  Trim spaces before user-inserted
      hard line breaks.\n   A generating agent MUST:\n   o  Space-stuff lines which
      start with a space, \"From \", or \">\".\n   In order to create messages which
      do not require space-stuffing, and\n   are thus more aesthetically pleasing
      when viewed as Format=Fixed, a\n   generating agent MAY avoid wrapping immediately
      before \">\", \"From \",\n   or space.\n   (See Sections 4.4 and 4.5 for more
      information on space-stuffing and\n   quoting, respectively.)\n   A Format=Flowed
      message consists of zero or more paragraphs, each\n   containing one or more
      flowed lines followed by one fixed line.  The\n   usual case is a series of
      flowed text lines with blank (empty) fixed\n   lines between them.\n   Any number
      of fixed lines can appear between paragraphs.\n   When placing soft line breaks
      in a paragraph, generating agents MUST\n   NOT place them in a way that causes
      any line of the paragraph to be a\n   signature separator line, because paragraphs
      cannot contain signature\n   separator lines (see Sections 4.3 and 6).\n   [Quoted-Printable]
      encoding SHOULD NOT be used with Format=Flowed\n   unless absolutely necessary
      (for example, non-US-ASCII (8-bit)\n   characters over a strictly 7-bit transport
      such as unextended\n   [SMTP]).  In particular, a message SHOULD NOT be encoded
      in Quoted-\n   Printable for the sole purpose of protecting the trailing space
      on\n   flowed lines unless the body part is cryptographically signed or\n   encrypted
      (see Section 4.6).\n   The intent of Format=Flowed is to allow user agents to
      generate\n   flowed text which is non-obnoxious when viewed as pure, raw\n   Text/Plain
      (without any decoding); use of Quoted-Printable hinders\n   this and may cause
      Format=Flowed to be rejected by end users.\n"
    title: 4.2.  Generating Format=Flowed
  - contents:
    - "4.3.  Usenet Signature Convention\n   There is a long-standing convention in
      Usenet news which also\n   commonly appears in Internet mail of using \"-- \"
      as the separator\n   line between the body and the signature of a message.  When\n
      \  generating a Format=Flowed message containing a Usenet-style\n   separator
      before the signature, the separator line is sent as-is.\n   This is a special
      case; an (optionally quoted or quoted and stuffed)\n   line consisting of DASH
      DASH SP is neither fixed nor flowed.\n   Generating agents MUST NOT end a paragraph
      with such a signature\n   line.\n   A receiving agent needs to test for a signature
      line both before the\n   test for a quoted line (see Section 4.5) and also after
      logically\n   counting and deleting quote marks and stuffing (see Section 4.4)
      from\n   a quoted line.\n"
    title: 4.3.  Usenet Signature Convention
  - contents:
    - "4.4.  Space-Stuffing\n   In order to allow for unquoted lines which start with
      \">\", and to\n   protect against systems which \"From-munge\" in-transit messages\n
      \  (modifying any line which starts with \"From \" to \">From \"),\n   Format=Flowed
      provides for space-stuffing.\n   Space-stuffing adds a single space to the start
      of any line which\n   needs protection when the message is generated.  On reception,
      if the\n   first character of a line is a space, it is logically deleted.  This\n
      \  occurs after the test for a quoted line (which logically counts and\n   deletes
      any quote marks), and before the test for a flowed line.\n   On generation,
      any unquoted lines which start with \">\", and any lines\n   which start with
      a space or \"From \" MUST be space-stuffed.  Other\n   lines MAY be space-stuffed
      as desired.\n   (Note that space-stuffing is conceptually similar to dot-stuffing
      as\n   specified in [SMTP].)\n"
    title: 4.4.  Space-Stuffing
  - contents:
    - "4.5.  Quoting\n   In Format=Flowed, the canonical quote indicator (or quote
      mark) is\n   one or more close angle bracket (\">\") characters.  Lines which
      start\n   with the quote indicator are considered quoted.  The number of \">\"\n
      \  characters at the start of the line specifies the quote depth.\n   Flowed
      lines which are also quoted may require special handling on\n   display and
      when copied to new messages.\n   When creating quoted flowed lines, each such
      line starts with the\n   quote indicator.\n   Note that because of space-stuffing,
      the lines\n       >> Exit, Stage Left\n   and\n       >>Exit, Stage Left\n   are
      semantically identical; both have a quote-depth of two, and a\n   content of
      \"Exit, Stage Left\".\n   However, the line\n       > > Exit, Stage Left\n   is
      different.  It has a quote-depth of one, and a content of\n   \"> Exit, Stage
      Left\".\n   When generating quoted flowed lines, an agent needs to pay attention\n
      \  to changes in quote depth.  All lines of a paragraph MUST be\n   unquoted,
      or else they MUST all be quoted and have the same quote\n   depth.  Therefore,
      whenever there is a change in quote depth, or a\n   change from quoted to unquoted,
      or change from unquoted to quoted,\n   the line immediately preceding the change
      MUST NOT be a flowed line.\n   If a receiving agent wishes to reformat flowed
      quoted lines (joining\n   and/or wrapping them) on display or when generating
      new messages, the\n   lines SHOULD be de-quoted, reformatted, and then re-quoted.
      \ To de-\n   quote, the number of close angle brackets in the quote indicator
      at\n   the start of each line is counted.  To re-quote after reformatting, a\n
      \  quote indicator containing the same number of close angle brackets\n   originally
      present are prefixed to each line.\n   On reception, if a change in quote depth
      occurs on a flowed line,\n   this is an improperly formatted message.  The receiver
      SHOULD handle\n   this error by using the 'quote-depth-wins' rule, which is
      to consider\n   the paragraph to end with the flowed line immediately preceding
      the\n   change in quote depth.\n   In other words, whenever two adjacent lines
      have different quote\n   depths, senders MUST ensure that the earlier line is
      not flowed (does\n   not end in a space), and receivers finding a flowed line
      there SHOULD\n   treat it as the last line of a paragraph.\n   For example,
      consider the following sequence of lines (using '*' to\n   indicate a soft line
      break, i.e., SP CRLF, and '#' to indicate a hard\n   line break, i.e., CRLF):\n
      \     > Thou villainous ill-breeding spongy dizzy-eyed*\n      > reeky elf-skinned
      pigeon-egg!*     <--- problem ---<\n      >> Thou artless swag-bellied milk-livered*\n
      \     >> dismal-dreaming idle-headed scut!#\n      >>> Thou errant folly-fallen
      spleeny reeling-ripe*\n      >>> unmuzzled ratsbane!#\n      >>>> Henceforth,
      the coding style is to be strictly*\n      >>>> enforced, including the use
      of only upper case.#\n      >>>>> I've noticed a lack of adherence to the coding*\n
      \     >>>>> styles, of late.#\n      >>>>>> Any complaints?#\n   The second
      line ends in a soft line break, even though it is the last\n   line of the one-deep
      quote block.  The question then arises as to how\n   this line is to be interpreted,
      considering that the next line is the\n   first line of the two-deep quote block.\n
      \  The example text above, when processed according to quote-depth wins,\n   results
      in the first two lines being considered as one quoted, flowed\n   section, with
      a quote depth of 1; the third and fourth lines become a\n   quoted, flowed section,
      with a quote depth of 2.\n   A generating agent MUST NOT create this situation;
      a receiving agent\n   SHOULD handle it by giving preference to the quote depth.\n"
    title: 4.5.  Quoting
  - contents:
    - "4.6.  Digital Signatures and Encryption\n   If a message is digitally signed
      or encrypted it is important that\n   cryptographic processing use the same
      text for signature verification\n   and/or decryption as was used for signature
      generation and/or\n   encryption.  Since the use of format=flowed allows text
      to be altered\n   (by adding or removing line breaks and trailing spaces) between\n
      \  composition and transmission, and between reception and display,\n   interoperability
      problems or security vulnerabilities may arise if\n   originator and recipient
      do not both use the on-the-wire format for\n   cryptographic processing.\n   The
      implications of the interaction between format=flowed and any\n   specific cryptographic
      process depend on the details of the\n   cryptographic processing and should
      be understood before using\n   format=flowed in conjunction with signed and/or
      encrypted messages.\n   Note that [OpenPGP] specifies (in Section 7.1) that
      \"any trailing\n   whitespace (spaces, and tabs, 0x09) at the end of any line
      is ignored\n   when the cleartext signature is calculated.\"\n   Thus it would
      be possible to add, in transit, a format=flowed header\n   to a regular, format=fixed
      vanilla PGP (not [OpenPGP-MIME]) signed\n   message and add arbitrary trailing
      space characters without this\n   addition being detected.  This would change
      the rendering of the\n   article by a client which supported format=flowed.\n
      \  Therefore, the use of [OpenPGP] with format=flowed messages is\n   strongly
      discouraged. [OpenPGP-MIME] is recommended instead.\n"
    title: 4.6.  Digital Signatures and Encryption
  - contents:
    - "4.7.  Examples\n   The following example contains three paragraphs:\n      `Take
      some more tea,' the March Hare said to Alice, very\n      earnestly.\n      `I've
      had nothing yet,' Alice replied in an offended tone, `so I\n      can't take
      more.'\n      `You mean you can't take LESS,' said the Hatter: `it's very easy\n
      \     to take MORE than nothing.'\n   This could be encoded as follows (using
      '*' to indicate a soft line\n   break, that is, SP CRLF sequence, and '#' to
      indicate a hard line\n   break, that is, CRLF):\n      `Take some more tea,'
      the March Hare said to Alice, very*\n      earnestly.#\n      #\n      `I've
      had nothing yet,' Alice replied in an offended tone, `so*\n      I can't take
      more.'#\n      #\n      `You mean you can't take LESS,' said the Hatter: `it's
      very*\n      easy to take MORE than nothing.'#\n   To show an example of quoting,
      here we have the same exchange,\n   presented as a series of direct quotes:\n
      \     >>>Take some more tea.#\n      >>I've had nothing yet, so I can't take
      more.#\n      >You mean you can't take LESS, it's very easy to take*\n      >MORE
      than nothing.#\n"
    title: 4.7.  Examples
  title: 4.  The Format and DelSp Parameters
- contents:
  - "5.  Interoperability\n   Because flowed lines are all-but-indistinguishable from
    fixed lines,\n   software which does not recognize Format=Flowed treats flowed
    lines\n   as normal Text/Plain (which is what they are).  Thus, Format=Flowed\n
    \  interoperates with older clients, although flowed lines will have\n   trailing
    white space inserted.\n   If a space-stuffed message is received by an agent which
    handles\n   Format=Flowed, the space-stuffing is reversed and thus the message\n
    \  appears unchanged.  An agent which is not aware of Format=Flowed will\n   of
    course not undo any space-stuffing; thus Format=Flowed messages\n   may appear
    with a leading space on some lines (those which start with\n   a space, \">\"
    which is not a quote indicator, or \"From \").  Since\n   lines which require
    space-stuffing rarely occur, and the aesthetic\n   consequences of unreversed
    space-stuffing are minimal, this is not\n   expected to be a significant problem.\n
    \  If some lines begin with one or more spaces, the generating agent MAY\n   space-stuff
    all lines, to maintain the relative indentation of the\n   lines when viewed by
    clients which are not aware of Format=Flowed.\n   Messages generated with DelSp=yes
    and received by clients which are\n   aware of Format=Flowed but are not aware
    of the DelSp parameter will\n   have an extra space remaining after removal of
    soft line breaks.\n   Thus, when generating text in languages/coded character
    sets in which\n   spaces are common, the generating agent MAY always use the DelSp=no\n
    \  method.\n   Hand-aligned text, such as ASCII tables or art, source code, etc.,\n
    \  SHOULD be sent as fixed, not flowed lines.\n"
  title: 5.  Interoperability
- contents:
  - "6.  ABNF\n   The constructs used in Text/Plain; Format=Flowed body parts are\n
    \  described using Augmented Backus-Naur Form [ABNF], including the core\n   rules
    defined in Appendix A.\n   Note that the SP (space) and \">\" characters are encoded
    according to\n   the charset parameter.\n"
  - 'flowed-body      = *( paragraph / fixed-line / sig-sep )

    '
  - "paragraph        = 1*flowed-line fixed-line\n                   ; all lines in
    paragraph MUST be unquoted or\n                   ; have same quote depth\n"
  - 'flowed-line      = ( flowed-line-qt / flowed-line-unqt ) flow CRLF

    '
  - "flowed-line-qt   = quote ( ( stuffing stuffed-flowed ) /\n                           unstuffed-flowed
    )\n"
  - 'flowed-line-unqt = ( stuffing stuffed-flowed ) / unstuffed-flowed

    '
  - 'stuffed-flowed   = *text-char

    '
  - 'unstuffed-flowed = non-sp-quote *text-char

    '
  - 'fixed-line       = fixed-line-qt / fixed-line-unqt

    '
  - "fixed-line-qt    = quote ( ( stuffing stuffed-fixed ) /\n                           unstuffed-fixed
    ) CRLF\n"
  - 'fixed-line-unqt  = ( stuffed-fixed / unstuffed-fixed ) CRLF

    '
  - 'stuffed-fixed    = *text-char non-sp

    '
  - 'unstuffed-fixed  = non-sp-quote [ *text-char non-sp ]

    '
  - 'sig-sep          = [ quote [stuffing] ] "--" SP CRLF

    '
  - 'quote-mark       = ">"

    '
  - 'quote            = 1*quote-mark

    '
  - "stuffing         = SP ; space-stuffed, added on generation if\n                      ;
    needed, deleted on reception\n"
  - "flow             = SP ; space before CRLF indicates flowed line,\n                      ;
    if DelSp=yes, space was added on generation\n                      ; and is deleted
    on reception\n"
  - 'non-sp-quote     = < any character except NUL, CR, LF, SP, quote-mark >

    '
  - 'non-sp           = non-sp-quote / quote-mark

    '
  - "text-char        = non-sp / SP\n   That is, a Format=Flowed message body consists
    of any number of\n   paragraphs and/or fixed lines and/or signature separator
    lines;\n   paragraphs need at least one flowed line and are terminated by a\n
    \  fixed line; the fixed line terminating the paragraph is part of the\n   paragraph.
    \ (There are some exceptions to this described in the\n   text.)\n   Without at
    least one flowed line, there is a series of fixed lines,\n   each independent.
    \ There is no paragraph.\n   With at least one flowed line, there is a paragraph,
    and the received\n   lines can be reformed and flowed to fit the display window
    size.\n   This can only be done if the lines are part of a logical grouping,\n
    \  the paragraph.\n   Note that the definitions of flowed-line and sig-sep are
    potentially\n   ambiguous: a signature separator line matches both, but is treated
    as\n   a signature separator line and not a flowed line.\n"
  title: 6.  ABNF
- contents:
  - '7.  Failure Modes

    '
  - contents:
    - "7.1.  Trailing White Space Corruption\n   There are systems in existence which
      alter trailing whitespace on\n   messages which pass through them.  Such systems
      may strip, or in\n   rarer cases, add trailing whitespace, in violation of RFC
      2821 [SMTP]\n   Section 4.5.2.\n   Stripping trailing whitespace has the effect
      of converting flowed\n   lines to fixed lines, which results in a message no
      worse than if\n   Format=Flowed had not been used.\n   Adding trailing whitespace
      to a Format=Flowed message may result in a\n   malformed display or reply.\n
      \  Since most systems which add trailing white space do so to create a\n   line
      which fills an internal record format, the result is almost\n   always a line
      which contains an even number of characters (counting\n   the added trailing
      white space).\n   One possible avoidance, therefore, would be to define Format=Flowed\n
      \  lines to use either one or two trailing space characters to indicate\n   a
      flowed line, such that the total line length is odd.  However,\n   considering
      the scarcity of such systems today, it is not worth the\n   added complexity.\n"
    title: 7.1.  Trailing White Space Corruption
  title: 7.  Failure Modes
- contents:
  - "8.  Security Considerations\n   Any security considerations which apply to Text/Plain
    also apply to\n   Text/Plain with Format=Flowed.\n   Section 4.6 discusses the
    interaction between Format=Flowed and\n   digital signatures or encryption.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   IANA has added a reference to this specification
    in the Text/Plain\n   Media Type registration.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Internationalization Considerations\n   The line wrap and quoting specifications
    of Format=Flowed may not be\n   suitable for certain charsets, such as for Arabic
    and Hebrew\n   characters that read from right to left.  Care needs to be taken
    in\n   applying format=flowed in these cases, as format=fixed combined with\n
    \  [quoted-printable] encoding may be more suitable.\n   The DelSp parameter was
    added specifically to permit Format=Flowed to\n   be used with languages/coded
    character sets in which the ASCII space\n   character is rarely used, or not used
    at all.\n"
  title: 10.  Internationalization Considerations
- contents:
  - "11.  Acknowledgments\n   The DelSp parameter was developed during a series of
    discussions\n   among a number of people, including Harald Alvestrand, Grant Baillie,\n
    \  Ian Bell, Steve Dorner, Patrik Faltstrom, Eric Fischer, Ned Freed,\n   Alexey
    Melnikov, John Myers, and Pete Resnick.\n   Corrections and clarifications to
    RFC 2646 and early versions of this\n   document were pointed out by several people,
    including Adam Costello,\n   Jutta Degener, Tony Hansen, Simon Josefsson, Dan
    Kohn, Ragho\n   Mahalingam, Keith Moore, Greg Troxel, and Dan Wing.\n   I'm told
    that NeXT's mail application used a very similar mechanism\n   (without support
    for non-Western languages) in 1992.\n"
  title: 11.  Acknowledgments
- contents:
  - "12.  Normative References\n   [ABNF]             Crocker, D., Ed. and P. Overell,
    \"Augmented BNF\n                      for Syntax Specifications: ABNF\", RFC
    2234,\n                      November 1997.\n   [KEYWORDS]         Bradner, S.,
    \"Key words for use in RFCs to\n                      Indicate Requirement Levels\",
    BCP 14, RFC 2119,\n                      March 1997.\n   [MIME-IMT]         Freed,
    N. and N. Borenstein, \"Multipurpose\n                      Internet Mail Extensions
    (MIME) Part Two:  Media\n                      Types\", RFC 2046, November 1996.\n
    \  [Quoted-Printable] Freed, N. and N. Borenstein, \"Multipurpose\n                      Internet
    Mail Extensions (MIME) Part One:  Format\n                      of Internet Message
    Bodies\", RFC 2045, November\n                      1996.\n"
  title: 12.  Normative References
- contents:
  - "13.  Informative References\n   [Annex-14]         Unicode Standard Annex #14,
    \"Line Breaking\n                      Properties\"\n                      <URL:http://www.unicode.org/unicode/reports/tr14/>\n
    \  [MSG-FMT]          Resnick, P., Ed., \"Internet Message Format\", RFC\n                      2822,
    April 2001.\n   [OpenPGP]          Callas, J., Donnerhacke, L., Finney, H. and
    R.\n                      Thayer, \"OpenPGP Message Format\", RFC 2440,\n                      November
    1998.\n   [OpenPGP-MIME]     Elkins, M., \"MIME Security with Pretty Good\n                      Privacy
    (PGP)\", RFC 2015, October 1996.\n                      Elkins, M., Del Torto,
    D., Levien, R. and J.\n                      Roessler, \"MIME Security with OpenPGP\",
    RFC 3156,\n                      August 2001.\n   [Rich]             Resnick,
    P. and A. Walker, \"The text/enriched MIME\n                      Content-type\",
    RFC 1896, February 1996.\n   [SMTP]             Klensin, J., Ed., \"Simple Mail
    Transfer Protocol\",\n                      RFC 2821, April 2001.\n"
  title: 13.  Informative References
- contents:
  - "Appendix A:  Changes from RFC 2646\n   Substantive:\n   o  Added DelSp parameter
    to handle languages and coded character sets\n      in which space is less common
    or not used.\n   o  Updated text on generating and interpreting to accommodate
    the\n      DelSp parameter.\n   o  Changed the limits of 79 or 80 to be 78 in
    conformance with RFC\n      2822.\n   o  Added text on generating to clarify that
    the 78-character limit\n      includes trailing white space and stuffing.\n   o
    \ Changed sig-sep in ABNF to allow stuffing.\n   o  Changed fixed-line to allow
    empty lines in ABNF.\n   o  Added explanatory text following ABNF.\n   o  Moved
    text from Abstract to new Introduction; rewrote Abstract.\n   o  Moved interoperability
    text to new section, and updated.\n   o  Clarified Security Considerations.\n
    \  o  Text on digital signatures now discusses that OpenPGP ignores\n      trailing
    white space.\n   o  Mention Unicode Annex 14.\n   o  Added mention of quoting
    to Abstract and Introduction.\n   o  Deleted line analysis table.\n   o  Added
    recommendations for OpenPGP and OpenPGP-MIME.\n   o  Rewrote ABNF rules to remove
    most ambiguity and note remaining\n      case.\n   o  Added note that c-t-e is
    irrelevant to flowed text processing.\n   o  Added text indicating that end of
    data terminates a paragraph.\n   o  Moved sig-sep out of fixed-line ABNF.\n   o
    \ Changed some SHOULDs to MUSTs (space-stuffing, quoted paragraphs).\n   o  Added
    note to ABNF that space and \">\" are encoded according to\n      charset.\n   o
    \ Mentioned exceptions in section on interpreting.\n   o  Clarified and made consistent
    treatment of signature separator\n      lines.\n   Editorial:\n   o  Added mention
    of NeXT's mail application to Acknowledgments.\n   o  Updated Acknowledgments.\n
    \  o  Updated [SMTP] reference to 2821.\n   o  Added Notices.\n   o  Split References
    into Normative and Informative.\n   o  Improved text wording in some areas.\n
    \  o  Standardize on \"quote depth\", not \"quoting depth\".\n   o  Moved section
    on interpreting before section on generating.\n   o  Reworded non-normative \"should\"s.\n
    \  o  Noted meaning of \"paragraph\".\n   The DelSp parameter was added specifically
    to permit Format=Flowed to\n   be used with languages/coded character sets in
    which the ASCII space\n   character is rarely used, or not used at all.  The DelSp
    mechanism\n   was selected despite having been initially rejected as too much
    of a\n   kludge, because among the many different techniques proposed, it\n   allows
    for maximum interoperability among clients which support\n   neither this specification
    nor RFC 2646, those which do support RFC\n   2646 but not this specification,
    and those that do support this\n   specification; this set is multiplied by those
    that handle\n   languages/coded character sets in which spaces are common, and
    in\n   which they are uncommon or not used.\n"
  title: 'Appendix A:  Changes from RFC 2646'
- contents:
  - "Author's Address\n   Randall Gellens\n   QUALCOMM Incorporated\n   5775 Morehouse
    Drive\n   San Diego, CA  92121\n   USA\n   Phone: +1 858 651 5115\n   EMail: randy@qualcomm.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This
    document is subject\n   to the rights, licenses and restrictions contained in
    BCP 78 and\n   except as set forth therein, the authors retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed\n
    \  to pertain to the implementation or use of the technology\n   described in
    this document or the extent to which any license\n   under such rights might or
    might not be available; nor does it\n   represent that it has made any independent
    effort to identify any\n   such rights.  Information on the procedures with respect
    to\n   rights in RFC documents can be found in BCP 78 and BCP 79.\n   Copies of
    IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use\n   of such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository\n
    \  at http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention\n   any copyrights, patents or patent applications, or other\n
    \  proprietary rights that may cover technology that may be required\n   to implement
    this standard.  Please address the information to the\n   IETF at ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
