- contents:
  - "       Real-Time Transport Protocol (RTP) Payload Format for the\n         Variable-Rate
    Multimode Wideband (VMR-WB) Audio Codec\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies a real-time transport protocol (RTP) payload\n
    \  format to be used for the Variable-Rate Multimode Wideband (VMR-WB)\n   speech
    codec.  The payload format is designed to be able to\n   interoperate with existing
    VMR-WB transport formats on non-IP\n   networks.  A media type registration is
    included for VMR-WB RTP\n   payload format.\n   VMR-WB is a variable-rate multimode
    wideband speech codec that has a\n   number of operating modes, one of which is
    interoperable with AMR-WB\n   (i.e., RFC 3267) audio codec at certain rates.  Therefore,
    provisions\n   have been made in this document to facilitate and simplify data\n
    \  packet exchange between VMR-WB and AMR-WB in the interoperable mode\n   with
    no transcoding function involved.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Conventions and Acronyms ........................................3\n   3.
    The Variable-Rate Multimode Wideband (VMR-WB) Speech Codec ......4\n      3.1.
    Narrowband Speech Processing ...............................5\n      3.2. Continuous
    vs. Discontinuous Transmission ..................6\n      3.3. Support for Multi-Channel
    Session ..........................6\n   4. Robustness against Packet Loss ..................................7\n
    \     4.1. Forward Error Correction (FEC) .............................7\n      4.2.
    Frame Interleaving and Multi-Frame Encapsulation ...........8\n   5. VMR-WB Voice
    over IP Scenarios ..................................9\n      5.1. IP Terminal
    to IP Terminal .................................9\n      5.2. GW to IP Terminal
    .........................................10\n      5.3. GW to GW (between VMR-WB-
    and AMR-WB-Enabled Terminals) ...10\n      5.4. GW to GW (between Two VMR-WB-Enabled
    Terminals) ...........11\n   6. VMR-WB RTP Payload Formats .....................................12\n
    \     6.1. RTP Header Usage ..........................................13\n      6.2.
    Header-Free Payload Format ................................14\n      6.3. Octet-Aligned
    Payload Format ..............................15\n           6.3.1. Payload Structure
    ..................................15\n           6.3.2. The Payload Header .................................15\n
    \          6.3.3. The Payload Table of Contents ......................18\n           6.3.4.
    Speech Data ........................................20\n           6.3.5. Payload
    Example: Basic Single Channel\n                  Payload Carrying Multiple Frames
    ...................21\n      6.4. Implementation Considerations .............................22\n
    \          6.4.1. Decoding Validation and Provision for Lost\n                  or
    Late Packets ....................................22\n   7. Congestion Control
    .............................................23\n   8. Security Considerations
    ........................................23\n      8.1. Confidentiality ...........................................24\n
    \     8.2. Authentication and Integrity ..............................24\n   9.
    Payload Format Parameters ......................................24\n      9.1.
    VMR-WB RTP Payload MIME Registration ......................25\n      9.2. Mapping
    MIME Parameters into SDP ..........................27\n      9.3. Offer-Answer
    Model Considerations .........................28\n   10. IANA Considerations ...........................................29\n
    \  11. Acknowledgements ..............................................29\n   12.
    References ....................................................30\n      12.1.
    Normative References .....................................30\n      12.2. Informative
    References ...................................30\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the payload format for packetization
    of VMR-\n   WB-encoded speech signals into the Real-time Transport Protocol (RTP)\n
    \  [3].  The VMR-WB payload formats support transmission of single and\n   multiple
    channels, frame interleaving, multiple frames per payload,\n   header-free payload,
    the use of mode switching, and interoperation\n   with existing VMR-WB transport
    formats on non-IP networks, as\n   described in Section 3.\n   The payload format
    is described in Section 6.  The VMR-WB file format\n   (i.e., for transport of
    VMR-WB speech data in storage mode\n   applications such as email) is specified
    in [7].  In Section 9, a\n   media type registration for VMR-WB RTP payload format
    is provided.\n   Since VMR-WB is interoperable with AMR-WB at certain rates, an\n
    \  attempt has been made throughout this document to maximize the\n   similarities
    with RFC 3267 while optimizing the payload format for\n   the non-interoperable
    modes of the VMR-WB codec.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions and Acronyms\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC2119
    [2].\n   The following acronyms are used in this document:\n    3GPP   - The Third
    Generation Partnership Project\n    3GPP2  - The Third Generation Partnership
    Project 2\n    CDMA   - Code Division Multiple Access\n    WCDMA  - Wideband Code
    Division Multiple Access\n    GSM    - Global System for Mobile Communications\n
    \   AMR-WB - Adaptive Multi-Rate Wideband Codec\n    VMR-WB - Variable-Rate Multimode
    Wideband Codec\n    CMR    - Codec Mode Request\n    GW     - Gateway\n    DTX
    \   - Discontinuous Transmission\n    FEC    - Forward Error Correction\n    SID
    \   - Silence Descriptor\n    TrFO   - Transcoder-Free Operation\n    UDP    -
    User Datagram Protocol\n    RTP    - Real-Time Transport Protocol\n    RTCP   -
    RTP Control Protocol\n    MIME   - Multipurpose Internet Mail Extension\n    SDP
    \   - Session Description Protocol\n    VoIP   - Voice-over-IP\n   The term \"interoperable
    mode\" in this document refers to VMR-WB mode\n   3, which is interoperable with
    AMR-WB codec modes 0, 1, and 2.\n   The term \"non-interoperable modes\" in this
    document refers to VMR-WB\n   modes 0, 1, and 2.\n   The term \"frame-block\"
    is used in this document to describe the\n   time-synchronized set of speech frames
    in a multi-channel VMR-WB\n   session.  In particular, in an N-channel session,
    a frame-block will\n   contain N speech frames, one from each of the channels,
    and all N\n   speech frames represent exactly the same time period.\n"
  title: 2.  Conventions and Acronyms
- contents:
  - "3.  The Variable-Rate Multimode Wideband (VMR-WB) Speech Codec\n   VMR-WB is
    the wideband speech-coding standard developed by Third\n   Generation Partnership
    Project 2 (3GPP2) for encoding/decoding\n   wideband/narrowband speech content
    in multimedia services in 3G CDMA\n   cellular systems [1].  VMR-WB is a source-controlled
    variable-rate\n   multimode wideband speech codec.  It has a number of operating
    modes,\n   where each mode is a tradeoff between voice quality and average data\n
    \  rate.  The operating mode in VMR-WB (as shown in Table 2) is chosen\n   based
    on the traffic condition of the network and the desired quality\n   of service.
    \ The desired average data rate (ADR) in each mode is\n   obtained by encoding
    speech frames at permissible rates (as shown in\n   Tables 1 and 3) compliant
    with CDMA2000 system, depending on the\n   instantaneous characteristics of input
    speech and the maximum and\n   minimum rate constraints imposed by the network
    operator.\n   While VMR-WB is a native CDMA codec complying with all CDMA system\n
    \  requirements, it is further interoperable with AMR-WB [4,12] at\n   12.65,
    8.85, and 6.60 kbps.  This is due to the fact that VMR-WB and\n   AMR-WB share
    the same core technology.  This feature enables\n   Transcoder-Free (TrFO) interconnections
    between VMR-WB and AMR-WB\n   across different wireless/wireline systems (e.g.,
    GSM/WCDMA and\n   CDMA2000) without use of unnecessary complex media format conversion.\n
    \  Note that the concept of mode in VMR-WB is different from that of\n   AMR-WB
    where each fixed-rate AMR-WB codec mode is adapted to\n   prevailing channel conditions
    by a tradeoff between the total number\n   of source-coding and channel-coding
    bits.\n   VMR-WB is able to transition between various modes with no\n   degradation
    in voice quality that is attributable to the mode\n   switching itself.  The operating
    mode of the VMR-WB encoder may be\n   switched seamlessly without prior knowledge
    of the decoder.  Any\n   non-interoperable mode (i.e., VMR-WB modes 0, 1, or 2)
    can be chosen\n   depending on the traffic conditions (e.g., network congestion)
    and\n   the desired quality of service.\n   While in the interoperable mode (i.e.,
    VMR-WB mode 3), mode switching\n   between VMR-WB modes is not allowed because
    there is only one AMR-WB\n   interoperable mode in VMR-WB.  Since the AMR-WB codec
    may request a\n   mode change, depending on channel conditions, in-band data included\n
    \  in VMR-WB frame structure (see Section 8 of [1] for more details) is\n   used
    during an interoperable interconnection to switch between VMR-WB\n   frame types
    0, 1, and 2 in VMR-WB mode 3 (corresponding to AMR-WB\n   codec modes 0, 1, or
    2).\n   As mentioned earlier, VMR-WB is compliant with CDMA2000 system with\n
    \  the permissible encoding rates shown in Table 1.\n   +---------------------------+-----------------+---------------+\n
    \  |        Frame Type         | Bits per Packet | Encoding Rate |\n   |                           |
    \  (Frame Size)  |     (kbps)    |\n   +---------------------------+-----------------+---------------+\n
    \  | Full-Rate                 |      266        |     13.3      |\n   | Half-Rate
    \                |      124        |      6.2      |\n   | Quarter-Rate              |
    \      54        |      2.7      |\n   | Eighth-Rate               |       20
    \       |      1.0      |\n   | Blank                     |        0        |
    \      0       |\n   | Erasure                   |        0        |       0       |\n
    \  +---------------------------+-----------------+---------------+\n     Table
    1: CDMA2000 system permissible frame types and their\n              associated
    encoding rates\n   VMR-WB is robust to high percentage of frame loss and frames
    with\n   corrupted rate information.  The reception of an Erasure\n   (SPEECH_LOST)
    frame type at decoder invokes the built-in frame error\n   concealment mechanism.
    \ The built-in frame error concealment\n   mechanism in VMR-WB conceals the effect
    of lost frames by exploiting\n   in-band data and the information available in
    the previous frames.\n"
  - contents:
    - "3.1.  Narrowband Speech Processing\n   VMR-WB has the capability to operate
      with either 16000-Hz or 8000-Hz\n   sampled input/output speech signals in all
      modes of operation [1].\n   The VMR-WB decoder does not require a priori knowledge
      about the\n   sampling rate of the original media (i.e., speech/audio signals\n
      \  sampled at 8 or 16 kHz) at the input of the encoder.  The VMR-WB\n   decoder,
      by default, generates 16000-Hz wideband output regardless of\n   the encoder
      input sampling frequency.  Depending on the application,\n   the decoder can
      be configured to generate 8000-Hz output, as well.\n   Therefore, while this
      specification defines a 16000-Hz RTP clock rate\n   for VMR-WB codec, the injection
      and processing of 8000-Hz narrowband\n   media during a session is also allowed;
      however, a 16000-Hz RTP clock\n   rate MUST always be used.\n   The choice of
      VMR-WB output sampling frequency depends on the\n   implementation and the audio
      acoustic capabilities of the receiving\n   side.\n"
    title: 3.1.  Narrowband Speech Processing
  - contents:
    - "3.2.  Continuous vs. Discontinuous Transmission\n   The circuit-switched operation
      of VMR-WB within a CDMA network\n   requires continuous transmission of the
      speech data during a\n   conversation.  The intrinsic source-controlled variable-rate
      feature\n   of the CDMA speech codecs is required for optimal operation of the\n
      \  CDMA system and interference control.  However, VMR-WB has the\n   capability
      to operate in a discontinuous transmission mode for some\n   packet-switched
      applications over IP networks (e.g., VoIP), where the\n   number of transmitted
      bits and packets during silence period are\n   reduced to a minimum.  The VMR-WB
      DTX operation is similar to that of\n   AMR-WB [4,12].\n"
    title: 3.2.  Continuous vs. Discontinuous Transmission
  - contents:
    - "3.3.  Support for Multi-Channel Session\n   The octet-aligned RTP payload format
      defined in this document\n   supports multi-channel audio content (e.g., a stereophonic
      speech\n   session).  Although VMR-WB codec itself does not support encoding
      of\n   multi-channel audio content into a single bit stream, it can be used\n
      \  to encode and decode each of the individual channels separately.\n   To transport
      the separately encoded multi-channel content, the speech\n   frames for all
      channels that are framed and encoded for the same 20\n   ms periods are logically
      collected in a frame-block.\n   At the session setup, out-of-band signaling
      must be used to indicate\n   the number of channels in the session and the order
      of the speech\n   frames from different channels in each frame-block.  When
      using SDP\n   for signaling (see Section 9.2 for more details), the number of\n
      \  channels is specified in the rtpmap attribute, and the order of\n   channels
      carried in each frame-block is implied by the number of\n   channels as specified
      in Section 4.1 in [6].\n"
    title: 3.3.  Support for Multi-Channel Session
  title: 3.  The Variable-Rate Multimode Wideband (VMR-WB) Speech Codec
- contents:
  - "4.  Robustness against Packet Loss\n   The octet-aligned payload format described
    in this document (see\n   Section 6 for more details) supports several features,
    including\n   forward error correction (FEC) and frame interleaving, in order
    to\n   increase robustness against lost packets.\n"
  - contents:
    - "4.1.  Forward Error Correction (FEC)\n   The simple scheme of repetition of
      previously sent data is one way of\n   achieving FEC.  Another possible scheme,
      which is more bandwidth\n   efficient, is to use payload-external FEC; e.g.,
      RFC2733 [8], which\n   generates extra packets containing repair data.\n   The
      repetition method involves the simple retransmission of\n   previously transmitted
      frame-blocks together with the current frame-\n   block(s).  This is done by
      using a sliding window to group the speech\n   frame-blocks to send in each
      payload.  Figure 1 illustrates an\n   example.\n   In this example, each frame-block
      is retransmitted one time in the\n   following RTP payload packet.  Here, f(n-2)..f(n+4)
      denotes a\n   sequence of speech frame-blocks, and p(n-1)..p(n+4) a sequence
      of\n   payload packets.\n   --+--------+--------+--------+--------+--------+--------+--------+--\n
      \    | f(n-2) | f(n-1) |  f(n)  | f(n+1) | f(n+2) | f(n+3) | f(n+4) |\n   --+--------+--------+--------+--------+--------+--------+--------+--\n
      \    <---- p(n-1) ---->\n              <----- p(n) ----->\n                       <----
      p(n+1) ---->\n                                <---- p(n+2) ---->\n                                         <----
      p(n+3) ---->\n                                                  <---- p(n+4)
      ---->\n              Figure 1: An example of redundant transmission\n   The
      use of this approach does not require signaling at the session\n   setup.  In
      other words, the speech sender can choose to use this\n   scheme without consulting
      the receiver.  This is because a packet\n   containing redundant frames will
      not look different from a packet\n   with only new frames.  The receiver may
      receive multiple copies or\n   versions of a frame for a certain timestamp if
      no packet is lost.  If\n   multiple versions of the same speech frame are received,
      it is\n   RECOMMENDED that the highest rate be used by the speech decoder.\n
      \  This redundancy scheme provides the same functionality as that\n   described
      in RFC 2198, \"RTP Payload for Redundant Audio Data\" [10].\n   In most cases,
      the mechanism in this payload format is more efficient\n   and simpler than
      requiring both endpoints to support RFC 2198.  If\n   the spread in time required
      between the primary and redundant\n   encodings is larger than 5 frame times,
      the bandwidth overhead of RFC\n   2198 will be lower.\n   The sender is responsible
      for selecting an appropriate amount of\n   redundancy based on feedback about
      the channel (e.g., in RTCP\n   receiver reports) or network traffic.  A sender
      SHOULD NOT base\n   selection of FEC on the CMR, as this parameter most probably
      was set\n   based on non-IP information.  The sender is also responsible for\n
      \  avoiding congestion, which may be aggravated by redundant\n   transmission
      (see Section 7).\n"
    title: 4.1.  Forward Error Correction (FEC)
  - contents:
    - "4.2.  Frame Interleaving and Multi-Frame Encapsulation\n   To decrease protocol
      overhead, the octet-aligned payload format,\n   described in Section 6, allows
      several speech frame-blocks to be\n   encapsulated into a single RTP packet.
      \ One of the drawbacks of this\n   approach is that in case of packet loss several
      consecutive speech\n   frame-blocks are lost, which usually causes clearly audible\n
      \  distortion in the reconstructed speech.\n   Interleaving of frame-blocks
      can improve the speech quality in such\n   cases by distributing the consecutive
      losses into a series of single\n   frame-block losses.  However, interleaving
      and bundling several\n   frame-blocks per payload will also increase end-to-end
      delay and is\n   therefore not appropriate for all types of applications.  Streaming\n
      \  applications will most likely be able to exploit interleaving to\n   improve
      speech quality in lossy transmission conditions.\n   The octet-aligned payload
      format supports the use of frame\n   interleaving as an option.  For the encoder
      (speech sender) to use\n   frame interleaving in its outbound RTP packets for
      a given session,\n   the decoder (speech receiver) needs to indicate its support
      via out-\n   of-band means (see Section 9).\n"
    title: 4.2.  Frame Interleaving and Multi-Frame Encapsulation
  title: 4.  Robustness against Packet Loss
- contents:
  - '5.  VMR-WB Voice over IP Scenarios

    '
  - contents:
    - "5.1.  IP Terminal to IP Terminal\n   The primary scenario for this payload
      format is IP end-to-end between\n   two terminals incorporating VMR-WB codec,
      as shown in Figure 2.\n   Nevertheless, this scenario can be generalized to
      an interoperable\n   interconnection between VMR-WB-enabled and AMR-WB-enabled
      IP\n   terminals using the offer-answer model described in Section 9.3.\n   This
      payload format is expected to be useful for both conversational\n   and streaming
      services.\n       +----------+                         +----------+\n       |
      \         |                         |          |\n       | TERMINAL |<----------------------->|
      TERMINAL |\n       |          |    VMR-WB/RTP/UDP/IP    |          |\n       +----------+
      \                        +----------+\n                     (or AMR-WB/RTP/UDP/IP)\n
      \         Figure 2: IP terminal to IP terminal\n   A conversational service
      puts requirements on the payload format.\n   Low delay is a very important factor,
      i.e., fewer speech frame-blocks\n   per payload packet.  Low overhead is also
      required when the payload\n   format traverses across low bandwidth links, especially
      if the\n   frequency of packets will be high.\n   Streaming service has less
      strict real-time requirements and\n   therefore can use a larger number of frame-blocks
      per packet than\n   conversational service.  This reduces the overhead from
      IP, UDP, and\n   RTP headers.  However, including several frame-blocks per packet\n
      \  makes the transmission more vulnerable to packet loss, so\n   interleaving
      may be used to reduce the effect of packet loss on\n   speech quality.  A streaming
      server handling a large number of\n   clients also needs a payload format that
      requires as few resources as\n   possible when doing packetization.\n   For
      VMR-WB-enabled IP terminals at both ends, depending on the\n   implementation,
      all modes of the VMR-WB codec can be used in this\n   scenario.  Also, both
      header-free and octet-aligned payload formats\n   (see Section 6 for details)
      can be utilized.  For the interoperable\n   interconnection between VMR-WB and
      AMR-WB, only VMR-WB mode 3 is\n   used, and all restrictions described in Section
      9.3 apply.\n"
    title: 5.1.  IP Terminal to IP Terminal
  - contents:
    - "5.2.  GW to IP Terminal\n   Another scenario occurs when VMR-WB-encoded speech
      will be\n   transmitted from a non-IP system (e.g., 3GPP2/CDMA2000 network)
      to an\n   IP terminal, and/or vice versa, as depicted in Figure 3.\n       VMR-WB
      over\n   3GPP2/CDMA2000 network\n                      +------+                        +----------+\n
      \                     |      |                        |          |\n      <-------------->|
      \ GW  |<---------------------->| TERMINAL |\n                      |      |
      \  VMR-WB/RTP/UDP/IP    |          |\n                      +------+                        +----------+\n
      \                         |\n                          |           IP network\n
      \                         |\n                   Figure 3: GW to VoIP terminal
      scenario\n   VMR-WB's capability to switch seamlessly between operational modes
      is\n   exploited in CDMA (non-IP) networks to optimize speech quality for a\n
      \  given traffic condition.  To preserve this functionality in scenarios\n   including
      a gateway to an IP network using the octet-aligned payload\n   format, a codec
      mode request (CMR) field is considered.  The gateway\n   will be responsible
      for forwarding the CMR between the non-IP and IP\n   parts in both directions.
      \ The IP terminal SHOULD follow the CMR\n   forwarded by the gateway to optimize
      speech quality going to the\n   non-IP decoder.  The mode control algorithm
      in the gateway SHOULD\n   accommodate the delay imposed by the IP network on
      the response to\n   CMR by the IP terminal.\n   The IP terminal SHOULD NOT set
      the CMR (see Section 6.3.2), but the\n   gateway can set the CMR value on frames
      going toward the encoder in\n   the non-IP part to optimize speech quality from
      that encoder to the\n   gateway and to perform congestion control on the IP
      network.\n"
    title: 5.2.  GW to IP Terminal
  - contents:
    - "5.3.  GW to GW (between VMR-WB- and AMR-WB-Enabled Terminals)\n   A third likely
      scenario is that RTP/UDP/IP is used as transport\n   between two non-IP systems,
      i.e., IP is originated and terminated in\n   gateways on both sides of the IP
      transport, as illustrated in Figure\n   4.  This is the most likely scenario
      for an interoperable\n   interconnection between 3GPP/(GSM-WCDMA)/AMR-WB and\n
      \  3GPP2/CDMA2000/VMR-WB-enabled mobile stations.  In this scenario, the\n   VMR-WB-enabled
      terminal also declares itself capable of AMR-WB with\n   restricted mode set
      as described in Section 9.3. The CMR value may be\n   set in packets received
      by the gateways on the IP network side.  The\n   gateway should forward to the
      non-IP side a CMR value that is the\n   minimum of three values: (1) the CMR
      value it receives on the IP\n   side; (2) a CMR value it may choose for congestion
      control of\n   transmission on the IP side; and (3) the CMR value based on its\n
      \  estimate of reception quality on the non-IP side.  The details of the\n   traffic
      control algorithm are left to the implementation.\n      VMR-WB over                                       AMR-WB
      over\n   3GPP2/CDMA2000 network                      3GPP/(GSM-WCDMA) network\n
      \                    +------+                  +------+\n    (AMR-WB Payload)
      |      | AMR-WB/RTP/UDP/IP|      |(AMR-WB Payload)\n   <---------------->|  GW
      \ |<---------------->|  GW  |<--------------->\n                     |      |
      \                 |      |\n                     +------+                  +------+\n
      \                       |        IP network       |\n                        |
      \                        |\n               Figure 4: GW to GW scenario (AMR-WB
      <-> VMR-WB\n                      interoperable interconnection)\n   During
      and upon initiation of an interoperable interconnection\n   between VMR-WB and
      AMR-WB, only VMR-WB mode 3 can be used.  There are\n   three Frame Types (i.e.,
      FT=0, 1, or 2; see Table 3) within this mode\n   that are compatible with AMR-WB
      codec modes 0, 1, and 2,\n   respectively.  If the AMR-WB codec is engaged in
      an interoperable\n   interconnection with VMR-WB, the active AMR-WB codec mode
      set needs\n   to be limited to 0, 1, and 2.\n"
    title: 5.3.  GW to GW (between VMR-WB- and AMR-WB-Enabled Terminals)
  - contents:
    - "5.4.  GW to GW (between Two VMR-WB-Enabled Terminals)\n   The fourth example
      VoIP scenario is composed of a RTP/UDP/IP\n   transport between two non-IP systems;
      i.e., IP is originated and\n   terminated in gateways on both sides of the IP
      transport, as\n   illustrated in Figure 5.  This is the most likely scenario
      for\n   Mobile-Station-to-Mobile-Station (MS-to-MS) Transcoder-Free (TrFO)\n
      \  interconnection between two 3GPP2/CDMA2000 terminals that both use\n   VMR-WB
      codec.\n        VMR-WB over                                     VMR-WB over\n
      \  3GPP2/CDMA2000 network                         3GPP2/CDMA2000 network\n                      +------+
      \                  +------+\n                      |      |                   |
      \     |\n        <------------>|  GW  |<----------------->|  GW  |<------------>\n
      \                     |      | VMR-WB/RTP/UDP/IP |      |\n                      +------+
      \                  +------+\n                          |         IP network
      \      |\n                          |                          |\n        Figure
      5: GW to GW scenario (a CDMA2000 MS-to-MS VoIP scenario)\n"
    title: 5.4.  GW to GW (between Two VMR-WB-Enabled Terminals)
  title: 5.  VMR-WB Voice over IP Scenarios
- contents:
  - "6.  VMR-WB RTP Payload Formats\n   For a given session, the payload format can
    be either header free or\n   octet aligned, depending on the mode of operation
    that is established\n   for the session via out-of-band means and the application.\n
    \  The header-free payload format is designed for maximum bandwidth\n   efficiency,
    simplicity, and low latency.  Only one codec data frame\n   can be sent in each
    header-free payload format packet.  None of the\n   payload header fields or table
    of contents (ToC) entries is present\n   (the same consideration is also made
    in [11]).\n   In the octet-aligned payload format, all the fields in a payload,\n
    \  including payload header, table of contents entries, and speech\n   frames
    themselves, are individually aligned to octet boundaries to\n   make implementations
    efficient.\n   Note that octet alignment of a field or payload means that the
    last\n   octet is padded with zeroes in the least significant bits to fill the\n
    \  octet.  Also note that this padding is separate from padding\n   indicated
    by the P bit in the RTP header.\n   Between the two payload formats, only the
    octet-aligned format has\n   the capability to use the interleaving to make the
    speech transport\n   robust to packet loss.\n   The VMR-WB octet-aligned payload
    format in the interoperable mode is\n   identical to that of AMR-WB (i.e., RFC
    3267).\n"
  - contents:
    - "6.1.  RTP Header Usage\n   The format of the RTP header is specified in [3].
      \ This payload\n   format uses the fields of the header in a manner consistent
      with that\n   specification.\n   The RTP timestamp corresponds to the sampling
      instant of the first\n   sample encoded for the first frame-block in the packet.
      \ The\n   timestamp clock frequency is the same as the default sampling\n   frequency
      (i.e., 16 kHz), so the timestamp unit is in samples.\n   The duration of one
      speech frame-block is 20 ms for VMR-WB.  For\n   normal wideband operation of
      VMR-WB, the input/output media sampling\n   frequency is 16 kHz, corresponding
      to 320 samples per frame from each\n   channel.  Thus, the timestamp is increased
      by 320 for VMR-WB for each\n   consecutive frame-block.\n   The VMR-WB codec
      is capable of processing speech/audio signals\n   sampled at 8 kHz.  By default,
      the VMR-WB decoder output sampling\n   frequency is 16 kHz.  Depending on the
      application, the decoder can\n   be configured to generate 8-kHz output sampling
      frequency, as well.\n   Since the VMR-WB RTP payload formats for the 8- and
      16-kHz sampled\n   media are identical and the VMR-WB decoder does not need
      a priori\n   knowledge about the encoder input sampling frequency, a fixed RTP\n
      \  clock rate of 16000 Hz is defined for VMR-WB codec.  This would allow\n   injection
      or processing of 8-kHz sampled speech/audio media without\n   having to change
      the RTP clock rate during a session.  Note that the\n   timestamp is incremented
      by 320 per frame-block for 8-kHz sampled\n   media, as well.\n   A packet may
      contain multiple frame-blocks of encoded speech or\n   comfort noise parameters.
      \ If interleaving is employed, the frame-\n   blocks encapsulated into a payload
      are picked according to the\n   interleaving rules defined in Section 6.3.2.
      Otherwise, each packet\n   covers a period of one or more contiguous 20-ms frame-block\n
      \  intervals.  In case the data from all the channels for a particular\n   frame-block
      in the period is missing (for example, at a gateway from\n   some other transport
      format), it is possible to indicate that no data\n   is present for that frame-block
      instead of breaking a multi-frame-\n   block packet into two, as explained in
      Section 6.3.2.\n   No matter which payload format is used, the RTP payload is
      always\n   made an integral number of octets long by padding with zero bits
      if\n   necessary.  If additional padding is required to bring the payload\n
      \  length to a larger multiple of octets or for some other purpose, then\n   the
      P bit in the RTP header MAY be set, and padding appended, as\n   specified in
      [3].\n   The RTP header marker bit (M) SHALL be always set to 0 if the VMR-WB\n
      \  codec operates in continuous transmission.  When operating in\n   discontinuous
      transmission (DTX), the RTP header marker bit SHALL be\n   set to 1 if the first
      frame-block carried in the packet contains a\n   speech frame, which is the
      first in a talkspurt.  For all other\n   packets, the marker bit SHALL be set
      to zero (M=0).\n   The assignment of an RTP payload type for this payload format
      is\n   outside the scope of this document and will not be specified here.\n
      \  It is expected that the RTP profile under which this payload format\n   is
      being used will assign a payload type for this encoding or specify\n   that
      the payload type is to be bound dynamically (see Section 9).\n"
    title: 6.1.  RTP Header Usage
  - contents:
    - "6.2.  Header-Free Payload Format\n   The header-free payload format is designed
      for maximum bandwidth\n   efficiency, simplicity, and minimum delay.  Only one
      speech data\n   frame presents in each header-free payload format packet.  None
      of\n   the payload header fields or ToC entries is present.  The encoding\n
      \  rate for the speech frame can be determined from the length of the\n   speech
      data frame, since there is only one speech data frame in each\n   header-free
      payload format.\n   The use of the RTP header fields for header-free payload
      format is\n   the same as the corresponding one for the octet-aligned payload\n
      \  format.  The detailed bit mapping of speech data packets permissible\n   for
      this payload format is described in Section 8 of [1].  Since the\n   header-free
      payload format is not compatible with AMR-WB RTP payload,\n   only non-interoperable
      modes of VMR-WB SHALL be used with this\n   payload format.  That is, FT=0,
      1, 2, and 9 SHALL NOT be used with\n   header-free payload format.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                      RTP Header [3]                           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n
      \  |                                                               |\n   +          ONLY
      one speech data frame           +-+-+-+-+-+-+-+-+\n   |                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Note that the mode
      of operation, using this payload format, is\n   decided by the transmitting
      (encoder) site.  The default mode of\n   operation for VMR-WB encoder is mode
      0 [1].  The mode change request\n   MAY also be sent through non-RTP means,
      which is out of the scope of\n   this specification.\n"
    title: 6.2.  Header-Free Payload Format
  - contents:
    - '6.3.  Octet-Aligned Payload Format

      '
    - contents:
      - "6.3.1.  Payload Structure\n   The complete payload consists of a payload
        header, a payload table of\n   contents, and speech data representing one
        or more speech frame-\n   blocks.  The following diagram shows the general
        payload format\n   layout:\n   +----------------+-------------------+----------------\n
        \  | Payload header | Table of contents | Speech data ...\n   +----------------+-------------------+----------------\n"
      title: 6.3.1.  Payload Structure
    - contents:
      - "6.3.2.  The Payload Header\n   In octet-aligned payload format, the payload
        header consists of a\n   4-bit CMR, 4 reserved bits, and, optionally, an 8-bit
        interleaving\n   header, as shown below.\n    0                   1\n    0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+- - - - - - - -\n   |  CMR
        \ |R|R|R|R|  ILL  |  ILP  |\n   +-+-+-+-+-+-+-+-+- - - - - - - -\n   CMR (4
        bits): This indicates a codec mode request sent to the speech\n   encoder
        at the site of the receiver of this payload.  CMR value 15\n   indicates that
        no mode request is present, and other unused values\n   are reserved for future
        use.\n   The value of the CMR field is set according to the following table:\n
        \  +-------+----------------------------------------------------------+\n
        \  | CMR   |                 VMR-WB Operating Modes                   |\n
        \  +-------+----------------------------------------------------------+\n
        \  |   0   | VMR-WB mode 3 (AMR-WB interoperable mode at 6.60 kbps)   |\n
        \  |   1   | VMR-WB mode 3 (AMR-WB interoperable mode at 8.85 kbps)   |\n
        \  |   2   | VMR-WB mode 3 (AMR-WB interoperable mode at 12.65 kbps)  |\n
        \  |   3   | VMR-WB mode 2                                            |\n
        \  |   4   | VMR-WB mode 1                                            |\n
        \  |   5   | VMR-WB mode 0                                            |\n
        \  |   6   | VMR-WB mode 2 with maximum half-rate encoding            |\n
        \  | 7-14  | (reserved)                                               |\n
        \  |  15   | No Preference (no mode request is present)               |\n
        \  +-------+----------------------------------------------------------+\n
        \    Table 2: List of valid CMR values and their associated VMR-WB\n              operating
        modes\n   R: This is a reserved bit that MUST be set to zero.  The receiver\n
        \  MUST ignore all R bits.\n   ILL (4 bits, unsigned integer): This is an
        OPTIONAL field that is\n   present only if interleaving is signaled out-of-band
        for the session.\n   ILL=L indicates to the receiver that the interleaving
        length is L+1,\n   in number of frame-blocks.\n   ILP (4 bits, unsigned integer):
        This is an OPTIONAL field that is\n   present only if interleaving is signaled.
        \ ILP MUST take a value\n   between 0 and ILL, inclusive, indicating the interleaving
        index for\n   frame-blocks in this payload in the interleave group.  If the
        value\n   of ILP is found greater than ILL, the payload SHOULD be discarded.\n
        \  ILL and ILP fields MUST be present in each packet in a session if\n   interleaving
        is signaled for the session.\n   The mode request received in the CMR field
        is valid until the next\n   CMR is received, i.e., until a newly received
        CMR value overrides the\n   previous one.  Therefore, if a terminal continuously
        wishes to\n   receive frames in the same mode, x, it needs to set CMR=x for
        all its\n   outbound payloads, and if a terminal has no preference in which
        mode\n   to receive, it SHOULD set CMR=15 in all its outbound payloads.\n
        \  If a payload is received with a CMR value that is not valid, the CMR\n
        \  MUST be ignored by the receiver.\n   In a multi-channel session, CMR SHOULD
        be interpreted by the receiver\n   of the payload as the desired encoding
        mode for all the channels in\n   the session, if the network allows.\n   There
        are two factors that affect the VMR-WB mode selection: (i) the\n   performance
        of any CDMA link connected via a gateway (e.g., in a GW\n   to IP terminal
        scenario), and (ii) the congestion state of an IP\n   network.  The CDMA link
        performance is signaled via the CMR field,\n   which is not used by IP-only
        end-points.  The IP network state is\n   monitored using, for example, RTCP.
        \ A sender needs to select the\n   operating mode to satisfy both these constraints
        (see Section 7).\n   The encoder SHOULD follow a received mode request, but
        MAY change to\n   a different mode if the network necessitates it, for example,
        to\n   control congestion.\n   The CMR field MUST be set to 15 for packets
        sent to a multicast\n   group.  The encoder in the speech sender SHOULD ignore
        mode requests\n   when sending speech to a multicast session but MAY use RTCP
        feedback\n   information as a hint that a mode change is needed.\n   If interleaving
        option is utilized, interleaving MUST be performed on\n   a frame-block basis,
        as opposed to a frame basis, in a multi-channel\n   session.\n   The following
        example illustrates the arrangement of speech frame-\n   blocks in an interleave
        group during an interleave session.  Here we\n   assume ILL=L for the interleave
        group that starts at speech frame-\n   block n.  We also assume that the first
        payload packet of the\n   interleave group is s and the number of speech frame-blocks
        carried\n   in each payload is N.  Then we will have\n    Payload s (the first
        packet of this interleave group):\n      ILL=L, ILP=0,\n    Carry frame-blocks:
        n, n+(L+1), n+2*(L+1),..., n+(N-1)*(L+1)\n    Payload s+1 (the second packet
        of this interleave group):\n      ILL=L, ILP=1,\n      Carry frame-blocks:
        n+1, n+1+(L+1), n+1+2*(L+1),..., n+1+\n      (N-1)*(L+1)\n        ...\n    Payload
        s+L (the last packet of this interleave group):\n      ILL=L, ILP=L,\n      Carry
        frame-blocks: n+L, n+L+(L+1), n+L+2*(L+1), ..., n+L+\n      (N-1)*(L+1)\n
        \  The next interleave group will start at frame-block n+N*(L+1).  There\n
        \  will be no interleaving effect unless the number of frame-blocks per\n
        \  packet (N) is at least 2.  Moreover, the number of frame-blocks per\n   payload
        (N) and the value of ILL MUST NOT be changed inside an\n   interleave group.
        \ In other words, all payloads in an interleave\n   group MUST have the same
        ILL and MUST contain the same number of\n   speech frame-blocks.\n   The sender
        of the payload MUST only apply interleaving if the\n   receiver has signaled
        its use through out-of-band means.  Since\n   interleaving will increase buffering
        requirements at the receiver,\n   the receiver uses MIME parameter \"interleaving=I\"
        to set the maximum\n   number of frame-blocks allowed in an interleaving group
        to I.\n   When performing interleaving, the sender MUST use a proper number
        of\n   frame-blocks per payload (N) and ILL so that the resulting size of
        an\n   interleave group is less than or equal to I, i.e., N*(L+1)<=I.\n   The
        following example shows the ToC of three consecutive packets,\n   each carrying
        3 frame-blocks, in an interleaved two-channel session.\n   Here, the two channels
        are left (L) and right (R), with L coming\n   before R, and the interleaving
        length is 3 (i.e., ILL=2).  This makes\n   the interleave group 9 frame-blocks
        large.\n   Packet #1\n   ---------\n   ILL=2, ILP=0:\n   +----+----+----+----+----+----+\n
        \  | 1L | 1R | 4L | 4R | 7L | 7R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n
        \     Frame     Frame     Frame\n     Block 1   Block 4   Block 7\n   Packet
        #2\n   ---------\n   ILL=2, ILP=1:\n   +----+----+----+----+----+----+\n   |
        2L | 2R | 5L | 5R | 8L | 8R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n
        \     Frame     Frame     Frame\n     Block 2   Block 5   Block 8\n   Packet
        #3\n   ---------\n   ILL=2, ILP=2:\n   +----+----+----+----+----+----+\n   |
        3L | 3R | 6L | 6R | 9L | 9R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n
        \        Frame     Frame     Frame\n        Block 3   Block 6   Block 9\n"
      title: 6.3.2.  The Payload Header
    - contents:
      - "6.3.3.  The Payload Table of Contents\n   The table of contents (ToC) in
        octet-aligned payload format consists\n   of a list of ToC entries where each
        entry corresponds to a speech\n   frame carried in the payload, i.e., when
        interleaving is used, the\n   frame-blocks in the ToC will almost never be
        placed consecutive in\n   time.  Instead, the presence and order of the frame-blocks
        in a\n   packet will follow the pattern described in 6.3.2.\n   +---------------------+\n
        \  | list of ToC entries |\n   +---------------------+\n   A ToC entry for
        the octet-aligned payload format is as follows:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n
        \  |F|  FT   |Q|P|P|\n   +-+-+-+-+-+-+-+-+\n   The table of contents (ToC)
        consists of a list of ToC entries, each\n   representing a speech frame.\n
        \  F (1 bit):   If set to 1, indicates that this frame is followed by\n                another
        speech frame in this payload; if set to 0,\n                indicates that
        this frame is the last frame in this\n                payload.\n   FT (4 bits):
        Frame type index whose value is chosen according to\n                Table
        3.\n                During the interoperable mode, FT=14 (SPEECH_LOST) and\n
        \               FT=15 (NO_DATA) are used to indicate frames that are\n                either
        lost or not being transmitted in this payload,\n                respectively.
        \ FT=14 or 15 MAY be used in the non-\n                interoperable modes
        to indicate frame erasure or blank\n                frame, respectively (see
        Section 2.1 of [1]).\n                If a payload with an invalid FT value
        is received, the\n                payload MUST be discarded.  Note that for
        ToC entries\n                with FT=14 or 15, there will be no corresponding
        speech\n                frame in the payload.\n                Depending on
        the application and the mode of operation\n                of VMR-WB, any
        combination of the permissible frame\n                types (FT) shown in
        Table 3 MAY be used.\n   Q (1 bit):   Frame quality indicator.  If set to
        0, indicates that\n                the corresponding frame is corrupted.  During
        the\n                interoperable mode, the receiver side (with AMR-WB\n
        \               codec) should set the RX_TYPE to either SPEECH_BAD or\n                SID_BAD
        depending on the frame type (FT), if Q=0.  The\n                VMR-WB encoder
        always sets Q bit to 1.  The VMR-WB\n                decoder may ignore the
        Q bit.\n   P bits:      Padding bits MUST be set to zero and MUST be ignored
        by\n                a receiver.\n   +----+--------------------------------------------+-----------------+\n
        \  | FT |                Encoding Rate               |Frame Size (Bits)|\n
        \  +----+--------------------------------------------+-----------------+\n
        \  | 0  | Interoperable Full-Rate (AMR-WB 6.60 kbps) |       132       |\n
        \  | 1  | Interoperable Full-Rate (AMR-WB 8.85 kbps) |       177       |\n
        \  | 2  | Interoperable Full-Rate (AMR-WB 12.65 kbps)|       253       |\n
        \  | 3  | Full-Rate 13.3 kbps                        |       266       |\n
        \  | 4  | Half-Rate 6.2 kbps                         |       124       |\n
        \  | 5  | Quarter-Rate 2.7 kbps                      |        54       |\n
        \  | 6  | Eighth-Rate 1.0 kbps                       |        20       |\n
        \  | 7  | (reserved)                                 |         -       |\n
        \  | 8  | (reserved)                                 |         -       |\n
        \  | 9  | CNG (AMR-WB SID)                           |        40       |\n
        \  | 10 | (reserved)                                 |         -       |\n
        \  | 11 | (reserved)                                 |         -       |\n
        \  | 12 | (reserved)                                 |         -       |\n
        \  | 13 | (reserved)                                 |         -       |\n
        \  | 14 | Erasure (AMR-WB SPEECH_LOST)               |         0       |\n
        \  | 15 | Blank (AMR-WB NO_DATA)                     |         0       |\n
        \  +----+--------------------------------------------+-----------------+\n
        \     Table 3: VMR-WB payload frame types for real-time transport\n   For
        multi-channel sessions, the ToC entries of all frames from a\n   frame-block
        are placed in the ToC in consecutive order.  Therefore,\n   with N channels
        and K speech frame-blocks in a packet, there MUST be\n   N*K entries in the
        ToC, and the first N entries will be from the\n   first frame-block, the second
        N entries will be from the second\n   frame-block, and so on.\n"
      title: 6.3.3.  The Payload Table of Contents
    - contents:
      - "6.3.4.  Speech Data\n   Speech data of a payload contains one or more speech
        frames as\n   described in the ToC of the payload.\n   Each speech frame represents
        20 ms of speech encoded in one of the\n   available encoding rates depending
        on the operation mode.  The length\n   of the speech frame is defined by the
        frame type in the FT field,\n   with the following considerations:\n   - The
        last octet of each speech frame MUST be padded with zeroes at\n     the end
        if not all bits in the octet are used.  In other words,\n     each speech
        frame MUST be octet-aligned.\n   - When multiple speech frames are present
        in the speech data, the\n     speech frames MUST be arranged one whole frame
        after another.\n   The order and numbering notation of the speech data bits
        are as\n   specified in the VMR-WB standard specification [1].\n   The payload
        begins with the payload header of one octet, or two if\n   frame interleaving
        is selected.  The payload header is followed by\n   the table of contents
        consisting of a list of one-octet ToC entries.\n   The speech data follows
        the table of contents.  For the purpose of\n   packetization, all the octets
        comprising a speech frame are appended\n   to the payload as a unit.  The
        speech frames are packed in the same\n   order as their corresponding ToC
        entries are arranged in the ToC\n   list, with the exception that if a given
        frame has a ToC entry with\n   FT=14 or 15, there will be no data octets present
        for that frame.\n"
      title: 6.3.4.  Speech Data
    - contents:
      - "6.3.5.  Payload Example: Basic Single Channel Payload Carrying Multiple\n
        \       Frames\n   The following diagram shows an octet-aligned payload format
        from a\n   single channel session that carries two VMR-WB Full-Rate frames\n
        \  (FT=3).  In the payload, a codec mode request is sent (e.g., CMR=4),\n
        \  requesting that the encoder at the receiver's side use VMR-WB mode 1.\n
        \  No interleaving is used.  Note that in the example below the last\n   octet
        in both speech frames is padded with zeros to make them octet\n   aligned.\n
        \   0                   1                   2                   3\n    0 1
        2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | CMR=4 |R|R|R|R|1|FT#1=3 |Q|P|P|0|FT#2=3 |Q|P|P|   f1(0..7)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |   f1(8..15)   |  f1(16..23)   |  ...                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  | r |P|P|P|P|P|P|  f2(0..7)     |   f2(8..15)   |  f2(16..23)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                        ...    | l |P|P|P|P|P|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     r= f1(264,265)\n      l= f2(264,265)\n"
      title: '6.3.5.  Payload Example: Basic Single Channel Payload Carrying Multiple'
    title: 6.3.  Octet-Aligned Payload Format
  - contents:
    - "6.4.  Implementation Considerations\n   An application implementing this payload
      format MUST understand all\n   the payload parameters.  Any mapping of the parameters
      to a signaling\n   protocol MUST support all parameters.  Therefore, an implementation\n
      \  of this payload format in an application using SDP is required to\n   understand
      all the payload parameters in their SDP-mapped form.  This\n   requirement ensures
      that an implementation always can decide whether\n   it is capable of communicating.\n
      \  To enable efficient interoperable interconnection with AMR-WB and to\n   ensure
      that a VMR-WB terminal appropriately declares itself as a\n   AMR-WB-capable
      terminal (see Section 9.3), it is also RECOMMENDED\n   that a VMR-WB RTP payload
      implementation understand relevant AMR-WB\n   signaling.\n   To further ensure
      interoperability between various implementations of\n   VMR-WB, implementations
      SHALL support both header-free and octet-\n   aligned payload formats.  Support
      of interleaving is optional.\n"
    - contents:
      - "6.4.1.  Decoding Validation and Provision for Lost or Late Packets\n   When
        processing a received payload packet, if the receiver finds that\n   the calculated
        payload length, based on the information of the\n   session and the values
        found in the payload header fields, does not\n   match the size of the received
        packet, the receiver SHOULD discard\n   the packet to avoid potential degradation
        of speech quality and to\n   invoke the VMR-WB built-in frame error concealment
        mechanism.\n   Therefore, invalid packets SHALL be treated as lost packets.\n
        \  Late packets (i.e., the unavailability of a packet when it is needed\n
        \  for decoding at the receiver) should be treated as lost packets.\n   Furthermore,
        if the late packet is part of an interleave group,\n   depending upon the
        availability of the other packets in that\n   interleave group, decoding must
        be resumed from the next available\n   frame (sequential order).  In other
        words, the unavailability of a\n   packet in an interleave group at a certain
        time should not invalidate\n   the other packets within that interleave group
        that may arrive later.\n"
      title: 6.4.1.  Decoding Validation and Provision for Lost or Late Packets
    title: 6.4.  Implementation Considerations
  title: 6.  VMR-WB RTP Payload Formats
- contents:
  - "7.  Congestion Control\n   The general congestion control considerations for
    transporting RTP\n   data apply to VMR-WB speech over RTP as well.  However, the
    multimode\n   capability of VMR-WB speech codec may provide an advantage over
    other\n   payload formats for controlling congestion since the bandwidth demand\n
    \  can be adjusted by selecting a different operating mode.\n   Another parameter
    that may impact the bandwidth demand for VMR-WB is\n   the number of frame-blocks
    that are encapsulated in each RTP payload.\n   Packing more frame-blocks in each
    RTP payload can reduce the number\n   of packets sent and hence the overhead from
    RTP/UDP/IP headers, at\n   the expense of increased delay.\n   If forward error
    correction (FEC) is used to alleviate the packet\n   loss, the amount of redundancy
    added by FEC will need to be regulated\n   so that the use of FEC itself does
    not cause a congestion problem.\n   Congestion control for RTP SHALL be used in
    accordance with RFC 3550\n   [3] and any applicable RTP profile, for example,
    RFC 3551 [6].  This\n   means that congestion control is required for any transmission
    over\n   unmanaged best-effort networks.\n   Congestion on the IP network is managed
    by the IP sender.  Feedback\n   about congestion SHOULD be provided to that IP
    sender through RTCP or\n   other means, and then the sender can choose to avoid
    congestion using\n   the most appropriate mechanism.  That may include selecting
    an\n   appropriate operating mode, but also includes adjusting the level of\n
    \  redundancy or number of frames per packet.\n"
  title: 7.  Congestion Control
- contents:
  - "8.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the general security considerations discussed
    in RTP\n   [3] and any applicable profile such as AVP [9] or SAVP [10].\n   As
    this format transports encoded audio, the main security issues\n   include confidentiality,
    integrity protection, and data origin\n   authentication of the audio itself.
    \ The payload format itself does\n   not have any built-in security mechanisms.
    \ Any suitable external\n   mechanisms, such as SRTP [10], MAY be used.\n   This
    payload format and the VMR-WB decoder do not exhibit any\n   significant non-uniformity
    in the receiver-side computational\n   complexity for packet processing; thus,
    they are unlikely to pose a\n   denial-of-service threat due to the receipt of
    pathological data.\n"
  - contents:
    - "8.1.  Confidentiality\n   In order to ensure confidentiality of the encoded
      audio, all audio\n   data bits MUST be encrypted.  There is less need to encrypt
      the\n   payload header or the table of contents since they only carry\n   information
      about the frame type.  This information could also be\n   useful to a third
      party, for example, for quality monitoring.\n   The use of interleaving in conjunction
      with encryption can have a\n   negative impact on the confidentiality for a
      short period of time.\n   Consider the following packets (in brackets) containing
      frame numbers\n   as indicated: {10, 14, 18}, {13, 17, 21}, {16, 20, 24} (a
      typical\n   continuous diagonal interleaving pattern).  The originator wishes
      to\n   deny some participants the ability to hear material starting at time\n
      \  16.  Simply changing the key on the packet with the timestamp at or\n   after
      16, and denying the new key to those participants, does not\n   achieve this;
      frames 17, 18, and 21 have been supplied in prior\n   packets under the prior
      key, and error concealment may make the audio\n   intelligible at least as far
      as frame 18 or 19, and possibly further.\n"
    title: 8.1.  Confidentiality
  - contents:
    - "8.2.  Authentication and Integrity\n   To authenticate the sender of the speech,
      an external mechanism MUST\n   be used.  It is RECOMMENDED that such a mechanism
      protects both the\n   complete RTP header and the payload (speech and data bits).\n
      \  Data tampering by a man-in-the-middle attacker could replace audio\n   content
      and also result in erroneous depacketization/decoding that\n   could lower the
      audio quality.  For example, tampering with the CMR\n   field may result in
      speech of a different quality than desired.\n"
    title: 8.2.  Authentication and Integrity
  title: 8.  Security Considerations
- contents:
  - "9.  Payload Format Parameters\n   This section defines the parameters that may
    be used to select\n   optional features in the VMR-WB RTP payload formats.\n   The
    parameters are defined here as part of the MIME subtype\n   registration for the
    VMR-WB speech codec.  A mapping of the\n   parameters into the Session Description
    Protocol (SDP) [5] is also\n   provided for those applications that use SDP.  In
    control protocols\n   that do not use MIME or SDP, the media type parameters must
    be mapped\n   to the appropriate format used with that control protocol.\n"
  - contents:
    - "9.1.  VMR-WB RTP Payload MIME Registration\n   The MIME subtype for the Variable-Rate
      Multimode Wideband (VMR-WB)\n   audio codec is allocated from the IETF tree
      since VMR-WB is expected\n   to be a widely used speech codec in multimedia
      streaming and\n   messaging as well as in VoIP applications.  This MIME registration\n
      \  only covers real-time transfers via RTP.\n   Note, the receiver MUST ignore
      any unspecified parameter and use the\n   default values instead.  Also note
      that if no input parameters are\n   defined, the default values will be used.\n
      \    Media Type name:      audio\n     Media subtype name:   VMR-WB\n     Required
      parameters:  none\n   Furthermore, if the interleaving parameter is present,
      the parameter\n   \"octet-align=1\" MUST also be present.\n"
    - "OPTIONAL parameters:\n  mode-set:       Requested VMR-WB operating mode set.
      \ Restricts\n                  the active operating modes to a subset of all\n
      \                 modes.  Possible values are a comma-separated\n                  list
      of integer values.  Currently, this list\n                  includes modes 0,
      1, 2, and 3 [1], but MAY be\n                  extended in the future.  If such
      mode-set is\n                  specified during session initiation, the encoder\n
      \                 MUST NOT use modes outside of the subset.  If not\n                  present,
      all operating modes in the set 0 to 3 are\n                  allowed for the
      session.\n  channels:       The number of audio channels.  The possible\n                  values
      and their respective channel order\n                  is specified in Section
      4.1 in [6].  If\n                  omitted, it has the default value of 1.\n
      \ octet-align:    RTP payload format; permissible values are 0 and\n                  1.
      \ If 1, octet-aligned payload format SHALL be\n                  used.  If 0
      or if not present, header-free payload\n                  format is employed
      (default).\n  maxptime:       See RFC 3267 [4]\n  interleaving:   Indicates
      that frame-block level\n                  interleaving SHALL be used for the
      session.\n                  Its value defines the maximum number of\n                  frame-blocks
      allowed in an interleaving\n                  group (see Section 6.3.1).  If
      this\n                  parameter is not present, interleaving\n                  SHALL
      NOT be used.  The presence of this\n                  parameter also implies
      automatically that\n                  octet-aligned operation SHALL be used.\n
      \ ptime:          See RFC2327 [5].  It SHALL be at least one\n                  frame
      size for VMR-WB.\n  dtx:            Permissible values are 0 and 1.  The default\n
      \                 is 0 (i.e., No DTX) where VMR-WB normally\n                  operates
      as a continuous variable-rate\n                  codec.  If dtx=1, the VMR-WB
      codec will\n                  operate in discontinuous transmission mode\n                  where
      silence descriptor (SID) frames are\n                  sent by the VMR-WB encoder
      during silence\n                  intervals with an adjustable update\n                  frequency.
      \ The selection of the SID update-rate\n                  depends on the implementation
      and\n                  other network considerations that are\n                  beyond
      the scope of this specification.\n   Encoding considerations:\n          This
      type is only defined for transfer of VMR-WB-encoded data\n          via RTP
      (RFC 3550) using the payload formats specified in\n          Section 6 of RFC
      4348.\n   Security considerations:\n          See Section 8 of RFC 4348.\n   Public
      specification:\n          The VMR-WB speech codec is specified in\n          3GPP2
      specifications C.S0052-0 version 1.0.\n          Transfer methods are specified
      in RFC 4348.\n   Additional information:\n   Person & email address to contact
      for further information:\n          Sassan Ahmadi, Ph.D.        sassan.ahmadi@ieee.org\n
      \  Intended usage: COMMON.\n     It is expected that many VoIP, multimedia messaging
      and\n     streaming applications (as well as mobile applications)\n     will
      use this type.\n   Author/Change controller:\n     IETF Audio/Video Transport
      working group delegated from the IESG\n"
    title: 9.1.  VMR-WB RTP Payload MIME Registration
  - contents:
    - "9.2.  Mapping MIME Parameters into SDP\n   The information carried in the MIME
      media type specification has a\n   specific mapping to fields in the Session
      Description Protocol (SDP)\n   [5], which is commonly used to describe RTP sessions.
      \ When SDP is\n   used to specify sessions employing the VMR-WB codec, the mapping
      is\n   as follows:\n      - The media type (\"audio\") goes in SDP \"m=\" as
      the media name.\n      - The media subtype (payload format name) goes in SDP
      \"a=rtpmap\"\n        as the encoding name.  The RTP clock rate in \"a=rtpmap\"
      MUST be\n        16000 for VMR-WB.\n      - The parameter \"channels\" (number
      of channels) MUST be either\n        explicitly set to N or omitted, implying
      a default value of 1.\n        The values of N that are allowed is specified
      in Section 4.1 in\n        [6].  The parameter \"channels\", if present, is
      specified\n        subsequent to the MIME subtype and RTP clock rate as an encoding\n
      \       parameter in the \"a=rtpmap\" attribute.\n      - The parameters \"ptime\"
      and \"maxptime\" go in the SDP \"a=ptime\"\n        and\n           \"a=maxptime\"
      attributes, respectively.\n      - Any remaining parameters go in the SDP \"a=fmtp\"
      attribute by\n        copying them directly from the MIME media type string
      as a\n        semicolon-separated list of parameter=value pairs.\n   Some examples
      of SDP session descriptions utilizing VMR-WB encodings\n   follow.\n   Example
      of usage of VMR-WB in a possible VoIP scenario (wideband\n   audio):\n      m=audio
      49120 RTP/AVP 98\n      a=rtpmap:98 VMR-WB/16000\n      a=fmtp:98 octet-align=1\n
      \  Example of usage of VMR-WB in a possible streaming scenario (two\n   channel
      stereo):\n      m=audio 49120 RTP/AVP 99\n      a=rtpmap:99 VMR-WB/16000/2\n
      \     a=fmtp:99 octet-align=1; interleaving=30\n      a=maxptime:100\n"
    title: 9.2.  Mapping MIME Parameters into SDP
  - contents:
    - "9.3.  Offer-Answer Model Considerations\n   To achieve good interoperability
      for the VMR-WB RTP payload in an\n   Offer-Answer negotiation usage in SDP [13],
      the following\n   considerations are made:\n   - The rate, channel, and payload
      configuration parameters (octet-\n     align and interleaving) SHALL be used
      symmetrically, i.e., offer\n     and answer must use the same values.  The maximum
      size of the\n     interleaving buffer is, however, declarative, and each agent\n
      \    specifies the value it supports to receive for recvonly and\n     sendrecv
      streams.  For sendonly streams, the value indicates what\n     the agent desires
      to use.\n   - To maintain interoperability among all implementations of VMR-WB\n
      \    that may or may not support all the codec's modes of operation, the\n     operational
      modes that are supported by an implementation MAY be\n     identified at session
      initiation.  The mode-set parameter is\n     declarative, and only operating
      modes that have been indicated to\n     be supported by both ends SHALL be used.
      \ If the answerer is not\n     supporting any of the operating modes provided
      in the offer, the\n     complete payload type declaration SHOULD be rejected
      by removing it\n     from the answer.\n   - The remaining parameters are all
      declarative; i.e., for sendonly\n     streams they provide parameters that the
      agent desires to use,\n     while for recvonly and sendrecv streams they declare
      the parameters\n     that it accepts to receive.  The dtx parameter is used
      to indicate\n     DTX support and capability, while the media sender is only\n
      \    RECOMMENDED to send using the DTX in these cases.  If DTX is not\n     supported
      by the media sender, it will send media without DTX; this\n     will not affect
      interoperability only the resource consumption.\n   - Both header-free and octet-aligned
      payload format configurations\n     MAY be offered by a VMR-WB enabled terminal.
      \ However, for an\n     interoperable interconnection with AMR-WB, only octet-aligned\n
      \  - The parameters \"maxptime\" and \"ptime\" should in most cases not\n     affect
      the interoperability; however, the setting of the parameters\n     can affect
      the performance of the application.\n   - To maintain interoperability with
      AMR-WB in cases where negotiation\n     is possible using the VMR-WB interoperable
      mode, a VMR-WB-enabled\n     terminal SHOULD also declare itself capable of
      AMR-WB with limited\n     mode set (i.e., only AMR-WB codec modes 0, 1, and
      2 are allowed)\n     and of octet-align mode of operation.\n   Example:\n                m=audio
      49120 RTP/AVP 98 99\n                a=rtpmap:98 VMR-WB/16000\n                a=rtpmap:99
      AMR-WB/16000\n                a=fmtp:99 octet-align=1; mode-set=0,1,2\n   An
      example of offer-answer exchange for the VoIP scenario described\n   in Section
      5.3 is as follows:\n       CDMA2000 terminal -> WCDMA terminal Offer:\n                m=audio
      49120 RTP/AVP 98 97\n                a=rtpmap:98 VMR-WB/16000\n                a=fmtp:98
      octet-align=1\n                a=rtpmap:97 AMR-WB/16000\n                a=fmtp:97
      mode-set=0,1,2; octet-align=1\n       WCDMA terminal -> CDMA2000 terminal Answer:\n
      \               m=audio 49120 RTP/AVP 97\n                a=rtpmap:97 AMR-WB/16000\n
      \               a=fmtp:97 mode-set=0,1,2; octet-align=1;\n   For declarative
      use of SDP such as in SAP [14] and RTSP [15], all\n   parameters are declarative
      and provide the parameters that SHALL be\n   used when receiving and/or sending
      the configured stream.\n"
    title: 9.3.  Offer-Answer Model Considerations
  title: 9.  Payload Format Parameters
- contents:
  - "10.  IANA Considerations\n   The IANA has registered one new MIME subtype (audio/VMR-WB);
    see\n   Section 9.\n"
  title: 10.  IANA Considerations
- contents:
  - "11.  Acknowledgements\n   The author would like to thank Redwan Salami of VoiceAge
    Corporation,\n   Ari Lakaniemi of Nokia Inc., and IETF/AVT chairs Colin Perkins
    and\n   Magnus Westerlund for their technical comments to improve this\n   document.\n
    \  Also, the author would like to acknowledge that some parts of RFC\n   3267
    [4] and RFC 3558 [11] have been used in this document.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [1]  3GPP2 C.S0052-0 v1.0 \"Source-Controlled
      Variable-Rate Multimode\n        Wideband Speech Codec (VMR-WB) Service Option
      62 for Spread\n        Spectrum Systems\", 3GPP2 Technical Specification, July
      2004.\n   [2]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n
      \       Levels\", BCP 14, RFC 2119, March 1997.\n   [3]  Schulzrinne, H.,  Casner,
      S., Frederick, R., and V. Jacobson,\n        \"RTP: A Transport Protocol for
      Real-Time Applications\", STD 64,\n        RFC 3550, July 2003.\n   [4]  Sjoberg,
      J., Westerlund, M., Lakaniemi, A., and Q. Xie, \"Real-\n        Time Transport
      Protocol (RTP) Payload Format and File Storage\n        Format for the Adaptive
      Multi-Rate (AMR) and Adaptive Multi-Rate\n        Wideband (AMR-WB) Audio Codecs\",
      RFC 3267, June 2002.\n   [5]  Handley, M. and V. Jacobson, \"SDP: Session Description\n
      \       Protocol\", RFC 2327, April 1998.\n   [6]  Schulzrinne, H. and S. Casner,
      \"RTP Profile for Audio and Video\n        Conferences with Minimal Control\",
      STD 65, RFC 3551, July 2003.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [7]  3GPP2 C.S0050-A v1.0 \"3GPP2 File Formats
      for Multimedia\n        Services\", 3GPP2 Technical Specification, September
      2005.\n   [8]  Rosenberg, J. and H. Schulzrinne, \"An RTP Payload Format for\n
      \       Generic Forward Error Correction\", RFC 2733, December 1999.\n   [9]
      \ Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n        Norrman,
      \"The Secure Real-time Transport Protocol (SRTP)\", RFC\n        3711, March
      2004.\n   [10] Perkins, C., Kouvelas, I., Hodson, O., Hardman, V., Handley,
      M.,\n        Bolot, J., Vega-Garcia, A., and S. Fosse-Parisis, \"RTP Payload\n
      \       for Redundant Audio Data\", RFC 2198, September 1997.\n   [11] Li, A.,
      \"RTP Payload Format for Enhanced Variable Rate Codecs\n        (EVRC) and Selectable
      Mode Vocoders (SMV)\", RFC 3558, July 2003.\n   [12] 3GPP TS 26.193 \"AMR Wideband
      Speech Codec; Source Controlled\n        Rate operation\", version 5.0.0 (2001-03),
      3rd Generation\n        Partnership Project (3GPP).\n   [13] Rosenberg, J. and
      H. Schulzrinne, \"An Offer/Answer Model with\n        Session Description Protocol
      (SDP)\", RFC 3264, June 2002.\n   [14] Handley, M., Perkins, C., and E. Whelan,
      \"Session Announcement\n        Protocol\", RFC 2974, October 2000.\n   [15]
      Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time Streaming\n        Protocol
      (RTSP)\", RFC 2326, April 1998.\n   Any 3GPP2 document can be downloaded from
      the 3GPP2 web server,\n   \"http://www.3gpp2.org/\", see specifications.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Author's Address\n   Dr. Sassan Ahmadi\n   EMail: sassan.ahmadi@ieee.org\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
