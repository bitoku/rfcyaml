Abstract Customers are frequently required to enter substantial amounts of information at an Internet merchant site in order to complete a purchase or other transaction, especially the first time they go there.
A standard set of information fields is defined as the first version of an Electronic Commerce Modeling Language (ECML) so that this task can be more easily automated, for example by wallet software that could fill in fields.
Even for the manual data entry case, customers will be less confused by varying merchant sites if a substantial number adopt these standard fields.
In addition, some fields are defined for merchant to consumer communication.
Introduction Today, numerous merchants are successfully conducting business on the Internet using HTML based forms.
The data formats used in these forms vary considerably from one merchant to another.
End users find the diversity confusing and the process of manually filling in these forms to be tedious.
The result is that many merchant forms, reportedly around two thirds, are abandoned during the fill in process.
Software tools called electronic wallets can help this situation.
A digital wallet is an application or service that assists consumers in conducting online transactions by allowing them to store billing, shipping, payment, and preference information and to use this information to automatically complete merchant interactions.
This greatly simplifies the check out process and minimizes the need for a consumer to think about and complete a merchant's form every time.
Digital wallets that fill forms have been successfully built into browsers, as proxy servers, as helper applications to browsers, as stand alone applications, as browser plug ins, and as server based applications.
But the proliferation of electronic wallets has been hampered by the lack of standards.
ECML (Electronic Commerce Modeling Language, <www.ecml.org>) provides a set of simple guidelines for web merchants that will enable electronic wallets from multiple vendors to fill in their web forms.
The end result is that more consumers will find shopping on the web to be easy and compelling.
Version 1.1 has been enhanced over Version 1.0 [RFC 2706] as described in the appendix to this document.
These enhancements include support for communication from the merchant to the wallet.
This information can be used by the wallet to present transaction information and possibly signed receipts.
The format of the signatures for receipts is not specified in this document.
Multiple wallets and multiple merchants interoperably support ECML.
This is an open standard.
ECML is designed to be simple.
Neither Version 1.0 nor Version 1.1 of the project add new technology to the web.
A merchant can adopt ECML and gain the support of these multiple Wallets by making very simple changes to their site.
Use of ECML requires no license.
The set of fields documented herein was developed by the ECML Alliance (www.ecml.org) which now includes, in alphabetic order, the fifteen Steering Committee members listed below and numerous General Members some of whom are listed on the ECML web site.
Visa International (www.visa.com) 1.2 Relationship to Other Standards
The ECML fields were initially derived from and are consistent with the W3C P3P base data schema at <
ECML Version 1.1 is not a replacement or alternative to SSL/TLS [RFC 2246], SET [SET], XML [XML], or IOTP [RFC 2801].
These are important standards that provide functionality such as non repudiatable transactions, automatable payment scheme selection, and smart card support.
ECML may be used with any payment mechanism.
It simply allows a merchant to publish consistent simple web forms.
Information on the use of the ECML fields with W3C P3P protocol is available at <http://www.w3.org/TR/P3P for ecommerce> which also includes some proposed extension fields.
These extension fields may be included in a future version of ECML.
1.3 Areas Deferred to Future Versions Considerations for business purchasing cards,
non card payment mechanisms, wallet activation, privacy related mechanisms, additional payment mechanisms, currency exchange, and any sort of "negotiation" were among the areas deferred to consideration in future versions.
Hidden or other special fields were minimized.
The ECML Standard is primarily the definition and naming of fields.
These fields can be encoded in a variety of syntaxes and protocols.
Section 2.1 below lists and describes the fields, Section 2.2 gives additional notes on HTML usage of the fields, and Section 2.3 provides an XML DTD for use with the fields.
2.1 Field List and Descriptions
The fields are listed below along with the minimum data entry size to allow.
Appropriate data transmission mechanisms may use this to request and send aggregates, such as Ecom Payment Card ExpDate to encompass all the date components or Ecom ShipTo to encompass all the ship to components that the consumer is willing to provide.
The labeling, marshalling, unmarshalling of the components of such aggregates depends on the data transfer protocol used.
2.1.1 Field List IMPORTANT NOTE: "MIN" in the table below is the MINIMUM DATA SIZE TO ALLOW FOR ON DATA ENTRY.
It is NOT the minimum size for valid contents of the field and merchant software should, in most cases, be prepared to receive a longer or shorter value.
Merchant dealing with areas where, for example, the state/province name or phone number is longer than the "Min" given below must obviously permit longer data entry.
In some cases, however, there is a maximum size that makes sense and where this is the case, it is documented in a Note for the field.
Ecom ShipTo Postal Name Middle
15  ( 2) ship to last name
Ecom ShipTo Postal Street Line1
( 4) ship to street line2
Ecom ShipTo Telecom Phone Number    10  ( 8) ship to email
Ecom BillTo Postal Name Middle
15  ( 2) bill to last name
20  ( 4) bill to street
( 5) bill to zip/postal code
Ecom BillTo Telecom Phone Number    10
Ecom ReceiptTo Postal Name Prefix    4  ( 1) receipt to first name
First    15 receipt to middle name
15  ( 2) receipt to last name
20  ( 4) receipt to street line2
20  ( 4) receipt to street line3
ReceiptTo Postal Street Line3  20  ( 4) receipt to city
( 6) receipt to country
2  ( 7) receipt to phone
Ecom ReceiptTo Telecom Phone Number 10  ( 8) receipt to email
(14) card expire date month
Ecom Payment Card ExpDate Month
(15) card expire date year
(25) transaction URL inquiry   Ecom Transaction Inquiry
MIN" in the table above is the MINIMUM DATA SIZE TO ALLOW FOR ON DATA ENTRY.
It is NOT the minimum size for valid contents of the field and merchant software should, in most cases, be prepared to receive a longer or shorter value.
Merchant dealing with areas where, for example, the state/province name or phone number is longer than the "Min" given below must obviously permit longer data entry.
In some cases, however, there is a maximum size that makes sense and this is documented in a Note for the field.
2.1.2 Field Foot Notes ( 1)
For example: Mr., Mrs., Ms., Dr.
This field is commonly not used.
( 2) May also be used for middle initial.
For example: Ph.D., Jr. (Junior), 3rd, Esq.
This field is commonly not used.
( 4) Address lines must be filled in the order line1, then line2, and last line3.
( 5) 2 characters are the minimum for the US and Canada, other countries may require longer fields.
For the US use 2 character US Postal state abbreviation.
( 6) Minimum field lengths for Postal Code will vary based on international market served.
Use 5 character or 5 4 ZIP for the US and 6 character postal code for Canada.
The size given, 14, is believed to be the maximum required anywhere in the world.
( 7) Use [ISO 3166] standard two letter codes.
See <http://www.din.de/gremien/nas/nabd/iso3166ma/index.html> for country names.
( 8) 10 digits are the minimum for numbers local to the North American Numbering Plan (<http://www.nanpa.com
>: US, Canada and a number of smaller Caribbean and Pacific nations (but not Cuba)), other countries may require longer fields.
Telephone numbers are complicated by differing international access codes, variant punctuation of area/city codes within countries, confusion caused by the fact that the international access code in the NANP region is usually the same as the "country code" for that area (1), etc.
It will probably be necessary to use heuristics or human examination based on the telephone number and addresses given to figure out how to actually call a customer.
It is recommend that an "x" be placed before extension numbers.
The name of the cardholder.
Diners Club DISC   Discover JCB
VISA   Visa (12) Includes the check digit at end but no spaces or hyphens [ISO 7812].
The Min given, 19, is the longest number permitted under the ISO standard.
An additional cardholder verification number printed on the card (but not embossed or recorded on the magnetic stripe) such as American Express' CIV, MasterCard's CVC2, and Visa's CVV2 values.
The day of the month.
A leading zero is ignored so, for example, 07 is valid for the seventh day of the month.
The month of the year.
Jan 1, Feb 2, March 3, etc.
A leading zero is ignored so, for example, 07 is valid for July.
A space separated list of protocols available in connection with the specified card.
Initial list of case insensitive tokens: none set setcert iotp echeck simcard phoneid "Set" indicates usable with SET protocol (i.e., is in a SET wallet) but does not have a SET certificate.
"Setcert" indicates same but does have a set certificate.
"iotp" indicates the IOTP protocol [RFC 2801] is supported at the customer.
"echeck" indicates that the eCheck protocol [eCheck] is supported at the customer.
"simcard" indicates use the transaction instrument built into a Cellphone subscriber for identification.
"phoneid" indicates use the transaction instrument of a phone bill instrument.
"None" indicates that automatic field fill is operating but there is no SET wallet or the card is not entered in any SET wallet.
A unique order ID generated by the consumer software.
The user ID and password fields are used in cases where the user has a pre established account with the merchant.
(20) URI indicating version of this set of fields.
Equal to "http://www.ecml.org/version/1.1" for this version.
A string to identify the source and version of the form fill software that is acting on behalf of the user.
Should contain company and/or product name and version.
Example "Wallets Inc., SuperFill, v42.7".
A flag to indicate that this web page/aggregate is the final one for this transaction.
(23) Merchant domain name such as www.merchant.example.
This is usually a hidden field.
(24) Gateway transaction processor who is actually accepting the payment on behalf of the merchant in home domain such as www.processor.example.
This is usually a hidden field.
A Transaction identification string whose format is specific to the processor.
This is usually a hidden field.
A URL that can be invoke to inquire about the transaction.
This is usually a hidden field.
The amount of the transaction in ISO currency format.
This is two integer numbers with a period in between but no other currency marks (such as a $ dollar sign).
This is usually a hidden field.
This is the three letter ISO currency code.
For example, for US dollars it is USD.
This is usually a hidden field.
This is usually a hidden field.
The type of the transaction (either debit or credit) if known.
This is usually a hidden field.
The signature of the encoded certificate.
This is usually a hidden field.
The Receipt To fields are used when the Bill To entity, location, or address and the Receipto entity, location, or address are different.
For example, when using some forms of Corporate Purchasing Cards or Agent Purchasing Cards, the individual card holder would be in the Receipt To fields and the corporate or other owner would be in the Bill To fields.
The normal use of ECML in HTML is as a form with input field names identical to those given in section 2.1 above.
> tags with type text, hidden, and password must be supported as must <SELECT> tags.
Internationalization in HTML is limited.
The information available with the HTML form Method as to character set and language SHOULD be used.
An ECML 1.1 XML DTD
Below is an XML DTD that can be used for the XML encoding of ECML v1.1 Fields.
For internationalization of [XML] ECML, use the general XML character encoding provisions, which mandate support of UTF 8 and UTF 16 and permit support of other character sets, and the xml:
lang attribute which may be used to specify language information.
Name   Company   Street   City   StateProv )
ELEMENT Telecom ( #PCDATA   Phone )
ELEMENT Online ( #PCDATA   Email )
ELEMENT User ( #PCDATA   UserID   Password )
ELEMENT Transaction ( #PCDATA   TransactionID
Using The Fields To conform to this document, the field names must be structured and named as close to the structure and naming listed in Section 2 above as permitted by the transaction protocol in use.
Note: this does not impose any restriction on the user visible labeling of fields, just on their names as used in communication.
3.1 Presentation of the Fields There is no necessary implication as to the order or manner of presentation.
Some merchants may wish to ask for more information, some less by omitting fields.
Some merchants may ask for the information they want in one interaction or web page, others may ask for parts of the information at different times in multiple interactions or different web pages.
For example, it is common to ask for "ship to" information earlier, so shipping cost can be computed, before the payment method information.
Some merchants may require that all the information they request be provided while other make much information optional.
There is no way with Version 1.0 or 1.1 of ECML to indicate what fields the merchant considers mandatory.
From the point of view of customer software, all fields are optional to complete.
However, the merchant may give an error or re present a request for information if some field it requires is not completed, just as it may
if a field is completed in a manner it considers erroneous.
It is entirely up to the merchant when and which, if any, of the merchant to consumer fields it presents.
3.2 Methods and Flow of Setting the Fields There are a variety of methods of communication possible between the customer and the merchant by which the merchant can indicate what fields they want that the consumer can provide.
Probably the easiest to use for currently deployed software is as fields in an [HTML] form (see section 2.2).
Other possibilities are to use the IOTP Authenticate transaction [RFC 2801], an [XML] exchange, or proprietary protocols.
User action or the appearance of the Ecom SchemaVersion field are examples of triggers that could be used to initiate a facility capable of filling in fields.
Because some wallets may require user activation, there should be at least one user visible Ecom field on every page with any Ecom fields present that are to be filled in.
It is also REQUIRED that the Ecom SchemaVersion field, which is usually a hidden field, be included on every web page that has any Ecom fields.
Because web pages can load very slowly, it may not be clear to an automated field fill in function when it is finished filling in fields on a web page.
For this reason, it is recommended that the Ecom SchemaVersion field be the last Ecom field on a web page.
Merchant requests for information can extend over several interactions or web pages.
Without further provision, a facility could either require re starting on each page or possibly violate or appear to violate privacy by continuing to fill in fields for pages beyond with end of the transaction with a particular merchant.
For this reason the Ecom TransactionComplete field, which is normally hidden, is provided.
It is recommended that it appear on the last interaction or web page involved in a transaction, just before an Ecom SchemaVersion field, so that multi web page automated field fill in logic could know when to stop if it chooses to check for this field.
An example HTML form might be as follows:
> eCom Fields Example </title> </HEAD> <BODY> <FORM action "http://ecom.example.com" method "POST"
Your name on the card <INPUT type "text" name "Ecom Payment Card Name" SIZE 40
The card number <INPUT type "text" name "Ecom Payment Card Number" SIZE 19
<INPUT type "text" name "Ecom Payment Card ExpDate Month" SIZE 2
> <INPUT type "text" name "Ecom Payment Card ExpDate Year" SIZE 4
> <INPUT type "hidden" name "Ecom Payment Card Protocol"
> <INPUT type "hidden" name "Ecom SchemaVersion" value "http://www.ecml.org/version/1.1"
After all of the pages are submitted, the merchant will reply with a confirmation page informing both the user and the wallet that the transaction is complete.
> Thank you for your order.
It will be shipped in several days.
<INPUT type "hidden" name "Ecom Merchant" value "www.merchant.example"> <INPUT type "hidden" name  "Ecom Processor" value "www.processor.example">
<INPUT type "hidden" name "Ecom Transaction ID" value "EF123456"> <INPUT type "hidden" name "Ecom Transaction Inquiry" value "http://www.merchant.example/cgi
> <INPUT type "hidden" name "Ecom Transaction Amount" value "789.00"> <INPUT type "hidden" name "Ecom Transaction Currency" value "USD"
> <INPUT type "hidden" name "Ecom Transaction Date" value "
July 14 2000"> <INPUT type "hidden" name "Ecom Transaction Type" value "credit"> <INPUT type "hidden" name "Ecom Transaction Signature" value "ig6rh4;;20dfna00s34hj10s s
45j30 22z92l frwds 85"> <INPUT type "hidden" name "Ecom TransactionComplete"
> <INPUT type "hidden" name "Ecom SchemaVersion" value "http://www.ecml.org/version/1.1"
The information called for by many of these fields is sensitive and should be secured if being sent over the public Internet or through other channels where it can be observed.
Mechanisms for such protection are not specified herein but channel encryption such as TLS/SSL [RFC 2246] or IPSec [RFC 2411] would be appropriate in many cases.
User control over release of such information is needed to protect the user's privacy.
A wallet that is installed on a shared or public terminal should be configurable such that the ECML memory of address and other contact information is fully disabled.
This is vital to protect the privacy of library patrons, students, and customers using public terminals, and children who might, for example, use a form on a public terminal without realizing that their information is being stored.
When contact information is stored, the operator should have an option to protect the information with a password, without which the information might be unavailable, even to someone who has access to the file(s) in which it is being stored.
This would also allow for a convenient method for multiple people to use their own ECML information from the same browser.
Any multi web page or other multi aggregate field fill in or data provision mechanism should check for the Ecom TransactionComplete field and cease automated fill when it is encountered until fill is further authorized.
Changes from ECML 1.0 ECML 1.0 is documented in [RFC 2706].
(1) Fields added for consumer to merchant transmission as listed below.
Adding fields is a backward compatible change.
Ecom User ID Ecom User Password Ecom WalletID
(2) Change Ecom SchemaVersion field value to "http://www.ecml.org/version/1.1".
(3) Addition of XML DTD.
(4) Add "iotp", "echeck", "simcard", and "phoneid" as allowed tokens in Ecom Payment Card Protocol.
(5) Specify that a leading zero is permitted in day and month number fields.
(6) Change "Security Considerations" section to "Security and Privacy Considerations" and add material.
(7) Add internationalization material to HTML and XML subsections of Section 2.
(8) Enumerate HTML form elements that must be supported (Section 2.2) including SELECT.
(9) Add more credit card brand codes.
(10) Add fields for merchant to consumer transmissions as follows:
Ecom Merchant Ecom Processor Ecom Transaction
