- title: __initial_text__
  contents:
  - ''
- title: 'Subject:  Connectionless Data Transmission Survey/Tutorial'
  contents:
  - 'Subject:  Connectionless Data Transmission Survey/Tutorial

    '
- title: 'From:     A. Lyman Chapin'
  contents:
  - 'From:     A. Lyman Chapin

    '
- title: The attached paper on connectionless  data  transmission  is  being
  contents:
  - 'The attached paper on connectionless  data  transmission  is  being

    '
- title: distributed to the members of a number of US organizations that are
  contents:
  - 'distributed to the members of a number of US organizations that are

    '
- title: involved or interested in the  development  of  international  data
  contents:
  - 'involved or interested in the  development  of  international  data

    '
- title: communication standards.  Following a review period ending  Septem-
  contents:
  - 'communication standards.  Following a review period ending  Septem-

    '
- title: ber 1, 1981, a revised version of the paper  -  incorporating  com-
  contents:
  - 'ber 1, 1981, a revised version of the paper  -  incorporating  com-

    '
- title: ments and suggestions received from reviewers - will be  considered
  contents:
  - 'ments and suggestions received from reviewers - will be  considered

    '
- title: by the  American  National  Standards  Institute  (ANSI)  committee
  contents:
  - 'by the  American  National  Standards  Institute  (ANSI)  committee

    '
- title: responsible for Open Systems Interconnection (OSI) Reference  Model
  contents:
  - 'responsible for Open Systems Interconnection (OSI) Reference  Model

    '
- title: issues (ANSC X3T5).  If approved, it will then be presented to  the
  contents:
  - 'issues (ANSC X3T5).  If approved, it will then be presented to  the

    '
- title: relevant  International  Organization  for  Standardization   (ISO)
  contents:
  - 'relevant  International  Organization  for  Standardization   (ISO)

    '
- title: groups as the foundation of a US position recommending  the  incor-
  contents:
  - 'groups as the foundation of a US position recommending  the  incor-

    '
- title: poration of connectionless data transmission by the Reference Model
  contents:
  - 'poration of connectionless data transmission by the Reference Model

    '
- title: and related OSI service and protocol standards.
  contents:
  - 'and related OSI service and protocol standards.

    '
- title: Your comments on the paper, as well as an indication of the  extent
  contents:
  - 'Your comments on the paper, as well as an indication of the  extent

    '
- title: to which the concepts and services of connectionless data transmis-
  contents:
  - 'to which the concepts and services of connectionless data transmis-

    '
- title: sion are important to you and/or your organization,  will  help  to
  contents:
  - 'sion are important to you and/or your organization,  will  help  to

    '
- title: ensure that the final version reflects a true  US  position.   They
  contents:
  - 'ensure that the final version reflects a true  US  position.   They

    '
- title: 'should be directed to the author at the following address:'
  contents:
  - 'should be directed to the author at the following address:

    '
- title: A. Lyman Chapin
  contents:
  - 'A. Lyman Chapin

    '
- title: Data General Corporation MS E111
  contents:
  - 'Data General Corporation MS E111

    '
- title: 4400 Computer Drive
  contents:
  - "4400 Computer Drive\n                                ,---------------------------------,\n"
- title: X3S33/X3T56/81-85               |          WORKING PAPER          |
  contents:
  - 'X3S33/X3T56/81-85               |          WORKING PAPER          |

    '
- title: X3T5/81-171                     | This document has not been re-  |
  contents:
  - 'X3T5/81-171                     | This document has not been re-  |

    '
- title: X3T51/81-44                     | viewed or approved by the appro-|
  contents:
  - 'X3T51/81-44                     | viewed or approved by the appro-|

    '
- title: X3S37/81-71R                    | priate Technical Committee and  |
  contents:
  - "X3S37/81-71R                    | priate Technical Committee and  |\n       \
    \                         | does not at this time represent |\n              \
    \                  | a USA consensus.                |\n                     \
    \           '---------------------------------'\n                  Connectionless\
    \ Data Transmission\n                          A. Lyman Chapin\n             \
    \         ABSTRACT\n The increasingly  familiar  and  ubiquitous  Re-\n ference\
    \ Model of Open  Systems  Interconnection,\n currently being considered by the\
    \  International\n Organization  for  Standardization   (ISO)   for\n promotion\
    \ to the status of a Draft International\n Standard, is based on  the  explicit\
    \  assumption\n that a \"connection\" - an association between two\n or  more\
    \  communicating   entities,   possessing\n certain characteristics  over  and\
    \  above  those\n possessed  by  the  entities  themselves  -   is\n required\
    \ for the transfer of  data  in  an  Open\n Systems   Interconnection   (OSI)\
    \   environment.\n Although  the   connection-oriented   model   of\n communications\
    \ behavior  has  proven  to  be  an\n extremely powerful concept, and has been\
    \ applied\n successfully to the design and implementation of\n protocols and systems\
    \ covering a wide  range  of\n applications, a growing  body  of  research  and\n\
    \ experience suggests that a complementary concept\n -  connectionless  data \
    \ transmission  -  is  an\n essential part of the Open Systems  Interconnec-\n\
    \ tion architecture, and  should  be  embraced  as\n such by the OSI  Reference\
    \  Model.   This  paper\n explores  the  concept  of  connectionless  data\n transmission\
    \ and its relationship  to  the  more\n familiar concepts  of  connection-oriented\
    \  data\n transfer, developing a rationale for the  inclu-\n"
- title: 1  Introduction
  contents:
  - "1  Introduction\n Over the past three years, a number  of  national  and  interna-\n\
    \ tional  standards  organizations  have  expended  the  time  and\n efforts of\
    \ a great many people to achieve a  description  of  an\n architectural  Reference\
    \  Model  for  interconnecting   computer\n systems considered to be \"open\"\
    \ by virtue of their mutual use of\n standard  communication  protocols  and \
    \ formats.   The  current\n description, the Reference Model of Open Systems Interconnection\n\
    \ (RM/OSI)[1], is generally accepted by the International  Organi-\n zation for\
    \ Standardization (ISO),  the  International  Telephone\n and Telegraph Consultatitive\
    \  Committee  (CCITT),  the  European\n Computer Manufacturer's Association (ECMA),\
    \  and  many  national\n standards bodies,  including  the  American  National\
    \  Standards\n Institute (ANSI), and has progressed to the status  of  a  Draft\n\
    \ Proposed Standard (DP7498) within ISO.  It  describes  the  con-\n cepts and\
    \ principles of a communications architecture  organized\n hierarchically, by\
    \ function, into  seven  discrete  layers,  and\n prescribes the services that\
    \ each  layer  must  provide  to  the\n layer immediately above it (the  uppermost\
    \  layer  provides  its\n services to  user  applications,  which  are  considered\
    \  to  be\n outside  of  the  Open  Systems  Interconnection   environment).\n\
    \ Building on the services available to  it  from  the  next-lower\n layer, each\
    \ layer makes use  of  standard  OSI  protocols  which\n enable it to cooperate\
    \ with other instances of  the  same  layer\n (its \"peers\") in other systems\
    \ (see Figure 1).   This  technique\n of grouping related functions  into  distinct\
    \  layers,  each  of\n which implements a set of well-defined services that are\
    \ used by\n the layer above, partitions a very complex, abstract  problem  -\n\
    \ \"how can the components of a distributed application,  operating\n in potentially\
    \  dissimilar  environments,  cooperate  with  each\n other?\" - into a number\
    \ of more manageable problems that enjoy a\n logical relationship to each other\
    \ and can individually be  more\n readily understood.\n The Reference Model was\
    \ developed to serve as  a  framework  for\n the coordination of existing and\
    \ future  standards  designed  to\n facilitate the interconnection of data processing\
    \ systems.   The\n purpose of OSI is to enable  an  end-user  application  activity\n\
    \ (called an \"application  process\")  located  in  a  system  that\n employs\
    \ OSI procedures  and  protocols  (an  \"open\"  system)  to\n communicate with\
    \ any other appication  process  located  in  any\n other open system.  It is\
    \ not  the  intent  of  OSI  to  specify\n either the functions or the implementation\
    \  details  of  systems\n that provide the OSI capabilities.  Communication is\
    \ achieved by\n        \\                                           /\n      \
    \   \\                                         /\n          \\ /-----(N)-service-access-points-----\\\
    \ /     (N+1)\n"
- title: '-----------o-------------------------------------o------------'
  contents:
  - "-----------o-------------------------------------o------------\n            \\\
    \                                   /        (N)\n             \\<-----services\
    \ provided to------>/\n              \\          (N+1)-layer          /\n    \
    \           \\                             /\n        ,------------,         \
    \        ,------------,\n        |            |                 |            |\n\
    \        | (N)-entity |<----\"Peers\"---->| (N)-entity |    (N)-LAYER\n      \
    \  |            |                 |            |\n        '------------'     \
    \            '------------'\n               \\                             /\n\
    \                \\<----services required---->/\n                 \\     from\
    \ (N-1)-layer    /\n                  \\                       /             \
    \ (N)\n"
- title: '-------------------o---------------------o--------------------'
  contents:
  - "-------------------o---------------------o--------------------\n            \
    \        \\                   /               (N-1)\n                     \\ \
    \                /\n                      \\               /\n               \
    \        \\             /\n             ,--------------------------------,\n \
    \            |                                |\n             |              \
    \                  |\n             |           (N-1)-LAYER          |\n      \
    \       |                                |\n             |                   \
    \             |\n             '--------------------------------'\n         FIGURE\
    \ 1 -  General Model of an OSI Layer\n"
- title: A Note on OSI Terminology
  contents:
  - 'A Note on OSI Terminology

    '
- title: '-------------------------'
  contents:
  - '-------------------------

    '
- title: The construction of a formal system, such as the architecture of
  contents:
  - 'The construction of a formal system, such as the architecture of

    '
- title: Open Systems Interconnection, necessarily involves the introduc-
  contents:
  - 'Open Systems Interconnection, necessarily involves the introduc-

    '
- title: tion of unambiguous terminology (which also tends to be somewhat
  contents:
  - 'tion of unambiguous terminology (which also tends to be somewhat

    '
- title: impenetrable at first glance).   The terms found here and in the
  contents:
  - 'impenetrable at first glance).   The terms found here and in the

    '
- title: text are all defined in an Appendix. The "(N)-" notation is used
  contents:
  - 'text are all defined in an Appendix. The "(N)-" notation is used

    '
- title: to emphasize that the term  refers to an OSI characteristic that
  contents:
  - 'to emphasize that the term  refers to an OSI characteristic that

    '
- title: applies to each layer individually.  The "(N)-" prefix stands in
  contents:
  - 'applies to each layer individually.  The "(N)-" prefix stands in

    '
- title: generically  for the  name of a layer;  thus, "(N)-address", for
  contents:
  - "generically  for the  name of a layer;  thus, \"(N)-address\", for\n of another\
    \ system is how the other entity behaves, not how it is\n implemented.  In particular,\
    \ OSI is not concerned with  how  the\n interfaces between adjacent layers are\
    \ implemented  in  an  open\n system; any interface mechanism is acceptable, \
    \ as  long  as  it\n supports access to the appropriate standard OSI services.\n\
    \ A major goal of the OSI standardization  effort  is  generality.\n Ideally,\
    \ the Reference Model should serve as the  common  archi-\n tectural framework\
    \  for  many  different  types  of  distributed\n systems   employing   a   wide\
    \   range   of    telecommunication\n technologies, and certainly an important\
    \ measure of the  success\n of OSI will be its ability to apply  the  standard\
    \  architecture\n across a broad spectrum of user applications.  The way in  which\n\
    \ the Reference Model has  developed  over  the  past  four  years\n reflects\
    \ an awareness of this goal (among others):  the  process\n began with the identification\
    \ of the  essential  concepts  of  a\n layered  architecture,  including  the\
    \   general   architectural\n elements of protocols, and proceeded carefully from\
    \ these  basic\n principles to a detailed description of each layer.  The organi-\n\
    \ zation of the current Reference Model document [1] exhibits  the\n same top-down\
    \ progression.  At the highest level, three elements\n are identified as basic\
    \ to the architecture[1]:\n      a) the application processes which exist  within\
    \  the  Open\n         Systems Interconnection environment;\n      b) the connections\
    \ which join the application processes and\n         permit them to exchange information;\
    \ and\n      c) systems.\n The assumption that a connection is a  fundamental\
    \  prerequisite\n for communication in the OSI environment permeates the Reference\n\
    \ Model, and is in fact one  of  the  most  useful  and  important\n unifying\
    \ concepts of the  architecture.   A  growing  number  of\n experts in the field,\
    \ however, believe that  this  deeply-rooted\n connection orientation seriously\
    \ and  unnecessarily  limits  the\n power and scope of the Reference  Model, \
    \ since  it  excludes  a\n large class of applications and implementation technologies\
    \ that\n have an inherently connectionless nature.  They argue  that  the\n architectural\
    \ objectives of the Reference Model do not depend on\n the  exclusive  use  of\
    \  connections  to  characterize  all  OSI\n interactions, and recommend that\
    \ the two alternatives -  connec-\n tion oriented data transfer, and connectionless\
    \  data  transmis-\n sion - be  treated  as  complementary  concepts,  which \
    \ can  be\n applied in parallel to the different applications for which each\n\
    \ is suited.\n on Connectionless Data Transmission[3], and Recommended  Changes\n\
    \ to Section 3 of [the Reference Model] to Include  Connectionless\n Data Transmission[2];\
    \  and  the  importance  of  the  issue  was\n recognized by the full subcommittee\
    \ in a resolution[25]  calling\n for comments on the two documents from all member\
    \ organizations.\n The question of how the connectionless data transmission concept\n\
    \ should be reflected in the OSI architecture - and in particular,\n whether or\
    \ not it should become an  integral  part  of  the  Re-\n ference Model - will\
    \ be debated  again  this  summer,  when  the\n current Draft Proposed Standard\
    \ Reference Model becomes a  Draft\n International Standard.  The  remainder \
    \ of  this  article  will\n explore the issues that surround this question.\n\
    \ 2  What Is Connectionless Data Transmission?\n Connectionless data transmission\
    \ (CDT), despite  the  unfamiliar\n name, is by no means a new concept.  In one\
    \ form or another,  it\n has played an important role in the  specification  of\
    \  services\n and protocols for over a decade.  The terms \"message  mode\"[ \
    \ ],\n \"datagram\"[35],      \"transaction      mode\"[22,23,24],      and\n\
    \ \"connection-free\"[37,47] have been used  in  the  literature  to\n describe\
    \ variations on the same basic theme: the transmission of\n a  data  unit  in\
    \  a  single  self-contained  operation  without\n establishing, maintaining,\
    \ and terminating a connection.\n Since connectionless data transmission  and\
    \  connection-oriented\n data transfer are complementary concepts, they are  best\
    \  under-\n stood in juxtaposition, particularly since  CDT  is  most  often\n\
    \ defined by its relationship to the more familiar  concept  of  a\n connection.\n\
    \ 2.1  Connection-Oriented Data Transfer\n A connection (or \"(N)-connection\"\
    , in the formal terminology  of\n OSI) is an association established between two\
    \ or more  entities\n (\"(N+1)-entities\")          for          conveying   \
    \       data\n (\"(N)-service-data-units\").    The    ability    to    establish\n\
    \ (N)-connections, and to convey data units over them, is provided\n to (N+1)-entities\
    \ by the (N)-layer as a set of services,  called\n connection-oriented (N)-services.\
    \  Connection-oriented  interac-\n tions proceed through three distinct sequential\
    \ phases:  connec-\n tion  establishment;  data  transfer;  and  connection  release.\n\
    \ Figure 2 illustrates schematically the  sequence  of  operations\n       - Successful\
    \ -                        - Unsuccessful -\n  (N)-  |          |            \
    \         (N)-  |          |\n"
- title: connect |          |(N)-connect        connect |          |  (N)-
  contents:
  - 'connect |          |(N)-connect        connect |          |  (N)-

    '
- title: '------->|          |indication         ------->|          | connect'
  contents:
  - '------->|          |indication         ------->|          | connect

    '
- title: request |          |                   request |          |indication
  contents:
  - "request |          |                   request |          |indication\n     \
    \   |          |------->                   |          |------->\n        |(N)-LAYER\
    \ |                           |(N)-LAYER |\n  (N)-  |          |<-------     \
    \       (N)-   |          |<-------\n"
- title: connect |          |                disconnect |          |  (N)-
  contents:
  - 'connect |          |                disconnect |          |  (N)-

    '
- title: <-------|          |(N)-connect        <-------|          |disconnect
  contents:
  - '<-------|          |(N)-connect        <-------|          |disconnect

    '
- title: confirm |          | response       indication |          | request
  contents:
  - "confirm |          | response       indication |          | request\n       \
    \ |          |                           |          |\n                      \
    \    Data Transfer\n                          -------------\n  (N)-  |       \
    \   |                     (N)-  |          |\n  data  |          | (N)-data  \
    \          data  |          |\n"
- title: '------->|          |indication         ------->|          |  (N)-'
  contents:
  - '------->|          |indication         ------->|          |  (N)-

    '
- title: request |          |                   request |          |  data
  contents:
  - "request |          |                   request |          |  data\n        |\
    \          |------->                   |          |indication\n        |(N)-LAYER\
    \ |                           |(N)-LAYER |------->\n        |          |     \
    \                (N)-  |          |\n        |          |                    \
    \ data  |          |\n        |          |                   <-------|       \
    \   |\n        |          |                   confirm |          |\n        |\
    \          |                           |          |\n                        Connection\
    \ Release\n                        ------------------\n     - User Initiated -\
    \                   - Provider Initiated -\n"
- title: (N)-dis |          |                           |          |
  contents:
  - '(N)-dis |          |                           |          |

    '
- title: connect |          |                     (N)-  |          |  (N)-
  contents:
  - 'connect |          |                     (N)-  |          |  (N)-

    '
- title: '------->|(N)-LAYER |(N)-disconnect   disconnect|(N)-LAYER |disconnect'
  contents:
  - '------->|(N)-LAYER |(N)-disconnect   disconnect|(N)-LAYER |disconnect

    '
- title: request |          |indication         <-------|          |------->
  contents:
  - "request |          |indication         <-------|          |------->\n       \
    \ |          |------->         indication|          |indication\n        |   \
    \       |                           |          |\n         [Note: Much of the\
    \ material in this  section  is\n         derived from reference 3]\n 1.  Prior\
    \ negotiation.\n In a connection-oriented interaction,  no  connection  is  esta-\n\
    \ blished - and no data are transferred - until all parties  agree\n on the set\
    \ of parameters and options that will govern  the  data\n transfer.  An incoming\
    \ connection establishment request  can  be\n rejected if it asserts parameter\
    \  values  or  options  that  are\n unacceptable to the receiver, and the receiver\
    \ may in many cases\n suggest alternative parameter values and options along with\
    \  his\n rejection.\n The reason for negotiation during  connection  establishment\
    \  is\n the assumption that each party  must  reserve  or  allocate  the\n resources\
    \ (such as buffers and channels) that will  be  required\n to carry out data transfer\
    \ operations  on  the  new  connection.\n Negotiation provides an opportunity\
    \ to scuttle the establishment\n of a connection when the resources that  would\
    \  be  required  to\n support it cannot be dedicated, or to propose alternatives\
    \  that\n could be supported by the available resources.\n 2.  Three-party Agreement.\n\
    \ The fundamental nature of a connection involves establishing and\n dynamically\
    \ maintaining a three-party agreement  concerning  the\n transfer of data.  The\
    \ three parties -  the  two  (N+1)-entities\n that wish to communicate, and the\
    \ (N)-service that provides them\n with a connection - must first agree on their\
    \ mutual willingness\n to participate  in  the  transfer  (see  above).   This\
    \  initial\n agreement establishes a connection.  Thereafter, for as long  as\n\
    \ the connection persists, they must  continue  to  agree  on  the\n acceptance\
    \ of each data unit transferred  over  the  connection.\n \"With a connection,\
    \ there is no  possibility  of  data  transfer\n through an unwilling service\
    \ to an  unwilling  partner,  because\n the mutual willingness  must  be  established\
    \  before  the  data\n transfer can take place,  and  data  must  be  accepted\
    \  by  the\n destination partner; otherwise, no  data  [are]  transferred  on\n\
    \ that connection.\"[3]\n 3.  Connection Identifiers.\n At   connection   establishment\
    \   time,    each    participating\n (N+1)-entity is identified to the (N)-service\
    \ by an (N)-address;\n the (N)-service uses these addresses to  set  up  the \
    \ requested\n supplied   by   the   (N)-service   (in   OSI    parlance,    an\n\
    \ \"(N)-connection-endpoint-identifier\").       This      is      a\n locally-significant\
    \ \"shorthand\" reference that uniquely  identi-\n fies an established connection\
    \ during its lifetime.   Similarly,\n the protocol units that carry  data  between\
    \  systems  typically\n include a mutually-understood logical identifier rather\
    \ than the\n actual addresses of the correspondents.  This technique elimina-\n\
    \ tes the overhead that would otherwise  be  associated  with  the\n resolution\
    \ and transmission of addresses on every data transfer.\n In some  cases,  however\
    \  -  particularly  when  non-homogeneous\n networks are interconnected, and very\
    \ location-sensitive addres-\n sing schemes are used - it can  make  dynamic \
    \ routing  of  data\n units extremely difficult, if not impossible.\n 4.  Data\
    \ Unit Relationship.\n Once a connection has  been  established,  it  may  be\
    \  used  to\n transfer one data unit after another, until  the  connection  is\n\
    \ released by one of the three  parties.   These  data  units  are\n logically\
    \ related to  each  other  simply  by  virtue  of  being\n transferred on  the\
    \  same  connection.   Since  data  units  are\n transferred over a connection\
    \  in  sequence,  they  are  related\n ordinally as well.  These data unit relationships\
    \ are an  impor-\n tant characteristic of connections, since they create a  context\n\
    \ for the interpretation of arriving data units that  is  indepen-\n dent of the\
    \ data themselves.  Because a connection maintains the\n sequence  of  messages\
    \  associated  with  it,   out-of-sequence,\n missing, and duplicated messages\
    \  can  easily  be  detected  and\n recovered, and flow control techniques can\
    \ be invoked to  ensure\n that the message transfer rate does not exceed  that\
    \  which  the\n correspondents are capable of handling.\n These  characteristics\
    \  make  connection-based   data   transfer\n attractive in applications that\
    \ call for relatively  long-lived,\n stream-oriented interactions in stable configurations,\
    \  such  as\n direct terminal use of a remote  computer,  file  transfer,  and\n\
    \ long-term attachments of remote job  entry  stations.   In  such\n applications,\
    \ the interaction between communicating entities  is\n modelled very well  by\
    \  the  connection  concept:  the  entities\n initially discuss their requirements\
    \ and agree to the  terms  of\n their interaction, reserving whatever resources\
    \ they will  need;\n transfer a series of related  data  units  to  accomplish\
    \  their\n mutual objective; and explicitly end their interaction,  releas-\n\
    \ ing the previously reserved resources.\n 2.2  Connectionless Data Transmission\n\
    \ entities is more naturally modelled by the  connectionless  data\n transmission\
    \ concept,  which  involves  the  transmission  of  a\n single self-contained\
    \ data  unit  from  one  entity  to  another\n without prior negotiation or  agreement,\
    \  and  without  the  as-\n surance of delivery normally  associated  with  connection-based\n\
    \ transfers.  The users of a connectionless  (N)-service  may,  of\n course, use\
    \ their (N+1)-protocol to make any  prior  or  dynamic\n arrangements they wish\
    \ concerning their  interpretation  of  the\n data transmitted and received; the\
    \ (N)-service itself,  however,\n attaches no significance to individual data\
    \ units, and does  not\n attempt to relate them in any way.  Two (N+1)-entities\
    \  communi-\n cating by means  of  a  connectionless  (N)-service  could,  for\n\
    \ example, apply whatever techniques they  might  consider  appro-\n priate  in\
    \  the  execution  of  their  own   protocol   (timers,\n retransmission, positive\
    \ or negative acknowledgements,  sequence\n numbers, etc.) to achieve the level\
    \ of  error  detection  and/or\n recovery they desired.  Users of a connectionless,\
    \ as opposed to\n connection-oriented, (N)-service are not restricted or inhibited\n\
    \ in the performance of their (N+1)-protocol;  obviously,  though,\n the assumption\
    \ is that CDT  will  be  used  in  situations  that\n either do not require the\
    \ characteristics of  a  connection,  or\n actively benefit from the alternative\
    \ characteristics of connec-\n tionless transmission.\n Figure 3 illustrates schematically\
    \ the single operation  whereby\n a connectionless service may be employed to\
    \  transmit  a  single\n data unit.   Figure  4  shows  a  widely-implemented\
    \  variation,\n sometimes called  \"reliable  datagram\"  service,  in  which\
    \  the\n service  provider  undertakes  to  confirm   the   delivery   or\n non-delivery\
    \ of each data unit.  It must be emphasized that this\n is not a true connectionless\
    \ service, but is  in  some  sense  a\n hybrid, combining the delivery assurance\
    \ of  connection-oriented\n service with the single-operation interface event\
    \ of connection-\n less service.\n Many of those involved in OSI  standardization\
    \  activities  have\n agreed  on  a  pair  of  definitions  for  connectionless\
    \   data\n transmission, one for architectural and conceptual purposes, and\n\
    \ one  for  service-definition  purposes[4].   The   architectural\n definition,\
    \ which has been proposed for  inclusion  in  the  Re-\n ference Model, is:\n\
    \ \"Connectionless  Data  Transmission  is  the  transmission  (not\n transfer)\
    \   of   an   (N)-service-data-unit   from   a    source\n (N)-service-access-point\
    \   to   one    or    more    destination\n (N)-service-access-points without\
    \ establishing an (N)-connection\n for the transmission.\"\n                |\
    \                       |\n      (N)-data  |                       |\n       request\
    \  |                       |\n      --------->|                       |\n    \
    \            |       (N)-LAYER       |\n                |                    \
    \   |--------->\n                |                       |  (N)-data\n       \
    \         |                       | indication\n                |            \
    \           |\n       FIGURE 3 - Connectionless Data Transmission\n      (N)-data\
    \  |                       |\n       request  |                       |\n    \
    \  --------->|                       |\n                |                    \
    \   |  (N)-data\n                |       (N)-LAYER       |--------->\n       \
    \         |                       | indication\n      <---------|            \
    \           |\n      (N)-data  |                       |\n       confirm  |  \
    \                     |\n service descriptions for  individual  layers  of  the\
    \  Reference\n Model, is:\n \"A Connectionless  (N)-Service  is  one  that  accomplishes\
    \  the\n transmission of a  single  self-contained  (N)-service-data-unit\n between\
    \  (N+1)-entities  upon  the  performance  of   a   single\n (N)-service access.\"\
    \n Both of these definitions  depend  heavily  on  the  distinction\n between\
    \ the terms \"transmit\", \"transfer\", and \"exchange\":\n Transmit: \"to cause\
    \ to pass or be conveyed through  space  or  a\n medium.\"  This term refers to\
    \ the act of conveying only, without\n implying anything about reception.\n Transfer:\
    \ \"to convey  from  one  place,  person,  or  thing,  to\n another.\"  A one-way\
    \ peer-to-peer connotation restricts the  use\n of this term to cases in which\
    \ the receiving peer  is  party  to\n and accepts the data transferred.\n Exchange:\
    \ \"to give and receive, or lose and take,  reciprocally,\n as things of the same\
    \ kind.\"  A two-way peer-to-peer connotation\n restricts the use of this term\
    \ to cases in which both  give  and\n receive directions are clearly evident.\n\
    \ These  definitions  are  clearly  of   limited   usefulness   by\n themselves.\
    \  They do, however, provide a framework within  which\n to explore the following\
    \ characteristics of CDT:\n 1.  \"One-shot\" Operation.\n The most  user-visible\
    \  characteristic  of  connectionless  data\n transmission is the single service\
    \ access required  to  initiate\n the transmission of a data unit.  All  of  the\
    \  information  re-\n quired to deliver the data unit - destination  address,\
    \  quality\n of service selection,  options,  etc.  -  is  presented  to  the\n\
    \ connectionless (N)-service provider, along with the data,  in  a\n single logical\
    \ service-access operation that is  not  considered\n by the (N)-service to be\
    \ related in  any  way  to  other  access\n operations, prior or subsequent (note,\
    \ however, that  since  OSI\n is not  concerned  with  implementation  details,\
    \  the  specific\n interface mechanism employed by a particular  implementation\
    \  of\n connectionless service might involve  more  than  one  interface\n exchange\
    \ to accomplish what is, from  a  logical  standpoint,  a\n single operation).\
    \  Once the service  provider  has  accepted  a\n data unit for connectionless\
    \ transmission, no further communica-\n 2.  Two-party Agreement.\n Connection-oriented\
    \ data transfer requires the establishment  of\n a three-party agreement between\
    \ the participating (N+1)-entities\n and the (N)-service.  A connectionless service,\
    \ however,  invol-\n ves only two-party agreements: there may be an agreement\
    \ between\n the corresponding (N+1)-entities, unknown  to  the  (N)-service,\n\
    \ and there may be local agreements between each (N+1)-entity  and\n its local\
    \ (N)-service provider, but no (N)-protocol  information\n is ever exchanged between\
    \  (N)-entities  concerning  the  mutual\n willingness of the (N+1)-entities to\
    \ engage in a  connectionless\n transmission or to accept a particular data unit.\n\
    \ In practice, some sort of a priori agreement (usually  a  system\n engineering\
    \ design decision) is assumed  to  exist  between  the\n (N+1)-entities and the\
    \ (N)-service concerning those  parameters,\n formats, and options that affect\
    \ all three parties  as  a  unit.\n However, considerable freedom of choice is\
    \ preserved by allowing\n the user of a connectionless service to specify  most\
    \  parameter\n values and options - such as  transfer  rate,  acceptable  error\n\
    \ rate, etc. - at the time the service is  invoked.   In  a  given\n implementation,\
    \ if the  local  (N)-service  provider  determines\n immediately (from information\
    \ available to it locally) that  the\n requested operation cannot be  performed\
    \  under  the  conditions\n specified, it may abort  the  service  primitive,\
    \  returning  an\n implementation-specific error message across  the  interface\
    \  to\n the user.  If the same determination is made later on, after the\n service-primitive\
    \ interface event has completed,  the  transmis-\n sion is  simply  abandoned,\
    \  since  users  of  a  connectionless\n service can be expected to recover lost\
    \ data if it is  important\n for them to do so.\n 3.  Self-contained Data Units.\n\
    \ Data units transmitted via a connectionless service, since  they\n bear no relationship\
    \ either to other data units or to a  \"higher\n abstraction\"   (such   as  \
    \ a    connection),    are    entirely\n self-contained.  All of the  addressing\
    \  and  other  information\n needed by the service provider to deliver a  data\
    \  unit  to  its\n destination must be included in each transmission.  On  the\
    \  one\n hand, this represents a greater overhead than is incurred during\n the\
    \ data transfer phase of a connection-oriented interaction; on\n the other, it\
    \ greatly simplifies routing, since each  data  unit\n carries a complete destination\
    \ address and can be routed without\n reference to connection-related information\
    \ that  may  not,  for\n example, be readily available at intermediate nodes.\n\
    \ 4.  Data Unit Independence.\n connectionless service begins the transmission\
    \ of a single  data\n unit.  Nothing about the service invocation, the transmission\
    \ of\n the data by the connectionless service, or the data unit  itself\n affects\
    \ or is affected by any other  past,  present,  or  future\n operation, whether\
    \  connection-oriented  or  connectionless.   A\n series of data units handed\
    \ one after the other to a connection-\n less service for delivery  to  the  same\
    \  destination  will  not\n necessarily be delivered to the destination in the\
    \  same  order;\n and the connectionless service will make no attempt to report\
    \ or\n recover instances of non-delivery.\n Note:   A number of popular variations\
    \  on  CDT  include\n         features that run  counter  to  those  described\n\
    \         above.  These variations deserve to be discussed\n         on their\
    \ own merits, but should not be  confused\n         with the architectural concept\
    \ of connectionless\n         data transmission.\n These characteristics make\
    \ CDT attractive in  applications  that\n involve short-term request-response\
    \ interactions, exhibit a high\n level of redundancy, must be flexibly reconfigurable,\
    \ or  derive\n no benefit from guaranteed in-sequence delivery of data.\n 3  The\
    \ Rationale for Connectionless Data Transmission\n Because CDT is not as widely\
    \ understood  as  connection-oriented\n data transfer, it has often been  difficult\
    \  in  the  course  of\n developing service and protocol definitions to adduce\
    \ a  ration-\n ale for incorporating CDT, and even more difficult to  determine\n\
    \ appropriate locations  for  connectionless  service  within  the\n layered hierarchy\
    \ of OSI.   This  section  addresses  the  first\n concern; the next section will\
    \ deal with the second.\n The most natural way to discover the power and  utility\
    \  of  the\n CDT  concept  is  to  examine  applications  and  implementation\n\
    \ technologies that depend on it.  The following observations  are\n distilled\
    \ from the specifications  and  descriptions  of  actual\n protocols and systems\
    \ (many of which have been implemented), and\n from the work of individuals and\
    \ organizations  engaged  in  the\n OSI standardization effort (quoted material\
    \ is from reference 3,\n except where otherwise noted).   They  are  divided \
    \ into  seven\n (occassionally  overlapping)  categories  which   classify   the\n\
    \ applications for which CDT is well suited.\n gathering data from dedicated measurement\
    \  stations;  a  network\n status monitor constantly refreshing its knowledge\
    \ of a  network\n environment; and an automatic alarm or security system in  which\n\
    \ each component regularly self-tests and reports the result,  are\n all engaged\
    \ in this type  of  interaction,  in  which  a  \"large\n number of sources may\
    \ be reporting periodically  and  asynchron-\n ously to a single reporting point.\
    \   In  a  realtime  monitoring\n situation, these readings could normally be\
    \  lost  on  occassion\n without causing distress,  because  the  next  update\
    \  would  be\n arriving shortly.  Only  if  more  than  one  successive  update\n\
    \ failed to arrive within a specified time limit would an alarm be\n warranted.\
    \   If,  say,  a  fast   connect/disconnect   three-way\n handshake cost twice\
    \ as much as a one-way [connectionless]  data\n transmission which had  been \
    \ system  engineered  to  achieve  a\n certain acceptable statistical reliability\
    \ figure, the  cost  of\n connection-oriented inward data collection for a  large\
    \  distri-\n buted  application  could  be  substantially  greater  than  for\n\
    \ [connectionless collection], without a  correspondingly  greater\n benefit to\
    \ the user.\"[3]\n Outward data dissemination is in a  sense  the  inverse  of\
    \  the\n first category; it concerns the distribution of  a  single  data\n unit\
    \ to a large  number  of  destinations.   This  situation  is\n found,  for  example,\
    \  when  a  node  joins  a  network,  or   a\n commonly-accessible server  changes\
    \  its  location,  and  a  new\n address is sent to other nodes on the network;\
    \ when a synchroni-\n zing message such as a real-time clock value must be sent\
    \ to all\n participants in some distributed activity; and when an  operator\n\
    \ broadcasts a nonspecific message (e.g., \"Network coming down  in\n five minutes\"\
    ).  In such cases, the distribution cost (including\n time) may far exceed the\
    \ cost of generating the  data;  control-\n ling the overall cost depends on keeping\
    \ the cost of  dissemina-\n tion as low as possible.\n Request-response applications\
    \ are those in which  a  service  is\n provided by a commonly accessible  server\
    \  process  to  a  large\n number of distributed request sources.  The typical\
    \  interaction\n consists of a single request followed by a single response, \
    \ and\n usually only the highest-level acknowledgement  -  the  response\n itself\
    \ - is either necessary  or  meaningful.   Many  commercial\n applications (point\
    \ of sale terminals, credit checking, reserva-\n tion systems, inventory control,\
    \ and automated banking  systems)\n and some types of industrial process control,\
    \ as  well  as  more\n general information retrieval systems (such as  videotex),\
    \  fall\n into this category.  In each case, the knowledge and expectation\n of\
    \ each application component as to the nature of  the  interac-\n tion is represented\
    \ in an application-process design and  imple-\n mentation that is known in advance,\
    \ outside of OSI; lower  level\n An example of an application that combines  the\
    \  characteristics\n of inward  data  collection,  outward  data  dissemination,\
    \  and\n request-response interaction is described by the  Working  Group\n on\
    \ Power System Control Centers of the  IEEE  Power  Engineering\n Society in a\
    \ recent letter to the  chairman  of  ANSI  committee\n X3T51 concerning  the\
    \  use  of  data  communication  in  utility\n control centers[17].  They note\
    \ that \"a utility  control  center\n receives information from  remote  terminal\
    \  units  (located  at\n substations  and  generating  plants)  and  from  other\
    \  control\n centers, performs a variety of monitoring and control functions,\n\
    \ and transmits commands to the remote terminals and  coordinating\n information\
    \ to other control centers.\"   During  the  course  of\n these operations, the\
    \ following conditions occur:\n      1) Some measurements  are  transmitted  or\
    \  requested  from\n         remote terminals or control centers every  few  seconds.\n\
    \         No attempt is necessarily made to recover data lost  due\n         to\
    \ transmission error; the application programs  include\n         provisions for\
    \  proper  operation  when  input  data  is\n         occassionally missing. \
    \ [Inward data collection]\n      2) Some data items are transferred from  commonly\
    \  accessed\n         remote sites or multi-utility pool coordination  centers\n\
    \         on   a   request-response   basis.     [Request-response\n         interaction]\n\
    \      3) In some cases, an application program may  require  that\n         some\
    \ measurements be  made  simultaneously  in  a  large\n         number of locations.\
    \  In these cases, the control center\n         will  broadcast  a   command \
    \  to   make   th   affected\n         measurements.  [Outward data dissemination]\n\
    \ In closing, they note that \"utility control centers  around  the\n world use\
    \ data communications in ways similar to  those  in  the\n United States.\"\n\
    \ Broadcast and multicast (group  addressed)  communication  using\n connection-oriented\
    \ services is awkward at best  and  impossible\n at   worst,   notwithstanding\
    \   the   occassional   mention   of\n \"multi-endpoint  connections\"  in  the\
    \  Reference  Model.   Some\n characteristics  of  connection-based  data  transfer,\
    \  such  as\n sequencing and error recovery, are very difficult to provide  in\n\
    \ a  broadcast/multicast  environment,  and  may   not   even   be\n desirable;\
    \ and it is not at  all  easy  to  formulate  a  useful\n definition of broadcast/multicast\
    \ acknowledgement  that  can  be\n supported by a low-level protocol.  Where group\
    \ addressing is an\n important application consideration, connectionless data\
    \  trans-\n telemetry, and remote command  and  control,  involving  a  high\n\
    \ level  of  data   redundancy   and/or   real-time   transmission\n requirements,\
    \ may profit from the fact that CDT makes no  effort\n to detect or recover lost\
    \ or corrupted data.  If the  time  span\n during which an individual datum  is\
    \  meaningful  is  relatively\n short, since it is quickly superceded by the next\
    \ - or if, as in\n digitized voice transmission, the loss or corruption of  one\
    \  or\n even several data units is insignificant - the application might\n suffer\
    \ far more from the delay that would  be  introduced  as  a\n connection-oriented\
    \ service dealt with a lost or out-of-sequence\n data unit (even if retransmission\
    \ or other  recovery  procedures\n were not invoked) than it would from the unreported\
    \  loss  of  a\n few data units in  the  course  of  a  connectionless  exchange.\n\
    \ Other special considerations - such as the  undesirability,  for\n security\
    \ reasons, of  maintaining  connection-state  information\n between data transfers\
    \ in a military command and control  system\n - add force to the argument that\
    \ CDT should be available  as  an\n alternative to connection-oriented data transfer.\n\
    \ Local area networks (LANs) are probably the most fertile  ground\n for connectionless\
    \ services, which find  useful  application  at\n several layers.  LANs  employ\
    \  intrinsically  reliable  physical\n transmission  media  and  techniques  (baseband\
    \  and   broadband\n coaxial  cable,  fiber  optics,  etc.)  in  a  restricted\
    \  range\n (generally no greater than 1 or 2 kilometers), and are typically\n\
    \ able to achieve extremely low bit error rates.  In addition, the\n media-access\
    \ contention  mechanisms  favored  by  LAN  designers\n handle transmission errors\
    \ as a matter  of  course.   The  usual\n approach to physical interconnection\
    \ ties all nodes together  on\n a common medium, creating an inherently broadcast\
    \ environment in\n which every transmission  can  be  received  by  every  station.\n\
    \ Taking advantage of these characteristics  virtually  demands  a\n connectionless\
    \ data link service, and in fact most  current  and\n proposed LANs - the Xerox\
    \ Ethernet[43], the  proposed  IEEE  802\n LAN standard[14,46], and many others\
    \ - depend on such a service.\n As a bonus,  because  connectionless  services\
    \  are  simpler  to\n implement - requiring only two or  three  service  primitives\
    \  -\n inexpensive VLSI implementations are often possible.\n In addition, the\
    \ applications for which LANs are often installed\n tend to be precisely those\
    \ best handled by CDT.   Consider  this\n list of eight application classes identified\
    \  by  the  IEEE  802\n Interface Subcommittee as targets for the 802 LAN standard[46]:\n\
    \ 1.   Periodic   status   reporting   -   telemetry   data   from\n instrumentation,\
    \ monitoring devices associated  with  static  or\n dynamic physical environments;\n\
    \ 3.  Security control - security door opening and closing, system\n recovery\
    \ or initialization, access control;\n 4.  File transfer;\n 5.  Interactive transactions\
    \ - reservation  systems,  electronic\n messaging and conferencing;\n 6.  Interactive\
    \ information exchange -  communicating  text  and\n word processors, electronic\
    \ mail, remote job entry;\n 7. Office information exchange - store and forward\
    \ of  digitized\n voice messages, digitized graphic/image handling;\n 8.  Real-time\
    \ stimulus and response  -  universal  product  code\n checkout readers, distributed\
    \  point  of  sale  cash  registers,\n military  command  and  control,  and \
    \ other   closed-loop   and\n real-time applications.\n Of these, almost all have\
    \ already  been  identified  as  classic\n examples of applications that have\
    \ an essentially connectionless\n nature.  Consider this more detailed example\
    \  of  (8):  a  local\n area network with a large number of nodes and a large\
    \ number  of\n services  (e.g.,  file  management,  printing,   plotting,   job\n\
    \ execution,  etc.)  provided  at  various  nodes.   In   such   a\n configuration,\
    \ it is impractical to maintain  a  table  at  each\n node giving the address\
    \ of every  service,  since  changing  the\n location of a single service would\
    \ require updating the  address\n table at every node.  An alternative is  to\
    \  maintain  a  single\n independent \"server lookup\" service, which performs\
    \ the function\n of mapping the name of a given  service  to  the  address  of\
    \  a\n server providing that service.   The  server-lookup  server  re-\n ceives\
    \ requests such as, \"where is service X?\", and returns  the\n address at which\
    \ an instance of service X is currently  located.\n Communication  with  the \
    \ server-lookup  server  is   inherently\n self-contained,  consisting   of  \
    \ a   single   request/response\n exchange.  Only the highest-level acknowledgement\
    \ - the response\n from the lookup service giving the requested address - is at\
    \ all\n significant.  The native reliability of the local  area  network\n ensures\
    \ a low error rate; if a message should be lost,  no  harm\n is done, since the\
    \ request will simply be re-sent  if  a  timely\n response does not arrive.  Such\
    \ an interaction is poorly  model-\n led by the connection-oriented paradigm of\
    \ opening a connection,\n transferring a stream of data, and closing the  connection.\
    \   It\n is perfectly suited to connectionless transmission techniques.\n and\
    \ a number of related activities, such  as  gateway-to-gateway\n communication,\
    \  exhibit  the   request-response,   inward   data\n collection, and outward\
    \ data dissemination characteristics  that\n are well supported by CDT.   One\
    \  of  the  best  examples  of  a\n connectionless internetwork service is described\
    \ in  a  document\n published by the  National  Bureau  of  Standards  (Features\
    \  of\n Internetwork  Protocol[29],  which  includes  a  straightforward\n discussion\
    \ of the merits of the connectionless approach:\n         \"The  greatest   advantage\
    \   of   connectionless\n         service at the  internet  level  is  simplicity,\n\
    \         particularly in  the  gateways.   Simplicity  is\n         manifested\
    \ in terms of smaller and less  compli-\n         cated computer code and smaller\
    \ computer storage\n         requirements.  The gateways and  hosts  are  not\n\
    \         required  to  maintain  state  information,  nor\n         interpret\
    \ call request and call clear  commands.\n         Each     data-unit      can\
    \      be      treated\n         independently...Connectionless service assumes\
    \ a\n         minim[al]   service    from    the    underlying\n         subnetworks.\
    \   This  is  advantageous   if   the\n         networks are diverse.  Existing\
    \ internet  proto-\n         cols which are intended for interconnection of a\n\
    \         diverse variety  of  networks  are  based  on  a\n         connectionless\
    \  service  [for  example  the  PUP\n         Internetwork  protocol[44],  the\
    \  Department  of\n         Defence Standard Internet Protocol[31], and  the\n\
    \         Delta-t protocol developed at Lawrence Livermore\n         Laboratory[45]].\"\
    \n The principle motivating the development of internetwork  servi-\n ces and\
    \ protocols that make few assumptions about the nature  of\n the individual network\
    \ services (the \"lowest common denominator\"\n approach) was formulated by Carl\
    \  Sunshine  as  the  \"local  net\n independence principle\"[39]: \"Each local\
    \ net  shall  retain  its\n individual address space, routing  algorithms,  packet\
    \  formats,\n protocols, traffic controls, fees, and other network  character-\n\
    \ istics to the greatest extent  possible.\"   The  simplicity  and\n robustness\
    \ of connectionless internetworking  systems  guarantee\n their widespread use\
    \ as the number of different network types  -\n X.25 networks, LANs,  packet \
    \ radio  networks,  other  broadcast\n networks, and satellite networks - increases\
    \ and  the  pressures\n to interconnect them grow.\n 4  CDT and the OSI Reference\
    \ Model\n architecture.  As a basis for deriving standard OSI services and\n protocols,\
    \ however, it has a greater impact on  some  layers  of\n the Reference Model\
    \ than on others.   Careful  analysis  of  the\n relative  merits  of  connectionless\
    \   and   connection-oriented\n operation at each layer is necessary to control\
    \  the  prolifera-\n tion of incompatible or useless options and preserve  a \
    \ balance\n between the power of the complementary concepts and the stabili-\n\
    \ zing objective of the OSI standardization effort.\n Figure 5 illustrates the\
    \ layered OSI hierarchy  as  it  is  most\n commonly represented (it shows two\
    \ instances of  the  hierarchy,\n representing the relationship between  two \
    \ OSI  systems).   The\n following sections discuss the CDT concept  in  the \
    \ context  of\n each of the seven layers.\n 4.1  Physical Layer\n The duality\
    \ of connections and connectionless service is  diffi-\n cult  to  demonstrate\
    \  satisfactorily  at  the  physical  layer,\n largely because the concept of\
    \ a physical \"connection\"  is  both\n intuitive and colloquial.  The physical\
    \ layer is responsible for\n generating and interpreting signals represented for\
    \ the  purpose\n of transmission  by  some  form  of  physical  encoding  (be\
    \  it\n electrical, optical, acoustic, etc.), and a physical connection,\n in\
    \ the most general sense (and restricting our consideration, as\n does the Reference\
    \ Model itself, to  telecommunications  media),\n is a signal pathway through\
    \ a medium or a combination of  media.\n Is  a  packet   radio   broadcast   network,\
    \   then,   using   a\n \"connectionless\" physical service?  No explicit  signal\
    \  pathway\n through a  medium  or  media  is  established  before  data  are\n\
    \ transmitted.  On the other hand, it can easily be argued that  a\n physical\
    \ connection is established with the introduction of  two\n antennae into the\
    \ \"ether\"; and if the antennae are aimed at each\n other and designed to handle\
    \ microwave transmission, the impres-\n sion that a physical connection exists\
    \ is strengthened.  Whether\n or not one recognizes the possibility of connectionless\
    \ physical\n services - other than purely  whimsical  ones  -  will  probably\n\
    \ continue to depend on one's point of  view,  and  will  have  no\n effect on\
    \ the development of actual telecommunication systems.\n 4.2  Data Link Layer\n\
    \ Many data link technologies -  particularly  those  coming  into\n popular use\
    \ with the growth of local area networking -  are  far\n         ,---------------------,\
    \            ,---------------------,\n         |                     |       \
    \     |                     |\n"
- title: Level 7  |  Application Layer  |<---------->|  Application Layer  |
  contents:
  - "Level 7  |  Application Layer  |<---------->|  Application Layer  |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 6  | Presentation Layer  |<---------->| Presentation Layer  |
  contents:
  - "Level 6  | Presentation Layer  |<---------->| Presentation Layer  |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 5  |    Session Layer    |<---------->|     Session Layer   |
  contents:
  - "Level 5  |    Session Layer    |<---------->|     Session Layer   |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 4  |   Transport Layer   |<---------->|   Transport Layer   |
  contents:
  - "Level 4  |   Transport Layer   |<---------->|   Transport Layer   |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 3  |    Network Layer    |<---------->|    Network Layer    |
  contents:
  - "Level 3  |    Network Layer    |<---------->|    Network Layer    |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 2  |   Data Link Layer   |<---------->|   Data Link Layer   |
  contents:
  - "Level 2  |   Data Link Layer   |<---------->|   Data Link Layer   |\n       \
    \  |                     |            |                     |\n         |----------|----------|\
    \            |----------|----------|\n         |                     |       \
    \     |                     |\n"
- title: Level 1  |    Physical Layer   |<---------->|    Physical Layer   |
  contents:
  - "Level 1  |    Physical Layer   |<---------->|    Physical Layer   |\n       \
    \  |                     |            |                     |\n         '---------------------'\
    \            '---------------------'\n concept  of  connectionless  data  transmission.\
    \   The  previous\n discussion of local area networking has already made  the\
    \  point\n that the high-speed, short-range, intrinsically reliable  broad-\n\
    \ cast transmission media used to interconnect stations  in  local\n area networks\
    \ are complemented  both  functionally  and  concep-\n tually by connectionless\
    \ data link techniques.\n One of the  organizations  currently  developing  a\
    \  local  area\n network data link layer standard  -  the  Data  Link  and  Media\n\
    \ Access (DLMAC) subcommittee of IEEE 802 -  has  recognized  both\n the need\
    \ to retain compatibility with existing long-haul techni-\n ques and the unique\
    \ advantages of CDT for local area networks by\n proposing that two data link\
    \ procedures be defined for the  IEEE\n 802 standard.\n In one procedure, information\
    \ frames are unnumbered and  may  be\n sent at any time by any station  without\
    \  first  establishing  a\n connection.  The intended receiver  may  accept  the\
    \  frame  and\n interpret it, but is under no  obligation  to  do  so,  and  may\n\
    \ instead discard the frame with no notice to the sender.  Neither\n is the sender\
    \ notified if  no  station  recognizes  the  address\n coded  into  the  frame,\
    \  and  there  is  no   receiver.    This\n \"connectionless\" procedure, of course,\
    \  assumes  the  \"friendly\"\n environment and higher-layer acceptance of  responsibility\
    \  that\n are   usually   characteristic    of    local    area    network\n implementations.\n\
    \ The other procedure provides all of  the  sequencing,  recovery,\n and    other\
    \     guarantees     normally     associated     with\n connection-oriented link\
    \ procedures.  It is in fact very similar\n to the ISO standard HDLC balanced\
    \ asynchronous mode procedure.\n Data  link  procedures  designed  for  transmission\
    \  media  that\n (unlike those used in local area networks)  suffer  unacceptable\n\
    \ error rates are almost universally connection-based, since it is\n generally\
    \  more  efficient   to   recover   the   point-to-point\n bit-stream errors detectable\
    \ by  connection-oriented  data  link\n procedures at the data link layer (with\
    \ its comparatively  short\n timeout intervals) than at a higher layer.\n 4.3\
    \  Network Layer\n Connectionless network service is useful for many  of  the\
    \  same\n reasons that were  identified  in  the  previous  discussion  of\n network\
    \ interconnection: it greatly simplifies  the  design  and\n implementation of\
    \ systems; makes few assumptions about  underly-\n fact, internetwork services\
    \ are provided by the Network  Layer).\n CDT  also   facilitates   dynamic   routing\
    \   in   packet-   and\n message-switched networks,  since  each  data  unit \
    \ (packet  or\n message) can be directed along the most appropriate  \"next  hop\"\
    \n unencumbered   by   connection-mandated   node   configurations.\n Examples\
    \ of more or less connectionless  network  layer  designs\n and implementations\
    \ abound: Zilog's  Z-net  (which  offers  both\n \"reliable\"   and   \"unreliable\"\
    \   service   options);   DECNET's\n \"transport layer\" (which corresponds to\
    \ the OSI Network  layer);\n Livermore Lab's Delta-t protocol (although it  provides\
    \  only  a\n reliable   service,   performing   error   checking,   duplicate\n\
    \ detection, and acknowledgement); the User Datagram protocol[48];\n and the \
    \ Cyclades  network  protocol[38].   In  fact,  even  the\n staunchly  connection-oriented\
    \   X.25   public   data   networks\n (Canada's Datapac is the  best  example)\
    \  generally  emply  what\n amounts to  a  connectionless  network-layer  service\
    \  in  their\n internal packet switches, which enables them to perform flexible\n\
    \ dynamic routing on a packet-by-packet basis.\n 4.4  Transport Layer\n The connectionless\
    \ transport service is important  primarily  in\n systems that distinguish  the\
    \  Transport  layer  and  everything\n below it as providing something generically\
    \ named the \"Transport\n Service\", and abandon or severely compromise  adherence\
    \  to  the\n OSI architecture above the Transport layer.  In such  systems  a\n\
    \ connectionless transport service may  be  needed  for  the  same\n reasons that\
    \ other (more OSI-respecting) systems need a  connec-\n tionless application service.\
    \  Otherwise, the purpose of  defin-\n ing a connectionless transport service\
    \ is to enable a  uniformly\n connectionless service to  be  passed  efficiently\
    \  through  the\n Transport layer to higher layers.\n 4.5  Session Layer\n The\
    \ whole notion of a session which binds  presentation-entities\n into a relationship\
    \ of  some  temporal  duration  is  inherently\n connection-oriented.  The purpose\
    \ of defining  a  connectionless\n session service, therefore, is to enable a\
    \ uniformly connection-\n less service to be passed efficiently through the session\
    \  layer\n to higher layers.  In this  sense,  the  connectionless  session\n\
    \ 4.6  Presentation Layer\n Very much the same  considerations  apply  to  the\
    \  Presentation\n layer as apply to the Session layer.\n 4.7  Application Layer\n\
    \ The most obvious reason to define a  connectionless  application\n service -\
    \ to give  user  application  processes  access  to  the\n connectionless services\
    \ of the architecture - is  not  the  only\n one.  The application layer performs\
    \ functions  that  help  user\n application processes to converse regarding the\
    \ meaning  of  the\n information they exchange, and is also responsible  for \
    \ dealing\n with the overall system management aspects of the OSI operation.\n\
    \ Over  and  above  the  many  user-application  requirements  for\n connectionless\
    \ service, it may be profitably employed by  system\n management functions that\
    \ monitor and report on  the  status  of\n resources in the local open system;\
    \ by application layer manage-\n ment functions that need to interact in a request-response\
    \  mode\n with similar functions in  other  systems  to  perform  security\n access\
    \ control; and by user application process  functions  that\n monitor the status\
    \ of activities in progress.\n The potential availability of two complementary\
    \ services at each\n layer of the architecture raises an obvious question  - \
    \ how  to\n choose between them?  It should be  clear  at  this  point  that\n\
    \ unilateral exclusion of  one  or  the  other,  although  it  may\n simplify\
    \ the situation for some applications, is not  a  general\n solution to the problem.\
    \  There are actually two  parts  to  the\n question: how  to  select  an  appropriate\
    \  set  of  cooperative\n services for all seven layers during the design of a\
    \  particular\n open system; and, if one or more layers of the system will offer\n\
    \ both connection-oriented and  connectionless  services,  how  to\n provide for\
    \ the dynamic selection of one or the other in a given\n circumstance.\n The second\
    \ part is easiest to dispose of, since actual systems -\n as opposed to the more\
    \ abstract set of  services  and  protocols\n collected under the banner of  OSI\
    \  -  will  generally  be  con-\n structed in such a way as  to  combine  services\
    \  cooperatively,\n with some attention paid to the way in which they will  interact\n\
    \ to meet specific goals.  Although two services may  be  provided\n at a given\
    \ layer, logical combinations of services for different\n applications will generally\
    \ be assembled according to relatively\n support and the characteristics of the\
    \ preferred  implementation\n technologies will also answer  the  first  question.\
    \   A  system\n designed primarily to transport large  files  over  a  long-haul\n\
    \ network would probably use  only  connection-oriented  services.\n One designed\
    \ to collect data from widely scattered  sensors  for\n processing at a central\
    \  site  might  provide  a  connectionless\n application  service  but  use  a\
    \  connection-oriented   network\n service to achieve compatibility with  a  public\
    \  data  network.\n Another system, built around a local area network bus  or\
    \  ring,\n might use a connectionless data link service regardless  of  the\n\
    \ applications   supported;   if   several   LANs   sere   to   be\n interconnected,\
    \ perhaps with other network types, it might  also\n employ a connectionless internetwork\
    \ service.\n The definition of OSI standard services and protocols,  however,\n\
    \ must consider the general case, so as to accomodate a wide range\n of  actual-system\
    \  configurations.   The  motivating   principle\n should be to achieve a balance\
    \ between the two  goals  of  power\n and simplicity.  The service  definition\
    \  for  each  layer  must\n include both connection-oriented  and  connectionless\
    \  services;\n otherwise, the utility of  a  service  at  one  layer  could  be\n\
    \ negated by the unavailability of a corresponding  service  else-\n where in\
    \ the  hierarchy.   However,  the  role  played  by  each\n service may be radically\
    \ different from one layer to  the  next.\n The Presentation, Session, and Transport\
    \ layers,  for  instance,\n need to support their respective  connectionless \
    \ services  only\n because the Application layer, which must provide a  connection-\n\
    \ less service to user applications, cannot do so  effectively  if\n they do not.\
    \  Recognizing these role  variations  opens  up  the\n possibility of restoring\
    \ a measure of the simplicity lost in the\n introduction of choice  at  each \
    \ layer  by  limiting,  not  the\n choices, but the places in the hierarchy where\
    \  conversion  from\n one choice to the other - connection to connectionless,\
    \ or  vice\n versa - is allowed (see figure 6).  At this stage in the  devel-\n\
    \ opment of the CDT concept, it appears that there are  exscellent\n reasons for\
    \ allowing such a conversion  to  take  place  in  the\n Application, Transport,\
    \ and Network layers (and in the Data Link\n layer, if some physical interconnection\
    \ strategies are deemed to\n be connectionless).  In the other layers, the provision\
    \  of  one\n kind of service to the next-higher layer must always  be  accom-\n\
    \ plished by using the same kind of service  from  the  next-lower\n layer (see\
    \ figure 7).  (This principle of  like-to-like  mapping\n is not related to  multiplexing;\
    \  it  refers  to  service  types\n (connection-oriented  and   connectionless),\
    \   not   to   actual\n services.) Adopting such a restriction would contribute\
    \  to  the\n                ^                              ^   (N+1)-LAYER\n \
    \               |                              |\n                |          \
    \                    |\n"
- title: '----------------o------------------------------o----------------'
  contents:
  - "----------------o------------------------------o----------------\n          \
    \      |                              |\n   ,-------------------------,    ,-------------------------,\n\
    \   | Offers a connectionless |    |   Offers a connection-  |\n   |       (N)-service\
    \       |    |   oriented (N)-service  |\n   |            |            |    |\
    \            |            |\n   |        (N)-LAYER        | OR |        (N)-LAYER\
    \        |\n   |            |            |    |            |            |\n  \
    \ |   Uses a connection-    |    |  Uses a connectionless  |\n   | oriented (N-1)-service\
    \  |    |      (N-1)-service      |\n   '-------------------------'    '-------------------------'\n\
    \                |                              |\n"
- title: '----------------o------------------------------o----------------'
  contents:
  - "----------------o------------------------------o----------------\n          \
    \      |                              |\n                |                   \
    \           |\n                v                              v   (N-1)-LAYER\n\
    \               FIGURE 6 - Service Type Conversion\n                ^        \
    \                      ^   (N+1)-LAYER\n                |                    \
    \          |\n                |                              |\n"
- title: '----------------o------------------------------o----------------'
  contents:
  - "----------------o------------------------------o----------------\n          \
    \      |                              |\n   ,-------------------------,    ,-------------------------,\n\
    \   | Offers a connectionless |    |   Offers a connection-  |\n   |       (N)-service\
    \       |    |   oriented (N)-service  |\n   |            |            |    |\
    \            |            |\n   |        (N)-LAYER        | OR |        (N)-LAYER\
    \        |\n   |            |            |    |            |            |\n  \
    \ |  Uses a connectionless  |    |   Uses a connection-    |\n   |      (N-1)-service\
    \      |    | oriented (N-1)-service  |\n   '-------------------------'    '-------------------------'\n\
    \                |                              |\n"
- title: '----------------o------------------------------o----------------'
  contents:
  - "----------------o------------------------------o----------------\n          \
    \      |                              |\n                |                   \
    \           |\n                v                              v   (N-1)-LAYER\n\
    \ 5  Summary\n Support for incorporating connectionless data transmission as \
    \ a\n basic architectural element of the Reference Model has grown  as\n understanding\
    \ of the concept has become  more  widespread.   The\n protocol development sponsored\
    \ by various agencies of  the  U.S.\n Department of Defense, for example, have\
    \ long recognized connec-\n tions and connectionless transmission as complementary\
    \ concepts,\n and have employed both.  Similar work being  carried  out  by  a\n\
    \ division of the Institute for Computer Science and Technology at\n the National\
    \ Bureau of Standards, the result of which will be  a\n series of  Federal  Information\
    \  Processing  Standards,  depends\n heavily  on  connectionless  as  well   as\
    \   connection-oriented\n concepts.  The importance of CDT to some of these U.S.\
    \   efforts\n is reflected in comments received by ANSI committee X3T5  during\n\
    \ the recent Reference Model ballot period, one  of  which  states\n that \"Publication\
    \ of this material [DP7498]  without  incorpora-\n tion  of  the  concerns  associated\
    \  with  Connectionless   Data\n Trans[mission] makes a mockery of U.S. interests.\"\
    [18]  A  some-\n what less emotional expression of the same sentiment is embodied\n\
    \ in  the  official   U.S.   Position   on   Connectionless   Data\n Transmission[9],\
    \   in   which   X3T5,   the   responsible   U.S.\n organization,  \"endorses\
    \  SC16/N555  [Recommended   Changes   to\n Section 3 of [the  Reference  Model]\
    \  to  Include  CDT]  without\n exception and announces its intention to pursue\
    \  vigorously  the\n incorporation of CDT as the first major extension to  the\
    \  Basic\n Reference Model of OSI.\"  In the same document, X3T5 notes  that\n\
    \ it \"intends to issue and maintain a  version  of  DP7498  to  be\n referred\
    \ to as DP7498-prime, incorporating the CDT  extensions.\"\n That there is also\
    \ significant international support for the CDT\n concept is clear,  however,\
    \  from  the  membership  of  the  ISO\n SC16/WG1 Ad Hoc Group on Connectionless\
    \ Data Transmission, which\n produced the N555 document last November; it includes\
    \  represen-\n tatives from France, Japan, Germany, and the United  Kingdom  as\n\
    \ well as from the U.S.  Those who believe that the CDT concept is\n an essential\
    \ part of the OSI architecture hope  that  eventually\n the DP7498-prime document,\
    \ or its successor,  will  replace  the\n exclusively  connection-oriented  Reference\
    \  Model  before   the\n latter becomes an International Standard.\n 6  Acknowledgements\n\
    \                      APPENDIX A - Vocabulary\n OSI Terminology\n The following\
    \ terms are  defined  in  either  the  text  or  the\n vocabulary annex (or both)\
    \ of the Draft Proposed Reference Model\n of OSI (ISO/DP7498).  Some terms are\
    \ given more than one defini-\n tion in different sections of the  Reference \
    \ Model;  these  are\n marked with an asterisk (*), to indicate that selection\
    \  of  the\n accompanying   definition   involved   the   author's   personal\n\
    \ judgement.\n                     [to be supplied]\n (N)-connection\n (N)-service-access-point\n\
    \ (N)-service-access-point-address\n (N)-layer\n system\n (N)-entity\n (N)-connection-endpoint-identifier\n\
    \ CDT Terminology\n The  following  terms,  not  yet  part  of  the   standard\
    \   OSI\n vocabulary,  relate  to  the  concept  of  connectionless   data\n transmission.\n\
    \ \"Connectionless  Data  Transmission  is  the  transmission  (not\n transfer)\
    \   of   an   (N)-service-data-unit   from   a    source\n (N)-service-access-point\
    \   to   one    or    more    destination\n (N)-service-access-points without\
    \ establishing an (N)-connection\n transmission of a  single  self-contained \
    \ (N)-service-data-unit\n between  (N+1)-entities  upon  the  performance  of\
    \   a   single\n (N)-service access.\"\n Transmit: \"to cause to pass or be conveyed\
    \ through  space  or  a\n medium.\"  This term refers to the act of conveying\
    \ only, without\n implying anything about reception.\n Transfer: \"to convey \
    \ from  one  place,  person,  or  thing,  to\n another.\"  A one-way peer-to-peer\
    \ connotation restricts the  use\n of this term to cases in which the receiving\
    \ peer  is  party  to\n and accepts the data transferred.\n Exchange: \"to give\
    \ and receive, or lose and take,  reciprocally,\n as things of the same kind.\"\
    \  A two-way peer-to-peer connotation\n restricts the use of this term to cases\
    \ in which both  give  and\n receive directions are clearly evident.\n datagram\n\
    \ unit-data transfer/transmission\n transaction (from SC1/N688)\n data transmission\
    \ (from DIS 2382 Section 9)\n 1.  Data Processing - Open  Systems  Interconnection\
    \  -  Basic\n                 Reference Model.\n         Source:         ISO/TC97/SC16\n\
    \         Reference:      ISO/DP7498\n                         X3T51/80-67\n \
    \                        X3S33/X3T56/80-121\n                         X3S37/80-115\n\
    \         Date:           12/80\n 2.  Recommended Changes to Section  3  of  97/16\
    \  N537,  Basic\n                 Specifications of the Reference Model of  OSI,\n\
    \                 to Include Connectionless Data Transmission.\n         Source:\
    \         ISO/TC97/SC16/WG1  Ad  Hoc  Group   on\n                           \
    \      Connectionless Data  Transmis-\n                                 sion\n\
    \         Reference:      ISO/TC97/SC16/N555\n                         X3S37/81-9\n\
    \                         X3T51/80-68\n                         X3S33/X3T56/80-122\n\
    \         Date:           11/80\n 3.   Report  of  the  Ad  Hoc  Group  on  Connectionless\
    \  Data\n                 Transmission.\n         Source:         ISO/TC97/SC16/WG1\
    \  Ad  Hoc  Group   on\n                                 Connectionless Data \
    \ Transmis-\n                                 sion\n         Reference:      ISO/TC97/SC16/N566\n\
    \                         X3T51/80-69\n                         X3S33/X3T56/81-13\n\
    \                         X3S37/81-35\n         Date:           11/80\n 4.  Definitions\
    \ of the Term \"Connectionless Data Transmission\"\n                 (a letter\
    \ to the chairman of ANSC  X3T51  from\n                 the acting chairman of\
    \ ANSC X3T56).\n         Source:         ANSC X3S33/X3T56\n         Reference:\
    \      X3S33/X3T56/81-22\n 5.  Connectionless Provisions for OSI Reference Model.\n\
    \         Source:         ANSC X3S37\n         Reference:      ISO/TC97/SC6/WG2/W12\n\
    \                         X3S37/81-16R\n         Date:           2/81\n 6.  Comments\
    \ on Recommended Changes  to  Section  3  of  97/16\n                 N537, Basic\
    \  Specification  of  the  Reference\n                 Model of OSI, to include\
    \  Connectionless  Data\n                 Transmission, SC16/N555.\n         Source:\
    \         DIN (FRG)\n         Reference:      ISO/TC97/SC6/WG2/W10\n         Date:\
    \           2/81\n 7.  Connectionless Data Transmission.\n         Source:   \
    \      X3S33/X3T56 Ad Hoc  Group  on  Connec-\n                              \
    \   tionless Data Transmission\n         Reference:      X3S33/X3T56/81-26\n \
    \        Date:           1/81\n 8.  Contribution to Document ISO/TC97/SC16 N555\
    \ Concerning the\n                 Extension of General Concepts from  the  Basic\n\
    \                 Reference Model to Connectionless Data  Trans-\n           \
    \      fer Mode.\n         Source:         ISO/TC97/SC16/WG1 Ad Hoc Model  Exten-\n\
    \                                 sion Group B\n         Reference:\n        \
    \ Date:           3/81\n 9.  US Position on Connectionless Data Transmission.\n\
    \         Source:         ANSC X3T5\n 10. Revision  of  SC16/N551  to  Include\
    \  Connectionless  Data\n                 Transmission.\n         Source:    \
    \     ANSC X3S33/X3T56\n         Reference:      ISO/TC97/SC16/N602\n        \
    \                 X3S33/X3T56/81-67\n                         X3T51/81-20\n  \
    \                       X3S37/81-17\n         Date:           3/81\n 11. Report\
    \ of USA Vote and Comments on ISO DP7498.\n         Source:         ANSC X3T5\n\
    \         Reference:      ISO/TC97/SC16/N590\n                         X3T51/81-29\n\
    \         Date:           3/81\n 12. USA Proposed  Revision  to  Draft  Basic\
    \  Session  Service\n                 Specification,\n                 ISO TC97/SC16\
    \ N553.\n         Source:         ANSC X3S33/X3T56\n         Reference:      ISO/TC97/SC16/N597\n\
    \                         X3S33/X3T56/81-39R\n                         X3T51/81-28\n\
    \         Date:           3/81\n 13.  USA  Proposed  Revision  to   Draft   Transport\
    \   Service\n                 Specification,\n                 ISO TC97/SC16 N563.\n\
    \         Source:         ANSC X3S33/X3T56\n         Reference:      ISO/TC97/SC16/N601\n\
    \ 14. Comments on Connectionless Data Transmission.\n         Source:        \
    \ Robert F. Stover, Honeywell Inc.\n         Reference:      Private communication\n\
    \         Date:           4/81\n 15. Proposed Changes to the OSI Transport Layer.\n\
    \         Source:         Gregory Ennis, Sytek Inc.\n         Reference:     \
    \ X3T51 Reference  Model  Editing  Group\n                         V3.B\n    \
    \     Date:           3/81\n 16. Review of the ISO Draft Proposal (DP  7498),\
    \  Open  System\n                 Interconnection   Reference   Model   (Project\n\
    \                 IPSC-0168).\n         Source:         National  Security   Agency,\
    \   Central\n                                 Security  Service,  Department\n\
    \                                 of Defense\n         Reference:      NSA/CSS\
    \ Serial T095/008/81\n                         X3T51 Reference  Model  Editing\
    \  Group\n                         V3.F\n         Date:           3/81\n 17. Comments\
    \ on Draft Proposal ISO/DP7498.\n         Source:         Working Group on Power\
    \ System  Control\n                                 Centers, IEEE Power  Engineer-\n\
    \                                 ing Society\n         Reference:      X3T51\
    \ Reference  Model  Editing  Group\n                         V3.I, V4.4\n    \
    \     Date:           3/81\n 18.  Review  of  ISO  Draft  Proposal   7498   (Open\
    \   Systems\n                 Interconnection).\n         Source:         Department\
    \ of the Air Force\n 19. Proposed Improvements to Section 6 of DP7498.\n     \
    \    Source:         A. Lyman Chapin, Data General Corpora-\n                \
    \                 tion\n         Reference:      X3T51 Reference  Model  Editing\
    \  Group\n                         V3.M\n         Date:           3/81\n 20. Comments\
    \ on Section 7.4 of DP7498.\n         Source:         ANSC X3S33/X3T56\n     \
    \    Reference:      X3S33/X3T56/81-30\n                         X3T51 Reference\
    \  Model  Editing  Group\n                         V3.H\n         Date:      \
    \     3/81\n 21. Comments on DP7498.\n         Source:         ANSC X3S33/X3T56\n\
    \         Reference:      X3S33/X3T56/81-60\n                         X3T51 Reference\
    \  Model  Editing  Group\n                         V3.N\n         Date:      \
    \     3/81\n 22. USA Position Concerning Progression of the Reference Model\n\
    \                 of Open Systems Interconnection (Parts  I  and\n           \
    \      II of USA Comments on N309).\n         Source:         ANSC X3T5\n    \
    \     Reference:      ISO/TC97/SC16/N405\n                         X3T5/80-120\n\
    \                         X3T51/80-43\n         Date:           9/80\n 23. Addenda\
    \ to the USA Position Concerning Progression of  OSI\n                 Reference\
    \ Model (Parts I and II).\n         Source:         ANSC X3T5\n 24. US Position\
    \ on the  WG1  Rapporteur's  Report  of  October\n                 1980.\n   \
    \      Source:         ANSC X3T5\n         Reference:      X3T5/80-142\n     \
    \                    X3T51/80-62\n         Date:           10/80\n 25. Resolutions:\
    \ ISO/TC97/SC16 - Open Systems Interconnection:\n                 Berlin - November\
    \ 12 - 14, 1980.\n         Source:         ISO/TC97/SC16\n         Reference:\
    \      ISO/TC97/SC16/N570\n                         X3S33/X3T56/80-11\n      \
    \   Date:           11/80\n 26. NBS  Analysis  of  Major  US  Government  Requirements\
    \  of\n                 Transport Protocol Services.\n         Source:       \
    \  National  Bureau  of   Standards,   US\n                                 Department\
    \ of Commerce\n         Reference:      ISO/TC97/SC16/N404\n                 \
    \        X3T51/80-32\n                         X3S33/X3T56/80-82\n         Date:\
    \           9/80\n 27. Features of the Transport and Session Protocols.\n    \
    \     Source:         National  Bureau  of   Standards,   US\n               \
    \                  Department of Commerce\n         Reference:      X3S33/X3T56/80-30\n\
    \         Date:           3/80\n 28. Specification of the Transport Protocol.\n\
    \         Source:         National  Bureau  of   Standards,   US\n 29. Features\
    \ of Internetwork Protocol.\n         Source:         National  Bureau  of   Standards,\
    \   US\n                                 Department of Commerce\n         Reference:\
    \      X3T51/81-23\n                         X3S33/X3T56/80-96\n             \
    \            X3S37/81-31\n         Date:           7/80\n 30. Service Specification\
    \ of an Internetwork Protocol.\n         Source:         National  Bureau  of\
    \   Standards,   US\n                                 Department of Commerce\n\
    \         Reference:      X3T51/81-24\n                         X3S33/X3T56/81-18\n\
    \                         X3S37/81-32\n         Date:           9/80\n 31. DoD\
    \ Standard Internet Protocol.\n         Source:         US  Department  of  Defense\
    \   Advanced\n                                 Research Projects Agency\n    \
    \     Reference:      X3S33/X3T56/80-17\n                         X3S37/80-17\n\
    \         Date:           1/80\n 32. Connectionless Data Transfer (letter from\
    \ the chairman  of\n                 X3T51 to X3T55, X3T56, and X3S3).\n     \
    \    Source:         John Day, Digital Technology, Inc.\n         Reference: \
    \     X3T51/80-76\n         Date:           12/80\n 33. Local Area Networks and\
    \ the OSI Reference Model.\n         Source:         Robert  R.  Shatzer,   Hewlett-Packard\n\
    \ 34. An Introduction to Local Area Networks.\n         Source:         David\
    \ D. Clark, et. al.\n         Reference:      IEEE Proceedings 66:11\n       \
    \  Date:           11/78\n 35. Issues in Packet-Network Interconnection.\n   \
    \      Source:         V.G. Cerf and P.T. Kirstein\n         Reference:      IEEE\
    \ Proceedings 66:11\n         Date:           11/78\n 36. Connectionless Data\
    \ Transfer.\n         Source:         John Neumann, Microdata Corp.\n        \
    \ Reference:      X3S33/X3T56/80-120\n         Date:           12/80\n 37. A Protocol\
    \ for Packet Network Interconnection.\n         Source:         V.G. Cerf and\
    \ R.E. Kahn\n         Reference:      IEEE  Transactions  on   Communication\n\
    \                         COM-22 No. 5\n         Date:           5/74\n 38. The\
    \ CYCLADES End-to-End Protocol.\n         Source:         H. Zimmermann\n    \
    \     Reference:      Proceedings of the IEEE Vol. 66 No. 11\n         Date: \
    \          11/78\n 39.  Interprocess   Communication   Protocols   for   Computer\n\
    \                 Networks.\n         Source:         Carl Sunshine, USC/ISI\n\
    \ 40. CCITT Recommendation X.25 - Interface  Between  Data  Ter-\n           \
    \      minal     Equipment     (DTE)     and     Data\n                 Circuit-Terminating\
    \   Equipment   (DCE)    for\n                 Terminals Operating  in  the  Packet\
    \  Mode  on\n                 Public Data Networks.\n         Source:        \
    \ CCITT Study Group VII\n         Reference:      COM VII/489\n         Date:\
    \           11/80\n 41. An Analysis of ARPAnet Protocols.\n         Source:\n\
    \         Reference:\n         Date:\n 42. ISO High-Level Data Link Control -\
    \ Elements of Procedure.\n         Source:         ISO\n         Reference:  \
    \    ISO/IS4335\n         Date:           1977\n 43. ETHERNET Specification (Version\
    \ 1.0)\n         Source:         Xerox Corporation\n         Reference:      X3T51/80-50\n\
    \         Date:           9/80\n 44. PUP: An Internetwork Architecture.\n    \
    \     Source:         D.R. Boggs,  J.F.  Shoch,  E.A.  Taft,\n               \
    \                  R.M. Metcalfe\n 45. Delta-t Protocol Preliminary Specification.\n\
    \         Source:         R.W. Watson\n         Reference:      Lawrence Livermore\
    \ Laboratories\n         Date:           11/79\n 46. The Evolving IEEE 802 (Local\
    \ Network) Standard.\n         Source:         Bryan   R.   Hoover,   Hewlett-Packard\n\
    \                                 Corporation\n         Reference:\n         Date:\n\
    \ 47. A System for  Interprocess  Communication  in  a  Resource\n           \
    \      Sharing Computer Network.\n"
