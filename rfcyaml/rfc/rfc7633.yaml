- contents:
  - '        X.509v3 Transport Layer Security (TLS) Feature Extension

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The purpose of the TLS feature extension is to prevent downgrade\n
    \  attacks that are not otherwise prevented by the TLS protocol.  In\n   particular,
    the TLS feature extension may be used to mandate support\n   for revocation checking
    features in the TLS protocol such as Online\n   Certificate Status Protocol (OCSP)
    stapling.  Informing clients that\n   an OCSP status response will always be stapled
    permits an immediate\n   failure in the case that the response is not stapled.
    \ This in turn\n   prevents a denial-of-service attack that might otherwise be
    possible.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7633.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Definitions . . . . . . . . . . . . . . . . . . . . . .
    . . .   2\n     2.1.  Requirements Language . . . . . . . . . . . . . . . . .
    .   2\n     2.2.  TLS Feature, X.509 Extension  . . . . . . . . . . . . . .   3\n
    \  3.  Purpose . . . . . . . . . . . . . . . . . . . . . . . . . . .   3\n   4.
    \ Syntax  . . . . . . . . . . . . . . . . . . . . . . . . . . .   4\n     4.1.
    \ TLS Feature . . . . . . . . . . . . . . . . . . . . . . .   4\n     4.2.  Use
    . . . . . . . . . . . . . . . . . . . . . . . . . . .   5\n       4.2.1.  Certificate
    Signing Request . . . . . . . . . . . . .   5\n       4.2.2.  Certificate Signing
    Certificate . . . . . . . . . . .   5\n       4.2.3.  End-Entity Certificate  .
    . . . . . . . . . . . . . .   5\n     4.3.  Processing  . . . . . . . . . . .
    . . . . . . . . . . . .   6\n       4.3.1.  Certification Authority . . . . .
    . . . . . . . . . .   6\n       4.3.2.  Server  . . . . . . . . . . . . . . .
    . . . . . . . .   7\n       4.3.3.  Client  . . . . . . . . . . . . . . . . .
    . . . . . .   7\n   5.  Security Considerations . . . . . . . . . . . . . . .
    . . . .   7\n     5.1.  Alternative Certificates and Certificate Issuers  . .
    . .   7\n     5.2.  Denial of Service . . . . . . . . . . . . . . . . . . . .
    \  8\n     5.3.  Cipher Suite Downgrade Attack . . . . . . . . . . . . . .   8\n
    \  6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8\n   7.
    \ Normative References  . . . . . . . . . . . . . . . . . . . .   9\n   Appendix
    A.  ASN.1 Module . . . . . . . . . . . . . . . . . . . .  10\n   Acknowledgements
    \ . . . . . . . . . . . . . . . . . . . . . . . .  11\n   Author's Address  .
    . . . . . . . . . . . . . . . . . . . . . . .  11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Transport Layer Security (TLS) feature extension provides
    a means\n   of preventing downgrade attacks that are not otherwise prevented by\n
    \  the TLS protocol.\n   Since the TLS protocol itself provides strong protection
    against most\n   forms of downgrade attack including downgrade attacks against
    cipher\n   suite choices offered and client credentials, the TLS feature\n   extension
    is only relevant to the validation of TLS protocol\n   credentials.\n"
  title: 1.  Introduction
- contents:
  - '2.  Definitions

    '
  - contents:
    - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119 [RFC2119].\n"
    title: 2.1.  Requirements Language
  - contents:
    - "2.2.  TLS Feature, X.509 Extension\n   In order to avoid the confusion that
      would occur in attempting to\n   specify an X.509 extension describing the use
      of TLS extensions, in\n   this document the term \"extension\" is reserved to
      refer to X.509v3\n   extensions and the term \"TLS feature extension\" is used
      to refer to\n   what the TLS specification [RFC5246] refers to as an \"extension\".\n"
    title: 2.2.  TLS Feature, X.509 Extension
  title: 2.  Definitions
- contents:
  - "3.  Purpose\n   Currently, the only TLS feature extensions that are relevant
    to the\n   revocation status of credentials are the Certificate Status Request\n
    \  extension (status_request) and the Multiple Certificate Status\n   Extension
    (status_request_v2).  These extensions are used to support\n   in-band exchange
    of Online Certificate Status Protocol (OCSP) tokens,\n   otherwise known as OCSP
    stapling.  These extensions are described in\n   [RFC6066] and [RFC6961].\n   The
    OCSP stapling mechanism described in [RFC6066] permits a TLS\n   server to provide
    evidence of valid certificate status in-band.  When\n   this information is provided
    in-band, the privacy, performance, and\n   reliability concerns arising from the
    need to make a third-party\n   connection during the TLS handshake are eliminated.
    \ However, a\n   client cannot draw any conclusion from the absence of in-band
    status\n   information unless it knows that the legitimate server would have\n
    \  provided it.  The status information might have been omitted because\n   the
    server does not support the extension or because the server is\n   withholding
    the information intentionally, knowing the certificate to\n   be invalid.\n   The
    inclusion of a TLS feature extension advertising the\n   status_request feature
    in the server end-entity certificate permits a\n   client to fail immediately
    if the certificate status information is\n   not provided by the server.  The
    need to query the OCSP responder is\n   eliminated entirely.  This improves client
    efficiency and, more\n   importantly, prevents a denial-of-service attack against
    the client\n   by either blocking the OCSP response or mounting a denial-of-service\n
    \  attack against the OCSP responder.\n   Since the TLS feature extension is an
    option, it is not likely that\n   an attacker attempting to obtain a certificate
    through fraud will\n   choose to have a certificate issued with this extension.
    \ Such risks\n   are more appropriately addressed by mechanisms such as Certification\n
    \  Authority Authorization DNS records [RFC6844] that are designed to\n   prevent
    or mitigate mis-issue.\n   A server offering an end-entity certificate with a
    TLS feature\n   extension MUST satisfy a client request for the specified feature\n
    \  unless this would be redundant as described below.  Clients MAY\n   refuse
    to accept the connection if the server does not accept a\n   request for a specified
    feature.\n   A Certification Authority SHOULD NOT issue certificates that specify\n
    \  a TLS feature extension advertising features that the server does not\n   support.\n
    \  A server MAY advise a Certification Authority that it is capable of\n   supporting
    a feature by including the corresponding TLS feature\n   extension in a Certificate
    Signing Request [RFC2986].  A server\n   SHOULD verify that its configuration
    supports the features advertised\n   in the credentials presented to a client
    requesting connection.\n   This document describes the use of the TLS feature
    in PKIX end-entity\n   certificates and Certificate Signing Certificates.  A mechanism
    that\n   MAY be used to describe support for the specified features in-band\n
    \  for the most commonly used certificate registration protocol is also\n   provided.\n"
  title: 3.  Purpose
- contents:
  - "4.  Syntax\n   See Appendix A for an ASN.1 module\n   The TLS feature extension
    has the following format:\n   id-pe-tlsfeature OBJECT IDENTIFIER ::=  { id-pe
    24 }\n   Features ::= SEQUENCE OF INTEGER\n   The extnValue of the id-pe-tlsfeature
    extension is the ASN.1 DER\n   encoding of the Features structure.\n   The TLS
    feature extension SHOULD NOT be marked critical.  RFC 5280\n   [RFC5280] requires
    that implementations that do not understand\n   critical extensions MUST reject
    the certificate.  Marking the TLS\n   feature extension critical breaks backward
    compatibility and is not\n   recommended unless this is the desired behavior.\n"
  - contents:
    - "4.1.  TLS Feature\n   The object member \"Features\" is a sequence of TLS extension\n
      \  identifiers (features, in this specification's terminology) as\n   specified
      in the IANA Transport Layer Security (TLS) Extensions\n   registry.  If these
      features are requested by the client in its\n   ClientHello message, then the
      server MUST return a ServerHello\n   message that satisfies this request.\n
      \  This specification does not require a TLS client to offer or support\n   any
      TLS feature regardless of whether or not it is specified in the\n   server certificate's
      TLS feature extension.  In particular, a client\n   MAY request and a server
      MAY support any TLS extension regardless of\n   whether or not it is specified
      in a TLS feature extension.\n   A server that offers a certificate that contains
      a TLS feature\n   extension MUST support the features specified and comply with
      the\n   corresponding requirements.\n"
    title: 4.1.  TLS Feature
  - contents:
    - '4.2.  Use

      '
    - contents:
      - "4.2.1.  Certificate Signing Request\n   If the certificate issue mechanism
        makes use of the PKCS #10\n   Certificate Signing Request (CSR) [RFC2986],
        the CSR MAY specify a\n   TLS feature extension as a CSR Attribute as defined
        in Section 4.1 of\n   [RFC2986].  A server or server administration tool should
        only\n   generate key signing requests that it knows can be supported by the\n
        \  server for which the certificate is intended.\n"
      title: 4.2.1.  Certificate Signing Request
    - contents:
      - "4.2.2.  Certificate Signing Certificate\n   When present in a Certificate
        Signing Certificate (i.e.,\n   Certification Authority certificate with the
        key usage extension\n   value set to keyCertSign), the TLS feature extension
        specifies a\n   constraint on valid certificate chains.  Specifically, a certificate\n
        \  that is signed by a Certificate Signing Certificate that contains a\n   TLS
        feature extension MUST contain a TLS feature extension that\n   offers the
        same set or a superset of the features advertised in the\n   signing certificate.\n
        \  This behavior provides a means of requiring support for a particular\n
        \  set of features for certificates issued under a particular\n   Certificate
        Signing Certificate without requiring TLS clients to\n   verify compliance
        with TLS feature extensions in multiple\n   certificates.\n"
      title: 4.2.2.  Certificate Signing Certificate
    - contents:
      - "4.2.3.  End-Entity Certificate\n   When specified in a server end-entity
        certificate (i.e., a\n   certificate that specifies the id-kp-serverAuth Extended
        Key Usage\n   (EKU)), the TLS feature extension specifies criteria that a
        server\n   MUST meet to be compliant with the feature declaration.\n   In
        the case that a client determines that the server configuration is\n   inconsistent
        with the specified feature declaration, it MAY reject\n   the TLS configuration.\n"
      - contents:
        - "4.2.3.1.  TLS status_request\n   In the case that a client determines that
          the server configuration is\n   inconsistent with a feature declaration
          specifying support for the\n   TLS status_request extension, it SHOULD reject
          the TLS configuration.\n   A client MAY accept a TLS configuration despite
          it being inconsistent\n   with the TLS feature declaration if the validity
          of the certificate\n   chain presented can be established through other
          means (for example,\n   by successfully obtaining the OCSP data from another
          source).\n   There are certain situations in which the alternative to establishing\n
          \  a connection with imperfect TLS security is to transmit the same\n   information
          with no security controls whatsoever.  Accordingly, a\n   client MAY accept
          a TLS configuration despite it being inconsistent\n   with the TLS feature
          declaration but MUST NOT distinguish that\n   connection as secure.\n"
        title: 4.2.3.1.  TLS status_request
      title: 4.2.3.  End-Entity Certificate
    title: 4.2.  Use
  - contents:
    - "4.3.  Processing\n   Advertising a TLS feature extension may change the expectations
      of\n   relying parties.  If these expectations are not met, a valid\n   certificate
      may be rejected as invalid.  Particular attention is\n   required at the start
      of a certificate lifecycle.  A server will be\n   unable to comply with a TLS
      feature extension if the certificate is\n   issued and released to the subject
      before the corresponding status\n   token is published.\n"
    - contents:
      - "4.3.1.  Certification Authority\n   A Certification Authority SHOULD NOT
        issue certificates with a TLS\n   feature extension unless there is an affirmative
        statement to the\n   effect that the end entity intends to support the specified
        features\n   (for example, the use of a feature extension in the CSR or through
        an\n   out-of-band communication).\n   A Certification Authority SHOULD ensure
        that the certificate\n   provisioning process for certificates containing
        a TLS feature\n   extension permits the certificate subject to meet the requirements\n
        \  (for example, ensuring that OCSP tokens are published before the\n   corresponding
        certificate is released to the subscriber).\n"
      title: 4.3.1.  Certification Authority
    - contents:
      - "4.3.2.  Server\n   A TLS server certificate containing a TLS feature extension
        MAY be\n   used with any TLS server that supports the specified features.
        \ It is\n   not necessary for the server to provide support for the TLS feature\n
        \  extension itself.  Such support is nevertheless desirable as it can\n   reduce
        the risk of administrative error.\n   A server SHOULD verify that its configuration
        is compatible with the\n   TLS feature extension expressed in a certificate
        it presents.  When\n   an existing certificate is to be replaced by a new
        one, the server\n   SHOULD NOT begin using the new certificate until the necessary
        OCSP\n   status token or tokens are available.\n   A server MAY override local
        configuration options if necessary to\n   ensure consistency, but it SHOULD
        inform the administrator whenever\n   such an inconsistency is discovered.\n
        \  A server SHOULD support generation of the feature extension in CSRs\n   if
        key generation is supported.\n"
      title: 4.3.2.  Server
    - contents:
      - "4.3.3.  Client\n   A client MUST treat a certificate with a TLS feature extension
        as an\n   invalid certificate if the features offered by the server do not\n
        \  contain all features present in both the client's ClientHello message\n
        \  and the TLS feature extension.\n   In the case that use of TLS with a valid
        certificate is mandated by\n   explicit security policy, application protocol
        specification, or\n   other means, the client MUST refuse the connection.
        \ If the use of\n   TLS with a valid certificate is optional, a client MAY
        accept the\n   connection but MUST NOT treat the certificate as valid.\n"
      title: 4.3.3.  Client
    title: 4.3.  Processing
  title: 4.  Syntax
- contents:
  - '5.  Security Considerations

    '
  - contents:
    - "5.1.  Alternative Certificates and Certificate Issuers\n   Use of the TLS feature
      extension to mandate support for a particular\n   form of revocation checking
      is optional.  This control can provide\n   protection in the case that a certificate
      with a TLS feature is\n   compromised after issue but not in the case that the
      attacker obtains\n   an unmarked certificate from an issuer through fraud.\n
      \  The TLS feature extension is a post-issue security control.  Such\n   risks
      can only be addressed by security controls that take effect\n   before issue.\n"
    title: 5.1.  Alternative Certificates and Certificate Issuers
  - contents:
    - "5.2.  Denial of Service\n   A certificate issuer could issue a certificate
      that intentionally\n   specified a feature statement that they knew the server
      could not\n   support.\n   The consequences of such refusal would appear to
      be limited since a\n   Certification Authority could equally refuse to issue
      the\n   certificate.\n"
    title: 5.2.  Denial of Service
  - contents:
    - "5.3.  Cipher Suite Downgrade Attack\n   The TLS feature extension does not
      provide protection against a\n   cipher suite downgrade attack.  This is left
      to the existing controls\n   in the TLS protocol itself.\n"
    title: 5.3.  Cipher Suite Downgrade Attack
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   IANA has added the following entry in the \"SMI Security
    for PKIX\n   Certificate Extension\" (1.3.6.1.5.5.7.1) registry:\n   Decimal  Description
    \                    References\n   -------  ------------------------------  ---------------------\n
    \    24     id-pe-tlsfeature                this document (RFC 7633)\n   IANA
    has added the following entry in the \"SMI Security for PKIX\n   Module Identifier\"
    (1.3.6.1.5.5.7.0) registry:\n   Decimal  Description                     References\n
    \  -------  ------------------------------  ---------------------\n     86     id-mod-tls-feature-2015
    \        this document (RFC 7633)\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI
    10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
    \  [RFC2986]  Nystrom, M. and B. Kaliski, \"PKCS #10: Certification\n              Request
    Syntax Specification Version 1.7\", RFC 2986,\n              DOI 10.17487/RFC2986,
    November 2000,\n              <http://www.rfc-editor.org/info/rfc2986>.\n   [RFC5246]
    \ Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)
    Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August
    2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]  Cooper,
    D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and W.
    Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate and
    Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280,
    May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n   [RFC6066]
    \ Eastlake 3rd, D., \"Transport Layer Security (TLS)\n              Extensions:
    Extension Definitions\", RFC 6066,\n              DOI 10.17487/RFC6066, January
    2011,\n              <http://www.rfc-editor.org/info/rfc6066>.\n   [RFC6844]  Hallam-Baker,
    P. and R. Stradling, \"DNS Certification\n              Authority Authorization
    (CAA) Resource Record\", RFC 6844,\n              DOI 10.17487/RFC6844, January
    2013,\n              <http://www.rfc-editor.org/info/rfc6844>.\n   [RFC6961]  Pettersen,
    Y., \"The Transport Layer Security (TLS)\n              Multiple Certificate Status
    Request Extension\", RFC 6961,\n              DOI 10.17487/RFC6961, June 2013,\n
    \             <http://www.rfc-editor.org/info/rfc6961>.\n"
  title: 7.  Normative References
- contents:
  - "Appendix A.  ASN.1 Module\n   TLS-Feature-Module-2015 {\n       iso(1) identified-organization(3)
    dod(6) internet(1)\n       security(5) mechanisms(5) pkix(7) id-mod(0)\n       id-mod-tls-feature-2015(86)}\n
    \  DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n       IMPORTS -- From RFC 5912\n
    \      id-pe\n       FROM PKIX1Explicit-2009 {\n           iso(1) identified-organization(3)
    dod(6) internet(1)\n           security(5) mechanisms(5) pkix(7) id-mod(0)\n           id-mod-pkix1-explicit-02(51)}\n
    \      EXTENSION\n       FROM PKIX-CommonTypes-2009 {\n           iso(1) identified-organization(3)
    dod(6) internet(1)\n           security(5) mechanisms(5) pkix(7) id-mod(0)\n           id-mod-pkixCommon-02(57)}\n
    \      ;\n       CertExtensions EXTENSION ::= {\n           ext-TLSFeatures, ...
    }\n           -- TLS Features Extension\n       ext-TLSFeatures EXTENSION ::=
    { SYNTAX\n           Features IDENTIFIED BY id-pe-tlsfeature }\n       id-pe-tlsfeature
    OBJECT IDENTIFIER ::= { id-pe 24 }\n       Features ::= SEQUENCE OF INTEGER\n
    \  END\n"
  title: Appendix A.  ASN.1 Module
- contents:
  - "Acknowledgements\n   This proposal incorporates text and other contributions
    from\n   participants in the IETF and CA-Browser forum -- in particular, Robin\n
    \  Alden, Richard Barnes, Viktor Dukhovni, Stephen Farrell, Gervase\n   Markham,
    Yoav Nir, Tom Ritter, Jeremy Rowley, Stefan Santesson, Ryan\n   Sleevi, Brian
    Smith, Rob Stradling, and Sean Turner.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Phillip Hallam-Baker\n   Comodo Group Inc.\n   Email: philliph@comodo.com\n"
  title: Author's Address
