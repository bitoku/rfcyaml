- contents:
  - '        Signaling One-Click Functionality for List Email Headers

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes a method for signaling a one-click function\n
    \  for the List-Unsubscribe email header field.  The need for this\n   arises
    out of the actuality that mail software sometimes fetches URLs\n   in mail header
    fields, and thereby accidentally triggers\n   unsubscriptions in the case of the
    List-Unsubscribe header field.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8058.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction and Motivation . . . . . . . . . . . .
    . . . . .   2\n   2.  Definitions . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Implementation  . . . . . . . . . . . . . . . . . . . . . .
    .   4\n     3.1.  Mail Senders  . . . . . . . . . . . . . . . . . . . . . .   4\n
    \    3.2.  Mail Receivers  . . . . . . . . . . . . . . . . . . . . .   5\n   4.
    \ Additional Requirements . . . . . . . . . . . . . . . . . . .   5\n   5.  Header
    Syntax . . . . . . . . . . . . . . . . . . . . . . . .   5\n   6.  Security Considerations
    . . . . . . . . . . . . . . . . . . .   5\n   7.  IANA Considerations . . . .
    . . . . . . . . . . . . . . . . .   6\n   8.  Examples  . . . . . . . . . . .
    . . . . . . . . . . . . . . .   7\n     8.1.  Simple  . . . . . . . . . . . .
    . . . . . . . . . . . . .   7\n     8.2.  Complex . . . . . . . . . . . . . .
    . . . . . . . . . . .   7\n     8.3.  Complex with 'multipart/form-data'  . .
    . . . . . . . . .   7\n   9.  Normative References  . . . . . . . . . . . . .
    . . . . . . .   8\n   Authors' Addresses  . . . . . . . . . . . . . . . . . .
    . . . . .   8\n"
  title: Table of Contents
- contents:
  - "1.  Introduction and Motivation\n   A List-Unsubscribe email header field [RFC2369]
    can contain HTTPS\n   [RFC7230] URIs.  In that header field, the HTTPS URI is
    intended to\n   unsubscribe the recipient of the message from the list.  But anti-\n
    \  spam software often fetches all resources in mail header fields\n   automatically,
    without any action by the user, and there is no\n   mechanical way for a sender
    to tell whether a request was made\n   automatically by anti-spam software or
    manually requested by a user.\n   To prevent accidental unsubscriptions, senders
    return landing pages\n   with a confirmation step to finish the unsubscribe request.
    \ A live\n   user would recognize and act on this confirmation step, but an\n
    \  automated system would not.  That makes the unsubscription process\n   more
    complex than a single click.\n   Operators of broadcast marketing lists tend to
    be primarily concerned\n   about deliverability of their mail: whether the mail
    is delivered to\n   the recipients and how the messages are presented, e.g., whether
    in\n   the primary inbox or in a junk folder.  Many mail systems allow\n   recipients
    to report mail as spam or junk, and mail streams from\n   senders whose mail is
    often reported as junk tend to have poor\n   deliverability.  Hence, the mailers
    want to make it as easy as\n   possible for recipients to unsubscribe; if an unsubscription
    process\n   is too difficult, the recipient's alternative is to report mail from\n
    \  the sender as junk until the mail no longer appears in the\n   recipient's
    inbox.\n   Operators of recipient mail systems are aware that their users do not\n
    \  make a clear distinction between unsubscription and junk.  In some\n   cases,
    they allow trustworthy mailers to request notification when\n   their mail is
    reported as junk so they can unsubscribe the recipient,\n   but the process of
    identifying trustworthy mailers and notifying them\n   does not scale well to
    large numbers of small mailers.  This\n   specification provides a way for recipient
    systems to notify the\n   mailer automatically, using only information within
    the mail message,\n   and without prearrangement.  Some recipient systems might
    wish to\n   send an unsubscription notice to mailers whenever a user reports a\n
    \  message as junk, or they might offer the user the option of reporting\n   and
    unsubscribing.\n   If a mail recipient is unsubscribing manually and the unsubscription\n
    \  process requires confirmation, the resulting web page is presented to\n   the
    recipient who can then click the appropriate button.  But when\n   the unsubscribe
    action is combined with a user junk report, there is\n   no direct user interaction
    with the mailer's website.  Similarly, if\n   a mail system automatically unsubscribes
    recipient mailboxes that\n   have been closed or abandoned, there can be no interaction
    with a\n   user who is not present.  In those cases, the unsubscription process\n
    \  has to work without manual intervention, and in particular without\n   requiring
    that software attempt to interpret the contents of a\n   confirmation page.\n
    \  This document addresses this part of the problem, with an HTTPS POST\n   action
    for mail receivers.  Mail senders can distinguish this action\n   from other unsubscribe
    requests and handle it as a one-click\n   unsubscription without manual intervention
    by the mail recipient.\n   This document has two goals:\n   o  Allow email senders
    to signal that a List-Unsubscribe header field\n      [RFC2369] has one-click
    functionality.\n   o  Allow MUA (Mail User Agent) users to unsubscribe from mailing\n
    \     lists in a familiar environment and without leaving the MUA\n      context.
    \ A receiving system can process an unsubscription request\n      in the background
    without further interaction and know that it can\n      be fully processed by
    the mail sender's system.\n"
  title: 1.  Introduction and Motivation
- contents:
  - "2.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119] when written\n
    \  in all capital letters.\n"
  title: 2.  Definitions
- contents:
  - '3.  Implementation

    '
  - contents:
    - "3.1.  Mail Senders\n   A mail sender that wishes to enable one-click unsubscriptions
      places\n   one List-Unsubscribe header field and one List-Unsubscribe-Post\n
      \  header field in the message.  The List-Unsubscribe header field MUST\n   contain
      one HTTPS URI.  It MAY contain other non-HTTP/S URIs such as\n   MAILTO:.  The
      List-Unsubscribe-Post header MUST contain the single\n   key/value pair \"List-Unsubscribe=One-Click\".
      \ As described below, the\n   message MUST have a valid DomainKeys Identified
      Mail (DKIM) signature\n   that covers at least the List-Unsubscribe and List-Unsubscribe-Post\n
      \  headers.\n   The URI in the List-Unsubscribe header MUST contain enough\n
      \  information to identify the mail recipient and the list from which\n   the
      recipient is to be removed, so that the unsubscription process\n   can complete
      automatically.  Since there is no provision for extra\n   POST arguments, any
      information about the message or recipient is\n   encoded in the URI.  In particular,
      one-click has no way to ask the\n   user what address or from what list the
      user wishes to unsubscribe.\n   The POST request MUST NOT include cookies, HTTP
      authorization, or any\n   other context information.  The unsubscribe operation
      is logically\n   unrelated to any previous web activity, and context information
      could\n   inappropriately link the unsubscribe to previous activity.\n   The
      URI SHOULD include an opaque identifier or another hard-to-forge\n   component
      in addition to, or instead of, the plaintext names of the\n   list and the subscriber.
      \ The server handling the unsubscription\n   SHOULD verify that the opaque or
      hard-to-forge component is valid.\n   This will deter attacks in which a malicious
      party sends spam with\n   List-Unsubscribe links for a victim list, with the
      intention of\n   causing list unsubscriptions from the victim list as a side
      effect of\n   users reporting the spam, or where the attacker does POSTs directly\n
      \  to the mail sender's unsubscription server.\n   The mail sender needs to
      provide the infrastructure to handle POST\n   requests to the specified URI
      in the List-Unsubscribe header, and to\n   handle the unsubscribe requests that
      its mail will provoke.\n   The mail sender MUST NOT return an HTTPS redirect,
      since redirected\n   POST actions have historically not worked reliably, and
      many browsers\n   have turned redirected HTTP POSTs into GETs.\n   This document
      does not update [RFC2369], so the usage of List-\n   Unsubscribe URIs other
      than for one-click remains unchanged.\n"
    title: 3.1.  Mail Senders
  - contents:
    - "3.2.  Mail Receivers\n   A mail receiver can do a one-click unsubscription
      by performing an\n   HTTPS POST to the HTTPS URI in the List-Unsubscribe header.
      \ It sends\n   the key/value pair in the List-Unsubscribe-Post header as the
      request\n   body.\n   The POST content SHOULD be sent as 'multipart/form-data'
      [RFC7578] or\n   MAY be sent as 'application/x-www-form-urlencoded'.  These
      encodings\n   are the ones used by web browsers when sending forms.  The target
      of\n   the POST action is the same as the one in the GET action for a manual\n
      \  unsubscription, so this is intended to allow the same server code to\n   handle
      both.\n   The mail receiver MUST NOT perform a POST on the HTTPS URI without\n
      \  user consent.  When and how the user consent is obtained is not part\n   of
      this specification.\n"
    title: 3.2.  Mail Receivers
  title: 3.  Implementation
- contents:
  - "4.  Additional Requirements\n   The message needs at least one valid authentication
    identifier.  In\n   this version of the specification, the only supported identifier
    type\n   is DKIM [RFC6376].  Hence, senders MUST apply at least one valid DKIM\n
    \  signature to the message.\n   The List-Unsubscribe and List-Unsubscribe-Post
    headers MUST be\n   covered by the signature and included in the \"h=\" tag of
    a valid\n   DKIM-Signature header field.\n   If the message does not have the
    required DKIM signature, the mail\n   receiver SHOULD NOT offer a one-click unsubscribe
    for that message.\n"
  title: 4.  Additional Requirements
- contents:
  - "5.  Header Syntax\n   The following ABNF imports fields, WSP, and CRLF from [RFC5322].\n
    \  fields =/ list-unsubscribe-post\n   list-unsubscribe-post = \"List-Unsubscribe-Post:\"
    0*1WSP postarg CRLF\n   postarg = \"List-Unsubscribe=One-Click\"\n"
  title: 5.  Header Syntax
- contents:
  - "6.  Security Considerations\n   The List-Unsubscribe header can contain a plaintext
    or encoded\n   version of the recipient address, but that address is usually also
    in\n   the To: header.  This specification allows anyone with access to a\n   message
    to unsubscribe the recipient of the message, but that's\n   typically the case
    with existing List-Unsubscribe, just with more\n   steps.\n   A malicious mailer
    could send spam with content intended to provoke\n   large numbers of unsubscriptions
    and with suitably crafted headers to\n   send POST requests to servers that perhaps
    don't want them.  But it's\n   been possible to provoke GET requests in a similar
    way for a long\n   time (and much easier, due to spam filter auto-fetches), so
    the\n   chances of significantly increased annoyance seem low.  The content\n
    \  of the List-Unsubscribe-Post header is limited to a single known key/\n   value
    pair to prevent an attacker from creating malicious messages\n   where the POST
    operation could simulate a user filling in an\n   arbitrary form on a victim website.\n
    \  The unsubscribe operation provides a strong hint to the mailer that\n   the
    address to which the message was sent was valid, and could in\n   principle be
    used as a way to test whether an email address is valid.\n   In practice, though,
    there are simpler ways such as embedding image\n   links into the HTML of a message
    and seeing whether the recipient\n   fetches the images.\n   Since the mailer's
    server that receives the POST request cannot in\n   general tell where the request
    is coming from, the URI SHOULD contain\n   an opaque identifier or another hard-to-forge
    component to identify\n   the list and recipient address.  That can ensure that
    the request\n   originated from the List-Unsubscribe and List-Unsubscribe-Post\n
    \  headers in a message the mailer sent.  Also, the request MUST NOT\n   include
    cookies or other context information to prevent the server\n   from associating
    the request with previous web requests.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has added a new entry to the \"Permanent Message
    Header Field\n   Names\" registry.\n   Header field name: List-Unsubscribe-Post\n
    \  Applicable protocol: mail\n   Status: standard\n   Author/Change controller:
    IETF\n   Specification document: RFC 8058\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  Examples

    '
  - contents:
    - "8.1.  Simple\n   Header in Email\n   List-Unsubscribe: <https://example.com/unsubscribe/opaquepart>\n
      \  List-Unsubscribe-Post: List-Unsubscribe=One-Click\n   Resulting POST request\n
      \  POST /unsubscribe/opaquepart HTTP/1.1\n   Host: example.com\n   Content-Type:
      application/x-www-form-urlencoded\n   Content-Length: 26\n   List-Unsubscribe=One-Click\n"
    title: 8.1.  Simple
  - contents:
    - "8.2.  Complex\n   Header in Email\n   List-Unsubscribe:\n       <mailto:listrequest@example.com?subject=unsubscribe>,\n
      \      <https://example.com/unsubscribe.html?opaque=123456789>\n   List-Unsubscribe-Post:
      List-Unsubscribe=One-Click\n   Resulting POST request\n   POST /unsubscribe.html?opaque=123456789
      HTTP/1.1\n   Host: example.com\n   Content-Type: application/x-www-form-urlencoded\n
      \  Content-Length: 26\n   List-Unsubscribe=One-Click\n"
    title: 8.2.  Complex
  - contents:
    - "8.3.  Complex with 'multipart/form-data'\n   Header in Email\n   List-Unsubscribe:\n
      \      <mailto:listrequest@example.com?subject=unsubscribe>,\n       <https://example.com/unsubscribe.html/opaque123456789>\n
      \  List-Unsubscribe-Post: List-Unsubscribe=One-Click\n   Resulting POST request\n
      \  POST /unsubscribe.html/opaque=123456789 HTTP/1.1\n   Host: example.com\n
      \  Content-Type: multipart/form-data; boundary=---FormBoundaryjWmhtjORrn\n   Content-Length:
      124\n   ---FormBoundaryjWmhtjORrn\n   Content-Disposition: form-data; name=\"List-Unsubscribe\"\n
      \  One-Click\n   ---FormBoundaryjWmhtjORrn--\n"
    title: 8.3.  Complex with 'multipart/form-data'
  title: 8.  Examples
- contents:
  - "9.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI
    10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
    \  [RFC2369]  Neufeld, G. and J. Baer, \"The Use of URLs as Meta-Syntax\n              for
    Core Mail List Commands and their Transport through\n              Message Header
    Fields\", RFC 2369, DOI 10.17487/RFC2369,\n              July 1998, <http://www.rfc-editor.org/info/rfc2369>.\n
    \  [RFC5322]  Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n              DOI
    10.17487/RFC5322, October 2008,\n              <http://www.rfc-editor.org/info/rfc5322>.\n
    \  [RFC6376]  Crocker, D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,\n              \"DomainKeys
    Identified Mail (DKIM) Signatures\", STD 76,\n              RFC 6376, DOI 10.17487/RFC6376,
    September 2011,\n              <http://www.rfc-editor.org/info/rfc6376>.\n   [RFC7230]
    \ Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol
    (HTTP/1.1): Message Syntax and Routing\",\n              RFC 7230, DOI 10.17487/RFC7230,
    June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n   [RFC7578]
    \ Masinter, L., \"Returning Values from Forms: multipart/\n              form-data\",
    RFC 7578, DOI 10.17487/RFC7578, July 2015,\n              <http://www.rfc-editor.org/info/rfc7578>.\n"
  title: 9.  Normative References
- contents:
  - "Authors' Addresses\n   John Levine\n   Taughannock Networks\n   PO Box 727\n
    \  Trumansburg, NY  14886\n   United States of America\n   Phone: +1 831 480 2300\n
    \  Email: standards@taugh.com\n   URI:   http://jl.ly\n   Tobias Herkula\n   optivo
    GmbH\n   Wallstrasse 16\n   Berlin  10179\n   Germany\n   Phone: +49 30 768078
    129\n   Email: t.herkula@optivo.com\n   URI:   https://www.optivo.com\n"
  title: Authors' Addresses
