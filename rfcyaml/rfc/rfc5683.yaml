- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                    A. Brusilovsky
  contents:
  - "Independent Submission                                    A. Brusilovsky\n  \
    \      Password-Authenticated Key (PAK) Diffie-Hellman Exchange\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes to add mutual authentication, based on a\n\
    \   human-memorizable password, to the basic, unauthenticated Diffie-\n   Hellman\
    \ key exchange.  The proposed algorithm is called the Password-\n   Authenticated\
    \ Key (PAK) exchange.  PAK allows two parties to\n   authenticate themselves while\
    \ performing the Diffie-Hellman exchange.\n   The protocol is secure against all\
    \ passive and active attacks.  In\n   particular, it does not allow either type\
    \ of attacker to obtain any\n   information that would enable an offline dictionary\
    \ attack on the\n   password.  PAK provides Forward Secrecy.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5683.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http:trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions .....................................................3\n  \
    \ 3. Password-Authenticated Key Exchange .............................4\n   4.\
    \ Selection of Parameters .........................................5\n      4.1.\
    \ General Considerations .....................................5\n      4.2. Over-the-Air\
    \ Service Provisioning (OTASP) and Wireless\n           Local Area Network (WLAN)\
    \ Diffie-Hellman Parameters and\n           Key Expansion Functions ....................................5\n\
    \   5. Security Considerations .........................................7\n  \
    \ 6. Acknowledgments .................................................8\n   7.\
    \ References ......................................................8\n      7.1.\
    \ Normative References .......................................8\n      7.2. Informative\
    \ References .....................................8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   PAK has the following advantages:\n   -  It provides a secure,\
    \ authenticated key-exchange protocol.\n   -  It is secure against offline dictionary\
    \ attacks when passwords are\n      used.\n   -  It ensures Forward Secrecy.\n\
    \   -  It has been proven to be as secure as the Diffie-Hellman solution.\n  \
    \ The PAK protocol ([BMP00], [MP05], [X.1035]) has been proven to be as\n   secure\
    \ as the Diffie-Hellman ([RFC2631], [DH76]) in the random oracle\n   model [BR93].\
    \  That is, PAK retains its security when used with low-\n   entropy passwords.\
    \  Therefore, it can be seamlessly integrated into\n   existing applications,\
    \ requiring secure authentication based on such\n   low-entropy shared secrets.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   -  A is an identity of Alice.\n   -  B is an identity of\
    \ Bob.\n   -  Ra is a secret random exponent selected by A.\n   -  Rb is a secret\
    \ random exponent selected by B.\n   -  Xab denotes a value (X presumably computed\
    \ by A) as derived by B.\n   -  Yba denotes a value (Y presumably computed by\
    \ B) as derived by A.\n   -  A mod b denotes the least non-negative remainder\
    \ when a is divided\n      by b.\n   -  Hi(u) denotes an agreed-on function (e.g.,\
    \ based on SHA-1,\n      SHA-256, etc.) computed over a string u; the various\
    \ H() act as\n      independent random functions.  H1(u) and H2(u) are the key\n\
    \      derivation functions.  H3(u), H4(u), and H5(u) are the hash\n      functions.\n\
    \   -  s|t denotes concatenation of the strings s and t.\n   -  ^ denotes exponentiation.\n\
    \   -  Multiplication, division, and exponentiation are performed over\n     \
    \ (Zp)*; in other words:\n      1) a*b always means a*b (mod p).\n      2) a/b\
    \ always means a * x (mod p), where x is the multiplicative\n         inverse\
    \ of b modulo p.\n      3) a^b means a^b (mod p).\n"
- title: 3.  Password-Authenticated Key Exchange
  contents:
  - "3.  Password-Authenticated Key Exchange\n   Diffie-Hellman key agreement requires\
    \ that both the sender and\n   recipient of a message create their own secret,\
    \ random numbers and\n   exchange the exponentiation of their respective numbers.\n\
    \   PAK has two parties, Alice (A) and Bob (B), sharing a secret password\n  \
    \ PW that satisfies the following conditions:\n      H1(A|B|PW) != 0\n      H2(A|B|PW)\
    \ != 0\n   The global Diffie-Hellman publicly known constants, a prime p and a\n\
    \   generator g, are carefully selected so that:\n   1.  A safe prime p is large\
    \ enough to make the computation of\n       discrete logarithms infeasible, and\n\
    \   2.  Powers of g modulo p cover the entire range of p-1 integers from\n   \
    \    1 to p-1.  (References demonstrate working examples of\n       selections).\n\
    \   Initially, Alice (A) selects a secret, random exponent Ra and\n   computes\
    \ g^Ra; Bob (B) selects a secret, random exponent Rb and\n   computes g^Rb.  For\
    \ efficiency purposes, short exponents could be\n   used for Ra and Rb, provided\
    \ they have a certain minimum size.  Then:\n   A --> B: {A, X = H1(A|B|PW)*(g^Ra)}\n\
    \            (The above precondition on PW ensures that X != 0)\n      Bob\n \
    \       receives Q (presumably Q = X), verifies that Q != 0\n          (if Q =\
    \ 0, Bob aborts the procedure);\n        divides Q by H1(A|B|PW) to get Xab, the\
    \ recovered value of g^Ra\n   B --> A: {Y = H2(A|B|PW)*(g^Rb), S1 = H3(A|B|PW|Xab|g^Rb|(Xab)^Rb)}\n\
    \            (The above precondition on PW ensures that Y != 0)\n      Alice\n\
    \        verifies that Y != 0;\n        divides Y by H2(A|B|PW) to get Yba, the\
    \ recovered value of g^Rb,\n        and computes S1' = H3(A|B|PW|g^Ra|Yba|(Yba)^Ra);\n\
    \        authenticates Bob by checking whether S1' = S1;\n        if authenticated,\
    \ then sets key K = H5(A|B|PW|g^Ra|Yba|(Yba)^Ra)\n   A --> B:  S2 = H4(A|B|PW|g^Ra|Yba|(Yba)^Ra)\n\
    \      Bob\n        Computes S2' = H4(A|B|PW|Xab|g^Rb|(Xab)^Rb) and\n        authenticates\
    \ Alice by checking whether S2' = S2;\n        if authenticated, then sets K =\
    \ H5(A|B|PW|Xab|g^Rb|(Xab)^Rb)\n   If any of the above verifications fails, the\
    \ protocol halts;\n   otherwise, both parties have authenticated each other and\
    \ established\n   the key.\n"
- title: 4.  Selection of Parameters
  contents:
  - "4.  Selection of Parameters\n   This section provides guidance on selection of\
    \ the PAK parameters.\n   First, it addresses general considerations, then it\
    \ reports on\n   specific implementations.\n"
- title: 4.1.  General Considerations
  contents:
  - "4.1.  General Considerations\n   In general implementations, the parameters must\
    \ be selected to meet\n   algorithm requirements of [BMP00].\n"
- title: 4.2.  Over-the-Air Service Provisioning (OTASP) and Wireless Local Area
  contents:
  - "4.2.  Over-the-Air Service Provisioning (OTASP) and Wireless Local Area\n   \
    \   Network (WLAN) Diffie-Hellman Parameters and Key Expansion\n      Functions\n\
    \   [OTASP], [TIA683], and [WLAN] pre-set public parameters p and g to\n   their\
    \ \"published\" values.  This is necessary to protect against an\n   attacker\
    \ sending bogus p and g values, tricking the legitimate user\n   to engage in\
    \ improper Diffie-Hellman exponentiation and leaking some\n   information about\
    \ the password.\n   According to [OTASP], [TIA683], and [WLAN], g shall be set\
    \ to\n   00001101, and p to the following 1024-bit prime number (most\n   significant\
    \ bit first):\n   0xFFFFFFFF  0xFFFFFFFF  0xC90FDAA2  0x2168C234  0xC4C6628B\n\
    \   0x80DC1CD1  0x29024E08  0x8A67CC74  0x020BBEA6  0x3B139B22\n   0x514A0879\
    \  0x8E3404DD  0xEF9519B3  0xCD3A431B  0x302B0A6D\n   0xF25F1437  0x4FE1356D \
    \ 0x6D51C245  0xE485B576  0x625E7EC6\n   0xF44C42E9  0xA637ED6B  0x0BFF5CB6  0xF406B7ED\
    \  0xEE386BFB\n   0x5A899FA5  0xAE9F2411  0x7C4B1FE6  0x49286651  0xECE65381\n\
    \   0xFFFFFFFF  0xFFFFFFFF\n   In addition, if short exponents [MP05] are used\
    \ for Diffie-Hellman\n   parameters Ra and Rb, then they should have a minimum\
    \ size of 384\n   bits.  The independent, random functions H1 and H2 should each\
    \ output\n   1152 bits, assuming prime p is 1024 bits long and session keys K\
    \ are\n   128 bits long.  H3, H4, and H5 each output 128 bits.  More\n   information\
    \ on instantiating random functions using hash functions\n   can be found in [BR93].\
    \  We use the FIPS 180 SHA-1 hashing function\n   [FIPS180] below to instantiate\
    \ the random function as done in [WLAN];\n   however, SHA-256 can also be used:\n\
    \   H1(z):\n   SHA-1(1|1|z) mod 2^128 | SHA-1(1|2|z) mod 2^128 |...|\n   | SHA-1(1|9|z)\
    \ mod 2^128\n   H2(z):\n   SHA-1(2|1|z) mod 2^128 | SHA-1(2|2|z) mod 2^128 |...|\n\
    \   | SHA-1(2|9|z) mod 2^128\n   H3(z): SHA-1(3|len(z)|z|z) mod 2^128\n   H4(z):\
    \ SHA-1(4|len(z)|z|z) mod 2^128\n   H5(z): SHA-1(5|len(z)|z|z) mod 2^128\n   In\
    \ order to create 1152 output bits for H1 and H2, nine calls to\n   SHA-1 are\
    \ made and the 128 least significant bits of each output are\n   used.  The input\
    \ payload of each call to SHA-1 consists of:\n   a) 32 bits of function type,\
    \ which for H1 is set to 1 and for H2 is\n      set to 2;\n   b) a 32-bit counter\
    \ value, which is incremented from 1 to 9 for each\n      call to SHA-1;\n   c)\
    \ the argument z [for (A|B|PW)].\n   The functions H3, H4, and H5 require only\
    \ one call to the SHA-1\n   hashing function and their respective payloads consist\
    \ of:\n   a) 32 bits of function type (e.g., 3 for H3);\n   b) a 32-bit value\
    \ for the bit length of the argument z;\n   c) the actual argument repeated twice.\n\
    \   Finally, the 128 least significant bits of the output are used.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Security considerations are as follows:\n   -\
    \  Identifiers\n      Any protocol that uses PAK must specify a method for producing\
    \ a\n      single representation of identity strings.\n   -  Shared secret\n \
    \     PAK involves the use of a shared secret.  Protection of the shared\n   \
    \   values and managing (limiting) their exposure over time is\n      essential\
    \ and can be achieved using well-known security policies\n      and measures.\
    \  If a single secret is shared among more than two\n      entities (e.g., Alice,\
    \ Bob, and Mallory), then Mallory can\n      represent himself as Alice to Bob\
    \ without Bob being any the wiser.\n   -  Selection of Diffie-Hellman parameters\n\
    \      The parameters p and g must be carefully selected in order not to\n   \
    \   compromise the shared secret.  Only previously agreed-upon values\n      for\
    \ parameters p and g should be used in the PAK protocol.  This\n      is necessary\
    \ to protect against an attacker sending bogus p and g\n      values and thus\
    \ tricking the other communicating party in an\n      improper Diffie-Hellman\
    \ exponentiation.  Both parties also need to\n      randomly select a new exponent\
    \ each time the key-agreement\n      protocol is executed.  If both parties re-use\
    \ the same values,\n      then Forward Secrecy property is lost.\n      In addition,\
    \ if short exponents Ra and Rb are used, then they\n      should have a minimum\
    \ size of 384 bits (assuming that 128-bit\n      session keys are used).  Historically,\
    \ the developers, who strived\n      for 128-bit security (and thus selected 256-bit\
    \ exponents), added\n      128 bits to the exponents to ensure the security reduction\
    \ proofs.\n      This should explain how an \"odd\" length of 384 has been arrived\n\
    \      at.\n   -  Protection against attacks\n      a) There is a potential attack,\
    \ the so-called discrete logarithm\n         attack on the multiplicative group\
    \ of congruencies modulo p, in\n         which an adversary can construct a table\
    \ of discrete logarithms\n         to be used as a \"dictionary\".  A sufficiently\
    \ large prime, p,\n         must be selected to protect against such an attack.\
    \  A proper\n         1024-bit value for p and an appropriate value for g are\n\
    \         published in [WLAN] and [TIA683].  For the moment, this is what\n  \
    \       has been implemented; however, a larger prime (i.e., one that\n      \
    \   is 2048 bits long, or even larger) will definitely provide\n         better\
    \ protection.  It is important to note that once this is\n         done, the generator\
    \ must be changed too, so this task must be\n         approached with extreme\
    \ care.\n      b) An online password attack can be launched by an attacker by\n\
    \         repeatedly guessing the password and attempting to\n         authenticate.\
    \  The implementers of PAK should consider\n         employing mechanisms (such\
    \ as lockouts) for preventing such\n         attacks.\n   -  Recommendations on\
    \ H() functions\n      The independent, random functions H1 and H2 should output\
    \ 1152\n      bits each, assuming prime p is 1024 bits long and session keys K\n\
    \      are 128 bits long.  The random functions H3, H4, and H5 should\n      output\
    \ 128 bits.\n   An example of secure implementation of PAK is provided in [Plan9].\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors are grateful for the thoughtful comments\
    \ received from\n   Shehryar Qutub, Ray Perlner, and Yaron Sheffer.  Special thanks\
    \ go to\n   Alfred Hoenes, Tim Polk, and Jim Schaad for their careful reviews\
    \ and\n   invaluable help in preparing the final version of this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [X.1035]    ITU-T, \"Password-authenticated key\
    \ exchange (PAK)\n               protocol\", ITU-T Recommendation X.1035, 2007.\n\
    \   [TIA683]    TIA, \"Over-the-Air Service Provisioning of Mobile\n         \
    \      Stations in Spread Spectrum Systems\", TIA-683-D, May\n               2006.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [Plan9]     Alcatel-Lucent, \"Plan 9 from Bell\
    \ Labs\",\n               http://netlib.bell-labs.com/plan9/.\n   [BMP00]    \
    \ Boyko, V., MacKenzie, P., and S. Patel, \"Provably secure\n               password\
    \ authentication and key exchange using Diffie-\n               Hellman\", Proceedings\
    \ of Eurocrypt 2000.\n   [BR93]      Bellare, M. and P. Rogaway, \"Random Oracles\
    \ are\n               Practical: A Paradigm for Designing Efficient Protocols\"\
    ,\n               Proceedings of the 5th Annual ACM Conference on Computer\n \
    \              and Communications Security, 1998.\n   [DH76]      Diffie, W. and\
    \ M.E. Hellman, \"New directions in\n               cryptography\", IEEE Transactions\
    \ on Information Theory 22\n               (1976), 644-654.\n   [FIPS180]   NIST\
    \ Federal Information Processing Standards,\n               Publication FIPS 180-3,\
    \ \"Secure Hash Standard\", 2008.\n   [MP05]      MacKenzie, P. and S. Patel,\
    \ \"Hard Bits of the Discrete\n               Log with Applications to Password\
    \ Authentication\", CT-RSA\n               2005.\n   [OTASP]     3GPP2, \"Over-the-Air\
    \ Service Provisioning of Mobile\n               Stations in Spread Spectrum Systems\"\
    , 3GPP2 C.S0016-C v.\n               1.0 5, October 2004.\n   [RFC2631]   Rescorla,\
    \ E., \"Diffie-Hellman Key Agreement Method\", RFC\n               2631, June\
    \ 1999.\n   [WLAN]      3GPP2, \"Wireless Local Area Network (WLAN) Interworking\"\
    ,\n               3GPP2 X.S0028-0, v.1.0, April 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alec Brusilovsky\n   Alcatel-Lucent\n   Room 9B-226, 1960\
    \ Lucent Lane\n   Naperville, IL 60566-7217  USA\n   Tel: +1 630 979 5490\n  \
    \ EMail: Alec.Brusilovsky@alcatel-lucent.com\n   Igor Faynberg\n   Alcatel-Lucent\n\
    \   Room 2D-144, 600 Mountain Avenue\n   Murray Hill, NJ 07974  USA\n   Tel: +1\
    \ 908 582 2626\n   EMail: igor.faynberg@alcatel-lucent.com\n   Sarvar Patel\n\
    \   Google, Inc.\n   76 Ninth Avenue\n   New York, NY 10011  USA\n   Tel: +1 212\
    \ 565 5907\n   EMail: sarvar@google.com\n   Zachary Zeltsan\n   Alcatel-Lucent\n\
    \   Room 2D-150, 600 Mountain Avenue\n   Murray Hill, NJ 07974  USA\n   Tel: +1\
    \ 908 582 2359\n   EMail: zeltsan@alcatel-lucent.com\n"
