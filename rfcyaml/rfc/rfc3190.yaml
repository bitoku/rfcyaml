- contents:
  - "                         RTP Payload Format for\n        12-bit DAT Audio and
    20- and 24-bit Linear Sampled Audio\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies a packetization scheme for encapsulating\n
    \  12-bit nonlinear, 20-bit linear, and 24-bit linear audio data streams\n   using
    the Real-time Transport Protocol (RTP).  This document also\n   specifies the
    format of a Session Description Protocol (SDP)\n   parameter to indicate when
    audio data is preemphasized before\n   sampling.  The parameter may be used with
    other audio payload\n   formats, in particular L16 (16-bit linear).\n"
  title: Abstract
- contents:
  - "1. Introduction\n   This document describes the sampling of audio data in 12-bit\n
    \  nonlinear, 20-bit linear, and 24-bit linear encodings, and specifies\n   the
    encapsulation of the audio data into the Real-time Transport\n   Protocol (RTP),
    version 2 [1,2].  DAT (digital audio tape) and DV\n   (digital video) devices
    [3,4] use these audio encodings in addition\n   to 16-bit linear encoding.  The
    packetization scheme for 16-bit\n   linear audio (L16) is already specified [2,5].
    \ This document\n   specifies the packetization scheme for the other encodings
    following\n   that for L16; in particular, when used with the RTP profile [2],\n
    \  these payload formats follow the encoding-independent rules for\n   sample
    ordering and channel interleaving specified in [2] plus\n   extensions specified
    here.  This document also specifies out-of-band\n   negotiation methods for the
    extended channel interleaving rules and\n   for use when an analog preemphasis
    technique is applied to the audio\n   data.\n"
  - contents:
    - "1.1 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
      2119 [6]\n"
    title: 1.1 Terminology
  title: 1. Introduction
- contents:
  - "2. The need for RTP encapsulation of 12-, 20- and 24-bit audio\n   Many high-quality
    digital audio and visual systems, such as DAT and\n   DV, adopt sample-based audio
    encodings.  Different audio formats are\n   used in various situations.  To transport
    the audio data using RTP,\n   an encapsulation needs to be defined for each specific
    format.  Only\n   16-bit linear audio encapsulation (L16) has thus far been defined.\n
    \  Other encoding formats have already appeared, such as the 12-bit\n   nonlinear,
    20-bit linear and 24-bit linear encodings used in the DAT\n   and DV video world.
    \ This specification defines the RTP payload\n   encapsulation format in order
    to use the new encodings in the RTP\n   environment.\n"
  title: 2. The need for RTP encapsulation of 12-, 20- and 24-bit audio
- contents:
  - "3. 12-bit nonlinear audio encapsulation\n   IEC 61119 [3] specifies the 12-bit
    nonlinear audio format in DAT and\n   DV, called LP (Long Play) audio.  It would
    be easy to convert 12-bit\n   nonlinear audio into 16-bit linear form at the RTP
    sender and\n   transmit it using the L16 audio format already defined.  However,\n
    \  this would consume 33% more network bandwidth than necessary.  This\n   payload
    format is specified as a more efficient alternative.\n   The 12-bit nonlinear
    encoding is the same as for 16-bit linear audio\n   except for the packing of
    each sampled data element.  Each sample of\n   12-bit nonlinear audio is derived
    from a single sample of 16-bit\n   linear audio by a nonlinear compression.  Table
    1 shows the details\n   of the conversion from 16 to 12 bits.  The result is a
    12-bit signed\n   value ranging from -2048 to 2047 and it is represented in two's\n
    \  complement notation.  The 12-bit samples are packed contiguously into\n   payload
    octets starting with the most significant bit.  When the\n   payload contains
    an odd number of samples, the four LSBs of the last\n   octet are unused.  Parameters
    other than quantization, e.g., sampling\n   frequency and audio channel assignment,
    are the same as in the L16\n   payload format.  In particular, samples are packed
    into the packet in\n   time sequence beginning with the oldest sample.\n    ------------------------------------------------------------\n
    \    32,767 (7FFFh) Y = INT(X/64) + (600h)        2,047 (7FFh)\n     16,384 (4000h)
    \                              1,792 (700h)\n    ------------------------------------------------------------\n
    \    16,383 (3FFFh) Y = INT(X/32) + (500h)        1,791 (6FFh)\n      8,192 (2000h)
    \                              1,536 (600h)\n    ------------------------------------------------------------\n
    \     8,191 (1FFFh) Y = INT(X/16) + (400h)        1,535 (5FFh)\n      4,096 (1000h)
    \                              1,280 (500h)\n    ------------------------------------------------------------\n
    \     4,095 (0FFFh) Y = INT(X/8) + (300h)         1,279 (4FFh)\n      2,048 (0800h)
    \                              1,024 (400h)\n    ------------------------------------------------------------\n
    \     2,047 (07FFh) Y = INT(X/4) + (200h)         1,023 (3FFh)\n      1,024 (0400h)
    \                                768 (300h)\n    ------------------------------------------------------------\n
    \     1,023 (03FFh) Y = INT(X/2) + (100h)           767 (2FFh)\n        512 (0200h)
    \                                512 (200h)\n    ------------------------------------------------------------\n
    \       511 (01FFh) Y = X                           511 (1FFh)\n          0 (0000h)
    \                                  0 (000h)\n    ------------------------------------------------------------\n
    \        -1 (FFFFh) Y = X                            -1 (FFFh)\n       -512 (FE00h)
    \                               -512 (E00h)\n    ------------------------------------------------------------\n
    \      -513 (FFFFh) Y = INT((X + 1)/2) - (101h)    -513 (DFFh)\n     -1,024 (FE00h)
    \                               -768 (D00h)\n    ------------------------------------------------------------\n
    \    -1,025 (FBFFh) Y = INT((X + 1)/4) - (201h)    -769 (CFFh)\n     -2,048 (F800h)
    \                             -1,024 (C00h)\n    ------------------------------------------------------------\n
    \    -2,049 (F7FFh) Y = INT((X + 1)/8) - (301h)  -1,025 (BFFh)\n     -4,096 (F000h)
    \                             -1,280 (B00h)\n    ------------------------------------------------------------\n
    \    -4,097 (EFFFh) Y = INT((X + 1)/16) - (401h) -1,281 (AFFh)\n     -8,192 (E000h)
    \                             -1,536 (A00h)\n    ------------------------------------------------------------\n
    \    -8,193 (DFFFh) Y = INT((X + 1)/32) - (501h) -1,537 (9FFh)\n    -16,384 (C000h)
    \                             -1,792 (900h)\n    ------------------------------------------------------------\n
    \   -16,385 (BFFFh) Y = INT((X + 1)/64) - (601h) -1,793 (8FFh)\n    -32,768 (8000h)
    \                             -2,048 (800h)\n    ------------------------------------------------------------\n
    \   Table 1. Conversion from 16-bit linear values (X) to 12-bit\n             nonlinear
    values (Y) [3]\n   When conveying encoding information in an SDP [7] session\n
    \  description, the 12-bit nonlinear audio payload format specified here\n   is
    given the encoding name \"DAT12\".  Thus, the media format\n   representation
    might be:\n      m=audio 49230 RTP/AVP 97 98\n      a=rtpmap:97 DAT12/32000/2\n
    \     a=rtpmap:98 L16/48000/2\n"
  title: 3. 12-bit nonlinear audio encapsulation
- contents:
  - "4. 20- and 24-bit linear audio encapsulation\n   The 20- and 24-bit linear audio
    encodings are simply an extension of\n   the L16 linear audio encoding [2].  The
    20- or 24-bit uncompressed\n   audio data samples are represented as signed values
    in two's\n   complement notation.  The samples are packed contiguously into\n
    \  payload octets starting with the most significant bit.  For the\n   20-bit
    encoding, when the payload contains an odd number of samples,\n   the four LSBs
    of the last octet are unused.  Samples are packed into\n   the packet in time
    sequence beginning with the oldest sample.\n   When conveying encoding information
    in an SDP session description,\n   the 20- and 24-bit linear audio payload formats
    specified here are\n   given the encoding names \"L20\" and \"L24\", respectively.
    \ An example\n   SDP audio media description would be:\n      m=audio 49230 RTP/AVP
    99 100\n      a=rtpmap:99 L20/48000/2\n      a=rtpmap:100 L24/48000\n"
  title: 4. 20- and 24-bit linear audio encapsulation
- contents:
  - "5. Preemphasized audio data\n   In order to improve the higher frequency characteristics
    of audio\n   signals, analog preemphasis is often applied to the signal before\n
    \  quantization.  If analog preemphasis was applied before the payload\n   data
    was sampled, the type of the preemphasis SHOULD be conveyed with\n   out-of-band
    signaling.  An \"emphasis\" parameter is defined for this\n   purpose and may
    be conveyed either as a MIME optional parameter or\n   using the SDP format-specific
    attribute (a=fmtp line) as below:\n      a=fmtp:<payload type> emphasis=<emphasis
    type>\n   Only one <emphasis type> value is defined for the parameter at this\n
    \  point:\n      50-15           <50/15 microsecond CD-type emphasis>\n   The
    emphasis attribute MUST NOT be included in the SDP record if\n   preemphasis was
    not applied.  This rule allows the emphasis attribute\n   to be used with other
    audio formats, in particular L16 [2], while\n   retaining backward compatibility
    with existing implementations so\n   long as preemphasis is not applied.  If an
    existing application that\n   does not implement preemphasis accepts a session
    description with an\n   emphasis attribute but ignores that attribute, the only
    penalty is\n   that the sound will be too \"bright\" when receiving or \"dull\"
    when\n   sending.\n   A sample SDP record showing preemphasis applied only to
    payload type\n   99 might be as follows:\n      m=audio 49230 RTP/AVP 99 100\n
    \     a=rtpmap:99 L20/48000/2\n      a=fmtp:99 emphasis=50-15\n      a=rtpmap:100
    L24/48000\n"
  title: 5. Preemphasized audio data
- contents:
  - "6. Translation of DV audio error code\n   The DV video specification IEC 61834-4
    [4] defines the negative full-\n   scale audio sample value to be an audio error
    code indicating that no\n   valid audio sample is available for that sample period.
    \ Such an\n   error might occur due to a failure while reading audio data from\n
    \  magnetic tape.  The audio error code values for each of the DV audio\n   encodings
    are (in hexadecimal):\n      12-bit nonlinear:  800h\n      16-bit linear:     8000h\n
    \     20-bit linear:     80000h\n   For the payload formats defined in this document,
    as well as for the\n   L16 payload format defined in [2], no such error code is
    defined.\n   That is, all possible sample values are valid.  When an RTP sender\n
    \  accepts audio samples from a DV video system and encapsulates those\n   samples
    according to one of these payload formats, the RTP sender\n   SHOULD perform some
    error concealment algorithm which may depend upon\n   whether a single sample
    error or multiple sample errors have\n   occurred.  The error concealment algorithm
    is not specified here and\n   is left to the implementation.  The RTP sender MAY
    treat the error\n   code as if it were a valid audio sample, but this is likely
    to cause\n   undesirable audio output.\n   Conversely, an RTP receiver that accepts
    audio packets in one of\n   these payload formats and delivers the audio samples
    to a DV video\n   system SHOULD translate the audio samples that would be interpreted\n
    \  as error codes into the next smaller negative audio value.  Such\n   audio
    samples may be present because the audio packets may have come\n   from a source
    other than a DV video system.  The DV video\n   specification [4] gives the following
    translations for the defined\n   audio encodings:\n      12-bit nonlinear:  800h
    \             ->  801h\n      16-bit linear:     8000h             ->  8001h\n
    \     20-bit linear:     80000h - 8000Fh   ->  80010h\n   For the 20-bit linear
    encoding, note that multiple audio sample\n   values are translated in order to
    allow a 16-bit system to play 20-\n   bit audio data by ignoring the least significant
    four bits.  Note\n   also that no translation is specified for 24-bit linear audio
    because\n   that encoding is not included in the DV video specification.\n"
  title: 6. Translation of DV audio error code
- contents:
  - "7. Channel interleaving and non-AIFF-C audio channel convention\n   When multiple
    channels of audio, such as in a stereo program, are\n   multiplexed into a single
    RTP stream, the audio samples from each\n   channel are interleaved according
    to the rules specified in [2] to be\n   consistent with the L16 payload format.
    \ That is, samples from\n   different channels taken at the same sampling instant
    are packed into\n   consecutive octets.  For example, for a two-channel encoding,
    the\n   sample sequence is (left channel, first sample), (right channel,\n   first
    sample), (left channel, second sample), (right channel, second\n   sample).  Samples
    for all channels belonging to a single sampling\n   instant MUST be contained
    in the same packet.\n   This sample order differs from the packing of samples
    into blocks in\n   a native DV audio stream.  Therefore, applications transmitting
    DV\n   audio using the payload formats defined in this document MUST\n   reshuffle
    the samples into the order specified here.  This\n   requirement is intended to
    enable interworking between DV systems and\n   other digital audio systems.  Applications
    choosing to send bundled\n   DV audio/video streams using the native DV block
    structure may use\n   the payload format defined in [8] instead.\n   Most of the
    existing RTP audio payload formats follow the AIFF-C\n   convention for channel
    ordering as specified in [2] when sending more\n   than two audio channels within
    a single RTP stream.  However, this\n   convention does not cover some applications.
    \ For example, some DV\n   audio formats define a \"woofer\" channel, but AIFF-C
    does not include\n   this frequency-dependent channel.  Thus, it is necessary
    to specify\n   the audio channel allocation information explicitly when the contents\n
    \  of the audio stream are beyond the scope of AIFF-C.\n   For DV audio streams
    of 4 or more channels, the channel order MUST be\n   specified out-of-band.  This
    applies both to the payload formats\n   defined in this document and to the L16
    payload format.  A \"channel-\n   order\" parameter is defined here for this purpose
    and may be conveyed\n   either as a MIME optional parameter or with the SDP a=fmtp
    attribute\n   using the following syntax:\n      a=fmtp:<payload type> channel-order=<convention>.<order>\n
    \  The first component of the value, <convention>, specifies the type of\n   channel
    assignment convention used.  This allows for conventions\n   other than AIFF-C
    and DV to be defined in the future.  This document\n   defines only one convention
    for use in the channel-order parameter:\n      DV\n   The second component of
    the value, <order>, indicates the arrangement\n   of channels within the stream.
    \ The DV video specification [4]\n   defines the types of audio channels that
    may be present and in what\n   order.  The symbols used to denote the channel
    types are reproduced\n   in the Appendix at the end of this document.  For the
    DV convention,\n   the following values, which were formed from the concatenation
    of the\n   individual channel symbols in the allowed channel orders, are defined\n
    \  for the <order> component:\n      4 channels: LRLsRs, LRCS, LRCWo\n      5
    channels: LRLsRsC\n      6 channels: LRLsRsCS, LmixRmixTWoQ1Q2\n      8 channels:
    LRCWoLsRsLmixRmix, LRCWoLs1Rs1Ls2Rs2, LRCWoLsRsLcRc\n   The <convention> and <order>
    symbols are case-insensitive, but are\n   shown here in mixed case to make the
    individual channel symbols more\n   apparent.  These concatenated symbols were
    deliberately constructed\n   without separators to make clear the fact that the
    channels MUST NOT\n   be assembled in other, arbitrary orders.\n   For interworking
    with DV video systems, some of the audio encodings\n   are defined only for a
    subset of the channel combinations listed\n   above.  The DV video specification
    lists the channel combinations\n   that are allowed for each encoding.\n   The
    channel-order parameter MUST be consistent with the number of\n   channels specified
    in the MIME optional parameter \"channels\" or in\n   the a=rtpmap attribute of
    SDP.  For RTP audio streams of 1, 2 or 3\n   channels, the AIFF-C channel order
    is used and is implicit in the\n   number of audio channels specified.  To allow
    backward compatibility,\n   the channel-order parameter MUST NOT be included in
    this case.\n   Note that for the DV convention with 5 channels only one channel\n
    \  order is allowed, but for consistency the channel-order parameter\n   MUST
    be included nonetheless.\n   An example of an SDP session description using the
    channel-order\n   parameter is:\n      v=0\n      o=ikob 2890844526 2890842807
    IN IP4 126.16.64.4\n      s=POI (Audio only)\n      i=A Seminar on making Presentations
    on the Internet\n      u=http://www.koganei.wide.ad.jp/~ikob/POI/index.html\n
    \     e=ikob@koganei.wide.ad.jp (Katsushi Kobayashi)\n      c=IN IP4 224.2.17.12/127\n
    \     t=2873397496 2873404696\n      m=audio 49170 RTP/AVP 112 113\n      a=rtpmap:112
    L16/48000/2\n      a=rtpmap:113 DAT12/32000/4\n      a=fmtp:113 emphasis=50-15;
    channel-order=DV.LRCWO\n   This session description shows the audio medium being
    transmitted in\n   two formats, L16 and DAT12, using payload type numbers 112
    and 113,\n   respectively.  For the L16 format, the audio data contains 2-channel\n
    \  stereo following the implicit, default AIFF-C convention for left\n   channel
    first and right channel second.  For the DAT12 format, the\n   audio data contains
    4 channels following the DV audio convention for\n   the channels left, right,
    center, and woofer.\n   This example also shows how multiple MIME optional parameters\n
    \  (\"emphasis\" and \"channel-order\") for these payload formats are mapped\n
    \  to a single a=fmtp attribute as a semicolon separated list of\n   parameter=value
    pairs.\n   The channel-order parameter described here provides a generic out-of-\n
    \  band mechanism to define alternatives to the AIFF-C channel order.\n   However,
    if multi-channel audio data could be sent following the\n   AIFF-C channel convention
    after simple processing, such as a data\n   shuffling on the sender side, the
    alternative channel order SHOULD\n   NOT be defined and instead the AIFF-C order
    SHOULD be employed to\n   maximize interoperability.\n   Moreover, multiple channels
    of audio data should only be multiplexed\n   within a single RTP stream when all
    of the audio channels are\n   intended to be reproduced together, such as the
    left and right\n   channels in a stereo program.  Independent audio channels,
    such as\n   multiple language translations, SHOULD be sent in separate RTP\n   sessions.
    \ This reduces bandwidth requirements by allowing receivers\n   to tune in to
    only those channels which are desired.\n"
  title: 7. Channel interleaving and non-AIFF-C audio channel convention
- contents:
  - "8. MIME registration\n   This document defines some new RTP payload format names
    which are\n   also registered as MIME subtypes: DAT12, L20 and L24.  The\n   registration
    forms for these MIME subtypes are provided in the next\n   sections.\n"
  - contents:
    - "8.1 MIME registration form for audio/DAT12\n   MIME media type name: audio\n
      \  MIME subtype name: DAT12\n   Required parameters:\n      rate: number of
      samples per second -- RECOMMENDED values for rate\n         are 8000, 11025,
      16000, 22050, 24000, 32000, 44100 and 48000\n         samples per second.  Other
      values are permissible.\n   Optional parameters:\n      channels: how many audio
      streams are interleaved -- defaults to 1;\n         stereo would be 2, etc.
      \ Interleaving takes place between\n         individual 12-bit samples.\n      emphasis:
      analog preemphasis applied to the data before\n         quantization.  The only
      emphasis value defined here is\n         emphasis=50-15 to indicate 50/15 microsecond
      preemphasis.  This\n         parameter MUST be omitted if no analog preemphasis
      was applied.\n      channel-order: specifies the sample interleaving order for\n
      \        multiple-channel audio streams (see RFC 3190 Section 7).\n         Permissible
      values are DV.LRLsRs, DV.LRCS, DV.LRCWo,\n         DV.LRLsRsC, DV.LRLsRsCS,
      DV.LmixRmixTWoQ1Q2,\n         DV.LRCWoLsRsLmixRmix, DV.LRCWoLs1Rs1Ls2Rs2, DV.LRCWoLsRsLcRc.\n
      \        For interoperation with DV video systems, only a subset of\n         these
      channel combinations is specified for use with 12-bit\n         nonlinear encoding
      in the DV video specification [4]; that\n         subset is all of the above
      except DV.LmixRmixTWoQ1Q2.  This\n         parameter MUST be omitted when the
      AIFF-C channel order\n         convention is in use.\n   Encoding considerations:\n
      \     DAT12 audio can be transmitted with RTP as specified in RFC 3190.\n   Security
      considerations: See Section 9.\n   Interoperability considerations: NONE\n   Published
      specification:\n      IEC 61119 Standard [4] and RFC 3190.\n   Applications
      which use this media type:\n      Audio communication.\n   Additional information:\n
      \     Magic number(s): None\n      File extension(s): None\n      Macintosh
      File Type Code(s): None\n   Person & email address to contact for further information:\n
      \     Katsushi Kobayashi\n      e-mail: ikob@koganei.wide.ad.jp\n   Intended
      usage: COMMON\n   Author/Change controller:\n      Katsushi Kobayashi\n      e-mail:
      ikob@koganei.wide.ad.jp\n"
    title: 8.1 MIME registration form for audio/DAT12
  - contents:
    - "8.2 MIME registration form for audio/L20\n   MIME media type name: audio\n
      \  MIME subtype name: L20\n   Required parameters:\n      rate: number of samples
      per second -- RECOMMENDED values for rate\n         are 8000, 11025, 16000,
      22050, 24000, 32000, 44100 and 48000\n         samples per second.  Other values
      are permissible.\n   Optional parameters:\n      channels: how many audio streams
      are interleaved -- defaults to 1;\n         stereo would be 2, etc.  Interleaving
      takes place between\n         individual 20-bit samples.\n      emphasis: analog
      preemphasis applied to the data before\n         quantization.  The only emphasis
      value defined here is\n         emphasis=50-15 to indicate 50/15 microsecond
      preemphasis.  This\n         parameter MUST be omitted if no analog preemphasis
      was applied.\n      channel-order: specifies the sample interleaving order for\n
      \        multiple-channel audio streams (see RFC 3190 Section 7).\n         Permissible
      values are DV.LRLsRs, DV.LRCS, DV.LRCWo,\n         DV.LRLsRsC, DV.LRLsRsCS,
      DV.LmixRmixTWoQ1Q2,\n         DV.LRCWoLsRsLmixRmix, DV.LRCWoLs1Rs1Ls2Rs2, DV.LRCWoLsRsLcRc.\n
      \        For interoperation with DV video systems, none of these channel\n         combinations
      is specified for use with 20-bit linear encoding\n         in the DV video specification
      [4]; only mono and stereo are\n         allowed.  This parameter MUST be omitted
      when the AIFF-C\n         channel order convention is in use.\n   Encoding considerations:\n
      \     L20 audio can be transmitted with RTP as specified in RFC 3190.\n   Security
      considerations: See Section 9.\n   Interoperability considerations: NONE\n   Published
      specification:\n      RFC 3190.\n   Applications which use this media type:\n
      \     Audio communication.\n   Additional information:\n      Magic number(s):
      None\n      File extension(s): None\n      Macintosh File Type Code(s): None\n
      \  Person & email address to contact for further information:\n      Katsushi
      Kobayashi\n      e-mail: ikob@koganei.wide.ad.jp\n   Intended usage: COMMON\n
      \  Author/Change controller:\n      Katsushi Kobayashi\n      e-mail: ikob@koganei.wide.ad.jp\n"
    title: 8.2 MIME registration form for audio/L20
  - contents:
    - "8.3 MIME registration form for audio/L24\n   MIME media type name: audio\n
      \  MIME subtype name: L24\n   Required parameters:\n      rate: number of samples
      per second -- RECOMMENDED values for rate\n         are 8000, 11025, 16000,
      22050, 24000, 32000, 44100 and 48000\n         samples per second.  Other values
      are permissible.\n   Optional parameters:\n      channels: how many audio streams
      are interleaved -- defaults to 1;\n         stereo would be 2, etc.  Interleaving
      takes place between\n         individual 24-bit samples.\n      emphasis: analog
      preemphasis applied to the data before\n         quantization.  The only emphasis
      value defined here is\n         emphasis=50-15 to indicate 50/15 microsecond
      preemphasis.  This\n         parameter MUST be omitted if no analog preemphasis
      was applied.\n      channel-order: specifies the sample interleaving order for\n
      \        multiple-channel audio streams (see Section 7).  Permissible\n         values
      are DV.LRLsRs, DV.LRCS, DV.LRCWo, DV.LRLsRsC,\n         DV.LRLsRsCS, DV.LmixRmixTWoQ1Q2,
      DV.LRCWoLsRsLmixRmix,\n         DV.LRCWoLs1Rs1Ls2Rs2, DV.LRCWoLsRsLcRc.  This
      parameter MUST be\n         omitted when the AIFF-C channel order convention
      is in use.\n   Encoding considerations:\n      L24 audio can be transmitted
      with RTP as specified in RFC 3190.\n   Security considerations: See Section
      9.\n   Interoperability considerations: NONE\n   Published specification:\n
      \     RFC 3190.\n   Applications which use this media type:\n      Audio communication.\n
      \  Additional information:\n      Magic number(s): None\n      File extension(s):
      None\n      Macintosh File Type Code(s): None\n   Person & email address to
      contact for further information:\n      Katsushi Kobayashi\n      e-mail: ikob@koganei.wide.ad.jp\n
      \  Intended usage: COMMON\n   Author/Change controller:\n      Katsushi Kobayashi\n
      \     e-mail: ikob@koganei.wide.ad.jp\n"
    title: 8.3 MIME registration form for audio/L24
  title: 8. MIME registration
- contents:
  - "9.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the security considerations discussed
    in the RTP\n   specification [1], and any appropriate RTP profile [2].  This implies\n
    \  that confidentiality of the media streams is achieved by encryption.\n   Because
    the data compression used along with this payload format is\n   applied end-to-end,
    encryption may be performed after compression so\n   there is no conflict between
    the two operations.\n   A potential denial-of-service threat exists for data encodings
    using\n   compression techniques that have non-uniform receiver-end\n   computational
    load.  The attacker can inject pathological datagrams\n   into the stream which
    are complex to decode and cause the receiver to\n   be overloaded.  However, this
    encoding does not exhibit any\n   significant non-uniformity.\n   As with any
    IP-based protocol, in some circumstances a receiver may\n   be overloaded simply
    by the receipt of too many packets, either\n   desired or undesired.  Network-layer
    authentication may be used to\n   discard packets from undesired sources, but
    the processing cost of\n   the authentication itself may be too high.  In a multicast\n
    \  environment, pruning of specific sources may be implemented in future\n   versions
    of IGMP [9] and in multicast routing protocols to allow a\n   receiver to select
    which sources are allowed to reach it.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   This document defines two new MIME subtype-specific
    optional\n   parameters \"emphasis\" and \"channel-order\", which are specified
    with\n   the sets of permissible values for those parameters in Sections 5 and\n
    \  7, respectively.  Section 8 includes registrations for three new MIME\n   subtypes
    that use those optional parameters.  These registrations\n   define the subset
    of the optional parameter values allowed for each\n   subtype.  It is expected
    that the number of additional values that\n   will need to be defined for these
    optional parameters is small.\n   Therefore, anyone wishing to define new values
    is required to produce\n   a revision of this document to be vetted through the
    normal Internet\n   Standards process.\n"
  title: 10.  IANA Considerations
- contents:
  - "11.  References\n   [1] Schulzrinne, H., Casner, S., Frederick, R. and V. Jacobson,
    \"RTP:\n       A Transport Protocol for real-time applications,\" RFC 1889,\n
    \      January 1996.\n   [2] H. Schulzrinne, \"RTP profile for audio and video
    conferences with\n       minimal control\", RFC 1890, January 1996.\n   [3] IEC
    61119, Digital audio tape cassette system (DAT), November\n       1992.\n   [4]
    IEC 61834, Helical-scan digital video cassette recording system\n       using
    6,35 mm magnetic tape for consumer use (525-60, 625-50,\n       1125-60 and 1250-50
    systems), August 1998.\n   [5] Salsman, J., \"The Audio/L16 MIME content type\",
    RFC 2586, May\n       1999.\n   [6] Bradner, S., \"Key words for use in RFCs to
    Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March 1997.\n   [7] Handley,
    M. and V. Jacobson, \"SDP: Session Description Protocol\",\n       RFC 2327, April
    1998.\n   [8] Kobayashi, K., Ogawa, A., Casner, S. and C. Bormann, \"RTP Payload\n
    \      Format for DV (IEC 61834) Video\", RFC 3189, January 2002.\n   [9] Deering,
    S., \"Host Extensions for IP Multicasting\", STD 5, RFC\n       1112, August 1989.\n"
  title: 11.  References
- contents:
  - "Appendix\n   The DV audio channel symbols are specified in Table 2.  These symbols\n
    \  are taken from the notation used in the DV video specification IEC\n   61834-4
    [4], chapter 8.1.  For the exact meaning of each symbol, the\n   original DV video
    specification should be consulted.\n      L: Left channel of stereo\n      R:
    Right channel of stereo\n      M: Monaural signal\n      C: Center channel of
    3,4,6 or 8 channel audio\n      S: Surround channel of 4 channel audio\n      Ls,
    Ls1, Ls2: Left surround channel\n      Rs, Rs1, Rs2: Right surround channel\n
    \     Lc: Left center channel of 8 channel audio\n      Rc: Right center channel
    of 8 channel audio\n      Wo: Woofer channel\n      Lmix: L + 0.7071C + 0.7071LS\n
    \     Rmix: R + 0.7071C + 0.7071RS\n      T: 0.7071C\n      Q1: 0.7071LS + 0.7071RS\n
    \     Q2: 0.7071LS - 0.7071RS\n      Table 2. Channel symbols for audio channels
    in DV video [4]\n"
  title: Appendix
- contents:
  - "Authors' Addresses\n   Katsushi Kobayashi\n   Communication Research Laboratory\n
    \  4-2-1 Nukii-kita machi, Koganei\n   Tokyo 184-8795 JAPAN\n   Phone: +81 42
    327 6174\n   EMail: ikob@koganei.wide.ad.jp\n   Akimichi Ogawa\n   Keio University\n
    \  5322 Endo, Fujisawa\n   Kanagawa 252 JAPAN\n   EMail:  akimichi@sfc.wide.ad.jp\n
    \  Stephen L. Casner\n   Packet Design\n   2465 Latham Street\n   Mountain View,
    CA 94040\n   United States\n   Phone: +1 650-943-1843\n   EMail: casner@acm.org\n
    \  Carsten Bormann\n   Universitaet Bremen TZI\n   Postfach 330440\n   D-28334
    Bremen, Germany\n   Phone: +49 421 218 7024\n   Fax:   +49 421 218 7000\n   EMail:
    cabo@tzi.org\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
