- title: __initial_text__
  contents:
  - '             An IPv6 Provider-Based Unicast Address Format

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: 1.0 Introduction
  contents:
  - "1.0 Introduction\n   This document defines an IPv6 provider-based unicast address\
    \ format\n   for use in the Internet.  The address format defined in this document\n\
    \   is consistent with the \"IPv6 Addressing Architecture\" [ARCH] and the\n \
    \  \"An Architecture for IPv6 Unicast Address Allocation\" [ALLOC], and is\n \
    \  intended to facilitate scalable Internet routing.\n   The unicast address format\
    \ defined in this document doesn't preclude\n   the use of other unicast address\
    \ formats.\n"
- title: 2.0 Overview of the IPv6 Address
  contents:
  - "2.0 Overview of the IPv6 Address\n   IPv6 addresses are 128-bit identifiers for\
    \ interfaces and sets of\n   interfaces.  There are three types of addresses:\
    \ Unicast, Anycast,\n   and Multicast.  This document defines a specific type\
    \ of Unicast\n   address.\n   In this document, fields in addresses are given\
    \ specific names, for\n   example \"subscriber\".  When this name is used with\
    \ the term \"ID\" (for\n   \"identifier\") after the name (e.g., \"subscriber\
    \ ID\"), it refers to\n   the contents of the named field.  When it is used with\
    \ the term\n   \"prefix\" (e.g., \"subscriber prefix\") it refers to all of the\
    \ address\n   up to and including this field.\n   The specific type of an IPv6\
    \ address is indicated by the leading bits\n   in the address.  The variable-length\
    \ field comprising these leading\n   bits is called the Format Prefix (FP).\n\
    \   This document defines an address format for the 010 (binary) Format\n   Prefix\
    \ for Provider-Based Unicast addresses. The same address format\n   could be used\
    \ for other Format Prefixes, as long as these Format\n   Prefixes also identify\
    \ IPv6 unicast addresses.  Only the \"010\" Format\n   Prefix is defined here.\n"
- title: 3.0 IPv6 Provider-Based Unicast Address Format
  contents:
  - "3.0 IPv6 Provider-Based Unicast Address Format\n   This document defines an address\
    \ format for the IPv6 provider-based\n   unicast address assignment.  It is expected\
    \ that this address format\n   will be widely used for IPv6 nodes connected to\
    \ the Internet.\n   The address format defined in this document conforms to the\n\
    \   \"Architecture for IPv6 Unicast Address Allocation\" [ALLOC].\n   Specifically,\
    \ the format is designed to support aggregation of\n   network layer reachability\
    \ information at multiple levels of routing\n   hierarchy.\n   For addresses of\
    \ the format described in this document the address\n   administration is organized\
    \ into a three level hierarchy -- registry,\n   provider, and subscriber.  The\
    \ address format defined here allows\n   flexible address allocation at each level\
    \ of the address\n   administration hierarchy in such a way as to support a wide\
    \ spectrum\n   of demands for address allocation.\n   This document assumes that\
    \ the Internet routing system doesn't make\n   any assumptions about the specific\
    \ structure and semantics of an IPv6\n   address, except for the structure and\
    \ semantics of the Format Prefix\n   part of the address, and the use of the \"\
    longest prefix match\"\n   algorithm (on arbitrary bit boundaries) for making\
    \ a forwarding\n   decision.\n   The address format defined in this document is\
    \ intended to facilitate\n   scalable Internet-wide routing that does not impose\
    \ any constraints\n   on connectivity among the providers, as well as among the\
    \ providers\n   and subscribers.\n"
- title: 3.1 Provider-Based Unicast Address Structure
  contents:
  - "3.1 Provider-Based Unicast Address Structure\n   For the purpose of address allocation,\
    \ the address format defined in\n   this document consists of the following parts:\
    \  Format Prefix,\n   Registry ID, Provider ID, Subscriber ID, and an Intra-Subscriber\n\
    \   part.  The Intra-Subscriber part definition is the responsibility of\n   the\
    \ subscriber and is not defined in this document.  The provider-\n   based unicast\
    \ address format is as follows:\n      | 3 |  5 bits  |   n bits   |   56-n bits\
    \  |        64 bits     |\n      +---+----------+------------+--------------+--------------------+\n\
    \      |010|RegistryID| ProviderID | SubscriberID |  Intra-Subscriber  |\n   \
    \   +---+----------+------------+--------------+--------------------+\n   The\
    \ following sections specify each part of the IPv6 Provider-Based\n   Unicast\
    \ address format.  In general other allocation strategies are\n   possible within\
    \ this framework, but the ones described in this\n   document will be used to\
    \ assign IPv6 provider-based addresses.\n   3.2 Registry ID\n   With the growth\
    \ of the Internet and its increasing globalization,\n   much thought has been\
    \ given to the evolution of the Network Layer\n   address space allocation and\
    \ assignment process.  RFC 1466,\n   \"Guidelines for Management of IP Address\
    \ Space\", proposes a plan that\n   defines distributed allocation and assignment\
    \ of the IPv4 address\n   space.\n   As the Internet transitions to IPv6, the\
    \ plan for distributed\n   allocation and assignment of the IPv4 address space\
    \ established in\n   RFC1466 forms a base for the distributed allocation and assignment\
    \ of\n   the IPv6 address space.\n   The Internet Assigned Number Authority (IANA)\
    \ is the principal\n   registry for the IPv6 address space.  The IANA may allocate\
    \ blocks of\n   IPv6 addresses and delegate the assignment of those blocks to\n\
    \   qualified Regional Registries.  The IANA will serve as the default\n   registry\
    \ in cases where no delegated registration authority has been\n   identified.\n\
    \   The Registry ID of the IPv6 provider-based unicast address format is\n   intended\
    \ to facilitate a broad geographic address allocation and\n   facilitate the operations\
    \ of the distributed Regional Registries.\n   The Registry ID immediately follows\
    \ the format prefix part of an IPv6\n   address.\n   At present there are three\
    \ Regional Registries: INTERNIC, RIPE NCC,\n   and APNIC.  In addition, address\
    \ allocation could be done directly by\n   the IANA.  Corresponding to this division\
    \ of address allocation, this\n   document defines the following Registry IDs:\n\
    \        Regional Registry                     Value (binary)\n        --------------------\
    \                  --------------\n        Multi-Regional (IANA)             \
    \    10000\n        RIPE NCC                              01000\n        INTERNIC\
    \                              11000\n        APNIC                          \
    \       00100\n   All other values of the Registry ID are reserved by the IANA.\n\
    \   Use of the Multi-regional Registry ID permits flexibility in address\n   assignments\
    \ which are outside of the geographical regions already\n   allocated.  The IANA\
    \ will be responsible for managing address space\n   registration under the Multi-Regional\
    \ Registry ID.\n   It is expected that the IANA, and any designated Regional Registries,\n\
    \   allocate addresses in conformance with this overall scheme.  Where\n   there\
    \ are qualifying Regional Registries established, primary\n   responsibility for\
    \ allocation from within that block will be\n   delegated to that registry.\n\
    \   A Regional Registry may have more than one block of addresses\n   allocated\
    \ to it (as a result the Registry would have multiple\n   Registry IDs associated\
    \ with it).\n"
- title: 3.3 Provider ID and Subscriber ID
  contents:
  - "3.3 Provider ID and Subscriber ID\n   This document leaves the organization of\
    \ the Provider ID and\n   Subscriber ID portions of address up to individual registries.\n\
    \   Particularly the registry needs to define how much address space is\n   given\
    \ to providers and their subscribers.  There are several issues\n   which must\
    \ be addressed when doing this.  These include:\n      o There will likely be\
    \ a mixture of providers of different sizes.\n      o Small providers will grow\
    \ to become large providers.\n      o Large providers will lose customers and\
    \ become small providers.\n        In extreme cases, the registry will require\
    \ them to return some\n        of their address space to the registry.\n     \
    \ o Organizations which need to be multi-homed to more than one\n        provider\
    \ will request a Provider ID assignment.\n   It is important that a registry design\
    \ its Provider ID space to allow\n   flexibility and at the same time use the\
    \ address space efficiently.\n"
- title: 3.3.1 Provider ID
  contents:
  - "3.3.1 Provider ID\n   The value of the Provider ID associated with an address\
    \ block a\n   registry allocates to a particular provider uniquely identifies\
    \ this\n   provider within the registry.\n   This document assumes that some subscribers\
    \ may decide to acquire\n   their address space directly from a registry, thus\
    \ making their\n   addresses independent of the provider(s) they are directly\
    \ attached.\n"
- title: 3.3.2 Subscriber ID
  contents:
  - "3.3.2 Subscriber ID\n   The structure and assignment strategy of Subscriber ID's\
    \ is specified\n   by each provider.\n   A (direct) provider may decide to group\
    \ its subscribers into regions.\n   This grouping may be useful when the (direct)\
    \ provider is attached to\n   another (indirect) provider at multiple points,\
    \ as it allows the\n   direct provider to exert a certain degree of control over\
    \ the\n   coupling between the attachment points and flow of the traffic\n   destined\
    \ to a particular subscriber (see Section 5.3.1 of [ALLOC]).\n   To accommodate\
    \ such a grouping the (direct) provider may allocate\n   some small number of\
    \ high-order bits of the Subscriber ID as a\n   Subscriber-Region ID.  The purpose\
    \ of a Subscriber-Region ID is to\n   identify a group of subscribers that are\
    \ within a close topological\n   proximity to each other (from the provider's\
    \ point of view), and thus\n   could be reachable through a particular attachment\
    \ point between the\n   (direct) provider and other (indirect) provider(s).\n"
- title: 3.4 Intra-Subscriber Part
  contents:
  - "3.4 Intra-Subscriber Part\n   This document leaves the organization of Intra-Subscriber\
    \ portion of\n   the address up to individual subscribers.\n   The provider-based\
    \ unicast address format described in this document\n   leaves 64 bits for the\
    \ local portion of the address.  The editors of\n   this document recommend that\
    \ subscribers use IPv6 auto-configuration\n   capabilities [AUTO] to generate\
    \ addresses using link-specific\n   addresses as Interface ID such as 48 bit IEEE-802\
    \ MAC addresses.  In\n   this case 16 bits are left for the Subnet ID.  This should\
    \ sufficient\n   (e.g., 65,535 subnets) for all but the largest of subscribers.\
    \  This\n   is shown as follows:\n      |            64 bits             |  16\
    \ bits  |     48 bits      |\n      +--------------------------------+-----------+------------------+\n\
    \      |       Subscriber Prefix        | Subnet ID |   Interface ID   |\n   \
    \   +--------------------------------+-----------+------------------+\n   Subscribers\
    \ who need additional subnets (and who desire to continue\n   to use 48 bit IEEE-802\
    \ MAC addresses for Interface ID's) can be\n   accommodated by having the provider\
    \ assign them a block of subscriber\n   prefixes.  Alternatively, an extremely\
    \ large subscriber could be\n   assigned its own Provider ID which would give\
    \ it additional bits of\n   address space to create its own local address hierarchy.\n"
- title: 4.0 National Registries
  contents:
  - "4.0 National Registries\n   A Regional Registry may allocate blocks of address\
    \ space to several\n   National Registries.  The National Registry then becomes\
    \ the entity\n   that allocates address space to individual providers within the\n\
    \   country served by the National Registry.\n   To create National Registries\
    \ the Regional Registry may add a layer\n   of hierarchy in the Provider ID field\
    \ to create National Registries.\n   The resulting Provider Prefix is as follows:\n\
    \   | 3 |  5 bits  |  n bits  |  m bits  |   56-n-m   |    64 bits     |\n   +---+----------+----------+----------+------------+----------------+\n\
    \   |010|RegistryID| National | Provider | Subscriber |Intra-Subscriber|\n   |\
    \   |          |RegistryID|   ID     |     ID     |                |\n   +---+----------+----------+----------+------------+----------------+\n\
    \   This document assumes that within each regional registry there will\n   be\
    \ a relatively small number of national registries.  The size of the\n   National-Registry\
    \ ID should be related to the number of countries in\n   the region administrated\
    \ by the regional registry and the number of\n   providers expected to be in each\
    \ country.\n"
- title: 5.0 Acknowledgments
  contents:
  - "5.0 Acknowledgments\n   The editors would like to express our thanks to Jim Bound\
    \ (Digital),\n   Scott Bradner (Harvard), Brian Carpenter (CERN), Geoff Huston\n\
    \   (AANET), and Tony Li (cisco) for their review and constructive\n   comments.\n"
- title: 6.0 References
  contents:
  - "6.0 References\n   [ALLOC] Rekhter, Y., Li, T., \"An Architecture for IPv6 Unicast\n\
    \           Address Allocation\", RFC 1887, December 1995.\n   [ARCH]  Hinden,\
    \ R., \"IP Version 6 Addressing Architecture\",\n           RFC 1884, December\
    \ 1995.\n   [AUTO]  Thompson, S., \"IPv6 Stateless Address Autoconfiguration\"\
    ,\n           RFC 1972, August 1996.\n"
- title: 7.0 Security Considerations
  contents:
  - "7.0 Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.0 Editors' Addresses
  contents:
  - "8.0 Editors' Addresses\n   Yakov Rekhter\n   Cisco Systems, Inc.\n   170 West\
    \ Tasman Drive\n   San Jose, CA 95134-1706\n   USA\n   Phone:  +1 914 528-0090\n\
    \   EMail:  yakov@cisco.com\n   Peter Lothberg\n   STUPI.AB\n   Box 9129\n   S-102\
    \ 72 Stockholm\n   Sweden\n   Phone:+46 8 6699720\n   EMail: roll@Stupi.SE\n \
    \  Robert M. Hinden\n   Ipsilon Networks, Inc.\n   2191 E. Bayshore Road\n   Palo\
    \ Alto, CA 94303\n   USA\n   Phone: +1 415 846 4604\n   EMail: hinden@ipsilon.com\n\
    \   Stephen E. Deering\n   Xerox Palo Alto Research Center\n   3333 Coyote Hill\
    \ Road\n   Palo Alto, CA 94304\n   USA\n   Phone: +1 415 812 4839\n   Fax:   +1\
    \ 415 812 4471\n   EMail: deering@parc.xerox.com\n   Jon Postel\n   Information\
    \ Sciences Institute\n   4676 Admiralty Way\n   Marina del Rey, CA 90292-6695\n\
    \   USA\n   Phone: +1 310 822 1511\n   Fax:   +1 310 823 6714\n   EMail: postel@isi.edu\n"
