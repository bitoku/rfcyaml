- title: __initial_text__
  contents:
  - "                Early Media and Ringing Tone Generation\n                in the\
    \ Session Initiation Protocol (SIP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how to manage early media in the Session\n\
    \   Initiation Protocol (SIP) using two models: the gateway model and the\n  \
    \ application server model.  It also describes the inputs one needs to\n   consider\
    \ in defining local policies for ringing tone generation.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Session Establishment in SIP . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  The Gateway Model. . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n       3.1.  Forking. . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n       3.2.  Ringing Tone Generation. . . . . . . . . . . . . . .\
    \ . .  5\n       3.3.  Absence of an Early Media Indicator. . . . . . . . . .\
    \ .  7\n       3.4.  Applicability of the Gateway Model . . . . . . . . . . .\
    \  8\n   4.  The Application Server Model . . . . . . . . . . . . . . . . .  8\n\
    \       4.1.  In-Band Versus Out-of-Band Session Progress Information.  9\n  \
    \ 5.  Alert-Info Header Field. . . . . . . . . . . . . . . . . . . .  9\n   6.\
    \  Security Considerations. . . . . . . . . . . . . . . . . . . .  9\n   7.  Acknowledgments.\
    \ . . . . . . . . . . . . . . . . . . . . . . . 10\n   8.  References . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 11\n       8.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . . 11\n       8.2.  Informative References\
    \ . . . . . . . . . . . . . . . . . 11\n       Authors' Addresses . . . . . .\
    \ . . . . . . . . . . . . . . . . 12\n       Full Copyright Statement . . . .\
    \ . . . . . . . . . . . . . . . 13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Early media refers to media (e.g., audio and video) that\
    \ is exchanged\n   before a particular session is accepted by the called user.\
    \  Within a\n   dialog, early media occurs from the moment the initial INVITE\
    \ is sent\n   until the User Agent Server (UAS) generates a final response.  It\
    \ may\n   be unidirectional or bidirectional, and can be generated by the\n  \
    \ caller, the callee, or both.  Typical examples of early media\n   generated\
    \ by the callee are ringing tone and announcements (e.g.,\n   queuing status).\
    \  Early media generated by the caller typically\n   consists of voice commands\
    \ or dual tone multi-frequency (DTMF) tones\n   to drive interactive voice response\
    \ (IVR) systems.\n   The basic SIP specification (RFC 3261 [1]) only supports\
    \ very simple\n   early media mechanisms.  These simple mechanisms have a number\
    \ of\n   problems which relate to forking and security, and do not satisfy the\n\
    \   requirements of most applications.  This document goes beyond the\n   mechanisms\
    \ defined in RFC 3261 [1] and describes two models of early\n   media implementations\
    \ using SIP: the gateway model and the\n   application server model.\n   Although\
    \ both early media models described in this document are\n   superior to the one\
    \ specified in RFC 3261 [1], the gateway model\n   still presents a set of issues.\
    \  In particular, the gateway model\n   does not work well with forking.  Nevertheless,\
    \ the gateway model is\n   needed because some SIP entities (in particular, some\
    \ gateways)\n   cannot implement the application server model.\n   The application\
    \ server model addresses some of the issues present in\n   the gateway model.\
    \  This model uses the early-session disposition\n   type, which is specified\
    \ in [2].\n   The remainder of this document is organized as follows: Section\
    \ 2\n   describes the offer/answer model in the absence of early media, and\n\
    \   Section 3 introduces the gateway model.  In this model, the early\n   media\
    \ session is established using the early dialog established by\n   the original\
    \ INVITE.  Sections 3.1, 3.2, and 3.4 describe the\n   limitations of the gateway\
    \ model and the scenarios where it is\n   appropriate to use this model.  Section\
    \ 4 introduces the application\n   server model, which, as stated previously,\
    \ resolves some of the\n   issues present in the gateway model.  Section 5 discusses\
    \ the\n   interactions between the Alert-Info header field in both early media\n\
    \   models.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \" NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"\
    OPTIONAL\" in this\n   document are to be interpreted as described in [9].\n"
- title: 2.  Session Establishment in SIP
  contents:
  - "2.  Session Establishment in SIP\n   Before presenting both early media models,\
    \ we will briefly summarize\n   how session establishment works in SIP.  This\
    \ will let us keep\n   separate features that are intrinsic to SIP (e.g., media\
    \ being played\n   before the 200 (OK) to avoid media clipping) from early media\n\
    \   operations.\n   SIP [1] uses the offer/answer model [3] to negotiate session\n\
    \   parameters.  One of the user agents - the offerer - prepares a\n   session\
    \ description that is called the offer.  The other user agent\n   - the answerer\
    \ - responds with another session description called the\n   answer.  This two-way\
    \ handshake allows both user agents to agree upon\n   the session parameters to\
    \ be used to exchange media.\n   The offer/answer model decouples the offer/answer\
    \ exchange from the\n   messages used to transport the session descriptions. \
    \ For example,\n   the offer can be sent in an INVITE request and the answer can\
    \ arrive\n   in the 200 (OK) response for that INVITE, or, alternatively, the\n\
    \   offer can be sent in the 200 (OK) for an empty INVITE and the answer\n   can\
    \ be sent in the ACK.  When reliable provisional responses [4] and\n   UPDATE\
    \ requests [5] are used, there are many more possible ways to\n   exchange offers\
    \ and answers.\n   Media clipping occurs when the user (or the machine generating\
    \ media)\n   believes that the media session is already established, but the\n\
    \   establishment process has not finished yet.  The user starts speaking\n  \
    \ (i.e., generating media) and the first few syllables or even the\n   first few\
    \ words are lost.\n   When the offer/answer exchange takes place in the 200 (OK)\
    \ response\n   and in the ACK, media clipping is unavoidable.  The called user\n\
    \   starts speaking at the same time the 200 (OK) is sent, but the UAS\n   cannot\
    \ send any media until the answer from the User Agent Client\n   (UAC) arrives\
    \ in the ACK.\n   On the other hand, media clipping does not appear in the most\
    \ common\n   offer/answer exchange (an INVITE with an offer and a 200 (OK) with\
    \ an\n   answer).  UACs are ready to play incoming media packets as soon as\n\
    \   they send an offer, because they cannot count on the reception of the\n  \
    \ 200 (OK) to start playing out media for the caller; SIP signalling\n   and media\
    \ packets typically traverse different paths, and so, media\n   packets may arrive\
    \ before the 200 (OK) response.\n   Another form of media clipping (not related\
    \ to early media either)\n   occurs in the caller-to-callee direction.  When the\
    \ callee picks up\n   and starts speaking, the UAS sends a 200 (OK) response with\
    \ an\n   answer, in parallel with the first media packets.  If the first media\n\
    \   packets arrive at the UAC before the answer and the caller starts\n   speaking,\
    \ the UAC cannot send media until the 200 (OK) response from\n   the UAS arrives.\n"
- title: 3.  The Gateway Model
  contents:
  - "3.  The Gateway Model\n   SIP uses the offer/answer model to negotiate session\
    \ parameters (as\n   described in Section 2).  An offer/answer exchange that takes\
    \ place\n   before a final response for the INVITE is sent establishes an \"early\"\
    \n   media session.  Early media sessions terminate when a final response\n  \
    \ for the INVITE is sent.  If the final response is a 200 (OK), the\n   early\
    \ media session transitions to a regular media session.  If the\n   final response\
    \ is a non-200 class final response, the early media\n   session is simply terminated.\n\
    \   Not surprisingly, media exchanged within an early media session is\n   referred\
    \ to as early media.  The gateway model consists of managing\n   early media sessions\
    \ using offer/answer exchanges in reliable\n   provisional responses, PRACKs,\
    \ and UPDATEs.\n   The gateway model is seriously limited in the presence of forking,\
    \ as\n   described in Section 3.1.  Therefore, its use is only acceptable when\n\
    \   the User Agent (UA) cannot distinguish between early and regular\n   media,\
    \ as described in Section 3.4.  In any other situation (the\n   majority of UAs),\
    \ use of the application server model described in\n   Section 4 is strongly recommended\
    \ instead.\n"
- title: 3.1.  Forking
  contents:
  - "3.1.  Forking\n   In the absence of forking, assuming that the initial INVITE\
    \ contains\n   an offer, the gateway model does not introduce media clipping.\n\
    \   Following normal SIP procedures, the UAC is ready to play any\n   incoming\
    \ media as soon as it sends the initial offer in the INVITE.\n   The UAS sends\
    \ the answer in a reliable provisional response and can\n   send media as soon\
    \ as there is media to send.  Even if the first\n   media packets arrive at the\
    \ UAC before the 1xx response, the UAC will\n   play them.\n      Note that, in\
    \ some situations, the UAC needs to receive the answer\n      before being able\
    \ to play any media.  UAs in such a situation\n      (e.g., QoS, media authorization,\
    \ or media encryption is required)\n      use preconditions to avoid media clipping.\n\
    \   On the other hand, if the INVITE forks, the gateway model may\n   introduce\
    \ media clipping.  This happens when the UAC receives\n   different answers to\
    \ its offer in several provisional responses from\n   different UASs.  The UAC\
    \ has to deal with bandwidth limitations and\n   early media session selection.\n\
    \   If the UAC receives early media from different UASs, it needs to\n   present\
    \ it to the user.  If the early media consists of audio,\n   playing several audio\
    \ streams to the user at the same time may be\n   confusing.  On the other hand,\
    \ other media types (e.g., video) can be\n   presented to the user at the same\
    \ time.  For example, the UAC can\n   build a mosaic with the different inputs.\n\
    \   However, even with media types that can be played at the same time to\n  \
    \ the user, if the UAC has limited bandwidth, it will not be able to\n   receive\
    \ early media from all the different UASs at the same time.\n   Therefore, many\
    \ times, the UAC needs to choose a single early media\n   session and \"mute\"\
    \ those sending UPDATE requests.\n      It is difficult to decide which early\
    \ media sessions carry more\n      important information from the caller's perspective.\
    \  In fact, in\n      some scenarios, the UA cannot even correlate media packets\
    \ with\n      their particular SIP early dialog.  Therefore, UACs typically pick\n\
    \      one early dialog randomly and mute the rest.\n   If one of the early media\
    \ sessions that was muted transitions to a\n   regular media session (i.e., the\
    \ UAS sends a 2xx response), media\n   clipping is likely.  The UAC typically\
    \ sends an UPDATE with a new\n   offer (upon reception of the 200 (OK) for the\
    \ INVITE) to unmute the\n   media session.  The UAS cannot send any media until\
    \ it receives the\n   offer from the UAC.  Therefore, if the caller starts speaking\
    \ before\n   the offer from the UAC is received, his words will get lost.\n  \
    \    Having the UAS send the UPDATE to unmute the media session\n      (instead\
    \ of the UAC) does not avoid media clipping in the backward\n      direction and\
    \ it causes possible race conditions.\n"
- title: 3.2.  Ringing Tone Generation
  contents:
  - "3.2.  Ringing Tone Generation\n   In the PSTN, telephone switches typically play\
    \ ringing tones for the\n   caller, indicating that the callee is being alerted.\
    \  When, where,\n   and how these ringing tones are generated has been standardized\n\
    \   (i.e., the local exchange of the callee generates a standardized\n   ringing\
    \ tone while the callee is being alerted).  It makes sense for\n   a standardized\
    \ approach to provide this type of feedback for the user\n   in a homogeneous\
    \ environment such as the PSTN, where all the\n   terminals have a similar user\
    \ interface.\n   This homogeneity is not found among SIP user agents.  SIP user\
    \ agents\n   have different capabilities, different user interfaces, and may be\n\
    \   used to establish sessions that do not involve audio at all.  Because\n  \
    \ of this, the way a SIP UA provides the user with information about\n   the progress\
    \ of session establishment is a matter of local policy.\n   For example, a UA\
    \ with a Graphical User Interface (GUI) may choose to\n   display a message on\
    \ the screen when the callee is being alerted,\n   while another UA may choose\
    \ to show a picture of a phone ringing\n   instead.  Many SIP UAs choose to imitate\
    \ the user interface of the\n   PSTN phones.  They provide a ringing tone to the\
    \ caller when the\n   callee is being alerted.  Such a UAC is supposed to generate\
    \ ringing\n   tones locally for its user as long as no early media is received\
    \ from\n   the UAS.  If the UAS generates early media (e.g., an announcement or\n\
    \   a special ringing tone), the UAC is supposed to play it rather than\n   generate\
    \ the ringing tone locally.\n   The problem is that, sometimes, it is not an easy\
    \ task for a UAC to\n   know whether it will be receiving early media or it should\
    \ generate\n   local ringing.  A UAS can send early media without using reliable\n\
    \   provisional responses (very simple UASs do that) or it can send an\n   answer\
    \ in a reliable provisional response without any intention of\n   sending early\
    \ media (this is the case when preconditions are used).\n   Therefore, by only\
    \ looking at the SIP signalling, a UAC cannot be\n   sure whether or not there\
    \ will be early media for a particular\n   session.  The UAC needs to check if\
    \ media packets are arriving at a\n   given moment.\n      An implementation could\
    \ even choose to look at the contents of the\n      media packets, since they\
    \ could carry only silence or comfort\n      noise.\n   With this in mind, a UAC\
    \ should develop its local policy regarding\n   local ringing generation.  For\
    \ example, a POTS (\"Plain Old Telephone\n   Service\")-like SIP User Agent (UA)\
    \ could implement the following\n   local policy:\n      1. Unless a 180 (Ringing)\
    \ response is received, never generate\n         local ringing.\n      2. If a\
    \ 180 (Ringing) has been received but there are no incoming\n         media packets,\
    \ generate local ringing.\n      3. If a 180 (Ringing) has been received and there\
    \ are incoming\n         media packets, play them and do not generate local ringing.\n\
    \         Note that a 180 (Ringing) response means that the callee is\n      \
    \   being alerted, and a UAS should send such a response if the\n         callee\
    \ is being alerted, regardless of the status of the early\n         media session.\n\
    \   At first sight, such a policy may look difficult to implement in\n   decomposed\
    \ UAs (i.e., media gateway controller and media gateway),\n   but this policy\
    \ is the same as the one described in Section 2, which\n   must be implemented\
    \ by any UA.  That is, any UA should play incoming\n   media packets (and stop\
    \ local ringing tone generation if it was being\n   performed) in order to avoid\
    \ media clipping, even if the 200 (OK)\n   response has not arrived.  So, the\
    \ tools to implement this early\n   media policy are already available to any\
    \ UA that uses SIP.\n   Note that, while it is not desirable to standardize a\
    \ common local\n   policy to be followed by every SIP UA, a particular subset\
    \ of more or\n   less homogeneous SIP UAs could use the same local policy by\n\
    \   convention.  Examples of such subsets of SIP UAs may be \"all the\n   PSTN/SIP\
    \ gateways\" or \"every 3GPP IMS (Third Generation Partnership\n   Project Internet\
    \ Multimedia System) terminal\".  However, defining the\n   particular common\
    \ policy that such groups of SIP devices may use is\n   outside the scope of this\
    \ document.\n"
- title: 3.3.  Absence of an Early Media Indicator
  contents:
  - "3.3.  Absence of an Early Media Indicator\n   SIP, as opposed to other signalling\
    \ protocols, does not provide an\n   early media indicator.  That is, there is\
    \ no information about the\n   presence or absence of early media in SIP.  Such\
    \ an indicator could\n   be potentially used to avoid the generation of local\
    \ ringing tone by\n   the UAC when UAS intends to provide an in-band ringing tone\
    \ or some\n   type of announcement.  However, in the majority of the cases, such\
    \ an\n   indicator would be of little use due to the way SIP works.\n   One important\
    \ reason limiting the benefit of a potential early media\n   indicator is the\
    \ loose coupling between SIP signalling and the media\n   path.  SIP signalling\
    \ traverses a different path than the media.  The\n   media path is typically\
    \ optimized to reduce the end-to-end delay\n   (e.g., minimum number of intermediaries),\
    \ while the SIP signalling\n   path typically traverses a number of proxies providing\
    \ different\n   services for the session.  Hence, it is very likely that the media\n\
    \   packets with early media reach the UAC before any SIP message that\n   could\
    \ contain an early media indicator.\n   Nevertheless, sometimes SIP responses\
    \ arrive at the UAC before any\n   media packet.  There are situations in which\
    \ the UAS intends to send\n   early media but cannot do it straight away.  For\
    \ example, UAs using\n   Interactive Connectivity Establishment (ICE) [6] may\
    \ need to exchange\n   several Simple Traversals of the UDP Protocol through NAT\
    \ (STUN)\n   messages before being able to exchange media.  In this situation,\
    \ an\n   early media indicator would keep the UAC from generating a local\n  \
    \ ringing tone during this time.  However, while the early media is not\n   arriving\
    \ at the UAC, the user would not be aware that the remote user\n   is being alerted,\
    \ even though a 180 (Ringing) had been received.\n   Therefore, a better solution\
    \ would be to apply a local ringing tone\n   until the early media packets could\
    \ be sent from the UAS to the UAC.\n   This solution does not require any early\
    \ media indicator.\n      Note that migrations from local ringing tone to early\
    \ media at the\n      UAC happen in the presence of forking as well; one UAS sends\
    \ a 180\n      (Ringing) response, and later, another UAS starts sending early\n\
    \      media.\n"
- title: 3.4.  Applicability of the Gateway Model
  contents:
  - "3.4.  Applicability of the Gateway Model\n   Section 3 described some of the\
    \ limitations of the gateway model.  It\n   produces media clipping in forking\
    \ scenarios and requires media\n   detection to generate local ringing properly.\
    \  These issues are\n   addressed by the application server model, described in\
    \ Section 4,\n   which is the recommended way of generating early media that is\
    \ not\n   continuous with the regular media generated during the session.\n  \
    \ The gateway model is, therefore, acceptable in situations where the\n   UA cannot\
    \ distinguish between early media and regular media.  A PSTN\n   gateway is an\
    \ example of this type of situation.  The PSTN gateway\n   receives media from\
    \ the PSTN over a circuit, and sends it to the IP\n   network.  The gateway is\
    \ not aware of the contents of the media, and\n   it does not exactly know when\
    \ the transition from early to regular\n   media takes place.  From the PSTN perspective,\
    \ the circuit is a\n   continuous source of media.\n"
- title: 4.  The Application Server Model
  contents:
  - "4.  The Application Server Model\n   The application server model consists of\
    \ having the UAS behave as an\n   application server to establish early media\
    \ sessions with the UAC.\n   The UAC indicates support for the early-session disposition\
    \ type\n   (defined in [2]) using the early-session option tag.  This way, UASs\n\
    \   know that they can keep offer/answer exchanges for early media\n   (early-session\
    \ disposition type) separate from regular media (session\n   disposition type).\n\
    \   Sending early media using a different offer/answer exchange than the\n   one\
    \ used for sending regular media helps avoid media clipping in\n   cases of forking.\
    \  The UAC can reject or mute new offers for early\n   media without muting the\
    \ sessions that will carry media when the\n   original INVITE is accepted.  The\
    \ UAC can give priority to media\n   received over the latter sessions.  This\
    \ way, the application server\n   model transitions from early to regular media\
    \ at the right moment.\n   Having a separate offer/answer exchange for early media\
    \ also helps\n   UACs decide whether or not local ringing should be generated.\
    \  If a\n   new early session is established and that early session contains at\n\
    \   least an audio stream, the UAC can assume that there will be incoming\n  \
    \ early media and it can then avoid generating local ringing.\n      An alternative\
    \ model would include the addition of a new stream,\n      with an \"early media\"\
    \ label, to the original session between the\n      UAC and the UAS using an UPDATE\
    \ instead of establishing a new\n      early session.  We have chosen to establish\
    \ a new early session to\n      be coherent with the mechanism used by application\
    \ servers that\n      are NOT\n      co-located with the UAS.  This way, the UAS\
    \ uses the same\n      mechanism as any application server in the network to interact\n\
    \      with the UAC.\n"
- title: 4.1.  In-Band Versus Out-of-Band Session Progress Information
  contents:
  - "4.1.  In-Band Versus Out-of-Band Session Progress Information\n   Note that,\
    \ even when the application server model is used, a UA will\n   have to choose\
    \ which early media sessions are muted and which ones\n   are rendered to the\
    \ user.  In order to make this choice easier for\n   UAs, it is strongly recommended\
    \ that information that is not\n   essential for the session not be transmitted\
    \ using early media.  For\n   instance, UAs should not use early media to send\
    \ special ringing\n   tones.  The status code and the reason phrase in SIP can\
    \ already\n   inform the remote user about the progress of session establishment,\n\
    \   without incurring the problems associated with early media.\n"
- title: 5.  Alert-Info Header Field
  contents:
  - "5.  Alert-Info Header Field\n   The Alert-Info header field allows specifying\
    \ an alternative ringing\n   content, such as ringing tone, to the UAC.  This\
    \ header field tells\n   the UAC which tone should be played in case local ringing\
    \ is\n   generated, but it does not tell the UAC when to generate local\n   ringing.\
    \  A UAC should follow the rules described above for ringing\n   tone generation\
    \ in both models.  If, after following those rules, the\n   UAC decides to play\
    \ local ringing, it can then use the Alert-Info\n   header field to generate it.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   SIP uses the offer/answer model [3] to establish\
    \ early sessions in\n   both the gateway and the application server models.  User\
    \ Agents\n   (UAs) generate a session description, which contains the transport\n\
    \   address (i.e., IP address plus port) where they want to receive\n   media,\
    \ and send it to their peer in a SIP message.  When media\n   packets arrive at\
    \ this transport address, the UA assumes that they\n   come from the receiver\
    \ of the SIP message carrying the session\n   description.  Nevertheless, attackers\
    \ may attempt to gain access to\n   the contents of the SIP message and send packets\
    \ to the transport\n   address contained in the session description.  To prevent\
    \ this\n   situation, UAs SHOULD encrypt their session descriptions (e.g., using\n\
    \   S/MIME).\n   Still, even if a UA encrypts its session descriptions, an attacker\n\
    \   may try to guess the transport address used by the UA and send media\n   packets\
    \ to that address.  Guessing such a transport address is\n   sometimes easier\
    \ than it may seem because many UAs always pick up the\n   same initial media\
    \ port.  To prevent this situation, UAs SHOULD use\n   media-level authentication\
    \ mechanisms such as the Secure Realtime\n   Transport Protocol (SRTP)[7].  In\
    \ addition, UAs that wish to keep\n   their communications confidential SHOULD\
    \ use media-level encryption\n   mechanisms (e.g, SRTP [7]).\n   Attackers may\
    \ attempt to make a UA send media to a victim as part of\n   a DoS attack.  This\
    \ can be done by sending a session description with\n   the victim's transport\
    \ address to the UA.  To prevent this attack,\n   the UA SHOULD engage in a handshake\
    \ with the owner of the transport\n   address received in a session description\
    \ (just verifying willingness\n   to receive media) before sending a large amount\
    \ of data to the\n   transport address.  This check can be performed by using\
    \ a connection\n   oriented transport protocol, by using STUN [8] in an end-to-end\n\
    \   fashion, or by the key exchange in SRTP [7].\n   In any event, note that the\
    \ previous security considerations are not\n   early media specific, but apply\
    \ to the usage of the offer/answer\n   model in SIP to establish sessions in general.\n\
    \   Additionally, an early media-specific risk (roughly speaking,\n   equivalent\
    \ to forms of \"toll fraud\" in the PSTN) attempts to exploit\n   the different\
    \ charging policies some operators apply to early and\n   regular media.  When\
    \ UAs are allowed to exchange early media for\n   free, but are required to pay\
    \ for regular media sessions, rogue UAs\n   may try to establish a bidirectional\
    \ early media session and never\n   send a 200 (OK) response for the INVITE.\n\
    \   On the other hand, some application servers (e.g., Interactive Voice\n   Response\
    \ systems) use bidirectional early media to obtain information\n   from the callers\
    \ (e.g., the PIN code of a calling card).  So, we do\n   not recommend that operators\
    \ disallow bidirectional early media.\n   Instead, operators should consider a\
    \ remedy of charging early media\n   exchanges that last too long, or stopping\
    \ them at the media level\n   (according to the operator's policy).\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Jon Peterson provided useful ideas on the separation\
    \ between the\n   gateway model and the application server model.\n   Paul Kyzivat,\
    \ Christer Holmberg, Bill Marshall, Francois Audet, John\n   Hearty, Adam Roach,\
    \ Eric Burger, Rohan Mahy, and Allison Mankin\n   provided useful comments and\
    \ suggestions.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [1] Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n       Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n       Session Initiation Protocol\", RFC 3261, June 2002.\n   [2] Camarillo,\
    \ G., \"The Early Session Disposition Type for the\n       Session Initiation\
    \ Protocol (SIP)\", RFC 3959, December 2004.\n   [3] Rosenberg, J. and H. Schulzrinne,\
    \ \"An Offer/Answer Model with\n       Session Description Protocol (SDP)\", RFC\
    \ 3264, June 2002.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [4] Rosenberg, J. and H. Schulzrinne, \"Reliability\
    \ of Provisional\n       Responses in Session Initiation Protocol (SIP)\", RFC\
    \ 3262, June\n       2002.\n   [5] Rosenberg, J., \"The Session Initiation Protocol\
    \ (SIP) UPDATE\n       Method\", RFC 3311, October 2002.\n   [6] Rosenberg, J.,\
    \ \"Interactive connectivity establishment (ICE): a\n       methodology for network\
    \ address translator (NAT) traversal for\n       the session initiation protocol\
    \ (SIP)\",  Work in progress, July\n       2003.\n   [7] Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and K.\n       Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\", RFC\n       3711, March 2004.\n   [8] Rosenberg,\
    \ J., Weinberger, J., Huitema, C., and R. Mahy,\n       \"STUN - Simple Traversal\
    \ of User Datagram Protocol (UDP) Through\n       Network Address Translators\
    \ (NATs)\", RFC 3489, March 2003.\n   [9] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gonzalo Camarillo\n   Ericsson\n   Advanced Signalling\
    \ Research Lab.\n   FIN-02420 Jorvas\n   Finland\n   EMail:  Gonzalo.Camarillo@ericsson.com\n\
    \   Henning Schulzrinne\n   Dept. of Computer Science\n   Columbia University\
    \ 1214 Amsterdam Avenue, MC 0401\n   New York, NY 10027\n   USA\n   EMail:  schulzrinne@cs.columbia.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
