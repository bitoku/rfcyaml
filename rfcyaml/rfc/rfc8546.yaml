- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                            B. Trammell
  contents:
  - "Internet Architecture Board (IAB)                            B. Trammell\n  \
    \                The Wire Image of a Network Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the wire image, an abstraction of the\n  \
    \ information available to an on-path non-participant in a networking\n   protocol.\
    \  This abstraction is intended to shed light on the\n   implications that increased\
    \ encryption has for network functions that\n   use the wire image.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  It represents\
    \ the consensus of the\n   Internet Architecture Board (IAB).  Documents approved\
    \ for\n   publication by the IAB are not candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8546.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Definition  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Discussion  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n     3.1.  The Extent of the Wire Image  . . . . . . . . . . . .\
    \ . .   4\n     3.2.  Obscuring Timing and Sizing Information . . . . . . . .\
    \ .   5\n     3.3.  Integrity Protection of the Wire Image  . . . . . . . . .\
    \   5\n   4.  Engineering the Wire Image  . . . . . . . . . . . . . . . . .  \
    \ 6\n     4.1.  Declaring Protocol Invariants . . . . . . . . . . . . . .   7\n\
    \     4.2.  Trustworthiness of Engineered Signals . . . . . . . . . .   7\n  \
    \ 5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8\n   6.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .   8\n   7.  Informative\
    \ References  . . . . . . . . . . . . . . . . . . .   8\n   IAB Members at the\
    \ Time of Approval . . . . . . . . . . . . . . .   9\n   Acknowledgments . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .   9\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A protocol specification defines a set of behaviors for\
    \ each\n   participant in the protocol: which lower-layer protocols are used for\n\
    \   which services, how messages are formatted and protected, which\n   participant\
    \ sends which message when, how each participant should\n   respond to each message,\
    \ and so on.\n   Implicit in a protocol specification is the information the protocol\n\
    \   radiates toward nonparticipant observers of the messages sent among\n   participants,\
    \ often including participants in lower-layer protocols.\n   Any information that\
    \ has a clear definition in the protocol's message\n   format(s), or is implied\
    \ by that definition, and is not\n   cryptographically confidentiality protected\
    \ can be unambiguously\n   interpreted by those observers.  This information comprises\
    \ the\n   protocol's wire image, which we define and discuss in this document.\n\
    \   The wire image, not the protocol's specification, determines how\n   third\
    \ parties on the network paths among protocol participants will\n   interact with\
    \ that protocol.\n   The increasing deployment of transport-layer security [RFC8446]\
    \ to\n   protect application-layer headers and payload, as well as the\n   definition\
    \ and deployment of transport protocols with encrypted\n   control information\
    \ such as QUIC [QUIC], brings new relevance to the\n   question of how third parties\
    \ on the network paths will interact with\n   a protocol.  QUIC is, in effect,\
    \ the first IETF-defined transport\n   protocol to take care of the minimization\
    \ of its own wire image to\n   prevent ossification and improve end-to-end privacy\
    \ by reducing\n   information radiation.\n   The flip side of this trend is the\
    \ impact of a less visible wire\n   image on various functions driven by third-party\
    \ observation of the\n   wire image.  In contrast to ongoing discussions about\
    \ this tussle,\n   this document treats the wire image as a pure abstraction,\
    \ with the\n   hope that it can shed some light on these discussions.\n"
- title: 2.  Definition
  contents:
  - "2.  Definition\n   The wire image of the set of protocols in use for a given\n\
    \   communication is the view of that set of protocols as observed by an\n   entity\
    \ not participating in the communication.  It is the sequence of\n   packets sent\
    \ by each participant in the communication, including the\n   content of those\
    \ packets and metadata about the observation itself:\n   the time at which each\
    \ packet is observed and the vantage point of\n   the observer.\n"
- title: 3.  Discussion
  contents:
  - "3.  Discussion\n   This definition illustrates some important properties of the\
    \ wire\n   image.\n   It is key that the wire image is not limited to merely \"\
    the\n   unencrypted bits in the header\".  In particular, the metadata, such\n\
    \   as sequences of interpacket timing and packet sizes, can be used to\n   infer\
    \ other parameters of the behavior of the protocols in use or to\n   fingerprint\
    \ protocols and/or specific implementations of those\n   protocols; see Section\
    \ 3.2.\n   An important implication of this property is that a protocol that\n\
    \   uses confidentiality protection for the headers it needs to operate\n   can\
    \ be deliberately designed to have a specified wire image that is\n   separate\
    \ from that machinery; see Section 4.  Note that this is a\n   capability unique\
    \ to encrypted protocols.  Parts of a wire image may\n   also be made visible\
    \ to devices on path, but immutable through end-\n   to-end integrity protection;\
    \ see Section 3.3.\n   Portions of the wire image of a protocol stack that are\
    \ neither\n   confidentiality protected nor integrity protected are writable by\n\
    \   devices on the path(s) between the endpoints using the protocols.  A\n   protocol\
    \ with a wire image that is largely writable operating over a\n   path with devices\
    \ that understand the semantics of the protocol's\n   wire image can modify it\
    \ in order to induce behaviors at the\n   protocol's participants.  TCP is one\
    \ such protocol in the current\n   Internet.\n   The term \"wire image\" can be\
    \ applied in different scopes: the wire\n   image of a single packet refers to\
    \ the information derivable from\n   observing that one packet in isolation, and\
    \ the wire image of a\n   single protocol refers to the information derivable\
    \ from observing\n   only the headers belonging to that protocol on a sequence\
    \ of packets\n   in isolation from other protocols in use for a communication.\
    \  See\n   Section 3.1 for more.\n   For a given packet observed at a given point\
    \ in the network, the wire\n   image contains information from the entire stack\
    \ of protocols in use\n   at that observation point.  This implies that the wire\
    \ image depends\n   on the observer as well: each observer may see a slightly\
    \ different\n   image of the same communication.\n   In this document, we assume\
    \ that only information at the transport\n   layer and above is delivered end-to-end,\
    \ and we focus on the\n   \"Internet\" wire image: that portion of the wire image\
    \ at the network\n   layer and above.  While confidentiality and integrity protection\
    \ may\n   be added at multiple layers in the stack, protection below the\n   network\
    \ layer does not prevent modification either by the devices\n   terminating those\
    \ security associations or by devices on different\n   segments of the path.\n"
- title: 3.1.  The Extent of the Wire Image
  contents:
  - "3.1.  The Extent of the Wire Image\n   While we begin this definition as the\
    \ properties of a sequence of\n   packets in isolation, this is not how wire images\
    \ are typically used\n   by passive observers.  A passive observer will generally\
    \ consider the\n   union of all the information in the wire image in all the packets\n\
    \   generated by a given conversation.\n   Similarly, the wire image of a single\
    \ protocol is rarely seen in\n   isolation.  The dynamics of the application and\
    \ network stacks on\n   each endpoint use multiple protocols for any higher-level\
    \ task.  Most\n   protocols involving user content, for example, are often seen\
    \ on the\n   wire together with DNS traffic; the information from the wire image\n\
    \   from each protocol in use for a given communication can be correlated\n  \
    \ to infer information about the dynamics of the overlying application.\n   Information\
    \ from protocol wire images is also not generally used on\n   its own but is rather\
    \ additionally correlated with other context\n   information available to the\
    \ observer, e.g., information about other\n   communications engaged in by each\
    \ endpoint, information about the\n   implementations of the protocols at each\
    \ endpoint, information about\n   the network and internetwork topology near those\
    \ endpoints, and so\n   on.  This context can be used together with information\
    \ from the wire\n   image to reach more detailed inferences about endpoint and\
    \ end-user\n   behavior.\n   Note also that the wire image is multidimensional.\
    \  This implies that\n   the name \"image\" is not merely metaphorical and that\
    \ general image\n   recognition techniques may be applicable to extracting patterns\
    \ and\n   information from it.\n"
- title: 3.2.  Obscuring Timing and Sizing Information
  contents:
  - "3.2.  Obscuring Timing and Sizing Information\n   Cryptography can protect the\
    \ confidentiality of a protocol's headers\n   to the extent that forwarding devices\
    \ do not need the\n   confidentiality-protected information for basic forwarding\n\
    \   operations.  Ciphersuites and other transmission techniques designed\n   to\
    \ prevent timing analysis can also be applied at the sender to\n   reduce the\
    \ information content of the metadata portion of the wire\n   image.  However,\
    \ there are limits to these techniques.  Packets\n   cannot be made smaller than\
    \ their information content, be sent faster\n   than processing time requirements\
    \ at the sender allow, or be\n   transmitted through the network faster than the\
    \ speed of light.\n   Since these techniques operate at the expense of bandwidth\
    \ efficiency\n   and latency, they are also limited to the application's tolerance\
    \ for\n   latency and bandwidth inefficiency.\n"
- title: 3.3.  Integrity Protection of the Wire Image
  contents:
  - "3.3.  Integrity Protection of the Wire Image\n   Adding end-to-end integrity\
    \ protection to portions of the wire image\n   makes it impossible for on-path\
    \ devices to modify them without\n   detection by the endpoints, which can then\
    \ take action in response to\n   those modifications, making these portions of\
    \ the wire image\n   effectively immutable.  However, they can still be observed\
    \ by\n   devices on path.  This allows the creation of signals intended by the\n\
    \   endpoints solely for the consumption of these on-path devices.\n   Integrity\
    \ protection can only practically be applied to the sequence\n   of bits in each\
    \ packet, which implies that a protocol's visible wire\n   image cannot be made\
    \ completely immutable in a packet-switched\n   network.  Interarrival timings,\
    \ for instance, cannot be easily\n   protected, as the observable delay sequence\
    \ is modified as packets\n   move through the network and experience different\
    \ delays on different\n   links.  Message sequences are also not practically protectable,\n\
    \   because packets may be dropped or reordered at any point in the\n   network\
    \ as a consequence of the network's operation.  Intermediate\n   systems with\
    \ knowledge of the protocol semantics in the readable\n   portion of the wire\
    \ image can also purposely delay or drop packets in\n   order to affect the protocol's\
    \ operation.\n"
- title: 4.  Engineering the Wire Image
  contents:
  - "4.  Engineering the Wire Image\n   Understanding the nature of a protocol's wire\
    \ image allows it to be\n   engineered.  The general principle at work here, observed\
    \ through\n   experience with deployability and non-deployability of protocols\
    \ at\n   the network and transport layers in the Internet, is that all\n   observable\
    \ parts of a protocol's wire image will eventually be used\n   by devices on path.\
    \  Consequently, changes or future extensions that\n   affect the observable part\
    \ of the wire image become difficult or\n   impossible to deploy.\n   A network\
    \ function that serves a purpose useful to its deployer will\n   use the information\
    \ it needs from the wire image and will tend to get\n   that information from\
    \ the wire image in the simplest way possible.\n   For example, consider the case\
    \ of the ubiquitous TCP [RFC793]\n   transport protocol.  As described in [RFC8558],\
    \ several key\n   in-network functions have evolved to take advantage of implicit\n\
    \   signals in TCP's wire image, which, as TCP provides neither integrity\n  \
    \ or confidentiality protection for its headers, is inseparable from\n   its internal\
    \ operation.  Some of these include:\n   o  Determining return routability and\
    \ consent: For example, TCP's\n      wire image contains both an implicit indication\
    \ that the sender of\n      a packet is at least on the path toward its source\
    \ address (in the\n      acknowledgement number during the handshake), as well\
    \ as an\n      implicit indication that a receiving device consents to continue\n\
    \      communication.  These are used by stateful network firewalls.\n   o  Measuring\
    \ loss and latency: For example, examining the sequence of\n      TCP's sequence\
    \ and acknowledgement numbers, as well as the ECN\n      [RFC3168] control bits,\
    \ allows the inference of congestion, loss,\n      and retransmission along the\
    \ path.  The sequence and\n      acknowledgement numbers together with the timestamp\
    \ option\n      [RFC7323] allow the measurement of application-experienced\n \
    \     latency.\n   During the design of a protocol, the utility of features like\
    \ these\n   should be considered.  The protocol's wire image can be designed to\n\
    \   explicitly expose information to those network functions deemed\n   important\
    \ by the designers.  The wire image should expose as little\n   other information\
    \ as possible.\n   However, even when information is explicitly provided to the\
    \ network,\n   any information that is exposed by the wire image, even information\n\
    \   not intended to be consumed by an observer, must be designed\n   carefully,\
    \ as deployed network functions using that information may\n   render it immutable\
    \ for future versions of the protocol.  For\n   example, information needed to\
    \ support decryption by the receiving\n   endpoint (cryptographic handshakes,\
    \ sequence numbers, and so on) may\n   be used by devices along the path for their\
    \ own purposes.\n"
- title: 4.1.  Declaring Protocol Invariants
  contents:
  - "4.1.  Declaring Protocol Invariants\n   One potential approach to reduce the\
    \ extent of the wire image that\n   will be used by devices on the path is to\
    \ define a set of invariants\n   for a protocol during its development.  Declaring\
    \ a protocol's\n   invariants represents a promise made by the protocol's developers\n\
    \   that certain bits in the wire image, and behaviors observable in the\n   wire\
    \ image, will be preserved through the specification of all future\n   versions\
    \ of the protocol.  QUIC's invariants [QUIC-INVARIANTS] are an\n   initial attempt\
    \ to apply this approach to QUIC.\n   While static aspects of the wire image (bits\
    \ with simple semantics at\n   fixed positions in protocol headers) can easily\
    \ be made invariant,\n   different aspects of the wire image may be more or less\
    \ appropriate\n   to define as invariants.  For a protocol with a version and/or\n\
    \   extension negotiation mechanism, the bits in the header and the\n   behaviors\
    \ tied to those bits, which implement version negotiation,\n   should be made\
    \ invariant.  More fluid aspects of the wire image and\n   behaviors that are\
    \ not necessary for interoperability are not\n   appropriate as invariants.\n\
    \   Parts of a protocol's wire image not declared invariant but intended\n   to\
    \ be visible to devices on path should be protected against\n   \"accidental invariance\"\
    : the deployment of on-path devices over time\n   that make simplifying assumptions\
    \ about the behavior of those parts\n   of the wire image, making new behaviors\
    \ not meeting those assumptions\n   difficult to deploy.  Integrity protection\
    \ of the wire image may\n   itself help protect against accidental invariance,\
    \ because read-only\n   wire images invite less meddling than path-writable wire\
    \ images.  The\n   techniques discussed in [USE-IT] may also be useful in further\n\
    \   preventing accidental invariance and ossification.\n   Likewise, parts of\
    \ a protocol's wire image not declared invariant and\n   not intended to be visible\
    \ to the path should be encrypted to protect\n   their confidentiality.  When\
    \ confidentiality protection is either not\n   possible or not practical, then,\
    \ as above, the approaches discussed\n   in [USE-IT] may be useful in ossification\
    \ prevention.\n"
- title: 4.2.  Trustworthiness of Engineered Signals
  contents:
  - "4.2.  Trustworthiness of Engineered Signals\n   Since signals in the wire image\
    \ that are engineered to be exposed are\n   separate from the signals that drive\
    \ an encrypted protocol's\n   mechanisms, the accuracy of these signals intended\
    \ for consumption by\n   the path may not be verifiable by on-path devices; see\
    \ [RFC8558].\n   Indeed, any two endpoints with a secret channel between them\
    \ (in this\n   case, the encrypted protocol itself) may collude to change the\n\
    \   semantics and information content of these signals.  This is an\n   unavoidable\
    \ consequence of the separation of the wire image from the\n   protocol's operation\
    \ afforded by confidentiality protection of the\n   protocol's headers.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document explores the information exposed\
    \ by the wire image that\n   may be relevant to end-to-end communication privacy\
    \ and security.\n   When designing the wire image of a network protocol, care\
    \ must be\n   taken to expose only that information to the network deemed necessary\n\
    \   in the protocol's design, and careful design is necessary to reduce\n   the\
    \ risk that information not explicitly included in the wire image\n   is derivable\
    \ from its observation.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [QUIC]     Iyengar, J. and M. Thomson, \"QUIC:\
    \ A UDP-Based Multiplexed\n              and Secure Transport\", Work in Progress,\
    \ draft-ietf-quic-\n              transport-19, March 2019.\n   [QUIC-INVARIANTS]\n\
    \              Thomson, M., \"Version-Independent Properties of QUIC\",\n    \
    \          Work in Progress, draft-ietf-quic-invariants-04, April\n          \
    \    2019.\n   [RFC793]  Postel, J., \"Transmission Control Protocol\", STD 7,\n\
    \              RFC 793, DOI 10.17487/RFC0793, September 1981,\n              <https://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n   \
    \           of Explicit Congestion Notification (ECN) to IP\",\n             \
    \ RFC 3168, DOI 10.17487/RFC3168, September 2001,\n              <https://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC7323]  Borman, D., Braden, B., Jacobson, V., and R.\n              Scheffenegger,\
    \ Ed., \"TCP Extensions for High Performance\",\n              RFC 7323, DOI 10.17487/RFC7323,\
    \ September 2014,\n              <https://www.rfc-editor.org/info/rfc7323>.\n\
    \   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n \
    \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n  \
    \            <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8558]  Hardie,\
    \ T., Ed., \"Transport Protocol Path Signals\",\n              RFC 8558, DOI 10.17487/RFC8558,\
    \ April 2019,\n              <https://www.rfc-editor.org/info/rfc8558>.\n   [USE-IT]\
    \   Thomson, M., \"Long-term Viability of Protocol Extension\n              Mechanisms\"\
    , Work in Progress, draft-thomson-use-it-or-\n              lose-it-03, January\
    \ 2019.\n"
- title: IAB Members at the Time of Approval
  contents:
  - "IAB Members at the Time of Approval\n      Jari Arkko\n      Alissa Cooper\n\
    \      Ted Hardie\n      Christian Huitema\n      Gabriel Montenegro\n      Erik\
    \ Nordmark\n      Mark Nottingham\n      Melinda Shore\n      Robert Sparks\n\
    \      Jeff Tantsura\n      Martin Thomson\n      Brian Trammell\n      Suzanne\
    \ Woolf\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Martin Thomson, Stephen Farrell, Thomas Fossati,\
    \ Ted\n   Hardie, Mark Nottingham, Tommy Pauly, and the membership of the IAB\n\
    \   Stack Evolution Program for text, feedback, and discussions that have\n  \
    \ improved this document.\n   This work is partially supported by the European\
    \ Commission under\n   Horizon 2020 grant agreement No. 688421, Measurement and\
    \ Architecture\n   for a Middleboxed Internet (MAMI), and by the Swiss State Secretariat\n\
    \   for Education, Research, and Innovation under contract No. 15.0268.\n   This\
    \ support does not imply endorsement.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Trammell\n   ETH Zurich\n   Gloriastrasse 35\n \
    \  8092 Zurich\n   Switzerland\n   Email: ietf@trammell.ch\n   Mirja Kuehlewind\n\
    \   ETH Zurich\n   Gloriastrasse 35\n   8092 Zurich\n   Switzerland\n   Email:\
    \ ietf@kuehlewind.net\n"
