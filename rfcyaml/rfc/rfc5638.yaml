- title: __initial_text__
  contents:
  - '      Simple SIP Usage Scenario for Applications in the Endpoints

    '
- title: Abstract
  contents:
  - "Abstract\n   For Internet-centric usage, the number of SIP-required standards\
    \ for\n   presence and IM and audio/video communications can be drastically\n\
    \   smaller than what has been published by using only the rendezvous and\n  \
    \ session-initiation capabilities of SIP.  The simplification is\n   achieved\
    \ by avoiding the emulation of telephony and its model of the\n   intelligent\
    \ network.  'Simple SIP' relies on powerful computing\n   endpoints.  Simple SIP\
    \ desktop applications can be combined with rich\n   Internet applications (RIAs).\
    \  Significant telephony features may\n   also be implemented in the endpoints.\n\
    \   This approach for SIP reduces the number of SIP standards with which\n   to\
    \ comply -- from roughly 100 currently, and still growing, to about\n   11.\n\
    \   References for NAT traversal and for security are also provided.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. The Endpoint in the SIP and Web Architectures ...................5\n  \
    \    2.1. The Telephony Gateway as a SIP Endpoint ....................6\n   3.\
    \ Applicability for Simple SIP in the Endpoints ...................7\n      3.1.\
    \ What Simple SIP Can Accomplish .............................7\n      3.2. Baseline\
    \ for Simple SIP ....................................7\n      3.3. What Simple\
    \ SIP May or May Not Accomplish ..................8\n      3.4. What Is Out of\
    \ Scope for Simple SIP ........................8\n      3.5. Borderline Cases\
    \ ...........................................9\n   4. Mandatory SIP References\
    \ for Internet-Centric Usage .............9\n      4.1. RFC 3261: \"SIP: Session\
    \ Initiation Protocol\" ..............10\n      4.2. RFC 4566: \"SDP: Session\
    \ Description Protocol\" .............10\n      4.3. RFC 3264: \"An Offer/Answer\
    \ Model with Session\n           Description Protocol (SDP)\" ...............................10\n\
    \      4.4. RFC 3840: \"Indicating User Agent Capabilities in\n           the\
    \ Session Initiation Protocol (SIP)\" ....................10\n      4.5. RFC 3263:\
    \ \"Session Initiation Protocol (SIP):\n           Locating SIP Servers\" .....................................11\n\
    \      4.6. RFC 3265: \"Session Initiation Protocol\n           (SIP)-Specific\
    \ Event Notification\" ........................11\n      4.7. RFC 3856: \"A Presence\
    \ Event Package for the\n           Session Initiation Protocol (SIP)\" ........................11\n\
    \      4.8. RFC 3863: \"Presence Information Data Format (PIDF)\" .......11\n\
    \      4.9. RFC 3428: \"Session Initiation Protocol (SIP)\n           Extension\
    \ for Instant Messaging\" ..........................12\n      4.10. RFC 4474:\
    \ \"Enhancements for Authenticated\n            Identity Management in the Session\
    \ Initiation\n            Protocol (SIP)\" ..........................................12\n\
    \      4.11. RFC 3581: \"An Extension to the Session Initiation\n            Protocol\
    \ (SIP) for Symmetric Response Routing\" ...........12\n      4.12. Updates to\
    \ SIP-Related Protocols .........................12\n   5. SIP Applications in\
    \ the Endpoints ..............................12\n   6. NAT Traversal ..................................................14\n\
    \   7. Security Considerations ........................................14\n  \
    \ 8. Acknowledgements ...............................................15\n   9.\
    \ References .....................................................16\n      9.1.\
    \ Normative References ......................................16\n      9.2. Informative\
    \ References ....................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) has become the global\
    \ standard\n   for real-time multimedia communications over the Internet and in\n\
    \   private IP networks, due to its adoption by service providers and in\n   enterprise\
    \ networks alike.  The cost of this success has been a\n   continuing increase\
    \ in complexity to accommodate the various\n   requirements for such networks.\
    \  At the same time, the World Wide Web\n   has become the platform for a boundless\
    \ variety of rich Internet\n   applications (RIAs), both in the browser and on\
    \ the desktop.  For SIP\n   to be useful for RIAs, requirements for legacy voice-service\n\
    \   providers that add unnecessary complexity may be avoided by\n   delegating\
    \ the interworking to telephony gateway endpoints.  This\n   usage scenario for\
    \ SIP requires following the end-to-end principle of\n   the Internet architecture\
    \ at the application level or, in other\n   words, placing SIP applications in\
    \ the endpoints.\n   There are several reasons, from the Web service's perspective,\
    \ to\n   place most or all SIP applications in the endpoints and just use the\n\
    \   client-server (CS) or peer-to-peer (P2P) rendezvous function for SIP:\n  \
    \ 1. Value proposition: SIP applications in the endpoints can be easily\n    \
    \  mixed with RIAs and thus enable service providers to offer new\n      services\
    \ in a scalable and flexible manner.  Mixing SIP\n      applications with RIAs\
    \ also significantly enhances the value of\n      SIP applications.  Rich Internet\
    \ applications support unrestricted\n      user choice as an alternative that\
    \ is beyond what is traditionally\n      prepackaged as network-based communication\
    \ service plans.\n   2. Eliminating the problems associated with distributed SIP\n\
    \      applications in various feature servers across the network allows\n   \
    \   us to greatly simplify SIP.  There is also the Internet end-to-end\n     \
    \ principle, which argues that network intermediaries cannot\n      completely\
    \ understand the applications and their state in the\n      endpoints.\n   'Simple\
    \ SIP' in this document refers the SIP functions necessary to\n   support only\
    \ the rendezvous and session-setup functions of SIP,\n   voice, video, basic presence,\
    \ instant messaging, and also security.\n   Simple SIP is focused on providing\
    \ a basic multimedia, real-time\n   communications \"call\".  This includes presence,\
    \ instant messaging,\n   voice, and video for point-to-point and various conference\n\
    \   applications.  One or a very small number of additional servers may\n   also\
    \ be provided; for example, a voice-mail server may be provided as\n   an auxiliary\
    \ to make a simple one-to-one call to voice mail if the\n   callee does not answer\
    \ or to check voice mail.\n   Once the applications in the endpoints have established\
    \ basic\n   communications, it is up to them to support available features\n \
    \  selected by users.  This paper is targeted to such scenarios.  In\n   telephony,\
    \ most of the value to users and service providers alike is\n   added by signaling.\
    \  By contrast, on the Web, RIAs add most of the\n   value.  The integrated use\
    \ of SIP and RIAs in the endpoints can\n   combine the best of both.\n   This\
    \ approach limits the number of SIP standards to roughly 11 that\n   are listed\
    \ here as the core for simple SIP.  At the time of this\n   writing, the Real-Time\
    \ Applications and Infrastructure (RAI) area of\n   the IETF is focused on a dedicated\
    \ working group for the core SIP\n   protocol, separate from various SIP applications.\
    \  We anticipate this\n   emerging work will also be the core of what is termed\
    \ here as simple\n   SIP and will actually further reduce the number of references\
    \ that\n   reflect the present core SIP standards.\n   This memo aims to shield\
    \ Web application developers from the need to\n   know or understand more than\
    \ the core SIP protocol.  The total number\n   of references has been kept to\
    \ a minimum and includes other related\n   topics, such as examples for providing\
    \ telephony services in the\n   endpoints, NAT traversal, and security.  The referenced\
    \ papers are,\n   however, entry points to these knowledge resources.  Readers\n\
    \   interested in a more detailed list of SIP topics, especially\n   telephony,\
    \ can follow up the short list here with the extensive list\n   in \"A Hitchhikers'\
    \ Guide to SIP\", RFC 5411 [12].  The guide has over\n   140 references for understanding\
    \ most, but not all, of the published\n   features of SIP in the IETF and elsewhere.\
    \  There is also a Web site\n   that automatically tracks the number of SIP-related\
    \ RFCs [13].  Other\n   standards and commercial organizations have greatly enlarged\
    \ the\n   published features of SIP as well.  We could not actually provide a\n\
    \   complete count on everything that has been published as some form of\n   SIP-standard\
    \ document.\n   NAT traversal is also a basic requirement for simple SIP.  However,\n\
    \   given the potential option of using the Host Identity Protocol (HIP)\n   in\
    \ SIP-enabled endpoints, as shown in Section 4, simple SIP may not\n   require\
    \ any standards other than those mentioned here.  The\n   alternative to HIP is\
    \ to use SIP-specific protocols for NAT\n   traversal, such as STUN (Simple Traversal\
    \ of the UDP Protocol through\n   NAT), TURN (Traversal Using Relay NAT), and\
    \ ICE (Interactive\n   Connectivity Establishment), as discussed in Section 4.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\n \
    \  NOT\",\"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"\
    \ in\n   this document are to be interpreted as described in RFC 2119.\n"
- title: 2.  The Endpoint in the SIP and Web Architectures
  contents:
  - "2.  The Endpoint in the SIP and Web Architectures\n   SIP has been defined in\
    \ RFC 3261 for rendezvous and session\n   initiation.  The usual example is the\
    \ trapezoid model for\n   communications between two endpoints placed in two different\
    \ SIP\n   service-provider domains.  SIP is also flexible, since SIP\n   applications\
    \ beyond the rendezvous function can reside either in the\n   SIP networks in\
    \ additional feature and media servers or in the\n   endpoints.  SIP endpoints\
    \ are our focus in this memo.\n   Since SIP has been invented, with much initial\
    \ similarity between SIP\n   and HTTP, the Web has evolved from a global access\
    \ mechanism to\n   static documents to a universal platform with rich interaction\n\
    \   between the user and client.  In most cases, the client is the\n   browser,\
    \ though recently dedicated Web desktop clients have emerged\n   as well.\n  \
    \ The Web provides access to applications as well as to documents.  It\n   is\
    \ beyond the scope of this memo to describe the application and\n   network architectures\
    \ of the Web.  We will note, however, some of the\n   new application and communication\
    \ forms that have emerged on the Web\n   as a result of a Darwinian evolution\
    \ [30] rather than as a result of\n   being defined in standards organizations.\
    \  They are referred to as\n   Rich Internet Applications.\n   Examples of RIAs\
    \ include social networks, blogs, wikis, web-based\n   office and collaboration\
    \ tools, as well as task-related apps for\n   creating to-do lists, tracking time,\
    \ combining geographic information\n   with various applications (such as tracking\
    \ exercise paths and\n   recording the metrics), tracking airline flights, combining\
    \ live\n   video from events with results and comments, etc.\n   More information\
    \ can be found at [31] and in the vast collection of\n   books about RIAs.\n \
    \  RIAs have positioned the browser (and associated Web desktop\n   applications)\
    \ as the dominant platform for a large variety of\n   applications.  They are\
    \ universal application platforms, independent\n   of network location, operating\
    \ system, processor, or display size.\n   Behind the better-known Web applications\
    \ are a wealth of new\n   technologies that can enhance SIP-based communications,\
    \ for example,\n   the aggregation of data at runtime from several resources on\
    \ the\n   Internet.  A variety of RIA components, such as found on interactive\n\
    \   Web pages, can significantly improve the user experience of SIP-based\n  \
    \ communications.  This is in contrast to the fixed interfaces found in\n   most\
    \ SIP user agents (UA), such as phones and desktop clients.\n   The Web network\
    \ and application architecture is very different from\n   SIP service-provider\
    \ networks at present, but the one point where\n   they both meet is the end-user\
    \ device of any shape: fixed or mobile.\n   The desire of SIP service providers\
    \ to support new services in a\n   scalable and flexible manner is incidentally\
    \ easier to implement by\n   the loose service coupling on the Web, as it is possible\
    \ to\n   characterize a service, or actually a mix of several service\n   components\
    \ (such as in a mash-up), with a URI.  This is in contrast\n   to network services\
    \ registration being done by a central registrar.\n   The Web architecture is\
    \ also better suited for users to select and\n   configure their applications\
    \ and interaction mode with the client.\n   The boundless variety of configurations\
    \ of services and client\n   settings on the Web is in contrast with the prepackaged\
    \ services and\n   fixed user-agent configurations in present SIP services.\n\
    \   Last but not least, program execution locally on the client is faster\n  \
    \ if the interaction with servers across the network is minimized.\n   The motivation\
    \ behind this memo is the potential of integrating SIP-\n   based multimedia communications\
    \ with access to RIAs on the Web.  To\n   mention a few scenarios: adding SIP-\
    \ and RTP-based real-time\n   communications to RIAs, integrating (from a user\
    \ perspective) the SIP\n   location service (not to be confused with geographic\
    \ location\n   services) with other desktop- and network-based geographic location\n\
    \   services, using social networks as part of the contact list, etc.\n"
- title: 2.1.  The Telephony Gateway as a SIP Endpoint
  contents:
  - "2.1.  The Telephony Gateway as a SIP Endpoint\n   In order to accomplish interoperability\
    \ with the installed base of\n   telephone networks of various kinds, integrating\
    \ SIP communications\n   into RIAs precludes, in our opinion, carrying legacy\
    \ telephony\n   features over to the Web.  Interoperability between the Internet\
    \ and\n   telephone networks is best left to gateways that look to the Web as\n\
    \   special endpoints serving large numbers of users.  Plain one-to-one\n   phone\
    \ calls are already supported by Internet-to-telephony gateways.\n   If added,\
    \ PSTN (Public Switched Telephone Network) or ISDN telephony\n   features must\
    \ be exposed to Web users; visual Web display and\n   interaction with the user\
    \ is preferable to carrying the extremely\n   complex SIP equivalents over into\
    \ the Internet.  On the Internet side\n   of telephony gateways, simple SIP is\
    \ all that needs to be deployed,\n   in our opinion.  Additional telephony features\
    \ can be just another\n   RIA hosted in the gateway.  The market is the best indicator\
    \ to show\n   if such an effort is worthwhile to be productized.\n   Overloading\
    \ simple SIP with telephony features is a non-objective, as\n   detailed in Section\
    \ 3.\n"
- title: 3.  Applicability for Simple SIP in the Endpoints
  contents:
  - "3.  Applicability for Simple SIP in the Endpoints\n   This section aims to clarify\
    \ the scope of applicability by\n   considering what can be done better in the\
    \ endpoints, what simple SIP\n   for user agents can and cannot accomplish, and\
    \ what is out of scope.\n   We will use emergency calls as an example to illustrate\
    \ these points\n   on applicability.  Emergency calls are also a good example\
    \ for\n   considering if and when SIP-plus-RIA applications could be used as\n\
    \   emergency telephony enhancements or even replacements.\n"
- title: 3.1.  What Simple SIP Can Accomplish
  contents:
  - "3.1.  What Simple SIP Can Accomplish\n   The main goal for SIP applications on\
    \ the desktop or in the browser\n   is to support the integration of SIP- and\
    \ RTP-based real-time\n   communications with RIAs.  This assumes powerful endpoints,\
    \ such as\n   PC/laptop, smart mobile phones, or various dedicated devices.\n\
    \   Example of better functionality: emergency calls not limited to a\n   Public\
    \ Safety Access Point (PSAP), but extended to a medical service\n   taking care\
    \ of patients or elderly people.\n   In this example, besides alerting the right\
    \ medical provider of the\n   emergency, vital body-sign data and video can also\
    \ be transmitted.\n   In the opposite direction, the caller may get visual and\
    \ audio\n   information and instructions for instant self-help.  In this\n   scenario,\
    \ there is no need to invoke a PSAP service.  A dedicated\n   device for such\
    \ scenarios may actually have an emergency medical call\n   button, though for\
    \ telephone calls to a PSAP this is not recommended\n   [14].  Powerful endpoints\
    \ may also have various means to determine\n   the geographic location of the\
    \ caller and transmit it to the\n   emergency care provider.  In this and other\
    \ examples, SIP voice may\n   be a component of several other communications means,\
    \ but not always\n   the central one; some emergency communications and data transfer\
    \ may\n   actually be performed without voice, such as instances when the\n  \
    \ \"caller\" cannot speak for some reason.\n"
- title: 3.2.  Baseline for Simple SIP
  contents:
  - "3.2.  Baseline for Simple SIP\n   The focus of the memo is to define the baseline\
    \ for simple SIP:  the\n   establishment of a one-to-one real-time multimedia\
    \ communication\n   session for presence, IM, voice, and video.  Adequate security\
    \ must\n   also be provided; authentication and encryption for the media and for\n\
    \   parts of the signaling should be done in a manner consistent with the\n  \
    \ routing of SIP messages.\n"
- title: 3.3.  What Simple SIP May or May Not Accomplish
  contents:
  - "3.3.  What Simple SIP May or May Not Accomplish\n   There are border cases where\
    \ simple SIP may or may not accomplish\n   some necessary legacy function.  Example:\
    \ an emergency call to a PSAP\n   over the Internet may be supported using the\
    \ SOS URN [15] and the\n   LoST protocol [16] to determine where to route the\
    \ call.  If,\n   however, emergency calls must be routed over the PSTN to a country-\n\
    \   specific telephone number, the assistance of a SIP proxy and also of\n   a\
    \ SIP-PSTN gateway is required to recognize and route the emergency\n   call.\
    \  Depending on the local jurisdiction, emergency calls from a\n   SIP UA may\
    \ require other features that are beyond the scope of this\n   memo.\n"
- title: 3.4.  What Is Out of Scope for Simple SIP
  contents:
  - "3.4.  What Is Out of Scope for Simple SIP\n   The simple usage of SIP is applicable\
    \ when avoiding the traditional\n   voice-provider approaches for charging (or\
    \ monetizing) that aim to\n   provide, manage, and charge for what is referred\
    \ to as services (not\n   applications); some examples of such approaches to charging\
    \ are\n   listed here.  Simple SIP means to avoid placing any functions in the\n\
    \   network other than the rendezvous function of SIP.  This includes\n   avoiding:\n\
    \   o  support of legacy telephony functions, such as emulating public-\n    \
    \  telephone-switch services and voice-only private branch exchanges.\n   o  SIP\
    \ network architectures designed to support telephony-type\n      network models.\
    \  Examples include long chains of SIP proxies and\n      feature servers (more\
    \ than the two SIP servers shown in RFC 3261)\n      that may be encountered inside\
    \ and between closed Voice over IP\n      (VoIP) networks and in-transit VoIP\
    \ networks in between.  Long\n      chains of intermediaries of any type not only\
    \ add complexity, they\n      pose a security risk that increases with the number\
    \ of SIP network\n      elements.  Complex server-based networks also make it\
    \ more\n      difficult to introduce new services.  A special problem in SIP\n\
    \      server chains is forking, which leads to the well-known problems\n    \
    \  of concurrency in computing; the so-called race conditions in\n      telephony.\
    \  This is amplified by redesigning the whole network\n      every time there\
    \ is a new SIP routing requirement.\n   o  support for legacy telephony models,\
    \ such as identifying end-user\n      devices for the purpose of differentiated\
    \ charging by type of\n      service or for charging for roaming between networks.\n\
    \   o  policies and the associated policy servers and network elements\n     \
    \ for Quality of Service (QoS) to enforce service-rate-specific\n      policies\
    \ for real-time communications.\n   o  design considerations for SIP for compatibility\
    \ with legacy\n      telephony networks, traditional telephony services, and various\n\
    \      telephone numbering plans.  This pushes the responsibility of\n      mapping\
    \ the URI to telephone numbers to edge networks where the\n      IP-PSTN gateway\
    \ functions are performed.  The handling of\n      telephony-specific functions,\
    \ such as early media, are also pushed\n      to edge gateway networks.  Other\
    \ design considerations for\n      interworking with the PSTN and 'looking like\
    \ the PSTN' are also\n      avoided.\n   This list is not exhaustive, but conveys\
    \ the concept of what to avoid\n   when using SIP as a simpler protocol to understand\
    \ and to implement.\n"
- title: 3.5.  Borderline Cases
  contents:
  - "3.5.  Borderline Cases\n   There are also some interesting borderline cases for\
    \ what to avoid,\n   such as Provisional Response Acknowledgements (PRACKs), specified\
    \ in\n   RFC 3262.  PRACK is targeted for multi-hop SIP server networks and\n\
    \   PSTN interworking, especially to assure reliable early media.  PRACK\n   can\
    \ be delegated, albeit with some limitations to the SIP-PSTN\n   gateway.  PRACK\
    \ does little to improve the user experience and has no\n   relevance on true\
    \ broadband networks with minimal SIP hop counts.\n   Using PRACK may therefore\
    \ be a decision best left to designers.\n   Another interesting example of a borderline\
    \ case are the issues with\n   SIP's Non-Invite transactions as discussed in RFC\
    \ 4320 [17].  Long\n   chains of SIP intermediaries complicate the handling of\
    \ provisional\n   responses and may create several problems, such as storms of\
    \ late\n   responses from forked SIP forwarding paths.  We mentioned that long\n\
    \   chains of SIP intermediaries are out of scope for simple SIP, but\n   since\
    \ designers may encounter various scenarios, even those they\n   don't like, the\
    \ decision to conform the user agent (UA) to RFC 4320\n   is best left to them.\n\
    \   The list of borderline cases is also not exhaustive and the above are\n  \
    \ only examples.  So where is the borderline? We believe that SIP usage\n   on\
    \ the Internet, without any intermediaries designed to support\n   closed VoIP\
    \ networks, eliminates the borderline cases.  Enterprise\n   SIP networks are\
    \ also most useful when designed to work with the\n   Internet model in mind,\
    \ by giving enterprise users the benefit of\n   SIP-enhanced Web applications\
    \ for productivity.  Handling of SIP in\n   enterprise firewalls is out of the\
    \ scope of this memo.\n"
- title: 4.  Mandatory SIP References for Internet-Centric Usage
  contents:
  - "4.  Mandatory SIP References for Internet-Centric Usage\n   Here is the minimal\
    \ set of mandatory references to support the\n   Internet-centric approach to\
    \ SIP, outlined above.  The minimal set of\n   references defines simple SIP.\n\
    \   The proposed change process [29] for SIP in the IETF RAI area will\n   define\
    \ the updated SIP core specification and thus reduce even more\n   the required\
    \ SIP standards for what is referred to here as simple\n   SIP.\n"
- title: '4.1.  RFC 3261: "SIP: Session Initiation Protocol"'
  contents:
  - "4.1.  RFC 3261: \"SIP: Session Initiation Protocol\"\n   RFC 3261 [1] is the\
    \ core specification for SIP.  The trapezoid model\n   for SIP, found in RFC 3261,\
    \ is only an example and a use case\n   applicable to two service providers featuring\
    \ an outgoing SIP proxy\n   and an incoming SIP proxy in each domain respectively.\
    \  However, SIP\n   can also work in peer-to-peer (P2P) communications without\
    \ SIP\n   servers.\n"
- title: '4.2.  RFC 4566: "SDP: Session Description Protocol"'
  contents:
  - "4.2.  RFC 4566: \"SDP: Session Description Protocol\"\n   SDP [2] is the standard\
    \ format for the representation of media\n   parameters, transport addresses,\
    \ and other session data irrespective\n   of the protocol used to transport the\
    \ SDP data.  SIP is one of the\n   protocols used to transport SDP data, to enable\
    \ the setting up of\n   multimedia communication sessions.  Other Internet application\n\
    \   protocols use SDP as well.\n"
- title: '4.3.  RFC 3264: "An Offer/Answer Model with Session Description Protocol'
  contents:
  - "4.3.  RFC 3264: \"An Offer/Answer Model with Session Description Protocol\n \
    \     (SDP)\"\n   Though SDP has the capability to describe SIP sessions, how\
    \ to arrive\n   at a common description by two SIP endpoints requires a negotiation\n\
    \   procedure to agree on common media codecs, along with IP addresses\n   and\
    \ ports where the media can be received.  This negotiation\n   procedure is specified\
    \ in RFC 3264 [3].  As will be seen in Section\n   6, this negotiation is usually\
    \ considerably complicated due to the\n   existence of NAT between the SIP endpoints.\n"
- title: '4.4.  RFC 3840: "Indicating User Agent Capabilities in the Session'
  contents:
  - "4.4.  RFC 3840: \"Indicating User Agent Capabilities in the Session\n      Initiation\
    \ Protocol (SIP)\"\n   A SIP UA can convey its capability in the Contact header\
    \ field,\n   indicating if it can support presence, IM, audio, or video, and if\n\
    \   the device is fixed, mobile, or other, such as the endpoint being an\n   automaton\
    \ (voice mail for example).  Which SIP methods are supported\n   may also be indicated\
    \ as specified in RFC 3840 [4].  SIP registrars\n   (SIP servers or the P2P SIP\
    \ overlay) can be informed of endpoint\n   capabilities.  Missing capabilities\
    \ can be displayed for the user by,\n   for example, grayed out or missing icons.\n"
- title: '4.5.  RFC 3263: "Session Initiation Protocol (SIP): Locating SIP'
  contents:
  - "4.5.  RFC 3263: \"Session Initiation Protocol (SIP): Locating SIP\n      Servers\"\
    \n   RFC 3263 [5] adds key clarifications to the base SIP specification in\n \
    \  RFC 3261 by specifying how a SIP user agent (UA) or SIP server can\n   determine\
    \ with DNS queries not only the IP addresses of the target\n   SIP servers, but\
    \ also which SIP servers can support UDP or TCP\n   transport, as required.  TCP\
    \ may be required to support secure SIP\n   (SIPS) using Transport Layer Security\
    \ (TLS) transport or when SIP\n   messages are too large to fit into UDP packets\
    \ without fragmentation.\n   Successive DNS queries yield finer-grain location\
    \ by providing NAPTR,\n   SRV, and A type records.  Note that finding a SIP server\
    \ requires\n   several successive DNS queries to access these records.\n   Locating\
    \ SIP servers is also required for P2P SIP when a peer node\n   wishes to communicate\
    \ with a SIP UA outside its own P2P SIP overlay\n   network.\n"
- title: '4.6.  RFC 3265: "Session Initiation Protocol (SIP)-Specific Event'
  contents:
  - "4.6.  RFC 3265: \"Session Initiation Protocol (SIP)-Specific Event\n      Notification\"\
    \n   RFC 3265 [6] provides an extensible framework by which SIP nodes can\n  \
    \ request notification from remote nodes indicating that certain events\n   have\
    \ occurred.  The most prominent event notifications are those used\n   for presence,\
    \ though SIP events are used for many other SIP services,\n   some of which can\
    \ be useful for simple SIP.\n"
- title: '4.7.  RFC 3856: "A Presence Event Package for the Session Initiation'
  contents:
  - "4.7.  RFC 3856: \"A Presence Event Package for the Session Initiation\n     \
    \ Protocol (SIP)\"\n   RFC 3856 [7] defines the usage of SIP as a presence protocol\
    \ and\n   makes use of the SUBSCRIBE and NOTIFY methods for presence events.\n\
    \   SIP location services already contain presence information in the\n   form\
    \ of registrations and, as such, can be reused to establish\n   connectivity for\
    \ subscriptions and notifications.  This can enable\n   either endpoints or servers\
    \ to support rich applications based on\n   presence.\n"
- title: '4.8.  RFC 3863: "Presence Information Data Format (PIDF)"'
  contents:
  - "4.8.  RFC 3863: \"Presence Information Data Format (PIDF)\"\n   RFC 3863 [8]\
    \ defines the Presence Information Data Format (PIDF) and\n   the media type \"\
    application/pidf+xml\" to represent the XML MIME\n   entity for PIDF.  PIDF is\
    \ used by SIP to carry presence information.\n"
- title: '4.9.  RFC 3428: "Session Initiation Protocol (SIP) Extension for Instant'
  contents:
  - "4.9.  RFC 3428: \"Session Initiation Protocol (SIP) Extension for Instant\n \
    \     Messaging\"\n   The SIP extension for IM in RFC 3428 [9] consists in the\
    \ MESSAGE\n   method (defined in RFC 3428) only for the pager model of IM, based\
    \ on\n   the assumption that an IM conversation state exists in the client\n \
    \  interface in the endpoints or in the mind of the users.\n"
- title: '4.10.  RFC 4474: "Enhancements for Authenticated Identity Management in'
  contents:
  - "4.10.  RFC 4474: \"Enhancements for Authenticated Identity Management in\n  \
    \     the Session Initiation Protocol (SIP)\"\n   RFC 4474 [10] defines (1) an\
    \ identity header and (2) an identity info\n   header for SIP requests that carry,\
    \ respectively, the signature of\n   the issuer over parts of the SIP request\
    \ and the signed identity\n   information.  The signature includes the FROM header\
    \ and the identity\n   of the sender.  The associated identity info header identifies\
    \ the\n   sender of the SIP request, such as INVITE.  The issuer of the\n   signature\
    \ can present their certificate as well.  It is assumed the\n   issuer may be\
    \ the domain owner.  Strong authentication is thus\n   provided for SIP requests.\
    \  Authentication for SIP responses is not\n   defined in this document.\n"
- title: '4.11.  RFC 3581: "An Extension to the Session Initiation Protocol (SIP)'
  contents:
  - "4.11.  RFC 3581: \"An Extension to the Session Initiation Protocol (SIP)\n  \
    \     for Symmetric Response Routing\"\n   RFC 3581 [11] specifies an extension\
    \ to SIP called \"rport\" so that\n   responses are sent back to the source IP\
    \ address and port from which\n   the request originated.  This correction to\
    \ RFC 3261 is helpful for\n   NAT traversal, debugging, and support of multi-homed\
    \ hosts.\n"
- title: 4.12.  Updates to SIP-Related Protocols
  contents:
  - "4.12.  Updates to SIP-Related Protocols\n   Several of the above are being updated\
    \ to benefit from the experience\n   of large deployments and frequent interoperability\
    \ testing.  We\n   recommend readers to constantly check for revisions.  One update\n\
    \   example is \"Correct Transaction Handling for 200 Responses to the\n   Session\
    \ Initiation Protocol INVITE Requests\" [18].  This is an update\n   to RFC 3261;\
    \ the added security risk for misbehaving SIP UAs is\n   handled in the forwarding\
    \ SIP proxy.\n"
- title: 5.  SIP Applications in the Endpoints
  contents:
  - "5.  SIP Applications in the Endpoints\n   Although the present adoption of SIP\
    \ is mainly due to telephony\n   applications, its roots are in the Web and it\
    \ has initial similarity\n   to HTTP.  As a result, SIP may play other roles in\
    \ adequately\n   powerful endpoints (their number keeps increasing with Moore's\
    \ law).\n   SIP-based multimedia communications may be linked with various other\n\
    \   applications on the Web.  Either some non-SIP application or the\n   communication\
    \ feature may be perceived as the primary usage.  An\n   example is mixing SIP-based\
    \ real-time communications with some Web\n   content of high interest to the user.\n\
    \   Examples:\n   1. In a conversation between a consumer and the contact center,\
    \ a Web\n      conference can be invoked to present to the user buying options\
    \ or\n      help information.  This information can make use of mashups to\n \
    \     combine real-time data from various sources on the Web.\n   2. In a social\
    \ network, multimedia conversations combined with Web\n      mashups can be invoked,\
    \ thus strengthening the bond between its\n      members.\n   3. Conversations\
    \ can be invoked while watching some events on the Web\n      in real time.  However,\
    \ the main beneficiary in this case may be\n      the Web site, since the conversation\
    \ can prolong the time for\n      users watching that Web site.\n   This shows\
    \ the value of combining RIAs with SIP-based communications.\n   It is a matter\
    \ for the end user's judgment whether the Web content or\n   the associated communication\
    \ capability is more important, or if a\n   mix of both is most attractive.\n\
    \   Example: a Web-based enterprise directory where employees can find a\n   wealth\
    \ of data.  Adding SIP multimedia communications to the\n   enterprise directory\
    \ to call someone (if online and not too busy)\n   enhances its usefulness, but\
    \ is not critical to the directory.\n   SIP applications in the endpoints can,\
    \ however, accomplish most\n   telephony functions as well.  This has been amply\
    \ documented in SIP-\n   related work in the IETF, such as:\n   o  \"A Call Control\
    \ and Multi-party usage framework for SIP\" [19]\n      presents a large assortment\
    \ of telephony applications where the\n      call control resides in the participating\
    \ endpoints that use the\n      peer-to-peer feature invocation model.  The peer-to-peer\
    \ design\n      and its principles are based on multiparty call control.\n   o\
    \  \"Session Initiation Protocol Service Examples\" [20] contains a\n      collection\
    \ of SIP call flows for traditional telephony, many of\n      which require no\
    \ server support for the respective features.  The\n      SIP service examples\
    \ for telephony are extremely useful since they\n      illustrate in detail the\
    \ concepts and applications supported by\n      the core simple SIP references.\n\
    \   In conclusion, SIP applications in the endpoints can support both a\n   mix\
    \ of real-time communications with new rich Internet applications\n   and traditional\
    \ telephony features as well.\n"
- title: 6.  NAT Traversal
  contents:
  - "6.  NAT Traversal\n   SIP devices behind one or more NATs are, at present, the\
    \ rule rather\n   than the exception.\n   \"Best Current Practices for NAT Traversal\
    \ for SIP\" [22]\n   comprehensively summarizes the use of STUN, TURN, and ICE,\
    \ and\n   provides a definitive set of 'Best Common Practices' to demonstrate\n\
    \   the traversal of SIP and its associated RTP media packets through NAT\n  \
    \ devices.\n   The use of ICE has been developed mainly for SIP.  Other proposals,\n\
    \   such as NICE (generic for non-SIP) and \"D-ICE\" for Real Time\n   Streaming\
    \ Protocol (RTSP) streaming media, have also been proposed.\n   Internet games\
    \ have different NAT traversal techniques of their own.\n   This list is not exhaustive\
    \ and such approaches are based on\n   different NAT traversal protocols for each\
    \ application protocol,\n   separately.\n   A general, non-application-protocol-specific\
    \ approach for NAT\n   traversal is therefore highly desirable.\n   One approach\
    \ for NAT traversal that is generic and applicable for all\n   application protocols\
    \ is to deploy the Host Identity Protocol (HIP)\n   and solve NAT traversal only\
    \ once, at the HIP level.  HIP has many\n   other useful features (such as support\
    \ for the IPv6 transition in\n   endpoints, mobility, and multihoming) that are\
    \ beyond the scope of\n   this paper.  \"Basic HIP Extensions for Traversal of\
    \ Network Address\n   Translators\" [23] provides an extensive coverage of the\
    \ use of HIP\n   for NAT traversal.\n   Using HIP-enabled endpoints can provide\
    \ the functions required for\n   NAT traversal [24] for all applications, for\
    \ both IPv4 and IPv6.  HIP\n   can thus simplify the SIP UA since it takes away\
    \ the burden of NAT\n   traversal from the SIP UA and moves it to the HIP protocol\
    \ module in\n   the endpoint.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   All protocols discussed in this paper have their\
    \ own specific\n   security requirements that MUST be considered.  The special\
    \ security\n   considerations for SIP signaling security and RTP media security\
    \ are\n   discussed here.\n   SIP security has two main parts: transport security\
    \ and identity.\n   o  Transport security for SIP is specified in RFC 3261.  Secure\
    \ SIP\n      has the notation SIPS in the request URI and uses TLS over TCP.\n\
    \      Note that SIP over UDP cannot be secured in this way.  Transport\n    \
    \  security works only hop by hop.  Specifying SIPS requires the user\n      to\
    \ trust all intermediate servers and no end-to-end media\n      encryption is\
    \ assumed.  There is no insurance for misbehaving\n      intermediaries in the\
    \ path.  SIPS is therefore really adequate\n      only in single-hop scenarios.\n\
    \   o  RFC 4474, \"Enhancements for Authenticated Identity Management in\n   \
    \   the Session Initiation Protocol (SIP)\", which is mentioned\n      previously,\
    \ specifies the use of certificates for secure\n      identification of the parties\
    \ involved in SIP signaling requests.\n   o  The Datagram Transport Layer Security\
    \ (DTLS) specified in RFC 4347\n      [25] has wide applicability for other applications\
    \ that require\n      UDP transport.  DTLS has been designed to have maximum commonality\n\
    \      with TLS, yet does not require TCP transport and works over UDP.\n    \
    \  The DTLS-SRTP (Secure Realtime Transport Protocol) Framework [26]\n      can\
    \ support encrypted communications between endpoints using\n      self-signed\
    \ certificates whose fingerprints are exchanged over an\n      integrity-protected\
    \ SIP signaling channel.  The SRTP master secret\n      is derived using the DTLS\
    \ exchange as described in [27].\n   o  ZRTP [28] provides key agreement for SRTP\
    \ for multimedia\n      communication with voice without depending on SIP signaling,\n\
    \      though it can utilize an integrity-protected SIP signaling path\n     \
    \ for authentication.  ZRTP does not require the use of certificates\n      or\
    \ any Public Key Infrastructure (PKI).  ZRTP provides best-effort\n      SRTP\
    \ encryption without any additional SIP extensions.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to thank Cullen Jennings, Ralph\
    \ Droms, and\n   Adrian Farrel for helpful comments in the most recent stage of\
    \ this\n   memo.\n   Special thanks are due to Paul Kyzivat for challenging the\
    \ authors to\n   clarify the role of telephony network gateways and also to Keith\n\
    \   Drage for challenging them to discuss the use of emergency calls\n   using\
    \ simple SIP.\n   Robert Sparks has pointed to some missing references, which\
    \ we have\n   added.\n   The authors would also like to thank Jiri Kuthan, Adrian\
    \ Georgescu,\n   and others for the detailed discussion on the SIPPING WG list.\
    \  As a\n   result, we have added clarification of what simple SIP can do, what\n\
    \   it does not aim to do, and some scenarios in between.  We would also\n   like\
    \ to thank Wilhelm Wimmreuter for the detailed review of the\n   initial draft\
    \ and to Arjun Roychaudhury for the comments regarding\n   the need to clarify\
    \ the difference between network-based services and\n   endpoint applications.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1. Normative References
  contents:
  - "9.1. Normative References\n   [1]   Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M., and E. Schooler,\
    \ \"SIP:\n         Session Initiation Protocol\", RFC 3261, June 2002.\n   [2]\
    \   Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n         Description\
    \ Protocol\", RFC 4566, July 2006.\n   [3]   Rosenberg, J. and H. Schulzrinne,\
    \ \"An Offer/Answer Model with\n         Session Description Protocol (SDP)\"\
    , RFC 3264, June 2002.\n   [4]   Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\
    \ \"Indicating\n         User Agent Capabilities in the Session Initiation Protocol\n\
    \         (SIP)\", RFC 3840, August 2004.\n   [5]   Rosenberg, J. and H. Schulzrinne,\
    \ \"Session Initiation Protocol\n         (SIP): Locating SIP Servers\", RFC 3263,\
    \ June 2002.\n   [6]   Roach, A., \"Session Initiation Protocol (SIP)-Specific\
    \ Event\n         Notification\", RFC 3265, June 2002.\n   [7]   Rosenberg, J.,\
    \ \"A Presence Event Package for the Session\n         Initiation Protocol (SIP)\"\
    , RFC 3856, August 2004.\n   [8]   Sugano, H., Fujimoto, S., Klyne, G., Bateman,\
    \ A., Carr, W., and\n         J. Peterson, \"Presence Information Data Format\
    \ (PIDF)\", RFC\n         3863, August 2004.\n   [9]   Campbell, B., Ed., Rosenberg,\
    \ J., Schulzrinne, H., Huitema, C.,\n         and D. Gurle, \"Session Initiation\
    \ Protocol (SIP) Extension for\n         Instant Messaging\", RFC 3428, December\
    \ 2002.\n   [10]  Peterson, J. and C. Jennings, \"Enhancements for Authenticated\n\
    \         Identity Management in the Session Initiation Protocol (SIP)\",\n  \
    \       RFC 4474, August 2006.\n   [11]  Rosenberg, J. and H. Schulzrinne, \"\
    An Extension to the Session\n         Initiation Protocol (SIP) for Symmetric\
    \ Response Routing\", RFC\n         3581, August 2003.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [12]  Rosenberg, J., \"A Hitchhiker's Guide\
    \ to the Session Initiation\n         Protocol (SIP)\", RFC 5411, February 2009.\n\
    \   [13]  Ohlmeier, N., \"VoIP RFC Watch\", http://rfc3261.net/.\n   [14]  Rosen,\
    \ B. and J. Polk, \"Best Current Practice for\n         Communications Services\
    \ in support of Emergency Calling\", Work\n         in Progress, July 2009.\n\
    \   [15]  Schulzrinne, H., \"A Uniform Resource Name (URN) for Emergency\n   \
    \      and Other Well-Known Services\", RFC 5031, January 2008.\n   [16]  Hardie,\
    \ T., Newton, A., Schulzrinne, H., and H. Tschofenig,\n         \"LoST: A Location-to-Service\
    \ Translation Protocol\", RFC 5222,\n         August 2008.\n   [17]  Sparks, R.,\
    \ \"Actions Addressing Identified Issues with the\n         Session Initiation\
    \ Protocol's (SIP) Non-INVITE Transaction\",\n         RFC 4320, January 2006.\n\
    \   [18]  Sparks, R. and T. Zourzouvillys, \"Correct Transaction Handling\n  \
    \       for 200 Responses to Session Initiation Protocol INVITE\n         Requests\"\
    , Work in Progress, July 2009.\n   [19]  Mahy, R., Sparks, R., Rosenberg, J.,\
    \ Petrie, D., and A.\n         Johnson, \"A Call Control and Multi-party usage\
    \ framework for\n         the Session Initiation Protocol (SIP)\", Work in Progress,\
    \ March\n         2009.\n   [20]  Johnston, A., Ed., Sparks, R., Cunningham, C.,\
    \ Donovan, S., and\n         K. Summers, \"Session Initiation Protocol Service\
    \ Examples\", BCP\n         144, RFC 5359, October 2008.\n   [22]  Boulton, C.,\
    \ Rosenberg, J., Camarillo, G. and F. Audet, \"Best\n         Current Practices\
    \ for NAT Traversal for Client-Server SIP\",\n         Work in Progress, September\
    \ 2008.\n   [23]  Komu, M., Henderson, T., Tschofenig, H., Melen, J. and A.\n\
    \         Keraenen, \"Basic HIP Extensions for Traversal of Network\n        \
    \ Address Translators\", Work in Progress, June 2009.\n   [24]  Moskowitz, R.,\
    \ \"HIP Experimentation using Teredo\", July 2008,\n         http://www.ietf.org/proceedings/08jul/slides/HIPRG-3.pdf.\n\
    \   [25]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n         Security\"\
    , RFC 4347, April 2006.\n   [26]  Fischl, J., Tschofenig, H. and E. Rescorla,\
    \ \"Framework for\n         Establishing an SRTP Security Context using DTLS\"\
    , Work in\n         Progress, March 2009.\n   [27]  McGrew, D. and E. Rescorla,\
    \ \"Datagram Transport Layer Security\n         (DTLS) Extension to Establish\
    \ Keys for Secure Real-time\n         Transport Protocol (SRTP)\", Work in Progress,\
    \ February 2009.\n   [28]  Zimmerman, P., Johnston, A. and J. Callas, \"ZRTP:\
    \ Media Path\n         Key Agreement for Secure RTP\", Work in Progress, March\
    \ 2009\n   [29]  Peterson, J., Jennings, C. and R. Sparks, \"Change Process for\n\
    \         the Session Initiation Protocol (SIP)\", Work in Progress, July\n  \
    \       2009.\n   [30]  Raman, T.V., \"Toward 2 exp(W), Beyond Web 2.0\", Communications\n\
    \         of the ACM, Vol. 52, No.2, p. 52-59, February 2009.\n   [31]  Wikipedia,\
    \ \"Rich Internet application\",\n         http://en.wikipedia.org/wiki/Rich_Internet_Applications.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Henry Sinnreich\n   Adobe Systems, Inc.\n   601 Townsend\
    \ Street,\n   San Francisco, CA 94103, USA\n   EMail: henrys@adobe.com\n   Alan\
    \ Johnston\n   Avaya\n   Saint Louis, MO, USA\n   EMail: alan@sipstation.com\n\
    \   Eunsoo Shim\n   Avaya Labs Research\n   233 Mount Airy Road\n   Basking Ridge,\
    \ NJ 07920 USA\n   EMail: eunsooshim@gmail.com\n   Kundan Singh\n   Columbia University\
    \ Alumni\n   1214 Amsterdam Ave., MC0401\n   New York, NY, USA\n   EMail: kns10@cs.columbia.edu\n"
