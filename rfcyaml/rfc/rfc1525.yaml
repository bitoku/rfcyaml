- title: __initial_text__
  contents:
  - "                   Definitions of Managed Objects for\n                     \
    \    Source Routing Bridges\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" for the standardization state and status\n   of this protocol.\
    \  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction .........................................\
    \    2\n   2. The Network Management Framework .....................    2\n  \
    \ 2.1 Object Definitions ..................................    2\n   3. Overview\
    \ .............................................    2\n   3.1 Structure of MIB\
    \ ....................................    3\n   3.1.1 The dot1dSr Group .................................\
    \    4\n   3.1.2 The dot1dPortPair Group ...........................    4\n  \
    \ 3.2 Relationship to Other MIBs ..........................    5\n   3.2.1 Relationship\
    \ to the Bridge MIB ....................    5\n   3.2.2 Relationship to the 'system'\
    \ group ................    5\n   3.2.3 Relationship to the 'interfaces' group\
    \ ............    5\n   4. Changes from RFC 1286 ................................\
    \    6\n   5. Definitions ..........................................    7\n  \
    \ 5.1 Groups in the SR MIB ................................    7\n   5.2 The dot1dSr\
    \ Group Definitions .......................    7\n   5.3 The dot1dPortPair Group\
    \ Definitions .................   14\n   6. Acknowledgments ......................................\
    \   16\n   7. References ...........................................   16\n  \
    \ 8. Security Considerations ..............................   18\n   9. Authors'\
    \ Addresses ...................................   18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in TCP/IP based internets.\n\
    \   In particular, it defines objects for managing source routing and\n   source\
    \ routing transparent bridges.  These bridges are also required\n   to implement\
    \ relevant groups in the Bridge MIB [6].\n   This MIB supersedes the dot1dSr group\
    \ of objects published in an\n   earlier version of the Bridge MIB, RFC 1286.\
    \  Changes have primarily\n   been made to track changes in the IEEE 802.5M SRT\
    \ Addendum to the\n   IEEE 802.1D Standard for MAC Bridges.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      o    STD 16, RFC\
    \ 1155 which defines the SMI, the mechanisms used for\n           describing and\
    \ naming objects for the purpose of\n           management.  STD 16, RFC 1212\
    \ defines a more concise description\n           mechanism, which is wholly consistent\
    \ with the SMI.\n      o    STD 17, RFC 1213 defines MIB-II, the core set of managed\
    \ objects\n           for the Internet suite of protocols.\n      o    STD 15,\
    \ RFC 1157 which defines the SNMP, the protocol used for\n           network access\
    \ to managed objects.\n   The Framework permits new objects to be defined for\
    \ the purpose of\n   experimentation and evaluation.\n"
- title: 2.1.  Object Definitions
  contents:
  - "2.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object object type is named\n   by\
    \ an OBJECT IDENTIFIER, an administratively assigned name.  The\n   object type\
    \ together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   A common device present in many networks is the Bridge.  This\
    \ device\n   is used to connect Local Area Network segments below the network\n\
    \   layer.  There are two major modes defined for this bridging;\n   transparent\
    \ and source route.  The transparent method of bridging is\n   defined in the\
    \ IEEE 802.1d MAC Bridge specification [11].  Source\n   route bridging has been\
    \ defined by I.B.M. and is described in the\n   Token Ring Architecture Reference\
    \ [12], as well as the IEEE 802.5M\n   SRT Bridge Operations Addendum [14] to\
    \ 802.1d.  This memo defines\n   objects needed for management of a source routing\
    \ bridge, and is an\n   extension to the SNMP Bridge MIB [6].\n   An explicit\
    \ attempt was made to keep this MIB as simple as possible.\n   This was accomplished\
    \ by applying the following criteria to objects\n   proposed for inclusion:\n\
    \      (1)  Start with a small set of essential objects and add only\n       \
    \    as further objects are needed.\n      (2)  Require objects be essential for\
    \ either fault or\n           configuration management.\n      (3)  Consider evidence\
    \ of current use and/or utility.\n      (4)  Limit the total of objects.\n   \
    \   (5)  Exclude objects which are simply derivable from others in\n         \
    \  this or other MIBs.\n      (6)  Avoid causing critical sections to be heavily\n\
    \           instrumented.  The guideline that was followed is one\n          \
    \ counter per critical section per layer.\n"
- title: 3.1.  Structure of MIB
  contents:
  - "3.1.  Structure of MIB\n   Objects in this MIB are arranged into groups.  Each\
    \ group is\n   organized as a set of related objects.  The overall structure and\n\
    \   assignment of objects to their groups is shown below.  Where\n   appropriate,\
    \ the corresponding management object name found in IEEE\n   802.1d [11] and IEEE\
    \ 802.5M [14] is also included.\n    SR Bridge MIB Name              IEEE Name\n\
    \      dot1dSr\n        PortTable\n          Port\n          HopCount        \
    \            SourceRoutingPort\n                                        .PortHopCount\n\
    \          LocalSegment                  .SegmentNumber\n          BridgeNum \
    \                    .BridgeNumber\n          TargetSegment\n          LargestFrame\
    \                  .LargestFrameSize\n          STESpanMode                  \
    \ .LimitedBroadcastMode\n          SpecInFrames                BridgePort\n  \
    \                                      .ValidSRFramesReceived\n          SpecOutFrames\
    \                 .ValidSRForwardedOutbound\n          ApeInFrames\n         \
    \ ApeOutFrames                  .BroadcastFramesForwarded\n          SteInFrames\n\
    \          SteOutFrames                  .BroadcastFramesForwarded\n         \
    \ SegmentMismatchDiscards       .DiscardInvalidRI\n          DuplicateSegmentDiscards\
    \      .LanIdMismatch\n          HopCountExceededDiscards      .FramesDiscardedHopCountExceeded\n\
    \   The following IEEE management objects have not been included in the\n   SR\
    \ Bridge MIB for the indicated reasons.\n    IEEE Object                     Disposition\n\
    \    SourceRoutingPort\n                                    The following objects\
    \ were NOT\n                                    included in this MIB because they\n\
    \                                    are redundant or not considered\n       \
    \                             useful.\n        .LimitedBroadcastEnable\n     \
    \   .DiscardLackOfBuffers\n        .DiscardErrorDetails\n        .DiscardTargetLANInoperable\n\
    \        .ValidSRDiscardedInbound\n        .BroadcastBytesForwarded\n        .NonBroadcastBytesForwarded\n\
    \        .FramesNotReceivedDueToCongestion\n        .FramesDiscardedDueToInternalError\n"
- title: 3.1.1.  The dot1dSr Group
  contents:
  - "3.1.1.  The dot1dSr Group\n   This group contains the objects that describe the\
    \ entity's state with\n   respect to source route bridging.  If source routing\
    \ is not\n   supported, this group will not be implemented.  This group is\n \
    \  applicable to source route only, and SRT bridges.\n"
- title: 3.1.2.  The dot1dPortPair Group
  contents:
  - "3.1.2.  The dot1dPortPair Group\n   Implementation of this group is optional.\
    \  This group is implemented\n   by those bridges that support the port-pair multiport\
    \ model of the\n   source route bridging mode as defined in the IEEE 802.5M SRT\
    \ Addendum\n   to 802.1d.\n"
- title: 3.2.  Relationship to Other MIBs
  contents:
  - "3.2.  Relationship to Other MIBs\n   As described above, some IEEE 802.1d management\
    \ objects have not been\n   included in this MIB because they overlap with objects\
    \ in other MIBs\n   applicable to a bridge implementing this MIB.  In particular,\
    \ it is\n   assumed that a bridge implementing this MIB will also implement (at\n\
    \   least) the Bridge MIB and the 'system' group and the 'interfaces'\n   group\
    \ defined in MIB-II [4].\n"
- title: 3.2.1.  Relationship to the Bridge MIB
  contents:
  - "3.2.1.  Relationship to the Bridge MIB\n   The Bridge MIB [6] must be implemented\
    \ by all bridges, including\n   transparent, SR and SRT bridges.  The SR bridge\
    \ MIB is an extension\n   to the Bridge MIB.\n"
- title: 3.2.2.  Relationship to the 'system' group
  contents:
  - "3.2.2.  Relationship to the 'system' group\n   In MIB-II, the 'system' group\
    \ is defined as being mandatory for all\n   systems such that each managed entity\
    \ contains one instance of each\n   object in the 'system' group.  Thus, those\
    \ objects apply to the\n   entity as a whole irrespective of whether the entity's\
    \ sole\n   functionality is bridging, or whether bridging is only a subset of\n\
    \   the entity's functionality.\n"
- title: 3.2.3.  Relationship to the 'interfaces' group
  contents:
  - "3.2.3.  Relationship to the 'interfaces' group\n   In MIB-II, the 'interfaces'\
    \ group is defined as being mandatory for\n   all systems and contains information\
    \ on an entity's interfaces, where\n   each interface is thought of as being attached\
    \ to a `subnetwork'.\n   (Note that this term is not to be confused with `subnet'\
    \ which refers\n   to an addressing partitioning scheme used in the Internet suite\
    \ of\n   protocols.)  The term 'segment' is used in this memo to refer to such\n\
    \   a subnetwork.\n   Implicit in this MIB is the notion of ports on a bridge.\
    \  Each of\n   these ports is associated with one interface of the 'interfaces'\n\
    \   group, and in most situations, each port is associated with a\n   different\
    \ interface. However, there are situations in which multiple\n   ports are associated\
    \ with the same interface.  An example of such a\n   situation would be several\
    \ ports, each corresponding one-to-one with\n   several X.25 virtual circuits,\
    \ but all on the same interface.\n   Each port is uniquely identified by a port\
    \ number.  A port number has\n   no mandatory relationship to an interface number,\
    \ but in the simple\n   case, a port number will have the same value as the corresponding\n\
    \   interface's interface number.\n   Some entities provide other services in\
    \ addition to bridging with\n   respect to the data sent and received by their\
    \ interfaces.  In such\n   situations, only a subset of the data sent/received\
    \ on an interface\n   is within the domain of the entity's bridging functionality.\
    \  This\n   subset is considered to be delineated according to a set of\n   protocols,\
    \ with some protocols being bridged, and other protocols not\n   being bridged.\
    \  For example, in an entity which exclusively performed\n   bridging, all protocols\
    \ would be considered as being bridged, whereas\n   in an entity which performed\
    \ IP routing on IP datagrams and only\n   bridged other protocols, only the non-IP\
    \ data would be considered as\n   being bridged.\n   Thus, this MIB (and in particular,\
    \ its counters) are applicable only\n   to that subset of the data on an entity's\
    \ interfaces which is\n   sent/received for a protocol being bridged.  All such\
    \ data is\n   sent/received via the ports of the bridge.\n"
- title: 4.  Changes from RFC 1286
  contents:
  - "4.  Changes from RFC 1286\n   In addition to being separated from the Bridge\
    \ MIB into a separate\n   document, the following changes were implemented as\
    \ a result of\n   feedback from IEEE 802.5M:\n          (1)  Changed syntax of\
    \ dot1dSrPortLargestFrame to INTEGER in\n               order to allow for having\
    \ 64 possible values as described\n               in draft 7 of the SR Addendum.\
    \  Listed all legal values\n               in description.\n          (2)  Updated\
    \ syntax of dot1dSrPort, used to index into\n               dot1dSrPortTable,\
    \ to use the range (1..65535).\n          (3)  Added a counter to dot1dSrPortTable\
    \ to count occurrences\n               of duplicate LAN IDs or Tree errors.\n\
    \          (4)  Added a counter to dot1dSrPortTable to count LAN ID\n        \
    \       mismatches.\n          (5)  Added text to dot1dSrPortSpecInFrames and\n\
    \               dot1dSrPortSpecOutFrames clarifying that they are also\n     \
    \          referred to as Source Routed Frames.\n          (6)  Added text to\
    \ dot1dSrPortApeInFrames and\n               dot1dSrPortApeOutFrames clarifying\
    \ that they are also\n               referred to as All Routes Explorer frames.\n\
    \          (7)  Added a scalar variable to the dot1dSr group to indicate\n   \
    \            whether the bridge uses 3 bit or 6 bit length negotiation\n     \
    \          fields.\n          (8)  Added dot1dPortPairGroup to allow representation\
    \ of port\n               pairs as defined in the IEEE 802.5M SRT Addendum.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n          SOURCE-ROUTING-MIB DEFINITIONS ::= BEGIN\n       \
    \   IMPORTS\n                  Counter, Gauge\n                          FROM\
    \ RFC1155-SMI\n                  dot1dBridge, dot1dSr\n                      \
    \    FROM BRIDGE-MIB\n                  OBJECT-TYPE\n                        \
    \  FROM RFC-1212;\n          -- groups in the SR MIB\n          -- dot1dSr is\
    \ imported from the Bridge MIB\n          dot1dPortPair   OBJECT IDENTIFIER ::=\
    \ { dot1dBridge 10 }\n          -- the dot1dSr group\n          -- this group\
    \ is implemented by those bridges that\n          -- support the source route\
    \ bridging mode, including Source\n          -- Routing and SRT bridges.\n   \
    \       dot1dSrPortTable OBJECT-TYPE\n              SYNTAX  SEQUENCE OF Dot1dSrPortEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A table that contains information\
    \ about every\n                      port that is associated with this source\
    \ route\n                      bridge.\"\n              ::= { dot1dSr 1 }\n  \
    \        dot1dSrPortEntry OBJECT-TYPE\n              SYNTAX  Dot1dSrPortEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"A list of information for each\
    \ port of a source\n                      route bridge.\"\n              INDEX\
    \   { dot1dSrPort }\n              ::= { dot1dSrPortTable 1 }\n          Dot1dSrPortEntry\
    \ ::=\n              SEQUENCE {\n                  dot1dSrPort\n             \
    \         INTEGER,\n                  dot1dSrPortHopCount\n                  \
    \    INTEGER,\n                  dot1dSrPortLocalSegment\n                   \
    \   INTEGER,\n                  dot1dSrPortBridgeNum\n                      INTEGER,\n\
    \                  dot1dSrPortTargetSegment\n                      INTEGER,\n\
    \                  dot1dSrPortLargestFrame\n                      INTEGER,\n \
    \                 dot1dSrPortSTESpanMode\n                      INTEGER,\n   \
    \               dot1dSrPortSpecInFrames\n                      Counter,\n    \
    \              dot1dSrPortSpecOutFrames\n                      Counter,\n    \
    \              dot1dSrPortApeInFrames\n                      Counter,\n      \
    \            dot1dSrPortApeOutFrames\n                      Counter,\n       \
    \           dot1dSrPortSteInFrames\n                      Counter,\n         \
    \         dot1dSrPortSteOutFrames\n                      Counter,\n          \
    \        dot1dSrPortSegmentMismatchDiscards\n                      Counter,\n\
    \                  dot1dSrPortDuplicateSegmentDiscards\n                     \
    \ Counter,\n                  dot1dSrPortHopCountExceededDiscards\n          \
    \            Counter,\n                  dot1dSrPortDupLanIdOrTreeErrors\n   \
    \                   Counter,\n                  dot1dSrPortLanIdMismatches\n \
    \                     Counter\n              }\n          dot1dSrPort OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (1..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"The port number of the port for which this entry\n                   \
    \   contains Source Route management information.\"\n              ::= { dot1dSrPortEntry\
    \ 1 }\n          dot1dSrPortHopCount OBJECT-TYPE\n              SYNTAX  INTEGER\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"The maximum number of routing descriptors\
    \ allowed\n                      in an All Paths or Spanning Tree Explorer frames.\"\
    \n              ::= { dot1dSrPortEntry 2 }\n          dot1dSrPortLocalSegment\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The segment number that uniquely identifies the\n                   \
    \   segment to which this port is connected. Current\n                      source\
    \ routing protocols limit this value to the\n                      range: 0 through\
    \ 4095. (The value 0 is used by\n                      some management applications\
    \ for special test\n                      cases.) A value of 65535 signifies that\
    \ no segment\n                      number is assigned to this port.\"\n     \
    \         ::= { dot1dSrPortEntry 3 }\n          dot1dSrPortBridgeNum OBJECT-TYPE\n\
    \              SYNTAX  INTEGER\n              ACCESS  read-write\n           \
    \   STATUS  mandatory\n              DESCRIPTION\n                      \"A bridge\
    \ number uniquely identifies a bridge when\n                      more than one\
    \ bridge is used to span the same two\n                      segments.  Current\
    \ source routing protocols limit\n                      this value to the range:\
    \ 0 through 15. A value of\n                      65535 signifies that no bridge\
    \ number is assigned\n                      to this bridge.\"\n              ::=\
    \ { dot1dSrPortEntry 4 }\n          dot1dSrPortTargetSegment OBJECT-TYPE\n   \
    \           SYNTAX  INTEGER\n              ACCESS  read-write\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The segment number\
    \ that corresponds to the target\n                      segment this port is considered\
    \ to be connected to\n                      by the bridge.  Current source routing\
    \ protocols\n                      limit this value to the range: 0 through 4095.\n\
    \                      (The value 0 is used by some management\n             \
    \         applications for special test cases.) A value of\n                 \
    \     65535 signifies that no target segment is assigned\n                   \
    \   to this port.\"\n              ::= { dot1dSrPortEntry 5 }\n          -- It\
    \ would be nice if we could use ifMtu as the size of the\n          -- largest\
    \ frame, but we can't because ifMtu is defined to be\n          -- the size that\
    \ the (inter-)network layer can use which can\n          -- differ from the MAC\
    \ layer (especially if several layers of\n          -- encapsulation are used).\n\
    \          dot1dSrPortLargestFrame OBJECT-TYPE\n              SYNTAX  INTEGER\n\
    \              ACCESS  read-write\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"The maximum size of the INFO field\
    \ (LLC and\n                      above) that this port can send/receive.  It\
    \ does\n                      not include any MAC level (framing) octets.  The\n\
    \                      value of this object is used by this bridge to\n      \
    \                determine whether a modification of the\n                   \
    \   LargestFrame (LF, see [14]) field of the Routing\n                      Control\
    \ field of the Routing Information Field is\n                      necessary.\n\
    \                      64 valid values are defined by the IEEE 802.5M SRT\n  \
    \                    Addendum: 516, 635, 754, 873, 993, 1112, 1231,\n        \
    \              1350, 1470, 1542, 1615, 1688, 1761, 1833, 1906,\n             \
    \         1979, 2052, 2345, 2638, 2932, 3225, 3518, 3812,\n                  \
    \    4105, 4399, 4865, 5331, 5798, 6264, 6730, 7197,\n                      7663,\
    \ 8130, 8539, 8949, 9358, 9768, 10178, 10587,\n                      10997, 11407,\
    \ 12199, 12992, 13785, 14578, 15370,\n                      16163, 16956, 17749,\
    \ 20730, 23711, 26693, 29674,\n                      32655, 35637, 38618, 41600,\
    \ 44591, 47583, 50575,\n                      53567, 56559, 59551, and 65535.\n\
    \                      An illegal value will not be accepted by the\n        \
    \              bridge.\"\n              ::= { dot1dSrPortEntry 6 }\n         \
    \ dot1dSrPortSTESpanMode OBJECT-TYPE\n              SYNTAX  INTEGER {\n      \
    \                    auto-span(1),\n                          disabled(2),\n \
    \                         forced(3)\n                      }\n              ACCESS\
    \  read-write\n              STATUS  mandatory\n              DESCRIPTION\n  \
    \                    \"Determines how this port behaves when presented\n     \
    \                 with a Spanning Tree Explorer frame.  The value\n          \
    \            'disabled(2)' indicates that the port will not\n                \
    \      accept or send Spanning Tree Explorer packets; any\n                  \
    \    STE packets received will be silently discarded.\n                      The\
    \ value 'forced(3)' indicates the port will\n                      always accept\
    \ and propagate Spanning Tree Explorer\n                      frames.  This allows\
    \ a manually configured\n                      Spanning Tree for this class of\
    \ packet to be\n                      configured.  Note that unlike transparent\n\
    \                      bridging, this is not catastrophic to the network\n   \
    \                   if there are loops.  The value 'auto-span(1)' can\n      \
    \                only be returned by a bridge that both implements\n         \
    \             the Spanning Tree Protocol and has use of the\n                \
    \      protocol enabled on this port. The behavior of the\n                  \
    \    port for Spanning Tree Explorer frames is\n                      determined\
    \ by the state of dot1dStpPortState.  If\n                      the port is in\
    \ the 'forwarding' state, the frame\n                      will be accepted or\
    \ propagated.  Otherwise, it\n                      will be silently discarded.\"\
    \n              ::= { dot1dSrPortEntry 7 }\n          dot1dSrPortSpecInFrames\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of Specifically Routed frames, also\n                    \
    \  referred to as Source Routed Frames, that have\n                      been\
    \ received from this port's segment.\"\n              ::= { dot1dSrPortEntry 8\
    \ }\n          dot1dSrPortSpecOutFrames OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of Specifically Routed frames,\
    \ also\n                      referred to as Source Routed Frames, that this\n\
    \                      port has transmitted on its segment.\"\n              ::=\
    \ { dot1dSrPortEntry 9 }\n          dot1dSrPortApeInFrames OBJECT-TYPE\n     \
    \         SYNTAX  Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The number of\
    \ All Paths Explorer frames, also\n                      referred to as All Routes\
    \ Explorer frames, that\n                      have been received by this port\
    \ from its segment.\"\n              ::= { dot1dSrPortEntry 10 }\n          dot1dSrPortApeOutFrames\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of all Paths Explorer Frames, also\n                     \
    \ referred to as All Routes Explorer frames, that\n                      have\
    \ been transmitted by this port on its\n                      segment.\"\n   \
    \           ::= { dot1dSrPortEntry 11 }\n          dot1dSrPortSteInFrames OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of spanning tree explorer frames that\n                      have been received\
    \ by this port from its segment.\"\n              ::= { dot1dSrPortEntry 12 }\n\
    \          dot1dSrPortSteOutFrames OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of spanning tree explorer\
    \ frames that\n                      have been transmitted by this port on its\n\
    \                      segment.\"\n              ::= { dot1dSrPortEntry 13 }\n\
    \          dot1dSrPortSegmentMismatchDiscards OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of explorer frames\
    \ that have been\n                      discarded by this port because the routing\n\
    \                      descriptor field contained an invalid adjacent\n      \
    \                segment value.\"\n              ::= { dot1dSrPortEntry 14 }\n\
    \          dot1dSrPortDuplicateSegmentDiscards OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The number of frames that\
    \ have been discarded by\n                      this port because the routing\
    \ descriptor field\n                      contained a duplicate segment identifier.\"\
    \n              ::= { dot1dSrPortEntry 15 }\n          dot1dSrPortHopCountExceededDiscards\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of explorer frames that have been\n                      discarded\
    \ by this port because the Routing\n                      Information Field has\
    \ exceeded the maximum route\n                      descriptor length.\"\n   \
    \           ::= { dot1dSrPortEntry 16 }\n          dot1dSrPortDupLanIdOrTreeErrors\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of duplicate LAN IDs or Tree errors.\n                   \
    \   This helps in detection of problems in networks\n                      containing\
    \ older IBM Source Routing Bridges.\"\n              ::= { dot1dSrPortEntry 17\
    \ }\n          dot1dSrPortLanIdMismatches OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of ARE and STE frames that\
    \ were\n                      discarded because the last LAN ID in the routing\n\
    \                      information field did not equal the LAN-in ID.\n      \
    \                This error can occur in implementations which do\n          \
    \            only a LAN-in ID and Bridge Number check instead\n              \
    \        of a LAN-in ID, Bridge Number, and LAN-out ID\n                     \
    \ check before they forward broadcast frames.\"\n              ::= { dot1dSrPortEntry\
    \ 18 }\n          -- scalar object in dot1dSr\n          dot1dSrBridgeLfMode OBJECT-TYPE\n\
    \              SYNTAX  INTEGER {\n                          mode3(1),\n      \
    \                    mode6(2)\n                      }\n              ACCESS \
    \ read-write\n              STATUS  mandatory\n              DESCRIPTION\n   \
    \                   \"Indicates whether the bridge operates using older\n    \
    \                  3 bit length negotiation fields or the newer 6 bit\n      \
    \                length field in its RIF.\"\n              ::= { dot1dSr 2 }\n\
    \          -- The Port-Pair Database\n          -- Implementation of this group\
    \ is optional.\n          -- This group is implemented by those bridges that support\n\
    \          -- the direct multiport model of the source route bridging\n      \
    \    -- mode as defined in the IEEE 802.5 SRT Addendum to\n          -- 802.1d.\n\
    \          -- Bridges implementing this group may report 65535 for\n         \
    \ -- dot1dSrPortBridgeNumber and dot1dSrPortTargetSegment,\n          -- indicating\
    \ that those objects are not applicable.\n          dot1dPortPairTableSize OBJECT-TYPE\n\
    \              SYNTAX  Gauge\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The total number\
    \ of entries in the Bridge Port\n                      Pair Database.\"\n    \
    \          ::= { dot1dPortPair 1 }\n          -- the Bridge Port-Pair table\n\
    \          -- this table represents port pairs within a bridge forming\n     \
    \     -- a unique bridge path, as defined in the IEEE 802.5M SRT\n          --\
    \ Addendum.\n          dot1dPortPairTable OBJECT-TYPE\n              SYNTAX  SEQUENCE\
    \ OF Dot1dPortPairEntry\n              ACCESS  not-accessible\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A table that\
    \ contains information about every\n                      port pair database entity\
    \ associated with this\n                      source routing bridge.\"\n     \
    \         ::= { dot1dPortPair 2 }\n          dot1dPortPairEntry OBJECT-TYPE\n\
    \              SYNTAX  Dot1dPortPairEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A list of information for each port pair entity\n                   \
    \   of a bridge.\"\n              INDEX   { dot1dPortPairLowPort, dot1dPortPairHighPort\
    \ }\n              ::= { dot1dPortPairTable 1 }\n          Dot1dPortPairEntry\
    \ ::=\n              SEQUENCE {\n                  dot1dPortPairLowPort\n    \
    \                  INTEGER,\n                  dot1dPortPairHighPort\n       \
    \               INTEGER,\n                  dot1dPortPairBridgeNum\n         \
    \             INTEGER,\n                  dot1dPortPairBridgeState\n         \
    \             INTEGER\n              }\n          dot1dPortPairLowPort OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (1..65535)\n              ACCESS  read-write\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The port number of the lower numbered port for\n                    \
    \  which this entry contains port pair database\n                      information.\"\
    \n              ::= { dot1dPortPairEntry 1 }\n          dot1dPortPairHighPort\
    \ OBJECT-TYPE\n              SYNTAX  INTEGER (1..65535)\n              ACCESS\
    \  read-write\n              STATUS  mandatory\n              DESCRIPTION\n  \
    \                    \"The port number of the higher numbered port for\n     \
    \                 which this entry contains port pair database\n             \
    \         information.\"\n              ::= { dot1dPortPairEntry 2 }\n       \
    \   dot1dPortPairBridgeNum OBJECT-TYPE\n              SYNTAX  INTEGER\n      \
    \        ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"A bridge number that uniquely identifies the path\n \
    \                     provided by this source routing bridge between the\n   \
    \                   segments connected to dot1dPortPairLowPort and\n         \
    \             dot1dPortPairHighPort.  The purpose of bridge\n                \
    \      number is to disambiguate between multiple paths\n                    \
    \  connecting the same two LANs.\"\n              ::= { dot1dPortPairEntry 3 }\n\
    \          dot1dPortPairBridgeState OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                          enabled(1),\n                          disabled(2),\n\
    \                          invalid(3)\n                      }\n             \
    \ ACCESS  read-write\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The state of dot1dPortPairBridgeNum.  Writing\n     \
    \                 'invalid(3)' to this object removes the\n                  \
    \    corresponding entry.\"\n              ::= { dot1dPortPairEntry 4 }\n    \
    \      END\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document was produced on behalf of the Bridge MIB\
    \ Working Group\n   in the NM area of the Internet Engineering Task Force.\n \
    \  The authors wish to thank the members of the Bridge MIB Working Group\n   for\
    \ their many comments and suggestions which improved this effort.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", STD 16, RFC\n       1155, Performance Systems International, Hughes\
    \ LAN Systems, May\n       1990.\n   [4] McCloghrie K., and M. Rose, Editors,\
    \ \"Management Information Base\n       for Network Management of TCP/IP-based\
    \ internets\", STD 17, RFC\n       1213, Performance Systems International, March\
    \ 1991.\n   [5] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n\
    \       Network Management Protocol\", STD 15, RFC 1157, SNMP Research,\n    \
    \   Performance Systems International, Performance Systems\n       International,\
    \ MIT Laboratory for Computer Science, May 1990.\n   [6] Decker, E., Langille,\
    \ P., Rijsinghani, A., and McCloghrie, K.,\n       \"Definitions of Managed Objects\
    \ for Bridges\", RFC 1493, cisco\n       Systems, Digital Equipment Corporation,\
    \ Digital Equipment\n       Corporation, Hughes LAN Systems, July 1993.\n   [7]\
    \ Information processing systems - Open Systems Interconnection -\n       Specification\
    \ of Abstract Syntax Notation One (ASN.1),\n       International Organization\
    \ for Standardization, International\n       Standard 8824, December 1987.\n \
    \  [8] Information processing systems - Open Systems Interconnection -\n     \
    \  Specification of Basic Encoding Rules for Abstract Notation One\n       (ASN.1),\
    \ International Organization for Standardization,\n       International Standard\
    \ 8825, December 1987.\n   [9] Rose, M., and K. McCloghrie, Editors, \"Concise\
    \ MIB Definitions\",\n       STD 16, RFC 1212, Performance Systems International,\
    \ Hughes LAN\n       Systems, March 1991.\n  [10] Rose, M., Editor, \"A Convention\
    \ for Defining Traps for use with\n       the SNMP\", RFC 1215, Performance Systems\
    \ International, March\n       1991.\n  [11] ANSI/IEEE Standard 802.1D-1990 MAC\
    \ Bridges, IEEE Project 802\n       Local and Metropolitan Area Networks, (March\
    \ 8, 1991).\n  [12] I.B.M. Token Ring Architecture Reference.\n  [13] ISO DIS\
    \ 10038 MAC Bridges.\n  [14] ANSI/IEEE P802.5M-Draft 7, \"Source Routing Transparent\
    \ Bridge\n       Operation\", IEEE Project 802 (1991).\n  [15] ANSI/IEEE 802.1y,\
    \ \"Source Routing Tutorial for End System\n       Operation\", (September, 1990).\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Eric B. Decker\n   cisco Systems, Inc.\n   1525 O'Brien\
    \ Dr.\n   Menlo Park, CA  94025\n   Phone: (415) 326-1941\n   Email: cire@cisco.com\n\
    \   Keith McCloghrie\n   Hughes LAN Systems, Inc.\n   1225 Charleston Road\n \
    \  Mountain View, CA 94043\n   Phone: (415) 966-7934\n   EMail: kzm@hls.com\n\
    \   Paul Langille\n   Digital Equipment Corporation\n   Digital Drive, MK02-2/K03\n\
    \   Merrimack, NH 03054\n   Phone: (603) 884-4045\n   EMail: langille@edwin.enet.dec.com\n\
    \   Anil Rijsinghani\n   Digital Equipment Corporation\n   550 King Street\n \
    \  Littleton, MA 01460\n   Phone: (508) 486-6786\n   EMail: anil@levers.enet.dec.com\n"
