- title: __initial_text__
  contents:
  - "                  A Framework for Integrated Services\n           Over Shared\
    \ and Switched IEEE 802 LAN Technologies\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a framework for supporting IETF Integrated\n\
    \   Services on shared and switched LAN infrastructure.  It includes\n   background\
    \ material on the capabilities of IEEE 802 like networks\n   with regard to parameters\
    \ that affect Integrated Services such as\n   access latency, delay variation\
    \ and queuing support in LAN switches.\n   It discusses aspects of IETF's Integrated\
    \ Services model that cannot\n   easily be accommodated in different LAN environments.\
    \  It outlines a\n   functional model for supporting the Resource Reservation\
    \ Protocol\n   (RSVP) in such LAN environments.  Details of extensions to RSVP\
    \ for\n   use over LANs are described in an accompanying memo [14].  Mappings\n\
    \   of the various Integrated Services onto IEEE 802 LANs are described\n   in\
    \ another memo [13].\n"
- title: Contents
  contents:
  - "Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . \
    \ 3\n   2.  Document Outline . . . . . . . . . . . . . . . . . . . . .  4\n  \
    \ 3.  Definitions  . . . . . . . . . . . . . . . . . . . . . . .  4\n   4.  Frame\
    \ Forwarding in IEEE 802 Networks  . . . . . . . . . .  5\n       4.1. General\
    \ IEEE 802 Service Model  . . . . . . . . . . .  5\n       4.2. Ethernet/IEEE\
    \ 802.3 . . . . . . . . . . . . . . . . .  7\n       4.3. Token Ring/IEEE 802.5\
    \ . . . . . . . . . . . . . . . .  8\n       4.4. Fiber Distributed Data Interface\
    \  . . . . . . . . . . 10\n       4.5. Demand Priority/IEEE 802.12 . . . . . .\
    \ . . . . . . . 10\n   5.  Requirements and Goals . . . . . . . . . . . . . .\
    \ . . . . 11\n       5.1. Requirements  . . . . . . . . . . . . . . . . . . .\
    \ . 11\n       5.2. Goals . . . . . . . . . . . . . . . . . . . . . . . . 13\n\
    \       5.3. Non-goals . . . . . . . . . . . . . . . . . . . . . . 14\n      \
    \ 5.4. Assumptions . . . . . . . . . . . . . . . . . . . . . 14\n   6.  Basic\
    \ Architecture . . . . . . . . . . . . . . . . . . . . 15\n       6.1. Components\
    \  . . . . . . . . . . . . . . . . . . . . . 15\n             6.1.1. Requester\
    \ Module  . . . . . . . . . . . . . . 15\n             6.1.2. Bandwidth Allocator\
    \ . . . . . . . . . . . . . 16\n             6.1.3. Communication Protocols .\
    \ . . . . . . . . . . 16\n       6.2. Centralized vs.  Distributed Implementations\
    \  . . . . 17\n   7.  Model of the Bandwidth Manager in a Network  . . . . . .\
    \ . 18\n       7.1. End Station Model . . . . . . . . . . . . . . . . . . 19\n\
    \             7.1.1. Layer 3 Client Model  . . . . . . . . . . . . 19\n      \
    \       7.1.2. Requests to Layer 2 ISSLL . . . . . . . . . . 19\n            \
    \ 7.1.3. At the Layer 3 Sender . . . . . . . . . . . . 20\n             7.1.4.\
    \ At the Layer 3 Receiver . . . . . . . . . . . 21\n       7.2. Switch Model \
    \ . . . . . . . . . . . . . . . . . . . . 22\n             7.2.1. Centralized\
    \ Bandwidth Allocator . . . . . . . 22\n             7.2.2. Distributed Bandwidth\
    \ Allocator . . . . . . . 23\n       7.3. Admission Control . . . . . . . . .\
    \ . . . . . . . . . 25\n       7.4. QoS Signaling . . . . . . . . . . . . . .\
    \ . . . . . . 26\n             7.4.1. Client Service Definitions  . . . . . .\
    \ . . . 26\n             7.4.2. Switch Service Definitions  . . . . . . . . .\
    \ 27\n   8.  Implementation Issues  . . . . . . . . . . . . . . . . . . 28\n \
    \      8.1. Switch Characteristics  . . . . . . . . . . . . . . . 29\n       8.2.\
    \ Queuing . . . . . . . . . . . . . . . . . . . . . . . 30\n       8.3. Mapping\
    \ of Services to Link Level Priority  . . . . . 31\n       8.4. Re-mapping of\
    \ Non-conforming Aggregated Flows . . . . 31\n       8.5. Override of Incoming\
    \ User Priority  . . . . . . . . . 32\n       8.6. Different Reservation Styles\
    \  . . . . . . . . . . . . 32\n       8.7. Receiver Heterogeneity  . . . . . .\
    \ . . . . . . . . . 33\n   9.  Network Topology Scenarios   . . . . . . . . .\
    \ . . . . . . 35\n       9.1. Full Duplex Switched Networks . . . . . . . . .\
    \ . . . 36\n       9.2. Shared Media Ethernet Networks  . . . . . . . . . . .\
    \ 37\n       9.3. Half Duplex Switched Ethernet Networks  . . . . . . . 38\n \
    \      9.4. Half Duplex Switched and Shared Token Ring Networks . 39\n       9.5.\
    \ Half Duplex and Shared Demand Priority Networks . . . 40\n   10. Justification\
    \  . . . . . . . . . . . . . . . . . . . . . . 42\n   11. Summary  . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . 43\n   References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 43\n   Security Considerations  . . . . . .\
    \ . . . . . . . . . . . . . 45\n   Acknowledgements . . . . . . . . . . . . .\
    \ . . . . . . . . . . 45\n   Authors' Addresses . . . . . . . . . . . . . . .\
    \ . . . . . . . 46\n   Full Copyright Statement . . . . . . . . . . . . . . .\
    \ . . . . 47\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Internet has traditionally provided support for best\
    \ effort\n   traffic only.  However, with the recent advances in link layer\n\
    \   technology, and with numerous emerging real time applications such as\n  \
    \ video conferencing and Internet telephony, there has been much\n   interest\
    \ for developing mechanisms which enable real time services\n   over the Internet.\
    \  A framework for meeting these new requirements\n   was set out in RFC 1633\
    \ [8] and this has driven the specification of\n   various classes of network\
    \ service by the Integrated Services working\n   group of the IETF, such as Controlled\
    \ Load and Guaranteed Service\n   [6,7].  Each of these service classes is designed\
    \ to provide certain\n   Quality of Service (QoS) to traffic conforming to a specified\
    \ set of\n   parameters.  Applications are expected to choose one of these classes\n\
    \   according to their QoS requirements.  One mechanism for end stations\n   to\
    \ utilize such services in an IP network is provided by a QoS\n   signaling protocol,\
    \ the Resource Reservation Protocol (RSVP) [5]\n   developed by the RSVP working\
    \ group of the IETF. The IEEE under its\n   Project 802 has defined standards\
    \ for many different local area\n   network technologies.  These all typically\
    \ offer the same MAC layer\n   datagram service [1] to higher layer protocols\
    \ such as IP although\n   they often provide different dynamic behavior characteristics\
    \ -- it\n   is these that are important when considering their ability to support\n\
    \   real time services.  Later in this memo we describe some of the\n   relevant\
    \ characteristics of the different MAC layer LAN technologies.\n   In addition,\
    \ IEEE 802 has defined standards for bridging multiple LAN\n   segments together\
    \ using devices known as \"MAC Bridges\" or \"Switches\"\n   [2].  Recent work\
    \ has also defined traffic classes, multicast\n   filtering, and virtual LAN capabilities\
    \ for these devices [3,4].\n   Such LAN technologies often constitute the last\
    \ hop(s) between users\n   and the Internet as well as being a primary building\
    \ block for entire\n   campus networks.  It is therefore necessary to provide\
    \ standardized\n   mechanisms for using these technologies to support end-to-end\
    \ real\n   time services.  In order to do this, there must be some mechanism for\n\
    \   resource management at the data link layer.  Resource management in\n   this\
    \ context encompasses the functions of admission control,\n   scheduling, traffic\
    \ policing, etc.  The ISSLL (Integrated Services\n   over Specific Link Layers)\
    \ working group in the IETF was chartered\n   with the purpose of exploring and\
    \ standardizing such mechanisms for\n   various link layer technologies.\n"
- title: 2. Document Outline
  contents:
  - "2. Document Outline\n   This document is concerned with specifying a framework\
    \ for providing\n   Integrated Services over shared and switched LAN technologies\
    \ such as\n   Ethernet/IEEE 802.3, Token Ring/IEEE 802.5, FDDI, etc.  We begin\
    \ in\n   Section 4 with a discussion of the capabilities of various IEEE 802\n\
    \   MAC layer technologies.  Section 5 lists the requirements and goals\n   for\
    \ a mechanism capable of providing Integrated Services in a LAN.\n   The resource\
    \ management functions outlined in Section 5 are provided\n   by an entity referred\
    \ to as a Bandwidth Manager (BM). The\n   architectural model of the BM is described\
    \ in Section 6 and its\n   various components are discussed in Section 7.  Some\
    \ implementation\n   issues with respect to link layer support for Integrated\
    \ Services are\n   examined in Section 8.  Section 9 discusses a taxonomy of topologies\n\
    \   for the LAN technologies under consideration with an emphasis on the\n   capabilities\
    \ of each which can be leveraged for enabling Integrated\n   Services.  This framework\
    \ makes no assumptions about the topology at\n   the link layer.  The framework\
    \ is intended to be as exhaustive as\n   possible; this means that it is possible\
    \ that all the functions\n   discussed may not be supportable by a particular\
    \ topology or\n   technology, but this should not preclude the usage of this model\
    \ for\n   it.\n"
- title: 3. Definitions
  contents:
  - "3. Definitions\n   The following is a list of terms used in this and other ISSLL\n\
    \   documents.\n   -  Link Layer or Layer 2 or L2:  Data link layer technologies\
    \ such as\n      Ethernet/IEEE 802.3 and Token Ring/IEEE 802.5 are referred to\
    \ as\n      Layer 2 or L2.\n   -  Link Layer Domain or Layer 2 Domain or L2 Domain:\
    \  Refers to a set\n      of nodes and links interconnected without passing through\
    \ a L3\n      forwarding function.  One or more IP subnets can be overlaid on\
    \ a\n      L2 domain.\n   -  Layer 2 or L2 Devices:  Devices that only implement\
    \ Layer 2\n      functionality as Layer 2 or L2 devices.  These include IEEE 802.1D\n\
    \      [2] bridges or switches.\n   -  Internetwork Layer or Layer 3 or L3:  Refers\
    \ to Layer 3 of the ISO\n      OSI model.  This memo is primarily concerned with\
    \ networks that\n      use the Internet Protocol (IP) at this layer.\n   -  Layer\
    \ 3 Device or L3 Device or End Station:  These include hosts\n      and routers\
    \ that use L3 and higher layer protocols or application\n      programs that need\
    \ to make resource reservations.\n   -  Segment:  A physical L2 segment that is\
    \ shared by one or more\n      senders.  Examples of segments include:  (a) a\
    \ shared Ethernet or\n      Token Ring wire resolving contention for media access\
    \ using CSMA\n      or token passing; (b) a half duplex link between two stations\
    \ or\n      switches; (c) one direction of a switched full duplex link.\n   -\
    \  Managed Segment:  A managed segment is a segment with a DSBM\n      (designated\
    \ subnet bandwidth manager, see [14]) present and\n      responsible for exercising\
    \ admission control over requests for\n      resource reservation.  A managed\
    \ segment includes those\n      interconnected parts of a shared LAN that are\
    \ not separated by\n      DSBMs.\n   -  Traffic Class:  Refers to an aggregation\
    \ of data flows which are\n      given similar service within a switched network.\n\
    \   -  Subnet:  Used in this memo to indicate a group of L3 devices\n      sharing\
    \ a common L3 network address prefix along with the set of\n      segments making\
    \ up the L2 domain in which they are located.\n   -  Bridge/Switch:  A Layer 2\
    \ forwarding device as defined by IEEE\n      802.1D [2].  The terms bridge and\
    \ switch are used synonymously in\n      this memo.\n"
- title: 4. Frame Forwarding in IEEE 802 Networks
  contents:
  - '4. Frame Forwarding in IEEE 802 Networks

    '
- title: 4.1. General IEEE 802 Service Model
  contents:
  - "4.1. General IEEE 802 Service Model\n   The user_priority is a value associated\
    \ with the transmission and\n   reception of all frames in the IEEE 802 service\
    \ model.  It is\n   supplied by the sender that is using the MAC service and is\
    \ provided\n   along with the data to a receiver using the MAC service.  It may\
    \ or\n   may not be actually carried over the network.  Token Ring/IEEE 802.5\n\
    \   carries this value encoded in its FC octet while basic Ethernet/IEEE\n   802.3\
    \ does not carry it.  IEEE 802.12 may or may not carry it\n   depending on the\
    \ frame format in use.  When the frame format in use\n   is IEEE 802.5, the user_priority\
    \ is carried explicitly.  When IEEE\n   802.3 frame format is used, only the two\
    \ levels of priority\n   (high/low) that are used to determine access priority\
    \ can be\n   recovered.  This is based on the value of priority encoded in the\n\
    \   start delimiter of the IEEE 802.3 frame.\n   NOTE: The original IEEE 802.1D\
    \ standard [2] contains the\n   specifications for the operation of MAC bridges.\
    \  This has recently\n   been extended to include support for traffic classes\
    \ and dynamic\n   multicast filtering [3].  In this document, the reader should\
    \ be\n   aware that references to the IEEE 802.1D standard refer to [3],\n   unless\
    \ explicitly noted otherwise.\n   IEEE 802.1D [3] defines a consistent way for\
    \ carrying the value of\n   the user_priority over a bridged network consisting\
    \ of Ethernet,\n   Token Ring, Demand Priority, FDDI or other MAC layer media\
    \ using an\n   extended frame format.  The usage of user_priority is summarized\n\
    \   below.  We refer the interested reader to the IEEE 802.1D\n   specification\
    \ for further information.\n   If the user_priority is carried explicitly in packets,\
    \ its utility is\n   as a simple label enabling packets within a data stream in\
    \ different\n   classes to be discriminated easily by downstream nodes without\
    \ having\n   to parse the packet in more detail.\n   Apart from making the job\
    \ of desktop or wiring closet switches\n   easier, an explicit field means they\
    \ do not have to change hardware\n   or software as the rules for classifying\
    \ packets evolve; e.g.  based\n   on new protocols or new policies.  More sophisticated\
    \ Layer 3\n   switches, perhaps deployed in the core of a network, may be able\
    \ to\n   provide added value by performing packet classification more\n   accurately\
    \ and, hence, utilizing network resources more efficiently\n   and providing better\
    \ isolation between flows.  This appears to be a\n   good economic choice since\
    \ there are likely to be very many more\n   desktop/wiring closet switches in\
    \ a network than switches requiring\n   Layer 3 functionality.\n   The IEEE 802\
    \ specifications make no assumptions about how\n   user_priority is to be used\
    \ by end stations or by the network.\n   Although IEEE 802.1D defines static priority\
    \ queuing as the default\n   mode of operation of switches that implement multiple\
    \ queues, the\n   user_priority is really a priority only in a loose sense since\
    \ it\n   depends on the number of traffic classes actually implemented by a\n\
    \   switch.  The user_priority is defined as a 3 bit quantity with a\n   value\
    \ of 7 representing the highest priority and a value of 0 as the\n   lowest. \
    \ The general switch algorithm is as follows.  Packets are\n   queued within a\
    \ particular traffic class based on the received\n   user_priority, the value\
    \ of which is either obtained directly from\n   the packet if an IEEE 802.1Q header\
    \ or IEEE 802.5 network is used, or\n   is assigned according to some local policy.\
    \  The queue is selected\n   based on a mapping from user_priority (0 through\
    \ 7) onto the number\n   of available traffic classes.  A switch may implement\
    \ one or more\n   traffic classes.  The advertised IntServ parameters and the\
    \ switch's\n   admission control behavior may be used to determine the mapping\
    \ from\n   user_priority to traffic classes within the switch.  A switch is not\n\
    \   precluded from implementing other scheduling algorithms such as\n   weighted\
    \ fair queuing and round robin.\n   IEEE 802.1D makes no recommendations about\
    \ how a sender should select\n   the value for user_priority.  One of the primary\
    \ purposes of this\n   document is to propose such usage rules, and to discuss\
    \ the\n   communication of the semantics of these values between switches and\n\
    \   end stations.  In the remainder of this document we use the term\n   traffic\
    \ class synonymously with user_priority.\n"
- title: 4.2. Ethernet/IEEE 802.3
  contents:
  - "4.2. Ethernet/IEEE 802.3\n   There is no explicit traffic class or user_priority\
    \ field carried in\n   Ethernet packets.  This means that user_priority must be\
    \ regenerated\n   at a downstream receiver or switch according to some defaults\
    \ or by\n   parsing further into higher layer protocol fields in the packet.\n\
    \   Alternatively, IEEE 802.1Q encapsulation [4] may be used which\n   provides\
    \ an explicit user_priority field on top of the basic MAC\n   frame format.\n\
    \   For the different IP packet encapsulations used over Ethernet/IEEE\n   802.3,\
    \ it will be necessary to adjust any admission control\n   calculations according\
    \ to the framing and padding requirements as\n   shown in Table 1.  Here, \"ip_len\"\
    \ refers to the length of the IP\n   packet including its headers.\n         \
    \           Table 1: Ethernet encapsulations\n   ---------------------------------------------------------------\n\
    \   Encapsulation                          Framing Overhead  IP MTU\n        \
    \                                     bytes/pkt       bytes\n   ---------------------------------------------------------------\n\
    \   IP EtherType (ip_len<=46 bytes)             64-ip_len    1500\n          \
    \      (1500>=ip_len>=46 bytes)         18         1500\n   IP EtherType over\
    \ 802.1D/Q (ip_len<=42)     64-ip_len    1500*\n                (1500>=ip_len>=42\
    \ bytes)         22         1500*\n   IP EtherType over LLC/SNAP (ip_len<=40)\
    \     64-ip_len    1492\n                (1500>=ip_len>=40 bytes)         24 \
    \        1492\n   ---------------------------------------------------------------\n\
    \   *Note that the packet length of an Ethernet frame using the IEEE\n   802.1Q\
    \ specification exceeds the current IEEE 802.3 maximum packet\n   length values\
    \ by 4 bytes.  The change of maximum MTU size for IEEE\n   802.1Q frames is being\
    \ accommodated by IEEE 802.3ac [21].\n"
- title: 4.3. Token Ring/IEEE 802.5
  contents:
  - "4.3. Token Ring/IEEE 802.5\n   The Token Ring standard [6] provides a priority\
    \ mechanism that can be\n   used to control both the queuing of packets for transmission\
    \ and the\n   access of packets to the shared media.  The priority mechanisms\
    \ are\n   implemented using bits within the Access Control (AC) and the Frame\n\
    \   Control (FC) fields of a LLC frame.  The first three bits of the AC\n   field,\
    \ the Token Priority bits, together with the last three bits of\n   the AC field,\
    \ the Reservation bits, regulate which stations get\n   access to the ring.  The\
    \ last three bits of the FC field of a LLC\n   frame, the User Priority bits,\
    \ are obtained from the higher layer in\n   the user_priority parameter when it\
    \ requests transmission of a\n   packet.  This parameter also establishes the\
    \ Access Priority used by\n   the MAC. The user_priority value is conveyed end-to-end\
    \ by the User\n   Priority bits in the FC field and is typically preserved through\n\
    \   Token Ring bridges of all types.  In all cases, 0 is the lowest\n   priority.\n\
    \   Token Ring also uses a concept of Reserved Priority which relates to\n   the\
    \ value of priority which a station uses to reserve the token for\n   its next\
    \ transmission on the ring.  When a free token is circulating,\n   only a station\
    \ having an Access Priority greater than or equal to the\n   Reserved Priority\
    \ in the token will be allowed to seize the token for\n   transmission.  Readers\
    \ are referred to [14] for further discussion of\n   this topic.\n   A Token Ring\
    \ station is theoretically capable of separately queuing\n   each of the eight\
    \ levels of requested user_priority and then\n   transmitting frames in order\
    \ of priority.  A station sets Reservation\n   bits according to the user_priority\
    \ of frames that are queued for\n   transmission in the highest priority queue.\
    \  This allows the access\n   mechanism to ensure that the frame with the highest\
    \ priority\n   throughout the entire ring will be transmitted before any lower\n\
    \   priority frame.  Annex I to the IEEE 802.5 Token Ring standard\n   recommends\
    \ that stations send/relay frames as follows.\n          Table 2: Recommended\
    \ use of Token Ring User Priority\n            -------------------------------------\n\
    \            Application             User Priority\n            -------------------------------------\n\
    \            Non-time-critical data      0\n                  -              \
    \       1\n                  -                     2\n                  -    \
    \                 3\n            LAN management              4\n            Time-sensitive\
    \ data         5\n            Real-time-critical data     6\n            MAC frames\
    \                  7\n            -------------------------------------\n   To\
    \ reduce frame jitter associated with high priority traffic, the\n   annex also\
    \ recommends that only one frame be transmitted per token\n   and that the maximum\
    \ information field size be 4399 octets whenever\n   delay sensitive traffic is\
    \ traversing the ring.  Most existing\n   implementations of Token Ring bridges\
    \ forward all LLC frames with a\n   default access priority of 4.  Annex I recommends\
    \ that bridges\n   forward LLC frames that have a user_priority greater than 4\
    \ with a\n   reservation equal to the user_priority (although IEEE 802.1D [3]\n\
    \   permits network management override this behavior).  The capabilities\n  \
    \ provided by the Token Ring architecture, such User Priority and\n   Reserved\
    \ Priority, can provide effective support for Integrated\n   Services flows that\
    \ require QoS guarantees.\n   For the different IP packet encapsulations used\
    \ over Token Ring/IEEE\n   802.5, it will be necessary to adjust any admission\
    \ control\n   calculations according to the framing requirements as shown in Table\n\
    \   3.\n                   Table 3: Token Ring encapsulations\n   ---------------------------------------------------------------\n\
    \   Encapsulation                          Framing Overhead  IP MTU\n        \
    \                                     bytes/pkt       bytes\n   ---------------------------------------------------------------\n\
    \   IP EtherType over 802.1D/Q                    29          4370*\n   IP EtherType\
    \ over LLC/SNAP                    25          4370*\n   ---------------------------------------------------------------\n\
    \   *The suggested MTU from RFC 1042 [13] is 4464 bytes but there are\n   issues\
    \ related to discovering the maximum supported MTU between any\n   two points\
    \ both within and between Token Ring subnets.  The MTU\n   reported here is consistent\
    \ with the IEEE 802.5 Annex I\n   recommendation.\n"
- title: 4.4. Fiber Distributed Data Interface
  contents:
  - "4.4. Fiber Distributed Data Interface\n   The Fiber Distributed Data Interface\
    \ (FDDI) standard [16] provides a\n   priority mechanism that can be used to control\
    \ both the queuing of\n   packets for transmission and the access of packets to\
    \ the shared\n   media.  The priority mechanisms are implemented using similar\n\
    \   mechanisms to Token Ring described above.  The standard also makes\n   provision\
    \ for \"Synchronous\" data traffic with strict media access and\n   delay guarantees.\
    \  This mode of operation is not discussed further\n   here and represents area\
    \ within the scope of the ISSLL working group\n   that requires further work.\
    \  In the remainder of this document, for\n   the discussion of QoS mechanisms,\
    \ FDDI is treated as a 100 Mbps Token\n   Ring technology using a service interface\
    \ compatible with IEEE 802\n   networks.\n"
- title: 4.5. Demand Priority/IEEE 802.12
  contents:
  - "4.5. Demand Priority/IEEE 802.12\n   IEEE 802.12 [19] is a standard for a shared\
    \ 100 Mbps LAN. Data\n   packets are transmitted using either the IEEE 802.3 or\
    \ IEEE 802.5\n   frame format.  The MAC protocol is called Demand Priority.  Its\
    \ main\n   characteristics with respect to QoS are the support of two service\n\
    \   priority levels, normal priority and high priority, and the order of\n   service\
    \ for each of these.  Data packets from all network nodes (end\n   hosts and bridges/switches)\
    \ are served using a simple round robin\n   algorithm.\n   If the IEEE 802.3 frame\
    \ format is used for data transmission then the\n   user_priority is encoded in\
    \ the starting delimiter of the IEEE 802.12\n   data packet.  If the IEEE 802.5\
    \ frame format is used then the\n   user_priority is additionally encoded in the\
    \ YYY bits of the FC field\n   in the IEEE 802.5 packet header (see also Section\
    \ 4.3).  Furthermore,\n   the IEEE 802.1Q encapsulation with its own user_priority\
    \ field may\n   also be applied in IEEE 802.12 networks.  In all cases, switches\
    \ are\n   able to recover any user_priority supplied by a sender.\n   The same\
    \ rules apply for IEEE 802.12 user_priority mapping in a\n   bridge as with other\
    \ media types.  The only additional information is\n   that normal priority is\
    \ used by default for user_priority values 0\n   through 4 inclusive, and high\
    \ priority is used for user_priority\n   levels 5 through 7.  This ensures that\
    \ the default Token Ring\n   user_priority level of 4 for IEEE 802.5 bridges is\
    \ mapped to normal\n   priority on IEEE 802.12 segments.\n   The medium access\
    \ in IEEE 802.12 LANs is deterministic.  The Demand\n   Priority mechanism ensures\
    \ that, once the normal priority service has\n   been preempted, all high priority\
    \ packets have strict priority over\n   packets with normal priority.  In the\
    \ event that a normal priority\n   packet has been waiting at the head of line\
    \ of a MAC transmit queue\n   for a time period longer than PACKET_PROMOTION (200\
    \ - 300 ms) [19],\n   its priority is automatically promoted to high priority.\
    \  Thus, even\n   normal priority packets have a maximum guaranteed access time\
    \ to the\n   medium.\n   Integrated Services can be built on top of the IEEE 802.12\
    \ medium\n   access mechanism.  When combined with admission control and bandwidth\n\
    \   enforcement mechanisms, delay guarantees as required for a Guaranteed\n  \
    \ Service can be provided without any changes to the existing IEEE\n   802.12\
    \ MAC protocol.\n   Since the IEEE 802.12 standard supports the IEEE 802.3 and\
    \ IEEE 802.5\n   frame formats, the same framing overhead as reported in Sections\
    \ 4.2\n   and 4.3 must be considered in the admission control computations for\n\
    \   IEEE 802.12 links.\n"
- title: 5. Requirements and Goals
  contents:
  - "5. Requirements and Goals\n   This section discusses the requirements and goals\
    \ which should drive\n   the design of an architecture for supporting Integrated\
    \ Services over\n   LAN technologies.  The requirements refer to functions and\
    \ features\n   which must be supported, while goals refer to functions and features\n\
    \   which are desirable, but are not an absolute necessity.  Many of the\n   requirements\
    \ and goals are driven by the functionality supported by\n   Integrated Services\
    \ and RSVP.\n"
- title: 5.1. Requirements
  contents:
  - "5.1. Requirements\n   -  Resource Reservation:  The mechanism must be capable\
    \ of reserving\n      resources on a single segment or multiple segments and at\n\
    \      bridges/switches connecting them.  It must be able to provide\n      reservations\
    \ for both unicast and multicast sessions.  It should\n      be possible to change\
    \ the level of reservation while the session\n      is in progress.\n   -  Admission\
    \ Control:  The mechanism must be able to estimate the\n      level of resources\
    \ necessary to meet the QoS requested by the\n      session in order to decide\
    \ whether or not the session can be\n      admitted.  For the purpose of management,\
    \ it is useful to provide\n      the ability to respond to queries about availability\
    \ of resources.\n      It must be able to make admission control decisions for\
    \ different\n      types of services such as Guaranteed Service, Controlled Load,\n\
    \      etc.\n   -  Flow Separation and Scheduling:  It is necessary to provide\
    \ a\n      mechanism for traffic flow separation so that real time flows can\n\
    \      be given preferential treatment over best effort flows.  Packets\n    \
    \  of real time flows can then be isolated and scheduled according to\n      their\
    \ service requirements.\n   -  Policing/Shaping:  Traffic must be shaped and/or\
    \ policed by end\n      stations (workstations, routers) to ensure conformance\
    \ to\n      negotiated traffic parameters.  Shaping is the recommended\n     \
    \ behavior for traffic sources.  A router initiating an ISSLL\n      session must\
    \ have implemented traffic control mechanisms according\n      to the IntServ\
    \ requirements which would ensure that all flows sent\n      by the router are\
    \ in conformance.  The ISSLL mechanisms at the\n      link layer rely heavily\
    \ on the correct implementation of\n      policing/shaping mechanisms at higher\
    \ layers by devices capable of\n      doing so.  This is necessary because bridges\
    \ and switches are not\n      typically capable of maintaining per flow state\
    \ which would be\n      required to check flows for conformance.  Policing is\
    \ left as an\n      option for bridges and switches, which if implemented, may\
    \ be used\n      to enforce tighter control over traffic flows.  This issue is\n\
    \      further discussed in Section 8.\n   -  Soft State:  The mechanism must\
    \ maintain soft state information\n      about the reservations.  This means that\
    \ state information must\n      periodically be refreshed if the reservation is\
    \ to be maintained;\n      otherwise the state information and corresponding reservations\n\
    \      will expire after some pre-specified interval.\n   -  Centralized or Distributed\
    \ Implementation:  In the case of a\n      centralized implementation, a single\
    \ entity manages the resources\n      of the entire subnet.  This approach has\
    \ the advantage of being\n      easier to deploy since bridges and switches may\
    \ not need to be\n      upgraded with additional functionality.  However, this\
    \ approach\n      scales poorly with geographical size of the subnet and the number\n\
    \      of end stations attached.  In a fully distributed implementation,\n   \
    \   each segment will have a local entity managing its resources.\n      This\
    \ approach has better scalability than the former.  However, it\n      requires\
    \ that all bridges and switches in the network support new\n      mechanisms.\
    \  It is also possible to have a semi-distributed\n      implementation where\
    \ there is more than one entity, each managing\n      the resources of a subset\
    \ of segments and bridges/switches within\n      the subnet.  Ideally, implementation\
    \ should be flexible; i.e.  a\n      centralized approach may be used for small\
    \ subnets and a\n      distributed approach can be used for larger subnets.  Examples\
    \ of\n      centralized and distributed implementations are discussed in\n   \
    \   Section 6.\n   -  Scalability:  The mechanism and protocols should have a\
    \ low\n      overhead and should scale to the largest receiver groups likely to\n\
    \      occur within a single link layer domain.\n   -  Fault Tolerance and Recovery:\
    \  The mechanism must be able to\n      function in the presence of failures;\
    \ i.e.  there should not be a\n      single point of failure.  For instance, in\
    \ a centralized\n      implementation, some mechanism must be specified for back-up\
    \ and\n      recovery in the event of failure.\n   -  Interaction with Existing\
    \ Resource Management Controls:  The\n      interaction with existing infrastructure\
    \ for resource management\n      needs to be specified.  For example, FDDI has\
    \ a resource\n      management mechanism called the \"Synchronous Bandwidth Manager\"\
    .\n      The mechanism must be designed so that it takes advantage of, and\n \
    \     specifies the interaction with, existing controls where available.\n"
- title: 5.2. Goals
  contents:
  - "5.2. Goals\n   -  Independence from higher layer protocols:  The mechanism should,\n\
    \      as far as possible, be independent of higher layer protocols such\n   \
    \   as RSVP and IP. Independence from RSVP is desirable so that it can\n     \
    \ interwork with other reservation protocols such as ST2 [10].\n      Independence\
    \ from IP is desirable so that it can interwork with\n      other network layer\
    \ protocols such as IPX, NetBIOS, etc.\n   -  Receiver heterogeneity:  this refers\
    \ to multicast communication\n      where different receivers request different\
    \ levels of service.\n      For example, in a multicast group with many receivers,\
    \ it is\n      possible that one of the receivers desires a lower delay bound\n\
    \      than the others.  A better delay bound may be provided by\n      increasing\
    \ the amount of resources reserved along the path to that\n      receiver while\
    \ leaving the reservations for the other receivers\n      unchanged.  In its most\
    \ complex form, receiver heterogeneity\n      implies the ability to simultaneously\
    \ provide various levels of\n      service as requested by different receivers.\
    \  In its simplest\n      form, receiver heterogeneity will allow a scenario where\
    \ some of\n      the receivers use best effort service and those requiring service\n\
    \      guarantees make a reservation.  Receiver heterogeneity, especially\n  \
    \    for the reserved/best effort scenario, is a very desirable\n      function.\
    \  More details on supporting receiver heterogeneity are\n      provided in Section\
    \ 8.\n   -  Support for different filter styles:  It is desirable to provide\n\
    \      support for the different filter styles defined by RSVP such as\n     \
    \ fixed filter, shared explicit and wildcard.  Some of the issues\n      with\
    \ respect to supporting such filter styles in the link layer\n      domain are\
    \ examined in Section 8.\n   -  Path Selection:  In source routed LAN technologies\
    \ such as Token\n      Ring/IEEE 802.5, it may be useful for the mechanism to\
    \ incorporate\n      the function of path selection.  Using an appropriate path\n\
    \      selection mechanism may optimize utilization of network resources.\n"
- title: 5.3. Non-goals
  contents:
  - "5.3. Non-goals\n   This document describes service mappings onto existing IEEE\
    \ and ANSI\n   defined standard MAC layers and uses standard MAC layer services\
    \ as\n   in IEEE 802.1 bridging.  It does not attempt to make use of or\n   describe\
    \ the capabilities of other proprietary or standard MAC layer\n   protocols although\
    \ it should be noted that published work regarding\n   MAC layers suitable for\
    \ QoS mappings exists.  These are outside the\n   scope of the ISSLL working group\
    \ charter.\n"
- title: 5.4. Assumptions
  contents:
  - "5.4. Assumptions\n   This framework assumes that typical subnetworks that are\
    \ concerned\n   about QoS will be \"switch rich\"; i.e. most communication between\
    \ end\n   stations using integrated services support is expected to pass\n   through\
    \ at least one switch.  The mechanisms and protocols described\n   will be trivially\
    \ extensible to communicating systems on the same\n   shared medium, but it is\
    \ important not to allow problem\n   generalization which may complicate the targeted\
    \ practical\n   application to switch rich LAN topologies.  There have also been\n\
    \   developments in the area of MAC enhancements to ensure delay\n   deterministic\
    \ access on network links e.g.  IEEE 802.12 [19] and also\n   proprietary schemes.\n\
    \   Although we illustrate most examples for this model using RSVP as the\n  \
    \ upper layer QoS signaling protocol, there are actually no real\n   dependencies\
    \ on this protocol.  RSVP could be replaced by some other\n   dynamic protocol,\
    \ or the requests could be made by network management\n   or other policy entities.\
    \  The SBM signaling protocol [14], which is\n   based upon RSVP, is designed\
    \ to work seamlessly in the architecture\n   described in this memo.\n   There\
    \ may be a heterogeneous mix of switches with different\n   capabilities, all\
    \ compliant with IEEE 802.1D [2,3], but implementing\n   varied queuing and forwarding\
    \ mechanisms ranging from simple systems\n   with two queues per port and static\
    \ priority scheduling, to more\n   complex systems with multiple queues using\
    \ WFQ or other algorithms.\n   The problem is decomposed into smaller independent\
    \ parts which may\n   lead to sub-optimal use of the network resources but we\
    \ contend that\n   such benefits are often equivalent to very small improvement\
    \ in\n   network efficiency in a LAN environment.  Therefore, it is a goal\n \
    \  that the switches in a network operate using a much simpler set of\n   information\
    \ than the RSVP engine in a router.  In particular, it is\n   assumed that such\
    \ switches do not need to implement per flow queuing\n   and policing (although\
    \ they are not precluded from doing so).\n   A fundamental assumption of the IntServ\
    \ model is that flows are\n   isolated from each other throughout their transit\
    \ across a network.\n   Intermediate queuing nodes are expected to shape or police\
    \ the\n   traffic to ensure conformance to the negotiated traffic flow\n   specification.\
    \  In the architecture proposed here for mapping to\n   Layer 2, we diverge from\
    \ that assumption in the interest of\n   simplicity.  The policing/shaping functions\
    \ are assumed to be\n   implemented in end stations.  In some LAN environments,\
    \ it is\n   reasonable to assume that end stations are trusted to adhere to their\n\
    \   negotiated contracts at the inputs to the network, and that we can\n   afford\
    \ to over-allocate resources during admission control to\n   compensate for the\
    \ inevitable packet jitter/bunching introduced by\n   the switched network itself.\
    \  This divergence has some implications\n   on the types of receiver heterogeneity\
    \ that can be supported and the\n   statistical multiplexing gains that may be\
    \ exploited, especially for\n   Controlled Load flows.  This is discussed in Section\
    \ 8.7 of this\n   document.\n"
- title: 6. Basic Architecture
  contents:
  - "6. Basic Architecture\n   The functional requirements described in Section 5\
    \ will be performed\n   by an entity which we refer to as the Bandwidth Manager\
    \ (BM). The BM\n   is responsible for providing mechanisms for an application\
    \ or higher\n   layer protocol to request QoS from the network.  For architectural\n\
    \   purposes, the BM consists of the following components.\n"
- title: 6.1. Components
  contents:
  - '6.1. Components

    '
- title: 6.1.1. Requester Module
  contents:
  - "6.1.1. Requester Module\n   The Requester Module (RM) resides in every end station\
    \ in the subnet.\n   One of its functions is to provide an interface between applications\n\
    \   or higher layer protocols such as RSVP, ST2, SNMP, etc.  and the BM.\n   An\
    \ application can invoke the various functions of the BM by using\n   the primitives\
    \ for communication with the RM and providing it with\n   the appropriate parameters.\
    \  To initiate a reservation, in the link\n   layer domain, the following parameters\
    \ must be passed to the RM: the\n   service desired (Guaranteed Service or Controlled\
    \ Load), the traffic\n   descriptors contained in the TSpec, and an RSpec specifying\
    \ the\n   amount of resources to be reserved [9].  More information on these\n\
    \   parameters may be found in the relevant Integrated Services documents\n  \
    \ [6,7,8,9].  When RSVP is used for signaling at the network layer,\n   this information\
    \ is available and needs to be extracted from the RSVP\n   PATH and RSVP RESV\
    \ messages (See [5] for details).  In addition to\n   these parameters, the network\
    \ layer addresses of the end points must\n   be specified.  The RM must then translate\
    \ the network layer addresses\n   to link layer addresses and convert the request\
    \ into an appropriate\n   format which is understood by other components of the\
    \ BM responsible\n   admission control.  The RM is also responsible for returning\
    \ the\n   status of requests processed by the BM to the invoking application or\n\
    \   higher layer protocol.\n"
- title: 6.1.2. Bandwidth Allocator
  contents:
  - "6.1.2. Bandwidth Allocator\n   The Bandwidth Allocator (BA) is responsible for\
    \ performing admission\n   control and maintaining state about the allocation\
    \ of resources in\n   the subnet.  An end station can request various services,\
    \ e.g.\n   bandwidth reservation, modification of an existing reservation,\n \
    \  queries about resource availability, etc.  These requests are\n   processed\
    \ by the BA. The communication between the end station and\n   the BA takes place\
    \ through the RM. The location of the BA will depend\n   largely on the implementation\
    \ method.  In a centralized\n   implementation, the BA may reside on a single\
    \ station in the subnet.\n   In a distributed implementation, the functions of\
    \ the BA may be\n   distributed in all the end stations and bridges/switches as\n\
    \   necessary.  The BA is also responsible for deciding how to label\n   flows,\
    \ e.g.  based on the admission control decision, the BA may\n   indicate to the\
    \ RM that packets belonging to a particular flow be\n   tagged with some priority\
    \ value which maps to the appropriate traffic\n   class.\n"
- title: 6.1.3. Communication Protocols
  contents:
  - "6.1.3. Communication Protocols\n   The protocols for communication between the\
    \ various components of the\n   BM system must be specified.  These include the\
    \ following:\n   -  Communication between the higher layer protocols and the RM:\
    \  The\n      BM must define primitives for the application to initiate\n    \
    \  reservations, query the BA about available resources, change\n      change\
    \ or delete reservations, etc.  These primitives could be\n      implemented as\
    \ an API for an application to invoke functions of\n      the BM via the RM.\n\
    \   -  Communication between the RM and the BA: A signaling mechanism\n      must\
    \ be defined for the communication between the RM and the BA.\n      This protocol\
    \ will specify the messages which must be exchanged\n      between the RM and\
    \ the BA in order to service various requests by\n      the higher layer entity.\n\
    \   -  Communication between peer BAs:  If there is more than one BA in\n    \
    \  the subnet, a means must be specified for inter-BA communication.\n      Specifically,\
    \ the BAs must be able to decide among themselves\n      about which BA would\
    \ be responsible for which segments and bridges\n      or switches.  Further,\
    \ if a request is made for resource\n      reservation along the domain of multiple\
    \ BAs, the BAs must be able\n      to handle such a scenario correctly.  Inter-BA\
    \ communication will\n      also be responsible for back-up and recovery in the\
    \ event of\n      failure.\n"
- title: 6.2. Centralized vs.  Distributed Implementations
  contents:
  - "6.2. Centralized vs.  Distributed Implementations\n   Example scenarios are provided\
    \ showing the location of the components\n   of the bandwidth manager in centralized\
    \ and fully distributed\n   implementations.  Note that in either case, the RM\
    \ must be present in\n   all end stations that need to make reservations.  Essentially,\n\
    \   centralized or distributed refers to the implementation of the BA,\n   the\
    \ component responsible for resource reservation and admission\n   control.  In\
    \ the figures below, \"App\" refers to the application\n   making use of the BM.\
    \ It could either be a user application, or a\n   higher layer protocol process\
    \ such as RSVP.\n                                +---------+\n               \
    \             .-->|  BA     |<--.\n                           /    +---------+\
    \    \\\n                          / .-->| Layer 2 |<--. \\\n                \
    \         / /    +---------+    \\ \\\n                        / /           \
    \          \\ \\\n                       / /                       \\ \\\n   +---------+\
    \        / /                         \\ \\       +---------+\n   |  App    |<-----\
    \ /-/---------------------------\\-\\----->|  App    |\n   +---------+      /\
    \ /                             \\ \\     +---------+\n   |  RM     |<----. /\
    \                               \\ .--->|  RM     |\n   +---------+      / +---------+\
    \        +---------+  \\     +---------+\n   | Layer 2 |<------>| Layer 2 |<------>|\
    \ Layer 2 |<------>| Layer 2 |\n   +---------+        +---------+        +---------+\
    \        +---------+\n   RSVP Host/         Intermediate       Intermediate  \
    \     RSVP Host/\n      Router          Bridge/Switch      Bridge/Switch     \
    \    Router\n     Figure 1: Bandwidth Manager with centralized Bandwidth Allocator\n\
    \   Figure 1 shows a centralized implementation where a single BA is\n   responsible\
    \ for admission control decisions for the entire subnet.\n   Every end station\
    \ contains a RM. Intermediate bridges and switches in\n   the network need not\
    \ have any functions of the BM since they will not\n   be actively participating\
    \ in admission control.  The RM at the end\n   station requesting a reservation\
    \ initiates communication with its BA.\n   For larger subnets, a single BA may\
    \ not be able to handle the\n   reservations for the entire subnet.  In that case\
    \ it would be\n   necessary to deploy multiple BAs, each managing the resources\
    \ of a\n   non-overlapping subset of segments.  In a centralized implementation,\n\
    \   the BA must have some knowledge of the Layer 2 topology of the subnet\n  \
    \ e.g., link layer spanning tree information, in order to be able to\n   reserve\
    \ resources on appropriate segments.  Without this topology\n   information, the\
    \ BM would have to reserve resources on all segments\n   for all flows which,\
    \ in a switched network, would lead to very\n   inefficient utilization of resources.\n\
    \   +---------+                                              +---------+\n   |\
    \  App    |<-------------------------------------------->|  App    |\n   +---------+\
    \        +---------+        +---------+        +---------+\n   |  RM/BA  |<------>|\
    \  BA     |<------>|  BA     |<------>|  RM/BA  |\n   +---------+        +---------+\
    \        +---------+        +---------+\n   | Layer 2 |<------>| Layer 2 |<------>|\
    \ Layer 2 |<------>| Layer 2 |\n   +---------+        +---------+        +---------+\
    \        +---------+\n   RSVP Host/         Intermediate       Intermediate  \
    \     RSVP Host/\n      Router          Bridge/Switch      Bridge/Switch     \
    \    Router\n                  Figure 2: Bandwidth Manager with fully\n      \
    \               distributed Bandwidth Allocator\n   Figure 2 depicts the scenario\
    \ of a fully distributed bandwidth\n   manager.  In this case, all devices in\
    \ the subnet have BM\n   functionality.  All the end hosts are still required\
    \ to have a RM. In\n   addition, all stations actively participate in admission\
    \ control.\n   With this approach, each BA would need only local topology\n  \
    \ information since it is responsible for the resources on segments\n   that are\
    \ directly connected to it.  This local topology information,\n   such as a list\
    \ of ports active on the spanning tree and which unicast\n   addresses are reachable\
    \ from which ports, is readily available in\n   today's switches.  Note that in\
    \ the figures above, the arrows between\n   peer layers are used to indicate logical\
    \ connectivity.\n"
- title: 7. Model of the Bandwidth Manager in a Network
  contents:
  - "7. Model of the Bandwidth Manager in a Network\n   In this section we describe\
    \ how the model above fits with the\n   existing IETF Integrated Services model\
    \ of IP hosts and routers.\n   First, we describe Layer 3 host and router implementations.\
    \  Next, we\n   describe how the model is applied in Layer 2 switches.  Throughout\
    \ we\n   indicate any differences between centralized and distributed\n   implementations.\
    \  Occasional references are made to terminology from\n   the Subnet Bandwidth\
    \ Manager specification [14].\n"
- title: 7.1. End Station Model
  contents:
  - '7.1. End Station Model

    '
- title: 7.1.1. Layer 3 Client Model
  contents:
  - "7.1.1. Layer 3 Client Model\n   We assume the same client model as IntServ and\
    \ RSVP where we use the\n   term \"client\" to mean the entity handling QoS in\
    \ the Layer 3 device\n   at each end of a Layer 2 Domain.  In this model, the\
    \ sending client\n   is responsible for local admission control and packet scheduling\
    \ onto\n   its link in accordance with the negotiated service.  As with the\n\
    \   IntServ model, this involves per flow scheduling with possible\n   traffic\
    \ shaping/policing in every such originating node.\n   For now, we assume that\
    \ the client runs an RSVP process which\n   presents a session establishment interface\
    \ to applications, provides\n   signaling over the network, programs a scheduler\
    \ and classifier in\n   the driver, and interfaces to a policy control module.\
    \  In\n   particular, RSVP also interfaces to a local admission control module\n\
    \   which is the focus of this section.\n   The following figure, reproduced from\
    \ the RSVP specification, depicts\n   the RSVP process in sending hosts.\n   \
    \                  +-----------------------------+\n                     | +-------+\
    \  +-------+        |   RSVP\n                     | |Appli- |  | RSVP  <------------------->\n\
    \                     | | cation<-->       |        |\n                     |\
    \ |       |  |process| +-----+|\n                     | +-+-----+  |       +->Polcy||\n\
    \                     |   |        +--+--+-+ |Cntrl||\n                     |\
    \   |data       |  |   +-----+|\n                     |===|===========|==|==========|\n\
    \                     |   |  +--------+  |   +-----+|\n                     |\
    \   |  |        |  +--->Admis||\n                     | +-V--V-+  +---V----+ |Cntrl||\n\
    \                     | |Class-|  | Packet | +-----+|\n                     |\
    \ | ifier|==>Schedulr|===================>\n                     | +------+  +--------+\
    \        |    data\n                     +-----------------------------+\n   \
    \                 Figure 3: RSVP in Sending Hosts\n"
- title: 7.1.2. Requests to Layer 2 ISSLL
  contents:
  - "7.1.2. Requests to Layer 2 ISSLL\n   The local admission control entity within\
    \ a client is responsible for\n   mapping Layer 3 session establishment requests\
    \ into Layer 2\n   semantics.\n   The upper layer entity makes a request, in generalized\
    \ terms to ISSLL\n   of the form:\n      \"May I reserve for traffic with <traffic\
    \ characteristic> with\n      <performance requirements> from <here> to <there>\
    \ and how should I\n      label it?\"\n   where\n   <traffic characteristic> =\
    \ Sender Tspec (e.g. bandwidth, burstiness,\n   MTU)\n   <performance requirements>\
    \ = FlowSpec (e.g. latency, jitter bounds)\n   <here> = IP address(es)\n   <there>\
    \ = IP address(es) - may be multicast\n"
- title: 7.1.3. At the Layer 3 Sender
  contents:
  - "7.1.3. At the Layer 3 Sender\n   The ISSLL functionality in the sender is illustrated\
    \ in Figure 4.\n   The functions of the Requester Module may be summarized as\
    \ follows:\n   -  Maps the endpoints of the conversation to Layer 2 addresses\
    \ in the\n      LAN, so that the client can determine what traffic is going where.\n\
    \      This function probably makes reference to the ARP protocol cache\n    \
    \  for unicast or performs an algorithmic mapping for multicast\n      destinations.\n\
    \   -  Communicates with any local Bandwidth Allocator module for local\n    \
    \  admission control decisions.\n   -  Formats a SBM request to the network with\
    \ the mapped addresses and\n      flow/filter specs.\n   -  Receives a response\
    \ from the network and reports the admission\n      control decision to the higher\
    \ layer entity, along with any\n      negotiated modifications to the session\
    \ parameters.\n   -  Saves any returned user_priority to be associated with this\n\
    \      session in a \"802 header\" table.  This will be used when\n      constructing\
    \ the Layer 2 headers for future data packets belonging\n      to this session.\
    \  This table might, for example, be indexed by the\n      RSVP flow identifier.\n\
    \                    from IP     from RSVP\n                  +----|------------|------------+\n\
    \                  | +--V----+   +---V---+        |\n                  | | Addr\
    \  <--->       |        | SBM signaling\n                  | |mapping|   |Request|<----------------------->\n\
    \                  | +---+---+   |Module |        |\n                  |     |\
    \       |       |        |\n                  | +---+---+   |       |        |\n\
    \                  | |  802  <--->       |        |\n                  | | header|\
    \   +-+-+-+-+        |\n                  | +--+----+    /  | |          |\n \
    \                 |    |        /   | |  +-----+ |\n                  |    | +-----+\
    \    | +->|Band-| |\n                  |    | |          |    |width| |\n    \
    \              | +--V-V-+  +-----V--+ |Alloc| |\n                  | |Class-|\
    \  | Packet | +-----+ |\n                  | | ifier|==>Schedulr|=========================>\n\
    \                  | +------+  +--------+         |  data\n                  +------------------------------+\n\
    \                Figure 4: ISSLL in a Sending End Station\n   The Bandwidth Allocator\
    \ (BA) component is only present when a\n   distributed BA model is implemented.\
    \  When present, its function is\n   basically to apply local admission control\
    \ for the outgoing link\n   bandwidth and driver's queuing resources.\n"
- title: 7.1.4. At the Layer 3 Receiver
  contents:
  - "7.1.4. At the Layer 3 Receiver\n   The ISSLL functionality in the receiver is\
    \ simpler and is illustrated\n   in Figure 5.\n   The functions of the Requester\
    \ Module may be summarized as follows:\n   -  Handles any received SBM protocol\
    \ indications.\n   -  Communicates with any local BA for local admission control\n\
    \      decisions.\n   -  Passes indications up to RSVP if OK.\n   -  Accepts confirmations\
    \ from RSVP and relays them back via SBM\n      signaling towards the requester.\n\
    \                          to RSVP       to IP\n                            ^\
    \            ^\n                       +----|------------|------+\n          \
    \             | +--+----+       |      |\n         SBM signaling | |Request| \
    \  +---+---+  |\n         <-------------> |Module |   | Strip |  |\n         \
    \              | +--+---++   |802 hdr|  |\n                       |    |    \\\
    \   +---^---+  |\n                       | +--v----+\\      |      |\n       \
    \                | | Band- | \\     |      |\n                       | |  width|\
    \  \\    |      |\n                       | | Alloc |   .   |      |\n       \
    \                | +-------+   |   |      |\n                       | +------+\
    \   +v---+----+ |\n         data          | |Class-|   | Packet  | |\n       \
    \  <==============>| ifier|==>|Scheduler| |\n                       | +------+\
    \   +---------+ |\n                       +------------------------+\n       \
    \        Figure 5: ISSLL in a Receiving End Station\n   -  May program a receive\
    \ classifier and scheduler, if used, to\n      identify traffic classes of received\
    \ packets and accord them\n      appropriate treatment e.g., reservation of buffers\
    \ for particular\n      traffic classes.\n   -  Programs the receiver to strip\
    \ away link layer header information\n      from received packets.\n   The Bandwidth\
    \ Allocator, present only in a distributed implementation\n   applies local admission\
    \ control to see if a request can be supported\n   with appropriate local receive\
    \ resources.\n"
- title: 7.2. Switch Model
  contents:
  - '7.2. Switch Model

    '
- title: 7.2.1. Centralized Bandwidth Allocator
  contents:
  - "7.2.1. Centralized Bandwidth Allocator\n   Where a centralized Bandwidth Allocator\
    \ model is implemented,\n   switches do not take part in the admission control\
    \ process.\n   Admission control is implemented by a centralized BA, e.g., a \"\
    Subnet\n   Bandwidth Manager\" (SBM) as described in [14].  This centralized BA\n\
    \   may actually be co-located with a switch but its functions would not\n   necessarily\
    \ then be closely tied with the switch's forwarding\n   functions as is the case\
    \ with the distributed BA described below.\n"
- title: 7.2.2. Distributed Bandwidth Allocator
  contents:
  - "7.2.2. Distributed Bandwidth Allocator\n   The model of Layer 2 switch behavior\
    \ described here uses the\n   terminology of the SBM protocol as an example of\
    \ an admission control\n   protocol.  The model is equally applicable when other\
    \ mechanisms,\n   e.g.  static configuration or network management, are in use\
    \ for\n   admission control.  We define the following entities within the\n  \
    \ switch:\n   -  Local Admission Control Module:  One of these on each port\n\
    \      accounts for the available bandwidth on the link attached to that\n   \
    \   port.  For half duplex links, this involves taking account of the\n      resources\
    \ allocated to both transmit and receive flows.  For full\n      duplex links,\
    \ the input port accountant's task is trivial.\n   -  Input SBM Module:  One instance\
    \ on each port performs the\n      \"network\" side of the signaling protocol\
    \ for peering with clients\n      or other switches.  It also holds knowledge\
    \ about the mappings of\n      IntServ classes to user_priority.\n   -  SBM Propagation\
    \ Module:  Relays requests that have passed\n      admission control at the input\
    \ port to the relevant output ports'\n      SBM modules.  This will require access\
    \ to the switch's forwarding\n      table (Layer-2 \"routing table\" cf.  RSVP\
    \ model) and port spanning\n      tree state.\n   -  Output SBM Module:  Forwards\
    \ requests to the next Layer 2 or Layer\n      3 hop.\n   -  Classifier, Queue\
    \ and Scheduler Module:  The functions of this\n      module are basically as\
    \ described by the Forwarding Process of\n      IEEE 802.1D (see Section 3.7 of\
    \ [3]).  The Classifier module\n      identifies the relevant QoS information\
    \ from incoming packets and\n      uses this, together with the normal bridge\
    \ forwarding database, to\n      decide at which output port and traffic class\
    \ to enqueue the\n      packet.  Different types of switches will use different\
    \ techniques\n      for flow identification (see Section 8.1).  In IEEE 802.1D\n\
    \      switches this information is the regenerated user_priority\n      parameter\
    \ which has already been decoded by the receiving MAC\n      service and potentially\
    \ remapped by the forwarding process (see\n      Section 3.7.3 of [3]).  This\
    \ does not preclude more sophisticated\n      classification rules such as the\
    \ classification of individual\n      IntServ flows.  The Queue and Scheduler\
    \ implement the\n      output queues for ports and provide the algorithm for servicing\n\
    \      the queues for transmission onto the output link in order to\n      provide\
    \ the promised IntServ service.  Switches will implement one\n      or more output\
    \ queues per port and all will implement at least a\n      basic static priority\
    \ dequeuing algorithm as their default, in\n      accordance with IEEE 802.1D.\n\
    \   -  Ingress Traffic Class Mapping and Policing Module:  Its functions\n   \
    \   are as described in IEEE 802.1D Section 3.7.  This optional module\n     \
    \ may police the data within traffic classes for conformance to the\n      negotiated\
    \ parameters, and may discard packets or re-map the\n      user_priority.  The\
    \ default behavior is to pass things through\n      unchanged.\n   -  Egress Traffic\
    \ Class Mapping Module:  Its functions are as\n      described in IEEE 802.1D\
    \ Section 3.7.  This optional module may\n      perform re-mapping of traffic\
    \ classes on a per output port basis.\n      The default behavior is to pass things\
    \ through unchanged.\n   Figure 6 shows all of the modules in an ISSLL enabled\
    \ switch.  The\n   ISSLL model is a superset of the IEEE 802.1D bridge model.\n\
    \                     +-------------------------------+\n    SBM signaling   \
    \ | +-----+   +------+   +------+ | SBM signaling\n   <------------------>| IN\
    \  |<->| SBM  |<->| OUT  |<---------------->\n                     | | SBM | \
    \  | prop.|   | SBM  | |\n                     | +-++--+   +---^--+   /----+-+\
    \ |\n                     |  / |          |     /     |   |\n       ______________|\
    \ /  |          |     |     |   +-------------+\n      | \\             /+--V--+\
    \       |     |  +--V--+            / |\n      |   \\      ____/ |Local|     \
    \  |     |  |Local|          /   |\n      |     \\   /      |Admis|       |  \
    \   |  |Admis|        /     |\n      |       \\/       |Cntrl|       |     | \
    \ |Cntrl|      /       |\n      | +-----V+\\      +-----+       |     |  +-----+\
    \    /+-----+  |\n      | |traff |  \\              +---+--+ +V-------+   /  |egrss|\
    \  |\n      | |class |    \\            |Filter| |Queue & | /    |traff|  |\n\
    \      | |map & |=====|==========>|Data- |=| Packet |=|===>|class|  |\n      |\
    \ |police|     |           |  base| |Schedule| |    |map  |  |\n      | +------+\
    \     |           +------+ +--------+ |    +-+---+  |\n      +----^---------+-------------------------------+------|------+\n\
    \   data in |                                                |data out\n   ========+\
    \                                                +========>\n                \
    \      Figure 6: ISSLL in a Switch\n"
- title: 7.3. Admission Control
  contents:
  - "7.3. Admission Control\n   On receipt of an admission control request, a switch\
    \ performs the\n   following actions, again using SBM as an example.  The behavior\
    \ is\n   different depending on whether the \"Designated SBM\" for this segment\n\
    \   is within this switch or not.  See [14] for a more detailed\n   specification\
    \ of the DSBM/SBM actions.\n   -  If the ingress SBM is the \"Designated SBM\"\
    \ for this link, it\n      either translates any received user_priority or selects\
    \ a Layer 2\n      traffic class which appears compatible with the request and\
    \ whose\n      use does not violate any administrative policies in force.  In\n\
    \      effect, it matches the requested service with the available\n      traffic\
    \ classes and chooses the \"best\" one.  It ensures that, if\n      this reservation\
    \ is successful, the value of user_priority\n      corresponding to that traffic\
    \ class is passed back to the client.\n   -  The ingress DSBM observes the current\
    \ state of allocation of\n      resources on the input port/link and then determines\
    \ whether the\n      new resource allocation from the mapped traffic class can\
    \ be\n      accommodated.  The request is passed to the reservation propagator\n\
    \      if accepted.\n   -  If the ingress SBM is not the \"Designated SBM\" for\
    \ this link then\n      it directly passes the request on to the reservation propagator.\n\
    \   -  The reservation propagator relays the request to the bandwidth\n      accountants\
    \ on each of the switch's outbound links to which this\n      reservation would\
    \ apply.  This implies an interface to\n      routing/forwarding database.\n \
    \  -  The egress bandwidth accountant observes the current state of\n      allocation\
    \ of queuing resources on its outbound port and bandwidth\n      on the link itself\
    \ and determines whether the new allocation can\n      be accommodated.  Note\
    \ that this is only a local decision at this\n      switch hop; further Layer\
    \ 2 hops through the network may veto the\n      request as it passes along.\n\
    \   -  The request, if accepted by this switch, is propagated on each\n      output\
    \ link selected.  Any user_priority described in the\n      forwarded request\
    \ must be translated according to any egress\n      mapping table.\n   -  If accepted,\
    \ the switch must notify the client of the\n      user_priority to be used for\
    \ packets belonging to that flow.\n      Again, this is an optimistic approach\
    \ assuming that admission\n      control succeeds; downstream switches may refuse\
    \ the request.\n   -  If this switch wishes to reject the request, it can do so\
    \ by\n      notifying the client that originated the request by means of its\n\
    \      Layer 2 address.\n"
- title: 7.4. QoS Signaling
  contents:
  - "7.4. QoS Signaling\n   The mechanisms described in this document make use of\
    \ a signaling\n   protocol for devices to communicate their admission control\
    \ requests\n   across the network.  The service definitions to be provided by\
    \ such a\n   protocol e.g.  [14] are described below.  We illustrate the\n   primitives\
    \ and information that need to be exchanged with such a\n   signaling protocol\
    \ entity.  In all of the examples, appropriate\n   delete/cleanup mechanisms will\
    \ also have to be provided for tearing\n   down established sessions.\n"
- title: 7.4.1. Client Service Definitions
  contents:
  - "7.4.1. Client Service Definitions\n   The following interfaces can be identified\
    \ from Figures 4 and 5.\n   -  SBM <-> Address Mapping\n      This is a simple\
    \ lookup function which may require ARP protocol\n      interactions or an algorithmic\
    \ mapping.  The Layer 2 addresses are\n      needed by SBM for inclusion in its\
    \ signaling messages to avoid\n      requiring that switches participating in\
    \ the signaling have Layer\n      3 information to perform the mapping.\n    \
    \  l2_addr = map_address( ip_addr )\n   -  SBM <-> Session/Link Layer Header\n\
    \      This is for notifying the transmit path of how to add Layer 2\n      header\
    \ information, e.g.  user_priority values to the traffic of\n      each outgoing\
    \ flow.  The transmit path will provide the\n      user_priority value when it\
    \ requests a MAC layer transmit\n      operation for each packet.  The user_priority\
    \ is one of the\n      parameters passed in the packet transmit primitive defined\
    \ by the\n      IEEE 802 service model.\n      bind_l2_header( flow_id, user_priority\
    \ )\n   -  SBM <-> Classifier/Scheduler\n      This is for notifying transmit\
    \ classifier/scheduler of any\n      additional Layer 2 information associated\
    \ with scheduling the\n      transmission of a packet flow.  This primitive may\
    \ be unused in\n      some implementations or it may be used, for example, to\
    \ provide\n      information to a transmit scheduler that is performing per traffic\n\
    \      class scheduling in addition to the per flow scheduling required\n    \
    \  by IntServ; the Layer 2 header may be a pattern (in addition to\n      the\
    \ FilterSpec) to be used to identify the flow's traffic.\n      bind_l2schedulerinfo(\
    \ flow_id, , l2_header, traffic_class )\n   -  SBM <-> Local Admission Control\n\
    \      This is used for applying local admission control for a session\n     \
    \ e.g.  is there enough transmit bandwidth still uncommitted for\n      this new\
    \ session?  Are there sufficient receive buffers?  This\n      should commit the\
    \ necessary resources if it succeeds.  It will be\n      necessary to release\
    \ these resources at a later stage if the\n      admission control fails at a\
    \ subsequent node.  This call would be\n      made, for example, by a segment's\
    \ Designated SBM.\n      status = admit_l2session( flow_id, Tspec, FlowSpec )\n\
    \   -  SBM <-> RSVP\n      This is outlined above in Section 7.1.2 and fully described\
    \ in\n      [14].\n   -  Management Interfaces\n      Some or all of the modules\
    \ described by this model will also\n      require configuration management. \
    \ It is expected that details of\n      the manageable objects will be specified\
    \ by future work in the\n      ISSLL WG.\n"
- title: 7.4.2. Switch Service Definitions
  contents:
  - "7.4.2. Switch Service Definitions\n   The following interfaces are identified\
    \ from Figure 6.\n   -  SBM <-> Classifier\n      This is for notifying the receive\
    \ classifier of how to match\n      incoming Layer 2 information with the associated\
    \ traffic class.\n      It may in some cases consist of a set of read only default\n\
    \      mappings.\n      bind_l2classifierinfo( flow_id, l2_header, traffic_class\
    \ )\n   -  SBM <-> Queue and Packet Scheduler\n      This is for notifying transmit\
    \ scheduler of additional Layer 2\n      information associated with a given traffic\
    \ class.  It may be\n      unused in some cases (see discussion in previous section).\n\
    \      bind_l2schedulerinfo( flow_id, l2_header, traffic_class )\n   -  SBM <->\
    \ Local Admission Control\n      Same as for the host discussed above.\n   - \
    \ SBM <-> Traffic Class Map and Police\n      Optional configuration of any user_priority\
    \ remapping that might\n      be implemented on ingress to and egress from the\
    \ ports of a\n      switch.  For IEEE 802.1D switches, it is likely that these\n\
    \      mappings will have to be consistent across all ports.\n      bind_l2ingressprimap(\
    \ inport, in_user_pri, internal_priority )\n      bind_l2egressprimap( outport,\
    \ internal_priority, out_user_pri )\n      Optional configuration of any Layer\
    \ 2 policing function to be\n      applied on a per class basis to traffic matching\
    \ the Layer 2\n      header.  If the switch is capable of per flow policing then\n\
    \      existing IntServ/RSVP models will provide a service definition for\n  \
    \    that configuration.\n      bind_l2policing( flow_id, l2_header, Tspec, FlowSpec\
    \ )\n   -  SBM <-> Filtering Database\n      SBM propagation rules need access\
    \ to the Layer 2 forwarding\n      database to determine where to forward SBM\
    \ messages.  This is\n      analogous to RSRR interface in Layer 3 RSVP.\n   \
    \   output_portlist = lookup_l2dest( l2_addr )\n   -  Management Interfaces\n\
    \      Some or all of the modules described by this model will also\n      require\
    \ configuration management.  It is expected that details of\n      the manageable\
    \ objects will be specified by future work in the\n      ISSLL working group.\n"
- title: 8. Implementation Issues
  contents:
  - "8. Implementation Issues\n   As stated earlier, the Integrated Services working\
    \ group has defined\n   various service classes offering varying degrees of QoS\
    \ guarantees.\n   Initial effort will concentrate on enabling the Controlled Load\
    \ [6]\n   and Guaranteed Service classes [7].  The Controlled Load service\n \
    \  provides a loose guarantee, informally stated as \"the same as best\n   effort\
    \ would be on an unloaded network\".  The Guaranteed Service\n   provides an upper\
    \ bound on the transit delay of any packet.  The\n   extent to which these services\
    \ can be supported at the link layer\n   will depend on many factors including\
    \ the topology and technology\n   used.  Some of the mapping issues are discussed\
    \ below in light of the\n   emerging link layer standards and the functions supported\
    \ by higher\n   layer protocols.  Considering the limitations of some of the\n\
    \   topologies, it may not be possible to satisfy all the requirements\n   for\
    \ Integrated Services on a given topology.  In such cases, it is\n   useful to\
    \ consider providing support for an approximation of the\n   service which may\
    \ suffice in most practical instances.  For example,\n   it may not be feasible\
    \ to provide policing/shaping at each network\n   element (bridge/switch) as required\
    \ by the Controlled Load\n   specification.  But if this task is left to the end\
    \ stations, a\n   reasonably good approximation to the service can be obtained.\n"
- title: 8.1. Switch Characteristics
  contents:
  - "8.1. Switch Characteristics\n   There are many LAN bridges/switches with varied\
    \ capabilities for\n   supporting QoS. We discuss below the various kinds of devices\
    \ that\n   that one may expect to find in a LAN environment.\n   The most basic\
    \ bridge is one which conforms to the IEEE 802.1D\n   specification of 1993 [2].\
    \  This device has a single queue per output\n   port, and uses the spanning tree\
    \ algorithm to eliminate topology\n   loops.  Networks constructed from this kind\
    \ of device cannot be\n   expected to provide service guarantees of any kind because\
    \ of the\n   complete lack of traffic isolation.\n   The next level of bridges/switches\
    \ are those which conform to the\n   more recently revised IEEE 802.1D specification\
    \ [3].  They include\n   support for queuing up to eight traffic classes separately.\
    \ The level\n   of traffic isolation provided is coarse because all flows\n  \
    \ corresponding to a particular traffic class are aggregated.  Further,\n   it\
    \ is likely that more than one priority will map to a traffic class\n   depending\
    \ on the number of queues implemented in the switch.  It\n   would be difficult\
    \ for such a device to offer protection against\n   misbehaving flows.  The scope\
    \ of multicast traffic may be limited by\n   using GMRP to only those segments\
    \ which are on the path to interested\n   receivers.\n   A next step above these\
    \ devices are bridges/switches which implement\n   optional parts of the IEEE\
    \ 802.1D specification such as mapping the\n   received user_priority to some\
    \ internal set of canonical values on a\n   per-input-port basis.  It may also\
    \ support the mapping of these\n   internal canonical values onto transmitted\
    \ user_priority on a per-\n   output-port basis.  With these extra capabilities,\
    \ network\n   administrators can perform mapping of traffic classes between\n\
    \   specific pairs of ports, and in doing so gain more control over\n   admission\
    \ of traffic into the protected classes.\n   Other entirely optional features\
    \ that some bridges/switches may\n   support include classification of IntServ\
    \ flows using fields in the\n   network layer header, per-flow policing and/or\
    \ reshaping which is\n   essential for supporting Guaranteed Service, and more\
    \ sophisticated\n   scheduling algorithms such as variants of weighted fair queuing\
    \ to\n   limit the bandwidth consumed by a traffic class.  Note that it is\n \
    \  advantageous to perform flow isolation and for all network elements\n   to\
    \ police each flow in order to support the Controlled Load and\n   Guaranteed\
    \ Service.\n"
- title: 8.2. Queuing
  contents:
  - "8.2. Queuing\n   Connectionless packet networks in general, and LANs in particular,\n\
    \   work today because of scaling choices in network provisioning.\n   Typically,\
    \ excess bandwidth and buffering is provisioned in the\n   network to absorb the\
    \ traffic sourced by higher layer protocols,\n   often sufficient to cause their\
    \ transmission windows to run out on a\n   statistical basis, so that network\
    \ overloads are rare and transient\n   and the expected loading is very low.\n\
    \   With the advent of time-critical traffic such over-provisioning has\n   become\
    \ far less easy to achieve.  Time-critical frames may be queued\n   for annoyingly\
    \ long periods of time behind temporary bursts of file\n   transfer traffic, particularly\
    \ at network bottleneck points, e.g.  at\n   the 100 Mbps to 10 Mbps transition\
    \ that might occur between the riser\n   to the wiring closet and the final link\
    \ to the user from a desktop\n   switch.  In this case, however, if it is known\
    \ a priori (either by\n   application design, on the basis of statistics, or by\
    \ administrative\n   control) that time-critical traffic is a small fraction of\
    \ the total\n   bandwidth, it suffices to give it strict priority over the non-time-\n\
    \   critical traffic.  The worst case delay experienced by the time-\n   critical\
    \ traffic is roughly the maximum transmission time of a\n   maximum length non-time-critical\
    \ frame -- less than a millisecond for\n   10 Mbps Ethernet, and well below the\
    \ end to end delay budget based on\n   human perception times.\n   When more than\
    \ one priority service is to be offered by a network\n   element e.g.  one which\
    \ supports both Controlled Load as well as\n   Guaranteed Service, the requirements\
    \ for the scheduling discipline\n   become more complex.  In order to provide\
    \ the required isolation\n   between the service classes, it will probably be\
    \ necessary to queue\n   them separately.  There is then an issue of how to service\
    \ the queues\n   which requires a combination of admission control and more\n\
    \   intelligent queuing disciplines.  As with the service specifications\n   themselves,\
    \ the specification of queuing algorithms is beyond the\n   scope of this document.\n"
- title: 8.3. Mapping of Services to Link Level Priority
  contents:
  - "8.3. Mapping of Services to Link Level Priority\n   The number of traffic classes\
    \ supported and access methods of the\n   technology under consideration will\
    \ determine how many and what\n   services may be supported.  Native Token Ring/IEEE\
    \ 802.5, for\n   instance, supports eight priority levels which may be mapped\
    \ to one\n   or more traffic classes.  Ethernet/IEEE 802.3 has no support for\n\
    \   signaling priorities within frames.  However, the IEEE 802 standards\n   committee\
    \ has recently developed a new standard for bridges/switches\n   related to multimedia\
    \ traffic expediting and dynamic multicast\n   filtering [3].  A packet format\
    \ for carrying a user_priority field on\n   all IEEE 802 LAN media types is now\
    \ defined in [4].  These standards\n   allow for up to eight traffic classes on\
    \ all media.  The\n   user_priority bits carried in the frame are mapped to a\
    \ particular\n   traffic class within a bridge/switch.  The user_priority is signaled\n\
    \   on an end-to-end basis, unless overridden by bridge/switch\n   management.\
    \  The traffic class that is used by a flow should depend\n   on the quality of\
    \ service desired and whether the reservation is\n   successful or not.  Therefore,\
    \ a sender should use the user_priority\n   value which maps to the best effort\
    \ traffic class until told\n   otherwise by the BM. The BM will, upon successful\
    \ completion of\n   resource reservation, specify the value of user_priority to\
    \ be used\n   by the sender for that session's data.  An accompanying memo [13]\n\
    \   addresses the issue of mapping the various Integrated Services to\n   appropriate\
    \ traffic classes.\n"
- title: 8.4. Re-mapping of Non-conforming Aggregated Flows
  contents:
  - "8.4. Re-mapping of Non-conforming Aggregated Flows\n   One other topic under\
    \ discussion in the IntServ context is how to\n   handle the traffic for data\
    \ flows from sources that exceed their\n   negotiated traffic contract with the\
    \ network.  An approach that shows\n   some promise is to treat such traffic with\
    \ \"somewhat less than best\n   effort\" service in order to protect traffic that\
    \ is normally given\n   \"best effort\" service from having to back off.  Best\
    \ effort traffic\n   is often adaptive, using TCP or other congestion control\
    \ algorithms,\n   and it would be unfair to penalize those flows due to badly\
    \ behaved\n   traffic from reserved flows which are often set up by non-adaptive\n\
    \   applications.\n   A possible solution might be to assign normal best effort\
    \ traffic to\n   one user_priority and to label excess non-conforming traffic\
    \ as a\n   lower user_priority although the re-ordering problems that might\n\
    \   arise from doing this may make this solution undesirable,\n   particularly\
    \ if the flows are using TCP. For this reason the\n   controlled load service\
    \ recommends dropping excess traffic, rather\n   than re-mapping to a lower priority.\
    \  This is further discussed\n   below.\n"
- title: 8.5. Override of Incoming User Priority
  contents:
  - "8.5. Override of Incoming User Priority\n   In some cases, a network administrator\
    \ may not trust the\n   user_priority values contained in packets from a source\
    \ and may wish\n   to map these into some more suitable set of values.  Alternatively,\n\
    \   due perhaps to equipment limitations or transition periods, the\n   user_priority\
    \ values may need to be re-mapped as the data flows\n   to/from different regions\
    \ of a network.\n   Some switches may implement such a function on input that\
    \ maps\n   received user_priority to some internal set of values.  This function\n\
    \   is provided by a table known in IEEE 802.1D as the User Priority\n   Regeneration\
    \ Table (Table 3-1 in [3]).  These values can then be\n   mapped using an output\
    \ table described above onto outgoing\n   user_priority values.  These same mappings\
    \ must also be used when\n   applying admission control to requests that use the\
    \ user_priority\n   values (see e.g.  [14]).  More sophisticated approaches are\
    \ also\n   possible where a device polices traffic flows and adjusts their\n \
    \  onward user_priority based on their conformance to the admitted\n   traffic\
    \ flow specifications.\n"
- title: 8.6. Different Reservation Styles
  contents:
  - "8.6. Different Reservation Styles\n   In the figure above, SW is a bridge/switch\
    \ in the link layer domain.\n   S1, S2, S3, R1 and R2 are end stations which are\
    \ members of a group\n   associated with the same RSVP flow.  S1, S2 and S3 are\
    \ upstream end\n   stations.  R1 and R2 are the downstream end stations which\
    \ receive\n   traffic from all the senders.  RSVP allows receivers R1 and R2 to\n\
    \   specify reservations which can apply to:  (a) one specific sender\n   only\
    \ (fixed filter); (b) any of two or more explicitly specified\n   senders (shared\
    \ explicit filter); and (c) any sender in the group\n   (shared wildcard filter).\
    \  Support for the fixed filter style is\n   straightforward; a separate reservation\
    \ is made for the traffic from\n   each of the senders.  However, support for\
    \ the other two filter\n   styles has implications regarding policing; i.e.  the\
    \ merged flow\n   from the different senders must be policed so that they conform\
    \ to\n   traffic parameters specified in the filter's RSpec.  This scenario is\n\
    \   further complicated if the services requested by R1 and R2 are\n   different.\
    \  Therefore, in the absence of policing within\n   bridges/switches, it may be\
    \ possible to support only fixed filter\n   reservations at the link layer.\n\
    \              +-----+       +-----+       +-----+\n              | S1  |    \
    \   | S2  |       | S3  |\n              +-----+       +-----+       +-----+\n\
    \                 |             |             |\n                 |          \
    \   v             |\n                 |          +-----+          |\n        \
    \         +--------->| SW  |<---------+\n                            +-----+\n\
    \                             |   |\n                        +----+   +----+\n\
    \                        |             |\n                        v          \
    \   V\n                     +-----+       +-----+\n                     | R1 \
    \ |       | R2  |\n                     +-----+       +-----+\n              \
    \  Figure 7: Illustration of filter styles\n"
- title: 8.7. Receiver Heterogeneity
  contents:
  - "8.7. Receiver Heterogeneity\n   At Layer 3, the IntServ model allows heterogeneous\
    \ receivers for\n   multicast flows where different branches of a tree can have\
    \ different\n   types of reservations for a given multicast destination.  It also\n\
    \   supports the notion that trees may have some branches with reserved\n   flows\
    \ and some using best effort service.  If we were to treat a\n   Layer 2 subnet\
    \ as a single network element as defined in [8], then\n   all of the branches\
    \ of the distribution tree that lie within the\n   subnet could be assumed to\
    \ require the same QoS treatment and be\n   treated as an atomic unit as regards\
    \ admission control, etc.  With\n   this assumption, the model and protocols already\
    \ defined by IntServ\n   and RSVP already provide sufficient support for multicast\n\
    \   heterogeneity.  Note, however, that an admission control request may\n   well\
    \ be rejected because just one link in the subnet is\n   oversubscribed leading\
    \ to rejection of the reservation request for\n   the entire subnet.\n   As an\
    \ example, consider Figure 8, SW is a Layer 2 device\n   (bridge/switch) participating\
    \ in resource reservation, S is the\n   upstream source end station and R1 and\
    \ R2 are downstream end station\n   receivers.  R1 would like to make a reservation\
    \ for the flow while R2\n   would like to receive the flow using best effort service.\
    \  S sends\n   RSVP PATH messages which are multicast to both R1 and R2.  R1 sends\n\
    \   an RSVP RESV message to S requesting the reservation of resources.\n     \
    \                      +-----+\n                           |  S  |\n         \
    \                  +-----+\n                              |\n                \
    \              v\n              +-----+      +-----+      +-----+\n          \
    \    | R1  |<-----| SW  |----->| R2  |\n              +-----+      +-----+   \
    \   +-----+\n              Figure 8: Example of receiver heterogeneity\n   If\
    \ the reservation is successful at Layer 2, the frames addressed to\n   the group\
    \ will be categorized in the traffic class corresponding to\n   the service requested\
    \ by R1.  At SW, there must be some mechanism\n   which forwards the packet providing\
    \ service corresponding to the\n   reserved traffic class at the interface to\
    \ R1 while using the best\n   effort traffic class at the interface to R2.  This\
    \ may involve\n   changing the contents of the frame itself, or ignoring the frame\n\
    \   priority at the interface to R2.\n   Another possibility for supporting heterogeneous\
    \ receivers would be\n   to have separate groups with distinct MAC addresses,\
    \ one for each\n   class of service.  By default, a receiver would join the \"\
    best\n   effort\" group where the flow is classified as best effort.  If the\n\
    \   receiver makes a reservation successfully, it can be transferred to\n   the\
    \ group for the class of service desired.  The dynamic multicast\n   filtering\
    \ capabilities of bridges and switches implementing the IEEE\n   802.1D standard\
    \ would be a very useful feature in such a scenario.  A\n   given flow would be\
    \ transmitted only on those segments which are on\n   the path between the sender\
    \ and the receivers of that flow.  The\n   obvious disadvantage of such an approach\
    \ is that the sender needs to\n   send out multiple copies of the same packet\
    \ corresponding to each\n   class of service desired thus potentially duplicating\
    \ the traffic on\n   a portion of the distribution tree.\n   The above approaches\
    \ would provide very sub-optimal utilization of\n   resources given the expected\
    \ size and complexity of the Layer 2\n   subnets.  Therefore, it is desirable\
    \ to enable switches to apply QoS\n   differently on different egress branches\
    \ of a tree that divide at\n   that switch.\n   IEEE 802.1D specifies a basic\
    \ model for multicast whereby a switch\n   makes multicast forwarding decisions\
    \ based on the destination\n   address.  This would produce a list of output ports\
    \ to which the\n   packet should be forwarded.  In its default mode, such a switch\
    \ would\n   use the user_priority value in received packets, or a value\n   regenerated\
    \ on a per input port basis in the absence of an explicit\n   value, to enqueue\
    \ the packets at each output port.  Any IEEE 802.1D\n   switch which supports\
    \ multiple traffic classes can support this\n   operation.\n   If a switch selects\
    \ per port output queues based only on the incoming\n   user_priority, as described\
    \ by IEEE 802.1D, it must treat all\n   branches of all multicast sessions within\
    \ that user_priority class\n   with the same queuing mechanism.  Receiver heterogeneity\
    \ is then not\n   possible and this could well lead to the failure of an admission\n\
    \   control request for the whole multicast session due to a single link\n   being\
    \ oversubscribed.  Note that in the Layer 2 case as distinct from\n   the Layer\
    \ 3 case with RSVP/IntServ, the option of having some\n   receivers getting the\
    \ session with the requested QoS and some getting\n   it best effort does not\
    \ exist as basic IEEE 802.1 switches are unable\n   to re-map the user_priority\
    \ on a per link basis.  This could become\n   an issue with heavy use of dynamic\
    \ multicast sessions.  If a switch\n   were to implement a separate user_priority\
    \ mapping at each output\n   port, then, in some cases, reservations can use a\
    \ different traffic\n   class on different paths that branch at such a switch\
    \ in order to\n   provide multiple receivers with different QoS. This is possible\
    \ if\n   all flows within a traffic class at the ingress to a switch egress in\n\
    \   the same traffic class on a port.  For example, traffic may be\n   forwarded\
    \ using user_priority 4 on one branch where receivers have\n   performed admission\
    \ control and as user_priority 0 on ones where they\n   have not.  We assume that\
    \ per user_priority queuing without taking\n   account of input or output ports\
    \ is the minimum standard\n   functionality for switches in a LAN environment\
    \ (IEEE 802.1D) but\n   that more functional Layer 2 or even Layer 3 switches\
    \ (i.e.  routers)\n   can be used if even more flexible forms of heterogeneity\
    \ are\n   considered necessary to achieve more efficient resource utilization.\n\
    \   The behavior of Layer 3 switches in this context is already well\n   standardized\
    \ by the IETF.\n"
- title: 9. Network Topology Scenarios
  contents:
  - "9. Network Topology Scenarios\n   The extent to which service guarantees can\
    \ be provided by a network\n   depend to a large degree on the ability to provide\
    \ the key functions\n   of flow identification and scheduling in addition to admission\n\
    \   control and policing.  This section discusses some of the\n   capabilities\
    \ of the LAN technologies under consideration and provides\n   a taxonomy of possible\
    \ topologies emphasizing the capabilities of\n   each with regard to supporting\
    \ the above functions.  For the\n   technologies considered here, the basic topology\
    \ of a LAN may be\n   shared, switched half duplex or switched full duplex.  In\
    \ the shared\n   topology, multiple senders share a single segment.  Contention\
    \ for\n   media access is resolved using protocols such as CSMA/CD in Ethernet\n\
    \   and token passing in Token Ring and FDDI. Switched half duplex, is\n   essentially\
    \ a shared topology with the restriction that there are\n   only two transmitters\
    \ contending for resources on any segment.\n   Finally, in a switched full duplex\
    \ topology, a full bandwidth path is\n   available to the transmitter at each\
    \ end of the link at all times.\n   Therefore, in this topology, there is no need\
    \ for any access control\n   mechanism such as CSMA/CD or token passing as there\
    \ is no contention\n   between the transmitters.  Obviously, this topology provides\
    \ the best\n   QoS capabilities.  Another important element in the discussion\
    \ of\n   topologies is the presence or absence of support for multiple traffic\n\
    \   classes.  These were discussed earlier in Section 4.1.  Depending on\n   the\
    \ basic topology used and the ability to support traffic classes,\n   we identify\
    \ six scenarios as follows:\n   1. Shared topology without traffic classes.\n\
    \   2. Shared topology with traffic classes.\n   3. Switched half duplex topology\
    \ without traffic classes.\n   4. Switched half duplex topology with traffic classes.\n\
    \   5. Switched full duplex topology without traffic classes.\n   6. Switched\
    \ full duplex topology with traffic classes.\n   There is also the possibility\
    \ of hybrid topologies where two or more\n   of the above coexist.  For instance,\
    \ it is possible that within a\n   single subnet, there are some switches which\
    \ support traffic classes\n   and some which do not.  If the flow in question\
    \ traverses both kinds\n   of switches in the network, the least common denominator\
    \ will\n   prevail.  In other words, as far as that flow is concerned, the\n \
    \  network is of the type corresponding to the least capable topology\n   that\
    \ is traversed.  In the following sections, we present these\n   scenarios in\
    \ further detail for some of the different IEEE 802\n   network types with discussion\
    \ of their abilities to support the\n   IntServ services.\n"
- title: 9.1. Full Duplex Switched Networks
  contents:
  - "9.1. Full Duplex Switched Networks\n   On a full duplex switched LAN, the MAC\
    \ protocol is unimportant as as\n   access is concerned, but must be factored\
    \ into the characterization\n   parameters advertised by the device since the\
    \ access latency is equal\n   to the time required to transmit the largest packet.\
    \  Approximate\n   values for the characteristics on various media are provided\
    \ in the\n   following tables.  These delays should be also be considered in the\n\
    \   context of the speed of light delay which is approximately 400 ns for\n  \
    \ typical 100 m UTP links and 7 us for typical 2 km multimode fiber\n   links.\n\
    \           Table 4: Full duplex switched media access latency\n        --------------------------------------------------\n\
    \        Type               Speed      Max Pkt   Max Access\n                \
    \                       Length      Latency\n        --------------------------------------------------\n\
    \        Ethernet         10 Mbps       1.2 ms       1.2 ms\n                \
    \        100 Mbps       120 us       120 us\n                          1 Gbps\
    \        12 us        12 us\n        Token Ring        4 Mbps         9 ms   \
    \      9 ms\n                         16 Mbps         9 ms         9 ms\n    \
    \    FDDI            100 Mbps       360 us       8.4 ms\n        Demand Priority\
    \ 100 Mbps       120 us       120 us\n        --------------------------------------------------\n\
    \   Full duplex switched network topologies offer good QoS capabilities\n   for\
    \ both Controlled Load and Guaranteed Service when supported by\n   suitable queuing\
    \ strategies in the switches.\n"
- title: 9.2. Shared Media Ethernet Networks
  contents:
  - "9.2. Shared Media Ethernet Networks\n   Thus far, we have not discussed the difficulty\
    \ of dealing with\n   allocation on a single shared CSMA/CD segment.  As soon\
    \ as any\n   CSMA/CD algorithm is introduced the ability to provide any form of\n\
    \   Guaranteed Service is seriously compromised in the absence of any\n   tight\
    \ coupling between the multiple senders on the link.  There are a\n   number of\
    \ reasons for not offering a better solution to this problem.\n   Firstly, we\
    \ do not believe this is a truly solvable problem as it\n   would require changes\
    \ to the MAC protocol.  IEEE 802.1 has examined\n   research showing disappointing\
    \ simulation results for performance\n   guarantees on shared CSMA/CD Ethernet\
    \ without MAC enhancements.\n   There have been proposals for enhancements to\
    \ the MAC layer\n   protocols, e.g.  BLAM and enhanced flow control in IEEE 802.3.\n\
    \   However, any solution involving an enhanced software MAC running\n   above\
    \ the traditional IEEE 802.3 MAC, or other proprietary MAC\n   protocols, is outside\
    \ the scope of the ISSLL working group and this\n   document.  Secondly, we are\
    \ not convinced that it is really an\n   interesting problem.  While there will\
    \ be end stations on shared\n   segments for some time to come, the number of\
    \ deployed switches is\n   steadily increasing relative to the number of stations\
    \ on shared\n   segments.  This trend is proceeding to the point where it may\
    \ be\n   satisfactory to have a solution which assumes that any network\n   communication\
    \ requiring resource reservations will take place through\n   at least one switch\
    \ or router.  Put another way, the easiest upgrade\n   to existing Layer 2 infrastructure\
    \ for QoS support is the\n   installation of segment switching.  Only when this\
    \ has been done is\n   it worthwhile to investigate more complex solutions involving\n\
    \   admission control.  Thirdly, the core of campus networks typically\n   consists\
    \ of solutions based on switches rather than on repeated\n   segments.  There\
    \ may be special circumstances in the future, e.g.\n   Gigabit buffered repeaters,\
    \ but the characteristics of these devices\n   are different from existing CSMA/CD\
    \ repeaters anyway.\n             Table 5: Shared Ethernet media access latency\n\
    \        --------------------------------------------------\n        Type    \
    \         Speed        Max Pkt   Max Access\n                                \
    \       Length      Latency\n        --------------------------------------------------\n\
    \        Ethernet       10 Mbps         1.2 ms    unbounded\n                \
    \      100 Mbps         120 us    unbounded\n                        1 Gbps  \
    \        12 us    unbounded\n        --------------------------------------------------\n"
- title: 9.3. Half Duplex Switched Ethernet Networks
  contents:
  - "9.3. Half Duplex Switched Ethernet Networks\n   Many of the same arguments for\
    \ sub optimal support of Guaranteed\n   Service on shared media Ethernet also\
    \ apply to half duplex switched\n   Ethernet.  In essence, this topology is a\
    \ medium that is shared\n   between at least two senders contending for packet\
    \ transmission.\n   Unless these are tightly coupled and cooperative, there is\
    \ always the\n   chance that the best effort traffic of one will interfere with\
    \ the\n   reserved traffic of the other.  Dealing with such a coupling would\n\
    \   require some form of modification to the MAC protocol.\n   Not withstanding\
    \ the above argument, half duplex switched topologies\n   do seem to offer the\
    \ chance to provide Controlled Load service.  With\n   the knowledge that there\
    \ are exactly two potential senders that are\n   both using prioritization for\
    \ their Controlled Load traffic over best\n   effort flows, and with admission\
    \ control having been done for those\n   flows based on that knowledge, the media\
    \ access characteristics while\n   not deterministic are somewhat predictable.\
    \  This is probably a close\n   enough useful approximation to the Controlled\
    \ Load service.\n      Table 6: Half duplex switched Ethernet media access latency\n\
    \        ------------------------------------------\n        Type        Speed\
    \     Max Pkt   Max Access\n                              Length       Latency\n\
    \        ------------------------------------------\n        Ethernet   10 Mbps\
    \     1.2 ms    unbounded\n                  100 Mbps     120 us    unbounded\n\
    \                    1 Gbps      12 us    unbounded\n        ------------------------------------------\n"
- title: 9.4. Half Duplex Switched and Shared Token Ring Networks
  contents:
  - "9.4. Half Duplex Switched and Shared Token Ring Networks\n   In a shared Token\
    \ Ring network, the network access time for high\n   priority traffic at any station\
    \ is bounded and is given by\n   (N+1)*THTmax, where N is the number of stations\
    \ sending high priority\n   traffic and THTmax is the maximum token holding time\
    \ [14].  This\n   assumes that network adapters have priority queues so that\n\
    \   reservation of the token is done for traffic with the highest\n   priority\
    \ currently queued in the adapter.  It is easy to see that\n   access times can\
    \ be improved by reducing N or THTmax.  The\n   recommended default for THTmax\
    \ is 10 ms [6].  N is an integer from 2\n   to 256 for a shared ring and 2 for\
    \ a switched half duplex topology.\n   A similar analysis applies for FDDI.\n\
    \             Table 7: Half duplex switched and shared Token\n               \
    \        Ring media access latency\n        ----------------------------------------------------\n\
    \        Type        Speed               Max Pkt   Max Access\n              \
    \                           Length      Latency\n        ----------------------------------------------------\n\
    \        Token Ring  4/16 Mbps shared       9 ms      2570 ms\n              \
    \      4/16 Mbps switched     9 ms        30 ms\n        FDDI         100 Mbps\
    \            360 us         8 ms\n        ----------------------------------------------------\n\
    \   Given that access time is bounded, it is possible to provide an upper\n  \
    \ bound for end-to-end delays as required by Guaranteed Service\n   assuming that\
    \ traffic of this class uses the highest priority\n   allowable for user traffic.\
    \  The actual number of stations that send\n   traffic mapped into the same traffic\
    \ class as Guaranteed Service may\n   vary over time but, from an admission control\
    \ standpoint, this value\n   is needed a priori.  The admission control entity\
    \ must therefore use\n   a fixed value for N, which may be the total number of\
    \ stations on the\n   ring or some lower value if it is desired to keep the offered\
    \ delay\n   guarantees smaller.  If the value of N used is lower than the total\n\
    \   number of stations on the ring, admission control must ensure that\n   the\
    \ number of stations sending high priority traffic never exceeds\n   this number.\
    \  This approach allows admission control to estimate\n   worst case access delays\
    \ assuming that all of the N stations are\n   sending high priority data even\
    \ though, in most cases, this will mean\n   that delays are significantly overestimated.\n\
    \   Assuming that Controlled Load flows use a traffic class lower than\n   that\
    \ used by Guaranteed Service, no upper bound on access latency can\n   be provided\
    \ for Controlled Load flows.  However, Controlled Load\n   flows will receive\
    \ better service than best effort flows.\n   Note that on many existing shared\
    \ Token Rings, bridges transmit\n   frames using an Access Priority (see Section\
    \ 4.3) value of 4\n   irrespective of the user_priority carried in the frame control\
    \ field\n   of the frame.  Therefore, existing bridges would need to be\n   reconfigured\
    \ or modified before the above access time bounds can\n   actually be used.\n"
- title: 9.5. Half Duplex and Shared Demand Priority Networks
  contents:
  - "9.5. Half Duplex and Shared Demand Priority Networks\n   In IEEE 802.12 networks,\
    \ communication between end nodes and hubs and\n   between the hubs themselves\
    \ is based on the exchange of link control\n   signals.  These signals are used\
    \ to control access to the shared\n   medium.  If a hub, for example, receives\
    \ a high priority request\n   while another hub is in the process of serving normal\
    \ priority\n   requests, then the service of the latter hub can effectively be\n\
    \   preempted in order to serve the high priority request first.  After\n   the\
    \ network has processed all high priority requests, it resumes the\n   normal\
    \ priority service at the point in the network at which it was\n   interrupted.\n\
    \   The network access time for high priority packets is basically the\n   time\
    \ needed to preempt normal priority network service.  This access\n   time is\
    \ bounded and it depends on the physical layer and on the\n   topology of the\
    \ shared network.  The physical layer has a significant\n   impact when operating\
    \ in half duplex mode as, e.g.  when used across\n   unshielded twisted pair cabling\
    \ (UTP) links, because link control\n   signals cannot be exchanged while a packet\
    \ is transmitted over the\n   link.  Therefore the network topology has to be\
    \ considered since, in\n   larger shared networks, the link control signals must\
    \ potentially\n   traverse several links and hubs before they can reach the hub\
    \ which\n   has the network control function.  This may delay the preemption of\n\
    \   the normal priority service and hence increase the upper bound that\n   may\
    \ be guaranteed.\n   Upper bounds on the high priority access time are given below\
    \ for a\n   UTP physical layer and a cable length of 100 m between all end nodes\n\
    \   and hubs using a maximum propagation delay of 570 ns as defined in\n   [19].\
    \  These values consider the worst case signaling overhead and\n   assume the\
    \ transmission of maximum sized normal priority data packets\n   while the normal\
    \ priority service is being preempted.\n      Table 8: Half duplex switched Demand\
    \ Priority UTP access latency\n        ------------------------------------------------------------\n\
    \        Type            Speed                    Max Pkt  Max Access\n      \
    \                                            Length     Latency\n        ------------------------------------------------------------\n\
    \        Demand Priority 100 Mbps, 802.3 pkt, UTP  120 us      254 us\n      \
    \                            802.5 pkt, UTP  360 us      733 us\n        ------------------------------------------------------------\n\
    \   Shared IEEE 802.12 topologies can be classified using the hub\n   cascading\
    \ level \"N\".  The simplest topology is the single hub network\n   (N = 1). \
    \ For a UTP physical layer, a maximum cascading level of N =\n   5 is supported\
    \ by the standard.  Large shared networks with many\n   hundreds of nodes may\
    \ be built with a level 2 topology.  The\n   bandwidth manager could be informed\
    \ about the actual cascading level\n   by network management mechanisms and can\
    \ use this information in its\n   admission control algorithms.\n   In contrast\
    \ to UTP, the fiber optic physical layer operates in dual\n   simplex mode.  Upper\
    \ bounds for the high priority access time are\n   given below for 2 km multimode\
    \ fiber links with a propagation delay\n   of 10 us.\n   For shared media with\
    \ distances of up to 2 km between all end nodes\n   and hubs, the IEEE 802.12\
    \ standard allows a maximum cascading level\n   of 2.  Higher levels of cascaded\
    \ topologies are supported but require\n   a reduction of the distances [15].\n\
    \   The bounded access delay and deterministic network access allow the\n   support\
    \ of service commitments required for Guaranteed Service and\n   Controlled Load,\
    \ even on shared media topologies.  The support of\n   just two priority levels\
    \ in 802.12, however, limits the number of\n   services that can simultaneously\
    \ be implemented across the network.\n           Table 9: Shared Demand Priority\
    \ UTP access latency\n     ----------------------------------------------------------------\n\
    \     Type            Speed              Max Pkt  Max Access  Topology\n     \
    \                                    Length     Latency\n     ----------------------------------------------------------------\n\
    \     Demand Priority 100 Mbps, 802.3 pkt 120 us      262 us     N = 1\n     \
    \                                    120 us      554 us     N = 2\n          \
    \                               120 us      878 us     N = 3\n               \
    \                          120 us     1.24 ms     N = 4\n                    \
    \                     120 us     1.63 ms     N = 5\n     Demand Priority 100 Mbps,\
    \ 802.5 pkt 360 us      722 us     N = 1\n                                   \
    \      360 us     1.41 ms     N = 2\n                                        \
    \ 360 us     2.32 ms     N = 3\n                                         360 us\
    \     3.16 ms     N = 4\n                                         360 us     4.03\
    \ ms     N = 5\n     -----------------------------------------------------------------\n\
    \             Table 10: Half duplex switched Demand Priority\n               \
    \           fiber access latency\n     -------------------------------------------------------------\n\
    \     Type            Speed                     Max Pkt  Max Access\n        \
    \                                        Length     Latency\n     -------------------------------------------------------------\n\
    \     Demand Priority 100 Mbps, 802.3 pkt, fiber 120 us      139 us\n        \
    \                       802.5 pkt, fiber 360 us      379 us\n     -------------------------------------------------------------\n\
    \         Table 11: Shared Demand Priority fiber access latency\n     ---------------------------------------------------------------\n\
    \     Type            Speed              Max Pkt  Max Access Topology\n      \
    \                                   Length    Latency\n     ---------------------------------------------------------------\n\
    \     Demand Priority 100 Mbps, 802.3 pkt 120 us     160 us     N = 1\n      \
    \                                   120 us     202 us     N = 2\n     Demand Priority\
    \ 100 Mbps, 802.5 pkt 360 us     400 us     N = 1\n                          \
    \               360 us     682 us     N = 2\n     ---------------------------------------------------------------\n"
- title: 10. Justification
  contents:
  - "10. Justification\n   An obvious concern is the complexity of this model.  It\
    \ essentially\n   does what RSVP already does at Layer 3, so why do we think we\
    \ can do\n   better by reinventing the solution to this problem at Layer 2?\n\
    \   The key is that there are a number of simple Layer 2 scenarios that\n   cover\
    \ a considerable portion of the real QoS problems that will\n   occur.  A solution\
    \ that covers the majority of problems at\n   significantly lower cost is beneficial.\
    \  Full RSVP/IntServ with per\n   flow queuing in strategically positioned high\
    \ function switches or\n   routers may be needed to completely resolve all issues,\
    \ but devices\n   implementing the architecture described in herein will allow\
    \ for a\n   significantly simpler network.\n"
- title: 11. Summary
  contents:
  - "11. Summary\n   This document has specified a framework for providing Integrated\n\
    \   Services over shared and switched LAN technologies.  The ability to\n   provide\
    \ QoS guarantees necessitates some form of admission control\n   and resource\
    \ management.  The requirements and goals of a resource\n   management scheme\
    \ for subnets have been identified and discussed.  We\n   refer to the entire\
    \ resource management scheme as a Bandwidth\n   Manager.  Architectural considerations\
    \ were discussed and examples\n   were provided to illustrate possible implementations\
    \ of a Bandwidth\n   Manager.  Some of the issues involved in mapping the services\
    \ from\n   higher layers to the link layer have also been discussed.\n   Accompanying\
    \ memos from the ISSLL working group address service\n   mapping issues [13] and\
    \ provide a protocol specification for the\n   Bandwidth Manager protocol [14]\
    \ based on the requirements and goals\n   discussed in this document.\n"
- title: References
  contents:
  - "References\n   [1]  IEEE Standards for Local and Metropolitan Area Networks:\n\
    \        Overview and Architecture, ANSI/IEEE Std 802, 1990.\n   [2]  ISO/IEC\
    \ 10038 Information technology - Telecommunications and\n        information exchange\
    \ between systems - Local area networks -\n        Media Access Control (MAC)\
    \ Bridges, (also ANSI/IEEE Std 802.1D-\n        1993), 1993.\n   [3]  ISO/IEC\
    \ 15802-3 Information technology - Telecommunications and\n        information\
    \ exchange between systems - Local and metropolitan\n        area networks - Common\
    \ specifications - Part 3: Media Access\n        Control (MAC) bridges (also ANSI/IEEE\
    \ Std 802.1D-1998), 1998.\n   [4]  IEEE Standards for Local and Metropolitan Area\
    \ Networks:\n        Virtual Bridged Local Area Networks, IEEE Std 802.1Q-1998,\
    \ 1998.\n   [5]  Braden, B., Zhang, L., Berson, S., Herzog, S. and S. Jamin,\n\
    \        \"Resource Reservation Protocol (RSVP) - Version 1 Functional\n     \
    \   Specification\", RFC 2205, September 1997.\n   [6]  Wroclawski, J., \"Specification\
    \ of the Controlled Load Network\n        Element Service\", RFC 2211, September\
    \ 1997.\n   [7]  Shenker, S., Partridge, C. and R. Guerin, \"Specification of\n\
    \        Guaranteed Quality of Service\", RFC 2212, September 1997.\n   [8]  Braden,\
    \ R., Clark, D. and S. Shenker, \"Integrated Services in\n        the Internet\
    \ Architecture: An Overview\", RFC 1633, June 1994.\n   [9]  Wroclawski, J., \"\
    The Use of RSVP with IETF Integrated Services\",\n        RFC 2210, September\
    \ 1997.\n   [10] Shenker, S. and J. Wroclawski, \"Network Element Service\n  \
    \      Specification Template\", RFC 2216, September 1997.\n   [11] Shenker, S.\
    \ and J. Wroclawski, \"General Characterization\n        Parameters for Integrated\
    \ Service Network Elements\", RFC 2215,\n        September 1997.\n   [12] Delgrossi,\
    \ L. and L. Berger (Editors), \"Internet Stream Protocol\n        Version 2 (ST2)\
    \  Protocol Specification - Version ST2+\", RFC\n        1819, August 1995.\n\
    \   [13] Seaman, M., Smith, A. and E. Crawley, \"Integrated Service\n        Mappings\
    \ on IEEE 802 Networks\", RFC 2815, May 2000.\n   [14] Yavatkar, R., Hoffman,\
    \ D., Bernet, Y. and F. Baker,  \"SBM Subnet\n        Bandwidth Manager): Protocol\
    \ for RSVP-based Admission Control\n        Over IEEE 802-style Networks\", RFC\
    \ 2814, May 2000.\n   [15] ISO/IEC 8802-3 Information technology - Telecommunications\
    \ and\n        information exchange between systems - Local and metropolitan\n\
    \        area networks - Common specifications - Part 3:  Carrier Sense\n    \
    \    Multiple Access with Collision Detection (CSMA/CD) Access Method\n      \
    \  and Physical Layer Specifications, (also ANSI/IEEE Std 802.3-\n        1996),\
    \ 1996.\n   [15] ISO/IEC 8802-5 Information technology - Telecommunications and\n\
    \        information exchange between systems - Local and metropolitan\n     \
    \   area networks - Common specifications - Part 5: Token Ring\n        Access\
    \ Method and Physical Layer Specifications, (also ANSI/IEEE\n        Std 802.5-1995),\
    \ 1995.\n   [17] Postel, J. and J. Reynolds, \"A Standard for the Transmission\
    \ of\n        IP Datagrams over IEEE 802 Networks\", STD 43, RFC 1042, February\n\
    \        1988.\n   [18] C. Bisdikian, B. V. Patel, F. Schaffa, and M Willebeek-LeMair,\n\
    \        The Use of Priorities on Token Ring Networks for Multimedia\n       \
    \ Traffic, IEEE Network, Nov/Dec 1995.\n   [19] IEEE Standards for Local and Metropolitan\
    \ Area Networks:  Demand\n        Priority Access Method, Physical Layer and Repeater\n\
    \        Specification for 100 Mb/s Operation, IEEE Std 802.12-1995.\n   [20]\
    \ Fiber Distributed Data Interface MAC, ANSI Std. X3.139-1987.\n   [21] ISO/IEC\
    \ 15802-3 Information technology - Telecommunications and\n        information\
    \ exchange between systems - Local and metropolitan\n        area networks - Specific\
    \ requirements - Supplement to Carrier\n        Sense Multiple Access with Collision\
    \ Detection (CSMA/CD) Access\n        Method and Physical Layer Specifications\
    \ - Frame Extensions for\n        Virtual Bridged Local Area Network (VLAN) Tagging\
    \ on 802.3\n        Networks, IEEE Std 802.3ac-1998 (Supplement to IEEE 802.3\
    \ 1998\n        Edition), 1998.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Implementation of the model described in this memo\
    \ creates no known\n   new avenues for malicious attack on the network infrastructure.\n\
    \   However, readers are referred to Section 2.8 of the RSVP\n   specification\
    \ [5] for a discussion of the impact of the use of\n   admission control signaling\
    \ protocols on network security.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Much of the work presented in this document has benefited\
    \ greatly\n   from discussion held at the meetings of the Integrated Services\
    \ over\n   Specific Link Layers (ISSLL) working group.  We would like to\n   acknowledge\
    \ contributions from the many participants via discussion\n   at these meetings\
    \ and on the mailing list.  We would especially like\n   to thank Eric Crawley,\
    \ Don Hoffman and Raj Yavatkar for contributions\n   via previous Internet drafts,\
    \ and Peter Kim for contributing the text\n   about Demand Priority networks.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Anoop Ghanwani\n   Nortel Networks\n   600 Technology\
    \ Park Dr\n   Billerica, MA 01821, USA\n   Phone: +1-978-288-4514\n   EMail: aghanwan@nortelnetworks.com\n\
    \   Wayne Pace\n   IBM Corporation\n   P. O. Box 12195\n   Research Triangle Park,\
    \ NC 27709, USA\n   Phone: +1-919-254-4930\n   EMail: pacew@us.ibm.com\n   Vijay\
    \ Srinivasan\n   CoSine Communications\n   1200 Bridge Parkway\n   Redwood City,\
    \ CA 94065, USA\n   Phone: +1-650-628-4892\n   EMail: vijay@cosinecom.com\n  \
    \ Andrew Smith\n   Extreme Networks\n   3585 Monroe St\n   Santa Clara, CA 95051,\
    \ USA\n   Phone: +1-408-579-2821\n   EMail: andrew@extremenetworks.com\n   Mick\
    \ Seaman\n   Telseon\n   480 S. California Ave\n   Palo Alto, CA 94306\n   USA\n\
    \   Email: mick@telseon.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
