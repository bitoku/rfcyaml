- title: __initial_text__
  contents:
  - " Connection-Oriented Media Transport over the Transport Layer Security\n    \
    \    (TLS) Protocol in the Session Description Protocol (SDP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how to establish secure connection-oriented\n\
    \   media transport sessions over the Transport Layer Security (TLS)\n   protocol\
    \ using the Session Description Protocol (SDP).  It defines a\n   new SDP protocol\
    \ identifier, 'TCP/TLS'.  It also defines the syntax\n   and semantics for an\
    \ SDP 'fingerprint' attribute that identifies the\n   certificate that will be\
    \ presented for the TLS session.  This\n   mechanism allows media transport over\
    \ TLS connections to be\n   established securely, so long as the integrity of\
    \ session\n   descriptions is assured.\n   This document extends and updates RFC\
    \ 4145.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Overview ........................................................4\n    \
    \  3.1. SDP Operational Modes ......................................4\n      3.2.\
    \ Threat Model ...............................................5\n      3.3. The\
    \ Need for Self-Signed Certificates ......................5\n      3.4. Example\
    \ SDP Description for TLS Connection .................6\n   4. Protocol Identifiers\
    \ ............................................6\n   5. Fingerprint Attribute ...........................................7\n\
    \   6. Endpoint Identification .........................................9\n  \
    \    6.1. Certificate Choice .........................................9\n    \
    \  6.2. Certificate Presentation ..................................10\n   7. Security\
    \ Considerations ........................................10\n   8. IANA Considerations\
    \ ............................................12\n   9. References .....................................................14\n\
    \      9.1. Normative References ......................................14\n  \
    \    9.2. Informative References ....................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Description Protocol (SDP) [1] provides a general-purpose\n\
    \   format for describing multimedia sessions in announcements or\n   invitations.\
    \  For many applications, it is desirable to establish, as\n   part of a multimedia\
    \ session, a media stream that uses a connection-\n   oriented transport.  RFC\
    \ 4145, Connection-Oriented Media Transport in\n   the Session Description Protocol\
    \ (SDP) [2], specifies a general\n   mechanism for describing and establishing\
    \ such connection-oriented\n   streams; however, the only transport protocol it\
    \ directly supports is\n   TCP.  In many cases, session participants wish to provide\n\
    \   confidentiality, data integrity, and authentication for their media\n   sessions.\
    \  This document therefore extends the Connection-Oriented\n   Media specification\
    \ to allow session descriptions to describe media\n   sessions that use the Transport\
    \ Layer Security (TLS) protocol [3].\n   The TLS protocol allows applications\
    \ to communicate over a channel\n   that provides confidentiality and data integrity.\
    \  The TLS\n   specification, however, does not specify how specific protocols\n\
    \   establish and use this secure channel; particularly, TLS leaves the\n   question\
    \ of how to interpret and validate authentication certificates\n   as an issue\
    \ for the protocols that run over TLS.  This document\n   specifies such usage\
    \ for the case of connection-oriented media\n   transport.\n   Complicating this\
    \ issue, endpoints exchanging media will often be\n   unable to obtain authentication\
    \ certificates signed by a well-known\n   root certification authority (CA). \
    \ Most certificate authorities\n   charge for signed certificates, particularly\
    \ host-based certificates;\n   additionally, there is a substantial administrative\
    \ overhead to\n   obtaining signed certificates, as certification authorities\
    \ must be\n   able to confirm that they are issuing the signed certificates to\
    \ the\n   correct party.  Furthermore, in many cases endpoints' IP addresses\n\
    \   and host names are dynamic: they may be obtained from DHCP, for\n   example.\
    \  It is impractical to obtain a CA-signed certificate valid\n   for the duration\
    \ of a DHCP lease.  For such hosts, self-signed\n   certificates are usually the\
    \ only option.  This specification defines\n   a mechanism that allows self-signed\
    \ certificates can be used\n   securely, provided that the integrity of the SDP\
    \ description is\n   assured.  It provides for endpoints to include a secure hash\
    \ of their\n   certificate, known as the \"certificate fingerprint\", within the\n\
    \   session description.  Provided that the fingerprint of the offered\n   certificate\
    \ matches the one in the session description, end hosts can\n   trust even self-signed\
    \ certificates.\n   The rest of this document is laid out as follows.  An overview\
    \ of the\n   problem and threat model is given in Section 3.  Section 4 gives\
    \ the\n   basic mechanism for establishing TLS-based connected-oriented media\n\
    \   in SDP.  Section 5 describes the SDP fingerprint attribute, which,\n   assuming\
    \ that the integrity of SDP content is assured, allows the\n   secure use of self-signed\
    \ certificates.  Section 6 describes which\n   X.509 certificates are presented,\
    \ and how they are used in TLS.\n   Section 7 discusses additional security considerations.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described in RFC 2119\
    \ [4] and\n   indicate requirement levels for compliant implementations.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This section discusses the threat model that motivates TLS transport\n\
    \   for connection-oriented media streams.  It also discusses in more\n   detail\
    \ the need for end systems to use self-signed certificates.\n"
- title: 3.1.  SDP Operational Modes
  contents:
  - "3.1.  SDP Operational Modes\n   There are two principal operational modes for\
    \ multimedia sessions:\n   advertised and offer-answer.  Advertised sessions are\
    \ the simpler\n   mode.  In this mode, a server publishes, in some manner, an\
    \ SDP\n   session description of a multimedia session it is making available.\n\
    \   The classic example of this mode of operation is the Session\n   Announcement\
    \ Protocol (SAP) [15], in which SDP session descriptions\n   are periodically\
    \ transmitted to a well-known multicast group.\n   Traditionally, these descriptions\
    \ involve multicast conferences, but\n   unicast sessions are also possible. \
    \ (Connection-oriented media,\n   obviously, cannot use multicast.)  Recipients\
    \ of a session\n   description connect to the addresses published in the session\n\
    \   description.  These recipients may not previously have been known to\n   the\
    \ advertiser of the session description.\n   Alternatively, SDP conferences can\
    \ operate in offer-answer mode [5].\n   This mode allows two participants in a\
    \ multimedia session to\n   negotiate the multimedia session between them.  In\
    \ this model, one\n   participant offers the other a description of the desired\
    \ session\n   from its perspective, and the other participant answers with the\n\
    \   desired session from its own perspective.  In this mode, each of the\n   participants\
    \ in the session has knowledge of the other one.  This is\n   the mode of operation\
    \ used by the Session Initiation Protocol (SIP)\n   [16].\n"
- title: 3.2.  Threat Model
  contents:
  - "3.2.  Threat Model\n   Participants in multimedia conferences often wish to guarantee\n\
    \   confidentiality, data integrity, and authentication for their media\n   sessions.\
    \  This section describes various types of attackers and the\n   ways they attempt\
    \ to violate these guarantees.  It then describes how\n   the TLS protocol can\
    \ be used to thwart the attackers.\n   The simplest type of attacker is one who\
    \ listens passively to the\n   traffic associated with a multimedia session. \
    \ This attacker might,\n   for example, be on the same local-area or wireless\
    \ network as one of\n   the participants in a conference.  This sort of attacker\
    \ does not\n   threaten a connection's data integrity or authentication, and almost\n\
    \   any operational mode of TLS can provide media stream confidentiality.\n  \
    \ More sophisticated is an attacker who can send his own data traffic\n   over\
    \ the network, but who cannot modify or redirect valid traffic.\n   In SDP's 'advertised'\
    \ operational mode, this can barely be considered\n   an attack; media sessions\
    \ are expected to be initiated from anywhere\n   on the network.  In SDP's offer-answer\
    \ mode, however, this type of\n   attack is more serious.  An attacker could initiate\
    \ a connection to\n   one or both of the endpoints of a session, thus impersonating\
    \ an\n   endpoint, or acting as a man in the middle to listen in on their\n  \
    \ communications.  To thwart these attacks, TLS uses endpoint\n   certificates.\
    \  So long as the certificates' private keys have not\n   been compromised, the\
    \ endpoints have an external trusted mechanism\n   (most commonly, a mutually-trusted\
    \ certification authority) to\n   validate certificates, and the endpoints know\
    \ what certificate\n   identity to expect, endpoints can be certain that such\
    \ an attack has\n   not taken place.\n   Finally, the most serious type of attacker\
    \ is one who can modify or\n   redirect session descriptions: for example, a compromised\
    \ or\n   malicious SIP proxy server.  Neither TLS itself nor any mechanisms\n\
    \   that use it can protect an SDP session against such an attacker.\n   Instead,\
    \ the SDP description itself must be secured through some\n   mechanism; SIP,\
    \ for example, defines how S/MIME [17] can be used to\n   secure session descriptions.\n"
- title: 3.3.  The Need for Self-Signed Certificates
  contents:
  - "3.3.  The Need for Self-Signed Certificates\n   SDP session descriptions are\
    \ created by any endpoint that needs to\n   participate in a multimedia session.\
    \  In many cases, such as SIP\n   phones, such endpoints have dynamically-configured\
    \ IP addresses and\n   host names and must be deployed with nearly zero configuration.\
    \  For\n   such an endpoint, it is for practical purposes impossible to obtain\
    \ a\n   certificate signed by a well-known certification authority.\n   If two\
    \ endpoints have no prior relationship, self-signed certificates\n   cannot generally\
    \ be trusted, as there is no guarantee that an\n   attacker is not launching a\
    \ man-in-the-middle attack.  Fortunately,\n   however, if the integrity of SDP\
    \ session descriptions can be assured,\n   it is possible to consider those SDP\
    \ descriptions themselves as a\n   prior relationship: certificates can be securely\
    \ described in the\n   session description itself.  This is done by providing\
    \ a secure hash\n   of a certificate, or \"certificate fingerprint\", as an SDP\
    \ attribute;\n   this mechanism is described in Section 5.\n"
- title: 3.4.  Example SDP Description for TLS Connection
  contents:
  - "3.4.  Example SDP Description for TLS Connection\n   Figure 1 illustrates an\
    \ SDP offer that signals the availability of a\n   T.38 fax session over TLS.\
    \  For the purpose of brevity, the main\n   portion of the session description\
    \ is omitted in the example, showing\n   only the 'm' line and its attributes.\
    \  (This example is the same as\n   the first one in RFC 4145 [2], except for\
    \ the proto parameter and the\n   fingerprint attribute.)  See the subsequent\
    \ sections for explanations\n   of the example's TLS-specific attributes.\n  \
    \ (Note: due to RFC formatting conventions, this document splits SDP\n   across\
    \ lines whose content would exceed 72 characters.  A backslash\n   character marks\
    \ where this line folding has taken place.  This\n   backslash and its trailing\
    \ CRLF and whitespace would not appear in\n   actual SDP content.)\n   m=image\
    \ 54111 TCP/TLS t38\n   c=IN IP4 192.0.2.2\n   a=setup:passive\n   a=connection:new\n\
    \   a=fingerprint:SHA-1 \\\n          4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n\
    \       Figure 1: Example SDP Description Offering a TLS Media Stream\n"
- title: 4.  Protocol Identifiers
  contents:
  - "4.  Protocol Identifiers\n   The 'm' line in SDP specifies, among other items,\
    \ the transport\n   protocol to be used for the media in the session.  See the\
    \ \"Media\n   Descriptions\" section of SDP [1] for a discussion on transport\n\
    \   protocol identifiers.\n   This specification defines a new protocol identifier,\
    \ 'TCP/TLS',\n   which indicates that the media described will use the Transport\
    \ Layer\n   Security protocol [3] over TCP.  (Using TLS over other transport\n\
    \   protocols is not discussed in this document.)  The 'TCP/TLS' protocol\n  \
    \ identifier describes only the transport protocol, not the upper-layer\n   protocol.\
    \  An 'm' line that specifies 'TCP/TLS' MUST further qualify\n   the protocol\
    \ using a fmt identifier to indicate the application being\n   run over TLS.\n\
    \   Media sessions described with this identifier follow the procedures\n   defined\
    \ in RFC 4145 [2].  They also use the SDP attributes defined in\n   that specification,\
    \ 'setup' and 'connection'.\n"
- title: 5.  Fingerprint Attribute
  contents:
  - "5.  Fingerprint Attribute\n   Parties to a TLS session indicate their identities\
    \ by presenting\n   authentication certificates as part of the TLS handshake procedure.\n\
    \   Authentication certificates are X.509 [6] certificates, as profiled\n   by\
    \ RFC 3279 [7], RFC 3280 [8], and RFC 4055 [9].\n   In order to associate media\
    \ streams with connections and to prevent\n   unauthorized barge-in attacks on\
    \ the media streams, endpoints MUST\n   provide a certificate fingerprint.  If\
    \ the X.509 certificate\n   presented for the TLS connection matches the fingerprint\
    \ presented in\n   the SDP, the endpoint can be confident that the author of the\
    \ SDP is\n   indeed the initiator of the connection.\n   A certificate fingerprint\
    \ is a secure one-way hash of the DER\n   (distinguished encoding rules) form\
    \ of the certificate.  (Certificate\n   fingerprints are widely supported by tools\
    \ that manipulate X.509\n   certificates; for instance, the command \"openssl\
    \ x509 -fingerprint\"\n   causes the command-line tool of the openssl package\
    \ to print a\n   certificate fingerprint, and the certificate managers for Mozilla\
    \ and\n   Internet Explorer display them when viewing the details of a\n   certificate.)\n\
    \   A fingerprint is represented in SDP as an attribute (an 'a' line).\n   It\
    \ consists of the name of the hash function used, followed by the\n   hash value\
    \ itself.  The hash value is represented as a sequence of\n   uppercase hexadecimal\
    \ bytes, separated by colons.  The number of\n   bytes is defined by the hash\
    \ function.  (This is the syntax used by\n   openssl and by the browsers' certificate\
    \ managers.  It is different\n   from the syntax used to represent hash values\
    \ in, e.g., HTTP digest\n   authentication [18], which uses unseparated lowercase\
    \ hexadecimal\n   bytes.  It was felt that consistency with other applications\
    \ of\n   fingerprints was more important.)\n   The formal syntax of the fingerprint\
    \ attribute is given in Augmented\n   Backus-Naur Form [10] in Figure 2.  This\
    \ syntax extends the BNF\n   syntax of SDP [1].\n   attribute              =/\
    \ fingerprint-attribute\n   fingerprint-attribute  =  \"fingerprint\" \":\" hash-func\
    \ SP fingerprint\n   hash-func              =  \"sha-1\" / \"sha-224\" / \"sha-256\"\
    \ /\n                             \"sha-384\" / \"sha-512\" /\n              \
    \               \"md5\" / \"md2\" / token\n                             ; Additional\
    \ hash functions can only come\n                             ; from updates to\
    \ RFC 3279\n   fingerprint            =  2UHEX *(\":\" 2UHEX)\n              \
    \               ; Each byte in upper-case hex, separated\n                   \
    \          ; by colons.\n   UHEX                   =  DIGIT / %x41-46 ; A-F uppercase\n\
    \   Figure 2: Augmented Backus-Naur Syntax for the Fingerprint Attribute\n   A\
    \ certificate fingerprint MUST be computed using the same one-way\n   hash function\
    \ as is used in the certificate's signature algorithm.\n   (This ensures that\
    \ the security properties required for the\n   certificate also apply for the\
    \ fingerprint.  It also guarantees that\n   the fingerprint will be usable by\
    \ the other endpoint, so long as the\n   certificate itself is.)  Following RFC\
    \ 3279 [7] as updated by RFC\n   4055 [9], therefore, the defined hash functions\
    \ are 'SHA-1' [11]\n   [19], 'SHA-224' [11], 'SHA-256' [11], 'SHA-384' [11], 'SHA-512'\
    \ [11],\n   'MD5' [12], and 'MD2' [13], with 'SHA-1' preferred.  A new IANA\n\
    \   registry of Hash Function Textual Names, specified in Section 8,\n   allows\
    \ for addition of future tokens, but they may only be added if\n   they are included\
    \ in RFCs that update or obsolete RFC 3279 [7].\n   Self-signed certificates (for\
    \ which legacy certificates are not a\n   consideration) MUST use one of the FIPS\
    \ 180 algorithms (SHA-1,\n   SHA-224, SHA-256, SHA-384, or SHA-512) as their signature\
    \ algorithm,\n   and thus also MUST use it to calculate certificate fingerprints.\n\
    \   The fingerprint attribute may be either a session-level or a media-\n   level\
    \ SDP attribute.  If it is a session-level attribute, it applies\n   to all TLS\
    \ sessions for which no media-level fingerprint attribute is\n   defined.\n"
- title: 6.  Endpoint Identification
  contents:
  - '6.  Endpoint Identification

    '
- title: 6.1.  Certificate Choice
  contents:
  - "6.1.  Certificate Choice\n   An X.509 certificate binds an identity and a public\
    \ key.  If SDP\n   describing a TLS session is transmitted over a mechanism that\n\
    \   provides integrity protection, a certificate asserting any\n   syntactically\
    \ valid identity MAY be used.  For example, an SDP\n   description sent over HTTP/TLS\
    \ [20] or secured by S/MIME [17] MAY\n   assert any identity in the certificate\
    \ securing the media connection.\n   Security protocols that provide only hop-by-hop\
    \ integrity protection\n   (e.g., the sips protocol [16], SIP over TLS) are considered\n\
    \   sufficiently secure to allow the mode in which any valid identity is\n   accepted.\
    \  However, see Section 7 for a discussion of some security\n   implications of\
    \ this fact.\n   In situations where the SDP is not integrity-protected, however,\
    \ the\n   certificate provided for a TLS connection MUST certify an appropriate\n\
    \   identity for the connection.  In these scenarios, the certificate\n   presented\
    \ by an endpoint MUST certify either the SDP connection\n   address, or the identity\
    \ of the creator of the SDP message, as\n   follows:\n   o  If the connection\
    \ address for the media description is specified\n      as an IP address, the\
    \ endpoint MAY use a certificate with an\n      iPAddress subjectAltName that\
    \ exactly matches the IP in the\n      connection-address in the session description's\
    \ 'c' line.\n      Similarly, if the connection address for the media description\
    \ is\n      specified as a fully-qualified domain name, the endpoint MAY use a\n\
    \      certificate with a dNSName subjectAltName matching the specified\n    \
    \  'c' line connection-address exactly.  (Wildcard patterns MUST NOT\n      be\
    \ used.)\n   o  Alternately, if the SDP session description of the session was\n\
    \      transmitted over a protocol (such as SIP [16]) for which the\n      identities\
    \ of session participants are defined by uniform resource\n      identifiers (URIs),\
    \ the endpoint MAY use a certificate with a\n      uniformResourceIdentifier subjectAltName\
    \ corresponding to the\n      identity of the endpoint that generated the SDP.\
    \  The details of\n      what URIs are valid are dependent on the transmitting\
    \ protocol.\n      (For more details on the validity of URIs, see Section 7.)\n\
    \   Identity matching is performed using the matching rules specified by\n   RFC\
    \ 3280 [8].  If more than one identity of a given type is present\n   in the certificate\
    \ (e.g., more than one dNSName name), a match in any\n   one of the set is considered\
    \ acceptable.  To support the use of\n   certificate caches, as described in Section\
    \ 7, endpoints SHOULD\n   consistently provide the same certificate for each identity\
    \ they\n   support.\n"
- title: 6.2.  Certificate Presentation
  contents:
  - "6.2.  Certificate Presentation\n   In all cases, an endpoint acting as the TLS\
    \ server (i.e., one taking\n   the 'setup:passive' role, in the terminology of\
    \ connection-oriented\n   media) MUST present a certificate during TLS initiation,\
    \ following\n   the rules presented in Section 6.1.  If the certificate does not\n\
    \   match the original fingerprint, the client endpoint MUST terminate\n   the\
    \ media connection with a bad_certificate error.\n   If the SDP offer/answer model\
    \ [5] is being used, the client (the\n   endpoint with the 'setup:active' role)\
    \ MUST also present a\n   certificate following the rules of Section 6.1.  The\
    \ server MUST\n   request a certificate, and if the client does not provide one,\
    \ or if\n   the certificate does not match the provided fingerprint, the server\n\
    \   endpoint MUST terminate the media connection with a bad_certificate\n   error.\n\
    \   Note that when the offer/answer model is being used, it is possible\n   for\
    \ a media connection to outrace the answer back to the offerer.\n   Thus, if the\
    \ offerer has offered a 'setup:passive' or 'setup:actpass'\n   role, it MUST (as\
    \ specified in RFC 4145 [2]) begin listening for an\n   incoming connection as\
    \ soon as it sends its offer.  However, it MUST\n   NOT assume that the data transmitted\
    \ over the TLS connection is valid\n   until it has received a matching fingerprint\
    \ in an SDP answer.  If\n   the fingerprint, once it arrives, does not match the\
    \ client's\n   certificate, the server endpoint MUST terminate the media connection\n\
    \   with a bad_certificate error, as stated in the previous paragraph.\n   If\
    \ offer/answer is not being used (e.g., if the SDP was sent over the\n   Session\
    \ Announcement Protocol [15]), there is no secure channel\n   available for clients\
    \ to communicate certificate fingerprints to\n   servers.  In this case, servers\
    \ MAY request client certificates,\n   which SHOULD be signed by a well-known\
    \ certification authority, or\n   MAY allow clients to connect without a certificate.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This entire document concerns itself with security.\
    \  The problem to\n   be solved is addressed in Section 1, and a high-level overview\
    \ is\n   presented in Section 3.  See the SDP specification [1] for security\n\
    \   considerations applicable to SDP in general.\n   Offering a TCP/TLS connection\
    \ in SDP (or agreeing to one in SDP\n   offer/answer mode) does not create an\
    \ obligation for an endpoint to\n   accept any TLS connection with the given fingerprint.\
    \  Instead, the\n   endpoint must engage in the standard TLS negotiation procedure\
    \ to\n   ensure that the TLS stream cipher and MAC algorithm chosen meet the\n\
    \   security needs of the higher-level application.  (For example, an\n   offered\
    \ stream cipher of TLS_NULL_WITH_NULL_NULL SHOULD be rejected\n   in almost every\
    \ application scenario.)\n   Like all SDP messages, SDP messages describing TLS\
    \ streams are\n   conveyed in an encapsulating application protocol (e.g., SIP,\
    \ Media\n   Gateway Control Protocol (MGCP), etc.).  It is the responsibility\
    \ of\n   the encapsulating protocol to ensure the integrity of the SDP\n   security\
    \ descriptions.  Therefore, the application protocol SHOULD\n   either invoke\
    \ its own security mechanisms (e.g., secure multiparts)\n   or, alternatively,\
    \ utilize a lower-layer security service (e.g., TLS\n   or IPsec).  This security\
    \ service SHOULD provide strong message\n   authentication as well as effective\
    \ replay protection.\n   However, such integrity protection is not always possible.\
    \  For these\n   cases, end systems SHOULD maintain a cache of certificates that\
    \ other\n   parties have previously presented using this mechanism.  If possible,\n\
    \   users SHOULD be notified when an unsecured certificate associated\n   with\
    \ a previously unknown end system is presented and SHOULD be\n   strongly warned\
    \ if a different unsecured certificate is presented by\n   a party with which\
    \ they have communicated in the past.  In this way,\n   even in the absence of\
    \ integrity protection for SDP, the security of\n   this document's mechanism\
    \ is equivalent to that of the Secure Shell\n   (ssh) protocol [21], which is\
    \ vulnerable to man-in-the-middle attacks\n   when two parties first communicate,\
    \ but can detect ones that occur\n   subsequently.  (Note that a precise definition\
    \ of the \"other party\"\n   depends on the application protocol carrying the\
    \ SDP message.)  Users\n   SHOULD NOT, however, in any circumstances be notified\
    \ about\n   certificates described in SDP descriptions sent over an integrity-\n\
    \   protected channel.\n   To aid interoperability and deployment, security protocols\
    \ that\n   provide only hop-by-hop integrity protection (e.g., the sips protocol\n\
    \   [16], SIP over TLS) are considered sufficiently secure to allow the\n   mode\
    \ in which any syntactically valid identity is accepted in a\n   certificate.\
    \  This decision was made because sips is currently the\n   integrity mechanism\
    \ most likely to be used in deployed networks in\n   the short to medium term.\
    \  However, in this mode, SDP integrity is\n   vulnerable to attacks by compromised\
    \ or malicious middleboxes, e.g.,\n   SIP proxy servers.  End systems MAY warn\
    \ users about SDP sessions\n   that are secured in only a hop-by-hop manner, and\
    \ definitions of\n   media formats running over TCP/TLS MAY specify that only\
    \ end-to-end\n   integrity mechanisms be used.\n   Depending on how SDP messages\
    \ are transmitted, it is not always\n   possible to determine whether or not a\
    \ subjectAltName presented in a\n   remote certificate is expected for the remote\
    \ party.  In particular,\n   given call forwarding, third-party call control,\
    \ or session\n   descriptions generated by endpoints controlled by the Gateway\
    \ Control\n   Protocol [22], it is not always possible in SIP to determine what\n\
    \   entity ought to have generated a remote SDP response.  In general,\n   when\
    \ not using authenticity and integrity protection of SDP\n   descriptions, a certificate\
    \ transmitted over SIP SHOULD assert the\n   endpoint's SIP Address of Record\
    \ as a uniformResourceIndicator\n   subjectAltName.  When an endpoint receives\
    \ a certificate over SIP\n   asserting an identity (including an iPAddress or\
    \ dNSName identity)\n   other than the one to which it placed or received the\
    \ call, it SHOULD\n   alert the user and ask for confirmation.  This applies whether\n\
    \   certificates are self-signed, or signed by certification authorities;\n  \
    \ a certificate for sip:bob@example.com may be legitimately signed by a\n   certification\
    \ authority, but may still not be acceptable for a call\n   to sip:alice@example.com.\
    \  (This issue is not one specific to this\n   specification; the same consideration\
    \ applies for S/MIME-signed SDP\n   carried over SIP.)\n   This document does\
    \ not define any mechanism for securely transporting\n   RTP and RTP Control Protocol\
    \ (RTCP) packets over a\n   connection-oriented channel.  There was no consensus\
    \ in the working\n   group as to whether it would be better to send Secure RTP\
    \ packets\n   [23] over a connection-oriented transport [24], or whether it would\n\
    \   be better to send standard unsecured RTP packets over TLS using the\n   mechanisms\
    \ described in this document.  The group consensus was to\n   wait until a use-case\
    \ requiring secure connection-oriented RTP was\n   presented.\n   TLS is not always\
    \ the most appropriate choice for secure connection-\n   oriented media; in some\
    \ cases, a higher- or lower-level security\n   protocol may be appropriate.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document defines an SDP proto value: 'TCP/TLS'.\
    \  Its format is\n   defined in Section 4.  This proto value has been registered\
    \ by IANA\n   under \"Session Description Protocol (SDP) Parameters\" under \"\
    proto\".\n   This document defines an SDP session and media-level attribute:\n\
    \   'fingerprint'.  Its format is defined in Section 5.  This attribute\n   has\
    \ been registered by IANA under \"Session Description Protocol (SDP)\n   Parameters\"\
    \ under \"att-field (both session and media level)\".\n   The SDP specification\
    \ [1] states that specifications defining new\n   proto values, like the 'TCP/TLS'\
    \ proto value defined in this one,\n   must define the rules by which their media\
    \ format (fmt) namespace is\n   managed.  For the TCP/TLS protocol, new formats\
    \ SHOULD have an\n   associated MIME registration.  Use of an existing MIME subtype\
    \ for\n   the format is encouraged.  If no MIME subtype exists, it is\n   RECOMMENDED\
    \ that a suitable one be registered through the IETF\n   process [14] by production\
    \ of, or reference to, a standards-track RFC\n   that defines the transport protocol\
    \ for the format.\n   This specification creates a new IANA registry named \"\
    Hash Function\n   Textual Names\".  It will not be part of the SDP Parameters.\n\
    \   The names of hash functions used for certificate fingerprints are\n   registered\
    \ by the IANA.  Hash functions MUST be defined by standards-\n   track RFCs that\
    \ update or obsolete RFC 3279 [7].\n   When registering a new hash function textual\
    \ name, the following\n   information MUST be provided:\n   o  The textual name\
    \ of the hash function.\n   o  The Object Identifier (OID) of the hash function\
    \ as used in X.509\n      certificates.\n   o  A reference to the standards-track\
    \ RFC, updating or obsoleting RFC\n      3279 [7], defining the use of the hash\
    \ function in X.509\n      certificates.\n   Figure 3 contains the initial values\
    \ of this registry.\n   Hash Function Name     OID                         Reference\n\
    \   ------------------     ---                         ---------\n   \"md2\" \
    \                 1.2.840.113549.2.2          RFC 3279\n   \"md5\"           \
    \       1.2.840.113549.2.5          RFC 3279\n   \"sha-1\"                1.3.14.3.2.26\
    \               RFC 3279\n   \"sha-224\"              2.16.840.1.101.3.4.2.4 \
    \     RFC 4055\n   \"sha-256\"              2.16.840.1.101.3.4.2.1      RFC 4055\n\
    \   \"sha-384\"              2.16.840.1.101.3.4.2.2      RFC 4055\n   \"sha-512\"\
    \              2.16.840.1.101.3.4.2.3      RFC 4055\n            Figure 3: IANA\
    \ Hash Function Textual Name Registry\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]   Handley, M., Jacobson, V., and C. Perkins,\
    \ \"SDP: Session\n         Description Protocol\", RFC 4566, July 2006.\n   [2]\
    \   Yon, D. and G. Camarillo, \"TCP-Based Media Transport in the\n         Session\
    \ Description Protocol (SDP)\", RFC 4145, September 2005.\n   [3]   Dierks, T.\
    \ and E. Rescorla, \"The Transport Layer Security (TLS)\n         Protocol Version\
    \ 1.1\", RFC 4346, April 2006.\n   [4]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [5]   Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with\n   \
    \      Session Description Protocol (SDP)\", RFC 3264, June 2002.\n   [6]   International\
    \ Telecommunications Union, \"Information technology\n         - Open Systems\
    \ Interconnection - The Directory: Public-key and\n         attribute certificate\
    \ frameworks\", ITU-T Recommendation X.509,\n         ISO Standard 9594-8, March\
    \ 2000.\n   [7]   Bassham, L., Polk, W., and R. Housley, \"Algorithms and\n  \
    \       Identifiers for the Internet X.509 Public Key Infrastructure\n       \
    \  Certificate and Certificate Revocation List (CRL) Profile\",\n         RFC\
    \ 3279, April 2002.\n   [8]   Housley, R., Polk, W., Ford, W., and D. Solo, \"\
    Internet X.509\n         Public Key Infrastructure Certificate and Certificate\n\
    \         Revocation List (CRL) Profile\", RFC 3280, April 2002.\n   [9]   Schaad,\
    \ J., Kaliski, B., and R. Housley, \"Additional Algorithms\n         and Identifiers\
    \ for RSA Cryptography for use in the Internet\n         X.509 Public Key Infrastructure\
    \ Certificate and Certificate\n         Revocation List (CRL) Profile\", RFC 4055,\
    \ June 2005.\n   [10]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \         Specifications: ABNF\", RFC 4234, October 2005.\n   [11]  National Institute\
    \ of Standards and Technology, \"Secure Hash\n         Standard\", FIPS PUB 180-2,\
    \ August 2002, <http://csrc.nist.gov/\n         publications/fips/fips180-2/fips180-2.pdf>.\n\
    \   [12]  Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321,\n      \
    \   April 1992.\n   [13]  Kaliski, B., \"The MD2 Message-Digest Algorithm\", RFC\
    \ 1319,\n         April 1992.\n   [14]  Freed, N. and J. Klensin, \"Media Type\
    \ Specifications and\n         Registration Procedures\", BCP 13, RFC 4288, December\
    \ 2005.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [15]  Handley, M., Perkins, C., and E. Whelan,\
    \ \"Session Announcement\n         Protocol\", RFC 2974, October 2000.\n   [16]\
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n         Peterson,\
    \ J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n         Session Initiation\
    \ Protocol\", RFC 3261, June 2002.\n   [17]  Ramsdell, B., \"Secure/Multipurpose\
    \ Internet Mail Extensions\n         (S/MIME) Version 3.1 Message Specification\"\
    , RFC 3851, July\n         2004.\n   [18]  Franks, J., Hallam-Baker, P., Hostetler,\
    \ J., Lawrence, S.,\n         Leach, P., Luotonen, A., and L. Stewart, \"HTTP\
    \ Authentication:\n         Basic and Digest Access Authentication\", RFC 2617,\
    \ June 1999.\n   [19]  Eastlake, D. and P. Jones, \"US Secure Hash Algorithm 1\
    \ (SHA1)\",\n         RFC 3174, September 2001.\n   [20]  Rescorla, E., \"HTTP\
    \ Over TLS\", RFC 2818, May 2000.\n   [21]  Ylonen, T. and C. Lonvick, \"The Secure\
    \ Shell (SSH) Protocol\n         Architecture\", RFC 4251, January 2006.\n   [22]\
    \  Groves, C., Pantaleo, M., Anderson, T., and T. Taylor, \"Gateway\n        \
    \ Control Protocol Version 1\", RFC 3525, June 2003.\n   [23]  Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and K.\n         Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\",\n         RFC 3711, March 2004.\n   [24]  Lazzaro,\
    \ J., \"Framing Real-time Transport Protocol (RTP) and\n         RTP Control Protocol\
    \ (RTCP) Packets over Connection-Oriented\n         Transport\", RFC 4571, July\
    \ 2006.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jonathan Lennox\n   Columbia University Department of Computer\
    \ Science\n   450 Computer Science\n   1214 Amsterdam Ave., M.C. 0401\n   New\
    \ York, NY  10027\n   US\n   EMail: lennox@cs.columbia.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
