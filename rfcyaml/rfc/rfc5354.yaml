- title: __initial_text__
  contents:
  - "              Aggregate Server Access Protocol (ASAP) and\n       Endpoint Handlespace\
    \ Redundancy Protocol (ENRP) Parameters\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document details the parameters of the Aggregate Server Access\n\
    \   Protocol (ASAP) and Endpoint Handlespace Redundancy Protocol (ENRP)\n   defined\
    \ within the Reliable Server Pooling (RSerPool) architecture.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions ................................................3\n  \
    \ 2. Parameters in General ...........................................3\n   3.\
    \ ENRP-ASAP Common Parameters .....................................3\n      3.1.\
    \ IPv4 Address Parameter .....................................6\n      3.2. IPv6\
    \ Address Parameter .....................................6\n      3.3. DCCP Transport\
    \ Parameter ...................................7\n      3.4. SCTP Transport Parameter\
    \ ...................................8\n      3.5. TCP Transport Parameter ....................................9\n\
    \      3.6. UDP Transport Parameter ....................................9\n  \
    \    3.7. UDP-Lite Transport Parameter ..............................10\n    \
    \  3.8. Pool Member Selection Policy Parameter ....................11\n      3.9.\
    \ Pool Handle Parameter .....................................12\n      3.10. Pool\
    \ Element Parameter ...................................12\n      3.11. Server\
    \ Information Parameter .............................13\n      3.12. Operation\
    \ Error Parameter ................................14\n           3.12.1. Unspecified\
    \ Error .................................15\n           3.12.2. Unrecognized Parameter\
    \ Error ......................15\n           3.12.3. Unrecognized Message Error\
    \ ........................15\n           3.12.4. Invalid Values Error ..............................16\n\
    \           3.12.5. Non-Unique PE Identifier Error ....................16\n  \
    \         3.12.6. Inconsistent Pool Policy Error ....................16\n    \
    \       3.12.7. Lack of Resources Error ...........................16\n      \
    \     3.12.8. Inconsistent Transport Type Error .................16\n        \
    \   3.12.9. Inconsistent Data/Control Configuration Error .....16\n          \
    \ 3.12.10. Rejected Due to Security Considerations ..........16\n           3.12.11.\
    \ Unknown Pool Handle Error ........................17\n      3.13. Cookie Parameter\
    \ .........................................17\n      3.14. PE Identifier Parameter\
    \ ..................................17\n      3.15. PE Checksum Parameter ....................................18\n\
    \      3.16. Opaque Transport Parameter ...............................18\n  \
    \ 4. Common Message Formats .........................................18\n   5.\
    \ IANA Considerations ............................................20\n      5.1.\
    \ A New Table for RSerPool Parameter Types ..................20\n      5.2. A\
    \ New Table for RSerPool Error Causes .....................21\n   6. Security\
    \ Considerations ........................................21\n   7. Normative References\
    \ ...........................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Aggregate Server Access Protocol (ASAP) [RFC5352], in\
    \ conjunction\n   with the Endpoint Handlespace Redundancy Protocol (ENRP) [RFC5353],\n\
    \   provides a high-availability, data-transfer mechanism over IP\n   networks.\n\
    \   Both protocols work together and so share many common parameters used\n  \
    \ in message formats.  This document details the common message\n   parameters\
    \ shared between the two protocols.  This document provides\n   parameter formats\
    \ only; for procedures and message composition,\n   please refer to the respective\
    \ [RFC5352] and [RFC5353] documents.\n"
- title: 1.1.  Conventions
  contents:
  - "1.1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n"
- title: 2.  Parameters in General
  contents:
  - "2.  Parameters in General\n   All parameters described below MUST be in network\
    \ byte order (aka Big\n   Endian, i.e., the most significant byte first) during\
    \ transmission.\n   Please note that messages in both ENRP and ASAP are often\
    \ composed of\n   multiple parameters.  These parameters may also be nested. \
    \ In such a\n   case, a nested parameter will include the length of the padding\n\
    \   between the nested parameters but not the last padding.\n"
- title: 3.  ENRP-ASAP Common Parameters
  contents:
  - "3.  ENRP-ASAP Common Parameters\n   Parameters are defined in the following Type-Length-Value\
    \ (TLV)\n   format:\n   0                   1                   2            \
    \       3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \        Parameter Type       |       Parameter Length        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                     Parameter Value                         :\n   :        \
    \                       +-------------------------------:\n   :              \
    \                 |        Padding                :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Parameter Type:  16 bits (unsigned integer)\n      The Type field is a 16-bit\
    \ identifier of the type of parameter.\n      It takes a value of 0 to 65534.\n\
    \      The value of 65535 is reserved for IETF-defined extensions.\n      Values,\
    \ other than those defined in the specific ENRP parameter\n      description,\
    \ are reserved by IETF.  (Additional types, when\n      needed, will be defined\
    \ in the future through appropriate IETF/\n      IANA procedures.)\n      The\
    \ Parameter Types are encoded such that the two bits of the\n      highest-order\
    \ specify the action that must be taken if the\n      processing endpoint does\
    \ not recognize the Parameter Type.\n      00 Stop processing this ENRP or ASAP\
    \ message and discard it; do\n         not process any further parameters within\
    \ it.\n      01 Stop processing this ENRP or ASAP message and discard it; do\n\
    \         not process any further parameters within it, and report the\n     \
    \    unrecognized parameter in an 'Unrecognized Parameter' error\n         (see\
    \ Section 3.12).\n      10 Skip this parameter and continue processing.\n    \
    \  11 Skip this parameter and continue processing, but report the\n         unrecognized\
    \ parameter in an 'Unrecognized Parameter' error\n         (see Section 3.12).\n\
    \      The values of parameter types are defined as follows:\n            +-----------------+------------------------------+\n\
    \            |      Value      | Parameter Type               |\n            +-----------------+------------------------------+\n\
    \            |       0x0       | (Reserved by IETF)           |\n            |\
    \       0x1       | IPv4 Address                 |\n            |       0x2  \
    \     | IPv6 Address                 |\n            |       0x3       | DCCP Transport\
    \               |\n            |       0x4       | SCTP Transport            \
    \   |\n            |       0x5       | TCP Transport                |\n      \
    \      |       0x6       | UDP Transport                |\n            |     \
    \  0x7       | UDP-Lite                     |\n            |       0x8       |\
    \ Pool Member Selection Policy |\n            |       0x9       | Pool Handle\
    \                  |\n            |       0xa       | Pool Element           \
    \      |\n            |       0xb       | Server Information           |\n   \
    \         |       0xc       | Operation Error              |\n            |  \
    \     0xd       | Cookie                       |\n            |       0xe    \
    \   | PE Identifier                |\n            |       0xf       | PE Checksum\
    \                  |\n            |       0x10      | Opaque Transport       \
    \      |\n            | 0x11-0xfffffffe | (Available for assignment)   |\n   \
    \         |    0xffffffff   | IETF-defined extensions      |\n            +-----------------+------------------------------+\n\
    \                                   Table 1\n   Parameter Length: 16 bits (unsigned\
    \ integer)\n      The Parameter Length field contains the size of the parameter\
    \ in\n      bytes, including the Parameter Type, Parameter Length, and\n     \
    \ Parameter Value fields.  Thus, a parameter with a zero-length\n      Parameter\
    \ Value field would have a Length field of 4.\n      The total length of a parameter\
    \ (including Type, Parameter Length\n      and Value fields) MUST be a multiple\
    \ of 4 bytes.  If the length of\n      the parameter is not a multiple of 4 bytes,\
    \ the sender MUST pad\n      the parameter at the end (i.e., after the Parameter\
    \ Value field)\n      with all zero bytes.  The length of this padding is not\
    \ included\n      in the Parameter Length field.  A sender MUST NOT pad with more\n\
    \      than 3 bytes.  The receiver MUST ignore the padding bytes.\n   Parameter\
    \ Value: variable length.\n      The Parameter Value field contains the actual\
    \ information to be\n      transferred in the parameter.\n   Parameter Padding:\
    \ variable length.\n      The Parameter Padding, as described above.\n"
- title: 3.1.  IPv4 Address Parameter
  contents:
  - "3.1.  IPv4 Address Parameter\n   This parameter defines a TLV that carries an\
    \ IPv4 address.\n    0                   1                   2               \
    \    3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \      Type = 0x1             |      Length = 0x8             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        IPv4 Address                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IPv4 Address: 32 bits (unsigned integer)\n      Contains an IPv4 address.\
    \  It is binary encoded.\n"
- title: 3.2.  IPv6 Address Parameter
  contents:
  - "3.2.  IPv6 Address Parameter\n   This parameter defines a TLV that carries an\
    \ IPv6 address.\n    0                   1                   2               \
    \    3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \          Type = 0x2         |          Length = 0x14        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                       IPv6 Address                          |\n   |        \
    \                                                       |\n   |              \
    \                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   IPv6 Address: 128 bits (unsigned integer)\n      Contains an IPv6 address.\
    \  It is binary encoded.\n"
- title: 3.3.  DCCP Transport Parameter
  contents:
  - "3.3.  DCCP Transport Parameter\n   This parameter defines a TLV that describes\
    \ a user transport using\n   Datagram Congestion Control Protocol (DCCP).\n  \
    \  0                   1                   2                   3\n    0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x3             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         DCCP Port             |          (reserved)           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      DCCP Service Code                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address                      :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, DCCP port,\
    \ reserved fields, and IP\n      Address Parameter.\n   DCCP Port: 16 bits (unsigned\
    \ integer)\n      The DCCP port number signed to this DCCP user transport.\n \
    \  DCCP Service Code: 32 bits (unsigned integer)\n      The DCCP service code\
    \ signed to this DCCP user transport.\n   IPv4 or IPv6 Address\n      Indicates\
    \ an IPv4 or IPv6 address parameter (as defined above in\n      Section 3.1 and\
    \ Section 3.2) assigned to this DCCP user transport.\n      Unlike in an SCTP\
    \ Transport parameter, only one IP address\n      parameter can be present in\
    \ a DCCP Transport parameter.\n   Note: The DCCP Port MUST NOT be used for control\
    \ information.  For\n   this reason, no Transport Use field is provided.  DCCP\
    \ MUST always be\n   treated as a \"Data Only\" type transport use.\n"
- title: 3.4.  SCTP Transport Parameter
  contents:
  - "3.4.  SCTP Transport Parameter\n   This parameter defines a TLV that describes\
    \ a user transport using\n   Stream Control Transport Protocol (SCTP).\n    0\
    \                   1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x4             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        SCTP Port              |          Transport Use        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address #1                   :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                            ...                              :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address #n                   :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, SCTP port,\
    \ reserved fields, and all IP\n      Address Parameters present.\n   SCTP Port:\
    \ 16 bits (unsigned integer)\n      The SCTP port number signed to this SCTP user\
    \ transport.\n   Transport Use: 16 bits (unsigned integer)\n      This field represents\
    \ how the pool element intends this transport\n      address to be used.  The\
    \ field MUST be populated with one of the\n      following values:\n         \
    \             +-------------------+--------+\n                      |        Type\
    \       | Value  |\n                      +-------------------+--------+\n   \
    \                   |     DATA ONLY     | 0x0000 |\n                      | DATA\
    \ plus CONTROL | 0x0001 |\n                      +-------------------+--------+\n\
    \   IPv4 or IPv6 Address #1 - #n\n      Each indicates an IPv4 or IPv6 address\
    \ parameter (as defined above\n      in Section 3.1 and Section 3.2) assigned\
    \ to this SCTP user\n      transport.  An SCTP Transport parameter may have a\
    \ mixed list of\n      IPv4 and IPv6 addresses and at least one IP address parameter\
    \ MUST\n      be present in an SCTP Transport parameter.\n"
- title: 3.5.  TCP Transport Parameter
  contents:
  - "3.5.  TCP Transport Parameter\n   This parameter defines a TLV that describes\
    \ a user transport using\n   TCP protocol.\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x5             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         TCP Port              |           (reserved)          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address                      :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, TCP port,\
    \ reserved fields, and IP\n      Address Parameter.\n   TCP Port: 16 bits (unsigned\
    \ integer)\n      The TCP port number signed to this TCP user transport.\n   IPv4\
    \ or IPv6 Address\n      Indicates an IPv4 or IPv6 address parameter (as defined\
    \ above in\n      Section 3.1 and Section 3.2) assigned to this TCP user transport.\n\
    \      Unlike in an SCTP Transport parameter, only one IP Address\n      parameter\
    \ can be present in a TCP Transport parameter.\n   Note: The TCP Port MUST NOT\
    \ be used for control information.  For\n   this reason, no Transport Use field\
    \ is provided.  TCP MUST always be\n   treated as a \"Data Only\" type transport\
    \ use.\n"
- title: 3.6.  UDP Transport Parameter
  contents:
  - "3.6.  UDP Transport Parameter\n   This parameter defines a TLV that describes\
    \ a user transport using\n   UDP protocol.\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x6             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         UDP Port              |          (reserved)           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address                      :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, UDP port,\
    \ reserved fields, and IP\n      Address Parameter.\n   UDP Port: 16 bits (unsigned\
    \ integer)\n      The UDP port number signed to this UDP user transport.\n   IPv4\
    \ or IPv6 Address\n      Indicates an IPv4 or IPv6 address parameter (as defined\
    \ above in\n      Section 3.1 and Section 3.2) assigned to this UDP user transport.\n\
    \      Unlike in an SCTP Transport parameter, only one IP Address\n      parameter\
    \ can be present in a UDP Transport parameter.\n   Note: The UDP Port MUST NOT\
    \ be used for control information.  For\n   this reason, no Transport Use field\
    \ is provided.  UDP MUST always be\n   treated as a \"Data Only\" type transport\
    \ use.\n"
- title: 3.7.  UDP-Lite Transport Parameter
  contents:
  - "3.7.  UDP-Lite Transport Parameter\n   This parameter defines a TLV that describes\
    \ a user transport using\n   UDP-Lite protocol.\n    0                   1   \
    \                2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x7             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      UDP-Lite Port            |          (reserved)           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                     IPv4 or IPv6 Address                      :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, UDP-Lite port,\
    \ reserved fields, and IP\n      Address Parameter.\n   UDP Port: 16 bits (unsigned\
    \ integer)\n      The UDP-Lite port number signed to this UDP-Lite user transport.\n\
    \   IPv4 or IPv6 Address\n      Indicates an IPv4 or IPv6 address parameter (as\
    \ defined above in\n      Section 3.1 and Section 3.2) assigned to this UDP-Lite\
    \ user\n      transport.  Unlike in an SCTP Transport parameter, only one IP\n\
    \      address parameter can be present in a UDP-Lite transport\n      parameter.\n\
    \   Note: The UDP-Lite Port MUST NOT be used for control information.\n   For\
    \ this reason, no Transport Use field is provided.  UDP-Lite MUST\n   always be\
    \ treated as a \"Data Only\" type transport use.\n"
- title: 3.8.  Pool Member Selection Policy Parameter
  contents:
  - "3.8.  Pool Member Selection Policy Parameter\n   This parameter defines a pool\
    \ member selection policy.  RSerPool\n   supports multiple pool member selection\
    \ policies and also allows the\n   definition of new selection policies in the\
    \ future.\n   The enforcement rules and handling procedures of all the policies\
    \ are\n   defined in [RFC5352].\n   All pool member selection policies, both present\
    \ and future, MUST use\n   the following general parameter format:\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Type = 0x8             |      Length = variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Policy Type                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Policy-specific Data                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, Policy Type,\
    \ and the Policy-specific\n      Data fields.\n      Note, the Length field value\
    \ will NOT include any padding at the\n      end of the parameter.\n   Policy\
    \ Type: 32 bits (unsigned integer)\n      Specifies the type of selection policy.\
    \  The values are defined in\n      [RFC5356].\n   Policy-specific Data:\n   \
    \   The structure and fields for each presently defined policy type\n      are\
    \ described in detail in [RFC5356].\n"
- title: 3.9.  Pool Handle Parameter
  contents:
  - "3.9.  Pool Handle Parameter\n   This parameter holds a pool handle.\n    0  \
    \                 1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Type = 0x9            |       Length=variable         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                        Pool Handle                          :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, and Pool Handle\
    \ string.\n      Note, the value in the Length field will NOT cover any padding\
    \ at\n      the end of the parameter.\n   Pool Handle\n      Defined as a sequence\
    \ of (Length - 4) bytes.\n"
- title: 3.10.  Pool Element Parameter
  contents:
  - "3.10.  Pool Element Parameter\n   This parameter is used in multiple ENRP messages\
    \ to represent an ASAP\n   endpoint (i.e., a Pool Element (PE) in a pool) and\
    \ the associated\n   information, such as its transport address, selection policy,\
    \ and\n   other operational or status information of the PE.\n    0          \
    \         1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Type = 0xa            |       Length=variable         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         PE Identifier                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Home ENRP Server Identifier                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      Registration Life                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                      User Transport param                     :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                 Member Selection Policy param                 :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                      ASAP Transport param                     :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of octets,\n      including the Type, Length, PE Identifier,\
    \ Registration Life, User\n      Transport, and Member Selection Policy parameters.\n\
    \      Note, the value in the Length field will NOT cover any padding at\n   \
    \   the end of this Pool Element parameter.\n   PE Identifier: 32 bits (unsigned\
    \ integer)\n      Uniquely identifies the PE in the pool.  The PE picks its\n\
    \      identifier when it starts up.\n   Home ENRP Server Identifier: 32 bits\
    \ (unsigned integer)\n      Indicates the current Home ENRP server of this PE.\
    \  Set to all 0s\n      if the PE's Home ENRP server is undetermined.\n   Registration\
    \ Life: 32 bits (signed integer)\n      Indicates the lifetime of the registration\
    \ in number of seconds.\n      A value of -1 indicates infinite lifetime.\n  \
    \ User Transport\n      This can be either an DCCP, SCTP, TCP, UDP, UDP-Lite,\
    \ or Opaque\n      Transport parameter (see Section 3.3, Section 3.4, Section\
    \ 3.5,\n      Section 3.6, Section 3.7, and Section 3.16).  A PE MUST have one\n\
    \      and only one User Transport.\n   Member Selection Policy\n      Contains\
    \ one of the defined member selection policy parameters\n      (see Section 3.8).\n\
    \   ASAP Transport\n      This indicates the ASAP transport address of the PE\
    \ and MUST be an\n      SCTP type transport parameter (see Section 3.4).\n"
- title: 3.11.  Server Information Parameter
  contents:
  - "3.11.  Server Information Parameter\n   This parameter is used in ENRP to pass\
    \ basic information of an ENRP\n   server.\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Type = 0xb            |       Length=variable         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Server ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                       Server Transport                        :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of bytes.\n      Note, the value in the Length field will\
    \ NOT cover any padding at\n      the end of the parameter.\n   Server ID: 32\
    \ bits (unsigned integer)\n      This is the ID of the ENRP server, as defined\
    \ in [RFC5353].\n   Server Transport:\n      This is an SCTP Transport Parameter,\
    \ as defined in Section 3.4,\n      that contains the network access address(es),\
    \ SCTP port number,\n      etc. of the ENRP server.\n"
- title: 3.12.  Operation Error Parameter
  contents:
  - "3.12.  Operation Error Parameter\n   This parameter is used in both ENRP and\
    \ ASAP for a message sender to\n   report an error(s) to a message receiver.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Type = 0xc           |       Length=variable         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                  one or more Error Causes                   :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of bytes.\n      Note, the value in the Length field will\
    \ NOT cover any padding at\n      the end of the parameter.\n   Error causes are\
    \ defined as variable-length parameters using the\n   following format:\n    0\
    \                   1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Cause Code          |       Cause Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                  Cause-Specific Information                 :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Cause Code: 16 bits (unsigned integer)\n      Defines the type of error condition\
    \ being reported.\n      +------------------+-----------------------------------------+\n\
    \      | Cause Code Value | Cause Code                              |\n      +------------------+-----------------------------------------+\n\
    \      |        0x0       | Unspecified Error                       |\n      |\
    \        0x1       | Unrecognized Parameter                  |\n      |      \
    \  0x2       | Unrecognized Message                    |\n      |        0x3 \
    \      | Invalid Values                          |\n      |        0x4       |\
    \ Non-unique PE Identifier                |\n      |        0x5       | Inconsistent\
    \ Pooling Policy             |\n      |        0x6       | Lack of Resources \
    \                      |\n      |        0x7       | Inconsistent Transport Type\
    \             |\n      |        0x8       | Inconsistent Data/Control Configuration\
    \ |\n      |        0x9       | Unknown Pool Handle                     |\n  \
    \    |        0xa       | Rejected due to security considerations |\n      | \
    \   0xb -0xffff   | (Available for assignment)              |\n      +------------------+-----------------------------------------+\n\
    \                                   Table 2\n   Cause Length: 16 bits (unsigned\
    \ integer)\n      Set to the size of the parameter in bytes, including the Cause\n\
    \      Code, Cause Length, and Cause-Specific Information fields, but not\n  \
    \    including any padding at the end of this error cause TLV.\n   Cause-specific\
    \ Information: variable length\n      This field carries the details of the error\
    \ condition.\n   The following subsections (Section 3.12.1 - Section 3.12.9) define\n\
    \   specific error causes.\n"
- title: 3.12.1.  Unspecified Error
  contents:
  - "3.12.1.  Unspecified Error\n   This error cause is used to report an unspecified\
    \ error by the\n   sender.  There is no cause specific information.\n"
- title: 3.12.2.  Unrecognized Parameter Error
  contents:
  - "3.12.2.  Unrecognized Parameter Error\n   This error cause is used to report\
    \ an unrecognized parameter.  The\n   complete, unrecognized parameter TLV is\
    \ included as cause-specific\n   information.  If a message contains multiple\
    \ unrecognized parameters,\n   multiple error causes are used.\n"
- title: 3.12.3.  Unrecognized Message Error
  contents:
  - "3.12.3.  Unrecognized Message Error\n   This error cause is used to report an\
    \ unrecognized message.  The\n   unrecognized message TLV is included as cause-specific\
    \ information.\n"
- title: 3.12.4.  Invalid Values Error
  contents:
  - "3.12.4.  Invalid Values Error\n   This error cause is used to report one or more\
    \ invalid values found\n   in a received parameter.  The offending TLV that contains\
    \ the invalid\n   value(s) is included as cause-specific information.\n"
- title: 3.12.5.  Non-Unique PE Identifier Error
  contents:
  - "3.12.5.  Non-Unique PE Identifier Error\n   This error cause is used by an ENRP\
    \ server to indicate to a\n   registering PE that the PE Identifier it chooses\
    \ has already been\n   used by another PE in the pool.  There is no cause-specific\n\
    \   information.\n"
- title: 3.12.6.  Inconsistent Pool Policy Error
  contents:
  - "3.12.6.  Inconsistent Pool Policy Error\n   This error cause is used by an ENRP\
    \ server to indicate to a\n   registering PE that the pool policy it chooses does\
    \ not match the\n   overall policy of the pool.  A Pool Member Selection Policy\
    \ TLV (see\n   Section 3.8) that indicates the overall pool policy is included\
    \ as\n   cause-specific information.\n"
- title: 3.12.7.  Lack of Resources Error
  contents:
  - "3.12.7.  Lack of Resources Error\n   This error cause is used to indicate that\
    \ the sender does not have\n   certain resources to perform a requested function.\
    \  There is no cause\n   specific information.\n"
- title: 3.12.8.  Inconsistent Transport Type Error
  contents:
  - "3.12.8.  Inconsistent Transport Type Error\n   This error cause is used by an\
    \ ENRP server to indicate to a\n   registering PE that the User Transport it chooses\
    \ does not match the\n   overall user transport of the pool.  A Transport TLV\
    \ that indicates\n   the overall pool user transport type is included as cause-specific\n\
    \   information.\n"
- title: 3.12.9.  Inconsistent Data/Control Configuration Error
  contents:
  - "3.12.9.  Inconsistent Data/Control Configuration Error\n   This error cause is\
    \ used by an ENRP server to indicate to a\n   registering PE that the Transport\
    \ Use field in the User Transport it\n   sent in its registration is inconsistent\
    \ to the pool's overall data/\n   control channel configuration.  There is no\
    \ cause-specific\n   information.\n"
- title: 3.12.10.  Rejected Due to Security Considerations
  contents:
  - "3.12.10.  Rejected Due to Security Considerations\n   This error cause is used\
    \ by any endpoint to indicate a rejection of a\n   request due to a failure in\
    \ security credentials or authorizations.\n"
- title: 3.12.11.  Unknown Pool Handle Error
  contents:
  - "3.12.11.  Unknown Pool Handle Error\n   This error cause is used by an ENRP server\
    \ to indicate to a PE or PU\n   that the requested pool is unknown by the server.\
    \  There is no cause-\n   specific information.\n"
- title: 3.13.  Cookie Parameter
  contents:
  - "3.13.  Cookie Parameter\n   This parameter defines a TLV that carries a Cookie.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Type = 0xd         |       Length=variable         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                           Cookie                            :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of bytes,\n      including the Type, Length, and Cookie.\n\
    \   Cookie: variable length\n      The Cookie is an arbitrary byte string of (Length\
    \ - 4) bytes.\n"
- title: 3.14.  PE Identifier Parameter
  contents:
  - "3.14.  PE Identifier Parameter\n   This parameter defines a TLV that carries\
    \ a PE Identifier.\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \          Type = 0xe         |         Length=0x8            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         PE Identifier                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   PE Identifier: 32 bits (unsigned integer)\n      Uniquely identifies the PE\
    \ in the pool.  The PE picks its\n      identifier when it starts up.  See [RFC5352]\
    \ for recommendations\n      on PE identifier generation.\n"
- title: 3.15.  PE Checksum Parameter
  contents:
  - "3.15.  PE Checksum Parameter\n   This parameter defines a TLV that carries a\
    \ PE Checksum.\n   0                   1                   2                 \
    \  3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Type = 0xf         |         Length=0x6            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           PE Checksum         |          Padding              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   PE Checksum: 16 bits (unsigned integer)\n      An overall checksum of all\
    \ PEs in the current handlespace owned by\n      an ENRP server (which is normally\
    \ the sender of this TLV).  The\n      definition and calculation of this checksum\
    \ is defined in\n      [RFC5353].\n"
- title: 3.16.  Opaque Transport Parameter
  contents:
  - "3.16.  Opaque Transport Parameter\n   This parameter defines a TLV that carries\
    \ opaque transport\n   information.\n   0                   1                \
    \   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Type = 0x10        |        Length=variable        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                  Opaque Transport Data                      :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length: 16 bits (unsigned integer)\n      Indicates the entire length of the\
    \ parameter in number of bytes,\n      including the Type, Length, and Opaque\
    \ Transport Data.\n   Opaque Transport Data: variable length\n      The Opaque\
    \ Transport Data is an arbitrary byte string of (Length -\n      4) bytes.\n"
- title: 4.  Common Message Formats
  contents:
  - "4.  Common Message Formats\n   The figure below illustrates the common format\
    \ for all ASAP and ENRP\n   messages.  Each message is formatted with a Message\
    \ Type field, a\n   message-specific Flag field, a Message Length field, and a\
    \ Value\n   field.\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | Message\
    \ Type  |   Msg Flags   |        Message Length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   :                                                               :\n   :  \
    \                      Message Value                          :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Message Type: 8 bits (unsigned integer)\n      This field identifies the type\
    \ of information contained in the\n      Message Value field.  It takes a value\
    \ from 0 to 254.  The value\n      of 255 is reserved for future use as an extension\
    \ field.\n      Message Types are encoded such that the two bits of the highest\n\
    \      order specify the action that must be taken if the message\n      receiver\
    \ does not recognize the Message Type.\n      00 Stop processing this message\
    \ and discard it.\n      01 Stop processing this message and discard it, and report\
    \ the\n         unrecognized message in an 'Unrecognized Message' error (see\n\
    \         Section 3.12.3).\n      10 Reserved.\n      11 Reserved.\n   Message\
    \ Flags: 8 bits\n      The usage of these bits depends on the message type, as\
    \ given by\n      the Message Type.  Unless otherwise specified, they are set\
    \ to\n      zero on transmit and ignored on receipt.\n   Message Length: 16 bits\
    \ (unsigned integer)\n      This value represents the size of the message in bytes,\
    \ including\n      the Message Type, Message Flags, Message Length, and Message\
    \ Value\n      fields.  Therefore, if the Message Value field is zero length,\
    \ the\n      Length field will be set to 4.\n      Note, the value in the Message\
    \ Length field will NOT cover any\n      padding at the end of this message.\n\
    \   Message Value: variable length\n      The Message Value field contains the\
    \ actual information to be\n      transferred in the message.  The usage and format\
    \ of this field is\n      dependent on the Message Type.\n      The total length\
    \ of a message (including Type, Length, and Value\n      fields) MUST be a multiple\
    \ of 4 bytes.  If the length of the\n      message is not a multiple of 4 bytes,\
    \ the sender MUST pad the\n      message with all zero bytes and this padding\
    \ is not included in\n      the Message Length field.  The sender should never\
    \ pad with more\n      than 3 bytes.  The receiver MUST ignore the padding bytes.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document (RFC 5354) is the reference for all\
    \ registrations\n   described in this section.  All registrations have been listed\
    \ on the\n   RSerPool Parameters page.\n"
- title: 5.1.  A New Table for RSerPool Parameter Types
  contents:
  - "5.1.  A New Table for RSerPool Parameter Types\n   RSerPool Parameter Types are\
    \ maintained by IANA.  Thirteen initial\n   values have been assigned by IANA,\
    \ as described in Table 1.  IANA\n   created a new table, \"RSerPool Parameter\
    \ Types\":\n               +------------+------------------------------+\n   \
    \            |    Value   | Parameter Type               |\n               +------------+------------------------------+\n\
    \               |     0x0    | (Reserved by IETF)           |\n              \
    \ |     0x1    | IPv4 Address                 |\n               |     0x2    |\
    \ IPv6 Address                 |\n               |     0x3    | DCCP Transport\
    \               |\n               |     0x4    | SCTP Transport              \
    \ |\n               |     0x5    | TCP Transport                |\n          \
    \     |     0x6    | UDP Transport                |\n               |     0x7\
    \    | UDP-Lite                     |\n               |     0x8    | Pool Member\
    \ Selection Policy |\n               |     0x9    | Pool Handle              \
    \    |\n               |     0xa    | Pool Element                 |\n       \
    \        |     0xb    | Server Information           |\n               |     0xc\
    \    | Operation Error              |\n               |     0xd    | Cookie  \
    \                     |\n               |     0xe    | PE Identifier         \
    \       |\n               |     0xf    | PE Checksum                  |\n    \
    \           |    0x10    | Opaque Transport             |\n               | 0xffffffff\
    \ | IETF-defined extensions      |\n               |   others   | (Reserved by\
    \ IETF)           |\n               +------------+------------------------------+\n\
    \   Requests to register an RSerPool Parameter Type in this table should\n   be\
    \ sent to IANA.  The number must be unique.  The \"Specification\n   Required\"\
    \ policy of [RFC5226] MUST be applied.\n"
- title: 5.2.  A New Table for RSerPool Error Causes
  contents:
  - "5.2.  A New Table for RSerPool Error Causes\n   RSerPool Error Causes are maintained\
    \ by IANA.  Eleven initial values\n   have been assigned by IANA, as described\
    \ in Table 2.  IANA created a\n   new table, \"RSerPool Error Causes\":\n    \
    \  +------------------+-----------------------------------------+\n      | Cause\
    \ Code Value | Cause Code                              |\n      +------------------+-----------------------------------------+\n\
    \      |        0x0       | Unspecified Error                       |\n      |\
    \        0x1       | Unrecognized Parameter                  |\n      |      \
    \  0x2       | Unrecognized Message                    |\n      |        0x3 \
    \      | Invalid Values                          |\n      |        0x4       |\
    \ Non-Unique PE Identifier                |\n      |        0x5       | Inconsistent\
    \ Pooling Policy             |\n      |        0x6       | Lack of Resources \
    \                      |\n      |        0x7       | Inconsistent Transport Type\
    \             |\n      |        0x8       | Inconsistent Data/Control Configuration\
    \ |\n      |        0x9       | Unknown Pool Handle                     |\n  \
    \    |        0xa       | Rejected Due to Security Considerations |\n      | \
    \     others      | (Reserved by IETF)                      |\n      +------------------+-----------------------------------------+\n\
    \   Requests to register an RSerPool Error Cause in this table should be\n   sent\
    \ to IANA.  The number must be unique.  The \"Specification\n   Required\" policy\
    \ of [RFC5226] MUST be applied.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document contains common parameter formats\
    \ only.  As such, it\n   specifies no new security constraints on either ENRP\
    \ or ASAP.\n   Details on ENRP and ASAP security constraints are addressed in\n\
    \   [RFC5353] and [RFC5352].\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       May 2008.\n   [RFC5352]  Stewart, R., Xie, Q., Stillman, M., and M. Tuexen,\n\
    \              \"Aggregate Server Access Protocol (ASAP)\", RFC 5352,\n      \
    \        September 2008.\n   [RFC5353]  Xie, Q., Stewart, R., Stillman, M., Tuexen,\
    \ M., and A.\n              Silverton, \"Endpoint Handlespace Redundancy Protocol\n\
    \              (ENRP)\", RFC 5353, September 2008.\n   [RFC5356]  Dreibholz, T.\
    \ and M. Tuexen, \"Reliable Server Pooling\n              Policies\", RFC 5356,\
    \ September 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Randall R. Stewart\n   The Resource Group\n   1700 Pennsylvania\
    \ Ave NW\n   Suite 560\n   Washington, DC  20006\n   USA\n   Phone:\n   EMail:\
    \ randall.stewart@trgworld.com\n   Qiaobing Xie\n   The Resource Group\n   1700\
    \ Pennsylvania Ave NW\n   Suite 560\n   Washington, D.C.,   20006\n   USA\n  \
    \ Phone: +1 224-465-5954\n   EMail: Qiaobing.Xie@gmail.com\n   Maureen Stillman\n\
    \   Nokia\n   1167 Peachtree Ct.\n   Naperville, IL  60540\n   USA\n   EMail:\
    \ maureen.stillman@nokia.com\n   Michael Tuexen\n   Muenster Univ. of Applied\
    \ Sciences\n   Stegerwaldstr. 39\n   48565 Steinfurt\n   Germany\n   EMail: tuexen@fh-muenster.de\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
