- contents:
  - "                        RTP Payload Format for\n          the Enhanced Variable
    Rate Wideband Codec (EVRC-WB)\n             and the Media Subtype Updates for
    EVRC-B Codec\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document specifies Real-time Transport Protocol (RTP) payload\n
    \  formats to be used for the Enhanced Variable Rate Wideband Codec\n   (EVRC-WB)
    and updates the media type registrations for EVRC-B codec.\n   Several media type
    registrations are included for EVRC-WB RTP payload\n   formats.  In addition,
    a file format is specified for transport of\n   EVRC-WB speech data in storage
    mode applications such as email.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions  . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n   3.  Background . . . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n   4.  EVRC-WB Codec  . . . . . . . . . . . . . . . . . . . . . . . .
    \ 3\n   5.  RTP Header Usage . . . . . . . . . . . . . . . . . . . . . . .  4\n
    \  6.  Payload Format . . . . . . . . . . . . . . . . . . . . . . . .  4\n   7.
    \ Congestion Control Considerations  . . . . . . . . . . . . . .  5\n   8.  Storage
    Format for the EVRC-WB Codec . . . . . . . . . . . . .  5\n   9.  IANA Considerations
    \ . . . . . . . . . . . . . . . . . . . . .  5\n     9.1.  Media Type Registrations
    . . . . . . . . . . . . . . . . .  5\n       9.1.1.  Registration of Media Type
    audio/EVRCWB  . . . . . . .  6\n       9.1.2.  Registration of Media Type audio/EVRCWB0
    . . . . . . .  8\n       9.1.3.  Registration of Media Type audio/EVRCWB1 . .
    . . . . .  9\n       9.1.4.  Updated Registration of Media Type audio/EVRCB .
    . . . 11\n       9.1.5.  Updated Registration of Media Type audio/EVRCB0  . .
    . 13\n   10. SDP Mode Attributes for EVRC-WB and EVRC-B . . . . . . . . . . 15\n
    \  11. EVRC-B Interoperability with Legacy Implementations (RFC 4788) 15\n   12.
    Mapping EVRC-WB Media Type Parameters into SDP . . . . . . . . 16\n   13. Mapping
    EVRC-B Media Type Parameters into SDP  . . . . . . . . 16\n   14. Offer-Answer
    Model Considerations for EVRC-WB  . . . . . . . . 16\n   15. Offer-Answer Model
    Considerations for EVRC-B . . . . . . . . . 18\n   16. Declarative SDP Considerations
    . . . . . . . . . . . . . . . . 18\n   17. Examples . . . . . . . . . . . . .
    . . . . . . . . . . . . . . 19\n   18. Security Considerations  . . . . . . .
    . . . . . . . . . . . . 22\n   19. Changes to RFC 4788  . . . . . . . . . . .
    . . . . . . . . . . 22\n   20. References . . . . . . . . . . . . . . . . . .
    . . . . . . . . 22\n     20.1. Normative References . . . . . . . . . . . . .
    . . . . . . 22\n     20.2. Informative References . . . . . . . . . . . . . .
    . . . . 23\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the payload formats for packetization
    of\n   EVRC-WB encoded speech signals into the Real-time Transport Protocol\n
    \  (RTP).  It defines support for the header-free, interleaved/bundled,\n   and
    compact bundle packet formats for the EVRC-WB codec as well as\n   discontinuous
    transmission (DTX) support for EVRC-WB encoded speech\n   transported via RTP.
    \ The EVRC-WB codec offers better speech quality\n   than the EVRC and EVRC-B
    codecs.  EVRC-WB belongs to the EVRC family\n   of codecs.  This document also
    updates the media type registrations\n   for the EVRC-B codec.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [1].\n"
  title: 2.  Conventions
- contents:
  - "3.  Background\n   EVRC-WB is a wideband extension of the EVRC-B [4] speech codec\n
    \  developed in the Third Generation Partnership Project 2 (3GPP2) with\n   support
    for discontinuous transmission (DTX).  It provides enhanced\n   (wideband) voice
    quality.\n   The EVRC-WB codec operates on 20-ms frames, and the default sampling\n
    \  rate is 16 kHz.  Input and output at an 8-kHz sampling rate are also\n   supported.
    \ The EVRC-WB codec can operate in three modes (0, 4, and\n   7) defined in [5].
    \ EVRC-WB modes 4 and 7 are interoperable with\n   EVRC-B.  EVRC-WB mode 4 uses
    full-rate, 1/2-rate, and 1/8-rate\n   frames.  EVRC-WB mode 7 uses only 1/2 rate
    and 1/8 rate frames.  Mode\n   change results in codec output bit-rate change
    but do not cause any\n   decoding problems at the receiver.  For successful decoding,
    the\n   decoder does not need to know the encoder's current mode of\n   operation.
    \ EVRC-WB provides a standardized solution for packetized\n   voice applications
    that allow transitions between narrowband and\n   wideband telephony.  The most
    important service addressed is IP\n   telephony.  Target devices can be IP phones
    or Voice over IP (VoIP)\n   handsets, media gateways, voice messaging servers,
    etc.\n"
  title: 3.  Background
- contents:
  - "4.  EVRC-WB Codec\n   The EVRC-WB codec operates on 20-ms frames.  It produces
    output\n   frames of one of the three different sizes: 171 bits, 80 bits, or 16\n
    \  bits.  In addition, there are two zero-bit codec frame types: blank\n   (null)
    frames and erasure frames.  The default sampling rate is 16\n   kHz.  Input and
    output at an 8-kHz sampling rate are also supported.\n   The frame type values
    and sizes of the associated codec data frames\n   are listed in the table below:\n
    \   Value   Rate      Total codec data frame size in bytes (and in bits)\n    --------------------------------------------------------------------\n
    \       0     Blank      0     (0 bit)\n        1     1/8        2    (16 bits)\n
    \       2     1/4        5    (40 bits)\n        3     1/2       10    (80 bits)\n
    \       4     1         22    (171 bits; 5 bits padded at the end)\n        5
    \    Erasure    0    (SHOULD NOT be transmitted by sender)\n"
  title: 4.  EVRC-WB Codec
- contents:
  - "5.  RTP Header Usage\n   The format of the RTP header is specified in RFC 3550
    [6].  The\n   EVRC-WB payload formats (Section 6) use the fields of the RTP header\n
    \  in a manner consistent with RFC 3550 [6].\n   EVRC-WB also has the capability
    to operate with 8-kHz sampled input/\n   output signals.  The decoder does not
    require a priori knowledge\n   about the sampling rate of the original signal
    at the input of the\n   encoder.  The decoder output can be at 8 kHz or 16 kHz
    regardless of\n   the sampling rate used at the encoder.  Therefore, depending
    on the\n   implementation and the electro acoustic audio capabilities of the\n
    \  devices, the input of the encoder and/or the output of the decoder\n   can
    be configured at 8 kHz; however, a 16-kHz RTP clock rate MUST\n   always be used.
    \ The RTP timestamp is increased by 320 for each 20\n   milliseconds.\n   The
    RTP header marker bit (M) SHALL be set to 1 if the first frame\n   carried in
    the packet contains a speech frame that is the first in a\n   talkspurt.  For
    all other packets, the marker bit SHALL be set to\n   zero (M=0).\n"
  title: 5.  RTP Header Usage
- contents:
  - "6.  Payload Format\n   Three RTP packet formats are supported for the EVRC-WB
    codec -- the\n   interleaved/bundled packet format, the header-free packet format,
    and\n   the compact bundled packet format.  For all these formats, the\n   operational
    details and capabilities, such as Table of Contents\n   (ToC), interleaving, DTX,
    and bundling, of EVRC-WB are exactly the\n   same as those of EVRC-B, as defined
    in [3], except that the mode\n   change request field in the ToC MUST be interpreted
    according to the\n   definition of the RATE_REDUC parameter as defined in EVRC-WB
    [5].\n   The media type audio/EVRCWB maps to the interleaved/bundled packet\n
    \  format, audio/EVRCWB0 maps to the header-free packet format, and\n   audio/EVRCWB1
    maps to the compact bundled packet format.\n"
  title: 6.  Payload Format
- contents:
  - "7.  Congestion Control Considerations\n   Congestion control for RTP SHALL be
    used in accordance with RFC 3550\n   [6], and with any applicable RTP profile,
    e.g., RFC 3551 [11].\n   Due to the header overhead, the number of frames encapsulated
    in each\n   RTP packet influences the overall bandwidth of the RTP stream.\n   Packing
    more frames in each RTP packet can reduce the number of\n   packets sent and hence
    the header overhead, at the expense of\n   increased delay and reduced error robustness.\n"
  title: 7.  Congestion Control Considerations
- contents:
  - "8.  Storage Format for the EVRC-WB Codec\n   The storage format is used for storing
    EVRC-WB encoded speech frames,\n   e.g., as a file or email attachment.\n   The
    file begins with a magic number to identify the vocoder that is\n   used.  The
    magic number for EVRC-WB corresponds to the ASCII\n   character string \"#!EVCWB\\n\",
    i.e., \"0x23 0x21 0x45 0x56 0x43 0x57\n   0x42 0x0A\".\n   The codec data frames
    are stored in consecutive order, with a single\n   ToC entry field, extended to
    one octet, prefixing each codec data\n   frame.  The ToC field is extended to
    one octet by setting the four\n   most significant bits of the octet to zero.
    \ For example, a ToC value\n   of 4 (a full-rate frame) is stored as 0x04.  See
    Section 4 for the\n   mapping from frame type to ToC value.\n   Speech frames
    lost in transmission and non-received frames MUST be\n   stored as erasure frames
    (ToC value of 5) to maintain synchronization\n   with the original media.\n"
  title: 8.  Storage Format for the EVRC-WB Codec
- contents:
  - "9.  IANA Considerations\n   This document updates the audio/EVRCB and audio/EVRCB0
    media types\n   defined in RFC 4788 [3] and adds new EVRC-WB 'audio' media subtypes.\n"
  - contents:
    - "9.1.  Media Type Registrations\n   Following the guidelines in RFC 4855 [9]
      and RFC 4288 [10], this\n   section registers new 'audio' media subtypes for
      EVRC-WB and updates\n   the audio/EVRCB and audio/EVRCB0 media type registrations
      contained\n   in RFC 4788 [3].\n"
    - contents:
      - "9.1.1.  Registration of Media Type audio/EVRCWB\n   Type name: audio\n   Subtype
        name: EVRCWB\n   Required parameters: None\n   Optional parameters:\n   These
        parameters apply to RTP transfer only.\n   mode-set-recv: A subset of EVRC-WB
        modes.  Possible values are a\n   comma-separated list of modes from the set
        {0,4,7} (see Table\n   2.5.1.2-1 in 3GPP2 C.S0014-C).  A decoder can use this
        attribute to\n   inform an encoder of its preference to operate in a specified
        subset\n   of modes.  Absence of this parameter signals the mode set {0,4,7}.\n
        \  sendmode: A mode of the EVRC-WB codec.  An encoder can use this to\n   signal
        its current mode of operation.  Possible values are 0,4,7 (see\n   Table 2.5.1.2-1
        in 3GPP2 C.S0014-C).  Absence of this parameter\n   signals mode 0.\n   ptime:
        See RFC 4566.\n   maxptime: See RFC 4566.\n   maxinterleave: Maximum number
        for interleaving length (field LLL in\n   the Interleaving Octet)[0..7].  The
        interleaving lengths used in the\n   entire session MUST NOT exceed this maximum
        value.  If not signaled,\n   the maxinterleave length MUST be 5.\n   silencesupp:
        See Section 6.1 in RFC 4788.\n   dtxmax: See Section 6.1 in RFC 4788.\n   dtxmin:
        See Section 6.1 in RFC 4788.\n   hangover: See Section 6.1 in RFC 4788.\n
        \  Encoding considerations:\n   This media type is framed binary data (see
        RFC 4288, Section 4.8) and\n   is defined for transfer of EVRC-WB encoded
        data via RTP using the\n   interleaved/bundled packet format specified in
        RFC 3558.\n   Security considerations: See Section 18 of RFC 5188.\n   Interoperability
        considerations: None\n   Published specification:\n   The EVRC-WB vocoder
        is specified in 3GPP2 C.S0014-C.  The transfer\n   method with the interleaved/bundled
        packet format via RTP is\n   specified in RFC 3558 and RFC 5188.\n   3GPP2
        C.S0050-B, 3GPP2 File Formats for Multimedia Services.\n   3GPP2 specifications
        are publicly accessible at http://www.3gpp2.org\n   Applications that use
        this media type:\n   It is expected that many VoIP applications (as well as
        mobile\n   applications) will use this type.\n   Additional information:\n
        \  The following applies to stored-file transfer methods:\n   Magic number:
        #!EVCWB\\n (see Section 8 of RFC 5188)\n   File extensions: evw, EVW\n   Macintosh
        file type code: None\n   Object identifier or OID: None\n   EVRC-WB speech
        frames may also be stored in the file format \"3g2\"\n   defined in 3GPP2
        C.S0050-B, which is identified using the media types\n   \"audio/3gpp2\" or
        \"video/3gpp2\" registered by RFC 4393.\n   Person & email address to contact
        for further information:\n   Harikishan Desineni <hd@qualcomm.com>\n   Intended
        usage: COMMON\n   Restrictions on usage:\n   When this media type is used
        in the context of transfer over RTP, the\n   RTP payload format specified
        in Section 4.1 of RFC 3558 SHALL be\n   used.  In all other contexts, the
        file format defined in Section 8 of\n   RFC 5188 SHALL be used.\n   Author:\n
        \  Harikishan Desineni\n   Change controller:\n   IETF Audio/Video Transport
        working group delegated from the IESG.\n"
      title: 9.1.1.  Registration of Media Type audio/EVRCWB
    - contents:
      - "9.1.2.  Registration of Media Type audio/EVRCWB0\n   Type name: audio\n   Subtype
        name: EVRCWB0\n   Required parameters: None\n   Optional parameters:\n   These
        parameters apply to RTP transfer only.\n   mode-set-recv: A subset of EVRC-WB
        modes.  Possible values are a\n   comma-separated list of modes from the set
        {0,4,7} (see Table\n   2.5.1.2-1 in 3GPP2 C.S0014-C).  A decoder can use this
        attribute to\n   inform an encoder of its preference to operate in a specified
        subset\n   of modes.  Absence of this parameter signals the mode set {0,4,7}.\n
        \  sendmode: A mode of the EVRC-WB codec.  An encoder can use this to\n   signal
        its current mode of operation.  Possible values are 0,4,7 (see\n   Table 2.5.1.2-1
        in 3GPP2 C.S0014-C).  Absence of this parameter\n   signals mode 0.\n   ptime:
        See RFC 4566.\n   silencesupp: See Section 6.1 in RFC 4788.\n   dtxmax: See
        Section 6.1 in RFC 4788.\n   dtxmin: See Section 6.1 in RFC 4788.\n   hangover:
        See Section 6.1 in RFC 4788.\n   Encoding considerations:\n   This media type
        is framed binary data (see RFC 4288, Section 4.8) and\n   is defined for transfer
        of EVRC-WB encoded data via RTP using the\n   header-free packet format specified
        in RFC 3558.\n   Security considerations: See Section 18 of RFC 5188.\n   Interoperability
        considerations: None\n   Published specification:\n   The EVRC-WB vocoder
        is specified in 3GPP2 C.S0014-C.  The transfer\n   method with the header-free
        packet format via RTP is specified in RFC\n   3558 and RFC 5188.\n   3GPP2
        C.S0050-B, 3GPP2 File Formats for Multimedia Services.\n   3GPP2 specifications
        are publicly accessible at http://www.3gpp2.org\n   Applications that use
        this media type:\n   It is expected that many VoIP applications (as well as
        mobile\n   applications) will use this type.\n   Additional information: None\n
        \  Person & email address to contact for further information:\n   Harikishan
        Desineni <hd@qualcomm.com>\n   Intended usage: COMMON\n   Restrictions on
        usage:\n   This media type depends on RTP framing and hence is only defined
        for\n   transfer via RTP [6]; the RTP payload format specified in Section
        4.2\n   of RFC 3558 SHALL be used.  This media type SHALL NOT be used for\n
        \  storage or file transfer using the file format defined in Section 8\n   of
        RFC 5188; instead, audio/EVRCWB SHALL be used.\n   Author:\n   Harikishan
        Desineni\n   Change controller:\n   IETF Audio/Video Transport working group
        delegated from the IESG.\n"
      title: 9.1.2.  Registration of Media Type audio/EVRCWB0
    - contents:
      - "9.1.3.  Registration of Media Type audio/EVRCWB1\n   Type name: audio\n   Subtype
        name: EVRCWB1\n   Required parameters: None\n   Optional parameters:\n   These
        parameters apply to RTP transfer only.\n   mode-set-recv: A subset of EVRC-WB
        modes.  Possible values are a\n   comma-separated list of modes from the set
        {0,4,7} (see Table\n   2.5.1.2-1 in 3GPP2 C.S0014-C).  A decoder can use this
        attribute to\n   inform an encoder of its preference to operate in a specified
        subset\n   of modes.  A value of 0 signals the support for wideband fixed
        rate\n   (full or half rate, depending on the value of the 'fixedrate'\n   parameter).
        \ A value of 4 signals narrowband fixed full rate.  A\n   value of 7 signals
        narrowband fixed half rate.  Absence of this\n   parameter signals mode 0.\n
        \  sendmode: A mode of the EVRC-WB codec.  An encoder can use this to\n   signal
        its current mode of operation.  Possible values are 0,4,7 (see\n   Table 2.5.1.2-1
        in 3GPP2 C.S0014-C). 'sendmode' with value 0 signals\n   wideband fixed-rate
        operation (full or half rate, depending on the\n   value of the 'fixedrate'
        parameter). 'sendmode' with value 4 signals\n   narrowband fixed full-rate
        operation. 'sendmode' with value 7 signals\n   narrowband fixed half-rate
        operation.  The 'fixedrate' parameter MUST\n   NOT be present when the 'sendmode'
        value is 4 or 7.  Absence of this\n   parameter signals mode 0.\n   ptime:
        See RFC 4566.\n   maxptime: See RFC 4566.\n   fixedrate: Indicates the EVRC-WB
        rate of the session while in single-\n   rate operation.  Valid values include
        0.5 and 1, where a value of 0.5\n   indicates the 1/2 rate while a value of
        1 indicates the full rate.\n   If this parameter is not present, 1/2 rate
        is assumed.\n   silencesupp: See Section 6.1 in RFC 4788.\n   dtxmax: See
        Section 6.1 in RFC 4788.\n   dtxmin: See Section 6.1 in RFC 4788.\n   hangover:
        See Section 6.1 in RFC 4788.\n   Encoding considerations:\n   This media type
        is framed binary data (see RFC 4288, Section 4.8) and\n   is defined for transfer
        of EVRC-WB encoded data via RTP using the\n   compact bundle packet format
        specified in RFC 4788.\n   Security considerations: See Section 18 of RFC
        5188.\n   Interoperability considerations: None\n   Published specification:\n
        \  The EVRC-WB vocoder is specified in 3GPP2 C.S0014-C.  The transfer\n   method
        with the compact bundled packet format via RTP is specified in\n   RFC 4788
        and RFC 5188.\n   3GPP2 C.S0050-B, 3GPP2 File Formats for Multimedia Services.\n
        \  3GPP2 specifications are publicly accessible at http://www.3gpp2.org\n
        \  Applications that use this media type:\n   It is expected that many VoIP
        applications (as well as mobile\n   applications) will use this type.\n   Additional
        information: None\n   Person & email address to contact for further information:\n
        \  Harikishan Desineni <hd@qualcomm.com>\n   Intended usage: COMMON\n   Restrictions
        on usage:\n   This media type depends on RTP framing and hence is only defined
        for\n   transfer via RTP [6]; the RTP payload format specified in Section
        4\n   of RFC 4788 SHALL be used.  This media type SHALL NOT be used for\n
        \  storage or file transfer using the file format defined in Section 8\n   of
        RFC 5188; instead, audio/EVRCWB SHALL be used.\n   Author:\n   Harikishan
        Desineni\n   Change controller:\n   IETF Audio/Video Transport working group
        delegated from the IESG.\n"
      title: 9.1.3.  Registration of Media Type audio/EVRCWB1
    - contents:
      - "9.1.4.  Updated Registration of Media Type audio/EVRCB\n   Type name: audio\n
        \  Subtype name: EVRCB\n   Required parameters: None\n   Optional parameters:\n
        \  These parameters apply to RTP transfer only.\n   recvmode: A mode of the
        EVRC-B codec.  A decoder can use this\n   attribute to inform an encoder of
        its preference to operate in a\n   specified mode.  Possible values are 0..7
        (see the encoder operating\n   point column in Table 2-6 of 3GPP2 C.S0014-B).\n
        \  sendmode: A mode of the EVRC-B codec.  An encoder can use this to\n   signal
        its current mode of operation.  Possible values are 0..7 (see\n   encoder
        operating point column in Table 2-6 of 3GPP2 C.S0014-B).\n   ptime: See RFC
        4566.\n   maxptime: See RFC 4566.\n   maxinterleave: Maximum number for interleaving
        length (field LLL in\n   the Interleaving Octet).  The interleaving lengths
        used in the entire\n   session MUST NOT exceed this maximum value.  If not
        signaled, the\n   maxinterleave length MUST be 5.\n   silencesupp: See Section
        6.1 of RFC 4788 for a definition.  If this\n   parameter is not present, the
        default value 1 MUST be assumed.\n   dtxmax: See Section 6.1 of RFC 4788.\n
        \  dtxmin: See Section 6.1 of RFC 4788.\n   hangover: See Section 6.1 of RFC
        4788.\n   Encoding considerations:\n   This media type is framed binary data
        (see RFC 4288, Section 4.8) and\n   is defined for transfer of EVRC-B encoded
        data via RTP using the\n   interleaved/bundled packet format specified in
        RFC 3558.\n   Security considerations: See Section 9 of RFC 4788.\n   Interoperability
        considerations: None\n   Published specification:\n   The EVRC-B vocoder is
        specified in 3GPP2 C.S0014-B.  The transfer\n   method with the interleaved/bundled
        packet format via RTP is\n   specified in RFC 3558, RFC 4788, and RFC 5188.\n
        \  Applications that use this media type:\n   It is expected that many VoIP
        applications (as well as mobile\n   applications) will use this type.\n   Additional
        information: The following information applies for the\n   storage format
        only.\n   Magic number: #!EVRC-B\\n (see Section 5 of RFC 4788)\n   File extensions:
        evb, EVB\n   Macintosh file type code: None\n   Object identifier or OID:
        None\n   Person & email address to contact for further information:\n   Harikishan
        Desineni <hd@qualcomm.com>\n   Intended usage: COMMON\n   Restrictions on
        usage:\n   When this media type is used in the context of transfer over RTP,
        the\n   RTP payload format specified in Section 4.1 of RFC 3558 SHALL be\n
        \  used.  In all other contexts, the file format defined in Section 5 of\n
        \  RFC 4788 SHALL be used.\n   Author:\n   Qiaobing Xie / Harikishan Desineni\n
        \  Change controller:\n   IETF Audio/Video Transport working group delegated
        from the IESG.\n"
      title: 9.1.4.  Updated Registration of Media Type audio/EVRCB
    - contents:
      - "9.1.5.  Updated Registration of Media Type audio/EVRCB0\n   Type name: audio\n
        \  Subtype name: EVRCB0\n   Required parameters: None\n   Optional parameters:\n
        \  These parameters apply to RTP transfer only.\n   recvmode: A mode of the
        EVRC-B codec.  A decoder can use this\n   attribute to inform an encoder of
        its preference to operate in a\n   specified mode.  Possible values are 0..7
        (see the encoder operating\n   point column in Table 2-6 of 3GPP2 C.S0014-B).\n
        \  sendmode: A mode of the EVRC-B codec.  An encoder can use this to\n   signal
        its current mode of operation.  Possible values are 0..7 (see\n   the encoder
        operating point column in Table 2-6 of 3GPP2 C.S0014-B).\n   silencesupp:
        See Section 6.1 of RFC 4788 for a definition.  If this\n   parameter is not
        present, the default value 1 MUST be assumed.\n   dtxmax: see Section 6.1
        of RFC 4788.\n   dtxmin: see Section 6.1 of RFC 4788.\n   hangover: see Section
        6.1 of RFC 4788.\n   Encoding considerations:\n   This media type is framed
        binary data (see RFC 4288, Section 4.8) and\n   is defined for transfer of
        EVRC-B encoded data via RTP using the\n   header-free packet format specified
        in RFC 3558.\n   Security considerations: See Section 9 of RFC 4788.\n   Interoperability
        considerations: None\n   Published specification:\n   The EVRC-B vocoder is
        specified in 3GPP2 C.S0014-B.  The transfer\n   method with the header-free
        packet format via RTP is specified in RFC\n   3558, RFC 4788, and RFC 5188.\n
        \  Applications that use this media type:\n   It is expected that many VoIP
        applications (as well as mobile\n   applications) will use this type.\n   Additional
        information: None\n   Person & email address to contact for further information:\n
        \  Harikishan Desineni <hd@qualcomm.com>\n   Intended usage: COMMON\n   Restrictions
        on usage:\n   When this media type is used in the context of transfer over
        RTP, the\n   RTP payload format specified in Section 4.2 of RFC 3558 SHALL
        be\n   used.\n   This media type depends on RTP framing and hence is only
        defined for\n   transfer via RTP [6]; the RTP payload format specified in
        Section 4.2\n   of RFC 3558 SHALL be used.  This media type SHALL NOT be used
        for\n   storage or file transfer using the file format defined in Section
        5\n   of RFC 4788; instead, audio/EVRCB SHALL be used.\n   Author:\n   Qiaobing
        Xie / Harikishan Desineni\n   Change controller:\n   IETF Audio/Video Transport
        working group delegated from the IESG.\n"
      title: 9.1.5.  Updated Registration of Media Type audio/EVRCB0
    title: 9.1.  Media Type Registrations
  title: 9.  IANA Considerations
- contents:
  - "10.  SDP Mode Attributes for EVRC-WB and EVRC-B\n   'sendmode' can be used by
    a sender (EVRC-WB or EVRC-B) to announce\n   its encoder's current mode of operation.
    \ A sender can change its\n   mode anytime, and this does not cause any decoding
    problems at the\n   receiver.\n   'recvmode' is defined for use with EVRC-B.  A
    decoder can use this\n   attribute to inform an encoder of its preference to operate
    in a\n   specified mode.  The receiver will continue to decode properly even\n
    \  if the sender does not operate in the preferred mode.\n   'mode-set-recv' is
    defined for use with EVRC-WB.  A decoder can use\n   this attribute to inform
    an encoder of its preference to operate in a\n   specified subset of modes.  The
    receiver will continue to decode\n   properly even if the sender does not operate
    in one of the preferred\n   modes.  A set has been defined so that several modes
    can be expressed\n   as a preference in one attempt.  For instance, the set {4,7}
    signals\n   that the receiver prefers the sender to operate in narrowband modes\n
    \  of EVRC-WB.\n"
  title: 10.  SDP Mode Attributes for EVRC-WB and EVRC-B
- contents:
  - "11.  EVRC-B Interoperability with Legacy Implementations (RFC 4788)\n   This
    document adds new optional parameters \"recvmode\" and \"sendmode\"\n   to the
    original EVRC-B media types \"audio/EVRCB\" and \"audio/EVRCB0\"\n   defined in
    RFC 4788 [3].  Existing RFC 4788 [3] implementations will\n   not send these parameters
    in the Session Description Protocol (SDP)\n   and will ignore them if they are
    received.  This will allow\n   interoperability between RFC 4788 [3] and RFC 5188
    implementations of\n   EVRC-B.  For an example offer-and-answer exchange, see
    Section 17.\n"
  title: 11.  EVRC-B Interoperability with Legacy Implementations (RFC 4788)
- contents:
  - "12.  Mapping EVRC-WB Media Type Parameters into SDP\n   Information carried in
    the media type specification has a specific\n   mapping to fields in the Session
    Description Protocol (SDP) [8],\n   which is commonly used to describe RTP sessions.
    \ When SDP is used to\n   specify sessions employing EVRC-WB encoded speech, the
    mapping is as\n   follows.\n   o  The media type (\"audio\") goes in SDP \"m=\"
    as the media name.\n   o  The media subtype (\"EVRCWB\", \"EVRCWB0\", or \"EVRCWB1\")
    goes in SDP\n      \"a=rtpmap\" as the encoding name.\n   o  The optional parameters
    'ptime' and 'maxptime' (for subtypes\n      EVRCWB, EVRCWB1) go in the SDP \"a=ptime\"
    and \"a=maxptime\"\n      attributes, respectively.\n   o  Any remaining parameters
    (for subtypes EVRCWB, EVRCWB0, and\n      EVRCWB1) go in the SDP \"a=fmtp\" attribute
    by copying them from the\n      media type string as a semicolon-separated list
    of parameter=value\n      pairs.\n"
  title: 12.  Mapping EVRC-WB Media Type Parameters into SDP
- contents:
  - "13.  Mapping EVRC-B Media Type Parameters into SDP\n   The new optional parameters
    'recvmode' and 'sendmode' (for 'audio'\n   subtypes EVRCB and EVRCB0) go in the
    SDP \"a=fmtp\" attribute by\n   copying them directly from the media type string.\n
    \  For all other media type parameters, the specification in Section 6.7\n   of
    RFC 4788 [3] still applies.\n"
  title: 13.  Mapping EVRC-B Media Type Parameters into SDP
- contents:
  - "14.  Offer-Answer Model Considerations for EVRC-WB\n   The following considerations
    apply when using the SDP offer-answer\n   procedures of RFC 3264 [7] to negotiate
    the use of EVRC-WB payload in\n   RTP:\n   o  Since EVRC-WB is an extension of
    EVRC-B, the offerer SHOULD\n      announce EVRC-B support in its \"m=audio\" line,
    with EVRC-WB as the\n      preferred codec.  This will allow interoperability
    with an\n      answerer that supports only EVRC-B.\n   Below is an example of
    such an offer:\n          m=audio 55954 RTP/AVP 98 99\n          a=rtpmap:98 EVRCWB0/16000\n
    \         a=rtpmap:99 EVRCB0/8000\n          a=fmtp:98 mode-set-recv=0,4;sendmode=0\n
    \         a=fmtp:99 recvmode=0 sendmode=4\n   If the answerer supports EVRC-WB,
    then the answerer can keep the\n   payload type 98 in its answer and the conversation
    can be done using\n   EVRC-WB.  Else, if the answerer supports only EVRC-B, then
    the\n   answerer will leave only the payload type 99 in its answer and the\n   conversation
    will be done using EVRC-B.\n   An example answer for the above offer is the following:\n
    \         m=audio 55954 RTP/AVP 98\n          a=rtpmap:98 EVRCWB0/16000\n          a=fmtp:98
    mode-set-recv=4;sendmode=4\n   o  'mode-set-recv' is a unidirectional receive-only
    parameter.\n   o  'sendmode' is a unidirectional send-only parameter.\n   o  Using
    'sendmode', a sender can signal its current mode of\n      operation.  Note that
    a receiver may receive RTP media well before\n      the arrival of SDP with a
    (first-time, or updated) 'sendmode'\n      parameter.\n   o  An offerer can use
    'mode-set-recv' to request that the remote\n      sender's encoder be limited
    to the list of modes signaled in\n      'mode-set-recv'.  A remote sender MAY
    ignore 'mode-set-recv'\n      requests.\n   o  The parameters 'maxptime' and 'ptime'
    will in most cases not\n      affect interoperability; however, the setting of
    the parameters\n      can affect the performance of the application.  The SDP
    offer-\n      answer handling of the 'ptime' parameter is described in RFC 3264\n
    \     [7].  The 'maxptime' parameter MUST be handled in the same way.\n   o  For
    a sendonly stream, the 'mode-set-recv' parameter is not useful\n      and SHOULD
    NOT be used.\n   o  For a recvonly stream, the 'sendmode' parameter is not useful
    and\n      SHOULD NOT be used.\n   o  When using EVRCWB1, the entire session MUST
    use the same fixed\n      rate and mode (0-Wideband or 4,7-Narrowband).\n   o
    \ For additional rules that MUST be followed while negotiating DTX\n      parameters,
    see Section 6.8 in [3].\n   o  Any unknown parameter in an SDP offer MUST be ignored
    by the\n      receiver and MUST NOT be included in the SDP answer.\n"
  title: 14.  Offer-Answer Model Considerations for EVRC-WB
- contents:
  - "15.  Offer-Answer Model Considerations for EVRC-B\n   See Section 6.8 of [3]
    for offer-answer usage of EVRC-B.  The\n   following are several additional considerations
    for EVRC-B.\n   o  'recvmode' is a unidirectional receive-only parameter.\n   o
    \ 'sendmode' is a unidirectional send-only parameter.\n   o  Using 'recvmode',
    a receiver can signal the remote sender to\n      operate its encoder in the specified
    mode.  A remote sender MAY\n      ignore 'recvmode' requests.\n   o  Using 'sendmode',
    a sender can signal its current mode of\n      operation.  Note that a receiver
    may receive RTP media well before\n      the arrival of SDP with a (first-time,
    or updated) 'sendmode'\n      parameter.\n   o  For a sendonly stream, the 'recvmode'
    parameter is not useful and\n      SHOULD NOT be used.\n   o  For a recvonly stream,
    the 'sendmode' parameter is not useful and\n      SHOULD NOT be used.\n"
  title: 15.  Offer-Answer Model Considerations for EVRC-B
- contents:
  - "16.  Declarative SDP Considerations\n   For declarative use of SDP in the Session
    Announcement Protocol (SAP)\n   [12] and the Real Time Streaming Protocol (RTSP)
    [13], the following\n   considerations apply:\n   o  Any 'maxptime' and 'ptime'
    values should be selected with care to\n      ensure that the session's participants
    can achieve reasonable\n      performance.\n   o  The payload format configuration
    parameters are all declarative,\n      and a participant MUST use the configuration(s)
    that is provided\n      for the session.  More than one configuration may be provided
    if\n      necessary by declaring multiple RTP payload types; however, the\n      number
    of types should be kept small.  For declarative examples,\n      see Section 17.\n"
  title: 16.  Declarative SDP Considerations
- contents:
  - "17.  Examples\n   Some example SDP session descriptions utilizing EVRC-WB and
    EVRC-B\n   encodings follow.  In these examples, long a=fmtp lines are folded
    to\n   meet the column width constraints of this document.  The backslash\n   (\"\\\")
    at the end of a line and the carriage return that follows it\n   should be ignored.
    \ Note that media subtype names are case-\n   insensitive.  Parameter names are
    case-insensitive both in media\n   types and in the mapping to the SDP a=fmtp
    attribute.\n     Example usage of EVRCWB:\n        m=audio 49120 RTP/AVP 97 98\n
    \       a=rtpmap:97 EVRCWB/16000\n        a=rtpmap:98 EVRCB0/8000\n        a=fmtp:97
    mode-set-recv=0,4;sendmode=0\n        a=fmtp:98 recvmode=0 sendmode=0\n        a=maxptime:120\n
    \    Example usage of EVRCWB0:\n        m=audio 49120 RTP/AVP 97 98\n        a=rtpmap:97
    EVRCWB0/16000\n        a=rtpmap:98 EVRCB0/8000\n        a=fmtp:97 mode-set-recv=0,4;sendmode=0\n
    \       a=fmtp:98 recvmode=0 sendmode=0\n     Example SDP answer from a media
    gateway requesting a terminal to\n     limit its encoder operation to EVRC-WB
    mode 4:\n        m=audio 49120 RTP/AVP 97\n        a=rtpmap:97 EVRCWB0/16000\n
    \       a=fmtp:97 mode-set-recv=4;sendmode=4\n     Example usage of EVRCWB1:\n
    \      m=audio 49120 RTP/AVP 97 98\n       a=rtpmap:97 EVRCWB1/16000\n       a=fmtp:97
    mode-set-recv=4;sendmode=4\n       a=maxptime:100\n     Example usage of EVRCWB
    with DTX with silencesupp=1:\n        m=audio 49120 RTP/AVP 97 98\n        a=rtpmap:97
    EVRCWB/16000\n        a=rtpmap:98 EVRCB0/8000\n        a=fmtp:97 silencesupp=1;dtxmax=32;dtxmin=12;hangover=1
    \\\n        mode-set-recv=0,4; sendmode=0\n        a=fmtp:98 recvmode=0 sendmode=0\n
    \       a=maxptime:120\n     Example usage of EVRCWB with DTX with silencesupp=0:\n
    \       m=audio 49120 RTP/AVP 97 98\n        a=rtpmap:97 EVRCWB/16000\n        a=rtpmap:98
    EVRCB0/8000\n        a=fmtp:97 silencesupp=0;dtxmax=32;dtxmin=12;hangover=1 \\\n
    \       mode-set-recv=0,4;sendmode=0\n        a=fmtp:98 recvmode=0 sendmode=0\n
    \       a=maxptime:120\n     Example usage of EVRCB:\n        m=audio 49120 RTP/AVP
    97\n        a=rtpmap:97 EVRCB/8000\n        a=fmtp:97 recvmode=0 sendmode=4\n
    \       a=maxptime:120\n     Example usage of EVRCB0:\n        m=audio 49120 RTP/AVP
    97\n        a=rtpmap:97 EVRCB0/8000\n        a=fmtp:97 recvmode=0 sendmode=4\n
    \    Example offer-answer exchange between EVRC-WB and\n     legacy EVRC-B (RFC
    4788):\n      Offer:\n        m=audio 55954 RTP/AVP 98 99\n        a=rtpmap:98
    EVRCWB0/16000\n        a=rtpmap:99 EVRCB0/8000\n        a=fmtp:98 mode-set-recv=0,4;sendmode=0\n
    \       a=fmtp:99 recvmode=0 sendmode=0\n      Answer:\n        m=audio 55954
    RTP/AVP 99\n        a=rtpmap:99 EVRCB0/8000\n     Example offer-answer exchange
    between EVRC-WB and\n     updated EVRC-B (RFC 5188):\n      Offer:\n        m=audio
    55954 RTP/AVP 98 99\n        a=rtpmap:98 EVRCWB0/16000\n        a=rtpmap:99 EVRCB0/8000\n
    \       a=fmtp:98 mode-set-recv=0,4; sendmode=0\n        a=fmtp:99 recvmode=0
    sendmode=0\n      Answer:\n        m=audio 55954 RTP/AVP 99\n        a=rtpmap:99
    EVRCB0/8000\n        a=fmtp:99 recvmode=0 sendmode=4\n     In the above example,
    note that the answerer has chosen\n     to send in mode 4 even though the offerer
    was willing to\n     receive in mode 0. 'recvmode' is a receiver's preference,\n
    \    but the sender can send in a different mode.\n     Example offer-answer exchanges
    for interoperability between\n     legacy (RFC 4788) and updated EVRC-B (RFC 5188)
    implementations:\n        Offer from an offerer that supports updated EVRC-B (RFC
    5188)\n        implementation:\n          m=audio 55954 RTP/AVP 99\n          a=rtpmap:99
    EVRCB0/8000\n          a=fmtp:99 recvmode=0 sendmode=4\n        Answer from an
    answerer that supports only\n        legacy EVRC-B (RFC 4788) implementation:\n
    \         m=audio 55954 RTP/AVP 99\n          a=rtpmap:99 EVRCB0/8000\n        Offer
    from an offerer that supports only\n        legacy EVRC-B (RFC 4788) implementation:\n
    \         m=audio 55954 RTP/AVP  99\n          a=rtpmap:99 EVRCB0/8000\n        Answer
    from an answerer that supports updated\n        EVRC-B (RFC 5188) implementation:\n
    \         m=audio 55954 RTP/AVP 99\n          a=rtpmap:99 EVRCB0/8000\n          a=fmtp:99
    recvmode=0 sendmode=4\n"
  title: 17.  Examples
- contents:
  - "18.  Security Considerations\n   Since compression is applied to the payload
    formats end-to-end, and\n   the encodings do not exhibit significant non-uniformity,\n
    \  implementations of this specification are subject to all the security\n   considerations
    specified in RFC 3558 [2].  Implementations using the\n   payload defined in this
    specification are subject to the security\n   considerations discussed in RFC
    3558 [2], RFC 3550 [6], and any\n   appropriate profile (for example, RFC 3551
    [11]).\n"
  title: 18.  Security Considerations
- contents:
  - "19.  Changes to RFC 4788\n   This document updates RFC 4788 [3], and the updates
    are summarized\n   below:\n   o  Added new media type attribute \"sendmode\" to
    media subtypes EVRCB\n      and EVRCB0.  This attribute can be used to signal
    the EVRC-B\n      encoder's current mode of operation.\n   o  Added new media
    type attribute \"recvmode\" to media subtypes EVRCB\n      and EVRCB0.  This attribute
    can be used to signal the EVRC-B\n      decoder's preferred operating mode to
    a remote sender.\n"
  title: 19.  Changes to RFC 4788
- contents:
  - '20.  References

    '
  - contents:
    - "20.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [2]   Li, A., \"RTP Payload Format for Enhanced Variable Rate Codecs\n         (EVRC)
      and Selectable Mode Vocoders (SMV)\", RFC 3558,\n         July 2003.\n   [3]
      \  Xie, Q. and R. Kapoor, \"Enhancements to RTP Payload Formats for\n         EVRC
      Family Codecs\", RFC 4788, January 2007.\n   [4]   \"Enhanced Variable Rate
      Codec, Speech Service Option 3 and 68\n         for Wideband Spread Spectrum
      Digital Systems\", 3GPP2 C.S0014-B\n         v1.0 , May 2006.\n   [5]   \"Enhanced
      Variable Rate Codec, Speech Service Option 3,68 and\n         70 for Wideband
      Spread Spectrum Digital Systems\", 3GPP2\n         C.S0014-C v1.0 , October
      2006.\n   [6]   Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson,\n
      \        \"RTP: A Transport Protocol for Real-Time Applications\", STD 64,\n
      \        RFC 3550, March 1997.\n   [7]   Rosenberg, J. and H. Schulzrinne, \"An
      Offer/Answer Model with\n         Session Description Protocol (SDP)\", RFC
      3264, June 2002.\n   [8]   Handley, M., Jacobson, V., and C. Perkins, \"SDP:
      Session\n         Description Protocol\", RFC 4566, July 2006.\n   [9]   Casner,
      S., \"Media Type Specifications and Registration\n         Procedures\", RFC
      4855, February 2007.\n   [10]  Freed, N. and J. Klensin, \"Media Type Specifications
      and\n         Registration Procedures\", BCP 13, RFC 4288, December 2005.\n"
    title: 20.1.  Normative References
  - contents:
    - "20.2.  Informative References\n   [11]  Schulzrinne, H. and S. Casner, \"RTP
      Profile for Audio and Video\n         Conferences with Minimal Control\", STD
      65, RFC 3551, July 2003.\n   [12]  Handley, M., Perkins, C., and E. Whelan,
      \"Session Announcement\n         Protocol\", RFC 2974, October 2000.\n   [13]
      \ Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time Streaming\n         Protocol
      (RTSP)\", RFC 2326, April 1998.\n"
    title: 20.2.  Informative References
  title: 20.  References
- contents:
  - "Authors' Addresses\n   Harikishan Desineni\n   Qualcomm\n   5775 Morehouse Drive\n
    \  San Diego, CA  92126\n   USA\n   Phone: +1 858 845 8996\n   EMail: hd@qualcomm.com\n
    \  URI:   http://www.qualcomm.com\n   Qiaobing Xie\n   Motorola\n   1501 W. Shure
    Drive, 2-F9\n   Arlington Heights, IL  60004\n   USA\n   Phone: +1-847-372-8481\n
    \  EMail: Qiaobing.Xie@Gmail.com\n   URI:   http://www.motorola.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
