- title: __initial_text__
  contents:
  - '      The Internet IP Security Domain of Interpretation for ISAKMP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   Section 4.4.4.2 states, \"All implememtations within the IPSEC\
    \ DOI\n   MUST support ESP_DES...\".  Recent work in the area of cryptanalysis\n\
    \   suggests that DES may not be sufficiently strong for many\n   applications.\
    \  Therefore, it is very likely that the IETF will\n   deprecate the use of ESP_DES\
    \ as a mandatory cipher suite in the near\n   future.  It will remain as an optional\
    \ use protocol.  Although the\n   IPsec working group and the IETF in general\
    \ have not settled on an\n   alternative algorithm (taking into account concerns\
    \ of security and\n   performance), implementers may want to heed the recommendations\
    \ of\n   section 4.4.4.3 on the use of ESP_3DES.\n"
- title: 1. Abstract
  contents:
  - "1. Abstract\n   The Internet Security Association and Key Management Protocol\n\
    \   (ISAKMP) defines a framework for security association management and\n   cryptographic\
    \ key establishment for the Internet.  This framework\n   consists of defined\
    \ exchanges, payloads, and processing guidelines\n   that occur within a given\
    \ Domain of Interpretation (DOI).  This\n   document defines the Internet IP Security\
    \ DOI (IPSEC DOI), which\n   instantiates ISAKMP for use with IP when IP uses\
    \ ISAKMP to negotiate\n   security associations.\n   For a list of changes since\
    \ the previous version of the IPSEC DOI,\n   please see Section 7.\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   Within ISAKMP, a Domain of Interpretation is used to group\
    \ related\n   protocols using ISAKMP to negotiate security associations.  Security\n\
    \   protocols sharing a DOI choose security protocol and cryptographic\n   transforms\
    \ from a common namespace and share key exchange protocol\n   identifiers.  They\
    \ also share a common interpretation of DOI-specific\n   payload data content,\
    \ including the Security Association and\n   Identification payloads.\n   Overall,\
    \ ISAKMP places the following requirements on a DOI\n   definition:\n     o  define\
    \ the naming scheme for DOI-specific protocol identifiers\n     o  define the\
    \ interpretation for the Situation field\n     o  define the set of applicable\
    \ security policies\n     o  define the syntax for DOI-specific SA Attributes\
    \ (Phase II)\n     o  define the syntax for DOI-specific payload contents\n  \
    \   o  define additional Key Exchange types, if needed\n     o  define additional\
    \ Notification Message types, if needed\n   The remainder of this document details\
    \ the instantiation of these\n   requirements for using the IP Security (IPSEC)\
    \ protocols to provide\n   authentication, integrity, and/or confidentiality for\
    \ IP packets sent\n   between cooperating host systems and/or firewalls.\n   For\
    \ a description of the overall IPSEC architecture, see [ARCH],\n   [AH], and [ESP].\n"
- title: 3. Terms and Definitions
  contents:
  - "3. Terms and Definitions\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL\
    \ NOT, SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear\
    \ in this\n   document, are to be interpreted as described in [RFC 2119].\n"
- title: 4.1 IPSEC Naming Scheme
  contents:
  - "4.1 IPSEC Naming Scheme\n   Within ISAKMP, all DOI's must be registered with\
    \ the IANA in the\n   \"Assigned Numbers\" RFC [STD-2].  The IANA Assigned Number\
    \ for the\n   Internet IP Security DOI (IPSEC DOI) is one (1).  Within the IPSEC\n\
    \   DOI, all well-known identifiers MUST be registered with the IANA\n   under\
    \ the IPSEC DOI.  Unless otherwise noted, all tables within this\n   document\
    \ refer to IANA Assigned Numbers for the IPSEC DOI.  See\n   Section 6 for further\
    \ information relating to the IANA registry for\n   the IPSEC DOI.\n   All multi-octet\
    \ binary values are stored in network byte order.\n"
- title: 4.2 IPSEC Situation Definition
  contents:
  - "4.2 IPSEC Situation Definition\n   Within ISAKMP, the Situation provides information\
    \ that can be used by\n   the responder to make a policy determination about how\
    \ to process the\n   incoming Security Association request.  For the IPSEC DOI,\
    \ the\n   Situation field is a four (4) octet bitmask with the following\n   values.\n\
    \       Situation                   Value\n       ---------                  \
    \ -----\n       SIT_IDENTITY_ONLY           0x01\n       SIT_SECRECY         \
    \        0x02\n       SIT_INTEGRITY               0x04\n"
- title: 4.2.1 SIT_IDENTITY_ONLY
  contents:
  - "4.2.1 SIT_IDENTITY_ONLY\n   The SIT_IDENTITY_ONLY type specifies that the security\
    \ association\n   will be identified by source identity information present in\
    \ an\n   associated Identification Payload.  See Section 4.6.2 for a complete\n\
    \   description of the various Identification types.  All IPSEC DOI\n   implementations\
    \ MUST support SIT_IDENTITY_ONLY by including an\n   Identification Payload in\
    \ at least one of the Phase I Oakley\n   exchanges ([IKE], Section 5) and MUST\
    \ abort any association setup\n   that does not include an Identification Payload.\n\
    \   If an initiator supports neither SIT_SECRECY nor SIT_INTEGRITY, the\n   situation\
    \ consists only of the 4 octet situation bitmap and does not\n   include the Labeled\
    \ Domain Identifier field (Figure 1, Section 4.6.1)\n   or any subsequent label\
    \ information.  Conversely, if the initiator\n   supports either SIT_SECRECY or\
    \ SIT_INTEGRITY, the Labeled Domain\n   Identifier MUST be included in the situation\
    \ payload.\n"
- title: 4.2.2 SIT_SECRECY
  contents:
  - "4.2.2 SIT_SECRECY\n   The SIT_SECRECY type specifies that the security association\
    \ is being\n   negotiated in an environment that requires labeled secrecy.  If\n\
    \   SIT_SECRECY is present in the Situation bitmap, the Situation field\n   will\
    \ be followed by variable-length data that includes a sensitivity\n   level and\
    \ compartment bitmask.  See Section 4.6.1 for a complete\n   description of the\
    \ Security Association Payload format.\n   If an initiator does not support SIT_SECRECY,\
    \ SIT_SECRECY MUST NOT be\n   set in the Situation bitmap and no secrecy level\
    \ or category bitmaps\n   shall be included.\n   If a responder does not support\
    \ SIT_SECRECY, a SITUATION-NOT-\n   SUPPORTED Notification Payload SHOULD be returned\
    \ and the security\n   association setup MUST be aborted.\n"
- title: 4.2.3 SIT_INTEGRITY
  contents:
  - "4.2.3 SIT_INTEGRITY\n   The SIT_INTEGRITY type specifies that the security association\
    \ is\n   being negotiated in an environment that requires labeled integrity.\n\
    \   If SIT_INTEGRITY is present in the Situation bitmap, the Situation\n   field\
    \ will be followed by variable-length data that includes an\n   integrity level\
    \ and compartment bitmask.  If SIT_SECRECY is also in\n   use for the association,\
    \ the integrity information immediately\n   follows the variable-length secrecy\
    \ level and categories.  See\n   section 4.6.1 for a complete description of the\
    \ Security Association\n   Payload format.\n   If an initiator does not support\
    \ SIT_INTEGRITY, SIT_INTEGRITY MUST\n   NOT be set in the Situation bitmap and\
    \ no integrity level or category\n   bitmaps shall be included.\n   If a responder\
    \ does not support SIT_INTEGRITY, a SITUATION-NOT-\n   SUPPORTED Notification\
    \ Payload SHOULD be returned and the security\n   association setup MUST be aborted.\n"
- title: 4.3 IPSEC Security Policy Requirements
  contents:
  - "4.3 IPSEC Security Policy Requirements\n   The IPSEC DOI does not impose specific\
    \ security policy requirements\n   on any implementation.  Host system policy\
    \ issues are outside of the\n   scope of this document.\n   However, the following\
    \ sections touch on some of the issues that must\n   be considered when designing\
    \ an IPSEC DOI host implementation.  This\n   section should be considered only\
    \ informational in nature.\n"
- title: 4.3.1 Key Management Issues
  contents:
  - "4.3.1 Key Management Issues\n   It is expected that many systems choosing to\
    \ implement ISAKMP will\n   strive to provide a protected domain of execution\
    \ for a combined IKE\n   key management daemon.  On protected-mode multiuser operating\n\
    \   systems, this key management daemon will likely exist as a separate\n   privileged\
    \ process.\n   In such an environment, a formalized API to introduce keying material\n\
    \   into the TCP/IP kernel may be desirable.  The IP Security\n   architecture\
    \ does not place any requirements for structure or flow\n   between a host TCP/IP\
    \ kernel and its key management provider.\n"
- title: 4.3.2 Static Keying Issues
  contents:
  - "4.3.2 Static Keying Issues\n   Host systems that implement static keys, either\
    \ for use directly by\n   IPSEC, or for authentication purposes (see [IKE] Section\
    \ 5.4), should\n   take steps to protect the static keying material when it is\
    \ not\n   residing in a protected memory domain or actively in use by the\n  \
    \ TCP/IP kernel.\n   For example, on a laptop, one might choose to store the static\
    \ keys\n   in a configuration store that is, itself, encrypted under a private\n\
    \   password.\n   Depending on the operating system and utility software installed,\
    \ it\n   may not be possible to protect the static keys once they've been\n  \
    \ loaded into the TCP/IP kernel, however they should not be trivially\n   recoverable\
    \ on initial system startup without having to satisfy some\n   additional form\
    \ of authentication.\n"
- title: 4.3.3 Host Policy Issues
  contents:
  - "4.3.3 Host Policy Issues\n   It is not realistic to assume that the transition\
    \ to IPSEC will occur\n   overnight.  Host systems must be prepared to implement\
    \ flexible\n   policy lists that describe which systems they desire to speak\n\
    \   securely with and which systems they require speak securely to them.\n   Some\
    \ notion of proxy firewall addresses may also be required.\n   A minimal approach\
    \ is probably a static list of IP addresses, network\n   masks, and a security\
    \ required flag or flags.\n   A more flexible implementation might consist of\
    \ a list of wildcard\n   DNS names (e.g. '*.foo.bar'), an in/out bitmask, and\
    \ an optional\n   firewall address.  The wildcard DNS name would be used to match\n\
    \   incoming or outgoing IP addresses, the in/out bitmask would be used\n   to\
    \ determine whether or not security was to be applied and in which\n   direction,\
    \ and the optional firewall address would be used to\n   indicate whether or not\
    \ tunnel mode would be needed to talk to the\n   target system though an intermediate\
    \ firewall.\n"
- title: 4.3.4 Certificate Management
  contents:
  - "4.3.4 Certificate Management\n   Host systems implementing a certificate-based\
    \ authentication scheme\n   will need a mechanism for obtaining and managing a\
    \ database of\n   certificates.\n   Secure DNS is to be one certificate distribution\
    \ mechanism, however\n   the pervasive availability of secure DNS zones, in the\
    \ short term, is\n   doubtful for many reasons.  What's far more likely is that\
    \ hosts will\n   need an ability to import certificates that they acquire through\n\
    \   secure, out-of-band mechanisms, as well as an ability to export their\n  \
    \ own certificates for use by other systems.\n   However, manual certificate management\
    \ should not be done so as to\n   preclude the ability to introduce dynamic certificate\
    \ discovery\n   mechanisms and/or protocols as they become available.\n"
- title: 4.4 IPSEC Assigned Numbers
  contents:
  - "4.4 IPSEC Assigned Numbers\n   The following sections list the Assigned Numbers\
    \ for the IPSEC DOI:\n   Situation Identifiers, Protocol Identifiers, Transform\
    \ Identifiers,\n   AH, ESP, and IPCOMP Transform Identifiers, Security Association\n\
    \   Attribute Type Values, Labeled Domain Identifiers, ID Payload Type\n   Values,\
    \ and Notify Message Type Values.\n"
- title: 4.4.1 IPSEC Security Protocol Identifier
  contents:
  - "4.4.1 IPSEC Security Protocol Identifier\n   The ISAKMP proposal syntax was specifically\
    \ designed to allow for the\n   simultaneous negotiation of multiple Phase II\
    \ security protocol\n   suites within a single negotiation.  As a result, the\
    \ protocol suites\n   listed below form the set of protocols that can be negotiated\
    \ at the\n   same time.  It is a host policy decision as to what protocol suites\n\
    \   might be negotiated together.\n   The following table lists the values for\
    \ the Security Protocol\n   Identifiers referenced in an ISAKMP Proposal Payload\
    \ for the IPSEC\n   DOI.\n       Protocol ID                         Value\n \
    \      -----------                         -----\n       RESERVED            \
    \                0\n       PROTO_ISAKMP                        1\n       PROTO_IPSEC_AH\
    \                      2\n       PROTO_IPSEC_ESP                     3\n     \
    \  PROTO_IPCOMP                        4\n"
- title: 4.4.1.1 PROTO_ISAKMP
  contents:
  - "4.4.1.1 PROTO_ISAKMP\n   The PROTO_ISAKMP type specifies message protection required\
    \ during\n   Phase I of the ISAKMP protocol.  The specific protection mechanism\n\
    \   used for the IPSEC DOI is described in [IKE].  All implementations\n   within\
    \ the IPSEC DOI MUST support PROTO_ISAKMP.\n   NB: ISAKMP reserves the value one\
    \ (1) across all DOI definitions.\n"
- title: 4.4.1.2 PROTO_IPSEC_AH
  contents:
  - "4.4.1.2 PROTO_IPSEC_AH\n   The PROTO_IPSEC_AH type specifies IP packet authentication.\
    \  The\n   default AH transform provides data origin authentication, integrity\n\
    \   protection, and replay detection.  For export control considerations,\n  \
    \ confidentiality MUST NOT be provided by any PROTO_IPSEC_AH transform.\n"
- title: 4.4.1.3 PROTO_IPSEC_ESP
  contents:
  - "4.4.1.3 PROTO_IPSEC_ESP\n   The PROTO_IPSEC_ESP type specifies IP packet confidentiality.\n\
    \   Authentication, if required, must be provided as part of the ESP\n   transform.\
    \  The default ESP transform includes data origin\n   authentication, integrity\
    \ protection, replay detection, and\n   confidentiality.\n"
- title: 4.4.1.4 PROTO_IPCOMP
  contents:
  - "4.4.1.4 PROTO_IPCOMP\n   The PROTO_IPCOMP type specifies IP payload compression\
    \ as defined in\n   [IPCOMP].\n"
- title: 4.4.2 IPSEC ISAKMP Transform Identifiers
  contents:
  - "4.4.2 IPSEC ISAKMP Transform Identifiers\n   As part of an ISAKMP Phase I negotiation,\
    \ the initiator's choice of\n   Key Exchange offerings is made using some host\
    \ system policy\n   description.  The actual selection of Key Exchange mechanism\
    \ is made\n   using the standard ISAKMP Proposal Payload.  The following table\n\
    \   lists the defined ISAKMP Phase I Transform Identifiers for the\n   Proposal\
    \ Payload for the IPSEC DOI.\n       Transform                           Value\n\
    \       ---------                           -----\n       RESERVED           \
    \                 0\n       KEY_IKE                             1\n   Within the\
    \ ISAKMP and IPSEC DOI framework it is possible to define\n   key establishment\
    \ protocols other than IKE (Oakley).  Previous\n   versions of this document defined\
    \ types both for manual keying and\n   for schemes based on use of a generic Key\
    \ Distribution Center (KDC).\n   These identifiers have been removed from the\
    \ current document.\n   The IPSEC DOI can still be extended later to include values\
    \ for\n   additional non-Oakley key establishment protocols for ISAKMP and\n \
    \  IPSEC, such as Kerberos [RFC-1510] or the Group Key Management\n   Protocol\
    \ (GKMP) [RFC-2093].\n"
- title: 4.4.2.1 KEY_IKE
  contents:
  - "4.4.2.1 KEY_IKE\n   The KEY_IKE type specifies the hybrid ISAKMP/Oakley Diffie-Hellman\n\
    \   key exchange (IKE) as defined in the [IKE] document.  All\n   implementations\
    \ within the IPSEC DOI MUST support KEY_IKE.\n"
- title: 4.4.3 IPSEC AH Transform Identifiers
  contents:
  - "4.4.3 IPSEC AH Transform Identifiers\n   The Authentication Header Protocol (AH)\
    \ defines one mandatory and\n   several optional transforms used to provide authentication,\n\
    \   integrity, and replay detection.  The following table lists the\n   defined\
    \ AH Transform Identifiers for the ISAKMP Proposal Payload for\n   the IPSEC DOI.\n\
    \   Note: the Authentication Algorithm attribute MUST be specified to\n   identify\
    \ the appropriate AH protection suite.  For example, AH_MD5\n   can best be thought\
    \ of as a generic AH transform using MD5.  To\n   request the HMAC construction\
    \ with AH, one specifies the AH_MD5\n   transform ID along with the Authentication\
    \ Algorithm attribute set to\n   HMAC-MD5.  This is shown using the \"Auth(HMAC-MD5)\"\
    \ notation in the\n   following sections.\n       Transform ID               \
    \         Value\n       ------------                        -----\n       RESERVED\
    \                            0-1\n       AH_MD5                              2\n\
    \       AH_SHA                              3\n       AH_DES                 \
    \             4\n   Note: all mandatory-to-implement algorithms are listed as\
    \ \"MUST\"\n   implement (e.g. AH_MD5) in the following sections.  All other\n\
    \   algorithms are optional and MAY be implemented in any particular\n   implementation.\n"
- title: 4.4.3.1 AH_MD5
  contents:
  - "4.4.3.1 AH_MD5\n   The AH_MD5 type specifies a generic AH transform using MD5.\
    \  The\n   actual protection suite is determined in concert with an associated\n\
    \   SA attribute list.  A generic MD5 transform is currently undefined.\n   All\
    \ implementations within the IPSEC DOI MUST support AH_MD5 along\n   with the\
    \ Auth(HMAC-MD5) attribute.  This suite is defined as the\n   HMAC-MD5-96 transform\
    \ described in [HMACMD5].\n   The AH_MD5 type along with the Auth(KPDK) attribute\
    \ specifies the AH\n   transform (Key/Pad/Data/Key) described in RFC-1826.\n \
    \  Use of AH_MD5 with any other Authentication Algorithm attribute value\n   is\
    \ currently undefined.\n"
- title: 4.4.3.2 AH_SHA
  contents:
  - "4.4.3.2 AH_SHA\n   The AH_SHA type specifies a generic AH transform using SHA-1.\
    \  The\n   actual protection suite is determined in concert with an associated\n\
    \   SA attribute list.  A generic SHA transform is currently undefined.\n   All\
    \ implementations within the IPSEC DOI MUST support AH_SHA along\n   with the\
    \ Auth(HMAC-SHA) attribute.  This suite is defined as the\n   HMAC-SHA-1-96 transform\
    \ described in [HMACSHA].\n   Use of AH_SHA with any other Authentication Algorithm\
    \ attribute value\n   is currently undefined.\n"
- title: 4.4.3.3 AH_DES
  contents:
  - "4.4.3.3 AH_DES\n   The AH_DES type specifies a generic AH transform using DES.\
    \  The\n   actual protection suite is determined in concert with an associated\n\
    \   SA attribute list.  A generic DES transform is currently undefined.\n   The\
    \ IPSEC DOI defines AH_DES along with the Auth(DES-MAC) attribute\n   to be a\
    \ DES-MAC transform.  Implementations are not required to\n   support this mode.\n\
    \   Use of AH_DES with any other Authentication Algorithm attribute value\n  \
    \ is currently undefined.\n"
- title: 4.4.4 IPSEC ESP Transform Identifiers
  contents:
  - "4.4.4 IPSEC ESP Transform Identifiers\n   The Encapsulating Security Payload\
    \ (ESP) defines one mandatory and\n   many optional transforms used to provide\
    \ data confidentiality.  The\n   following table lists the defined ESP Transform\
    \ Identifiers for the\n   ISAKMP Proposal Payload for the IPSEC DOI.\n   Note:\
    \ when authentication, integrity protection, and replay detection\n   are required,\
    \ the Authentication Algorithm attribute MUST be\n   specified to identify the\
    \ appropriate ESP protection suite.  For\n   example, to request HMAC-MD5 authentication\
    \ with 3DES, one specifies\n   the ESP_3DES transform ID with the Authentication\
    \ Algorithm attribute\n   set to HMAC-MD5.  For additional processing requirements,\
    \ see Section\n   4.5 (Authentication Algorithm).\n       Transform ID       \
    \                 Value\n       ------------                        -----\n  \
    \     RESERVED                            0\n       ESP_DES_IV64             \
    \           1\n       ESP_DES                             2\n       ESP_3DES \
    \                           3\n       ESP_RC5                             4\n\
    \       ESP_IDEA                            5\n       ESP_CAST               \
    \             6\n       ESP_BLOWFISH                        7\n       ESP_3IDEA\
    \                           8\n       ESP_DES_IV32                        9\n\
    \       ESP_RC4                             10\n       ESP_NULL              \
    \              11\n   Note: all mandatory-to-implement algorithms are listed as\
    \ \"MUST\"\n   implement (e.g. ESP_DES) in the following sections.  All other\n\
    \   algorithms are optional and MAY be implemented in any particular\n   implementation.\n"
- title: 4.4.4.1 ESP_DES_IV64
  contents:
  - "4.4.4.1 ESP_DES_IV64\n   The ESP_DES_IV64 type specifies the DES-CBC transform\
    \ defined in\n   RFC-1827 and RFC-1829 using a 64-bit IV.\n"
- title: 4.4.4.2 ESP_DES
  contents:
  - "4.4.4.2 ESP_DES\n   The ESP_DES type specifies a generic DES transform using\
    \ DES-CBC.\n   The actual protection suite is determined in concert with an\n\
    \   associated SA attribute list.  A generic transform is currently\n   undefined.\n\
    \   All implementations within the IPSEC DOI MUST support ESP_DES along\n   with\
    \ the Auth(HMAC-MD5) attribute.  This suite is defined as the\n   [DES] transform,\
    \ with authentication and integrity provided by HMAC\n   MD5 [HMACMD5].\n"
- title: 4.4.4.3 ESP_3DES
  contents:
  - "4.4.4.3 ESP_3DES\n   The ESP_3DES type specifies a generic triple-DES transform.\
    \  The\n   actual protection suite is determined in concert with an associated\n\
    \   SA attribute list.  The generic transform is currently undefined.\n   All\
    \ implementations within the IPSEC DOI are strongly encouraged to\n   support\
    \ ESP_3DES along with the Auth(HMAC-MD5) attribute.  This suite\n   is defined\
    \ as the [ESPCBC] transform, with authentication and\n   integrity provided by\
    \ HMAC MD5 [HMACMD5].\n"
- title: 4.4.4.4 ESP_RC5
  contents:
  - "4.4.4.4 ESP_RC5\n   The ESP_RC5 type specifies the RC5 transform defined in [ESPCBC].\n"
- title: 4.4.4.5 ESP_IDEA
  contents:
  - "4.4.4.5 ESP_IDEA\n   The ESP_IDEA type specifies the IDEA transform defined in\
    \ [ESPCBC].\n"
- title: 4.4.4.6 ESP_CAST
  contents:
  - "4.4.4.6 ESP_CAST\n   The ESP_CAST type specifies the CAST transform defined in\
    \ [ESPCBC].\n"
- title: 4.4.4.7 ESP_BLOWFISH
  contents:
  - "4.4.4.7 ESP_BLOWFISH\n   The ESP_BLOWFISH type specifies the BLOWFISH transform\
    \ defined in\n   [ESPCBC].\n"
- title: 4.4.4.8 ESP_3IDEA
  contents:
  - "4.4.4.8 ESP_3IDEA\n   The ESP_3IDEA type is reserved for triple-IDEA.\n"
- title: 4.4.4.9 ESP_DES_IV32
  contents:
  - "4.4.4.9 ESP_DES_IV32\n   The ESP_DES_IV32 type specifies the DES-CBC transform\
    \ defined in\n   RFC-1827 and RFC-1829 using a 32-bit IV.\n"
- title: 4.4.4.10 ESP_RC4
  contents:
  - "4.4.4.10 ESP_RC4\n   The ESP_RC4 type is reserved for RC4.\n"
- title: 4.4.4.11 ESP_NULL
  contents:
  - "4.4.4.11 ESP_NULL\n   The ESP_NULL type specifies no confidentiality is to be\
    \ provided by\n   ESP.  ESP_NULL is used when ESP is being used to tunnel packets\
    \ which\n   require only authentication, integrity protection, and replay\n  \
    \ detection.\n   All implementations within the IPSEC DOI MUST support ESP_NULL.\
    \  The\n   ESP NULL transform is defined in [ESPNULL].  See the Authentication\n\
    \   Algorithm attribute description in Section 4.5 for additional\n   requirements\
    \ relating to the use of ESP_NULL.\n"
- title: 4.4.5 IPSEC IPCOMP Transform Identifiers
  contents:
  - "4.4.5 IPSEC IPCOMP Transform Identifiers\n   The IP Compression (IPCOMP) transforms\
    \ define optional compression\n   algorithms that can be negotiated to provide\
    \ for IP payload\n   compression ([IPCOMP]).  The following table lists the defined\
    \ IPCOMP\n   Transform Identifiers for the ISAKMP Proposal Payload within the\n\
    \   IPSEC DOI.\n       Transform ID                        Value\n       ------------\
    \                        -----\n       RESERVED                            0\n\
    \       IPCOMP_OUI                          1\n       IPCOMP_DEFLATE         \
    \             2\n       IPCOMP_LZS                          3\n"
- title: 4.4.5.1 IPCOMP_OUI
  contents:
  - "4.4.5.1 IPCOMP_OUI\n   The IPCOMP_OUI type specifies a proprietary compression\
    \ transform.\n   The IPCOMP_OUI type must be accompanied by an attribute which\
    \ further\n   identifies the specific vendor algorithm.\n"
- title: 4.4.5.2 IPCOMP_DEFLATE
  contents:
  - "4.4.5.2 IPCOMP_DEFLATE\n   The IPCOMP_DEFLATE type specifies the use of the \"\
    zlib\" deflate\n   algorithm as specified in [DEFLATE].\n"
- title: 4.4.5.3 IPCOMP_LZS
  contents:
  - "4.4.5.3 IPCOMP_LZS\n   The IPCOMP_LZS type specifies the use of the Stac Electronics\
    \ LZS\n   algorithm as specified in [LZS].\n"
- title: 4.5 IPSEC Security Association Attributes
  contents:
  - "4.5 IPSEC Security Association Attributes\n   The following SA attribute definitions\
    \ are used in Phase II of an IKE\n   negotiation.  Attribute types can be either\
    \ Basic (B) or Variable-\n   Length (V).  Encoding of these attributes is defined\
    \ in the base\n   ISAKMP specification.\n   Attributes described as basic MUST\
    \ NOT be encoded as variable.\n   Variable length attributes MAY be encoded as\
    \ basic attributes if\n   their value can fit into two octets.  See [IKE] for\
    \ further\n   information on attribute encoding in the IPSEC DOI.  All restrictions\n\
    \   listed in [IKE] also apply to the IPSEC DOI.\n       Attribute Types\n   \
    \          class               value           type\n       -------------------------------------------------\n\
    \       SA Life Type                1               B\n       SA Life Duration\
    \            2               V\n       Group Description           3         \
    \      B\n       Encapsulation Mode          4               B\n       Authentication\
    \ Algorithm    5               B\n       Key Length                  6       \
    \        B\n       Key Rounds                  7               B\n       Compress\
    \ Dictionary Size    8               B\n       Compress Private Algorithm  9 \
    \              V\n       Class Values\n         SA Life Type\n         SA Duration\n\
    \           Specifies the time-to-live for the overall security\n           association.\
    \  When the SA expires, all keys negotiated under\n           the association\
    \ (AH or ESP) must be renegotiated.  The life\n           type values are:\n \
    \          RESERVED                0\n           seconds                 1\n \
    \          kilobytes               2\n           Values 3-61439 are reserved to\
    \ IANA.  Values 61440-65535 are\n           for private use.  For a given Life\
    \ Type, the value of the\n           Life Duration attribute defines the actual\
    \ length of the\n           component lifetime -- either a number of seconds,\
    \ or a number\n           of Kbytes that can be protected.\n           If unspecified,\
    \ the default value shall be assumed to be\n           28800 seconds (8 hours).\n\
    \           An SA Life Duration attribute MUST always follow an SA Life\n    \
    \       Type which describes the units of duration.\n           See Section 4.5.4\
    \ for additional information relating to\n           lifetime notification.\n\
    \         Group Description\n           Specifies the Oakley Group to be used\
    \ in a PFS QM\n           negotiation.  For a list of supported values, see Appendix\
    \ A\n           of [IKE].\n         Encapsulation Mode\n           RESERVED  \
    \              0\n           Tunnel                  1\n           Transport \
    \              2\n           Values 3-61439 are reserved to IANA.  Values 61440-65535\
    \ are\n           for private use.\n           If unspecified, the default value\
    \ shall be assumed to be\n           unspecified (host-dependent).\n         Authentication\
    \ Algorithm\n           RESERVED                0\n           HMAC-MD5       \
    \         1\n           HMAC-SHA                2\n           DES-MAC        \
    \         3\n           KPDK                    4\n           Values 5-61439 are\
    \ reserved to IANA.  Values 61440-65535 are\n           for private use.\n   \
    \        There is no default value for Auth Algorithm, as it must be\n       \
    \    specified to correctly identify the applicable AH or ESP\n           transform,\
    \ except in the following case.\n           When negotiating ESP without authentication,\
    \ the Auth\n           Algorithm attribute MUST NOT be included in the proposal.\n\
    \           When negotiating ESP without confidentiality, the Auth\n         \
    \  Algorithm attribute MUST be included in the proposal and the\n           ESP\
    \ transform ID must be ESP_NULL.\n         Key Length\n           RESERVED   \
    \             0\n           There is no default value for Key Length, as it must\
    \ be\n           specified for transforms using ciphers with variable key\n  \
    \         lengths.  For fixed length ciphers, the Key Length attribute\n     \
    \      MUST NOT be sent.\n         Key Rounds\n           RESERVED           \
    \     0\n           There is no default value for Key Rounds, as it must be\n\
    \           specified for transforms using ciphers with varying numbers\n    \
    \       of rounds.\n         Compression Dictionary Size\n           RESERVED\
    \                0\n           Specifies the log2 maximum size of the dictionary.\n\
    \           There is no default value for dictionary size.\n         Compression\
    \ Private Algorithm\n           Specifies a private vendor compression algorithm.\
    \  The first\n           three (3) octets must be an IEEE assigned company_id\
    \ (OUI).\n           The next octet may be a vendor specific compression subtype,\n\
    \           followed by zero or more octets of vendor data.\n"
- title: 4.5.1 Required Attribute Support
  contents:
  - "4.5.1 Required Attribute Support\n   To ensure basic interoperability, all implementations\
    \ MUST be\n   prepared to negotiate all of the following attributes.\n       \
    \    SA Life Type\n           SA Duration\n           Auth Algorithm\n"
- title: 4.5.2 Attribute Parsing Requirement (Lifetime)
  contents:
  - "4.5.2 Attribute Parsing Requirement (Lifetime)\n   To allow for flexible semantics,\
    \ the IPSEC DOI requires that a\n   conforming ISAKMP implementation MUST correctly\
    \ parse an attribute\n   list that contains multiple instances of the same attribute\
    \ class, so\n   long as the different attribute entries do not conflict with one\n\
    \   another.  Currently, the only attributes which requires this\n   treatment\
    \ are Life Type and Duration.\n   To see why this is important, the following\
    \ example shows the binary\n   encoding of a four entry attribute list that specifies\
    \ an SA Lifetime\n   of either 100MB or 24 hours.  (See Section 3.3 of [ISAKMP]\
    \ for a\n   complete description of the attribute encoding format.)\n     Attribute\
    \ #1:\n       0x80010001  (AF = 1, type = SA Life Type, value = seconds)\n   \
    \  Attribute #2:\n       0x00020004  (AF = 0, type = SA Duration, length = 4 bytes)\n\
    \       0x00015180  (value = 0x15180 = 86400 seconds = 24 hours)\n     Attribute\
    \ #3:\n       0x80010002  (AF = 1, type = SA Life Type, value = KB)\n     Attribute\
    \ #4:\n       0x00020004  (AF = 0, type = SA Duration, length = 4 bytes)\n   \
    \    0x000186A0  (value = 0x186A0 = 100000KB = 100MB)\n   If conflicting attributes\
    \ are detected, an ATTRIBUTES-NOT-SUPPORTED\n   Notification Payload SHOULD be\
    \ returned and the security association\n   setup MUST be aborted.\n"
- title: 4.5.3 Attribute Negotiation
  contents:
  - "4.5.3 Attribute Negotiation\n   If an implementation receives a defined IPSEC\
    \ DOI attribute (or\n   attribute value) which it does not support, an ATTRIBUTES-NOT-SUPPORT\n\
    \   SHOULD be sent and the security association setup MUST be aborted,\n   unless\
    \ the attribute value is in the reserved range.\n   If an implementation receives\
    \ an attribute value in the reserved\n   range, an implementation MAY chose to\
    \ continue based on local policy.\n"
- title: 4.5.4 Lifetime Notification
  contents:
  - "4.5.4 Lifetime Notification\n   When an initiator offers an SA lifetime greater\
    \ than what the\n   responder desires based on their local policy, the responder\
    \ has\n   three choices: 1) fail the negotiation entirely; 2) complete the\n \
    \  negotiation but use a shorter lifetime than what was offered; 3)\n   complete\
    \ the negotiation and send an advisory notification to the\n   initiator indicating\
    \ the responder's true lifetime.  The choice of\n   what the responder actually\
    \ does is implementation specific and/or\n   based on local policy.\n   To ensure\
    \ interoperability in the latter case, the IPSEC DOI requires\n   the following\
    \ only when the responder wishes to notify the initiator:\n   if the initiator\
    \ offers an SA lifetime longer than the responder is\n   willing to accept, the\
    \ responder SHOULD include an ISAKMP\n   Notification Payload in the exchange\
    \ that includes the responder's\n   IPSEC SA payload.  Section 4.6.3.1 defines\
    \ the payload layout for the\n   RESPONDER-LIFETIME Notification Message type\
    \ which MUST be used for\n   this purpose.\n"
- title: 4.6 IPSEC Payload Content
  contents:
  - "4.6 IPSEC Payload Content\n   The following sections describe those ISAKMP payloads\
    \ whose data\n   representations are dependent on the applicable DOI.\n"
- title: 4.6.1 Security Association Payload
  contents:
  - "4.6.1 Security Association Payload\n   The following diagram illustrates the\
    \ content of the Security\n   Association Payload for the IPSEC DOI.  See Section\
    \ 4.2 for a\n   description of the Situation bitmap.\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !  Next Payload !   RESERVED    !        Payload Length         !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !                Domain of Interpretation (IPSEC)               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !                       Situation (bitmap)                      !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !                    Labeled Domain Identifier                  !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !  Secrecy Length (in octets)   !           RESERVED            !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                        Secrecy Level                          ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Secrecy Cat. Length (in bits) !           RESERVED            !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                    Secrecy Category Bitmap                    ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Integrity Length (in octets)  !           RESERVED            !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                       Integrity Level                         ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ! Integ. Cat. Length (in bits)  !           RESERVED            !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                  Integrity Category Bitmap                    ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               Figure 1: Security Association Payload Format\n   The Security\
    \ Association Payload is defined as follows:\n     o  Next Payload (1 octet) -\
    \ Identifier for the payload type of\n        the next payload in the message.\
    \  If the current payload is the\n        last in the message, this field will\
    \ be zero (0).\n     o  RESERVED (1 octet) - Unused, must be zero (0).\n     o\
    \  Payload Length (2 octets) - Length, in octets, of the current\n        payload,\
    \ including the generic header.\n     o  Domain of Interpretation (4 octets) -\
    \ Specifies the IPSEC DOI,\n        which has been assigned the value one (1).\n\
    \     o  Situation (4 octets) - Bitmask used to interpret the remainder\n    \
    \    of the Security Association Payload.  See Section 4.2 for a\n        complete\
    \ list of values.\n     o  Labeled Domain Identifier (4 octets) - IANA Assigned\
    \ Number used\n        to interpret the Secrecy and Integrity information.\n \
    \    o  Secrecy Length (2 octets) - Specifies the length, in octets, of\n    \
    \    the secrecy level identifier, excluding pad bits.\n     o  RESERVED (2 octets)\
    \ - Unused, must be zero (0).\n     o  Secrecy Level (variable length) - Specifies\
    \ the mandatory\n        secrecy level required.  The secrecy level MUST be padded\
    \ with\n        zero (0) to align on the next 32-bit boundary.\n     o  Secrecy\
    \ Category Length (2 octets) - Specifies the length, in\n        bits, of the\
    \ secrecy category (compartment) bitmap, excluding\n        pad bits.\n     o\
    \  RESERVED (2 octets) - Unused, must be zero (0).\n     o  Secrecy Category Bitmap\
    \ (variable length) - A bitmap used to\n        designate secrecy categories (compartments)\
    \ that are required.\n        The bitmap MUST be padded with zero (0) to align\
    \ on the next\n        32-bit boundary.\n     o  Integrity Length (2 octets) -\
    \ Specifies the length, in octets,\n        of the integrity level identifier,\
    \ excluding pad bits.\n     o  RESERVED (2 octets) - Unused, must be zero (0).\n\
    \     o  Integrity Level (variable length) - Specifies the mandatory\n       \
    \ integrity level required.  The integrity level MUST be padded\n        with\
    \ zero (0) to align on the next 32-bit boundary.\n     o  Integrity Category Length\
    \ (2 octets) - Specifies the length, in\n        bits, of the integrity category\
    \ (compartment) bitmap, excluding\n        pad bits.\n     o  RESERVED (2 octets)\
    \ - Unused, must be zero (0).\n     o  Integrity Category Bitmap (variable length)\
    \ - A bitmap used to\n        designate integrity categories (compartments) that\
    \ are required.\n        The bitmap MUST be padded with zero (0) to align on the\
    \ next\n        32-bit boundary.\n"
- title: 4.6.1.1 IPSEC Labeled Domain Identifiers
  contents:
  - "4.6.1.1 IPSEC Labeled Domain Identifiers\n   The following table lists the assigned\
    \ values for the Labeled Domain\n   Identifier field contained in the Situation\
    \ field of the Security\n   Association Payload.\n       Domain              \
    \                Value\n       -------                             -----\n   \
    \    RESERVED                            0\n"
- title: 4.6.2 Identification Payload Content
  contents:
  - "4.6.2 Identification Payload Content\n   The Identification Payload is used to\
    \ identify the initiator of the\n   Security Association.  The identity of the\
    \ initiator SHOULD be used\n   by the responder to determine the correct host\
    \ system security policy\n   requirement for the association.  For example, a\
    \ host might choose to\n   require authentication and integrity without confidentiality\
    \ (AH)\n   from a certain set of IP addresses and full authentication with\n \
    \  confidentiality (ESP) from another range of IP addresses.  The\n   Identification\
    \ Payload provides information that can be used by the\n   responder to make this\
    \ decision.\n   During Phase I negotiations, the ID port and protocol fields MUST\
    \ be\n   set to zero or to UDP port 500.  If an implementation receives any\n\
    \   other values, this MUST be treated as an error and the security\n   association\
    \ setup MUST be aborted.  This event SHOULD be auditable.\n   The following diagram\
    \ illustrates the content of the Identification\n   Payload.\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !  Next Payload !   RESERVED    !        Payload Length         !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   !   ID Type     !  Protocol ID  !             Port              !\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                     Identification Data                       ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                  Figure 2: Identification Payload Format\n   The Identification\
    \ Payload fields are defined as follows:\n     o  Next Payload (1 octet) - Identifier\
    \ for the payload type of\n        the next payload in the message.  If the current\
    \ payload is the\n        last in the message, this field will be zero (0).\n\
    \     o  RESERVED (1 octet) - Unused, must be zero (0).\n     o  Payload Length\
    \ (2 octets) - Length, in octets, of the\n        identification data, including\
    \ the generic header.\n     o  Identification Type (1 octet) - Value describing\
    \ the identity\n        information found in the Identification Data field.\n\
    \     o  Protocol ID (1 octet) - Value specifying an associated IP\n        protocol\
    \ ID (e.g. UDP/TCP).  A value of zero means that the\n        Protocol ID field\
    \ should be ignored.\n     o  Port (2 octets) - Value specifying an associated\
    \ port.  A value\n        of zero means that the Port field should be ignored.\n\
    \     o  Identification Data (variable length) - Value, as indicated by\n    \
    \    the Identification Type.\n"
- title: 4.6.2.1 Identification Type Values
  contents:
  - "4.6.2.1 Identification Type Values\n   The following table lists the assigned\
    \ values for the Identification\n   Type field found in the Identification Payload.\n\
    \       ID Type                   Value\n       -------                   -----\n\
    \       RESERVED                            0\n       ID_IPV4_ADDR           \
    \             1\n       ID_FQDN                             2\n       ID_USER_FQDN\
    \                        3\n       ID_IPV4_ADDR_SUBNET                 4\n   \
    \    ID_IPV6_ADDR                        5\n       ID_IPV6_ADDR_SUBNET       \
    \          6\n       ID_IPV4_ADDR_RANGE                  7\n       ID_IPV6_ADDR_RANGE\
    \                  8\n       ID_DER_ASN1_DN                      9\n       ID_DER_ASN1_GN\
    \                      10\n       ID_KEY_ID                           11\n   For\
    \ types where the ID entity is variable length, the size of the ID\n   entity\
    \ is computed from size in the ID payload header.\n   When an IKE exchange is\
    \ authenticated using certificates (of any\n   format), any ID's used for input\
    \ to local policy decisions SHOULD be\n   contained in the certificate used in\
    \ the authentication of the\n   exchange.\n"
- title: 4.6.2.2 ID_IPV4_ADDR
  contents:
  - "4.6.2.2 ID_IPV4_ADDR\n   The ID_IPV4_ADDR type specifies a single four (4) octet\
    \ IPv4 address.\n"
- title: 4.6.2.3 ID_FQDN
  contents:
  - "4.6.2.3 ID_FQDN\n   The ID_FQDN type specifies a fully-qualified domain name\
    \ string.  An\n   example of a ID_FQDN is, \"foo.bar.com\".  The string should\
    \ not\n   contain any terminators.\n"
- title: 4.6.2.4 ID_USER_FQDN
  contents:
  - "4.6.2.4 ID_USER_FQDN\n   The ID_USER_FQDN type specifies a fully-qualified username\
    \ string, An\n   example of a ID_USER_FQDN is, \"piper@foo.bar.com\".  The string\
    \ should\n   not contain any terminators.\n"
- title: 4.6.2.5 ID_IPV4_ADDR_SUBNET
  contents:
  - "4.6.2.5 ID_IPV4_ADDR_SUBNET\n   The ID_IPV4_ADDR_SUBNET type specifies a range\
    \ of IPv4 addresses,\n   represented by two four (4) octet values.  The first\
    \ value is an IPv4\n   address.  The second is an IPv4 network mask.  Note that\
    \ ones (1s) in\n   the network mask indicate that the corresponding bit in the\
    \ address\n   is fixed, while zeros (0s) indicate a \"wildcard\" bit.\n"
- title: 4.6.2.6 ID_IPV6_ADDR
  contents:
  - "4.6.2.6 ID_IPV6_ADDR\n   The ID_IPV6_ADDR type specifies a single sixteen (16)\
    \ octet IPv6\n   address.\n"
- title: 4.6.2.7 ID_IPV6_ADDR_SUBNET
  contents:
  - "4.6.2.7 ID_IPV6_ADDR_SUBNET\n   The ID_IPV6_ADDR_SUBNET type specifies a range\
    \ of IPv6 addresses,\n   represented by two sixteen (16) octet values.  The first\
    \ value is an\n   IPv6 address.  The second is an IPv6 network mask.  Note that\
    \ ones\n   (1s) in the network mask indicate that the corresponding bit in the\n\
    \   address is fixed, while zeros (0s) indicate a \"wildcard\" bit.\n"
- title: 4.6.2.8 ID_IPV4_ADDR_RANGE
  contents:
  - "4.6.2.8 ID_IPV4_ADDR_RANGE\n   The ID_IPV4_ADDR_RANGE type specifies a range\
    \ of IPv4 addresses,\n   represented by two four (4) octet values.  The first\
    \ value is the\n   beginning IPv4 address (inclusive) and the second value is\
    \ the ending\n   IPv4 address (inclusive).  All addresses falling between the\
    \ two\n   specified addresses are considered to be within the list.\n"
- title: 4.6.2.9 ID_IPV6_ADDR_RANGE
  contents:
  - "4.6.2.9 ID_IPV6_ADDR_RANGE\n   The ID_IPV6_ADDR_RANGE type specifies a range\
    \ of IPv6 addresses,\n   represented by two sixteen (16) octet values.  The first\
    \ value is the\n   beginning IPv6 address (inclusive) and the second value is\
    \ the ending\n   IPv6 address (inclusive).  All addresses falling between the\
    \ two\n   specified addresses are considered to be within the list.\n"
- title: 4.6.2.10 ID_DER_ASN1_DN
  contents:
  - "4.6.2.10 ID_DER_ASN1_DN\n   The ID_DER_ASN1_DN type specifies the binary DER\
    \ encoding of an ASN.1\n   X.500 Distinguished Name [X.501] of the principal whose\
    \ certificates\n   are being exchanged to establish the SA.\n"
- title: 4.6.2.11 ID_DER_ASN1_GN
  contents:
  - "4.6.2.11 ID_DER_ASN1_GN\n   The ID_DER_ASN1_GN type specifies the binary DER\
    \ encoding of an ASN.1\n   X.500 GeneralName [X.509] of the principal whose certificates\
    \ are\n   being exchanged to establish the SA.\n"
- title: 4.6.2.12 ID_KEY_ID
  contents:
  - "4.6.2.12 ID_KEY_ID\n   The ID_KEY_ID type specifies an opaque byte stream which\
    \ may be used\n   to pass vendor-specific information necessary to identify which\
    \ pre-\n   shared key should be used to authenticate Aggressive mode\n   negotiations.\n"
- title: 4.6.3 IPSEC Notify Message Types
  contents:
  - "4.6.3 IPSEC Notify Message Types\n   ISAKMP defines two blocks of Notify Message\
    \ codes, one for errors and\n   one for status messages.  ISAKMP also allocates\
    \ a portion of each\n   block for private use within a DOI.  The IPSEC DOI defines\
    \ the\n   following private message types for its own use.\n       Notify Messages\
    \ - Error Types       Value\n       -----------------------------       -----\n\
    \       RESERVED                            8192\n       Notify Messages - Status\
    \ Types      Value\n       ------------------------------      -----\n       RESPONDER-LIFETIME\
    \                  24576\n       REPLAY-STATUS                       24577\n \
    \      INITIAL-CONTACT                     24578\n   Notification Status Messages\
    \ MUST be sent under the protection of an\n   ISAKMP SA: either as a payload in\
    \ the last Main Mode exchange; in a\n   separate Informational Exchange after\
    \ Main Mode or Aggressive Mode\n   processing is complete; or as a payload in\
    \ any Quick Mode exchange.\n   These messages MUST NOT be sent in Aggressive Mode\
    \ exchange, since\n   Aggressive Mode does not provide the necessary protection\
    \ to bind the\n   Notify Status Message to the exchange.\n   Nota Bene: a Notify\
    \ payload is fully protected only in Quick Mode,\n   where the entire payload\
    \ is included in the HASH(n) digest.  In Main\n   Mode, while the notify payload\
    \ is encrypted, it is not currently\n   included in the HASH(n) digests.  As a\
    \ result, an active substitution\n   attack on the Main Mode ciphertext could\
    \ cause the notify status\n   message type to be corrupted.  (This is true, in\
    \ general, for the\n   last message of any Main Mode exchange.)  While the risk\
    \ is small, a\n   corrupt notify message might cause the receiver to abort the\
    \ entire\n   negotiation thinking that the sender encountered a fatal error.\n\
    \   Implementation Note: the ISAKMP protocol does not guarantee delivery\n   of\
    \ Notification Status messages when sent in an ISAKMP Informational\n   Exchange.\
    \  To ensure receipt of any particular message, the sender\n   SHOULD include\
    \ a Notification Payload in a defined Main Mode or Quick\n   Mode exchange which\
    \ is protected by a retransmission timer.\n"
- title: 4.6.3.1 RESPONDER-LIFETIME
  contents:
  - "4.6.3.1 RESPONDER-LIFETIME\n   The RESPONDER-LIFETIME status message may be used\
    \ to communicate the\n   IPSEC SA lifetime chosen by the responder.\n   When present,\
    \ the Notification Payload MUST have the following\n   format:\n     o  Payload\
    \ Length - set to length of payload + size of data (var)\n     o  DOI - set to\
    \ IPSEC DOI (1)\n     o  Protocol ID - set to selected Protocol ID from chosen\
    \ SA\n     o  SPI Size - set to either sixteen (16) (two eight-octet ISAKMP\n\
    \        cookies) or four (4) (one IPSEC SPI)\n     o  Notify Message Type - set\
    \ to RESPONDER-LIFETIME (Section 4.6.3)\n     o  SPI - set to the two ISAKMP cookies\
    \ or to the sender's inbound\n        IPSEC SPI\n     o  Notification Data - contains\
    \ an ISAKMP attribute list with the\n        responder's actual SA lifetime(s)\n\
    \   Implementation Note: saying that the Notification Data field contains\n  \
    \ an attribute list is equivalent to saying that the Notification Data\n   field\
    \ has zero length and the Notification Payload has an associated\n   attribute\
    \ list.\n"
- title: 4.6.3.2 REPLAY-STATUS
  contents:
  - "4.6.3.2 REPLAY-STATUS\n   The REPLAY-STATUS status message may be used for positive\n\
    \   confirmation of the responder's election on whether or not he is to\n   perform\
    \ anti-replay detection.\n   When present, the Notification Payload MUST have\
    \ the following\n   format:\n     o  Payload Length - set to length of payload\
    \ + size of data (4)\n     o  DOI - set to IPSEC DOI (1)\n     o  Protocol ID\
    \ - set to selected Protocol ID from chosen SA\n     o  SPI Size - set to either\
    \ sixteen (16) (two eight-octet ISAKMP\n        cookies) or four (4) (one IPSEC\
    \ SPI)\n     o  Notify Message Type - set to REPLAY-STATUS\n     o  SPI - set\
    \ to the two ISAKMP cookies or to the sender's inbound\n        IPSEC SPI\n  \
    \   o  Notification Data - a 4 octet value:\n          0 = replay detection disabled\n\
    \          1 = replay detection enabled\n"
- title: 4.6.3.3 INITIAL-CONTACT
  contents:
  - "4.6.3.3 INITIAL-CONTACT\n   The INITIAL-CONTACT status message may be used when\
    \ one side wishes\n   to inform the other that this is the first SA being established\
    \ with\n   the remote system.  The receiver of this Notification Message might\n\
    \   then elect to delete any existing SA's it has for the sending system\n   under\
    \ the assumption that the sending system has rebooted and no\n   longer has access\
    \ to the original SA's and their associated keying\n   material.  When used, the\
    \ content of the Notification Data field\n   SHOULD be null (i.e. the Payload\
    \ Length should be set to the fixed\n   length of Notification Payload).\n   When\
    \ present, the Notification Payload MUST have the following\n   format:\n    \
    \ o  Payload Length - set to length of payload + size of data (0)\n     o  DOI\
    \ - set to IPSEC DOI (1)\n     o  Protocol ID - set to selected Protocol ID from\
    \ chosen SA\n     o  SPI Size - set to sixteen (16) (two eight-octet ISAKMP cookies)\n\
    \     o  Notify Message Type - set to INITIAL-CONTACT\n     o  SPI - set to the\
    \ two ISAKMP cookies\n     o  Notification Data - <not included>\n"
- title: 4.7 IPSEC Key Exchange Requirements
  contents:
  - "4.7 IPSEC Key Exchange Requirements\n   The IPSEC DOI introduces no additional\
    \ Key Exchange types.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   This entire memo pertains to the Internet Key\
    \ Exchange protocol\n   ([IKE]), which combines ISAKMP ([ISAKMP]) and Oakley ([OAKLEY])\
    \ to\n   provide for the derivation of cryptographic keying material in a\n  \
    \ secure and authenticated manner.  Specific discussion of the various\n   security\
    \ protocols and transforms identified in this document can be\n   found in the\
    \ associated base documents and in the cipher references.\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   This document contains many \"magic\" numbers to be\
    \ maintained by the\n   IANA.  This section explains the criteria to be used by\
    \ the IANA to\n   assign additional numbers in each of these lists.  All values\
    \ not\n   explicitly defined in previous sections are reserved to IANA.\n"
- title: 6.1 IPSEC Situation Definition
  contents:
  - "6.1 IPSEC Situation Definition\n   The Situation Definition is a 32-bit bitmask\
    \ which represents the\n   environment under which the IPSEC SA proposal and negotiation\
    \ is\n   carried out.  Requests for assignments of new situations must be\n  \
    \ accompanied by an RFC which describes the interpretation for the\n   associated\
    \ bit.\n   If the RFC is not on the standards-track (i.e., it is an\n   informational\
    \ or experimental RFC), it must be explicitly reviewed\n   and approved by the\
    \ IESG before the RFC is published and the\n   transform identifier is assigned.\n\
    \   The upper two bits are reserved for private use amongst cooperating\n   systems.\n"
- title: 6.2 IPSEC Security Protocol Identifiers
  contents:
  - "6.2 IPSEC Security Protocol Identifiers\n   The Security Protocol Identifier\
    \ is an 8-bit value which identifies a\n   security protocol suite being negotiated.\
    \  Requests for assignments\n   of new security protocol identifiers must be accompanied\
    \ by an RFC\n   which describes the requested security protocol.  [AH] and [ESP]\
    \ are\n   examples of security protocol documents.\n   If the RFC is not on the\
    \ standards-track (i.e., it is an\n   informational or experimental RFC), it must\
    \ be explicitly reviewed\n   and approved by the IESG before the RFC is published\
    \ and the\n   transform identifier is assigned.\n   The values 249-255 are reserved\
    \ for private use amongst cooperating\n   systems.\n"
- title: 6.3 IPSEC ISAKMP Transform Identifiers
  contents:
  - "6.3 IPSEC ISAKMP Transform Identifiers\n   The IPSEC ISAKMP Transform Identifier\
    \ is an 8-bit value which\n   identifies a key exchange protocol to be used for\
    \ the negotiation.\n   Requests for assignments of new ISAKMP transform identifiers\
    \ must be\n   accompanied by an RFC which describes the requested key exchange\n\
    \   protocol.  [IKE] is an example of one such document.\n   If the RFC is not\
    \ on the standards-track (i.e., it is an\n   informational or experimental RFC),\
    \ it must be explicitly reviewed\n   and approved by the IESG before the RFC is\
    \ published and the\n   transform identifier is assigned.\n   The values 249-255\
    \ are reserved for private use amongst cooperating\n   systems.\n"
- title: 6.4 IPSEC AH Transform Identifiers
  contents:
  - "6.4 IPSEC AH Transform Identifiers\n   The IPSEC AH Transform Identifier is an\
    \ 8-bit value which identifies\n   a particular algorithm to be used to provide\
    \ integrity protection for\n   AH.  Requests for assignments of new AH transform\
    \ identifiers must be\n   accompanied by an RFC which describes how to use the\
    \ algorithm within\n   the AH framework ([AH]).\n   If the RFC is not on the standards-track\
    \ (i.e., it is an\n   informational or experimental RFC), it must be explicitly\
    \ reviewed\n   and approved by the IESG before the RFC is published and the\n\
    \   transform identifier is assigned.\n   The values 249-255 are reserved for\
    \ private use amongst cooperating\n   systems.\n"
- title: 6.5 IPSEC ESP Transform Identifiers
  contents:
  - "6.5 IPSEC ESP Transform Identifiers\n   The IPSEC ESP Transform Identifier is\
    \ an 8-bit value which identifies\n   a particular algorithm to be used to provide\
    \ secrecy protection for\n   ESP.  Requests for assignments of new ESP transform\
    \ identifiers must\n   be accompanied by an RFC which describes how to use the\
    \ algorithm\n   within the ESP framework ([ESP]).\n   If the RFC is not on the\
    \ standards-track (i.e., it is an\n   informational or experimental RFC), it must\
    \ be explicitly reviewed\n   and approved by the IESG before the RFC is published\
    \ and the\n   transform identifier is assigned.\n   The values 249-255 are reserved\
    \ for private use amongst cooperating\n   systems.\n"
- title: 6.6 IPSEC IPCOMP Transform Identifiers
  contents:
  - "6.6 IPSEC IPCOMP Transform Identifiers\n   The IPSEC IPCOMP Transform Identifier\
    \ is an 8-bit value which\n   identifier a particular algorithm to be used to\
    \ provide IP-level\n   compression before ESP.  Requests for assignments of new\
    \ IPCOMP\n   transform identifiers must be accompanied by an RFC which describes\n\
    \   how to use the algorithm within the IPCOMP framework ([IPCOMP]).  In\n   addition,\
    \ the requested algorithm must be published and in the public\n   domain.\n  \
    \ If the RFC is not on the standards-track (i.e., it is an\n   informational or\
    \ experimental RFC), it must be explicitly reviewed\n   and approved by the IESG\
    \ before the RFC is published and the\n   transform identifier is assigned.\n\
    \   The values 1-47 are reserved for algorithms for which an RFC has been\n  \
    \ approved for publication.  The values 48-63 are reserved for private\n   use\
    \ amongst cooperating systems.  The values 64-255 are reserved for\n   future\
    \ expansion.\n"
- title: 6.7 IPSEC Security Association Attributes
  contents:
  - "6.7 IPSEC Security Association Attributes\n   The IPSEC Security Association\
    \ Attribute consists of a 16-bit type\n   and its associated value.  IPSEC SA\
    \ attributes are used to pass\n   miscellaneous values between ISAKMP peers. \
    \ Requests for assignments\n   of new IPSEC SA attributes must be accompanied\
    \ by an Internet Draft\n   which describes the attribute encoding (Basic/Variable-Length)\
    \ and\n   its legal values.  Section 4.5 of this document provides an example\n\
    \   of such a description.\n   The values 32001-32767 are reserved for private\
    \ use amongst\n   cooperating systems.\n"
- title: 6.8 IPSEC Labeled Domain Identifiers
  contents:
  - "6.8 IPSEC Labeled Domain Identifiers\n   The IPSEC Labeled Domain Identifier\
    \ is a 32-bit value which\n   identifies a namespace in which the Secrecy and\
    \ Integrity levels and\n   categories values are said to exist.  Requests for\
    \ assignments of new\n   IPSEC Labeled Domain Identifiers should be granted on\
    \ demand.  No\n   accompanying documentation is required, though Internet Drafts\
    \ are\n   encouraged when appropriate.\n   The values 0x80000000-0xffffffff are\
    \ reserved for private use amongst\n   cooperating systems.\n"
- title: 6.9 IPSEC Identification Type
  contents:
  - "6.9 IPSEC Identification Type\n   The IPSEC Identification Type is an 8-bit value\
    \ which is used as a\n   discriminant for interpretation of the variable-length\
    \ Identification\n   Payload.  Requests for assignments of new IPSEC Identification\
    \ Types\n   must be accompanied by an RFC which describes how to use the\n   identification\
    \ type within IPSEC.\n   If the RFC is not on the standards-track (i.e., it is\
    \ an\n   informational or experimental RFC), it must be explicitly reviewed\n\
    \   and approved by the IESG before the RFC is published and the\n   transform\
    \ identifier is assigned.\n   The values 249-255 are reserved for private use\
    \ amongst cooperating\n   systems.\n"
- title: 6.10 IPSEC Notify Message Types
  contents:
  - "6.10 IPSEC Notify Message Types\n   The IPSEC Notify Message Type is a 16-bit\
    \ value taken from the range\n   of values reserved by ISAKMP for each DOI.  There\
    \ is one range for\n   error messages (8192-16383) and a different range for status\
    \ messages\n   (24576-32767).  Requests for assignments of new Notify Message\
    \ Types\n   must be accompanied by an Internet Draft which describes how to use\n\
    \   the identification type within IPSEC.\n   The values 16001-16383 and the values\
    \ 32001-32767 are reserved for\n   private use amongst cooperating systems.\n"
- title: 7. Change Log
  contents:
  - '7. Change Log

    '
- title: 7.1 Changes from V9
  contents:
  - "7.1 Changes from V9\n     o  add explicit reference to [IPCOMP], [DEFLATE], and\
    \ [LZS]\n     o  allow RESPONDER-LIFETIME and REPLAY-STATUS to be directed\n \
    \       at an IPSEC SPI in addition to the ISAKMP \"SPI\"\n     o  added padding\
    \ exclusion to Secrecy and Integrity Length text\n     o  added forward reference\
    \ to Section 4.5 in Section 4.4.4\n     o  update document references\n"
- title: 7.2 Changes from V8
  contents:
  - "7.2 Changes from V8\n     o  update IPCOMP identifier range to better reflect\
    \ IPCOMP draft\n     o  update IANA considerations per Jeff/Ted's suggested text\n\
    \     o  eliminate references to DES-MAC ID ([DESMAC])\n     o  correct bug in\
    \ Notify section; ISAKMP Notify values are 16-bits\n"
- title: 7.3 Changes from V7
  contents:
  - "7.3 Changes from V7\n     o  corrected name of IPCOMP (IP Payload Compression)\n\
    \     o  corrected references to [ESPCBC]\n     o  added missing Secrecy Level\
    \ and Integrity Level to Figure 1\n     o  removed ID references to PF_KEY and\
    \ ARCFOUR\n     o  updated Basic/Variable text to align with [IKE]\n     o  updated\
    \ document references and add intro pointer to [ARCH]\n     o  updated Notification\
    \ requirements; remove aggressive reference\n     o  added clarification about\
    \ protection for Notify payloads\n     o  restored RESERVED to ESP transform ID\
    \ namespace; moved ESP_NULL\n     o  added requirement for ESP_NULL support and\
    \ [ESPNULL] reference\n     o  added clarification on Auth Alg use with AH/ESP\n\
    \     o  added restriction against using conflicting AH/Auth combinations\n"
- title: 7.4 Changes from V6
  contents:
  - "7.4 Changes from V6\n   The following changes were made relative to the IPSEC\
    \ DOI V6:\n     o  added IANA Considerations section\n     o  moved most IANA\
    \ numbers to IANA Considerations section\n     o  added prohibition on sending\
    \ (V) encoding for (B) attributes\n     o  added prohibition on sending Key Length\
    \ attribute for fixed\n        length ciphers (e.g. DES)\n     o  replaced references\
    \ to ISAKMP/Oakley with IKE\n     o  renamed ESP_ARCFOUR to ESP_RC4\n     o  updated\
    \ Security Considerations section\n     o  updated document references\n"
- title: 7.5 Changes from V5
  contents:
  - "7.5 Changes from V5\n   The following changes were made relative to the IPSEC\
    \ DOI V5:\n     o  changed SPI size in Lifetime Notification text\n     o  changed\
    \ REPLAY-ENABLED to REPLAY-STATUS\n     o  moved RESPONDER-LIFETIME payload definition\
    \ from Section 4.5.4\n        to Section 4.6.3.1\n     o  added explicit payload\
    \ layout for 4.6.3.3\n     o  added Implementation Note to Section 4.6.3 introduction\n\
    \     o  changed AH_SHA text to require SHA-1 in addition to MD5\n     o  updated\
    \ document references\n"
- title: 7.6 Changes from V4
  contents:
  - "7.6 Changes from V4\n   The following changes were made relative to the IPSEC\
    \ DOI V4:\n     o  moved compatibility AH KPDK authentication method from AH\n\
    \        transform ID to Authentication Algorithm identifier\n     o  added REPLAY-ENABLED\
    \ notification message type per Architecture\n     o  added INITIAL-CONTACT notification\
    \ message type per list\n     o  added text to ensure protection for Notify Status\
    \ messages\n     o  added Lifetime qualification to attribute parsing section\n\
    \     o  added clarification that Lifetime notification is optional\n     o  removed\
    \ private Group Description list (now points at [IKE])\n     o  replaced Terminology\
    \ with pointer to RFC-2119\n     o  updated HMAC MD5 and SHA-1 ID references\n\
    \     o  updated Section 1 (Abstract)\n     o  updated Section 4.4 (IPSEC Assigned\
    \ Numbers)\n     o  added restriction for ID port/protocol values for Phase I\n"
- title: 7.7 Changes from V3 to V4
  contents:
  - "7.7 Changes from V3 to V4\n   The following changes were made relative to the\
    \ IPSEC DOI V3, that\n   was posted to the IPSEC mailing list prior to the Munich\
    \ IETF:\n     o  added ESP transform identifiers for NULL and ARCFOUR\n     o\
    \  renamed HMAC Algorithm to Auth Algorithm to accommodate\n        DES-MAC and\
    \ optional authentication/integrity for ESP\n     o  added AH and ESP DES-MAC\
    \ algorithm identifiers\n     o  removed KEY_MANUAL and KEY_KDC identifier definitions\n\
    \     o  added lifetime duration MUST follow lifetype attribute to\n        SA\
    \ Life Type and SA Life Duration attribute definition\n     o  added lifetime\
    \ notification and IPSEC DOI message type table\n     o  added optional authentication\
    \ and confidentiality\n        restrictions to MAC Algorithm attribute definition\n\
    \     o  corrected attribute parsing example (used obsolete attribute)\n     o\
    \  corrected several Internet Draft document references\n     o  added ID_KEY_ID\
    \ per ipsec list discussion (18-Mar-97)\n     o  removed Group Description default\
    \ for PFS QM ([IKE] MUST)\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document is derived, in part, from previous works by\
    \ Douglas\n   Maughan, Mark Schertler, Mark Schneider, Jeff Turner, Dan Harkins,\n\
    \   and Dave Carrel.  Matt Thomas, Roy Pereira, Greg Carter, and Ran\n   Atkinson\
    \ also contributed suggestions and, in many cases, text.\n"
- title: References
  contents:
  - "References\n   [AH]      Kent, S., and R. Atkinson, \"IP Authentication Header\"\
    , RFC\n             2402, November 1998.\n   [ARCH]    Kent, S., and R. Atkinson,\
    \ \"Security Architecture for the\n             Internet Protocol\", RFC 2401,\
    \ November 1998.\n   [DEFLATE] Pereira, R., \"IP Payload Compression Using DEFLATE\"\
    , RFC\n             2394, August 1998.\n   [ESP]     Kent, S., and R. Atkinson,\
    \ \"IP Encapsulating Security\n             Payload (ESP)\", RFC 2406, November\
    \ 1998.\n   [ESPCBC]  Pereira, R., and R. Adams, \"The ESP CBC-Mode Cipher\n \
    \            Algorithms\", RFC 2451, November 1998.\n   [ESPNULL] Glenn, R., and\
    \ S. Kent, \"The NULL Encryption Algorithm and\n             Its Use With IPsec\"\
    , RFC 2410, November 1998.\n   [DES]     Madson, C., and N. Doraswamy, \"The ESP\
    \ DES-CBC Cipher\n             Algorithm With Explicit IV\", RFC 2405, November\
    \ 1998.\n   [HMACMD5] Madson, C., and R. Glenn, \"The Use of HMAC-MD5 within ESP\n\
    \             and AH\", RFC 2403, November 1998.\n   [HMACSHA] Madson, C., and\
    \ R. Glenn, \"The Use of HMAC-SHA-1-96 within\n             ESP and AH\", RFC\
    \ 2404, November 1998.\n   [IKE]     Harkins, D., and D. Carrel, D., \"The Internet\
    \ Key Exchange\n             (IKE)\", RFC 2409, November 1998.\n   [IPCOMP]  Shacham,\
    \ A., Monsour, R., Pereira, R., and M. Thomas, \"IP\n             Payload Compression\
    \ Protocol (IPComp)\", RFC 2393, August\n             1998.\n   [ISAKMP]  Maughan,\
    \ D., Schertler, M., Schneider, M., and J. Turner,\n             \"Internet Security\
    \ Association and Key Management Protocol\n             (ISAKMP)\", RFC 2408,\
    \ November 1998.\n   [LZS]     Friend, R., and R. Monsour, \"IP Payload Compression\
    \ Using\n             LZS\", RFC 2395, August 1998.\n   [OAKLEY]  Orman, H., \"\
    The OAKLEY Key Determination Protocol\", RFC\n             2412, November 1998.\n\
    \   [X.501]   ISO/IEC 9594-2, \"Information Technology - Open Systems\n      \
    \       Interconnection - The Directory:  Models\", CCITT/ITU\n             Recommendation\
    \ X.501, 1993.\n   [X.509]   ISO/IEC 9594-8, \"Information Technology - Open Systems\n\
    \             Interconnection - The Directory:  Authentication\n             Framework\"\
    , CCITT/ITU Recommendation X.509, 1993.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Derrell Piper\n   Network Alchemy\n   1521.5 Pacific Ave\n\
    \   Santa Cruz, California, 95060\n   United States of America\n   Phone: +1 408\
    \ 460-3822\n   EMail: ddp@network-alchemy.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
