- title: __initial_text__
  contents:
  - "                           Extreme Networks'\n             Ethernet Automatic\
    \ Protection Switching (EAPS)\n                               Version 1\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Ethernet Automatic Protection Switching\n\
    \   (EAPS) (tm) technology invented by Extreme Networks to increase the\n   availability\
    \ and robustness of Ethernet rings.  An Ethernet ring\n   built using EAPS can\
    \ have resilience comparable to that provided by\n   SONET rings, at a lower cost\
    \ and with fewer constraints (e.g., ring\n   size).\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many Metropolitan Area Networks (MANs) and some Local Area\
    \ Networks\n   (LANs) have a ring topology, as the fibre runs.  The Ethernet\n\
    \   Automatic Protection Switching (EAPS) technology described here works\n  \
    \ well in ring topologies for MANs or LANs.\n   Most MAN operators want to minimise\
    \ the recovery time in the event\n   that a fibre cut occurs.  The Ethernet Automatic\
    \ Protection Switching\n   (EAPS) technology described here converges in less\
    \ than one second,\n   often in less than 50 milliseconds.  EAPS technology does\
    \ not limit\n   the number of nodes in the ring, and the convergence time is\n\
    \   independent of the number of nodes in the ring.\n"
- title: 2.  Concept of Operation
  contents:
  - "2.  Concept of Operation\n   An EAPS Domain exists on a single Ethernet ring.\
    \  Any Ethernet\n   Virtual Local Area Network (VLAN) that is to be protected\
    \ is\n   configured on all ports in the ring for the given EAPS Domain.  Each\n\
    \   EAPS Domain has a single designated \"master node\".  All other nodes\n  \
    \ on that ring are referred to as \"transit nodes\".\n   Of course, each node\
    \ on the ring will have 2 ports connected to the\n   ring.  One port of the master\
    \ node is designated as the \"primary\n   port\" to the ring, while the other\
    \ port is designated as the\n   \"secondary port\".\n   In normal operation, the\
    \ master node blocks the secondary port for\n   all non-control Ethernet frames\
    \ belonging to the given EAPS Domain,\n   thereby avoiding a loop in the ring.\
    \  Existing Ethernet switching and\n   learning mechanisms operate per existing\
    \ standards on this ring.\n   This is possible because the master node makes the\
    \ ring appear as\n   though there is no loop from the perspective of the Ethernet\
    \ standard\n   algorithms used for switching and learning.  If the master node\n\
    \   detects a ring fault, it unblocks its secondary port and allows\n   Ethernet\
    \ data frames to pass through that port.  There is a special\n   \"Control VLAN\"\
    \ that can always pass through all ports in the EAPS\n   Domain, including the\
    \ secondary port of the master node.\n   EAPS uses both a polling mechanism and\
    \ an alert mechanism, described\n   below, to verify the connectivity of the ring\
    \ and quickly detect any\n   faults.\n"
- title: 2.1.  Link Down Alert
  contents:
  - "2.1.  Link Down Alert\n   When a transit node detects a link-down on any of its\
    \ ports in the\n   EAPS Domain, that transit node immediately sends a \"link down\"\
    \n   control frame on the Control VLAN to the master node.\n   When the master\
    \ node receives this \"link down\" control frame, the\n   master node moves from\
    \ the \"normal\" state to the ring-fault state and\n   unblocks its secondary\
    \ port.  The master node also flushes its\n   bridging table, and the master node\
    \ also sends a control frame to all\n   other ring nodes, instructing them to\
    \ flush their bridging tables as\n   well.  Immediately after flushing its bridging\
    \ table, each node\n   begins learning the new topology.\n"
- title: 2.2.  Ring Polling
  contents:
  - "2.2.  Ring Polling\n   The master node sends a health-check frame on the Control\
    \ VLAN at a\n   user-configurable interval.  If the ring is complete, the health-\n\
    \   check frame will be received on its secondary port, where the master\n   node\
    \ will reset its fail-period timer and continue normal operation.\n   If the master\
    \ node does not receive the health-check frame before the\n   fail-period timer\
    \ expires, the master node moves from the normal\n   state to the \"ring-fault\"\
    \ state and unblocks its secondary port.  The\n   master node also flushes its\
    \ bridging table and sends a control frame\n   to all other nodes, instructing\
    \ them to also flush their bridging\n   tables.  Immediately after flushing its\
    \ bridge table, each node\n   starts learning the new topology.  This ring polling\
    \ mechanism\n   provides a backup in the event that the Link Down Alert frame\
    \ should\n   get lost for some unforeseen reason.\n"
- title: 2.3.  Ring Restoration
  contents:
  - "2.3.  Ring Restoration\n   The master node continues sending periodic health-check\
    \ frames out\n   its primary port even when operating in the ring-fault state.\
    \  Once\n   the ring is restored, the next health-check frame will be received\
    \ on\n   the master node's secondary port.  This will cause the master node to\n\
    \   transition back to the normal state, logically block non-control\n   frames\
    \ on the secondary port, flush its own bridge table, and send a\n   control frame\
    \ to the transit nodes, instructing them to flush their\n   bridging tables and\
    \ re-learn the topology.\n   During the time between the transit node detecting\
    \ that its link is\n   restored and the master node detecting that the ring is\
    \ restored, the\n   secondary port of the master node is still open -- creating\
    \ the\n   possibility of a temporary loop in the topology.  To prevent this,\n\
    \   the transit node will place all the protected VLANs transiting the\n   newly\
    \ restored port into a temporary blocked state, remember which\n   port has been\
    \ temporarily blocked, and transition into the \"pre-\n   forwarding\" state.\
    \  When the transit node in the \"pre-forwarding\"\n   state receives a control\
    \ frame instructing it to flush its bridging\n   table, it will flush the bridging\
    \ table, unblock the previously\n   blocked protected VLANs on the newly restored\
    \ port, and transition to\n   the \"normal\" state.\n"
- title: 3.  Multiple EAPS Domains
  contents:
  - "3.  Multiple EAPS Domains\n   An EAPS-enabled switch can be part of more than\
    \ one ring.  Hence, an\n   EAPS-enabled switch can belong to more than one EAPS\
    \ Domain at the\n   same time.  Each EAPS Domain on a switch requires a separate\
    \ instance\n   of the EAPS protocol on that same switch, one instance per EAPS-\n\
    \   protected ring.\n   One can also have more than one EAPS domain running on\
    \ the same ring\n   at the same time.  Each EAPS Domain has its own unique master\
    \ node\n   and its own set of protected VLANs.  This facilitates spatial reuse\n\
    \   of the ring's bandwidth.\n   EAPS Frame Format\n         0         1     \
    \     2          3          4        4\n         12345678 90123456 78901234 56789012\
    \ 34567890 12345678\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |         Destination MAC Address (6 bytes)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |         Source MAC Address (6 bytes)                |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |    EtherType    |PRI | VLAN ID    |  Frame Length   |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |    DSAP/SSAP    | CONTROL|     OUI = 0x00E02B       |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |     0x00bb      |  0x99  |  0x0b  |  EAPS_LENGTH    |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |EAPS_VER|EAPSTYPE|  CTRL_VLAN_ID   |    0x0000       |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |  0x0000         |    SYSTEM_MAC_ADDR (6 bytes)      |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 |   HELLO_TIMER   |    FAIL_TIMER   |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        | STATE  | 0x00   |   HELLO_SEQ     |     0x0000      |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \        |                 RESERVED (0x000000000000)           |\n        +--------+--------+--------+--------+--------+--------+\n\
    \      Where:\n          Destination MAC Address is always 0x00e02b000004.\n \
    \         PRI contains 3 bits of priority, with 1 other bit reserved.\n      \
    \    EtherType is always 0x8100.\n          DSAP/SSAP is always 0xAAAA.\n    \
    \      CONTROL is always 0x03.\n          EAPS_LENGTH is 0x40.\n          EAPS_VERS\
    \ is 0x0001.\n          CTRL_VLAN_ID is the VLAN ID for the Control VLAN in use.\n\
    \          SYSTEM_MAC_ADDR is the System MAC Address of the sending node.\n  \
    \        HELLO_TIMER is the value set by the Master Node.\n          FAIL_TIMER\
    \ is the value set by the Master Node.\n          HELLO_SEQ is the sequence number\
    \ of the Hello Frame.\n      EAPS Type (EAPSTYPE) values:\n          HEALTH  \
    \            = 5\n          RING-UP-FLUSH-FDB   = 6\n          RING-DOWN-FLUSH-FDB\
    \ = 7\n          LINK-DOWN           = 8\n          All other values are reserved.\n\
    \      STATE values:\n          IDLE           = 0\n          COMPLETE       =\
    \ 1\n          FAILED         = 2\n          LINKS-UP       = 3\n          LINK-DOWN\
    \      = 4\n          PRE-FORWARDING = 5\n          All other values are reserved.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Anyone with physical access to the physical layer\
    \ connections could\n   forge any sort of Ethernet frame they wished, including\
    \ but not\n   limited to Bridge frames or EAPS frames.  Such forgeries could be\n\
    \   used to disrupt an Ethernet network in various ways, including\n   methods\
    \ that are specific to EAPS or other unrelated methods, such as\n   forged Ethernet\
    \ bridge frames.\n   As such, it is recommended that users not deploy Ethernet\
    \ without\n   some form of encryption in environments where such active attacks\
    \ are\n   considered a significant operational risk.  IEEE standards already\n\
    \   exist for link-layer encryption.  Those IEEE standards could be used\n   to\
    \ protect an Ethernet's links.  Alternately, upper-layer security\n   mechanisms\
    \ could be used if it is more appropriate to the local\n   threat model.\n"
- title: 5.  Intellectual Property Rights Notice
  contents:
  - "5.  Intellectual Property Rights Notice\n   The IETF has been notified of intellectual\
    \ property rights claimed in\n   regard to some or all of the specification contained\
    \ in this\n   document.  For more information, consult the online list of claimed\n\
    \   rights.\n"
- title: 6.  Acknowledgement
  contents:
  - "6.  Acknowledgement\n   This document was edited together and put into RFC format\
    \ by R.J.\n   Atkinson from internal documents created by the authors below. \
    \ The\n   Editor is solely responsible for any errors made during redaction.\n"
- title: 7.  Editor's Address
  contents:
  - "7.  Editor's Address\n   R. Atkinson\n   Extreme Networks\n   3585 Monroe Street\n\
    \   Santa Clara, CA, 95051 USA\n   Phone: +1 (408)579-2800\n   EMail: rja@extremenetworks.com\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   S. Shah\n   Extreme Networks\n   3585 Monroe Street\n\
    \   Santa Clara, CA, 95051\n   Phone: +1 (408)579-2800\n   EMail: sshah@extremenetworks.com\n\
    \   M. Yip\n   Extreme Networks\n   3585 Monroe Street\n   Santa Clara, CA, 95051\n\
    \   Phone: +1 (408)579-2800\n   EMail: my@extremenetworks.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
