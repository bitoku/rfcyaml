- title: __initial_text__
  contents:
  - "              Mapping of Airline Reservation, Ticketing,\n                  \
    \   and Messaging Traffic over IP\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: 'Security Disclaimer:'
  contents:
  - "Security Disclaimer:\n   This document fails to adequately address security concerns.\
    \  The\n   protocol itself does not include any security mechanisms.  The\n  \
    \ document notes that traffic can be authenticated based on external\n   mechanisms\
    \ that use static identifiers or what are apparently clear-\n   text passwords,\
    \ neither of which provide sound security.  The\n   document notes in general\
    \ terms that traffic can be secured using\n   IPSEC, but leaves this form of sound\
    \ security strictly optional.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies a protocol for the encapsulation of the airline\n\
    \   specific protocol over IP.\n"
- title: Table of Conents
  contents:
  - "Table of Conents\n   1. INTRODUCTION                                        \
    \            2\n   2. TERMINOLOGY & ACRONYMS                                 \
    \         4\n   3. LAYERING                                                  \
    \      7\n   4. TRAFFIC IDENTIFICATION                                       \
    \   7\n   5. TCP PORT ALLOCATION                                             8\n\
    \   6. MATIP SESSION ESTABLISHMENT                                     8\n   7.\
    \ OVERALL PACKET FORMAT FOR TYPE A & TYPE B                       9\n   8. MATIP\
    \ FORMAT FOR TYPE A CONVERSATIONAL TRAFFIC                 10\n    8.1 Control\
    \ Packet Format                                        10\n     8.1.1 Session\
    \ Open format (SO)                                  10\n     8.1.2 Open Confirm\
    \ format (OC)                                  12\n     8.1.3 Session Close (SC)\
    \                                        14\n    8.2 Data Packet Format      \
    \                                     14\n   9. MATIP FORMAT FOR TYPE A HOST-TO-HOST\
    \ TRAFFIC                   15\n    9. 1 Control Packet Format               \
    \                        15\n     9.1.1 Session Open format (SO)             \
    \                     15\n     9.1.2 Open Confirm format (OC)                \
    \                  17\n     9.1.3 Session Close (SC)                         \
    \               17\n    9.2 Data Packet Format                               \
    \            18\n   10. MATIP FORMAT FOR TYPE B TRAFFIC                      \
    \         19\n    10.1 Control packet format                                 \
    \      19\n     10.1.1 Session Open format (SO)                              \
    \   19\n     10.1.2 Open confirm format (OC)                                 20\n\
    \     10.1.3 Session Close (SC)                                       21\n   \
    \ 10.2 Data packet format                                          21\n   11.\
    \ SECURITY CONSIDERATIONS                                       22\n   12. AUTHOR'S\
    \ ADDRESS                                              22\n   13. FULL COPYRIGHT\
    \ STATEMENT                                      23\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The airline community has been using a worldwide data network\
    \ for\n   over 40 years, with two main types of traffic:\n    Transactional traffic\n\
    \      This is used typically for communication between an airline office\n  \
    \    or travel agency and a central computer system for seat\n      reservations\
    \ and ticket issuing. A dumb terminal or a PC accesses\n      the central system\
    \ (IBM or UNISYS) through a data network.\n      This traffic is also called TYPE\
    \ A and is based on real-time\n      query/response with limited protection, high\
    \ priority and can be\n      discarded. The user can access only one predetermined\
    \ central\n      computer system. In case of no response (data loss), the user\
    \ can\n      duplicate the request.\n    Messaging\n      This is an e-mail application\
    \ where real-time is not needed.\n      However a high level of protection is\
    \ required. The addressing\n      scheme uses an international format defined\
    \ by IATA and contains\n      the city and airline codes.\n      This traffic\
    \ is also called TYPE B and is transmitted with a high\n      level of protection,\
    \ multi-addressing and 4 levels of priority.\n   The detailed formats for TYPE\
    \ A and TYPE B messages are defined in\n   the IATA standards.\n   At the bottom\
    \ level, synchronous protocols have been built since\n   1960's and well before\
    \ the OSI and SNA standards.\n   At present, there is a big number of legacy equipment\
    \ installed in\n   thousands of airline offices around the world. Many airlines\
    \ do not\n   have immediate plans to replace their terminals with more modern\n\
    \   equipment using open standards. They are in search of more economical\n  \
    \ ways for connecting these terminals to the present reservation\n   system.\n\
    \   Most airlines are willing to migrate from airline specific protocols\n   to\
    \ standardized protocols in order to benefit from the lower cost of\n   new technologies,\
    \ but the migration has been slow done to the\n   following factors:\n   - Applications\
    \ have not been migrated.\n   - Dumb terminals using airline protocols P1024B\
    \ (IBM ALC) or P1024C\n     (UNISYS UTS) are still numerous.\n   There are currently\
    \ many different proprietary solutions based on\n   gateways available to take\
    \ advantage of low cast networking, but they\n   are not scalable and cannot interact.\n\
    \   In the future, TCP/IP will be more commonly used as a common\n   transport\
    \ means for traffic types because:\n   - TCP/IP is the standard protocol of UNIX\
    \ based applications\n   - TCP/IP stacks are inexpensive\n   - TCP/IP is used\
    \ on intranets.\n   The purpose of this RFC is to define the mapping of the airline\n\
    \   traffic types over TCP/IP. The airlines implementing it in their\n   systems\
    \ should have a TCP/IP stack to enable the traffic exchange\n   below:\n     !----!\
    \          (            )\n     !    !----------(            )\n     !----!  \
    \        (            )\n     Type B HOST     (   NETWORK  )\n               \
    \      (            )\n                     (            )            !---o\n\
    \     !----!          (            )--------! D !---o Type A stations\n     !----!----------(\
    \            )            !---o\n     !----!          (            )\n     TYPE\
    \ A HOST           !\n                           !\n                         \
    \  !\n                           !\n                        --------\n       \
    \                !       !\n                        --------\n               \
    \       Network Messaging System\n      (D) : Gateway TYPE A router\n   The different\
    \ airline traffic flows concerned by this RFC are:\n     - TYPE A Host / Terminal\n\
    \     - TYPE A Host / TYPE A host\n     - TYPE B Host / Network messaging System\n\
    \   In the case of dumb terminals, a conversion is required on the\n   terminal\
    \ side in order to have an IP connection between the host and\n   the router.\
    \ However, the IP connection is directly between the\n   central airline host\
    \ and the intelligent workstation if the latter\n   has a direct connection to\
    \ the network, a TCP/IP stack and a terminal\n   emulation\n"
- title: 2. Terminology & Acronyms
  contents:
  - "2. Terminology & Acronyms\n   ALC\n   Airline Line Control: IBM airline specific\
    \ protocol (see P1024B)\n   ASCII\n   American Standard Code for Information Interchange\n\
    \   ASCU\n   Agent Set Control Unit: Cluster at the user side.\n   AX.25\n   Airline\
    \ X.25: Airline application of the X.25 OSI model (published by\n   IATA)\n  \
    \ BAUDOT\n   Alphabet defined in ITU-T Number 5. BAUDOT uses 5 bits. Padded BAUDOT\n\
    \   uses 7 bits with the Most significant bit (bit 7) for the parity and\n   the\
    \ bit 6 equal to 1.\n   BATAP\n   Type B Application to Application Protocol.\
    \ Protocol to secure the\n   TYPE B traffic. It was specified by SITA and is now\
    \ published by IATA\n   (SCR Vol. 3)\n   EBCDIC\n   Extended Binary Coded Decimal\
    \ Interchange Code\n   Flow ID Traffic\n   Flow identifier used in host to host\
    \ traffic  to differentiate\n   traffic flow types.\n   HLD\n   High Level Designator:\
    \ Indicates the entry or exit point of a block\n   in the network.\n   IA\n  \
    \ Interchange Address: ASCU identifier in P1024B protocol.\n   IATA\n   International\
    \ Air Transport Association\n   IP\n   Internet Protocol\n   IPARS\n   International\
    \ Program Airline Reservation System: IPARS code is used\n   in ALC\n   HTH\n\
    \   Host to Host (traffic).\n   LSB\n   Least Significant Bit\n   MATIP\n   Mapping\
    \ of Airline Traffic over Internet Protocol\n   MSB\n   Most Significant Bit\n\
    \   OC\n   Open Confirm (MATIP command)\n   OSI\n   Open Standard Interface\n\
    \   P1024B\n   SITA implementation of the ALC, the IBM airlines specific protocol.\n\
    \   It uses 6-bit padded characters (IPARS) and IA/ TA for physical\n   addressing.\n\
    \   P1024C\n   SITA implementation of the UTS, the UNISYS terminal protocol. It\
    \ uses\n   7-bit (ASCII) characters and RID/ SID for physical addressing.\n  \
    \ RFU\n   Reserved for Future Use\n   RID\n   Remote Identifier: ASCU identifier\
    \ in P1024C protocol.\n   SC\n   Session Close (MATIP command)\n   SCR\n   System\
    \ and Communication Reference. (IATA document)\n   SID\n   Station Identifier:\
    \ Terminal identifier in P1024C protocol.\n   SITA\n   Societe International de\
    \ Telecommunications Aeronautiques\n   SO\n   Session Open (MATIP command)\n \
    \  TA\n   Terminal Address: Terminal identifier in P1024B protocol.\n   TCP\n\
    \   Transport Control Protocol\n   TYPE A Traffic\n   Interactive traffic or host\
    \ to host\n   TYPE B Traffic\n   Messaging traffic in IATA compliant format with\
    \ high level of\n   reliability\n   UTS\n   Universal Terminal System by Unisys:\
    \ (see P1024C)\n"
- title: 3. LAYERING
  contents:
  - "3. LAYERING\n   MATIP is an end to end protocol. Its purpose is to have a mapping\n\
    \   standard between the TCP layer and the airline application without\n   any\
    \ routing element.\n     +-------------------------------+\n     |Airline TYPE\
    \ A | Airline TYPE B|\n     |               |   Application |\n     |        \
    \       |---------------|\n     | Application   |   BATAP       |\n     +-------------------------------+\n\
    \     |   MATIP A     |   MATIP B     |\n     +-------------------------------+\n\
    \     |            T.C.P              |\n     +-------------------------------+\n\
    \     |             I.P               |\n     +-------------------------------+\n\
    \     |            MEDIA              |\n     +-------------------------------+\n"
- title: 4. TRAFFIC IDENTIFICATION
  contents:
  - "4. TRAFFIC IDENTIFICATION\n   In TYPE A conversational traffic, the airline host\
    \ application\n   recognizes the ASCU due to 4 bytes (H1, H2, A1, A2). These bytes\
    \ are\n   assigned by the host and are unique per ASCU. Thus, a host can\n   dynamically\
    \ recognize the ASCU independent of IP address.\n   H1 H2 A1 A2 bytes follow one\
    \ of the three cases below:\n     - A1,A2 only are used and H1H2 is set to 0000.\n\
    \     - H1,H2 identify the session and A1A2 the ASCU inside the session.\n   \
    \  - H1,H2,A1,A2 identify the ASCU.\n   The first two cases are fully compatible\
    \ with the AX.25 mapping where\n   H1H2 may be equivalent to the HLD of the concentrator,\
    \ i.e., 2 bytes\n   hexadecimal. The third rule allows more flexibility but is\
    \ not\n   compatible with AX.25.\n   In TYPE A host to host traffic the identification\
    \ field is also\n   present and is equal to 3 bytes H1 H2 Flow ID (optional).\
    \ H1H2 are\n   reserved for remote host identification (independently of the IP\n\
    \   address) and must be allocated bilaterally.\n   In Type B traffic, identification\
    \ of End Systems may be carried out\n   by the use of HLDs, or directly by the\
    \ pair of IP addresses.\n"
- title: 5. TCP PORT ALLOCATION
  contents:
  - "5. TCP PORT ALLOCATION\n   IANA (Internet Assigned Numbers Authority) has allocated\
    \ the\n   following ports for MATIP TYPE A and TYPE B traffic:\n     MATIP Type\
    \ A TCP port = 350\n     MATIP Type B TCP port = 351\n   Therefore the traffic\
    \ type A or B is selected according to the TCP\n   port.\n"
- title: 6. MATIP SESSION ESTABLISHMENT
  contents:
  - "6. MATIP SESSION ESTABLISHMENT\n   Prior to any exchange between two applications,\
    \ a single MATIP\n   session is established above the TCP connection in order\
    \ to identify\n   the traffic characteristic such as:\n     - Subtype of traffic\
    \ for TYPE A (Type A host to host or Type A\n       conversational )\n     - Multiplexing\
    \ used (for Type A)\n     - Data header\n     - Character set\n   A separate session\
    \ and TCP connection must be established for each\n   set of parameters (e.g.,\
    \ P1024B, P1024C traffic between two points\n   needs two separate sessions).\n\
    \   The establishment of a MATIP session can be initiated by either side.\n  \
    \ No keep-alive mechanism is defined at MATIP level. Session time out\n   relies\
    \ on the TCP time-out parameters.\n   There are three commands defined to manage\
    \ the MATIP session:\n   - Session Open (SO) to open a session.\n   - Open Confirm\
    \ (OC) to confirm the SO command.\n   - Session close (SC) to close the current\
    \ session.\n   A MATIP session can be up only if the associated TCP connection\
    \ is\n   up.  However it is not mandatory to close the TCP connection when\n \
    \  closing the associated MATIP session.\n   Typical exchange is:\n          \
    \            TCP session establishment\n             Session Open --------->\n\
    \                            <-----------   Open confirm\n                   \
    \       data exchange\n             ---------------------->\n                \
    \             <-------------------------\n                             .\n   \
    \                          .\n                             .\n    Session Close\
    \ ----------------->\n                             .\n                       \
    \      .\n                             .\n                              <-------------------------\
    \   Session Open\n   Open confirm ------------------->\n                     \
    \   data exchange\n                               <-------------------------\n\
    \             ---------------------->\n   The Session Open command may contain\
    \ configuration elements. An\n   Session Open command received on a session already\
    \ opened (i.e., same\n   IP address and port number) will automatically clear\
    \ the associated\n   configuration and a new configuration will be set up according\
    \ to the\n   information contained in the new open session command.\n   As illustrated\
    \ above, the open and close commands are symmetrical.\n   For type A conversational\
    \ traffic, the SO and OC commands contain\n   information for the identification\
    \ of the ASCUs and the session.\n   ASCUs are identified within a session by two\
    \ or 4 bytes. A flag is\n   set to indicate if the ASCU is identified by 4 bytes\
    \ (H1H2A1A2) or by\n   2 bytes (A1A2). In the latter case, H1H2 is reserved for\
    \ session\n   identification.\n   The SO command is sent to open the MATIP session.\
    \ In Type A\n   conversational it may contains the list of ASCUs configured in\
    \ this\n   session.\n   The OC command confirms the SO command. It can refuse\
    \ or accept it,\n   totally or conditionally. In Type A, it contains the list\
    \ of the\n   ASCUs either rejected or configured in the session.\n"
- title: 7. OVERALL PACKET FORMAT FOR TYPE A & TYPE B
  contents:
  - "7. OVERALL PACKET FORMAT FOR TYPE A & TYPE B\n   The first 4 bytes of the MATIP\
    \ header follow the following rules.\n     0                   1             \
    \      2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |C|     Cmd     |            length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Ver\n\
    \   The `Ver' (Version) field represents the version of the MATIP. It\n   must\
    \ contain the value 001 otherwise the packet is considered as\n   invalid.\n \
    \  C\n   Identifies a CONTROL packet.\n     When set to 1, the packet is a Control\
    \ packet\n     When set to 0, the packet is a Data packet\n   Cmd\n   This field\
    \ identifies the control command if the flag C is set to 1.\n   Length\n   This\
    \ field indicates the number of bytes of the whole packet, header\n   included.\n\
    \   Notes : Fields identified as optional (Opt) are not transmitted if\n   not\
    \ used.\n"
- title: 8. MATIP FORMAT FOR TYPE A CONVERSATIONAL TRAFFIC
  contents:
  - '8. MATIP FORMAT FOR TYPE A CONVERSATIONAL TRAFFIC

    '
- title: 8. 1 Control Packet Format
  contents:
  - "8. 1 Control Packet Format\n   There are 3 control packets to open or close the\
    \ session at the MATIP\n   level.\n"
- title: 8.1.1 Session Open format (SO)
  contents:
  - "8.1.1 Session Open format (SO)\n   To be able to identify the session and before\
    \ sending any data\n   packets, a Session Open command is sent. It can be initiated\
    \ by\n   either side. In case of collision, the open session from the side\n \
    \  having the lower IP address is ignored.\n       0                   1     \
    \              2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0|0|0|0|0| Ver |1|1 1 1 1 1 1 0|           length              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |0\
    \ 0|0 1|0| CD  | STYP  |0 0 0 0|       RFU     |MPX|HDR| PRES. |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      H1       |      H2       |           RFU                 |\n   \
    \   |-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \   Reserved    |              RFU              | Nbr of ASCUs  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  Nbr of ASCUs |        ASCU list (opt)                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   RFU\n\
    \   Reserved for future use. Must be set to zero.\n   CD\n   This field specifies\
    \ the Coding\n      000 : 5 bits (padded baudot)\n      010 : 6 bits (IPARS)\n\
    \      100 : 7 bits (ASCII)\n      110 : 8 bits (EBCDIC)\n      xx1 : R.F.U\n\
    \   STYP\n   This is the traffic subtype (type being TYPE A).\n      0001 : TYPE\
    \ A Conversational\n   MPX\n   This flag specifies the multiplexing used within\
    \ the TCP session.\n   Possible values are:\n      00 : Group of ASCU with 4 bytes\
    \ identification per ASCU (H1H2A1A2)\n      01 : Group of ASCUs with 2 bytes identification\
    \ per ASCU (A1A2)\n      10 : single ASCU inside the TCP session.\n   HDR\n  \
    \ This field specifies which part of the airline's specific address is\n   placed\
    \ ahead of the message texts transmitted over the session.\n   Possible values\
    \ are:\n      00 : ASCU header = H1+H2+A1+A2\n      01 : ASCU Header = A1+A2\n\
    \      10 : No Header\n      11 : Not used\n   The MPX and HDR must be coherent.\
    \ When ASCUs are multiplexed, the data\n   must contain the ASCU identification.\
    \ The table below summarizes the\n   allowed combinations:\n       +--------------------------+\n\
    \       |       MPX | 00 | 01 | 10 |\n       +--------------------------+\n  \
    \     | HDR       |              |\n       | 00        | Y  | Y  | Y  |\n    \
    \   | 01        | N  | Y  | Y  |\n       | 10        | N  | N  | Y  |\n      \
    \ +--------------------------+\n   PRES\n   This field indicates the presentation\
    \ format\n      0001 : P1024B presentation\n      0010 : P1024C presentation\n\
    \      0011 : 3270 presentation\n   H1 H2\n   These fields can logically identify\
    \ the session if MPX is not equal to\n   00. When this field is not used, it must\
    \ be set to 0. If used in\n   session (MPX <> 0) with HDR=00, H1H2 in data packet\
    \ must have the same\n   value as set in SO command.\n   Nbr of ASCUs\n   Nbr_of_ASCUs\
    \ field is mandatory and gives the number of ASCUs per\n   session. A 0 (zero)\
    \ value means unknown. In this case the ASCU list is\n   not present in the `Open\
    \ Session' command and must be sent by the\n   other end in the `Open Confirm'\
    \ command.\n   ASCU LIST\n   Contains the list of identifier for each ASCU. If\
    \ MPX=00 it has a\n   length of four bytes (H1H2A1A2) for each ASCU, otherwise\
    \ it is two\n   bytes (A1A2).\n"
- title: 8.1.2 Open Confirm format (OC)
  contents:
  - "8.1.2 Open Confirm format (OC)\n   The OC (Open Confirm) command is a response\
    \ to an SO (Session Open)\n   command and is used to either refuse the session\
    \ or accept it\n   conditionally upon checking hte configuration of each ASCU.\n\
    \   In case of acceptance, the OC indicates the number and the address of\n  \
    \ the rejected ASCUs, if any. Alternatively, it indicates the list of\n   ASCUs\
    \ configured for that MATIP session if the list provided by the\n   SO command\
    \ was correct or the number of ASCUs configured in the\n   session was unknown\
    \ (n. of ASCU equals 0).\n"
- title: 8.1.2.1 Refuse the connection
  contents:
  - "8.1.2.1 Refuse the connection\n     0                   1                   2\
    \                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   cause     |\n     +-+-+-+-+-+-+-+-+\n   Cause\n   This field indicates the\
    \ reason for the MATIP session refusal:\n       0 0 0 0 0 0 0 1 : No Traffic Type\
    \ matching between Sender &\n           Recipient\n       0 0 0 0 0 0 1 0 : Information\
    \ in SO header incoherent\n       1 0 0 0 0 1 0 0\n           up to       : Application\
    \ dependent\n       1 1 1 1 1 1 1 1\n       Other values reserved.\n"
- title: 8.1.2.2 Accept the connection
  contents:
  - "8.1.2.2 Accept the connection\n     0                   1                   2\
    \                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|            length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0 0\
    \ R 0 0 0 0 0| Nbr of ASCUs  |Nbr of ASCU(opt|  ASCU LIST    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   R\n   Flag indicating an error in the ASCU configuration provided in the SO\n\
    \   command.\n   NBR of ASCUs\n   If the MPX value is equal to 00 in the SO command,\
    \ this field is two\n   bytes long. Otherwise, it is one byte.\n   If the R flag\
    \ is set, the Nbr_of_ASCUs field represents the number of\n   ASCUs in error.\
    \ Otherwise, it indicates the number of ASCUs configured\n   for that MATIP session.\n\
    \   Notes: The length of this field is either one or two bytes. In the SO\n  \
    \ command, the length is always two bytes. This discrepancy comes from\n   backward\
    \ compatibility with AX25 (see chapter 4). In the SO command,\n   it is possible\
    \ to use a free byte defined in the AX25 call user data.\n   Unfortunately, there\
    \ is no such free byte in the AX25 clear user\n   data.\n   ASCU LIST\n   Depending\
    \ on the R flag, this field indicates the list of ASCUs  (A1A2\n   or H1H2A1A2)\
    \ either in error or within the session.\n"
- title: 8.1.3 Session Close (SC)
  contents:
  - "8.1.3 Session Close (SC)\n   The SC (Session Close) command is used to close\
    \ an existing MATIP\n   session.\n     0                   1                 \
    \  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 0|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | Close\
    \  Cause  |\n     +-+-+-+-+-+-+-+-+\n   Close Cause\n   Indicates the reason for\
    \ the session closure:\n       0 0 0 0 0 0 0 0 : Normal Close\n       1 0 0 0\
    \ 0 1 0 0\n            up to      : Application dependent\n       1 1 1 1 1 1\
    \ 1 1\n       Other values reserved.\n"
- title: 8.2 Data Packet Format
  contents:
  - "8.2 Data Packet Format\n     0                   1                   2      \
    \             3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |0|0 0 0 0 0 0 0|          length               |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                       ID (optional)                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ |                         Payload                               |\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ID\n   This field is optional and has a different length and format\n   according\
    \ to the value of HDR, PRES indicated during the session\n   establishment.\n\
    \     +------------------------------+-------------------------------+\n     |HDR\
    \ |  PRES = P1024B and 3270 |     PRES = P1024C             |\n     +------------------------------+-------------------------------+\n\
    \     |00  |ID = 4 bytes H1-H2-A1-A2 | ID = 5 bytes H1-H2-A1-0x01-A2 |\n     +------------------------------+-------------------------------+\n\
    \     |01  |ID = 2 bytes A1-A2       | ID = 3 bytes A1-0x01-A2       |\n     +------------------------------+-------------------------------+\n\
    \     |10  |ID = 0 bytes             | ID = 0 bytes                  |\n     +------------------------------+-------------------------------+\n\
    \   H1, H2 value must match the value given in the SO command if MPX is\n   different\
    \ from 0.\n   Payload\n   payload begins with the terminal identification:\n \
    \     - One byte Terminal identifier (TA) in P1024B\n      - Two bytes SID/DID\
    \ Terminal identifier in P1024C.\n"
- title: 9. MATIP FORMAT FOR TYPE A HOST-TO-HOST TRAFFIC
  contents:
  - '9. MATIP FORMAT FOR TYPE A HOST-TO-HOST TRAFFIC

    '
- title: 9. 1 Control Packet Format
  contents:
  - "9. 1 Control Packet Format\n   There are 3 control packets to open or close the\
    \ session at the MATIP\n   level.\n"
- title: 9.1.1 Session Open format (SO)
  contents:
  - "9.1.1 Session Open format (SO)\n   To be able to identify the session and before\
    \ sending any data\n   packet, a Session Open command is sent. It can be initiated\
    \ by either\n   side. In case of collision, the open session from the side having\
    \ the\n   lower IP address is ignored.\n      0                   1          \
    \         2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 1 0|     length                    |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0 0|0\
    \ 1|0| CD  | STYP  |0 0 0 0|       RFU     |MPX|HDR|0 0 0 0|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |      H1       |      H2       |           RFU                 |\n    \
    \ |-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \ Flow ID(opt)|\n     +-+-+-+-+-+-+-+-+\n   RFU\n   Reserved for future use. Must\
    \ be set to zero.\n   CD\n   This field specifies the Coding, as defined in section\
    \ 8.1.1.1.\n   STYP\n   This is the traffic subtype (type being Type A).\n   0010\
    \ : TYPE A IATA Host to Host\n   1000 : SITA Host to Host\n   MPX\n   This flag\
    \ specifies the multiplexing used within the MATIP session in\n   TYPE A SITA\
    \ host to host. Possible values are:\n   00 : irrelevant\n   01 : multiple flow\
    \ inside the TCP connection\n   10 : single flow inside the TCP connection\n \
    \  HDR\n   This field specifies which part of the airline's specific address is\n\
    \   placed ahead of the message text transmitted over the session.\n   Possible\
    \ values are:\n   00 : used in TYPE A SITA Host to Host Header = H1+H2+Flow ID\n\
    \   01 : used in TYPE A SITA Host to Host Header = Flow ID\n   10 : No Header\
    \ (default for IATA host to Host)\n   11 : Not used\n   The MPX and HDR must be\
    \ coherent. When flow are multiplexed, the data\n   must contain the flow identification.\
    \ The table below summarizes the\n   possible combinations:\n         +---------------------+\n\
    \         |       MPX | 01 | 10 |\n         +---------------------+\n        \
    \ | HDR       |    |    |\n         | 00        | Y  | Y  |\n         | 01   \
    \     | Y  | Y  |\n         | 10        | N  | Y  |\n         +---------------------+\n\
    \   H1 H2\n   These fields can be used to identify the session. When this field\
    \ is\n   not used, it must be set to 0. If HDR=00, H1H2 in data packet must\n\
    \   have the same value as set in SO command.\n   Flow ID\n   This field is optional\
    \ and indicates the Flow ID (range 3F - 4F Hex).\n"
- title: 9.1.2 Open Confirm format (OC)
  contents:
  - "9.1.2 Open Confirm format (OC)\n   The OC (Open Confirm) command is a response\
    \ to an SO (Session Open)\n   command and is used to either refuse the session\
    \ or accept it.\n"
- title: 9.1.2.1 Refuse the connection
  contents:
  - "9.1.2.1 Refuse the connection\n      0                   1                  \
    \ 2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \   cause     |\n     +-+-+-+-+-+-+-+-+\n   Cause\n   This field indicates the\
    \ reason for the MATIP session refusal\n       0 0 0 0 0 0 0 1 : No Traffic Type\
    \ matching between Sender &\n            Recipient\n       0 0 0 0 0 0 1 0 : Information\
    \ in SO header incoherent\n       1 0 0 0 0 1 0 0\n            up to      : Application\
    \ dependent\n       1 1 1 1 1 1 1 1\n       Other values reserved.\n"
- title: 9.1.2.2 Accept the connection
  contents:
  - "9.1.2.2 Accept the connection\n      0                   1                  \
    \ 2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0 0\
    \ 0 0 0 0 0 0|\n     +-+-+-+-+-+-+-+-+\n"
- title: 9.1.3 Session Close (SC)
  contents:
  - "9.1.3 Session Close (SC)\n   The SC (Session Close) command is used to close\
    \ an existing MATIP\n   session.\n      0                   1                \
    \   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 0|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | Close\
    \  Cause  |\n     +-+-+-+-+-+-+-+-+\n   Close Cause\n   Indicates the reason for\
    \ the session closure:\n       0 0 0 0 0 0 0 0 : Normal Close\n       1 0 0 0\
    \ 0 1 0 0\n            up to      : Application dependent\n       1 1 1 1 1 1\
    \ 1 1\n       Other values reserved\n"
- title: 9.2 Data Packet Format
  contents:
  - "9.2 Data Packet Format\n      0                   1                   2     \
    \              3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |0|0 0 0 0 0 0 0|          length               |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                       ID (optional)                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ |                         Payload                               |\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ID\n   This field is optional and has a different length and format\n   according\
    \ to the value of   HDR indicated during the session\n   establishment.\n    \
    \ +-------------------------------+\n     |HDR |        I.D.              |\n\
    \     +-------------------------------+\n     |00  |ID = 3 bytes H1-H2 FLOW ID|\n\
    \     +-------------------------------+\n     |01  |ID = FLOW ID             \
    \ |\n     +-------------------------------+\n     |10  |ID nor present       \
    \     |\n     +-------------------------------+\n   Payload packet\n   The payload\
    \ format is relevant to the MATIP layer. It is formatted\n   according to the\
    \ IATA host to host specifications and agreed\n   bilaterally by the sender and\
    \ the receiver.\n"
- title: 10. MATIP FORMAT FOR TYPE B TRAFFIC
  contents:
  - '10. MATIP FORMAT FOR TYPE B TRAFFIC

    '
- title: 10.1 Control packet format
  contents:
  - "10.1 Control packet format\n   There are 3 control packets used to open or close\
    \ the session at the\n   MATIP level for exchanging Type B data\n"
- title: 10.1.1 Session Open format (SO)
  contents:
  - "10.1.1 Session Open format (SO)\n   Before sending any data packets, it is recommended\
    \ to let the systems\n   establishing a session check that they are indeed able\
    \ to communicate\n   (i.e., Both systems agree on the characteristics of the traffic\
    \ that\n   will cross the connection). For this purpose, a two way handshake,\n\
    \   using the Session commands defined hereafter, is performed\n   immediately\
    \ after the establishment of the TCP level connection.\n   Either side can initiate\
    \ this procedure. In case of collision, the\n   open session from the side having\
    \ the lower IP address is ignored.\n      0                   1              \
    \     2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 1 0|            length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0 0\
    \ 0 0 0| C D | PROTEC| BFLAG |          Sender HLD           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |       Recipient HLD           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length\n   This field indicates the number of bytes of the whole command,\
    \ header\n   included. The only possible values are equal to 6 bytes or 10 bytes.\n\
    \   CD\n   This field specifies the Coding, as defined in section 8.1.1.1.\n \
    \  PROTEC\n   Identifies the end to end Messaging Responsibility Transfer protocol\n\
    \   used.\n   0010: BATAP\n   All other values available.\n   BFLAG (X means `do\
    \ not care'\n   X X 0 0 means that the fields `Sender HLD, Recipient HLD' do not\
    \ exist\n        in this packet. In this case, the exact length of the packet\
    \ is 6\n        Bytes.\n   X X 1 0 means that the `Sender HLD, Recipient HLD'\
    \ are carried\n        respectively in bytes 9,10 and 11,12 of this packet. In\
    \ this\n        case, the exact length of the packet is 10 Bytes.\n   0 0 X X\
    \ means that the connection request has been transmitted from a\n   host (Mainframe\
    \ system)\n   0 1 X X means that the connection request has been transmitted from\
    \ a\n   gateway)\n   Sender HLD\n   HLD of the Type B System sending the Session\
    \ Open.\n   Recipient HLD\n   HLD of the Type B system to which session opening\
    \ is destined.\n"
- title: 10.1.2 Open confirm format (OC)
  contents:
  - "10.1.2 Open confirm format (OC)\n   The OC (Open Confirm) command is a response\
    \ to an SO (Session Open)\n   command and is used to either refuse the session\
    \ or accept it.\n"
- title: 10.1.2.1 Refuse the connection
  contents:
  - "10.1.2.1 Refuse the connection\n      0                   1                 \
    \  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0|1|\
    \   Cause   |\n     +-+-+-+-+-+-+-+-+\n   Length of this packet is 5 Bytes.\n\
    \   Cause\n   Indicates the cause of the rejection\n       0 0 0 0 0 1 : No Traffic\
    \ Type matching between Sender & Recipient\n       0 0 0 0 1 0 : Information in\
    \ SO header incoherent\n       0 0 0 0 1 1 : Type of Protection mechanism are\
    \ different\n       0 0 0 1 0 0 up to 1 1 1 1 1 1 : R.F.U\n"
- title: 10.1.2.2 Accept the connection
  contents:
  - "10.1.2.2 Accept the connection\n      0                   1                 \
    \  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 1|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |0 0\
    \ 0 0 0 0 0 0|\n     +-+-+-+-+-+-+-+-+\n   Length of this packet is 5 Bytes.\n"
- title: 10.1.3 Session Close (SC)
  contents:
  - "10.1.3 Session Close (SC)\n   The SC (Session Close) command is used to close\
    \ an existing MATIP\n   session.\n      0                   1                \
    \   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |1|1 1 1 1 1 0 0|0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1|\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | Close\
    \  Cause  |\n     +-+-+-+-+-+-+-+-+\n   Close Cause\n   Indicates the reason for\
    \ the session closure:\n   0 0 0 0 0 0 0 0 : Normal Close\n   1 0 0 0 0 1 0 0\
    \ up to 1 1 1 1 1 1 1 1 : Application dependent\n   Other values reserved\n"
- title: 10.2 Data packet format
  contents:
  - "10.2 Data packet format\n      0                   1                   2    \
    \               3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|0|0|0|0| Ver |0|0 0 0 0 0 0 0|            length             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                                                             |\n     |      \
    \                   Payload                               |\n     |          \
    \                                                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Length\n   This field indicates the number of bytes of the whole packet, header\n\
    \   included.\n   Payload\n   Type B message formatted according to the IATA standard\
    \ and\n   conforming to the rules of the accessed TYPE B service\n"
- title: 11. Security Considerations
  contents:
  - "11. Security Considerations\n   The security is a very sensitive point for airline\
    \ industry. Security\n   for the MATIP users can take place at different levels:\n\
    \   The ASCU must be defined to enable the session with the host\n   application.\
    \ The control can be achieved in two ways: either the ASCU\n   address (H1 H2\
    \ A1 A2) is defined at the application level by the\n   means of a static configuration,\
    \ or the ASCU is identified by a User\n   ID / password. In most cases, the User\
    \ ID and Password are verified\n   by a dedicated software running in the central\
    \ host. But they can\n   also be checked by the application itself.\n   The MATIP\
    \ sessions being transported over TCP/IP, It can go through a\n   firewall. Depending\
    \ on the firewall level, the control can be\n   performed at network (IP addresses)\
    \ or TCP application layer.\n   For higher level of security all compliant implementations\
    \ MAY\n   implement IPSEC ESP for securing control packets.  Replay protection,\n\
    \   the compulsory cipher suite for IPSEC ESP, and NULL encryption MAY be\n  \
    \ implemented. Optionally, IPSEC AH MAY also be supported.  All\n   compliant\
    \ implementations MAY also implement IPSEC ESP for protection\n   of data packets.\
    \ Replay prevention and integrity protection using\n   IPSEC ESP mandated cipher\
    \ suit MAY be implemented.  NULL encryption\n   also MAY be supported. Other IPSEC\
    \ ESP required ciphers MAY also be\n   supported.\n"
- title: 12. Author's Address
  contents:
  - "12. Author's Address\n   Alain Robert\n   S.I.T.A.\n   18, rue Paul Lafargue\n\
    \   92904 PARIS LA DEFENSE 10\n   FRANCE\n   Phone: 33 1 46411491\n   Fax: 33\
    \ 1 46411277\n   EMail: arobert@par1.par.sita.int\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
