Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing ethernet like objects.
The Internet standard Network Management Framework consists of three components.
They are: STD 16/RFC 1155 [3] which defines the SMI, the mechanisms used for describing and naming objects for the purpose of management.
STD 16/RFC 1212 [13] defines a more concise description mechanism, which is wholly consistent with the SMI.
RFC 1156 [4] which defines MIB I, the core set of managed objects for the Internet suite of protocols.
STD 17/RFC 1213 [6] defines MIB II, an evolution of MIB I based on implementation experience and new operational requirements.
STD 15/RFC 1157 [5] which defines the SNMP, the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Objects Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1)
[7] defined in the SMI.
In particular, each object has a name, a syntax, and an encoding.
The name is an object identifier, an administratively assigned name, which specifies an object type.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the OBJECT DESCRIPTOR, to also refer to the object type.
The syntax of an object type defines the abstract data structure corresponding to that object type.
The ASN.1 language is used for this purpose.
However, the SMI [3] purposely restricts the ASN.1 constructs which may be used.
These restrictions are explicitly made for simplicity.
The encoding of an object type is simply how that object type is represented using the object type's syntax.
Implicitly tied to the notion of an object type's syntax and encoding
is how the object type is represented when being transmitted on the network.
The SMI specifies the use of the basic encoding rules of ASN.1 [8], subject to the additional requirements imposed by the SNMP.
Format of Definitions Section 4 contains contains the specification of all object types contained in this MIB module.
The object types are defined using the conventions defined in the SMI, as amended by the extensions specified in [13].
Overview Instances of these object types represent attributes of an interface to an ethernet like communications medium.
At present, ethernet like media are identified by three values of the ifType object in the Internet standard MIB: ethernet csmacd(6) iso88023
The definitions presented here are based on the IEEE 802.3 Layer Management Specification [9], as originally interpreted by Frank Kastenholz of Interlan in [10].
Implementors of these MIB objects should note that the IEEE document explicitly describes (in the form of Pascal pseudocode)
when, where, and how various MAC attributes are measured.
The IEEE document also describes the effects of MAC actions that may be invoked by manipulating instances of the MIB objects defined here.
To the extent that some of the attributes defined in [9] are represented by previously defined objects in the Internet  standard MIB or in the Generic Interface Extensions MIB [11], such attributes are not redundantly represented by objects defined in this memo.
Among the attributes represented by objects defined in other memos are the number of octets transmitted or received on a particular interface, the number of frames transmitted or received on a particular interface, the promiscuous status of an interface, the MAC address of an interface, and multicast information associated with an interface.
The relationship between an ethernet like interface and an interface in the context of the Internet standard MIB is one to one.
As such, the value of an ifIndex object instance can be directly used to identify corresponding instances of the objects defined herein.
IMPORTS Counter, Gauge FROM RFC1155
MIB OBJECT TYPE FROM RFC 1212;
This MIB module uses the extended OBJECT TYPE macro as    defined in RFC 1212.
this is the MIB module for ethernet like objects
The Ethernet like Statistics Group
the Ethernet like Statistics group   Implementation of this group is mandatory dot3StatsTable   OBJECT
Dot3StatsEntry ACCESS    not accessible STATUS
mandatory DESCRIPTION "Statistics for a collection of ethernet like interfaces attached to a particular system."
Dot3StatsEntry ACCESS    not accessible STATUS
mandatory DESCRIPTION "Statistics for a particular interface to an ethernet like medium."
Counter, dot3StatsFCSErrors Counter, dot3StatsSingleCollisionFrames Counter, dot3StatsMultipleCollisionFrames Counter, dot3StatsSQETestErrors Counter, dot3StatsDeferredTransmissions
Counter, dot3StatsCarrierSenseErrors Counter, dot3StatsFrameTooLongs Counter,
only STATUS    mandatory DESCRIPTION "An index value that uniquely identifies an interface to an ethernet like medium.
The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
only STATUS    mandatory DESCRIPTION "
A count of frames received on a particular interface that are not an integral number of octets in length and do not pass the FCS check.
The count represented by an instance of this object is incremented when the alignmentError status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.
only STATUS    mandatory DESCRIPTION "
A count of frames received on a particular interface that are an integral number of octets in length but do not pass the FCS check.
The count represented by an instance of this object is incremented when the frameCheckError status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.
only STATUS    mandatory DESCRIPTION "
A count of successfully transmitted frames on a particular interface for which transmission is inhibited by exactly one collision.
A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsMultipleCollisionFrames object.
only STATUS    mandatory DESCRIPTION "
A count of successfully transmitted frames on a particular interface for which transmission is inhibited by more than one collision.
A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsSingleCollisionFrames object.
only STATUS    mandatory DESCRIPTION "A count of times that the SQE TEST ERROR message is generated by the PLS sublayer for a particular interface.
The SQE TEST ERROR message is defined in section 7.2.2.2.4 of ANSI/IEEE 802.3 1985
and its generation is described in section 7.2.4.6 of the same document."
only STATUS    mandatory DESCRIPTION "A count of frames for which the first transmission attempt on a particular interface is delayed because the medium is busy.
The count represented by an instance of this object does not include frames involved in collisions.
The number of times that a collision is detected on a particular interface later than 512 bit times into the transmission of a packet.
Five hundred and twelve bit times corresponds to 51.2 microseconds on a 10 Mbit/s system.
A (late) collision included in a count represented by an instance of this object is also considered as a (generic) collision for purposes of other collision related statistics."
only STATUS    mandatory DESCRIPTION "A count of frames for which transmission on a particular interface fails due to excessive collisions.
only STATUS    mandatory DESCRIPTION "A count of frames for which transmission on a particular interface fails due to an internal MAC sublayer transmit error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsLateCollisions object, the dot3StatsExcessiveCollisions object, or the dot3StatsCarrierSenseErrors object.
The precise meaning of the count represented by an instance of this object
In particular, an instance of this object may represent a count of transmission errors on a particular interface that are not otherwise counted."
dot3StatsEntry 10 } dot3StatsCarrierSenseErrors   OBJECT
"The number of times that the carrier sense condition was lost or never asserted when attempting to transmit a frame on a particular interface.
The count represented by an instance of this object is incremented at most once per transmission attempt, even if the carrier sense condition fluctuates during a transmission attempt.
only STATUS    mandatory DESCRIPTION "
A count of frames received on a particular interface that exceed the maximum permitted frame size.
The count represented by an instance of this object is incremented when the frameTooLong status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of IEEE 802.3 Layer Management, counted exclusively according to the error status presented to the LLC.
only STATUS    mandatory DESCRIPTION "
A count of frames for which reception on a particular interface fails due to an internal MAC sublayer receive error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsFrameTooLongs object, the dot3StatsAlignmentErrors object, or the dot3StatsFCSErrors object.
The precise meaning of the count represented by an instance of this object
In particular, an instance of this object may represent a count of receive errors on a particular interface that are not otherwise counted."
The Ethernet like Collision Statistics Group
the Ethernet like Collision Statistics group   Implementation of this group is optional; it is appropriate   for all systems which have the necessary metering dot3CollTable   OBJECT
"A collection of collision histograms for a particular set of interfaces."
"A cell in the histogram of per frame collisions for a particular interface.
An instance of this object represents the frequency of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions.
only STATUS    mandatory DESCRIPTION "
The index value that uniquely identifies the interface to which a particular collision histogram cell pertains.
The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
A count of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions."
The ifExtnsTestTable defined in RFC 1229 provides a common   means for a manager to test any interface corresponding to   a value of ifIndex.
At this time, one well known test (testFullDuplexLoopBack) is   defined in RFC 1229.
For ethernet like interfaces, this test   configures the MAC chip and executes an internal loopback   test of memory and the MAC chip logic.
This loopback test can   only be executed if the interface is offline.
Once the test   has completed, the MAC chip should be reinitialized for network   operation, but it should remain offline.
If an error occurs during a test, the object ifExtnsTestResult
(defined in RFC 1229) will be set to failed(7).
The following   two OBJECT IDENTIFIERs may be used to provided more   information as values for the object ifExtnsTestCode in   RFC 1229:
expected data not received (or not   received correctly) in loopback test dot3ErrorLoopbackError
Another test, specific to ethernet like interfaces with the   exception of 10BaseT and 10BaseF, is Time domain Reflectometry (TDR).
The TDR value may be useful in determining the approximate distance   to a cable fault.
It is advisable to repeat this test to check for   a consistent resulting TDR value, to verify that there is a fault.
A TDR test returns as its result the time interval, measured   in 10 MHz ticks or 100 nsec units, between the start of   TDR test transmission and the subsequent detection of a   collision or deassertion of carrier.
On successful completion   of a TDR test, the appropriate instance of ifExtnsTestResult   contains the OBJECT IDENTIFIER of the MIB object which   contains the value of this time interval.
The object ifExtnsChipSet is provided in RFC 1229 to identify   the MAC hardware used to communcate on an interface.
For those chipsets not represented above, OBJECT IDENTIFIER   assignment is required in other documentation, e.g., assignment   within that part of the registration tree delegated to   individual enterprises (see RFC 1155).
Change Log (1)  Replace old "Historical Perspective" boilerplate with the new "The Network Management Framework" boilerplate.
(2)  Remove the "slime text".
(3)  Updated the reference to the Interface Extensions
mib to reflect its new RFC status.
(4)  Change the status of the memo section to hold the new suggested text.
These references are now meaningful when the ASN.1 is read outside of the RFC.
The IMPORTS section of the ASN.1 has been updated to reflect that the OBJECT TYPE macro is imported from RFC  1212.
(7)  The the Generic Ethernet like group, containing dot3Index, dot3InitializeMac, dot3MacSubLayerStatus, dot3MulticastReceiveStatus, dot3TxEnabled, and dot3TestTdrValue has been deprecated as a result of the implementation experience presented at the San Diego IETF meeting.
(8)  dot3StatsInRangeLengthErrors and dot3StatsOutOfRangeLengthFields have been deprecated as a result of the implementation experience presented at the San Diego IETF meeting.
(9)  Update the acknowledgements section to reflect this document's history, etc.
(10) REFERENCE clauses have been added to all of the MIB objects which are being retained.
12 August 1992 (1)  Removed all deprecated objects.
(2)  Rephrased the description of the TDR test OID to reflect the fact that dot3TestTdrValue is no more.
ifExtnsTestResult still points to the object containing the result, the text simply does not refer to dot3TestTdrValue.
I could have deleted the Test, but the OID should then remain reserved.
I figured that it would be just as easy to rephrase the definition of the test.
13 august 1992 (1)  Add fuji.
Security Considerations Security issues are not discussed in this memo.
