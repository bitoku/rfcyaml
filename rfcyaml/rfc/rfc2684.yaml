- contents:
  - '        Multiprotocol Encapsulation over ATM Adaptation Layer 5

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo replaces RFC 1483.  It describes two encapsulations methods\n
    \  for carrying network interconnect traffic over AAL type 5 over  ATM.\n   The
    first method allows multiplexing of multiple protocols over a\n   single ATM virtual
    connection whereas the second method assumes that\n   each protocol is carried
    over a separate ATM virtual connection.\n"
  title: Abstract
- contents:
  - "Applicability\n   This specification is intended to be used in implementations
    which\n   use ATM networks to carry multiprotocol traffic among hosts, routers\n
    \  and bridges which are ATM end systems.\n"
  title: Applicability
- contents:
  - "1.  Introduction\n   Asynchronous Transfer Mode (ATM) wide area, campus and local
    area\n   networks are used to transport IP datagrams and other connectionless\n
    \  traffic between hosts, routers, bridges and other networking devices.\n   This
    memo describes two methods for carrying connectionless routed\n   and bridged
    Protocol Data Units (PDUs) over an ATM network.  The \"LLC\n   Encapsulation\"
    method allows multiplexing of multiple protocols over\n   a single ATM virtual
    connection (VC).  The protocol type of each PDU\n   is identified by a prefixed
    IEEE 802.2 Logical Link Control (LLC)\n   header. In the \"VC Multiplexing\" method,
    each ATM VC carries PDUs of\n   exactly one protocol type.  When multiple protocols
    need to be\n   transported, there is a separate VC for each.\n   The unit of transport
    in ATM is a 53 octet fixed length PDU called a\n   cell.  A cell consists of a
    5 octet header and a 48 byte payload.\n   Variable length PDUs, including those
    addressed in this memo, must be\n   segmented by the transmitter to fit into the
    48 octet ATM cell\n   payload, and reassembled by the receiver.  This memo specifies
    the\n   use of the ATM Adaptation Layer type 5 (AAL5), as defined in ITU-T\n   Recommendation
    I.363.5 [2] for this purpose. Variable length PDUs are\n   carried in the Payload
    field of the AAL5 Common Part Convergence\n   Sublayer (CPCS) PDU.\n   This memo
    only describes how routed and bridged PDUs are carried\n   directly over the AAL5
    \ CPCS, i.e., when the Service Specific\n   Convergence Sublayer (SSCS) of AAL5
    is absent.  If Frame Relay\n   Service Specific Convergence Sublayer (FR-SSCS),
    as defined in ITU-T\n   Recommendation I.365.1 [3], is used over the CPCS, then
    routed and\n   bridged PDUs are carried using the NLPID multiplexing method\n
    \  described in RFC 2427 [4]. The RFC 2427 encapsulation MUST be used in\n   the
    special case that Frame Relay Network Interworking or transparent\n   mode Service
    Interworking [9] are used, but is NOT RECOMMENDED for\n   other applications.
    \ Appendix A (which is for information only) shows\n   the format of the FR-SSCS-PDU
    as well as how IP and CLNP PDUs are\n   encapsulated over FR-SSCS according to
    RFC 2427.\n   This memo also includes an optional encapsulation for use with\n
    \  Virtual Private Networks that operate over an ATM subnet.\n   If it is desired
    to use the facilities which are designed for the\n   Point-to-Point Protocol (PPP),
    and there exists a point-to-point\n   relationship between peer systems, then
    RFC 2364, rather than this\n   memo, applies.\n"
  title: 1.  Introduction
- contents:
  - "2. Conventions\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,\n
    \  SHOULD NOT, RECOMMENDED, NOT RECOMMENDED, MAY, and OPTIONAL, when\n   they
    appear in this document, are to be interpreted as described in\n   RFC 2119 [10].\n"
  title: 2. Conventions
- contents:
  - "3.  Selection of the Multiplexing Method\n   The decision as to whether to use
    LLC encapsulation or VC-\n   multiplexing depends on implementation and system
    requirements.  In\n   general, LLC encapsulation tends to require fewer VCs in
    a\n   multiprotocol environment.  VC multiplexing tends to reduce\n   fragmentation
    overhead (e.g., an IPV4 datagram containing a TCP\n   control packet with neither
    IP nor TCP options exactly fits into a\n   single cell).\n   When two ATM end
    systems wish to exchange connectionless PDUs across\n   an ATM Permanent Virtual
    Connection (PVC), selection of the\n   multiplexing method is done by configuration.
    \ ATM connection control\n   signalling procedures are used to negotiate the encapsulation
    method\n   when ATM Switched Virtual Connections (SVCs) are to be used.  [5] and\n
    \  [8] specify how this negotiation is done.\n"
  title: 3.  Selection of the Multiplexing Method
- contents:
  - "4.  AAL5 PDU Format\n   For both multiplexing methods, routed and bridged PDUs
    MUST be\n   encapsulated within the Payload field of an AAL5 CPCS-PDU.\n   ITU-T
    Recomendation I.363.5 [2] provides the complete definition of\n   the AAL5 PDU
    format and procedures at the sender and receiver. The\n   AAL5 message mode service,
    in the non-assured mode of operation MUST\n   be used. The corrupted delivery
    option MUST NOT be used.  A\n   reassembly timer MAY be used. The following description
    is provided\n   for information.\n   The format of the AAL5 CPCS-PDU is shown
    below:\n                     AAL5 CPCS-PDU Format\n               +-------------------------------+\n
    \              |             .                 |\n               |             .
    \                |\n               |        CPCS-PDU Payload       |\n               |
    \    up to 2^16 - 1 octets)    |\n               |             .                 |\n
    \              |             .                 |\n               +-------------------------------+\n
    \              |      PAD ( 0 - 47 octets)     |\n               +-------------------------------+
    -------\n               |       CPCS-UU (1 octet )      |\n               +-------------------------------+\n
    \              |         CPI (1 octet )        |\n               +-------------------------------+CPCS-PDU
    Trailer\n               |        Length (2 octets)      |\n               +-------------------------------|\n
    \              |         CRC (4 octets)        |\n               +-------------------------------+
    -------\n   The Payload field contains user information up to 2^16 - 1 octets.\n
    \  The PAD field pads the CPCS-PDU to fit exactly into the ATM cells\n   such
    that the last 48 octet cell payload created by the SAR sublayer\n   will have
    the CPCS-PDU Trailer right justified in the cell.\n   The CPCS-UU (User-to-User
    indication) field is used to transparently\n   transfer CPCS user to user information.
    \ The field is not used by the\n   multiprotocol ATM encapsulation described in
    this memo and MAY be set\n   to any value.\n   The CPI (Common Part Indicator)
    field aligns the CPCS-PDU trailer to\n   64 bits.  This field MUST be coded as
    0x00.\n   The Length field indicates the length, in octets, of the Payload\n   field.
    \ The maximum value for the Length field is 65535 octets.  A\n   Length field
    coded as 0x00 is used for the abort function.\n   The CRC field is used to detect
    bit errors in the CPCS-PDU.  A CRC-32\n   is used.\n"
  title: 4.  AAL5 PDU Format
- contents:
  - "5.  LLC Encapsulation\n   LLC Encapsulation is needed when more than one protocol
    might be\n   carried over the same VC.  In order to allow the receiver to properly\n
    \  process the incoming AAL5 CPCS-PDU, the Payload Field contains\n   information
    necessary to identify the protocol of the routed or\n   bridged PDU.  In LLC Encapsulation,
    this information MUST be encoded\n   in an LLC header placed in front of the carried
    PDU.\n   Although this memo only deals with protocols that operate over LLC\n
    \  Type 1 (unacknowledged connectionless mode) service, the same\n   encapsulation
    principle also applies to protocols operating over LLC\n   Type 2 (connection-mode)
    service.  In the latter case the format and\n   contents of the LLC header would
    be as described in IEEE 802.1 and\n   IEEE 802.2.\n"
  - contents:
    - "5.1.  LLC Encapsulation for Routed Protocols\n   In LLC Encapsulation, the
      protocol type of routed PDUs MUST be\n   identified by prefixing an IEEE 802.2
      LLC header to each PDU.  In\n   some cases, the LLC header MUST be followed
      by an IEEE 802.1a\n   SubNetwork Attachment Point (SNAP) header.  In LLC Type
      1 operation,\n   the LLC header MUST consist of three one octet fields:\n                    +------+------+------+\n
      \                   | DSAP | SSAP | Ctrl |\n                    +------+------+------+\n
      \  In LLC Encapsulation for routed protocols, the Control field MUST be\n   set
      to 0x03, specifying a Unnumbered Information (UI) Command PDU.\n   The LLC header
      value 0xFE-FE-03 MUST be used to identify a routed PDU\n   in the ISO NLPID
      format (see [6] and Appendix B). For NLPID-formatted\n   routed PDUs,  the content
      of the AAL5 CPCS-PDU Payload field MUST be\n   as follows:\n            Payload
      Format for Routed NLPID-formatted PDUs\n                 +-------------------------------+\n
      \                |       LLC  0xFE-FE-03         |\n                 +-------------------------------+\n
      \                |     NLPID (1 octet)           |\n                 +-------------------------------+\n
      \                |             .                 |\n                 |            PDU
      \               |\n                 |     (up to 2^16 - 4 octets)   |\n                 |
      \            .                 |\n                 +-------------------------------+\n
      \  The routed protocol MUST be identified by a one octet NLPID field\n   that
      is part of Protocol Data.  NLPID values are administered by ISO\n   and ITU-T.
      \ They are defined in ISO/IEC TR 9577 [6] and some of the\n   currently defined
      ones are listed in Appendix C.\n   An NLPID value of 0x00 is defined in ISO/IEC
      TR 9577 as the Null\n   Network Layer or Inactive Set.  Since it has no significance
      within\n   the context of this encapsulation scheme, a NLPID value of 0x00 MUST\n
      \  NOT be used.\n   Although there is a NLPID value (0xCC) that indicates IP,
      the NLPID\n   format MUST NOT be used for IP.  Instead, IP datagrams MUST be\n
      \  identified by a SNAP header, as defined below.\n   The presence of am IEEE
      802.1a SNAP header is indicated by the LLC\n   header value 0xAA-AA-03. A SNAP
      header is of the form\n                +------+------+------+------+------+\n
      \               |         OUI        |     PID     |\n                +------+------+------+------+------+\n
      \  The SNAP header consists of a three octet Organizationally Unique\n   Identifier
      (OUI) and a two octet Protocol Identifier (PID).  The OUI\n   is administered
      by IEEE and  identifies an organization which\n   administers the values which
      might be assigned to the PID.  The SNAP\n   header thus uniquely identifies
      a routed or bridged protocol.  The\n   OUI value 0x00-00-00 indicates that the
      PID is an EtherType.\n   The format of the AAL5 CPCS-PDU Payload field for routed
      non-NLPID\n   Formatted PDUs MUST be as follows:\n         Payload Format for
      Routed non-NLPID formatted PDUs\n                +-------------------------------+\n
      \               |       LLC  0xAA-AA-03         |\n                +-------------------------------+\n
      \               |        OUI 0x00-00-00         |\n                +-------------------------------+\n
      \               |     EtherType (2 octets)      |\n                +-------------------------------+\n
      \               |             .                 |\n                |    Non-NLPID
      formatted PDU    |\n                |     (up to 2^16 - 9 octets)   |\n                |
      \            .                 |\n                +-------------------------------+\n
      \  In the particular case of an IPv4 PDU, the Ethertype value is 0x08-\n   00,
      and the payload format MUST be:\n                Payload Format for Routed IPv4
      PDUs\n                +-------------------------------+\n                |       LLC
      \ 0xAA-AA-03         |\n                +-------------------------------+\n
      \               |        OUI 0x00-00-00         |\n                +-------------------------------+\n
      \               |       EtherType 0x08-00       |\n                +-------------------------------+\n
      \               |             .                 |\n                |          IPv4
      PDU             |\n                |     (up to 2^16 - 9 octets)   |\n                |
      \            .                 |\n                +-------------------------------+\n
      \  This format is consistent with that defined in RFC 1042 [7].\n"
    title: 5.1.  LLC Encapsulation for Routed Protocols
  - contents:
    - "5.2.  LLC Encapsulation for Bridged Protocols\n   In LLC Encapsulation, bridged
      PDUs are encapsulated by identifying\n   the type of the bridged media in the
      SNAP header.  The presence of\n   the SNAP header MUST be indicated by the LLC
      header value 0xAA-AA-03.\n   The OUI value in the SNAP header MUST be the 802.1
      organization code\n   0x00-80-C2. The type of the bridged media MUST be specified
      by the\n   two octet PID. The PID MUST also indicate whether the original Frame\n
      \  Check Sequence (FCS) is preserved within the bridged PDU. Appendix B\n   provides
      a list of media type (PID) values that can be used in ATM\n   encapsulation.\n
      \  The AAL5 CPCS-PDU Payload field carrying a bridged PDU MUST have one\n   of
      the following formats.  The necessary number of padding octets\n   MUST be added
      after the PID field in order to align the\n   Ethernet/802.3 LLC Data field,
      802.4 Data Unit field, 802.5 Info\n   field, FDDI Info field or 802.6 Info field
      (respectively) of the\n   bridged PDU to begin at a four octet boundary.  The
      bit ordering of\n   the MAC address MUST be the same as it would be on the LAN
      or MAN\n   (e.g., in canoncial form for bridged Ethernet/IEEE 802.3 PDUs, but
      in\n   802.5/FDDI format for bridged 802.5 PDUs).\n          Payload Format
      for Bridged Ethernet/802.3 PDUs\n                +-------------------------------+\n
      \               |       LLC  0xAA-AA-03         |\n                +-------------------------------+\n
      \               |        OUI 0x00-80-C2         |\n                +-------------------------------+\n
      \               |    PID 0x00-01 or 0x00-07     |\n                +-------------------------------+\n
      \               |         PAD 0x00-00           |\n                +-------------------------------+\n
      \               |    MAC destination address    |\n                +-------------------------------+\n
      \               |                               |\n                |   (remainder
      of MAC frame)    |\n                |                               |\n                +-------------------------------+\n
      \               |  LAN FCS (if PID is 0x00-01)  |\n                +-------------------------------+\n
      \  The Ethernet/802.3 physical layer requires padding of frames to a\n   minimum
      size. A bridge that uses uses the Bridged Ethernet/802.3\n   encapsulation format
      with the preserved LAN FCS MUST include padding.\n   A bridge that uses the
      Bridged Ethernet/802.3 encapsulation format\n   without the preserved LAN FCS
      MAY either include padding, or omit it.\n   When a bridge receives a frame in
      this format without the LAN FCS, it\n   MUST be able to insert the necessary
      padding (if none is already\n   present) before forwarding to an Ethernet/802.3
      subnetwork.\n                Payload Format for Bridged 802.4 PDUs\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-80-C2         |\n                  +-------------------------------+\n
      \                 |    PID 0x00-02 or 0x00-08     |\n                  +-------------------------------+\n
      \                 |        PAD 0x00-00-00         |\n                  +-------------------------------+\n
      \                 |    Frame Control (1 octet)    |\n                  +-------------------------------+\n
      \                 |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 |  LAN FCS (if PID is 0x00-02)  |\n                  +-------------------------------+\n
      \               Payload Format for Bridged 802.5 PDUs\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-80-C2         |\n                  +-------------------------------+\n
      \                 |    PID 0x00-03 or 0x00-09     |\n                  +-------------------------------+\n
      \                 |        PAD 0x00-00-XX         |\n                  +-------------------------------+\n
      \                 |    Frame Control (1 octet)    |\n                  +-------------------------------+\n
      \                 |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 |  LAN FCS (if PID is 0x00-03)  |\n                  +-------------------------------+\n
      \  Since the 802.5 Access Control (AC) field has no significance outside\n   the
      local 802.5 subnetwork, it is treated by this encapsulation as\n   the last
      octet of the three octet PAD field.   It MAY be set to any\n   value by the
      sending bridge and MUST be ignored by the receiving\n   bridge.\n                 Payload
      Format for Bridged FDDI PDUs\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-80-C2         |\n                  +-------------------------------+\n
      \                 |    PID 0x00-04 or 0x00-0A     |\n                  +-------------------------------+\n
      \                 |        PAD 0x00-00-00         |\n                  +-------------------------------+\n
      \                 |    Frame Control (1 octet)    |\n                  +-------------------------------+\n
      \                 |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 |  LAN FCS (if PID is 0x00-04)  |\n                  +-------------------------------+\n
      \               Payload Format for Bridged 802.6 PDUs\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-80-C2         |\n                  +-------------------------------+\n
      \                 |         PID 0x00-0B           |\n                  +---------------+---------------+
      ------\n                  |   Reserved    |     BEtag     |  Common\n                  +---------------+---------------+
      \ PDU\n                  |            BAsize             |  Header\n                  +-------------------------------+
      -------\n                  |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 |                               |\n                  |      Common
      PDU Trailer       |\n                  |                               |\n                  +-------------------------------+\n
      \  In bridged 802.6 PDUs, the presence of a CRC-32 is indicated by the\n   CIB
      bit in the header of the MAC frame.  Therefore, the same PID\n   value is used
      regardless of the presence or absence of the CRC-32 in\n   the PDU.\n   The
      Common Protocol Data Unit (PDU) Header and Trailer are conveyed\n   to allow
      pipelining at the egress bridge to an 802.6 subnetwork.\n   Specifically, the
      Common PDU Header contains the BAsize field, which\n   contains the length of
      the PDU.  If this field is not available to\n   the egress 802.6 bridge, then
      that bridge cannot begin to transmit\n   the segmented PDU until it has received
      the entire PDU, calculated\n   the length, and inserted the length into the
      BAsize field.  If the\n   field is available, the egress 802.6 bridge can extract
      the length\n   from the BAsize field of the Common PDU Header, insert it into
      the\n   corresponding field of the first segment, and immediately transmit\n
      \  the segment onto the 802.6 subnetwork.  Thus, the bridge can begin\n   transmitting
      the 802.6 PDU before it has received the complete PDU.\n   Note that the Common
      PDU Header and Trailer of the encapsulated frame\n   should not be simply copied
      to the outgoing 802.6 subnetwork because\n   the encapsulated BEtag value may
      conflict with the previous BEtag\n   value transmitted by that bridge.\n   An
      ingress 802.6 bridge can abort an AAL5 CPCS-PDU by setting its\n   Length field
      to zero.  If the egress bridge has already begun\n   transmitting segments of
      the PDU to an 802.6 subnetwork and then\n   notices that the AAL5 CPCS-PDU has
      been aborted, it may immediately\n   generate an EOM cell that causes the 802.6
      PDU to be rejected at the\n   receiving bridge.  Such an EOM cell could, for
      example, contain an\n   invalid value in the Length field of the Common PDU
      Trailer.\n                      Payload Format for BPDUs\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-80-C2         |\n                  +-------------------------------+\n
      \                 |         PID 0x00-0E           |\n                  +-------------------------------+\n
      \                 |                               |\n                  |      BPDU
      as defined by       |\n                  |     802.1(d) or 802.1(g)      |\n
      \                 |                               |\n                  +-------------------------------+\n"
    title: 5.2.  LLC Encapsulation for Bridged Protocols
  title: 5.  LLC Encapsulation
- contents:
  - "6.  VC Multiplexing\n   VC Multiplexing creates a binding between an ATM VC and
    the type of\n   the network protocol carried on that VC.  Thus, there is no need
    for\n   protocol identification information to be carried in the payload of\n
    \  each AAL5 CPCS-PDU.  This reduces payload overhead and can reduce\n   per-packet
    processing. VC multiplexing can improve efficiency by\n   reducing the number
    of cells needed to carry PDUs of certain lengths.\n   For ATM PVCs, the type of
    the protocol to be carried over each PVC\n   MUST be determined by configuration.
    \ For ATM SVCs, the negotiations\n   specified in RFC 1755 [5] MUST be used.\n"
  - contents:
    - "6.1.  VC Multiplexing of Routed Protocols\n   PDUs of routed protocols MUST
      be carried as the only content of the\n   Payload of the AAL5 CPCS-PDU.  The
      format of the AAL5 CPCS-PDU\n   Payload field thus becomes:\n                    Payload
      Format for Routed PDUs\n                  +-------------------------------+\n
      \                 |             .                 |\n                  |         Carried
      PDU           |\n                  |    (up to 2^16 - 1 octets)    |\n                  |
      \            .                 |\n                  |             .                 |\n
      \                 +-------------------------------+\n"
    title: 6.1.  VC Multiplexing of Routed Protocols
  - contents:
    - "6.2.  VC Multiplexing of Bridged Protocols\n   PDUs of bridged protocols MUST
      be carried in the Payload of the AAL5\n   CPCS-PDU exactly as described in section
      5.2, except that only the\n   fields after the PID field MUST be included.  The
      AAL5 CPCS-PDU\n   Payload field carrying a bridged PDU MUST, therefore, have
      one of the\n   following formats.\n             Payload Format for Bridged Ethernet/802.3
      PDUs\n                  +-------------------------------+\n                  |
      \        PAD 0x00-00           |\n                  +-------------------------------+\n
      \                 |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 | LAN FCS (VC dependent option) |\n                  +-------------------------------+\n
      \            Payload Format for Bridged 802.4/802.5/FDDI PDUs\n                  +-------------------------------+\n
      \                 | PAD 0x00-00-00 or 0x00-00-XX  |\n                  +-------------------------------+\n
      \                 |    Frame Control (1 octet)    |\n                  +-------------------------------+\n
      \                 |    MAC destination address    |\n                  +-------------------------------+\n
      \                 |                               |\n                  |   (remainder
      of MAC frame)    |\n                  |                               |\n                  +-------------------------------+\n
      \                 | LAN FCS (VC dependent option) |\n                  +-------------------------------+\n
      \  Note that the 802.5 Access Control (AC) field has no significance\n   outside
      the local 802.5 subnetwork.  It can thus be regarded as the\n   last octet of
      the three octet PAD field, which in case of 802.5 can\n   be set to any value
      (XX).\n                  Payload Format for Bridged 802.6 PDUs\n                 +---------------+---------------+
      -------\n                 |   Reserved    |     BEtag     |  Common\n                 +---------------+---------------+
      \ PDU\n                 |            BAsize             |  Header\n                 +-------------------------------+
      -------\n                 |    MAC destination address    |\n                 +-------------------------------+\n
      \                |                               |\n                 |   (remainder
      of MAC frame)    |\n                 |                               |\n                 +-------------------------------+\n
      \                |                               |\n                 |     Common
      PDU Trailer        |\n                 |                               |\n                 +-------------------------------+\n
      \                    Payload Format for BPDUs\n                 +-------------------------------+\n
      \                |                               |\n                 |      BPDU
      as defined by       |\n                 |     802.1(d) or 802.1(g)      |\n
      \                |                               |\n                 +-------------------------------+\n
      \  In case of Ethernet, 802.3, 802.4, 802.5, and FDDI PDUs the presense\n   or
      absence of the trailing LAN FCS shall be identified implicitly by\n   the VC,
      since the PID field is not included.  PDUs with the LAN FCS\n   and PDUs without
      the LAN FCS are thus considered to belong to\n   different protocols even if
      the bridged media type would be the same.\n"
    title: 6.2.  VC Multiplexing of Bridged Protocols
  title: 6.  VC Multiplexing
- contents:
  - "7.  Bridging in an ATM Network\n   A bridge with an ATM interface that serves
    as a link to one or more\n   other bridge MUST be able to flood, forward, and
    filter bridged PDUs.\n   Flooding is performed by sending the PDU to all possible
    appropriate\n   destinations.  In the ATM environment this means sending the PDU\n
    \  through each relevant VC.  This may be accomplished by explicitly\n   copying
    it to each VC or by using a point-to-multipoint VC.\n   To forward a PDU, a bridge
    MUST be able to associate a destination\n   MAC address with a VC.  It is unreasonable
    and perhaps impossible to\n   require bridges to statically configure an association
    of every\n   possible destination MAC address with a VC.  Therefore, ATM bridges\n
    \  must provide enough information to allow an ATM interface to\n   dynamically
    learn about foreign destinations beyond the set of ATM\n   stations.\n   To accomplish
    dynamic learning, a bridged PDU MUST conform to the\n   encapsulation described
    in section 5.  In this way, the receiving ATM\n   interface will know to look
    into the bridged PDU and learn the\n   association between foreign destination
    and an ATM station.\n"
  title: 7.  Bridging in an ATM Network
- contents:
  - "8.  Virtual Private Network (VPN) identification\n   The encapsulation defined
    in this section applies only to  Virtual\n   Private Networks (VPNs) that operate
    over an ATM subnet.\n   A mechanism for globally unique identification of Virtual
    Private\n   multiprotocol networks is defined in [11].  The 7-octet VPN-Id\n   consists
    of a 3-octet VPN-related OUI (IEEE 802-1990 Organizationally\n   Unique Identifier),
    followed by a 4-octet VPN index which is\n   allocated by the owner of the VPN-related
    OUI.  Typically, the VPN-\n   related OUI value is assigned to a VPN service provider,
    which then\n   allocates VPN index values for its customers.\n"
  - contents:
    - "8.1 VPN Encapsulation Header\n   The format of the VPN encapsulation header
      is as follows:\n                       VPN Encapsulation Header\n                  +-------------------------------+\n
      \                 |       LLC  0xAA-AA-03         |\n                  +-------------------------------+\n
      \                 |        OUI 0x00-00-5E         |\n                  +-------------------------------+\n
      \                 |        PID 0x00-08            |\n                  +-------------------------------+\n
      \                 |          PAD 0x00             |\n                  +-------------------------------+\n
      \                 |   VPN related OUI (3 octets)  |\n                  +-------------------------------+\n
      \                 |    VPN Index (4 octets)       |\n                  +-------------------------------+\n
      \                 |                               |\n                  |     (remainder
      of PDU)        |\n                  |                               |\n                  +-------------------------------+\n
      \  When the encapsulation header is used, the remainder of the PDU MUST\n   be
      structured according to the appropiate format described in section\n   5 or
      6 (i.e., the VPN encapsulation header is prepended to the PDU\n   within an
      AAL5 CPCS SDU).\n"
    title: 8.1 VPN Encapsulation Header
  - contents:
    - "8.2 LLC-encapsulated routed or bridged PDUs within a VPN\n   When a LLC-encapsulated
      routed or bridged PDU is sent within a VPN\n   using ATM over AAL5, a VPN encapsulation
      header MUST be prepended to\n   the appropriate routed or bridged PDU format
      defined in sections 5.1\n   and 5.2, respectively.\n"
    title: 8.2 LLC-encapsulated routed or bridged PDUs within a VPN
  - contents:
    - "8.3 VC multiplexing of routed or bridged PDUs within a VPN\n   When a routed
      or bridged PDU is sent within a VPN using VC\n   multiplexing, the VPN identifier
      MAY either be specified a priori,\n   using ATM connection control signalling
      or adminstrative assignment\n   to an ATM interface, or it MAY be indicated
      using an encapsulation\n   header.\n   If the VPN is identified using ATM connection
      control signalling, all\n   PDUs carried by the ATM VC are associated with the
      same VPN.  In this\n   case, the payload formats of routed and bridged PDUs
      MUST be as\n   defined in sections 6.1 and 6.2, respectively.  If a PDU is received\n
      \  containing a VPN encapsulation header when the VPN has been\n   identified
      using ATM signalling, the receiver MAY drop it and/or take\n   other actions
      which are implementation specific.  Specification of\n   the mechanism in ATM
      connection control signalling for carrying VPN\n   identifiers is outside the
      scope of this Memo.\n   If a VPN identifier is administratively assigned to
      an ATM interface,\n   then all PDUs carried by any ATM VCs within that interface
      are\n   associated with that VPN.  In this case, the payload formats of\n   routed
      and bridged PDUs MUST be as defined in sections 6.1 and 6.2,\n   respectively.
      \ If a PDU is received containing a VPN encapsulation\n   header when the VPN
      identifier has been administratively assigned,\n   the receiver MAY drop it
      and/or take other actions which are\n   implementation specific.  Specification
      of mechanisms (such as MIBs)\n   for assigning VPN identifiers to ATM interfaces
      is outside the scope\n   of this memo.\n   If the VPN identifier is to be indicated
      using an encapsulation\n   header, then a VPN encapsulation header MUST be prepended
      to the\n   appropriate routed or bridged PDU format defined in sections 6.1
      and\n   6.2, respectively.\n"
    title: 8.3 VC multiplexing of routed or bridged PDUs within a VPN
  title: 8.  Virtual Private Network (VPN) identification
- contents:
  - "9. Security Considerations\n   This memo defines mechanisms for multiprotocol
    encapsulation over\n   ATM. There is an element of trust in any encapsulation
    protocol:  a\n   receiver must trust that the sender has correctly identified
    the\n   protocol being encapsulated.  There is no way to ascertain that the\n
    \  sender did use the proper protocol identification (nor would this be\n   desirable
    functionality).  The encapsulation mechanisms described in\n   this memo are believed
    not to have any other properties that might be\n   exploited by an attacker. However,
    architectures and protocols\n   operating above the encapsulation layer may be
    subject to a variety\n   of attacks.  In particular, the bridging architecture
    discussed in\n   section 7 has the same vulnerabilities as other bridging\n   architectures.\n
    \  System security may be affected by the properties of the underlying\n   ATM
    network.  The ATM Forum has published a security framework [12]\n   and a security
    specification [13] which may be relevant.\n"
  - "Acknowledgements\n   This memo replaces RFC 1483, which was developed by the
    IP over ATM\n   working group, and edited by Juha Heinanen (then at Telecom Finland,\n
    \  now at Telia).  The update was developed in the IP-over-NBMA (ION)\n   working
    group, and Dan Grossman (Motorola) was editor and also\n   contributed to the
    work on RFC 1483.\n   This material evolved from RFCs [1] and [4] from which much
    of the\n   material has been adopted.  Thanks to their authors Terry Bradley,\n
    \  Caralyn  Brown, Andy Malis, Dave Piscitello, and C. Lawrence.  Other\n   key
    contributors to the work included Brian Carpenter (CERN), Rao\n   Cherukuri (IBM),
    Joel Halpern (then at Network Systems), Bob Hinden\n   (Sun Microsystems, presently
    at Nokia), and Gary Kessler (MAN\n   Technology).\n   The material concerning
    VPNs was developed by Barbara Fox (Lucent)\n   and Bernhard Petri (Siemens).\n"
  - "References\n   [1]  Piscitello, D. and C. Lawrence, \"The Transmission of IP\n
    \       Datagrams over the SMDS Service\", RFC 1209, March 1991.\n   [2]  ITU-T
    Recommendation I.363.5, \"B-ISDN ATM Adaptation Layer (AAL)\n        Type 5 Specification\",
    August 1996.\n   [3]  ITU-T Recommendation I.365.1, \"Frame Relaying Service Specific\n
    \       Convergence Sublayer (SSCS), November 1993.\n   [4]  Brown, C. and A.
    Malis, \"Multiprotocol Interconnect over Frame\n        Relay\", RFC 2427, September
    1998.\n   [5]  Perez M., Liaw, F., Mankin, E., Grossman, D. and A. Malis, \"ATM\n
    \       Signalling Support for IP over ATM\", RFC 1755, February 1995.\n   [6]
    \ Information technology - Telecommunications and Information\n        Exchange
    Between Systems, \"Protocol Identification in the\n        Network Layer\".  ISO/IEC
    TR 9577, October 1990.\n   [7]  Postel, J. and J. Reynolds, \"A Standard for the
    Transmission of\n        IP Datagrams over IEEE 802 Networks\", STD 43, RFC 1042,
    February\n        1988.\n   [8]  Maher, M., \"IP over ATM Signalling - SIG 4.0
    Update\", RFC 2331,\n        April 1998.\n   [9]  ITU-T Recommendation I.555,
    \"Frame Relay Bearer Service\n        Interworking\", September 1997.\n   [10]
    Bradner, S. \"Key words for use in RFCs to Indicate Requirement\n        Levels\",
    BCP 14, RFC 2119, March 1997.\n   [11] Fox, B. and B. Gleeson, \"Virtual Private
    Networks Identifier\",\n        RFC 2685, September 1999.\n   [12] The ATM Forum,
    \"ATM Security Framework Version 1.0\", af-sec-\n        0096.000, February 1998.\n
    \  [13] The ATM Forum, \"ATM Security Specification v1.0\", af-sec-\n        0100.001,
    February 1999.\n"
  title: 9. Security Considerations
- contents:
  - "Appendix A.  Multiprotocol Encapsulation over FR-SSCS\n   ITU-T Recommendation
    I.365.1 defines a Frame Relaying Specific\n   Convergence Sublayer (FR- SSCS)
    to be used on the top of the Common\n   Part Convergence Sublayer CPCS) of the
    AAL type 5 for Frame Relay/ATM\n   interworking.  The service offered by FR-SSCS
    corresponds to the Core\n   service for Frame Relaying as described in I.233.\n
    \  An FR-SSCS-PDU consists of Q.922 Address field followed by Q.922\n   Information
    field.  The Q.922 flags and the FCS are omitted, since\n   the corresponding functions
    are provided by the AAL.  The figure\n   below shows an FR-SSCS-PDU embedded in
    the Payload of an AAL5 CPCS-\n   PDU.\n                FR-SSCS-PDU in Payload
    of AAL5 CPCS-PDU\n               +-------------------------------+ -------\n               |
    \     Q.922 Address Field      | FR-SSCS-PDU Header\n               |         (2-4
    octets)          |\n               +-------------------------------+ -------\n
    \              |             .                 |\n               |             .
    \                |\n               |    Q.922 Information field    | FR-SSCS-PDU
    Payload\n               |             .                 |\n               |             .
    \                |\n               +-------------------------------+ -------\n
    \              |      AAL5 CPCS-PDU Trailer    |\n               +-------------------------------+\n
    \  Routed and bridged PDUs are encapsulated inside the FR-SSCS-PDU as\n   defined
    in RFC 2427.  The Q.922 Information field starts with a Q.922\n   Control field
    followed by an optional Pad octet that is used to align\n   the remainder of the
    frame to a convenient boundary for the sender.\n   The protocol of the carried
    PDU is then identified by prefixing the\n   PDU by an ISO/IEC TR 9577 Network
    Layer Protocol ID (NLPID).\n   In the particular case of an IP PDU, the NLPID
    is 0xCC and the FR-\n   SSCS-PDU has the following format:\n                FR-SSCS-PDU
    Format for Routed IP PDUs\n               +-------------------------------+\n
    \              |       Q.922 Addr Field        |\n               |       (2 or
    4 octets)         |\n               +-------------------------------+\n               |
    \    0x03 (Q.922 Control)      |\n               +-------------------------------+\n
    \              |          NLPID  0xCC          |\n               +-------------------------------+\n
    \              |             .                 |\n               |           IP
    PDU              |\n               |    (up to 2^16 - 5 octets)    |\n               |
    \            .                 |\n               +-------------------------------+\n
    \  Note that according to RFC 2427, the Q.922 Address field MUST be\n   either
    2 or 4 octets, i.e., a 3 octet Address field MUST NOT be used.\n   In the particular
    case of a CLNP PDU, the NLPID is 0x81 and the FR-\n   SSCS-PDU has the following
    format:\n            FR-SSCS-PDU Format for Routed CLNP PDUs\n               +-------------------------------+\n
    \              |       Q.922 Addr Field        |\n               |       (2 or
    4 octets)         |\n               +-------------------------------+\n               |
    \    0x03 (Q.922 Control)      |\n               +-------------------------------+\n
    \              |         NLPID  0x81           |\n               +-------------------------------+\n
    \              |              .                |\n               |       Rest
    of CLNP PDU        |\n               |    (up to 2^16 - 5 octets)    |\n               |
    \             .                |\n               +-------------------------------+\n
    \  Note that in case of ISO protocols the NLPID field forms the first\n   octet
    of the PDU itself and MUST not be repeated.\n   The above encapsulation applies
    only to those routed protocols that\n   have a unique NLPID assigned.  For other
    routed protocols (and for\n   bridged protocols), it is necessary to provide another
    mechanism for\n   easy protocol identification.  This can be achieved by using
    an NLPID\n   value 0x80 to indicate that an IEEE 802.1a SubNetwork Attachment\n
    \  Point (SNAP) header follows.\n   See RFC 2427 for more details related to multiprotocol
    encapsulation\n   over FRCS.\n"
  title: Appendix A.  Multiprotocol Encapsulation over FR-SSCS
- contents:
  - "Appendix B.  List of Locally Assigned values of OUI 00-80-C2\n       with preserved
    FCS   w/o preserved FCS    Media\n      ------------------   -----------------
    \   --------------\n       0x00-01              0x00-07              802.3/Ethernet\n
    \      0x00-02              0x00-08              802.4\n       0x00-03              0x00-09
    \             802.5\n       0x00-04              0x00-0A              FDDI\n       0x00-05
    \             0x00-0B              802.6\n                            0x00-0D
    \             Fragments\n                            0x00-0E              BPDUs\n"
  title: Appendix B.  List of Locally Assigned values of OUI 00-80-C2
- contents:
  - "Appendix C.  Partial List of NLPIDs\n       0x00    Null Network Layer or Inactive
    Set (not used with ATM)\n       0x80    SNAP\n       0x81    ISO CLNP\n       0x82
    \   ISO ESIS\n       0x83    ISO ISIS\n       0xCC    Internet IP\n"
  title: Appendix C.  Partial List of NLPIDs
- contents:
  - "Appendix D. Applications of multiprotocol encapsulation\n   Mutiprotocol encapsulation
    is necessary, but generally not\n   sufficient, for routing and bridging over
    the ATM networks.   Since\n   the publication of RFC 1483 (the predecessor of
    this memo), several\n   system specifications were developed by the IETF and the
    ATM Forum to\n   address various aspects of, or scenarios for, bridged or routed\n
    \  protocols.  This appendix summarizes these applications.\n   1) Point-to-point
    connection between routers and bridges --\n      multiprotocol encapsulation over
    ATM PVCs has been used to provide\n      a simple point-to-point link between
    bridges and routers across an\n      ATM network.  Some amount of manual configuration
    (e.g., in lieu\n      of INARP) was necessary in these scenarios.\n   2) Classical
    IP over ATM -- RFC 2225 (formerly RFC 1577) provides an\n      environment where
    the ATM network serves as a logical IP subnet\n      (LIS). ATM PVCs are supported,
    with address resolution provided by\n      INARP.  For ATM SVCs, a new form of
    ARP, ATMARP, operates over the\n      ATM network between a host (or router) and
    an ATMARP server.\n      Where servers are replicated to provide higher availability
    or\n      performance, a Server Synchronization Cache Protocol (SCSP)\n      defined
    in RFC 2335 is used. Classical IP over ATM defaults to the\n      LLC/SNAP encapsulation.\n
    \  3) LAN Emulation -- The ATM Forum LAN Emulation specification\n      provides
    an environment where the ATM network is enhanced by LAN\n      Emulation Server(s)
    to behave as a bridged LAN.  Stations obtain\n      configuration information
    from, and register with, a LAN Emulation\n      Configuration Server;  they resolve
    MAC addresses to ATM addresses\n      through the services of a LAN Emulation
    Server;  they can send\n      broadcast and multicast frames, and also send unicast
    frames for\n      which they have no direct VC to a Broadcast and Unicast Server.\n
    \     LANE uses the VC multiplexing encapsulation foramts for Bridged\n      Etherent/802.3
    (without LAN FCS) or Bridged 802.5 (without LAN\n      FCS) for the Data Direct,
    LE Multicast Send and Multicast Forward\n      VCCS.  However, the initial PAD
    field described in this memo is\n      used as an LE header, and might not be
    set to all '0'.\n   4) Next Hop Resolution Protocol (NHRP) -- In some cases, the\n
    \     constraint that Classical IP over ATM serve a single LIS limits\n      performance.
    \ NHRP, as defined in RFC 2332, extends Classical to\n      allow 'shortcuts'
    over a an ATM network that supports several\n      LISs.\n   5) Multiprotocol
    over ATM (MPOA) -- The ATM Forum Multiprotocol over\n      ATM Specification integrates
    LANE and NHRP to provide a generic\n      bridging/routing environment.\n   6)
    IP Multicast -- RFC 2022 extends Classical IP to support IP\n      multicast.
    \ A multicast address resolution server (MARS) is used\n      possibly in conjunction
    with a multicast server to provide IP\n      multicast behavior over ATM point-to-multipoint
    and/or point to\n      point virtual connections.\n   7) PPP over ATM -- RFC 2364
    extends multiprotocol over ATM to the\n      case where the encapsulated protocol
    is the Point-to-Point\n      protocols.  Both the VC based multiplexing and LLC/SNAP\n
    \     encapsulations are used.  This approach is used when the ATM\n      network
    is used as a point-to-point link and PPP functions are\n      required.\n"
  title: Appendix D. Applications of multiprotocol encapsulation
- contents:
  - "Appendix E Differences from RFC 1483\n   This memo replaces RFC 1483.  It was
    intended to remove anachronisms,\n   provide clarifications of ambiguities discovered
    by implementors or\n   created by changes to the base standards, and advance this
    work\n   through the IETF standards track process.  A number of editorial\n   improvements
    were made, the RFC 2119 [10] conventions applied, and\n   the current RFC boilerplate
    added.  The following substantive changes\n   were made.  None of them is believed
    to obsolete implementations of\n   RFC 1483:\n   -- usage of NLPID encapsulation
    is clarified in terms of the RFC 2119\n      conventions\n   -- a pointer to RFC
    2364 is added to cover the case of PPP over ATM\n   -- RFC 1755 and RFC 2331 are
    referenced to describe how\n      encapsulations are negotiated, rather than a
    long-obsolete CCITT\n      (now ITU-T) working document and references to work
    then in\n      progress\n   -- usage of AAL5 is now a reference to ITU-T I.363.5.
    \ Options\n      created in AAL5 since the publication of RFC 1483 are selected.\n
    \  -- formatting of routed NLPID-formatted PDUs (which are called\n      \"routed
    ISO PDUs\"\n       in RFC 1483) is clarified\n   -- clarification is provided
    concerning the use of padding between\n      the PID and MAC destination address
    in bridged PDUs and the bit\n      ordering of the MAC address.\n   -- clarification
    is provided concerning the use of padding of\n      Ethernet/802.3 frames\n   --
    a new encapuslation for VPNs is added\n   -- substantive security considerations
    were added\n   -- a new appendix D provides a summary of applications of\n      multiprotocol
    over ATM\n"
  title: Appendix E Differences from RFC 1483
- contents:
  - "Authors' Addresses\n   Dan Grossman\n   Motorola, Inc.\n   20 Cabot Blvd.\n   Mansfield,
    MA 02048\n   EMail: dan@dma.isg.mot.com\n   Juha Heinanen\n   Telia Finland\n
    \  Myyrmaentie 2\n   01600 Vantaa, Finland\n   EMail: jh@telia.fi\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
