- title: __initial_text__
  contents:
  - " Enterprise Multihoming Using Provider-Assigned IPv6 Addresses without\n    \
    \     Network Prefix Translation: Requirements and Solutions\n"
- title: Abstract
  contents:
  - "Abstract\n   Connecting an enterprise site to multiple ISPs over IPv6 using\n\
    \   provider-assigned addresses is difficult without the use of some form\n  \
    \ of Network Address Translation (NAT).  Much has been written on this\n   topic\
    \ over the last 10 to 15 years, but it still remains a problem\n   without a clearly\
    \ defined or widely implemented solution.  Any\n   multihoming solution without\
    \ NAT requires hosts at the site to have\n   addresses from each ISP and to select\
    \ the egress ISP by selecting a\n   source address for outgoing packets.  It also\
    \ requires routers at the\n   site to take into account those source addresses\
    \ when forwarding\n   packets out towards the ISPs.\n   This document examines\
    \ currently available mechanisms for providing a\n   solution to this problem\
    \ for a broad range of enterprise topologies.\n   It covers the behavior of routers\
    \ to forward traffic by taking into\n   account source address, and it covers\
    \ the behavior of hosts to select\n   appropriate default source addresses.  It\
    \ also covers any possible\n   role that routers might play in providing information\
    \ to hosts to\n   help them select appropriate source addresses.  In the process\
    \ of\n   exploring potential solutions, this document also makes explicit\n  \
    \ requirements for how the solution would be expected to behave from\n   the perspective\
    \ of an enterprise site network administrator.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8678.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Requirements Language\n   3. \
    \ Terminology\n   4.  Enterprise Multihoming Use Cases\n     4.1.  Simple ISP\
    \ Connectivity with Connected SERs\n     4.2.  Simple ISP Connectivity Where SERs\
    \ Are Not Directly\n           Connected\n     4.3.  Enterprise Network Operator\
    \ Expectations\n     4.4.  More Complex ISP Connectivity\n     4.5.  ISPs and\
    \ Provider-Assigned Prefixes\n     4.6.  Simplified Topologies\n   5.  Generating\
    \ Source-Prefix-Scoped Forwarding Tables\n   6.  Mechanisms for Hosts To Choose\
    \ Good Default Source Addresses in\n           a Multihomed Site\n     6.1.  Default\
    \ Source Address Selection Algorithm on Hosts\n     6.2.  Selecting Default Source\
    \ Address When Both Uplinks Are\n           Working\n       6.2.1.  Distributing\
    \ Default Address Selection Policy\n               Table with DHCPv6\n       6.2.2.\
    \  Controlling Default Source Address Selection with\n               Router Advertisements\n\
    \       6.2.3.  Controlling Default Source Address Selection with\n          \
    \     ICMPv6\n       6.2.4.  Summary of Methods for Controlling Default Source\n\
    \               Address Selection to Implement Routing Policy\n     6.3.  Selecting\
    \ Default Source Address When One Uplink Has Failed\n       6.3.1.  Controlling\
    \ Default Source Address Selection with\n               DHCPv6\n       6.3.2.\
    \  Controlling Default Source Address Selection with\n               Router Advertisements\n\
    \       6.3.3.  Controlling Default Source Address Selection with\n          \
    \     ICMPv6\n       6.3.4.  Summary of Methods for Controlling Default Source\n\
    \               Address Selection on the Failure of an Uplink\n     6.4.  Selecting\
    \ Default Source Address upon Failed Uplink\n           Recovery\n       6.4.1.\
    \  Controlling Default Source Address Selection with\n               DHCPv6\n\
    \       6.4.2.  Controlling Default Source Address Selection with\n          \
    \     Router Advertisements\n       6.4.3.  Controlling Default Source Address\
    \ Selection with ICMP\n       6.4.4.  Summary of Methods for Controlling Default\
    \ Source\n               Address Selection upon Failed Uplink Recovery\n     6.5.\
    \  Selecting Default Source Address When All Uplinks Have\n           Failed\n\
    \       6.5.1.  Controlling Default Source Address Selection with\n          \
    \     DHCPv6\n       6.5.2.  Controlling Default Source Address Selection with\n\
    \               Router Advertisements\n       6.5.3.  Controlling Default Source\
    \ Address Selection with\n               ICMPv6\n       6.5.4.  Summary of Methods\
    \ for Controlling Default Source\n               Address Selection When All Uplinks\
    \ Failed\n     6.6.  Summary of Methods for Controlling Default Source Address\n\
    \           Selection\n     6.7.  Solution Limitations\n       6.7.1.  Connections\
    \ Preservation\n     6.8.  Other Configuration Parameters\n       6.8.1.  DNS\
    \ Configuration\n   7.  Deployment Considerations\n     7.1.  Deploying SADR Domain\n\
    \     7.2.  Hosts-Related Considerations\n   8.  Other Solutions\n     8.1.  Shim6\n\
    \     8.2.  IPv6-to-IPv6 Network Prefix Translation\n     8.3.  Multipath Transport\n\
    \   9.  IANA Considerations\n   10. Security Considerations\n   11. References\n\
    \     11.1.  Normative References\n     11.2.  Informative References\n   Acknowledgements\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Site multihoming, the connection of a subscriber network\
    \ to multiple\n   upstream networks using redundant uplinks, is a common enterprise\n\
    \   architecture for improving the reliability of its Internet\n   connectivity.\
    \  If the site uses provider-independent (PI) addresses,\n   all traffic originating\
    \ from the enterprise can use source addresses\n   from the PI address space.\
    \  Site multihoming with PI addresses is\n   commonly used with both IPv4 and\
    \ IPv6, and does not present any new\n   technical challenges.\n   It may be desirable\
    \ for an enterprise site to connect to multiple\n   ISPs using provider-assigned\
    \ (PA) addresses instead of PI addresses.\n   Multihoming with provider-assigned\
    \ addresses is typically less\n   expensive for the enterprise relative to using\
    \ provider-independent\n   addresses as it does not require obtaining and maintaining\
    \ PI address\n   space nor does it require running BGP between the enterprise\
    \ and the\n   ISPs (for small/medium networks, running BGP might be not only\n\
    \   undesirable but also impossible, especially if residential-type ISP\n   connections\
    \ are used).  PA multihoming is also a practice that should\n   be facilitated\
    \ and encouraged because it does not add to the size of\n   the Internet routing\
    \ table, whereas PI multihoming does.  Note that\n   PA is also used to mean \"\
    provider-aggregatable\".  In this document,\n   we assume that provider-assigned\
    \ addresses are always provider-\n   aggregatable.\n   With PA multihoming, for\
    \ each ISP connection, the site is assigned a\n   prefix from within an address\
    \ block allocated to that ISP by its\n   National or Regional Internet Registry.\
    \  In the simple case of two\n   ISPs (ISP-A and ISP-B), the site will have two\
    \ different prefixes\n   assigned to it (prefix-A and prefix-B).  This arrangement\
    \ is\n   problematic.  First, packets with the \"wrong\" source address may be\n\
    \   dropped by one of the ISPs.  In order to limit denial-of-service\n   attacks\
    \ using spoofed source addresses, [BCP38] recommends that ISPs\n   filter traffic\
    \ from customer sites to allow only traffic with a\n   source address that has\
    \ been assigned by that ISP.  So a packet sent\n   from a multihomed site on the\
    \ uplink to ISP-B with a source address\n   in prefix-A may be dropped by ISP-B.\n\
    \   However, even if ISP-B does not implement BCP 38, or ISP-B adds\n   prefix-A\
    \ to its list of allowed source addresses on the uplink from\n   the multihomed\
    \ site, two-way communication may still fail.  If the\n   packet with a source\
    \ address in prefix-A was sent to ISP-B because\n   the uplink to ISP-A failed,\
    \ then if ISP-B does not drop the packet,\n   and the packet reaches its destination\
    \ somewhere on the Internet, the\n   return packet will be sent back with a destination\
    \ address in prefix-\n   A.  The return packet will be routed over the Internet\
    \ to ISP-A, but\n   it will not be delivered to the multihomed site because the\
    \ site\n   uplink with ISP-A has failed.  Two-way communication would require\n\
    \   some arrangement for ISP-B to advertise prefix-A when the uplink to\n   ISP-A\
    \ fails.\n   Note that the same may be true of a provider that does not implement\n\
    \   BCP 38, even if his upstream provider does, or of a provider that has\n  \
    \ no corresponding route to deliver the ingress traffic to the\n   multihomed\
    \ site.  The issue is not that the immediate provider\n   implements ingress filtering;\
    \ it is that someone upstream does (so\n   egress traffic is blocked) or lacks\
    \ a route (causing blackholing of\n   the ingress traffic).\n   Another issue\
    \ with asymmetric traffic flow (when the egress traffic\n   leaves the site via\
    \ one ISP, but the return traffic enters the site\n   via another uplink) is related\
    \ to stateful firewalls/middleboxes.\n   Keeping state in that case might be problematic,\
    \ even impossible.\n   With IPv4, this problem is commonly solved by using private\
    \ address\n   space described in [RFC1918] within the multihomed site and Network\n\
    \   Address Translation (NAT) or Network Address/Port Translation (NAPT)\n   [RFC2663]\
    \ on the uplinks to the ISPs.  However, one of the goals of\n   IPv6 is to eliminate\
    \ the need for and the use of NAT or NAPT.\n   Therefore, requiring the use of\
    \ NAT or NAPT for an enterprise site to\n   multihome with provider-assigned addresses\
    \ is not an attractive\n   solution.\n   [RFC6296] describes a translation solution\
    \ specifically tailored to\n   meet the requirements of multihoming with provider-assigned\
    \ IPv6\n   addresses.  With the IPv6-to-IPv6 Network Prefix Translation (NPTv6)\n\
    \   solution, an enterprise can use either Unique Local Addresses\n   [RFC4193]\
    \ or the prefix assigned by one of the ISPs within its site.\n   As traffic leaves\
    \ the site on an uplink to an ISP, the source address\n   is translated in a predictable\
    \ and reversible manner to an address\n   within the prefix assigned by the ISP\
    \ on that uplink.  [RFC6296] is\n   currently classified as Experimental, and\
    \ it has been implemented by\n   several vendors.  See Section 8.2 for more discussion\
    \ of NPTv6.\n   This document defines routing requirements for enterprise\n  \
    \ multihoming.  This document focuses on the following general class of\n   solutions.\n\
    \   Each host at the enterprise has multiple addresses, at least one from\n  \
    \ each ISP-assigned prefix.  As discussed in Section 6.1 and in\n   [RFC6724],\
    \ each host is responsible for choosing the source address\n   that is applied\
    \ to each packet it sends.  A host is expected to be\n   able to respond dynamically\
    \ to the failure of an uplink to a given\n   ISP by no longer sending packets\
    \ with the source address\n   corresponding to that ISP.  Potential mechanisms\
    \ for communicating\n   network changes to the host are Neighbor Discovery Router\n\
    \   Advertisements [RFC4861], DHCPv6 [RFC8415], and ICMPv6 [RFC4443].\n   The\
    \ routers in the enterprise network are responsible for ensuring\n   that packets\
    \ are delivered to the \"correct\" ISP uplink based on\n   source address.  This\
    \ requires that at least some routers in the site\n   network are able to take\
    \ into account the source address of a packet\n   when deciding how to route it.\
    \  That is, some routers must be capable\n   of some form of Source Address Dependent\
    \ Routing (SADR), if only as\n   described in Section 4.3 of [RFC3704].  At a\
    \ minimum, the routers\n   connected to the ISP uplinks (the site exit routers\
    \ or SERs) must be\n   capable of Source Address Dependent Routing.  Expanding\
    \ the connected\n   domain of routers capable of SADR from the site exit routers\
    \ deeper\n   into the site network will generally result in more efficient routing\n\
    \   of traffic with external destinations.\n   This document is organized as follows.\
    \  Section 4 looks in more\n   detail at the enterprise networking environments\
    \ in which this\n   solution is expected to operate.  The discussion of Section\
    \ 4 uses\n   the concepts of Source-Prefix-Scoped Routing advertisements and\n\
    \   forwarding tables and describes how Source-Prefix-Scoped Routing\n   advertisements\
    \ are used to generate source-prefix-scoped forwarding\n   tables.  A detailed\
    \ description of generating source-prefix-scoped\n   forwarding tables is provided\
    \ in Section 5.  Section 6 discusses\n   existing and proposed mechanisms for\
    \ hosts to select the default\n   source address to be used by applications. \
    \ It also discusses the\n   requirements for routing that are needed to support\
    \ these enterprise\n   network scenarios and the mechanisms by which hosts are\
    \ expected to\n   update default source addresses based on network state.  Section\
    \ 7\n   discusses deployment considerations, while Section 8 discusses other\n\
    \   solutions.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   PA (provider-assigned or provider-aggregatable) address space:\
    \  a\n      block of IP addresses assigned by a Regional Internet Registry\n \
    \     (RIR) to a Local Internet Registry (LIR), used to create\n      allocations\
    \ to end sites.  Can be aggregated and present in the\n      routing table as\
    \ one route.\n   PI (provider-independent) address space:  a block of IP addresses\n\
    \      assigned by a Regional Internet Registry (RIR) directly to end\n      site\
    \ / end customer.\n   ISP:  Internet Service Provider\n   LIR (Local Internet\
    \ Registry):  an organization (usually an ISP or an\n      enterprise/academic)\
    \ that receives its allocation of IP addresses\n      from its Regional Internet\
    \ Registry, then assigns parts of that\n      allocation to its customers.\n \
    \  RIR (Regional Internet Registry):  an organization that manages the\n     \
    \ Internet number resources (such as IP addresses and autonomous\n      system\
    \ (AS) numbers) within a geographical region of the world.\n   SADR (Source Address\
    \ Dependent Routing):  routing that takes into\n      account the source address\
    \ of a packet in addition to the packet\n      destination address.\n   SADR domain:\
    \  a routing domain in which some (or all) routers\n      exchange source-dependent\
    \ routing information.\n   Source-Prefix-Scoped Routing/Forwarding Table:  a routing\
    \ (or\n      forwarding) table that contains routing (or forwarding)\n      information\
    \ only applicable to packets with source addresses from\n      the specific prefix.\n\
    \   Unscoped Routing/Forwarding Table:  a routing (or forwarding) table\n    \
    \  that can be used to route/forward packets with any source address.\n   SER\
    \ (Site Edge Router):  a router that connects the site to an ISP\n      (terminates\
    \ an ISP uplink).\n   LLA (Link-Local Address):  an IPv6 unicast address from\
    \ the fe80::/10\n      prefix [RFC4291].\n   ULA (Unique Local IPv6 Unicast Address):\
    \  an IPv6 unicast address\n      from the FC00::/7 prefix.  They are globally\
    \ unique and intended\n      for local communications [RFC4193].\n   GUA (Global\
    \ Unicast Address):  a globally routable IPv6 address of\n      the global scope\
    \ [RFC4291].\n   SLAAC (IPv6 Stateless Address Autoconfiguration):  a stateless\n\
    \      process of configuring the network stack on IPv6 hosts [RFC4862].\n   RA\
    \ (Router Advertisement):  a message sent by an IPv6 router to\n      advertise\
    \ its presence to hosts together with various network-\n      related parameters\
    \ required for hosts to perform SLAAC [RFC4861].\n   PIO (Prefix Information Option):\
    \  a part of an RA message containing\n      information about IPv6 prefixes that\
    \ could be used by hosts to\n      generate global IPv6 addresses [RFC4862].\n\
    \   RIO (Route Information Option):  a part of an RA message containing\n    \
    \  information about more specific IPv6 prefixes reachable via the\n      advertising\
    \ router [RFC4191].\n"
- title: 4.  Enterprise Multihoming Use Cases
  contents:
  - '4.  Enterprise Multihoming Use Cases

    '
- title: 4.1.  Simple ISP Connectivity with Connected SERs
  contents:
  - "4.1.  Simple ISP Connectivity with Connected SERs\n   We start by looking at\
    \ a scenario in which a site has connections to\n   two ISPs, as shown in Figure\
    \ 1.  The site is assigned the prefix\n   2001:db8:0:a000::/52 by ISP-A and prefix\
    \ 2001:db8:0:b000::/52 by ISP-\n   B.  We consider three hosts in the site.  H31\
    \ and H32 are on a LAN\n   that has been assigned subnets 2001:db8:0:a010::/64\
    \ and\n   2001:db8:0:b010::/64.  H31 has been assigned the addresses\n   2001:db8:0:a010::31\
    \ and 2001:db8:0:b010::31.  H32 has been assigned\n   2001:db8:0:a010::32 and\
    \ 2001:db8:0:b010::32.  H41 is on a different\n   subnet that has been assigned\
    \ 2001:db8:0:a020::/64 and\n   2001:db8:0:b020::/64.\n   2001:db8:0:a010::31 \
    \                                       --------\n   2001:db8:0:b010::31     \
    \                     ,-----.      /        \\\n                +---|R1|---|R4|---+---|SERa|-+\
    \   ISP-A   +--+--        :\n           H31--+   +--+   +--+   |   +----+  `.\
    \       ,'   :          :\n           H32--+   +--+          |   +----+  ,'  \
    \     `.   :          :\n                +---|R2|----------+---|SERb|-+   ISP-B\
    \   +--+--        :\n           H41------|R3|--|R5|--|R6|                    \
    \      --------\n   2001:db8:0:a020::41\n   2001:db8:0:b020::41\n           Figure\
    \ 1: Simple ISP Connectivity with Connected SERs\n   We refer to a router that\
    \ connects the site to an ISP as a site edge\n   router (SER).  Several other\
    \ routers provide connectivity among the\n   internal hosts (H31, H32, and H41),\
    \ as well as connect the internal\n   hosts to the Internet through SERa and SERb.\
    \  In this example, SERa\n   and SERb share a direct connection to each other.\
    \  In Section 4.2, we\n   consider a scenario in which this is not the case.\n\
    \   For the moment, we assume that the hosts are able to select suitable\n   source\
    \ addresses through some mechanism that doesn't involve the\n   routers in the\
    \ site network.  Here, we focus on the primary task of\n   the routed site network,\
    \ which is to get packets efficiently to their\n   destinations, while sending\
    \ a packet to the ISP that assigned the\n   prefix that matches the source address\
    \ of the packet.  In Section 6,\n   we examine what role the routed network may\
    \ play in helping hosts\n   select suitable source addresses for packets.\n  \
    \ With this solution, routers will need some form of Source Address\n   Dependent\
    \ Routing, which will be new functionality.  It would be\n   useful if an enterprise\
    \ site does not need to upgrade all routers to\n   support the new SADR functionality\
    \ in order to support PA\n   multihoming.  We consider whether this is possible\
    \ and examine the\n   trade-offs of not having all routers in the site support\
    \ SADR\n   functionality.\n   In the topology in Figure 1, it is possible to support\
    \ PA multihoming\n   with only SERa and SERb being capable of SADR.  The other\
    \ routers can\n   continue to forward based only on destination address, and exchange\n\
    \   routes that only consider destination address.  In this scenario,\n   SERa\
    \ and SERb communicate source-scoped routing information across\n   their shared\
    \ connection.  When SERa receives a packet with a source\n   address matching\
    \ prefix 2001:db8:0:b000::/52, it forwards the packet\n   to SERb, which forwards\
    \ it on the uplink to ISP-B.  The analogous\n   behavior holds for traffic that\
    \ SERb receives with a source address\n   matching prefix 2001:db8:0:a000::/52.\n\
    \   In Figure 1, when only SERa and SERb are capable of source address\n   dependent\
    \ routing, PA multihoming will work.  However, the paths over\n   which the packets\
    \ are sent will generally not be the shortest paths.\n   The forwarding paths\
    \ will generally be more efficient when more\n   routers are capable of SADR.\
    \  For example, if R4, R2, and R6 are\n   upgraded to support SADR, then they\
    \ can exchange source-scoped routes\n   with SERa and SERb.  They will then know\
    \ to send traffic with a\n   source address matching prefix 2001:db8:0:b000::/52\
    \ directly to SERb,\n   without sending it to SERa first.\n"
- title: 4.2.  Simple ISP Connectivity Where SERs Are Not Directly Connected
  contents:
  - "4.2.  Simple ISP Connectivity Where SERs Are Not Directly Connected\n   In Figure\
    \ 2, we modify the topology slightly by inserting R7, so that\n   SERa and SERb\
    \ are no longer directly connected.  With this topology,\n   it is not enough\
    \ to just enable SADR routing on SERa and SERb to\n   support PA multihoming.\
    \  There are two solutions to enable PA\n   multihoming in this topology.\n  \
    \ 2001:db8:0:a010::31                                        --------\n   2001:db8:0:b010::31\
    \                          ,-----.      /        \\\n                +---|R1|---|R4|---+---|SERa|-+\
    \   ISP-A   +--+--        :\n           H31--+   +--+   +--+   |   +----+  `.\
    \       ,'   :          :\n           H32--+   +--+          |   +----+  ,'  \
    \     `.   :          :\n                +---|R2|----------+---|SERb|-+   ISP-B\
    \   +--+--        :\n           H41------|R3|--|R5|--|R6|                    \
    \      --------\n   2001:db8:0:a020::41                   2001:db8:0:5678::501\
    \    H501\n   2001:db8:0:b020::41\n       Figure 2: Simple ISP Connectivity Where\
    \ SERs Are Not Directly\n   One option is to effectively modify the topology by\
    \ creating a\n   logical tunnel between SERa and SERb by using Generic Routing\n\
    \   Encapsulation (GRE) [RFC7676], for example.  Although SERa and SERb\n   are\
    \ not directly connected physically in this topology, they can be\n   directly\
    \ connected logically by a tunnel.\n   The other option is to enable SADR functionality\
    \ on R7.  In this way,\n   R7 will exchange source-scoped routes with SERa and\
    \ SERb, making the\n   three routers act as a single SADR domain.  This illustrates\
    \ the\n   basic principle that the minimum requirement for the routed site\n \
    \  network to support PA multihoming is having all of the site exit\n   routers\
    \ be part of a connected SADR domain.  Extending the connected\n   SADR domain\
    \ beyond that point can produce more efficient forwarding\n   paths.\n"
- title: 4.3.  Enterprise Network Operator Expectations
  contents:
  - "4.3.  Enterprise Network Operator Expectations\n   Before considering a more\
    \ complex scenario, let's look in more detail\n   at the reasonably simple multihoming\
    \ scenario in Figure 2 to\n   understand what can reasonably be expected from\
    \ this solution.  As a\n   general guiding principle, we assume an enterprise\
    \ network operator\n   will expect a multihomed network to behave as close to\
    \ a single-homed\n   network as possible.  So a solution that meets those expectations\n\
    \   where possible is a good thing.\n   For traffic between internal hosts and\
    \ for traffic from outside the\n   site to internal hosts, an enterprise network\
    \ operator would expect\n   there to be no visible change in the path taken by\
    \ this traffic,\n   since this traffic does not need to be routed in a way that\
    \ depends\n   on source address.  It is also reasonable to expect that internal\n\
    \   hosts should be able to communicate with each other using either of\n   their\
    \ source addresses without restriction.  For example, H31 should\n   be able to\
    \ communicate with H41 using a packet with\n   S=2001:db8:0:a010::31, D=2001:db8:0:b020::41,\
    \ regardless of the state\n   of uplink to ISP-B.\n   These goals can be accomplished\
    \ by having all of the routers in the\n   network continue to originate normal\
    \ unscoped destination routes for\n   their connected networks.  If we can arrange\
    \ it so that these\n   unscoped destination routes are used for forwarding this\
    \ traffic,\n   then we will have accomplished multihoming's goal of not affecting\n\
    \   the forwarding of traffic destined for internal hosts.\n   For traffic destined\
    \ for external hosts, it is reasonable to expect\n   that traffic with a source\
    \ address from the prefix assigned by ISP-A\n   to follow the path that the traffic\
    \ would follow if there were no\n   connection to ISP-B.  This can be accomplished\
    \ by having SERa\n   originate a source-scoped route of the form (S=2001:db8:0:a000::/52,\n\
    \   D=::/0).  If all of the routers in the site support SADR, then the\n   path\
    \ of traffic exiting via ISP-A can match that expectation.  If\n   some routers\
    \ don't support SADR, then it is reasonable to expect that\n   the path for traffic\
    \ exiting via ISP-A may be different within the\n   site.  This is a trade-off\
    \ that the enterprise network operator may\n   decide to make.\n   It is important\
    \ to understand the behavior of this multihoming\n   solution when an uplink to\
    \ one of the ISPs fails.  To simplify this\n   discussion, we assume that all\
    \ routers in the site support SADR.  We\n   start by looking at the operation\
    \ of the network when the uplinks to\n   both ISP-A and ISP-B are functioning\
    \ properly.  SERa originates a\n   source-scoped route of the form (S=2001:db8:0:a000::/52,\
    \ D=::/0), and\n   SERb originates a source-scoped route of the form\n   (S=2001:db8:0:b000::/52,\
    \ D=::/0).  These routes are distributed\n   through the routers in the site,\
    \ and they establish within the\n   routers two sets of forwarding paths for traffic\
    \ leaving the site.\n   One set of forwarding paths is for packets with source\
    \ addresses in\n   2001:db8:0:a000::/52.  The other set of forwarding paths is\
    \ for\n   packets with source addresses in 2001:db8:0:b000::/52.  The normal\n\
    \   destination routes, which are not scoped to these two source\n   prefixes,\
    \ play no role in the forwarding.  Whether a packet exits the\n   site via SERa\
    \ or via SERb is completely determined by the source\n   address applied to the\
    \ packet by the host.  So for example, when host\n   H31 sends a packet to host\
    \ H101 with (S=2001:db8:0:a010::31,\n   D=2001:db8:0:1234::101), the packet will\
    \ only be sent out the link\n   from SERa to ISP-A.\n   Now consider what happens\
    \ when the uplink from SERa to ISP-A fails.\n   The only way for the packets from\
    \ H31 to reach H101 is for H31 to\n   start using the source address for ISP-B.\
    \  H31 needs to send the\n   following packet: (S=2001:db8:0:b010::31, D=2001:db8:0:1234::101).\n\
    \   This behavior is very different from the behavior that occurs with\n   site\
    \ multihoming using PI addresses or with PA addresses using NAT.\n   In these\
    \ other multihoming solutions, hosts do not need to react to\n   network failures\
    \ several hops away in order to regain Internet\n   access.  Instead, a host can\
    \ be largely unaware of the failure of an\n   uplink to an ISP.  When multihoming\
    \ with PA addresses and NAT,\n   existing sessions generally need to be reestablished\
    \ after a failure\n   since the external host will receive packets from the internal\
    \ host\n   with a new source address.  However, new sessions can be established\n\
    \   without any action on the part of the hosts.  Multihoming with PA\n   addresses\
    \ and NAT has created the expectation of a fairly quick and\n   simple recovery\
    \ from network failures.  Alternatives should to be\n   evaluated in terms of\
    \ the speed and complexity of the recovery\n   mechanism.\n   Another significant\
    \ difference between this multihoming solution and\n   multihoming with either\
    \ PI addresses or with PA addresses using NAT\n   is the ability of the enterprise\
    \ network operator to route traffic\n   over different ISPs based on destination\
    \ address.  We still consider\n   the fairly simple network of Figure 2 and assume\
    \ that uplinks to both\n   ISPs are functioning.  Assume that the site is multihomed\
    \ using PA\n   addresses and NAT, and that SERa and SERb each originate a normal\n\
    \   destination route for D=::/0, with the route origination dependent on\n  \
    \ the state of the uplink to the respective ISP.\n   Now suppose it is observed\
    \ that an important application running\n   between internal hosts and external\
    \ host H101 experiences much better\n   performance when the traffic passes through\
    \ ISP-A (perhaps because\n   ISP-A provides lower latency to H101).  When multihoming\
    \ this site\n   with PI addresses or with PA addresses and NAT, the enterprise\n\
    \   network operator can configure SERa to originate into the site\n   network\
    \ a normal destination route for D=2001:db8:0:1234::/64 (the\n   destination prefix\
    \ to reach H101) that depends on the state of the\n   uplink to ISP-A.  When the\
    \ link to ISP-A is functioning, the\n   destination route D=2001:db8:0:1234::/64\
    \ will be originated by SERa,\n   so traffic from all hosts will use ISP-A to\
    \ reach H101 based on the\n   longest destination prefix match in the route lookup.\n\
    \   Implementing the same routing policy is more difficult with the PA\n   multihoming\
    \ solution described in this document since it doesn't use\n   NAT.  By design,\
    \ the only way to control where a packet exits this\n   network is by setting\
    \ the source address of the packet.  Since the\n   network cannot modify the source\
    \ address without NAT, the host must\n   set it.  To implement this routing policy,\
    \ each host needs to use the\n   source address from the prefix assigned by ISP-A\
    \ to send traffic\n   destined for H101.  Mechanisms have been proposed to allow\
    \ hosts to\n   choose the source address for packets in a fine-grained manner.\
    \  We\n   will discuss these proposals in Section 6.  However, an enterprise\n\
    \   network administrator would not expect to interact with host\n   operating\
    \ systems to ensure that a particular source address is\n   chosen for a particular\
    \ destination prefix in order to implement this\n   routing policy.\n"
- title: 4.4.  More Complex ISP Connectivity
  contents:
  - "4.4.  More Complex ISP Connectivity\n   The previous sections considered two\
    \ variations of a simple\n   multihoming scenario in which the site is connected\
    \ to two ISPs\n   offering only Internet connectivity.  It is likely that many\
    \ actual\n   enterprise multihoming scenarios will be similar to this simple\n\
    \   example.  However, there are more complex multihoming scenarios that\n   we\
    \ would like this solution to address as well.\n   It is fairly common for an\
    \ ISP to offer a service in addition to\n   Internet access over the same uplink.\
    \  Two variations of this are\n   reflected in Figure 3.  In addition to Internet\
    \ access, ISP-A offers\n   a service that requires the site to access host H51\
    \ at\n   2001:db8:0:5555::51.  The site has a single physical and logical\n  \
    \ connection with ISP-A, and ISP-A only allows access to H51 over that\n   connection.\
    \  So when H32 needs to access the service at H51, it needs\n   to send packets\
    \ with (S=2001:db8:0:a010::32, D=2001:db8:0:5555::51),\n   and those packets need\
    \ to be forwarded out the link from SERa to ISP-\n   A.\n   2001:db8:0:a010::31\
    \                                        --------\n   2001:db8:0:b010::31    \
    \                      ,-----.      /        \\\n                +---|R1|---|R4|---+---|SERa|-+\
    \   ISP-A   +--+--        :\n           H31--+   +--+   +--+   |   +----+  `.\
    \       ,'   :          :\n           H32--+   +--+          |  +-----+  ,'  \
    \     `.   :          :\n                +---|R2|-----+----+--|SERb1|-+   ISP-B\
    \   +--+--        :\n   2001:db8:0:a010::32     |R8|                    |    \
    \     \\        /\n            H41------|R3|--|R5|           2001:db8:0:6666::61\n\
    \   2001:db8:0:a020::41\n   2001:db8:0:b020::41\n     Figure 3: Internet Access\
    \ and Services Offered by ISP-A and ISP-B\n   ISP-B illustrates a variation on\
    \ this scenario.  In addition to\n   Internet access, ISP-B also offers a service\
    \ that requires the site\n   to access host H61.  The site has two connections\
    \ to two different\n   parts of ISP-B (shown as SERb1 and SERb2 in Figure 3).\
    \  ISP-B expects\n   Internet traffic to use the uplink from SERb1, while it expects\n\
    \   traffic destined for the service at H61 to use the uplink from SERb2.\n  \
    \ For either uplink, ISP-B expects the ingress traffic to have a source\n   address\
    \ matching the prefix that it assigned to the site,\n   2001:db8:0:b000::/52.\n\
    \   As discussed before, we rely completely on the internal host to set\n   the\
    \ source address of the packet properly.  In the case of a packet\n   sent by\
    \ H31 to access the service in ISP-B at H61, we expect the\n   packet to have\
    \ the following addresses: (S=2001:db8:0:b010::31,\n   D=2001:db8:0:6666::61).\
    \  The routed network has two potential ways of\n   distributing routes so that\
    \ this packet exits the site on the uplink\n   at SERb2.\n   We could just rely\
    \ on normal destination routes, without using\n   source-prefix-scoped routes.\
    \  If we have SERb2 originate a normal\n   unscoped destination route for D=2001:db8:0:6666::/64,\
    \ the packets\n   from H31 to H61 will exit the site at SERb2 as desired.  We\
    \ should\n   not have to worry about SERa needing to originate the same route,\n\
    \   because ISP-B should choose a globally unique prefix for the service\n   at\
    \ H61.\n   The alternative is to have SERb2 originate a source-prefix-scoped\n\
    \   destination route of the form (S=2001:db8:0:b000::/52,\n   D=2001:db8:0:6666::/64).\
    \  From a forwarding point of view, the use of\n   the source-prefix-scoped destination\
    \ route would result in traffic\n   with source addresses corresponding only to\
    \ ISP-B being sent to\n   SERb2.  Instead, the use of the unscoped destination\
    \ route would\n   result in traffic with source addresses corresponding to ISP-A\
    \ and\n   ISP-B being sent to SERb2, as long as the destination address matches\n\
    \   the destination prefix.  It seems like either forwarding behavior\n   would\
    \ be acceptable.\n   However, from the point of view of the enterprise network\n\
    \   administrator trying to configure, maintain, and troubleshoot this\n   multihoming\
    \ solution, it seems much clearer to have SERb2 originate\n   the source-prefix-scoped\
    \ destination route corresponding to the\n   service offered by ISP-B.  In this\
    \ way, all of the traffic leaving\n   the site is determined by the source-prefix-scoped\
    \ routes, and all of\n   the traffic within the site or arriving from external\
    \ hosts is\n   determined by the unscoped destination routes.  Therefore, for\
    \ this\n   multihoming solution we choose to originate source-prefix-scoped\n\
    \   routes for all traffic leaving the site.\n"
- title: 4.5.  ISPs and Provider-Assigned Prefixes
  contents:
  - "4.5.  ISPs and Provider-Assigned Prefixes\n   While we expect that most site\
    \ multihoming involves connecting to\n   only two ISPs, this solution allows for\
    \ connections to an arbitrary\n   number of ISPs.  However, when evaluating scalable\
    \ implementations of\n   the solution, it would be reasonable to assume that the\
    \ maximum\n   number of ISPs that a site would connect to is five (topologies\
    \ with\n   two redundant routers, each having two uplinks to different ISPs,\n\
    \   plus a tunnel to a head office acting as fifth one are not unheard\n   of).\n\
    \   It is also useful to note that the prefixes assigned to the site by\n   different\
    \ ISPs will not overlap.  This must be the case, since the\n   provider-assigned\
    \ addresses have to be globally unique.\n"
- title: 4.6.  Simplified Topologies
  contents:
  - "4.6.  Simplified Topologies\n   The topologies of many enterprise sites using\
    \ this multihoming\n   solution may in practice be simpler than the examples that\
    \ we have\n   used.  The topology in Figure 1 could be further simplified by\n\
    \   directly connecting all hosts to the LAN that connects the two site\n   exit\
    \ routers, SERa and SERb.  The topology could also be simplified\n   by connecting\
    \ both uplinks to ISP-A and ISP-B to the same site exit\n   router.  However,\
    \ it is the aim of this document to provide a\n   solution that applies to a broad\
    \ range of enterprise site network\n   topologies, so this document focuses on\
    \ providing a solution to the\n   more general case.  The simplified cases will\
    \ also be supported by\n   this solution, and there may even be optimizations\
    \ that can be made\n   for simplified cases.  This solution, however, needs to\
    \ support more\n   complex topologies.\n   We are starting with the basic assumption\
    \ that enterprise site\n   networks can be quite complex from a routing perspective.\
    \  However,\n   even a complex site network can be multihomed to different ISPs\
    \ with\n   PA addresses using IPv4 and NAT.  It is not reasonable to expect an\n\
    \   enterprise network operator to change the routing topology of the\n   site\
    \ in order to deploy IPv6.\n"
- title: 5.  Generating Source-Prefix-Scoped Forwarding Tables
  contents:
  - "5.  Generating Source-Prefix-Scoped Forwarding Tables\n   So far, we have described\
    \ in general terms how the SADR-capable\n   routers in this solution forward traffic\
    \ by using both normal\n   unscoped destination routes and source-prefix-scoped\
    \ destination\n   routes.  Here we give a precise method for generating a source-\n\
    \   prefix-scoped forwarding table on a router that supports SADR.\n   1.  Compute\
    \ the next-hops for the source-prefix-scoped destination\n       prefixes using\
    \ only routers in the connected SADR domain.  These\n       are the initial source-prefix-scoped\
    \ forwarding table entries.\n   2.  Compute the next-hops for the unscoped destination\
    \ prefixes using\n       all routers in the IGP.  This is the unscoped forwarding\
    \ table.\n   3.  For a given source-prefix-scoped forwarding table T (scoped to\n\
    \       source prefix P), consider a source-prefix-scoped forwarding\n       table\
    \ T', whose source prefix P' contains P.  We call T the more\n       specific\
    \ source-prefix-scoped forwarding table, and T' the less\n       specific source-prefix-scoped\
    \ forwarding table.  We select\n       entries in forwarding table T' to augment\
    \ forwarding table T\n       based on the following rules.  If a destination prefix\
    \ of an\n       entry in forwarding table T' exactly matches the destination\n\
    \       prefix of an existing entry in forwarding table T (including\n       destination\
    \ prefix length), then do not add the entry to\n       forwarding table T.  If\
    \ the destination prefix does NOT match an\n       existing entry, then add the\
    \ entry to forwarding table T.  As the\n       unscoped forwarding table is considered\
    \ to be scoped to ::/0,\n       this process will propagate routes from the unscoped\
    \ forwarding\n       table to forwarding table T.  If there exist multiple source-\n\
    \       prefix-scoped forwarding tables whose source prefixes contain P,\n   \
    \    these source-prefix-scoped forwarding tables should be processed\n      \
    \ in order from most specific to least specific.\n   The forwarding tables produced\
    \ by this process are used in the\n   following way to forward packets.\n   1.\
    \  Select the most specific (longest prefix match) source-prefix-\n       scoped\
    \ forwarding table that matches the source address of the\n       packet (again,\
    \ the unscoped forwarding table is considered to be\n       scoped to ::/0).\n\
    \   2.  Look up the destination address of the packet in the selected\n      \
    \ forwarding table to determine the next-hop for the packet.\n   The following\
    \ example illustrates how this process is used to create\n   a forwarding table\
    \ for each provider-assigned source prefix.  We\n   consider the multihomed site\
    \ network in Figure 3.  Initially we\n   assume that all of the routers in the\
    \ site network support SADR.\n   Figure 4 shows the routes that are originated\
    \ by the routers in the\n   site network.\n   Routes originated by SERa:\n   (S=2001:db8:0:a000::/52,\
    \ D=2001:db8:0:5555/64)\n   (S=2001:db8:0:a000::/52, D=::/0)\n   (D=2001:db8:0:5555::/64)\n\
    \   (D=::/0)\n   Routes originated by SERb1:\n   (S=2001:db8:0:b000::/52, D=::/0)\n\
    \   (D=::/0)\n   Routes originated by SERb2:\n   (S=2001:db8:0:b000::/52, D=2001:db8:0:6666::/64)\n\
    \   (D=2001:db8:0:6666::/64)\n   Routes originated by R1:\n   (D=2001:db8:0:a010::/64)\n\
    \   (D=2001:db8:0:b010::/64)\n   Routes originated by R2:\n   (D=2001:db8:0:a010::/64)\n\
    \   (D=2001:db8:0:b010::/64)\n   Routes originated by R3:\n   (D=2001:db8:0:a020::/64)\n\
    \   (D=2001:db8:0:b020::/64)\n         Figure 4: Routes Originated by Routers\
    \ in the Site Network\n   Each SER originates destination routes that are scoped\
    \ to the source\n   prefix assigned by the ISP to which the SER connects.  Note\
    \ that the\n   SERs also originate the corresponding unscoped destination route.\n\
    \   This is not needed when all of the routers in the site support SADR.\n   However,\
    \ it is required when some routers do not support SADR.  This\n   will be discussed\
    \ in more detail later.\n   We focus on how R8 constructs its source-prefix-scoped\
    \ forwarding\n   tables from these route advertisements.  R8 computes the next\
    \ hops\n   for destination routes that are scoped to the source prefix\n   2001:db8:0:a000::/52.\
    \  The results are shown in the first table in\n   Figure 5.  (In this example,\
    \ the next hops are computed assuming that\n   all links have the same metric.)\
    \  Then, R8 computes the next hops for\n   destination routes that are scoped\
    \ to the source prefix\n   2001:db8:0:b000::/52.  The results are shown in the\
    \ second table in\n   Figure 5.  Finally, R8 computes the next hops for the unscoped\n\
    \   destination prefixes.  The results are shown in the third table in\n   Figure\
    \ 5.\n   forwarding entries scoped to\n   source prefix = 2001:db8:0:a000::/52\n\
    \   D=2001:db8:0:5555/64      NH=R7\n   D=::/0                    NH=R7\n   forwarding\
    \ entries scoped to\n   source prefix = 2001:db8:0:b000::/52\n   D=2001:db8:0:6666/64\
    \      NH=SERb2\n   D=::/0                    NH=SERb1\n   unscoped forwarding\
    \ entries\n   D=2001:db8:0:a010::/64    NH=R2\n   D=2001:db8:0:b010::/64    NH=R2\n\
    \   D=2001:db8:0:a020::/64    NH=R5\n   D=2001:db8:0:b020::/64    NH=R5\n   D=2001:db8:0:5555::/64\
    \    NH=R7\n   D=2001:db8:0:6666::/64    NH=SERb2\n   D=::/0                 \
    \   NH=SERb1\n                Figure 5: Forwarding Entries Computed at R8\n  \
    \ The final step is for R8 to augment the more specific source-prefix-\n   scoped\
    \ forwarding tables with entries from less specific source-\n   prefix-scoped\
    \ forwarding tables.  The unscoped forwarding table is\n   considered as being\
    \ scoped to ::/0, so both 2001:db8:0:a000::/52 and\n   2001:db8:0:b000::/52 are\
    \ more specific prefixes of ::/0.  Therefore,\n   entries in the unscoped forwarding\
    \ table will be evaluated to be\n   added to these two more specific source-prefix-scoped\
    \ forwarding\n   tables.  If a forwarding entry from the less specific source-prefix-\n\
    \   scoped forwarding table has the exact same destination prefix\n   (including\
    \ destination prefix length) as the forwarding entry from\n   the more specific\
    \ source-prefix-scoped forwarding table, then the\n   existing forwarding entry\
    \ in the more specific source-prefix-scoped\n   forwarding table wins.\n   As\
    \ an example of how the source-prefix-scoped forwarding entries are\n   augmented,\
    \ we consider how the two entries in the first table in\n   Figure 5 (the table\
    \ for source prefix = 2001:db8:0:a000::/52) are\n   augmented with entries from\
    \ the third table in Figure 5 (the table of\n   unscoped or scoped to ::/0 forwarding\
    \ entries).  The first four\n   unscoped forwarding entries (D=2001:db8:0:a010::/64,\n\
    \   D=2001:db8:0:b010::/64, D=2001:db8:0:a020::/64, and\n   D=2001:db8:0:b020::/64)\
    \ are not an exact match for any of the\n   existing entries in the forwarding\
    \ table for source prefix\n   2001:db8:0:a000::/52.  Therefore, these four entries\
    \ are added to the\n   final forwarding table for source prefix 2001:db8:0:a000::/52.\
    \  The\n   result of adding these entries is reflected in the first four entries\n\
    \   the first table in Figure 6.\n   The next less specific source-prefix-scoped\
    \ (scope is ::/0)\n   forwarding table entry is for D=2001:db8:0:5555::/64.  This\
    \ entry is\n   an exact match for the existing entry in the forwarding table for\
    \ the\n   more specific source prefix 2001:db8:0:a000::/52.  Therefore, we do\n\
    \   not replace the existing entry with the entry from the unscoped\n   forwarding\
    \ table.  This is reflected in the fifth entry in the first\n   table in Figure\
    \ 6.  (Note that since both scoped and unscoped entries\n   have R7 as the next\
    \ hop, the result of applying this rule is not\n   visible.)\n   The next less\
    \ specific source-prefix-scoped (scope is ::/0)\n   forwarding table entry is\
    \ for D=2001:db8:0:6666::/64.  This entry is\n   not an exact match for any existing\
    \ entries in the forwarding table\n   for source prefix 2001:db8:0:a000::/52.\
    \  Therefore, we add this\n   entry.  This is reflected in the sixth entry in\
    \ the first table in\n   Figure 6.\n   The next less specific source-prefix-scoped\
    \ (scope is ::/0)\n   forwarding table entry is for D=::/0.  This entry is an\
    \ exact match\n   for the existing entry in the forwarding table for the more\
    \ specific\n   source prefix 2001:db8:0:a000::/52.  Therefore, we do not overwrite\n\
    \   the existing source-prefix-scoped entry, as can be seen in the last\n   entry\
    \ in the first table in Figure 6.\n   if source address matches 2001:db8:0:a000::/52\n\
    \   then use this forwarding table\n   D=2001:db8:0:a010::/64    NH=R2\n   D=2001:db8:0:b010::/64\
    \    NH=R2\n   D=2001:db8:0:a020::/64    NH=R5\n   D=2001:db8:0:b020::/64    NH=R5\n\
    \   D=2001:db8:0:5555::/64    NH=R7\n   D=2001:db8:0:6666::/64    NH=SERb2\n \
    \  D=::/0                    NH=R7\n   else if source address matches 2001:db8:0:b000::/52\n\
    \   then use this forwarding table\n   D=2001:db8:0:a010::/64    NH=R2\n   D=2001:db8:0:b010::/64\
    \    NH=R2\n   D=2001:db8:0:a020::/64    NH=R5\n   D=2001:db8:0:b020::/64    NH=R5\n\
    \   D=2001:db8:0:5555::/64    NH=R7\n   D=2001:db8:0:6666::/64    NH=SERb2\n \
    \  D=::/0                    NH=SERb1\n   else if source address matches ::/0\
    \ use this forwarding table\n   D=2001:db8:0:a010::/64    NH=R2\n   D=2001:db8:0:b010::/64\
    \    NH=R2\n   D=2001:db8:0:a020::/64    NH=R5\n   D=2001:db8:0:b020::/64    NH=R5\n\
    \   D=2001:db8:0:5555::/64    NH=R7\n   D=2001:db8:0:6666::/64    NH=SERb2\n \
    \  D=::/0                    NH=SERb1\n            Figure 6: Complete Forwarding\
    \ Tables Computed at R8\n   The forwarding tables produced by this process at\
    \ R8 have the desired\n   properties.  A packet with a source address in 2001:db8:0:a000::/52\n\
    \   will be forwarded based on the first table in Figure 6.  If the\n   packet\
    \ is destined for the Internet at large or the service at\n   D=2001:db8:0:5555/64,\
    \ it will be sent to R7 in the direction of SERa.\n   If the packet is destined\
    \ for an internal host, then the first four\n   entries will send it to R2 or\
    \ R5 as expected.  Note that if this\n   packet has a destination address corresponding\
    \ to the service offered\n   by ISP-B (D=2001:db8:0:5555::/64), then it will get\
    \ forwarded to\n   SERb2.  It will be dropped by SERb2 or by ISP-B, since the\
    \ packet has\n   a source address that was not assigned by ISP-B.  However, this\
    \ is\n   expected behavior.  In order to use the service offered by ISP-B, the\n\
    \   host needs to originate the packet with a source address assigned by\n   ISP-B.\n\
    \   In this example, a packet with a source address that doesn't match\n   2001:db8:0:a000::/52\
    \ or 2001:db8:0:b000::/52 must have originated\n   from an external host.  Such\
    \ a packet will use the unscoped\n   forwarding table (the last table in Figure\
    \ 6).  These packets will\n   flow exactly as they would in absence of multihoming.\n\
    \   We can also modify this example to illustrate how it supports\n   deployments\
    \ in which not all routers in the site support SADR.\n   Continuing with the topology\
    \ shown in Figure 3, suppose that R3 and\n   R5 do not support SADR.  Instead\
    \ they are only capable of\n   understanding unscoped route advertisements.  The\
    \ SADR routers in the\n   network will still originate the routes shown in Figure\
    \ 4.  However,\n   R3 and R5 will only understand the unscoped routes as shown\
    \ in\n   Figure 7.\n   Routes originated by SERa:\n   (D=2001:db8:0:5555::/64)\n\
    \   (D=::/0)\n   Routes originated by SERb1:\n   (D=::/0)\n   Routes originated\
    \ by SERb2:\n   (D=2001:db8:0:6666::/64)\n   Routes originated by R1:\n   (D=2001:db8:0:a010::/64)\n\
    \   (D=2001:db8:0:b010::/64)\n   Routes originated by R2:\n   (D=2001:db8:0:a010::/64)\n\
    \   (D=2001:db8:0:b010::/64)\n   Routes originated by R3:\n   (D=2001:db8:0:a020::/64)\n\
    \   (D=2001:db8:0:b020::/64)\n      Figure 7: Route Advertisements Understood\
    \ by Routers That Do Not\n   With these unscoped route advertisements, R5 will\
    \ produce the\n   forwarding table shown in Figure 8.\n   forwarding table\n \
    \  D=2001:db8:0:a010::/64    NH=R8\n   D=2001:db8:0:b010::/64    NH=R8\n   D=2001:db8:0:a020::/64\
    \    NH=R3\n   D=2001:db8:0:b020::/64    NH=R3\n   D=2001:db8:0:5555::/64    NH=R8\n\
    \   D=2001:db8:0:6666::/64    NH=SERb2\n   D=::/0                    NH=R8\n \
    \       Figure 8: Forwarding Table for R5, Which Doesn't Understand\n        \
    \                Source-Prefix- Scoped Routes\n   As all SERs belong to the SADR\
    \ domain, any traffic that needs to exit\n   the site will eventually hit a SADR-capable\
    \ router.  To prevent\n   routing loops involving SADR-capable and non-SADR-capable\
    \ routers,\n   traffic that enters the SADR-capable domain does not leave the\
    \ domain\n   until it exits the site.  Therefore all SADR-capable routers within\n\
    \   the domain MUST be logically connected.\n   Note that the mechanism described\
    \ here for converting source-prefix-\n   scoped destination prefix routing advertisements\
    \ into forwarding\n   state is somewhat different from that proposed in [DST-SRC-RTG].\
    \  The\n   method described in this document is functionally equivalent, but it\n\
    \   is based on application of existing mechanisms for the described\n   scenarios.\n"
- title: 6.  Mechanisms for Hosts To Choose Good Default Source Addresses in a
  contents:
  - "6.  Mechanisms for Hosts To Choose Good Default Source Addresses in a\n    Multihomed\
    \ Site\n   Until this point, we have made the assumption that hosts are able to\n\
    \   choose the correct source address using some unspecified mechanism.\n   This\
    \ has allowed us to focus on what the routers in a multihomed site\n   network\
    \ need to do in order to forward packets to the correct ISP\n   based on source\
    \ address.  Now we look at possible mechanisms for\n   hosts to choose the correct\
    \ source address.  We also look at what\n   role, if any, the routers may play\
    \ in providing information that\n   helps hosts to choose source addresses.\n\
    \   It should be noted that this section discusses how hosts could select\n  \
    \ the default source address for new connections.  Any connection that\n   already\
    \ exists on a host is bound to a specific source address that\n   cannot be changed.\
    \  Section 6.7 discusses the connections\n   preservation issue in more detail.\n\
    \   Any host that needs to be able to send traffic using the uplinks to a\n  \
    \ given ISP is expected to be configured with an address from the\n   prefix assigned\
    \ by that ISP.  The host will control which ISP is used\n   for its traffic by\
    \ selecting one of the addresses configured on the\n   host as the source address\
    \ for outgoing traffic.  It is the\n   responsibility of the site network to ensure\
    \ that a packet with the\n   source address from an ISP is now sent on an uplink\
    \ to that ISP.\n   If all of the ISP uplinks are working, then the host's choice\
    \ of\n   source address may be driven by the desire to load share across ISP\n\
    \   uplinks, or it may be driven by the desire to take advantage of\n   certain\
    \ properties of a particular uplink or ISP (if some information\n   about various\
    \ path properties has been made available to the host\n   somehow.  See [PROV-DOMAINS]\
    \ as an example).  If any of the ISP\n   uplinks is not working, then the choice\
    \ of source address by the host\n   can cause packets to get dropped.\n   How\
    \ a host selects a suitable source address in a multihomed site is\n   not a solved\
    \ problem.  We do not attempt to solve this problem in\n   this document.  Instead\
    \ we discuss the current state of affairs with\n   respect to standardized solutions\
    \ and the implementation of those\n   solutions.  We also look at proposed solutions\
    \ for this problem.\n   An external host initiating communication with a host\
    \ internal to a\n   PA-multihomed site will need to know multiple addresses for\
    \ that host\n   in order to communicate with it using different ISPs to the\n\
    \   multihomed site (knowing just one address would undermine all\n   benefits\
    \ of redundant connectivity provided by multihoming).  These\n   addresses are\
    \ typically learned through DNS.  (For simplicity, we\n   assume that the external\
    \ host is single-homed.)  The external host\n   chooses the ISP that will be used\
    \ at the remote multihomed site by\n   setting the destination address on the\
    \ packets it transmits.  For a\n   session originated from an external host to\
    \ an internal host, the\n   choice of source address used by the internal host\
    \ is simple.  The\n   internal host has no choice but to use the destination address\
    \ in the\n   received packet as the source address of the transmitted packet.\n\
    \   For a session originated by a host inside the multihomed site, the\n   decision\
    \ of which source address to select is more complicated.  We\n   consider three\
    \ main methods for hosts to get information about the\n   network.  The two proactive\
    \ methods are Neighbor Discovery Router\n   Advertisements and DHCPv6.  The one\
    \ reactive method we consider is\n   ICMPv6.  Note that we are explicitly excluding\
    \ the possibility of\n   having hosts participate in, or even listen directly\
    \ to, routing\n   protocol advertisements.\n   First we look at how a host is\
    \ currently expected to select the\n   default source and destination addresses\
    \ to be used for a new\n   connection.\n"
- title: 6.1.  Default Source Address Selection Algorithm on Hosts
  contents:
  - "6.1.  Default Source Address Selection Algorithm on Hosts\n   [RFC6724] defines\
    \ the algorithms that hosts are expected to use to\n   select source and destination\
    \ addresses for packets.  It defines an\n   algorithm for selecting a source address\
    \ and a separate algorithm for\n   selecting a destination address.  Both of these\
    \ algorithms depend on\n   a policy table.  [RFC6724] defines a default policy\
    \ that produces\n   certain behavior.\n   The rules in the two algorithms in [RFC6724]\
    \ depend on many different\n   properties of addresses.  While these are needed\
    \ for understanding\n   how a host should choose addresses in an arbitrary environment,\
    \ most\n   of the rules are not relevant for understanding how a host should\n\
    \   choose among multiple source addresses in a multihomed environment\n   when\
    \ sending a packet to a remote host.  Returning to the example in\n   Figure 3,\
    \ we look at what the default algorithms in [RFC6724] say\n   about the source\
    \ address that internal host H31 should use to send\n   traffic to external host\
    \ H101, somewhere on the Internet.\n   There is no choice to be made with respect\
    \ to destination address.\n   H31 needs to send a packet with D=2001:db8:0:1234::101\
    \ in order to\n   reach H101.  So H31 has to choose between using S=2001:db8:0:a010::31\n\
    \   or S=2001:db8:0:b010::31 as the source address for this packet.  We\n   go\
    \ through the rules for source address selection in Section 5 of\n   [RFC6724].\n\
    \   Rule 1 (Prefer same address) is not useful to break the tie between\n   source\
    \ addresses because neither one of the candidate source\n   addresses equals the\
    \ destination address.\n   Rule 2 (Prefer appropriate scope) is also not useful\
    \ in this scenario\n   because both source addresses and the destination address\
    \ have global\n   scope.\n   Rule 3 (Avoid deprecated addresses) applies to an\
    \ address that has\n   been autoconfigured by a host using stateless address\n\
    \   autoconfiguration as defined in [RFC4862].  An address autoconfigured\n  \
    \ by a host has a preferred lifetime and a valid lifetime.  The address\n   is\
    \ preferred until the preferred lifetime expires, after which it\n   becomes deprecated.\
    \  A deprecated address is not used if there is a\n   preferred address of the\
    \ appropriate scope available.  When the valid\n   lifetime expires, the address\
    \ cannot be used at all.  The preferred\n   and valid lifetimes for an autoconfigured\
    \ address are set based on\n   the corresponding lifetimes in the Prefix Information\
    \ Option in\n   Neighbor Discovery Router Advertisements.  In this scenario, a\n\
    \   possible tool to control source address selection in this scenario\n   would\
    \ be for a host to deprecate an address by having routers on that\n   link, R1\
    \ and R2 in Figure 3, send Router Advertisement messages\n   containing PIOs with\
    \ the Preferred Lifetime value for the deprecated\n   source prefix set to zero.\
    \  This is a rather blunt tool, because it\n   discourages or prohibits the use\
    \ of that source prefix for all\n   destinations.  However, it may be useful in\
    \ some scenarios.  For\n   example, if all uplinks to a particular ISP fail, it\
    \ is desirable to\n   prevent hosts from using source addresses from that ISP\
    \ address\n   space.\n   Rule 4 (Avoid home addresses) does not apply here because\
    \ we are not\n   considering Mobile IP.\n   Rule 5 (Prefer outgoing interface)\
    \ is not useful in this scenario\n   because both source addresses are assigned\
    \ to the same interface.\n   Rule 5.5 (Prefer addresses in a prefix advertised\
    \ by the next-hop) is\n   not useful in the scenario when both R1 and R2 will\
    \ advertise both\n   source prefixes.  However, this rule may potentially allow\
    \ a host to\n   select the correct source prefix by selecting a next-hop.  The\
    \ most\n   obvious way would be to make R1 advertise itself as a default router\n\
    \   and send PIO for 2001:db8:0:a010::/64, while R2 advertises itself as\n   a\
    \ default router and sends PIO for 2001:db8:0:b010::/64.  We'll\n   discuss later\
    \ how Rule 5.5 can be used to influence a source address\n   selection in single-router\
    \ topologies (e.g., when H41 is sending\n   traffic using R3 as a default gateway).\n\
    \   Rule 6 (Prefer matching label) refers to the label value determined\n   for\
    \ each source and destination prefix as a result of applying the\n   policy table\
    \ to the prefix.  With the default policy table defined in\n   Section 2.1 of\
    \ [RFC6724], Label(2001:db8:0:a010::31) = 5,\n   Label(2001:db8:0:b010::31) =\
    \ 5, and Label(2001:db8:0:1234::101) = 5.\n   So with the default policy, Rule\
    \ 6 does not break the tie.  However,\n   the algorithms in [RFC6724] are defined\
    \ in such a way that non-\n   default address selection policy tables can be used.\
    \  [RFC7078]\n   defines a way to distribute a non-default address selection policy\n\
    \   table to hosts using DHCPv6.  So even though the application of Rule\n   6\
    \ to this scenario using the default policy table is not useful, Rule\n   6 may\
    \ still be a useful tool.\n   Rule 7 (Prefer temporary addresses) has to do with\
    \ the technique\n   described in [RFC4941] to periodically randomize the interface\n\
    \   portion of an IPv6 address that has been generated using stateless\n   address\
    \ autoconfiguration.  In general, if H31 were using this\n   technique, it would\
    \ use it for both source addresses, for example,\n   creating temporary addresses\
    \ 2001:db8:0:a010:2839:9938:ab58:830f and\n   2001:db8:0:b010:4838:f483:8384:3208,\
    \ in addition to\n   2001:db8:0:a010::31 and 2001:db8:0:b010::31.  So this rule\
    \ would\n   prefer the two temporary addresses, but it would not break the tie\n\
    \   between the two source prefixes from ISP-A and ISP-B.\n   Rule 8 (Use longest\
    \ matching prefix) dictates that, between two\n   candidate source addresses,\
    \ the host selects the one that has longest\n   common prefix length with the\
    \ destination address.  For example, if\n   H31 were selecting the source address\
    \ for sending packets to H101,\n   this rule would not break the tie between candidate\
    \ source addresses\n   2001:db8:0:a101::31 and 2001:db8:0:b101::31 since the common\
    \ prefix\n   length with the destination is 48.  However, if H31 were selecting\n\
    \   the source address for sending packets to H41 address\n   2001:db8:0:a020::41,\
    \ then this rule would result in using\n   2001:db8:0:a101::31 as a source (2001:db8:0:a101::31\
    \ and\n   2001:db8:0:a020::41 share the common prefix 2001:db8:0:a000::/58,\n\
    \   while for 2001:db8:0:b101::31 and 2001:db8:0:a020::41, the common\n   prefix\
    \ is 2001:db8:0:a000::/51).  Therefore Rule 8 might be useful\n   for selecting\
    \ the correct source address in some, but not all,\n   scenarios (for example\
    \ if ISP-B services belong to\n   2001:db8:0:b000::/59, then H31 would always\
    \ use 2001:db8:0:b010::31\n   to access those destinations).\n   So we can see\
    \ that of the eight source address selection rules from\n   [RFC6724], four actually\
    \ apply to our basic site multihoming\n   scenario.  The rules that are relevant\
    \ to this scenario are\n   summarized below.\n   *  Rule 3: Avoid deprecated addresses.\n\
    \   *  Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.\n  \
    \ *  Rule 6: Prefer matching label.\n   *  Rule 8: Prefer longest matching prefix.\n\
    \   The two methods that we discuss for controlling the source address\n   selection\
    \ through the four relevant rules above are SLAAC Router\n   Advertisement messages\
    \ and DHCPv6.\n   We also consider a possible role for ICMPv6 for getting traffic-\n\
    \   driven feedback from the network.  With the source address selection\n   algorithm\
    \ discussed above, the goal is to choose the correct source\n   address on the\
    \ first try, before any traffic is sent.  However,\n   another strategy is to\
    \ choose a source address, send the packet, get\n   feedback from the network\
    \ about whether or not the source address is\n   correct, and try another source\
    \ address if it is not.\n   We consider four scenarios in which a host needs to\
    \ select the\n   correct source address.  In the first scenario, both uplinks\
    \ are\n   working.  In the second scenario, one uplink has failed.  The third\n\
    \   scenario is a situation in which one failed uplink has recovered.\n   The\
    \ last scenario is failure of both (all) uplinks.\n   It should be noted that\
    \ [RFC6724] only defines the behavior of IPv6\n   hosts to select default addresses\
    \ that applications and upper-layer\n   protocols can use.  Applications and upper-layer\
    \ protocols can make\n   their own choices on selecting source addresses.  The\
    \ mechanism\n   proposed in this document attempts to ensure that the subset of\n\
    \   source addresses available for applications and upper-layer protocols\n  \
    \ is selected with the up-to-date network state in mind.  The rest of\n   the\
    \ document discusses various aspects of the default source address\n   selection\
    \ defined in [RFC6724], calling it for the sake of brevity\n   \"the source address\
    \ selection\".\n"
- title: 6.2.  Selecting Default Source Address When Both Uplinks Are Working
  contents:
  - "6.2.  Selecting Default Source Address When Both Uplinks Are Working\n   Again\
    \ we return to the topology in Figure 3.  Suppose that the site\n   administrator\
    \ wants to implement a policy by which all hosts need to\n   use ISP-A to reach\
    \ H101 at D=2001:db8:0:1234::101.  So for example,\n   H31 needs to select S=2001:db8:0:a010::31.\n"
- title: 6.2.1.  Distributing Default Address Selection Policy Table with DHCPv6
  contents:
  - "6.2.1.  Distributing Default Address Selection Policy Table with DHCPv6\n   This\
    \ policy can be implemented by using DHCPv6 to distribute an\n   address selection\
    \ policy table that assigns the same label to\n   destination addresses that match\
    \ 2001:db8:0:1234::/64 as it does to\n   source addresses that match 2001:db8:0:a000::/52.\
    \  The following two\n   entries accomplish this.\n   Prefix                 Precedence\
    \       Label\n   2001:db8:0:1234::/64   50               33\n   2001:db8:0:a000::/52\
    \   50               33\n        Figure 9: Policy Table Entries to Implement a\
    \ Routing Policy\n   This requires that the hosts implement [RFC6724], the basic\
    \ source\n   and destination address framework, along with [RFC7078], the DHCPv6\n\
    \   extension for distributing a non-default policy table.  Note that it\n   does\
    \ NOT require that the hosts use DHCPv6 for address assignment.\n   The hosts\
    \ could still use stateless address autoconfiguration for\n   address configuration,\
    \ while using DHCPv6 only for policy table\n   distribution (see [RFC8415]). \
    \ However this method has a number of\n   disadvantages:\n   *  DHCPv6 support\
    \ is not a mandatory requirement for IPv6 hosts\n      [RFC8504], so this method\
    \ might not work for all devices.\n   *  Network administrators are required to\
    \ explicitly configure the\n      desired network access policies on DHCPv6 servers.\
    \  While it might\n      be feasible in the scenario of a single multihomed network,\
    \ such\n      approach might have some scalability issues, especially if the\n\
    \      centralized DHCPv6 solution is deployed to serve a large number of\n  \
    \    multihomed sites.\n"
- title: 6.2.2.  Controlling Default Source Address Selection with Router
  contents:
  - "6.2.2.  Controlling Default Source Address Selection with Router\n        Advertisements\n\
    \   Neighbor Discovery currently has two mechanisms to communicate prefix\n  \
    \ information to hosts.  The base specification for Neighbor Discovery\n   (see\
    \ [RFC4861]) defines the Prefix Information Option (PIO) in the\n   Router Advertisement\
    \ (RA) message.  When a host receives a PIO with\n   the A-flag [RFC8425] set,\
    \ it can use the prefix in the PIO as the\n   source prefix from which it assigns\
    \ itself an IP address using\n   stateless address autoconfiguration (SLAAC) procedures\
    \ described in\n   [RFC4862].  In the example of Figure 3, if the site network\
    \ is using\n   SLAAC, we would expect both R1 and R2 to send RA messages with\
    \ PIOs\n   with the A-flag set for both source prefixes 2001:db8:0:a010::/64 and\n\
    \   2001:db8:0:b010::/64.  H31 would then use the SLAAC procedure to\n   configure\
    \ itself with 2001:db8:0:a010::31 and 2001:db8:0:b010::31.\n   Whereas a host\
    \ learns about source prefixes from PIO messages, hosts\n   can learn about a\
    \ destination prefix from a Router Advertisement\n   containing a Route Information\
    \ Option (RIO), as specified in\n   [RFC4191].  The destination prefixes in RIOs\
    \ are intended to allow a\n   host to choose the router that it uses as its first\
    \ hop to reach a\n   particular destination prefix.\n   As currently standardized,\
    \ neither PIO nor RIO options contained in\n   Neighbor Discovery Router Advertisements\
    \ can communicate the\n   information needed to implement the desired routing\
    \ policy.  PIOs\n   communicate source prefixes, and RIOs communicate destination\n\
    \   prefixes.  However, there is currently no standardized way to\n   directly\
    \ associate a particular destination prefix with a particular\n   source prefix.\n\
    \   [SADR-RA] proposes a Source Address Dependent Route Information\n   option\
    \ for Neighbor Discovery Router Advertisements that would\n   associate a source\
    \ prefix with a destination prefix.  The details of\n   [SADR-RA] might need tweaking\
    \ to address this use case.  However, in\n   order to be able to use Neighbor\
    \ Discovery Router Advertisements to\n   implement this routing policy, an extension\
    \ is needed that would\n   allow R1 and R2 to explicitly communicate to H31 an\
    \ association\n   between S=2001:db8:0:a000::/52 and D=2001:db8:0:1234::/64.\n\
    \   However, Rule 5.5 of the default source address selection algorithm\n   (discussed\
    \ in Section 6.1), together with default router preference\n   (specified in [RFC4191])\
    \ and RIO, can be used to influence a source\n   address selection on a host as\
    \ described below.  Let's look at source\n   address selection on the host H41.\
    \  It receives RAs from R3 with PIOs\n   for 2001:db8:0:a020::/64 and 2001:db8:0:b020::/64.\
    \  At that point,\n   all traffic would use the same next-hop (R3 link-local address)\
    \ so\n   Rule 5.5 does not apply.  Now let's assume that R3 supports SADR and\n\
    \   has two scoped forwarding tables, one scoped to\n   S=2001:db8:0:a000::/52\
    \ and another scoped to S=2001:db8:0:b000::/52.\n   If R3 generates two different\
    \ link-local addresses for its interface\n   facing H41 (one for each scoped forwarding\
    \ table, LLA_A and LLA_B),\n   R3 will send two different RAs: one from LLA_A\
    \ that includes a PIO\n   for 2001:db8:0:a020::/64, and another from LLA_B that\
    \ includes a PIO\n   for 2001:db8:0:b020::/64.  Now it is possible to influence\
    \ H41 source\n   address selection for destinations that follow the default route\
    \ by\n   setting the default router preference in RAs.  If it is desired that\n\
    \   H41 reaches H101 (or any destination in the Internet) via ISP-A, then\n  \
    \ RAs sent from LLA_A should have the default router preference set to\n   01\
    \ (high priority), while RAs sent from LLA_B should have the\n   preference set\
    \ to 11 (low).  LLA_A would then be chosen as a next-hop\n   for H101, and therefore\
    \ (per Rule 5.5) 2001:db8:0:a020::41 would be\n   selected as the source address.\
    \  If, at the same time, it is desired\n   that H61 is accessible via ISP-B, then\
    \ R3 should include a RIO for\n   2001:db8:0:6666::/64 in its RA sent from LLA_B.\
    \  H41 would choose\n   LLA_B as a next-hop for all traffic to H61, and then per\
    \ Rule 5.5,\n   2001:db8:0:b020::41 would be selected as a source address.\n \
    \  If in the above-mentioned scenario it is desirable that all Internet\n   traffic\
    \ leaves the network via ISP-A, and the link to ISP-B is used\n   for accessing\
    \ ISP-B services only (not as an ISP-A link backup), then\n   RAs sent by R3 from\
    \ LLA_B should have their Router Lifetime values\n   set to zero and should include\
    \ RIOs for ISP-B address space.  It\n   would instruct H41 to use LLA_A for all\
    \ Internet traffic but to use\n   LLA_B as a next-hop while sending traffic to\
    \ ISP-B addresses.\n   The description of the mechanism above assumes SADR support\
    \ by the\n   first-hop routers as well as SERs.  However, a first-hop router can\n\
    \   still provide a less flexible version of this mechanism even without\n   implementing\
    \ SADR.  This could be done by providing configuration\n   knobs on the first-hop\
    \ router that allow it to generate different\n   link-local addresses and to send\
    \ individual RAs for each prefix.\n   The mechanism described above relies on\
    \ Rule 5.5 of the default\n   source address selection algorithm defined in [RFC6724].\
    \  [RFC8028]\n   states that \"A host SHOULD select default routers for each prefix\
    \ it\n   is assigned an address in.\"  It also recommends that hosts should\n\
    \   implement Rule 5.5. of [RFC6724].  Hosts following the\n   recommendations\
    \ specified in [RFC8028] therefore should be able to\n   benefit from the solution\
    \ described in this document.  No standards\n   need to be updated in regards\
    \ to host behavior.\n"
- title: 6.2.3.  Controlling Default Source Address Selection with ICMPv6
  contents:
  - "6.2.3.  Controlling Default Source Address Selection with ICMPv6\n   We now discuss\
    \ how one might use ICMPv6 to implement the routing\n   policy to send traffic\
    \ destined for H101 out the uplink to ISP-A,\n   even when uplinks to both ISPs\
    \ are working.  If H31 started sending\n   traffic to H101 with S=2001:db8:0:b010::31\
    \ and\n   D=2001:db8:0:1234::101, it would be routed through SER-b1 and out the\n\
    \   uplink to ISP-B.  SERb1 could recognize that this traffic is not\n   following\
    \ the desired routing policy and react by sending an ICMPv6\n   message back to\
    \ H31.\n   In this example, we could arrange things so that SERb1 drops the\n\
    \   packet with S=2001:db8:0:b010::31 and D=2001:db8:0:1234::101, and\n   then\
    \ sends to H31 an ICMPv6 Destination Unreachable message with Code\n   5 (Source\
    \ address failed ingress/egress policy).  When H31 receives\n   this packet, it\
    \ would then be expected to try another source address\n   to reach the destination.\
    \  In this example, H31 would then send a\n   packet with S=2001:db8:0:a010::31\
    \ and D=2001:db8:0:1234::101, which\n   will reach SERa and be forwarded out the\
    \ uplink to ISP-A.\n   However, we would also want it to be the case that SERb1\
    \ does not\n   enforce this routing policy when the uplink from SERa to ISP-A\
    \ has\n   failed.  This could be accomplished by having SERa originate a\n   source-prefix-scoped\
    \ route for (S=2001:db8:0:a000::/52,\n   D=2001:db8:0:1234::/64), and have SERb1\
    \ monitor the presence of that\n   route.  If that route is not present (because\
    \ SERa has stopped\n   originating it), then SERb1 will not enforce the routing\
    \ policy, and\n   it will forward packets with S=2001:db8:0:b010::31 and\n   D=2001:db8:0:1234::101\
    \ out its uplink to ISP-B.\n   We can also use this source-prefix-scoped route\
    \ originated by SERa to\n   communicate the desired routing policy to SERb1. \
    \ We can define an\n   EXCLUSIVE flag to be advertised together with the IGP route\
    \ for\n   (S=2001:db8:0:a000::/52, D=2001:db8:0:1234::/64).  This would allow\n\
    \   SERa to communicate to SERb that SERb should reject traffic for\n   D=2001:db8:0:1234::/64\
    \ and respond with an ICMPv6 Destination\n   Unreachable Code 5 message, as long\
    \ as the route for\n   (S=2001:db8:0:a000::/52, D=2001:db8:0:1234::/64) is present.\
    \  The\n   definition of an EXCLUSIVE flag for SADR advertisements in IGPs would\n\
    \   require future standardization work.\n   Finally, if we are willing to extend\
    \ ICMPv6 to support this solution,\n   then we could create a mechanism for SERb1\
    \ to tell the host which\n   source address it should be using to successfully\
    \ forward packets\n   that meet the policy.  In its current form, when SERb1 sends\
    \ an\n   ICMPv6 Destination Unreachable Code 5 message, it is basically\n   saying,\
    \ \"This source address is wrong.  Try another source address.\"\n   In the absence\
    \ of a clear indication which address to try next, the\n   host will iterate over\
    \ all addresses assigned to the interface (e.g.,\n   various privacy addresses),\
    \ which would lead to significant delays\n   and degraded user experience.  It\
    \ would be better if the ICMPv6\n   message could say, \"This source address is\
    \ wrong.  Instead use a\n   source address in S=2001:db8:0:a000::/52\".\n   However,\
    \ using ICMPv6 for signaling source address information back\n   to hosts introduces\
    \ new challenges.  Most routers currently have\n   software or hardware limits\
    \ on generating ICMP messages.  A site\n   administrator deploying a solution\
    \ that relies on the SERs generating\n   ICMP messages could try to improve the\
    \ performance of SERs for\n   generating ICMP messages.  However, in a large network,\
    \ it is still\n   likely that ICMP message generation limits will be reached.\
    \  As a\n   result, hosts would not receive ICMPv6 back, which in turn leads to\n\
    \   traffic blackholing and poor user experience.  To improve the\n   scalability\
    \ of ICMPv6-based signaling, hosts SHOULD cache the\n   preferred source address\
    \ (or prefix) for the given destination (which\n   in turn might cause issues\
    \ in the case of the corresponding ISP\n   uplink failure - see Section 6.3).\
    \  In addition, the same source\n   prefix SHOULD be used for other destinations\
    \ in the same /64 as the\n   original destination address.  The source prefix\
    \ to the destination\n   mapping SHOULD have a specific lifetime.  Expiration\
    \ of the lifetime\n   SHOULD trigger the source address selection algorithm again.\n\
    \   Using ICMPv6 Destination Unreachable Messages with Code 5 to\n   influence\
    \ source address selection introduces some security\n   challenges, which are\
    \ discussed in Section 10.\n   As currently standardized in [RFC4443], the ICMPv6\
    \ Destination\n   Unreachable Message with Code 5 would allow for the iterative\n\
    \   approach to retransmitting packets using different source addresses.\n   As\
    \ currently defined, the ICMPv6 message does not provide a mechanism\n   to communicate\
    \ information about which source prefix should be used\n   for a retransmitted\
    \ packet.  The current document does not define\n   such a mechanism, but it might\
    \ be a useful extension to define in a\n   different document.  However, this\
    \ approach has some security\n   implications, such as an ability for an attacker\
    \ to send spoofed\n   ICMPv6 messages to signal an invalid/unreachable source\
    \ prefix,\n   causing a DoS-type attack.\n"
- title: 6.2.4.  Summary of Methods for Controlling Default Source Address
  contents:
  - "6.2.4.  Summary of Methods for Controlling Default Source Address\n        Selection\
    \ to Implement Routing Policy\n   So to summarize this section, we have looked\
    \ at three methods for\n   implementing a simple routing policy where all traffic\
    \ for a given\n   destination on the Internet needs to use a particular ISP, even\
    \ when\n   the uplinks to both ISPs are working.\n   The default source address\
    \ selection policy cannot distinguish\n   between the source addresses needed\
    \ to enforce this policy, so a non-\n   default policy table using associating\
    \ source and destination\n   prefixes using label values would need to be installed\
    \ on each host.\n   A mechanism exists for DHCPv6 to distribute a non-default\
    \ policy\n   table, but such solution would heavily rely on DHCPv6 support by\
    \ the\n   host operating system.  Moreover, there is no mechanism to translate\n\
    \   desired routing/traffic engineering policies into policy tables on\n   DHCPv6\
    \ servers.  Therefore using DHCPv6 for controlling the address\n   selection policy\
    \ table is not recommended and SHOULD NOT be used.\n   At the same time, Router\
    \ Advertisements provide a reliable mechanism\n   to influence the source address\
    \ selection process via PIO, RIO, and\n   default router preferences.  As all\
    \ those options have been\n   standardized by the IETF and are supported by various\
    \ operating\n   systems, no changes are required on hosts.  First-hop routers\
    \ in the\n   enterprise network need to be capable of sending different RAs for\n\
    \   different SLAAC prefixes (either based on scoped forwarding tables or\n  \
    \ based on preconfigured policies).\n   SERs can enforce the routing policy by\
    \ sending ICMPv6 Destination\n   Unreachable messages with Code 5 (Source address\
    \ failed ingress/\n   egress policy) for traffic sent with the wrong source address.\
    \  The\n   policy distribution could be automated by defining an EXCLUSIVE flag\n\
    \   for the source-prefix-scoped route, which could then be set on the\n   SER\
    \ that originates the route.  As ICMPv6 message generation can be\n   rate limited\
    \ on routers, it SHOULD NOT be used as the only mechanism\n   to influence source\
    \ address selection on hosts.  While hosts SHOULD\n   select the correct source\
    \ address for a given destination, the\n   network SHOULD signal any source address\
    \ issues back to hosts using\n   ICMPv6 error messages.\n"
- title: 6.3.  Selecting Default Source Address When One Uplink Has Failed
  contents:
  - "6.3.  Selecting Default Source Address When One Uplink Has Failed\n   Now we\
    \ discuss whether DHCPv6, Neighbor Discovery Router\n   Advertisements, and ICMPv6\
    \ can help a host choose the right source\n   address when an uplink to one of\
    \ the ISPs has failed.  Again we look\n   at the scenario in Figure 3.  This time\
    \ we look at traffic from H31\n   destined for external host H501 at D=2001:db8:0:5678::501.\
    \  We\n   initially assume that the uplink from SERa to ISP-A is working and\n\
    \   that the uplink from SERb1 to ISP-B is working.\n   We assume there is no\
    \ particular routing policy desired, so H31 is\n   free to send packets with S=2001:db8:0:a010::31\
    \ or\n   S=2001:db8:0:b010::31 and have them delivered to H501.  For this\n  \
    \ example, we assume that H31 has chosen S=2001:db8:0:b010::31 so that\n   the\
    \ packets exit via SERb to ISP-B.  Now we see what happens when the\n   link from\
    \ SERb1 to ISP-B fails.  How should H31 learn that it needs\n   to start sending\
    \ packets to H501 with S=2001:db8:0:a010::31 in order\n   to start using the uplink\
    \ to ISP-A?  We need to do this in a way that\n   doesn't prevent H31 from still\
    \ sending packets with\n   S=2001:db8:0:b010::31 in order to reach H61 at D=2001:db8:0:6666::61.\n"
- title: 6.3.1.  Controlling Default Source Address Selection with DHCPv6
  contents:
  - "6.3.1.  Controlling Default Source Address Selection with DHCPv6\n   For this\
    \ example, we assume that the site network in Figure 3 has a\n   centralized DHCP\
    \ server and that all routers act as DHCP relay\n   agents.  We assume that both\
    \ of the addresses assigned to H31 were\n   assigned via DHCP.\n   We could try\
    \ to have the DHCP server monitor the state of the uplink\n   from SERb1 to ISP-B\
    \ in some manner and then tell H31 that it can no\n   longer use S=2001:db8:0:b010::31\
    \ by setting its valid lifetime to\n   zero.  The DHCP server could initiate this\
    \ process by sending a\n   Reconfigure message to H31 as described in Section\
    \ 18.3 of [RFC8415].\n   Or the DHCP server can assign addresses with short lifetimes\
    \ in order\n   to force clients to renew them often.\n   This approach would prevent\
    \ H31 from using S=2001:db8:0:b010::31 to\n   reach a host on the Internet.  However,\
    \ it would also prevent H31\n   from using S=2001:db8:0:b010::31 to reach H61\
    \ at\n   D=2001:db8:0:6666::61, which is not desirable.\n   Another potential\
    \ approach is to have the DHCP server monitor the\n   uplink from SERb1 to ISP-B\
    \ and control the choice of source address\n   on H31 by updating its address\
    \ selection policy table via the\n   mechanism in [RFC7078].  The DHCP server\
    \ could initiate this process\n   by sending a Reconfigure message to H31.  Note\
    \ that [RFC8415]\n   requires that Reconfigure messages use DHCP authentication.\
    \  DHCP\n   authentication could be avoided by using short address lifetimes to\n\
    \   force clients to send Renew messages to the server often.  If the\n   host\
    \ does not obtain its IP addresses from the DHCP server, then it\n   would need\
    \ to use the Information Refresh Time option defined in\n   [RFC8415].\n   If\
    \ the following policy table can be installed on H31 after the\n   failure of\
    \ the uplink from SERb1, then the desired routing behavior\n   should be achieved\
    \ based on source and destination prefix being\n   matched with label values.\n\
    \   Prefix                 Precedence       Label\n   ::/0                   50\
    \               44\n   2001:db8:0:a000::/52   50               44\n   2001:db8:0:6666::/64\
    \   50               55\n   2001:db8:0:b000::/52   50               55\n     \
    \  Figure 10: Policy Table Needed on Failure of Uplink from SERb1\n   The described\
    \ solution has a number of significant drawbacks, some of\n   them already discussed\
    \ in Section 6.2.1.\n   *  DHCPv6 support is not required for an IPv6 host, and\
    \ there are\n      operating systems that do not support DHCPv6.  Besides that,\
    \ it\n      does not appear that [RFC7078] has been widely implemented on host\n\
    \      operating systems.\n   *  [RFC7078] does not clearly specify this kind\
    \ of a dynamic use case\n      in which the address selection policy needs to\
    \ be updated quickly\n      in response to the failure of a link.  In a large\
    \ network, it\n      would present scalability issues as many hosts need to be\n\
    \      reconfigured in a very short period of time.\n   *  Updating DHCPv6 server\
    \ configuration each time an ISP's uplink\n      changes its state introduces\
    \ some scalability issues, especially\n      for mid/large distributed-scale enterprise\
    \ networks.  In addition\n      to that, the policy table needs to be manually\
    \ configured by\n      administrators, which makes that solution prone to human\
    \ error.\n   *  No mechanism exists for making DHCPv6 servers aware of network\n\
    \      topology/routing changes in the network.  In general, having\n      DHCPv6\
    \ servers monitor network-related events sounds like a bad\n      idea as it requires\
    \ completely new functionality beyond the scope\n      of the DHCPv6 role.\n"
- title: 6.3.2.  Controlling Default Source Address Selection with Router
  contents:
  - "6.3.2.  Controlling Default Source Address Selection with Router\n        Advertisements\n\
    \   The same mechanism as discussed in Section 6.2.2 can be used to\n   control\
    \ the source address selection in the case of an uplink\n   failure.  If a particular\
    \ prefix should not be used as a source for\n   any destination, then the router\
    \ needs to send an RA with the\n   Preferred Lifetime field for that prefix set\
    \ to zero.\n   Let's consider a scenario in which all uplinks are operational,\
    \ and\n   H41 receives two different RAs from R3: one from LLA_A with a PIO for\n\
    \   2001:db8:0:a020::/64 and the default router preference set to 11\n   (low),\
    \ and another one from LLA_B with a PIO for\n   2001:db8:0:a020::/64, the default\
    \ router preference set to 01 (high),\n   and a RIO for 2001:db8:0:6666::/64.\
    \  As a result, H41 uses\n   2001:db8:0:b020::41 as a source address for all Internet\
    \ traffic, and\n   those packets are sent by SERs to ISP-B.  If SERb1's uplink\
    \ to ISP-B\n   fails, the desired behavior is that H41 stops using\n   2001:db8:0:b020::41\
    \ as a source address for all destinations but H61.\n   To achieve that, R3 should\
    \ react to SERb1's uplink failure (which\n   could be detected as the disappearance\
    \ of scoped route\n   (S=2001:db8:0:b000::/52, D=::/0)) by withdrawing itself\
    \ as a default\n   router.  R3 sends a new RA from LLA_B with the Router Lifetime\
    \ value\n   set to zero (which means that it should not be used as the default\n\
    \   router).  That RA still contains a PIO for 2001:db8:0:b020::/64 (for\n   SLAAC\
    \ purposes) and a RIO for 2001:db8:0:6666::/64 so that H41 can\n   reach H61 using\
    \ LLA_B as a next-hop and 2001:db8:0:b020::41 as a\n   source address.  For all\
    \ traffic following the default route, LLA_A\n   will be used as a next-hop and\
    \ 2001:db8:0:a020::41 as a source\n   address.\n   If all of the uplinks to ISP-B\
    \ have failed, source addresses from\n   ISP-B address space should not be used.\
    \  In such a failure scenario,\n   the forwarding table scoped S=2001:db8:0:b000::/52\
    \ contains no\n   entries, indicating that R3 can instruct hosts to stop using\
    \ source\n   addresses from 2001:db8:0:b000::/52 by sending RAs containing PIOs\n\
    \   with Preferred Lifetime values set to zero.\n"
- title: 6.3.3.  Controlling Default Source Address Selection with ICMPv6
  contents:
  - "6.3.3.  Controlling Default Source Address Selection with ICMPv6\n   Now we look\
    \ at how ICMPv6 messages can provide information back to\n   H31.  We assume again\
    \ that, at the time of the failure, H31 is\n   sending packets to H501 using (S=2001:db8:0:b010::31,\n\
    \   D=2001:db8:0:5678::501).  When the uplink from SERb1 to ISP-B fails,\n   SERb1\
    \ would stop originating its source-prefix-scoped route for the\n   default destination\
    \ (S=2001:db8:0:b000::/52, D=::/0) as well as its\n   unscoped default destination\
    \ route.  With these routes no longer in\n   the IGP, traffic with (S=2001:db8:0:b010::31,\
    \ D=2001:db8:0:5678::501)\n   would end up at SERa based on the unscoped default\
    \ destination route\n   being originated by SERa.  Since that traffic has the\
    \ wrong source\n   address to be forwarded to ISP-A, SERa would drop it and send\
    \ a\n   Destination Unreachable message with Code 5 (Source address failed\n \
    \  ingress/egress policy) back to H31.  H31 would then know to use\n   another\
    \ source address for that destination and would try with\n   (S=2001:db8:0:a010::31,\
    \ D=2001:db8:0:5678::501).  This would be\n   forwarded to SERa based on the source-prefix-scoped\
    \ default\n   destination route still being originated by SERa, and SERa would\n\
    \   forward it to ISP-A.  As discussed above, if we are willing to extend\n  \
    \ ICMPv6, SERa can even tell H31 what source address it should use to\n   reach\
    \ that destination.  The expected host behavior has been\n   discussed in Section\
    \ 6.2.3.  Using ICMPv6 would have the same\n   scalability/rate limiting issues\
    \ that are discussed in Section 6.2.3.\n   An ISP-B uplink failure immediately\
    \ makes source addresses from\n   2001:db8:0:b000::/52 unsuitable for external\
    \ communication and might\n   trigger a large number of ICMPv6 packets being sent\
    \ to hosts in that\n   subnet.\n"
- title: 6.3.4.  Summary of Methods for Controlling Default Source Address
  contents:
  - "6.3.4.  Summary of Methods for Controlling Default Source Address\n        Selection\
    \ on the Failure of an Uplink\n   It appears that DHCPv6 is not particularly well\
    \ suited to quickly\n   changing the source address used by a host when an uplink\
    \ fails,\n   which eliminates DHCPv6 from the list of potential solutions.  On\
    \ the\n   other hand, Router Advertisements provide a reliable mechanism to\n\
    \   dynamically provide hosts with a list of valid prefixes to use as\n   source\
    \ addresses as well as to prevent the use of particular\n   prefixes.  While no\
    \ additional new features are required to be\n   implemented on hosts, routers\
    \ need to be able to send RAs based on\n   the state of scoped forwarding table\
    \ entries and to react to network\n   topology changes by sending RAs with particular\
    \ parameters set.\n   It seems that the use of ICMPv6 Destination Unreachable\
    \ messages\n   generated by the SER (or any SADR-capable) routers, together with\
    \ the\n   use of RAs to signal source address selection errors back to hosts,\n\
    \   has the potential to provide a support mechanism.  However,\n   scalability\
    \ issues may arise in large networks when topology suddenly\n   changes.  Therefore,\
    \ it is highly desirable that hosts are able to\n   select the correct source\
    \ address in the case of uplink failure, with\n   ICMPv6 being an additional mechanism\
    \ to signal unexpected failures\n   back to hosts.\n   The current behaviors of\
    \ different host operating systems upon\n   receipt of an ICMPv6 Destination Unreachable\
    \ message with Code 5\n   (Source address failed ingress/egress policy) is not\
    \ clear to the\n   authors.  Information from implementers, users, and testing\
    \ would be\n   quite helpful in evaluating this approach.\n"
- title: 6.4.  Selecting Default Source Address upon Failed Uplink Recovery
  contents:
  - "6.4.  Selecting Default Source Address upon Failed Uplink Recovery\n   The next\
    \ logical step is to look at the scenario when a failed uplink\n   on SERb1 to\
    \ ISP-B comes back up, so the hosts can start using source\n   addresses belonging\
    \ to 2001:db8:0:b000::/52 again.\n"
- title: 6.4.1.  Controlling Default Source Address Selection with DHCPv6
  contents:
  - "6.4.1.  Controlling Default Source Address Selection with DHCPv6\n   The mechanism\
    \ to use DHCPv6 to instruct the hosts (H31 in our\n   example) to start using\
    \ prefixes from ISP-B space (e.g.,\n   S=2001:db8:0:b010::31 for H31) to reach\
    \ hosts on the Internet is\n   quite similar to one discussed in Section 6.3.1\
    \ and shares the same\n   drawbacks.\n"
- title: 6.4.2.  Controlling Default Source Address Selection with Router
  contents:
  - "6.4.2.  Controlling Default Source Address Selection with Router\n        Advertisements\n\
    \   Let's look at the scenario discussed in Section 6.3.2.  If the\n   uplink(s)\
    \ failure caused the complete withdrawal of prefixes from the\n   2001:db8:0:b000::/52\
    \ address space by setting the Preferred Lifetime\n   value to zero, then the\
    \ recovery of the link should just trigger the\n   sending of a new RA with a\
    \ non-zero Preferred Lifetime.  In another\n   scenario discussed in Section 6.3.2,\
    \ the failure of the SERb1 uplink\n   to ISP-B leads to the disappearance of the\
    \ (S=2001:db8:0:b000::/52,\n   D=::/0) entry from the forwarding table scoped\
    \ to\n   S=2001:db8:0:b000::/52 and, in turn, causes R3 to send RAs with the\n\
    \   Router Lifetime set to zero from LLA_B.  The recovery of the SERb1\n   uplink\
    \ to ISP-B leads to the reappearance of the scoped forwarding\n   entry (S=2001:db8:0:b000::/52,\
    \ D=::/0).  That reappearance acts as a\n   signal for R3 to advertise itself\
    \ as a default router for ISP-B\n   address space domain (to send RAs from LLA_B\
    \ with non-zero Router\n   Lifetime).\n"
- title: 6.4.3.  Controlling Default Source Address Selection with ICMP
  contents:
  - "6.4.3.  Controlling Default Source Address Selection with ICMP\n   It looks like\
    \ ICMPv6 provides a rather limited functionality to\n   signal back to hosts that\
    \ particular source addresses have become\n   valid again.  Unless the changes\
    \ in the uplink specify a particular\n   (S,D) pair, hosts can keep using the\
    \ same source address even after\n   an ISP uplink has come back up.  For example,\
    \ after the uplink from\n   SERb1 to ISP-B had failed, H31 received ICMPv6 Code\
    \ 5 message (as\n   described in Section 6.3.3) and allegedly started using\n\
    \   (S=2001:db8:0:a010::31, D=2001:db8:0:5678::501) to reach H501.  Now\n   when\
    \ the SERb1 uplink comes back up, the packets with that (S,D) pair\n   are still\
    \ routed to SERa1 and sent to the Internet.  Therefore, H31\n   is not informed\
    \ that it should stop using 2001:db8:0:a010::31 and\n   start using 2001:db8:0:b010::31\
    \ again.  Unless SERa has a policy\n   configured to drop packets (S=2001:db8:0:a010::31,\n\
    \   D=2001:db8:0:5678::501) and send ICMPv6 back if the SERb1 uplink to\n   ISP-B\
    \ is up, H31 will be unaware of the network topology change and\n   keep using\
    \ S=2001:db8:0:a010::31 for Internet destinations, including\n   H51.\n   One\
    \ of the possible options may be using a scoped route with an\n   EXCLUSIVE flag\
    \ as described in Section 6.2.3.  SERa1 uplink recovery\n   would cause the (S=2001:db8:0:a000::/52,\
    \ D=2001:db8:0:1234::/64)\n   route to reappear in the routing table.  In the\
    \ absence of that,\n   route packets to H101 are sent to ISP-B (as ISP-A uplink\
    \ was down)\n   with source addresses from 2001:db8:0:b000::/52.  When the route\n\
    \   reappears, SERb1 rejects those packets and sends ICMPv6 back as\n   discussed\
    \ in Section 6.2.3.  Practically, it might lead to\n   scalability issues, which\
    \ have been already discussed in 6.2.3 and\n   6.4.3.\n"
- title: 6.4.4.  Summary of Methods for Controlling Default Source Address
  contents:
  - "6.4.4.  Summary of Methods for Controlling Default Source Address\n        Selection\
    \ upon Failed Uplink Recovery\n   Once again, DHCPv6 does not look like a reasonable\
    \ choice to\n   manipulate the source address selection process on a host in the\
    \ case\n   of network topology changes.  Using Router Advertisement provides the\n\
    \   flexible mechanism to dynamically react to network topology changes\n   (if\
    \ routers are able to use routing changes as a trigger for sending\n   out RAs\
    \ with specific parameters).  ICMPv6 could be considered as a\n   supporting mechanism\
    \ to signal incorrect source address back to\n   hosts, but it should not be considered\
    \ as the only mechanism to\n   control the address selection in multihomed environments.\n"
- title: 6.5.  Selecting Default Source Address When All Uplinks Have Failed
  contents:
  - "6.5.  Selecting Default Source Address When All Uplinks Have Failed\n   One particular\
    \ tricky case is a scenario when all uplinks have\n   failed.  In that case, there\
    \ is no valid source address to be used\n   for any external destinations when\
    \ it might be desirable to have\n   intra-site connectivity.\n"
- title: 6.5.1.  Controlling Default Source Address Selection with DHCPv6
  contents:
  - "6.5.1.  Controlling Default Source Address Selection with DHCPv6\n   From the\
    \ DHCPv6 perspective, uplinks failure should be treated as two\n   independent\
    \ failures and processed as described in Section 6.3.1.  At\n   this stage, it\
    \ is quite obvious that it would result in a quite\n   complicated policy table\
    \ that would need to be explicitly configured\n   by administrators and therefore\
    \ seems to be impractical.\n"
- title: 6.5.2.  Controlling Default Source Address Selection with Router
  contents:
  - "6.5.2.  Controlling Default Source Address Selection with Router\n        Advertisements\n\
    \   As discussed in Section 6.3.2, an uplink failure causes the scoped\n   default\
    \ entry to disappear from the scoped forwarding table and\n   triggers RAs with\
    \ zero Router Lifetimes.  Complete disappearance of\n   all scoped entries for\
    \ a given source prefix would cause the prefix\n   to be withdrawn from hosts\
    \ by setting the Preferred Lifetime value to\n   zero in the PIO.  If all uplinks\
    \ (SERa, SERb1 and SERb2) fail, hosts\n   either lose their default routers and/or\
    \ have no global IPv6\n   addresses to use as a source.  (Note that 'uplink failure'\
    \ might mean\n   'IPv6 connectivity failure with IPv4 still being reachable',\
    \ in which\n   case, hosts might fall back to IPv4 if there is IPv4 connectivity\
    \ to\n   destinations).  As a result, intra-site connectivity is broken.  One\n\
    \   of the possible ways to solve it is to use ULAs.\n   In addition to GUAs,\
    \ all hosts have ULA addresses assigned, and these\n   addresses are used for\
    \ intra-site communication even if there is no\n   GUA assigned to a host.  To\
    \ avoid accidental leaking of packets with\n   ULA sources, SADR-capable routers\
    \ SHOULD have a scoped forwarding\n   table for ULA source for internal routes\
    \ but MUST NOT have an entry\n   for D=::/0 in that table.  In the absence of\
    \ (S=ULA_Prefix; D=::/0),\n   first-hop routers will send dedicated RAs from a\
    \ unique link-local\n   source LLA_ULA with a PIO from ULA address space, a RIO\
    \ for the ULA\n   prefix, and Router Lifetime set to zero.  The behavior is consistent\n\
    \   with the situation when SERb1 lost the uplink to ISP-B (so there is\n   no\
    \ Internet connectivity from 2001:db8:0:b000::/52 sources), but\n   those sources\
    \ can be used to reach some specific destinations.  In\n   the case of ULA, there\
    \ is no Internet connectivity from ULA sources,\n   but they can be used to reach\
    \ other ULA destinations.  Note that ULA\n   usage could be particularly useful\
    \ if all ISPs assign prefixes via\n   DHCP prefix delegation.  In the absence\
    \ of ULAs, upon the failure of\n   all uplinks, hosts would lose all their GUAs\
    \ upon prefix-lifetime\n   expiration, which again makes intra-site communication\
    \ impossible.\n   It should be noted that Rule 5.5 (prefer a prefix advertised\
    \ by the\n   selected next-hop) takes precedence over the Rule 6 (prefer matching\n\
    \   label, which ensures that GUA source addresses are preferred over\n   ULAs\
    \ for GUA destinations).  Therefore if ULAs are used, the network\n   administrator\
    \ needs to ensure that, while the site has Internet\n   connectivity, hosts do\
    \ not select a router that advertises ULA\n   prefixes as their default router.\n"
- title: 6.5.3.  Controlling Default Source Address Selection with ICMPv6
  contents:
  - "6.5.3.  Controlling Default Source Address Selection with ICMPv6\n   In the case\
    \ of the failure of all uplinks, all SERs will drop\n   outgoing IPv6 traffic\
    \ and respond with ICMPv6 error messages.  In a\n   large network in which many\
    \ hosts attempt to reach Internet\n   destinations, the SERs need to generate\
    \ an ICMPv6 error for every\n   packet they receive from hosts, which presents\
    \ the same scalability\n   issues discussed in Section 6.3.3.\n"
- title: 6.5.4.  Summary of Methods for Controlling Default Source Address
  contents:
  - "6.5.4.  Summary of Methods for Controlling Default Source Address\n        Selection\
    \ When All Uplinks Failed\n   Again, combining SADR with Router Advertisements\
    \ seems to be the most\n   flexible and scalable way to control the source address\
    \ selection on\n   hosts.\n"
- title: 6.6.  Summary of Methods for Controlling Default Source Address
  contents:
  - "6.6.  Summary of Methods for Controlling Default Source Address\n      Selection\n\
    \   This section summarizes the scenarios and options discussed above.\n   While\
    \ DHCPv6 allows administrators to manipulate source address\n   selection policy\
    \ tables, this method has a number of significant\n   disadvantages that eliminate\
    \ DHCPv6 from a list of potential\n   solutions:\n   1.  It requires hosts to\
    \ support DHCPv6 and its extension [RFC7078].\n   2.  A DHCPv6 server needs to\
    \ monitor network state and detect routing\n       changes.\n   3.  The use of\
    \ policy tables requires manual configuration and might\n       be extremely complicated,\
    \ especially in the case of a distributed\n       network in which a large number\
    \ of remote sites are being served\n       by centralized DHCPv6 servers.\n  \
    \ 4.  Network topology/routing policy changes could trigger\n       simultaneous\
    \ reconfiguration of large number of hosts, which\n       presents serious scalability\
    \ issues.\n   The use of Router Advertisements to influence the source address\n\
    \   selection on hosts seem to be the most reliable, flexible, and\n   scalable\
    \ solution.  It has the following benefits:\n   1.  No new (non-standard) functionality\
    \ needs to be implemented on\n       hosts (except for RIO support [RFC4191],\
    \ which is not widely\n       implemented at the time of this writing).\n   2.\
    \  No changes in RA format.\n   3.  Routers can react to routing table changes\
    \ by sending RAs, which\n       would minimize the failover time in the case of\
    \ network topology\n       changes.\n   4.  Information required for source address\
    \ selection is broadcast to\n       all affected hosts in the case of a topology\
    \ change event, which\n       improves the scalability of the solution (compared\
    \ to DHCPv6\n       reconfiguration or ICMPv6 error messages).\n   To fully benefit\
    \ from the RA-based solution, first-hop routers need\n   to implement SADR, belong\
    \ to the SADR domain, and be able to send\n   dedicated RAs per scoped forwarding\
    \ table as discussed above,\n   reacting to network changes by sending new RAs.\
    \  It should be noted\n   that the proposed solution would work even if first-hop\
    \ routers are\n   not SADR-capable but still able to send individual RAs for each\
    \ ISP\n   prefix and react to topology changes as discussed above (e.g., via\n\
    \   configuration knobs).\n   The RA-based solution relies heavily on hosts correctly\
    \ implementing\n   the default address selection algorithm as defined in [RFC6724].\n\
    \   While the basic, and the most common, multihoming scenario (two or\n   more\
    \ Internet uplinks, no 'walled gardens') would work for any host\n   supporting\
    \ the minimal implementation of [RFC6724], more complex use\n   cases (such as\
    \ 'walled garden' and other scenarios when some ISP\n   resources can only be\
    \ reached from that ISP address space) require\n   that hosts support Rule 5.5\
    \ of the default address selection\n   algorithm.  There is some evidence that\
    \ not all host OSes have that\n   rule implemented currently.  However, it should\
    \ be noted that\n   [RFC8028] states that Rule 5.5 should be implemented.\n  \
    \ The ICMPv6 Code 5 error message SHOULD be used to complement an RA-\n   based\
    \ solution to signal incorrect source address selection back to\n   hosts, but\
    \ it SHOULD NOT be considered as the standalone solution.\n   To prevent scenarios\
    \ when hosts in multihomed environments\n   incorrectly identify on-link/off-link\
    \ destinations, hosts SHOULD\n   treat ICMPv6 Redirects as discussed in [RFC8028].\n"
- title: 6.7.  Solution Limitations
  contents:
  - '6.7.  Solution Limitations

    '
- title: 6.7.1.  Connections Preservation
  contents:
  - "6.7.1.  Connections Preservation\n   The proposed solution is not designed to\
    \ preserve connection state in\n   the case of an uplink failure.  When all uplinks\
    \ to an ISP go down,\n   all transport connections established to/from that ISP\
    \ address space\n   will be interrupted (unless the transport protocol has specific\n\
    \   multihoming support).  That behavior is similar to the scenario of\n   IPv4\
    \ multihoming with NAT when an uplink failure causes all\n   connections to be\
    \ NATed to completely different public IPv4\n   addresses.  While it does sound\
    \ suboptimal, it is determined by the\n   nature of PA address space: if all uplinks\
    \ to the particular ISP have\n   failed, there is no path for the ingress traffic\
    \ to reach the site,\n   and the egress traffic is supposed to be dropped by the\
    \ ingress\n   filters [BCP38].  The only potential way to overcome this limitation\n\
    \   would be to run BGP with all ISPs and to advertise all site prefixes\n   to\
    \ all uplinks - a solution that shares all the drawbacks of using\n   the PI address\
    \ space without sharing its benefits.  Networks willing\n   and capable of running\
    \ BGP and using PI are out of scope of this\n   document.\n   It should be noted\
    \ that in the case of IPv4 NAT-based multihoming,\n   uplink recovery could cause\
    \ connection interruptions as well (unless\n   packet forwarding is integrated\
    \ with the tracking of existing NAT\n   sessions so that the egress interface\
    \ for the existing sessions is\n   not changed).  However, the proposed solution\
    \ has the benefit of\n   preserving the existing sessions during and after the\
    \ restoration of\n   the failed uplink.  Unlike the uplink failure event, which\
    \ causes all\n   addresses from the affected prefix to be deprecated, the recovery\n\
    \   would just add new, preferred addresses to a host without making any\n   addresses\
    \ unavailable.  Therefore, connections established to and\n   from those addresses\
    \ do not have to be interrupted.\n   While it's desirable for active connections\
    \ to survive ISP failover\n   events, such events affect the reachability of IP\
    \ addresses assigned\n   to hosts in sites using PA address space.  Unless the\
    \ transport (or\n   higher-level protocols) is capable of surviving the host renumbering,\n\
    \   the active connections will be broken.  The proposed solution focuses\n  \
    \ on minimizing the impact of failover on new connections and on\n   multipath-aware\
    \ protocols.\n   Another way to preserve connection state is to use multipath\n\
    \   transport as discussed in Section 8.3.\n"
- title: 6.8.  Other Configuration Parameters
  contents:
  - '6.8.  Other Configuration Parameters

    '
- title: 6.8.1.  DNS Configuration
  contents:
  - "6.8.1.  DNS Configuration\n   In a multihomed environment, each ISP might provide\
    \ their own list of\n   DNS servers.  For example, in the topology shown in Figure\
    \ 3, ISP-A\n   might provide H51 2001:db8:0:5555::51 as a recursive DNS server,\n\
    \   while ISP-B might provide H61 2001:db8:0:6666::61 as a recursive DNS\n   server\
    \ (RDNSS).  [RFC8106] defines IPv6 Router Advertisement options\n   to allow IPv6\
    \ routers to advertise a list of RDNSS addresses and a\n   DNS Search List (DNSSL)\
    \ to IPv6 hosts.  Using RDNSS together with\n   'scoped' RAs as described above\
    \ would allow a first-hop router (R3 in\n   Figure 3) to send DNS server addresses\
    \ and search lists provided by\n   each ISP (or the corporate DNS server addresses\
    \ if the enterprise is\n   running its own DNS servers.  As discussed below, the\
    \ DNS split-\n   horizon problem is too hard to solve without running a local\
    \ DNS\n   server).\n   As discussed in Section 6.5.2, failure of all ISP uplinks\
    \ would cause\n   deprecation of all addresses assigned to a host from the address\n\
    \   space of all ISPs.  If any intra-site IPv6 connectivity is still\n   desirable\
    \ (most likely to be the case for any mid/large-scale\n   network), then ULAs\
    \ should be used as discussed in Section 6.5.2.  In\n   such a scenario, the enterprise\
    \ network should run its own recursive\n   DNS server(s) and provide its ULA addresses\
    \ to hosts via RDNSS in RAs\n   sent for ULA-scoped forwarding table as described\
    \ in Section 6.5.2.\n   There are some scenarios in which the final outcome of\
    \ the name\n   resolution might be different depending on:\n   *  which DNS server\
    \ is used;\n   *  which source address the client uses to send a DNS query to\
    \ the\n      server (DNS split horizon).\n   There is no way currently to instruct\
    \ a host to use a particular DNS\n   server from the configured servers list for\
    \ resolving a particular\n   name.  Therefore, it does not seem feasible to solve\
    \ the problem of\n   DNS server selection on the host (it should be noted that\
    \ this\n   particular issue is protocol-agnostic and happens for IPv4 as well).\n\
    \   In such a scenario, it is recommended that the enterprise run its own\n  \
    \ local recursive DNS server.\n   To influence host source address selection for\
    \ packets sent to a\n   particular DNS server, the following requirements must\
    \ be met:\n   *  The host supports RIO as defined in [RFC4191].\n   *  The routers\
    \ send RIOs for routes to DNS server addresses.\n   For example, if it is desirable\
    \ that host H31 reaches the ISP-A DNS\n   server H51 2001:db8:0:5555::51 using\
    \ its source address\n   2001:db8:0:a010::31, then both R1 and R2 should send\
    \ RIOs containing\n   the route to 2001:db8:0:5555::51 (or covering route) in\
    \ their\n   'scoped' RAs, containing LLA_A as the default router address and the\n\
    \   PIO for SLAAC prefix 2001:db8:0:a010::/64.  In that case, host H31\n   (if\
    \ it supports Rule 5.5) would select LLA_A as a next-hop and then\n   choose 2001:db8:0:a010::31\
    \ as the source address for packets to the\n   DNS server.\n   It should be noted\
    \ that [RFC6106] explicitly prohibits using DNS\n   information if the RA Router\
    \ Lifetime has expired:\n   |  An RDNSS address or a DNSSL domain name MUST be\
    \ used only as long\n   |  as both the RA router Lifetime (advertised by a Router\n\
    \   |  Advertisement message) and the corresponding option Lifetime have\n   |\
    \  not expired.\n   Therefore, hosts might ignore RDNSS information provided in\
    \ ULA-\n   scoped RAs, as those RAs would have Router Lifetime values set to\n\
    \   zero.  However, [RFC8106], which obsoletes RFC 6106, has removed that\n  \
    \ requirement.\n   As discussed above, the DNS split-horizon problem and the selection\n\
    \   of the correct DNS server in a multihomed environment are not easy\n   problems\
    \ to solve.  The proper solution would require hosts to\n   support the concept\
    \ of multiple provisioning domains (PvD, a set of\n   configuration information\
    \ associated with a network, [RFC7556]).\n"
- title: 7.  Deployment Considerations
  contents:
  - "7.  Deployment Considerations\n   The solution described in this document requires\
    \ certain mechanisms\n   to be supported by the network infrastructure and hosts.\
    \  It requires\n   some routers in the enterprise site to support some form of\
    \ SADR.  It\n   also requires hosts to be able to learn when the uplink to an\
    \ ISP\n   changes its state so that the hosts can use appropriate source\n   addresses.\
    \  Ongoing work to create mechanisms to accomplish this are\n   discussed in this\
    \ document, but they are still works in progress.\n"
- title: 7.1.  Deploying SADR Domain
  contents:
  - "7.1.  Deploying SADR Domain\n   The proposed solution does not prescribe particular\
    \ details regarding\n   deploying an SADR domain within a multihomed enterprise\
    \ network.\n   However the following guidelines could be applied:\n   *  The SADR\
    \ domain is usually limited by the multihomed site border.\n   *  The minimal\
    \ deployable scenario requires enabling SADR on all SERs\n      and including\
    \ them into a single SADR domain.\n   *  As discussed in Section 4.2, extending\
    \ the connected SADR domain\n      beyond the SERs to the first-hop routers can\
    \ produce more\n      efficient forwarding paths and allow the network to fully\
    \ benefit\n      from SADR.  It would also simplify the operation of the SADR\n\
    \      domain.\n   *  During the incremental SADR domain expansion from the SERs\
    \ down\n      towards first-hop routers, it's important to ensure that, at any\n\
    \      given moment, all SADR-capable routers within the domain are\n      logically\
    \ connected (see Section 5).\n"
- title: 7.2.  Hosts-Related Considerations
  contents:
  - "7.2.  Hosts-Related Considerations\n   The solution discussed in this document\
    \ relies on the default address\n   selection algorithm, Rule 5.5 [RFC6724]. \
    \ While [RFC6724] considers\n   this rule as optional, the more recent [RFC8028]\
    \ states that \"A host\n   SHOULD select default routers for each prefix it is\
    \ assigned an\n   address in.\"  It also recommends that hosts should implement\
    \ Rule\n   5.5. of [RFC6724].  Therefore, while hosts compliant with RFC 8028\n\
    \   already have a mechanism to learn about state changes to ISP uplinks\n   and\
    \ to select the source addresses accordingly, many hosts do not\n   support such\
    \ a mechanism yet.\n   It should be noted that a multihomed enterprise network\
    \ utilizing\n   multiple ISP prefixes can be considered as a typical multiple\n\
    \   provisioning domain (mPvD) scenario, as described in [RFC7556].  This\n  \
    \ document defines a way for the network to provide the PvD information\n   to\
    \ hosts indirectly, using the existing mechanisms.  At the same\n   time, [PROV-DOMAINS]\
    \ takes one step further and describes a\n   comprehensive mechanism for hosts\
    \ to discover the whole set of\n   configuration information associated with different\
    \ PvDs/ISPs.\n   [PROV-DOMAINS] complements this document in terms of enabling\
    \ hosts\n   to learn about ISP uplink states and to select the corresponding\n\
    \   source addresses.\n"
- title: 8.  Other Solutions
  contents:
  - '8.  Other Solutions

    '
- title: 8.1.  Shim6
  contents:
  - "8.1.  Shim6\n   The Shim6 protocol [RFC5533], specified by the Shim6 working\
    \ group,\n   allows a host at a multihomed site to communicate with an external\n\
    \   host and to exchange information about possible source and\n   destination\
    \ address pairs that they can use to communicate.  The\n   Shim6 working group\
    \ also specified the REAchability Protocol (REAP)\n   [RFC5534] to detect failures\
    \ in the path between working address\n   pairs and to find new working address\
    \ pairs.  A fundamental\n   requirement for Shim6 is that both internal and external\
    \ hosts need\n   to support Shim6.  That is, both the host internal to the multihomed\n\
    \   site and the host external to the multihomed site need to support\n   Shim6\
    \ in order for there to be any benefit for the internal host to\n   run Shim6.\
    \  The Shim6 protocol specification was published in 2009,\n   but it has not\
    \ been widely implemented.  Therefore Shim6 is not\n   considered as a viable\
    \ solution for enterprise multihoming.\n"
- title: 8.2.  IPv6-to-IPv6 Network Prefix Translation
  contents:
  - "8.2.  IPv6-to-IPv6 Network Prefix Translation\n   IPv6-to-IPv6 Network Prefix\
    \ Translation (NPTv6) [RFC6296] is not the\n   focus of this document.  NPTv6\
    \ suffers from the same fundamental\n   issue as any other approaches to address\
    \ translation: it breaks end-\n   to-end connectivity.  Therefore NPTv6 is not\
    \ considered as a\n   desirable solution, and this document intentionally focuses\
    \ on\n   solving the enterprise multihoming problem without any form of\n   address\
    \ translation.\n   With increasing interest and ongoing work in bringing path\
    \ awareness\n   to transport- and application-layer protocols, hosts might be\
    \ able to\n   determine the properties of the various network paths and choose\n\
    \   among the paths that are available to them.  As selecting the correct\n  \
    \ source address is one of the possible mechanisms that path-aware\n   hosts may\
    \ utilize, address translation negatively affects hosts'\n   path-awareness, which\
    \ makes NTPv6 an even more undesirable solution.\n"
- title: 8.3.  Multipath Transport
  contents:
  - "8.3.  Multipath Transport\n   Using multipath transport (such as Multipath TCP\
    \ (MPTCP) [RFC6824] or\n   multipath capabilities in QUIC) might solve the problems\
    \ discussed in\n   Section 6 since a multipath transport would allow hosts to\
    \ use\n   multiple source addresses for a single connection and to switch\n  \
    \ between those source addresses when a particular address becomes\n   unavailable\
    \ or a new address is assigned to the host interface.\n   Therefore, if all hosts\
    \ in the enterprise network use only multipath\n   transport for all connections,\
    \ the signaling solution described in\n   Section 6 might not be needed (it should\
    \ be noted that Source Address\n   Dependent Routing would still be required to\
    \ deliver packets to the\n   correct uplinks).  At the time this document was\
    \ written, multipath\n   transport alone could not be considered a solution for\
    \ the problem of\n   selecting the source address in a multihomed environment.\
    \  There are\n   a significant number of hosts that do not use multipath transport\n\
    \   currently, and it seems unlikely that the situation will change in\n   the\
    \ foreseeable future (even if new releases of operating systems\n   support multipath\
    \ protocols, there will be a long tail of legacy\n   hosts).  The solution for\
    \ enterprise multihoming needs to work for\n   the least common denominator: hosts\
    \ without multipath transport\n   support.  In addition, not all protocols are\
    \ using multipath\n   transport.  While multipath transport would complement the\
    \ solution\n   described in Section 6, it could not be considered as a sole solution\n\
    \   to the problem of source address selection in multihomed\n   environments.\n\
    \   On the other hand, PA-based multihoming could provide additional\n   benefits\
    \ to multipath protocols, should those protocols be deployed\n   in the network.\
    \  Multipath protocols could leverage source address\n   selection to achieve\
    \ maximum path diversity (and potentially improved\n   performance).\n   Therefore,\
    \ the deployment of multipath protocols should not be\n   considered as an alternative\
    \ to the approach proposed in this\n   document.  Instead, both solutions complement\
    \ each other, so\n   deploying multipath protocols in a PA-based multihomed network\
    \ proves\n   mutually beneficial.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Section 6.2.3 discusses a mechanism for controlling\
    \ source address\n   selection on hosts using ICMPv6 messages.  Using ICMPv6 to\
    \ influence\n   source address selection allows an attacker to exhaust the list\
    \ of\n   candidate source addresses on the host by sending spoofed ICMPv6 Code\n\
    \   5 for all prefixes known on the network (therefore preventing a\n   victim\
    \ from establishing communication with the destination host).\n   Another possible\
    \ attack vector is using ICMPv6 Destination\n   Unreachable Messages with Code\
    \ 5 to steer the egress traffic towards\n   the particular ISP, so the attacker\
    \ can benefit from their ability\n   doing traffic sniffing/interception in that\
    \ ISP network.\n   To prevent those attacks, hosts SHOULD verify that the original\n\
    \   packet header included in the ICMPv6 error message was actually sent\n   by\
    \ the host (to ensure that the ICMPv6 message was triggered by a\n   packet sent\
    \ by the host).\n   As ICMPv6 Destination Unreachable Messages with Code 5 could\
    \ be\n   originated by any SADR-capable router within the domain (or even come\n\
    \   from the Internet), the Generalized TTL Security Mechanism (GTSM)\n   [RFC5082]\
    \ cannot be applied.  Filtering such ICMPv6 messages at the\n   site border cannot\
    \ be recommended as it would break the legitimate\n   end-to-end error signaling\
    \ mechanism for which ICMPv6 was designed.\n   The security considerations of\
    \ using stateless address\n   autoconfiguration are discussed in [RFC4862].\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [BCP38]    Ferguson, P. and D. Senie, \"Network\
    \ Ingress Filtering:\n              Defeating Denial of Service Attacks which\
    \ employ IP Source\n              Address Spoofing\", BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n\
    \              May 2000, <https://www.rfc-editor.org/info/rfc2827>.\n   [RFC1918]\
    \  Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G.\n              J.,\
    \ and E. Lear, \"Address Allocation for Private\n              Internets\", BCP\
    \ 5, RFC 1918, DOI 10.17487/RFC1918,\n              February 1996, <https://www.rfc-editor.org/info/rfc1918>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC4191]\
    \  Draves, R. and D. Thaler, \"Default Router Preferences and\n              More-Specific\
    \ Routes\", RFC 4191, DOI 10.17487/RFC4191,\n              November 2005, <https://www.rfc-editor.org/info/rfc4191>.\n\
    \   [RFC4193]  Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n     \
    \         Addresses\", RFC 4193, DOI 10.17487/RFC4193, October 2005,\n       \
    \       <https://www.rfc-editor.org/info/rfc4193>.\n   [RFC4291]  Hinden, R. and\
    \ S. Deering, \"IP Version 6 Addressing\n              Architecture\", RFC 4291,\
    \ DOI 10.17487/RFC4291, February\n              2006, <https://www.rfc-editor.org/info/rfc4291>.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n       \
    \       Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", STD 89,\n              RFC 4443, DOI 10.17487/RFC4443,\
    \ March 2006,\n              <https://www.rfc-editor.org/info/rfc4443>.\n   [RFC4861]\
    \  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n    \
    \          Address Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4862>.\n\
    \   [RFC6106]  Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,\n       \
    \       \"IPv6 Router Advertisement Options for DNS Configuration\",\n       \
    \       RFC 6106, DOI 10.17487/RFC6106, November 2010,\n              <https://www.rfc-editor.org/info/rfc6106>.\n\
    \   [RFC6296]  Wasserman, M. and F. Baker, \"IPv6-to-IPv6 Network Prefix\n   \
    \           Translation\", RFC 6296, DOI 10.17487/RFC6296, June 2011,\n      \
    \        <https://www.rfc-editor.org/info/rfc6296>.\n   [RFC6724]  Thaler, D.,\
    \ Ed., Draves, R., Matsumoto, A., and T. Chown,\n              \"Default Address\
    \ Selection for Internet Protocol Version 6\n              (IPv6)\", RFC 6724,\
    \ DOI 10.17487/RFC6724, September 2012,\n              <https://www.rfc-editor.org/info/rfc6724>.\n\
    \   [RFC7078]  Matsumoto, A., Fujisaki, T., and T. Chown, \"Distributing\n   \
    \           Address Selection Policy Using DHCPv6\", RFC 7078,\n             \
    \ DOI 10.17487/RFC7078, January 2014,\n              <https://www.rfc-editor.org/info/rfc7078>.\n\
    \   [RFC7556]  Anipko, D., Ed., \"Multiple Provisioning Domain\n             \
    \ Architecture\", RFC 7556, DOI 10.17487/RFC7556, June 2015,\n              <https://www.rfc-editor.org/info/rfc7556>.\n\
    \   [RFC8028]  Baker, F. and B. Carpenter, \"First-Hop Router Selection by\n \
    \             Hosts in a Multi-Prefix Network\", RFC 8028,\n              DOI\
    \ 10.17487/RFC8028, November 2016,\n              <https://www.rfc-editor.org/info/rfc8028>.\n\
    \   [RFC8106]  Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,\n       \
    \       \"IPv6 Router Advertisement Options for DNS Configuration\",\n       \
    \       RFC 8106, DOI 10.17487/RFC8106, March 2017,\n              <https://www.rfc-editor.org/info/rfc8106>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8415]  Mrugalski,\
    \ T., Siodelski, M., Volz, B., Yourtchenko, A.,\n              Richardson, M.,\
    \ Jiang, S., Lemon, T., and T. Winters,\n              \"Dynamic Host Configuration\
    \ Protocol for IPv6 (DHCPv6)\",\n              RFC 8415, DOI 10.17487/RFC8415,\
    \ November 2018,\n              <https://www.rfc-editor.org/info/rfc8415>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [DST-SRC-RTG]\n              Lamparter, D.\
    \ and A. Smirnov, \"Destination/Source\n              Routing\", Work in Progress,\
    \ Internet-Draft, draft-ietf-\n              rtgwg-dst-src-routing-07, 10 March\
    \ 2019,\n              <https://tools.ietf.org/html/draft-ietf-rtgwg-dst-src-\n\
    \              routing-07>.\n   [PROV-DOMAINS]\n              Pfister, P., Vyncke,\
    \ E., Pauly, T., Schinazi, D., and W.\n              Shao, \"Discovering Provisioning\
    \ Domain Names and Data\",\n              Work in Progress, Internet-Draft, draft-ietf-intarea-\n\
    \              provisioning-domains-09, 6 December 2019,\n              <https://tools.ietf.org/html/draft-ietf-intarea-\n\
    \              provisioning-domains-09>.\n   [RFC2663]  Srisuresh, P. and M. Holdrege,\
    \ \"IP Network Address\n              Translator (NAT) Terminology and Considerations\"\
    ,\n              RFC 2663, DOI 10.17487/RFC2663, August 1999,\n              <https://www.rfc-editor.org/info/rfc2663>.\n\
    \   [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n \
    \             Networks\", BCP 84, RFC 3704, DOI 10.17487/RFC3704, March\n    \
    \          2004, <https://www.rfc-editor.org/info/rfc3704>.\n   [RFC4941]  Narten,\
    \ T., Draves, R., and S. Krishnan, \"Privacy\n              Extensions for Stateless\
    \ Address Autoconfiguration in\n              IPv6\", RFC 4941, DOI 10.17487/RFC4941,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4941>.\n\
    \   [RFC5082]  Gill, V., Heasley, J., Meyer, D., Savola, P., Ed., and C.\n   \
    \           Pignataro, \"The Generalized TTL Security Mechanism\n            \
    \  (GTSM)\", RFC 5082, DOI 10.17487/RFC5082, October 2007,\n              <https://www.rfc-editor.org/info/rfc5082>.\n\
    \   [RFC5533]  Nordmark, E. and M. Bagnulo, \"Shim6: Level 3 Multihoming\n   \
    \           Shim Protocol for IPv6\", RFC 5533, DOI 10.17487/RFC5533,\n      \
    \        June 2009, <https://www.rfc-editor.org/info/rfc5533>.\n   [RFC5534] \
    \ Arkko, J. and I. van Beijnum, \"Failure Detection and\n              Locator\
    \ Pair Exploration Protocol for IPv6 Multihoming\",\n              RFC 5534, DOI\
    \ 10.17487/RFC5534, June 2009,\n              <https://www.rfc-editor.org/info/rfc5534>.\n\
    \   [RFC6824]  Ford, A., Raiciu, C., Handley, M., and O. Bonaventure,\n      \
    \        \"TCP Extensions for Multipath Operation with Multiple\n            \
    \  Addresses\", RFC 6824, DOI 10.17487/RFC6824, January 2013,\n              <https://www.rfc-editor.org/info/rfc6824>.\n\
    \   [RFC7676]  Pignataro, C., Bonica, R., and S. Krishnan, \"IPv6 Support\n  \
    \            for Generic Routing Encapsulation (GRE)\", RFC 7676,\n          \
    \    DOI 10.17487/RFC7676, October 2015,\n              <https://www.rfc-editor.org/info/rfc7676>.\n\
    \   [RFC8425]  Troan, O., \"IANA Considerations for IPv6 Neighbor\n          \
    \    Discovery Prefix Information Option Flags\", RFC 8425,\n              DOI\
    \ 10.17487/RFC8425, July 2018,\n              <https://www.rfc-editor.org/info/rfc8425>.\n\
    \   [RFC8504]  Chown, T., Loughney, J., and T. Winters, \"IPv6 Node\n        \
    \      Requirements\", BCP 220, RFC 8504, DOI 10.17487/RFC8504,\n            \
    \  January 2019, <https://www.rfc-editor.org/info/rfc8504>.\n   [SADR-RA]  Pfister,\
    \ P., \"Source Address Dependent Route Information\n              Option for Router\
    \ Advertisements\", Work in Progress,\n              Internet-Draft, draft-pfister-6man-sadr-ra-01,\
    \ 22 June\n              2015, <https://tools.ietf.org/html/draft-pfister-6man-\n\
    \              sadr-ra-01>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The original outline was suggested by Ole Tr\xF8an.\n  \
    \ The authors would like to thank the following people (in alphabetical\n   order)\
    \ for their review and feedback: Olivier Bonaventure, Deborah\n   Brungard, Brian\
    \ E. Carpenter, Lorenzo Colitti, Roman Danyliw,\n   Benjamin Kaduk, Suresh Krishnan,\
    \ Mirja K\xFChlewind, David Lamparter,\n   Nicolai Leymann, Acee Lindem, Philip\
    \ Matthews, Robert Raszuk, Pete\n   Resnick, Alvaro Retana, Dave Thaler, Michael\
    \ T\xFCxen, Martin Vigoureux,\n   \xC9ric Vyncke, Magnus Westerlund.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fred Baker\n   Santa Barbara, California 93117\n   United\
    \ States of America\n   Email: FredBaker.IETF@gmail.com\n   Chris Bowers\n   Juniper\
    \ Networks\n   Sunnyvale, California 94089\n   United States of America\n   Email:\
    \ cbowers@juniper.net\n   Jen Linkova\n   Google\n   1 Darling Island Rd\n   Pyrmont\
    \ NSW 2009\n"
