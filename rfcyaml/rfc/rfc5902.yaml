- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                              D. Thaler
  contents:
  - "Internet Architecture Board (IAB)                              D. Thaler\n  \
    \          IAB Thoughts on IPv6 Network Address Translation\n"
- title: Abstract
  contents:
  - "Abstract\n   There has been much recent discussion on the topic of whether the\n\
    \   IETF should develop standards for IPv6 Network Address Translators\n   (NATs).\
    \  This document articulates the architectural issues raised by\n   IPv6 NATs,\
    \ the pros and cons of having IPv6 NATs, and provides the\n   IAB's thoughts on\
    \ the current open issues and the solution space.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  Documents\
    \ approved for publication by\n   the IAB are not a candidate for any level of\
    \ Internet Standard; see\n   Section 2 of RFC 5741.\n   Information about the\
    \ current status of this document, any errata,\n   and how to provide feedback\
    \ on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5902.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  What is the problem? . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     2.1.  Avoiding Renumbering . . . . . . . . . . . . . . .\
    \ . . . .  3\n     2.2.  Site Multihoming . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     2.3.  Homogenous Edge Network Configurations . . . . . . . .\
    \ . .  4\n     2.4.  Network Obfuscation  . . . . . . . . . . . . . . . . . .\
    \ .  5\n       2.4.1.  Hiding Hosts . . . . . . . . . . . . . . . . . . . . .\
    \  5\n       2.4.2.  Topology Hiding  . . . . . . . . . . . . . . . . . . .  8\n\
    \       2.4.3.  Summary Regarding NAT as a Tool for Network\n               Obfuscation\
    \  . . . . . . . . . . . . . . . . . . . . .  8\n     2.5.  Simple Security  .\
    \ . . . . . . . . . . . . . . . . . . . .  9\n     2.6.  Discussion . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  9\n   3.  Architectural Considerations\
    \ of IPv6 NAT . . . . . . . . . . .  9\n   4.  Solution Space . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 11\n     4.1.  Discussion . . . . . . . . .\
    \ . . . . . . . . . . . . . . . 12\n   5.  Security Considerations  . . . . .\
    \ . . . . . . . . . . . . . . 13\n   6.  IAB Members at the Time of Approval \
    \ . . . . . . . . . . . . . 13\n   7.  Informative References . . . . . . . .\
    \ . . . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In the past, the IAB has published a number of documents\
    \ relating to\n   Internet transparency and the end-to-end principle, and other\
    \ IETF\n   documents have also touched on these issues as well.  These documents\n\
    \   articulate the general principles on which the Internet architecture\n   is\
    \ based, as well as the core values that the Internet community\n   seeks to protect\
    \ going forward.  Most recently, RFC 4924 [RFC4924]\n   reaffirms these principles\
    \ and provides a review of the various\n   documents in this area.\n   Facing\
    \ imminent IPv4 address space exhaustion, recently there have\n   been increased\
    \ efforts in IPv6 deployment.  However, since late 2008\n   there have also been\
    \ increased discussions about whether the IETF\n   should standardize network\
    \ address translation within IPv6.  People\n   who are against standardizing IPv6\
    \ NAT argue that there is no\n   fundamental need for IPv6 NAT, and that as IPv6\
    \ continues to roll\n   out, the Internet should converge towards reinstallation\
    \ of the end-\n   to-end reachability that has been a key factor in the Internet's\n\
    \   success.  On the other hand, people who are for IPv6 NAT believe that\n  \
    \ NAT vendors would provide IPv6 NAT implementations anyway as NAT can\n   be\
    \ a solution to a number of problems, and that the IETF should avoid\n   repeating\
    \ the same mistake as with IPv4 NAT, where the lack of\n   protocol standards\
    \ led to different IPv4 NAT implementations, making\n   NAT traversal difficult.\n\
    \   An earlier effort, [RFC4864], provides a discussion of the real or\n   perceived\
    \ benefits of NAT and suggests alternatives for most of them,\n   with the intent\
    \ of showing that NAT is not required to get the\n   desired benefits.  However,\
    \ it also identifies several gaps remaining\n   to be filled.\n   This document\
    \ provides the IAB's current thoughts on this debate.  We\n   believe that the\
    \ issue at hand must be viewed from an overall\n   architectural standpoint in\
    \ order to fully assess the pros and cons\n   of IPv6 NAT on the global Internet\
    \ and its future development.\n"
- title: 2.  What is the problem?
  contents:
  - "2.  What is the problem?\n   The discussions on the desire for IPv6 NAT can be\
    \ summarized as\n   follows.  Network address translation is viewed as a solution\
    \ to\n   achieve a number of desired properties for individual networks:\n   avoiding\
    \ renumbering, facilitating multihoming, making configurations\n   homogenous,\
    \ hiding internal network details, and providing simple\n   security.\n"
- title: 2.1.  Avoiding Renumbering
  contents:
  - "2.1.  Avoiding Renumbering\n   As discussed in [RFC4864], Section 2.5, the ability\
    \ to change service\n   providers with minimal operational difficulty is an important\n\
    \   requirement in many networks.  However, renumbering is still quite\n   painful\
    \ today, as discussed in [RFC5887].  Currently it requires\n   reconfiguring devices\
    \ that deal with IP addresses or prefixes,\n   including DNS servers, DHCP servers,\
    \ firewalls, IPsec policies, and\n   potentially many other systems such as intrusion\
    \ detection systems,\n   inventory management systems, patch management systems,\
    \ etc.\n   In practice today, renumbering does not seem to be a significant\n\
    \   problem in consumer networks, such as home networks, where addresses\n   or\
    \ prefixes are typically obtained through DHCP and are rarely\n   manually configured\
    \ in any component.  However, in managed networks,\n   renumbering can be a serious\
    \ problem.\n   We also note that many, if not most, large enterprise networks\
    \ avoid\n   the renumbering problem by using provider-independent (PI) IP address\n\
    \   blocks.  The use of PI addresses is inherent in today's Internet\n   operations.\
    \  However, in smaller managed networks that cannot get\n   provider-independent\
    \ IP address blocks, renumbering remains a serious\n   issue.  Regional Internet\
    \ Registries (RIRs) constantly receive\n   requests for PI address blocks; one\
    \ main reason that they hesitate in\n   assigning PI address blocks to all users\
    \ is the concern about the PI\n   addresses' impact on the routing system scalability.\n"
- title: 2.2.  Site Multihoming
  contents:
  - "2.2.  Site Multihoming\n   Another important requirement in many networks is\
    \ site multihoming.\n   A multihomed site essentially requires that its IP prefixes\
    \ be\n   present in the global routing table to achieve the desired\n   reliability\
    \ in its Internet connectivity as well as load balancing.\n   In today's practice,\
    \ multihomed sites with PI addresses announce\n   their PI prefixes to the global\
    \ routing system; multihomed sites with\n   provider-allocated (PA) addresses\
    \ also announce the PA prefix they\n   obtained from one service provider to the\
    \ global routing system\n   through another service provider, effectively disabling\
    \ provider-\n   based prefix aggregation.  This practice makes the global routing\n\
    \   table scale linearly with the number of multihomed user networks.\n   This\
    \ issue was identified in [RFC4864], Section 6.4.  Unfortunately,\n   no solution\
    \ except NAT has been deployed today that can insulate the\n   global routing\
    \ system from the growing number of multihomed sites,\n   where a multihomed site\
    \ simply assigns multiple IPv4 addresses (one\n   from each of its service providers)\
    \ to its exit router, which is an\n   IPv4 NAT box.  Using address translation\
    \ to facilitate multihoming\n   support has one unique advantage: there is no\
    \ impact on the routing\n   system scalability, as the NAT box simply takes one\
    \ address from each\n   service provider, and the multihomed site does not inject\
    \ its own\n   routes into the system.  Intuitively, it also seems straightforward\n\
    \   to roll the same solution into multihoming support in the IPv6\n   deployment.\
    \  However, one should keep in mind that this approach\n   brings all the drawbacks\
    \ of putting a site behind a NAT box,\n   including the loss of reachability to\
    \ the servers behind the NAT box.\n   It is also important to point out that a\
    \ multihomed site announcing\n   its own prefix(es) achieves two important benefits\
    \ that NAT-based\n   multihoming support does not provide.  First, end-to-end\n\
    \   communications can be preserved in face of connectivity failures of\n   individual\
    \ service providers, as long as the site remains connected\n   through at least\
    \ one operational service provider.  Second,\n   announcing one's prefixes also\
    \ gives a multihomed site the ability to\n   perform traffic engineering and load\
    \ balancing.\n"
- title: 2.3.  Homogenous Edge Network Configurations
  contents:
  - "2.3.  Homogenous Edge Network Configurations\n   Service providers supporting\
    \ residential customers need to minimize\n   support costs (e.g., help desk calls).\
    \  Often a key factor in\n   minimizing support costs is ensuring customers have\
    \ homogenous\n   configurations, including the addressing architecture.  Today,\
    \ when\n   IPv4 NATs are provided by a service provider, all customers get the\n\
    \   same address space on their home networks, and hence the home gateway\n  \
    \ always has the same address.  From a customer-support perspective,\n   this\
    \ perhaps represents the most important property of NAT usage\n   today.\n   In\
    \ IPv6, link-local addresses can be used to ensure that all home\n   gateways\
    \ have the same address, and to provide homogenous addresses\n   to any other\
    \ devices supported by the service provider.  Unlike IPv4,\n   having a globally\
    \ unique address does not prevent the use of a\n   homogenous address within the\
    \ subnet.  It is only in the case of\n   multi-subnet customers that IPv6 NAT\
    \ would provide some homogeneity\n   that wouldn't be provided by link-local addresses.\
    \  For multi-subnet\n   customers (e.g., a customer using a wireless access point\
    \ behind the\n   service provider router/modem), service providers today might\
    \ only\n   discuss problems (for IPv4 or IPv6) from computers connected directly\n\
    \   to the service provider router.\n   It is currently unknown whether IPv6 link-local\
    \ addresses provide\n   sufficient homogeneity to minimize help desk calls.  If\
    \ they do not,\n   providers might still desire IPv6 NATs in the residential gateways\n\
    \   they provide.\n"
- title: 2.4.  Network Obfuscation
  contents:
  - "2.4.  Network Obfuscation\n   Most network administrators want to hide the details\
    \ of the computing\n   resources, information infrastructure, and communications\
    \ networks\n   within their borders.  This desire is rooted in the basic security\n\
    \   principle that an organization's assets are for its sole use and all\n   information\
    \ about those assets, their operation, and the methods and\n   tactics of their\
    \ use are proprietary secrets.  Some organizations use\n   their information and\
    \ communication technologies as a competitive\n   advantage in their industries.\
    \  It is a generally held belief that\n   measures must be taken to protect those\
    \ secrets.  The first layer of\n   protection of those secrets is preventing access\
    \ to the secrets or\n   knowledge about the secrets whenever possible.  It is\
    \ understandable\n   why network administrators would want to keep the details\
    \ about the\n   hosts on their network, as well as the network infrastructure\
    \ itself,\n   private.  They believe that NAT helps achieve this goal.\n"
- title: 2.4.1.  Hiding Hosts
  contents:
  - "2.4.1.  Hiding Hosts\n   As a specific measure of network obfuscation, network\
    \ administrators\n   wish to keep secret any and all information about the computer\n\
    \   systems residing within their network boundaries.  Such computer\n   systems\
    \ include workstations, laptops, servers, function-specific\n   end-points (e.g.,\
    \ printers, scanners, IP telephones, point-of-sale\n   machines, building door\
    \ access-control devices), and such.  They want\n   to prevent an external entity\
    \ from counting the number of hosts on\n   the network.  They also want to prevent\
    \ host fingerprinting, i.e.,\n   gaining information about the constitution, contents,\
    \ or function of\n   a host.  For example, they want to hide the role of a host,\
    \ as\n   whether it is a user workstation, a finance server, a source code\n \
    \  build server, or a printer.  A second element of host-fingerprinting\n   prevention\
    \ is to hide details that could aid an attacker in\n   compromising the host.\
    \  Such details might include the type of\n   operating system, its version number,\
    \ any patches it may or may not\n   have, the make and model of the device hardware,\
    \ any application\n   software packages loaded, those version numbers and patches,\
    \ and so\n   on.  With such information about hosts, an attacker can launch a\
    \ more\n   focused, targeted attack.  Operators want to stop both host counting\n\
    \   and host fingerprinting.\n   Where host counting is a concern, it is worth\
    \ pointing out some of\n   the challenges in preventing it.  [Bellovin] showed\
    \ how one can\n   successfully count the number of hosts behind a certain type\
    \ of\n   simple NAT box.  More complex NAT deployments, e.g., ones employing\n\
    \   Network Address Port Translators (NAPTs) with a pool of public\n   addresses\
    \ that are randomly bound to internal hosts dynamically upon\n   receipt of any\
    \ new connection, and do so without persistency across\n   connections from the\
    \ same host are more successful in preventing host\n   counting.  However, the\
    \ more complex the NAT deployment, the less\n   likely that complex connection\
    \ types like the Session Initiation\n   Protocol (SIP) [RFC3261] and the Stream\
    \ Control Transmission Protocol\n   (SCTP) [RFC4960] will be able to successfully\
    \ traverse the NAT.  This\n   observation follows the age-old axiom for networked\
    \ computer systems:\n   for every unit of security you gain, you give up a unit\
    \ of\n   convenience, and for every unit of convenience you hope to gain, you\n\
    \   must give up a unit of security.\n   If fields such as fragment ID, TCP initial\
    \ sequence number, or\n   ephemeral port number are chosen in a predictable fashion\
    \ (e.g.,\n   sequentially), then an attacker may correlate packets or connections\n\
    \   coming from the same host.\n   To prevent counting hosts by counting addresses,\
    \ one might be tempted\n   to use a separate IP address for each transport-layer\
    \ connection.\n   Such an approach introduces other architectural problems, however.\n\
    \   Within the host's subnet, various devices including switches,\n   routers,\
    \ and even the host's own hardware interface often have a\n   limited amount of\
    \ state available before causing communication that\n   uses a large number of\
    \ addresses to suffer significant performance\n   problems.  In addition, if an\
    \ attacker can somehow determine an\n   average number of connections per host,\
    \ the attacker can still\n   estimate the number of hosts based on the number\
    \ of connections\n   observed.  Hence, such an approach can adversely affect legitimate\n\
    \   communication at all times, simply to raise the bar for an attacker.\n   Where\
    \ host fingerprinting is concerned, even a complex NAT cannot\n   prevent fingerprinting\
    \ completely.  The way that different hosts\n   respond to different requests\
    \ and sequences of events will indicate\n   consistently the type of a host that\
    \ it is, its OS, version number,\n   and sometimes applications installed, etc.\
    \  Products exist that do\n   this for network administrators as a service, as\
    \ part of a\n   vulnerability assessment.\n   These scanning tools initiate connections\
    \ of various types across a\n   range of possible IP addresses reachable through\
    \ that network.  They\n   observe what returns, and then send follow-up messages\
    \ accordingly\n   until they \"fingerprint\" the host thoroughly.  When run as\
    \ part of a\n   network assessment process, these tools are normally run from\
    \ the\n   inside of the network, behind the NAT.  If such a tool is set outside\n\
    \   a network boundary (as part of an external vulnerability assessment\n   or\
    \ penetration test) along the path of packets, and is passively\n   observing\
    \ and recording connection exchanges, over time it can\n   fingerprint hosts only\
    \ if it has a means of determining which\n   externally viewed connections are\
    \ originating from the same internal\n   host.  If the NATing is simple and static,\
    \ and each host's internal\n   address is always mapped to the same external address\
    \ and vice versa,\n   the tool has 100% success fingerprinting the host.  With\
    \ the internal\n   hosts mapped to their external IP addresses and fingerprinted,\
    \ the\n   attacker can launch targeted attacks into those hosts, or reliably\n\
    \   attempt to hijack those hosts' connections.  If the NAT uses a single\n  \
    \ external IP, or a pool of dynamically assigned IP addresses for each\n   host,\
    \ but does so in a deterministic and predictable way, then the\n   operation of\
    \ fingerprinting is more complex, but quite achievable.\n   If the NAT uses dynamically\
    \ assigned addresses, with short-term\n   persistency, but no externally learnable\
    \ determinism, then the\n   problem gets harder for the attacker.  The observer\
    \ may be able to\n   fingerprint a host during the lifetime of a particular IP\
    \ address\n   mapping, and across connections, but once that IP mapping is\n \
    \  terminated, the observer doesn't immediately know which new mapping\n   will\
    \ be that same host.  After much observation and correlation, the\n   attacker\
    \ could sometimes determine if an observed new connection in\n   flight is from\
    \ a familiar host.  With that information, and a good\n   set of man-in-the-middle\
    \ attack tools, the attacker could attempt to\n   compromise the host by hijacking\
    \ a new connection of adequately long\n   duration.  If temporal persistency is\
    \ not deployed on the NAT, then\n   this tactic becomes almost impossible.  As\
    \ the difficulty and cost of\n   the attack increases, the number of attackers\
    \ attempting to employ it\n   decreases.  And certainly the attacker would not\
    \ be able to initiate\n   a connection toward a host for which the attacker does\
    \ not know the\n   current IP address binding.  So, the attacker is limited to\
    \ hijacking\n   observed connections thought to be from a familiar host, or to\n\
    \   blindly initiating attacks on connections in flight.  This is why\n   network\
    \ administrators appreciate complex NATs' ability to deter host\n   counting and\
    \ fingerprinting, but such deterrence comes at a cost of\n   host reachability.\n"
- title: 2.4.2.  Topology Hiding
  contents:
  - "2.4.2.  Topology Hiding\n   It is perceived that a network operator may want\
    \ to hide the details\n   of the network topology, the size of the network, the\
    \ identities of\n   the internal routers, and the interconnection among the routers.\n\
    \   This desire has been discussed in [RFC4864], Sections 4.4 and 6.2.\n   However,\
    \ the success of topology hiding is dependent upon the\n   complexity, dynamism,\
    \ and pervasiveness of bindings the NAT employs\n   (all of which were described\
    \ above).  The more complex, the more the\n   topology will be hidden, but the\
    \ less likely that complex connection\n   types will successfully traverse the\
    \ NAT barrier.  Thus, the trade-\n   off is reachability across applications.\n\
    \   Even if one can hide the actual addresses of internal hosts through\n   address\
    \ translation, this does not necessarily prove sufficient to\n   hide internal\
    \ topology.  It may be possible to infer some aspects of\n   topological information\
    \ from passively observing packets.  For\n   example, based on packet timing,\
    \ delay measurements, the Hop Limit\n   field, or other fields in the packet header,\
    \ one could infer the\n   relative distance between multiple hosts.  Once an observed\
    \ session\n   is believed to match a previously fingerprinted host, that host's\n\
    \   distance from the NAT device may be learned, but not its exact\n   location\
    \ or particular internal subnet.\n   Host fingerprinting is required in order\
    \ to do a thorough distance\n   mapping.  An attacker might then use message contents\
    \ to lump certain\n   types of devices into logical clusters, and take educated\
    \ guesses at\n   attacks.  This is not, however, a thorough mapping.  Some NATs\
    \ change\n   the TTL hop counts, much like an application-layer proxy would, while\n\
    \   others don't; this is an administrative setting on more advanced\n   NATs.\
    \  The simpler and more static the NAT, the more possible this\n   is.  The more\
    \ complex and dynamic and non-persistent the NAT\n   bindings, the more difficult.\n"
- title: 2.4.3.  Summary Regarding NAT as a Tool for Network Obfuscation
  contents:
  - "2.4.3.  Summary Regarding NAT as a Tool for Network Obfuscation\n   The degree\
    \ of obfuscation a NAT can achieve will be a function of its\n   complexity as\
    \ measured by:\n   o  The use of one-to-many NAPT mappings;\n   o  The randomness\
    \ over time of the mappings from internal to external\n      IP addresses, i.e.,\
    \ non-deterministic mappings from an outsider's\n      perspective;\n   o  The\
    \ lack of persistence of mappings, i.e., the shortness of\n      mapping lifetimes\
    \ and not using the same mapping repeatedly;\n   o  The use of re-writing in IP\
    \ header fields such as TTL.\n   However, deployers be warned: as obfuscation\
    \ increases, host\n   reachability decreases.  Mechanisms such as STUN [RFC5389]\
    \ and Teredo\n   [RFC4380] fail with the more complex NAT mechanisms.\n"
- title: 2.5.  Simple Security
  contents:
  - "2.5.  Simple Security\n   It is commonly perceived that a NAT box provides one\
    \ level of\n   protection because external hosts cannot directly initiate\n  \
    \ communication with hosts behind a NAT.  However, one should not\n   confuse\
    \ NAT boxes with firewalls.  As discussed in [RFC4864], Section\n   2.2, the act\
    \ of translation does not provide security in itself.  The\n   stateful filtering\
    \ function can provide the same level of protection\n   without requiring a translation\
    \ function.  For further discussion,\n   see [RFC4864], Section 4.2.\n"
- title: 2.6.  Discussion
  contents:
  - "2.6.  Discussion\n   At present, the primary benefits one may receive from deploying\
    \ NAT\n   appear to be avoiding renumbering, facilitating multihoming without\n\
    \   impacting routing scalability, and making edge consumer network\n   configurations\
    \ homogenous.\n   Network obfuscation (host hiding, both counting and fingerprinting\n\
    \   prevention, and topology hiding) may well be achieved with more\n   complex\
    \ NATs, but at the cost of losing some reachability and\n   application success.\
    \  Again, when it comes to security, this is often\n   the case: to gain security\
    \ one must give up some measure of\n   convenience.\n"
- title: 3.  Architectural Considerations of IPv6 NAT
  contents:
  - "3.  Architectural Considerations of IPv6 NAT\n   First, it is important to distinguish\
    \ between the effects of a NAT\n   box vs. the effects of a firewall.  A firewall\
    \ is intended to prevent\n   unwanted traffic [RFC4948] without impacting wanted\
    \ traffic, whereas\n   a NAT box also interferes with wanted traffic.  In the\
    \ remainder of\n   this section, the term \"reachability\" is used with respect\
    \ to wanted\n   traffic.\n   The discussions on IPv6 NAT often refer to the wide\
    \ deployment of\n   IPv4 NAT, where people have both identified tangible benefits\
    \ and\n   gained operational experience.  However, the discussions so far seem\n\
    \   mostly focused on the potential benefits that IPv6 NAT may, or may\n   not,\
    \ bring.  Little attention has been paid to the bigger picture, as\n   we elaborate\
    \ below.\n   When considering the benefits that IPv6 NAT may bring to a site that\n\
    \   deploys it, we must not overlook a bigger question: if one site\n   deploys\
    \ IPv6 NAT, what is the potential impact it brings to the rest\n   of the Internet\
    \ that does not do IPv6 NAT?  By \"the rest of the\n   Internet\", we mean the\
    \ Internet community that develops, deploys, and\n   uses end-to-end applications\
    \ and protocols and hence is affected by\n   any loss of transparency (see [RFC2993]\
    \ and [RFC4924] for further\n   discussion).  This important question does not\
    \ seem to have been\n   addressed, or addressed adequately.\n   We believe that\
    \ the discussions on IPv6 NAT should be put in the\n   context of the overall\
    \ Internet architecture.  The foremost question\n   is not how many benefits one\
    \ may derive from using IPv6 NAT, but more\n   fundamentally, whether a significant\
    \ portion of parties on the\n   Internet are willing to deploy IPv6 NAT, and hence\
    \ whether we want to\n   make IP address translation a permanent building block\
    \ in the\n   Internet architecture.\n   One may argue that the answers to the\
    \ above questions depend on\n   whether we can find adequate solutions to the\
    \ renumbering, site\n   multihoming, and edge network configuration problems,\
    \ and whether the\n   solutions provide transparency or not.  If transparency\
    \ is not\n   provided, making NAT a permanent building block in the Internet would\n\
    \   represent a fundamental architectural change.\n   It is desirable that IPv6\
    \ users and applications be able to reach\n   each other directly without having\
    \ to worry about address translation\n   boxes between the two ends.  IPv6 application\
    \ developers in general\n   should be able to program based on the assumption\
    \ of end-to-end\n   reachability (of wanted traffic), without having to address\
    \ the issue\n   of traversing NAT boxes.  For example, referrals and multi-party\n\
    \   conversations are straightforward with end-to-end addressing, but\n   vastly\
    \ complicated in the presence of address translation.\n   Similarly, network administrators\
    \ should be able to run their\n   networks without the added complexity of NATs,\
    \ which can bring not\n   only the cost of additional boxes, but also increased\
    \ difficulties in\n   network monitoring and problem debugging.\n   Given the\
    \ diversity of the Internet user populations and the\n   diversity in today's\
    \ operational practice, it is conceivable that\n   some parties may have a strong\
    \ desire to deploy IPv6 NAT, and the\n   Internet should accommodate different\
    \ views that lead to different\n   practices (i.e., some using IPv6 NAT, others\
    \ not).\n   If we accept the view that some, but not all, parties want IPv6 NAT,\n\
    \   then the real debate should not be on what benefits IPv6 NAT may\n   bring\
    \ to the parties who deploy it.  It is undeniable that network\n   address translation\
    \ can bring certain benefits to its users.\n   However, the real challenge we\
    \ should address is how to design IPv6\n   NAT in such a way that it can hide\
    \ its impact within some localized\n   scope.  If IPv6 NAT design can achieve\
    \ this goal, then the Internet\n   as a whole can strive for (reinstalling) the\
    \ end-to-end reachability\n   model.\n"
- title: 4.  Solution Space
  contents:
  - "4.  Solution Space\n   From an end-to-end perspective, the solution space for\
    \ renumbering\n   and multihoming can be broadly divided into three classes:\n\
    \   1.  Endpoints get a stable, globally reachable address: In this class\n  \
    \     of solutions, end sites use provider-independent addressing and\n      \
    \ hence endpoints are unaffected by changing service providers.\n       For this\
    \ to be a complete solution, provider-independent\n       addressing must be available\
    \ to all managed networks (i.e., all\n       networks that use manual configuration\
    \ of addresses or prefixes\n       in any type of system).  However, in today's\
    \ practice, assigning\n       provider-independent addresses to all networks,\
    \ including small\n       ones, raises concerns with the scalability of the global\
    \ routing\n       system.  This is an area of ongoing research and experimentation.\n\
    \       In practice, network administrators have also been developing\n      \
    \ short-term approaches to resolve today's gap between the\n       continued routing\
    \ table growth and limitations in existing router\n       capacity [NANOG].\n\
    \   2.  Endpoints get a stable but non-globally-routable address on\n       physical\
    \ interfaces but a dynamic, globally routable address\n       inside a tunnel:\
    \ In this class of solutions, hosts use locally-\n       scoped (and hence provider-independent)\
    \ addresses for\n       communication within the site using their physical interfaces.\n\
    \       As a result, managed systems such as routers, DHCP servers, etc.,\n  \
    \     all see stable addresses.  Tunneling from the host to some\n       infrastructure\
    \ device is then used to communicate externally.\n       Tunneling provides the\
    \ host with globally routable addresses that\n       may change, but address changes\
    \ are constrained to systems that\n       operate over or beyond the tunnel, including\
    \ DNS servers and\n       applications.  These systems, however, are the ones\
    \ that often\n       can already deal with changes today using mechanisms such\
    \ as DNS\n       dynamic update.  However, if endpoints and the tunnel\n     \
    \  infrastructure devices are owned by different organizations, then\n       solutions\
    \ are harder to incrementally deploy due to the incentive\n       and coordination\
    \ issues involved.\n   3.  Endpoints get a stable address that gets translated\
    \ in the\n       network: In this class of solutions, end sites use non-globally-\n\
    \       routable addresses within the site, and translate them to\n       globally\
    \ routable addresses somewhere in the network.  In\n       general, this causes\
    \ the loss of end-to-end transparency, which\n       is the subject of [RFC4924]\
    \ and the documents it surveys.  If the\n       translation is reversible, and\
    \ the translation is indeed reversed\n       by the time it reaches the other\
    \ end of communication, then end-\n       to-end transparency can be provided.\
    \  However, if the two\n       translators involved are owned by different organizations,\
    \ then\n       solutions are harder to incrementally deploy due to the incentive\n\
    \       and coordination issues involved.\n   Concerning routing scalability,\
    \ although there is no immediate\n   danger, routing scalability has been a longtime\
    \ concern in\n   operational communities, and an effective and deployable solution\n\
    \   must be found.  We observe that the question at hand is not about\n   whether\
    \ some parties can run NAT, but rather, whether the Internet as\n   a whole would\
    \ be willing to rely on NAT to curtail the routing\n   scalability problem, and\
    \ whether we have investigated all the\n   potential impacts of doing so to understand\
    \ its cost on the overall\n   architecture.  If effective solutions can be deployed\
    \ in time to\n   allow assigning provider-independent IPv6 addresses to all user\n\
    \   communities, the Internet can avoid the complexity and fragility and\n   other\
    \ unforeseen problems introduced by NAT.\n"
- title: 4.1.  Discussion
  contents:
  - "4.1.  Discussion\n   As [RFC4924] states:\n      A network that does not filter\
    \ or transform the data that it\n      carries may be said to be \"transparent\"\
    \ or \"oblivious\" to the\n      content of packets.  Networks that provide oblivious\
    \ transport\n      enable the deployment of new services without requiring changes\
    \ to\n      the core.  It is this flexibility that is perhaps both the\n     \
    \ Internet's most essential characteristic as well as one of the\n      most important\
    \ contributors to its success.\n   We believe that providing end-to-end transparency,\
    \ as defined above,\n   is key to the success of the Internet.  While some fields\
    \ of traffic\n   (e.g., Hop Limit) are defined to be mutable, transparency requires\n\
    \   that fields not defined as such arrive un-transformed.  Currently,\n   the\
    \ source and destination addresses are defined as immutable fields,\n   and are\
    \ used as such by many protocols and applications.\n   Each of the three classes\
    \ of solution can be defined in a way that\n   preserves end-to-end transparency.\n\
    \   While we do not consider IPv6 NATs to be desirable, we understand\n   that\
    \ some deployment of them is likely unless workable solutions to\n   avoiding\
    \ renumbering, facilitating multihoming without adversely\n   impacting routing\
    \ scalability, and homogeneity are generally\n   recognized as useful and appropriate.\n\
    \   As such, we strongly encourage the community to consider end-to-end\n   transparency\
    \ as a requirement when proposing any solution, whether it\n   be based on tunneling\
    \ or translation or some other technique.\n   Solutions can then be compared based\
    \ on other aspects such as\n   scalability and ease of deployment.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Section 2 discusses potential privacy concerns\
    \ as part of the Host\n   Counting and Topology Hiding problems.\n"
- title: 6.  IAB Members at the Time of Approval
  contents:
  - "6.  IAB Members at the Time of Approval\n   Marcelo Bagnulo\n   Gonzalo Camarillo\n\
    \   Stuart Cheshire\n   Vijay Gill\n   Russ Housley\n   John Klensin\n   Olaf\
    \ Kolkman\n   Gregory Lebovitz\n   Andrew Malis\n   Danny McPherson\n   David\
    \ Oran\n   Jon Peterson\n   Dave Thaler\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [Bellovin]  Bellovin, S., \"A Technique for Counting\
    \ NATted Hosts\",\n               Proc. Second Internet Measurement Workshop,\n\
    \               November 2002,\n               <http://www.cs.columbia.edu/~smb/papers/fnat.pdf>.\n\
    \   [NANOG]     \"Extending the Life of Layer 3 Switches in a 256k+ Route\n  \
    \             World\", NANOG 44, October 2008, <http://www.nanog.org/\n      \
    \         meetings/nanog44/presentations/Monday/\n               Roisman_lightning.pdf>.\n\
    \   [RFC2993]   Hain, T., \"Architectural Implications of NAT\", RFC 2993,\n \
    \              November 2000.\n   [RFC3261]   Rosenberg, J., Schulzrinne, H.,\
    \ Camarillo, G., Johnston,\n               A., Peterson, J., Sparks, R., Handley,\
    \ M., and E.\n               Schooler, \"SIP: Session Initiation Protocol\", RFC\
    \ 3261,\n               June 2002.\n   [RFC4380]   Huitema, C., \"Teredo: Tunneling\
    \ IPv6 over UDP through\n               Network Address Translations (NATs)\"\
    , RFC 4380,\n               February 2006.\n   [RFC4864]   Van de Velde, G., Hain,\
    \ T., Droms, R., Carpenter, B., and\n               E. Klein, \"Local Network\
    \ Protection for IPv6\", RFC 4864,\n               May 2007.\n   [RFC4924]   Aboba,\
    \ B. and E. Davies, \"Reflections on Internet\n               Transparency\",\
    \ RFC 4924, July 2007.\n   [RFC4948]   Andersson, L., Davies, E., and L. Zhang,\
    \ \"Report from the\n               IAB workshop on Unwanted Traffic March 9-10,\
    \ 2006\",\n               RFC 4948, August 2007.\n   [RFC4960]   Stewart, R.,\
    \ \"Stream Control Transmission Protocol\",\n               RFC 4960, September\
    \ 2007.\n   [RFC5389]   Rosenberg, J., Mahy, R., Matthews, P., and D. Wing,\n\
    \               \"Session Traversal Utilities for NAT (STUN)\", RFC 5389,\n  \
    \             October 2008.\n   [RFC5887]   Carpenter, B., Atkinson, R., and H.\
    \ Flinck, \"Renumbering\n               Still Needs Work\", RFC 5887, May 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dave Thaler\n   Microsoft Corporation\n   One Microsoft\
    \ Way\n   Redmond, WA  98052\n   USA\n   Phone: +1 425 703 8835\n   EMail: dthaler@microsoft.com\n\
    \   Lixia Zhang\n   UCLA Computer Science Department\n   3713 Boelter Hall\n \
    \  Los Angeles, CA  90095\n   USA\n   Phone: +1 310 825 2695\n   EMail: lixia@cs.ucla.edu\n\
    \   Gregory Lebovitz\n   Juniper Networks, Inc.\n   1194 North Mathilda Ave.\n\
    \   Sunnyvale, CA  94089\n   USA\n   EMail: gregory.ietf@gmail.com\n   Internet\
    \ Architecture Board\n   EMail: iab@iab.org\n"
