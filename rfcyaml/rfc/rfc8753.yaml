- contents:
  - " Internationalized Domain Names for Applications (IDNA) Review for New\n                            Unicode
    Versions\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The standards for Internationalized Domain Names in Applications\n
    \  (IDNA) require a review of each new version of Unicode to determine\n   whether
    incompatibilities with prior versions or other issues exist\n   and, where appropriate,
    to allow the IETF to decide on the trade-offs\n   between compatibility with prior
    IDNA versions and compatibility with\n   Unicode going forward.  That requirement,
    and its relationship to\n   tables maintained by IANA, has caused significant
    confusion in the\n   past.  This document makes adjustments to the review procedure
    based\n   on experience and updates IDNA, specifically RFC 5892, to reflect\n
    \  those changes and to clarify the various relationships involved.  It\n   also
    makes other minor adjustments to align that document with\n   experience.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8753.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Brief History of IDNA Versions,
    the Review Requirement, and RFC\n           5982\n   3.  The Review Model\n     3.1.
    \ Review Model Part I: Algorithmic Comparison\n     3.2.  Review Model Part II:
    New Code Point Analysis\n   4.  IDNA Assumptions and Current Practice\n   5.  Derived
    Tables Published by IANA\n   6.  Editorial Clarification to RFC 5892\n   7.  IANA
    Considerations\n   8.  Security Considerations\n   9.  References\n     9.1.  Normative
    References\n     9.2.  Informative References\n   Appendix A.  Summary of Changes
    to RFC 5892\n   Appendix B.  Background and Rationale for Expert Review Procedure\n
    \          for New Code Point Analysis\n   Acknowledgments\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The standards for Internationalized Domain Names in Applications\n
    \  (IDNA) require a review of each new version of Unicode to determine\n   whether
    incompatibilities with prior versions or other issues exist\n   and, where appropriate,
    to allow the IETF to decide on the trade-offs\n   between compatibility with prior
    IDNA versions and compatibility with\n   Unicode [Unicode] going forward.  That
    requirement, and its\n   relationship to tables maintained by IANA, has caused
    significant\n   confusion in the past (see Section 3 and Section 4 for additional\n
    \  discussion of the question of appropriate decisions and the history\n   of
    these reviews).  This document makes adjustments to the review\n   procedure based
    on nearly a decade of experience and updates IDNA,\n   specifically the document
    that specifies the relationship between\n   Unicode code points and IDNA derived
    properties [RFC5892], to reflect\n   those changes and to clarify the various
    relationships involved.\n   This specification does not change the requirement
    that registries at\n   all levels of the DNS tree take responsibility for the
    labels they\n   insert in the DNS, a level of responsibility that requires allowing\n
    \  only a subset of the code points and strings allowed by the IDNA\n   protocol
    itself.  That requirement is discussed in more detail in a\n   companion document
    [RegRestr].\n   Terminology note: In this document, \"IDNA\" refers to the current\n
    \  version as described in RFC 5890 [RFC5890] and subsequent documents\n   and
    sometimes known as \"IDNA2008\".  Distinctions between it and the\n   earlier
    version are explicit only where they are necessary for\n   understanding the relationships
    involved, e.g., in Section 2.\n"
  title: 1.  Introduction
- contents:
  - "2.  Brief History of IDNA Versions, the Review Requirement, and RFC 5982\n   The
    original, now-obsolete, version of IDNA, commonly known as\n   \"IDNA2003\" [RFC3490]
    [RFC3491], was defined in terms of a profile of\n   a collection of IETF-specific
    tables [RFC3454] that specified the\n   usability of each Unicode code point with
    IDNA.  Because the tables\n   themselves were normative, they were intrinsically
    tied to a\n   particular version of Unicode.  As Unicode evolved, the IDNA2003\n
    \  standard would have required the creation of a new profile for each\n   new
    version of Unicode, or the tables would have fallen further and\n   further behind.\n
    \  When IDNA2003 was superseded by the current version, known as\n   IDNA2008
    [RFC5890], a different strategy, one that was property-based\n   rather than table-based,
    was adopted for a number of reasons, of\n   which the reliance on normative tables
    was not dominant [RFC4690].\n   In the IDNA2008 model, the use of normative tables
    was replaced by a\n   set of procedures and rules that operated on Unicode properties\n
    \  [Unicode-properties] and a few internal definitions to determine the\n   category
    and status, and hence an IDNA-specific \"derived property\",\n   for any given
    code point.  Those rules are, in principle, independent\n   of Unicode versions.
    \ They can be applied to any version of Unicode,\n   at least from approximately
    version 5.0 forward, to yield an\n   appropriate set of derived properties.  However,
    the working group\n   that defined IDNA2008 recognized that not all of the Unicode\n
    \  properties were completely stable and that, because the criteria for\n   new
    code points and property assignment used by the Unicode\n   Consortium might not
    precisely align with the needs of IDNA, there\n   were possibilities of incompatible
    changes to the derived property\n   values.  More specifically, there could be
    changes that would make\n   previously disallowed labels valid, previously valid
    labels\n   disallowed, or that would be disruptive to IDNA's defining rule\n   structure.
    \ Consequently, IDNA2008 provided for an expert review of\n   each new version
    of Unicode with the possibility of providing\n   exceptions to the rules for particular
    new code points, code points\n   whose properties had changed, and newly discovered
    issues with the\n   IDNA2008 collection of rules.  When problems were identified,
    the\n   reviewer was expected to notify the IESG.  The assumption was that\n   the
    IETF would review the situation and modify IDNA2008 as needed,\n   most likely
    by adding exceptions to preserve backward compatibility\n   (see Section 3.1).\n
    \  For the convenience of the community, IDNA2008 also provided that\n   IANA
    would maintain copies of calculated tables resulting from each\n   review, showing
    the derived properties for each code point.  Those\n   tables were expected to
    be helpful, especially to those without the\n   facilities to easily compute derived
    properties themselves.\n   Experience with the community and those tables has
    shown that they\n   have been confused with the normative tables of IDNA2003:
    the\n   IDNA2008 tables published by IANA have never been normative, and\n   statements
    about IDNA2008 being out of date with regard to some\n   Unicode version because
    the IANA tables have not been updated are\n   incorrect or meaningless.\n"
  title: 2.  Brief History of IDNA Versions, the Review Requirement, and RFC 5982
- contents:
  - "3.  The Review Model\n   While the text has sometimes been interpreted differently,
    IDNA2008\n   actually calls for two types of review when a new Unicode version
    is\n   introduced.  One is an algorithmic comparison of the set of derived\n   properties
    calculated from the new version of Unicode to the derived\n   properties calculated
    from the previous one to determine whether\n   incompatible changes have occurred.
    \ The other is a review of newly\n   assigned code points to determine whether
    any of them require special\n   treatment (e.g., assignment of what IDNA2008 calls
    contextual rules)\n   and whether any of them violate any of the assumptions underlying
    the\n   IDNA2008 derived property calculations.  Any of the cases of either\n
    \  review might require either per-code point exceptions or other\n   adjustments
    to the rules for deriving properties that are part of RFC\n   5892.  The subsections
    below provide a revised specification for the\n   review procedure.\n   Unless
    the IESG or the designated expert team concludes that there\n   are special problems
    or unusual circumstances, these reviews will be\n   performed only for major Unicode
    versions (those numbered NN.0, e.g.,\n   12.0) and not for minor updates (e.g.,
    12.1).\n   As can be seen in the detailed descriptions in the following\n   subsections,
    proper review will require a team of experts that has\n   both broad and specific
    skills in reviewing Unicode characters and\n   their properties in relation to
    both the written standards and\n   operational needs.  The IESG will need to appoint
    experts who can\n   draw on the broader community to obtain the necessary skills
    for\n   particular situations.  See the IANA Considerations (Section 7) for\n
    \  details.\n"
  - contents:
    - "3.1.  Review Model Part I: Algorithmic Comparison\n   Section 5.1 of RFC 5892
      is the description of the process for\n   creating the initial IANA tables.
      \ It is noteworthy that, while it\n   can be read as strongly implying new reviews
      and new tables for\n   versions of Unicode after 5.2, it does not explicitly
      specify those\n   reviews or, e.g., the timetable for completing them.  It also\n
      \  indicates that incompatibilities are to be \"flagged for the IESG\" but\n
      \  does not specify exactly what the IESG is to do about them and when.\n   For
      reasons related to the other type of review and discussed below,\n   only one
      review was completed, documented [RFC6452], and a set of\n   corresponding new
      tables installed.  That review, which was for\n   Unicode 6.0, found only three
      incompatibilities; the consensus was to\n   ignore them (not create exceptions
      in IDNA2008) and to remain\n   consistent with computations based on current
      (Unicode 6.0)\n   properties rather than preserving backward compatibility within
      IDNA.\n   The 2018 review (for Unicode 11.0 and versions in between it and 6.0)\n
      \  [IDNA-Unicode12] also concluded that Unicode compatibility, rather\n   than
      IDNA backward compatibility, should be maintained.  That\n   decision was partially
      driven by the long period between reviews and\n   the concern that table calculations
      by others in the interim could\n   result in unexpected incompatibilities if
      derived property\n   definitions were then changed.  See Section 4 for further
      discussion\n   of these preferences.\n"
    title: '3.1.  Review Model Part I: Algorithmic Comparison'
  - contents:
    - "3.2.  Review Model Part II: New Code Point Analysis\n   The second type of
      review, which is not clearly explained in RFC\n   5892, is intended to identify
      cases in which newly added or recently\n   discovered problematic code points
      violate the design assumptions of\n   IDNA, to identify defects in those assumptions,
      or to identify\n   inconsistencies (from an IDNA perspective) with Unicode commitments\n
      \  about assignment, properties, and stability of newly added code\n   points.
      \ One example of this type of review was the discovery of new\n   code points
      after Unicode 7.0 that were potentially visually\n   equivalent, in the same
      script, to previously available code point\n   sequences [IAB-Unicode7-2015]
      [IDNA-Unicode7].\n   Because multiple perspectives on Unicode and writing systems
      are\n   required, this review will not be successful unless it is done by a\n
      \  team.  Finding one all-knowing expert is improbable, and a single\n   expert
      is unlikely to produce an adequate analysis.  Rather than any\n   single expert
      being the sole source of analysis, the designated\n   expert (DE) team needs
      to understand that there will always be gaps\n   in their knowledge, to know
      what they don't know, and to work to find\n   the expertise that each review
      requires.  It is also important that\n   the DE team maintains close contact
      with the Area Directors (ADs) and\n   that the ADs remain aware of the team's
      changing needs, examining and\n   adjusting the team's membership over time,
      with periodic\n   reexamination at least annually.  It should also be recognized
      that,\n   if this review identifies a problem, that problem is likely to be\n
      \  complex and/or involve multiple trade-offs.  Actions to deal with it\n   are
      likely to be disruptive (although perhaps not to large\n   communities of users),
      or to leave security risks (opportunities for\n   attacks and inadvertent confusion
      as expected matches do not occur),\n   or to cause excessive reliance on registries
      understanding and taking\n   responsibility for what they are registering [RFC5894]
      [RegRestr].\n   The latter, while a requirement of IDNA, has often not worked
      out\n   well in the past.\n   Because resolution of problems identified by this
      part of the review\n   may take some time even if that resolution is to add
      additional\n   contextual rules or to disallow one or more code points, there
      will\n   be cases in which it will be appropriate to publish the results of\n
      \  the algorithmic review and to provide IANA with corresponding tables,\n   with
      warnings about code points whose status is uncertain until there\n   is IETF
      consensus about how to proceed.  The affected code points\n   should be considered
      unsafe and identified as \"under review\" in the\n   IANA tables until final
      derived properties are assigned.\n"
    title: '3.2.  Review Model Part II: New Code Point Analysis'
  title: 3.  The Review Model
- contents:
  - "4.  IDNA Assumptions and Current Practice\n   At the time the IDNA2008 documents
    were written, the assumption was\n   that, if new versions of Unicode introduced
    incompatible changes, the\n   Standard would be updated to preserve backward compatibility
    for\n   users of IDNA.  For most purposes, this would be done by adding to\n   the
    table of exceptions associated with Rule G [RFC5892a].\n   This has not been the
    practice in the reviews completed subsequent to\n   Unicode 5.2, as discussed
    in Section 3.  Incompatibilities were\n   identified in Unicode 6.0 [RFC6452]
    and in the cumulative review\n   leading to tables for Unicode 11.0 [IDNA-Unicode11].
    \ In all of those\n   cases, the decision was made to maintain compatibility with
    Unicode\n   properties rather than with prior versions of IDNA.\n   If an algorithmic
    review detects changes in Unicode after version\n   12.0 that would break compatibility
    with derived properties\n   associated with prior versions of Unicode or changes
    that would\n   preserve compatibility within IDNA at the cost of departing from\n
    \  current Unicode specifications, those changes must be captured in\n   documents
    expected to be published as Standards Track RFCs so that\n   the IETF can review
    those changes and maintain a historical record.\n   The community has now made
    decisions and updated tables for Unicode\n   6.0 [RFC6452], done catch-up work
    between it and Unicode 11.0\n   [IDNA-Unicode11], and completed the review and
    tables for Unicode\n   12.0 [IDNA-Unicode12].  The decisions made in those cases
    were driven\n   by preserving consistency with Unicode and Unicode property changes\n
    \  for reasons most clearly explained by the IAB [IAB-Unicode-2018].\n   These
    actions were not only at variance with the language in RFC 5892\n   but were also
    inconsistent with commitments to the registry and user\n   communities to ensure
    that IDN labels that were once valid under\n   IDNA2008 would remain valid, and
    previously invalid labels would\n   remain invalid, except for those labels that
    were invalid because\n   they contained unassigned code points.\n   This document
    restores and clarifies that original language and\n   intent: absent extremely
    strong evidence on a per-code point basis\n   that preserving the validity status
    of possible existing (or\n   prohibited) labels would cause significant harm,
    Unicode changes that\n   would affect IDNA derived properties are to be reflected
    in IDNA\n   exceptions that preserve the status of those labels.  There is one\n
    \  partial exception to this principle.  If the new code point analysis\n   (see
    Section 3.2) concludes that some code points or collections of\n   code points
    should be further analyzed, those code points, and labels\n   including them,
    should be considered unsafe and used only with\n   extreme caution because the
    conclusions of the analysis may change\n   their derived property values and status.\n"
  title: 4.  IDNA Assumptions and Current Practice
- contents:
  - "5.  Derived Tables Published by IANA\n   As discussed above, RFC 5892 specified
    that derived property tables\n   be provided via an IANA registry.  Perhaps because
    most IANA\n   registries are considered normative and authoritative, that registry\n
    \  has been the source of considerable confusion, including the\n   incorrect
    assumption that the absence of published tables for\n   versions of Unicode later
    than 6.0 meant that IDNA could not be used\n   with later versions.  That position
    was raised in multiple ways, not\n   all of them consistent, especially in the
    ICANN context\n   [ICANN-LGR-SLA].\n   If the changes specified in this document
    are not successful in\n   significantly mitigating the confusion about the status
    of the tables\n   published by IANA, serious consideration should be given to\n
    \  eliminating those tables entirely.\n"
  title: 5.  Derived Tables Published by IANA
- contents:
  - "6.  Editorial Clarification to RFC 5892\n   This section updates RFC 5892 to
    provide fixes for known applicable\n   errata and omissions.  In particular, verified
    RFC Editor Erratum\n   3312 [Err3312] provides a clarification to Appendix A and
    A.1 in RFC\n   5892.  That clarification is incorporated below.\n   1.  In Appendix
    A, add a new paragraph after the paragraph that\n       begins \"The code point...\".
    \ The new paragraph should read:\n       |  For the rule to be evaluated to True
    for the label, it MUST be\n       |  evaluated separately for every occurrence
    of the code point in\n       |  the label; each of those evaluations must result
    in True.\n   2.  In Appendix A.1, replace the \"Rule Set\" by\n           Rule
    Set:\n             False;\n             If Canonical_Combining_Class(Before(cp))
    .eq. Virama\n                   Then True;\n             If cp .eq. \\u200C And\n
    \                   RegExpMatch((Joining_Type:{L,D})(Joining_Type:T)*cp\n               (Joining_Type:T)*(Joining_Type:{R,D}))
    Then True;\n"
  title: 6.  Editorial Clarification to RFC 5892
- contents:
  - "7.  IANA Considerations\n   For the algorithmic review described in Section 3.1,
    the IESG is to\n   appoint a designated expert [RFC8126] with appropriate expertise
    to\n   conduct the review and to supply derived property tables to IANA.  As\n
    \  provided in Section 5.2 of the Guidelines for Writing IANA\n   Considerations
    [RFC8126], the designated expert is expected to\n   consult additional sources
    of expertise as needed.  For the code\n   point review, the expertise will be
    supplied by an IESG-designated\n   expert team as discussed in Section 3.2 and
    Appendix B.  In both\n   cases, the experts should draw on the expertise of other
    members of\n   the community as needed.  In particular, and especially if there
    is\n   no overlap of the people holding the various roles, coordination with\n
    \  the IAB-appointed liaison to the Unicode Consortium will be essential\n   to
    mitigate possible errors due to confusion.\n   As discussed in Section 5, IANA
    has modified the IDNA tables\n   collection [IANA-IDNA-Tables] by identifying
    them clearly as non-\n   normative, so that a \"current\" or \"correct\" version
    of those tables\n   is not implied, and by pointing to this document for an explanation.\n
    \  IANA has published tables supplied by the IETF for all Unicode\n   versions
    through 11.0, retaining all older versions and making them\n   available.  Newer
    tables will be constructed as specified in this\n   document and then made available
    by IANA.  IANA has changed the title\n   of that registry from \"IDNA Parameters\",
    which is misleading, to\n   \"IDNA Rules and Derived Property Values\".\n   The
    \"Note\" in that registry says:\n   |  IDNA does not require that applications
    and libraries, either for\n   |  registration/storage or lookup, support any particular
    version of\n   |  Unicode.  Instead, they are required to use derived property\n
    \  |  values based on calculations associated with whatever version of\n   |  Unicode
    they are using elsewhere in the application or library.\n   |  For the convenience
    of application and library developers and\n   |  others, the IETF has supplied,
    and IANA maintains, derived\n   |  property tables for several version of Unicode
    as listed below.\n   |  It should be stressed that these are not normative in
    that, in\n   |  principle, an application can do its own calculations and these\n
    \  |  tables can change as IETF understanding evolves.  By contrast, the\n   |
    \ list of code points requiring contextual rules and the associated\n   |  rules
    are normative and should be treated as updates to the list\n   |  in RFC 5892.\n
    \  As long as the intent is preserved, the text of that note may be\n   changed
    in the future at IANA's discretion.\n   IANA's attention is called to the introduction,
    in Section 3.2, of a\n   temporary \"under review\" category to the PVALID, DISALLOWED,
    etc.,\n   entries in the tables.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Applying the procedures described in this document
    and understanding\n   of the clarifications it provides should reduce confusion
    about IDNA\n   requirements.  Because past confusion has provided opportunities
    for\n   bad behavior, the effect of these changes should improve Internet\n   security
    to at least some small extent.\n   Because of the preference to keep the derived
    property value stable\n   (as specified in RFC 5892 and discussed in Section 4),
    the algorithm\n   used to calculate those derived properties does change as explained\n
    \  in Section 3.  If these changes are not taken into account, the\n   derived
    property value will change, and the implications might have\n   negative consequences,
    in some cases with security implications.  For\n   example, changes in the calculated
    derived property value for a code\n   point from either DISALLOWED to PVALID or
    from PVALID to DISALLOWED\n   can cause changes in label interpretation that would
    be visible and\n   confusing to end users and might enable attacks.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [IANA-IDNA-Tables]\n              IANA, \"IDNA
      Rules and Derived Property Values\",\n              <https://www.iana.org/assignments/idna-tables>.\n
      \  [RFC5892]  Faltstrom, P., Ed., \"The Unicode Code Points and\n              Internationalized
      Domain Names for Applications (IDNA)\",\n              RFC 5892, DOI 10.17487/RFC5892,
      August 2010,\n              <https://www.rfc-editor.org/info/rfc5892>.\n   [RFC5892a]
      Faltstrom, P., Ed., \"The Unicode Code Points and\n              Internationalized
      Domain Names for Applications (IDNA)\",\n              Section 2.7, RFC 5892,
      August 2010,\n              <https://www.rfc-editor.org/rfc/rfc5892.txt>.\n
      \  [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [Unicode]  The Unicode Consortium, \"The Unicode Standard (Current\n              Version)\",
      <http://www.unicode.org/versions/latest/>.  The\n              link given will
      always access the current version of the\n              Unicode Standard, independent
      of its version number or\n              date.\n   [Unicode-properties]\n              The
      Unicode Consortium, \"The Unicode Standard Version\n              11.0\", Section
      3.5, 2018,\n              <https://www.unicode.org/versions/Unicode11.0.0/>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [Err3312]  RFC Errata, Erratum ID 3312, RFC
      5892,\n              <https://www.rfc-editor.org/errata/eid3312>.\n   [IAB-Unicode-2018]\n
      \             Internet Architecture Board (IAB), \"IAB Statement on\n              Identifiers
      and Unicode\", 15 March 2018,\n              <https://www.iab.org/documents/correspondence-reports-\n
      \             documents/2018-2/iab-statement-on-identifiers-and-\n              unicode/>.\n
      \  [IAB-Unicode7-2015]\n              Internet Architecture Board (IAB), \"IAB
      Statement on\n              Identifiers and Unicode 7.0.0\", 11 February 2015,\n
      \             <https://www.iab.org/documents/correspondence-reports-\n              documents/2015-2/iab-statement-on-identifiers-and-unicode-\n
      \             7-0-0/>.\n   [ICANN-LGR-SLA]\n              Internet Corporation
      for Assigned Names and Numbers\n              (ICANN), \"Proposed IANA SLAs
      for Publishing LGRs/IDN\n              Tables\", 10 June 2019, <https://www.icann.org/public-\n
      \             comments/proposed-iana-sla-lgr-idn-tables-2019-06-10-en>.\n   [IDNA-Unicode7]\n
      \             Klensin, J. and P. Faltstrom, \"IDNA Update for Unicode 7.0\n
      \             and Later Versions\", Work in Progress, Internet-Draft,\n              draft-klensin-idna-5892upd-unicode70-05,
      8 October 2017,\n              <https://tools.ietf.org/html/draft-klensin-idna-5892upd-\n
      \             unicode70-05>.\n   [IDNA-Unicode11]\n              Faltstrom,
      P., \"IDNA2008 and Unicode 11.0.0\", Work in\n              Progress, Internet-Draft,
      draft-faltstrom-unicode11-08, 11\n              March 2019, <https://tools.ietf.org/html/draft-faltstrom-\n
      \             unicode11-08>.\n   [IDNA-Unicode12]\n              Faltstrom,
      P., \"IDNA2008 and Unicode 12.0.0\", Work in\n              Progress, Internet-Draft,
      draft-faltstrom-unicode12-00, 11\n              March 2019, <https://tools.ietf.org/html/draft-faltstrom-\n
      \             unicode12-00>.\n   [RegRestr] Klensin, J. and A. Freytag, \"Internationalized
      Domain\n              Names in Applications (IDNA): Registry Restrictions and\n
      \             Recommendations\", Work in Progress, Internet-Draft, draft-\n
      \             klensin-idna-rfc5891bis-05, 29 August 2019,\n              <https://tools.ietf.org/html/draft-klensin-idna-\n
      \             rfc5891bis-05>.\n   [RFC1766]  Alvestrand, H., \"Tags for the
      Identification of\n              Languages\", RFC 1766, DOI 10.17487/RFC1766,
      March 1995,\n              <https://www.rfc-editor.org/info/rfc1766>.\n   [RFC3282]
      \ Alvestrand, H., \"Content Language Headers\", RFC 3282,\n              DOI
      10.17487/RFC3282, May 2002,\n              <https://www.rfc-editor.org/info/rfc3282>.\n
      \  [RFC3454]  Hoffman, P. and M. Blanchet, \"Preparation of\n              Internationalized
      Strings (\"stringprep\")\", RFC 3454,\n              DOI 10.17487/RFC3454, December
      2002,\n              <https://www.rfc-editor.org/info/rfc3454>.\n   [RFC3490]
      \ Faltstrom, P., Hoffman, P., and A. Costello,\n              \"Internationalizing
      Domain Names in Applications (IDNA)\",\n              RFC 3490, DOI 10.17487/RFC3490,
      March 2003,\n              <https://www.rfc-editor.org/info/rfc3490>.\n   [RFC3491]
      \ Hoffman, P. and M. Blanchet, \"Nameprep: A Stringprep\n              Profile
      for Internationalized Domain Names (IDN)\",\n              RFC 3491, DOI 10.17487/RFC3491,
      March 2003,\n              <https://www.rfc-editor.org/info/rfc3491>.\n   [RFC3629]
      \ Yergeau, F., \"UTF-8, a transformation format of ISO\n              10646\",
      STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n              2003, <https://www.rfc-editor.org/info/rfc3629>.\n
      \  [RFC4690]  Klensin, J., Faltstrom, P., Karp, C., and IAB, \"Review and\n
      \             Recommendations for Internationalized Domain Names\n              (IDNs)\",
      RFC 4690, DOI 10.17487/RFC4690, September 2006,\n              <https://www.rfc-editor.org/info/rfc4690>.\n
      \  [RFC5646]  Phillips, A., Ed. and M. Davis, Ed., \"Tags for Identifying\n
      \             Languages\", BCP 47, RFC 5646, DOI 10.17487/RFC5646,\n              September
      2009, <https://www.rfc-editor.org/info/rfc5646>.\n   [RFC5890]  Klensin, J.,
      \"Internationalized Domain Names for\n              Applications (IDNA): Definitions
      and Document Framework\",\n              RFC 5890, DOI 10.17487/RFC5890, August
      2010,\n              <https://www.rfc-editor.org/info/rfc5890>.\n   [RFC5894]
      \ Klensin, J., \"Internationalized Domain Names for\n              Applications
      (IDNA): Background, Explanation, and\n              Rationale\", RFC 5894, DOI
      10.17487/RFC5894, August 2010,\n              <https://www.rfc-editor.org/info/rfc5894>.\n
      \  [RFC6452]  Faltstrom, P., Ed. and P. Hoffman, Ed., \"The Unicode Code\n              Points
      and Internationalized Domain Names for Applications\n              (IDNA) -
      Unicode 6.0\", RFC 6452, DOI 10.17487/RFC6452,\n              November 2011,
      <https://www.rfc-editor.org/info/rfc6452>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  Summary of Changes to RFC 5892\n   Other than the editorial correction
    specified in Section 6, all of\n   the changes in this document are concerned
    with the reviews for new\n   versions of Unicode and with the IANA Considerations
    in Section 5 of\n   [RFC5892], particularly Section 5.1 of [RFC5892].  Whether
    the\n   changes are substantive or merely clarifications may be somewhat in\n
    \  the eye of the beholder, so the list below should not be assumed to\n   be
    comprehensive.  At a very high level, this document clarifies that\n   two types
    of review were intended and separates them for clarity.\n   This document also
    restores the original (but so far unobserved)\n   default for actions when code
    point derived properties change.  For\n   this reason, this document effectively
    replaces Section 5.1 of\n   [RFC5892] and adds or changes some text so that the
    replacement makes\n   better sense.\n   Changes or clarifications that may be
    considered important include:\n   *  Separated the new Unicode version review
    into two explicit parts\n      and provided for different review methods and,
    potentially,\n      asynchronous outcomes.\n   *  Specified a DE team, not a single
    designated expert, for the code\n      point review.\n   *  Eliminated the de
    facto requirement for the (formerly single)\n      designated expert to be the
    same person as the IAB's liaison to\n      the Unicode Consortium, but called
    out the importance of\n      coordination.\n   *  Created the \"Status\" field
    in the IANA tables to inform the\n      community about specific potentially problematic
    code points.\n      This change creates the ability to add information about such
    code\n      points before IETF review is completed instead of having the\n      review
    process hold up the use of the new Unicode version.\n   *  In part because Unicode
    is now on a regular one-year cycle rather\n      than producing major and minor
    versions as needed, to avoid\n      overloading the IETF's internationalization
    resources, and to\n      avoid generating and storing IANA tables for trivial
    changes\n      (e.g., the single new code point in Unicode 12.1), the review\n
    \     procedure is applied only to major versions of Unicode unless\n      exceptional
    circumstances arise and are identified.\n"
  title: Appendix A.  Summary of Changes to RFC 5892
- contents:
  - "Appendix B.  Background and Rationale for Expert Review Procedure for\n             New
    Code Point Analysis\n   The expert review procedure for new code point analysis
    described in\n   Section 3.2 is somewhat unusual compared to the examples presented
    in\n   the Guidelines for Writing IANA Considerations [RFC8126].  This\n   appendix
    explains that choice and provides the background for it.\n   Development of specifications
    to support use of languages and writing\n   systems other than English (and Latin
    script) -- so-called\n   \"internationalization\" or \"i18n\" -- has always been
    problematic in\n   the IETF, especially when requirements go beyond simple coding
    of\n   characters (e.g., RFC 3629 [RFC3629]) or simple identification of\n   languages
    (e.g., RFC 3282 [RFC3282] and the earlier RFC 1766\n   [RFC1766]).  A good deal
    of specialized knowledge is required,\n   knowledge that comes from multiple fields
    and that requires multiple\n   perspectives.  The work is not obviously more complex
    than routing,\n   especially if one assumes that routing work requires a solid\n
    \  foundation in graph theory or network optimization, or than security\n   and
    cryptography, but people working in those areas are drawn to the\n   IETF and
    people from the fields that bear on internationalization\n   typically are not.\n
    \  As a result, we have often thought we understood a problem, generated\n   a
    specification or set of specifications, but then have been\n   surprised by unanticipated
    (by the IETF) issues.  We then needed to\n   tune and often revise our specification.
    \ The language tag work that\n   started with RFC 1766 is a good example of this:
    broader\n   considerations and requirements led to later work and a much more\n
    \  complex and finer-grained system [RFC5646].\n   Work on IDNs further increased
    the difficulties because many of the\n   decisions that led to the current version
    of IDNA require\n   understanding the DNS, its constraints, and, to at least some
    extent,\n   the commercial market of domain names, including various ICANN\n   efforts.\n
    \  The net result of these factors is that it is extremely unlikely that\n   the
    IESG will ever find a designated expert whose knowledge and\n   understanding
    will include everything that is required.\n   Consequently, Section 7 and other
    discussions in this document\n   specify a DE team that is expected to have the
    broad perspective,\n   expertise, and access to information and community in order
    to review\n   new Unicode versions and to make consensus recommendations that
    will\n   serve the Internet well.  While we anticipate that the team will have\n
    \  one or more leaders, the structure of the team differs from the\n   suggestions
    given in Section 5.2 of the Guidelines for Writing IANA\n   Considerations [RFC8126]
    since neither the team's formation nor its\n   consultation is left to the discretion
    of the designated expert, nor\n   is the designated expert solely accountable
    to the community.  A team\n   that contains multiple perspectives is required,
    the team members are\n   accountable as a group, and any nontrivial recommendations
    require\n   team consensus.  This also differs from the common practice in the\n
    \  IETF of \"review teams\" from which a single member is selected to\n   perform
    a review: the principle for these reviews is team effort.\n"
  title: Appendix B.  Background and Rationale for Expert Review Procedure for
- contents:
  - "Acknowledgments\n   This document was inspired by extensive discussions within
    the I18N\n   Directorate of the IETF Applications and Real-Time (ART) area in
    the\n   first quarter of 2019 about sorting out the reviews for Unicode 11.0\n
    \  and 12.0.  Careful reviews by Joel Halpern and text suggestions from\n   Barry
    Leiba resulted in some clarifications.\n   Thanks to Christopher Wood for catching
    some editorial errors that\n   persisted until rather late in the document's life
    cycle and to\n   Benjamin Kaduk for catching and raising a number of questions
    during\n   Last Call.  Some of the issues they raised have been reflected in the\n
    \  document; others did not appear to be desirable modifications after\n   further
    discussion, but the questions were definitely worth raising\n   and discussing.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   John C Klensin\n   1770 Massachusetts Ave, Ste 322\n   Cambridge,
    MA 02140\n   United States of America\n   Phone: +1 617 245 1457\n   Email: john-ietf@jck.com\n
    \  Patrik F\xE4ltstr\xF6m\n   Netnod\n   Greta Garbos V\xE4g 13\n   SE-169 40
    Solna\n   Sweden\n"
  title: Authors' Addresses
