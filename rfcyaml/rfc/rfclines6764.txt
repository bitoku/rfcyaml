Abstract This specification describes how DNS SRV records, DNS TXT records, and well known URIs can be used together or separately to locate CalDAV (Calendaring Extensions to Web Distributed Authoring and Versioning (WebDAV)) or CardDAV (vCard Extensions to WebDAV) services.
RFC4791] defines the CalDAV calendar access protocol, based on HTTP [RFC2616], for accessing calendar data stored on a server.
CalDAV clients need to be able to discover appropriate CalDAV servers within their local area network and at other domains, e.g., to minimize the need for end users to know specific details such as the fully qualified domain name (FQDN) and port number for their servers.
[RFC6352] defines the CardDAV address book access protocol based on HTTP [RFC2616], for accessing contact data stored on a server.
As with CalDAV, clients also need to be able to discover CardDAV servers.
[RFC2782] defines a DNS based service discovery protocol that has been widely adopted as a means of locating particular services within a local area network and beyond, using DNS SRV Resource Records (RRs).
This has been enhanced to provide additional service meta  data by use of DNS TXT RRs as per [RFC6763].
This specification defines new SRV service types for the CalDAV protocol and gives an example of how clients can use this together with other protocol features to enable simple client configuration.
SRV service types for CardDAV are already defined in Section 11 of [RFC6352].
Another issue with CalDAV or CardDAV service discovery is that the service might not be located at the "root" URI of the HTTP server hosting it.
Thus, a client needs to be able to determine the complete path component of the Request URI to use in HTTP requests: the "context path".
For example, if CalDAV is implemented as a "servlet" in a web server "container", the servlet "context path" might be "/caldav/".
So the URI for the CalDAV service would be, e.g., "http://caldav.example.com/caldav/" rather than "http://caldav.example.com/".
SRV RRs by themselves only provide an FQDN and port number for the service, not a path.
Since the client "bootstrapping" process requires initial access to the "context path" of the service, there needs to be a simple way for clients to also discover what that path is.
This specification makes use of the "well known URI" feature [RFC5785] of HTTP servers to provide a well known URI for CalDAV or CardDAV services that clients can use.
The well known URI will point to a resource on the server that is simply a "stub" resource that provides a redirect to the actual "context path" resource representing the service endpoint.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This specification adds two SRV service labels for use with CalDAV:
a CalDAV server that uses HTTP without Transport Layer Security (TLS)
Identifies a CalDAV server that uses HTTP with TLS
Clients MUST honor Priority and Weight values in the SRV RRs, as described by [RFC2782].
Example: service record for server without TLS  caldav.
Example: service record for server with TLS  caldavs.
CalDAV and CardDAV Service TXT Records
When SRV RRs are used to advertise CalDAV and CardDAV services, it is also convenient to be able to specify a "context path" in the DNS to be retrieved at the same time.
To enable that, this specification uses a TXT RR that follows the syntax defined in Section 6 of [RFC6763] and defines a "path" key for use in that record.
The value of the key MUST be the actual "context path" to the corresponding service on the server.
A site might provide TXT records in addition to SRV records for each service.
When present, clients MUST use the "path" value as the "context path" for the service in HTTP requests.
When not present, clients use the ".well known" URI approach described next.
Example: text record for service with TLS  caldavs.
Two ".well known" URIs are registered by this specification for CalDAV and CardDAV services, "caldav" and "carddav" respectively (see Section 9).
These URIs point to a resource that the client can use as the initial "context path" for the service they are trying to connect to.
The server MUST redirect HTTP requests for that resource to the actual "context path" using one of the available mechanisms provided by HTTP (e.g., using a 301, 303, or 307 response).
Clients MUST handle HTTP redirects on the ".well known" URI.
Servers MUST NOT locate the actual CalDAV or CardDAV service endpoint at the ".well known" URI as per Section 1.1 of [RFC5785].
Servers SHOULD set an appropriate Cache Control header value (as per Section 14.9 of [RFC2616]) in the redirect response to ensure caching occurs or does not occur as needed or as required by the type of response generated.
For example, if it is anticipated that the location of the redirect might change over time, then a "no cache" value would be used.
To facilitate "context paths" that might differ from user to user, the server MAY require authentication when a client tries to access the ".well known" URI
(i.e., the server would return a 401 status response to the unauthenticated request from the client, then return the redirect response only after a successful authentication by the client).
Well Known URI Redirects to Actual "Context Path" A CalDAV server has a "context path" that is "/servlet/caldav".
The client will use "/.well known/caldav" as the path for its "bootstrapping" process after it has first found the FQDN and port number via an SRV lookup or via manual entry of information by the user, from which the client can parse suitable information.
When the client makes an HTTP request against "/.well known/caldav", the server would issue an HTTP redirect response with a Location response header using the path "/servlet/caldav".
The client would then "follow" this redirect to the new resource and continue making HTTP requests there to complete its "bootstrapping" process.
This section describes a procedure that CalDAV or CardDAV clients SHOULD use to do their initial configuration based on minimal user input.
The goal is to determine an http: or https: URI that describes the full path to the user's principal URL [RFC3744].
Minimal input from a user would consist of a calendar user address and a password.
A calendar user address is defined by iCalendar [RFC5545] to be a URI [RFC3986].
Provided a user identifier and a domain name can be extracted from the URI, this simple "bootstrapping" configuration can be done.
If the calendar user address is a "mailto:"
[RFC6068] URI, the "mailbox" portion of the URI is examined, and the "local part" and "domain" portions are extracted.
If the calendar user address is an "http:" [RFC2616] or "https:"
[RFC2818] URI, the "userinfo" and "host" portion of the URI [RFC3986] is extracted.
Minimal input from a user would consist of their email address [RFC5322] for the domain where the CardDAV service is hosted, and a password.
The "mailbox" portion of the email address is examined, and the "local part" and "domain" portions are extracted.
Determination of service FQDN and port number:
An SRV lookup for  caldavs.
tcp (for CalDAV) or  carddavs.
tcp (for CardDAV) is done with the extracted "domain" as the service domain.
If no result is found, the client can try  caldav.
tcp (for CalDAV) or  carddav.
tcp (for CardDAV) provided non TLS connections are appropriate.
If an SRV record is returned, the client extracts the target FQDN and port number.
If multiple SRV records are returned, the client MUST use the Priority and Weight fields in the record to determine which one to pick (as per [RFC2782]).
If an SRV record is not found, the client will need to prompt the user to enter the FQDN and port number information directly or use some other heuristic, for example, using the extracted "domain" as the FQDN and default HTTPS or HTTP port numbers.
In this situation, clients MUST first attempt an HTTP connection with TLS.
Determination of initial "context path":
When an SRV lookup is done and a valid SRV record returned, the client MUST also query for a corresponding TXT record and check for the presence of a "path" key in its response.
If present, the value of the "path" key is used for the initial "context path".
When an initial "context path" has not been determined from a TXT record, the initial "context path" is taken to be "/.well known/caldav" (for CalDAV) or "/.well known/carddav" (for CardDAV).
If the initial "context path" derived from a TXT record generates HTTP errors when targeted by requests, the client SHOULD repeat its "bootstrapping" procedure using the appropriate ".well known" URI instead.
The client will need to make authenticated HTTP requests to the service.
Typically, a "user identifier" is required for some form of user/password authentication.
When a user identifier is required, clients MUST first use the "mailbox" portion of the calendar user address provided by the user in the case of a "mailto:" address and, if that results in an authentication failure, SHOULD fall back to using the "local  part" extracted from the "mailto:" address.
For an "http:" or "https:" calendar user address, the "userinfo" portion is used as the user identifier for authentication.
This is in line with the guidance outlined in Section 7.
If these user identifiers result in authentication failure, the client SHOULD prompt the user for a valid identifier.
Subsequent to configuration, the client will make HTTP requests to the service.
When using " caldavs" or " carddavs" services, a TLS negotiation is done immediately upon connection.
The client MUST do certificate verification using the procedure outlined in Section 6 of [RFC6125] in regard to verification with an SRV RR as the starting point.
The client does a "PROPFIND" [RFC4918] request with the request URI set to the initial "context path".
The body of the request SHOULD include the DAV:current user principal [RFC5397] property as one of the properties to return.
Note that clients MUST properly handle HTTP redirect responses for the request.
The server will use the HTTP authentication procedure outlined in [RFC2617] or use some other appropriate authentication schemes to authenticate the user.
If the server returns a 404 ("Not Found")
HTTP status response to the request on the initial "context path"
If the DAV:current user principal property is returned on the request, the client uses that value for the principal URL of the authenticated user.
With that, it can execute a "PROPFIND" request on the principal URL and discover additional properties for configuration (e.g., calendar or address book "home" collections).
If the DAV:current user principal property is not returned, then the client will need to request the principal URL path from the user in order to continue with configuration.
Once a successful account discovery step has been done, clients SHOULD cache the service details that were successfully used (user identity, principal URL with full scheme/host/port details) and reuse those when connecting again at a later time.
If a subsequent connection attempt fails, or authentication fails persistently, clients SHOULD retry the SRV lookup and account discovery to "refresh" the cached data.
Guidance for Service Providers Service providers wanting to offer CalDAV or CardDAV services that can be configured by clients using SRV records need to follow certain procedures to ensure proper operation.
CalDAV or CardDAV servers SHOULD be configured to allow authentication with calendar user addresses (just taking the "mailbox" portion of any "mailto:" URI) or email addresses respectively, or with "user identifiers" extracted from them.
In the former case, the addresses MUST NOT conflict with other forms of a permitted user login name.
In the latter case, the extracted "user identifiers" need to be unique across the server and MUST NOT conflict with any login name on the server.
Servers MUST force authentication for "PROPFIND" requests that retrieve the DAV:current user principal property to ensure that the value of the DAV:current user principal property returned corresponds to the principal URL of the user making the request.
If the service provider uses TLS, the service provider MUST ensure a certificate is installed that can be verified by clients using the procedure outlined in Section 6 of [RFC6125] in regard to verification with an SRV RR as the starting point.
In particular, certificates SHOULD include SRV ID and DNS ID identifiers as appropriate, as described in Section 8.
Service providers should install the appropriate SRV records for the offered services and optionally include TXT records.
Security Considerations Clients that support TLS as defined by [RFC2818]
SHOULD try the " caldavs" or " carddavs" services first before trying the " caldav" or " carddav" services respectively.
If a user has explicitly requested a connection with TLS, the client MUST NOT use any service information returned for the " caldav" or " carddav" services.
Clients MUST follow the certificate verification process specified in [RFC6125].
A malicious attacker with access to the DNS server data, or that is able to get spoofed answers cached in a recursive resolver, can potentially cause clients to connect to any server chosen by the attacker.
In the absence of a secure DNS option, clients SHOULD check that the target FQDN returned in the SRV record matches the original service domain that was queried.
If the target FQDN is not in the queried domain, clients SHOULD verify with the user that the SRV target FQDN is suitable for use before executing any connections to the host.
Alternatively, if TLS is being used for the service, clients MUST use the procedure outlined in Section 6 of [RFC6125] to verify the service.
When the target FQDN does not match the original service domain that was queried, clients MUST check the SRV ID identifier in the server's certificate.
If the FQDN does match, clients MUST check any SRV ID identifiers in the server's certificate or, if no SRV ID identifiers are present, MUST check the DNS ID identifiers in the server's certificate.
[RFC5246], used as the basis for TLS ([RFC2818]), typically support multiple versions of the protocol as well as the older SSL (Secure Sockets Layer) protocol.
Because of known security vulnerabilities, clients and servers
MUST NOT request, offer, or use SSL 2.0.
See Appendix E.2 of [RFC5246] for further details.
This document defines two ".well known" URIs using the registration procedure and template from Section 5.1 of [RFC5785].
Well Known URI Registration URI suffix:
caldav Change controller:  IETF Specification document(s):
Well Known URI Registration URI suffix:
carddav Change controller:  IETF Specification document(s):
This document registers four new service names as per [RFC6335].
Two are defined in this document, and two are defined in [RFC6352], Section 11.
caldav Service Name Registration Service Name:  caldav Transport Protocol(s):  TCP Assignee:  IESG
Calendaring Extensions to WebDAV (CalDAV)
This is an extension of the http service.
Defined TXT keys: path <context path> 9.2.2.
caldavs Service Name Registration Service Name:  caldavs Transport Protocol(s):  TCP Assignee:  IESG
Calendaring Extensions to WebDAV (CalDAV) over TLS Reference:
This is an extension of the https service.
Defined TXT keys: path <context path> 9.2.3.
carddav Service Name Registration Service Name:  carddav Transport Protocol(s):  TCP Assignee:  IESG
vCard Extensions to WebDAV (CardDAV)
This is an extension of the http service.
Defined TXT keys: path <context path
carddavs Service Name Registration Service Name:  carddavs Transport Protocol(s):  TCP Assignee:  IESG
vCard Extensions to WebDAV (CardDAV) over TLS Reference:
This is an extension of the https service.
Defined TXT keys: path <context path>
