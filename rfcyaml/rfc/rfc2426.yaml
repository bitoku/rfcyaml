- title: __initial_text__
  contents:
  - '                      vCard MIME Directory Profile

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines the profile of the MIME Content-Type [MIME-DIR]\
    \ for\n   directory information for a white-pages person object, based on a\n\
    \   vCard electronic business card. The profile definition is independent\n  \
    \ of any particular directory service or protocol. The profile is\n   defined\
    \ for representing and exchanging a variety of information\n   about an individual\
    \ (e.g., formatted and structured name and delivery\n   addresses, email address,\
    \ multiple telephone numbers, photograph,\n   logo, audio clips, etc.). The directory\
    \ information used by this\n   profile is based on the attributes for the person\
    \ object defined in\n   the X.520 and X.521 directory services recommendations.\
    \ The profile\n   also provides the method for including a [VCARD] representation\
    \ of a\n   white-pages directory entry within the MIME Content-Type defined by\n\
    \   the [MIME-DIR] document.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\" and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC 2119].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Overview.........................................................3\n\
    \   1. THE VCARD MIME DIRECTORY PROFILE REGISTRATION.................4\n   2.\
    \ MIME DIRECTORY FEATURES.......................................5\n    2.1 PREDEFINED\
    \ TYPE USAGE ......................................5\n     2.1.1 BEGIN and END\
    \ Type ......................................5\n     2.1.2 NAME Type ...............................................5\n\
    \     2.1.3 PROFILE Type ............................................5\n     2.1.4\
    \ SOURCE Type .............................................5\n    2.2 PREDEFINED\
    \ TYPE PARAMETER USAGE ............................6\n    2.3 PREDEFINED VALUE\
    \ TYPE USAGE ................................6\n    2.4 EXTENSIONS TO THE PREDEFINED\
    \ VALUE TYPES ...................6\n     2.4.1 BINARY ..................................................6\n\
    \     2.4.2 VCARD ...................................................6\n     2.4.3\
    \ PHONE-NUMBER ............................................7\n     2.4.4 UTC-OFFSET\
    \ ..............................................7\n    2.5 STRUCTURED TYPE VALUES\
    \ .....................................7\n    2.6 LINE DELIMITING AND FOLDING\
    \ ................................8\n   3. VCARD PROFILE FEATURES........................................8\n\
    \    3.1 IDENTIFICATION TYPES .......................................8\n     3.1.1\
    \ FN Type Definition ......................................8\n     3.1.2 N Type\
    \ Definition .......................................9\n     3.1.3 NICKNAME Type\
    \ Definition ................................9\n     3.1.4 PHOTO Type Definition\
    \ ..................................10\n     3.1.5 BDAY Type Definition ...................................11\n\
    \    3.2 DELIVERY ADDRESSING TYPES .................................11\n     3.2.1\
    \ ADR Type Definition ....................................11\n     3.2.2 LABEL\
    \ Type Definition ..................................13\n    3.3 TELECOMMUNICATIONS\
    \ ADDRESSING TYPES .......................13\n     3.3.1 TEL Type Definition ....................................14\n\
    \     3.3.2 EMAIL Type Definition ..................................15\n     3.3.3\
    \ MAILER Type Definition .................................15\n    3.4 GEOGRAPHICAL\
    \ TYPES ........................................16\n     3.4.1 TZ Type Definition\
    \ .....................................16\n     3.4.2 GEO Type Definition ....................................16\n\
    \    3.5 ORGANIZATIONAL TYPES ......................................17\n     3.5.1\
    \ TITLE Type Definition ..................................17\n     3.5.2 ROLE\
    \ Type Definition ...................................18\n     3.5.3 LOGO Type\
    \ Definition ...................................18\n     3.5.4 AGENT Type Definition\
    \ ..................................19\n     3.5.5 ORG Type Definition ....................................20\n\
    \    3.6 EXPLANATORY TYPES .........................................20\n     3.6.1\
    \ CATEGORIES Type Definition .............................20\n     3.6.2 NOTE\
    \ Type Definition ...................................21\n     3.6.3 PRODID Type\
    \ Definition .................................21\n     3.6.4 REV Type Definition\
    \ ....................................22\n     3.6.5 SORT-STRING Type Definition\
    \ ............................22\n     3.6.6 SOUND Type Definition ..................................23\n\
    \     3.6.7 UID Type Definition ....................................24\n     3.6.8\
    \ URL Type Definition ....................................25\n     3.6.9 VERSION\
    \ Type Definition ................................25\n    3.7 SECURITY TYPES ............................................25\n\
    \     3.7.1 CLASS Type Definition ..................................26\n     3.7.2\
    \ KEY Type Definition ....................................26\n    3.8 EXTENDED\
    \ TYPES ............................................27\n   4. FORMAL GRAMMAR...............................................27\n\
    \   5. DIFFERENCES FROM VCARD V2.1..................................37\n   6.\
    \ ACKNOWLEDGEMENTS.............................................39\n   7. AUTHORS'\
    \ ADDRESSES...........................................39\n   8. SECURITY CONSIDERATIONS......................................39\n\
    \   9. REFERENCES...................................................40\n   10.\
    \ FULL COPYRIGHT STATEMENT....................................42\n"
- title: Overview
  contents:
  - "Overview\n   The [MIME-DIR] document defines a MIME Content-Type for holding\n\
    \   different kinds of directory information. The directory information\n   can\
    \ be based on any of a number of directory schemas. This document\n   defines\
    \ a [MIME-DIR] usage profile for conveying directory\n   information based on\
    \ one such schema; that of the white-pages type of\n   person object.\n   The\
    \ schema is based on the attributes for the person object defined\n   in the X.520\
    \ and X.521 directory services recommendations. The schema\n   has augmented the\
    \ basic attributes defined in the X.500 series\n   recommendation in order to\
    \ provide for an electronic representation\n   of the information commonly found\
    \ on a paper business card. This\n   schema was first defined in the [VCARD] document.\
    \ Hence, this [MIME-\n   DIR] profile is referred to as the vCard MIME Directory\
    \ Profile.\n   A directory entry based on this usage profile can include traditional\n\
    \   directory, white-pages information such as the distinguished name\n   used\
    \ to uniquely identify the entry, a formatted representation of\n   the name used\
    \ for user-interface or presentation purposes, both the\n   structured and presentation\
    \ form of the delivery address, various\n   telephone numbers and organizational\
    \ information associated with the\n   entry. In addition, traditional paper business\
    \ card information such\n   as an image of an organizational logo or identify\
    \ photograph can be\n   included in this person object.\n   The vCard MIME Directory\
    \ Profile also provides support for\n   representing other important information\
    \ about the person associated\n   with the directory entry. For instance, the\
    \ date of birth of the\n   person; an audio clip describing the pronunciation\
    \ of the name\n   associated with the directory entry, or some other application\
    \ of the\n   digital sound; longitude and latitude geo-positioning information\n\
    \   related to the person associated with the directory entry; date and\n   time\
    \ that the directory information was last updated; annotations\n   often written\
    \ on a business card; Uniform Resource Locators (URL) for\n   a website; public\
    \ key information. The profile also provides support\n   for non-standard extensions\
    \ to the schema. This provides the\n   flexibility for implementations to augment\
    \ the current capabilities\n   of the profile in a standardized way. More information\
    \ about this\n   electronic business card format can be found in [VCARD].\n"
- title: 1.  The vCard Mime Directory Profile Registration
  contents:
  - "1.  The vCard Mime Directory Profile Registration\n   This profile is identified\
    \ by the following [MIME-DIR] registration\n   template information. Subsequent\
    \ sections define the profile\n   definition.\n   To: ietf-mime-directory@imc.org\n\
    \   Subject: Registration of text/directory MIME profile VCARD\n   Profile name:\
    \ VCARD\n   Profile purpose: To hold person object or white-pages type of\n  \
    \ directory information. The person schema captured in the directory\n   entries\
    \ is that commonly found in an electronic business card.\n   Predefined MIME Directory\
    \ value specifications used: uri, date,\n   date-time, float\n   New value specifications:\
    \ This profile places further constraints on\n   the [MIME-DIR] text value specification.\
    \ In addition, it adds a\n   binary, phone-number, utc-offset and vcard value\
    \ specifications.\n   Predefined MIME Directory types used: SOURCE, NAME, PROFILE,\
    \ BEGIN,\n   END.\n   Predefined MIME Directory parameters used: ENCODING, VALUE,\
    \ CHARSET,\n   LANGUAGE, CONTEXT.\n   New types: FN, N, NICKNAME, PHOTO, BDAY,\
    \ ADR, LABEL, TEL, EMAIL,\n   MAILER, TZ, GEO, TITLE, ROLE, LOGO, AGENT, ORG,\
    \ CATEGORIES, NOTE,\n   PRODID, REV, SORT-STRING, SOUND, URL, UID, VERSION, CLASS,\
    \ KEY\n   New parameters: TYPE\n   Profile special notes: The vCard object MUST\
    \ contain the FN, N and\n   VERSION types. The type-grouping feature of [MIME-DIR]\
    \ is supported\n   by this profile to group related vCard properties about a directory\n\
    \   entry. For example, vCard properties describing WORK or HOME related\n   characteristics\
    \ can be grouped with a unique group label.\n   The profile permits the use of\
    \ non-standard types (i.e., those\n   identified with the prefix string \"X-\"\
    ) as a flexible method for\n   implementations to extend the functionality currently\
    \ defined within\n   this profile.\n"
- title: 2.  MIME Directory Features
  contents:
  - "2.  MIME Directory Features\n   The vCard MIME Directory Profile makes use of\
    \ many of the features\n   defined by [MIME-DIR]. The following sections either\
    \ clarify or\n   extend the content-type definition of [MIME-DIR].\n"
- title: 2.1 Predefined Type Usage
  contents:
  - "2.1 Predefined Type Usage\n   The vCard MIME Directory Profile uses the following\
    \ predefined types\n   from [MIME-DIR].\n"
- title: 2.1.1 BEGIN and END Type
  contents:
  - "2.1.1 BEGIN and END Type\n   The content entity MUST begin with the BEGIN type\
    \ with a value of\n   \"VCARD\". The content entity MUST end with the END type\
    \ with a value\n   of \"VCARD\".\n"
- title: 2.1.2 NAME Type
  contents:
  - "2.1.2 NAME Type\n   If the NAME type is present, then its value is the displayable,\n\
    \   presentation text associated with the source for the vCard, as\n   specified\
    \ in the SOURCE type.\n"
- title: 2.1.3 PROFILE Type
  contents:
  - "2.1.3 PROFILE Type\n   If the PROFILE type is present, then its value MUST be\
    \ \"VCARD\".\n"
- title: 2.1.4 SOURCE Type
  contents:
  - "2.1.4 SOURCE Type\n   If the SOURCE type is present, then its value provides\
    \ information\n   how to find the source for the vCard.\n"
- title: 2.2 Predefined Type Parameter Usage
  contents:
  - "2.2 Predefined Type Parameter Usage\n   The vCard MIME Directory Profile uses\
    \ the following predefined type\n   parameters as defined by [MIME-DIR].\n   \
    \     - LANGUAGE\n        - ENCODING\n        - VALUE\n"
- title: 2.3 Predefined VALUE Type Usage
  contents:
  - "2.3 Predefined VALUE Type Usage\n   The predefined data type values specified\
    \ in [MIME-DIR] MUST NOT be\n   repeated in COMMA separated value lists except\
    \ within the N,\n   NICKNAME, ADR and CATEGORIES value types.\n   The text value\
    \ type defined in [MIME-DIR] is further restricted such\n   that any SEMI-COLON\
    \ character (ASCII decimal 59) in the value MUST be\n   escaped with the BACKSLASH\
    \ character (ASCII decimal 92).\n"
- title: 2.4 Extensions To The Predefined VALUE Types
  contents:
  - "2.4 Extensions To The Predefined VALUE Types\n   The predefined data type values\
    \ specified in [MIME-DIR] have been\n   extended by the vCard profile to include\
    \ a number of value types that\n   are specific to this profile.\n"
- title: 2.4.1 BINARY
  contents:
  - "2.4.1 BINARY\n   The \"binary\" value type specifies that the type value is inline,\n\
    \   encoded binary data. This value type can be specified in the PHOTO,\n   LOGO,\
    \ SOUND, and KEY types.\n   If inline encoded binary data is specified, the ENCODING\
    \ type\n   parameter MUST be used to specify the encoding format. The binary\n\
    \   data MUST be encoded using the \"B\" encoding format. Long lines of\n   encoded\
    \ binary data SHOULD BE folded to 75 characters using the\n   folding method defined\
    \ in [MIME-DIR].\n   The value type is defined by the following notation:\n  \
    \ binary = <A \"B\" binary encoded string as defined by [RFC 2047].>\n"
- title: 2.4.2 VCARD
  contents:
  - "2.4.2 VCARD\n   The \"vcard\" value type specifies that the type value is another\n\
    \   vCard. This value type can be specified in the AGENT type. The value\n   type\
    \ is defined by this specification. Since each of the type\n   declarations with\
    \ in the vcard value type are being specified within\n   a text value themselves,\
    \ they MUST be terminated with the backslash\n   escape sequence \"\\n\" or \"\
    \\N\", instead of the normal newline character\n   sequence CRLF. In addition,\
    \ any COMMA character (ASCII decimal 44),\n   SEMI-COLON character (ASCII decimal\
    \ 59) and COLON character (ASCII\n   decimal 58) MUST be escaped with the BACKSLASH\
    \ character (ASCII\n   decimal 92). For example, with the AGENT type a value would\
    \ be\n   specified as:\n        AGENT:BEGIN:VCARD\\nFN:Joe Friday\\nTEL:+1-919-555-7878\\\
    n\n         TITLE:Area Administrator\\, Assistant\\n EMAIL\\;TYPE=INTERN\\n\n\
    \         ET:jfriday@host.com\\nEND:VCARD\\n\n"
- title: 2.4.3 PHONE-NUMBER
  contents:
  - "2.4.3 PHONE-NUMBER\n   The \"phone-number\" value type specifies that the type\
    \ value is a\n   telephone number. This value type can be specified in the TEL\
    \ type.\n   The value type is a text value that has the special semantics of a\n\
    \   telephone number as defined in [CCITT E.163] and [CCITT X.121].\n"
- title: 2.4.4 UTC-OFFSET
  contents:
  - "2.4.4 UTC-OFFSET\n   The \"utc-offset\" value type specifies that the type value\
    \ is a signed\n   offset from UTC. This value type can be specified in the TZ\
    \ type.\n   The value type is an offset from Coordinated Universal Time (UTC).\
    \ It\n   is specified as a positive or negative difference in units of hours\n\
    \   and minutes (e.g., +hh:mm). The time is specified as a 24-hour clock.\n  \
    \ Hour values are from 00 to 23, and minute values are from 00 to 59.\n   Hour\
    \ and minutes are 2-digits with high order zeroes required to\n   maintain digit\
    \ count. The extended format for ISO 8601 UTC offsets\n   MUST be used. The extended\
    \ format makes use of a colon character as a\n   separator of the hour and minute\
    \ text fields.\n   The value is defined by the following notation:\n        time-hour\
    \       = 2DIGIT        ;00-23\n        time-minute     = 2DIGIT        ;00-59\n\
    \        utc-offset      = (\"+\" / \"-\") time-hour \":\" time-minute\n"
- title: 2.5 Structured Type Values
  contents:
  - "2.5 Structured Type Values\n   Compound type values are delimited by a field\
    \ delimiter, specified by\n   the SEMI-COLON character (ASCII decimal 59). A SEMI-COLON\
    \ in a\n   component of a compound property value MUST be escaped with a\n   BACKSLASH\
    \ character (ASCII decimal 92).\n   Lists of values are delimited by a list delimiter,\
    \ specified by the\n   COMMA character (ASCII decimal 44). A COMMA character in\
    \ a value MUST\n   be escaped with a BACKSLASH character (ASCII decimal 92).\n\
    \   This profile supports the type grouping mechanism defined in [MIME-\n   DIR].\
    \ Grouping of related types is a useful technique to communicate\n   common semantics\
    \ concerning the properties of a vCard.\n"
- title: 2.6 Line Delimiting and Folding
  contents:
  - "2.6 Line Delimiting and Folding\n   This profile supports the same line delimiting\
    \ and folding methods\n   defined in [MIME-DIR]. Specifically, when parsing a\
    \ content line,\n   folded lines must first be unfolded according to the unfolding\n\
    \   procedure described in [MIME-DIR]. After generating a content line,\n   lines\
    \ longer than 75 characters SHOULD be folded according to the\n   folding procedure\
    \ described in [MIME DIR].\n   Folding is done after any content encoding of a\
    \ type value. Unfolding\n   is done before any decoding of a type value in a content\
    \ line.\n"
- title: 3.  vCard Profile Features
  contents:
  - "3.  vCard Profile Features\n   The vCard MIME Directory Profile Type contains\
    \ directory information,\n   typically pertaining to a single directory entry.\
    \ The information is\n   described using an attribute schema that is tailored\
    \ for capturing\n   personal contact information. The vCard can include attributes\
    \ that\n   describe identification, delivery addressing, telecommunications\n\
    \   addressing, geographical, organizational, general explanatory and\n   security\
    \ and access information about the particular object\n   associated with the vCard.\n"
- title: 3.1 Identification Types
  contents:
  - "3.1 Identification Types\n   These types are used in the vCard profile to capture\
    \ information\n   associated with the identification and naming of the person\
    \ or\n   resource associated with the vCard.\n"
- title: 3.1.1 FN Type Definition
  contents:
  - "3.1.1 FN Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type FN\n   Type name:FN\n   Type purpose: To specify\
    \ the formatted text corresponding to the name\n   of the object the vCard represents.\n\
    \   Type encoding: 8bit\n   Type value: A single text value.\n   Type special\
    \ notes: This type is based on the semantics of the X.520\n   Common Name attribute.\
    \ The property MUST be present in the vCard\n   object.\n   Type example:\n  \
    \      FN:Mr. John Q. Public\\, Esq.\n"
- title: 3.1.2 N Type Definition
  contents:
  - "3.1.2 N Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type N\n   Type name: N\n   Type purpose: To specify\
    \ the components of the name of the object the\n   vCard represents.\n   Type\
    \ encoding: 8bit\n   Type value: A single structured text value. Each component\
    \ can have\n   multiple values.\n   Type special note: The structured type value\
    \ corresponds, in\n   sequence, to the Family Name, Given Name, Additional Names,\
    \ Honorific\n   Prefixes, and Honorific Suffixes. The text components are separated\n\
    \   by the SEMI-COLON character (ASCII decimal 59). Individual text\n   components\
    \ can include multiple text values (e.g., multiple\n   Additional Names) separated\
    \ by the COMMA character (ASCII decimal\n   44). This type is based on the semantics\
    \ of the X.520 individual name\n   attributes. The property MUST be present in\
    \ the vCard object.\n   Type example:\n        N:Public;John;Quinlan;Mr.;Esq.\n\
    \        N:Stevenson;John;Philip,Paul;Dr.;Jr.,M.D.,A.C.P.\n"
- title: 3.1.3 NICKNAME Type Definition
  contents:
  - "3.1.3 NICKNAME Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type NICKNAME\n   Type name: NICKNAME\n\
    \   Type purpose: To specify the text corresponding to the nickname of\n   the\
    \ object the vCard represents.\n   Type encoding: 8bit\n   Type value: One or\
    \ more text values separated by a COMMA character\n   (ASCII decimal 44).\n  \
    \ Type special note: The nickname is the descriptive name given instead\n   of\
    \ or in addition to the one belonging to a person, place, or thing.\n   It can\
    \ also be used to specify a familiar form of a proper name\n   specified by the\
    \ FN or N types.\n   Type example:\n        NICKNAME:Robbie\n        NICKNAME:Jim,Jimmie\n"
- title: 3.1.4 PHOTO Type Definition
  contents:
  - "3.1.4 PHOTO Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type PHOTO\n   Type name: PHOTO\n   Type\
    \ purpose: To specify an image or photograph information that\n   annotates some\
    \ aspect of the object the vCard represents.\n   Type encoding: The encoding MUST\
    \ be reset to \"b\" using the ENCODING\n   parameter in order to specify inline,\
    \ encoded binary data. If the\n   value is referenced by a URI value, then the\
    \ default encoding of 8bit\n   is used and no explicit ENCODING parameter is needed.\n\
    \   Type value: A single value. The default is binary value. It can also\n   be\
    \ reset to uri value. The uri value can be used to specify a value\n   outside\
    \ of this MIME entity.\n   Type special notes: The type can include the type parameter\
    \ \"TYPE\" to\n   specify the graphic image format type. The TYPE parameter values\
    \ MUST\n   be one of the IANA registered image formats or a non-standard image\n\
    \   format.\n   Type example:\n        PHOTO;VALUE=uri:http://www.abc.com/pub/photos\n\
    \         /jqpublic.gif\n        PHOTO;ENCODING=b;TYPE=JPEG:MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcN\n\
    \         AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm\n   \
    \      ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0\n      \
    \   <...remainder of \"B\" encoded binary data...>\n"
- title: 3.1.5 BDAY Type Definition
  contents:
  - "3.1.5 BDAY Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type BDAY\n   Type name: BDAY\n   Type purpose: To specify\
    \ the birth date of the object the vCard\n   represents.\n   Type encoding: 8bit\n\
    \   Type value: The default is a single date value. It can also be reset\n   to\
    \ a single date-time value.\n   Type examples:\n        BDAY:1996-04-15\n    \
    \    BDAY:1953-10-15T23:10:00Z\n        BDAY:1987-09-27T08:30:00-06:00\n"
- title: 3.2 Delivery Addressing Types
  contents:
  - "3.2 Delivery Addressing Types\n   These types are concerned with information\
    \ related to the delivery\n   addressing or label for the vCard object.\n"
- title: 3.2.1 ADR Type Definition
  contents:
  - "3.2.1 ADR Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type ADR\n   Type name: ADR\n   Type purpose: To specify\
    \ the components of the delivery address for\n   the vCard object.\n   Type encoding:\
    \ 8bit\n   Type value: A single structured text value, separated by the\n   SEMI-COLON\
    \ character (ASCII decimal 59).\n   Type special notes: The structured type value\
    \ consists of a sequence\n   of address components. The component values MUST\
    \ be specified in\n   their corresponding position. The structured type value\
    \ corresponds,\n   in sequence, to the post office box; the extended address;\
    \ the street\n   address; the locality (e.g., city); the region (e.g., state or\n\
    \   province); the postal code; the country name. When a component value\n   is\
    \ missing, the associated component separator MUST still be\n   specified.\n \
    \  The text components are separated by the SEMI-COLON character (ASCII\n   decimal\
    \ 59). Where it makes semantic sense, individual text\n   components can include\
    \ multiple text values (e.g., a \"street\"\n   component with multiple lines)\
    \ separated by the COMMA character\n   (ASCII decimal 44).\n   The type can include\
    \ the type parameter \"TYPE\" to specify the\n   delivery address type. The TYPE\
    \ parameter values can include \"dom\" to\n   indicate a domestic delivery address;\
    \ \"intl\" to indicate an\n   international delivery address; \"postal\" to indicate\
    \ a postal\n   delivery address; \"parcel\" to indicate a parcel delivery address;\n\
    \   \"home\" to indicate a delivery address for a residence; \"work\" to\n   indicate\
    \ delivery address for a place of work; and \"pref\" to indicate\n   the preferred\
    \ delivery address when more than one address is\n   specified. These type parameter\
    \ values can be specified as a\n   parameter list (i.e., \"TYPE=dom;TYPE=postal\"\
    ) or as a value list\n   (i.e., \"TYPE=dom,postal\"). This type is based on semantics\
    \ of the\n   X.520 geographical and postal addressing attributes. The default\
    \ is\n   \"TYPE=intl,postal,parcel,work\". The default can be overridden to some\n\
    \   other set of values by specifying one or more alternate values. For\n   example,\
    \ the default can be reset to \"TYPE=dom,postal,work,home\" to\n   specify a domestic\
    \ delivery address for postal delivery to a\n   residence that is also used for\
    \ work.\n   Type example: In this example the post office box and the extended\n\
    \   address are absent.\n        ADR;TYPE=dom,home,postal,parcel:;;123 Main\n\
    \          Street;Any Town;CA;91921-1234\n"
- title: 3.2.2 LABEL Type Definition
  contents:
  - "3.2.2 LABEL Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type LABEL\n   Type name: LABEL\n   Type\
    \ purpose: To specify the formatted text corresponding to delivery\n   address\
    \ of the object the vCard represents.\n   Type encoding: 8bit\n   Type value:\
    \ A single text value.\n   Type special notes: The type value is formatted text\
    \ that can be used\n   to present a delivery address label for the vCard object.\
    \ The type\n   can include the type parameter \"TYPE\" to specify delivery label\
    \ type.\n   The TYPE parameter values can include \"dom\" to indicate a domestic\n\
    \   delivery label; \"intl\" to indicate an international delivery label;\n  \
    \ \"postal\" to indicate a postal delivery label; \"parcel\" to indicate a\n \
    \  parcel delivery label; \"home\" to indicate a delivery label for a\n   residence;\
    \ \"work\" to indicate delivery label for a place of work; and\n   \"pref\" to\
    \ indicate the preferred delivery label when more than one\n   label is specified.\
    \ These type parameter values can be specified as a\n   parameter list (i.e.,\
    \ \"TYPE=dom;TYPE=postal\") or as a value list\n   (i.e., \"TYPE=dom,postal\"\
    ). This type is based on semantics of the\n   X.520 geographical and postal addressing\
    \ attributes. The default is\n   \"TYPE=intl,postal,parcel,work\". The default\
    \ can be overridden to some\n   other set of values by specifying one or more\
    \ alternate values. For\n   example, the default can be reset to \"TYPE=intl,post,parcel,home\"\
    \ to\n   specify an international delivery label for both postal and parcel\n\
    \   delivery to a residential location.\n   Type example: A multi-line address\
    \ label.\n        LABEL;TYPE=dom,home,postal,parcel:Mr.John Q. Public\\, Esq.\\\
    n\n         Mail Drop: TNE QB\\n123 Main Street\\nAny Town\\, CA  91921-1234\n\
    \         \\nU.S.A.\n"
- title: 3.3 Telecommunications Addressing Types
  contents:
  - "3.3 Telecommunications Addressing Types\n   These types are concerned with information\
    \ associated with the\n   telecommunications addressing of the object the vCard\
    \ represents.\n"
- title: 3.3.1 TEL Type Definition
  contents:
  - "3.3.1 TEL Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type TEL\n   Type name: TEL\n   Type purpose: To specify\
    \ the telephone number for telephony\n   communication with the object the vCard\
    \ represents.\n   Type encoding: 8bit\n   Type value: A single phone-number value.\n\
    \   Type special notes: The value of this type is specified in a\n   canonical\
    \ form in order to specify an unambiguous representation of\n   the globally unique\
    \ telephone endpoint. This type is based on the\n   X.500 Telephone Number attribute.\n\
    \   The type can include the type parameter \"TYPE\" to specify intended\n   use\
    \ for the telephone number. The TYPE parameter values can include:\n   \"home\"\
    \ to indicate a telephone number associated with a residence,\n   \"msg\" to indicate\
    \ the telephone number has voice messaging support,\n   \"work\" to indicate a\
    \ telephone number associated with a place of\n   work, \"pref\" to indicate a\
    \ preferred-use telephone number, \"voice\" to\n   indicate a voice telephone\
    \ number, \"fax\" to indicate a facsimile\n   telephone number, \"cell\" to indicate\
    \ a cellular telephone number,\n   \"video\" to indicate a video conferencing\
    \ telephone number, \"pager\" to\n   indicate a paging device telephone number,\
    \ \"bbs\" to indicate a\n   bulletin board system telephone number, \"modem\"\
    \ to indicate a MODEM\n   connected telephone number, \"car\" to indicate a car-phone\
    \ telephone\n   number, \"isdn\" to indicate an ISDN service telephone number,\
    \ \"pcs\" to\n   indicate a personal communication services telephone number.\
    \ The\n   default type is \"voice\". These type parameter values can be specified\n\
    \   as a parameter list (i.e., \"TYPE=work;TYPE=voice\") or as a value list\n\
    \   (i.e., \"TYPE=work,voice\"). The default can be overridden to another\n  \
    \ set of values by specifying one or more alternate values. For\n   example, the\
    \ default TYPE of \"voice\" can be reset to a WORK and HOME,\n   VOICE and FAX\
    \ telephone number by the value list\n   \"TYPE=work,home,voice,fax\".\n   Type\
    \ example:\n        TEL;TYPE=work,voice,pref,msg:+1-213-555-1234\n"
- title: 3.3.2 EMAIL Type Definition
  contents:
  - "3.3.2 EMAIL Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type EMAIL\n   Type name: EMAIL\n   Type\
    \ purpose: To specify the electronic mail address for\n   communication with the\
    \ object the vCard represents.\n   Type encoding: 8bit\n   Type value: A single\
    \ text value.\n   Type special notes: The type can include the type parameter\
    \ \"TYPE\" to\n   specify the format or preference of the electronic mail address.\
    \ The\n   TYPE parameter values can include: \"internet\" to indicate an Internet\n\
    \   addressing type, \"x400\" to indicate a X.400 addressing type or \"pref\"\n\
    \   to indicate a preferred-use email address when more than one is\n   specified.\
    \ Another IANA registered address type can also be\n   specified. The default\
    \ email type is \"internet\". A non-standard value\n   can also be specified.\n\
    \   Type example:\n        EMAIL;TYPE=internet:jqpublic@xyz.dom1.com\n       \
    \ EMAIL;TYPE=internet:jdoe@isp.net\n        EMAIL;TYPE=internet,pref:jane_doe@abc.com\n"
- title: 3.3.3 MAILER Type Definition
  contents:
  - "3.3.3 MAILER Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type MAILER\n   Type name: MAILER\n   Type\
    \ purpose: To specify the type of electronic mail software that is\n   used by\
    \ the individual associated with the vCard.\n   Type encoding: 8bit\n   Type value:\
    \ A single text value.\n   Type special notes: This information can provide assistance\
    \ to a\n   correspondent regarding the type of data representation which can be\n\
    \   used, and how they can be packaged. This property is based on the\n   private\
    \ MIME type X-Mailer that is generally implemented by MIME user\n   agent products.\n\
    \   Type example:\n        MAILER:PigeonMail 2.1\n"
- title: 3.4 Geographical Types
  contents:
  - "3.4 Geographical Types\n   These types are concerned with information associated\
    \ with\n   geographical positions or regions associated with the object the\n\
    \   vCard represents.\n"
- title: 3.4.1 TZ Type Definition
  contents:
  - "3.4.1 TZ Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type TZ\n   Type name: TZ\n   Type purpose: To specify\
    \ information related to the time zone of the\n   object the vCard represents.\n\
    \   Type encoding: 8bit\n   Type value: The default is a single utc-offset value.\
    \ It can also be\n   reset to a single text value.\n   Type special notes: The\
    \ type value consists of a single value.\n   Type examples:\n        TZ:-05:00\n\
    \        TZ;VALUE=text:-05:00; EST; Raleigh/North America\n        ;This example\
    \ has a single value, not a structure text value.\n"
- title: 3.4.2 GEO Type Definition
  contents:
  - "3.4.2 GEO Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type GEO\n   Type name: GEO\n   Type purpose: To specify\
    \ information related to the global\n   positioning of the object the vCard represents.\n\
    \   Type encoding: 8bit\n   Type value: A single structured value consisting of\
    \ two float values\n   separated by the SEMI-COLON character (ASCII decimal 59).\n\
    \   Type special notes: This type specifies information related to the\n   global\
    \ position of the object associated with the vCard. The value\n   specifies latitude\
    \ and longitude, in that order (i.e., \"LAT LON\"\n   ordering). The longitude\
    \ represents the location east and west of the\n   prime meridian as a positive\
    \ or negative real number, respectively.\n   The latitude represents the location\
    \ north and south of the equator\n   as a positive or negative real number, respectively.\
    \ The longitude\n   and latitude values MUST be specified as decimal degrees and\
    \ should\n   be specified to six decimal places. This will allow for granularity\n\
    \   within a meter of the geographical position. The text components are\n   separated\
    \ by the SEMI-COLON character (ASCII decimal 59). The simple\n   formula for converting\
    \ degrees-minutes-seconds into decimal degrees\n   is:\n        decimal = degrees\
    \ + minutes/60 + seconds/3600.\n   Type example:\n        GEO:37.386013;-122.082932\n"
- title: 3.5 Organizational Types
  contents:
  - "3.5 Organizational Types\n   These types are concerned with information associated\
    \ with\n   characteristics of the organization or organizational units of the\n\
    \   object the vCard represents.\n"
- title: 3.5.1 TITLE Type Definition
  contents:
  - "3.5.1 TITLE Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type TITLE\n   Type name: TITLE\n   Type\
    \ purpose: To specify the job title, functional position or\n   function of the\
    \ object the vCard represents.\n   Type encoding: 8bit\n   Type value: A single\
    \ text value.\n   Type special notes: This type is based on the X.520 Title attribute.\n\
    \   Type example:\n        TITLE:Director\\, Research and Development\n"
- title: 3.5.2 ROLE Type Definition
  contents:
  - "3.5.2 ROLE Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type ROLE\n   Type name: ROLE\n   Type purpose: To specify\
    \ information concerning the role, occupation,\n   or business category of the\
    \ object the vCard represents.\n   Type encoding: 8bit\n   Type value: A single\
    \ text value.\n   Type special notes: This type is based on the X.520 Business\
    \ Category\n   explanatory attribute. This property is included as an organizational\n\
    \   type to avoid confusion with the semantics of the TITLE type and\n   incorrect\
    \ usage of that type when the semantics of this type is\n   intended.\n   Type\
    \ example:\n        ROLE:Programmer\n"
- title: 3.5.3 LOGO Type Definition
  contents:
  - "3.5.3 LOGO Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type LOGO\n   Type name: LOGO\n   Type purpose: To specify\
    \ a graphic image of a logo associated with\n   the object the vCard represents.\n\
    \   Type encoding: The encoding MUST be reset to \"b\" using the ENCODING\n  \
    \ parameter in order to specify inline, encoded binary data. If the\n   value\
    \ is referenced by a URI value, then the default encoding of 8bit\n   is used\
    \ and no explicit ENCODING parameter is needed.\n   Type value: A single value.\
    \ The default is binary value. It can also\n   be reset to uri value. The uri\
    \ value can be used to specify a value\n   outside of this MIME entity.\n   Type\
    \ special notes: The type can include the type parameter \"TYPE\" to\n   specify\
    \ the graphic image format type. The TYPE parameter values MUST\n   be one of\
    \ the IANA registered image formats or a non-standard image\n   format.\n   Type\
    \ example:\n        LOGO;VALUE=uri:http://www.abc.com/pub/logos/abccorp.jpg\n\
    \        LOGO;ENCODING=b;TYPE=JPEG:MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcN\n    \
    \     AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm\n       \
    \  ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0\n         <...the\
    \ remainder of \"B\" encoded binary data...>\n"
- title: 3.5.4 AGENT Type Definition
  contents:
  - "3.5.4 AGENT Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type AGENT\n   Type name: AGENT\n   Type\
    \ purpose: To specify information about another person who will\n   act on behalf\
    \ of the individual or resource associated with the\n   vCard.\n   Type encoding:\
    \ 8-bit\n   Type value: The default is a single vcard value. It can also be reset\n\
    \   to either a single text or uri value. The text value can be used to\n   specify\
    \ textual information. The uri value can be used to specify\n   information outside\
    \ of this MIME entity.\n   Type special notes: This type typically is used to\
    \ specify an area\n   administrator, assistant, or secretary for the individual\
    \ associated\n   with the vCard. A key characteristic of the Agent type is that\
    \ it\n   represents somebody or something that is separately addressable.\n  \
    \ Type example:\n        AGENT;VALUE=uri:\n         CID:JQPUBLIC.part3.960129T083020.xyzMail@host3.com\n\
    \        AGENT:BEGIN:VCARD\\nFN:Susan Thomas\\nTEL:+1-919-555-\n         1234\\\
    nEMAIL\\;INTERNET:sthomas@host.com\\nEND:VCARD\\n\n"
- title: 3.5.5 ORG Type Definition
  contents:
  - "3.5.5 ORG Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type ORG\n   Type name: ORG\n   Type purpose: To specify\
    \ the organizational name and units associated\n   with the vCard.\n   Type encoding:\
    \ 8bit\n   Type value: A single structured text value consisting of components\n\
    \   separated the SEMI-COLON character (ASCII decimal 59).\n   Type special notes:\
    \ The type is based on the X.520 Organization Name\n   and Organization Unit attributes.\
    \ The type value is a structured type\n   consisting of the organization name,\
    \ followed by one or more levels\n   of organizational unit names.\n   Type example:\
    \ A type value consisting of an organizational name,\n   organizational unit #1\
    \ name and organizational unit #2 name.\n        ORG:ABC\\, Inc.;North American\
    \ Division;Marketing\n"
- title: 3.6 Explanatory Types
  contents:
  - "3.6 Explanatory Types\n   These types are concerned with additional explanations,\
    \ such as that\n   related to informational notes or revisions specific to the\
    \ vCard.\n"
- title: 3.6.1 CATEGORIES Type Definition
  contents:
  - "3.6.1 CATEGORIES Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type CATEGORIES\n   Type name: CATEGORIES\n\
    \   Type purpose: To specify application category information about the\n   vCard.\n\
    \   Type encoding: 8bit\n   Type value: One or more text values separated by a\
    \ COMMA character\n   (ASCII decimal 44).\n   Type example:\n        CATEGORIES:TRAVEL\
    \ AGENT\n        CATEGORIES:INTERNET,IETF,INDUSTRY,INFORMATION TECHNOLOGY\n"
- title: 3.6.2 NOTE Type Definition
  contents:
  - "3.6.2 NOTE Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type NOTE\n   Type name: NOTE\n   Type purpose: To specify\
    \ supplemental information or a comment that\n   is associated with the vCard.\n\
    \   Type encoding: 8bit\n   Type value: A single text value.\n   Type special\
    \ notes: The type is based on the X.520 Description\n   attribute.\n   Type example:\n\
    \        NOTE:This fax number is operational 0800 to 1715\n          EST\\, Mon-Fri.\n"
- title: 3.6.3 PRODID Type Definition
  contents:
  - "3.6.3 PRODID Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type PRODID\n   Type name: PRODID\n   Type\
    \ purpose: To specify the identifier for the product that created\n   the vCard\
    \ object.\n   Type encoding: 8-bit\n   Type value: A single text value.\n   Type\
    \ special notes: Implementations SHOULD use a method such as that\n   specified\
    \ for Formal Public Identifiers in ISO 9070 to assure that\n   the text value\
    \ is unique.\n   Type example:\n        PRODID:-//ONLINE DIRECTORY//NONSGML Version\
    \ 1//EN\n"
- title: 3.6.4 REV Type Definition
  contents:
  - "3.6.4 REV Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type REV\n   Type name: REV\n   Type purpose: To specify\
    \ revision information about the current\n   vCard.\n   Type encoding: 8-bit\n\
    \   Type value: The default is a single date-time value. Can also be\n   reset\
    \ to a single date value.\n   Type special notes: The value distinguishes the\
    \ current revision of\n   the information in this vCard for other renditions of\
    \ the\n   information.\n   Type example:\n        REV:1995-10-31T22:27:10Z\n \
    \       REV:1997-11-15\n"
- title: 3.6.5 SORT-STRING Type Definition
  contents:
  - "3.6.5 SORT-STRING Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type SORT-STRING\n   Type Name: SORT-STRING\n\
    \   Type purpose: To specify the family name or given name text to be\n   used\
    \ for national-language-specific sorting of the FN and N types.\n   Type encoding:\
    \ 8bit\n   Type value: A single text value.\n   Type special notes: The sort string\
    \ is used to provide family name or\n   given name text that is to be used in\
    \ locale- or national-language-\n   specific sorting of the formatted name and\
    \ structured name types.\n   Without this information, sorting algorithms could\
    \ incorrectly sort\n   this vCard within a sequence of sorted vCards.  When this\
    \ type is\n   present in a vCard, then this family name or given name value is\
    \ used\n   for sorting the vCard.\n   Type examples: For the case of family name\
    \ sorting, the following\n   examples define common sort string usage with the\
    \ FN and N types.\n        FN:Rene van der Harten\n        N:van der Harten;Rene;J.;Sir;R.D.O.N.\n\
    \        SORT-STRING:Harten\n        FN:Robert Pau Shou Chang\n        N:Pau;Shou\
    \ Chang;Robert\n        SORT-STRING:Pau\n        FN:Osamu Koura\n        N:Koura;Osamu\n\
    \        SORT-STRING:Koura\n        FN:Oscar del Pozo\n        N:del Pozo Triscon;Oscar\n\
    \        SORT-STRING:Pozo\n        FN:Chistine d'Aboville\n        N:d'Aboville;Christine\n\
    \        SORT-STRING:Aboville\n"
- title: 3.6.6 SOUND Type Definition
  contents:
  - "3.6.6 SOUND Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type SOUND\n   Type name: SOUND\n   Type\
    \ purpose: To specify a digital sound content information that\n   annotates some\
    \ aspect of the vCard. By default this type is used to\n   specify the proper\
    \ pronunciation of the name type value of the vCard.\n   Type encoding: The encoding\
    \ MUST be reset to \"b\" using the ENCODING\n   parameter in order to specify\
    \ inline, encoded binary data. If the\n   value is referenced by a URI value,\
    \ then the default encoding of 8bit\n   is used and no explicit ENCODING parameter\
    \ is needed.\n   Type value: A single value. The default is binary value. It can\
    \ also\n   be reset to uri value. The uri value can be used to specify a value\n\
    \   outside of this MIME entity.\n   Type special notes: The type can include\
    \ the type parameter \"TYPE\" to\n   specify the audio format type. The TYPE parameter\
    \ values MUST be one\n   of the IANA registered audio formats or a non-standard\
    \ audio format.\n   Type example:\n        SOUND;TYPE=BASIC;VALUE=uri:CID:JOHNQPUBLIC.part8.\n\
    \         19960229T080000.xyzMail@host1.com\n        SOUND;TYPE=BASIC;ENCODING=b:MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcN\n\
    \         AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm\n   \
    \      ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0\n      \
    \   <...the remainder of \"B\" encoded binary data...>\n"
- title: 3.6.7 UID Type Definition
  contents:
  - "3.6.7 UID Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type UID\n   Type name: UID\n   Type purpose: To specify\
    \ a value that represents a globally unique\n   identifier corresponding to the\
    \ individual or resource associated\n   with the vCard.\n   Type encoding: 8bit\n\
    \   Type value: A single text value.\n   Type special notes: The type is used\
    \ to uniquely identify the object\n   that the vCard represents.\n   The type\
    \ can include the type parameter \"TYPE\" to specify the format\n   of the identifier.\
    \ The TYPE parameter value should be an IANA\n   registered identifier format.\
    \ The value can also be a non-standard\n   format.\n   Type example:\n       \
    \ UID:19950401-080045-40000F192713-0052\n"
- title: 3.6.8 URL Type Definition
  contents:
  - "3.6.8 URL Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type URL\n   Type name: URL\n   Type purpose: To specify\
    \ a uniform resource locator associated with\n   the object that the vCard refers\
    \ to.\n   Type encoding: 8bit\n   Type value: A single uri value.\n   Type example:\n\
    \        URL:http://www.swbyps.restaurant.french/~chezchic.html\n"
- title: 3.6.9 VERSION Type Definition
  contents:
  - "3.6.9 VERSION Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type VERSION\n   Type name: VERSION\n  \
    \ Type purpose: To specify the version of the vCard specification used\n   to\
    \ format this vCard.\n   Type encoding: 8bit\n   Type value: A single text value.\n\
    \   Type special notes: The property MUST be present in the vCard object.\n  \
    \ The value MUST be \"3.0\" if the vCard corresponds to this\n   specification.\n\
    \   Type example:\n        VERSION:3.0\n"
- title: 3.7 Security Types
  contents:
  - "3.7 Security Types\n   These types are concerned with the security of communication\
    \ pathways\n   or access to the vCard.\n"
- title: 3.7.1 CLASS Type Definition
  contents:
  - "3.7.1 CLASS Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject:\
    \ Registration of text/directory MIME type CLASS\n   Type name: CLASS\n   Type\
    \ purpose: To specify the access classification for a vCard\n   object.\n   Type\
    \ encoding: 8bit\n   Type value: A single text value.\n   Type special notes:\
    \ An access classification is only one component of\n   the general security model\
    \ for a directory service. The\n   classification attribute provides a method\
    \ of capturing the intent of\n   the owner for general access to information described\
    \ by the vCard\n   object.\n   Type examples:\n        CLASS:PUBLIC\n        CLASS:PRIVATE\n\
    \        CLASS:CONFIDENTIAL\n"
- title: 3.7.2 KEY Type Definition
  contents:
  - "3.7.2 KEY Type Definition\n   To: ietf-mime-directory@imc.org\n   Subject: Registration\
    \ of text/directory MIME type KEY\n   Type name: KEY\n   Type purpose: To specify\
    \ a public key or authentication certificate\n   associated with the object that\
    \ the vCard represents.\n   Type encoding: The encoding MUST be reset to \"b\"\
    \ using the ENCODING\n   parameter in order to specify inline, encoded binary\
    \ data. If the\n   value is a text value, then the default encoding of 8bit is\
    \ used and\n   no explicit ENCODING parameter is needed.\n   Type value: A single\
    \ value. The default is binary. It can also be\n   reset to text value. The text\
    \ value can be used to specify a text\n   key.\n   Type special notes: The type\
    \ can also include the type parameter TYPE\n   to specify the public key or authentication\
    \ certificate format. The\n   parameter type should specify an IANA registered\
    \ public key or\n   authentication certificate format. The parameter type can\
    \ also\n   specify a non-standard format.\n   Type example:\n        KEY;ENCODING=b:MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQA\n\
    \         wdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENbW11bmljYX\n       \
    \  Rpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0\n         ZW1zMRwwGgYDVQQDExNyb290Y2EubmV0c2NhcGUuY29tMB4XDTk3MDYwNj\n\
    \         E5NDc1OVoXDTk3MTIwMzE5NDc1OVowgYkxCzAJBgNVBAYTAlVTMSYwJAYD\n       \
    \  VQQKEx1OZXRzY2FwZSBDb21tdW5pY2F0aW9ucyBDb3JwLjEYMBYGA1UEAx\n         MPVGltb3RoeSBBIEhvd2VzMSEwHwYJKoZIhvcNAQkBFhJob3dlc0BuZXRz\n\
    \         Y2FwZS5jb20xFTATBgoJkiaJk/IsZAEBEwVob3dlczBcMA0GCSqGSIb3DQ\n       \
    \  EBAQUAA0sAMEgCQQC0JZf6wkg8pLMXHHCUvMfL5H6zjSk4vTTXZpYyrdN2\n         dXcoX49LKiOmgeJSzoiFKHtLOIboyludF90CgqcxtwKnAgMBAAGjNjA0MB\n\
    \         EGCWCGSAGG+EIBAQQEAwIAoDAfBgNVHSMEGDAWgBT84FToB/GV3jr3mcau\n       \
    \  +hUMbsQukjANBgkqhkiG9w0BAQQFAAOBgQBexv7o7mi3PLXadkmNP9LcIP\n         mx93HGp0Kgyx1jIVMyNgsemeAwBM+MSlhMfcpbTrONwNjZYW8vJDSoi//y\n\
    \         rZlVt9bJbs7MNYZVsyF1unsqaln4/vy6Uawfg8VUMk1U7jt8LYpo4YULU7\n       \
    \  UZHPYVUaSgVttImOHZIKi4hlPXBOhcUQ==\n"
- title: 3.8 Extended Types
  contents:
  - "3.8 Extended Types\n   The types defined by this document can be extended with\
    \ private types\n   using the non-standard, private values mechanism defined in\
    \ [RFC\n   2045]. Non-standard, private types with a name starting with \"X-\"\
    \ may\n   be defined bilaterally between two cooperating agents without outside\n\
    \   registration or standardization.\n"
- title: 4.  Formal Grammar
  contents:
  - "4.  Formal Grammar\n   The following formal grammar is provided to assist developers\
    \ in\n   building parsers for the vCard.\n   This syntax is written according\
    \ to the form described in RFC 2234,\n   but it references just this small subset\
    \ of RFC 2234 literals:\n   ;*******************************************\n   ;\
    \ Commonly Used Literal Definition\n   ;*******************************************\n\
    \   ALPHA        = %x41-5A / %x61-7A\n        ; Latin Capital Letter A-Latin Capital\
    \ Letter Z /\n        ; Latin Small Letter a-Latin Small Letter z\n   CHAR   \
    \      = %x01-7F\n        ; Any C0 Controls and Basic Latin, excluding NULL from\n\
    \        ; Code Charts, pages 7-6 through 7-9 in [UNICODE]\n   CR           =\
    \ %x0D\n        ; Carriage Return\n   LF           = %0A\n        ; Line Feed\n\
    \   CRLF         = CR LF\n        ; Internet standard newline\n   ;CTL       \
    \  = %x00-1F / %x7F\n        ; Controls. Not used, but referenced in comments.\n\
    \   DIGIT        = %x30-39\n        ; Digit Zero-Digit Nine\n   DQUOTE       =\
    \ %x22\n        ; Quotation Mark\n   HTAB         = %x09\n        ; Horizontal\
    \ Tabulation\n   SP           = %x20\n        ; space\n   VCHAR        = %x21-7E\n\
    \        ; Visible (printing) characters\n   WSP          = SP / HTAB\n      \
    \  ; White Space\n   ;*******************************************\n   ; Basic\
    \ vCard Definition\n   ;*******************************************\n   vcard_entity\
    \ = 1*(vcard)\n   vcard        = [group \".\"] \"BEGIN\" \":\" \"VCARD\" 1*CRLF\n\
    \                  1*(contentline)\n        ;A vCard object MUST include the VERSION,\
    \ FN and N types.\n                  [group \".\"] \"END\" \":\" \"VCARD\" 1*CRLF\n\
    \   contentline  = [group \".\"] name *(\";\" param ) \":\" value CRLF\n     \
    \   ; When parsing a content line, folded lines must first\n        ; be unfolded\
    \ according to the unfolding procedure\n        ; described above. When generating\
    \ a content line, lines\n        ; longer than 75 characters SHOULD be folded\
    \ according to\n        ; the folding procedure described in [MIME DIR].\n   group\
    \        = 1*(ALPHA / DIGIT / \"-\")\n   name         = iana-token / x-name\n\
    \        ; Parsing of the param and value is\n        ; based on the \"name\"\
    \ or type identifier\n        ; as defined in ABNF sections below\n   iana-token\
    \   = 1*(ALPHA / DIGIT / \"-\")\n        ; vCard type or parameter identifier\
    \ registered with IANA\n   x-name       = \"X-\" 1*(ALPHA / DIGIT / \"-\")\n \
    \       ; Reserved for non-standard use\n   param        = param-name \"=\" param-value\
    \ *(\",\" param-value)\n   param-name   = iana-token / x-name\n   param-value\
    \  = ptext / quoted-string\n   ptext        = *SAFE-CHAR\n   value        = *VALUE-CHAR\n\
    \   quoted-string = DQUOTE QSAFE-CHAR DQUOTE\n   NON-ASCII    = %x80-FF\n    \
    \    ; Use is restricted by CHARSET parameter\n        ; on outer MIME object\
    \ (UTF-8 preferred)\n   QSAFE-CHAR   = WSP / %x21 / %x23-7E / NON-ASCII\n    \
    \    ; Any character except CTLs, DQUOTE\n   SAFE-CHAR    = WSP / %x21 / %x23-2B\
    \ / %x2D-39 / %x3C-7E / NON-ASCII\n        ; Any character except CTLs, DQUOTE,\
    \ \";\", \":\", \",\"\n   VALUE-CHAR   = WSP / VCHAR / NON-ASCII\n        ; Any\
    \ textual character\n   ;*******************************************\n   ; vCard\
    \ Type Definition\n   ;\n   ; Provides type-specific definitions for how the\n\
    \   ; \"value\" and \"param\" are defined.\n   ;*******************************************\n\
    \   ;For name=\"NAME\"\n   param        = \"\"\n        ; No parameters allowed\n\
    \   value        = text-value\n   ;For name=\"PROFILE\"\n   param        = \"\"\
    \n        ; No parameters allowed\n   value        = text-value\n        ; Value\
    \ MUST be the case insensitive value \"VCARD\n   ;For name=\"SOURCE\"\n   param\
    \        = source-param\n        ; No parameters allowed\n   value        = uri\n\
    \   source-param = (\"VALUE\" \"=\" \"uri\")\n                / (\"CONTEXT\" \"\
    =\" \"word\")\n        ; Parameter value specifies the protocol context\n    \
    \    ; for the uri value.\n                / (x-name \"=\" *SAFE-CHAR)\n   ;For\
    \ name=\"FN\"\n   ;This type MUST be included in a vCard object.\n   param   \
    \     = text-param\n        ; Text parameters allowed\n   value        = text-value\n\
    \   ;For name=\"N\"\n   ;This type MUST be included in a vCard object.\n   param\
    \        = text-param\n        ; Text parameters allowed\n   value        = n-value\n\
    \   n-value      = 0*4(text-value *(\",\" text-value) \";\")\n               \
    \   text-value *(\",\" text-value)\n        ; Family; Given; Middle; Prefix; Suffix.\n\
    \        ; Example: Public;John;Quincy,Adams;Reverend Dr. III\n   ;For name=\"\
    NICKNAME\"\n   param        = text-param\n        ; Text parameters allowed\n\
    \   value        = text-list\n   ;For name=\"PHOTO\"\n   param        = img-inline-param\n\
    \        ; Only image parameters allowed\n   param        =/ img-refer-param\n\
    \        ; Only image parameters allowed\n   value        = img-inline-value\n\
    \        ; Value and parameter MUST match\n   value        =/ img-refer-value\n\
    \        ; Value and parameter MUST match\n   ;For name=\"BDAY\"\n   param   \
    \     = (\"VALUE\" \"=\" \"date\")\n        ; Only value parameter allowed\n \
    \  param        =/ (\"VALUE\" \"=\" \"date-time\")\n        ; Only value parameter\
    \ allowed\n   value        = date-value\n        ; Value MUST match value type\n\
    \   value        =/ date-time-value\n        ; Value MUST match value type\n \
    \  ;For name=\"ADR\"\n   param        = adr-param / text-param\n        ; Only\
    \ adr and text parameters allowed\n   value        = adr-value\n   ;For name=\"\
    LABEL\"\n   param        = adr-param / text-param\n        ; Only adr and text\
    \ parameters allowed\n   value        = text-value\n   ;For name=\"TEL\"\n   param\
    \        = tel-param\n        ; Only tel parameters allowed\n   value        =\
    \ phone-number-value\n   tel-param    = \"TYPE\" \"=\" tel-type *(\",\" tel-type)\n\
    \   tel-type     = \"HOME\" / \"WORK\" / \"PREF\" / \"VOICE\" / \"FAX\" / \"MSG\"\
    \n                / \"CELL\" / \"PAGER\" / \"BBS\" / \"MODEM\" / \"CAR\" / \"\
    ISDN\"\n                / \"VIDEO\" / \"PCS\" / iana-token / x-name\n        ;\
    \ Values are case insensitive\n   ;For name=\"EMAIL\"\n   param        = email-param\n\
    \        ; Only email parameters allowed\n   value        = text-value\n   email-param\
    \  = \"TYPE\" \"=\" email-type [\",\" \"PREF\"]\n        ; Value is case insensitive\n\
    \   email-type   = \"INTERNET\" / \"X400\" / iana-token / \"X-\" word\n      \
    \  ; Values are case insensitive\n   ;For name=\"MAILER\"\n   param        = text-param\n\
    \        ; Only text parameters allowed\n   value        = text-value\n   ;For\
    \ name=\"TZ\"\n   param        = \"\"\n        ; No parameters allowed\n   value\
    \        = utc-offset-value\n   ;For name=\"GEO\"\n   param        = \"\"\n  \
    \      ; No parameters allowed\n   value        = float-value \";\" float-value\n\
    \   ;For name=\"TITLE\"\n   param        = text-param\n        ; Only text parameters\
    \ allowed\n   value        = text-value\n   ;For name=\"ROLE\"\n   param     \
    \   = text-param\n        ; Only text parameters allowed\n   value        = text-value\n\
    \   ;For name=\"LOGO\"\n   param        = img-inline-param / img-refer-param\n\
    \        ; Only image parameters allowed\n   value        = img-inline-value /\
    \ img-refer-value\n        ; Value and parameter MUST match\n   ;For name=\"AGENT\"\
    \n   param        = agent-inline-param\n   param        =/ agent-refer-param\n\
    \   value        = agent-inline-value\n        ; Value and parameter MUST match\n\
    \   value        =/ agent-refer-value\n        ; Value and parameter MUST match\n\
    \   agent-inline-param = \"\"\n        ; No parameters allowed\n   agent-refer-param\
    \ = \"VALUE\" \"=\" \"uri\"\n        ; Only value parameter allowed\n   agent-inline-value\
    \ = text-value\n        ; Value MUST be a valid vCard object\n   agent-refer-value\
    \ = uri\n        ; URI MUST refer to image content of given type\n   ;For name=\"\
    ORG\"\n   param        = text-param\n        ; Only text parameters allowed\n\
    \   value        = org-value\n   org-value    = *(text-value \";\") text-value\n\
    \        ; First is Organization Name, remainder are Organization Units.\n   ;For\
    \ name=\"CATEGORIES\"\n   param        = text-param\n        ; Only text parameters\
    \ allowed\n   value        = text-list\n   ;For name=\"NOTE\"\n   param      \
    \  = text-param\n        ; Only text parameters allowed\n   value        = text-value\n\
    \   ;For name=\"PRODID\"\n   param        = \"\"\n        ; No parameters allowed\n\
    \   value        = text-value\n   ;For name=\"REV\"\n   param        = [\"VALUE\"\
    \ =\" \"date-time\"]\n        ; Only value parameters allowed. Values are case\
    \ insensitive.\n   param        =/ \"VALUE\" =\" \"date\"\n        ; Only value\
    \ parameters allowed. Values are case insensitive.\n   value        = date-time-value\n\
    \   value        =/ date-value\n   ;For name=\"SORT-STRING\"\n   param       \
    \ = text-param\n        ; Only text parameters allowed\n   value        = text-value\n\
    \   ;For name=\"SOUND\"\n   param        = snd-inline-param\n        ; Only sound\
    \ parameters allowed\n   param        =/ snd-refer-param\n        ; Only sound\
    \ parameters allowed\n   value        = snd-line-value\n        ; Value MUST match\
    \ value type\n   value        =/ snd-refer-value\n        ; Value MUST match value\
    \ type\n   snd-inline-value     = binary-value CRLF\n        ; Value MUST be \"\
    b\" encoded audio content\n   snd-inline-param     = (\"VALUE\" \"=\" \"binary\"\
    ])\n                        / (\"ENCODING\" \"=\" \"b\")\n                   \
    \     / (\"TYPE\" \"=\" *SAFE-CHAR)\n        ; Value MUST be an IANA registered\
    \ audio type\n   snd-refer-value      = uri\n        ; URI MUST refer to audio\
    \ content of given type\n   snd-refer-param      = (\"VALUE\" \"=\" \"uri\")\n\
    \                        / (\"TYPE\" \"=\" word)\n        ; Value MUST be an IANA\
    \ registered audio type\n   ;For name=\"UID\"\n   param        = \"\"\n      \
    \  ; No parameters allowed\n   value        = text-value\n   ;For name=\"URL\"\
    \n   param        = \"\"\n        ; No parameters allowed\n   value        = uri\n\
    \   ;For name=\"VERSION\"\n   ;This type MUST be included in a vCard object.\n\
    \   param        = \"\"\n        ; No parameters allowed\n   value        = text-value\n\
    \        ; Value MUST be \"3.0\"\n   ;For name=\"CLASS\"\n   param        = \"\
    \"\n        ; No parameters allowed\n   value        = \"PUBLIC\" / \"PRIVATE\"\
    \ / \"CONFIDENTIAL\"\n                / iana-token / x-name\n        ; Value are\
    \ case insensitive\n   ;For name=\"KEY\"\n   param        = key-txt-param\n  \
    \      ; Only value and type parameters allowed\n   param        =/ key-bin-param\n\
    \        ; Only value and type parameters allowed\n   value        = text-value\n\
    \   value        =/ binary-value\n   key-txt-param = \"TYPE\" \"=\" keytype\n\
    \   key-bin-param = (\"TYPE\" \"=\" keytype)\n                 / (\"ENCODING\"\
    \ \"=\" \"b\")\n        ; Value MUST be a \"b\" encoded key or certificate\n \
    \  keytype      = \"X509\" / \"PGP\" / iana-token / x-name\n        ; Values are\
    \ case insensitive\n   ;For name=\"X-\" non-standard type\n   param        = text-param\
    \ / (x-name \"=\" param-value)\n        ; Only text or non-standard parameters\
    \ allowed\n   value        = text-value\n   ;*******************************************\n\
    \   ; vCard Commonly Used Parameter Definition\n   ;*******************************************\n\
    \   text-param   = (\"VALUE\" \"=\" \"ptext\")\n                / (\"LANGUAGE\"\
    \ \"=\" langval)\n                / (x-name \"=\" param-value)\n   langval   \
    \   = <a language string as defined in RFC 1766>\n   img-inline-value     = binary-value\n\
    \        ;Value MUST be \"b\" encoded image content\n   img-inline-param\n   img-inline-param\
    \     = (\"VALUE\" \"=\" \"binary\")\n                        / (\"ENCODING\"\
    \ \"=\" \"b\")\n                        / (\"TYPE\" \"=\" param-value\n      \
    \  ;TYPE value MUST be an IANA registered image type\n   img-refer-value = uri\n\
    \        ;URI MUST refer to image content of given type\n   img-refer-param  \
    \    = (\"VALUE\" \"=\" \"uri\")\n                        / (\"TYPE\" \"=\" param-value)\n\
    \        ;TYPE value MUST be an IANA registered image type\n   adr-param    =\
    \ (\"TYPE\" \"=\" adr-type *(\",\" adr-type))\n                / (text-param)\n\
    \   adr-type     = \"dom\" / \"intl\" / \"postal\" / \"parcel\" / \"home\"\n \
    \               / \"work\" / \"pref\" / iana-type / x-name\n   adr-value    =\
    \ 0*6(text-value \";\") text-value\n        ; PO Box, Extended Address, Street,\
    \ Locality, Region, Postal\n        ; Code, Country Name\n   ;*******************************************\n\
    \   ; vCard Type Value Definition\n   ;*******************************************\n\
    \   text-value-list      = 1*text-value *(\",\" 1*text-value)\n   text-value \
    \  = *(SAFE-CHAR / \":\" / DQUOTE / ESCAPED-CHAR)\n   ESCAPED-CHAR = \"\\\\\"\
    \ / \"\\;\" / \"\\,\" / \"\\n\" / \"\\N\")\n        ; \\\\ encodes \\, \\n or\
    \ \\N encodes newline\n        ; \\; encodes ;, \\, encodes ,\n   binary-value\
    \ = <A \"b\" encoded text value as defined in [RFC 2047]>\n   date-value   = <A\
    \ single date value as defined in [MIME-DIR]>\n   time-value   = <A single time\
    \ value as defined in [MIME-DIR]>\n   date-time-value = <A single date-time value\
    \ as defined in [MIME-DIR]\n   float-value  = <A single float value as defined\
    \ in [MIME-DIR]>\n   phone-number-value = <A single text  value as defined in\
    \ [CCITT\n                         E.163] and [CCITT X.121]>\n   uri-value   \
    \ = <A uri value as defined in [MIME-DIR]>\n   utc-offset-value = (\"+\" / \"\
    -\") time-hour \":\" time-minute\n   time-hour    = 2DIGIT                ;00-23\n\
    \   time-minute  = 2DIGIT                ;00-59\n"
- title: 5.  Differences From vCard v2.1
  contents:
  - "5.  Differences From vCard v2.1\n   This specification has been reviewed by the\
    \ IETF community. The\n   review process introduced a number of differences from\
    \ the [VCARD]\n   version 2.1. These differences require that vCard objects conforming\n\
    \   to this specification have a different version number than a vCard\n   conforming\
    \ to [VCARD]. The differences include the following:\n        . The QUOTED-PRINTABLE\
    \ inline encoding has been eliminated.\n          Only the \"B\" encoding of [RFC\
    \ 2047] is an allowed value for\n          the ENCODING parameter.\n        .\
    \ The method for specifying CRLF character sequences in text\n          type values\
    \ has been changed. The CRLF character sequence in\n          a text type value\
    \ is specified with the backslash character\n          sequence \"\\n\" or \"\\\
    N\".\n        . Any COMMA or SEMICOLON in a text type value must be backslash\n\
    \          escaped.\n        . VERSION value corresponding to this specification\
    \ MUST be\n          \"3.0\".\n        . The [MIME-DIR] predefined types of SOURCE,\
    \ NAME and PROFILE\n          are allowed.\n        . The [MIME-DIR] VALUE type\
    \ parameter for value data typing is\n          allowed. In addition, there are\
    \ extensions made to these type\n          values for additional value types used\
    \ in this specification.\n        . The [VCARD] CHARSET type parameter has been\
    \ eliminated.\n          Character set can only be specified on the CHARSET parameter\n\
    \          on the Content-Type MIME header field.\n        . The [VCARD] support\
    \ for non-significant WSP character has\n          been eliminated.\n        .\
    \ The \"TYPE=\" prefix to parameter values is required. In\n          [VCARD]\
    \ this was optional.\n        . LOGO, PHOTO and SOUND multimedia formats MUST\
    \ be either IANA\n          registered types or non-standard types.\n        .\
    \ Inline binary content must be \"B\" encoded and folded. A blank\n          line\
    \ after the encoded binary content is no longer required.\n        . TEL values\
    \ can be identified as personal communication\n          services telephone numbers\
    \ with the PCS type parameter value.\n        . The CATEGORIES, CLASS, NICKNAME,\
    \ PRODID and SORT-STRING types\n          have been added.\n        . The VERSION,\
    \ N and FN types MUST be specified in a vCard.\n          This identifies the\
    \ version of the specification that the\n          object was formatted to. It\
    \ also assures that every vCard\n          will include both a structured and\
    \ formatted name that can be\n          used to identify the object.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The many valuable comments contributed by members of\
    \ the IETF ASID\n   working group are gratefully acknowledged, as are the contributions\n\
    \   by Roland Alden, Stephen Bartlett, Alec Dun, Patrik Faltstrom, Daniel\n  \
    \ Gurney, Bruce Johnston, Daniel Klaussen, Pete Miller, Keith Moore,\n   Vinod\
    \ Seraphin, Michelle Watkins. Chris Newman was especially helpful\n   in navigating\
    \ the intricacies of ABNF lore.\n"
- title: 7.  Authors' Addresses
  contents:
  - "7.  Authors' Addresses\n   BEGIN:vCard\n   VERSION:3.0\n   FN:Frank Dawson\n\
    \   ORG:Lotus Development Corporation\n   ADR;TYPE=WORK,POSTAL,PARCEL:;;6544 Battleford\
    \ Drive\n    ;Raleigh;NC;27613-3502;U.S.A.\n   TEL;TYPE=VOICE,MSG,WORK:+1-919-676-9515\n\
    \   TEL;TYPE=FAX,WORK:+1-919-676-9564\n   EMAIL;TYPE=INTERNET,PREF:Frank_Dawson@Lotus.com\n\
    \   EMAIL;TYPE=INTERNET:fdawson@earthlink.net\n   URL:http://home.earthlink.net/~fdawson\n\
    \   END:vCard\n   BEGIN:vCard\n   VERSION:3.0\n   FN:Tim Howes\n   ORG:Netscape\
    \ Communications Corp.\n   ADR;TYPE=WORK:;;501 E. Middlefield Rd.;Mountain View;\n\
    \    CA; 94043;U.S.A.\n   TEL;TYPE=VOICE,MSG,WORK:+1-415-937-3419\n   TEL;TYPE=FAX,WORK:+1-415-528-4164\n\
    \   EMAIL;TYPE=INTERNET:howes@netscape.com\n   END:vCard\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   vCards can carry cryptographic keys or certificates,\
    \ as described in\n   Section 3.7.2.\n   Section 3.7.1 specifies a desired security\
    \ classification policy for\n   a particular vCard. That policy is not enforced\
    \ in any way.\n   The vCard objects have no inherent authentication or privacy,\
    \ but can\n   easily be carried by any security mechanism that transfers MIME\n\
    \   objects with authentication or privacy. In cases where threats of\n   \"spoofed\"\
    \ vCard information is a concern, the vCard SHOULD BE\n   transported using one\
    \ of these secure mechanisms.\n   The information in a vCard may become out of\
    \ date. In cases where the\n   vitality of data is important to an originator\
    \ of a vCard, the \"URL\"\n   type described in section 3.6.8 SHOULD BE specified.\
    \ In addition, the\n   \"REV\" type described in section 3.6.4 can be specified\
    \ to indicate\n   the last time that the vCard data was updated.\n"
- title: 9.  References
  contents:
  - "9.  References\n   [ISO 8601]    ISO 8601:1988 - Data elements and interchange\
    \ formats -\n                 Information interchange - Representation of dates\
    \ and\n                 times - The International Organization for\n         \
    \        Standardization, June, 1988.\n   [ISO 8601 TC] ISO 8601, Technical Corrigendum\
    \ 1 - Data elements and\n                 interchange formats - Information interchange\
    \ -\n                 Representation of dates and times - The International\n\
    \                 Organization for Standardization, May, 1991.\n   [ISO 9070]\
    \    ISO 9070, Information Processing - SGML support\n                 facilities\
    \ - Registration Procedures for Public Text\n                 Owner Identifiers,\
    \ April, 1991.\n   [CCITT E.163] Recommendation E.163 - Numbering Plan for The\n\
    \                 International Telephone Service, CCITT Blue Book,\n        \
    \         Fascicle II.2, pp.  128-134, November, 1988.\n   [CCITT X.121] Recommendation\
    \ X.121 - International Numbering Plan for\n                 Public Data Networks,\
    \ CCITT Blue Book, Fascicle VIII.3,\n                 pp. 317-332, November, 1988.\n\
    \   [CCITT X.520] Recommendation X.520 - The Directory - Selected\n          \
    \       Attribute Types, November 1988.\n   [CCITT X.521] Recommendation X.521\
    \ - The Directory - Selected Object\n                 Classes, November 1988.\n\
    \   [MIME-DIR]    Howes, T., Smith, M., and F. Dawson, \"A MIME Content-\n   \
    \              Type for Directory Information\", RFC 2425, September\n       \
    \          1998.\n   [RFC 1738]    Berners-Lee, T., Masinter, L., and M. McCahill,\n\
    \                 \"Uniform Resource Locators (URL)\", RFC 1738, December\n  \
    \               1994.\n   [RFC 1766]    Alvestrand, H., \"Tags for the Identification\
    \ of\n                 Languages\", RFC 1766, March 1995.\n   [RFC 1872]    Levinson,\
    \ E., \"The MIME Multipart/Related Content-\n                 type\", RFC 1872,\
    \ December 1995.\n   [RFC 2045]    Freed, N., and N. Borenstein, \"Multipurpose\
    \ Internet\n                 Mail Extensions (MIME) - Part One: Format of Internet\n\
    \                 Message Bodies\", RFC 2045, November 1996.\n   [RFC 2046]  \
    \  Freed, N., and N. Borenstein, \"Multipurpose Internet\n                 Mail\
    \ Extensions (MIME) - Part Two: Media Types\", RFC\n                 2046, November\
    \ 1996.\n   [RFC 2047]    Moore, K., \"Multipurpose Internet Mail Extensions\n\
    \                 (MIME) - Part Three: Message Header Extensions for\n       \
    \          Non-ASCII Text\", RFC 2047, November 1996.\n   [RFC 2048]    Freed,\
    \ N., Klensin, J., and J. Postel, \"Multipurpose\n                 Internet Mail\
    \ Extensions (MIME) - Part Four:\n                 Registration Procedures\",\
    \ RFC 2048, January 1997.\n   [RFC 2119]    Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC 2234]    Crocker, D., and P. Overell, \"Augmented BNF for Syntax\n\
    \                 Specifications: ABNF\", RFC 2234, November 1997.\n   [UNICODE]\
    \     \"The Unicode Standard - Version 2.0\", The Unicode\n                 Consortium,\
    \ July 1996.\n   [VCARD]       Internet Mail Consortium, \"vCard - The Electronic\n\
    \                 Business Card Version 2.1\",\n                 http://www.imc.org/pdi/vcard-21.txt,\
    \ September 18,\n                 1996.\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
