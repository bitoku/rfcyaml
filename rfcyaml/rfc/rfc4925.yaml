- title: __initial_text__
  contents:
  - '                       Softwire Problem Statement

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document captures the problem statement for the Softwires\n\
    \   Working Group, which is developing standards for the discovery,\n   control,\
    \ and encapsulation methods for connecting IPv4 networks\n   across IPv6-only\
    \ networks as well as IPv6 networks across IPv4-only\n   networks.  The standards\
    \ will encourage multiple, inter-operable\n   vendor implementations by identifying,\
    \ and extending where necessary,\n   existing standard protocols to resolve a\
    \ selected set of \"IPv4/IPv6\"\n   and \"IPv6/IPv4\" transition problems.  This\
    \ document describes the\n   specific problems (\"Hubs and Spokes\" and \"Mesh\"\
    ) that will be solved\n   by the standards developed by the Softwires Working\
    \ Group.  Some\n   requirements (and non-requirements) are also identified to\
    \ better\n   describe the specific problem scope.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   2.  Hubs and Spokes Problem  . . . . . . . . . . . . . . .\
    \ . . . .  6\n     2.1.  Description  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  8\n     2.2.  Non-Upgradable CPE Router  . . . . . . . . . . . . . .\
    \ . .  9\n     2.3.  Network Address Translation (NAT) and Port Address\n    \
    \       Translation (PAT)  . . . . . . . . . . . . . . . . . . . . 10\n     2.4.\
    \  Static Prefix Delegation . . . . . . . . . . . . . . . . . 10\n     2.5.  Softwire\
    \ Initiator . . . . . . . . . . . . . . . . . . . . 11\n     2.6.  Softwire Concentrator\
    \  . . . . . . . . . . . . . . . . . . 11\n     2.7.  Softwire Concentrator Discovery\
    \  . . . . . . . . . . . . . 12\n     2.8.  Scaling  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 12\n     2.9.  Routing  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 12\n     2.10. Multicast  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 12\n     2.11. Security . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 12\n       2.11.1.  Authentication, Authorization, and Accounting\n\
    \                (AAA) . . . . . . . . . . . . . . . . . . . . . . . . 12\n  \
    \     2.11.2.  Privacy, Integrity, and Replay Protection . . . . . . 13\n    \
    \ 2.12. Operations and Management (OAM)  . . . . . . . . . . . . . 13\n     2.13.\
    \ Encapsulations . . . . . . . . . . . . . . . . . . . . . . 13\n   3.  Mesh Problem\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . 14\n     3.1.  Description\
    \  . . . . . . . . . . . . . . . . . . . . . . . 14\n     3.2.  Scaling  . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 16\n     3.3.  Persistence, Discovery,\
    \ and Setup Time . . . . . . . . . . 16\n     3.4.  Multicast  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 17\n     3.5.  Softwire Encapsulation . . .\
    \ . . . . . . . . . . . . . . . 17\n     3.6.  Security . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . 17\n   4.  Security Considerations  . . . . . .\
    \ . . . . . . . . . . . . . 18\n   5.  Principal Authors  . . . . . . . . . .\
    \ . . . . . . . . . . . . 18\n   6.  Contributors . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 19\n   7.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 20\n     7.1.  Normative References . . . . . . . . . .\
    \ . . . . . . . . . 20\n     7.2.  Informative References . . . . . . . . . .\
    \ . . . . . . . . 20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Softwires Working Group is specifying the standardization\
    \ of\n   discovery, control, and encapsulation methods for connecting IPv4\n \
    \  networks across IPv6-only networks and IPv6 networks across IPv4-only\n   networks\
    \ in a way that will encourage multiple, inter-operable vendor\n   implementations.\
    \  This document describes the specific problems\n   (\"Hubs and Spokes\" and\
    \ \"Mesh\") that will be solved by the standards\n   developed by the Softwires\
    \ Working Group.  Some requirements (and\n   non-requirements) are also identified\
    \ to better describe the specific\n   problem scope.  A few generic assumptions\
    \ are listed up front:\n   o  Local Area Networks will often support both protocol\
    \ families in\n      order to accommodate both IPv4-only and IPv6-only applications,\
    \ in\n      addition to dual-stack applications.  Global reachability requires\n\
    \      the establishment of softwire connectivity to transit across\n      portions\
    \ of the network that do not support both address families.\n      Wide area networks\
    \ that support one or both address families may\n      be separated by transit\
    \ networks that do not support all address\n      families.  Softwire connectivity\
    \ is necessary to establish global\n      reachability of both address families.\n\
    \   o  Softwires are to be used in IP-based networks to forward both\n      unicast\
    \ and multicast traffic.\n   o  Softwires are assumed to be long-lived in nature.\n\
    \   o  Although Softwires are long-lived, the setup time of a softwire is\n  \
    \    expected to be a very small fraction of the total time required\n      for\
    \ the startup of the Customer Premise Equipment (CPE)/Address\n      Family Border\
    \ Router (AFBR).\n   o  The nodes that actually initiate softwires should support\
    \ dual-\n      stack (IPv4 and IPv6) functionality.\n   o  The goal of this effort\
    \ is to reuse or extend existing technology.\n      The 'time-to-market' requirement\
    \ for solutions to the stated\n      problems is very strict and existing, deployed\
    \ technology must be\n      very strongly considered in our solution selection.\n\
    \   The solution to the stated problem should address the following\n   points:\n\
    \   o  Relation of the softwire protocols to other host mechanisms in the\n  \
    \    same layer of the network stack.  Examples of mechanisms to\n      consider\
    \ are tunneling mechanisms, VPNs (Virtual Private\n      Networks), mobility,\
    \ multihoming (SHIM6 (Level 3 Shim for\n      IPv6)),...\n   o  Operational brittleness\
    \ introduced by softwire, e.g., potential\n      single point of failure or difficulties\
    \ to deploy redundant\n      systems.\n   o  Effects of softwires on the transport\
    \ layer.  Issue like packet\n      losses, congestion control, and handling of\
    \ QoS (Quality of\n      Service) reservation and usage of on-path protocols such\
    \ as RSVP\n      (Resource Reservation Protocol).\n   The history of IPv4 and\
    \ IPv6 transition strategies at the IETF is\n   very long and complex.  Here we\
    \ list out some steps we have taken to\n   further the effort and it has lead\
    \ to the creation of this document\n   and a few 'working rules' for us to accomplish\
    \ our work:\n   o  At the IETF 63 \"LightWeight Reachability softWires\" (LRW)\
    \ BOF\n      meeting, attendees from several operators requested a very tight\n\
    \      timeframe for the delivery of a solution, based on time-to-market\n   \
    \   considerations.  This problem statement is narrowly scoped to\n      accommodate\
    \ near-term deployment.\n   o  At the Paris Softwires interim meeting in October,\
    \ 2005,\n      participants divided the overall problem space into two separate\n\
    \      \"sub-problems\" to solve based on network topology.  These two\n     \
    \ problems are referred to as \"Hubs and Spokes\" (described in\n      Section\
    \ 2) and \"Mesh\" (described in Section 3).\n   As stated, there are two scenarios\
    \ that emerged when discussing the\n   traversal of networks composed of differing\
    \ address families.  The\n   scenarios are quite common in today's network deployments.\
    \  The\n   primary difference between \"Spokes and Hubs\" and \"Mesh\" is how\
    \ many\n   connections and associated routes are managed by each IPv4 or IPv6\n\
    \   \"island\".  \"Hubs and Spokes\" is characterized with one connection and\n\
    \   associated static default route, and \"Mesh\" is characterized by\n   multiple\
    \ connections and routing prefixes.  In general, the two can\n   be categorized\
    \ as host or LAN connectivity and network (or VPN)\n   connectivity problems.\
    \  Looking at the history of multi-address\n   family networking, the clear delineation\
    \ of the two scenarios was\n   never clearly illustrated but they are now the\
    \ network norm, and both\n   must be solved.  Later, during the solution phase\
    \ of the Work Group\n   (WG), these problems will be treated as related, but separate,\n\
    \   problem spaces.  Similar protocols and mechanisms will be used when\n   possible,\
    \ but different protocols and mechanisms may be selected when\n   necessary to\
    \ meet the requirements of each given problem space.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   Address Family (AF) - IPv4 or IPv6.  Presently defined\
    \ values for\n   this field are specified in\n   http://www.iana.org/assignments/address-family-numbers.\n\
    \   Address Family Border Router (AFBR) - The router that interconnects\n   two\
    \ networks that use different address families.\n   Customer Premise Equipment\
    \ (CPE) - Under the scope of this document,\n   this refers to terminal and associated\
    \ equipment and inside wiring\n   located at a subscriber's premises and connected\
    \ with a carrier's\n   communication channel(s) at the demarcation point (\"demarc\"\
    ).  The\n   demarc is a point established in a building or complex to separate\n\
    \   customer equipment from telephone, cable, or other service provider\n   equipment.\
    \  CPE can be a host or router, depending on the specific\n   characteristics\
    \ of the access network.  The demarc point for IPv4 may\n   or may not be the\
    \ same as the demarc point for IPv6, thus there can\n   be one CPE box acting\
    \ for IPv4 and IPv6 or two separate ones, one for\n   IPv4 and one for IPv6.\n\
    \   Home gateway - Existing piece of equipment that connects the home\n   network\
    \ to the provider network.  Usually act as CPE for one or both\n   address families.\n\
    \   Softwire (SW) - A \"tunnel\" that is created on the basis of a control\n \
    \  protocol setup between softwire endpoints with a shared point-to-\n   point\
    \ or multipoint-to-point state.  Softwires are generally dynamic\n   in nature\
    \ (they may be initiated and terminated on demand), but may\n   be very long-lived.\n\
    \   Softwire Concentrator (SC) - The node terminating the softwire in the\n  \
    \ service provider network.\n   Softwire Initiator (SI) - The node initiating\
    \ the softwire within the\n   customer network.\n   Softwire Transport Header\
    \ AF (STH AF) - the address family of the\n   outermost IP header of a softwire.\n\
    \   Softwire Payload Header AF (SPH AF) - the address family of the IP\n   headers\
    \ being carried within a softwire.  Note that additional\n   \"levels\" of IP\
    \ headers may be present if (for example) a tunnel is\n   carried over a softwire\
    \ - the key attribute of SPH AF is that it is\n   directly encapsulated within\
    \ the softwire and the softwire endpoint\n   will base forwarding decisions on\
    \ the SPH AF when a packet is exiting\n   the softwire.\n   Subsequent Address\
    \ Family (SAF) - Additional information about the\n   type of Network Layer Reachability\
    \ Information (e.g., unicast or\n   multicast).\n"
- title: 2.  Hubs and Spokes Problem
  contents:
  - "2.  Hubs and Spokes Problem\n   The \"Hubs and Spokes\" problem is named in reference\
    \ to the airline\n   industry where major companies have established a relatively\
    \ small\n   number of well connected hubs and then serve smaller airports from\n\
    \   those hubs.\n   Manually configured tunnels (as described in [RFC4213]) can\
    \ be a\n   sufficient transition mechanism in some situations.  However, cases\n\
    \   where Network Address Translation (NAT) traversal is a concern (see\n   Section\
    \ 2.3), or dynamic IP address configuration is required,\n   another solution\
    \ is necessary.\n   There are four variant cases of the \"Hubs and Spokes\" problem\
    \ which\n   are shown in the following figures.\n                         +-------+\
    \  +------------+  +--------+\n                         |       |  |Softwire \
    \   |  | IPv6   |\n            +---------+  | IPv4  |--|concentrator|--| Network|=>Internet\n\
    \            |v4/v6    |--|       |  +------------+  +--------+\n            |Host\
    \ CPE |  |       |\n            +---------+  |Network|\n                     \
    \    +-------+\n                       _ _ _ _ _ _ __\n                     ()_\
    \ _ _ _ _ _ __()      IPv6 SPH\n                         \"softwire\"\n      \
    \               |--------------||-------------------------|\n                \
    \        IPv4-only        IPv6 or dual-stack\n   Case 1: IPv6 connectivity across\
    \ an IPv4-only access network (STH).\n   Softwire initiator is the host CPE (directly\
    \ connected to a modem),\n   which is dual-stack.  There is no other gateway device.\
    \  The IPv4\n   traffic should not traverse the softwire.\n                  \
    \           Figure 1: Case 1\n                      +-------+  +-------------+\
    \  +--------+\n                      |       |  | Softwire    |  |   v6   |\n\
    \   +-----+  +------+  |  v4   |--| concentrator|--| Network|=>Internet\n   |v4/v6|--|v4/v6\
    \ |--|       |  +-------------+  +--------+\n   |Host |  |Router|  |Network|\n\
    \   +-----+  |v4/v6 |  |       |\n            |  CPE |  +-------+\n          \
    \  +------+\n                    _ _ _ _ _ _ __\n                  ()_ _ _ _ _\
    \ _ __()                          IPv6 SPH\n                      \"softwire\"\
    \n   |--------------||--------------||-------------------------|\n      Dual-stack\
    \       IPv4-only        IPv6 or dual-stack\n   Case 2: IPv6 connectivity across\
    \ an IPv4-only access network (STH).\n   Softwire initiator is the router CPE,\
    \ which is a dual-stack device.\n   The IPv4 traffic should not traverse the softwire.\n\
    \                             Figure 2: Case 2\n                       +-------+\
    \  +-------------+  +--------+\n                       |       |  | Softwire \
    \   |  |   v6   |\n   +------+  +------+  |  v4   |--| concentrator|--| Network|=>Internet\n\
    \   |v4/v6 |--|v4    |--|       |  +-------------+  +--------+\n   |Host  |  |Router|\
    \  |Network|\n   |v6 CPE|  |v4 CPE|  |       |\n   +------+  |      |  +-------+\n\
    \             +------+\n          _ _ _ _ _ _ _ _ _ _ _ _\n        ()_ _ _ _ _\
    \ _ _ _ _ _ _ _()                           IPv6 SPH\n                \"softwire\"\
    \n         |-----------------------||-------------------------|\n            \
    \      IPv4 only           IPv6 or dual-stack\n   Case 3: IPv6 connectivity across\
    \ an IPv4-only access network (STH).\n   The CPE is IPv4-only.  Softwire initiator\
    \ is a host, which act as an\n   IPv6 host CPE.  The IPv4 traffic should not traverse\
    \ the softwire.\n                             Figure 3: Case 3\n   +-----+\n \
    \  |v4/v6|                +-------+  +------------+  +-------+\n   |Host |   \
    \             |       |  |Softwire    |  |  v6   |\n   +-----+      +------+ \
    \ |  v4   |--|concentrator|--|Network|=>Internet\n      |         |v4    |--|\
    \       |  +------------+  +-------+\n      |---------|Router|  |Network|\n  \
    \    |         |v4 CPE|  +-------+\n   +---------+  +------+\n   |Softwire |\n\
    \   |Initiator|\n   |v6 Router|\n   |   CPE   |\n   +---------+\n            \
    \  _ _ _ _ _ _ _ _ _ _ _ _\n            ()_ _ _ _ _ _ _ _ _ _ _ _()          \
    \             IPv6 SPH\n                     \"softwire\"\n   |--------||-----------------------||----------------------|\n\
    \      Dual           IPv4 only             IPv6 or dual-stack\n      stack\n\
    \   Case 4: IPv6 connectivity across an IPv4-only access network (STH).\n   The\
    \ routing CPE is IPv4-only.  Softwire initiator is a device acting\n   as an IPv6\
    \ CPE router inside the home network.  The IPv4 traffic\n   should not traverse\
    \ the softwire.\n                             Figure 4: Case 4\n   The converse\
    \ cases exist, replacing IPv4 by IPv6 and vice versa in\n   the above figures.\n"
- title: 2.1.  Description
  contents:
  - "2.1.  Description\n   In this scenario, carriers (or large enterprise networks\
    \ acting as\n   carriers for their internal networks) have an infrastructure that\
    \ in\n   at least one device on any given path supports only one address\n   family,\
    \ with customers who wish to support applications bound to an\n   address family\
    \ that cannot be routed end-to-end.  The address family\n   that must be \"crossed\"\
    \ is called the Softwire Transport Header, or\n   STH AF (which could be either\
    \ IPv4 or IPv6).\n   In order to support applications bound to another address\
    \ family (the\n   Softwire Payload Header Address Family, or SPH AF), it is necessary\n\
    \   to establish a virtual dual-stack infrastructure (end-to-end),\n   typically\
    \ by means of automatically-established tunnels (Softwires).\n   The traffic that\
    \ can traverse the network via its native AF must not\n   be forced to take the\
    \ softwire path.  Only the traffic that otherwise\n   would not be able to be\
    \ forwarded due to the AF mismatch should be\n   forwarded within the softwire.\
    \  The goal is to avoid overwhelming the\n   softwire concentrator (SC).\n   A\
    \ network operator may choose to enable a single address family in\n   one or\
    \ several parts of this infrastructure for policy reasons (i.e.,\n   traffic on\
    \ the network is dominant in one of the address families, a\n   single address\
    \ family is used to lower Operations and Management\n   (OAM) cost, etc.) or for\
    \ technical reasons (i.e., because one or more\n   devices are not able to support\
    \ both address families).\n   There are several obstacles that may preclude support\
    \ for both\n   address families:\n   a) One or more devices (routers or some other\
    \ media-specific\n   aggregation point device) being used across the infrastructure\
    \ (core,\n   access) that supports only one address family.  Typically the reasons\n\
    \   for this situation include a lack of vendor support for one of the\n   address\
    \ families, the (perceived) cost of upgrading them, the\n   (perceived) complexity\
    \ of running both address families natively,\n   operation/management reasons\
    \ to avoid upgrades (perhaps temporarily),\n   or economic reasons (such as a\
    \ commercially insignificant amount of\n   traffic with the non-supported address\
    \ family).\n   b) The home gateway (CPE router or other equipment at the demarc\n\
    \   point), cannot be easily upgraded to support both address families.\n   Typically\
    \ the reason for this is the lack of vendor support for one\n   of the address\
    \ families, commercial or operational reasons for not\n   carrying out the upgrade\
    \ (i.e., operational changes and/or cost may\n   need to be supported by the carrier\
    \ for all the customers, which can\n   turn into millions of units), or customer\
    \ reluctance to change/\n   upgrade CPE router (cost, \"not broken, so don't change\
    \ it\").  Note\n   that the impracticality of systematic upgrades of the CPE routers\
    \ is\n   also hindering the deployment of 6to4 based solutions [RFC3056] in\n\
    \   IPv4 networks.\n"
- title: 2.2.  Non-Upgradable CPE Router
  contents:
  - "2.2.  Non-Upgradable CPE Router\n   Residential and small-office CPE equipment\
    \ may be limited to support\n   only one address family.  Often, they are owned\
    \ by a customer or\n   carrier who is unwilling or unable to upgrade them to run\
    \ in dual\n   stack mode (as shown in Figure 3 and Figure 4).\n   When the CPE\
    \ router cannot run in dual-stack mode, a softwire will\n   have to be established\
    \ by a node located behind that CPE router.\n   This can be accomplished either\
    \ by a regular host in the home running\n   softwire software (Figure 1 or Figure\
    \ 3) or by a dedicated piece of\n   hardware acting as the \"IPv6 router\" (Figure\
    \ 4).  Such a device is\n   fairly simple in design and only requires one physical\
    \ network\n   interface.  Again, only the traffic of the mismatched AF will be\n\
    \   forwarded via the softwire.  Traffic that can otherwise be forwarded\n   without\
    \ a softwire should not be encapsulated.\n"
- title: 2.3.  Network Address Translation (NAT) and Port Address Translation
  contents:
  - "2.3.  Network Address Translation (NAT) and Port Address Translation\n      (PAT)\n\
    \   A typical case of non-upgradable CPE router is a pre-existing IPv4/\n   NAT\
    \ home gateway, so the softwire solution must support NAT\n   traversal.\n   Establishing\
    \ a Softwire through NAT or PAT must be supported without\n   an explicit requirement\
    \ to \"autodetect\" NAT or PAT presence during\n   softwire setup.  Simply enabling\
    \ NAT traversal could be sufficient to\n   meet this requirement.\n   Although\
    \ the tunneling protocol must be able to traverse NATs,\n   tunneling protocols\
    \ may have an optional capability to bypass UDP\n   encapsulation if not traversing\
    \ a NAT.\n"
- title: 2.4.  Static Prefix Delegation
  contents:
  - "2.4.  Static Prefix Delegation\n   An important characteristic of this problem\
    \ in IPv4 networks is that\n   the carrier-facing CPE IP address is typically\
    \ dynamically assigned.\n   (The IP address of the node establishing the softwire\
    \ behind the CPE\n   router can also be dynamically assigned.)\n   Solutions like\
    \ external dynamic DNS and dynamic NAT port forwarding\n   have been deployed\
    \ to deal with ever changing addresses, but it would\n   be simpler if, in IPv6\
    \ networks, a static prefix was delegated to\n   customers.  Such a prefix would\
    \ allow for the registration of stable\n   addresses in the DNS and enable the\
    \ use of solutions like RFC 3041\n   [RFC3041] privacy extension or cryptographically\
    \ generated addresses\n   (CGA) [RFC3972].\n   The softwire protocol does not\
    \ need to define a new method for prefix\n   delegation; however, the Dynamic\
    \ Host Configuration Protocol for IPv6\n   (DHCPv6) prefix delegation [RFC3633]\
    \ must be able to run over a\n   softwire.\n   Link local addresses allocated\
    \ at both ends of the tunnel are enough\n   for packet forwarding, but for management\
    \ purpose like traceroute,\n   global addresses can be allocated using existing\
    \ protocols such as\n   stateless address auto-configuration [RFC2462] or DHCPv6\
    \ [RFC3315].\n   The IP addresses of the softwire link itself do not need to be\n\
    \   stable, the desire for stability only applies to the delegated\n   prefix.\
    \  Even if there is a single node attached behind a softwire\n   link, nothing\
    \ prevents a softwire concentrator to delegate it a /64\n   prefix.\n   Similarly,\
    \ in the case of an IPv4 softwire, the address could be\n   provided by means\
    \ of DHCP [RFC2131].  In the case of an IPv4\n   softwire, a mechanism should\
    \ be available in order to delegate an\n   IPv4 prefix [SUBNET].\n   Note about\
    \ 6to4: This is one of the main differences between\n   Softwires and 6to4. 6to4\
    \ addresses will change every time the CPE\n   router gets a new external address,\
    \ where a DHCPv6 delegated prefix\n   through a softwire link could be stable.\n"
- title: 2.5.  Softwire Initiator
  contents:
  - "2.5.  Softwire Initiator\n   In the \"Hubs and Spokes\" problem, softwires are\
    \ always initiated by\n   the customer side.  Thus, the node hosting the end of\
    \ the softwire\n   within the customer network is called the softwire initiator.\
    \  It can\n   run on any dual-stack node.  As noted earlier, this can be the CPE\n\
    \   access device, another dedicated CPE router behind the original CPE\n   access\
    \ device, or actually any kind of node (host, appliance, sensor,\n   etc.).\n\
    \   The softwire initiator node can change over time and may or may not\n   be\
    \ delegated the same IP address for the softwire endpoint.  In\n   particular,\
    \ softwires should work in the nomadic case (e.g., a user\n   opening up his laptop\
    \ in various Wi-Fi hot-spots), where the softwire\n   initiator could potentially\
    \ obtain an IP address of one address\n   family outside its original carrier\
    \ network and still want to obtain\n   the other address family addresses from\
    \ its carrier.\n   If and when the IPv4 provider periodically changes the IPv4\
    \ address\n   allocated to the gateway, the softwire initiator has to discover\
    \ in a\n   reasonable amount of time that the tunnel is down and restart it.\n\
    \   This re-establishment should not change the IPv6 prefix and other\n   parameters\
    \ allocated to the site.\n"
- title: 2.6.  Softwire Concentrator
  contents:
  - "2.6.  Softwire Concentrator\n   On the carrier side, softwires are terminated\
    \ on a softwire\n   concentrator.  A softwire concentrator is usually a dual-stack\
    \ router\n   connected to the dual-stack core of the carrier.\n   A carrier may\
    \ deploy several softwire concentrators (for example one\n   per POP) for scalability\
    \ reasons.\n   Softwire concentrators are usually not nomadic and have stable\
    \ IP\n   addresses.\n   It may be the case that one of the address families is\
    \ not natively\n   supported on the interface facing the core of the carrier.\n\
    \   Connectivity must then be provided by other tunnels, potentially\n   using\
    \ the softwire mesh model.\n   Softwire concentrator functionality will be based\
    \ on existing\n   standards for tunneling, prefixes, and addresses allocation,\n\
    \   management.  The working group must define a softwire concentrator\n   architecture\
    \ and interaction between these protocols and recommend\n   profiles.  These recommendations\
    \ must take into account the\n   distributed nature of the Softwires Concentrator\
    \ in the provider\n   network and the impact on core IPv6 networks (for instance:\
    \ prefix\n   aggregation).\n"
- title: 2.7.  Softwire Concentrator Discovery
  contents:
  - "2.7.  Softwire Concentrator Discovery\n   The softwire initiator must know the\
    \ DNS name or IP address of the\n   softwire concentrator.  An automated discovery\
    \ phase may be used to\n   return the IP address(s) or name(s) of the concentrator.\n\
    \   Alternatively, this information may be configured by the user, or by\n   the\
    \ provider of the softwire initiator in advance.  The details of\n   this discovery\
    \ problem are outside the scope of this document,\n   however previous work could\
    \ be taken in consideration.  Examples\n   include: [SERVICE-DIS], [RFC4891],\
    \ and [TUN-AD].\n"
- title: 2.8.  Scaling
  contents:
  - "2.8.  Scaling\n   In a \"Hubs and Spokes model\", a carrier must be able to scale\
    \ the\n   solution to millions of softwire initiators by adding more hubs\n  \
    \ (i.e., softwire concentrators).\n"
- title: 2.9.  Routing
  contents:
  - "2.9.  Routing\n   As customer networks are typically attached via a single link\
    \ to\n   their carrier, the minimum routing requirement is a default route for\n\
    \   each of the address families.\n"
- title: 2.10.  Multicast
  contents:
  - "2.10.  Multicast\n   Softwires must support multicast.\n"
- title: 2.11.  Security
  contents:
  - '2.11.  Security

    '
- title: 2.11.1.  Authentication, Authorization, and Accounting (AAA)
  contents:
  - "2.11.1.  Authentication, Authorization, and Accounting (AAA)\n   The softwire\
    \ protocol must support customer authentication in the\n   control plane, in order\
    \ to authorize access to the service, and\n   provide adequate logging of activity\
    \ (accounting).  However, a\n   carrier may decide to turn it off in some circumstances,\
    \ for\n   instance, when the customer is already authenticated by some other\n\
    \   means, such as closed networks, cellular networks, etc., in order to\n   avoid\
    \ unnecessary overhead.\n   The protocol should offer mutual authentication in\
    \ scenarios where\n   the initiator requires identity proof from the concentrator.\n\
    \   The softwire solution, at least for \"Hubs and Spokes\", must be\n   integrable\
    \ with commonly deployed AAA solutions (although extensions\n   to those AAA solutions\
    \ may be needed).\n"
- title: 2.11.2.  Privacy, Integrity, and Replay Protection
  contents:
  - "2.11.2.  Privacy, Integrity, and Replay Protection\n   The softwire Control and/or\
    \ Data plane must be able to provide full\n   payload security (such as IPsec\
    \ or SSL (Secure Socket Layer)) when\n   desired.  This additional protection\
    \ must be separable from the\n   tunneling aspect of the softwire mechanism itself.\
    \  For IPsec,\n   default profiles must be defined.  [RFC4891] provides guidelines\
    \ on\n   this.\n"
- title: 2.12.  Operations and Management (OAM)
  contents:
  - "2.12.  Operations and Management (OAM)\n   As it is assumed that the softwire\
    \ may have to go across NAT or PAT,\n   a keepalive mechanism must be defined.\
    \  Such a mechanism is also\n   useful for dead peer detection.  However in some\
    \ circumstances (i.e.,\n   narrowband access, billing per traffic, etc.) the keepalive\
    \ mechanism\n   may consume unnecessary bandwidth, so turning it on or off, and\n\
    \   modifying the periodicity, must be supported administrative options.\n   Other\
    \ needed OAM features include:\n   -  Logging\n   -  Usage accounting\n   -  End-point\
    \ failure detection (the detection mechanism must operate\n      within the tunnel)\n\
    \   -  Path failure detection (the detection mechanism must operate\n      outside\
    \ the tunnel)\n"
- title: 2.13.  Encapsulations
  contents:
  - "2.13.  Encapsulations\n   IPv6/IPv4, IPv6/UDP/IPv4, and IPv4/IPv6 are on the\
    \ critical path for\n   \"Hubs and Spokes\" softwires.  There is no intention\
    \ to place limits\n   on additional encapsulations beyond those explicitly mentioned\
    \ in\n   this specification.\n"
- title: 3.  Mesh Problem
  contents:
  - '3.  Mesh Problem

    '
- title: 3.1.  Description
  contents:
  - "3.1.  Description\n   We use the term \"Mesh Problem\" to describe the problem\
    \ of supporting\n   a general routed topology in which a backbone network that\
    \ does not\n   support a particular address family can be used as part of the\
    \ path\n   for packets that belong to that address family.  For example, the\n\
    \   path for an IPv4 packet might include a transit network that supports\n  \
    \ only IPv6.  There might (or might not) be other paths that the IPv4\n   packet\
    \ could take that do not use the IPv6 transit network; the\n   actual path chosen\
    \ will be determined by the IPv4 routing procedures.\n   By saying that the transit\
    \ network supports only a single address\n   family, we mean that the \"core\"\
    \ routers of that network do not\n   maintain routing information for other address\
    \ families, and they may\n   not even be able to understand the packet headers\
    \ of other address\n   families.  We do suppose though that the core will have\
    \ \"edge\n   routers\" or \"border routers\", which maintain the routing information\n\
    \   for both address families, and which can parse the headers of both\n   address\
    \ families.  We refer to these as \"Address Family Border\n   Routers\" (AFBRs).\n\
    \   The following figure shows an AF2-only network connected to AF1-only\n   networks,\
    \ AF2-only networks, and dual stack networks.  Note that in\n   addition to paths\
    \ through the AF2-only core, other paths may also\n   exist between AF1 networks.\
    \  The AFBRs that support AF1 would use BGP\n   to exchange AF1 routing information\
    \ between themselves, but such\n   information would not be distributed to other\
    \ core routers.  The\n   AFBRs would also participate in the exchange of AF2 routing\n\
    \   information with the core nodes.\n                   +----------+        \
    \    +----------+\n                   |AF1 only  |            |AF1 only  |\n \
    \                  |          |            |          |\n                   +----------+\
    \            +----------+\n                       |                    |\n   \
    \                    |                    |\n                   Dual-Stack   \
    \        Dual-Stack\n                     \"AFBR\"               \"AFBR\"\n  \
    \                     |                    |\n                       |       \
    \             |\n                   +----------------------------+\n         \
    \          |                            |\n   +-------+       |              \
    \              |       +-------+\n   |AF2    |       |         AF2 only      \
    \     |       |AF2    |\n   |only   |-------|     (but also providing    |-------|only\
    \   |\n   +-------+       |      transit for AF1)      |       +-------+\n   \
    \                |                            |\n                   +----------------------------+\n\
    \                      |   /              \\    |\n                      |  /\
    \                \\   |\n                    Dual-Stack          Dual-Stack\n\
    \                     \"AFBR\"              \"AFBR\"\n                      |\
    \ |                   |\n                      | |                   |\n     \
    \              +--------+            +--------+\n                   |AF1 and |\
    \            |AF1 and |\n                   |AF2     |            |AF2     |\n\
    \                   +--------+            +--------+\n                       \
    \   Figure 5: Mesh Topology\n   The situation in which a pair of border routers\
    \ use BGP to exchange\n   routing information that is not known to the core routers\
    \ is\n   sometimes known, somewhat misleadingly, as a \"BGP-free core\".  In\n\
    \   this sort of scenario, the problems to be solved are (a) to make sure\n  \
    \ that the BGP-distributed routing updates for AF1 allow a given AFBR,\n   say\
    \ AFBR1, to see that the path for a given AF1 address prefix is\n   through a\
    \ second AFBR, say AFBR2, and (b) to provide a way in which\n   AFBR1 can send\
    \ AF1 packets through the AF2-only core to AFBR2.  Of\n   course, sending AF1\
    \ packets through an AF2-only core requires the AF1\n   packets to be encapsulated\
    \ and sent through \"tunnels\"; these tunnels\n   are the entities known as \"\
    softwires\".\n   One of the goals of the mesh problem is to provide a solution\
    \ that\n   does not require changes in any routers other than the AFBRs.  This\n\
    \   would allow a carrier (or large enterprise networks acting as carrier\n  \
    \ for their internal resources) with an AF2-only backbone to provide\n   AF1 transit\
    \ services for its clients, without requiring any changes\n   whatsoever to the\
    \ clients' routers, and without requiring any changes\n   to the core routers.\
    \  The AFBRs are the only devices that perform\n   dual-stack operations, and\
    \ the only devices that encapsulate and/or\n   decapsulate the AF1 packets in\
    \ order to send and/or receive them on\n   softwires.\n   It may be recognized\
    \ that this scenario is very similar to the\n   scenario handled by the Layer\
    \ 3 Virtual Private Network (L3VPN)\n   solution described in RFC 4364 [RFC4364].\
    \  The AFBRs correspond to\n   the \"Provider Edge Routers\" (PE) of RFC 4364.\
    \  In those L3VPN\n   scenarios, the PEs exchange routing information in an address\
    \ family\n   (e.g., the VPN-IPv4 address family), but they send VPN data packets\n\
    \   through a core which does not have the VPN routing information.\n   However,\
    \ the softwire problem is NOT focused on the situation in\n   which the border\
    \ routers maintain multiple private and/or overlapping\n   address spaces.  Techniques\
    \ which are specifically needed to support\n   multiple address spaces are in\
    \ the domain of L3VPN, rather than in\n   the domain of Softwires.\n   Note that\
    \ the AFBRs may be multiply connected to the core network,\n   and also may be\
    \ multiply connected to the client networks.  Further,\n   the client networks\
    \ may have \"backdoor connections\" to each other,\n   through private networks\
    \ or through the Internet.\n"
- title: 3.2.  Scaling
  contents:
  - "3.2.  Scaling\n   In the mesh problem, the number of AFBRs that a backbone network\n\
    \   supporting only AF2 will need is approximately on the order of the\n   number\
    \ of AF1 networks to which it connects.  (This is really an\n   upper limit, since\
    \ a single AFBR can connect to many such networks).\n   An AFBR may need to exchange\
    \ a \"full Internet's\" worth of routing\n   information with each network to\
    \ which it connects.  If these\n   networks are not VPNs, the scaling issues associated\
    \ with the amount\n   of routing information are just the usual scaling issues\
    \ faced by the\n   border routers of any network which is providing Internet transit\n\
    \   services.  (If the AFBRs are also attached to VPNs, the usual L3VPN\n   scaling\
    \ issues apply, as discussed in RFC 4364 [RFC4364] and RFC 4365\n   [RFC4365].)\
    \  The number of BGP peering connections can be controlled\n   through the usual\
    \ methods, e.g., use of route reflectors.\n"
- title: 3.3.  Persistence, Discovery, and Setup Time
  contents:
  - "3.3.  Persistence, Discovery, and Setup Time\n   AFBRs may discover each other,\
    \ and may obtain any necessary\n   information about each other, as a byproduct\
    \ of the exchange of\n   routing information (essentially in the same way that\
    \ PE routers\n   discovery each other in L3VPNs).  This may require the addition\
    \ of\n   new protocol elements or attributes to existing protocols.\n   The softwires\
    \ needed to allow packets to be sent from one AFBR to\n   another should be \"\
    always available\", i.e., should not require any\n   extended setup time that\
    \ would impart an appreciable delay to the\n   data packets.\n"
- title: 3.4.  Multicast
  contents:
  - "3.4.  Multicast\n   If the AF2 core does not provide native multicast services,\
    \ multicast\n   between AF1 client networks should still be possible, even though\
    \ it\n   may require replication at the AFBRs and unicasting of the replicated\n\
    \   packets through Softwires.  If native multicast services are enabled,\n  \
    \ it should be possible to use these services to optimize the multicast\n   flow.\n"
- title: 3.5.  Softwire Encapsulation
  contents:
  - "3.5.  Softwire Encapsulation\n   The solution to the mesh problem must not require\
    \ the use of any one\n   encapsulation.  Rather, it must accommodate the use of\
    \ a variety of\n   different encapsulation mechanisms, and a means for choosing\
    \ the one\n   to be used in any particular circumstance based on policy.\n   In\
    \ particular, the solution to the mesh problem must allow for at\n   least the\
    \ following encapsulations to be used: Layer 2 Tunneling\n   Protocol version\
    \ 3 (L2TPv3), IP-in-IP, MPLS (LDP-based and RSVP-TE-\n   based), Generic Routing\
    \ Encapsulation (GRE), and IPsec.  The choice\n   of encapsulation is to be based\
    \ on policy, and the policies\n   themselves may be based on various characteristics\
    \ of the packets, of\n   the routes, or of the softwire endpoints themselves.\n"
- title: 3.6.  Security
  contents:
  - "3.6.  Security\n   In the mesh problem, the routers are not advertising routes\
    \ for\n   individual users.  So the mesh problem does not require the fine-\n\
    \   grained authentication that is required by the \"Hub and Spoke\"\n   problem.\
    \  There should however be a way to provide various levels of\n   security for\
    \ the data packets being transmitted on a softwire.  The\n   softwire solution\
    \ must support IPsec and an IPsec profile must be\n   defined (see recommendations\
    \ in [USEIPSEC]).\n   Security mechanisms for the control protocols are also required.\
    \  It\n   must be possible to protect control data from being modified in\n  \
    \ flight by an attacker, and to prevent an attacker from masquerading\n   as a\
    \ legitimate control protocol participant.\n   The verification of the reachability\
    \ information exchanged and issues\n   surrounding the security of routing protocols\
    \ themselves is outside\n   the scope of the specification.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Security considerations specific to the \"Hubs\
    \ and Spokes\" and \"Mesh\"\n   models appear in those sections of the document.\n\
    \   As with any tunneling protocol, using this protocol may introduce a\n   security\
    \ issue by circumventing a site security policy implemented as\n   ingress filtering,\
    \ since these filters will only be applied to STH AF\n   IP headers.\n"
- title: 5.  Principal Authors
  contents:
  - "5.  Principal Authors\n   These are the principal authors for this document.\n\
    \      Xing Li\n      CERNET\n      Room 225 Main Building, Tsinghua University\n\
    \      Beijing 100084\n      China\n      Phone: +86 10 62785983\n      Fax: \
    \  +86 10 62785933\n      Email: xing@cernet.edu.cn\n      Alain Durand\n    \
    \  Comcast\n      1500 Market st\n      Philadelphia\n      PA 19102\n      USA\n\
    \      Email: Alain_Durand@cable.comcast.com\n      Shin Miyakawa\n      NTT Communications\n\
    \      3-20-2 TOC 21F, Nishi-shinjuku, Shinjuku\n      Tokyo\n      Japan\n  \
    \    Phone: +81-3-6800-3262\n      Fax:   +81-3-5365-2990\n      Email: miyakawa@nttv6.jp\n\
    \      Jordi Palet Martinez\n      Consulintel\n      San Jose Artesano, 1\n \
    \     Alcobendas - Madrid\n      E-28108 - Spain\n      Phone: +34 91 151 81 99\n\
    \      Fax:   +34 91 151 81 98\n      Email: jordi.palet@consulintel.es\n    \
    \  Florent Parent\n      Hexago\n      2875 boul. Laurier, suite 300\n      Sainte-Foy,\
    \ QC  G1V 2M2\n      Canada\n      Phone: +1 418 266 5533\n      Email: Florent.Parent@hexago.com\n\
    \      David Ward\n      Cisco Systems\n      170 W. Tasman Dr.\n      San Jose,\
    \ CA 95134\n      USA\n      Phone: +1-408-526-4000\n      Email: dward@cisco.com\n\
    \      Eric C. Rosen\n      Cisco Systems\n      1414 Massachusetts Avenue\n \
    \     Boxborough, MA, 01716\n      USA\n      Email: erosen@cisco.com\n"
- title: 6.  Contributors
  contents:
  - "6.  Contributors\n   The authors would like to acknowledge the following contributors\
    \ who\n   provided helpful inputs on earlier versions of this document: Alain\n\
    \   Baudot, Hui Deng, Francis Dupont, Rob Evans, Ed Koehler Jr, Erik\n   Nordmark,\
    \ Soohong Daniel Park, Tom Pusateri, Pekka Savola, Bruno\n   Stevant, Laurent\
    \ Totain, Bill Storer, Maria (Alice) Dos Santos, Yong\n   Cui, Chris Metz, Simon\
    \ Barber, Skip Booth, Scott Wainner, and Carl\n   Williams.\n   The authors would\
    \ also like to acknowledge the participants in the\n   Softwires interim meeting\
    \ in Paris, France (October 11-12, 2005)\n   (minutes are at\n   http://bgp.nu/~dward/softwires/InterimMeetingMinutes.htm).\n\
    \   The authors would also like to express a special acknowledgement and\n   thanks\
    \ to Mark Townsley.  Without his leadership, persistence,\n   editing skills,\
    \ and thorough suggestions for the document, we would\n   have not have been successful.\n\
    \   Tunnel-based transition mechanisms have been under discussion in the\n   IETF\
    \ for more than a decade.  Initial work related to softwire can be\n   found in\
    \ RFC 3053 [RFC3053].  The earlier \"V6 Tunnel Configuration\"\n   BOF problem\
    \ statement [GOALS-TUN] a reasonable pointer to prior work.\n   The authors would\
    \ like to acknowledge the work and support of Dr\n   Jianping Wu of Tsinghua university.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC3041]      Narten, T. and R. Draves, \"Privacy\
    \ Extensions for\n                  Stateless Address Autoconfiguration in IPv6\"\
    ,\n                  RFC 3041, January 2001.\n   [RFC3053]      Durand, A., Fasano,\
    \ P., Guardini, I., and D. Lento,\n                  \"IPv6 Tunnel Broker\", RFC\
    \ 3053, January 2001.\n   [RFC3056]      Carpenter, B. and K. Moore, \"Connection\
    \ of IPv6\n                  Domains via IPv4 Clouds\", RFC 3056, February 2001.\n\
    \   [RFC3972]      Aura, T., \"Cryptographically Generated Addresses\n       \
    \           (CGA)\", RFC 3972, March 2005.\n   [RFC4213]      Nordmark, E. and\
    \ R. Gilligan, \"Basic Transition\n                  Mechanisms for IPv6 Hosts\
    \ and Routers\", RFC 4213,\n                  October 2005.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [GOALS-TUN]    Palet, J., \"Goals for Tunneling\
    \ Configuration\", Work\n                  in Progress, February 2005.\n   [RFC2131]\
    \      Droms, R., \"Dynamic Host Configuration Protocol\", RFC\n             \
    \     2131, March 1997.\n   [RFC2462]      Thomson, S. and T. Narten, \"IPv6 Stateless\
    \ Address\n                  Autoconfiguration\", RFC 2462, December 1998.\n \
    \  [RFC3315]      Droms, R., Ed., Bound, J., Volz, B., Lemon, T.,\n          \
    \        Perkins, C., and M. Carney, \"Dynamic Host\n                  Configuration\
    \ Protocol for IPv6 (DHCPv6)\", RFC 3315,\n                  July 2003.\n   [RFC3633]\
    \      Troan, O. and R. Droms, \"IPv6 Prefix Options for\n                  Dynamic\
    \ Host Configuration Protocol (DHCP) version 6\",\n                  RFC 3633,\
    \ December 2003.\n   [RFC4364]      Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual\
    \ Private\n                  Networks (VPNs)\", RFC 4364, February 2006.\n   [RFC4365]\
    \      Rosen, E., \"Applicability Statement for BGP/MPLS IP\n                \
    \  Virtual Private Networks (VPNs)\", RFC 4365,\n                  February 2006.\n\
    \   [RFC4891]      Graveman, R., Parthasarathy, M., Savola, P., and H.\n     \
    \             Tschofenig, \"Using IPsec to Secure IPv6-in-IPv4\n             \
    \     Tunnels\", RFC 4891, May 2007.\n   [SERVICE-DIS]  Durand, A., \"Service\
    \ Discovery using NAPTR records in\n                  DNS\", Work in Progress,\
    \ October 2004.\n   [SUBNET]       Johnson, R., \"Subnet Allocation Option\",\
    \ Work in\n                  Progress, June 2007.\n   [TUN-AD]     Palet, J. and\
    \ M, \"Analysis of IPv6 Tunnel End-point\n                  Discovery Mechanisms\"\
    , Work in Progress, January 2005.\n   [USEIPSEC]     Bellovin, S., \"Guidelines\
    \ for Mandating the Use of\n                  IPsec\", Work in Progress, February\
    \ 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xing Li (editor)\n   CERNET\n   Room 225 Main Building,\
    \ Tsinghua University\n   Beijing,   100084\n   China\n   Phone: +86 10 62785983\n\
    \   Fax:   +86 10 62785933\n   EMail: xing@cernet.edu.cn\n   Spencer Dawkins (editor)\n\
    \   Huawei Technologies (USA)\n   1700 Alma Drive, Suite 100\n   Plano, TX  75075\n\
    \   US\n   Phone: +1 972 509 0309\n   Fax:   +1 469 229 5397\n   EMail: spencer@mcsr-labs.org\n\
    \   David Ward (editor)\n   Cisco Systems\n   170 W. Tasman Dr.\n   San Jose,\
    \ CA  95134\n   US\n   Phone: 1-408-526-4000\n   EMail: dward@cisco.com\n   Alain\
    \ Durand (editor)\n   Comcast\n   1500 Market St\n   Philadelphia, PA  19102\n\
    \   US\n   EMail: alain_durand@cable.comcast.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
