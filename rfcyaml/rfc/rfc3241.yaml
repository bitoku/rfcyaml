- contents:
  - '               Robust Header Compression (ROHC) over PPP

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes an option for negotiating the use of robust\n
    \  header compression (ROHC) on IP datagrams transmitted over the\n   Point-to-Point
    Protocol (PPP).  It defines extensions to the PPP\n   Control Protocols for IPv4
    and IPv6.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   Robust Header Compression (ROHC) as defined in [RFC3095]
    may be used\n   for compression of both IPv4 and IPv6 datagrams or packets\n   encapsulated
    with multiple IP headers.  The initial version of ROHC\n   focuses on compression
    of the packet headers in RTP streams, while\n   supporting compression of other
    UDP flows; however, it also defines a\n   framework into which further header
    compression mechanisms can be\n   plugged as new profiles.  Planned additions
    to the set of profiles\n   supported by ROHC will be capable of compressing TCP
    transport\n   protocol headers as well.\n   In order to establish compression
    of IP datagrams sent over a PPP\n   link each end of the link must agree on a
    set of configuration\n   parameters for the compression.  The process of negotiating
    link\n   parameters for network layer protocols is handled in PPP by a family\n
    \  of network control protocols (NCPs).  Since there are separate NCPs\n   for
    IPv4 and IPv6, this document defines configuration options to be\n   used in both
    NCPs to negotiate parameters for the compression scheme.\n   ROHC does not require
    that the link layer be able to indicate the\n   types of datagrams carried in
    the link layer frames.  However, there\n   are two basic types of ROHC headers
    defined in the ROHC framework:\n   small-CID headers (zero or one bytes are used
    to identify the\n   compression context) and large-CID headers (one or two bytes
    are used\n   for this purpose).  To keep the PPP packets self-describing, in this\n
    \  document two new types for the PPP Data Link Layer Protocol Field are\n   defined,
    one for small-CID ROHC packets and one for large-CID ROHC\n   packets.  (This
    also avoids a problem that would occur if PPP were to\n   negotiate which of the
    formats to use in each of IPCP and IPV6CP and\n   the two negotiation processes
    were to arrive at different results.)\n   A PPP ROHC sender may send packets in
    either small-CID or large-CID\n   format at any time, i.e., the LARGE_CIDS parameter
    from [RFC3095] is\n   not used.  Any PPP ROHC receiver MUST be able to process
    both small-\n   CID and large-CID ROHC packets, therefore no negotiation of this\n
    \  function is required.\n   ROHC assumes that the link layer delivers packets
    in sequence.  PPP\n   normally does not reorder packets.  When using reordering
    mechanisms\n   such as multiclass multilink PPP [RFC2686], care must be taken
    so\n   that packets that share the same compression context are not\n   reordered.
    \ (Note that in certain cases, reordering may be acceptable\n   to ROHC, such
    as within a sequence of packets that all do not change\n   the decompression context.)\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n
    \  document are to be interpreted as described in RFC 2119.\n"
  title: 1.  Introduction
- contents:
  - "2.  Configuration Option\n   This document specifies a new compression protocol
    value for the IPCP\n   IP-Compression-Protocol option as specified in [RFC1332].
    \ The new\n   value and the associated option format are described in section
    2.1.\n   The option format is structured to allow future extensions to the\n   ROHC
    scheme.\n   It may be worth repeating [RFC1332], section 4: \"The IP-Compression-\n
    \  Protocol Configuration Option is used to indicate the ability to\n   receive
    compressed packets.  Each end of the link must separately\n   request this option
    if bi-directional compression is desired.\"  I.e.,\n   the option describes the
    capabilities of the decompressor (receiving\n   side) of the peer that sends the
    Configure-Request.\n      NOTE: The specification of link and network layer parameter\n
    \     negotiation for PPP [RFC1661], [RFC1331], [RFC1332] does not\n      prohibit
    multiple instances of one configuration option but states\n      that the specification
    of a configuration option must explicitly\n      allow multiple instances.  From
    the current specification of the\n      IPCP IP-Compression-Protocol configuration
    option [RFC1332] one\n      can infer that it can only be used to select a single
    compression\n      protocol at any time.\n      This was appropriate at a time
    when only one header compression\n      scheme existed.  With the advent of IP
    header compression\n      [RFC2507, RFC2509], this did not really change, as RFC
    2507\n      essentially superseded RFC 1144.  However, with ROHC, it may now\n
    \     very well be desirable to use RFC 2507 TCP compression in\n      conjunction
    with RFC 3095 RTP/UDP compression.\n   The present document now updates RFC 1332
    by explicitly allowing the\n   sending of multiple instances of the IP-Compression-Protocol\n
    \  configuration option, each with a different value for IP-\n   Compression-Protocol.
    \ Each type of compression protocol may\n   independently establish its own parameters.\n
    \  This change is believed to not cause significant harm in existing PPP\n   implementations,
    as they would most likely Configure-Nak or\n   Configure-Reject the duplicate
    option, or simply happen to accept the\n   one option they understand.  To aid
    interoperability, the peer\n   implementing the present specification SHOULD react
    to a Configure-\n   Nak or Configure-Reject by reducing the number of options
    offered to\n   one.\n"
  - contents:
    - "2.1.  Configuration Option Format\n   Both the network control protocol for
      IPv4, IPCP [RFC1332] and the\n   IPv6 NCP, IPV6CP [RFC2472] may be used to negotiate
      IP Header\n   Compression parameters for their respective protocols.  The format
      of\n   the configuration option is the same for both IPCP and IPV6CP.\n   Description\n
      \     This NCP configuration option is used to negotiate parameters for\n      Robust
      Header Compression.  The option format is summarized below.\n      The fields
      are transmitted from left to right.\n           Figure 1: Robust Header Compression
      (ROHC) Option\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |    IP-Compression-Protocol    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |            MAX_CID            |             MRRU              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |           MAX_HEADER          |          suboptions...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Type\n      2\n   Length\n      >= 10\n      The length may be increased
      if the presence of additional\n      parameters is indicated by additional suboptions.\n
      \  IP-Compression-Protocol\n      0003 (hex)\n   MAX_CID\n      The MAX_CID
      field is two octets and indicates the maximum value of\n      a context identifier.\n
      \        Suggested value: 15\n      MAX_CID must be at least 0 and at most 16383
      (The value 0 implies\n      having one context).\n   MRRU\n      The MRRU field
      is two octets and indicates the maximum\n      reconstructed reception unit
      (see [RFC3095], section 5.1.1).\n         Suggested value: 0\n   MAX_HEADER\n
      \     The largest header size in octets that may be compressed.\n         Suggested
      value: 168 octets\n      The value of MAX_HEADER should be large enough so that
      at least\n      the outer network layer header can be compressed.  To increase\n
      \     compression efficiency MAX_HEADER should be set to a value large\n      enough
      to cover common combinations of network and transport layer\n      headers.\n
      \     NOTE: The four ROHC profiles defined in RFC 3095 do not provide\n      for
      a MAX_HEADER parameter.  The parameter MAX_HEADER defined by\n      this document
      is therefore without consequence in these profiles.\n      Other profiles (e.g.,
      ones based on RFC 2507) can make use of the\n      parameter by explicitly referencing
      it.\n   suboptions\n      The suboptions field consists of zero or more suboptions.
      \ Each\n      suboption consists of a type field, a length field and zero or\n
      \     more parameter octets, as defined by the suboption type.  The\n      value
      of the length field indicates the length of the suboption in\n      its entirety,
      including the lengths of the type and length fields.\n                          Figure
      2: Suboption\n             0                   1                   2\n             0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           |     Type      |    Length     |  Parameters...\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
    title: 2.1.  Configuration Option Format
  - contents:
    - "2.2.  PROFILES Suboption\n   The set of profiles to be enabled is subject to
      negotiation.  Most\n   initial implementations of ROHC implement profiles 0x0000
      to 0x0003.\n   This option MUST be supplied.\n   Description\n      Define the
      set of profiles supported by the decompressor.\n                       Figure
      3: PROFILES suboption\n             0                   1                   2\n
      \            0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           |     Type      |    Length     |  Profiles...\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     Type\n         1\n      Length\n         2n+2\n      Value\n         n
      octet-pairs in ascending order, each octet-pair specifying a\n         ROHC
      profile supported.\n"
    title: 2.2.  PROFILES Suboption
  title: 2.  Configuration Option
- contents:
  - "3.  Multiple Network Control Protocols\n   The ROHC protocol is able to compress
    both IPv6 and IPv4 datagrams.\n   Both IPCP and IPV6CP are able to negotiate option
    parameter values\n   for ROHC.  The ROHC capability negotiated as a whole applies
    to the\n   compression of packets where the outer header is an IPv4 header and\n
    \  an IPv6 header, respectively; e.g., an outer IPv6 header MUST NOT be\n   sent
    if the ROHC IP-Compression-Protocol option was not negotiated\n   for IPV6CP.\n
    \  Offering a specific ROHC capability in a Configure-Request in either\n   IPCP
    or IPV6CP indicates that the capability is provided for the\n   entire ROHC channel
    formed by the PPP link.  When the option has been\n   negotiated with different
    values in IPCP and IPV6CP, the result is\n   that the set of parameter values
    for the entire ROHC channel is the\n   logical union of the two values, i.e.,
    the maximum for MAX_CID, MRRU\n   or MAX_HEADER, and the logical union of the
    suboptions.  For the\n   PROFILES suboption, the logical union is the union of
    the two sets of\n   profiles.  The unified values are kept as valid parameter
    values for\n   the ROHC channel even when either of the NCPs is taken down.\n
    \  Note that each new suboption for this option must define the meaning\n   of
    \"logical union\", if the concept applies.\n"
  - contents:
    - "3.1.  Sharing Context Identifier Space\n   For the compression and decompression
      of IPv4 and IPv6 datagram\n   headers, the context identifier space is shared.
      \ While the parameter\n   values are independently negotiated, sharing the context
      identifier\n   spaces becomes more complex when the parameter values differ.
      \ Since\n   the compressed packets share context identifier space, the\n   compression
      engine must allocate context identifiers out of a common\n   pool; for compressed
      packets, the decompressor has to examine the\n   context state to determine
      what parameters to use for decompression.\n   In particular, the context identifier
      space is shared between ROHC\n   small-CID packets and ROHC large-CID packets.
      \ From the point of view\n   of the ROHC framework, the PPP NCP instances for
      IPCP and IPV6CP\n   together constitute exactly one ROHC channel; its feedback
      is\n   destined for the ROHC channel defined by the NCP instances for IPCP\n
      \  and IPV6CP in the reverse direction on the same PPP link.\n   In particular,
      this means that taking down either of the NCPs while\n   the other is still
      open means that the contexts of the channel stay\n   active.  To avoid race
      conditions, the same is true if both NCPs are\n   taken down and then one or
      more is reopened.  Taking down LCP\n   destroys the channel, however; reopening
      LCP and then one or more of\n   IPCP and IPV6CP restarts ROHC with all contexts
      in no-context state.\n"
    title: 3.1.  Sharing Context Identifier Space
  title: 3.  Multiple Network Control Protocols
- contents:
  - "4.  Demultiplexing of Datagrams\n   The ROHC specification [RFC3095] defines
    a single header format for\n   all different types of compressed headers, with
    a variant for small\n   CIDs and a variant for large CIDs.  Two PPP Data Link
    Layer Protocol\n   Field values are specified below.\n   ROHC small-CIDs\n      The
    frame contains a ROHC packet with small CIDs as defined in\n      [RFC3095].\n
    \     Value: 0003 (hex)\n   ROHC large-CIDs\n      The frame contains a ROHC packet
    with large CIDs as defined in\n      [RFC3095].\n      Value: 0005 (hex)\n   Note
    that this implies that all CIDs within one ROHC packet MUST be\n   of the same
    size as indicated by the Data Link Layer Protocol field,\n   either small or large.
    \ In particular, embedded feedback MUST have a\n   CID of the same size as indicated
    by the Protocol field value.  For\n   piggybacking feedback, a compressor must
    be able to control the\n   feedback CID size used by the associated decompressor,
    ensure that\n   all CIDs are of the same size, and indicate this size with the\n
    \  appropriate Protocol Field value.\n   To make CID interpretation unambiguous
    when ROHC segmentation is\n   used, all packets that contribute to a segment MUST
    be sent with the\n   same Data Link Layer Protocol Field value, either 0003 or
    0005, which\n   then also applies to the CID size in the reconstructed unit.  A
    unit\n   reconstructed out of packets with Protocol field values that differ\n
    \  MUST be discarded.\n"
  title: 4.  Demultiplexing of Datagrams
- contents:
  - "5.  ROHC Usage Considerations\n   Certain considerations are required for any
    ROHC-over-X protocol.\n   This section describes how some of these are handled
    for ROHC over\n   PPP.\n"
  - contents:
    - "5.1.  Uncompressed profile\n   There is no need for the ROHC uncompressed profile
      in ROHC over PPP,\n   as uncompressed packets can always be sent using the PPP
      protocol\n   demultiplexing method.  Therefore, no consideration was given to\n
      \  locking down one of the context numbers for the uncompressed profile\n   (see
      [RFC3095] section 5.1.2).  Note, however, that according to the\n   ROHC specification,
      profile 0x0000 must not be rejected [RFC3095], so\n   it MUST be implemented
      by all receivers.\n"
    title: 5.1.  Uncompressed profile
  - contents:
    - "5.2.  Parameter selection\n   For each of the ROHC channel parameters MAX_CID
      and MRRU, the value\n   is the maximum of the respective values negotiated for
      the IPCP and\n   IPv6CP instances, if any.  The ROHC channel parameter FEEDBACK_FOR
      is\n   set implicitly to the reverse direction on the same PPP link (see\n   \"Sharing
      Context Identifier Space\" above).  The ROHC channel\n   parameter LARGE_CIDS
      is not used, instead the PPP protocol ID on the\n   packet is used (see \"Demultiplexing
      of Datagrams\" above).\n   A number of parameters for ROHC must be set correctly
      for good\n   compression on a specific link.  E.g., the parameters k_1, n_1,
      k_2,\n   n_2 in section 5.3.2.2.3 of [RFC3095] need to be set based on the\n
      \  error characteristics of the underlying links.  As PPP links are\n   usually
      run with a strong error detection scheme [RFC1662], k_1 = n_1\n   = k_2 = n_2
      = 1 is usually a good set of values.  (Note that in any\n   case k values need
      to be set low enough relative to n values to allow\n   for the limited ability
      of the CRC to detect errors, i.e., the CRC\n   will succeed for about 1/8 of
      the packets even in case of context\n   damage, so k/n should be significantly
      less than 7/8.)\n"
    title: 5.2.  Parameter selection
  title: 5.  ROHC Usage Considerations
- contents:
  - "6.  Security Considerations\n   Negotiation of the option defined here imposes
    no additional security\n   considerations beyond those that otherwise apply to
    PPP [RFC1661].\n   The security considerations of ROHC [RFC3095] apply.\n   The
    use of header compression can, in rare cases, cause the\n   misdelivery of packets.
    \ If necessary, confidentiality of packet\n   contents should be assured by encryption.\n
    \  Encryption applied at the IP layer (e.g., using IPSEC mechanisms)\n   precludes
    header compression of the encrypted headers, though\n   compression of the outer
    IP header and authentication/security\n   headers is still possible as described
    in [RFC3095].  For RTP\n   packets, full header compression is possible if the
    RTP payload is\n   encrypted by itself without encrypting the UDP or RTP headers,
    as\n   described in [RFC1889].  This method is appropriate when the UDP and\n
    \  RTP header information need not be kept confidential.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA considerations\n   The ROHC suboption identifier is a non-negative integer.
    \ Following\n   the policies outlined in [RFC2434], the IANA policy for assigning
    new\n   values for the suboption identifier shall be Specification Required:\n
    \  values and their meanings must be documented in an RFC or in some\n   other
    permanent and readily available reference, in sufficient detail\n   that interoperability
    between independent implementations is\n   possible.  The range 0 to 127 is reserved
    for IETF standard-track\n   specifications; the range 128 to 254 is available
    for other\n   specifications that meet this requirement (such as Informational\n
    \  RFCs).  The value 255 is reserved for future extensibility of the\n   present
    specification.\n   The following suboption identifiers are already allocated:\n
    \  Suboption   Document       Usage\n   identifier\n   1           RFC3241        Profiles\n
    \  The RFC 3006 compressibility hint [RFC3006] for ROHC is 0x0003pppp,\n   where
    0xpppp is the profile assumed.\n   (Note that the PPP protocol identifier values
    0003 and 0005 were\n   taken from a previously reserved space that exhibits inefficient\n
    \  transparency in the presence of asynchronous control character\n   escaping,
    as it is considered rather unlikely that ROHC will be used\n   over links with
    highly populated ACCMs.)\n"
  title: 7.  IANA considerations
- contents:
  - "8.  Acknowledgments\n   The present document borrows heavily from [RFC2509].\n
    \  The author would like to thank Pete McCann and James Carlson for\n   clarifying
    the multiple option instance issue, Craig Fox for helping\n   with some PPP arcana,
    and Lars-Erik Jonsson for supplying some final\n   clarifications.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1332] McGregor, G., \"The PPP Internet Protocol
      Control Protocol\n             (IPCP)\", RFC 1332, May 1992.\n   [RFC1661] Simpson,
      W., Ed., \"The Point-To-Point Protocol (PPP)\", STD\n             51, RFC 1661,
      July 1994.\n   [RFC2472] Haskin, E. and E. Allan, \"IP Version 6 over PPP\",
      RFC 2472,\n             December 1998.\n   [RFC3006] Davie, B., Casner, S.,
      Iturralde, C., Oran, D. and J.\n             Wroclawski, \"Integrated Services
      in the Presence of\n             Compressible Flows\", RFC 3006, November 2000.\n
      \  [RFC3095] Bormann, C., Burmeister, C., Degermark, M., Fukushima, H.,\n             Hannu,
      H., Jonsson, L-E., Hakenberg, R., Koren, T., Le, K.,\n             Liu, Z.,
      Martensson, A., Miyazaki, A., Svanbro, K., Wiebke,\n             T., Yoshimura,
      T. and H. Zheng, \"RObust Header Compression\n             (ROHC): Framework
      and four profiles: RTP, UDP, ESP, and\n             uncompressed\", RFC 3095,
      July 2001.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC1144] Jacobson, V., \"Compressing TCP/IP
      Headers for Low-Speed\n             Serial Links\", RFC 1144, February 1990.\n
      \  [RFC1889] Schulzrinne, H., Casner, S., Frederick, R. and V.\n             Jacobson,
      \"RTP: A Transport Protocol for real-time\n             applications\", RFC
      1889, January 1996.\n   [RFC2434] Alvestrand, H. and T. Narten, \"Guidelines
      for Writing an\n             IANA Considerations Section in RFCs\", BCP 26,
      RFC 2434,\n             October 1998.\n   [RFC2507] Degermark, M., Nordgren,
      B. and S. Pink, \"IP Header\n             Compression\", RFC 2507, February
      1999.\n   [RFC2509] Engan, M., Casner, S. and C. Bormann, \"IP Header\n             Compression
      over PPP\", RFC 2509, February 1999.\n   [RFC2686] Bormann, C., \"The Multi-Class
      Extension to Multi-Link PPP\",\n             RFC 2686, September 1999.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "10.  Author's Address\n   Carsten Bormann\n   Universitaet Bremen FB3 TZI\n   Postfach
    330440\n   D-28334 Bremen, GERMANY\n   Phone: +49.421.218-7024\n   Fax:   +49.421.218-7000\n
    \  EMail: cabo@tzi.org\n"
  title: 10.  Author's Address
- contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 11.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
