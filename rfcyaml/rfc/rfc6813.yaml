- title: __initial_text__
  contents:
  - '      The Network Endpoint Assessment (NEA) Asokan Attack Analysis

    '
- title: Abstract
  contents:
  - "Abstract\n   The Network Endpoint Assessment (NEA) protocols are subject to a\n\
    \   subtle forwarding attack that has become known as the NEA Asokan\n   Attack.\
    \  This document describes the attack and countermeasures that\n   may be mounted.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6813.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. NEA Asokan Attack Explained .....................................2\n  \
    \ 3. Lying Endpoints .................................................4\n   4.\
    \ Countermeasures against the NEA Asokan Attack ...................4\n      4.1.\
    \ Identity Binding ...........................................4\n      4.2. Cryptographic\
    \ Binding ......................................5\n           4.2.1. Binding Options\
    \ .....................................5\n   5. Conclusions .....................................................6\n\
    \   6. Security Considerations .........................................6\n  \
    \ 7. Informative References ..........................................7\n   8.\
    \ Acknowledgments .................................................7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Network Endpoint Assessment (NEA) [2] protocols are\
    \ subject to a\n   subtle forwarding attack that has become known as the NEA Asokan\n\
    \   Attack.  This document describes the attack and countermeasures that\n   may\
    \ be mounted.  The Posture Transport (PT) protocols developed by\n   the NEA working\
    \ group, PT-TLS [5] and PT-EAP [6], include mechanisms\n   that can provide cryptographic-binding\
    \ and identity-binding\n   countermeasures.\n"
- title: 2.  NEA Asokan Attack Explained
  contents:
  - "2.  NEA Asokan Attack Explained\n   The NEA Asokan Attack is a variation on an\
    \ attack described in a 2002\n   paper written by Asokan, Niemi, and Nyberg [1].\
    \  Figure 1 depicts one\n   version of the original Asokan attack.  This attack\
    \ involves tricking\n   an authorized user into authenticating to a decoy Authentication,\n\
    \   Authorization, and Accounting (AAA) server, which forwards the\n   authentication\
    \ protocol from one tunnel to another, tricking the real\n   AAA server into believing\
    \ these messages originated from the\n   attacker-controlled machine.  As a result,\
    \ the real AAA server grants\n   access to the attacker-controlled machine.\n\
    \                            +-------------+ ========== +----------+\n       \
    \                     |   Attacker  |-AuthProto--|AAA Server|\n              \
    \              +-------------+ ========== +----------+\n                     \
    \              |\n                               AuthProto\n                 \
    \                  |\n   +--------------+ ========== +----------------+\n   |AuthorizedUser|-AuthProto--|Decoy\
    \ AAA Server|\n   +--------------+ ========== +----------------+\n           \
    \   Figure 1: One Example of Original Asokan Attack\n   As described in the NEA\
    \ Overview [2], the NEA Reference Model is\n   composed of several nested protocols.\
    \  The Posture Attribute (PA)\n   protocol is nested in the Posture Broker (PB)\
    \ protocol, which is\n   nested in the PT protocol.  When used together successfully,\
    \ these\n   protocols allow an NEA Server to assess the security posture of an\n\
    \   endpoint.  The NEA Server may use this information to decide whether\n   network\
    \ access should be granted, or it may use this information for\n   other purposes.\n\
    \   Figure 2 illustrates an NEA Asokan Attack.  The attacker wants to\n   trick\
    \ GoodServer into believing that DirtyEndpoint has good security\n   posture.\
    \  This might allow, for example, the attacker to bring an\n   infected machine\
    \ onto a network and infect others.  To accomplish\n   this goal, the attacker\
    \ forwards PA messages from CleanEndpoint\n   through BadServer to DirtyEndpoint,\
    \ which sends them on to\n   GoodServer.  GoodServer is tricked into thinking\
    \ that the PA messages\n   came from DirtyEndpoint and therefore considers DirtyEndpoint\
    \ to be\n   clean.\n                            +-------------+ ========== +----------+\n\
    \                            |DirtyEndpoint|-----PA-----|GoodServer|\n       \
    \                     +-------------+ ========== +----------+\n              \
    \                     |\n                                  PA\n              \
    \                     |\n   +-------------+ ========== +---------+\n   |CleanEndpoint|-----PA-----|BadServer|\n\
    \   +-------------+ ========== +---------+\n                        Figure 2:\
    \ NEA Asokan Attack\n   Countermeasures against an NEA Asokan Attack are described\
    \ in Section\n   4.\n"
- title: 3.  Lying Endpoints
  contents:
  - "3.  Lying Endpoints\n   Some may argue that there are other attacks against NEA\
    \ systems that\n   are simpler than the Asokan attack, such as lying endpoint\
    \ attacks.\n   That is true.  It's easy for an endpoint to simply lie about its\n\
    \   posture.  But, there are defenses against lying endpoint attacks,\n   such\
    \ as using an External Measurement Agent (EMA).\n   An EMA is hardware, software,\
    \ or firmware that is especially secure,\n   hard to compromise, and designed\
    \ to accurately report on endpoint\n   configuration.  The EMA observes and reports\
    \ on critical aspects of\n   endpoint posture, such as which security-relevant\
    \ firmware and\n   software have been loaded.\n   When an EMA is used for NEA,\
    \ the PA messages that reliably and\n   securely establish endpoint posture are\
    \ exchanged between the EMA\n   itself and a Posture Validator on the NEA Server.\
    \  The Posture\n   Collector on the endpoint and any other intermediaries between\
    \ the\n   EMA and the Posture Validator on the NEA Server are not trusted.\n \
    \  They just pass messages along as untrusted intermediaries.\n   To ensure that\
    \ the EMA's messages are accurately conveyed to the\n   Posture Validator, even\
    \ if the Posture Collector or other\n   intermediaries have been compromised,\
    \ these PA messages must provide\n   integrity protection, replay protection,\
    \ and source authentication\n   between the EMA and the Posture Validator.  Confidentiality\n\
    \   protection is not needed, at least with respect to the software on\n   the\
    \ endpoint, but integrity protection should include protection\n   against message\
    \ deletion and session truncation.  Organizations that\n   have developed EMAs\
    \ have typically developed remote attestation\n   protocols that provide these\
    \ properties (e.g., the Trusted Computing\n   Group's (TCG's) Platform Trust Service\
    \ (PTS) Protocol Binding to IF-M\n   [7]).  While the development of lying endpoint\
    \ detection technologies\n   is out of scope for NEA, these technologies must\
    \ be supported by the\n   NEA protocols.  Therefore, the NEA protocols must support\n\
    \   countermeasures against the NEA Asokan Attack.\n"
- title: 4.  Countermeasures against the NEA Asokan Attack
  contents:
  - '4.  Countermeasures against the NEA Asokan Attack

    '
- title: 4.1.  Identity Binding
  contents:
  - "4.1.  Identity Binding\n   One way to mitigate the Asokan attack is to bind the\
    \ identities used\n   in tunnel establishment into a cryptographic exchange at\
    \ the PA\n   layer.  While this can go a long way to preventing the attack, it\n\
    \   does not bind the exchange to a specific TLS exchange, which is\n   desirable.\
    \  In addition, there is no standard way to extract an\n   identity from a TLS\
    \ session, which could make implementation\n   difficult.\n"
- title: 4.2.  Cryptographic Binding
  contents:
  - "4.2.  Cryptographic Binding\n   Another way to thwart the NEA Asokan Attack is\
    \ for the PA exchange to\n   be cryptographically bound to the PT exchange and\
    \ to any keying\n   material or privileges granted as a result of these two exchanges.\n\
    \   This allows the NEA Server to ensure that the PA messages pertain to\n   the\
    \ same endpoint as the party terminating the PT exchange and that\n   no other\
    \ party gains any access or advantage from this exchange.\n"
- title: 4.2.1.  Binding Options
  contents:
  - "4.2.1.  Binding Options\n   This section discusses binding protocol solution\
    \ options and provides\n   analysis.  Since PT-TLS and PT-EAP involve TLS, this\
    \ document focuses\n   on TLS-based solutions that can work with either transport.\n"
- title: 4.2.1.1.  Information from the TLS Tunnel
  contents:
  - "4.2.1.1.  Information from the TLS Tunnel\n   The TLS handshake establishes a\
    \ cryptographic state between the TLS\n   client and TLS server.  There are several\
    \ mechanisms that can be used\n   to export information derived from this state.\
    \  The client and server\n   independently include this information in calculations\
    \ to bind the\n   instance of the tunnel into the PA protocol.\n   Keying Material\
    \ Export - RFC 5705 [8] defines Keying Material\n   Exporters for TLS that allow\
    \ additional secret key material to be\n   extracted from the TLS master secret.\n\
    \   tls-unique Channel Binding Data - RFC 5929 [9] defines several\n   quantities\
    \ that can be extracted from the TLS session to bind the TLS\n   session to other\
    \ protocols.  The tls-unique binding consists of data\n   extracted from the TLS\
    \ handshake finished message.\n"
- title: 4.2.1.2.  TLS Cipher Suites
  contents:
  - "4.2.1.2.  TLS Cipher Suites\n   In order to eliminate the possibility of a man-in-the-middle\
    \ attack\n   and thwart the Asokan attack when using the keying material export\n\
    \   binding export mechanism, it is important that neither TLS endpoint\n   be\
    \ in sole control of the TLS pre-master secret.  Cipher suites based\n   on key\
    \ transport, such as RSA cipher suites, do not meet this\n   requirement; instead,\
    \ Diffie-Hellman Cipher Suites, such as RSA-DHE,\n   are required when this mechanism\
    \ is employed.\n"
- title: 4.2.1.3.  Using Additional Key Material from TLS
  contents:
  - "4.2.1.3.  Using Additional Key Material from TLS\n   In some cases, key material\
    \ is extracted from the TLS tunnel and used\n   to derive ciphering keys used\
    \ in another protocol.  For example,\n   EAP-TLS [10] uses key material extracted\
    \ from TLS in lower-layer\n   ciphering.  In this case, the extracted keys must\
    \ not be under the\n   control of a single party, so the considerations in the\
    \ previous\n   section are important.\n"
- title: 4.2.1.4.  EMA Assumptions
  contents:
  - "4.2.1.4.  EMA Assumptions\n   The EMA needs to obtain the binding data from the\
    \ TLS exchange and\n   prove knowledge of the binding data in an exchange that\
    \ has integrity\n   protection, source authentication, and replay protection.\n"
- title: 5.  Conclusions
  contents:
  - "5.  Conclusions\n   The recommendations for addressing the NEA Asokan Attack\
    \ are as\n   follows:\n   1.  Protocols should make use of cryptographic binding;\
    \ in addition,\n       binding identities of the tunnel endpoints in the EMA may\
    \ be\n       useful.\n   2.  In particular, L2 and L3 TLS-based PT transports\
    \ (e.g., PT-TLS\n       and PT-EAP) should use the same cryptographic binding\
    \ mechanism.\n   3.  The preferred approach is to use the tls-unique channel binding\n\
    \       data from [9].  The tls-unique value will be made available to\n     \
    \  the EMA that will use it.  This approach can utilize any TLS\n       cipher\
    \ suite based on a strong cipher algorithm.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document is primarily concerned with analyzing\
    \ and proposing\n   countermeasures for the NEA Asokan Attack.  That does not\
    \ mean that\n   it covers all the possible attacks against the NEA protocols or\n\
    \   against the NEA Reference Model.  For a broader security analysis,\n   see\
    \ the Security Considerations section of the NEA Overview [2],\n   PA-TNC [3],\
    \ PB-TNC [4], PT-TLS [5], and PT-EAP [6].\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [1]  Asokan, N., Niemi, V., and K. Nyberg, \"\
    Man-in-the-Middle Attacks\n        in Tunneled Authentication Protocols\", Nokia\
    \ Research Center,\n        Finland, Nov. 11, 2002, http://eprint.iacr.org/2002/163.pdf.\n\
    \   [2]  Sangster, P., Khosravi, H., Mani, M., Narayan, K., and J. Tardo,\n  \
    \      \"Network Endpoint Assessment (NEA): Overview and Requirements\",\n   \
    \     RFC 5209, June 2008.\n   [3]  Sangster, P. and K. Narayan, \"PA-TNC: A Posture\
    \ Attribute (PA)\n        Protocol Compatible with Trusted Network Connect (TNC)\"\
    , RFC\n        5792, March 2010.\n   [4]  Sahita, R., Hanna, S., Hurst, R., and\
    \ K. Narayan, \"PB-TNC: A\n        Posture Broker (PB) Protocol Compatible with\
    \ Trusted Network\n        Connect (TNC)\", RFC 5793, March 2010.\n   [5]  Sangster,\
    \ P., N. Cam-Winget, and J. Salowey, \"PT-TLS: A TCP-\n        based Posture Transport\
    \ (PT) Protocol\", Work in Progress,\n        October 2012.\n   [6]  Cam-Winget,\
    \ N. and P. Sangster, \"PT-EAP: Posture Transport (PT)\n        Protocol For EAP\
    \ Tunnel Methods\", Work in Progress, July 2012.\n   [7]  Trusted Computing Group,\
    \ \"TCG Attestation PTS Protocol: Binding\n        to TNC IF-M\", Version 1.0,\
    \ Revision 27, August 2011.\n   [8]  Rescorla, E., \"Keying Material Exporters\
    \ for Transport Layer\n        Security (TLS)\", RFC 5705, March 2010.\n   [9]\
    \  Altman, J., Williams, N., and L. Zhu, \"Channel Bindings for\n        TLS\"\
    , RFC 5929, July 2010.\n   [10] Simon, D., Aboba, B., and R. Hurst, \"The EAP-TLS\
    \ Authentication\n        Protocol\", RFC 5216, March 2008.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The members of the NEA Asokan Design Team were critical\
    \ to the\n   development of this document: Nancy Cam-Winget, Steve Hanna, Joe\n\
    \   Salowey, and Paul Sangster.\n   The authors would also like to recognize N.\
    \ Asokan, Valtteri Niemi,\n   and Kaisa Nyberg who published the original paper\
    \ on this type of\n   attack and Pasi Eronen who extended this attack to NEA protocols.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Joseph Salowey\n   Cisco Systems, Inc.\n   2901 3rd. Ave\n\
    \   Seattle, WA 98121\n   USA\n   EMail: jsalowey@cisco.com\n   Steve Hanna\n\
    \   Juniper Networks, Inc.\n   79 Parsons Street\n   Brighton, MA 02135\n   USA\n\
    \   EMail: shanna@juniper.net\n"
