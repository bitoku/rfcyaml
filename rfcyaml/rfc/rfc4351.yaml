- title: __initial_text__
  contents:
  - "             Real-Time Transport Protocol (RTP) Payload for\n           Text\
    \ Conversation Interleaved in an Audio Stream\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines a Historic Document for the Internet\
    \ community.  It\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes how to carry real-time text conversation session\n\
    \   contents in RTP packets.  Text conversation session contents are\n   specified\
    \ in ITU-T Recommendation T.140.\n   One payload format is described for transmitting\
    \ audio and text data\n   within a single RTP session.\n   This RTP payload description\
    \ recommends a method to include redundant\n   text from already transmitted packets\
    \ in order to reduce the risk of\n   text loss caused by packet loss.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................4\n  \
    \ 3. Usage of RTP ....................................................4\n    \
    \  3.1. Motivations and Rationale ..................................4\n      3.2.\
    \ Payload Format for Transmission of audio/t140c Data ........4\n      3.3. The\
    \ \"T140block\" ............................................5\n      3.4. Synchronization\
    \ of Text with Other Media ...................5\n      3.5. Synchronization Considerations\
    \ for the audio/t140c Format ..5\n      3.6. RTP Packet Header ..........................................6\n\
    \   4. Protection against Loss of Data .................................7\n  \
    \    4.1. Payload Format When Using Redundancy .......................7\n    \
    \  4.2. Using Redundancy with the audio/t140c Format ...............8\n   5. Recommended\
    \ Procedure ...........................................8\n      5.1. Recommended\
    \ Basic Procedure ................................8\n      5.2. Transmission before\
    \ and after \"Idle Periods\" ...............9\n      5.3. Detection of Lost Text\
    \ Packets .............................9\n      5.4. Compensation for Packets\
    \ Out of Order .....................10\n   6. Parameter for Character Transmission\
    \ Rate ......................10\n   7. Examples .......................................................11\n\
    \      7.1. RTP Packetization Examples for the audio/t140c Format .....11\n  \
    \    7.2. SDP Examples ..............................................12\n   8.\
    \ Security Considerations ........................................13\n      8.1.\
    \ Confidentiality ...........................................13\n      8.2. Integrity\
    \ .................................................13\n      8.3. Source Authentication\
    \ .....................................13\n   9. Congestion Considerations ......................................14\n\
    \   10. IANA Considerations ...........................................15\n  \
    \    10.1. Registration of MIME Media Type audio/t140c ..............15\n    \
    \  10.2. SDP Mapping of MIME Parameters ...........................16\n      10.3.\
    \ Offer/Answer Consideration ...............................17\n   11. Acknowledgements\
    \ ..............................................17\n   12. Normative References\
    \ ..........................................17\n   13. Informative References\
    \ ........................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a payload type for carrying text conversation\n\
    \   session contents in RTP [2] packets.  Text conversation session\n   contents\
    \ are specified in ITU-T Recommendation T.140 [1].  Text\n   conversation is used\
    \ alone or in connection to other conversational\n   facilities, such as video\
    \ and voice, to form multimedia conversation\n   services.  Text in multimedia\
    \ conversation sessions is sent\n   character-by-character as soon as it is available,\
    \ or with a small\n   delay for buffering.\n   The text is intended to be entered\
    \ by human users from a keyboard,\n   handwriting recognition, voice recognition,\
    \ or any other input\n   method.  The rate of character entry is usually at a\
    \ level of a few\n   characters per second or less.  In general, only one or a\
    \ few new\n   characters are expected to be transmitted with each packet.  Small\n\
    \   blocks of text may be prepared by the user and pasted into the user\n   interface\
    \ for transmission during the conversation, occasionally\n   causing packets to\
    \ carry more payload.\n   T.140 specifies that text and other T.140 elements must\
    \ be\n   transmitted in ISO 10646-1[5] code with UTF-8 [6] transformation.\n \
    \  That makes it easy to implement internationally useful applications\n   and\
    \ to handle the text in modern information technology environments.\n   The payload\
    \ of an RTP packet following this specification consists of\n   text encoded according\
    \ to T.140 without any additional framing.  A\n   common case will be a single\
    \ ISO 10646 character, UTF-8 encoded.\n   T.140 requires the transport channel\
    \ to provide characters without\n   duplication and in original order.  Text conversation\
    \ users expect\n   that text will be delivered with no or a low level of lost\n\
    \   information.\n   Therefore a mechanism based on RTP is specified here.  It\
    \ gives text\n   arrival in correct order, without duplication, and with detection\
    \ and\n   indication of loss.  It also includes an optional possibility to\n \
    \  repeat data for redundancy to lower the risk of loss.  Since packet\n   overhead\
    \ is usually much larger than the T.140 contents, the increase\n   in bandwidth\
    \ with the use of redundancy is minimal.\n   By using RTP for text transmission\
    \ in a multimedia conversation\n   application, uniform handling of text and other\
    \ media can be achieved\n   in, as examples, conferencing systems, firewalls,\
    \ and network\n   translation devices.  This, in turn, eases the design and increases\n\
    \   the possibility for prompt and proper media delivery.\n   This document introduces\
    \ a method of transporting text interleaved\n   with voice within the same RTP\
    \ session.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [4].\n"
- title: 3.  Usage of RTP
  contents:
  - "3.  Usage of RTP\n   The payload format for real-time text transmission with\
    \ RTP [2]\n   described in this memo is intended for use between Public Switched\n\
    \   Telephone Network (PSTN) gateways and is called audio/t140c.\n"
- title: 3.1.  Motivations and Rationale
  contents:
  - "3.1.  Motivations and Rationale\n   The audio/t140c payload specification is\
    \ intended to allow gateways\n   that are interconnecting two PSTN networks to\
    \ interleave, through a\n   single RTP session, audio and text data received on\
    \ the PSTN circuit.\n   This is comparable to the way in which dual-tone multifrequency\n\
    \   (DTMF) is extracted and transmitted within an RTP session [14].\n   The audio/t140c\
    \ format SHALL NOT be used for applications other than\n   PSTN gateway applications.\
    \  In such applications, a specific\n   profiling document MAY make it REQUIRED\
    \ for a specific application.\n   The reason to prefer to use audio/t140c could\
    \ be for gateway\n   application where the ports are a limited and scarce resource.\n\
    \   Applications SHOULD use RFC 4103 [15] for real-time text\n   communication\
    \ that falls outside the limited scope of this\n   specification.\n"
- title: 3.2.  Payload Format for Transmission of audio/t140c Data
  contents:
  - "3.2.  Payload Format for Transmission of audio/t140c Data\n   An audio/t140c\
    \ conversation RTP payload format consists of a 16-bit\n   \"T140block counter\"\
    \ carried in network byte order (see RFC 791 [11]\n   Annex B), followed by one\
    \ and only one \"T140block\" (see section 3.3).\n   The fields in the RTP header\
    \ are set as defined in section 3.6.\n   The T140block counter MUST be initialized\
    \ to zero the first time that\n   a packet containing a T140block is transmitted\
    \ and MUST be\n   incremented by 1 each time that a new block is transmitted.\
    \  Once the\n   counter reaches the value 0xFFFF, the counter is reset to 0 the\
    \ next\n   time the counter is incremented.  This T140block counter is used to\n\
    \   detect lost blocks and to avoid duplication of blocks.\n   For the purposes\
    \ of readability, the remainder of this document\n   refers only to the T140block\
    \ without making explicit reference to the\n   T140block counter.  Readers should\
    \ understand that when using the\n   audio/t140c format, the T140block counter\
    \ MUST always precede the\n   actual T140block, including redundant data transmissions.\n"
- title: 3.3.  The "T140block"
  contents:
  - "3.3.  The \"T140block\"\n   T.140 text is UTF-8 coded as specified in T.140 with\
    \ no extra\n   framing.  The T140block contains one or more T.140 code elements\
    \ as\n   specified in [1].  Most T.140 code elements are single ISO 10646 [5]\n\
    \   characters, but some are multiple-character sequences.  Each\n   character\
    \ is UTF-8 encoded [6] into one or more octets.  Each block\n   MUST contain an\
    \ integral number of UTF-8-encoded characters\n   regardless of the number of\
    \ octets per character.  Any composite\n   character sequence (CCS) SHOULD be\
    \ placed within one block.\n"
- title: 3.4.  Synchronization of Text with Other Media
  contents:
  - "3.4.  Synchronization of Text with Other Media\n   Usually, each medium in a\
    \ session utilizes a separate RTP stream.  As\n   such, if synchronization of\
    \ the text and other media packets is\n   important, the streams MUST be associated\
    \ when the sessions are\n   established and the streams MUST share the same reference\
    \ clock\n   (refer to the description of the timestamp field as it relates to\n\
    \   synchronization in section 5.1 of RFC 3550).  Association of RTP\n   streams\
    \ can be done through the CNAME field of RTP Control Protocol\n   (RTCP) SDES\
    \ function.  It is dependent on the particular application\n   and is outside\
    \ the scope of this document.\n"
- title: 3.5.  Synchronization Considerations for the audio/t140c Format
  contents:
  - "3.5.  Synchronization Considerations for the audio/t140c Format\n   The audio/t140c\
    \ packets are generally transmitted as interleaved\n   packets between voice packets\
    \ or other kinds of audio packets with\n   the intention to create one common\
    \ audio signal in the receiving\n   equipment to be used for alternating between\
    \ text and voice.  The\n   audio/t140c payload is then used to play out audio\
    \ signals according\n   to a PSTN textphone coding method (usually a modem).\n\
    \   One should observe the RTP timestamps of the voice, text, or other\n   audio\
    \ packets in order to reproduce the stream correctly when playing\n   out the\
    \ audio.  Also, note that incoming text from a PSTN circuit\n   might be at a\
    \ higher bit-rate than can be played out on an egress\n   PSTN circuit.  As such,\
    \ it is possible that, on the egress side, a\n   gateway may not complete the\
    \ play out of the text packets before it\n   is time to play the next voice packet.\
    \  Given that this application\n   is primarily for the benefit of users of PSTN\
    \ textphone devices, it\n   is strongly RECOMMENDED that all received text packets\
    \ be properly\n   reproduced on the egress gateway before considering any other\n\
    \   subsequent audio packets.\n   If necessary, voice and other audio packets\
    \ should be discarded in\n   order to properly reproduce the text signals on the\
    \ PSTN circuit,\n   even if the text packets arrive late.\n   The PSTN textphone\
    \ users commonly use turn-taking indicators in the\n   text stream, so it can\
    \ be expected that as long as text is\n   transmitted, it is valid text and should\
    \ be given priority over\n   voice.\n   Note that the usual RTP semantics apply\
    \ with regards to switching\n   payload formats within an RTP session.  A sender\
    \ MAY switch between\n   \"audio/t140c\" and some other format within an RTP session,\
    \ but MUST\n   NOT send overlapping data using two different audio formats within\
    \ an\n   RTP session.  This does not prohibit an implementation from being\n \
    \  split into two logical parts to send overlapping data, each part\n   using\
    \ a different synchronization source (SSRC) and sending its own\n   RTP and RTCP\
    \ (such an endpoint will appear to others in the session\n   as two participants\
    \ with different SSRCs, but the same RTCP SDES\n   CNAME).  Further details around\
    \ using multiple payloads in an RTP\n   session can be found in RFC 3550 [2].\n"
- title: 3.6.  RTP Packet Header
  contents:
  - "3.6.  RTP Packet Header\n   Each RTP packet starts with a fixed RTP header. \
    \ The following fields\n   of the RTP fixed header are specified for T.140 text\
    \ streams:\n   Payload Type (PT): The assignment of an RTP payload type is specific\n\
    \      to the RTP profile under which this payload format is used.  For\n    \
    \  profiles that use dynamic payload type number assignment, this\n      payload\
    \ format can be identified by the MIME type \"audio/t140c\"\n      (see section\
    \ 10).  If redundancy is used per RFC 2198, another\n      payload type number\
    \ needs to be provided for the redundancy\n      format.  The MIME type for identifying\
    \ RFC 2198 is available in\n      RFC 3555 [17].\n   Sequence number: The definition\
    \ of sequence numbers is available in\n      RFC 3550 [2].  Character loss is\
    \ detected through the T140block\n      counter when using the audio/t140c payload\
    \ format.\n   Timestamp: The RTP Timestamp encodes the approximate instance of\n\
    \      entry of the primary text in the packet.  For audio/t140c, the\n      clock\
    \ frequency MAY be set to any value, and SHOULD be set to the\n      same value\
    \ as for any audio packets in the same RTP stream in\n      order to avoid RTP\
    \ timestamp rate switching.  The value SHOULD be\n      set by out of band mechanisms.\
    \  Sequential packets MUST NOT use\n      the same timestamp.  Since packets do\
    \ not represent any constant\n      duration, the timestamp cannot be used to\
    \ directly infer packet\n      loss.\n   M-bit: The M-bit MUST be included.  The\
    \ first packet in a session,\n      and the first packet after an idle period,\
    \ SHOULD be distinguished\n      by setting the marker bit in the RTP data header\
    \ to one.  The\n      marker bit in all other packets MUST be set to zero.  The\n\
    \      reception of the marker bit MAY be used for refined methods for\n     \
    \ detection of loss.\n"
- title: 4.  Protection against Loss of Data
  contents:
  - "4.  Protection against Loss of Data\n   Consideration must be devoted to keeping\
    \ loss of text caused by\n   packet loss within acceptable limits. (See ITU-T\
    \ F.703 [16].)\n   The default method that MUST be used when no other method is\n\
    \   explicitly selected is redundancy in accordance with RFC 2198 [3].\n   When\
    \ this method is used, the original text and two redundant\n   generations SHOULD\
    \ be transmitted if the application or end-to-end\n   conditions do not call for\
    \ other levels of redundancy to be used.\n   Other protection methods MAY be used.\
    \  Forward Error Correction\n   mechanisms as per RFC 2733 [8] or any other mechanism\
    \ with the\n   purpose of increasing the reliability of text transmission MAY\
    \ be\n   used as an alternative or complement to redundancy.  Text data MAY be\n\
    \   sent without additional protection if end-to-end network conditions\n   allow\
    \ the text quality requirements specified in ITU-T F.703 [16] to\n   be met in\
    \ all anticipated load conditions.\n"
- title: 4.1.  Payload Format When Using Redundancy
  contents:
  - "4.1.  Payload Format When Using Redundancy\n   When using the format with redundant\
    \ data, the transmitter may select\n   a number of T140block generations to retransmit\
    \ in each packet.  A\n   higher number introduces better protection against loss\
    \ of text but\n   marginally increases the data rate.\n   The RTP header is followed\
    \ by one or more redundant data block\n   headers, one for each redundant data\
    \ block to be included.  Each of\n   these headers provides the timestamp offset\
    \ and length of the\n   corresponding data block plus a payload type number indicating\
    \ the\n   payload format audio/t140c.\n   After the redundant data block headers\
    \ follows the redundant data\n   fields carrying T140blocks from previous packets,\
    \ and finally the new\n   (primary) T140block for this packet.\n   Redundant data\
    \ that would need a timestamp offset higher than 16383\n   due to its age at transmission\
    \ MUST NOT be included in transmitted\n   packets.\n"
- title: 4.2.  Using Redundancy with the audio/t140c Format
  contents:
  - "4.2.  Using Redundancy with the audio/t140c Format\n   Since sequence numbers\
    \ are not provided in the redundant header and\n   since the sequence number space\
    \ is shared by all audio payload types\n   within an RTP session, a sequence number\
    \ in the form of a T140block\n   counter is added to the T140block for transmission.\
    \  This allows the\n   redundant T140block data corresponding to missing primary\
    \ data to be\n   retrieved and used properly into the stream of received T140block\n\
    \   data when using the audio/t140c payload format.\n   All non-empty redundant\
    \ data blocks MUST contain the same data as a\n   T140block previously transmitted\
    \ as primary data, and be identified\n   with a T140block counter equating to\
    \ the original T140block counter\n   for that T140block.\n   The T140block counters\
    \ preceding the text in the T140block enables\n   the ordering by the receiver.\
    \  If there is a gap in the T140block\n   counter value of received audio/t140c\
    \ packets, and if there are\n   redundant T140blocks with T140block counters matching\
    \ those that are\n   missing, the redundant T140blocks may be substituted for\
    \ the missing\n   T140blocks.\n   The value of the length field in the redundant\
    \ header indicates the\n   length of the concatenated T140block counter and the\
    \ T140block.\n"
- title: 5.  Recommended Procedure
  contents:
  - "5.  Recommended Procedure\n   This section contains RECOMMENDED procedures for\
    \ usage of the payload\n   format.  Based on the information in the received packets,\
    \ the\n   receiver can:\n      - reorder text received out of order.\n      -\
    \ mark where text is missing because of packet loss.\n      - compensate for lost\
    \ packets by using redundant data.\n"
- title: 5.1.  Recommended Basic Procedure
  contents:
  - "5.1.  Recommended Basic Procedure\n   Packets are transmitted when there is valid\
    \ T.140 data to transmit.\n   T.140 specifies that T.140 data MAY be buffered\
    \ for transmission with\n   a maximum buffering time of 500 ms.  A buffering time\
    \ of 300 ms is\n   RECOMMENDED when the application or end-to-end network conditions\
    \ are\n   not known to require another value.\n   If no new data is available\
    \ for a longer period than the buffering\n   time, the transmission process is\
    \ in an idle period.\n   When new text is available for transmission after an\
    \ idle period, it\n   is RECOMMENDED to send it as soon as possible.  After this\n\
    \   transmission, it is RECOMMENDED to buffer T.140 data in buffering\n   time\
    \ intervals until next idle period.  This is done in order to keep\n   the maximum\
    \ bit-rate usage for text at a reasonable level.  The\n   buffering time MUST\
    \ be selected so that text users will perceive a\n   real-time text flow.\n"
- title: 5.2.  Transmission before and after "Idle Periods"
  contents:
  - "5.2.  Transmission before and after \"Idle Periods\"\n   When valid T.140 data\
    \ has been sent and no new T.140 data is\n   available for transmission after\
    \ the selected buffering time, an\n   empty T140block SHOULD be transmitted. \
    \ This situation is regarded to\n   be the beginning of an idle period.  The procedure\
    \ is recommended in\n   order to more rapidly detect potentially missing text\
    \ before an idle\n   period or when the audio stream switches from the transmission\
    \ of\n   audio/t140c to some other form of audio.\n   An empty T140block contains\
    \ no data, neither T.140 data nor a\n   T140block counter.\n   When redundancy\
    \ is used, transmission continues with a packet at\n   every transmission timer\
    \ expiration and insertion of an empty\n   T.140block as primary, until the last\
    \ non-empty T140block has been\n   transmitted as primary and as redundant data\
    \ with all intended\n   generations of redundancy.  The last packet before an\
    \ idle period\n   will contain only one non-empty T140block as redundant data,\
    \ and the\n   empty primary T140block.\n   When using the audio/t140c payload\
    \ format, empty T140blocks sent as\n   primary data SHOULD NOT be included as\
    \ redundant T140blocks, as it\n   would simply be a waste of bandwidth to send\
    \ them and it would\n   introduce a risk of false detection of loss.\n   After\
    \ an idle period, the transmitter SHOULD set the M-bit to one in\n   the first\
    \ packet with new text.\n"
- title: 5.3.  Detection of Lost Text Packets
  contents:
  - "5.3.  Detection of Lost Text Packets\n   Receivers detect the loss of an audio/t140c\
    \ packet by observing the\n   value of the T140block counter in a subsequent audio/t140c\
    \ packet.\n   Missing data SHOULD be marked by insertion of a missing text marker\n\
    \   in the received stream for each missing T140block, as specified in\n   ITU-T\
    \ T.140 Addendum 1 [1].\n   Procedures based on detection of the packet with the\
    \ M-bit set to one\n   MAY be used to reduce the risk for introducing false markers\
    \ of loss.\n   False detection will also be avoided when using audio/t140c by\n\
    \   observing the value of the T140block counter value.\n   If two successive\
    \ packets have the same number of redundant\n   generations, it SHOULD be treated\
    \ as the general redundancy level for\n   the session.  Change of the general\
    \ redundancy level SHOULD only be\n   done after an idle period.\n"
- title: 5.4.  Compensation for Packets Out of Order
  contents:
  - "5.4.  Compensation for Packets Out of Order\n   For protection against packets\
    \ arriving out of order, the following\n   procedure MAY be implemented in the\
    \ receiver.  If analysis of a\n   received packet reveals a gap in the sequence\
    \ and no redundant data\n   is available to fill that gap, the received packet\
    \ SHOULD be kept in\n   a buffer to allow time for the missing packet(s) to arrive.\
    \  It is\n   RECOMMENDED that the waiting time be limited to 1 second.\n   If\
    \ a packet with a T140block belonging to the gap arrives before the\n   waiting\
    \ time expires, this T140block is inserted into the gap and\n   then consecutive\
    \ T140blocks from the leading edge of the gap may be\n   consumed.  Any T140block\
    \ that does not arrive before the time limit\n   expires should be treated as\
    \ lost and a missing text marker inserted\n   (see section 5.3).\n"
- title: 6.  Parameter for Character Transmission Rate
  contents:
  - "6.  Parameter for Character Transmission Rate\n   In some cases, it is necessary\
    \ to limit the rate at which characters\n   are transmitted.  For example, when\
    \ a PSTN gateway is interworking\n   between an IP device and a PSTN textphone,\
    \ it may be necessary to\n   limit the character rate from the IP device in order\
    \ to avoid\n   throwing away characters in case of buffer overflow at the PSTN\n\
    \   gateway.\n   To control the character transmission rate, the MIME parameter\
    \ \"cps\"\n   in the \"fmtp\" attribute [7] is defined (see section 10).  It is\
    \ used\n   in Session Description Protocol (SDP) with the following syntax:\n\
    \       a=fmtp:<format> cps=<integer>\n   The <format> field is populated with\
    \ the payload type that is used\n   for text.  The <integer> field contains an\
    \ integer representing the\n   maximum number of characters that may be received\
    \ per second.  The\n   value shall be used as a mean value over any 10-second\
    \ interval.  The\n   default value is 30.\n   In receipt of this parameter, devices\
    \ MUST adhere to the request by\n   transmitting characters at a rate at or below\
    \ the specified <integer>\n   value.  Examples of use in SDP are found in section\
    \ 7.2.\n"
- title: 7.  Examples
  contents:
  - '7.  Examples

    '
- title: 7.1.  RTP Packetization Examples for the audio/t140c Format
  contents:
  - "7.1.  RTP Packetization Examples for the audio/t140c Format\n   Below is an example\
    \ of an audio/t140c RTP packet without redundancy.\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V=2|P|X| CC=0  |M|   T140c PT  |       sequence number         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      timestamp (8000Hz)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           synchronization source (SSRC) identifier            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     T140block counter         | T.140 encoded data            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               +---------------+\n   |                                      \
    \         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Below is\
    \ an example of an RTP packet with one redundant T140block\n   using audio/t140c\
    \ payload format.  The primary data block is empty,\n   which is the case when\
    \ transmitting a packet for the sole purpose of\n   forcing the redundant data\
    \ to be transmitted in the absence of any\n   new data.  Note that since this\
    \ is the audio/t140c payload format,\n   the redundant block of T.140 data is\
    \ immediately preceded with a\n   T140block counter.\n    0                  \
    \ 1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V=2|P|X| CC=0  |M|  \"RED\" PT   |   sequence number of primary  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               timestamp of primary encoding \"P\"               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           synchronization source (SSRC) identifier            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|   T140c PT  |  timestamp offset of \"R\"  | \"R\" block length  |\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |0|  \
    \ T140c PT  |  \"R\" T140block counter        |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               +\n   |               \"R\" T.140 encoded redundant data     \
    \           |\n   +                                               +---------------+\n\
    \   |                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   As a follow-on to the previous example, the example below shows the\n   next\
    \ RTP packet in the sequence that does contain a new real\n   T140block when using\
    \ the audio/t140c payload format.  This example\n   has 2 levels of redundancy\
    \ and one primary data block.  Since the\n   previous primary block was empty,\
    \ no redundant data is included for\n   that block.  This is because when using\
    \ the audio/t140c payload\n   format, any previously transmitted \"empty\" T140blocks\
    \ are NOT\n   included as redundant data in subsequent packets.\n    0       \
    \            1                   2                   3\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V=2|P|X| CC=0  |M|  \"RED\" PT   |   sequence number of primary  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               timestamp of primary encoding \"P\"               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           synchronization source (SSRC) identifier            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|   T140c PT  |  timestamp offset of \"R1\" | \"R1\" block length |\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |0|  \
    \ T140c PT  |  \"R1\" T140block counter       |               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \               +\n   |               \"R1\" T.140 encoded redundant data    \
    \           |\n   +                                               +---------------+\n\
    \   |                                               | \"P\" T140block |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | counter       |     \"P\" T.140 encoded primary data            |\n   +-+-+-+-+-+-+-+-+\
    \                                               +\n   |                      \
    \                                         |\n   +                            \
    \                   +---------------+\n   |                                  \
    \             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 7.2.  SDP Examples
  contents:
  - "7.2.  SDP Examples\n   Below is an example of SDP describing RTP text interleaved\
    \ with G.711\n   audio packets within the same RTP session from port 7200 and\
    \ at a\n   maximum text rate of 6 characters per second:\n      m=audio 7200 RTP/AVP\
    \ 0 98\n      a=rtpmap:98 t140c/8000\n      a=fmtp:98 cps=6\n   Below is an example\
    \ using RFC 2198 to provide the recommended two\n   levels of redundancy to the\
    \ text packets in an RTP session with\n   interleaving text and G.711 at a text\
    \ rate no faster than 20\n   characters per second:\n      m=audio 7200 RTP/AVP\
    \ 0 98 100\n      a=rtpmap:98 t140c/8000\n      a=fmtp:98 cps=20\n      a=rtpmap:100\
    \ red/8000\n      a=fmtp:100 98/98/98\n   Note: While these examples utilize the\
    \ RTP/AVP profile, it is not\n   intended to limit the scope of this memo to use\
    \ with only that\n   profile.  Rather, any appropriate profile may be used in\
    \ conjunction\n   with this memo.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   All of the security considerations from section\
    \ 14 of RFC 3550 [2]\n   apply.\n"
- title: 8.1.  Confidentiality
  contents:
  - "8.1.  Confidentiality\n   Since the intention of the described payload format\
    \ is to carry text\n   in a text conversation, security measures in the form of\
    \ encryption\n   are of importance.  The amount of data in a text conversation\
    \ session\n   is low, and therefore any encryption method MAY be selected and\n\
    \   applied to T.140 session contents or to the whole RTP packets.\n   Secure\
    \ Realtime Transport Protocol (SRTP) [13] provides a suitable\n   method for ensuring\
    \ confidentiality.\n"
- title: 8.2.  Integrity
  contents:
  - "8.2.  Integrity\n   It may be desirable to protect the text contents of an RTP\
    \ stream\n   against manipulation.  SRTP [13] provides methods for providing\n\
    \   integrity that MAY be applied.\n"
- title: 8.3.  Source Authentication
  contents:
  - "8.3.  Source Authentication\n   Measures to make sure that the source of text\
    \ is the intended one can\n   be accomplished by a combination of methods.\n \
    \  Text streams are usually used in a multimedia control environment.\n   Security\
    \ measures for authentication are available and SHOULD be\n   applied in the registration\
    \ and session establishment procedures, so\n   that the identity of the sender\
    \ of the text stream is reliably\n   associated with the person or device setting\
    \ up the session.  Once\n   established, SRTP [13] mechanisms MAY be applied to\
    \ ascertain that\n   the source is maintained the same during the session.\n"
- title: 9.  Congestion Considerations
  contents:
  - "9.  Congestion Considerations\n   The congestion considerations from section\
    \ 10 of RFC 3550 [2],\n   section 6 of RFC 2198 [3], and any used profile (e.g.,\
    \ the part about\n   congestion in section 2 of RFC 3551 [10]) apply with the\
    \ following\n   application-specific considerations.\n   Automated systems MUST\
    \ NOT use this format to send large amounts of\n   text at a rate significantly\
    \ above that which a human user could\n   enter.\n   Even if the network load\
    \ from users of text conversation is usually\n   very low, for best-effort networks\
    \ an application MUST monitor the\n   packet loss rate and take appropriate actions\
    \ to reduce its sending\n   rate if this application sends at higher rate than\
    \ what TCP would\n   achieve over the same path.  The reason is that this application,\
    \ due\n   to its recommended usage of two or more redundancy levels, is very\n\
    \   robust against packet loss.  At the same time, due to the low bit-\n   rate\
    \ of text conversations, if one considers the discussion in RFC\n   3714 [12],\
    \ this application will experience very high packet loss\n   rates before it needs\
    \ to perform any reduction in the sending rate.\n   If the application needs to\
    \ reduce its sending rate, it SHOULD NOT\n   reduce the number of redundancy levels\
    \ below the default amount\n   specified in section 4.  Instead, the following\
    \ actions are\n   RECOMMENDED in order of priority:\n   - Increase the shortest\
    \ time between transmissions described in\n     section 5.1 from the recommended\
    \ 300 ms to 500 ms that is the\n     highest value allowable according to T.140.\n\
    \   - Limit the maximum rate of characters transmitted.\n   - Increase the shortest\
    \ time between transmissions to a higher value,\n     not higher than 5 seconds.\
    \  This will cause unpleasant delays in\n     transmission, beyond what is allowed\
    \ according to T.140, but text\n     will still be conveyed in the session with\
    \ some usability.\n   - Exclude participants from the session.\n   Please note\
    \ that if the reduction in bit-rate achieved through the\n   above measures is\
    \ not sufficient, the only remaining action is to\n   terminate the session.\n\
    \   As guidance, some load figures are provided here as examples based on\n  \
    \ use of IPv4, including the load from IP, UDP, and RTP headers without\n   compression.\n\
    \   - Experience tells that a common mean character transmission rate\n     during\
    \ a complete PSTN text telephony session in reality is around\n     2 characters\
    \ per second.\n   - A maximum performance of 20 characters per second is enough\
    \ even\n     for voice-to-text applications.\n   - With the (unusually high) load\
    \ of 20 characters per second, in a\n     language that make use of three-octet\
    \ UTF-8 characters, two\n     redundant levels, and 300 ms between transmissions,\
    \ the maximum\n     load of this application is 3500 bits/s.\n   - When the restrictions\
    \ mentioned above are applied, limiting\n     transmission to 10 characters per\
    \ second, using 5 s between\n     transmissions, the maximum load of this application\
    \ in a language\n     that uses one octet per UTF-8 character is 300 bits/s.\n\
    \   Note also, that this payload can be used in a congested situation as\n   a\
    \ last resort to maintain some contact when audio and video media\n   need to\
    \ be stopped.  The availability of one low bit-rate stream for\n   text in such\
    \ adverse situations may be crucial for maintaining some\n   communication in\
    \ a critical situation.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document defines one RTP payload format named\
    \ \"t140\" and an\n   associated MIME type \"audio/t140c\".  They have been registered\
    \ by the\n   IANA.\n"
- title: 10.1.  Registration of MIME Media Type audio/t140c
  contents:
  - "10.1.  Registration of MIME Media Type audio/t140c\n   MIME media type name:\
    \ audio\n   MIME subtype name: t140c\n   Required parameters:\n     rate: The\
    \ RTP timestamp clock rate, which is equal to the\n     sampling rate.  This parameter\
    \ SHOULD have the same value as\n     for any audio codec packets interleaved\
    \ in the same RTP\n     stream.\n   Optional parameters:\n     cps: The maximum\
    \ number of characters that may be received\n     per second.  The default value\
    \ is 30.\n   Encoding considerations: T.140 text can be transmitted with RTP\n\
    \   as specified in RFC 4351.\n   Security considerations: See section 8 of RFC\
    \ 4351.\n   Interoperability considerations: None\n   Published specification:\
    \ ITU-T T.140 Recommendation.\n                            RFC 4351.\n   Applications\
    \ which use this media type:\n     Text communication systems and text conferencing\
    \ tools that\n     transmit text associated with audio and within the same RTP\n\
    \     session as the audio, such as PSTN gateways that transmit\n     audio and\
    \ text signals between two PSTN textphone users\n     over an IP network.\n  \
    \ Additional information:  This type is only defined for transfer\n     via RTP.\n\
    \     Magic number(s): None\n     File extension(s): None\n     Macintosh File\
    \ Type Code(s): None\n   Person & email address to contact for further information:\n\
    \     Paul E. Jones\n     E-mail: paulej@packetizer.com\n   Intended usage: COMMON\n\
    \   Author                        / Change controller:\n     Paul E. Jones   \
    \            | IETF avt WG delegated from the IESG\n     paulej@packetizer.com\
    \       |\n"
- title: 10.2.  SDP Mapping of MIME Parameters
  contents:
  - "10.2.  SDP Mapping of MIME Parameters\n   The information carried in the MIME\
    \ media type specification has a\n   specific mapping to fields in the Session\
    \ Description Protocol (SDP)\n   [7], which is commonly used to describe RTP sessions.\
    \  When SDP is\n   used to specify sessions employing the audio/t140c format,\
    \ the\n   mapping is as follows:\n      - The MIME type (\"audio\") goes in SDP\
    \ \"m=\" as the media name.\n      - The MIME subtype (payload format name) goes\
    \ in SDP \"a=rtpmap\" as\n        the encoding name.  For audio/t140c, the clock\
    \ rate MAY be set\n        to any value, and SHOULD be set to the same value as\
    \ for any\n        audio packets in the same RTP stream.\n      - The parameter\
    \ \"cps\" goes in SDP \"a=fmtp\" attribute.\n      - When the payload type is\
    \ used with redundancy according to RFC\n        2198, the level of redundancy\
    \ is shown by the number of elements\n        in the slash-separated payload type\
    \ list in the \"fmtp\" parameter\n        of the redundancy declaration as defined\
    \ in RFC 2198 [3].\n"
- title: 10.3.  Offer/Answer Consideration
  contents:
  - "10.3.  Offer/Answer Consideration\n   In order to achieve interoperability within\
    \ the framework of the\n   offer/answer model [9], the following consideration\
    \ should be made:\n      - The \"cps\" parameter is declarative.  Both sides may\
    \ provide a\n        value, which is independent of the other side.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors want to thank Stephen Casner, Magnus Westerlund,\
    \ and\n   Colin Perkins for valuable support with reviews and advice on\n   creation\
    \ of this document; Mickey Nasiri at Ericsson Mobile\n   Communication for providing\
    \ the development environment; Michele\n   Mizarro for verification of the usability\
    \ of the payload format for\n   its intended purpose; and Andreas Piirimets for\
    \ editing support.\n"
- title: 12.  Normative References
  contents:
  - "12.  Normative References\n   [1]  ITU-T Recommendation T.140 (1998) - Text conversation\
    \ protocol\n        for multimedia application, with amendment 1, (2000).\n  \
    \ [2]  Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson,\n        \"\
    RTP: A Transport Protocol for Real-Time Applications\", STD 64,\n        RFC 3550,\
    \ July 2003.\n   [3]  Perkins, C., Kouvelas, I., Hodson, O., Hardman, V., Handley,\
    \ M.,\n        Bolot, J., Vega-Garcia, A., and S. Fosse-Parisis, \"RTP Payload\n\
    \        for Redundant Audio Data\", RFC 2198, September 1997.\n   [4]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [5]  ISO/IEC 10646-1: (1993), Universal Multiple\
    \ Octet Coded\n        Character Set.\n   [6]  Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO 10646\", STD\n        63, RFC 3629, November 2003.\n   [7]  Handley,\
    \ M. and V. Jacobson, \"SDP: Session Description\n        Protocol\", RFC 2327,\
    \ April 1998.\n   [8]  Rosenberg, J. and H. Schulzrinne, \"An RTP Payload Format\
    \ for\n        Generic Forward Error Correction\", RFC 2733, December 1999.\n\
    \   [9]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with\n    \
    \    Session Description Protocol (SDP)\", RFC 3264, June 2002.\n   [10] Schulzrinne,\
    \ H. and S. Casner, \"RTP Profile for Audio and Video\n        Conferences with\
    \ Minimal Control\", STD 65, RFC 3551, July 2003.\n   [11] Postel, J., \"Internet\
    \ Protocol\", STD 5, RFC 791, September 1981.\n"
- title: 13.  Informative References
  contents:
  - "13.  Informative References\n   [12] Floyd, S. and J. Kempf, \"IAB Concerns Regarding\
    \ Congestion\n        Control for Voice Traffic in the Internet\", RFC 3714, March\n\
    \        2004.\n   [13] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and\
    \ K.\n        Norrman, \"The Secure Real-time Transport Protocol (SRTP)\", RFC\n\
    \        3711, March 2004.\n   [14] Schulzrinne, H. and S. Petrack, \"RTP Payload\
    \ for DTMF Digits,\n        Telephony Tones and Telephony Signals\", RFC 2833,\
    \ May 2000.\n   [15] Hellstrom, G. and P. Jones, \"RTP Payload for Text Conversation\"\
    ,\n        RFC 4103, June 2005.\n   [16] ITU-T Recommendation F.703, Multimedia\
    \ Conversational Services,\n        Nov 2000.\n   [17] Casner, S. and P. Hoschka,\
    \ \"MIME Type Registration of RTP\n        Payload Formats\", RFC 3555, July 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gunnar Hellstrom\n   Omnitor AB\n   Renathvagen 2\n  \
    \ SE-121 37 Johanneshov\n   Sweden\n   Phone: +46 708 204 288 / +46 8 556 002\
    \ 03\n   Fax:   +46 8 556 002 06\n   EMail: gunnar.hellstrom@omnitor.se\n   Paul\
    \ E. Jones\n   Cisco Systems, Inc.\n   7025 Kit Creek Rd.\n   Research Triangle\
    \ Park, NC 27709\n   USA\n   Phone: +1 919 392 6948\n   EMail: paulej@packetizer.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
