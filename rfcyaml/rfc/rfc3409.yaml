- title: __initial_text__
  contents:
  - '    Lower Layer Guidelines for Robust RTP/UDP/IP Header Compression

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes lower layer guidelines for robust header\n\
    \   compression (ROHC) and the requirements ROHC puts on lower layers.\n   The\
    \ purpose of this document is to support the incorporation of\n   robust header\
    \ compression algorithms, as specified in the ROHC\n   working group, into different\
    \ systems such as those specified by\n   Third Generation Partnership Project\
    \ (3GPP), 3GPP Project 2 (3GPP2),\n   European Technical Standards Institute (ETSI),\
    \ etc.  This document\n   covers only lower layer guidelines for compression of\
    \ RTP/UDP/IP and\n   UDP/IP headers as specified in [RFC3095].  Both general guidelines\n\
    \   and guidelines specific for cellular systems are discussed in this\n   document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction..................................................\
    \ 2\n   2.  General guidelines............................................ 2\n\
    \         2.1.  Error detection....................................... 2\n   \
    \      2.2.  Inferred header field information..................... 3\n      \
    \   2.3.  Handling of header size variation..................... 3\n         2.4.\
    \  Negotiation of header compression parameters.......... 5\n         2.5.  Demultiplexing\
    \ of flows onto logical channels......... 5\n         2.6.  Packet type identification............................\
    \ 5\n         2.7.  Packet duplication.................................... 6\n\
    \         2.8.  Packet reordering..................................... 6\n   \
    \      2.9.  Feedback packets...................................... 6\n   3. \
    \ Cellular system specific guidelines........................... 7\n         3.1.\
    \  Handover procedures................................... 7\n         3.2.  Unequal\
    \ error detection (UED)......................... 8\n         3.3.  Unequal error\
    \ protection (UEP)........................ 9\n   4.  IANA Considerations...........................................\
    \ 9\n   5.  Security Considerations....................................... 9\n\
    \   6.  References.................................................... 9\n   7.\
    \  Author's Address..............................................10\n   8.  Full\
    \ Copyright Statement......................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Almost all header compression algorithms [RFC1144, RFC2507,\
    \ RFC2508]\n   rely on some functionality from the underlying link layer.  Headers\n\
    \   (compressed or not) are expected to be delivered without any residual\n  \
    \ bit errors.  IP length fields are inferred from link layer length\n   fields.\
    \  Packet type identification may be separated from the header\n   compression\
    \ scheme and performed at the underlying link layer.\n   [RFC2509], for example,\
    \ elaborates on how to incorporate IP header\n   compression [RFC2507] in PPP\
    \ [RFC1661].\n   It is important to be aware of such assumptions on required\n\
    \   functionality from underlying layers when incorporating a header\n   compression\
    \ scheme into a system.  The functionality required by a\n   specific header compression\
    \ scheme from lower layers may also be\n   needed if incorporation of a header\
    \ compression scheme is to be\n   prepared without knowing the exact details of\
    \ the final scheme.\n   This document describes lower layer guidelines for robust\
    \ RTP/UDP/IP\n   header compression [RFC3095] as specified by the ROHC working\
    \ group.\n   [RFC3095] will from this point be referenced to as ROHC.  These\n\
    \   guidelines should simplify incorporation of the robust header\n   compression\
    \ algorithms into cellular systems like those standardized\n   by 3GPP, 3GPP2,\
    \ ETSI, etc, and also into specific link layer\n   protocols such as PPP.  The\
    \ document should also enable preparation\n   of this incorporation without requiring\
    \ detailed knowledge about the\n   final header compression scheme.  Relevant\
    \ standardization groups\n   standardizing link layers should, aided by this document,\
    \ include\n   required functionality in \"their\" link layers to support robust\n\
    \   header compression.\n   Hence, this document clarifies the requirements ROHC\
    \ put on lower\n   layers, while the requirements on ROHC may be found in [RFC3096].\n"
- title: 2.  General guidelines
  contents:
  - '2.  General guidelines

    '
- title: 2.1.  Error detection
  contents:
  - "2.1.  Error detection\n   All current header compression schemes [RFC1144, RFC2507,\
    \ RFC2508]\n   rely on lower layers to detect errors in (compressed) headers.\
    \  This\n   is usually done with link layer checksums covering at least the\n\
    \   compressed header.  However, any error detecting mechanism may fail\n   to\
    \ detect some bit errors, which are usually called residual bit\n   errors.\n\
    \   As for non-compressed IP packets, lower layers must provide similar\n   error\
    \ detection, at least for ROHC headers.  ROHC has been designed\n   not to increase\
    \ the residual bit error rate (for reasonable residual\n   error rates) compared\
    \ to the case when no header compression is used.\n   Headers passed up to the\
    \ header decompressor should, however, have a\n   residual bit error probability\
    \ close to zero.\n   A ROHC decompressor might make use of packets with erroneous\
    \ headers,\n   even if they must be discarded.  It is therefore recommended that\n\
    \   such invalid packets are passed up to the decompressor instead of\n   being\
    \ discarded by lower layers, but the packet must then be\n   accompanied with\
    \ an error indication.\n"
- title: 2.2.  Inferred header field information
  contents:
  - "2.2.  Inferred header field information\n   Some fields of the RTP/UDP/IP headers\
    \ may be classified as inferred,\n   that is their values are to be inferred from\
    \ other values or from an\n   underlying link layer.  A ROHC decompressor requires\
    \ that at least\n   the following information can be inferred from any underlying\
    \ link\n   layer:\n   Packet Length (IPv4) / Payload Length (IPv6)\n     The received\
    \ packet (with compressed header) length.\n   Length (UDP)\n     This field is\
    \ redundant with the Packet Length (IPv4) or the\n     Payload Length (IPv6) field.\n\
    \   In summary, all these fields relate to the length of the packet the\n   compressed\
    \ header is included in.  These fields may thus be inferred\n   by the decompressor\
    \ if one packet length value is signaled from the\n   link layer to the decompressor\
    \ on a per packet basis.  This packet\n   length value should be the length of\
    \ the received packet including\n   the (compressed) header.\n"
- title: 2.3.  Handling of header size variations
  contents:
  - "2.3.  Handling of header size variations\n   It is desirable for many cellular\
    \ link layer technologies that bit\n   rate variations and thus packet size variations\
    \ are minimized.\n   However, there will always be some variation in compressed\
    \ header\n   sizes since there is a trade-off between header size variations and\n\
    \   compression efficiency, and also due to events in the header flow and\n  \
    \ on the channel.  Variations in header sizes cause variations in\n   packet sizes\
    \ depending on variations of payload size.  The following\n   will only treat\
    \ header size variations caused by ROHC and not packet\n   size variations due\
    \ to variations of payload size.\n   The link layer must in some manner support\
    \ varying header sizes from\n   40 bytes (full RTP/UDP/IPv4 header) or 60 bytes\
    \ (full RTP/UDP/IPv6)\n   down to 1 byte for the minimal compressed header.  It\
    \ is likely that\n   the small compressed headers dominate the flow of headers,\
    \ and that\n   the largest headers are sent rarely, e.g., only a few times in\
    \ the\n   initialization phase of the header compression scheme.\n   Header size\
    \ variations and thus packet size variations depend on\n   numerous factors. \
    \ Unpredictable changes in the RTP, UDP or IP\n   headers may cause compressed\
    \ headers to momentarily increase in size,\n   and header sizes may depend on\
    \ packet loss rate at lower layers.\n   Header size distributions depend also\
    \ on the mode ROHC operates in.\n   However, for e.g., a voice application, carried\
    \ by RTP/UDP/IPv4, with\n   a constant speech frame size and silence suppression,\
    \ the following\n   basic header size changes may be considered as typical:\n\
    \   In the very beginning of the speech session, the ROHC scheme is\n   initialized\
    \ by sending full headers called IR/DYN.  These are the\n   largest headers, with\
    \ sizes depending basically on the IP-version.\n   For IPv4 the size is approximately\
    \ 40 bytes, and for IPv6\n   approximately 60 bytes.  The IR/DYN headers are used\
    \ typically during\n   one round trip time, possible interleaved with compressed\
    \ headers.\n   After that, usually only compressed headers are sent.  Compressed\n\
    \   headers may vary in size from 1 byte up to several bytes.  The\n   smallest\
    \ compressed headers are used when there is no unpredictable\n   changes in header\
    \ fields, typically during a talk spurt.  In the\n   beginning of a talk spurt,\
    \ compressed header sizes may increase by\n   one or a few bytes momentarily.\
    \  Apart from increases due to new talk\n   spurts, compressed headers may increase\
    \ in size momentarily due to\n   unpredictable changes in header fields.\n   ROHC\
    \ provides some means to limit the amount of produced header\n   sizes.  In some\
    \ cases a larger header than needed may be used to\n   limit the number of header\
    \ sizes used.  Padding octets may also be\n   used to fill up to a desired size.\
    \  Chapter 6.3 (Implementation\n   parameters) in [RFC3095] provides optional\
    \ implementation parameters\n   that make it possible to mandate how a ROHC implementation\
    \ should\n   operate, for instance to mandate how many header sizes that may be\n\
    \   used.\n"
- title: 2.4.  Negotiation of header compression parameters
  contents:
  - "2.4.  Negotiation of header compression parameters\n   ROHC has some parameters\
    \ that need to be configured in an initial\n   setup phase.  Which header compression\
    \ profiles are allowed may have\n   to be determined and also what kind of context\
    \ identification (CID)\n   mechanism to use.\n   The lower layers supporting ROHC\
    \ should thus include mechanisms for\n   negotiation of header compression parameters\
    \ such as CID usage and\n   header compression profile support.  In certain environments,\
    \ it\n   might also be desirable to have mechanisms for re-negotiation of\n  \
    \ these parameters.\n   The negotiation must also make sure that compressor and\
    \ decompressor\n   use exactly the same profile, i.e. that the set of profiles\
    \ available\n   after negotiation must not include two profile identifiers with\
    \ the\n   same 8-bit LSB value.\n   For unidirectional links, this configuration\
    \ might have to be\n   performed out-of-band or a priori, and similar methods\
    \ could of\n   course also be used for bi-directional links if direct negotiation\
    \ is\n   not possible.\n"
- title: 2.5.  Demultiplexing of flows onto logical channels
  contents:
  - "2.5.  Demultiplexing of flows onto logical channels\n   In some cellular technologies\
    \ flows are demultiplexed onto radio\n   bearers suitable to the particular flows,\
    \ i.e., onto logically\n   separated channels.  For instance, real-time flows\
    \ such as voice and\n   video may be carried on logically separated bearers. \
    \ It is\n   recommended that this kind of demultiplexing is done in the lower\n\
    \   layers supporting robust header compression.  By doing so, the need\n   for\
    \ context identification in the header compression scheme is\n   reduced.  If\
    \ there is a one to one mapping between flow and logical\n   channel, there is\
    \ no need at all for context identification at the\n   header compression level.\n"
- title: 2.6.  Packet type identification
  contents:
  - "2.6.  Packet type identification\n   Header compression schemes like [RFC2507,\
    \ RFC2508] have relied on the\n   underlying link layer to identify different\
    \ kinds of headers by means\n   of packet type identifiers on link layers.  This\
    \ kind of mechanism is\n   not necessarily needed for ROHC since a ROHC packet\
    \ type identifier\n   is included in all compressed ROHC headers.  Only if ROHC\
    \ packets are\n   to be mixed with other packets, such as packets compressed by\
    \ other\n   header compression schemes, must the link layer provide a packet type\n\
    \   identifier.  In such cases, or if ROHC is used on top of link layers\n   already\
    \ providing packet type identification, one (1) packet type\n   identifier must\
    \ be reserved for identification of ROHC packets. Thus,\n   only one ROHC packet\
    \ type is needed to mix ROHC and e.g., RFC 2507\n   flows, or to support ROHC\
    \ on links where packet type identifiers are\n   already present.\n"
- title: 2.7.  Packet duplication
  contents:
  - "2.7.  Packet duplication\n   Exact duplications of one and the same packet may\
    \ waste transmission\n   resources and is in contradiction to compression.  Even\
    \ so, packet\n   duplication may occur for various reasons.  Packet duplication\
    \ may\n   also occur in different places along the path for a packet.\n   ROHC\
    \ can handle packet duplication before the compressor but such\n   packet duplications\
    \ should be avoided for optimal compression\n   efficiency.  For correct ROHC\
    \ operation, lower layers are not allowed\n   to duplicate packets on the ROHC\
    \ compressor-decompressor path.\n"
- title: 2.8.  Packet reordering
  contents:
  - "2.8.  Packet reordering\n   Lower layers between compressor and decompressor\
    \ are assumed not to\n   reorder packets, i.e., the decompressor must receive\
    \ packets in the\n   same order as the compressor sends them.  ROHC handles, however,\n\
    \   reordering before the compression point.  That is, there is no\n   assumption\
    \ that the compressor will only receive packets in sequence.\n"
- title: 2.9.  Feedback packets
  contents:
  - "2.9.  Feedback packets\n   ROHC may operate in three different modes; Unidirectional\
    \ mode (U-\n   mode), bidirectional optimistic mode (O-mode) and bidirectional\n\
    \   reliable mode (R-mode).  A brief description of the modes can be\n   found\
    \ in chapter 4.4 of [RFC3095].\n   In U-mode it is not necessary to send any feedback\
    \ from the\n   decompressor to the compressor.  O-mode and R-mode requires however\n\
    \   that feedback messages from the decompressor to the compressor be\n   sent.\
    \  Feedback messages consist of small ROHC internal packets\n   without any application\
    \ payload.  It is possible in ROHC to piggy-\n   back feedback packets onto regular\
    \ packets with ROHC compressed\n   headers and payload, if there is ROHC type\
    \ of compression in both the\n   forward and reverse direction.  However, this\
    \ piggy-backing may not\n   be desired or possible in some cases.\n   To support\
    \ ROHC O-mode or R-mode operation, lower layers must provide\n   transport of\
    \ feedback packets from decompressor to compressor.  If\n   piggybacking of feedback\
    \ packets is not used, lower layers must be\n   able to handle feedback as small\
    \ stand-alone packets.  For optimal\n   compression efficiency, feedback packets\
    \ from the decompressor should\n   be delivered as soon as possible to the compressor.\n"
- title: 3.  Cellular system specific guidelines
  contents:
  - "3.  Cellular system specific guidelines\n   An important group of link layer\
    \ technologies where robust header\n   compression will be needed are future cellular\
    \ systems, which may\n   have a very large number of users in some years.  The\
    \ need for header\n   compression is large in these kinds of systems to achieve\
    \ spectrum\n   efficiency.  Hence, it is important that future cellular systems\
    \ can\n   efficiently incorporate the robust header compression scheme.\n"
- title: 3.1.  Handover procedures
  contents:
  - "3.1.  Handover procedures\n   One cellular specific property that may affect\
    \ header compression is\n   mobility and thus, handover (i.e., change of serving\
    \ base station or\n   radio network controller).\n   The main characteristics\
    \ of handovers relevant for robust header\n   compression are: the length of the\
    \ longest packet loss event due to\n   handover (i.e., the number of consecutive\
    \ packet losses), and\n   relocation of header compression context when necessary.\n\
    \   Depending on the location of the header compressor/decompressor in\n   the\
    \ radio access network and the type of handover, handover may or\n   may not cause\
    \ disruptions or packet loss events in the (compressed)\n   header flow relevant\
    \ for the header compression scheme.  For\n   instance, if soft handover is used\
    \ and if the header\n   compressor/decompressor reside above the combining point\
    \ for soft\n   handover, there will be no extra packet losses visible to the\n\
    \   decompressor due to handover.  In hard handovers, where packet loss\n   events\
    \ due to handover is introduced, the length of the longest\n   consecutive packet\
    \ loss is most relevant and thus should be\n   minimized.\n   To maintain efficient\
    \ ROHC operation, it should be ensured that\n   handover events do not cause significant\
    \ long events of consecutive\n   packet loss.  The term \"significant\" in this\
    \ context relates to the\n   kind of loss tolerable for the carried real-time\
    \ application.\n   If hard handovers are performed, which may cause significant\
    \ long\n   events of consecutive packet loss, the radio access network should\n\
    \   notify the compressor when such a handover has started and completed.\n  \
    \ The compressor could then be implemented to take proper actions and\n   prevent\
    \ consequences from such long loss events.\n   Cellular systems supporting robust\
    \ header compression may have\n   internal mechanisms for transferring the header\
    \ compression context\n   between nodes where contexts may reside, at or before\
    \ handover.  If\n   no such mechanism for transferring header compression context\
    \ between\n   nodes is available, the contexts may be resynchronized by the header\n\
    \   compression scheme itself by means of a context refresh.  The header\n   compressor\
    \ will then perform a new header compression initialization,\n   e.g., by sending\
    \ full headers.  This will, however, introduce an\n   increase in the average\
    \ header size dependent on how often a transfer\n   of context is needed.  To\
    \ reinitialize the context in such cases, the\n   lower layers must indicate to\
    \ the header compressor when a handover\n   has occurred, so that it knows when\
    \ to refresh the context.  Chapter\n   6.3 (Implementation parameters) in [RFC3095]\
    \ provides optional\n   implementation parameters that make it possible to trigger\
    \ e.g., a\n   complete context refresh.\n"
- title: 3.2.  Unequal error detection (UED)
  contents:
  - "3.2.  Unequal error detection (UED)\n   Section 3.1 states that ROHC requires\
    \ error detection from lower\n   layers for at least the compressed header.  However,\
    \ some cellular\n   technologies may differentiate the amount of error detection\
    \ for\n   different parts of a packet.  For instance, it could be possible to\n\
    \   have a stronger error detection for the header part of a packet, if\n   the\
    \ application payload part of the packet is less sensitive to\n   errors, e.g.,\
    \ some cellular types of speech codes.\n   ROHC does not require UED from lower\
    \ layers, ROHC requires only an\n   error detection mechanism that detects errors\
    \ in at least the header\n   part of the packet.  Thus there is no requirement\
    \ on lower layers to\n   provide separate error detection for the header and payload\
    \ part of a\n   packet.  However, overall performance may be increased if UED\
    \ is\n   used.\n   For example, if equal error detection is used in the form of\
    \ one link\n   layer checksum covering the entire packet including both header\
    \ and\n   payload part, any bit error will cause the packet to be discarded at\n\
    \   the ROHC decompressor.  It is not possible to distinguish between\n   errors\
    \ in the header and the payload part of the packet with this\n   error detection\
    \ mechanism and the ROHC decompressor must assume that\n   the header is damaged,\
    \ even if the bit error hit the payload part of\n   the packet.  If the header\
    \ is assumed to be damaged, it is not\n   possible to ensure correct decompression\
    \ and that packet will thus be\n   discarded.  If the application is such that\
    \ it tolerates some errors\n   in the payload, it could have been better to deliver\
    \ that packet to\n   the application and let the application judge whether the\
    \ payload was\n   usable or not.  Hence, with an unequal error detection scheme\
    \ where\n   it is possible to separate detection of errors in the header and\n\
    \   payload part of a packet, more packets may be delivered to\n   applications\
    \ in some cases for the same lower layer error rates.  The\n   final benefit depends\
    \ of course on the cost of UED for the radio\n   interface and related protocols.\n"
- title: 3.3.  Unequal error protection (UEP)
  contents:
  - "3.3.  Unequal error protection (UEP)\n   Some cellular technologies can provide\
    \ different error probabilities\n   for different parts of a packet, unequal error\
    \ protection (UEP).  For\n   instance, the lower layers may provide a stronger\
    \ error protection\n   for the header part of a packet compared to the payload\
    \ part of the\n   packet.\n   ROHC does not require UEP.  UEP may be beneficial\
    \ in some cases to\n   reduce the error rate in ROHC headers, but only if it is\
    \ possible to\n   distinguish between errors in header and payload parts of a\
    \ packet,\n   i.e., only if unequal error detection (UED) is used.  The benefit\
    \ of\n   UEP depends of course on the cost of UEP for the radio interface and\n\
    \   related protocols.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   A protocol which follows these guidelines, e.g.,\
    \ [RFC3095], will\n   require the IANA to assign various numbers.  This document\
    \ by itself,\n   however, does not require IANA involvement.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   A protocol which follows these guidelines, e.g.,\
    \ [RFC3095], must be\n   able to compress packets containing IPSEC headers according\
    \ to\n   [RFC3096].  There may be other security aspects to consider in such\n\
    \   protocols.  This document by itself, however, does not add security\n   risks.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [RFC1144]   Jacobson, V., \"Compressing TCP/IP Headers for\
    \ Low-Speed\n               Serial Links\", RFC 1144, February 1990.\n   [RFC1661]\
    \   Simpson, W., Ed., \"The Point-To-Point Protocol (PPP)\",\n               STD\
    \ 51, RFC 1661, July 1994.\n   [RFC2507]   Degermark, M., Nordgren, B. and S.\
    \ Pink, \"IP Header\n               Compression\", RFC 2507, February 1999.\n\
    \   [RFC2508]   Casner, S. and V. Jacobson, \"Compressing IP/UDP/RTP\n       \
    \        Headers for Low-Speed Serial Links\", RFC 2508, February\n          \
    \     1999.\n   [RFC2509]   Engan, M., Casner, S. and C. Bormann, \"IP Header\n\
    \               Compression over PPP\", RFC 2509, February 1999.\n   [RFC3095]\
    \   Borman, C., Burmeister, C., Degermark, M., Fukushima, H.,\n              \
    \ Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T., Le,\n               K.,\
    \ Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K.,\n               Wiebke,\
    \ T., Yoshimura, T. and H. Zheng, \"Robust Header\n               Compression\
    \ (ROHC)\", RFC 3095, July 2001.\n   [RFC3096]   Degermark, M., \"Requirements\
    \ for robust IP/UDP/RTP header\n               compression\", RFC 3096, July 2001.\n"
- title: 7.  Author's Address
  contents:
  - "7.  Author's Address\n   Krister Svanbro\n   Box 920\n   Ericsson AB\n   SE-971\
    \ 28 Lulea, Sweden\n   Phone: +46 920 20 20 77\n   Fax:   +46 920 20 20 99\n \
    \  EMail: krister.svanbro@ericsson.com\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
