- contents:
  - "                       The PINT Service Protocol:\n   Extensions to SIP and SDP
    for IP Access to Telephone Call Services\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document contains the specification of the PINT Service Protocol\n
    \  1.0, which defines a protocol for invoking certain telephone services\n   from
    an IP network. These services include placing basic calls,\n   sending and receiving
    faxes, and receiving content over the\n   telephone. The protocol is specified
    as a set of enhancements and\n   additions to the SIP 2.0 and SDP protocols.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction .................................................
    \ 4\n   1.1 Glossary ....................................................  6\n
    \  2. PINT Milestone Services ......................................  6\n   2.1
    Request to Call .............................................  7\n   2.2 Request
    to Fax Content ......................................  7\n   2.3 Request to Speak/Send/Play
    Content ..........................  7\n   2.4 Relation between PINT milestone
    services and traditional\n       telephone services ..........................................
    \ 7\n   3. PINT Functional and Protocol Architecture ....................  8\n
    \  3.1. PINT Functional Architecture ...............................  8\n   3.2.
    PINT Protocol Architecture .................................  9\n   3.2.1. SDP
    operation in PINT .................................... 10\n   3.2.2. SIP Operation
    in PINT .................................... 11\n   3.3. REQUIRED and OPTIONAL
    elements for PINT compliance ......... 11\n   3.4. PINT Extensions to SDP 2.0
    ................................. 12\n   3.4.1. Network Type \"TN\" and Address
    Type \"RFC2543\" ............. 12\n   3.4.2. Support for Data Objects within PINT
    ..................... 13\n   3.4.2.1. Use of fmtp attributes in PINT requests
    ................ 15\n   3.4.2.2. Support for Remote Data Object References in
    PINT ...... 16\n   3.4.2.3. Support for GSTN-based Data Objects in PINT ............
    17\n   3.4.2.4. Session Description support for included Data Objects .. 18\n
    \  3.4.3. Attribute Tags to pass information into the Telephone\n          Network
    .................................................. 19\n   3.4.3.1. The phone-context
    attribute ............................ 20\n   3.4.3.2. Presentation Restriction
    attribute ..................... 22\n   3.4.3.3. ITU-T CalledPartyAddress attributes
    parameters ......... 23\n   3.4.4. The \"require\" attribute ..................................
    24\n   3.5. PINT Extensions to SIP 2.0 ................................. 25\n
    \  3.5.1. Multi-part MIME (sending data along with SIP request) .... 25\n   3.5.2.
    Warning header ........................................... 27\n   3.5.3. Mechanism
    to register interest in the disposition of a PINT\n          service, and to receive
    indications on that disposition .. 27\n   3.5.3.1. Opening a monitoring session
    with a SUBSCRIBE request .. 28\n   3.5.3.2. Sending Status Indications with a
    NOTIFY request ....... 30\n   3.5.3.3. Closing a monitoring session with an UNSUBSCRIBE
    request 30\n   3.5.3.4. Timing of SUBSCRIBE requests ...........................
    31\n   3.5.4. The \"Require:\" header for PINT ........................... 32\n
    \  3.5.5. PINT URLs within PINT requests ........................... 32\n   3.5.5.1.
    PINT URLS within Request-URIs .......................... 33\n   3.5.6. Telephony
    Network Parameters within PINT URLs ............ 33\n   3.5.7. REGISTER requests
    within PINT ............................ 34\n   3.5.8. BYE Requests in PINT .....................................
    35\n   4. Examples of PINT Requests and Responses ...................... 37\n
    \  4.1. A request to a call center from an anonymous user to receive\n        a
    phone call ............................................... 37\n   4.2. A request
    from a non anonymous customer (John Jones) to\n        receive a phone call from
    a particular sales agent\n        (Mary James) ...............................................
    37\n   4.3. A request to get a fax back ................................ 38\n
    \  4.4. A request to have information read out over the phone ...... 39\n   4.5.
    A request to send an included text page to a friend's pager. 39\n   4.6. A request
    to send an image as a fax to phone number\n        +972-9-956-1867 ............................................
    40\n   4.7. A request to read out over the phone two pieces of content\n        in
    sequence ................................................ 41\n   4.8. Request
    for the prices for ISDN to be sent to my fax\n        machine ....................................................
    42\n   4.9. Request for a callback ..................................... 42\n
    \  4.10.Sending a set of information in response to an enquiry ..... 43\n   4.11.Sportsline
    \"headlines\" message sent to your phone/fax/pager  44\n   4.12.Automatically
    giving someone a fax copy of your phone bill . 45\n   5. Security Considerations
    ...................................... 46\n   5.1.  Basic Principles for PINT
    Use ............................. 46\n   5.1.1.  Responsibility for service requests
    ..................... 46\n   5.1.2.  Authority to make requests ..............................
    47\n   5.1.3.  Privacy ................................................. 47\n
    \  5.1.4.  Privacy Implications of SUBSCRIBE/NOTIFY ................ 48\n   5.2.
    \ Registration Procedures ................................... 49\n   5.3.  Security
    mechanisms and implications on PINT service ...... 50\n   5.4.  Summary of Security
    Implications .......................... 52\n   6. Deployment considerations and
    the Relationship PINT to I.N.\n      (Informative) ................................................
    54\n   6.1. Web Front End to PINT Infrastructure ....................... 54\n
    \  6.2. Redirects to Multiple Gateways ............................. 54\n   6.3.
    Competing PINT Gateways REGISTERing to offer the same\n        service ....................................................
    55\n   6.4. Limitations on Available Information and Request Timing for\n        SUBSCRIBE
    .................................................. 56\n   6.5. Parameters needed
    for invoking traditional GSTN Services\n        within PINT.................................................
    58\n   6.5.1. Service Identifier ....................................... 58\n
    \  6.5.2. A and B parties .......................................... 58\n   6.5.3.
    Other Service Parameters ................................. 59\n   6.5.4. Service
    Parameter Summary ................................ 59\n   6.6. Parameter Mapping
    to PINT Extensions........................ 60\n   7. References ...................................................
    62\n   8. Acknowledgements ............................................. 64\n
    \  Appendix A: Collected ABNF for PINT Extensions .................. 65\n   Appendix
    B: IANA Considerations ................................. 69\n   Authors' Addresses
    .............................................. 72\n   Full Copyright Statement
    ........................................ 73\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   The desire to invoke certain telephone call services from
    the\n   Internet has been identified by many different groups (users, public\n
    \  and private network operators, call center service providers,\n   equipment
    vendors, see [7]). The generic scenario is as follows (when\n   the invocation
    is successful):\n      1. an IP host sends a request to a server on an IP network;\n
    \     2. the server relays the request into a telephone network;\n      3. the
    telephone network performs the requested call service.\n   As examples, consider
    a user who wishes to have a callback placed to\n   his/her telephone. It may be
    that a customer wants someone in the\n   support department of some business to
    call them back. Similarly, a\n   user may want to hear some announcement of a
    weather warning sent\n   from a remote automatic weather service in the event
    of a storm.\n   We use the term \"PSTN/Internet Interworking (PINT) Service\"
    to denote\n   such a complete transaction, starting with the sending of a request\n
    \  from an IP client and including the telephone call itself. PINT\n   services
    are distinguished by the fact that they always involve two\n   separate networks:\n
    \     an IP network to request the placement of a call, and the Global\n      Switched
    Telephone Network (GSTN) to execute the actual call. It\n      is understood that
    Intelligent Network systems, private PBXs,\n      cellular phone networks, and
    the ISDN can all be used to deliver\n      PINT services.  Also, the request for
    service might come from\n      within a private IP network that is disconnected
    from the whole\n      Internet.\n   The requirements for the PINT protocol were
    deliberately restricted\n   to providing the ability to invoke a small number
    of fixed telephone\n   call services. These \"Milestone PINT services\" are specified
    in\n   section 2.  Great care has been taken, however, to develop a protocol\n
    \  that is aligned with other Internet protocols where possible, so that\n   future
    extensions to PINT could develop along with Internet\n   conferencing.\n   Within
    the Internet conference architecture, establishing media calls\n   is done via
    a combination of protocols. SIP [1] is used to establish\n   the association between
    the participants within the call (this\n   association between participants within
    the call is called a\n   \"session\"), and SDP [2] is used to describe the media
    to be exchanged\n   within the session. The PINT protocol uses these two protocols\n
    \  together, providing some extensions and enhancements to enable SIP\n   clients
    and servers to become PINT clients and servers.\n   A PINT user who wishes to
    invoke a service within the telephone\n   network uses SIP to invite a remote
    PINT server into a session. The\n   invitation contains an SDP description of
    the media session that the\n   user would like to take place. This might be a
    \"sending a fax\n   session\" or a \"telephone call session\", for example. In
    a PINT\n   service execution session the media is transported over the phone\n
    \  system, while in a SIP session the media is normally transported over\n   an
    internet.\n   When used to invoke a PINT service, SIP establishes an association\n
    \  between a requesting PINT client and the PINT server that is\n   responsible
    for invoking the service within the telephone network.\n   These two entities
    are not the same entities as the telephone network\n   entities involved in the
    telephone network service. The SIP messages\n   carry within their SDP payloads
    a description of the telephone\n   network media session.\n   Note that the fact
    that a PINT server accepts an invitation and a\n   session is established is no
    guarantee that the media will be\n   successfully transported. (This is analogous
    to the fact that if a\n   SIP invitation is accepted successfully, this is no
    guarantee against\n   a subsequent failure of audio hardware).\n   The particular
    requirements of PINT users lead to some new messages.\n   When a PINT server agrees
    to send a fax to telephone B, it may be\n   that the fax transmission fails after
    part of the fax is sent.\n   Therefore, the PINT client may wish to receive information
    about the\n   status of the actual telephone call session that was invoked as
    a\n   result of the established PINT session. Three new requests,\n   SUBSCRIBE,
    UNSUBSCRIBE, and NOTIFY, are added here to vanilla SIP to\n   allow this.\n   The
    enhancements and additions specified here are not intended to\n   alter the behaviour
    of baseline SIP or SDP in any way. The purpose of\n   PINT extensions is to extend
    the usual SIP/SDP services to the\n   telephone world. Apart from integrating
    well into existing protocols\n   and architectures, and the advantages of reuse,
    this means that the\n   protocol specified here can handle a rather wider class
    of call\n   services than just the Milestone services.\n   The rest of this document
    is organised as follows: Section 2\n   describes the PINT Milestone services;
    section 3 specifies the PINT\n   functional and protocol architecture; section
    4 gives examples of the\n   PINT 1.0 extensions of SIP and SDP; section 5 contains
    some security\n   considerations for PINT. The final section contains descriptions
    of\n   how the PINT protocol may be used to provide service over the GSTN.\n   For
    a summary of the extensions to SIP and SDP specified in this\n   document, Section
    3.2 gives an combined list, plus one each\n   describing the extensions to SIP
    and SDP respectively.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119. In addition,\n   the construct \"MUST .... OR ....\" implies that it is
    an absolute\n   requirement of this specification to implement one of the two\n
    \  possibilities stated (represented by dots in the above phrase). An\n   implementation
    MUST be able to interoperate with another\n   implementation that chooses either
    of the two possibilities.\n"
  - contents:
    - "1.1 Glossary\n   Requestor - An Internet host from which a request for service\n
      \  originates\n   PINT Service - A service invoked within a phone system in
      response to\n   a request received from an PINT client.\n   PINT Client - An
      Internet host that sends requests for invocation of\n   a PINT Service, in accordance
      with this document.\n   PINT Gateway - An Internet host that accepts requests
      for PINT\n   Service and dispatches them onwards towards a telephone network.\n
      \  Executive System - A system that interfaces to a PINT Server and to a\n   telephone
      network that executes a PINT service. It need not be\n   directly associated
      with the Internet, and is represented by the PINT\n   Server in transactions
      with Internet entities.\n   Requesting User - The initiator of a request for
      service. This role\n   may be distinct from that of the \"party\" to any telephone
      network\n   call that results from the request.\n   (Service Call) Party - A
      person who is involved in a telephone\n   network call that results from the
      execution of a PINT service\n   request, or a telephone network-based resource
      that is involved (such\n   as an automatic Fax Sender or a Text-to-Speech Unit).\n"
    title: 1.1 Glossary
  title: 1. Introduction
- contents:
  - "2. PINT Milestone Services\n   The original motivation for defining this protocol
    was the desire to\n   invoke the following three telephone network services from
    within an\n   IP network:\n"
  - contents:
    - "2.1 Request to Call\n   A request is sent from an IP host that causes a phone
      call to be\n   made, connecting party A to some remote party B.\n"
    title: 2.1 Request to Call
  - contents:
    - "2.2 Request to Fax Content\n   A request is sent from an IP host that causes
      a fax to be sent to fax\n   machine B. The request MAY contain a pointer to
      the fax data (that\n   could reside in the IP network or in the Telephone Network),
      OR the\n   fax data itself. The content of the fax MAY be text OR some other\n
      \  more general image data. The details of the fax transmission are not\n   accessible
      to the IP network, but remain entirely within the\n   telephone network.\n   Note
      that this service does not relate to \"Fax over IP\": the IP\n   network is
      only used to send the request that a certain fax be sent.\n   Of course, it
      is possible that the resulting telephone network fax\n   call happens to use
      a real-time IP fax solution, but this is\n   completely transparent to the PINT
      transaction.\n"
    title: 2.2 Request to Fax Content
  - contents:
    - "2.3 Request to Speak/Send/Play Content\n   A request is sent from an IP host
      that causes a phone call to be made\n   to user A, and for some sort of content
      to be spoken out. The request\n   MUST EITHER contain a URL pointing to the
      content, OR include the\n   content itself. The content MAY be text OR some
      other more general\n   application data. The details of the content transmission
      are not\n   accessible to the IP network, but remain entirely within the\n   telephone
      network. This service could equally be called \"Request to\n   Hear Content\";
      the user's goal is to hear the content spoken to them.\n   The mechanism by
      which the request is formulated is outside the scope\n   of this document; however,
      an example might be that a Web page has a\n   button that when pressed causes
      a PINT request to be passed to the\n   PSTN, resulting in the content of the
      page (or other details) being\n   spoken to the person.\n"
    title: 2.3 Request to Speak/Send/Play Content
  - contents:
    - "2.4 Relation between PINT milestone services and traditional telephone\n    services\n
      \  There are many different versions and variations of each telephone\n   call
      service invoked by a PINT request. Consider as an example what\n   happens when
      a user requests to call 1-800-2255-287 via the PINT\n   Request-to-Call service.\n
      \  There may be thousands of agents in the call center, and there may be\n   any
      number of sophisticated algorithms and pieces of equipment that\n   are used
      to decide exactly which agent will return the call. And once\n   this choice
      is made, there may be many different ways to set up the\n   call: the agent's
      phone might ring first, and only then the original\n   user will be called;
      or perhaps the user might be called first, and\n   hear some horrible music
      or pre-recorded message while the agent is\n   located.\n   Similarly, when
      a PINT request causes a fax to be sent, there are\n   hundreds of fax protocol
      details to be negotiated, as well as\n   transmission details within the telephone
      networks used.\n   PINT requests do not specify too precisely the exact telephone-side\n
      \  service. Operational details of individual events within the\n   telephone
      network that executes the request are outside the scope of\n   PINT. This does
      not preclude certain high-level details of the\n   telephone network session
      from being expressed within a PINT request.\n   For example, it is possible
      to use the SDP \"lang\" attribute to\n   express a language preference for the
      Request-to-Hear-Content\n   Service.  If a particular PINT system wishes to
      allow requests to\n   contain details of the telephone-network-side service,
      it uses the\n   SDP attribute mechanism (see section 3.4.2).\n"
    title: 2.4 Relation between PINT milestone services and traditional telephone
  title: 2. PINT Milestone Services
- contents:
  - '3. PINT Functional and Protocol Architecture

    '
  - contents:
    - "3.1. PINT Functional Architecture\n   Familiarity is assumed with SIP 2.0 [1]
      and with SDP [2].\n   PINT clients and servers are SIP clients and servers.
      SIP is used to\n   carry the request over the IP network to the correct PINT
      server in a\n   secure and reliable manner, and SDP is used to describe the
      telephone\n   network session that is to be invoked or whose status is to be\n
      \  returned.\n   A PINT system uses SIP proxy servers and redirect servers for
      their\n   usual purpose, but at some point there must be a PINT server with
      the\n   means to relay received requests into a telephone system and to\n   receive
      acknowledgement of these relayed requests. A PINT server with\n   this capability
      is called a \"PINT gateway\". A PINT gateway appears to\n   a SIP system as
      a User Agent Server. Notice that a PINT gateway\n   appears to the PINT infrastructure
      as if it represents a \"user\",\n   while in fact it really represents an entire
      telephone network\n   infrastructure that can provide a set of telephone network
      services.\n   So the PINT system might appear to an individual PINT client as\n
      \  follows:\n                           /\\/\\/\\/\\/\\/\\/\\            /\\/\\/\\/\\/\\/\\/\\/\\\n"
    - '___________                \          __/___      ___\_             \

      '
    - '|  PINT   |      PINT      \   PINT  | PINT |     |Exec| Telephone  /

      '
    - '| client  |<-------------->|  server |gatewy|=====|Syst| Network    \

      '
    - "|_________|    protocol    /  cloud  |______|     |____|  Cloud     /\n                           \\
      \           \\            /              \\\n                           /\\/\\/\\/\\/\\/\\/\\
      \           \\/\\/\\/\\/\\/\\/\\/\\/\n                 Figure 1: PINT Functional
      Architecture\n   The system of PINT servers is represented as a cloud to emphasise\n
      \  that a single PINT request might pass through a series of location\n   servers,
      proxy servers, and redirect servers, before finally reaching\n   the correct
      PINT gateway that can actually process the request by\n   passing it to the
      Telephone Network Cloud.\n   The PINT gateway might have a true telephone network
      interface, or it\n   might be connected via some other protocol or API to an
      \"Executive\n   System\" that is capable of invoking services within the telephone\n
      \  cloud.\n   As an example, within an I.N. (Intelligent Network) system, the
      PINT\n   gateway might appear to realise the Service Control Gateway Function.\n
      \  In an office environment, it might be a server adjunct to the office\n   PBX,
      connected to both the office LAN and the office PBX.\n   The Executive System
      that lies beyond the PINT gateway is outside the\n   scope of PINT.\n"
    title: 3.1. PINT Functional Architecture
  - contents:
    - "3.2. PINT Protocol Architecture\n   This section explains how SIP and SDP work
      in combination to convey\n   the information necessary to invoke telephone network
      sessions.\n   The following list summarises the extension features used in PINT\n
      \  1.0.  Following on from this the features are considered separately\n   for
      SDP and then for SIP:\n   1)  Telephony URLs in SDP Contact Fields\n   2)  Refinement
      of SIP/SDP Telephony URLs\n       *   Inclusion of private dialling plans\n
      \  3)  Specification of Telephone Service Provider (TSP) and/or phone-\n       context
      URL-parameters\n   4)  Data Objects as session media\n   4a) Protocol Transport
      formats to indicate the treatment of the media\n       within the GSTN\n   5)
      \ Implicit (Indirect) media streams and opaque arguments\n   6)  In-line data
      objects using multipart/mime\n   7)  Refinement/Clarification of Opaque arguments
      passed onwards to\n       Executive Systems\n       *   Framework for Presentation
      Restriction Indication\n       *   Framework for Q.763 arguments\n   8)  An
      extension mechanism for SDP to specify strictures and force\n       failure
      when a recipient does NOT support the specified\n       extensions, using \"require\"
      headers.\n   9)  Mandatory support for \"Warning\" headers to give more detailed\n
      \      information on request disposition.\n   10) Mechanism to register interest
      in the disposition of a requested\n       service, and to receive indications
      on that disposition.\n   Both PINT and SIP rely on features of MIME[4]. The
      use of SIP 2.0 is\n   implied by PINT 1.0, and this also implies compliance
      with version\n   1.0 of MIME.\n"
    - contents:
      - "3.2.1. SDP operation in PINT\n   The SDP payload contains a description of
        the particular telephone\n   network session that the requestor wishes to
        occur in the GSTN. This\n   information includes such things as the telephone
        network address\n   (i.e.  the \"telephone number\") of the terminal(s) involved
        in the\n   call, an indication of the media type to be transported (e.g. audio,\n
        \  text, image or application data), and an indication if the\n   information
        is to be transported over the telephone network via\n   voice, fax, or pager
        transport. An indication of the content to be\n   sent to the remote telephone
        terminal (if there is any) is also\n   included.\n   SDP is flexible enough
        to convey these parameters independently. For\n   example, a request to send
        some text via voice transport will be\n   fulfilled by invoking some text-to-speech-over-the-phone
        service, and\n   a request to send text via fax will be fulfilled by invoking
        some\n   text-to-fax service.\n   The following is a list of PINT 1.0 enhancements
        and additions to\n   SDP.\n      a. A new network type \"TN\" and address
        types \"RFC2543\" and \"X-...\"\n         (section 3.4.1)\n      b. New media
        types \"text\", \"image\", and \"application\", new\n         protocol transport
        keywords \"voice\", \"fax\" and \"pager\" and the\n         associated format
        types and attribute tags (section 3.4.2)\n      c. New format specific attributes
        for included content data\n         (section 3.4.2.4)\n      d. New attribute
        tags, used to pass information to the telephone\n         network (section
        3.4.3)\n      e. A new attribute tag \"require\", used by a client to indicate\n
        \        that some attribute is required to be supported in the server\n         (section
        3.4.4)\n"
      title: 3.2.1. SDP operation in PINT
    - contents:
      - "3.2.2. SIP Operation in PINT\n   SIP is used to carry the request for telephone
        service from the PINT\n   client to the PINT gateway, and may include a telephone
        number if\n   needed for the particular service. The following is a complete
        list\n   of PINT enhancements and additions to SIP:\n      f. The multipart
        MIME payloads (section 3.5.1)\n      g. Mandatory support for \"Warning:\"
        headers (section 3.5.2)\n      h. The SUBSCRIBE and NOTIFY, and UNSUBSCRIBE
        requests (section\n         3.5.3)\n      i. Require: headers (section 3.5.4)\n
        \     j. A format for PINT URLS within a PINT request (section 3.5.5)\n      k.
        Telephone Network Parameters within PINT URLs (section 3.5.6)\n   Section
        3.5.8 contains remarks about how BYE requests are used within\n   PINT. This
        is not an extension to baseline SIP; it is included here\n   only for clarification
        of the semantics when used with telephone\n   network sessions.\n"
      title: 3.2.2. SIP Operation in PINT
    title: 3.2. PINT Protocol Architecture
  - contents:
    - "3.3. REQUIRED and OPTIONAL elements for PINT compliance\n   Of these, only
      the TN network type (with its associated RFC2543\n   address type) and the \"require\"
      attribute MUST be supported by PINT\n   1.0 clients and servers. In practice,
      most PINT service requests will\n   use other changes, of which references to
      Data Objects in requests\n   are most likely to appear in PINT requests.\n   Each
      of the other new PINT constructs enables a different function,\n   and a client
      or server that wishes to enable that particular function\n   MUST do so by the
      construct specified in this document. For example,\n   building a PINT client
      and server that provide only the Request-to-\n   Call telephone call service,
      without support for the other Milestone\n   services, is allowed.\n   The \"Require:\"
      SIP header and the \"require\" attribute provide a\n   mechanism that can be
      used by clients and servers to signal their\n   need and/or ability to support
      specific \"new\" PINT protocol elements.\n   It should be noted that many optional
      features of SIP and SDP make\n   sense as specified in the PINT context. One
      example is the SDP\n   a=lang:  attribute, which can be used to describe the
      preferred\n   language of the callee. Another example is the use of the \"t=\"\n
      \  parameter to indicate that the time at which the PINT service is to\n   be
      invoked. This is the normal use of the \"t=\" field. A third example\n   is
      the quality attributes.  Any SIP or SDP option or facility is\n   available
      to PINT clients and servers without change.\n   Conversely, support for Data
      Objects within Internet Conference\n   sessions may be useful, even if the aim
      is not to provide a GSTN\n   service request.  In this case, the extensions
      covering these items\n   may be incorporated into an otherwise \"plain\" SIP/SDP
      invitation.\n   Likewise, support for SDP \"require\" may be useful, as a framework
      for\n   addition of features to a \"traditional\" SIP/SDP infrastructure.\n
      \  Again, these may be convenient to incorporate into SIP/SDP\n   implementations
      that would not be used for PINT service requests.\n   Such additions are beyond
      the scope of this document, however.\n"
    title: 3.3. REQUIRED and OPTIONAL elements for PINT compliance
  - contents:
    - "3.4. PINT Extensions to SDP\n   PINT 1.0 adds to SDP the possibility to describe
      audio, fax, and\n   pager telephone sessions. It is deliberately designed to
      hide the\n   underlying technical details and complexity of the telephone network.\n
      \  The only network type defined for PINT is the generic \"TN\" (Telephone\n
      \  Network).  More precise tags such as \"ISDN\", \"GSM\", are not defined.\n
      \  Similarly, the transport protocols are designated simply as \"fax\",\n   \"voice\",
      and \"pager\"; there are no more specific identifiers for the\n   various telephone
      network voice, fax, or pager protocols. Similarly,\n   the data to be transported
      are identified only by a MIME content\n   type, such as \"text\" data, \"image\"
      data, or some more general\n   \"application\" data. An important example of
      transporting\n   \"application\" data is the milestone service \"Voice Access
      to Web\n   Content\". In this case the data to be transported are pointed to
      by a\n   URI, the data content type is application/URI, and the transport\n
      \  protocol would be \"voice\". Some sort of speech-synthesis facility,\n   speaking
      out to a Phone, will have to be invoked to perform this\n   service.\n   This
      section gives details of the new SDP keywords.\n"
    - contents:
      - "3.4.1. Network Type \"TN\" and Address Type \"RFC2543\"\n   The TN (\"Telephone
        Network\") network type is used to indicate that\n   the terminal is connected
        to a telephone network.\n   The address types allowed for network type TN
        are \"RFC2543\" and\n   private address types, which MUST begin with an \"X-\".\n
        \  Address type RFC2543 is followed by a string conforming to a subset\n   of
        the \"telephone-subscriber\" BNF specified in figure 4  of SIP [1]).\n   Note
        that this BNF is NOT identical to the BNF that defines the\n   \"phone-number\"
        within the \"p=\" field of SDP.\n   Examples:\n       c= TN  RFC2543  +1-201-406-4090\n
        \      c= TN  RFC2543  12014064090\n   A telephone-subscriber string is of
        one of two types:  global-phone-\n   number or local-phone-number.  These
        are distinguished by preceeding\n   a global-phone-number with a \"plus\"
        sign (\"+\"). A global-phone-number\n   is by default to be interpreted as
        an internationally significant\n   E.164 Number Plan Address, as defined by
        [6], whilst a local-phone-\n   number is a number specified in the default
        dialling plan within the\n   context of the recipient PINT Gateway.\n   An
        implementation MAY use private addressing types, which can be\n   useful within
        a local domain. These address types MUST begin with an\n   \"X-\", and SHOULD
        contain a domain name after the X-, e.g. \"X-\n   mytype.mydomain.com\".  An
        example of such a connection line is as\n   follows:\n         c= TN X-mytype.mydomain.com
        \ A*8-HELEN\n   where \"X-mytype.mydomain.com\" identifies this private address
        type,\n   and \"A*8-HELEN\" is the number in this format. Such a format is\n
        \  defined as an \"OtherAddr\" in the ABNF of Appendix A. Note that most\n
        \  dialable telephone numbers are expressable as local-phone-numbers\n   within
        address RFC2543; new address types SHOULD only be used for\n   formats which
        cannot be so written.\n"
      title: 3.4.1. Network Type "TN" and Address Type "RFC2543"
    - contents:
      - "3.4.2. Support for Data Objects within PINT\n   One significant change over
        traditional SIP/SDP Internet Conference\n   sessions with PINT is that a PINT
        service request may refer to a Data\n   Object to be used as source information
        in that request. For example,\n   a PINT service request may specify a document
        to be processed as part\n   of a GSTN service by which a Fax is sent. Similarly,
        a GSTN service\n   may be take a Web page and result in a vocoder processing
        that page\n   and speaking the contents over a telephone.\n   The SDP specification
        does not have explicit support for reference to\n   or carriage of Data Objects
        within requests. In order to use SDP for\n   PINT, there is a need to describe
        such media sessions as \"a telephone\n   call to a certain number during which
        such-and-such an image is sent\n   as a fax\".\n   To support this, two extensions
        to the session description format are\n   specified. These are some new allowed
        values for the Media Field, and\n   a description of the \"fmtp\" parameter
        when used with the Media Field\n   values (within the context of the Contact
        Field Network type \"TN\").\n   An addition is also made to the SIP message
        format to allow the\n   inclusion of data objects as sub-parts within the
        request message\n   itself. The original SDP syntax (from [2]) for media-field
        is given\n   as:\n      media-field =         \"m=\" media space port [\"/\"
        integer]\n                            space proto 1*(space fmt) CRLF\n   When
        used within PINT requests, the definition of the sub-fields is\n   expanded
        slightly. The Media sub-field definition is relaxed to\n   accept all of the
        discrete \"top-level\" media types defined in [4]. In\n   the milestone services
        the discrete type \"video\" is not used, and the\n   extra types \"data\"
        and \"control\" are likewise not needed. The use of\n   these types is not
        precluded, but the behaviour expected of a PINT\n   Gateway receiving a request
        including such a type is not defined\n   here.\n   The Port sub-field has
        no meaning in PINT requests as the destination\n   terminals are specified
        using \"TN\" addressing, so the value of the\n   port sub-field in PINT requests
        is normally set to \"1\". A value of\n   \"0\" may be used as in SDP to indicate
        that the terminal is not\n   receiving media.  This is useful to indicate
        that a telephone\n   terminal has gone \"on hold\" temporarily.  Likewise,
        the optional\n   integer sub-field is not used in PINT.\n   As mentioned in
        [2], the Transport Protocol sub-field is specific to\n   the associated Address
        Type. In the case that the Address Type in the\n   preceeding Contact field
        is one of those defined for use with the\n   Network Type \"TN\", the following
        values are defined for the Transport\n   Protocol sub-field:\n   \"voice\",
        \"fax\", and \"pager\".\n   The interpretation of this sub-field within PINT
        requests is the\n   treatment or disposition of the resulting GSTN service.
        Thus, for\n   transport protocol \"voice\", the intent is that the service
        will\n   result in a GSTN voice call, whilst for protocol \"fax\" the result\n
        \  will be a GSTN fax transmission, and protocol \"pager\" will result in\n
        \  a pager message being sent.\n   Note that this sub-field does not necessarily
        dictate the media type\n   and subtype of any source data; for example, one
        of the milestone\n   services calls for a textual source to be vocoded and
        spoken in a\n   resulting telephone service call. The transport protocol value
        in\n   this case would be \"voice\", whilst the media type would be \"text\".\n
        \  The Fmt sub-field is described in [2] as being transport protocol-\n   specific.
        When used within PINT requests having one of the above\n   protocol values,
        this sub-field consists of a list of one or more\n   values, each of which
        is a defined MIME sub-type of the associated\n   Media sub-field value. The
        special value \"-\" is allowed, meaning that\n   there is no MIME sub-type.
        This sub-field retains (from [2]) its\n   meaning that the list will contain
        a set of alternative sub-types,\n   with the first being the preferred value.\n
        \  For experimental purposes and by mutual consent of the sender and\n   recipient,
        a sub-type value may be specified as an <X-token>, i.e. a\n   character string
        starting with \"X-\". The use of such values is\n   discouraged, and if such
        a value is expected to find common use then\n   it SHOULD be registered with
        IANA using the standard content type\n   registration process (see Appendix
        C).\n   When the Fmt parameter is the single character \"-\" ( a dash ), this\n
        \  is interpreted as meaning that a unspecified or default sub-type can\n
        \  be used for this service. Thus, the media field value \"m=audio 1\n   voice
        -<CRLF>\" is taken to mean that a voice call is requested, using\n   whatever
        audio sub type is deemed appropriate by the Executive\n   System. PINT service
        is a special case, in that the request comes\n   from the IP network but the
        service call is provided within the GSTN.\n   Thus the service request will
        not normally be able to define the\n   particular codec used for the resulting
        GSTN service call. If such an\n   intent IS required, then the quality attribute
        may be used (see\n   \"Suggested Attributes\" section of [2]).\n"
      - contents:
        - "3.4.2.1. Use of fmtp attributes in PINT requests\n   For each element of
          the Fmt sub-field, there MUST be a following fmtp\n   attribute. When used
          within PINT requests, the fmtp attribute has a\n   general structure as
          defined here:\n       \"a=fmtp:\" <subtype> <space> resolution\n                          *(<space>
          resolution)\n                          (<space> \";\" 1(<attribute>)\n                                       *(<space>
          <attribute>))\n   where:\n       <resolution> := (<uri-ref> | <opaque-ref>
          | <sub-part-ref>)\n   A fmtp attribute describes the sources used with a
          given Fmt entry in\n   the Media field. The entries in a Fmt sub-field are
          alternatives\n   (with the preferred one first in the list). Each entry
          will have a\n   matching fmtp attribute. The list of resolutions in a fmtp
          attribute\n   describes the set of sources that resolve the matching Fmt
          choice;\n   all elements of this set will be used.\n   It should be noted
          that, for use in PINT services, the elements in\n   such a set will be sent
          as a sequence; it is unlikely that trying to\n   send them in parallel would
          be successful.\n   A fmtp attribute can contain a mixture of different kinds
          of element.\n   Thus an attribute might contain a sub-part-ref indicating
          included\n   data held in a sub-part of the current message, followed by
          an\n   opaque-ref referring to some content on the GSTN, followed by a uri-\n
          \  ref pointing to some data held externally on the IP network.\n   To indicate
          which form each resolution element takes, each of them\n   starts with its
          own literal tag. The detailed syntax of each form is\n   described in the
          following sub-sections.\n"
        title: 3.4.2.1. Use of fmtp attributes in PINT requests
      - contents:
        - "3.4.2.2. Support for Remote Data Object References in PINT\n   Where data
          objects stored elsewhere on the IP Network are to be used\n   as sources
          for processing within a PINT service, they may be referred\n   to using
          the uri-ref form. This is simply a Uniform Resource\n   Identifier (URI),
          as described in [9].\n   Note that the reference SHOULD be an absolute URI,
          as there may not\n   be enough contextual information for the recipient
          server to resolve\n   a relative reference; any use of relative references
          requires some\n   private agreement between the sender and recipient of
          the message,\n   and SHOULD be avoided unless the sender can be sure that
          the\n   recipient is the one intended and the reference is unambiguous in\n
          \  context.\n   This also holds for partial URIs (such\n   as\"uri:http://aNode/index.htm\")
          as these will need to be resolved in\n   the context of the eventual recipient
          of the message.\n   The general syntax of a reference to an Internet-based
          external data\n   object in a fmtp line within a PINT session description
          is:\n       <uri-ref> := (\"uri:\" URI-reference)\n   where URI-reference
          is as defined in Appendix A of [9]\n   For example:\n         c= TN RFC2543
          +1-201-406-4090\n         m= text 1  fax plain\n         a=fmtp:plain  uri:ftp://ftp.isi.edu/in-notes/rfc2468.txt\n
          \  or:\n         c= TN RFC2543 +1-201-406-4090\n         m= text 1  fax
          plain\n         a=fmtp:plain\n   uri:http://www.ietf.org/meetings/glance_minneapolis.txt\n
          \  means get this data object from the Internet and use it as a source\n
          \  for the requested GSTN Fax service.\n"
        title: 3.4.2.2. Support for Remote Data Object References in PINT
      - contents:
        - "3.4.2.3. Support for GSTN-based Data Objects in PINT\n   PINT services
          may refer to data that are held not on the IP Network\n   but instead within
          the GSTN. The way in which these items are\n   indicated need have no meaning
          within the context of the Requestor or\n   the PINT Gateway; the reference
          is merely some data that may be used\n   by the Executive System to indicate
          the content intended as part of\n   the request. These data form an opaque
          reference, in that they are\n   sent \"untouched\" through the PINT infrastructure.\n
          \  A reference to some data object held on the GSTN has the general\n   definition:\n
          \      <opaque-ref> := (\"opr:\" *uric)\n   where uric is as defined in
          Appendix A of [9].\n   For example:\n         c= TN RFC2543 +1-201-406-4090\n
          \        m= text 1  fax plain\n         a=fmtp:plain  opr:APPL.123.456\n
          \  means send the data that is indexed ON THE GSTN by the reference\n   value
          \"APPL.123.456\" to the fax machine on +1-201-406-4090. The\n   Executive
          System may also take the Telephone URL held in the To:\n   field of the
          enclosing SIP message into account when deciding the\n   context to be used
          for the data object dereference.\n   Of course, an opaque reference may
          also be used for other purposes;\n   it could, for example, be needed to
          authorise access to a document\n   held on the GSTN rather than being required
          merely to disambiguate\n   the data object. The purpose to which an opaque
          reference is put,\n   however, is out of scope for this document. It is
          merely an indicator\n   carried within a PINT Request.\n   An opaque reference
          may have no value in the case where the value to\n   be used is implicit
          in the rest of the request. For example, suppose\n   some company wishes
          to use PINT to implement a \"fax-back service\". In\n   their current implementation,
          the image(s) to be faxed are entirely\n   defined by the telephone number
          dialled. Within the PINT request,\n   this telephone number would appear
          within the \"To:\" field of the PINT\n   request, and so there is no need
          for an opaque reference value.\n   If there are several resolutions for
          a PINT Service Request, and one\n   of these is an opaque reference with
          no value, then that opaque\n   reference MUST be included in the attribute
          line, but with an empty\n   value field.\n   For example:\n         c= TN
          RFC2543 +1-201-406-4090\n         m= text 1  fax plain\n         a=fmtp:plain
          \ uri:http://www.sun.com/index.html opr:\n   might be used to precede some
          data to be faxed with a covering note.\n   In the special case where an
          opaque reference is the sole resolution\n   of a PINT Service Request, AND
          that reference needs no value, there\n   is no need for a Fmt list at all;
          the intent of the service is\n   unambiguous without any further resolution.\n
          \  For example:\n         c= TN RFC2543 +1-201-406-4090\n         m= text
          1  fax -\n   means that there is an implied content stored on the GSTN,
          and that\n   this is uniquely identified by the combination of SIP To-URI
          and the\n   Contact field of the session description.\n"
        title: 3.4.2.3. Support for GSTN-based Data Objects in PINT
      - contents:
        - "3.4.2.4. Session Description support for included Data Objects\n   As an
          alternative to pointing to the data via a URI or an opaque\n   reference
          to a data item held on the GSTN, it is possible to include\n   the content
          data within the SIP request itself. This is done by using\n   multipart
          MIME for the SIP payload. The first MIME part contains the\n   SDP description
          of the telephone network session to be executed. The\n   other MIME parts
          contain the content data to be transported.\n   Format specific attribute
          lines within the session description are\n   used to indicate which other
          MIME part within the request contains\n   the content data. Instead of a
          URI or opaque reference, the format-\n   specific attribute indicates the
          Content-ID of the MIME part of the\n   request that contains the actual
          data, and is defined as:\n       <sub-part-ref> := (\"spr:\" Content-ID)\n
          \  where Content-ID is as defined in Appendix A of [3] and in [10]).\n   For
          example:\n         c= TN RFC2543 +1-201-406-4090\n         m= text 1  fax
          plain\n         a=fmtp:plain  spr:<Content-ID>\n   The <Content-ID> parameter
          is the Content-ID of one of the MIME parts\n   inside the message, and this
          fragment means that the requesting user\n   would like the data object held
          in the sub-part of this message\n   labelled <Content-ID> to be faxed to
          the machine at phone number +1-\n   201-406-4090.\n   See also section 3.5.1
          for a discussion on the support needed in the\n   enclosing SIP request
          for included data objects.\n"
        title: 3.4.2.4. Session Description support for included Data Objects
      title: 3.4.2. Support for Data Objects within PINT
    - contents:
      - "3.4.3. Attribute Tags to pass information into the Telephone Network\n   It
        may be desired to include within the PINT request service\n   parameters that
        can be understood only by some entity in the\n   \"Telephone Network Cloud\".
        SDP attribute parameters are used for this\n   purpose. They MAY appear within
        a particular media description or\n   outside of a media description.\n   These
        attributes may also appear as parameters within PINT URLS (see\n   section
        3.5.6) as part of a SIP request.\n   This is necessary so that telephone terminals
        that require the\n   attributes to be defined can appear within the To: line
        of a PINT\n   request as well as within PINT session descriptions.\n   The
        purpose of these attributes is to allow the client to specify\n   extra context
        within which a particular telephone number is to be\n   interpreted.  There
        are many reasons why extra context might be\n   necessary to interpret a given
        telephone number:\n      a. The telephone number might be reachable in many
        different ways\n         (such as via competing telephone service providers),
        and the\n         PINT client wishes to indicate its selection of service\n
        \        provider.\n      b. The telephone number might be reachable only
        from a limited\n         number of networks (such as an '800' freephone number).\n
        \     c. The telephone number might be reachable only within a single\n         telephone
        network (such as the '152' customer service number of\n         BT). Similarly,
        the number might be an internal corporate\n         extension reachable only
        within the PBX.\n   However, as noted above, it is not usually necessary to
        use SDP\n   attributes to specify the phone context. URLs such as\n   152@pint.bt.co.il
        within the To: and From: headers and/or Request-\n   URI, normally offer sufficient
        context to resolve telephone numbers.\n   If the client wishes the request
        to fail if the attributes are not\n   supported, these attributes SHOULD be
        used in conjunction with the\n   \"require\" attribute (section 3.4.4) and
        the\n   \"Require:org.ietf.sdp.require\" header (section 3.5.4).\n   It is
        not possible to standardise every possible internal telephone\n   network
        parameter. PINT 1.0 attributes have been chosen for\n   specification because
        they are common enough that many different PINT\n   systems will want to use
        them, and therefore interoperability will be\n   increased by having a single
        specification.\n   Proprietary attribute \"a=\" lines, that by definition
        are not\n   interoperable, may be nonetheless useful when it is necessary
        to\n   transport some proprietary internal telephone network variables over\n
        \  the IP network, for example to identify the order in which service\n   call
        legs are to be be made. These private attributes SHOULD BE,\n   however, subject
        to the same IANA registration procedures mentioned\n   in the SDP specification[2]
        (see also this Appendix C).\n"
      - contents:
        - "3.4.3.1. The phone-context attribute\n   An attribute is specified to enable
          \"remote local dialling\". This is\n   the service that allows a PINT client
          to reach a number from far\n   outside the area or network that can usually
          reach the number. It is\n   useful when the sending or receiving address
          is only dialable within\n   some local context, which may be remote to the
          origin of the PINT\n   client.\n   For example, if Alice wanted to report
          a problem with her telephone,\n   she might then dial a \"network wide\"
          customer care number; within the\n   British Telecom network in the U.K.,
          this is \"152\". Note that in this\n   case she doesn't dial any trunk prefix
          - this is the whole dialable\n   number. If dialled from another operator's
          network, it will not\n   connect to British Telecom's Engineering Enquiries
          service; and\n   dialling \"+44 152\" will not normally succeed. Such numbers
          are called\n   Network-Specific Service Numbers.\n   Within the telephone
          network, the \"local context\" is provided by the\n   physical connection
          between the subscriber's terminal and the central\n   office. An analogous
          association between the PINT client and the PINT\n   server that first receives
          the request may not exist, which is why it\n   may be necessary to supply
          this missing \"telephone network context\".\n   This attribute is defined
          as follows:\n   a=phone-context: <phone-context-ident>\n   phone-context-ident
          \    =  network-prefix / private-prefix\n   network-prefix          =  intl-network-prefix
          / local-network-prefix\n   intl-network-prefix     =  \"+\" 1*DIGIT\n   local-network-prefix
          \   =  1*DIGIT\n   excldigandplus          =  (0x21-0x2d,0x2f,0x40-0x7d))\n
          \  private-prefix          =  1*excldigandplus 0*uric\n   An intl-network-prefix
          and local-network-prefix MUST be a bona fide\n   network prefix, and a network-prefix
          that is an intl-network-prefix\n   MUST begin with an E.164 service code
          (\"country code\").\n   It is possible to register new private-prefixes
          with IANA so as to\n   avoid collisions. Prefixes that are not so registered
          MUST begin with\n   an \"X-\" to indicate their private, non-standard nature
          (see Appendix\n   C).\n   Example 1:\n         c= TN   RFC2543  1-800-765-4321\n
          \        a=phone-context:+972\n   This describes an terminal whose address
          in Israel (E.164 country\n   code 972) is 1-800-765-4321.\n   Example 2:\n
          \        c= TN   RFC2543  1-800-765-4321\n         a=phone-context:+1\n
          \  This describes an terminal whose address in North America (E.164\n   country
          code 1) is 1-800-765-4321.\n   The two telephone terminals described by
          examples 1 and 2 are\n   different; in fact they are located in different
          countries.\n   Example 3:\n         c=TN RFC2543  123\n         a=phone-context:+97252\n
          \  This describes a terminal whose address when dialled from within the\n
          \  network identified by +97252 is the string \"123\". It so happens that\n
          \  +97252 defines one of the Israeli cell phone providers, and 123\n   reaches
          customer service when dialled within that network.\n   It may well be useful
          or necessary to use the SDP \"require\" parameter\n   in conjunction with
          the phone-context attribute.\n   Example 4:\n         c= TN  RFC2543  321\n
          \        a=phone-context:X-acme.com-23\n   This might describe the telephone
          terminal that is at extension 321\n   of PBX number 23 within the acme.com
          private PBX network. It is\n   expected that such a description would be
          understandable by the\n   acme.com PINT server that receives the request.\n
          \  Note that if the PINT server receiving the request is inside the\n   acme.com
          network, the same terminal might be addressable as follows:\n         c=
          TN  RFC2543 7-23-321\n   (assuming that \"7\" is dialled in order to reach
          the private PBX\n   network from within acme.com)\n"
        title: 3.4.3.1. The phone-context attribute
      - contents:
        - "3.4.3.2. Presentation Restriction attribute\n   Although it has no affect
          on the transport of the service request\n   through the IP Network, there
          may be a requirement to allow\n   originators of a PINT service request
          to indicate whether or not they\n   wish the \"B party\" in the resulting
          service call to be presented with\n   the \"A party's\" calling telephone
          number. It is a legal requirement\n   in some jurisdictions that a caller
          be able to select whether or not\n   their correspondent can find out the
          calling telephone number (using\n   Automatic Number Indication or Caller
          Display or Calling Line\n   Identity Presentation equipment). Thus an attribute
          may be needed to\n   indicate the originator's preference.\n   Whether or
          not the default behaviour of the Executive System is to\n   present or not
          present a party's telephone number to the\n   correspondent GSTN terminal
          is not specified, and it is not mandatory\n   in all territories for a PINT
          Gateway or Executive System to act on\n   this attribute. It is, however,
          defined here for use where there are\n   regulatory restrictions on GSTN
          operation, and in that case the\n   Executive System can use it to honour
          the originator's request.\n   The attribute is specified as follows:\n       a=clir:<\"true\"
          | \"false\">\n   This boolean value is needed within the attribute as it
          may be that\n   the GSTN address is, by default, set to NOT present its
          identity to\n   correspondents, and the originator wants to do so for this
          particular\n   call. It is in keeping with the aim of this attribute to
          allow the\n   originator to specify what treatment they want for the requested\n
          \  service call.\n   The expected interpretation of this attribute is that,
          if it is\n   present and the value is \"false\" then the Calling Line Identity
          CAN\n   be presented to the correspondent terminal, whilst if it is \"true\"\n
          \  then if possible the Executive System is requested to NOT present the\n
          \  Calling Line Identity.\n"
        title: 3.4.3.2. Presentation Restriction attribute
      - contents:
        - "3.4.3.3. ITU-T CalledPartyAddress attributes parameters\n   These attributes
          correspond to fields that appear within the ITU-T\n   Q.763 \"CalledPartyAddress\"
          field (see [8] ,section 3.9). PINT clients\n   use these attributes in order
          to specify further parameters relating\n   to Terminal Addresses, in the
          case when the address indicates a\n   \"local-phone-number\". In the case
          that the PINT request contains a\n   reference to a GSTN terminal, the parameters
          may be required to\n   correctly identify that remote terminal.\n   The
          general form of this attribute is:  \"a=Q763-<token>((\":\" <value>)\n   |\"\")\".
          \ Three of the possible elements and their use in SDP\n   attributes are
          described here. Where other Q763 elements are to be\n   used, then these
          should be the subject of further specification to\n   define the syntax
          of the attribute mapping. It is recommended that\n   any such specification
          maintains the value sets shown in Q.763.\n   The defined attributes are:\n
          \  a=Q763-nature:  - indicates the \"nature of address indicator\".\n                       The
          value MAY be any number between 0 and 127.\n                       The following
          values are specified:\n                   \"1\" a subscriber number\n                   \"2\"
          unknown\n                   \"3\" a nationally significant number\n                   \"4\"
          an internationally significant number\n   The values have been chosen to
          coincide with the values in Q.763.\n   Note that other values are possible,
          according to national rules or\n   future expansion of Q.763.\n   a=Q763-plan:
          \   - indicates the numbering plan to which the address\n                       belongs.
          The value MAY be any number between 0\n                       and 7. The
          following values are specified:\n                   \"1\" Telephone numbering
          plan (ITU-T E.164)\n                   \"3\" Data numbering plan (ITU-T
          X.121)\n                   \"4\" Telex numbering plan (ITU-T F.69)\n   The
          values have been chosen to coincide with the values in Q.763.\n   Other
          values are allowed, according to national rules or future\n   expansion
          of Q.763.\n   a=Q763-INN      - indicates if routing to the Internal Network
          Number\n                       is allowed. The value MUST be ONE of:\n                   \"0\"
          routing to internal network number allowed\n                   \"1\" routing
          to internal network number not\n                                 allowed\n
          \  The values have been chosen to coincide with the values in Q.763.\n   Note
          that it is possible to use a local-phone-number and indicate via\n   attributes
          that the number is in fact an internationally significant\n   E.164 number.
          Normally this SHOULD NOT be done; an internationally\n   significant E.164
          number is indicated by using a \"global-phone-\n   number\" for the address
          string.\n"
        title: 3.4.3.3. ITU-T CalledPartyAddress attributes parameters
      title: 3.4.3. Attribute Tags to pass information into the Telephone Network
    - contents:
      - "3.4.4. The \"require\" attribute\n   According to the SDP specification,
        a PINT server is allowed simply\n   to ignore attribute parameters that it
        does not understand. In order\n   to force a server to decline a request if
        it does not understand one\n   of the PINT attributes, a client SHOULD use
        the \"require\" attribute,\n   specified as follows:\n         a=require:<attribute-list>\n
        \  where the attribute-list is a comma-separated list of attributes that\n
        \  appear elsewhere in the session description.\n   In order to process the
        request successfully the PINT server must\n   BOTH understand the attribute
        AND ALSO fulfill the request implied by\n   the presence of the attribute,
        for each attribute appearing within\n   the attribute-list of the require
        attribute.\n   If the server does not recognise the attribute listed, the
        PINT\n   server MUST return an error status code (such as 420 (Bad Extension)\n
        \  or 400 (Bad Request)), and SHOULD return suitable Warning: lines\n   explaining
        the problem or an Unsupported: header containing the\n   attribute it does
        not understand. If the server recognizes the\n   attribute listed, but cannot
        fulfill the request implied by the\n   presence of the attribute, the request
        MUST be rejected with a status\n   code of (606 Not Acceptable), along with
        a suitable Unsupported:\n   header or Warning: line.\n   The \"require\" attribute
        may appear anywhere in the session\n   description, and any number of times,
        but it MUST appear before the\n   use of the attribute marked as required.\n
        \  Since the \"require\" attribute is itself an attribute, the SIP\n   specification
        allows a server that does not understand the require\n   attribute to ignore
        it. In order to ensure that the PINT server will\n   comply with the \"require\"
        attribute, a PINT client SHOULD include a\n   Require: header with the tag
        \"org.ietf.sdp.require\" (section 3.5.4)\n   Note that the majority of the
        PINT extensions are \"tagged\" and these\n   tags can be included in Require
        strictures. The exception is the use\n   of phone numbers in SDP parts. However,
        these are defined as a new\n   network and address type, so that a receiving
        SIP/SDP server should\n   be able to detect whether or not it supports these
        forms. The default\n   behaviour for any SDP recipient is that it will fail
        a PINT request\n   if it does not recognise or support the TN and RFC2543
        or X-token\n   network and address types, as without the contents being recognised\n
        \  no media session could be created. Thus a separate stricture is not\n   required
        in this case.\n"
      title: 3.4.4. The "require" attribute
    title: 3.4. PINT Extensions to SDP
  - contents:
    - "3.5. PINT Extensions to SIP 2.0\n   PINT requests are SIP requests; Many of
      the specifications within\n   this document merely explain how to use existing
      SIP facilities for\n   the purposes of PINT.\n"
    - contents:
      - "3.5.1. Multi-part MIME (sending data along with SIP request)\n   A PINT request
        can contain a payload which is multipart MIME. In this\n   case the first
        part MUST contain an SDP session description that\n   includes at least one
        of the format specific attribute tags for\n   \"included content data\" specified
        above in section 3.4.3. Subsequent\n   parts contain content data that may
        be transferred to the requested\n   Telephone Call Service. As discussed earlier,
        within a single PINT\n   request, some of the data MAY be pointed to by a
        URI within the\n   request, and some of the data MAY be included within the
        request.\n   Where included data is carried within a PINT service request,
        the\n   Content Type entity header of the enclosing SIP message MUST indicate\n
        \  this. To do so, the media type value within this entity header MUST\n   be
        set to a value of \"multipart\". There is a content sub-type that is\n   intended
        for situations like this in which sub-parts are to be\n   handled together.
        This is the multipart/related type (defined in\n   [19]), and it's use is
        recommended.\n   The enclosed body parts SHOULD include the part-specific
        Content Type\n   headers as appropriate (\"application/sdp\" for the first
        body part\n   holding the session description, with an appropriate content
        type for\n   each of the subsequent, \"included data object\" parts). This
        matches\n   the standard syntax of MIME multipart messages as defined in [4].\n
        \  For example, in a multipart message where the string\n   \"------next-------\"
        is the boundary, the first two parts might be as\n   follows:\n         ------next-------\n
        \        Content-Type: application/sdp\n         ....\n         c= TN RFC2543
        +1-201-406-4090\n         m= text 1 pager plain\n         a=fmtp:plain spr:17@mymessage.acme.com\n
        \        ----------next-------\n         Content-Type: text/plain\n         Content-ID:
        \ 17@mymessage.acme.com\n         This is the text that is to be paged to
        +1-201-406-4090\n         ----------next-----------\n   The ability to indicate
        different alternatives for the content to be\n   transported is useful, even
        when the alternatives are included within\n   the request. For example, a
        request to send a short message to a\n   pager might include the message in
        Unicode [5] and an alternative\n   version of the same content in text/plain,
        should the PINT server or\n   telephone network not be able to process the
        unicode.\n   PINT clients should be extremely careful when sending included
        data\n   within a PINT request. Such requests SHOULD be sent via TCP, to avoid\n
        \  fragmentation and to transmit the data reliably. It is possible that\n
        \  the PINT server is a proxy server that will replicate and fork the\n   request,
        which could be disastrous if the request contains a large\n   amount of application
        data. PINT proxy servers should be careful not\n   to create many copies of
        a request with large amounts of data in it.\n   If the client does not know
        the actual location of the PINT gateway,\n   and is using the SIP location
        services to find it, and the included\n   data makes the PINT request likely
        to be transported in several IP\n   datagrams, it is RECOMMENDED that the
        initial PINT request not\n   include the data object but instead hold a reference
        to it.\n"
      title: 3.5.1. Multi-part MIME (sending data along with SIP request)
    - contents:
      - "3.5.2. Warning header\n   A PINT server MUST support the SIP \"Warning:\"
        header so that it can\n   signal lack of support for individual PINT features.
        As an example,\n   suppose the PINT request is to send a jpeg picture to a
        fax machine,\n   but the server cannot retrieve and/or translate jpeg pictures
        from\n   the Internet into fax transmissions.\n   In such a case the server
        fails the request and includes a Warning\n   such as the following:\n         Warning:
        \ 305  pint.acme.com  Incompatible media format:  jpeg\n   SIP servers that
        do not understand the PINT extensions at all are\n   strongly encouraged to
        implement Warning: headers to indicate that\n   PINT extensions are not understood.\n
        \  Also, Warning: headers may be included within NOTIFY requests if it\n   is
        necessary to notify the client about some condition concerning the\n   invocation
        of the PINT service (see next).\n"
      title: 3.5.2. Warning header
    - contents:
      - "3.5.3. Mechanism to register interest in the disposition of a PINT\n       service,
        and to receive indications on that disposition\n   It can be very useful to
        find out whether or not a requested service\n   has completed, and if so whether
        or not it was successful. This is\n   especially true for PINT service, where
        the person requesting the\n   service is not (necessarily) a party to it,
        and so may not have an\n   easy way of finding out the disposition of that
        service. Equally, it\n   may be useful to indicate when the service has changed
        state, for\n   example when the service call has started.\n   Arranging a
        flexible system to provide extensive monitoring and\n   control during a service
        is non-trivial (see section 6.4 for some\n   issues); PINT 1.0 uses a simple
        scheme that should nevertheless\n   provide useful information. It is possible
        to expand the scheme in a\n   \"backwards compatible\" manner, so if required
        it can be enhanced at a\n   later date.\n   The PINT 1.0 status registration
        and indication scheme uses three new\n   methods; SUBSCRIBE, UNSUBSCRIBE,
        and NOTIFY. These are used to allow\n   a PINT client to register an interest
        in (or \"subscribe\" to) the\n   status of a service request, to indicate
        that a prior interest has\n   lapsed (i.e \"unsubscribe\" from the status),
        and for the server to\n   return service indications. The state machine of\n
        \  SUBSCRIBE/UNSUBSCRIBE is identical to that of INVITE/BYE; just as\n   INVITE
        signals the beginning and BYE signals the end of participation\n   in a media
        session, SUBSCRIBE signals the beginning and UNSUBSCRIBE\n   signals the end
        of participation in a monitoring session. During the\n   monitoring session,
        NOTIFY messages are sent to inform the subscriber\n   of a change in session
        state or disposition.\n"
      - contents:
        - "3.5.3.1. Opening a monitoring session with a SUBSCRIBE request\n   When
          a SUBSCRIBE request is sent to a PINT Server, it indicates that\n   a user
          wishes to receive information about the status of a service\n   session.
          The request identifies the session of interest by including\n   the original
          session description along with the request, using the\n   SDP global-session-id
          that forms part of the origin-field to identify\n   the service session
          uniquely.\n   The SUBSCRIBE request (like any other SIP request about an
          ongoing\n   session) is sent to the same server as was sent the original
          INVITE,\n   or to a server which was specified in the Contact: field within
          a\n   subsequent response (this might well be the PINT gateway for the\n
          \  session).\n   Whilst there are situations in which re-use of the Call-ID
          used in\n   the original INVITE that initiated the session of interest is\n
          \  possible, there are other situations in which it is not. In detail,\n
          \  where the subscription is being made by the user who initiated the\n
          \  original service request, the Call-ID may be used as it will be known\n
          \  to the receiver to refer to a previously established session.\n   However,
          when the request comes from a user other than the original\n   requesting
          user, the SUBSCRIBE request constitutes a new SIP call\n   leg, so the Call-ID
          SHOULD NOT be used; the only common identifier is\n   the origin-field of
          the session description enclosed within the\n   original service request,
          and so this MUST be used.\n   Rather than have two different methods of
          identifying the \"session of\n   interest\" the choice is to use the origin-field
          of the SDP sub-part\n   included both in the original INVITE and in this
          SUBSCRIBE request.\n   Note that the request MUST NOT include any sub-parts
          other than the\n   session description, even if these others were present
          in the\n   original INVITE request. A server MUST ignore whatever sub-parts
          are\n   included within a SUBSCRIBE request with the sole exception of the\n
          \  enclosed session description.\n   The request MAY contain a \"Contact:\"
          header, specifying the PINT User\n   Agent Server to which such information
          should be sent.\n   In addition, it SHOULD contain an Expires: header, which
          indicates\n   for how long the PINT Requestor wishes to receive notification
          of the\n   session status. We refer to the period of time before the expiration\n
          \  of the SUBSCRIBE request as the \"subscription period\". See section\n
          \  5.1.4.  for security considerations, particularly privacy\n   implications.\n
          \  A value of 0 within the Expires: header indicates a desire to receive\n
          \  one single immediate response (i.e. the request expires immediately).\n
          \  It is possible for a sequence of monitoring sessions to be opened,\n
          \  exist, and complete, all relating to the same service session.\n   A
          successful response to the SUBSCRIBE request includes the session\n   description,
          according to the Gateway. Normally this will be\n   identical to the last
          cached response that the Gateway returned to\n   any request concerning
          the same SDP global session id (see [2],\n   section 6, o= field). The t=
          line may be altered to indicate the\n   actual start or stop time, however.
          The Gateway might add an i= line\n   to the session description to indicate
          such information as how many\n   fax pages were sent. The Gateway SHOULD
          include an Expires: header\n   indicating how long it is willing to maintain
          the monitoring session.\n   If this is unacceptable to the PINT Requestor,
          then it can close the\n   session by sending an immediate UNSUBSCRIBE message
          (see 3.5.3.3).\n   In principle, a user might send a SUBSCRIBE request after
          the\n   telephone network service has completed. This allows, for example,\n
          \  checking up \"the morning after\" to see if the fax was successfully\n
          \  transmitted.  However, a PINT gateway is only required to keep state\n
          \  about a call for as long as it indicated previously in an Expires:\n
          \  header sent within the response to the original INVITE message that\n
          \  triggered the service session, within the response to the SUBSCRIBE\n
          \  message, within the response to any UNSUBSCRIBE message, or within\n
          \  its own UNSUBSCRIBE message (but see section 3.5.8, point 3).\n   If
          the Server no longer has a record of the session to which a\n   Requestor
          has SUBSCRIBEd, it returns \"606 Not Acceptable\", along with\n   the appropriate
          Warning: 307 header indicating that the SDP session\n   ID is no longer
          valid. This means that a requesting Client that knows\n   that it will want
          information about the status of a session after the\n   session terminates
          SHOULD send a SUBSCRIBE request before the session\n   terminates.\n"
        title: 3.5.3.1. Opening a monitoring session with a SUBSCRIBE request
      - contents:
        - "3.5.3.2. Sending Status Indications with a NOTIFY request\n   During the
          subscription period, the Gateway may, from time to time,\n   send a spontaneous
          NOTIFY request to the entity indicated in the\n   Contact:  header of the
          \"opening\" SUBSCRIBE request. Normally this\n   will happen as a result
          of any change in the status of the service\n   session for which the Requestor
          has subscribed.\n   The receiving user agent server MUST acknowledge this
          by returning a\n   final response (normally a \"200 OK\"). In this version
          of the PINT\n   extensions, the Gateway is not required to support redirects
          (3xx\n   codes), and so may treat them as a failure.\n   Thus, if the response
          code class is above 2xx then this may be\n   treated by the Gateway as a
          failure of the monitoring session, and in\n   that situation it will immediately
          attempt to close the session (see\n   next).\n   The NOTIFY request contains
          the modified session description. For\n   example, the Gateway may be able
          to indicate a more accurate start or\n   stop time.\n   The Gateway may
          include a Warning: header to describe some problem\n   with the invocation
          of the service, and may indicate within an i=\n   line some information
          about the telephone network session itself.\n   Example:\n         NOTIFY
          \ sip:petrack@pager.com SIP/2.0\n         To: sip:petrack@pager.com\n         From:
          sip:R2F.pint.com@service.com\n         Call-ID: 19971205T234505.56.78@pager.com\n
          \        CSeq: 4711 SUBSCRIBE\n         Warning: xxx  fax aborted, will
          try for the next hour.\n         Content-Type:application/sdp\n         c=...\n
          \        i=3 pages of 5 sent\n         t=...\n"
        title: 3.5.3.2. Sending Status Indications with a NOTIFY request
      - contents:
        - "3.5.3.3. Closing a monitoring session with an UNSUBSCRIBE request\n   At
          some point, either the Client's representative User Agent Server\n   or
          the Gateway may decide to terminate the monitoring session. This\n   is
          achieved by sending an UNSUBSCRIBE request to the correspondent\n   server.
          \ Such a request indicates that the sender intends to close\n   the monitoring
          session immediately, and, on receipt of the final\n   response from the
          receiving server, the session is deemed over.\n   Note that unlike the SUBSCRIBE
          request, which is never sent by a PINT\n   gateway, an UNSUBSCRIBE request
          can be sent by a PINT gateway to the\n   User Agent Server to indicate that
          the monitoring session is closed.\n   (This is analogous to the fact that
          a gateway never sends an INVITE,\n   although it can send a BYE to indicate
          that a telephone call has\n   ended.)\n   If the Gateway initiates closure
          of the monitoring session by sending\n   an UNSUBSCRIBE message, it SHOULD
          include an \"Expires:\" header\n   showing for how much longer after this
          monitoring session is closed\n   it is willing to store information on the
          service session. This acts\n   as a minimum time within which the Client
          can send a new SUBSCRIBE\n   message to open another monitoring session;
          after the time indicated\n   in the Expires: header the Gateway is free
          to dispose of any record\n   of the service session, so that subsequent
          SUBSCRIBE requests can be\n   rejected with a \"606\" response.\n   If the
          subscription period specified by the Client has expired, then\n   the Gateway
          may send an immediate UNSUBSCRIBE request to the Client's\n   representative
          User Agent Server. This ensures that the monitoring\n   session always completes
          with a UNSUBSCRIBE/response exchange, and\n   that the representative User
          Agent Server can avoid maintaining state\n   in certain circumstances.\n"
        title: 3.5.3.3. Closing a monitoring session with an UNSUBSCRIBE request
      - contents:
        - "3.5.3.4. Timing of SUBSCRIBE requests\n   As it relies on the Gateway having
          a copy of the INVITEd session\n   description, the SUBSCRIBE message is
          limited in when it can be\n   issued.  The Gateway must have received the
          service request to which\n   this monitoring session is to be associated,
          which from the Client's\n   perspective happens as soon as the Gateway has
          sent a 1xx response\n   back to it.\n   However, once this has been done,
          there is no reason why the Client\n   should not send a monitoring request.
          It does not have to wait for\n   the final response from the Gateway, and
          it can certainly send the\n   SUBSCRIBE request before sending the ACK for
          the Service request\n   final response.  Beyond this point, the Client is
          free to send a\n   SUBSCRIBE request when it decides, unless the Gateway's
          final\n   response to the initial service request indicated a short Expires:\n
          \  time.\n   However, there are good reasons (see 6.4) why it may be appropriate\n
          \  to start a monitoring session immediately before the service is\n   confirmed
          by the PINT Client sending an ACK. At this point the\n   Gateway will have
          decided whether or not it can handle the service\n   request, but will not
          have passed the request on to the Executive\n   System. It is therefore
          in a good position to ask the Executive\n   System to enable monitoring
          when it sends the service request\n   onwards. In practical implementations,
          it is likely that more\n   information on transient service status will
          be available if this is\n   indicated as being important BEFORE or AS the
          service execution phase\n   starts; once execution has begun the level of
          information that can be\n   returned may be difficult to change.\n   Thus,
          whilst it is free to send a SUBSCRIBE request at any point\n   after receiving
          an Interim response from the Gateway to its service\n   request, it is recommended
          that the Client should send such a\n   monitoring request immediately prior
          to sending an ACK message\n   confirming the service if it is interested
          in transient service\n   status messages.\n"
        title: 3.5.3.4. Timing of SUBSCRIBE requests
      title: 3.5.3. Mechanism to register interest in the disposition of a PINT
    - contents:
      - "3.5.4. The \"Require:\" header for PINT\n   PINT clients use the Require:
        header to signal to the PINT server\n   that a certain PINT extension of SIP
        is required. PINT 1.0 defines\n   two strings that can go into the Require
        header:\n   org.ietf.sip.subscribe  -- the server can fulfill SUBSCRIBE requests\n
        \                             and associated methods (see section 3.5.3)\n
        \  org.ietf.sdp.require    -- the PINT server (or the SDP parser\n                              associated
        to it) understands the \"require\"\n                              attribute
        defined in (section 3.4.4)\n   Example:\n         Require:org.ietf.sip.subscribe,org.ietf.sdp.require\n
        \  A client SHOULD only include a Require: header where it truly\n   requires
        the server to reject the request if the option is not\n   supported.\n"
      title: 3.5.4. The "Require:" header for PINT
    - contents:
      - "3.5.5. PINT URLs within PINT requests\n   Normally the hostnames and domain
        names that appear in the PINT URLs\n   are the internal affair of each individual
        PINT system. A client uses\n   the appropriate SDP payload to indicate the
        particular service it\n   wishes to invoke; it is not necessary to use a particular
        URL to\n   identify the service.\n   A PINT URL is used in two different ways
        within PINT requests: within\n   the Request-URI, and within the To: and From:
        headers. Use within the\n   Request-URI requires clarification in order to
        ensure smooth\n   interworking with the Telephone Network serviced by the
        PINT\n   infrastructure, and this is covered next.\n"
      - contents:
        - "3.5.5.1. PINT URLS within Request-URIs\n   There are some occasions when
          it may be useful to indicate service\n   information within the URL in a
          standardized way:\n      a. it may not be possible to use SDP information
          to route the\n         request if it is encrypted;\n      b. it allows implementation
          that make use of I.N. \"service\n         indicators\";\n      c. It enables
          multiple competing PINT gateways to REGISTER with a\n         single \"broker\"
          server (proxy or redirect) (see section 6.3)\n   For these reasons, the
          following conventions for URLs are offered for\n   use in PINT requests:\n
          \  1. The user portion of a sip URL indicates the service to be\n   requested.
          \ At present the following services are defined:\n   R2C   (for Request-to-Call)\n
          \  R2F   (for Request-to-Fax)\n   R2HC  (for Request-to-Hear-Content)\n
          \  The user portions \"R2C\", \"R2F\", and \"R2HC\" are reserved for the
          PINT\n   milestone services. Other user portions MUST be used in case the\n
          \  requested service is not one of the Milestone services. See section\n
          \  6.2 for some related considerations concerning registrations by\n   competing
          PINT systems to a single PINT proxy server acting as a\n   service broker.\n
          \  2. The host portion of a sip URL contains the domain name of the PINT\n
          \  service provider.\n   3. A new url-parameter is defined to be \"tsp\"
          (for \"telephone service\n   provider\"). This can be used to indicate the
          actual telephone network\n   provider to be used to fulfill the PINT request.\n
          \  Thus, for example:-\n         INVITE sip:R2C@pint.pintservice.com SIP/2.0\n
          \        INVITE sip:R2F@pint.pintservice.com;tsp=telco.com SIP/2.0\n         INVITE
          sip:R2HC@pint.mycom.com;tsp=pbx23.mycom.com SIP/2.0\n         INVITE sip:13@pint.telco.com
          SIP/2.0\n"
        title: 3.5.5.1. PINT URLS within Request-URIs
      title: 3.5.5. PINT URLs within PINT requests
    - contents:
      - "3.5.6. Telephony Network Parameters within PINT URLs\n   Any legal SIP URL
        can appear as a PINT URL within the Request-URI or\n   To:  header of a PINT
        request. But if the address is a telephone\n   address, we indicated in section
        3.4.3 that it may be necessary to\n   include more information in order correctly
        to identify the remote\n   telephone terminal or service. PINT clients MAY
        include these\n   attribute tags within PINT URLs if they are necessary or
        a useful\n   complement to the telephone number within the SIP URL. These\n
        \  attribute tags MUST be included as URL parameters as defined in [1]\n   (i.e.
        in the semi-colon separated manner).\n   The following is an example of a
        PINT URL containing extra attribute\n   tags:\n"
      - "sip:+9725228808@pint.br.com;user=phone;require=Q763-plan;a=Q763-plan:4\n
        \  As we noted in section 3.4.3, these extra attribute parameters will\n   not
        normally be needed within a URL, because there is a great deal of\n   context
        available to help the server interpret the phone number\n   correctly. In
        particular, there is the SIP URL within the To: header,\n   and there is also
        the Request-URI. In most cases this provides\n   sufficient information for
        the telephone network.\n   The SDP attributes defined in section 3 above will
        normally only be\n   used when they are needed to supply necessary context
        to identify a\n   telephone terminal.\n"
      title: 3.5.6. Telephony Network Parameters within PINT URLs
    - contents:
      - "3.5.7. REGISTER requests within PINT\n   A PINT gateway is a SIP user agent
        server. A User Agent Server uses\n   the REGISTER request to tell a proxy
        or redirect server that it is\n   available to \"receive calls\" (i.e. to
        service requests). Thus a PINT\n   Gateway registers with a proxy or redirect
        server the service that is\n   accessible via itself, whilst in SIP, a user
        is registering his/her\n   presence at a particular SIP Server.\n   There
        may be competing PINT servers that can offer the same PINT\n   service trying
        to register at a single PINT server. The PINT server\n   might act as a \"broker\"
        among the various PINT gateways that can\n   fulfill a request. A format for
        PINT URLs was specified in section\n   3.5.5 that enables independent PINT
        systems to REGISTER an offer to\n   provide the same service. The registrar
        can apply its own mechanisms\n   and policies to decide how to respond to
        INVITEs from clients seeking\n   service (See section 6.3 for some possible
        deployment options). There\n   is no change between SIP and PINT REGISTER
        semantics or syntax.\n   Of course, the information in the PINT URLs within
        the REGISTER\n   request may not be sufficient to completely define the service
        that a\n   gateway can offer. The use of SIP and SDP within PINT REGISTER\n
        \  requests to enable a gateway to specify in more detail the services\n   it
        can offer is the subject of future study.\n"
      title: 3.5.7. REGISTER requests within PINT
    - contents:
      - "3.5.8. BYE Requests in PINT\n   The semantics of BYE requests within PINT
        requires some extra\n   precision.  One issue concerns conferences that \"cannot
        be left\", and\n   the other concerns keeping call state after the BYE.\n
        \  The BYE request [1] is normally used to indicate that the originating\n
        \  entity no longer wishes to be involved in the specified call. The\n   request
        terminates the call and the media session. Applying this\n   model to PINT,
        if a PINT client makes a request that results in\n   invocation of a telephone
        call from A to B, a BYE request from the\n   client, if accepted, should result
        in a termination of the phone\n   call.\n   One might expect this to be the
        case if the telephone call has not\n   started when the BYE request is received.
        For example, if a request\n   to fax is sent with a t= line indicating that
        the fax is to be sent\n   tomorrow at 4 AM, the requestor might wish to cancel
        the request\n   before the specified time.\n   However, even if the call has
        yet to start, it may not be possible to\n   terminate the media session on
        the telephone system side. For\n   example, the fax call may be in progress
        when the BYE arrives, and\n   perhaps it is just not possible to cancel the
        fax in session. Another\n   possibility is that the entire telephone-side
        service might be\n   completed before the BYE is received. In the above Request-to-Fax\n
        \  example, the BYE might be sent the following morning, and the entire\n
        \  fax has been sent before the BYE was received. It is too late to send\n
        \  the BYE.\n   In the case where the telephone network cannot terminate the
        call,\n   the server MUST return a \"606 Not Acceptable\" response to the
        BYE,\n   along with a session description that indicates the telephone network\n
        \  session that is causing the problem.\n   Thus, in PINT, a \"Not Acceptable\"
        response MAY be returned both to\n   INVITE and BYE requests. It indicates
        that some aspect of the session\n   description makes the request unacceptable.\n
        \  By allowing a server to return a \"Not Acceptable\" response to BYE\n   requests,
        we are not changing its semantics, just enlarging its use.\n   A combination
        of Warning: headers and i= lines within the session\n   description can be
        used to indicate the precise nature of the\n   problem.\n   Example:\n         SIP/2.0
        606 Not Acceptable\n         From: ...\n         To: .......\n         .....\n
        \        Warning: 399 pint.mycom.com Fax in progress, service cannot be\n
        \           aborted\n         Content-Type: application/sdp\n         Content-Length:
        ...\n         v=0\n         ...\n         ...\n         i=3 of 5 pages sent
        OK\n         c=TN  RFC2543  +12014064090\n         m=image 1 fax tif\n         a=fmtp:tif
        uri:http://tifsRus.com/yyyyyy.tif\n   Note that the server might return an
        updated session description\n   within a successful response to a BYE as well.
        This can be used, for\n   example, to indicate the actual start times and
        stop times of the\n   telephone session, or how many pages were sent in the
        fax\n   transmission.\n   The second issue concerns how long must a server
        keep call state\n   after receiving a BYE. A question arises because other
        clients might\n   still wish to send queries about the telephone network session
        that\n   was the subject of the PINT transaction. Ordinary SIP semantics have\n
        \  three important implications for this situation:\n   1. A BYE indicates
        that the requesting client will clear out all call\n   state as soon as it
        receives a successful response. A client SHOULD\n   NOT send a SUBSCRIBE request
        after it has sent a BYE.\n   2. A server may return an Expires: header within
        a successful\n   response to a BYE request. This indicates for how long the
        server\n   will retain session state about the telephone network session.
        At any\n   point during this time, a client may send a SUBSCRIBE request to
        the\n   server to learn about the session state (although as explained in
        the\n   previous paragraph, a client that has sent a BYE will not normally\n
        \  send a SUBSCRIBE).\n   3. When engaged in a SUBSCRIBE/NOTIFY monitoring
        session, PINT\n   servers that send UNSUBSCRIBE to a URL listed in the Contact:
        header\n   of a client request SHOULD not clear session state until after
        the\n   successful response to the UNSUBSCRIBE message is received. For\n
        \  example, it may be that the requesting client host is turned off (or\n
        \  in a low power mode) when the telephone service is executed (and is\n   therefore
        not available at the location previously specified in the\n   Contact: attribute)
        to receive the PINT server's UNSUBSCRIBE. Of\n   course, it is possible that
        the UNSUBSCRIBE request will simply time\n   out.\n"
      title: 3.5.8. BYE Requests in PINT
    title: 3.5. PINT Extensions to SIP 2.0
  title: 3. PINT Functional and Protocol Architecture
- contents:
  - '4. Examples of PINT Requests and Responses

    '
  - contents:
    - "4.1. A request to a call center from an anonymous user to receive a\n     phone
      call.\n   C->S: INVITE  sip:R2C@pint.mailorder.com  SIP/2.0\n         Via: SIP/2.0/UDP
      169.130.12.5\n         From: sip:anon-1827631872@chinet.net\n         To: sip:+1-201-456-7890@iron.org;user=phone\n
      \        Call-ID: 19971205T234505.56.78@pager.com\n         CSeq: 4711 INVITE\n
      \        Subject: Sale on Ironing Boards\n         Content-type: application/sdp\n
      \        Content-Length: 174\n         v=0\n         o=- 2353687637 2353687637
      IN IP4 128.3.4.5\n         s=R2C\n         i=Ironing Board Promotion\n         e=anon-1827631872@chinet.net\n
      \        t=2353687637 0\n         m=audio 1  voice -\n         c=TN  RFC2543
      \ +1-201-406-4090\n   In this example, the context that is required to interpret
      the To:\n   address as a telephone number is not given explicitly; it is\n   implicitly
      known to the R2C@pint.mailorder.com server. But the\n   telephone of the person
      who wishes to receive the call is explicitly\n   identified as an internationally
      significant E.164 number that falls\n   within the North American numbering
      plan (because of the \"+1\" within\n   the c= line).\n"
    title: 4.1. A request to a call center from an anonymous user to receive a
  - contents:
    - "4.2. A request from a non anonymous customer (John Jones) to receive a\n     phone
      call from a particular sales agent (Mary James) concerning\n     the defective
      ironing board that was purchased\n   C->S: INVITE  sip:marketing@pint.mailorder.com
      \ SIP/2.0\n         Via: SIP/2.0/UDP 169.130.12.5\n         From: sip:john.jones.3@chinet.net\n
      \        To: sip:mary.james@mailorder.com\n         Call-ID: 19971205T234505.56.78@pager.com\n
      \        CSeq: 4712 INVITE\n         Subject: Defective Ironing Board - want
      refund\n         Content-type: application/sdp\n         Content-Length: 150\n
      \        v=0\n         o=- 2353687640 2353687640 IN IP4 128.3.4.5\n         s=marketing\n
      \        e=john.jones.3@chinet.net\n         c= TN RFC2543  +1-201-406-4090\n
      \        t=2353687640 0\n         m=audio 1  voice -\n   The To: line might
      include the Mary James's phone number instead of a\n   email-like address. An
      implementation that cannot accept email-like\n   URLs in the \"To:\" header
      must decline the request with a 606 Not\n   Acceptable.  Note that the sending
      PINT client \"knows\" that the PINT\n   Gateway contacted with the \"marketing@pint.mailorder.com\"
      Request-URI\n   is capable of processing the client request as expected. (see
      3.5.5.1\n   for a discussion on this).\n   Note also that such a telephone call
      service could be implemented on\n   the phone side with different details. For
      example, it might be that\n   first the agent's phone rings, and then the customer's
      phone rings,\n   or it might be that first the customer's phone rings and he
      hears\n   silly music until the agent comes on line. If necessary, such service\n
      \  parameter details might be indicated in \"a=\" attribute lines within\n   the
      session description. The specification of such attribute lines\n   for service
      consistency is beyond the scope of the PINT 1.0\n   specifications.\n"
    title: 4.2. A request from a non anonymous customer (John Jones) to receive a
  - contents:
    - "4.3. A request from the same user to get a fax back on how to assemble\n     the
      Ironing Board\n"
    - "C->S: INVITE  sip:faxback@pint.mailorder.com  SIP/2.0\n      Via: SIP/2.0/UDP
      169.130.12.5\n      From: sip:john.jones.3@chinet.net\n      To: sip:1-800-3292225@steam.edu;user=phone;phone-context=+1\n
      \     Call-ID: 19971205T234505.66.79@chinet.net\n      CSeq: 4713 INVITE\n      Content-type:
      application/sdp\n      Content-Length: 218\n      v=0\n      o=- 2353687660
      2353687660 IN IP4 128.3.4.5\n      s=faxback\n      e=john.jones.3@chinet.net\n
      \     t=2353687660 0\n      m=application 1 fax URI\n      c=TN  RFC2543  1-201-406-4091\n
      \     a=fmtp:URI uri:http://localstore/Products/IroningBoards/2344.html\n   In
      this example, the fax to be sent is stored on some local server\n   (localstore),
      whose name may be only resolvable, or that may only be\n   reachable, from within
      the IP network on which the PINT server sits.\n   The phone number to be dialled
      is a \"local phone number\" as well.\n   There is no \"phone-context\" attribute,
      so the context (in this case,\n   for which nation the number is \"nationally
      significant\") must be\n   supplied by the faxback@pint.mailorder.com PINT server.\n
      \  If the server that receives it does not understand the number, it\n   SHOULD
      decline the request and include a \"Network Address Not\n   Understood\" warning.
      \ Note that no \"require\" attribute was used here,\n   since it is very likely
      that the request can be serviced even by a\n   server that does not support
      the \"require\" attribute.\n"
    title: 4.3. A request from the same user to get a fax back on how to assemble
  - contents:
    - "4.4. A request from same user to have that same information read out\n     over
      the phone\n"
    - "C->S: INVITE  sip:faxback@pint.mailorder.com  SIP/2.0\n      Via: SIP/2.0/UDP
      169.130.12.5\n      From: sip:john.jones.3@chinet.net\n      To: sip:1-800-3292225@steam.edu;user=phone;phone-context=+1\n
      \     Call-ID: 19971205T234505.66.79@chinet.net\n      CSeq: 4713 INVITE\n      Content-type:
      application/sdp\n      Content-Length: 220\n      v=0\n      o=- 2353687660
      2353687660 IN IP4 128.3.4.5\n      s=faxback\n      e=john.jones.3@chinet.net\n
      \     t=2353687660 0\n      m=application 1 voice URI\n      c=TN  RFC2543  1-201-406-4090\n
      \     a=fmtp:URI uri:http://localstore/Products/IroningBoards/2344.html\n"
    title: 4.4. A request from same user to have that same information read out
  - contents:
    - "4.5. A request to send an included text page to a friend's pager.\n   In this
      example, the text to be paged out is included in the request.\n"
    - "C->S: INVITE  sip:R2F@pint.pager.com  SIP/2.0\n      Via: SIP/2.0/UDP 169.130.12.5\n
      \     From: sip:scott.petrack@chinet.net\n      To: sip:R2F@pint.pager.com\n
      \     Call-ID: 19974505.66.79@chinet.net\n      CSeq: 4714 INVITE\n      Content-Type:
      multipart/related; boundary=--next\n      ----next\n      Content-Type: application/sdp\n
      \     Content-Length: 236\n      v=0\n      o=- 2353687680 2353687680 IN IP4
      128.3.4.5\n      s=R2F\n      e=scott.petrack@chinet.net\n      t=2353687680
      0\n      m=text 1 pager plain\n      c= TN  RFC2543  +972-9-956-1867\n      a=fmtp:plain
      spr:2@53655768\n      ----next\n      Content-Type: text/plain\n      Content-ID:
      2@53655768\n      Content-Length:50\n      Hi Joe! Please call me asap at 555-1234.\n
      \     ----next--\n"
    title: 4.5. A request to send an included text page to a friend's pager.
  - contents:
    - '4.6. A request to send an image as a fax to phone number +972-9-956-1867

      '
    - "C->S: INVITE  sip:faxserver@pint.vocaltec.com  SIP/2.0\n      Via: SIP/2.0/UDP
      169.130.12.5\n      From: sip:scott.petrack@chinet.net\n      To: sip:faxserver@pint.vocaltec.com\n
      \     Call-ID: 19971205T234505.66.79@chinet.net\n      CSeq: 4715 INVITE\n      Content-type:
      application/sdp\n      Content-Length: 267\n      v=0\n      o=- 2353687700
      2353687700 IN IP4 128.3.4.5\n      s=faxserver\n      e=scott.petrack@chinet.net\n
      \     t=2353687700 0\n      m=image  1 fax  tif gif\n      c= TN  RFC2543  +972-9-956-1867\n
      \     a=fmtp:tif  uri:http://petrack/images/tif/picture1.tif\n      a=fmtp:gif
      \ uri:http://petrack/images/gif/picture1.gif\n   The image is available as tif
      or as gif. The tif is the preferred\n   format. Note that the http server where
      the pictures reside is local,\n   and the PINT server is also local (because
      it can resolve machine\n   name \"petrack\")\n"
    title: 4.6. A request to send an image as a fax to phone number +972-9-956-1867
  - contents:
    - "4.7. A request to read out over the phone two pieces of content in\n     sequence.\n
      \  First some included text is read out by text-to-speech. Then some\n   text
      that is stored at some URI on the internet is read out.\n"
    - "C->S: INVITE  sip:R2HC@pint.acme.com  SIP/2.0\n      Via: SIP/2.0/UDP 169.130.12.5\n
      \     From: sip:scott.petrack@chinet.net\n      To: sip:R2HC@pint.acme.com\n
      \     Call-ID: 19974505.66.79@chinet.net\n      CSeq: 4716 INVITE\n      Content-Type:
      multipart/related; boundary=next\n      --next\n      Content-Type: application/sdp\n
      \     Content-Length: 316\n      v=0\n      o=- 2353687720 2353687720 IN IP4
      128.3.4.5\n      s=R2HC\n      e=scott.petrack@chinet.net\n      c= TN  RFC2543
      \ +1-201-406-4091\n      t=2353687720 0\n      m=text  1  voice  plain\n      a=fmtp:plain
      \  spr:2@53655768\n      m=text  1 voice plain\n      a=fmtp:plain  uri:http://www.your.com/texts/stuff.doc\n
      \     --next\n      Content-Type: text/plain\n      Content-ID: 2@53655768\n
      \     Content-Length: 172\n      Hello!! I am about to read out to you the document
      you\n      requested, \"uri:http://www.your.com/texts/stuff.doc\".\n      We
      hope you like acme.com's new speech synthesis server.\n      --next--\n"
    title: 4.7. A request to read out over the phone two pieces of content in
  - contents:
    - "4.8. Request for the prices for ISDN to be sent to my fax machine\n   INVITE
      sip:R2FB@pint.bt.co.uk  SIP/2.0\n   Via: SIP/2.0/UDP 169.130.12.5\n   To: sip:0345-12347-01@pint.bt.co.uk;user=phone;phone-context=+44\n
      \  From: sip:hank.wangford@newts.demon.co.uk\n   Call-ID: 19981204T201505.56.78@demon.co.uk\n
      \  CSeq: 4716 INVITE\n   Subject: Price List\n   Content-type: application/sdp\n
      \  Content-Length: 169\n   v=0\n   o=- 2353687740 2353687740 IN IP4 128.3.4.5\n
      \  s=R2FB\n   i=ISDN Price List\n   e=hank.wangford@newts.demon.co.uk\n   t=2353687740
      0\n   m=text 1  fax -\n   c=TN  RFC2543  +44-1794-8331010\n"
    title: 4.8. Request for the prices for ISDN to be sent to my fax machine
  - contents:
    - "4.9. Request for a callback\n   INVITE sip:R2C@pint.bt.co.uk  SIP/2.0\n   Via:
      SIP/2.0/UDP 169.130.12.5\n   To: sip:0345-123456@pint.bt.co.uk;user=phone;phone-context=+44\n
      \  From: sip:hank.wangford@newts.demon.co.uk\n   Call-ID: 19981204T234505.56.78@demon.co.uk\n
      \  CSeq: 4717 INVITE\n   Subject: It costs HOW much?\n   Content-type: application/sdp\n
      \  Content-Length: 176\n   v=0\n   o=- 2353687760 2353687760 IN IP4 128.3.4.5\n
      \  s=R2C\n   i=ISDN pre-sales query\n   e=hank.wangford@newts.demon.co.uk\n
      \  c=TN  RFC2543  +44-1794-8331013\n   t=2353687760 0\n   m=audio 1  voice -\n"
    title: 4.9. Request for a callback
  - contents:
    - "4.10. Sending a set of information in response to an enquiry\n   INVITE sip:R2FB@pint.bt.co.uk
      \ SIP/2.0\n   Via: SIP/2.0/UDP 169.130.12.5\n   To: sip:0345-12347-01@pint.bt.co.uk;user=phone;phone-context=+44\n
      \  From: sip:colin.masterton@sales.hh.bt.co.uk\n   Call-ID: 19981205T234505.56.78@sales.hh.bt.co.uk\n
      \  CSeq: 1147 INVITE\n   Subject: Price Info, as requested\n   Content-Type:
      multipart/related; boundary=next\n   --next\n   Content-type: application/sdp\n
      \  Content-Length: 325\n   v=0\n   o=- 2353687780 2353687780 IN IP4 128.3.4.5\n
      \  s=R2FB\n   i=Your documents\n   e=colin.masterton@sales.hh.bt.co.uk\n   t=2353687780
      0\n   m=application 1  fax octet-stream\n   c=TN  RFC2543  +44-1794-8331010\n
      \  a=fmtp:octet-stream uri:http://www.bt.co.uk/imgs/pipr.gif opr:\n     spr:2@53655768\n
      \  --next\n   Content-Type: text/plain\n   Content-ID: 2@53655768\n   Content-Length:
      352\n   Dear Sir,\n     Thank you for your enquiry. I have checked availability
      in your\n   area, and we can provide service to your cottage. I enclose a\n
      \  quote for the costs of installation, together with the ongoing\n   rental
      costs for the line. If you want to proceed with this,\n   please quote job reference
      isdn/hh/123.45.9901.\n   Yours Sincerely,\n      Colin Masterton\n   --next--\n
      \  Note that the \"implicit\" faxback content is given by an EMPTY opaque\n
      \  reference in the middle of the fmtp line in this example.\n"
    title: 4.10. Sending a set of information in response to an enquiry
  - contents:
    - "4.11. Sportsline \"headlines\" message sent to your phone/pager/fax\n   (i)
      phone\n         INVITE sip:R2FB@pint.wwos.skynet.com  SIP/2.0\n         Via:
      SIP/2.0/UDP 169.130.12.5\n         To:\n   sip:1-900-123-456-7@wwos.skynet.com;user=phone;phone-context=+1\n
      \        From: sip:fred.football.fan@skynet.com\n         Call-ID: 19971205T234505.56.78@chinet.net\n
      \        CSeq: 4721 INVITE\n         Subject: Wonderful World Of Sports NFL
      Final Scores\n         Content-type: application/sdp\n         Content-Length:
      220\n         v=0\n         o=- 2353687800 2353687800 IN IP4 128.3.4.5\n         s=R2FB\n
      \        i=NFL Final Scores\n         e=fred.football.fan@skynet.com\n         c=TN
      \ RFC2543 +44-1794-8331013\n         t=2353687800 0\n         m=audio 1 voice
      x-pay\n         a=fmtp:x-pay opr:mci.com/md5:<crypto signature>\n   (ii) fax\n
      \        INVITE sip:R2FB@pint.wwos.skynet.com  SIP/2.0\n         Via: SIP/2.0/UDP
      169.130.12.5\n         To: sip:1-900-123-456-7@wwos.skynet.com;user=phone;\n
      \            phone-context=+1\n         From: sip:fred.football.fan@skynet.com\n
      \        Call-ID: 19971205T234505.56.78@chinet.net\n         CSeq: 4722 INVITE\n
      \        Subject: Wonderful World Of Sports NFL Final Scores\n         Content-type:
      application/sdp\n         Content-Length: 217\n         v=0\n         o=- 2353687820
      2353687820 IN IP4 128.3.4.5\n         s=R2FB\n         i=NFL Final Scores\n
      \        e=fred.football.fan@skynet.com\n         c=TN  RFC2543 +44-1794-8331010\n
      \        t=2353687820 0\n         m=text 1 fax x-pay\n         a=fmtp:x-pay
      opr:mci.com/md5:<crypto signature>\n   (iii) pager\n         INVITE sip:R2FB@pint.wwos.skynet.com
      \ SIP/2.0\n         Via: SIP/2.0/UDP 169.130.12.5\n         To: sip:1-900-123-456-7@wwos.skynet.com;user=phone;\n
      \            phone-context=+1\n         From: sip:fred.football.fan@skynet.com\n
      \        Call-ID: 19971205T234505.56.78@chinet.net\n         CSeq: 4723 INVITE\n
      \        Subject: Wonderful World Of Sports NFL Final Scores\n         Content-type:
      application/sdp\n         Content-Length: 219\n         v=0\n         o=- 2353687840
      2353687840 IN IP4 128.3.4.5\n         s=R2FB\n         i=NFL Final Scores\n
      \        e=fred.football.fan@skynet.com\n         c=TN  RFC2543 +44-1794-8331015\n
      \        t=2353687840 0\n         m=text 1 pager x-pay\n         a=fmtp:x-pay
      opr:mci.com/md5:<crypto signature>\n   Note that these are all VERY similar.\n"
    title: 4.11. Sportsline "headlines" message sent to your phone/pager/fax
  - contents:
    - "4.12. Automatically giving someone a fax copy of your phone bill\n      INVITE
      sip:BillsRUs@pint.sprint.com SIP/2.0\n      Via: SIP/2.0/UDP 169.130.12.5\n
      \     To: sip:+1-555-888-1234@fbi.gov;user=phone\n      From: sip:agent.mulder@fbi.gov\n
      \     Call-ID: 19991231T234505.56.78@fbi.gov\n      CSeq: 911 INVITE\n      Subject:
      Itemised Bill for January 98\n      Content-type: application/sdp\n      Content-Length:
      247\n      v=0\n      o=- 2353687860 2353687860 IN IP4 128.3.4.5\n      s=BillsRUs\n
      \     i=Joe Pendleton's Phone Bill\n      e=agent.mulder@fbi.gov\n      c=TN
      \ RFC2543  +1-202-833-1010\n      t=2353687860 0\n      m=text 1  fax x-files-id\n
      \     a=fmtp:x-files-id opr:fbi.gov/jdcn-123@45:3des;base64,<signature>\n   Note:
      in this case the opaque reference is a collection of data used\n   to convince
      the Executive System that the requester has the right to\n   get this information,
      rather than selecting the particular content\n   (the A party in the To: field
      of the SIP \"wrapper\" does that alone).\n"
    title: 4.12. Automatically giving someone a fax copy of your phone bill
  title: 4. Examples of PINT Requests and Responses
- contents:
  - '5.  Security Considerations

    '
  - contents:
    - "5.1.  Basic Principles for PINT Use\n   A PINT Gateway, and the Executive System(s)
      with which that Gateway\n   is associated, exist to provide service to PINT
      Requestors. The aim\n   of the PINT protocol is to pass requests from those
      users on to a\n   PINT Gateway so an associated Executive System can service
      those\n   requests.\n"
    - contents:
      - "5.1.1.  Responsibility for service requests\n   The facility of making a
        GSTN-based call to numbers specified in the\n   PINT request, however, comes
        with some risks. The request can specify\n   an incorrect telephone of fax
        number. It is also possible that the\n   Requestor has purposely entered the
        telephone number of an innocent\n   third party. Finally, the request may
        have been intercepted on its\n   way through any intervening PINT or SIP infrastructure,
        and the\n   request may have been altered.\n   In any of these cases, the
        result may be that a call is placed\n   incorrectly. Where there is intent
        or negligence, this may be\n   construed as harassment of the person incorrectly
        receiving the call.\n   Whilst the regulatory framework for misuse of Internet
        connections\n   differs throughout the world and is not always mature, the
        rules\n   under which GSTN calls are made are much more settled. Someone may
        be\n   liable for mistaken or incorrect calls.\n   Understandably, the GSTN
        Operators would prefer that this someone is\n   not them, so they will need
        to ensure that any PINT Gateway and\n   Executive System combination does
        not generate incorrect calls\n   through some error in the Gateway or Executive
        system implementation\n   or GSTN-internal communications fault. Equally,
        it is important that\n   the Operator can show that they act only on requests
        that they have\n   good reason to believe are correct. This means that the
        Gateway must\n   not pass on requests unless it is sure that they have not
        been\n   corrupted in transit from the Requestor.\n   If a request can be
        shown to have come from a particular Requestor\n   and to have been acted
        on in good faith by the PINT service provider,\n   then responsibility for
        making requests may well fall to the\n   Requestor rather than the Operator
        who executed these requests.\n   Finally, it may be important for the PINT
        service provider to be able\n   to show that they act only on requests for
        which they have some\n   degree of assurance of origin. In many jurisdictions,
        it is a\n   requirement on GSTN Operators that they place calls only when
        they\n   can, if required, identify the parties to the call (such as when\n
        \  required to carry out a Malicious Call Trace). It is at least likely\n
        \  that the provider of PINT services will have a similar responsibility\n
        \  placed on them.\n   It follows that the PINT service provider may require
        that the\n   identity of the Requestor be confirmed. If such confirmation
        is not\n   available, then they may be forced (or choose) not to provide\n
        \  service. This identification may require personal authentication of\n   the
        Requesting User.\n"
      title: 5.1.1.  Responsibility for service requests
    - contents:
      - "5.1.2.  Authority to make requests\n   Where GSTN resources are used to provide
        a PINT service, it is at\n   least possible that someone will have to pay
        for it. This person may\n   not be the Requestor, as, for example, in the
        case of existing GSTN\n   split-charging services like free phone in which
        the recipient of a\n   call rather than the originator is responsible for
        the call cost.\n   This is not, of course, the only possibility; for example,
        PINT\n   service may be provided on a subscription basis, and there are a\n
        \  number of other models. However, whichever model is chosen, there may\n
        \  be a requirement that the authority of a Requestor to make a PINT\n   request
        is confirmed.\n   If such confirmation is not available, then, again, the
        PINT Gateway\n   and associated Executive System may choose not to provide
        service.\n"
      title: 5.1.2.  Authority to make requests
    - contents:
      - "5.1.3.  Privacy\n   Even if the identity of the Requesting User and the Authority
        under\n   which they make their request is known, there remains the possibility\n
        \  that the request is either corrupted, maliciously altered, or even\n   replaced
        whilst in transit between the Requestor and the PINT\n   Gateway.\n   Similarly,
        information on the Authority under which a request is made\n   may well be
        carried within that request. This can be sensitive\n   information, as an
        eavesdropper might steal this and use it within\n   their own requests. Such
        authority SHOULD be treated as if it were\n   financial information (such
        as a credit card number or PIN).\n   The data authorizing a Requesting User
        to make a PINT request should\n   be known only to them and the service provider.
        However, this\n   information may be in a form that does not match the schemes
        normally\n   used within the Internet. For example, X.509 certificates[14]
        are\n   commonly used for secured transactions on the Internet both in the
        IP\n   Security Architecture[12] and in the TLS protocol[13], but the GSTN\n
        \  provider may only store an account code and PIN (i.e. a fixed string\n
        \  of numbers).\n   A Requesting User has a reasonable expectation that their
        requests\n   for service are confidential. For some PINT services, no content
        is\n   carried over the Internet; however, the telephone or fax numbers of\n
        \  the parties to a resulting service calls may be considered sensitive.\n
        \  As a result, it is likely that the Requestor (and their PINT service\n
        \  provider) will require that any request that is sent across the\n   Internet
        be protected against eavesdroppers; in short, the requests\n   SHOULD to be
        encrypted.\n"
      title: 5.1.3.  Privacy
    - contents:
      - "5.1.4.  Privacy Implications of SUBSCRIBE/NOTIFY\n   Some special considerations
        relate to monitoring sessions using the\n   SUBSCRIBE and NOTIFY messages.
        The SUBSCRIBE message that is used to\n   register an interest in the disposition
        of a PINT service transaction\n   uses the original Session Description carried
        in the related INVITE\n   message. This current specification does not restrict
        the source of\n   such a SUBSCRIBE message, so it is possible for an eavesdropper
        to\n   capture an unprotected session description and use this in a\n   subsequent
        SUBSCRIBE request. In this way it is possible to find out\n   details on that
        transaction that may well be considered sensitive.\n   The initial solution
        to this risk is to recommend that a session\n   description that may be used
        within a subsequent SUBSCRIBE message\n   SHOULD be protected.\n   However,
        there is a further risk; if the origin-field used is\n   \"guessable\" then
        it might be possible for an attacker to reconstruct\n   the session description
        and use this reconstruction within a\n   SUBSCRIBE message.\n   SDP (see section
        6 of [2], \"o=\" field) does not specify the mechanism\n   used to generate
        the sess-id field, and suggests that a method based\n   on timestamps produced
        by Network Time Protocol [16] can be used.\n   This is sufficient to guarantee
        uniqueness, but may allow the value\n   to be guessed, particularly if other
        unprotected requests from the\n   same originator are available.\n   Thus,
        to ensure that the session identifier is not guessable the\n   techniques
        described in section 6.3 of [17] can be used when\n   generating the origin-field
        for a session description to be used\n   inside a PINT INVITE message. If
        all requests from (and responses to)\n   a particular PINT requesting entity
        are protected, then this is not\n   needed. Where such a situation is not
        assured, AND where session\n   monitoring is supported, then a method by which
        an origin-field\n   within a session description is not guessable SHOULD be
        used.\n"
      title: 5.1.4.  Privacy Implications of SUBSCRIBE/NOTIFY
    title: 5.1.  Basic Principles for PINT Use
  - contents:
    - "5.2.  Registration Procedures\n   Any number of PINT Gateways may register
      to provide the same service;\n   this is indicated by the Gateways specifying
      the same \"userinfo\" part\n   in the To: header field of the REGISTER request.
      Whilst such\n   ambiguity would be unlikely to occur with the scenarios covered
      by\n   \"core\" SIP, it is very likely for PINT; there could be any number of\n
      \  service providers all willing to support a \"Request-To-Fax\" service,\n
      \  for example.\n   Unless a request specifies the Gateway name explicitly,
      an\n   intervening Proxy that acts on a registration database to which\n   several
      Gateways have all registered is in a position to select from\n   the registrands
      using whatever algorithm it chooses; in principle,\n   any Gateway that has
      registered as \"R2F\" would be appropriate.\n   However, this opens up an avenue
      for attack, and this is one in which\n   a \"rogue\" Gateway operator stands
      to make a significant gain. The\n   standard SIP procedure for releasing a registration
      is to send a\n   REGISTER request with a Contact field having a wildcard value
      and an\n   expires parameter with a value of 0. It is important that a PINT\n
      \  Registrar uses authentication of the Registrand, as otherwise one\n   PINT
      service provider would be able to \"spoof\" another and remove\n   their registration.
      As this would stop the Proxy passing any requests\n   to that provider, this
      would both increase requests being sent to the\n   rogue and stop requests going
      to the victim.\n   Another variant on this attack would be to register a Gateway
      using a\n   name that has been registered by another provider; thus a rogue\n
      \  Operator might register its Gateway as \"R2C@pint.att.com\", thereby\n   hijacking
      requests.\n   The solution is the same; all registrations by PINT Gateways MUST
      be\n   authenticated; this includes both new or apparent replacement\n   registrations,
      and any cancellation of current registrations. This\n   recommendation is also
      made in the SIP specification, but for the\n   correct operation of PINT, it
      is very important indeed.\n"
    title: 5.2.  Registration Procedures
  - contents:
    - "5.3.  Security mechanisms and implications on PINT service\n   PINT is a set
      of extensions to SIP[1] and SDP[2], and will use the\n   security procedures
      described in SIP. There are several implications\n   of this, and these are
      covered here.\n   For several of the PINT services, the To: header field of
      SIP is used\n   to identify one of the parties to the resulting service call.
      The\n   PINT Request-To-Call service is an example. As mentioned in the SIP\n
      \  specification, this field is used to route SIP messages through an\n   infrastructure
      of Redirect and Proxy server between the corresponding\n   User Agent Servers,
      and so cannot be encrypted. This means that,\n   although the majority of personal
      or sensitive data can be protected\n   whilst in transit, the telephone (or
      fax) number of one of the\n   parties to a PINT service call cannot, and will
      be \"visible\" to any\n   interception. For the PINT milestone services this
      may be acceptable,\n   since the caller named in the To: service is typically
      a \"well known\"\n   provider address, such as a Call Center.\n   Another aspect
      of this is that, even if the Requesting User does not\n   consider the telephone
      or fax numbers of the parties to a PINT\n   service to be private, those parties
      might. Where PINT servers have\n   reason to believe this might be the case
      they SHOULD encrypt the\n   request, even if the Requestor has not done so.
      This could happen,\n   for example, if a Requesting User within a company placed
      a PINT\n   request and this was carried via the company's Intranet to their\n
      \  Proxy/firewall and thence over the Internet to a PINT Gateway at\n   another
      location.\n   If a request carries data that can be reused by an eavesdropper\n
      \  either to \"spoof\" the Requestor or to obtain PINT service by\n   inserting
      the Requestor's authorization token into an eavesdropper's\n   request, then
      this data MUST be protected. This is particularly\n   important if the authorization
      token consists of static text (such as\n   an account code and/or PIN).\n   One
      approach is to encrypt the whole of the request, using the\n   methods described
      in the SIP specification. As an alternative, it may\n   be acceptable for the
      authorization token to be held as an opaque\n   reference (see section 3.4.2.3
      and examples 4.11 and 4.12), using\n   some proprietary scheme agreed between
      the Requestor and the PINT\n   service provider, as long as this is resistant
      to interception and\n   re-use. Also, it may be that the authorization token
      cannot be used\n   outside of a request cryptographically signed by the Requestor;
      if so\n   then this requirement can be relaxed, as in this case the token\n
      \  cannot be re-used by another.  However, unless both the Requestor and\n   the
      Gateway are assured that this is the case, any authorization\n   token MUST
      be treated as sensitive, and so MUST be encrypted.\n   A PINT request may contain
      data within the SDP message body that can\n   be used more efficiently to route
      that request. For example, it may\n   be that one Gateway and Executive System
      combination cannot handle a\n   request that specifies one of the parties as
      a pager, whilst another\n   can. Both gateways may have registered with a PINT/SIP
      Registrar, and\n   this information may be available to intervening PINT/SIP
      Proxies.\n   However, if the message body is encrypted, then the request cannot
      be\n   decoded at the Proxy server, and so Gateway selection based on\n   contained
      information cannot be made there.\n   The result is that the Proxy may deliver
      the request to a Gateway\n   that cannot handle it; the implication is that
      a PINT/SIP Proxy\n   SHOULD consider its choice for the appropriate Gateway
      subject to\n   correction, and, on receiving a 501 or 415 rejection from the
      first\n   gateway chosen, try another. In this way, the request will succeed
      if\n   at all possible, even though it may be delayed (and tie up resources\n
      \  in the inappropriate Gateways).\n   This opens up an interesting avenue for
      Denial Of Service; sending a\n   valid request that appears to be suitable for
      a number of different\n   Gateways, and simply occupying those Gateways in decrypting
      a message\n   requesting a service they cannot provide. As mentioned in section\n
      \  3.5.5.1, the choice of service name to be passed in the userinfo\n   portion
      of the SIP Request-URI is flexible, and it is RECOMMENDED\n   that names be
      chosen that allow a Proxy to select an appropriate\n   Gateway without having
      to examine the SDP body part. Thus, in the\n   example given here, the service
      might be called \"Request-To-Page\" or\n   \"R2P\" rather than the more general
      use of \"R2F\", if there is a\n   possibility of the SDP body part being protected
      during transit.\n   A variation on this attack is to provide a request that
      is\n   syntactically invalid but that, due to the encryption, cannot be\n   detected
      without expending resources in decoding it. The effects of\n   this form of
      attack can be minimised in the same way as for any SIP\n   Invitation; the Proxy
      should detect the 400 rejection returned from\n   the initial Gateway, and not
      pass the request onwards to another.\n   Finally, note that the Requesting User
      may not have a prior\n   relationship with a PINT Gateway, whilst still having
      a prior\n   relationship with the Operator of the Executive System that fulfills\n
      \  their request. Thus there may be two levels of authentication and\n   authorization;
      one carried out using the techniques described in the\n   SIP specification
      (for use between the Requestor and the Gateway),\n   with another being used
      between the Requesting User or the Requestor\n   and the Executive System.\n
      \  For example, the Requesting User may have an account with the PINT\n   service
      provider. That provider might require that requests include\n   this identity
      before they will be convinced to provide service. In\n   addition, to counter
      attacks on the request whilst it is in transit\n   across the Internet, the
      Gateway may require a separate X.509-based\n   certification of the request.
      These are two separate procedures, and\n   data needed for the former would
      normally be expected to be held in\n   opaque references inside the SDP body
      part of the request.\n   The detailed operation of this mechanism is, by definition,
      outside\n   the scope of an Internet Protocol, and so must be considered a\n
      \  private matter. However, one approach to indicating to the Requestor\n   that
      such \"second level\" authentication or authorization is required\n   by their
      Service Provider would be to ask for this inside the textual\n   description
      carried with a 401 response returned from the PINT\n   Gateway.\n"
    title: 5.3.  Security mechanisms and implications on PINT service
  - contents:
    - "5.4.  Summary of Security Implications\n   From the above discussion, PINT
      always carries data items that are\n   sensitive, and there may be financial
      considerations as well as the\n   more normal privacy concerns. As a result,
      the transactions MUST be\n   protected from interception, modification and replay
      in transit.\n   PINT is based on SIP and SDP, and can use the security procedures\n
      \  outlined in [1] (sections 13 and 15). However, in the case of PINT,\n   the
      SIP recommendation that requests and responses MAY be protected\n   is not enough.
      PINT messages MUST be protected, so PINT\n   Implementations MUST support SIP
      Security (as described in [1],\n   sections 13 & 15), and be capable of handling
      such received messages.\n   In some configurations, PINT Clients, Servers, and
      Gateways can be\n   sure that they operate using the services of network level
      security\n   [13], transport layer security [12], or physical security for all\n
      \  communications between them. In these cases messages MAY be exchanged\n   without
      SIP security, since all traffic is protected already. Clients\n   and servers
      SHOULD support manual configuration to use such lower\n   layer security facilities.\n
      \  When using network layer security [13], the Security Policy Database\n   MUST
      be configured to provide appropriate protection to PINT traffic.\n   When using
      TLS, a port configured MUST NOT also be configured for\n   non-TLS traffic.
      When TLS is used, basic authentication MUST be\n   supported, and client-side
      certificates MAY be supported.\n   Authentication of the Client making the request
      is required, however,\n   so if this is not provided by the underlying mechanism
      used, then it\n   MUST be included within the PINT messages using SIP authentication\n
      \  techniques. In contrast with SIP, PINT requests are often sent to\n   parties
      with which a prior communications relationship exists (such\n   as a Telephone
      Carrier). In this case, there may be a shared secret\n   between the client
      and the PINT Gateway. Such PINT systems MAY use\n   authentication based on
      shared secrets, with HTTP \"basic\n   authentication\". When this is done, the
      message integrity and privacy\n   must be guaranteed by some lower layer mechanism.\n
      \  There are implications on the operation of PINT here though. If a\n   PINT
      proxy or redirect server is used, then it must be able to\n   examine the contents
      of the IP datagrams carried. It follows that an\n   end-to-end approach using
      network-layer security between the PINT\n   Client and a PINT Gateway precludes
      the use of an intervening proxy;\n   communication between the Client and Gateway
      is carried via a tunnel\n   to which any intervening entity cannot gain access,
      even if the IP\n   datagrams are carried via this node. Conversely, if a \"hop-by-hop\"\n
      \  approach is used, then any intervening PINT proxies (or redirect\n   servers)
      are, by implication, trusted entities.\n   However, if there is any doubt that
      there is an underlying network or\n   transport layer security association in
      place, then the players in a\n   PINT protocol exchange MUST use encryption
      and authentication\n   techniques within the protocol itself. The techniques
      described in\n   section 15 of RFC2543 MUST be used, unless there is an alternative\n
      \  protection scheme that is agreed between the parties. In either case,\n   the
      content of any message body (or bodies) carried within a PINT\n   request or
      response MUST be protected; this has implications on the\n   options for routing
      requests via Proxies (see 5.3).\n   Using SIP techniques for protection, the
      Request-URI and To: fields\n   headers within PINT requests cannot be protected.
      In  the baseline\n   PINT services these fields may contain sensitive information.
      This is\n   a consideration, and if these data ARE considered sensitive, then\n
      \  this will preclude the sole use of SIP techniques; in such a\n   situation,
      transport [12] or network layer [13] protection mechanisms\n   MUST be used.\n
      \  As a final point, this choice will in turn have an influence on the\n   choice
      of transport layer protocol that can be used; if a TLS\n   association is available
      between two nodes, then TCP will have to be\n   used. This is different from
      the default behaviour of SIP (try UDP,\n   then try TCP if that fails).\n"
    title: 5.4.  Summary of Security Implications
  title: 5.  Security Considerations
- contents:
  - "6. Deployment considerations and the Relationship PINT to I.N.\n   (Informative)\n"
  - contents:
    - "6.1. Web Front End to PINT Infrastructure\n   It is possible that some other
      protocol may be used to communicate a\n   Requesting User's requirements. Due
      to the high numbers of available\n   Web Browsers and servers it seems likely
      that some PINT systems will\n   use HTML/HTTP as a \"front end\". In this scenario,
      HTTP will be used\n   over a connection from the Requesting User's Web Browser
      (WC) to an\n   Intermediate Web Server (WS). This will be closely associated
      with a\n   PINT Client (using some unspecified mechanism to transfer the data\n
      \  from the Web Server to the PINT Client). The PINT Client will\n   represent
      the Requesting User to the PINT Gateway, and thus to the\n   Executive System
      that carries out the required action.\n    [WC]------[WS]\n              [PC]\n
      \               \\\n                 \\\n                [PG]\n                [XS]\n
      \               Figure 2: Basic \"Web-fronted\" Configuration\n"
    title: 6.1. Web Front End to PINT Infrastructure
  - contents:
    - "6.2. Redirects to Multiple Gateways\n   It is quite possible that a given PINT
      Gateway is associated with an\n   Executive System (or systems) that can connect
      to the GSTN at\n   different places. Equally, if there is a chain of PINT Servers,
      then\n   each of these intermediate or proxy servers (PP) may be able to route\n
      \  PINT requests to Executive Systems that connect at specific points to\n   the
      GSTN. The result of this is that there may be more than one PINT\n   Gateway
      or Executive System that can deal with a given request. The\n   mechanisms by
      which the choice on where to deliver a request are\n   outside the scope of
      this document.\n    [WC]------[WS]                 [WC]------[WS]\n              [PC]
      \                          [PC]\n                \\                              \\\n
      \                \\                              \\\n                [PG]                           [PP]\n
      \      .........[XS].........                  /  \\\n       :                    :
      \                /    \\\n                                           [PG]    [PG]\n
      \                                          [XS]    [XS]\n                 Figure
      3: Multiple Access Configurations\n   However, there do seem to be two approaches.
      Either a Server that\n   acts as a proxy or redirect will select the appropriate
      Gateway\n   itself and will cause the request to be sent on accordingly, or
      a\n   list of possible Locations will be returned to the Requesting User\n   from
      which they can select their choice.\n   In SIP, the implication is that, if
      a proxy cannot resolve to a\n   single unique match for a request destination,
      then a response\n   containing a list of the choices should be returned to the
      Requesting\n   User for selection. This is not too likely a scenario within
      the\n   normal use of SIP.\n   However, within PINT, such ambiguity may be quite
      common; it implies\n   that there are a number of possible providers of a given
      service.\n"
    title: 6.2. Redirects to Multiple Gateways
  - contents:
    - "6.3. Competing PINT Gateways REGISTERing to offer the same service\n   With
      PINT, the registration is not for an individual but instead for\n   a service
      that can be handled by a service provider. Thus, one can\n   envisage a registration
      by the PINT Server of the domain telcoA.com\n   of its ability to support the
      service R2C as \"R2C@telcoA.com\", sent\n   to an intermediary server that acts
      as registrar for the\n   \"broker.telcos.com\" domain from \"R2C@pint.telcoA.com\"
      as follows:\n         REGISTER sip:registrar@broker.telcos.com SIP/2.0\n         To:
      sip:R2C@pint.telcoA.com\n         From: sip:R2C@pint.telcoA.com\n         ...\n
      \  This is the standard SIP registration service.\n   However, what happens
      if there are a number of different Service\n   Providers, all of whom support
      the \"R2C\" service? Suppose there is a\n   PINT system at domain \"broker.com\".
      PINT clients requesting a\n   Request-to-Call service from broker.com might
      be very willing to be\n   redirected or proxied to any one of the various service
      providers\n   that had previously registered with the registrar. PINT servers
      might\n   also be interested in providing service for requests that did not\n
      \  specify the service provider explicitly, as well as those requests\n   that
      were directed \"at them\".\n   To enable such service, PINT servers would REGISTER
      at the broker\n   PINT server registrations of the form:\n         REGISTER
      sip:registrar@broker.com SIP/2.0\n         To: sip:R2C@broker.com\n         From:
      sip:R2C@pint.telcoA.com\n   When several such REGISTER messages appear at the
      registrar, each\n   differing only in the URL in the From: line, the registrar
      has many\n   possibilities, e.g.:\n   (i)  it overwrites the prior registration
      for \"R2C@broker.telcos.com\"\n        when the next comes in;\n   (ii) it rejects
      the subsequent registration for\n        \"R2C@broker.telcos.com\";\n   (iii)
      it maintains all such registrations.\n   In this last case, on receiving an
      Invitation for the \"general\"\n   service, either:\n       (iii.1) it passes
      on the invitation to all registered service\n               providers, returning
      a collated response with all\n               acceptances, using multiple Location:
      headers,\n   or\n       (iii.2) it silently selects one of the registrations
      (using, for\n               example, a \"round robin\" approach) and routes
      the Invitation\n               and response onwards without further comment.\n
      \  As an alternative to all of the above approaches, it:\n   (iv) may choose
      to not allow registrations for the \"general\" service,\n        rejecting all
      such REGISTER requests.\n   The algorithm by which such a choice is made will
      be implementation-\n   dependent, and is outside the scope of PINT. Where a
      behaviour is to\n   be defined by requesting users, then some sort of call processing\n
      \  language might be used to allow those clients, as a pre-service\n   operation,
      to download the behaviour they expect to the server making\n   such decisions.
      This, however, is a topic for other protocols, not\n   for PINT.\n"
    title: 6.3. Competing PINT Gateways REGISTERing to offer the same service
  - contents:
    - "6.4. Limitations on Available Information and Request Timing for\n     SUBSCRIBE\n
      \  A reference configuration for PINT is that service requests are sent,\n   via
      a PINT Gateway, to an Executive System that fulfills the Service\n   Control
      Function (SCF) of an Intelligent Network (see [11]). The\n   success or failure
      of the resulting service call may be information\n   available to the SCF and
      so may potentially be made available to the\n   PINT Gateway. In terms of historical
      record of whether or not a\n   service succeeded, a large SCF may be dealing
      with a million call\n   attempts per hour. Given that volume of service transactions,
      there\n   are finite limits beyond which it cannot store service disposition\n
      \  records; expecting to find out if a Fax was sent last month from a\n   busy
      SCF is unrealistic.\n   Other status changes, such as that on completion of
      a successful\n   service call, require the SCF to arrange monitoring of the
      service\n   call in a way that the service may not do normally, for performance\n
      \  reasons. In most implementations, it is difficult efficiently to\n   interrupt
      a service to change it once it has begun execution, so it\n   may be necessary
      to have two different services; one that sets GSTN\n   resources to monitor
      service call termination, and one that doesn't.\n   It is unlikely to be possible
      to decide that monitoring is required\n   once the service has started.\n   These
      factors can have implications both on the information that is\n   potentially
      available at the PINT Gateway, and when a request to\n   register interest in
      the status of a PINT service can succeed. The\n   alternative to using a general
      SCF is to provide a dedicated Service\n   Node just for PINT services. As this
      node is involved in placing all\n   service calls, it is in a position to collect
      the information needed.\n   However, it may well still not be able to respond
      successfully to a\n   registration of interest in call state changes once a
      service logic\n   program instance is running.\n   Thus, although a Requesting
      User may register an interest in the\n   status of a service request, the PINT
      Gateway may not be in a\n   position to comply with that request. Although this
      does not affect\n   the protocol used between the Requestor and the PINT Gateway,
      it may\n   influence the response returned. To avoid the problem of changing\n
      \  service logic once running, any registration of interest in status\n   changes
      should be made at or before the time at which the service\n   request is made.\n
      \  Conversely, if a historical request is made on the disposition of a\n   service,
      this should be done within a short time after the service\n   has completed;
      the Executive System is unlikely to store the results\n   of service requests
      for long; these will have been processed as AMA\n   (Automatic Message Accounting)
      records quickly, after which the\n   Executive System has no reason to keep
      them, and so they may be\n   discarded.\n   Where the PINT Gateway and the Executive
      System are intimately\n   linked, the Gateway can respond to status subscription
      requests that\n   occur while a service is running. It may accept these requests
      and\n   simply not even try to query the Executive System until it has\n   information
      that a service has completed, merely returning the final\n   status. Thus the
      PINT Requestor may be in what it believes is a\n   monitoring state, whilst
      the PINT Gateway has not even informed the\n   Executive System that a request
      has been made. This will increase the\n   internal complexity of the PINT Gateway
      in that it will have a\n   complex set of interlocking state machines, but does
      mean that status\n   registration and indication CAN be provided in conjunction
      with an\n   I.N. system.\n"
    title: 6.4. Limitations on Available Information and Request Timing for
  - contents:
    - "6.5. Parameters needed for invoking traditional GSTN Services within\n     PINT\n
      \  This section describes how parameters needed to specify certain\n   traditional
      GSTN services can be carried within PINT requests.\n"
    - contents:
      - "6.5.1. Service Identifier\n   When a Requesting User asks for a service to
        be performed, he or she\n   will, of course, have to specify in some way which
        service. This can\n   be done in the URLs within the To: header and the Request-URI
        (see\n   section 3.5.5.1).\n"
      title: 6.5.1. Service Identifier
    - contents:
      - "6.5.2. A and B parties\n   With the Request-to-Call service, they will also
        need to specify the\n   A and B parties they want to be engaged in the resulting
        service\n   call. The A party could identify, for example, the Call Center
        from\n   which they want a call back, whilst the B party is their telephone\n
        \  number (i.e. who the Call Center agent is to call).\n   The Request-to-Fax
        and Request-to-Hear-Content services require the B\n   party to be specified
        (respectively the telephone number of the\n   destination Fax machine or the
        telephone to which spoken content is\n   to be delivered), but the A party
        is a Telephone Network based\n   resource (either a Fax or speech transcoder/sender),
        and is implicit;\n   the Requesting User does not (and cannot) specify it.\n
        \  With the \"Fax-Back\" variant of the Request-to-Fax service, (i.e.\n   where
        the content to be delivered resides on the GSTN) they will also\n   have specify
        two parties. As before, the B party is the telephone\n   number of the fax
        machine to which they want a fax to be sent.\n   However, within this variant
        the A party identifies the \"document\n   context\" for the GSTN-based document
        store from which a particular\n   document is to be retrieved; the analogy
        here is to a GSTN user\n   dialling a particular telephone number and then
        entering the document\n   number to be returned using \"touch tone\" digits.
        The telephone number\n   they dial is that of the document store or A party,
        with the \"touch\n   tone\" digits selecting the document within that store.\n"
      title: 6.5.2. A and B parties
    - contents:
      - "6.5.3. Other Service Parameters\n   In terms of the extra parameters to the
        request, the services again\n   differ. The Request-to-Call service needs
        only the A and B parties.\n   Also it is convenient to assert that the resulting
        service call will\n   carry voice, as the Executive System within the destination
        GSTN may\n   be able to check that assertion against the A and B party numbers\n
        \  specified and may treat the call differently.\n   With the Request-to-Fax
        and Request-to-Hear-Content services, the\n   source information to be transcoded
        is held on the Internet. That\n   means either that this information is carried
        along with the request\n   itself, or that a reference to the source of this
        information is\n   given.\n   In addition, it is convenient to assert that
        the service call will\n   carry fax or voice, and, where possible, to specify
        the format for\n   the source information.\n   The GSTN-based content or \"Fax-Back\"
        variant of the Request-to-Fax\n   service needs to specify the Document Store
        number and the Fax\n   machine number to which the information is to be delivered.
        It is\n   convenient to assert that the call will carry Fax data, as the\n
        \  destination Executive System may be able to check that assertion\n   against
        the document store number and that of the destination Fax\n   machine.\n   In
        addition, the document number may also need to be sent. This\n   parameter
        is an opaque reference that is carried through the Internet\n   but has significance
        only within the GSTN. The document store number\n   and document number together
        uniquely specify the actual content to\n   be faxed.\n"
      title: 6.5.3. Other Service Parameters
    - contents:
      - "6.5.4. Service Parameter Summary\n   The following table summarises the information
        needed in order to\n   specify fully the intent of a GSTN service request.
        Note that it\n   excludes any other parameters (such as authentication or\n
        \  authorisation tokens, or Expires: or CallId: headers) that may be\n   used
        in a request.\n"
      - 'Service   ServiceID   AParty    BParty   CallFmt    Source   SourceFmt

        '
      - "-------   ---------   ------    ------   -------    ------    -------\n  R2C
        \        x         x         x       voice       -          -\n  R2F         x
        \        -         x        fax      URI/IL    ISF/ILSF\n  R2FB        x         x
        \        x        fax        OR         -\n  R2HC        x         -         x
        \      voice     URI/IL    ISF/ILSF\n   In this table, \"x\" means that the
        parameter is required, whilst \"-\"\n   means that the parameter is not required.\n
        \  The Services listed are Request-to-Call (R2C), Request-to-Fax (R2F),\n
        \  the GSTN-based content or \"Fax-back\" Variant of Request-to-Fax\n   (R2FB),
        and Request-to-Hear-Content (R2HC).\n   The Call Format parameter values \"voice\"
        or \"fax\" indicate the kind\n   of service call that results.\n   The Source
        Indicator \"URI/IL\" implies that the information is either\n   an Internet
        source reference (a Universal Resource Identifier, or\n   URI) or is carried
        \"in-line\" with the message. The Source indicator\n   \"OR\" means that the
        value passed is an Opaque Reference that should\n   be carried along with
        the rest of the message but is to be\n   interpreted only within the destination
        (GSTN) context. As an\n   alternative, it could be given as a \"local\" reference
        with the \"file\"\n   style, or even using a partial reference with the \"http\"
        style.\n   However, the way in which such a reference is interpreted is a
        matter\n   for the receiving PINT Server and Executive System; it remains,
        in\n   effect, an opaque reference.\n   The Source Format value \"ISF/ILSF\"
        means that the format of the\n   source is specified either in terms of the
        URI or that it is carried\n   \"in-line\".  Note that, for some data, the
        format either can be\n   detected by inspection or, if all else fails, can
        be assumed from the\n   URI (for example, by assuming that the file extension
        part of a URL\n   indicates the data type). For an opaque reference, the Source
        Format\n   is not available on the Internet, and so is not given.\n"
      title: 6.5.4. Service Parameter Summary
    title: 6.5. Parameters needed for invoking traditional GSTN Services within
  - contents:
    - "6.6. Parameter Mapping to PINT Extensions\n   This section describes the way
      in which the parameters needed to\n   specify a GSTN service request fully might
      be carried within a \"PINT\n   extended\" message. There are other choices,
      and these are not\n   precluded. However, in order to ensure that the Requesting
      User\n   receives the service that they expect, it is necessary to have some\n
      \  shared understanding of the parameters passed and the behaviour\n   expected
      of the PINT Server and its attendant Executive System.\n   The Service Identifier
      can be sent as the userinfo element of the\n   Request-URI. Thus, the first
      line of a PINT Invitation would be of\n   the form:\n         INVITE <serviceID>@<pint-server>.<domain>
      \ SIP/2.0\n   The A Party for the Request-to-Call and \"Fax-back\" variant of\n
      \  Request-to-Fax service can be held in the \"To:\" header field. In this\n
      \  case the \"To:\" header value will be different from the Request-URI.\n   In
      the services where the A party is not specified, the \"To:\" field\n   is free
      to repeat the value held in the Request-URI. This is the case\n   for Request-to-Fax
      and Request-to-Hear-Content services.\n   The B party is needed in all these
      milestone services, and can be\n   held in the enclosed SDP sub-part, as the
      value of the \"c=\" field.\n   The call format parameter can be held as part
      of the \"m=\" field\n   value.  It maps to the \"transport protocol\" element
      as described in\n   section 3.4.2 of this document.\n   The source format specifier
      is held in the \"m=\", as a type and either\n   \"-\" or sub-type. The latter
      is normally required for all services\n   except Request-to-Call or \"Faxback\",
      where the \"-\" form may be used.\n   As shown earlier, the source format and
      source are not always\n   required when generating requests for services. However,
      the\n   inclusion in all requests of a source format specifier can make\n   parsing
      the request simpler and allows for other services to be\n   specified in the
      future, and so values are always given. The source\n   format parameter is covered
      in section 3.4.2 as the \"media type\"\n   element.\n   The source itself is
      identified by an \"a=fmtp:\" field value, where\n   needed. With the exception
      of the Request-to-Call service, all\n   invitations will normally include such
      a field. From the perspective\n   of the SDP extensions, it can be considered
      as qualifying the media\n   sub-type, as if to say, for example, \"when I say
      jpeg, what I mean is\n   the following\".\n   In summary, the parameters needed
      by the different services are\n   carried in fields as shown in the following
      table:\n"
    - 'Service   Svc Param    PINT/SIP or SDP field used      Example value

      '
    - "-------   ---------    --------------------------      -------------\n  R2C\n
      \         ServiceID:   <SIP Request-URI userinfo>      R2C\n          AParty:
      \     <SIP To: field>                 sip:123@p.com\n          BParty:      <SDP
      c= field>                  TN RFC2543 4567\n          CallFormat:  <SDP transport
      protocol\n                            sub-field of m= field>     voice\n          SourceFmt:
      \  <SDP media type sub-field\n                            of m= field>               audio\n
      \                      (--- only \"-\" sub-type\n                            sub-field
      value used)      ---\n          Source:      (--- No source specified)       ---\n
      \ R2F\n          ServiceID:   <SIP Request-URI userinfo>      R2F\n          AParty:
      \     (--- SIP To: field not used) sip:R2F@pint.xxx.net\n          BParty:      <SDP
      c= field>               TN RFCxxx +441213553\n          CallFormat:  <SDP transport
      protocol\n                            sub-field of m= field>     fax\n          SourceFmt:
      \  <SDP media type sub-field\n                            of m= field>               image\n
      \                      <SDP media sub-type sub-field\n                            of
      m= field>               jpeg\n          Source:      <SDP a=fmtp: field qualifying\n
      \                           preceding m= field>    a=fmtp:jpeg<uri-ref>\n  R2FB\n
      \         ServiceID:   <SIP Request-URI userinfo>      R2FB\n          AParty:
      \     <SIP To: field>              sip:1-730-1234@p.com\n          BParty:      <SDP
      c= field>               TN RFCxxx +441213553\n          CallFormat:  <SDP transport
      protocol\n                            sub-field of m= field>     fax\n          SourceFmt:
      \  <SDP media type sub-field\n                            of m= field>               image\n
      \                      <SDP media sub-type sub-field\n                            of
      m= field>               jpeg\n          Source:      <SDP a=fmtp: field qualifying\n
      \                           preceding m= field>     a=fmtp:jpeg opr:1234\n  R2HC\n
      \         ServiceID:   <SIP Request-URI userinfo>      R2HC\n          AParty:
      \     (--- SIP To: field not used) sip:R2HC@pint.ita.il\n          BParty:      <SDP
      c= field>               TN RFCxxx +441213554\n          CallFormat:  <SDP transport
      protocol\n                            sub-field of m= field>     voice\n          SourceFmt:
      \  <SDP media type sub-field\n                            of m= field>               text\n
      \                      <SDP media sub-type sub-field\n                            of
      m= field>               html\n          Source:      <SDP a=fmtp: field qualifying\n
      \                           preceding m= field>     a=fmtp:html<uri-ref>\n"
    title: 6.6. Parameter Mapping to PINT Extensions
  title: 6. Deployment considerations and the Relationship PINT to I.N.
- contents:
  - "7. References\n   [1]  Handley, M., Schooler, E., Schulzrinne, H. and J. Rosenberg,\n
    \       \"SIP: Session Initiation Protocol\", RFC 2543, March 1999.\n   [2]  Handley,
    M. and  V. Jacobsen, \"SDP: Session Description\n        Protocol\", RFC 2327,
    April 1998.\n   [3]  Freed, N. and  N. Borenstein, \"Multipurpose Internet Mail\n
    \       Extensions (MIME) Part One: Format of Internet Message Bodies\",\n        RFC
    2045, November 1996.\n   [4]  Freed, N. and N. Borenstein, \"Multipurpose Internet
    Mail\n        Extensions (MIME) Part Two: Media Types\", RFC 2046, November\n
    \       1996.\n   [5]  The Unicode Consortium, \"The Unicode Standard -- Version
    2.0\",\n        Addison-Wesley, 1996.\n   [6]  ITU-T Study Group 2, \"E.164 -
    The International Public Network\n        Numbering Plan\", ITU-T, June 1997.\n
    \  [7]  Lu, H., Krishnaswamy, M., Conroy, L., Bellovin, S., Burg, F.,\n        DeSimone,
    A., Tewani, K., Davidson, P., Schulzrinne, H. and K.\n        Vishwanathan \"Toward
    the PSTN/Internet Inter-Networking--Pre-\n        PINT Implementations\", RFC
    2458, November 1998.\n   [8]  ITU-T Study Group XI, \"Q.763 - Formats and Codes
    for the ISDN\n        User Part of SS No7\" ITU-T, August 1994.\n   [9]  Berners-Lee,
    T., Fielding, R. and L. Masinter, \"Uniform Resource\n        Identifiers (URI):
    Generic Syntax\", RFC 2396, August 1998.\n   [10] Crocker, D., \"Standard for
    the format of ARPA Internet text\n        messages\", STD 11, RFC 822, August
    1982.\n   [11] ITU-T Study Group XI, \"Q.1204 - IN Distributed Functional Plane\n
    \       Architecture\", ITU-T, February 1994.\n   [12] Dierks, T. and C. Allen,
    \"The TLS Protocol Version 1.0\", RFC\n        2246, January 1999.\n   [13] Kent,
    S. and R. Atkinson, \"Security Architecture for the\n        Internet Protocol\",
    RFC 2401, November 1998.\n   [14] Housley, R., Ford, W., Polk W. and D. Solo,
    \"Internet X.509\n        Public Key Infrastructure Certificate and CRL Profile\",
    RFC\n        2459, January 1999.\n   [15] Crocker, D. and P. Overall, \"Augmented
    BNF for Syntax\n        Specifications: ABNF\", RFC 2234, November 1997.\n   [16]
    Mills, D., \"Network Time Protocol (version 3) specification and\n        implementation\",
    RFC 1305, March 1992.\n   [17] Eastlake, D., Crocker, S. and J.Schiller, \"Randomness\n
    \       Recommendations for Security\", RFC 1750, December 1994.\n   [18] Mockapetris,
    P., \"Domain Names - Implementation and\n        Specification\", STD 13, RFC
    1035, November 1987.\n   [19] Levinson, E., \"The MIME Multipart/Related Content-type\"
    RFC\n        2387, August 1998.\n"
  title: 7. References
- contents:
  - "8. Acknowledgements\n   The authors wish to thank the members of the PINT working
    group for\n   comments that were helpful to the preparation of this specification.\n
    \  Ian Elz's comments were extremely useful to our understanding of\n   internal
    PSTN operations. The SUBSCRIBE and NOTIFY requests were\n   first suggested by
    Henning Schulzrinne and Jonathan Rosenberg. The\n   suggestion to use an audio
    port of 0 to express that the phone is \"on\n   hold\" (i.e. not receiving voice)
    is due to Ray Zibman. Finally,\n   thanks to Bernie Hoeneisen for his close proofreading.\n"
  title: 8. Acknowledgements
- contents:
  - 'Appendix A: Collected ABNF for PINT Extensions

    '
  - ';; --(ABNF is specified in RFC 2234 [15])

    '
  - ';; --Variations on SDP definitions

    '
  - "connection-field    = [\"c=\" nettype space addrtype space\n                        connection-address
    CRLF]\n"
  - '; -- this is the original definition from SDP, included for completeness

    '
  - '; -- the following are PINT interpretations and modifications

    '
  - 'nettype = ("IN"/"TN")

    '
  - '; -- redefined as a superset of the SDP definition

    '
  - 'addrtype = (INAddrType / TNAddrType)

    '
  - '; -- redefined as a superset of the SDP definition

    '
  - 'INAddrType = ("IP4"/"IP6")

    '
  - '; -- this non-terminal added to hold original SDP address types

    '
  - 'TNAddrType = ("RFC2543"/OtherAddrType)

    '
  - 'OtherAddrType = (<X-Token>)

    '
  - '; -- X-token is as defined in RFC2045

    '
  - 'addr = (<FQDN> / <unicast-address> / TNAddr)

    '
  - '; -- redefined as a superset of the original SDP definition

    '
  - '; -- FQDN and unicast address as specified in SDP

    '
  - 'TNAddr = (RFC2543Addr/OtherAddr)

    '
  - '; -- TNAddr defined only in context of nettype == "TN"

    '
  - 'RFC2543Addr = (INPAddr/LDPAddr)

    '
  - 'INPAddr = "+" <POS-DIGIT> 0*(("-" <DIGIT>)/<DIGIT>)

    '
  - '; -- POS-DIGIT and DIGIT as defined in SDP

    '
  - 'LDPAddr = <DIGIT> 0*(("-" <DIGIT>)/<DIGIT>)

    '
  - 'OtherAddr = 1*<uric>

    '
  - '; -- OtherAdd defined in the context of OtherAddrType

    '
  - '; -- uric is as defined in RFC2396

    '
  - "media-field = \"m=\" media <space> port <space> proto\n                   1*(<space>
    fmt) <CRLF>\n"
  - '; -- NOTE redefined as subset/relaxation of original SDP definition

    '
  - '; -- space and CRLF as defined in SDP

    '
  - 'media = ("application"/"audio"/"image"/"text")

    '
  - '; -- NOTE redefined as a subset of the original SDP definition

    '
  - '; -- This could be any MIME discrete type; Only those listed are

    '
  - '; --  used in PINT 1.0

    '
  - 'port = ("0" / "1")

    '
  - '; -- NOTE redefined from the original SDP definition;

    '
  - '; -- 0 retains usual sdp meaning of "temporarily no media"

    '
  - '; -- (i.e. "line is on hold")

    '
  - '; -- (1 means there is media)

    '
  - 'proto = (INProto/TNProto)

    '
  - '; -- redefined as a superset of the original SDP definition

    '
  - 'INProto = 1* (<alpha-numeric>)

    '
  - '; -- this is the "classic" SDP protocol, defined if nettype == "IN"

    '
  - '; -- alpha-numeric is as defined in SDP

    '
  - 'TNProto = ("voice"/"fax"/"pager")

    '
  - '; -- this is the PINT protocol, defined if nettype == "TN"

    '
  - 'fmt = (<subtype> / "-")

    '
  - '; -- NOTE redefined as a subset of the original SDP definition

    '
  - '; -- subtype as defined in RFC2046, or "-". MUST be a subtype of type

    '
  - 'held

    '
  - '; --  in associated media sub-field or the special value "-".

    '
  - 'attribute-fields = *("a=" attribute-list <CRLF>)

    '
  - '; -- redefined as a superset of the definition given in SDP

    '
  - '; -- CRLF is as defined in SDP

    '
  - 'attribute-list = 1(PINT-attribute / <attribute>)

    '
  - '; -- attribute is as defined in SDP

    '
  - "PINT-attribute = (clir-attribute / q763-nature-attribute /\n                   q763plan-attribute
    / q763-INN-attribute /\n                   phone-context-attribute / tsp-attribute
    /\n                   pint-fmtp-attribute / strict-attribute)\n"
  - 'clir-attribute = clir-tag ":" ("true" / "false")

    '
  - 'clir-tag = "clir"

    '
  - 'q763-nature-attribute = Q763-nature-tag ":" q763-natures

    '
  - 'q763-nature-tag = "Q763-nature"

    '
  - 'q763-natures = ("1" / "2" / "3" / "4")

    '
  - 'q763-plan-attribute = Q763-plan-tag ":" q763-plans

    '
  - 'q763-plan-tag = "Q763-plan"

    '
  - 'q763-plans = ("1" / "2" / "3" / "4" / "5" / "6" / "7")

    '
  - '; -- of these, the meanings of 1, 3, and 4 are defined in the text

    '
  - 'q763-INN-attribute = Q763-INN-tag ":" q763-INNs

    '
  - 'q763-INN-tag = "Q763-INN"

    '
  - 'q763-INNs = ("0" / "1")

    '
  - 'phone-context-attribute = phone-context-tag ":" phone-context-ident

    '
  - 'phone-context-tag = "phone-context"

    '
  - 'phone-context-ident = network-prefix / private-prefix

    '
  - 'network-prefix = intl-network-prefix / local-network-prefix

    '
  - 'intl-network-prefix = "+" 1*<DIGIT>

    '
  - 'local-network-prefix = 1*<DIGIT>

    '
  - 'private-prefix = 1*excldigandplus 0*<uric>

    '
  - 'excldigandplus = (0x21-0x2d,0x2f,0x40-0x7d))

    '
  - 'tsp-attribute = tsp-tag "=" provider-domainname

    '
  - 'tsp-tag = "tsp"

    '
  - 'provider-domainname = <domain>

    '
  - '; -- domain is defined in RFC1035

    '
  - '; -- NOTE the following is redefined relative to the normal use in SDP

    '
  - "pint-fmtp-attribute = \"fmtp:\" <subtype> <space> resolution\n                      *(<space>
    resolution)\n                      (<space> \";\" 1(<attribute>) *(<space>\n"
  - '<attribute>))

    '
  - '; -- subtype as defined in RFC2046.

    '
  - '; -- NOTE that this value MUST match a fmt on the ultimately preceeding

    '
  - '; --  media-field

    '
  - '; -- attribute is as defined in SDP

    '
  - 'resolution = (uri-ref / opaque-ref / sub-part-ref)

    '
  - 'uri-ref = uri-tag ":" <URI-Reference>

    '
  - '; -- URI-Reference defined in RFC2396

    '
  - 'uritag = "uri"

    '
  - 'opaque-ref = opr-tag ":" 0*<uric>

    '
  - 'opr-tag = "opr"

    '
  - 'sub-part-ref = spr-tag ":" <Content-ID>

    '
  - '; -- Content-ID is as defined in RFC2046 and RFC822

    '
  - 'spr-tag = "spr"

    '
  - 'strict-attribute = "require:" att-tag-list

    '
  - "att-tag-list = 1(PINT-att-tag-list / <att-field> /\n                    pint-fmtp-tag-list)\n
    \                 *(\",\"\n                    (PINT-att-tag-list / <att-field>
    /\n                      pint-fmtp-tag-list)\n                   )\n"
  - '; -- att-field as defined in SDP

    '
  - "PINT-att-tag-list = (phone-context-tag / clir-tag /\n                       q763-nature-tag
    / q763-plan-tag /\n                       q763-INN-tag)\n"
  - 'pint-fmtp-tag-list = (uri-tag / opr-tag / spr-tag)

    '
  - ';; --Variations on SIP definitions

    '
  - 'clir-parameter = clir-tag "=" ("true" / "false")

    '
  - 'q763-nature-parameter = Q763-nature-tag "=" Q763-natures

    '
  - 'q763plan-parameter = Q763-plan-tag "=" q763plans

    '
  - 'q763-INN-parameter = Q763-INN-tag "=" q763-INNs

    '
  - 'tsp-parameter = tsp-tag "=" provider-domainname

    '
  - 'phone-context-parameter = phone-context-tag "=" phone-context-ident

    '
  - "SIP-param = ( <transport-param> / <user-param> / <method-param> /\n                <ttl-param>
    / <maddr-param> / <other-param> )\n"
  - '; -- the values in this list are all as defined in SIP

    '
  - "PINT-param = ( clir-parameter / q763-nature-parameter /\n                q763plan-parameter
    / q763-INN-parameter/\n                tsp-parameter / phone-context-parameter
    )\n"
  - 'URL-parameter = (SIP-param / PINT-param)

    '
  - '; -- redefined SIP''s URL-parameter to include ones defined in PINT

    '
  - "Require-header = \"require:\" 1(required-extensions)\n                             *(\",\"
    required-extensions)\n"
  - '; -- NOTE this is redefined as a subset of the SIP definition

    '
  - '; -- (from RFC2543/section 6.30)

    '
  - "required-extensions = (\"org.ietf.sip.subscribe\" /\n                       \"org.ietf.sdp.require\")\n"
  title: 'Appendix A: Collected ABNF for PINT Extensions'
- contents:
  - "Appendix B: IANA Considerations\n   There are three kinds of identifier used
    in PINT extensions that\n   SHOULD be registered with IANA, if a new value is
    specified. These\n   are:\n   *  Media Format sub-types, as described in section
    3.4.2 of this\n      document.\n   *  Private Attributes as mentioned in section
    3.4.3\n   *  Private Phone Context values, as described in section 3.4.3.1.\n
    \  It should be noted that private Address Types (in section 3.4.1) have\n   been
    explicitly excluded from this process, as they must be in the\n   form of an X-Token.\n"
  - contents:
    - "B.1. Media Format Sub-types\n   Taking these in turn, the media format sub-types
      are used within the\n   PINT extensions to SDP to specify the attribute line
      that holds the\n   data source definitions. In normal use, the values in this
      field are\n   sub-types of MIME discrete types[4]. If a value other than an
      IANA-\n   registered sub-type is to be used, then it should either be an X-\n
      \  Token (i.e. start with \"X-\") or it should be registered with IANA. if\n
      \  the intention is to describe a new MIME sub-type, then the procedures\n   specified
      in RFC 2048 should be used. It is ASSUMED that any new MIME\n   sub-type would
      follow the syntactic rules for interpretation of\n   associated PINT fmtp lines
      defined in this document.\n   Note that, in keeping with the SDP description,
      such registrations\n   SHOULD include the \"proto\" field values within which
      they are\n   defined; however, it is appropriate to specify only that they can
      be\n   used with \"all values of TNProto\".\n   Conversely, if the intent is
      to define a new way of including data\n   source definitions within PINT, then
      it will be necessary to specify,\n   in the documentation supporting any such
      new \"PINT Media Format Sub-\n   type\" registration, the syntax of the associated
      \"fmtp\" attribute\n   line, as the identifier serves to indicate the interpretation
      that\n   should be made of format specific attribute lines \"tagged\" with such\n
      \  a sub-type.\n   If the fmtp interpretation follows the PINT default, then
      it is\n   adequate to mention this in the defining document rather than\n   repeating
      the syntax definition given here (although, in this case,\n   it is unclear
      why such a new registration would be required). As\n   before, the Media Format
      sub-type SHOULD specify the values of\n   \"proto\" field within which it is
      defined, but this can be \"all values\n   of TNProto\".\n"
    title: B.1. Media Format Sub-types
  - contents:
    - "B.2. Private Attributes\n   Any proprietary attribute lines that are added
      may be registered with\n   IANA using the procedures mentioned in [2]; the mechanism
      is the same\n   as that used in SDP. If the attribute is defined for use only
      within\n   PINT, then it may be appropriate to mention this in the supporting\n
      \  documentation. Note that, in the PINT 1.0 specification covered here,\n   there
      is no mechanism to add such freshly registered attribute lines\n   to a \"require:\"
      clause.\n"
    title: B.2. Private Attributes
  - contents:
    - "B.3. Private phone-contexts\n   Within the session description used for PINT
      requests, a phone-\n   context attribute may be used to specify the prefix or
      context within\n   which an associated telephone-number (in a connection line)
      should be\n   interpreted.\n   For \"public\" phone contexts the prefix to be
      used MUST start with\n   either a DIGIT or a \"+\". Private phone contexts may
      be registered\n   with IANA that do NOT start with either of these characters.
      Such a\n   prefix may be useful to identify a private network, potentially with\n
      \  an associated numeric ID (see example 4 in section 3.4.3.1). In the\n   example,
      the prefix acts as the context for X-acme.com's private\n   network numbering
      plan.\n   It is recommended that any private context to be registered have the\n
      \  general form of a token including a domain name, optionally followed\n   by
      a digit string or other token. The appropriate form of the initial\n   token
      name space will be similar to that used for private or vendor\n   registrations
      for sub-types (e.g. vnd.acme.com). However, note that\n   the registration will
      be used to specify a customer's private network\n   numbering plan format rather
      than being used generally for all of\n   their equipment vendor's customer's;
      thus, fbi.gov would be\n   appropriate, but lucent.com would not (unless the
      private network\n   were to be that used by Lucent internally).\n   In addition,
      the supporting documentation MUST either declare that\n   there is no associated
      token, or define the syntax by which that\n   token can be parsed (e.g. vnd.fbi.gov
      <space> 1*DIGIT). Note that the\n   registration describes a format, not a value
      range; it is sufficient\n   that the private context can be parsed, without
      the value being\n   interpreted.\n   In detail, the registration request SHOULD
      include:\n   *  Kind of registration (i.e. private phone-context attribute to
      be\n      used within the service description of PINT service requests)\n   *
      \ Contact details for the person responsible for the registration\n      request
      (name, organisation, e-mail address, public telephone\n      number)\n   *  Private
      Prefix initial token name (e.g. vnd.fbi.gov)\n   *  syntax for private context
      (e.g. \"vnd.fbi.gov\" <space> 1*DIGIT, or\n      \"vnd.gtn.gov.uk\")\n   *  Description
      of use (e.g. \"This phone context declares an\n      associated telephone number
      to be within the 'government\n      telecommunications network'; the number
      is in an internal or\n      private number plan form)\n   *  Network Type and
      Address Type with which this private context is\n      associated; If the \"normal\"
      telephone types (as specified in this\n      document) are used, then the values
      would be shown as:\n      \"nettype=TN\" , addrtype=\"RFC2543Addr\". If, however,
      this context\n      were to be used with another address type, then a reference
      to\n      that address type name and the syntax of that address value would\n
      \     be required.\n   In short, this context is the telephone equivalent of
      a \"Net 10\"\n   address space behind a NAT, and the initial name (and contact\n
      \  information) shows the context within which that address is valid. It\n   also
      specifies the format for the network and address types (and\n   address value
      syntax) with which this context is associated.\n   Of course, IANA may refer
      the requested registration to the IESG or\n   an appropriate IETF working group
      for review, and may require\n   revisions to be made before the registration
      is accepted.\n"
    title: B.3. Private phone-contexts
  title: 'Appendix B: IANA Considerations'
- contents:
  - "Authors' Addresses\n   Scott Petrack\n   MetaTel, Inc.\n   45 Rumford Ave.\n
    \  Waltham MA 02453-3844\n   Phone: +1 (781)-891-9000\n   EMail: scott.petrack@metatel.com\n
    \  Lawrence Conroy\n   Siemens Roke Manor Research\n   Roke Manor\n   Old Salisbury
    Lane\n   Romsey, Hampshire\n   U.K.    SO51 0ZN\n   Phone: +44 (1794) 833666\n
    \  EMail: lwc@roke.co.uk\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
