- title: __initial_text__
  contents:
  - "                       Out-of-Band Control Signals\n                        \
    \ Host-to-Host Protocol\n"
- title: This note addresses the problem of implementing a reliable out-of-band
  contents:
  - 'This note addresses the problem of implementing a reliable out-of-band

    '
- title: signal for use in a host-to-host protocol.  It is motivated by the fact
  contents:
  - 'signal for use in a host-to-host protocol.  It is motivated by the fact

    '
- title: that such a satisfactory mechanism does not exist in the Transmission
  contents:
  - 'that such a satisfactory mechanism does not exist in the Transmission

    '
- title: Control Protocol (TCP) of Cerf et. al. [reference 4, 6]  In addition to
  contents:
  - 'Control Protocol (TCP) of Cerf et. al. [reference 4, 6]  In addition to

    '
- title: discussing some requirements for such an out-of-band signal (interrupts)
  contents:
  - 'discussing some requirements for such an out-of-band signal (interrupts)

    '
- title: and the implications for the implementation of the requirements, a
  contents:
  - 'and the implications for the implementation of the requirements, a

    '
- title: discussion of the problem for the TCP case will be presented.
  contents:
  - 'discussion of the problem for the TCP case will be presented.

    '
- title: While the ARPANET host-to-host protocol does not support reliable
  contents:
  - 'While the ARPANET host-to-host protocol does not support reliable

    '
- title: transmission of either data or controls, it does meet the other
  contents:
  - 'transmission of either data or controls, it does meet the other

    '
- title: requirements we have for an out-of-band control signal and will be drawn
  contents:
  - 'requirements we have for an out-of-band control signal and will be drawn

    '
- title: upon to provide a solution for the TCP case.
  contents:
  - 'upon to provide a solution for the TCP case.

    '
- title: The TCP currently handles all data and controls on the same logical
  contents:
  - 'The TCP currently handles all data and controls on the same logical

    '
- title: channel.  To achieve reliable transmission, it provides positive
  contents:
  - 'channel.  To achieve reliable transmission, it provides positive

    '
- title: acknowledgement and retransmission of all data and most controls.  Since
  contents:
  - 'acknowledgement and retransmission of all data and most controls.  Since

    '
- title: interrupts are on the same channel as data, the TCP must flush data
  contents:
  - 'interrupts are on the same channel as data, the TCP must flush data

    '
- title: whenever an interrupt is sent so as not to be subject to flow control.
  contents:
  - 'whenever an interrupt is sent so as not to be subject to flow control.

    '
- title: Functional Requirements
  contents:
  - "Functional Requirements\n   It is desirable to insure reliable delivery of an\
    \ interrupt.  The\n   sender must be assured that one and only one interrupt is\
    \ delivered\n   at the destination for each interrupt it sends.  The protocol\
    \ need\n   not be concerned about the order of delivery of interrupts to the\n\
    \   user.\n   The interrupt signal must be independent of data flow control\n\
    \   mechanisms.  An interrupt must be delivered whether or not there are\n   buffers\
    \ provided for data, whether or not other controls are being\n   handled.  The\
    \ interrupt should not interfere with the reliable\n   delivery of other data\
    \ and controls.\n   The host-to-host protocol need not provide synchronization\
    \ between\n   the interrupt channel and the data-control channel.  In fact, if\n\
    \   coupling of the channels relies on the advancement of sequence\n   numbers\
    \ on the data-control channel, then the interrupt channel is no\n   longer independent\
    \ of flow control as required above.  The\n   synchronization with the data stream\
    \ can be performed by the user by\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - "Out-of-Band Control Signals\n   marking the data stream when an interrupt is\
    \ generated.  The\n   interrupt need not be coupled with other controls since\
    \ it in no way\n   affects the state of a connection.\n   Once the interrupt has\
    \ been delivered to the user, no other semantics\n   are associated with it at\
    \ the host-to-host level.\n"
- title: Implications
  contents:
  - "Implications\n   To provide for reliable delivery and accountability of interrupt\n\
    \   delivery, an acknowledgement scheme is required.  To associate\n   interrupt\
    \ acknowledgements with the correct interrupt, some naming\n   convention for\
    \ interrupts is necessary.  Sequence numbers provide\n   such a naming convention,\
    \ along with the potential for providing an\n   ordering mechanism.\n   A separate\
    \ interrupt channel is required to make interrupts\n   independent of flow control.\
    \  A separate sequence number space for\n   naming interrupts is also necessary.\
    \  If the sequence numbers are\n   from the same sequence number space as some\
    \ other channel, then\n   sending an interrupt can be blocked by the need to resynchronize\
    \ the\n   sequence numbers on that channel.\n   In the current TCP, which uses\
    \ one channel for data, controls, and\n   interrupts, flushing of data is combined\
    \ with the interrupt to bypass\n   the flow control mechanism.  However, flushing\
    \ of resynchronization\n   controls is not allowed and receipt of these controls\
    \ is dependent on\n   the acknowledgement of all previous data.  The ARPANET protocol,\n\
    \   while not providing for reliable transmission, does provide for the\n   separation\
    \ of the interrupt-control channel and the data channel.\n"
- title: Multiple Channels and Sequence Numbers
  contents:
  - "Multiple Channels and Sequence Numbers\n   If multiple channels are to be used\
    \ for a connection, then it becomes\n   interesting to determine how the sequence\
    \ numbers of the channels can\n   be coupled so that sequence number maintenance\
    \ can be done\n   efficiently.\n   Assigning sequence numbers to each octet of\
    \ data and control, as in\n   the TCP, allows positive acknowledgement and ordering.\
    \  However,\n   since packets are retransmitted on timeout, and since multi-path\n\
    \   packet switch networks can cause a packet to stay around for a long\n   time,\
    \ the presence of duplicate packets and out-of-order packets must\n   be accounted\
    \ for.  A sequence number acceptability test must be\n   performed on each packet\
    \ received to determine if one of the\n   following actions should be taken:\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - "Out-of-Band Control Signals\n      Acknowledge the packet and pass it on to the\
    \ user.\n      Acknowledge the packet, but do not send it to the user, since it\n\
    \      has already been delivered.\n      Discard the packet; the sequence number\
    \ is not believable.\n   Acceptability on Channel 0\n      To determine the action\
    \ to be taken for a packet, acceptability\n      ranges are defined.  The following\
    \ three ranges are mutually\n      exclusive and collectively exhaustive of the\
    \ sequence number space\n      (see Figure 1):\n         Ack-deliver range (ADR)\n\
    \         Ack-only range (AOR)\n         Discard range (DR)\n                \
    \    ACCEPTABILITY RANGES\n          DR       AOR             ADR            \
    \  DR\n              !           ! FCLE               ! DRLE\n            AOLE\
    \       AORE                 ADRE\n                          Figure 1\n      Let\
    \  S = size of sequence number space (number per octet)\n         x = sequence\
    \ number to be tested\n         FCLE = flow control left window edge\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - "Out-of-Band Control Signals\n         ADRE = (FCLE+ADR) mod S = Ack-deliver right\
    \ edge (Discard\n                  left edge - 1)\n         AOLE = (FCLE-AOR)\
    \ mod S =  Ack-only left edge (Discard\n                  right edge + 1)\n  \
    \       TSE = time since connection establishment (in sec)\n         MPL = maximum\
    \ packet lifetime (in sec)\n         TB = TCP bandwidth (in octets/sec)\n    \
    \  For any sequence number, x, and packet text length, l, if\n         (AOLE <=\
    \ x <= ADRE) mod S  and\n         (AOLE <= x+l-1 <= ADRE) mod S\n      then the\
    \ packet should be acknowledged.\n      If x and l satisfy\n         (FCLE <=\
    \ x <= ADRE) mod S  and\n         (FCLE <= x+l-1 <= ADRE) mod S\n      then x\
    \ can also be delivered to the user; however, ordered\n      delivery requires\
    \ that x = FCLE.\n      A packet is not in a range only if all of it lies outside\
    \ a range.\n      When a packet falls in more than one range, precedence is ADR,\n\
    \      then AOR, then DR.  When a packet falls in the AOR then an ACK\n      should\
    \ be sent, even if a packet has to be created.  The ACK will\n      specify the\
    \ current left window edge.  This assures acknowledgment\n      of all duplicates.\n\
    \      ADRE is exactly the maximum sequence number ever \"advertised\"\n     \
    \ through the flow control window, plus one.  This allows for\n      controls\
    \ to be accepted even though permission for them may never\n      have been explicitly\
    \ given.  Of course, each time a control with a\n      sequence number equal to\
    \ the ADRE is sent, the ADRE must be\n      incremented by one.\n      AOR is\
    \ set so that old duplicates (from previous incarnations of\n      the connection)\
    \ can be detected and discarded.  Thus\n         AOR = Min(TSE, MPL) * TB\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - "Out-of-Band Control Signals\n   Synchronization and Resynchronization Problems\n\
    \      A special problem arises concerning detection of packets (old\n      duplicates)\
    \ in the network that have sequence numbers assigned by\n      old instances of\
    \ a connection.  To handle this reliably, careful\n      selection of the initial\
    \ sequence number is required [ref. 2, 3]\n      as well as periodic checks to\
    \ determine if resynchronization of\n      sequence numbers is necessary.  The\
    \ overhead of such elaborate\n      machinery is expensive and repeating it for\
    \ each additional\n      channel is undesirable.\n   Acceptability on Channel\
    \ i\n      We have concluded that the only savings realizable in the muiltple\n\
    \      channel case is to use channel zero's initial sequence number and\n   \
    \   resynchronization maintenance mechanism for the additional\n      channels.\
    \  This can be accomplished by coupling each additional\n      channel to channel\
    \ zero's sequence numbers (CZSN), so that each\n      item on channel i carries\
    \ a pair of sequence numbers, the current\n      CZSN and the current channel\
    \ i's sequence number (CISN).\n      The acceptablility test of items on channel\
    \ i is a composite test\n      of both sequence numbers.  First the CZSN is checked\
    \ to see if it\n      would be acknowledged if it were an octet received on channel\n\
    \      zero.  Only if it would have been discarded would the item on\n      channel\
    \ i be discarded.  Having passed the CZSN test, the CISN is\n      checked to\
    \ see if the item is deliverable and acknowledgable with\n      respect to the\
    \ CISN sequence number space.  The CISN test is a\n      check for everything\
    \ but the existence of old duplicates from old\n      instances of the connection\
    \ and is performed like the check for\n      channel zero items.\n      It has\
    \ been shown that to implement additional channels for a TCP\n      connection,\
    \ two alternatives are available-- (1) provide each\n      channel with its own\
    \ initial sequence number and resynchronization\n      maintenance mechanism or\
    \ (2) provide one initial sequence number\n      and resynchronization maintenance\
    \ mechanism for all channels\n      through channel zero's mechanism.  It is hard\
    \ for us to compare\n      the two alternatives, since we have no experience implementing\
    \ any\n      resynchronization maintenance mechanism.\n"
- title: TCP Case
  contents:
  - "TCP Case\n   To implement a completely reliable separate interrupt channel for\
    \ TCP\n   requires a channel with a full sequence number space.  It is possible\n\
    \   to compromise here and make the interrupt number space smaller than\n   that\
    \ required to support consumption of numbers at the TCP's\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - "Out-of-Band Control Signals\n   bandwidth.  What is lost is the total independence\
    \ of the flow\n   control from the data-control channel.  Normally, the data-control\n\
    \   sequence numbers will change often enough so that wraparound in the\n   interrupt\
    \ number space causes no problems.\n   Things become slightly messy when many\
    \ interrupts are generated in\n   quick succession.  Even if the interrupt numbers\
    \ are acknowledged,\n   they cannot be reused if they refer to the same data-control\
    \ sequence\n   number, until a full packet lifetime has elapsed.  This can be\n\
    \   remedied in all but one case by sending a NOP on the data-control\n   channel\
    \ so that the next set of interrupts can refer to a new\n   data-control sequence\
    \ number.  However, if the data-control channel\n   is blocked due to flow control\
    \ and a resynchronizing control (DSN in\n   the TCP case) was just sent, a NOP\
    \ cannot be created until the\n   resynchronization is complete and a new starting\
    \ sequence number is\n   chosen.  Thus to send another interrupt, the TCP must\
    \ wait for a\n   packet lifetime or an indication that it can send a NOP on the\n\
    \   data-control channel.  (In reality, a connection would probably be\n   closed\
    \ long before a packet lifetime elapsed if the sender is not\n   accepting data\
    \ from the receiver. [reference 1])\n"
- title: NWG/RFC 721                                           1 SEP 76 LLG 36636
  contents:
  - 'NWG/RFC 721                                           1 SEP 76 LLG 36636

    '
- title: Out-of-Band Control Signals
  contents:
  - 'Out-of-Band Control Signals

    '
- title: REFERENCES
  contents:
  - "REFERENCES\n   (1)  J. Postel, L. Garlick, R. Rom, \"TCP Specification (AUTODIN\
    \ II),\"\n        ARC Catalog #35938, July 1976.\n   (2)  R. Tomlinson, \"Selecting\
    \ Sequence Numbers,\" INWG Protocol Note\n        #2, September 1974.\n   (3)\
    \  Y. Dalal, \"More on Selecting Sequence Numbers,\" INWG Protocol\n        Note\
    \ #4, October 1974.\n   (4)  V. Cerf, Y. Dalal, C. Sunshine, \"Specification of\
    \ Internet\n        Transmission Control Program,\" INWG General Note #72, December\n\
    \        1974 (Revised). [Also as RFC 675, NIC Catalog #31505.]\n   (5)  Cerf,\
    \ V., \"TCP Resynchronization,\" SU-DSL Technical Note #79,\n        January 1976.\n\
    \   (6)  Cerf, V. and R. Kahn, \"A Protocol for Packet Network\n        Intercommunication,\"\
    \ IEEE Transactions on Communication, Vol\n        COM-20, No. 5, May 1974.\n\
    \   (7)  C. Sunshine, \"Interprocess Communication Protocols for Computer\n  \
    \      Networks,\" Digital Systems Laboratory Technical Note #105,\n        December\
    \ 1975.\n"
