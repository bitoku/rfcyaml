Abstract This document defines a data model for Large Scale Measurement Platforms (LMAPs).
The data model is defined using the YANG data modeling language.
This document defines a data model for Large Scale Measurement Platforms (LMAPs)
The data model is defined using the YANG [RFC7950] data modeling language.
It is based on the LMAP Information Model [RFC8193].
This document uses the LMAP terminology defined in [RFC7594].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
Tree Diagrams A simplified graphical representation of the data model is used in this document.
Abbreviations before data node names: "rw" means configuration (read write), "ro" means state data (read only), and "w" means RPC input data (write only).
The LMAP framework has three basic elements: Measurement Agents (MAs), Controllers, and Collectors.
Measurement Agents initiate the actual measurements, which are called Measurement Tasks in the LMAP terminology.
The Controller instructs one or more MAs and communicates the set of Measurement Tasks an MA should perform and when.
The Collector accepts Reports from the MAs with the Results from their Measurement Tasks.
The YANG data model for LMAP has been split into three modules:
common.yang provides common definitions such as LMAP specific data types.
The module ietf lmap control.yang defines the data structures exchanged between a Controller and Measurement Agents.
The module ietf lmap report.yang defines the data structures exchanged between Measurement Agents and Collectors.
As shown in Figure 1, a Controller, implementing ietf lmap common.yang and ietf lmap control.yang as a client, will instruct Measurement Agents, which implement ietf lmap common.yang and ietf lmap control.yang as servers.
A Measurement Agent, implementing ietf lmap common.yang and ietf lmap report.yang, will send results to a Collector, which implements ietf lmap common.yang and ietf lmap report.yang as a server.
The LMAP Controller, Measurement Agent, and Collector and the YANG Modules
They Implement as Client or Server
The tree diagram below shows the structure of the control data model.
yang:date and time  :(one off)
:(controller connected)  rw controller connected    empty
The tree diagram below shows the structure of the reporting data model.
date and time  w agent
yang:date and time  w cycle number?
Relationship to the Information Model
The LMAP Information Model [RFC8193] is divided into six aspects.
They are mapped into the YANG data model as explained below:  Preconfiguration Information: This is not modeled explicitly since bootstrapping information is outside the scope of this data model.
Implementations may use some of the Configuration Information also for bootstrapping purposes.
Configuration Information: This is modeled in the /lmap/agent subtree, the /lmap/schedules subtree, and the /lmap/tasks subtree described below.
Some items have been left out because they are expected to be dealt with by the underlying protocol.
This is modeled in the /lmap/suppressions subtree, the /lmap/schedules subtree, and the /lmap/tasks subtree described below.
Some of the Logging Information, in particular 'success/failure/warning messages in response to information updates from the Controller', will be handled by the protocol used to manipulate the LMAP specific configuration.
The LMAP data model defined in this document assumes that runtime Logging Information will be communicated using protocols that do not require a formal data model, e.g., the syslog protocol defined in [RFC5424].
Some of the Capability and Status Information is modeled in the /lmap/capability subtree.
The list of supported Tasks is modeled in the /lmap/capabilities/ task list.
Status Information about Schedules and Actions is included in the /lmap/schedules subtree.
Information about network interfaces can be obtained from the ietf interfaces YANG data model [RFC7223].
Information about the hardware and the firmware can be obtained from the ietf system YANG data model [RFC7317].
A device identifier can be obtained from the ietf  hardware YANG data model [YANG HARDWARE].
: This is modeled by the report data model to be implemented by the Collector.
Measurement Agents send results to the Collector by invoking an RPC on the Collector.
These six Information Model aspects use a collection of common information objects.
These common information objects are represented in the YANG data model as follows:
Schedules are modeled in the /lmap/schedules subtree.
Channels are not modeled since the NETCONF server configuration data model [NETCONF CLIENT SERVER] already provides a mechanism to configure NETCONF server Channels.
Configured Tasks are modeled in the /lmap/ tasks subtree.
Event definitions are modeled in the /lmap/ events subtree.
This module imports definitions from [RFC6536], and it references [ISO 8601].
<CODE BEGINS> file "ietf lmap common@2017 08 08.yang
" module ietf lmap common { yang version 1.1
yang:ietf lmap common"; prefix "lmap"; import ietf inet types { prefix inet; } organization "IETF Large Scale Measurement of Broadband Performance Working Group"
This module provides common definitions used by the data models written for Large Scale Measurement Platforms (LMAPs).
This module defines typedefs and groupings but no schema tree elements."
A tag consists of at least one character."
matches a single character [seq]
matches any character in seq [!
A sequence seq may be a sequence of characters (e.g., [abc] or a range of characters (e.g., [a c]).'
The cycle number is using Coordinated Universal Time (UTC)."
The numbering follows the ISO 8601 scheme."
; reference "ISO 8601:2004: Data elements and interchange formats
Information interchange   Representation of dates and times";
Note that the actual range is implementation dependent, but it should be portable to use values in the range 0
..127 for regular exit codes.
By convention, 0 indicates successful termination.
The value Z is equivalent to  00:00.
The value  00:00 indicates an unknown time offset.
It is a list of key/value pairs and may be used to model options.
Options may be used to identify the role of a Task or to pass a Channel name to a Task."
; leaf id { type lmap:identifier; description "An identifier uniquely identifying an option.
This module imports definitions from [RFC6536], [RFC6991], and the common LMAP module, and it references [RFC7398].
<CODE BEGINS> file "ietf lmap control@2017 08 08.yang" module ietf lmap control { yang version 1.1
yang:ietf lmap control"; prefix "lmapc"; import ietf yang types { prefix yang; } import ietf netconf acm { prefix nacm; } import ietf lmap common { prefix lmap; } organization "IETF Large Scale Measurement of Broadband Performance Working Group"; contact
>"; description "This module defines a data model for controlling Measurement Agents that are part of a Large Scale Measurement Platform (LMAP).
This data model is expected to be implemented by Measurement Agents."
/ typedef event ref { type leafref { path "/lmap/events/event/name"
Groupings  / grouping start end grouping { description "A grouping that provides start and end times for Event objects."; leaf start { type yang:date and time; description "The date and time when the Event object starts to create triggers."
; } leaf end { type yang:date and time; description "The date and time when the Event object stops to create triggers.
A short description of the software implementing the Measurement Agent.
This should include the version number of the Measurement Agent software."
A short description of the software implementing the Task.
This should include the version number of the Measurement Task software."
; description "The agent id identifies a Measurement Agent with a very low probability of collision.
In certain deployments, the agent id may be considered sensitive, and hence this object is optional."
; } leaf group id { type string; description "The group id identifies a group of Measurement Agents.
An agent id must exist for this to be set to true."
id' { description "A group
id must exist for this to be set to true."
; } default false; description "The 'report group id' controls whether the 'group id' is reported to Collectors."
"true" or ../measurement point' { description
"A measurement point must exist for this to be set to true."
The list of Tasks configured on the Measurement Agent.
Note that a configured Task MUST resolve to a Task listed in the capabilities.
Attempts to execute a configured Task that is not listed in the capabilities result in a runtime execution error."
nacm:default deny write; description "The (local) program to invoke in order to execute the Task.
A tag can be used, for example, to carry the Measurement Cycle ID.";
Schedules control which Tasks are executed by the LMAP implementation."; list schedule { key name; description "Configuration of a particular Schedule."
When the end has been reached, the scheduled Actions should be forced to terminate the measurements.
Output created by an Action is passed as input to the subsequent Action."
This object reports the amount of allocated physical storage and not the storage used by logical data records."
; } leaf invocations { type yang:counter32; config false; mandatory true; description "Number of invocations of this Schedule.
; } list action { key name; description "An Action describes a Task that is invoked by the Schedule.
The output is stored temporarily since the Destination Schedules will in general not be running when output is passed to them.
The behavior of an Action passing data to its own Schedule is implementation specific.
Data passed to a sequential or pipelined Schedule is received by the Schedule's first Action.
; } enum disabled { value 2; description "The value 'disabled' indicates that the Action is currently disabled."
; } enum running { value 3; description "The value 'running' indicates that the Action is currently running."
This object reports the amount of allocated physical storage and not the storage used by logical data records."
; } leaf invocations { type yang:counter32; config false; mandatory true; description "Number of invocations of this Action.
If not present, Suppression continues indefinitely."
; } leaf list match { type lmap:glob pattern; description "A set of Suppression match patterns.
; } enum disabled { value 2; description "The value 'disabled' indicates that the Suppression is currently disabled."
; } enum active { value 3; description "The value 'active' indicates that the Suppression is currently active."
Implementations may be forced to delay acting upon the occurrence of events in the face of local constraints.
No cycle number is calculated if the optional cycle interval does not exist."
; } choice event type { description "Different types of events are handled by different branches of this choice.
Note that this choice can be extended via augmentations."
A calendar timing object triggers based on the current calendar date and time."; leaf list month { type lmap:month or all; min elements 1; description "A set of months at which this calendar timing will trigger.
The wildcard means all months."
; } leaf list day of month { type lmap:day of months or all; min elements 1; description "
A set of days of the month at which this calendar timing will trigger.
A set of weekdays at which this calendar timing will trigger.
The wildcard means all hours of a day."
; } leaf list minute { type lmap:minute or all; min elements 1; description "A set of minutes at which this calendar timing will trigger.
The wildcard means all minutes of an hour."
; } leaf list second { type lmap:second or all; min elements 1; description "A set of seconds at which this calendar timing will trigger.
The wildcard means all seconds of a minute."
; } leaf timezone offset { type lmap:timezone offset; description "The time zone in which this calendar timing object will be evaluated.
If not present, the system's local time zone will be used.
This one off timing object triggers once at the configured date and time."
This module imports definitions from [RFC6536] and the common LMAP module.
<CODE BEGINS> file "ietf lmap report@2017 08 08.yang" module ietf lmap report { yang version 1.1; namespace "urn:ietf:params:xml:
yang:ietf lmap report"; prefix "lmapr"; import ietf yang types { prefix yang; } import ietf lmap common { prefix lmap; } organization "IETF Large Scale Measurement of Broadband Performance Working Group"
>"; description "This module defines a data model for reporting results from Measurement Agents, which are part of a Large Scale Measurement Platform (LMAP), to result data Collectors.
This data model is expected to be implemented by a Collector."
This choice is provided to augment in different sets of parameters."
This is the joined set of tags defined for the Task object, the Schedule object, and the Action object.
A tag can be used to carry the Measurement Cycle ID."
; } leaf event { type yang:date and time; description "The date and time of the event that triggered the Schedule of the Action that produced the reported result values.
The date and time does not include any added randomization."
The YANG module defined in this document is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040].
The lowest NETCONF layer is the secure transport layer, and the mandatory to implement secure transport is Secure Shell (SSH) [RFC6242].
The lowest RESTCONF layer is HTTPS, and the mandatory to implement secure transport is Transport Layer Security (TLS) [RFC5246].
The NETCONF access control model [RFC6536] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.
There are a number of data nodes defined in this YANG module that are writable/creatable/deletable (i.e., config true, which is the default).
These data nodes may be considered sensitive or vulnerable in some network environments.
Write operations (e.g., edit config) to these data nodes without proper protection can have a negative effect on network operations.
These are the subtrees and data nodes and their sensitivity/vulnerability: /lmap/agent
This subtree configures general properties of the Measurement Agent such as its identity, measurement point, or Controller timeout.
This subtree should only have write access for the system responsible for configuring the Measurement Agent.
This subtree configures the Tasks that can be invoked by a Controller.
This subtree should only have write access for the system responsible for configuring the Measurement Agent.
Care must be taken to not expose Tasks to a Controller that can cause damage to the system or the network.
This subtree is used by a Controller to define the Schedules and Actions that are executed when certain events occur.
Unauthorized access can cause unwanted load on the device or network, or it might direct measurement traffic to targets that become victims of an attack.
This subtree is used by a Controller to define Suppressions that can temporarily disable the execution of Schedules or Actions.
Unauthorized access can either disable measurements that should normally take place or cause measurements to take place during times when normally no measurements should take place.
This subtree is used by a Controller to define events that trigger the execution of Schedules and Actions.
Unauthorized access can either disable measurements that should normally take place or cause measurements to take place during times when normally no measurements should take place or at a frequency that is higher than normally expected.
Some of the readable data nodes in this YANG module may be considered sensitive or vulnerable in some network environments.
It is thus important to control
read access (e.g., via get, get config, or notification) to these data nodes.
These are the subtrees and data nodes and their sensitivity/vulnerability: /lmap/agent
This subtree provides information about the Measurement Agent.
This information may be used to select specific targets for attacks.
This subtree provides information about the capabilities of the Measurement Agent, including its software version number and the Tasks that it supports.
This information may be used to execute targeted attacks against specific implementations.
This subtree provides information about the Schedules and their associated Actions executed on the Measurement Agent.
This information may be used to check whether attacks against the implementation are effective.
This subtree provides information about the Suppressions that can be active on the Measurement Agent.
This information may be used to predict time periods where measurements take place (or do not take place).
Some of the RPC operations in this YANG module may be considered sensitive or vulnerable in some network environments.
It is thus important to control access to these operations.
These are the operations and their sensitivity/vulnerability:
The report operation is used to send locally collected measurement results to a remote Collector.
Unauthorized access may leak measurement results, including those from passive measurements.
The data model uses a number of identifiers that are set by the Controller.
Implementors may find these identifiers useful for the identification of resources, e.g., to identify objects in a file system providing temporary storage.
Since the identifiers used by the YANG data model may allow characters that may be given special interpretation in a specific context, implementations must ensure that identifiers are properly mapped into safe identifiers.
The data model allows specifying options in the form of name/value pairs that are passed to programs.
Implementors ought to take care that option names and values are passed literally to programs.
In particular, shell expansions that may alter option names and values must not be performed.
This document registers three URIs in the "IETF XML Registry" [RFC3688].
Following the format in RFC 3688, the following registrations have been made.
yang:ietf lmap common Registrant Contact
N/A; the requested URI is an XML namespace.
N/A; the requested URI is an XML namespace.
N/A; the requested URI is an XML namespace.
This document registers three YANG modules in the "YANG Module Names" registry [RFC6020].
RFC 8194 Appendix A.  Example Parameter Extension Module
Sometimes Tasks may require complicated parameters that cannot easily be fit into options, i.e., a list of name/value pairs.
In such a situation, it is possible to augment the ietf lmap control.yang and ietf lmap report.yang data models with definitions for more complex parameters.
The following example module demonstrates this idea using the parameters of UDP latency metrics as an example (although UDP latency metric parameters do not really need such an extension module).
module example ietf ippm udp latency { namespace "urn:
This augmentation adds parameters specific to IPPM and UDP latency metrics to reports.
The configuration below is in XML [W3C.REC xml 20081126].
yang:ietf lmap control"> <agent> <agent id>550e8400 e29b
The Schedule S1 first updates a list of ping targets and subsequently sends a ping to all targets.
>A1</name> <task>update ping targets</task> </action
The Schedule S2 executes two traceroutes concurrently.
The Schedule S3 sends measurement data to a Collector.
Stop all measurements if we got orphaned.
configuration of an update ping targets task
fping update targets</program> </task> <!
configuration of a ping all targets task   <task>
configuration of a traceroute task   <task
configuration of a reporter task   <task
The event E1 triggers every hour during September 2016 with a random spread of one minute.
> <end>2016 11 01T00:00:00 00:00</end
The event E2 triggers on Mondays at 4am
> <month> </month> <day of week
> <day of month> </day of month
The event controller lost triggers when we lost connectivity with the Controller.
The event contoller connected triggers when we established or re established connectivity with the Controller.
The report below is in XML [W3C.REC xml 20081126].
base:1.0" message id "1"> <report xmlns
yang:ietf lmap report"> <date>2015 10
db8::1</value> <value>42</value> </row> <row> <
