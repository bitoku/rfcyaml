This document describes a directory access protocol that provides both read and update access.
Update access requires secure authentication, but this document does not mandate implementation of any satisfactory authentication mechanisms.
In accordance with RFC 2026, section 4.4.1, this specification is being approved by IESG as a Proposed Standard despite this limitation, for the following reasons: a. to encourage implementation and interoperability testing of these protocols (with or without update access) before they are deployed, and b. to encourage deployment and use of these protocols in read only applications.
(e.g. applications where LDAPv3 is used as a query language for directories which are updated by some secure mechanism other than LDAP), and c. to avoid delaying the advancement and deployment of other Internet standards track protocols which require the ability to query, but not update, LDAPv3 directory servers.
Readers are hereby warned that until mandatory authentication mechanisms are standardized, clients and servers written according to this specification which make use of update functionality are UNLIKELY TO INTEROPERATE, or MAY INTEROPERATE ONLY IF AUTHENTICATION IS REDUCED TO AN UNACCEPTABLY WEAK LEVEL.
Implementors are hereby discouraged from deploying LDAPv3 clients or servers which implement the update functionality, until a Proposed Standard for mandatory authentication in LDAPv3 has been approved and published as an RFC. 2.
This document provides an overview of the attribute types and object classes defined by the ISO and ITU T committees in the X.500 documents, in particular those intended for use by directory clients.
This is the most widely used schema for LDAP/X.500 directories, and many other schema definitions for white pages objects use it as a basis.
This document does not cover attributes used for the administration of X.500 directory servers, nor does it include attributes defined by other ISO/ITU T documents.
This document references syntaxes given in section 6 of this document and section 6 of [1].
Matching rules are listed in section 8 of this document and section 8 of [1].
The attribute type and object class definitions are written using the BNF form of AttributeTypeDescription and ObjectClassDescription given in [1].
Lines have been folded for readability.
The schema definitions in this document are based on those found in X.500 [2],[3],[4],[5], and updates to these documents, specifically:
Some attribute names are different from those found in X.520(93).
Three new attributes supportedAlgorithms, deltaRevocationList and dmdName, and the objectClass dmd, are defined in the X.500(96) documents.
An LDAP server implementation SHOULD recognize the attribute types described in this section.
The values of the objectClass attribute describe the kind of object which an entry represents.
The objectClass attribute is present in every entry, with at least two values.
One of the values is either "top" or "alias".
EQUALITY objectIdentifierMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 )
The aliasedObjectName attribute is used by the directory service if the entry containing this attribute is an alias.
( 2.5.4.1 NAME 'aliasedObjectName' EQUALITY distinguishedNameMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 SINGLE VALUE )
This attribute is no longer used.
( 2.5.4.2 NAME 'knowledgeInformation' EQUALITY
This is the X.500 commonName attribute, which contains a name of an object.
If the object corresponds to a person, it is typically the person's full name.
( 2.5.4.3 NAME 'cn' SUP name )
This is the X.500 surname attribute, which contains the family name of a person.
( 2.5.4.4 NAME 'sn' SUP name )
This attribute contains the serial number of a device.
This attribute contains a two letter ISO 3166 country code (countryName).
( 2.5.4.6 NAME 'c' SUP name SINGLE VALUE )
This attribute contains the name of a locality, such as a city, county or other geographic region (localityName).
( 2.5.4.7 NAME 'l' SUP name )
This attribute contains the full name of a state or province (stateOrProvinceName).
( 2.5.4.8 NAME 'st' SUP name )
This attribute contains the physical address of the object to which the entry corresponds, such as an address for package delivery (streetAddress).
( 2.5.4.9 NAME 'street' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{128} ) 5.11.
This attribute contains the name of an organization (organizationName).
( 2.5.4.10 NAME 'o' SUP name ) 5.12.
This attribute contains the name of an organizational unit (organizationalUnitName).
( 2.5.4.11 NAME 'ou' SUP name ) 5.13.
This attribute contains the title, such as "Vice President", of a person in their organizational context.
The "personalTitle" attribute would be used for a person's title independent of their job function.
( 2.5.4.12 NAME 'title' SUP name ) 5.14.
This attribute contains a human readable description of the object.
( 2.5.4.13 NAME 'description' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} ) 5.15.
This attribute is for use by X.500 clients in constructing search filters.
It is obsoleted by enhancedSearchGuide, described below in 5.48.
( 2.5.4.14 NAME 'searchGuide' SYNTAX 1.3.6.1.4.1.1466.115.121.1.25 )
This attribute describes the kind of business performed by an organization.
( 2.5.4.15 NAME 'businessCategory' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{128} ) 5.17.
postalAddress ( 2.5.4.16 NAME 'postalAddress' EQUALITY caseIgnoreListMatch SUBSTR caseIgnoreListSubstringsMatch
EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{40} ) 5.19.
( 2.5.4.18 NAME 'postOfficeBox' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{40} ) 5.20.
( 2.5.4.19 NAME 'physicalDeliveryOfficeName' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{128} )
( 2.5.4.20 NAME 'telephoneNumber' EQUALITY telephoneNumberMatch SUBSTR telephoneNumberSubstringsMatch SYNTAX
telexNumber ( 2.5.4.21 NAME 'telexNumber' SYNTAX 1.3.6.1.4.1.1466.115.121.1.52 )
teletexTerminalIdentifier ( 2.5.4.22 NAME 'teletexTerminalIdentifier' SYNTAX 1.3.6.1.4.1.1466.115.121.1.51 )
facsimileTelephoneNumber ( 2.5.4.23 NAME 'facsimileTelephoneNumber' SYNTAX 1.3.6.1.4.1.1466.115.121.1.22 ) 5.25.
x121Address ( 2.5.4.24 NAME 'x121Address' EQUALITY numericStringMatch SUBSTR numericStringSubstringsMatch SYNTAX
internationaliSDNNumber ( 2.5.4.25 NAME 'internationaliSDNNumber' EQUALITY
This attribute holds a postal address suitable for reception of telegrams or expedited documents, where it is necessary to have the recipient accept delivery.
( 2.5.4.26 NAME 'registeredAddress' SUP postalAddress SYNTAX 1.3.6.1.4.1.1466.115.121.1.41 ) 5.28.
This attribute is used for the telegram service.
( 2.5.4.27 NAME 'destinationIndicator' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.44{128} )
SYNTAX 1.3.6.1.4.1.1466.115.121.1.14 SINGLE VALUE )
This attribute contains an OSI presentation address.
( 2.5.4.29 NAME 'presentationAddress' EQUALITY
presentationAddressMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.43 SINGLE VALUE )
supportedApplicationContext This attribute contains the identifiers of OSI application contexts.
( 2.5.4.30 NAME 'supportedApplicationContext' EQUALITY objectIdentifierMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 )
2.5.4.31 NAME 'member' SUP distinguishedName ) 5.33.
owner ( 2.5.4.32 NAME 'owner' SUP distinguishedName ) 5.34.
2.5.4.33 NAME 'roleOccupant' SUP distinguishedName ) 5.35.
( 2.5.4.34 NAME 'seeAlso' SUP distinguishedName )
userPassword ( 2.5.4.35 NAME 'userPassword' EQUALITY
Passwords are stored using an Octet String syntax and are not encrypted.
Transfer of cleartext passwords are strongly discouraged where the underlying transport service cannot guarantee confidentiality and may result in disclosure of the password to unauthorized parties.
This attribute is to be stored and requested in the binary form, as 'userCertificate;binary'.
( 2.5.4.36 NAME 'userCertificate' SYNTAX 1.3.6.1.4.1.1466.115.121.1.8 ) 5.38.
cACertificate This attribute is to be stored and requested in the binary form, as 'cACertificate;binary'.
( 2.5.4.37 NAME 'cACertificate' SYNTAX 1.3.6.1.4.1.1466.115.121.1.8 ) 5.39.
This attribute is to be stored and requested in the binary form, as 'authorityRevocationList;binary'.
This attribute is to be stored and requested in the binary form, as 'certificateRevocationList;binary'.
This attribute is to be stored and requested in the binary form, as 'crossCertificatePair;binary'.
( 2.5.4.40 NAME 'crossCertificatePair' SYNTAX 1.3.6.1.4.1.1466.115.121.1.10 )
The name attribute type is the attribute supertype from which string attribute types typically used for naming may be formed.
It is unlikely that values of this type itself will occur in an entry.
LDAP server implementations which do not support attribute subtyping need not recognize this attribute in requests.
Client implementations MUST NOT assume that LDAP servers are capable of performing attribute subtyping.
( 2.5.4.41 NAME 'name' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32768} )
The givenName attribute is used to hold the part of a person's name which is not their surname nor middle name.
( 2.5.4.42 NAME 'givenName' SUP name )
The initials attribute contains the initials of some or all of an individuals names, but not the surname(s).
( 2.5.4.43 NAME 'initials' SUP name ) 5.45.
The generationQualifier attribute contains the part of the name which typically is the suffix, as in "IIIrd".
( 2.5.4.44 NAME 'generationQualifier' SUP name ) 5.46.
The x500UniqueIdentifier attribute is used to distinguish between objects when a distinguished name has been reused.
This is a different attribute type from both the "uid" and "uniqueIdentifier" types.
dnQualifier The dnQualifier attribute type specifies disambiguating information to add to the relative distinguished name of an entry.
It is intended for use when merging data from multiple sources in order to prevent conflicts between entries which would otherwise have the same name.
It is recommended that the value of the dnQualifier attribute be the same for all entries from a particular source.
( 2.5.4.46 NAME 'dnQualifier' EQUALITY
caseIgnoreOrderingMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.44 ) 5.48.
enhancedSearchGuide This attribute is for use by X.500 clients in constructing search filters.
( 2.5.4.47 NAME 'enhancedSearchGuide' SYNTAX 1.3.6.1.4.1.1466.115.121.1.21 )
This attribute is used in conjunction with the presentationAddress attribute, to provide additional information to the OSI network service.
( 2.5.4.48 NAME 'protocolInformation' EQUALITY protocolInformationMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.42 ) 5.50.
distinguishedName This attribute type is not used as the name of the object itself, but it is instead a base type from which attributes with DN syntax inherit.
It is unlikely that values of this type itself will occur in an entry.
LDAP server implementations which do not support attribute subtyping need not recognize this attribute in requests.
Client implementations MUST NOT assume that LDAP servers are capable of performing attribute subtyping.
( 2.5.4.49 NAME 'distinguishedName' EQUALITY distinguishedNameMatch
( 2.5.4.50 NAME 'uniqueMember' EQUALITY
uniqueMemberMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.34 ) 5.52.
This attribute is used to identify a building within a location.
( 2.5.4.51 NAME 'houseIdentifier' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32768} ) 5.53.
This attribute is to be stored and requested in the binary form, as 'supportedAlgorithms;binary'.
( 2.5.4.52 NAME 'supportedAlgorithms' SYNTAX 1.3.6.1.4.1.1466.115.121.1.49 ) 5.54.
This attribute is to be stored and requested in the binary form, as 'deltaRevocationList;binary'.
( 2.5.4.53 NAME 'deltaRevocationList' SYNTAX 1.3.6.1.4.1.1466.115.121.1.9 ) 5.55.
The value of this attribute specifies a directory management domain (DMD), the administrative authority which operates the directory server.
( 2.5.4.54 NAME 'dmdName' SUP name ) 6.
Syntaxes Servers SHOULD recognize the syntaxes defined in this section.
Each syntax begins with a sample value of the ldapSyntaxes attribute which defines the OBJECT IDENTIFIER of the syntax.
The descriptions of syntax names are not carried in protocol, and are not guaranteed to be unique.
Delivery Method ( 1.3.6.1.4.1.1466.115.121.1.14 DESC 'Delivery Method' )
Values in this syntax are encoded according to the following BNF:
Enhanced Guide ( 1.3.6.1.4.1.1466.115.121.1.21 DESC 'Enhanced Guide' )
Values in this syntax are encoded according to the following BNF:
The criteria production is defined in the Guide syntax below.
This syntax has been added subsequent to RFC 1778.
( 1.3.6.1.4.1.1466.115.121.1.25 DESC 'Guide' )
Values in this syntax are encoded according to the following BNF:
This syntax should not be used for defining new attributes.
Octet String ( 1.3.6.1.4.1.1466.115.121.1.40 DESC 'Octet String' )
Values in this syntax are encoded as octet strings.
Teletex Terminal Identifier ( 1.3.6.1.4.1.1466.115.121.1.51 DESC 'Teletex Terminal Identifier' )
Values in this syntax are encoded according to the following BNF:
( 1.3.6.1.4.1.1466.115.121.1.52 DESC 'Telex Number' )
( 1.3.6.1.4.1.1466.115.121.1.49 DESC 'Supported Algorithm' )
No printable representation of values of the supportedAlgorithms attribute is defined in this document.
Clients which wish to store and retrieve this attribute MUST use "supportedAlgorithms;binary", in which the value is transferred as a binary encoding.
Object Classes LDAP servers MUST recognize the object classes "top" and "subschema".
LDAP servers SHOULD recognize all the other object classes listed here as values of the objectClass attribute.
top ( 2.5.6.0 NAME 'top' ABSTRACT MUST objectClass )
alias ( 2.5.6.1 NAME 'alias' SUP top STRUCTURAL
country ( 2.5.6.2 NAME 'country' SUP top STRUCTURAL MUST
c MAY ( searchGuide $ description ) )
locality ( 2.5.6.3 NAME 'locality' SUP top STRUCTURAL MAY ( street $ seeAlso $ searchGuide $ st $ l $ description ) )
2.5.6.4 NAME 'organization' SUP top STRUCTURAL MUST MAY ( userPassword $ searchGuide $ seeAlso $ businessCategory
$ x121Address $ registeredAddress $ destinationIndicator
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ facsimileTelephoneNumber $ street $ postOfficeBox $ postalCode
$ postalAddress $ physicalDeliveryOfficeName $ st $ l $ description ) )
( 2.5.6.5 NAME 'organizationalUnit' SUP top STRUCTURAL MUST ou MAY ( userPassword $ searchGuide $ seeAlso $ businessCategory
$ x121Address $ registeredAddress $ destinationIndicator
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ facsimileTelephoneNumber $ street $ postOfficeBox $ postalCode
$ postalAddress $ physicalDeliveryOfficeName $ st $ l $ description ) )
person ( 2.5.6.6 NAME 'person' SUP top STRUCTURAL MUST ( sn $ cn )
MAY ( userPassword $ telephoneNumber $ seeAlso
organizationalPerson ( 2.5.6.7 NAME 'organizationalPerson' SUP person STRUCTURAL MAY
( title $ x121Address $ registeredAddress $ destinationIndicator
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ facsimileTelephoneNumber $ street $ postOfficeBox $ postalCode
$ ou $ st $ l ) )
( 2.5.6.8 NAME 'organizationalRole' SUP top STRUCTURAL MUST cn MAY ( x121Address $ registeredAddress $ destinationIndicator
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ preferredDeliveryMethod $ street $ postOfficeBox $ postalCode
$ ou $ st $ l $ description ) )
2.5.6.9 NAME 'groupOfNames' SUP top STRUCTURAL MUST ( member $ cn )
7.11. residentialPerson ( 2.5.6.10 NAME 'residentialPerson' SUP person STRUCTURAL MUST l MAY ( businessCategory $ x121Address
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ street $ postOfficeBox $ postalCode
$ st $ l ) )
2.5.6.11 NAME 'applicationProcess' SUP top STRUCTURAL MUST cn MAY (
seeAlso $ ou $ l $ description ) )
2.5.6.12 NAME 'applicationEntity' SUP top STRUCTURAL MUST ( presentationAddress $ cn )
dSA ( 2.5.6.13 NAME 'dSA' SUP applicationEntity STRUCTURAL MAY knowledgeInformation )
device ( 2.5.6.14 NAME 'device' SUP top STRUCTURAL MUST cn
( 2.5.6.15 NAME 'strongAuthenticationUser' SUP top AUXILIARY MUST userCertificate )
2.5.6.16 NAME 'certificationAuthority' SUP top AUXILIARY MUST ( authorityRevocationList
$ certificateRevocationList $ cACertificate )
2.5.6.17 NAME 'groupOfUniqueNames' SUP top STRUCTURAL MUST ( uniqueMember $ cn )
( 2.5.6.18 NAME 'userSecurityInformation' SUP top AUXILIARY MAY ( supportedAlgorithms ) )
certificationAuthority V2 ( 2.5.6.16.2 NAME 'certificationAuthority V2' SUP certificationAuthority AUXILIARY MAY ( deltaRevocationList ) )
( 2.5.6.19 NAME 'cRLDistributionPoint' SUP top STRUCTURAL MUST ( cn ) MAY ( certificateRevocationList $ authorityRevocationList $ deltaRevocationList ) )
2.5.6.20 NAME 'dmd' SUP top STRUCTURAL MUST ( dmdName
) MAY ( userPassword $ searchGuide $ seeAlso $ businessCategory
$ x121Address $ registeredAddress $ destinationIndicator
$ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber
$ facsimileTelephoneNumber $ street $ postOfficeBox $ postalCode
$ postalAddress $ physicalDeliveryOfficeName $ st $ l $ description ) )
Matching Rules Servers MAY implement additional matching rules.
octetStringMatch Servers which implement the extensibleMatch filter SHOULD allow the matching rule listed in this section to be used in the extensibleMatch.
In general these servers SHOULD allow matching rules to be used with all attribute types known to the server, when the assertion syntax of the matching rule is the same as the value syntax of the attribute.
( 2.5.13.17 NAME 'octetStringMatch' SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 ) 9.
Security Considerations Attributes of directory entries are used to provide descriptive information about the real world objects they represent, which can be people, organizations or devices.
Most countries have privacy laws regarding the publication of information about people.
Transfer of cleartext passwords are strongly discouraged where the underlying transport service cannot guarantee confidentiality and may result in disclosure of the password to unauthorized parties.
Bibliography [1] Wahl, M., Coulbeck, A., Howes, T., and S. Kille, "Lightweight X.500 Directory Access Protocol (v3): Attribute Syntax Definitions", RFC 2252, December 1997.
ITU T Recommendation X.501, 1996.
ITU T Recommendation X.509, 1996.
The Directory: Selected Attribute Types.
ITU T Recommendation X.520, 1996.
The Directory: Selected Object Classes.
ITU T Recommendation X.521, 1996.
[6] Bradner, S., "Key words for use in RFCs to Indicate Requirement Levels", RFC 2119, March 1997.
