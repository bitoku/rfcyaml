- contents:
  - "                      UDP Transport Layer (UDPTL)\n             over Datagram
    Transport Layer Security (DTLS)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies how the UDP Transport Layer (UDPTL) protocol,\n
    \  the predominant transport protocol for T.38 fax, can be transported\n   over
    the Datagram Transport Layer Security (DTLS) protocol, how the\n   usage of UDPTL
    over DTLS is indicated in the Session Description\n   Protocol (SDP), and how
    UDPTL over DTLS is negotiated in a session\n   established using the Session Initiation
    Protocol (SIP).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7345.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Conventions .....................................................5\n   3.
    Secure Channel ..................................................5\n   4. SDP
    Offerer/Answerer Procedures .................................6\n      4.1. General
    ....................................................6\n      4.2. Generating the
    Initial Offer ...............................7\n      4.3. Generating the Answer
    ......................................7\n      4.4. Offerer Processing of the
    Answer ...........................7\n      4.5. Modifying the Session ......................................7\n
    \  5. Miscellaneous Considerations ....................................8\n      5.1.
    Anonymous Calls ............................................8\n      5.2. NAT
    Traversal ..............................................8\n           5.2.1. ICE
    Usage ...........................................8\n           5.2.2. STUN Interaction
    ....................................8\n      5.3. Rekeying ...................................................9\n
    \     5.4. Compatibility with UDPTL over UDP ..........................9\n   6.
    Security Considerations .........................................9\n   7. IANA
    Considerations ............................................10\n   8. Acknowledgments
    ................................................10\n   9. References .....................................................11\n
    \     9.1. Normative References ......................................11\n      9.2.
    Informative References ....................................12\n   Appendix A.
    \ Examples .............................................13\n     A.1.  General
    ...................................................13\n     A.2.  Basic Message
    Flow ........................................13\n     A.3.  Message Flow of T.38
    Fax Replacing Audio Media Stream in\n           an Existing Audio-Only Session
    ............................20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   While it is possible to transmit highly sensitive documents
    using\n   traditional telephony encryption devices, secure fax on the Public\n
    \  Switched Telephone Network (PSTN) was never widely considered or\n   prioritized.
    \ This was mainly because of the challenges involved with\n   malevolent physical
    access to telephony equipment.  As real-time\n   communications transition to
    IP networks, where information might\n   potentially be intercepted or spoofed,
    an appropriate level of\n   security for fax that offers integrity and confidentiality
    protection\n   is vital.\n   The overwhelmingly predominant fax transport protocol
    is UDPTL-based,\n   as described in Section 9.1 of [ITU.T38.2010].  The protocol
    stack\n   for fax transport using UDPTL is shown in Figure 1.\n                         +-----------------------------+\n
    \                        | Internet facsimile protocol |\n                         +-----------------------------+\n
    \                        |            UDPTL            |\n                         +-----------------------------+\n
    \                        |            UDP              |\n                         +-----------------------------+\n
    \                        |            IP               |\n                         +-----------------------------+\n
    \               Figure 1: Protocol Stack for UDPTL over UDP\n   The following
    mechanisms are available for securing fax:\n   o  Annex H of [ITU.T30.2005] specifies
    an application-layer integrity\n      and confidentiality protection of fax that
    is independent of the\n      transport protocol and is based on the RSA algorithm
    for use with\n      the T.30 telephony protocol by Group 3 facsimile equipment
    (G3FE).\n   o  [ITU.T38.2010] specifies fax transport over RTP/SAVP, which\n      enables
    integrity and confidentiality protection of fax in IP\n      networks.\n   Both
    of these mechanisms have been available for many years and never\n   gained any
    significant adoption in the market.  This has prompted an\n   effort to develop
    an approach, based on open standards, for securing\n   fax communications over
    an IP-based transport.\n   Telephony-based protocols like T.30 offer application-level
    security\n   options like the RSA-based approach detailed in Annex H of the T.30\n
    \  specification [ITU.T30.2005].  The problem is that it is very\n   sparingly
    implemented and not enforced at the transport level.\n   It is worth noting that
    while T.38 over RTP offers a very viable\n   option for such standards-based IP
    security solution using Secure\n   Realtime Transport Protocol (SRTP), this fax-over-IP
    transport never\n   gained any traction in the marketplace and accounts for a
    negligible\n   percentage of fax-over-IP implementations.\n   Thus, security mechanisms
    offering integrity and confidentiality\n   protection should be limited to UDPTL-based
    fax transport, which is\n   the only broad-based fax-over-IP solution.  The 3rd
    Generation\n   Partnership Project (3GPP) launched a study on how best to provide\n
    \  secure fax in the IP Multimedia Subsystem (IMS) for UDPTL.  Results\n   of
    the study confirmed that this security was best achieved by using\n   UDPTL over
    DTLS.\n   This document specifies fax transport using UDPTL over DTLS\n   [RFC6347],
    which enables integrity and confidentiality protection of\n   fax in IP networks.
    \ The protocol stack that enhances fax transport\n   to offer integrity and confidentiality
    using UDPTL over DTLS is shown\n   in Figure 2.\n                         +-----------------------------+\n
    \                        | Internet facsimile protocol |\n                         +-----------------------------+\n
    \                        |            UDPTL            |\n                         +-----------------------------+\n
    \                        |            DTLS             |\n                         +-----------------------------+\n
    \                        |            UDP              |\n                         +-----------------------------+\n
    \                        |            IP               |\n                         +-----------------------------+\n
    \          Figure 2: Protocol Stack for UDPTL over DTLS over UDP\n   The primary
    motivations for the mechanism in this document are:\n   o  The design of DTLS
    [RFC6347] is clearly defined and well\n      understood, and implementations are
    widely available.\n   o  No DTLS extensions are required in order to enable UDPTL
    transport\n      over DTLS.\n   o  Fax transport using UDPTL over DTLS only requires
    insertion of the\n      DTLS layer between the UDPTL layer and the UDP layer,
    as shown in\n      Figure 2.  The UDPTL layer and the layers above the UDPTL layer\n
    \     require no modifications.\n   o  UDPTL [ITU.T38.2010] is by far the most
    widely deployed fax\n      transport protocol in IP networks.\n   o  3GPP and
    the IP fax community need a mechanism to transport UDPTL\n      over DTLS in order
    to provide secure fax in SIP-based networks\n      (including IMS).\n   This document
    specifies the transport of UDPTL over DTLS using the\n   DTLS record layer \"application_data\"
    packets [RFC5246] [RFC6347].\n   Since the DTLS record layer \"application_data\"
    packet does not\n   indicate whether it carries UDPTL or some other protocol,
    the usage\n   of a dedicated DTLS association for transport of UDPTL needs to
    be\n   negotiated, e.g., using the Session Description Protocol (SDP)\n   [RFC4566]
    and the SDP offer/answer mechanism [RFC3264].\n   Therefore, this document specifies
    a new <proto> value [RFC4566] for\n   the SDP media description (\"m=\" line)
    [RFC3264], in order to indicate\n   UDPTL over DTLS in SDP messages [RFC4566].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119\n
    \  [RFC2119].\n   DTLS uses the term \"session\" to refer to a long-lived set
    of keying\n   material that spans DTLS associations.  In this document, in order
    to\n   be consistent with SIP/SDP usage of \"session\" terminology, we use\n   \"session\"
    to refer to a multimedia session and use the term \"DTLS\n   session\" to refer
    to the DTLS construct.  We use the term \"DTLS\n   association\" to refer to a
    particular DTLS cipher suite and keying\n   material set that is associated with
    a single host/port quartet.  The\n   same DTLS session can be used to establish
    the keying material for\n   multiple DTLS associations.  For consistency with
    other SIP/SDP\n   usage, we use the term \"connection\" when what's being referred
    to is\n   a multimedia stream that is not specifically DTLS.\n"
  title: 2.  Conventions
- contents:
  - "3.  Secure Channel\n   The UDPTL-over-DTLS media stream is negotiated using the
    SDP offer/\n   answer mechanism [RFC3264].  See Section 4 for more details.\n
    \  DTLS is used as specified in [RFC6347].  Once the DTLS handshake is\n   successfully
    completed (in order to prevent facsimile data from being\n   transmitted insecurely),
    the UDPTL packets MUST be transported in\n   DTLS record layer \"application_data\"
    packets.\n"
  title: 3.  Secure Channel
- contents:
  - '4.  SDP Offerer/Answerer Procedures

    '
  - contents:
    - "4.1.  General\n   An endpoint (i.e., both the offerer and the answerer) MUST
      create an\n   SDP media description (\"m=\" line) for each UDPTL-over-DTLS media\n
      \  stream and MUST assign a UDP/TLS/UDPTL value (see Table 1) to the\n   \"proto\"
      field of the \"m=\" line.\n   The procedures in this section apply to an \"m=\"
      line associated with\n   a UDPTL-over-DTLS media stream.\n   In order to negotiate
      a UDPTL-over-DTLS media stream, the following\n   SDP attributes are used:\n
      \  o  The SDP attributes defined for UDPTL over UDP, as described in\n      [ITU.T38.2010];
      and\n   o  The SDP attributes, defined in [RFC4145] and [RFC4572], as\n      described
      in this section.\n   The endpoint MUST NOT use the SDP \"connection\" attribute
      [RFC4145].\n   In order to negotiate the TLS roles for the UDPTL-over-DTLS transport\n
      \  connection, the endpoint MUST use the SDP \"setup\" attribute\n   [RFC4145].\n
      \  If the endpoint supports, and is willing to use, a cipher suite with\n   an
      associated certificate, the endpoint MUST include an SDP\n   \"fingerprint\"
      attribute [RFC4572].  The endpoint MUST support SHA-256\n   for generating and
      verifying the SDP \"fingerprint\" attribute value.\n   The use of SHA-256 is
      preferred.  UDPTL over DTLS, at a minimum, MUST\n   support TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
      and MUST support\n   TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256.  UDPTL over DTLS
      MUST prefer\n   TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and any other Perfect
      Forward\n   Secrecy (PFS) cipher suites over non-PFS cipher suites.\n   Implementations
      SHOULD disable TLS-level compression.\n   If a cipher suite with an associated
      certificate is selected during\n   the DTLS handshake, the certificate received
      during the DTLS\n   handshake MUST match the fingerprint received in the SDP\n
      \  \"fingerprint\" attribute.  If the fingerprint does not match the\n   hashed
      certificate, then the endpoint MUST tear down the media\n   session immediately.
      \ Note that it is permissible to wait until the\n   other side's fingerprint
      has been received before establishing the\n   connection; however, this may
      have undesirable latency effects.\n"
    title: 4.1.  General
  - contents:
    - "4.2.  Generating the Initial Offer\n   The offerer SHOULD assign the SDP \"setup\"
      attribute with a value of\n   \"actpass\", unless the offerer insists on being
      either the sender or\n   receiver of the DTLS ClientHello message, in which
      case the offerer\n   can use either a value of \"active\" (the offerer will
      be the sender of\n   ClientHello) or \"passive\" (the offerer will be the receiver
      of\n   ClientHello).  The offerer MUST NOT assign an SDP \"setup\" attribute\n
      \  with a \"holdconn\" value.\n   If the offerer assigns the SDP \"setup\" attribute
      with a value of\n   \"actpass\" or \"passive\", the offerer MUST be prepared
      to receive a\n   DTLS ClientHello message before it receives the SDP answer.\n"
    title: 4.2.  Generating the Initial Offer
  - contents:
    - "4.3.  Generating the Answer\n   If the answerer accepts the offered UDPTL-over-DTLS
      transport\n   connection, in the associated SDP answer, the answerer MUST assign
      an\n   SDP \"setup\" attribute with a value of either \"active\" or \"passive\",\n
      \  according to the procedures in [RFC4145].  The answerer MUST NOT\n   assign
      an SDP \"setup\" attribute with a value of \"holdconn\".\n   If the answerer
      assigns an SDP \"setup\" attribute with a value of\n   \"active\" value, the
      answerer MUST initiate a DTLS handshake by\n   sending a DTLS ClientHello message
      on the negotiated media stream,\n   towards the IP address and port of the offerer.\n"
    title: 4.3.  Generating the Answer
  - contents:
    - "4.4.  Offerer Processing of the Answer\n   When the offerer receives an SDP
      answer, if the offerer ends up being\n   active it MUST initiate a DTLS handshake
      by sending a DTLS\n   ClientHello message on the negotiated media stream, towards
      the IP\n   address and port of the answerer.\n"
    title: 4.4.  Offerer Processing of the Answer
  - contents:
    - "4.5.  Modifying the Session\n   Once an offer/answer exchange has been completed,
      either endpoint MAY\n   send a new offer in order to modify the session.  The
      endpoints can\n   reuse the existing DTLS association if the key fingerprint
      values and\n   transport parameters indicated by each endpoint are unchanged.\n
      \  Otherwise, following the rules for the initial offer/answer exchange,\n   the
      endpoints can negotiate and create a new DTLS association and,\n   once created,
      delete the previous DTLS association, following the\n   same rules for the initial
      offer/answer exchange.  Each endpoint\n   needs to be prepared to receive data
      on both the new and old DTLS\n   associations as long as both are alive.\n"
    title: 4.5.  Modifying the Session
  title: 4.  SDP Offerer/Answerer Procedures
- contents:
  - '5.  Miscellaneous Considerations

    '
  - contents:
    - "5.1.  Anonymous Calls\n   When making anonymous calls, a new self-signed certificate
      SHOULD be\n   used for each call, and attributes inside the certificate MUST
      NOT\n   contain information that allows either correlation or identification\n
      \  of the user making anonymous calls.  This is particularly important\n   for
      the \"subjectAltName\" and \"commonName\" attributes.\n"
    title: 5.1.  Anonymous Calls
  - contents:
    - '5.2.  NAT Traversal

      '
    - contents:
      - "5.2.1.  ICE Usage\n   When Interactive Connectivity Establishment (ICE) [RFC5245]
        is being\n   used, the ICE connectivity checks are performed before the DTLS\n
        \  handshake begins.  Note that if aggressive nomination mode is used,\n   multiple
        candidate pairs may be marked valid before ICE finally\n   converges on a
        single candidate pair.  User Agents (UAs) MUST treat\n   all ICE candidate
        pairs associated with a single component as part of\n   the same DTLS association.
        \ Thus, there will be only one DTLS\n   handshake even if there are multiple
        valid candidate pairs.  Note\n   that this may mean adjusting the endpoint
        IP addresses if the\n   selected candidate pair shifts, just as if the DTLS
        packets were an\n   ordinary media stream.  In the case of an ICE restart,
        the DTLS\n   handshake procedure is repeated, and a new DTLS association is\n
        \  created.  Once the DTLS handshake is completed and the new DTLS\n   association
        has been created, the previous DTLS association is\n   deleted.\n"
      title: 5.2.1.  ICE Usage
    - contents:
      - "5.2.2.  STUN Interaction\n   The UA MUST send the Session Traversal Utilities
        for NAT (STUN)\n   packets [RFC5389] directly over UDP, not over DTLS.\n   The
        UA MUST support the following mechanism for demultiplexing\n   packets arriving
        on the IP address and port associated with the DTLS\n   association:\n   o
        \ If the value of the first byte of the packet is 0 or 1, then the\n      packet
        is STUN.\n   o  If the value of the first byte of the packet is between 20
        and 63\n      (inclusive), the packet is DTLS.\n"
      title: 5.2.2.  STUN Interaction
    title: 5.2.  NAT Traversal
  - contents:
    - "5.3.  Rekeying\n   During rekeying, packets protected by the previous set of
      keys can\n   arrive after the DTLS handshake caused by rekeying has completed,\n
      \  because packets can be reordered on the wire.  To compensate for this\n   fact,
      receivers MUST maintain both sets of keys for some time in\n   order to be able
      to decrypt and verify older packets.  The duration\n   of maintaining the previous
      set of keys after the finish of the DTLS\n   handshake is out of the scope of
      this document.\n"
    title: 5.3.  Rekeying
  - contents:
    - "5.4.  Compatibility with UDPTL over UDP\n   If a user requires fax to be transported
      securely using UDPTL over\n   DTLS, and if the remote user does not support
      UDPTL over DTLS, then a\n   fax media stream cannot be established.\n   If a
      user prefers fax to be transported securely using UDPTL over\n   DTLS but is
      willing to transport the fax insecurely in case the\n   remote user does not
      support UDPTL over DTLS, then the SDP Capability\n   Negotiation mechanism [RFC5939]
      can be used to offer both UDPTL over\n   DTLS and UDPTL over UDP.  Alternatively,
      if the remote user rejects\n   an SDP offer for UDPTL over DTLS, a new SDP offer
      for a UDPTL-over-\n   UDP media stream can be sent.\n"
    title: 5.4.  Compatibility with UDPTL over UDP
  title: 5.  Miscellaneous Considerations
- contents:
  - "6.  Security Considerations\n   Fax may be used to transmit a wide range of sensitive
    data, including\n   personal, corporate, and governmental information.  It is
    therefore\n   critical to be able to protect against threats to the confidentiality\n
    \  and integrity of the transmitted data.\n   The mechanism in this document provides
    integrity and confidentiality\n   protection for fax by specifying fax transport
    using UDPTL over DTLS\n   [RFC6347].\n   DTLS media stream negotiated using SIP/SDP
    requires a mechanism to\n   ensure that the certificate received via DTLS was
    issued by the\n   remote party of the SIP session.\n   The standard DTLS strategy
    for authenticating the communicating\n   parties is to give the server (and optionally
    the client) a PKIX\n   [RFC5280] certificate.  The client then verifies the certificate
    and\n   checks that the name in the certificate matches the server's domain\n
    \  name.  This works because there are a relatively small number of\n   servers
    and the cost for issuing and deploying PKIX certificates can\n   be justified.
    \ Issuing and deploying PKIX certificates to all clients\n   is not realistic
    in most deployment scenarios.\n   The design described in this document is intended
    to leverage the\n   integrity protection of the SIP signaling, while not requiring\n
    \  confidentiality.  As long as each side of the connection can verify\n   the
    integrity of the SDP received from the other side, then the DTLS\n   handshake
    cannot be hijacked via a man-in-the-middle attack.  This\n   integrity protection
    is easily provided by the caller to the callee\n   via the SIP Identity [RFC4474]
    mechanism.  Other mechanisms, such as\n   the S/MIME mechanism [RFC3261] or perhaps
    future mechanisms yet to be\n   specified, could also serve this purpose.\n   While
    this mechanism can still be used without such integrity\n   mechanisms, the security
    provided is limited to defense against\n   passive attack by intermediaries.  An
    active attack on the signaling\n   plus an active attack on the media plane can
    allow an attacker to\n   attack the connection (R-SIG-MEDIA in the notation of
    [RFC5479]).\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document updates the \"Session Description Protocol
    (SDP)\n   Parameters\" registry as specified in Section 8.2.2 of [RFC4566].\n
    \  Specifically, the values in Table 1 have been added to the SDP\n   \"proto\"
    field registry.\n                   +-------+---------------+-----------+\n                   |
    \ Type |    SDP Name   | Reference |\n                   +-------+---------------+-----------+\n
    \                  | proto | UDP/TLS/UDPTL | [RFC7345] |\n                   +-------+---------------+-----------+\n
    \                    Table 1: SDP \"proto\" Field Values\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgments\n   Special thanks to Peter Dawes, who provided comments
    on the initial\n   draft version of the document, and to Paul E. Jones, James
    Rafferty,\n   Albrecht Schwarz, Oscar Ohlsson, David Hanes, Adam Gensler, Ari\n
    \  Keranen, Flemming Andreasen, John Mattsson, and Marc Petit-Huguenin,\n   who
    provided valuable feedback and input.  Barry Leiba, Spencer\n   Dawkins, Pete
    Resnick, Kathleen Moriarty, and Stephen Farrell\n   provided valuable feedback
    during the IESG review.  Thanks to Scott\n   Brim for performing the Gen-ART review.
    \ Thanks to Alissa Cooper for\n   her help as sponsoring Area Director.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [ITU.T30.2005]\n              International
      Telecommunications Union, \"Procedures for\n              document facsimile
      transmission in the general switched\n              telephone network\", ITU-T
      Recommendation T.30, September\n              2005.\n   [ITU.T38.2010]\n              International
      Telecommunications Union, \"Procedures for\n              real-time Group 3
      facsimile communication over IP\n              networks\", ITU-T Recommendation
      T.38, September 2010.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
      to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,
      Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:
      Session Initiation Protocol\", RFC 3261,\n              June 2002.\n   [RFC3264]
      \ Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n              with
      Session Description Protocol (SDP)\", RFC 3264, June\n              2002.\n
      \  [RFC4145]  Yon, D. and G. Camarillo, \"TCP-Based Media Transport in\n              the
      Session Description Protocol (SDP)\", RFC 4145,\n              September 2005.\n
      \  [RFC4474]  Peterson, J. and C. Jennings, \"Enhancements for\n              Authenticated
      Identity Management in the Session\n              Initiation Protocol (SIP)\",
      RFC 4474, August 2006.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins,
      \"SDP: Session\n              Description Protocol\", RFC 4566, July 2006.\n
      \  [RFC4572]  Lennox, J., \"Connection-Oriented Media Transport over the\n              Transport
      Layer Security (TLS) Protocol in the Session\n              Description Protocol
      (SDP)\", RFC 4572, July 2006.\n   [RFC5245]  Rosenberg, J., \"Interactive Connectivity
      Establishment\n              (ICE): A Protocol for Network Address Translator
      (NAT)\n              Traversal for Offer/Answer Protocols\", RFC 5245, April\n
      \             2010.\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen,
      S.,\n              Housley, R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure
      Certificate and Certificate Revocation List\n              (CRL) Profile\",
      RFC 5280, May 2008.\n   [RFC5389]  Rosenberg, J., Mahy, R., Matthews, P., and
      D. Wing,\n              \"Session Traversal Utilities for NAT (STUN)\", RFC
      5389,\n              October 2008.\n   [RFC6347]  Rescorla, E. and N. Modadugu,
      \"Datagram Transport Layer\n              Security Version 1.2\", RFC 6347,
      January 2012.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The
      Transport Layer Security\n              (TLS) Protocol Version 1.2\", RFC 5246,
      August 2008.\n   [RFC5479]  Wing, D., Fries, S., Tschofenig, H., and F. Audet,\n
      \             \"Requirements and Analysis of Media Security Management\n              Protocols\",
      RFC 5479, April 2009.\n   [RFC5939]  Andreasen, F., \"Session Description Protocol
      (SDP)\n              Capability Negotiation\", RFC 5939, September 2010.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - 'Appendix A.  Examples

    '
  - contents:
    - "A.1.  General\n   Prior to establishing the session, both Alice and Bob generate
      self-\n   signed certificates that are used for a single session or, more\n
      \  likely, reused for multiple sessions.\n   The SIP signaling from Alice to
      her proxy is transported over TLS to\n   ensure an integrity-protected channel
      between Alice and her identity\n   service.  Alice's identity service asserts
      identity of Alice and\n   protects the SIP message, e.g., using SIP Identity.
      \ Transport\n   between proxies should also be protected, e.g., by use of TLS.\n
      \  In order to simplify the flow, only one element is shown for Alice's\n   and
      Bob's proxies.\n   For the sake of brevity and simplicity, only the mandatory
      SDP T.38\n   attributes are shown.\n"
    title: A.1.  General
  - contents:
    - "A.2.  Basic Message Flow\n   Figure 3 shows an example message flow of session
      establishment for\n   T.38 fax securely transported using UDPTL over DTLS.\n
      \  In this example flow, Alice acts as the passive endpoint of the DTLS\n   association,
      and Bob acts as the active endpoint of the DTLS\n   association.\n         Alice
      \                   Proxies                   Bob\n           | (1) SIP INVITE
      \        |                        |\n           |----------------------->|                        |\n
      \          |                        | (2) SIP INVITE         |\n           |
      \                       |----------------------->|\n           |                        |
      \  (3) DTLS ClientHello |\n           |<------------------------------------------------|\n
      \          |    (4) remaining messages of DTLS handshake     |\n           |<----------------------------------------------->|\n
      \          |                        |                        |\n           |
      \                       |                        |\n           |                        |
      \        (5) SIP 200 OK |\n           |                        |<-----------------------|\n
      \          |         (6) SIP 200 OK |                        |\n           |<-----------------------|
      \                       |\n           | (7) SIP ACK            |                        |\n
      \          |------------------------------------------------>|\n           |
      \     (8) T.38 message using UDPTL over DTLS     |\n           |<----------------------------------------------->|\n
      \          |                        |                        |\n                       Figure
      3: Basic Message Flow\n   Message (1):\n      Figure 4 shows the initial INVITE
      request sent by Alice to Alice's\n      proxy.  The initial INVITE request contains
      an SDP offer.\n      The \"m=\" line in the SDP offer indicates T.38 fax using
      UDPTL over\n      DTLS.\n      The SDP \"setup\" attribute with a value of \"actpass\"
      in the SDP\n      offer indicates that Alice has requested to be either the
      active\n      or passive endpoint.\n      The SDP \"fingerprint\" attribute
      in the SDP offer contains the\n      certificate fingerprint computed from Alice's
      self-signed\n      certificate.\n   INVITE sip:bob@example.com SIP/2.0\n   To:
      <sip:bob@example.com>\n   From: \"Alice\"<sip:alice@example.com>;tag=843c7b0b\n
      \  Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj\n   Contact:
      <sip:alice@ua1.example.com>\n   Call-ID: 6076913b1c39c212@REVMTEpG\n   CSeq:
      1 INVITE\n   Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, UPDATE\n   Max-Forwards:
      70\n   Content-Type: application/sdp\n   Content-Length: xxxx\n   Supported:
      from-change\n   v=0\n   o=- 1181923068 1181923196 IN IP4 ua1.example.com\n   s=-\n
      \  c=IN IP4 ua1.example.com\n   t=0 0\n   m=image 6056 UDP/TLS/UDPTL t38\n   a=setup:actpass\n
      \  a=fingerprint: SHA-1 \\\n     4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                           Figure
      4: Message (1)\n   Message (2):\n      Figure 5 shows the SIP INVITE request
      sent by Bob's proxy to Bob.\n      When received, Bob verifies the identity
      provided in the SIP\n      INVITE request.\n   INVITE sip:bob@ua2.example.com
      SIP/2.0\n   To: <sip:bob@example.com>\n   From: \"Alice\"<sip:alice@example.com>;tag=843c7b0b\n
      \  Via: SIP/2.0/TLS proxy.example.com;branch=z9hG4bK-0e53sadfkasldk\n   Via:
      SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj\n   Record-Route:
      <sip:proxy.example.com;lr>\n   Contact: <sip:alice@ua1.example.com>\n   Call-ID:
      6076913b1c39c212@REVMTEpG\n   CSeq: 1 INVITE\n   Allow: INVITE, ACK, CANCEL,
      OPTIONS, BYE, UPDATE\n   Max-Forwards: 69\n   Content-Type: application/sdp\n
      \  Content-Length: xxxx\n   Supported: from-change\n   v=0\n   o=- 1181923068
      1181923196 IN IP4 ua1.example.com\n   s=-\n   c=IN IP4 ua1.example.com\n   t=0
      0\n   m=image 6056 UDP/TLS/UDPTL t38\n   a=setup:actpass\n   a=fingerprint:
      SHA-1 \\\n     4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                           Figure
      5: Message (2)\n   Message (3):\n      Assuming that Alice's identity is valid,
      Bob sends a DTLS\n      ClientHello directly to Alice.\n   Message (4):\n      Alice
      and Bob exchange further messages of DTLS handshake\n      (HelloVerifyRequest,
      ClientHello, ServerHello, Certificate,\n      ServerKeyExchange, CertificateRequest,
      ServerHelloDone,\n      Certificate, ClientKeyExchange, CertificateVerify,\n
      \     ChangeCipherSpec, and Finished).\n      When Bob receives the certificate
      of Alice via DTLS, Bob checks\n      whether the certificate fingerprint calculated
      from Alice's\n      certificate received via DTLS matches the certificate fingerprint\n
      \     received in the a=fingerprint SDP attribute of Figure 5.  In this\n      message
      flow, the check is successful; thus, session setup\n      continues.\n      Note
      that, unlike in this example, it is not necessary to wait for\n      the DTLS
      handshake to finish before the SDP answer is sent.  If\n      Bob has sent the
      SIP 200 (OK) response and later detects that the\n      certificate fingerprints
      do not match, he will terminate the\n      session.\n   Message (5):\n      Figure
      6 shows a SIP 200 (OK) response to the initial SIP INVITE\n      request, sent
      by Bob to Bob's proxy.  The SIP 200 (OK) response\n      contains an SDP answer.\n
      \     The \"m=\" line in the SDP answer indicates T.38 fax using UDPTL\n      over
      DTLS.\n      The SDP \"setup\" attribute with a value of \"active\" in the SDP\n
      \     answer indicates that Bob has requested to be the active endpoint.\n      The
      SDP \"fingerprint\" attribute in the SDP answer contains the\n      certificate
      fingerprint computed from Bob's self-signed\n      certificate.\n   SIP/2.0
      200 OK\n   To: <sip:bob@example.com>;tag=6418913922105372816\n   From: \"Alice\"
      <sip:alice@example.com>;tag=843c7b0b\n   Via: SIP/2.0/TLS proxy.example.com:5061;branch=z9hG4bK-0e53sadfkasldk\n
      \  Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj\n   Record-Route:
      <sip:proxy.example.com;lr>\n   Call-ID: 6076913b1c39c212@REVMTEpG\n   CSeq:
      1 INVITE\n   Contact: <sip:bob@ua2.example.com>\n   Content-Type: application/sdp\n
      \  Content-Length: xxxx\n   Supported: from-change\n   v=0\n   o=- 8965454521
      2105372818 IN IP4 ua2.example.com\n   s=-\n   c=IN IP4 ua2.example.com\n   t=0
      0\n   m=image 12000 UDP/TLS/UDPTL t38\n   a=setup:active\n   a=fingerprint:
      SHA-1 \\\n     FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                           Figure
      6: Message (5)\n   Message (6):\n      Figure 7 shows a SIP 200 (OK) response
      to the initial SIP INVITE\n      request, sent by Alice's proxy to Alice.  Alice
      checks if the\n      certificate fingerprint calculated from the Bob's certificate\n
      \     received via DTLS is the same as the certificate fingerprint\n      received
      in the a=fingerprint SDP attribute of Figure 7.  In this\n      message flow,
      the check is successful; thus, the session setup\n      continues.\n   SIP/2.0
      200 OK\n   To: <sip:bob@example.com>;tag=6418913922105372816\n   From: \"Alice\"
      <sip:alice@example.com>;tag=843c7b0b\n   Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj\n
      \  Record-Route: <sip:proxy.example.com;lr>\n   Call-ID: 6076913b1c39c212@REVMTEpG\n
      \  CSeq: 1 INVITE\n   Contact: <sip:bob@ua2.example.com>\n   Content-Type: application/sdp\n
      \  Content-Length: xxxx\n   Supported: from-change\n   v=0\n   o=- 8965454521
      2105372818 IN IP4 ua2.example.com\n   s=-\n   c=IN IP4 ua2.example.com\n   t=0
      0\n   m=image 12000 UDP/TLS/UDPTL t38\n   a=setup:active\n   a=fingerprint:
      SHA-1 \\\n     FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                           Figure
      7: Message (6)\n   Message (7):\n      Alice sends the SIP ACK request to Bob.\n
      \  Message (8):\n      At this point, Bob and Alice can exchange T.38 fax securely\n
      \     transported using UDPTL over DTLS.\n"
    title: A.2.  Basic Message Flow
  - contents:
    - "A.3.  Message Flow of T.38 Fax Replacing Audio Media Stream in an\n      Existing
      Audio-Only Session\n   Traditionally, most sessions with non-secure transport
      of T.38 fax,\n   transported using UDPTL, are established by modifying an ongoing\n
      \  audio session into a fax session.  Figure 8 shows an example message\n   flow
      of modifying an existing audio session into a session with T.38\n   fax securely
      transported using UDPTL over DTLS.\n   In this example flow, Alice acts as the
      passive endpoint of the DTLS\n   association, and Bob acts as the active endpoint
      of the DTLS\n   association.\n         Alice                    Proxies                   Bob\n
      \          |                        |                        |\n           |
      \       (1) Audio-only session initiation        |\n           |<-----------------------+----------------------->|\n
      \          |                        |                        |\n           |
      (2) SIP re-INVITE      |                        |\n           |------------------------------------------------>|\n
      \          |                        |   (3) DTLS ClientHello |\n           |<------------------------------------------------|\n
      \          |    (4) remaining messages of DTLS handshake     |\n           |<----------------------------------------------->|\n
      \          |                        |                        |\n           |
      \                       |                        |\n           |                        |
      \        (5) SIP 200 OK |\n           |<------------------------------------------------|\n
      \          | (6) SIP ACK            |                        |\n           |------------------------------------------------>|\n
      \          |      (7) T.38 message using UDPTL over DTLS     |\n           |<----------------------------------------------->|\n
      \          |                        |                        |\n   Figure 8:
      Message Flow of T.38 Fax Replacing Audio Media Stream in an\n                        Existing
      Audio-Only Session\n   Message (1):\n      Session establishment of audio-only
      session.  The proxies decide\n      not to record-route.\n   Message (2):\n
      \     Alice sends SIP re-INVITE request.  The SDP offer included in the\n      SIP
      re-INVITE request is shown in Figure 9.\n      The first \"m=\" line in the
      SDP offer indicates audio media stream\n      being removed.  The second \"m=\"
      line in the SDP offer indicates\n      T.38 fax using UDPTL over DTLS being
      added.\n      The SDP \"setup\" attribute with a value of \"actpass\" in the
      SDP\n      offer indicates that Alice has requested to be either the active\n
      \     or passive endpoint.\n      The SDP \"fingerprint\" attribute in the SDP
      offer contains the\n      certificate fingerprint computed from Alice's self-signed\n
      \     certificate.\n   v=0\n   o=- 2465353433 3524244442 IN IP4 ua1.example.com\n
      \  s=-\n   c=IN IP4 ua1.example.com\n   t=0 0\n   m=audio 0 UDP/TLS/RTP/SAVP
      0\n   m=image 46056 UDP/TLS/UDPTL t38\n   a=setup:actpass\n   a=fingerprint:
      SHA-1 \\\n     4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                    Figure 9: SDP
      Offer of Message (2)\n   Message (3):\n      Bob sends a DTLS ClientHello directly
      to Alice.\n   Message (4):\n      Alice and Bob exchange further messages of
      DTLS handshake\n      (HelloVerifyRequest, ClientHello, ServerHello, Certificate,\n
      \     ServerKeyExchange, CertificateRequest, ServerHelloDone,\n      Certificate,
      ClientKeyExchange, CertificateVerify,\n      ChangeCipherSpec, and Finished).\n
      \     When Bob receives the certificate of Alice via DTLS, Bob checks\n      whether
      the certificate fingerprint calculated from Alice's\n      certificate received
      via DTLS matches the certificate fingerprint\n      received in the SDP \"fingerprint\"
      attribute of Figure 9.  In this\n      message flow, the check is successful;
      thus, session setup\n      continues.\n   Message (5):\n      Bob sends a SIP
      200 (OK) response to the SIP re-INVITE request.\n      The SIP 200 (OK) response
      contains an SDP answer shown in\n      Figure 10.\n      The first \"m=\" line
      in the SDP offer indicates audio media stream\n      being removed.  The second
      \"m=\" line in the SDP answer indicates\n      T.38 fax using UDPTL over DTLS
      being added.\n      The SDP \"setup\" attribute with a value of \"active\" in
      the SDP\n      answer indicates that Bob has requested to be the active endpoint.\n
      \     The SDP \"fingerprint\" attribute in the SDP answer contains the\n      certificate
      fingerprint computed from Bob's self-signed\n      certificate.\n   v=0\n   o=-
      4423478999 5424222292 IN IP4 ua2.example.com\n   s=-\n   c=IN IP4 ua2.example.com\n
      \  t=0 0\n   m=audio 0 UDP/TLS/RTP/SAVP 0\n   m=image 32000 UDP/TLS/UDPTL t38\n
      \  a=setup:active\n   a=fingerprint: SHA-1 \\\n     FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n
      \  a=T38FaxRateManagement:transferredTCF\n                   Figure 10: SDP
      Answer of Message (5)\n   Message (6):\n      Alice sends the SIP ACK request
      to Bob.\n   Message (7):\n      At this point, Bob and Alice can exchange T.38
      fax securely\n      transported using UDPTL over DTLS.\n"
    title: A.3.  Message Flow of T.38 Fax Replacing Audio Media Stream in an
  title: Appendix A.  Examples
- contents:
  - "Authors' Addresses\n   Christer Holmberg\n   Ericsson\n   Hirsalantie 11\n   Jorvas
    \ 02420\n   Finland\n   EMail: christer.holmberg@ericsson.com\n   Ivo Sedlacek\n
    \  Ericsson\n   Sokolovska 79\n   Praha  18600\n   Czech Republic\n   EMail: ivo.sedlacek@ericsson.com\n
    \  Gonzalo Salgueiro\n   Cisco Systems, Inc.\n   7200-12 Kit Creek Road\n   Research
    Triangle Park, NC  27709\n   US\n   EMail: gsalguei@cisco.com\n"
  title: Authors' Addresses
