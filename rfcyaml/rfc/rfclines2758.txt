Abstract This memo defines a Management Information Base (MIB) for performance monitoring of Service Level Agreements (SLAs) defined via policy definitions.
The MIB defined herein focuses on defining a set of objects for monitoring SLAs and not on replication of the content of the policy definitions being monitored.
The goal of the MIB defined within this document is to defined statistics related to a policy rule definition for reporting on the effect that a policy rule has on a system and to defined a method of monitoring this data.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
This document's purpose is to define a MIB module for performance management of Service Level Agreements (SLAs).
It is assumed that an SLA is defined via policy schema definitions.
The policy definitions being modeled with respect to performance management is primarily related to network Quality of Service (QOS).
There are a number of methods that exist for defining and administering policy.
Definition of these methods is considered out side of the scope of this document.
The MIB module defined within this memo has been modeled using the various versions of the schema definitions being developed within the Policy Framework Working Group in the IETF.
The content of the MIB defined within this memo has evolved along with the Policy Framework Working Group schema definitions.
The SNMP Network Management Framework
The SNMP Management Framework presently consists of five major components:  An overall architecture, described in RFC 2571 [7].
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [14], STD 16, RFC 1212 [15] and RFC 1215 [16].
The second version, called SMIv2, is described in STD 58, RFC 2578 [3], STD 58, RFC 2579 [4] and STD 58, RFC 2580 [5].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [1].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [17] and RFC 1906 [18].
The third version of the message protocol is called SNMPv3 and described in RFC 1906 [18], RFC 2572 [8] and RFC 2574 [10].
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [1].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [6].
A set of fundamental applications described in RFC 2573 [9] and the view based access control mechanism described in RFC 2575 [11].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
3.0  Structure of the MIB
The SLAPM MIB consists of the following components:  scalar objects
(equivalent to the deprecated slapmPolicyStatsTable)
slapmPRMonTable (equivalent to the deprecated slapmPolicyMonitorTable)
slapmSubcomponentTable Refer to the compliance statement defined within SLAPM MIB for a definition of what objects and notifications MUST be implemented by all systems as opposed to those that MUST be implemented by end systems only.
Initially most of the tables defined by the MIB module within this document where directly indexed using a policy's name and a subordinate traffic profile name.
Over time the structure and resulting naming has grown more complex and as such has exceeded the capacity of being used as a direct MIB table index.
As a result of this the original tables (slapmPolicyStatsTable and slapmPolicyMonitorTable) have been deprecated and replaced with new tables that use an Unsigned32 index element instead of "names".
A new table has been defined, slapmPolicyNameTable, that maps the Unsigned32 index to a unique name associated with a given policy rule definition.
3.1  Scalar objects Global objects defined within SLAPM MIB:  slapmSpinLock Enables multiple management application access to SLAPM MIB.
An agent MUST implement the slapmSpinLock object to enable management applications to coordinate their use of the SLAPM MIB.
Management application use of slapmSpinLock is OPTIONAL.
slapmPolicyCountQueries, slapmPolicyCountAccesses, slapmPolicyCountSuccessAccesses, and slapmPolicyCountNotFounds Basic statistics on the amount of policy directory access that has occurred at a system.
slapmPolicyPurgeTime Used to prevent the entries in various SLAPM MIB tables that relate to a policy definition from immediately being deleted when the corresponding policy definition no longer exists.
This gives management applications time to discover this condition and close out any polled based interval data that may be being collected.
All dependent slapmPRMonTable entries are also deleted when its parent slapmPolicyRuleStatsEntry is removed.
Refer to the OBJECT description for slapmPolicyPurgeTime for a more precise description of this function.
This object enables or suppresses generation of slapmPolicyRuleDeleted or slapmPolicyRuleMonDeleted notifications.
This object enables suppression of slapmSubcMonitorNotOkay notifications.
The slapmPolicyNameTable maps a Unsigned32 index to a unique name associated with a given policy rule definition.
Currently, the core schema definition being worked on within the Policy Framework working group defines five general classes: policyGroup, policyRule, policyCondition, policyTimePeriodCondition, and policyAction.
"Policies can either be used in a stand alone fashion or aggregated into policy groups to perform more elaborate functions.
Stand alone policies are called policy rules.
Policy groups are aggregations of policy rules, or aggregations of policy groups, but not both."
Each policy rule consists of a set of conditions and a set of actions.
Policy rules may be aggregated into policy groups.
"Instances in a directory are identified by distinguished names (DNs), which provide the same type of hierarchical organization that a file system provides in a computer system.
A distinguished name is a sequence of relative distinguished names (RDNs), where an RDN provides a unique identifier for an instance within the context of its immediate superior, in the same way that a filename provides a unique identifier for a file within the context of the folder in which it resides.
" Each of these instances can also be named to fit in with the existing DEN practice with a commonName (cn) attribute as oppose to the classes name attribute.
The cn, or commonName, attribute is an X.500 attribute.
It specifies a user friendly name by which the object is commonly known.
This name may be ambiguous by itself.
This name is used in a limited scope (such as an organization).
It conforms to the naming conventions of the country or culture with which it is associated.
CN is used universally in DEN as the naming attribute for a class.
An slapmPolicyNameEntry contains a single object, slapmPolicyNameOfRule, that contains the unique name associated with a policy rule instance.
An slapmPolicyNameEntry is indexed by a Unsigned32 index, slapmPolicyNameIndex, that is assigned by the implementation of this MIB.
This table is functionally equivalent to the deprecated slapmPolicyStatsTable.
The slapmPolicyStatsTable uses the name of both a policy definition and a traffic profile name to index an entry.
The slapmPolicyRuleStatsTable uses an slapmPolicyNameEntry index (Unsigned32) instead.
The slapmPolicyRuleStatsTable is the main table defined by SLAPM MIB.
The primary index for this table is slapmPolicyNameSystemAddress that enables support of multiple systems from a single policy agent.
The index element, slapmPolicyNameSystemAddress, value must be either the zero length octet string when at a policy agent
only a single system is being support, 4 octets for a ipv4 address, or 16 octets for a ipv6 address.
It is possible that on a single system multiple policy agent instances exists.
The Entity MIB, refer to [19], should be used to handle the resulting MIBs.
one slapmPolicyRuleStatsEntry exists for each policy rule instance.
Entries in this table are not administered via SNMP.
An agent implementation for this table MUST reflect its current set of policy rule instances via table entries.
The mechanisms for policy administration are outside of the scope of this memo.
This table is functionally equivalent to the deprecated slapmPolicyMonitorTable.
The slapmPolicyMonitorTable uses the name of both a policy definition and a traffic profile name to index an entry.
The slapmPRMonTable uses an slapmPolicyNameEntry index (Unsigned32) instead.
The slapmPRMonTable provides a method of monitoring the effect of SLA policy being used at a system.
A management application creates an slapmPRMonEntry for each collection that it requires.
The value of the BITS slapmPRMonControl object determines what type of monitoring occurs, at what level to monitor and whether trap support is enabled:  monitorMinRate(0)
Use the value of slapmPRMonInterval as the interval to determine current traffic in and out rates, using slapmPRMonCurrentInRate and slapmPRMonCurrentOutRate, that can be compared to slapmPRMonMinRateLow for determining when to generate a slapmPolicyRuleMonNotOkay notification.
The notification slapmPolicyRuleMonOkay is generated when the problem is resolved.
This can be determined by comparing the current rates to slapmPRMonMinRateHigh.  monitorMaxRate(1)
Use the value of slapmPRMonInterval as the interval to determine current traffic in and out rate, using slapmPRMonCurrentInRate and slapmPRMonCurrentOutRate, that can be compared to slapmPRMonMaxRateHigh for determining when to generate a slapmPolicyRuleMonNotOkay notification.
The notification slapmPolicyRuleMonOkay is generated when the problem is resolved.
This can be determined by comparing the current rates to slapmPRMonMaxRateLow.
Use the value of slapmPRMonInterval as the interval to determine the current delay.
This can be calculated on an aggregate level by averaging the round trip times for all TCP connections associated with the policy definition.
For an individual subcomponent its round trip time can be used directly.
Compare this value to slapmPRMonMaxDelayHigh for determining when to generate a slapmPolicyRuleMonNotOkay notification.
The notification slapmPolicyRuleMonOkay is generated when the problem is resolved.
This can be determined by comparing the current rates to slapmPRMonMaxDelayLow.
UDP subcomponents don't support max delay monitoring.
The slapmPRMonitorControl BITS setting, enableAggregateTraps(3), MUST be set in order for any notifications relating to slapmPolicyRuleStatsTable monitoring to be generated.
This slapmPRMonControl BITS setting MUST be set in order for any notifications relating to slapmSubcomponetTable monitoring to be generated.
The slapmPRMonControl BITS setting monitorSubcomponents(5) MUST be selected in order for this setting to be allowed.
If selected monitor slapmSubcomponentTable entries individually.
Note: aggregate policy rule monitoring is always enabled.
The index element slapmPRMonOwnerIndex is used as the first index in slapmPRMonTable in order to enable SNMP VACM security control.
The slapmPRMonTable is the only table that supports SNMP RowStatus operations.
3.5  slapmSubcomponentTable Entries are made into this table for the protocol entities (policy traffic profile subcomponents) to indicate actual policy rule usage, provide general statistics at either a TCP connection or UDP listener level, and enable subcomponent monitoring.
IMPORTS MODULE IDENTITY, OBJECT TYPE, experimental, Integer32, NOTIFICATION TYPE, Gauge32, Counter32,
TEXTUAL CONVENTION, RowStatus, TestAndIncr, DateAndTime FROM SNMPv2 TC
RFC2579 MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2 CONF
International Business Machines Corp." CONTACT INFO "Kenneth White International Business Machines Corporation Network Computing Software Division Research Triangle Park, NC,
wkenneth@us.ibm.com" DESCRIPTION "The Service Level Agreement Performance Monitoring MIB (SLAPM MIB) provides data collection and monitoring capabilities for Service Level Agreements (SLAs) policy definitions."
This version published as RFC 2758."
TEXTUAL CONVENTION STATUS  deprecated DESCRIPTION "
The textual convention for naming entities within this MIB.
The actual contents of an object defined using this textual convention should consist of the distinguished name portion of an name.
This is usually the right most portion of the name.
This convention is necessary, since names within this MIB can be used as index items and an instance identifier is limited to 128 subidentifiers.
This textual convention has been deprecated.
All of the tables defined within this MIB that use this textual convention have been deprecated as well since the method of using a portion of the name (either of a policy definition or of a traffic profile) has been replaced by using an Unsigned32 index.
The new slapmPolicyNameTable would then map the Unsigned32 index to a real name."
TEXTUAL CONVENTION STATUS  current DESCRIPTION "
The textual convention for defining the various slapmPRMonTable (or old slapmPolicyMonitorTable) and the slapmSubcomponentTable states for actual policy rule traffic monitoring."
SYNTAX  BITS { slaMinInRateNotAchieved(0), slaMaxInRateExceeded(1), slaMaxDelayExceeded(2), slaMinOutRateNotAchieved(3), slaMaxOutRateExceeded(4), monitorMinInRateNotAchieved(5), monitorMaxInRateExceeded(6), monitorMaxDelayExceeded(7), monitorMinOutRateNotAchieved(8), monitorMaxOutRateExceeded(9)
" STATUS  current DESCRIPTION "To facilitate internationalization, this TC represents information taken from the ISO/IEC IS 10646 1 character set, encoded as an octet string using the UTF 8 character encoding scheme described in RFC 2044.
For strings in 7 bit US ASCII, there is no impact since the UTF 8 representation is identical to the US ASCII encoding."
Top level structure of the MIB slapmNotifications
An advisory lock used to allow cooperating applications to coordinate their use of the contents of this MIB.
This typically occurs when an application seeks to create an new entry or alter an existing entry in slapmPRMonTable (or old slapmPolicyMonitorTable).
A management implementation MAY utilize the slapmSpinLock to serialize its changes or additions.
This usage is not required.
However, slapmSpinLock MUST be supported by agent implementations."
The total number of times that a policy lookup occurred with respect to a policy agent.
This is the number of times that a reference was made to a policy definition at a system and includes the number of times that a policy repository was accessed, slapmPolicyCountAccesses.
The object slapmPolicyCountAccesses should be less than slapmPolicyCountQueries when policy definitions are cached at a system."
"Total number of times that a policy repository was accessed with respect to a policy agent.
The value of this object should be less than slapmPolicyCountQueries, since typically policy entries are cached to minimize repository accesses."
Total number of successful policy repository accesses with respect to a policy agent."
"Total number of policy repository accesses, with respect to a policy agent, that resulted in an entry not being located."
"The purpose of this object is to define the amount of time (in seconds) to wait before removing an slapmPolicyRuleStatsEntry (or old slapmPolicyStatsEntry) when a system detects that the associated policy definition has been deleted.
This gives any polling management applications time to complete their last poll before an entry is removed.
An slapmPolicyRuleStatsEntry (or old slapmPolicyStatsEntry) enters the deleteNeeded(3
) state via slapmPolicyRuleStatsOperStatus (or old
slapmPolicyStatsOperStatus) when a system first detects that the entry needs to be removed.
Once slapmPolicyPurgeTime has expired for an entry in deleteNeeded(3) state it is removed a long with any dependent slapmPRMonTable (or slapmPolicyMonitorTable) entries.
A value of 0 for this option disables this function and results in the automatic purging of slapmPRMonTable (or slapmPolicyTable) entries upon transition into deleteNeeded(3) state.
A slapmPolicyRuleDeleted (or slapmPolicyProfileDeleted) notification is sent when an slapmPolicyRuleStatsEntry (or slapmPolicyStatsEntry) is removed.
Dependent slapmPRMonTable (or slapmPolicyMonitorTable) deletion results in a slapmPolicyRuleMonDeleted (or slapmPolicyMonitorDeleted) notification being sent.
These notifications are suppressed if the value of slapmPolicyTrapEnable is disabled(2).
"Indicates whether slapmPolicyRuleDeleted and slapmPolicyRuleMonDeleted (or slapmPolicyProfileDeleted and slapmPolicyMonitorDeleted)
notifications should be generated by this system."
"The purpose of this object is to suppress unnecessary slapmSubcMonitorNotOkay (or slapmSubcomponentMonitoredEventNotAchieved), for example, notifications.
Basically, a monitored event has to not meet its SLA requirement for the number of consecutive intervals indicated by the value of this object.
Sla Performance Monitoring Policy Statistics Table slapmPolicyStatsTable OBJECT TYPE SYNTAX SEQUENCE OF
"Provides statistics on all policies known at a system.
This table has been deprecated and replaced with the slapmPolicyRuleStatsTable.
Older implementations of this MIB are expected to continue their support of this table."
"Defines an entry in the slapmPolicyStatsTable.
This table defines a set of statistics that is kept on a per system, policy and traffic profile basis.
A policy can be defined to contain multiple traffic profiles that map to a single action.
Entries in this table are not created or deleted via SNMP but reflect the set of policy definitions known at a system.
deprecated DESCRIPTION "Address of a system that an Policy definition relates to.
A zero length octet string must be used to indicate that only a single system is being represented.
Otherwise, the length of the octet string must be 4 for an ipv4 address or 16 for an ipv6 address."
deprecated DESCRIPTION "Policy name that this entry relates to."
"The name of a traffic profile that is associated with a policy."
{ slapmPolicyStatsEntry 3 } slapmPolicyStatsOperStatus OBJECT
, deleteNeeded(3) } MAX ACCESS  read only STATUS
The state of a policy entry: inactive(1)
An policy entry was either defined by local system definition or discovered via a directory search but has not been activated (not currently being used).
Policy entry is being used to affect traffic flows.
Either though local implementation dependent methods or by discovering that the directory entry corresponding to this table entry no longer exists and slapmPolicyPurgeTime needs to expire before attempting to remove the corresponding slapmPolicyStatsEntry and any dependent slapmPolicyMonitor table entries.
Note: a policy traffic profile in a state other than active(1) is not being used to affect traffic flows."
"The number of active TCP connections that are affected by the corresponding policy entry."
The timestamp for when the corresponding policy entry is activated.
The value of this object serves as the discontinuity event indicator when polling entries in this table.
The value of this object is updated on transition of slapmPolicyStatsOperStatus into the active(2) state.
The timestamp for when the last time that the associated policy entry was used."
"The limit for the number of active TCP connections that are allowed for this policy definition.
A value of zero for this object implies that a connection limit has not been specified."
"This counter is incremented when a policy action's Permission value is set to Accept and a session (TCP connection) is accepted."
"This counter is incremented when a policy action's Permission value is set to Deny and a session is denied, or when a session (TCP connection) is rejected due to a policy's connection limit (slapmPolicyStatsConnectLimit) being reached."
} slapmPolicyStatsInDiscards OBJECT TYPE SYNTAX
"This counter counts the number of in octets discarded.
This occurs when an error is detected.
Examples of this are buffer overflow, checksum error, or bad packet format."
"This counter counts the number of out octets discarded.
Examples of this are buffer overflow, checksum error, or bad packet format."
"This counter counts the number of in packets received that relate to this policy entry from IP."
"This counter counts the number of out packets sent by IP that relate to this policy entry."
"This counter counts the number of in octets that are determined to be within profile."
"This counter counts the number of out octets that are determined to be within profile."
"Kilobits per second" MAX ACCESS  read only STATUS
The minimum transfer rate defined for this entry."
"Kilobits per second" MAX ACCESS  read only STATUS
The maximum transfer rate defined for this entry."
The maximum delay defined for this entry."
deprecated DESCRIPTION "Provides a method of monitoring policies and their effect at a system.
This table has been deprecated and replaced with the slapmPRMonTable.
Older implementations of this MIB are expected to continue their support of this table."
deprecated DESCRIPTION "Defines an entry in the slapmPolicyMonitorTable.
This table defines which policies should be monitored on a per policy traffic profile basis.
To facilitate the provisioning of access control by a security administrator using the View Based Access Control Model (RFC 2575, VACM) for tables in which multiple users may need to independently create or modify entries, the initial index is used as an 'owner index'.
Such an initial index has a syntax of SnmpAdminString, and can thus be trivially mapped to a securityName or groupName as defined in VACM, in accordance with a security policy.
All entries in that table belonging to a particular user will have the same value for this initial index.
For a given user's entries in a particular table, the object identifiers for the information in these entries will have the same subidentifiers (except for the 'column' subidentifier) up to the end of the encoded owner index.
To configure VACM to permit access to this portion of the table, one would create vacmViewTreeFamilyTable entries with the value of vacmViewTreeFamilySubtree including the owner index portion, and vacmViewTreeFamilyMask 'wildcarding' the column subidentifier.
More elaborate configurations are possible."
deprecated DESCRIPTION "Address of a system that an Policy definition relates to.
A zero length octet string can be used to indicate that only a single system is being represented.
Otherwise, the length of the octet string should be 4 for an ipv4 address and 16 for an ipv6 address."
"The corresponding Traffic Profile name."
BITS { monitorMinRate(0), monitorMaxRate(1), monitorMaxDelay(2), enableAggregateTraps(3), enableSubcomponentTraps(4), monitorSubcomponents(5) } MAX ACCESS  read create STATUS
The value of this object determines the type and level of monitoring that is applied to a policy/profile.
The value of this object can't be changed once the table entry that it is a part of is activated via a slapmPolicyMonitorRowStatus transition to active state.
Monitor minimum transfer rate. monitorMaxRate(1)
The enableAggregateTraps(3) BITS setting enables notification generation when monitoring a policy traffic profile as an aggregate using the values in the corresponding slapmPolicyStatsEntry.
By default this function is not enabled.
This BITS setting enables notification generation when monitoring all subcomponents that are mapped to an corresponding slapmPolicyStatsEntry.
By default this function is not enabled.
This BITS setting enables monitoring of each subcomponent (typically a TCP connection or UDP listener) individually."
deprecated DESCRIPTION "The value of this object indicates when a monitored value has not meet a threshold or isn't meeting the defined service level.
The SlapmStatus TEXTUAL CONVENTION defines two levels of not meeting a threshold.
The first set: slaMinInRateNotAchieved(0), slaMaxInRateExceeded(1), slaMaxDelayExceeded(2), slaMinOutRateNotAchieved(3), slaMaxOutRateExceeded(4) are used to indicate when the SLA as an aggregate is not meeting a threshold while the second set: monitorMinInRateNotAchieved(5), monitorMaxInRateExceeded(6), monitorMaxDelayExceeded(7), monitorMinOutRateNotAchieved(8), monitorMaxOutRateExceeded(9) indicate that at least one subcomponent is not meeting a threshold."
"The number of seconds that defines the sample period."
deprecated DESCRIPTION "Using the value of the corresponding slapmPolicyMonitorInterval, slapmPolicyStatsInOctets is sampled and then divided by slapmPolicyMonitorInterval to determine the current in transfer rate."
deprecated DESCRIPTION "Using the value of the corresponding slapmPolicyMonitorInterval
, slapmPolicyStatsOutOctets is sampled and then divided by slapmPolicyMonitorInterval to determine the current out transfer rate."
The threshold for generating a slapmMonitoredEventNotAchieved notification, signalling that a monitored minimum transfer rate has not been meet.
A slapmMonitoredEventNotAchieved notification is not generated again for an slapmPolicyMonitorEntry
until the minimum transfer rate exceeds slapmPolicyMonitorMinRateHigh (a slapmMonitoredEventOkay notification is then transmitted) and then fails below slapmPolicyMonitorMinRateLow.
This behavior reduces the slapmMonitoredEventNotAchieved notifications that are transmitted.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMinRate(0) is not enabled.
When enabled the default value for this object is the min rate value specified in the associated action definition minus 10%.
If the action definition doesn't have a min rate defined
then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMinRate(0) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The threshold for generating a slapmMonitoredEventOkay notification, signalling that a monitored minimum transfer rate has increased to an acceptable level.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMinRate(0) is not enabled.
When enabled the default value for this object is the min rate value specified in the associated action definition plus 10%.
If the action definition doesn't have a min rate defined
then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMinRate(0) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
{ slapmPolicyMonitorEntry 12 } slapmPolicyMonitorMaxRateHigh OBJECT
The threshold for generating a slapmMonitoredEventNotAchieved notification, signalling that a monitored maximum transfer rate has been exceeded.
A slapmMonitoredEventNotAchieved notification is not generated again for an slapmPolicyMonitorEntry until the maximum transfer rate fails below slapmPolicyMonitorMaxRateLow (a slapmMonitoredEventOkay notification is then transmitted) and then raises above slapmPolicyMonitorMaxRateHigh.
This behavior reduces the slapmMonitoredEventNotAchieved notifications that are transmitted.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMaxRate(1) is not enabled.
When enabled the default value for this object is the max rate value specified in the associated action definition plus 10%.
If the action definition doesn't have a max rate defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxRate(1) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The threshold for generating a slapmMonitoredEventOkay notification, signalling that a monitored maximum transfer rate has fallen to an acceptable level.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMaxRate(1) is not enabled.
When enabled the default value for this object is the max rate value specified in the associated action definition minus 10%.
If the action definition doesn't have a max rate defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxRate(1) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The threshold for generating a slapmMonitoredEventNotAchieved notification, signalling that a monitored maximum delay rate has been exceeded.
A slapmMonitoredEventNotAchieved notification is not generated again for an slapmPolicyMonitorEntry until the maximum delay rate falls below slapmPolicyMonitorMaxDelayLow (a slapmMonitoredEventOkay notification is then transmitted) and raises above slapmPolicyMonitorMaxDelayHigh.
This behavior reduces the slapmMonitoredEventNotAchieved notifications that are transmitted.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMaxDelay(4) is not enabled.
When enabled the default value for this object is the max delay value specified in the associated action definition plus 10%.
If the action definition doesn't have a max delay defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxDelay(4) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The threshold for generating a slapmMonitoredEventOkay notification, signalling that a monitored maximum delay rate has fallen to an acceptable level.
A value of zero for this object is returned when the slapmPolicyMonitorControl monitorMaxDelay(4) is not enabled.
When enabled the default value for this object is the max delay value specified in the associated action definition minus 10%.
If the action definition doesn't have a max delay defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxDelay(4) is selected.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The number of times that a minimum transfer in rate was not achieved."
"The number of times that a maximum transfer in rate was exceeded."
The number of times that a minimum transfer out rate was not achieved."
{ slapmPolicyMonitorEntry 20 } slapmPolicyMonitorMaxOutRateExceeds OBJECT TYPE SYNTAX
This is calculated by taking the average of the TCP round trip times for all associating slapmSubcomponentTable entries within a interval."
"This object allows entries to be created and deleted in the slapmPolicyMonitorTable.
An entry in this table is deleted by setting this object to destroy(6).
Removal of a corresponding (same policy and traffic profile names)
slapmPolicyStatsEntry has the side effect of the automatic deletion an entry in this table."
"Defines a table to provide information on the individually components that are mapped to a policy rule (or old traffic profile).
The indexing for this table is designed to support the use of an SNMP GET
NEXT operation using only the remote address and remote port as a way for a management station to retrieve the table entries relating to a particular client."
"Describes a particular subcomponent entry.
This table does not have an OwnerIndex as part of its indexing since this table's contents is intended to span multiple users.
"Indicate the remote address of a subcomponent.
A remote address can be either an ipv4 address in which case 4 octets are required or as an ipv6 address that requires 16 octets.
The value of this subidentifier is a zero length octet string when this entry relates to a UDP listener."
"Indicate the remote port of a subcomponent.
The value of this subidentifier is 0 when this entry relates to a UDP listener."
{ slapmSubcomponentEntry 2 } slapmSubcomponentLocalAddress OBJECT TYPE SYNTAX
"Indicate the local address of a subcomponent.
A local address can be either an ipv4 address in which case 4 octets are required or as an ipv6 address that requires 16 octets."
"Indicate the local port of a subcomponent."
"Indicate the protocol in use that identifies the type of subcomponent."
{ slapmSubcomponentEntry 5 } slapmSubcomponentSystemAddress OBJECT TYPE SYNTAX
A zero length octet string can be used to indicate that only a single system is being represented.
Otherwise, the length of the octet string should be 4 for an ipv4 address and 16 for an ipv6 address."
deprecated DESCRIPTION "Policy name that this entry relates to.
This object, along with slapmSubcomponentTrafficProfileName, have been replaced with the use of an unsigned integer index that is mapped to an slapmPolicyNameEntry to actually identify policy naming."
deprecated DESCRIPTION "The corresponding traffic profile name.
This object, along with slapmSubcomponentProfileName, have been replaced with the use of an unsigned integer index that is mapped to an slapmPolicyNameEntry to actually identify policy naming."
The date and timestamp of when this entry was last used."
"The number of octets received from IP for this connection.
} slapmSubcomponentTcpOutBufferedOctets OBJECT TYPE SYNTAX
The value of this object is zero when the entry is not for a TCP connection."
The value of this object is zero when the entry is not for a TCP connection."
The value of this object is zero when the entry is not for a TCP connection."
The amount of time that has elapsed, measured in milliseconds, from when the last TCP segment was transmitted by the TCP Stack until the ACK was received.
The value of this object is zero when the entry is not for a TCP connection."
The value of this object is zero when the entry is not for a TCP connection."
"The number of protocol related data units transferred inbound:
"The number of protocol related data units transferred outbound:
"The application name associated with this entry if known, otherwise a zero length octet string is returned as the value of this object."
Only the following SlapmStatus BITS setting can be reported here: monitorMinInRateNotAchieved(5), monitorMaxInRateExceeded(6), monitorMaxDelayExceeded(7), monitorMinOutRateNotAchieved(8)
This object only has meaning when an corresponding slapmPolicyMonitorEntry exists with the slapmPolicyMonitorControl BITS setting monitorSubcomponents(5) enabled."
The timestamp for when the last interval ended.
This object only has meaning when an corresponding slapmPRMonEntry (or old slapmPolicyMonitorEntry) exists with the slapmPRMonControl (or slapmPolicyMonitorControl)
All of the octets returned when monitoring is not in effect
This object only has meaning when an corresponding slapmPRMonEntry (or slapmPolicyMonitorEntry) exists with the slapmPRMonControl (or slapmPolicyMonitorControl)
The value of this object is zero when monitoring is not in effect."
This object only has meaning when an corresponding slapmPRMonEntry (or slapmPolicyMonitorEntry) exists with the slapmPRMonControl (or slapmPolicyMonitorControl)
The value of this object is zero when monitoring is not in effect."
A value of 0 for this object MUST be returned when the corresponding slapmSubcomponentEntry has no policy rule associated with it."
slapmPolicyNameTable OBJECT TYPE SYNTAX SEQUENCE OF SlapmPolicyNameEntry MAX ACCESS
not accessible STATUS current DESCRIPTION
"Provides the mapping between a policy index as a unsigned 32 bit integer and the unique name associated with a policy rule."
current DESCRIPTION "Address of a system that an Policy rule definition relates to.
A zero length octet string must be used to indicate that only a single system is being represented.
Otherwise, the length of the octet string must be 4 for an ipv4 address or 16 for an ipv6 address."
A locally arbitrary, but unique identifier associated with this table entry.
This value is not expected to remain constant across reIPLs."
not accessible STATUS current DESCRIPTION
"Provides statistics on a per system and a per policy rule basis."
MAX ACCESS not accessible STATUS current DESCRIPTION
"Defines an entry in the slapmPolicyRuleStatsTable.
This table defines a set of statistics that is kept on a per system and per policy rule basis.
Entries in this table are not created or deleted via SNMP but reflect the set of policy rule definitions known at a system.
"The state of a policy entry: inactive(1)
An policy entry was either defined by local system definition or discovered via a directory search but has not been activated (not currently being used).
Policy entry is being used to affect traffic flows.
Either though local implementation dependent methods or by discovering that the directory entry corresponding to this table entry no longer exists and slapmPolicyPurgeTime needs to expire before attempting to remove the corresponding slapmPolicyStatsEntry and any dependent slapmPolicyMonitor table entries.
Note: a policy rule in a state other than active(2) is not being used to affect traffic flows."
The timestamp for when the corresponding policy entry was last activated.
The value of this object serves as the discontinuity event indicator when polling entries in this table.
The value of this object is updated on transition of slapmPolicyRuleStatsOperStatus into the active(2) state.
The timestamp for when the last time that the associated policy entry was used."
"The number of octets that was received by IP for an entity that map to this entry."
"The limit for the number of active TCP connections that are allowed for this policy definition.
A value of zero for this object implies that a connection limit has not been specified."
"This counter is incremented when a policy action's Permission value is set to Accept and a session (TCP connection) is accepted."
{ slapmPolicyRuleStatsEntry 9 } slapmPolicyRuleStatsCountDenies OBJECT TYPE SYNTAX
"This counter is incremented when a policy action's Permission value is set to Deny and a session is denied, or when a session (TCP connection) is rejected due to a policy's connection limit (slapmPolicyRuleStatsConnectLimit) being reached."
"This counter counts the number of in octets discarded.
This occurs when an error is detected.
Examples of this are buffer overflow, checksum error, or bad packet format."
"This counter counts the number of out octets discarded.
Examples of this are buffer overflow, checksum error, or bad packet format."
"This counter counts the number of in packets received that relate to this policy entry from IP."
"This counter counts the number of out packets sent by IP that relate to this policy entry."
"This counter counts the number of in octets that are determined to be within profile."
{ slapmPolicyRuleStatsEntry 15 } slapmPolicyRuleStatsOutProOctets OBJECT TYPE SYNTAX
"This counter counts the number of out octets that are determined to be within profile."
The minimum transfer rate defined for this entry."
"The maximum transfer rate defined for this entry."
"The maximum delay defined for this entry."
"Total number of RSVP flows that have be activated."
"Current number of active RSVP flows."
SLA Performance Monitoring Policy Rule Monitor Table
slapmPRMonTable OBJECT TYPE SYNTAX SEQUENCE OF SlapmPRMonEntry
MAX ACCESS not accessible STATUS current DESCRIPTION
"Provides a method of monitoring policies and their effect at a system."
"Defines an entry in the slapmPRMonTable.
This table defines which policies should be monitored on a per policy rule basis.
An attempt to set any read create object defined within an slapmPRMonEntry while the value of slapmPRMonRowStatus is active(1) will result in an inconsistentValue error.
To facilitate the provisioning of access control by a security administrator using the View Based Access Control Model (RFC 2575, VACM) for tables in which multiple users may need to independently create or modify entries, the initial index is used as an 'owner index'.
Such an initial index has a syntax of SnmpAdminString, and can thus be trivially mapped to a securityName or groupName as defined in VACM, in accordance with a security policy.
All entries in that table belonging to a particular user will have the same value for this initial index.
For a given user's entries in a particular table, the object identifiers for the information in these entries will have the same subidentifiers (except for the 'column' subidentifier) up to the end of the encoded owner index.
To configure VACM to permit access to this portion of the table, one would create vacmViewTreeFamilyTable entries with the value of vacmViewTreeFamilySubtree including the owner index portion, and vacmViewTreeFamilyMask 'wildcarding' the column subidentifier.
More elaborate configurations are possible."
current DESCRIPTION "Address of a system that an Policy definition relates to.
A zero length octet string can be used to indicate that only a single system is being represented.
Otherwise, the length of the octet string should be 4 for an ipv4 address and 16 for an ipv6 address."
slapmPRMonEntry 2 } slapmPRMonIndex OBJECT TYPE SYNTAX
current DESCRIPTION "An slapmPolicyNameTable index, slapmPolicyNameIndex, that points to the unique name associated with a policy rule definition."
"The value of this object determines the type and level of monitoring that is applied to a policy rule.
The value of this object can't be changed once the table entry that it is a part of is activated via a slapmPRMonRowStatus transition to active state.
Monitor minimum transfer rate. monitorMaxRate(1)
The enableAggregateTraps(3) BITS setting enables notification generation when monitoring a policy rule as an aggregate using the values in the corresponding slapmPRMonStatsEntry.
By default this function is not enabled.
This BITS setting enables notification generation when monitoring all subcomponents that are mapped to an corresponding slapmPRMonStatsEntry.
By default this function is not enabled.
This BITS setting enables monitoring of each subcomponent (typically a TCP connection or UDP listener) individually."
slapmPRMonEntry 4 } slapmPRMonStatus OBJECT TYPE SYNTAX
"The value of this object indicates when a monitored value has not meet a threshold or isn't meeting the defined service level.
The SlapmStatus TEXTUAL CONVENTION defines two levels of not meeting a threshold.
The first set: slaMinInRateNotAchieved(0), slaMaxInRateExceeded(1), slaMaxDelayExceeded(2), slaMinOutRateNotAchieved(3), slaMaxOutRateExceeded(4) are used to indicate when the SLA as an aggregate is not meeting a threshold while the second set: monitorMinInRateNotAchieved(5), monitorMaxInRateExceeded(6), monitorMaxDelayExceeded(7), monitorMinOutRateNotAchieved(8), monitorMaxOutRateExceeded(9) indicate that at least one subcomponent is not meeting a threshold."
"The number of seconds that defines the sample period."
"The threshold for generating a slapmPolicyRuleMonNotOkay notification, signalling that a monitored minimum transfer rate has not been meet.
A slapmPolicyRuleMonNotOkay notification is not generated again for an slapmPRMonEntry until the minimum transfer rate exceeds slapmPRMonMinRateHigh (a slapmPolicyRuleMonOkay notification is then transmitted) and then fails below slapmPRMonMinRateLow.
This behavior reduces the slapmPolicyRuleMonNotOkay notifications that are transmitted.
A value of zero for this object is returned when the slapmPRMonControl monitorMinRate(0) is not enabled.
When enabled the default value for this object is the min rate value specified in the associated action definition minus 10%.
If the action definition doesn't have a min rate defined
then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMinRate(0) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
"The threshold for generating a slapmPolicyRuleMonOkay notification, signalling that a monitored minimum transfer rate has increased to an acceptable level.
A value of zero for this object is returned when the slapmPRMonControl monitorMinRate(0) is not enabled.
When enabled the default value for this object is the min rate value specified in the associated action definition plus 10%.
If the action definition doesn't have a min rate defined
then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMinRate(0) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
"The threshold for generating a slapmPolicyRuleMonNotOkay notification, signalling that a monitored maximum transfer rate has been exceeded.
A slapmPolicyRuleNotOkay notification is not generated again for an slapmPRMonEntry until the maximum transfer rate fails below slapmPRMonMaxRateLow (a slapmPolicyRuleMonOkay notification is then transmitted) and then raises above slapmPRMonMaxRateHigh.
This behavior reduces the slapmPolicyRuleMonNotOkay notifications that are transmitted.
A value of zero for this object is returned when the slapmPRMonControl monitorMaxRate(1) is not enabled.
When enabled the default value for this object is the max rate value specified in the associated action definition plus 10%.
If the action definition doesn't have a max rate defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxRate(1) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
"The threshold for generating a slapmPolicyRuleMonOkay notification, signalling that a monitored maximum transfer rate has fallen to an acceptable level.
A value of zero for this object is returned when the slapmPRMonControl monitorMaxRate(1) is not enabled.
When enabled the default value for this object is the max rate value specified in the associated action definition minus 10%.
If the action definition doesn't have a max rate defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxRate(1) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
"The threshold for generating a slapmPolicyRuleMonNotOkay notification, signalling that a monitored maximum delay rate has been exceeded.
A slapmPolicyRuleMonNotOkay notification is not generated again for an slapmPRMonEntry until the maximum delay rate falls below slapmPRMonMaxDelayLow (a slapmPolicyRuleMonOkay notification is then transmitted) and raises above slapmPRMonMaxDelayHigh.
This behavior reduces the slapmPolicyRuleMonNotOkay notifications that are transmitted.
A value of zero for this object is returned when the slapmPRMonControl monitorMaxDelay(4) is not enabled.
When enabled the default value for this object is the max delay value specified in the associated action definition plus 10%.
If the action definition doesn't have a max delay defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxDelay(4) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
"The threshold for generating a slapmPolicyRuleMonOkay notification, signalling that a monitored maximum delay rate has fallen to an acceptable level.
A value of zero for this object is returned when the slapmPRMonControl monitorMaxDelay(4) is not enabled.
When enabled the default value for this object is the max delay value specified in the associated action definition minus 10%.
If the action definition doesn't have a max delay defined then there is no default for this object and a value MUST be specified prior to activating this entry when monitorMaxDelay(4) is selected.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for any notification relating to this entry to potentially be generated."
The number of times that a minimum transfer in rate was not achieved."
The number of times that a maximum transfer in rate was exceeded."
{ slapmPRMonEntry 17 } slapmPRMonMaxDelayExceeds OBJECT
The number of times that a maximum delay in rate was exceeded."
{ slapmPRMonEntry 18 } slapmPRMonMinOutRateNotAchieves OBJECT TYPE SYNTAX
The number of times that a minimum transfer out rate was not achieved."
The number of times that a maximum transfer out rate was exceeded."
"The current delay rate for this entry.
This is calculated by taking the average of the TCP round trip times for all associating slapmSubcomponentTable entries within a interval."
"This object allows entries to be created and deleted in the slapmPRMonTable.
An entry in this table is deleted by setting this object to destroy(6).
Removal of an corresponding (same policy index)
slapmPolicyRuleStatsEntry has the side effect of the automatic deletion an entry in this table.
Note that an attempt to set any read create object defined within an slapmPRMonEntry while the value of slapmPRMonRowStatus is active(1) will result in an inconsistentValue error."
NOTIFICATION TYPE OBJECTS { slapmPolicyMonitorIntTime, slapmPolicyMonitorControl, slapmPolicyMonitorStatus, slapmPolicyMonitorStatus, slapmPolicyMonitorCurrentInRate, slapmPolicyMonitorCurrentOutRate, slapmPolicyMonitorCurrentDelayRate } STATUS
"This notification is generated when an monitored event is not achieved with respect to threshold.
This applies only towards monitoring a policy traffic profile as an aggregate via an associating slapmPolicyStatsEntry.
The value of slapmPolicyMonitorControl can be examined to determine what is being monitored.
The first slapmPolicyMonitorStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for this notification to potentially be generated."
"This notification is generated when a monitored event has improved to an acceptable level.
This applies only towards monitoring a policy traffic profile as an aggregate via an associating slapmPolicyStatsEntry.
The value of slapmPolicyMonitorControl can be examined to determine what is being monitored.
The first slapmPolicyMonitorStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPolicyMonitorControl BITS setting, enableAggregateTraps(3), MUST be selected in order for this notification to potentially be generated."
deprecated DESCRIPTION "A slapmPolicyDeleted notification is sent when a slapmPolicyStatsEntry is deleted if the value of slapmPolicyTrapEnable is enabled(1)."
"A slapmPolicyMonitorDeleted notification is sent when a slapmPolicyMonitorEntry is deleted if the value of slapmPolicyTrapEnable is enabled(1)."
NOTIFICATION TYPE OBJECTS { slapmSubcomponentSystemAddress, slapmSubcomponentPolicyName, slapmSubcomponentTrafficProfileName, slapmSubcomponentMonitorStatus, slapmSubcomponentMonitorStatus, slapmSubcomponentMonitorIntTime, slapmSubcomponentMonitorCurrentInRate, slapmSubcomponentMonitorCurrentOutRate, slapmSubcomponentTcpRoundTripTime } STATUS  deprecated DESCRIPTION
"This notification is generated when a monitored value does not achieved a threshold specification.
This applies only towards monitoring the individual components of a policy traffic profile.
The value of the corresponding slapmPolicyMonitorControl can be examined to determine what is being monitored.
The first slapmSubcomponentMonitorStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPolicyMonitorControl BITS setting, enableSubcomponentTraps(4), MUST be selected in order for this notification to potentially be generated."
The corresponding slapmPolicyMonitorControl BITS setting, enableSubcomponentTraps(3), MUST be selected in order for this notification to potentially be generated."
"This notification is generated when an monitored event is not achieved with respect to a threshold.
This applies only towards monitoring a policy rule as an aggregate via an associating slapmPolicyRuleStatsEntry.
The value of slapmPRMonControl can be examined to determine what is being monitored.
The first slapmPRMonStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for this notification to potentially be generated."
"This notification is generated when a monitored event has improved to an acceptable level.
This applies only towards monitoring a policy rule as an aggregate via an associating slapmPolicyRuleStatsEntry.
The value of slapmPRMonControl can be examined to determine what is being monitored.
The first slapmPRMonStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPRMonControl BITS setting, enableAggregateTraps(3), MUST be selected in order for this notification to potentially be generated."
A slapmPolicyRuleMonDeleted notification is sent when a slapmPRMonEntry is deleted if the value of slapmPolicyTrapEnable is enabled(1)."
This notification is generated when a monitored value does not achieved a threshold specification.
This applies only towards monitoring the individual components of a policy rule.
The value of the corresponding slapmPRMonControl can be examined to determine what is being monitored.
The first slapmSubcomponentMonitorStatus value supplies the current monitor status while the 2nd value supplies the previous status.
The corresponding slapmPRMonControl BITS setting, enableSubcomponentTraps(4), MUST be selected in order for this notification to potentially be generated."
This notification is generated when a monitored value has reached an acceptable level.
The corresponding slapmPRMonControl BITS setting, enableSubcomponentTraps(3), MUST be selected in order for this notification to potentially be generated."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for the SLAPM MIB."
MODULE    this module MANDATORY GROUPS { slapmBaseGroup2, slapmNotGroup2 } GROUP slapmEndSystemGroup2 DESCRIPTION "
The contents of this group is required by end system implementations.
The contents of this group is required by end system implementations."
"The contents of this group has been deprecated in favor of the new slapmBaseGroup2.
Older implementations of this MIB would continue its support of the contents of this group."
slapmNotGroup DESCRIPTION "The contents of this group has been deprecated in favor of the new slapmNotGroup2.
Older implementations of this MIB would continue its support of the contents of this group."
GROUP slapmOptionalGroup DESCRIPTION "The contents of this group has been deprecated."
The contents of this group has been deprecated in favor of the new slapmEndSystemGroup2.
Older implementations of this MIB would continue its support of the contents of this group."
"The contents of this group has been deprecated in favor of the new slapmEndSystemNotGroup2.
Older implementations of this MIB would continue its support of the contents of this group."
The group of objects defined by this MIB that are optional."
The group of notifications defined by this MIB that MUST be implemented."
OBJECT GROUP OBJECTS { slapmSpinLock, slapmPolicyCountQueries, slapmPolicyCountAccesses, slapmPolicyCountSuccessAccesses, slapmPolicyCountNotFounds, slapmPolicyPurgeTime, slapmPolicyTrapEnable, slapmPolicyNameOfRule, slapmPolicyRuleStatsOperStatus, slapmPolicyRuleStatsActiveConns, slapmPolicyRuleStatsTotalConns,
slapmPolicyRuleStatsLActivated, slapmPolicyRuleStatsLastMapping, slapmPolicyRuleStatsInOctets, slapmPolicyRuleStatsOutOctets, slapmPolicyRuleStatsConnLimit, slapmPolicyRuleStatsCountAccepts, slapmPolicyRuleStatsCountDenies, slapmPolicyRuleStatsInDiscards, slapmPolicyRuleStatsOutDiscards, slapmPolicyRuleStatsInPackets, slapmPolicyRuleStatsOutPackets, slapmPolicyRuleStatsInProOctets, slapmPolicyRuleStatsOutProOctets, slapmPolicyRuleStatsMinRate, slapmPolicyRuleStatsMaxRate, slapmPolicyRuleStatsMaxDelay, slapmPolicyRuleStatsTotalRsvpFlows, slapmPolicyRuleStatsActRsvpFlows, slapmPRMonControl, slapmPRMonStatus, slapmPRMonInterval, slapmPRMonIntTime, slapmPRMonCurrentInRate, slapmPRMonCurrentOutRate, slapmPRMonMinRateLow, slapmPRMonMinRateHigh, slapmPRMonMaxRateHigh, slapmPRMonMaxRateLow, slapmPRMonMaxDelayHigh, slapmPRMonMaxDelayLow, slapmPRMonMinInRateNotAchieves, slapmPRMonMaxInRateExceeds, slapmPRMonMaxDelayExceeds, slapmPRMonMinOutRateNotAchieves, slapmPRMonMaxOutRateExceeds, slapmPRMonCurrentDelayRate, slapmPRMonRowStatus } STATUS current DESCRIPTION "
The group of objects defined by this MIB that are required for all implementations to be compliant."
GROUP OBJECTS { slapmPolicyTrapFilter, slapmSubcomponentProtocol, slapmSubcomponentSystemAddress, slapmSubcomponentLastActivity, slapmSubcomponentInOctets, slapmSubcomponentOutOctets, slapmSubcomponentTcpOutBufferedOctets, slapmSubcomponentTcpInBufferedOctets, slapmSubcomponentTcpReXmts, slapmSubcomponentTcpRoundTripTime, slapmSubcomponentTcpRoundTripVariance, slapmSubcomponentInPdus, slapmSubcomponentOutPdus, slapmSubcomponentApplName, slapmSubcomponentMonitorStatus, slapmSubcomponentMonitorIntTime, slapmSubcomponentMonitorCurrentOutRate, slapmSubcomponentMonitorCurrentInRate
, slapmSubcomponentPolicyRuleIndex } STATUS  current DESCRIPTION
NOTIFICATION GROUP NOTIFICATIONS { slapmPolicyRuleMonNotOkay, slapmPolicyRuleMonOkay, slapmPolicyRuleDeleted, slapmPolicyRuleMonDeleted }
The group of notifications defined by this MIB that MUST be implemented."
The group of objects defined by this MIB that are required for end system implementations."
Therefore, authentication of received SNMP requests and controlled access to management information SHOULD be employed in such environments.
The method for this authentication is a function of the SNMP Administrative Framework, and has not been expanded by this MIB.
To facilitate the provisioning of access control by a security administrator using the View Based Access Control Model (VACM) defined in RFC 2575 [11] for tables in which multiple users may need to independently create or modify entries, the initial index is used as an "owner index" (refer to slapmPRMonOwnerIndex in an slapmPRMonEntry).
Such an initial index has a syntax of SnmpAdminString, and can thus be trivially mapped to a securityName or groupName as defined in VACM, in accordance with a security policy.
All entries in related tables belonging to a particular user will have the same value for this initial index.
For a given user's entries in a particular table, the object identifiers for the information in these entries will have the same subidentifiers (except for the "column" subidentifier) up to the end of the encoded owner index.
To configure VACM to permit access to this portion of the table, one would create vacmViewTreeFamilyTable entries with the value of vacmViewTreeFamilySubtree including the owner index portion, and vacmViewTreeFamilyMask "wildcarding" the column subidentifier.
More elaborate configurations are possible.
The VACM access control mechanism described above provides control
It is RECOMMENDED that the slapmPRMonTable (equivalent to the deprecated slapmPolicyMonitorTable) and the slapmSubcomponentTable not be supported in insecure environments.
