Abstract This document updates RFC 3279 to specify algorithm identifiers and ASN.1 encoding rules for the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA) digital signatures when using SHA 224, SHA 256, SHA 384, or SHA 512 as the hashing algorithm.
This specification applies to the Internet X.509 Public Key infrastructure (PKI) when digital signatures are used to sign certificates and certificate revocation lists (CRLs).
This document also identifies all four SHA2 hash algorithms for use in the Internet X.509 PKI.
This specification defines the contents of the signatureAlgorithm, signatureValue, and signature fields within Internet X.509 certificates and CRLs when these objects are signed using DSA or ECDSA with a SHA2 hash algorithm.
These fields are more fully described in RFC 5280 [RFC5280].
This document also identifies all four SHA2 hash algorithms for use in the Internet X.509 PKI.
This document profiles material presented in the "Secure Hash Standard" [FIPS180 3], "Public Key Cryptography for the Financial Services Industry: The Elliptic Curve Digital Signature Standard (ECDSA)" [X9.62], and the "Digital Signature Standard" [FIPS186 3].
This document updates RFC 3279
[RFC3279] Sections 2.1, 2.2.2, and 2.2.3.
Note that RFC 5480 [RFC5480] updates Sections 2.3.5, 3 (ASN.1 Module), and 5 (Security Considerations) of RFC 3279.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This section identifies four additional hash algorithms for use with DSA and ECDSA in the Internet X.509 certificate and CRL profile [RFC5280].
SHA 224, SHA 256, SHA 384, and SHA 512 produce a 224 bit, 256 bit, 384 bit, and 512 bit "hash" of the input, respectively, and are fully described in the "Secure Hash Standard" [FIPS180 3].
The listed one way hash functions are identified by the following object identifiers (OIDs):
When one of these OIDs appears in an AlgorithmIdentifier, all implementations MUST accept both NULL and absent parameters as legal and equivalent encodings.
certification authority (CA) implementations SHOULD use SHA 224, SHA 256, SHA 384, or SHA 512 when generating certificates or CRLs, but MAY use SHA 1 if they have a stated policy that requires the use of this weaker algorithm.
This section identifies OIDs for DSA with SHA 224 and SHA 256 as well as ECDSA with SHA 224, SHA 256, SHA 384, and SHA 512.
The contents of the parameters component for each signature algorithm vary; details are provided for each algorithm.
The DSA is defined in the Digital Signature Standard (DSS)
DSA was developed by the U.S. Government, and can be used in conjunction with a SHA2 hash function such as SHA 224 or SHA 256.
DSA is fully described in [FIPS186 3].
When SHA 224 is used, the OID is:
id dsa with sha2(3) 1 }.
id dsa with sha2(3) 2 }.
When the id dsa with sha224 or
id dsa with sha256 algorithm identifier appears in the algorithm field as an AlgorithmIdentifier, the encoding SHALL omit the parameters field.
That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component, the OID id  dsa with sha224
or id dsa with sha256.
Encoding rules for DSA signature values are specified in [RFC3279].
Conforming CA implementations that generate DSA signatures for certificates or CRLs MUST generate such DSA signatures in accordance with all the requirements in Sections 4.1, 4.5, and 4.6 of [FIPS186 3].
Conforming CA implementations that generate DSA signatures for certificates or CRLs MAY generate such DSA signatures in accordance with all the requirements and recommendations in [FIPS186 3], if they have a stated policy that requires conformance to [FIPS186 3].
The Elliptic Curve Digital Signature Algorithm (ECDSA) is defined in "Public Key Cryptography for the Financial Services Industry: The Elliptic Curve Digital Signature Standard (ECDSA)" [X9.62].
The ASN.1 OIDs used to specify that an ECDSA signature was generated using SHA 224, SHA 256, SHA 384, or SHA 512 are, respectively:
3 } ecdsa with SHA512
4 } When the ecdsa with SHA224, ecdsa with SHA256, ecdsa with SHA384, or ecdsa with SHA512 algorithm identifier appears in the algorithm field as an AlgorithmIdentifier, the encoding MUST omit the parameters field.
That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component, the OID ecdsa with SHA224, ecdsa with SHA256, ecdsa with  SHA384, or ecdsa with SHA512.
Conforming CA implementations MUST specify the hash algorithm explicitly using the OIDs specified above when encoding ECDSA/
SHA2 signatures in certificates and CRLs.
Conforming client implementations that process ECDSA signatures with any of the SHA2 hash algorithms when processing certificates and CRLs MUST recognize the corresponding OIDs specified above.
Encoding rules for ECDSA signature values are specified in RFC 3279 [RFC3279], Section 2.2.3, and RFC 5480
Conforming CA implementations that generate ECDSA signatures in certificates or CRLs MUST generate such ECDSA signatures in accordance with all the requirements specified in Sections 7.2 and 7.3 of [X9.62] or with all the requirements specified in Section 4.1.3 of [SEC1].
Conforming CA implementations that ECDSA signatures in certificates or CRLs
MAY generate such ECDSA signatures in accordance with all the requirements and recommendations in [X9.62] or [SEC1] if they have a stated policy that requires conformance to [X9.62] or [SEC1].
The OIDs of the SHA2 hash algorithms are in the RFC 4055 [RFC4055] ASN.1 module and the OIDs for DSA with SHA 224 and SHA 256 as well as ECDSA with SHA 224, SHA 256, SHA 384, and SHA 512 are defined in the RFC 5480
Security Considerations NIST has defined appropriate use of the hash functions in terms of the algorithm strengths and expected time frames for secure use in Special Publications (SPs) 800 78 1 [SP800 78 1], 800 57 [SP800 57], and 800 107 [SP800 107].
These documents can be used as guides to choose appropriate key sizes for various security scenarios.
ANSI also provides security considerations for ECDSA in [X9.62].
These security considerations may be used as a guide.
