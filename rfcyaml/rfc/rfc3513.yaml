- title: __initial_text__
  contents:
  - '       Internet Protocol Version 6 (IPv6) Addressing Architecture

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification defines the addressing architecture of the IP\n\
    \   Version 6 (IPv6) protocol.  The document includes the IPv6 addressing\n  \
    \ model, text representations of IPv6 addresses, definition of IPv6\n   unicast\
    \ addresses, anycast addresses, and multicast addresses, and an\n   IPv6 node's\
    \ required addresses.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction.................................................3\n\
    \   2. IPv6 Addressing..............................................3\n      2.1\
    \ Addressing Model.........................................4\n      2.2 Text Representation\
    \ of Addresses.........................4\n      2.3 Text Representation of Address\
    \ Prefixes..................5\n      2.4 Address Type Identification..............................6\n\
    \      2.5 Unicast Addresses........................................7\n      \
    \    2.5.1 Interface Identifiers..............................8\n          2.5.2\
    \ The Unspecified Address............................9\n          2.5.3 The Loopback\
    \ Address...............................9\n          2.5.4 Global Unicast Addresses..........................10\n\
    \          2.5.5 IPv6 Addresses with Embedded IPv4 Addresses.......10\n      \
    \    2.5.6 Local-use IPv6 Unicast Addresses..................11\n      2.6 Anycast\
    \ Addresses.......................................12\n          2.6.1 Required\
    \ Anycast Address..........................13\n      2.7 Multicast Addresses.....................................13\n\
    \          2.7.1 Pre-Defined Multicast Addresses...................15\n      2.8\
    \ A Node's Required Addresses.............................17\n   3. Security Considerations.....................................17\n\
    \   4. IANA Considerations.........................................18\n   5. References..................................................19\n\
    \      5.1 Normative References....................................19\n      5.2\
    \ Informative References..................................19\n   APPENDIX A: Creating\
    \ Modified EUI-64 format Interface IDs......21\n   APPENDIX B: Changes from RFC-2373..............................24\n\
    \   Authors' Addresses.............................................25\n   Full\
    \ Copyright Statement.......................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification defines the addressing architecture of\
    \ the IP\n   Version 6 (IPv6) protocol.  It includes the basic formats for the\n\
    \   various types of IPv6 addresses (unicast, anycast, and multicast).\n   The\
    \ authors would like to acknowledge the contributions of Paul\n   Francis, Scott\
    \ Bradner, Jim Bound, Brian Carpenter, Matt Crawford,\n   Deborah Estrin, Roger\
    \ Fajman, Bob Fink, Peter Ford, Bob Gilligan,\n   Dimitry Haskin, Tom Harsch,\
    \ Christian Huitema, Tony Li, Greg\n   Minshall, Thomas Narten, Erik Nordmark,\
    \ Yakov Rekhter, Bill Simpson,\n   Sue Thomson, Markku Savela, and Larry Masinter.\n"
- title: 2. IPv6 Addressing
  contents:
  - "2. IPv6 Addressing\n   IPv6 addresses are 128-bit identifiers for interfaces\
    \ and sets of\n   interfaces (where \"interface\" is as defined in section 2 of\
    \ [IPV6]).\n   There are three types of addresses:\n   Unicast:   An identifier\
    \ for a single interface.  A packet sent to a\n              unicast address is\
    \ delivered to the interface identified\n              by that address.\n   Anycast:\
    \   An identifier for a set of interfaces (typically belonging\n             \
    \ to different nodes).  A packet sent to an anycast address\n              is\
    \ delivered to one of the interfaces identified by that\n              address\
    \ (the \"nearest\" one, according to the routing\n              protocols' measure\
    \ of distance).\n   Multicast: An identifier for a set of interfaces (typically\
    \ belonging\n              to different nodes).  A packet sent to a multicast\
    \ address\n              is delivered to all interfaces identified by that address.\n\
    \   There are no broadcast addresses in IPv6, their function being\n   superseded\
    \ by multicast addresses.\n   In this document, fields in addresses are given\
    \ a specific name, for\n   example \"subnet\".  When this name is used with the\
    \ term \"ID\" for\n   identifier after the name (e.g., \"subnet ID\"), it refers\
    \ to the\n   contents of the named field.  When it is used with the term \"prefix\"\
    \n   (e.g., \"subnet prefix\") it refers to all of the address from the left\n\
    \   up to and including this field.\n   In IPv6, all zeros and all ones are legal\
    \ values for any field,\n   unless specifically excluded.  Specifically, prefixes\
    \ may contain, or\n   end with, zero-valued fields.\n"
- title: 2.1 Addressing Model
  contents:
  - "2.1 Addressing Model\n   IPv6 addresses of all types are assigned to interfaces,\
    \ not nodes.\n   An IPv6 unicast address refers to a single interface.  Since\
    \ each\n   interface belongs to a single node, any of that node's interfaces'\n\
    \   unicast addresses may be used as an identifier for the node.\n   All interfaces\
    \ are required to have at least one link-local unicast\n   address (see section\
    \ 2.8 for additional required addresses).  A\n   single interface may also have\
    \ multiple IPv6 addresses of any type\n   (unicast, anycast, and multicast) or\
    \ scope.  Unicast addresses with\n   scope greater than link-scope are not needed\
    \ for interfaces that are\n   not used as the origin or destination of any IPv6\
    \ packets to or from\n   non-neighbors.  This is sometimes convenient for point-to-point\n\
    \   interfaces.  There is one exception to this addressing model:\n      A unicast\
    \ address or a set of unicast addresses may be assigned to\n      multiple physical\
    \ interfaces if the implementation treats the\n      multiple physical interfaces\
    \ as one interface when presenting it\n      to the internet layer.  This is useful\
    \ for load-sharing over\n      multiple physical interfaces.\n   Currently IPv6\
    \ continues the IPv4 model that a subnet prefix is\n   associated with one link.\
    \  Multiple subnet prefixes may be assigned\n   to the same link.\n"
- title: 2.2 Text Representation of Addresses
  contents:
  - "2.2 Text Representation of Addresses\n   There are three conventional forms for\
    \ representing IPv6 addresses as\n   text strings:\n   1. The preferred form is\
    \ x:x:x:x:x:x:x:x, where the 'x's are the\n      hexadecimal values of the eight\
    \ 16-bit pieces of the address.\n      Examples:\n         FEDC:BA98:7654:3210:FEDC:BA98:7654:3210\n\
    \         1080:0:0:0:8:800:200C:417A\n      Note that it is not necessary to write\
    \ the leading zeros in an\n      individual field, but there must be at least\
    \ one numeral in every\n      field (except for the case described in 2.).\n \
    \  2. Due to some methods of allocating certain styles of IPv6\n      addresses,\
    \ it will be common for addresses to contain long strings\n      of zero bits.\
    \  In order to make writing addresses containing zero\n      bits easier a special\
    \ syntax is available to compress the zeros.\n      The use of \"::\" indicates\
    \ one or more groups of 16 bits of zeros.\n      The \"::\" can only appear once\
    \ in an address.  The \"::\" can also be\n      used to compress leading or trailing\
    \ zeros in an address.\n      For example, the following addresses:\n        \
    \ 1080:0:0:0:8:800:200C:417A  a unicast address\n         FF01:0:0:0:0:0:0:101\
    \        a multicast address\n         0:0:0:0:0:0:0:1             the loopback\
    \ address\n         0:0:0:0:0:0:0:0             the unspecified addresses\n  \
    \    may be represented as:\n         1080::8:800:200C:417A       a unicast address\n\
    \         FF01::101                   a multicast address\n         ::1      \
    \                   the loopback address\n         ::                        \
    \  the unspecified addresses\n   3. An alternative form that is sometimes more\
    \ convenient when dealing\n      with a mixed environment of IPv4 and IPv6 nodes\
    \ is\n      x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of\n\
    \      the six high-order 16-bit pieces of the address, and the 'd's are\n   \
    \   the decimal values of the four low-order 8-bit pieces of the\n      address\
    \ (standard IPv4 representation).  Examples:\n         0:0:0:0:0:0:13.1.68.3\n\
    \         0:0:0:0:0:FFFF:129.144.52.38\n      or in compressed form:\n       \
    \  ::13.1.68.3\n         ::FFFF:129.144.52.38\n"
- title: 2.3 Text Representation of Address Prefixes
  contents:
  - "2.3 Text Representation of Address Prefixes\n   The text representation of IPv6\
    \ address prefixes is similar to the\n   way IPv4 addresses prefixes are written\
    \ in CIDR notation [CIDR].  An\n   IPv6 address prefix is represented by the notation:\n\
    \      ipv6-address/prefix-length\n   where\n      ipv6-address    is an IPv6\
    \ address in any of the notations listed\n                      in section 2.2.\n\
    \      prefix-length   is a decimal value specifying how many of the\n       \
    \               leftmost contiguous bits of the address comprise\n           \
    \           the prefix.\n   For example, the following are legal representations\
    \ of the 60-bit\n   prefix 12AB00000000CD3 (hexadecimal):\n      12AB:0000:0000:CD30:0000:0000:0000:0000/60\n\
    \      12AB::CD30:0:0:0:0/60\n      12AB:0:0:CD30::/60\n   The following are NOT\
    \ legal representations of the above prefix:\n      12AB:0:0:CD3/60   may drop\
    \ leading zeros, but not trailing zeros,\n                        within any 16-bit\
    \ chunk of the address\n      12AB::CD30/60     address to left of \"/\" expands\
    \ to\n                        12AB:0000:0000:0000:0000:000:0000:CD30\n      12AB::CD3/60\
    \      address to left of \"/\" expands to\n                        12AB:0000:0000:0000:0000:000:0000:0CD3\n\
    \   When writing both a node address and a prefix of that node address\n   (e.g.,\
    \ the node's subnet prefix), the two can combined as follows:\n      the node\
    \ address      12AB:0:0:CD30:123:4567:89AB:CDEF\n      and its subnet number 12AB:0:0:CD30::/60\n\
    \      can be abbreviated as 12AB:0:0:CD30:123:4567:89AB:CDEF/60\n"
- title: 2.4 Address Type Identification
  contents:
  - "2.4 Address Type Identification\n   The type of an IPv6 address is identified\
    \ by the high-order bits of\n   the address, as follows:\n   Address type    \
    \     Binary prefix        IPv6 notation   Section\n   ------------         -------------\
    \        -------------   -------\n   Unspecified          00...0  (128 bits) \
    \  ::/128          2.5.2\n   Loopback             00...1  (128 bits)   ::1/128\
    \         2.5.3\n   Multicast            11111111             FF00::/8       \
    \ 2.7\n   Link-local unicast   1111111010           FE80::/10       2.5.6\n  \
    \ Site-local unicast   1111111011           FEC0::/10       2.5.6\n   Global unicast\
    \       (everything else)\n   Anycast addresses are taken from the unicast address\
    \ spaces (of any\n   scope) and are not syntactically distinguishable from unicast\n\
    \   addresses.\n   The general format of global unicast addresses is described\
    \ in\n   section 2.5.4.  Some special-purpose subtypes of global unicast\n   addresses\
    \ which contain embedded IPv4 addresses (for the purposes of\n   IPv4-IPv6 interoperation)\
    \ are described in section 2.5.5.\n   Future specifications may redefine one or\
    \ more sub-ranges of the\n   global unicast space for other purposes, but unless\
    \ and until that\n   happens, implementations must treat all addresses that do\
    \ not start\n   with any of the above-listed prefixes as global unicast addresses.\n"
- title: 2.5 Unicast Addresses
  contents:
  - "2.5 Unicast Addresses\n   IPv6 unicast addresses are aggregable with prefixes\
    \ of arbitrary\n   bit-length similar to IPv4 addresses under Classless Interdomain\n\
    \   Routing.\n   There are several types of unicast addresses in IPv6, in particular\n\
    \   global unicast, site-local unicast, and link-local unicast.  There\n   are\
    \ also some special-purpose subtypes of global unicast, such as\n   IPv6 addresses\
    \ with embedded IPv4 addresses or encoded NSAP\n   addresses.  Additional address\
    \ types or subtypes can be defined in\n   the future.\n   IPv6 nodes may have\
    \ considerable or little knowledge of the internal\n   structure of the IPv6 address,\
    \ depending on the role the node plays\n   (for instance, host versus router).\
    \  At a minimum, a node may\n   consider that unicast addresses (including its\
    \ own) have no internal\n   structure:\n   |                           128 bits\
    \                              |\n   +-----------------------------------------------------------------+\n\
    \   |                          node address                           |\n   +-----------------------------------------------------------------+\n\
    \   A slightly sophisticated host (but still rather simple) may\n   additionally\
    \ be aware of subnet prefix(es) for the link(s) it is\n   attached to, where different\
    \ addresses may have different values for\n   n:\n   |                       \
    \  n bits                 |   128-n bits   |\n   +------------------------------------------------+----------------+\n\
    \   |                   subnet prefix                | interface ID   |\n   +------------------------------------------------+----------------+\n\
    \   Though a very simple router may have no knowledge of the internal\n   structure\
    \ of IPv6 unicast addresses, routers will more generally have\n   knowledge of\
    \ one or more of the hierarchical boundaries for the\n   operation of routing\
    \ protocols.  The known boundaries will differ\n   from router to router, depending\
    \ on what positions the router holds\n   in the routing hierarchy.\n"
- title: 2.5.1 Interface Identifiers
  contents:
  - "2.5.1 Interface Identifiers\n   Interface identifiers in IPv6 unicast addresses\
    \ are used to identify\n   interfaces on a link.  They are required to be unique\
    \ within a subnet\n   prefix.  It is recommended that the same interface identifier\
    \ not be\n   assigned to different nodes on a link.  They may also be unique over\n\
    \   a broader scope.  In some cases an interface's identifier will be\n   derived\
    \ directly from that interface's link-layer address.  The same\n   interface identifier\
    \ may be used on multiple interfaces on a single\n   node, as long as they are\
    \ attached to different subnets.\n   Note that the uniqueness of interface identifiers\
    \ is independent of\n   the uniqueness of IPv6 addresses.  For example, a global\
    \ unicast\n   address may be created with a non-global scope interface identifier\n\
    \   and a site-local address may be created with a global scope interface\n  \
    \ identifier.\n   For all unicast addresses, except those that start with binary\
    \ value\n   000, Interface IDs are required to be 64 bits long and to be\n   constructed\
    \ in Modified EUI-64 format.\n   Modified EUI-64 format based Interface identifiers\
    \ may have global\n   scope when derived from a global token (e.g., IEEE 802 48-bit\
    \ MAC or\n   IEEE EUI-64 identifiers [EUI64]) or may have local scope where a\n\
    \   global token is not available (e.g., serial links, tunnel end-points,\n  \
    \ etc.) or where global tokens are undesirable (e.g., temporary tokens\n   for\
    \ privacy [PRIV]).\n   Modified EUI-64 format interface identifiers are formed\
    \ by inverting\n   the \"u\" bit (universal/local bit in IEEE EUI-64 terminology)\
    \ when\n   forming the interface identifier from IEEE EUI-64 identifiers.  In\n\
    \   the resulting Modified EUI-64 format the \"u\" bit is set to one (1) to\n\
    \   indicate global scope, and it is set to zero (0) to indicate local\n   scope.\
    \  The first three octets in binary of an IEEE EUI-64 identifier\n   are as follows:\n\
    \       0       0 0       1 1       2\n      |0       7 8       5 6       3|\n\
    \      +----+----+----+----+----+----+\n      |cccc|ccug|cccc|cccc|cccc|cccc|\n\
    \      +----+----+----+----+----+----+\n   written in Internet standard bit-order\
    \ , where \"u\" is the\n   universal/local bit, \"g\" is the individual/group\
    \ bit, and \"c\" are the\n   bits of the company_id.  Appendix A: \"Creating Modified\
    \ EUI-64 format\n   Interface Identifiers\" provides examples on the creation\
    \ of Modified\n   EUI-64 format based interface identifiers.\n   The motivation\
    \ for inverting the \"u\" bit when forming an interface\n   identifier is to make\
    \ it easy for system administrators to hand\n   configure non-global identifiers\
    \ when hardware tokens are not\n   available.  This is expected to be case for\
    \ serial links, tunnel end-\n   points, etc.  The alternative would have been\
    \ for these to be of the\n   form 0200:0:0:1, 0200:0:0:2, etc., instead of the\
    \ much simpler 1, 2,\n   etc.\n   The use of the universal/local bit in the Modified\
    \ EUI-64 format\n   identifier is to allow development of future technology that\
    \ can take\n   advantage of interface identifiers with global scope.\n   The details\
    \ of forming interface identifiers are defined in the\n   appropriate \"IPv6 over\
    \ <link>\" specification such as \"IPv6 over\n   Ethernet\" [ETHER], \"IPv6 over\
    \ FDDI\" [FDDI], etc.\n"
- title: 2.5.2 The Unspecified Address
  contents:
  - "2.5.2 The Unspecified Address\n   The address 0:0:0:0:0:0:0:0 is called the unspecified\
    \ address.  It\n   must never be assigned to any node.  It indicates the absence\
    \ of an\n   address.  One example of its use is in the Source Address field of\n\
    \   any IPv6 packets sent by an initializing host before it has learned\n   its\
    \ own address.\n   The unspecified address must not be used as the destination\
    \ address\n   of IPv6 packets or in IPv6 Routing Headers.  An IPv6 packet with\
    \ a\n   source address of unspecified must never be forwarded by an IPv6\n   router.\n"
- title: 2.5.3 The Loopback Address
  contents:
  - "2.5.3 The Loopback Address\n   The unicast address 0:0:0:0:0:0:0:1 is called\
    \ the loopback address.\n   It may be used by a node to send an IPv6 packet to\
    \ itself.  It may\n   never be assigned to any physical interface.   It is treated\
    \ as\n   having link-local scope, and may be thought of as the link-local\n  \
    \ unicast address of a virtual interface (typically called \"the\n   loopback\
    \ interface\") to an imaginary link that goes nowhere.\n   The loopback address\
    \ must not be used as the source address in IPv6\n   packets that are sent outside\
    \ of a single node.  An IPv6 packet with\n   a destination address of loopback\
    \ must never be sent outside of a\n   single node and must never be forwarded\
    \ by an IPv6 router.  A packet\n   received on an interface with destination address\
    \ of loopback must be\n   dropped.\n"
- title: 2.5.4 Global Unicast Addresses
  contents:
  - "2.5.4 Global Unicast Addresses\n   The general format for IPv6 global unicast\
    \ addresses is as follows:\n   |         n bits         |   m bits  |       128-n-m\
    \ bits         |\n   +------------------------+-----------+----------------------------+\n\
    \   | global routing prefix  | subnet ID |       interface ID         |\n   +------------------------+-----------+----------------------------+\n\
    \   where the global routing prefix is a (typically hierarchically-\n   structured)\
    \ value assigned to a site (a cluster of subnets/links),\n   the subnet ID is\
    \ an identifier of a link within the site, and the\n   interface ID is as defined\
    \ in section 2.5.1.\n   All global unicast addresses other than those that start\
    \ with binary\n   000 have a 64-bit interface ID field (i.e., n + m = 64), formatted\
    \ as\n   described in section 2.5.1.  Global unicast addresses that start with\n\
    \   binary 000 have no such constraint on the size or structure of the\n   interface\
    \ ID field.\n   Examples of global unicast addresses that start with binary 000\
    \ are\n   the IPv6 address with embedded IPv4 addresses described in section\n\
    \   2.5.5 and the IPv6 address containing encoded NSAP addresses\n   specified\
    \ in [NSAP].  An example of global addresses starting with a\n   binary value\
    \ other than 000 (and therefore having a 64-bit interface\n   ID field) can be\
    \ found in [AGGR].\n"
- title: 2.5.5 IPv6 Addresses with Embedded IPv4 Addresses
  contents:
  - "2.5.5 IPv6 Addresses with Embedded IPv4 Addresses\n   The IPv6 transition mechanisms\
    \ [TRAN] include a technique for hosts\n   and routers to dynamically tunnel IPv6\
    \ packets over IPv4 routing\n   infrastructure.  IPv6 nodes that use this technique\
    \ are assigned\n   special IPv6 unicast addresses that carry a global IPv4 address\
    \ in\n   the low-order 32 bits.  This type of address is termed an \"IPv4-\n \
    \  compatible IPv6 address\" and has the format:\n   |                80 bits\
    \               | 16 |      32 bits        |\n   +--------------------------------------+--------------------------+\n\
    \   |0000..............................0000|0000|    IPv4 address     |\n   +--------------------------------------+----+---------------------+\n\
    \   Note: The IPv4 address used in the \"IPv4-compatible IPv6 address\"\n   must\
    \ be a globally-unique IPv4 unicast address.\n   A second type of IPv6 address\
    \ which holds an embedded IPv4 address is\n   also defined.  This address type\
    \ is used to represent the addresses\n   of IPv4 nodes as IPv6 addresses.  This\
    \ type of address is termed an\n   \"IPv4-mapped IPv6 address\" and has the format:\n\
    \   |                80 bits               | 16 |      32 bits        |\n   +--------------------------------------+--------------------------+\n\
    \   |0000..............................0000|FFFF|    IPv4 address     |\n   +--------------------------------------+----+---------------------+\n"
- title: 2.5.6 Local-Use IPv6 Unicast Addresses
  contents:
  - "2.5.6 Local-Use IPv6 Unicast Addresses\n   There are two types of local-use unicast\
    \ addresses defined.  These\n   are Link-Local and Site-Local.  The Link-Local\
    \ is for use on a single\n   link and the Site-Local is for use in a single site.\
    \  Link-Local\n   addresses have the following format:\n   |   10     |\n   |\
    \  bits    |         54 bits         |          64 bits           |\n   +----------+-------------------------+----------------------------+\n\
    \   |1111111010|           0             |       interface ID         |\n   +----------+-------------------------+----------------------------+\n\
    \   Link-Local addresses are designed to be used for addressing on a\n   single\
    \ link for purposes such as automatic address configuration,\n   neighbor discovery,\
    \ or when no routers are present.\n   Routers must not forward any packets with\
    \ link-local source or\n   destination addresses to other links.\n   Site-Local\
    \ addresses have the following format:\n   |   10     |\n   |  bits    |     \
    \    54 bits         |         64 bits            |\n   +----------+-------------------------+----------------------------+\n\
    \   |1111111011|        subnet ID        |       interface ID         |\n   +----------+-------------------------+----------------------------+\n\
    \   Site-local addresses are designed to be used for addressing inside of\n  \
    \ a site without the need for a global prefix.  Although a subnet ID\n   may be\
    \ up to 54-bits long, it is expected that globally-connected\n   sites will use\
    \ the same subnet IDs for site-local and global\n   prefixes.\n   Routers must\
    \ not forward any packets with site-local source or\n   destination addresses\
    \ outside of the site.\n"
- title: 2.6 Anycast Addresses
  contents:
  - "2.6 Anycast Addresses\n   An IPv6 anycast address is an address that is assigned\
    \ to more than\n   one interface (typically belonging to different nodes), with\
    \ the\n   property that a packet sent to an anycast address is routed to the\n\
    \   \"nearest\" interface having that address, according to the routing\n   protocols'\
    \ measure of distance.\n   Anycast addresses are allocated from the unicast address\
    \ space, using\n   any of the defined unicast address formats.  Thus, anycast\
    \ addresses\n   are syntactically indistinguishable from unicast addresses.  When\
    \ a\n   unicast address is assigned to more than one interface, thus turning\n\
    \   it into an anycast address, the nodes to which the address is\n   assigned\
    \ must be explicitly configured to know that it is an anycast\n   address.\n \
    \  For any assigned anycast address, there is a longest prefix P of that\n   address\
    \ that identifies the topological region in which all\n   interfaces belonging\
    \ to that anycast address reside.  Within the\n   region identified by P, the\
    \ anycast address must be maintained as a\n   separate entry in the routing system\
    \ (commonly referred to as a \"host\n   route\"); outside the region identified\
    \ by P, the anycast address may\n   be aggregated into the routing entry for prefix\
    \ P.\n   Note that in the worst case, the prefix P of an anycast set may be\n\
    \   the null prefix, i.e., the members of the set may have no topological\n  \
    \ locality.  In that case, the anycast address must be maintained as a\n   separate\
    \ routing entry throughout the entire internet, which presents\n   a severe scaling\
    \ limit on how many such \"global\" anycast sets may be\n   supported.  Therefore,\
    \ it is expected that support for global anycast\n   sets may be unavailable or\
    \ very restricted.\n   One expected use of anycast addresses is to identify the\
    \ set of\n   routers belonging to an organization providing internet service.\n\
    \   Such addresses could be used as intermediate addresses in an IPv6\n   Routing\
    \ header, to cause a packet to be delivered via a particular\n   service provider\
    \ or sequence of service providers.\n   Some other possible uses are to identify\
    \ the set of routers attached\n   to a particular subnet, or the set of routers\
    \ providing entry into a\n   particular routing domain.\n   There is little experience\
    \ with widespread, arbitrary use of internet\n   anycast addresses, and some known\
    \ complications and hazards when\n   using them in their full generality [ANYCST].\
    \  Until more experience\n   has been gained and solutions are specified, the\
    \ following\n   restrictions are imposed on IPv6 anycast addresses:\n   o  An\
    \ anycast address must not be used as the source address of an\n      IPv6 packet.\n\
    \   o  An anycast address must not be assigned to an IPv6 host, that is,\n   \
    \   it may be assigned to an IPv6 router only.\n"
- title: 2.6.1 Required Anycast Address
  contents:
  - "2.6.1 Required Anycast Address\n   The Subnet-Router anycast address is predefined.\
    \  Its format is as\n   follows:\n   |                         n bits        \
    \         |   128-n bits   |\n   +------------------------------------------------+----------------+\n\
    \   |                   subnet prefix                | 00000000000000 |\n   +------------------------------------------------+----------------+\n\
    \   The \"subnet prefix\" in an anycast address is the prefix which\n   identifies\
    \ a specific link.  This anycast address is syntactically\n   the same as a unicast\
    \ address for an interface on the link with the\n   interface identifier set to\
    \ zero.\n   Packets sent to the Subnet-Router anycast address will be delivered\n\
    \   to one router on the subnet.  All routers are required to support the\n  \
    \ Subnet-Router anycast addresses for the subnets to which they have\n   interfaces.\n\
    \   The subnet-router anycast address is intended to be used for\n   applications\
    \ where a node needs to communicate with any one of the\n   set of routers.\n"
- title: 2.7 Multicast Addresses
  contents:
  - "2.7 Multicast Addresses\n   An IPv6 multicast address is an identifier for a\
    \ group of interfaces\n   (typically on different nodes).  An interface may belong\
    \ to any\n   number of multicast groups.  Multicast addresses have the following\n\
    \   format:\n   |   8    |  4 |  4 |                  112 bits               \
    \    |\n   +------ -+----+----+---------------------------------------------+\n\
    \   |11111111|flgs|scop|                  group ID                   |\n   +--------+----+----+---------------------------------------------+\n\
    \         binary 11111111 at the start of the address identifies the\n       \
    \  address as being a multicast address.\n                                   \
    \    +-+-+-+-+\n         flgs is a set of 4 flags:     |0|0|0|T|\n           \
    \                            +-+-+-+-+\n            The high-order 3 flags are\
    \ reserved, and must be initialized\n            to 0.\n            T = 0 indicates\
    \ a permanently-assigned (\"well-known\")\n            multicast address, assigned\
    \ by the Internet Assigned Number\n            Authority (IANA).\n           \
    \ T = 1 indicates a non-permanently-assigned (\"transient\")\n            multicast\
    \ address.\n         scop is a 4-bit multicast scope value used to limit the scope\n\
    \         of the multicast group.  The values are:\n            0  reserved\n\
    \            1  interface-local scope\n            2  link-local scope\n     \
    \       3  reserved\n            4  admin-local scope\n            5  site-local\
    \ scope\n            6  (unassigned)\n            7  (unassigned)\n          \
    \  8  organization-local scope\n            9  (unassigned)\n            A  (unassigned)\n\
    \            B  (unassigned)\n            C  (unassigned)\n            D  (unassigned)\n\
    \            E  global scope\n            F  reserved\n            interface-local\
    \ scope spans only a single interface on a\n            node, and is useful only\
    \ for loopback transmission of\n            multicast.\n            link-local\
    \ and site-local multicast scopes span the same\n            topological regions\
    \ as the corresponding unicast scopes.\n            admin-local scope is the smallest\
    \ scope that must be\n            administratively configured, i.e., not automatically\
    \ derived\n            from physical connectivity or other, non- multicast-related\n\
    \            configuration.\n            organization-local scope is intended\
    \ to span multiple sites\n            belonging to a single organization.\n  \
    \          scopes labeled \"(unassigned)\" are available for\n            administrators\
    \ to define additional multicast regions.\n         group ID identifies the multicast\
    \ group, either permanent or\n         transient, within the given scope.\n  \
    \ The \"meaning\" of a permanently-assigned multicast address is\n   independent\
    \ of the scope value.  For example, if the \"NTP servers\n   group\" is assigned\
    \ a permanent multicast address with a group ID of\n   101 (hex), then:\n    \
    \  FF01:0:0:0:0:0:0:101 means all NTP servers on the same interface\n      (i.e.,\
    \ the same node) as the sender.\n      FF02:0:0:0:0:0:0:101 means all NTP servers\
    \ on the same link as the\n      sender.\n      FF05:0:0:0:0:0:0:101 means all\
    \ NTP servers in the same site as the\n      sender.\n      FF0E:0:0:0:0:0:0:101\
    \ means all NTP servers in the internet.\n   Non-permanently-assigned multicast\
    \ addresses are meaningful only\n   within a given scope.  For example, a group\
    \ identified by the non-\n   permanent, site-local multicast address FF15:0:0:0:0:0:0:101\
    \ at one\n   site bears no relationship to a group using the same address at a\n\
    \   different site, nor to a non-permanent group using the same group ID\n   with\
    \ different scope, nor to a permanent group with the same group\n   ID.\n   Multicast\
    \ addresses must not be used as source addresses in IPv6\n   packets or appear\
    \ in any Routing header.\n   Routers must not forward any multicast packets beyond\
    \ of the scope\n   indicated by the scop field in the destination multicast address.\n\
    \   Nodes must not originate a packet to a multicast address whose scop\n   field\
    \ contains the reserved value 0; if such a packet is received, it\n   must be\
    \ silently dropped.  Nodes should not originate a packet to a\n   multicast address\
    \ whose scop field contains the reserved value F; if\n   such a packet is sent\
    \ or received, it must be treated the same as\n   packets destined to a global\
    \ (scop E) multicast address.\n"
- title: 2.7.1 Pre-Defined Multicast Addresses
  contents:
  - "2.7.1 Pre-Defined Multicast Addresses\n   The following well-known multicast\
    \ addresses are pre-defined.  The\n   group ID's defined in this section are defined\
    \ for explicit scope\n   values.\n   Use of these group IDs for any other scope\
    \ values, with the T flag\n   equal to 0, is not allowed.\n      Reserved Multicast\
    \ Addresses:   FF00:0:0:0:0:0:0:0\n                                      FF01:0:0:0:0:0:0:0\n\
    \                                      FF02:0:0:0:0:0:0:0\n                  \
    \                    FF03:0:0:0:0:0:0:0\n                                    \
    \  FF04:0:0:0:0:0:0:0\n                                      FF05:0:0:0:0:0:0:0\n\
    \                                      FF06:0:0:0:0:0:0:0\n                  \
    \                    FF07:0:0:0:0:0:0:0\n                                    \
    \  FF08:0:0:0:0:0:0:0\n                                      FF09:0:0:0:0:0:0:0\n\
    \                                      FF0A:0:0:0:0:0:0:0\n                  \
    \                    FF0B:0:0:0:0:0:0:0\n                                    \
    \  FF0C:0:0:0:0:0:0:0\n                                      FF0D:0:0:0:0:0:0:0\n\
    \                                      FF0E:0:0:0:0:0:0:0\n                  \
    \                    FF0F:0:0:0:0:0:0:0\n   The above multicast addresses are\
    \ reserved and shall never be\n   assigned to any multicast group.\n      All\
    \ Nodes Addresses:    FF01:0:0:0:0:0:0:1\n                              FF02:0:0:0:0:0:0:1\n\
    \   The above multicast addresses identify the group of all IPv6 nodes,\n   within\
    \ scope 1 (interface-local) or 2 (link-local).\n      All Routers Addresses: \
    \  FF01:0:0:0:0:0:0:2\n                               FF02:0:0:0:0:0:0:2\n   \
    \                            FF05:0:0:0:0:0:0:2\n   The above multicast addresses\
    \ identify the group of all IPv6 routers,\n   within scope 1 (interface-local),\
    \ 2 (link-local), or 5 (site-local).\n      Solicited-Node Address:  FF02:0:0:0:0:1:FFXX:XXXX\n\
    \   Solicited-node multicast address are computed as a function of a\n   node's\
    \ unicast and anycast addresses.  A solicited-node multicast\n   address is formed\
    \ by taking the low-order 24 bits of an address\n   (unicast or anycast) and appending\
    \ those bits to the prefix\n   FF02:0:0:0:0:1:FF00::/104 resulting in a multicast\
    \ address in the\n   range\n      FF02:0:0:0:0:1:FF00:0000\n   to\n      FF02:0:0:0:0:1:FFFF:FFFF\n\
    \   For example, the solicited node multicast address corresponding to\n   the\
    \ IPv6 address 4037::01:800:200E:8C6C is FF02::1:FF0E:8C6C.  IPv6\n   addresses\
    \ that differ only in the high-order bits, e.g., due to\n   multiple high-order\
    \ prefixes associated with different aggregations,\n   will map to the same solicited-node\
    \ address thereby, reducing the\n   number of multicast addresses a node must\
    \ join.\n   A node is required to compute and join (on the appropriate interface)\n\
    \   the associated Solicited-Node multicast addresses for every unicast\n   and\
    \ anycast address it is assigned.\n"
- title: 2.8 A Node's Required Addresses
  contents:
  - "2.8 A Node's Required Addresses\n   A host is required to recognize the following\
    \ addresses as\n   identifying itself:\n      o  Its required Link-Local Address\
    \ for each interface.\n      o  Any additional Unicast and Anycast Addresses that\
    \ have been\n         configured for the node's interfaces (manually or\n    \
    \     automatically).\n      o  The loopback address.\n      o  The All-Nodes\
    \ Multicast Addresses defined in section 2.7.1.\n      o  The Solicited-Node Multicast\
    \ Address for each of its unicast\n         and anycast addresses.\n      o  Multicast\
    \ Addresses of all other groups to which the node\n         belongs.\n   A router\
    \ is required to recognize all addresses that a host is\n   required to recognize,\
    \ plus the following addresses as identifying\n   itself:\n      o  The Subnet-Router\
    \ Anycast Addresses for all interfaces for\n         which it is configured to\
    \ act as a router.\n      o  All other Anycast Addresses with which the router\
    \ has been\n         configured.\n      o  The All-Routers Multicast Addresses\
    \ defined in section 2.7.1.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   IPv6 addressing documents do not have any direct\
    \ impact on Internet\n   infrastructure security.  Authentication of IPv6 packets\
    \ is defined\n   in [AUTH].\n"
- title: 4. IANA Considerations
  contents:
  - "4. IANA Considerations\n   The table and notes at http://www.isi.edu/in-\n  \
    \ notes/iana/assignments/ipv6-address-space.txt should be replaced with\n   the\
    \ following:\n   INTERNET PROTOCOL VERSION 6 ADDRESS SPACE\n   The initial assignment\
    \ of IPv6 address space is as follows:\n   Allocation                        \
    \    Prefix         Fraction of\n                                         (binary)\
    \       Address Space\n   -----------------------------------   --------     \
    \  -------------\n   Unassigned (see Note 1 below)         0000 0000      1/256\n\
    \   Unassigned                            0000 0001      1/256\n   Reserved for\
    \ NSAP Allocation          0000 001       1/128 [RFC1888]\n   Unassigned     \
    \                       0000 01        1/64\n   Unassigned                   \
    \         0000 1         1/32\n   Unassigned                            0001 \
    \          1/16\n   Global Unicast                        001            1/8 \
    \  [RFC2374]\n   Unassigned                            010            1/8\n  \
    \ Unassigned                            011            1/8\n   Unassigned    \
    \                        100            1/8\n   Unassigned                   \
    \         101            1/8\n   Unassigned                            110   \
    \         1/8\n   Unassigned                            1110           1/16\n\
    \   Unassigned                            1111 0         1/32\n   Unassigned \
    \                           1111 10        1/64\n   Unassigned               \
    \             1111 110       1/128\n   Unassigned                            1111\
    \ 1110 0    1/512\n   Link-Local Unicast Addresses          1111 1110 10   1/1024\n\
    \   Site-Local Unicast Addresses          1111 1110 11   1/1024\n   Multicast\
    \ Addresses                   1111 1111      1/256\n   Notes:\n   1. The \"unspecified\
    \ address\", the \"loopback address\", and the IPv6\n      Addresses with Embedded\
    \ IPv4 Addresses are assigned out of the\n      0000 0000 binary prefix space.\n\
    \   2. For now, IANA should limit its allocation of IPv6 unicast address\n   \
    \   space to the range of addresses that start with binary value 001.\n      The\
    \ rest of the global unicast address space (approximately 85% of\n      the IPv6\
    \ address space) is reserved for future definition and use,\n      and is not\
    \ to be assigned by IANA at this time.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1  Normative References
  contents:
  - "5.1  Normative References\n   [IPV6]    Deering, S. and R. Hinden, \"Internet\
    \ Protocol, Version 6\n             (IPv6) Specification\", RFC 2460, December\
    \ 1998.\n   [RFC2026] Bradner, S., \"The Internet Standards Process -- Revision\n\
    \             3\", BCP 9 , RFC 2026, October 1996.\n"
- title: 5.2  Informative References
  contents:
  - "5.2  Informative References\n   [ANYCST]  Partridge, C., Mendez, T. and W. Milliken,\
    \ \"Host Anycasting\n             Service\", RFC 1546, November 1993.\n   [AUTH]\
    \    Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC\n           \
    \  2402, November 1998.\n   [AGGR]    Hinden, R., O'Dell, M. and S. Deering, \"\
    An Aggregatable\n             Global Unicast Address Format\", RFC 2374, July\
    \ 1998.\n   [CIDR]    Fuller, V., Li, T., Yu, J. and K. Varadhan, \"Classless\n\
    \             Inter-Domain Routing (CIDR): An Address Assignment and\n       \
    \      Aggregation Strategy\", RFC 1519, September 1993.\n   [ETHER]   Crawford,\
    \ M., \"Transmission of IPv6 Packets over Ethernet\n             Networks\", RFC\
    \ 2464, December 1998.\n   [EUI64]   IEEE, \"Guidelines for 64-bit Global Identifier\
    \ (EUI-64)\n             Registration Authority\",\n             http://standards.ieee.org/regauth/oui/tutorials/EUI64.html,\n\
    \             March 1997.\n   [FDDI]    Crawford, M., \"Transmission of IPv6 Packets\
    \ over FDDI\n             Networks\", RFC 2467, December 1998.\n   [MASGN]   Hinden,\
    \ R. and S. Deering, \"IPv6 Multicast Address\n             Assignments\", RFC\
    \ 2375, July 1998.\n   [NSAP]    Bound, J., Carpenter, B., Harrington, D., Houldsworth,\
    \ J.\n             and A. Lloyd, \"OSI NSAPs and IPv6\", RFC 1888, August 1996.\n\
    \   [PRIV]    Narten, T. and R. Draves, \"Privacy Extensions for Stateless\n \
    \            Address Autoconfiguration in IPv6\", RFC 3041, January 2001.\n  \
    \ [TOKEN]   Crawford, M., Narten, T. and S. Thomas, \"Transmission of\n      \
    \       IPv6 Packets over Token Ring Networks\", RFC 2470, December\n        \
    \     1998.\n   [TRAN]    Gilligan, R. and E. Nordmark, \"Transition Mechanisms\
    \ for\n             IPv6 Hosts and Routers\", RFC 2893, August 2000.\n"
- title: 'APPENDIX A: Creating Modified EUI-64 format Interface Identifiers'
  contents:
  - "APPENDIX A: Creating Modified EUI-64 format Interface Identifiers\n   Depending\
    \ on the characteristics of a specific link or node there are\n   a number of\
    \ approaches for creating Modified EUI-64 format interface\n   identifiers.  This\
    \ appendix describes some of these approaches.\n"
- title: Links or Nodes with IEEE EUI-64 Identifiers
  contents:
  - "Links or Nodes with IEEE EUI-64 Identifiers\n   The only change needed to transform\
    \ an IEEE EUI-64 identifier to an\n   interface identifier is to invert the \"\
    u\" (universal/local) bit.  For\n   example, a globally unique IEEE EUI-64 identifier\
    \ of the form:\n   |0              1|1              3|3              4|4     \
    \         6|\n   |0              5|6              1|2              7|8       \
    \       3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   where\
    \ \"c\" are the bits of the assigned company_id, \"0\" is the value\n   of the\
    \ universal/local bit to indicate global scope, \"g\" is\n   individual/group\
    \ bit, and \"m\" are the bits of the manufacturer-\n   selected extension identifier.\
    \  The IPv6 interface identifier would\n   be of the form:\n   |0            \
    \  1|1              3|3              4|4              6|\n   |0              5|6\
    \              1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   The\
    \ only change is inverting the value of the universal/local bit.\n"
- title: Links or Nodes with IEEE 802 48 bit MAC's
  contents:
  - "Links or Nodes with IEEE 802 48 bit MAC's\n   [EUI64] defines a method to create\
    \ a IEEE EUI-64 identifier from an\n   IEEE 48bit MAC identifier.  This is to\
    \ insert two octets, with\n   hexadecimal values of 0xFF and 0xFE, in the middle\
    \ of the 48 bit MAC\n   (between the company_id and vendor supplied id).  For\
    \ example, the 48\n   bit IEEE MAC with global scope:\n   |0              1|1\
    \              3|3              4|\n   |0              5|6              1|2  \
    \            7|\n   +----------------+----------------+----------------+\n   |cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|\n\
    \   +----------------+----------------+----------------+\n   where \"c\" are the\
    \ bits of the assigned company_id, \"0\" is the value\n   of the universal/local\
    \ bit to indicate global scope, \"g\" is\n   individual/group bit, and \"m\" are\
    \ the bits of the manufacturer-\n   selected extension identifier.  The interface\
    \ identifier would be of\n   the form:\n   |0              1|1              3|3\
    \              4|4              6|\n   |0              5|6              1|2  \
    \            7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccc11111111|11111110mmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   When\
    \ IEEE 802 48bit MAC addresses are available (on an interface or a\n   node),\
    \ an implementation may use them to create interface identifiers\n   due to their\
    \ availability and uniqueness properties.\n"
- title: Links with Other Kinds of Identifiers
  contents:
  - "Links with Other Kinds of Identifiers\n   There are a number of types of links\
    \ that have link-layer interface\n   identifiers other than IEEE EIU-64 or IEEE\
    \ 802 48-bit MACs.  Examples\n   include LocalTalk and Arcnet.  The method to\
    \ create an Modified EUI-\n   64 format identifier is to take the link identifier\
    \ (e.g., the\n   LocalTalk 8 bit node identifier) and zero fill it to the left.\
    \  For\n   example, a LocalTalk 8 bit node identifier of hexadecimal value 0x4F\n\
    \   results in the following interface identifier:\n   |0              1|1   \
    \           3|3              4|4              6|\n   |0              5|6     \
    \         1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |0000000000000000|0000000000000000|0000000000000000|0000000001001111|\n  \
    \ +----------------+----------------+----------------+----------------+\n   Note\
    \ that this results in the universal/local bit set to \"0\" to\n   indicate local\
    \ scope.\n"
- title: Links without Identifiers
  contents:
  - "Links without Identifiers\n   There are a number of links that do not have any\
    \ type of built-in\n   identifier.  The most common of these are serial links\
    \ and configured\n   tunnels.  Interface identifiers must be chosen that are unique\
    \ within\n   a subnet-prefix.\n   When no built-in identifier is available on\
    \ a link the preferred\n   approach is to use a global interface identifier from\
    \ another\n   interface or one which is assigned to the node itself.  When using\n\
    \   this approach no other interface connecting the same node to the same\n  \
    \ subnet-prefix may use the same identifier.\n   If there is no global interface\
    \ identifier available for use on the\n   link the implementation needs to create\
    \ a local-scope interface\n   identifier.  The only requirement is that it be\
    \ unique within a\n   subnet prefix.  There are many possible approaches to select\
    \ a\n   subnet-prefix-unique interface identifier.  These include:\n      Manual\
    \ Configuration\n      Node Serial Number\n      Other node-specific token\n \
    \  The subnet-prefix-unique interface identifier should be generated in\n   a\
    \ manner that it does not change after a reboot of a node or if\n   interfaces\
    \ are added or deleted from the node.\n   The selection of the appropriate algorithm\
    \ is link and implementation\n   dependent.  The details on forming interface\
    \ identifiers are defined\n   in the appropriate \"IPv6 over <link>\" specification.\
    \  It is strongly\n   recommended that a collision detection algorithm be implemented\
    \ as\n   part of any automatic algorithm.\n"
- title: 'APPENDIX B: Changes from RFC-2373'
  contents:
  - "APPENDIX B: Changes from RFC-2373\n   The following changes were made from RFC-2373\
    \ \"IP Version 6\n   Addressing Architecture\":\n   -  Clarified text in section\
    \ 2.2 to allow \"::\" to represent one or\n      more groups of 16 bits of zeros.\n\
    \   -  Changed uniqueness requirement of Interface Identifiers from\n      unique\
    \ on a link to unique within a subnet prefix.  Also added a\n      recommendation\
    \ that the same interface identifier not be assigned\n      to different machines\
    \ on a link.\n   -  Change site-local format to make the subnet ID field 54-bit\
    \ long\n      and remove the 38-bit zero's field.\n   -  Added description of\
    \ multicast scop values and rules to handle the\n      reserved scop value 0.\n\
    \   -  Revised sections 2.4 and 2.5.6 to simplify and clarify how\n      different\
    \ address types  are identified.  This was done to insure\n      that implementations\
    \ do not build in any knowledge about global\n      unicast format prefixes. \
    \ Changes include:\n         o  Removed Format Prefix (FP) terminology\n     \
    \    o  Revised list of address types to only include exceptions to\n        \
    \    global unicast and a singe entry that identifies everything\n           \
    \ else as Global Unicast.\n         o  Removed list of defined prefix exceptions\
    \ from section 2.5.6\n            as it is now the main part of section 2.4.\n\
    \   -  Clarified text relating to EUI-64 identifiers to distinguish\n      between\
    \ IPv6's \"Modified EUI-64 format\" identifiers and IEEE EUI-\n      64 identifiers.\n\
    \   -  Combined the sections on the Global Unicast Addresses and NSAP\n      Addresses\
    \ into a single section on Global Unicast Addresses,\n      generalized the Global\
    \ Unicast format, and cited [AGGR] and [NSAP]\n      as examples.\n   -  Reordered\
    \ sections 2.5.4 and 2.5.5.\n   -  Removed section 2.7.2 Assignment of New IPv6\
    \ Multicast Addresses\n      because this is being redefined elsewhere.\n   -\
    \  Added an IANA considerations section that updates the IANA IPv6\n      address\
    \ allocations and documents the NSAP and AGGR allocations.\n   -  Added clarification\
    \ that the \"IPv4-compatible IPv6 address\" must\n      use global IPv4 unicast\
    \ addresses.\n   -  Divided references in to normative and non-normative sections.\n\
    \   -  Added reference to [PRIV] in section 2.5.1\n   -  Added clarification that\
    \ routers must not forward multicast\n      packets outside of the scope indicated\
    \ in the multicast address.\n   -  Added clarification that routers must not forward\
    \ packets with\n       source address of the unspecified address.\n   -  Added\
    \ clarification that routers must drop packets received on an\n      interface\
    \ with destination address of loopback.\n   -  Clarified the definition of IPv4-mapped\
    \ addresses.\n   -  Removed the ABNF Description of Text Representations Appendix.\n\
    \   -  Removed the address block reserved for IPX addresses.\n   -  Multicast\
    \ scope changes:\n         o  Changed name of scope value 1 from \"node-local\"\
    \ to\n            \"interface-local\"\n         o  Defined scope value 4 as \"\
    admin-local\"\n   -  Corrected reference to RFC1933 and updated references.\n\
    \   -  Many small changes to clarify and make the text more consistent.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Robert M. Hinden\n   Nokia\n   313 Fairchild Drive\n \
    \  Mountain View, CA 94043\n   USA\n   Phone: +1 650 625-2004\n   EMail: hinden@iprg.nokia.com\n\
    \   Stephen E. Deering\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San\
    \ Jose, CA 95134-1706\n   USA\n   Phone: +1 408 527-8213\n   EMail: deering@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
