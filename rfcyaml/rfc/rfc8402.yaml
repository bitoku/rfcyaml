- contents:
  - '                      Segment Routing Architecture

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Segment Routing (SR) leverages the source routing paradigm.  A node\n
    \  steers a packet through an ordered list of instructions, called\n   \"segments\".
    \ A segment can represent any instruction, topological or\n   service based.  A
    segment can have a semantic local to an SR node or\n   global within an SR domain.
    \ SR provides a mechanism that allows a\n   flow to be restricted to a specific
    topological path, while\n   maintaining per-flow state only at the ingress node(s)
    to the SR\n   domain.\n   SR can be directly applied to the MPLS architecture
    with no change to\n   the forwarding plane.  A segment is encoded as an MPLS label.
    \ An\n   ordered list of segments is encoded as a stack of labels.  The\n   segment
    to process is on the top of the stack.  Upon completion of a\n   segment, the
    related label is popped from the stack.\n   SR can be applied to the IPv6 architecture,
    with a new type of\n   routing header.  A segment is encoded as an IPv6 address.
    \ An ordered\n   list of segments is encoded as an ordered list of IPv6 addresses
    in\n   the routing header.  The active segment is indicated by the\n   Destination
    Address (DA) of the packet.  The next active segment is\n   indicated by a pointer
    in the new routing header.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8402.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   6\n   3.  Link-State IGP Segments . . . . . . . . . . . . . . . . . .
    .   9\n     3.1.  IGP-Prefix Segment (Prefix-SID) . . . . . . . . . . . . .   9\n
    \      3.1.1.  Prefix-SID Algorithm  . . . . . . . . . . . . . . . .   9\n       3.1.2.
    \ SR-MPLS . . . . . . . . . . . . . . . . . . . . . . .  10\n       3.1.3.  SRv6
    \ . . . . . . . . . . . . . . . . . . . . . . . .  12\n     3.2.  IGP-Node Segment
    (Node-SID) . . . . . . . . . . . . . . .  13\n     3.3.  IGP-Anycast Segment (Anycast-SID)
    . . . . . . . . . . . .  13\n       3.3.1.  Anycast-SID in SR-MPLS  . . . . .
    . . . . . . . . . .  13\n     3.4.  IGP-Adjacency Segment (Adj-SID) . . . . .
    . . . . . . . .  15\n       3.4.1.  Parallel Adjacencies  . . . . . . . . . .
    . . . . . .  17\n       3.4.2.  LAN Adjacency Segments  . . . . . . . . . . .
    . . . .  18\n     3.5.  Inter-Area Considerations . . . . . . . . . . . . . .
    . .  18\n   4.  BGP Segments  . . . . . . . . . . . . . . . . . . . . . . . .
    \ 19\n     4.1.  BGP-Prefix Segment  . . . . . . . . . . . . . . . . . . .  19\n
    \    4.2.  BGP Peering Segments  . . . . . . . . . . . . . . . . . .  20\n   5.
    \ Binding Segment . . . . . . . . . . . . . . . . . . . . . . .  21\n     5.1.
    \ IGP Mirroring Context Segment . . . . . . . . . . . . . .  21\n   6.  Multicast
    . . . . . . . . . . . . . . . . . . . . . . . . . .  22\n   7.  IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .  22\n   8.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  22\n     8.1.  SR-MPLS . . . . . . . .
    . . . . . . . . . . . . . . . . .  22\n     8.2.  SRv6  . . . . . . . . . . .
    . . . . . . . . . . . . . . .  24\n     8.3.  Congestion Control  . . . . . .
    . . . . . . . . . . . . .  25\n   9.  Manageability Considerations  . . . . .
    . . . . . . . . . . .  25\n   10. References  . . . . . . . . . . . . . . . .
    . . . . . . . . .  26\n     10.1.  Normative References . . . . . . . . . . .
    . . . . . . .  26\n     10.2.  Informative References . . . . . . . . . . . .
    . . . . .  27\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . .
    . . .  30\n   Contributors  . . . . . . . . . . . . . . . . . . . . . . . . .
    .  31\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  32\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Segment Routing (SR) leverages the source routing paradigm.
    \ A node\n   steers a packet through an SR Policy instantiated as an ordered list\n
    \  of instructions called \"segments\".  A segment can represent any\n   instruction,
    topological or service based.  A segment can have a\n   semantic local to an SR
    node or global within an SR domain.  SR\n   supports per-flow explicit routing
    while maintaining per-flow state\n   only at the ingress nodes to the SR domain.\n
    \  A segment is often referred to by its Segment Identifier (SID).\n   A segment
    may be associated with a topological instruction.  A\n   topological local segment
    may instruct a node to forward the packet\n   via a specific outgoing interface.
    \ A topological global segment may\n   instruct an SR domain to forward the packet
    via a specific path to a\n   destination.  Different segments may exist for the
    same destination,\n   each with different path objectives (e.g., which metric
    is minimized,\n   what constraints are specified).\n   A segment may be associated
    with a service instruction (e.g., the\n   packet should be processed by a container
    or Virtual Machine (VM)\n   associated with the segment).  A segment may be associated
    with a QoS\n   treatment (e.g., shape the packets received with this segment at
    x\n   Mbps).\n   The SR architecture supports any type of instruction associated
    with\n   a segment.\n   The SR architecture supports any type of control plane:
    distributed,\n   centralized, or hybrid.\n   In a distributed scenario, the segments
    are allocated and signaled by\n   IS-IS or OSPF or BGP.  A node individually decides
    to steer packets\n   on an SR Policy (e.g., pre-computed local protection [RFC8355]).
    \ A\n   node individually computes the SR Policy.\n   In a centralized scenario,
    the segments are allocated and\n   instantiated by an SR controller.  The SR controller
    decides which\n   nodes need to steer which packets on which source-routed policies.\n
    \  The SR controller computes the source-routed policies.  The SR\n   architecture
    does not restrict how the controller programs the\n   network.  Likely options
    are Network Configuration Protocol\n   (NETCONF), Path Computation Element Communication
    Protocol (PCEP),\n   and BGP.  The SR architecture does not restrict the number
    of SR\n   controllers.  Specifically, multiple SR controllers may program the\n
    \  same SR domain.  The SR architecture allows these SR controllers to\n   discover
    which SIDs are instantiated at which nodes and which sets of\n   local (SRLB)
    and global (SRGB) labels are available at which node.\n   A hybrid scenario complements
    a base distributed control plane with a\n   centralized controller.  For example,
    when the destination is outside\n   the IGP domain, the SR controller may compute
    an SR Policy on behalf\n   of an IGP node.  The SR architecture does not restrict
    how the nodes\n   that are part of the distributed control plane interact with
    the SR\n   controller.  Likely options are PCEP and BGP.\n   Hosts MAY be part
    of an SR domain.  A centralized controller can\n   inform hosts about policies
    either by pushing these policies to hosts\n   or by responding to requests from
    hosts.\n   The SR architecture can be instantiated on various data planes.  This\n
    \  document introduces two data-plane instantiations of SR: SR over MPLS\n   (SR-MPLS)
    and SR over IPv6 (SRv6).\n   SR can be directly applied to the MPLS architecture
    with no change to\n   the forwarding plane [SR-MPLS].  A segment is encoded as
    an MPLS\n   label.  An SR Policy is instantiated as a stack of labels.  The\n
    \  segment to process (the active segment) is on the top of the stack.\n   Upon
    completion of a segment, the related label is popped from the\n   stack.\n   SR
    can be applied to the IPv6 architecture with a new type of routing\n   header
    called the SR Header (SRH) [IPv6-SRH].  An instruction is\n   associated with
    a segment and encoded as an IPv6 address.  An SRv6\n   segment is also called
    an SRv6 SID.  An SR Policy is instantiated as\n   an ordered list of SRv6 SIDs
    in the routing header.  The active\n   segment is indicated by the Destination
    Address (DA) of the packet.\n   The next active segment is indicated by the SegmentsLeft
    (SL) pointer\n   in the SRH.  When an SRv6 SID is completed, the SL is decremented
    and\n   the next segment is copied to the DA.  When a packet is steered on an\n
    \  SR Policy, the related SRH is added to the packet.\n   In the context of an
    IGP-based distributed control plane, two\n   topological segments are defined:
    the IGP-Adjacency segment and the\n   IGP-Prefix segment.\n   In the context of
    a BGP-based distributed control plane, two\n   topological segments are defined:
    the BGP peering segment and the\n   BGP-Prefix segment.\n   The headend of an
    SR Policy binds a SID (called a Binding segment or\n   BSID) to its policy.  When
    the headend receives a packet with active\n   segment matching the BSID of a local
    SR Policy, the headend steers\n   the packet into the associated SR Policy.\n
    \  This document defines the IGP, BGP, and Binding segments for the\n   SR-MPLS
    and SRv6 data planes.\n   Note: This document defines the architecture for Segment
    Routing,\n   including definitions of basic objects and functions and a\n   description
    of the overall design.  It does NOT define the means of\n   implementing the architecture
    -- that is contained in numerous\n   referenced documents, some of which are mentioned
    in this document as\n   a convenience to the reader.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,
    as shown here.\n   SR-MPLS: the instantiation of SR on the MPLS data plane.\n
    \  SRv6: the instantiation of SR on the IPv6 data plane.\n   Segment: an instruction
    a node executes on the incoming packet (e.g.,\n   forward packet according to
    shortest path to destination, or, forward\n   packet through a specific interface,
    or, deliver the packet to a\n   given application/service instance).\n   SID:
    a segment identifier.  Note that the term SID is commonly used\n   in place of
    the term \"Segment\", though this is technically imprecise\n   as it overlooks
    any necessary translation.\n   SR-MPLS SID: an MPLS label or an index value into
    an MPLS label space\n   explicitly associated with the segment.\n   SRv6 SID:
    an IPv6 address explicitly associated with the segment.\n   Segment Routing domain
    (SR domain): the set of nodes participating in\n   the source-based routing model.
    \ These nodes may be connected to the\n   same physical infrastructure (e.g.,
    a Service Provider's network).\n   They may as well be remotely connected to each
    other (e.g., an\n   enterprise VPN or an overlay).  If multiple protocol instances
    are\n   deployed, the SR domain most commonly includes all of the protocol\n   instances
    in a network.  However, some deployments may wish to\n   subdivide the network
    into multiple SR domains, each of which\n   includes one or more protocol instances.
    \ It is expected that all\n   nodes in an SR domain are managed by the same administrative
    entity.\n   Active Segment: the segment that is used by the receiving router to\n
    \  process the packet.  In the MPLS data plane, it is the top label.  In\n   the
    IPv6 data plane, it is the destination address [IPv6-SRH].\n   PUSH: the operation
    consisting of the insertion of a segment at the\n   top of the segment list.  In
    SR-MPLS, the top of the segment list is\n   the topmost (outer) label of the label
    stack.  In SRv6, the top of\n   the segment list is represented by the first segment
    in the Segment\n   Routing Header as defined in [IPv6-SRH].\n   NEXT: when the
    active segment is completed, NEXT is the operation\n   consisting of the inspection
    of the next segment.  The next segment\n   becomes active.  In SR-MPLS, NEXT is
    implemented as a POP of the top\n   label.  In SRv6, NEXT is implemented as the
    copy of the next segment\n   from the SRH to the destination address of the IPv6
    header.\n   CONTINUE: the active segment is not completed; hence, it remains\n
    \  active.  In SR-MPLS, the CONTINUE operation is implemented as a SWAP\n   of
    the top label [RFC3031].  In SRv6, this is the plain IPv6\n   forwarding action
    of a regular IPv6 packet according to its\n   destination address.\n   SR Global
    Block (SRGB): the set of global segments in the SR domain.\n   If a node participates
    in multiple SR domains, there is one SRGB for\n   each SR domain.  In SR-MPLS,
    SRGB is a local property of a node and\n   identifies the set of local labels
    reserved for global segments.  In\n   SR-MPLS, using identical SRGBs on all nodes
    within the SR domain is\n   strongly recommended.  Doing so eases operations and
    troubleshooting\n   as the same label represents the same global segment at each
    node.\n   In SRv6, the SRGB is the set of global SRv6 SIDs in the SR domain.\n
    \  SR Local Block (SRLB): local property of an SR node.  If a node\n   participates
    in multiple SR domains, there is one SRLB for each SR\n   domain.  In SR-MPLS,
    SRLB is a set of local labels reserved for local\n   segments.  In SRv6, SRLB
    is a set of local IPv6 addresses reserved\n   for local SRv6 SIDs.  In a controller-driven
    network, some\n   controllers or applications may use the control plane to discover
    the\n   available set of local segments.\n   Global Segment: a segment that is
    part of the SRGB of the domain.\n   The instruction associated with the segment
    is defined at the SR\n   domain level.  A topological shortest-path segment to
    a given\n   destination within an SR domain is a typical example of a global\n
    \  segment.\n   Local Segment: In SR-MPLS, this is a local label outside the SRGB.\n
    \  It may be part of the explicitly advertised SRLB.  In SRv6, this can\n   be
    any IPv6 address, i.e., the address may be part of the SRGB, but\n   used such
    that it has local significance.  The instruction associated\n   with the segment
    is defined at the node level.\n   IGP Segment: the generic name for a segment
    attached to a piece of\n   information advertised by a link-state IGP, e.g., an
    IGP prefix or an\n   IGP adjacency.\n   IGP-Prefix Segment: an IGP-Prefix segment
    is an IGP segment\n   representing an IGP prefix.  When an IGP-Prefix segment
    is global\n   within the SR IGP instance/topology, it identifies an instruction
    to\n   forward the packet along the path computed using the routing\n   algorithm
    specified in the algorithm field, in the topology, and in\n   the IGP instance
    where it is advertised.  Also referred to as \"prefix\n   segment\".\n   Prefix-SID:
    the SID of the IGP-Prefix segment.\n   IGP-Anycast Segment: an IGP-Anycast segment
    is an IGP-Prefix segment\n   that identifies an anycast prefix advertised by a
    set of routers.\n   Anycast-SID: the SID of the IGP-Anycast segment.\n   IGP-Adjacency
    Segment: an IGP-Adjacency segment is an IGP segment\n   attached to a unidirectional
    adjacency or a set of unidirectional\n   adjacencies.  By default, an IGP-Adjacency
    segment is local (unless\n   explicitly advertised otherwise) to the node that
    advertises it.\n   Also referred to as \"Adj-SID\".\n   Adj-SID: the SID of the
    IGP-Adjacency segment.\n   IGP-Node Segment: an IGP-Node segment is an IGP-Prefix
    segment that\n   identifies a specific router (e.g., a loopback).  Also referred
    to as\n   \"Node Segment\".\n   Node-SID: the SID of the IGP-Node segment.\n   SR
    Policy: an ordered list of segments.  The headend of an SR Policy\n   steers packets
    onto the SR Policy.  The list of segments can be\n   specified explicitly in SR-MPLS
    as a stack of labels and in SRv6 as\n   an ordered list of SRv6 SIDs.  Alternatively,
    the list of segments is\n   computed based on a destination and a set of optimization
    objective\n   and constraints (e.g., latency, affinity, SRLG, etc.).  The\n   computation
    can be local or delegated to a PCE server.  An SR Policy\n   can be configured
    by the operator, provisioned via NETCONF [RFC6241]\n   or provisioned via PCEP
    [RFC5440].  An SR Policy can be used for\n   Traffic Engineering (TE), Operations,
    Administration, and Maintenance\n   (OAM), or Fast Reroute (FRR) reasons.\n   Segment
    List Depth: the number of segments of an SR Policy.  The\n   entity instantiating
    an SR Policy at a node N should be able to\n   discover the depth-insertion capability
    of the node N.  For example,\n   the PCEP SR capability advertisement described
    in [PCEP-SR-EXT] is\n   one means of discovering this capability.\n   Forwarding
    Information Base (FIB): the forwarding table of a node\n"
  title: 2.  Terminology
- contents:
  - "3.  Link-State IGP Segments\n   Within an SR domain, an SR-capable IGP node advertises
    segments for\n   its attached prefixes and adjacencies.  These segments are called\n
    \  \"IGP segments\" or \"IGP SIDs\".  They play a key role in Segment\n   Routing
    and use cases as they enable the expression of any path\n   throughout the SR
    domain.  Such a path is either expressed as a\n   single IGP segment or a list
    of multiple IGP segments.\n   Advertisement of IGP segments requires extensions
    in link-state IGP\n   protocols.  These extensions are defined in [ISIS-SR-EXT],\n
    \  [OSPF-SR-EXT], and [OSPFv3-SR-EXT].\n"
  - contents:
    - "3.1.  IGP-Prefix Segment (Prefix-SID)\n   An IGP-Prefix segment is an IGP segment
      attached to an IGP prefix.\n   An IGP-Prefix segment is global (unless explicitly
      advertised\n   otherwise) within the SR domain.  The context for an IGP-Prefix\n
      \  segment includes the prefix, topology, and algorithm.  Multiple SIDs\n   MAY
      be allocated to the same prefix so long as the tuple <prefix,\n   topology,
      algorithm> is unique.\n   Multiple instances and topologies are defined in IS-IS
      and OSPF in:\n   [RFC5120], [RFC8202], [RFC6549], and [RFC4915].\n"
    - contents:
      - "3.1.1.  Prefix-SID Algorithm\n   Segment Routing supports the use of multiple
        routing algorithms, i.e,\n   different constraint-based shortest-path calculations
        can be\n   supported.  An algorithm identifier is included as part of a Prefix-\n
        \  SID advertisement.  Specification of how an algorithm-specific path\n   calculation
        is done is required in the document defining the\n   algorithm.\n   This document
        defines two algorithms:\n   o  Shortest Path First: this algorithm is the
        default behavior.  The\n      packet is forwarded along the well known ECMP-aware
        Shortest Path\n      First (SPF) algorithm employed by the IGPs.  However,
        it is\n      explicitly allowed for a midpoint to implement another forwarding\n
        \     based on local policy.  The Shortest Path First algorithm is, in\n      fact,
        the default and current behavior of most of the networks\n      where local
        policies may override the SPF decision.\n   o  Strict Shortest Path First
        (Strict-SPF): This algorithm mandates\n      that the packet be forwarded
        according to the ECMP-aware SPF\n      algorithm and instructs any router
        in the path to ignore any\n      possible local policy overriding the SPF
        decision.  The SID\n      advertised with the Strict-SPF algorithm ensures
        that the path the\n      packet is going to take is the expected, and not
        altered, SPF\n      path.  Note that Fast Reroute (FRR) [RFC5714] mechanisms
        are still\n      compliant with the Strict Shortest Path First algorithm.
        \ In other\n      words, a packet received with a Strict-SPF SID may be rerouted\n
        \     through an FRR mechanism.  Strict-SPF uses the same topology used\n
        \     by the Shortest Path First algorithm.  Obviously, nodes that do\n      not
        support Strict-SPF will not install forwarding entries for\n      this algorithm.
        \ Restricting the topology only to those nodes that\n      support this algorithm
        will not produce the desired forwarding\n      paths since the desired behavior
        is to follow the path calculated\n      by the Shortest Path First algorithm.
        \ Therefore, a source SR node\n      MUST NOT use an SR Policy containing
        a strict SPF segment if the\n      path crosses a node not supporting the
        Strict-SPF algorithm.\n   An IGP-Prefix segment identifies the path, to the
        related prefix,\n   computed as per the associated algorithm.  A packet injected
        anywhere\n   within the SR domain with an active Prefix-SID is expected to
        be\n   forwarded along a path computed using the specified algorithm.  For\n
        \  this to be possible, a fully connected topology of routers supporting\n
        \  the specified algorithm is required.\n"
      title: 3.1.1.  Prefix-SID Algorithm
    - contents:
      - "3.1.2.  SR-MPLS\n   When SR is used over the MPLS data plane, SIDs are an
        MPLS label or\n   an index into an MPLS label space (either SRGB or SRLB).\n
        \  Where possible, it is recommended that identical SRGBs be configured\n
        \  on all nodes in an SR domain.  This simplifies troubleshooting as the\n
        \  same label will be associated with the same prefix on all nodes.  In\n
        \  addition, it simplifies support for anycast as detailed in\n   Section
        3.3.\n   The following behaviors are associated with SR operating over the\n
        \  MPLS data plane:\n   o  The IGP signaling extension for IGP-Prefix segment
        includes a flag\n      to indicate whether directly connected neighbors of
        the node on\n      which the prefix is attached should perform the NEXT operation
        or\n      the CONTINUE operation when processing the SID.  This behavior is\n
        \     equivalent to Penultimate Hop Popping (NEXT) or Ultimate Hop\n      Popping
        (CONTINUE) in MPLS.\n   o  A Prefix-SID is allocated in the form of an MPLS
        label (or an\n      index in the SRGB) according to a process similar to IP
        address\n      allocation.  Typically, the Prefix-SID is allocated by policy
        by\n      the operator (or Network Management System (NMS)), and the SID\n
        \     very rarely changes.\n   o  While SR allows a local segment to be attached
        to an IGP prefix,\n      where the terminology \"IGP-Prefix segment\" or \"Prefix-SID\"
        is\n      used, the segment is assumed to be global (i.e., the SID is\n      defined
        from the advertised SRGB).  This is consistent with all\n      the described
        use cases that require global segments attached to\n      IGP prefixes.\n
        \  o  The allocation process MUST NOT allocate the same Prefix-SID to\n      different
        prefixes.\n   o  If a node learns of a Prefix-SID that has a value that falls\n
        \     outside the locally configured SRGB range, then the node MUST NOT\n
        \     use the Prefix-SID and SHOULD issue an error log reporting a\n      misconfiguration.\n
        \  o  If a node N advertises Prefix-SID SID-R for a prefix R that is\n      attached
        to N and specifies CONTINUE as the operation to be\n      performed by directly
        connected neighbors, then N MUST maintain\n      the following FIB entry:\n
        \     Incoming Active Segment: SID-R\n      Ingress Operation: NEXT\n      Egress
        interface: NULL\n   o  A remote node M MUST maintain the following FIB entry
        for any\n      learned Prefix-SID SID-R attached to prefix R:\n     Incoming
        Active Segment: SID-R\n     Ingress Operation:\n        If the next-hop of
        R is the originator of R\n        and M has been instructed to remove the
        active segment: NEXT\n        Else: CONTINUE\n     Egress interface: the interface(s)
        towards the next-hop along the\n                       path computed using
        the algorithm advertised with\n                       the SID toward prefix
        R.\n   As Prefix-SIDs are specific to a given algorithm, if traffic\n   associated
        with an algorithm arrives at a node that does not support\n   that algorithm,
        the traffic will be dropped as there will be no\n   forwarding entry matching
        the incoming label.\n"
      title: 3.1.2.  SR-MPLS
    - contents:
      - "3.1.3.  SRv6\n   When SR is used over the IPv6 data plane:\n   o  A Prefix-SID
        is an IPv6 address.\n   o  An operator MUST explicitly instantiate an SRv6
        SID.  IPv6 node\n      addresses are not SRv6 SIDs by default.\n   A node
        N advertising an IPv6 address R usable as a segment identifier\n   MUST maintain
        the following FIB entry:\n      Incoming Active Segment: R\n      Ingress
        Operation: NEXT\n      Egress interface: NULL\n   Note that forwarding to
        R does not require an entry in the FIBs of\n   all other routers for R.  Forwarding
        can be, and most often will be,\n   achieved by a shorter mask prefix that
        covers R.\n   Independent of SR support, any remote IPv6 node will maintain
        a plain\n   IPv6 FIB entry for any prefix, no matter if the prefix represents
        a\n   segment or not.  This allows forwarding of packets to the node that\n
        \  owns the SID even by nodes that do not support SR.\n   Support of multiple
        algorithms applies to SRv6.  Since algorithm-\n   specific SIDs are simply
        IPv6 addresses, algorithm-specific\n   forwarding entries can be achieved
        by assigning algorithm-specific\n   subnets to the (set of) algorithm specific
        SIDs that a node\n   allocates.\n   Nodes that do not support a given algorithm
        may still have a FIB\n   entry covering an algorithm-specific address even
        though an\n   algorithm-specific path has not been calculated by that node.
        \ This\n   is mitigated by the fact that nodes that do not support a given\n
        \  algorithm will not be included in the topology associated with that\n   algorithm-specific
        SPF; therefore, traffic using the algorithm-\n   specific destination will
        normally not flow via the excluded node.\n   If such traffic were to arrive
        and be forwarded by such a node, it\n   will still progress towards the destination
        node.  The next-hop will\n   be either a node that supports the algorithm
        -- in which case, the\n   packet will be forwarded along algorithm-specific
        paths (or be\n   dropped if none are available) -- or a node that does NOT
        support the\n   algorithm -- in which case, the packet will continue to be
        forwarded\n   along Algorithm 0 paths towards the destination node.\n"
      title: 3.1.3.  SRv6
    title: 3.1.  IGP-Prefix Segment (Prefix-SID)
  - contents:
    - "3.2.  IGP-Node Segment (Node-SID)\n   An IGP Node-SID MUST NOT be associated
      with a prefix that is owned by\n   more than one router within the same routing
      domain.\n"
    title: 3.2.  IGP-Node Segment (Node-SID)
  - contents:
    - "3.3.  IGP-Anycast Segment (Anycast-SID)\n   An Anycast segment or Anycast-SID
      enforces the ECMP-aware shortest-\n   path forwarding towards the closest node
      of the anycast set.  This is\n   useful to express macro-engineering policies
      or protection\n   mechanisms.\n   An IGP-Anycast segment MUST NOT reference
      a particular node.\n   Within an anycast group, all routers in an SR domain
      MUST advertise\n   the same prefix with the same SID value.\n"
    - contents:
      - "3.3.1.  Anycast-SID in SR-MPLS\n                               +--------------+\n
        \                              |   Group A    |\n                               |192.0.2.10/32
        |\n                               |    SID:100   |\n                               |
        \             |\n                        +-----------A1---A3----------+\n
        \                       |      |    | \\ / |   |      |\n             SID:10
        \    |      |    |  /  |   |      |     SID:30\n       203.0.113.1/32   |
        \     |    | / \\ |   |      |  203.0.113.3/32\n               PE1------R1----------A2---A4---------R3------PE3\n
        \                \\     /|      |              |      |\\     /\n                  \\
        \  / |      +--------------+      | \\   /\n                   \\ /  |                            |
        \ \\ /\n                    /   |                            |   /\n                   /
        \\  |                            |  / \\\n                  /   \\ |      +--------------+
        \     | /   \\\n                 /     \\|      |              |      |/     \\\n
        \              PE2------R2----------B1---B3---------R4------PE4\n       203.0.113.2/32
        \  |      |    | \\ / |   |      | 203.0.113.4/32\n             SID:20     |
        \     |    |  /  |   |      |     SID:40\n                        |      |
        \   | / \\ |   |      |\n                        +-----------B2---B4----------+\n
        \                              |              |\n                               |
        \  Group B    |\n                               | 192.0.2.1/32 |\n                               |
        \   SID:200   |\n                               +--------------+\n                      Figure
        1: Transit Device Groups\n   The Figure 1 illustrates a network example with
        two groups of transit\n   devices.  Group A consists of devices {A1, A2, A3,
        and A4}.  They are\n   all provisioned with the anycast address 192.0.2.10/32
        and the\n   Anycast-SID 100.\n   Similarly, Group B consists of devices {B1,
        B2, B3, and B4}, and they\n   are all provisioned with the anycast address
        192.0.2.1/32 and the\n   Anycast-SID 200.  In the above network topology,
        each Provide Edge\n   (PE) device has a path to each of the groups: A and
        B.\n   PE1 can choose a particular transit device group when sending traffic\n
        \  to PE3 or PE4.  This will be done by pushing the Anycast-SID of the\n   group
        in the stack.\n   Processing the anycast, and subsequent segments, requires
        special\n   care.\n                         +-------------------------+\n
        \                        |       Group A           |\n                         |
        \    192.0.2.10/32       |\n                         |        SID:100          |\n
        \                        |-------------------------|\n                         |
        \                        |\n                         |   SRGB:         SRGB:
        \  |\n      SID:10             |(1000-2000)   (3000-4000)|             SID:30\n
        \       PE1---+       +-------A1-------------A3-------+       +---PE3\n               \\
        \    /   |    | \\           / |    |   \\     /\n                \\   /    |
        \   |  +-----+   /  |    |    \\   /\n         SRGB:   \\ /     |    |         \\
        /   |    |     \\ /   SRGB:\n      (7000-8000) R1     |    |          \\    |
        \   |      R3 (6000-7000)\n                 / \\     |    |         / \\   |
        \   |     / \\\n                /   \\    |    |  +-----+   \\  |    |    /
        \  \\\n               /     \\   |    | /           \\ |    |   /     \\\n
        \       PE2---+       +-------A2-------------A4-------+       +---PE4\n      SID:20
        \            |   SRGB:         SRGB:   |             SID:40\n                         |(2000-3000)
        \  (4000-5000)|\n                         |                         |\n                         +-------------------------+\n
        \               Figure 2: Transit Paths via Anycast Group A\n   Considering
        an MPLS deployment, in the above topology, if device PE1\n   (or PE2) requires
        the sending of a packet to the device PE3 (or PE4),\n   it needs to encapsulate
        the packet in an MPLS payload with the\n   following stack of labels.\n   o
        \ Label allocated by R1 for Anycast-SID 100 (outer label).\n   o  Label allocated
        by the nearest router in Group A for SID 30 (for\n      destination PE3).\n
        \  In this case, the first label is easy to compute.  However, because\n   there
        is more than one device that is topologically nearest (A1 and\n   A2), determining
        the second label is impossible unless A1 and A2\n   allocated the same label
        value to the same prefix.  Devices A1 and A2\n   may be devices from different
        hardware vendors.  If both don't\n   allocate the same label value for SID
        30, it is impossible to use the\n   anycast Group A as a transit anycast group
        towards PE3.  Hence, PE1\n   (or PE2) cannot compute an appropriate label
        stack to steer the\n   packet exclusively through the Group A devices.  Same
        holds true for\n   devices PE3 and PE4 when trying to send a packet to PE1
        or PE2.\n   To ease the use of an anycast segment, it is recommended to configure\n
        \  identical SRGBs on all nodes of a particular anycast group.  Using\n   this
        method, as mentioned above, computation of the label following\n   the anycast
        segment is straightforward.\n   Using an anycast segment without configuring
        identical SRGBs on all\n   nodes belonging to the same anycast group may lead
        to misrouting (in\n   an MPLS VPN deployment, some traffic may leak between
        VPNs).\n"
      title: 3.3.1.  Anycast-SID in SR-MPLS
    title: 3.3.  IGP-Anycast Segment (Anycast-SID)
  - contents:
    - "3.4.  IGP-Adjacency Segment (Adj-SID)\n   The adjacency is formed by the local
      node (i.e., the node advertising\n   the adjacency in the IGP) and the remote
      node (i.e., the other end of\n   the adjacency).  The local node MUST be an
      IGP node.  The remote node\n   may be an adjacent IGP neighbor or a non-adjacent
      neighbor (e.g., a\n   forwarding adjacency, [RFC4206]).\n   A packet injected
      anywhere within the SR domain with a segment list\n   {SN, SNL} where SN is
      the Node-SID of node N and SNL is an Adj-SID\n   attached by node N to its adjacency
      over link L will be forwarded\n   along the shortest path to N and then be switched
      by N, without any\n   IP shortest-path consideration, towards link L.  If the
      Adj-SID\n   identifies a set of adjacencies, then the node N load-balances the\n
      \  traffic among the various members of the set.\n   Similarly, when using a
      global Adj-SID, a packet injected anywhere\n   within the SR domain with a segment
      list {SNL}, where SNL is a global\n   Adj-SID attached by node N to its adjacency
      over link L, will be\n   forwarded along the shortest path to N and then be
      switched by N,\n   without any IP shortest-path consideration, towards link
      L.  If the\n   Adj-SID identifies a set of adjacencies, then the node N does
      load-\n   balance the traffic among the various members of the set.  The use
      of\n   global Adj-SID allows to reduce the size of the segment list when\n   expressing
      a path at the cost of additional state (i.e., the global\n   Adj-SID will be
      inserted by all routers within the area in their\n   forwarding table).\n   An
      \"IGP-Adjacency segment\" or \"Adj-SID\" enforces the switching of the\n   packet
      from a node towards a defined interface or set of interfaces.\n   This is key
      to theoretically prove that any path can be expressed as\n   a list of segments.\n
      \  The encodings of the Adj-SID include a set of flags supporting the\n   following
      functionalities:\n   o  Eligible for Protection (e.g., using IPFRR or MPLS-FRR).\n
      \     Protection allows that in the event the interface(s) associated\n      with
      the Adj-SID are down, that the packet can still be forwarded\n      via an alternate
      path.  The use of protection is clearly a policy-\n      based decision; that
      is, for a given policy protection may or may\n      not be desirable.\n   o
      \ Indication whether the Adj-SID has local or global scope.  Default\n      scope
      SHOULD be local.\n   o  Indication whether the Adj-SID is persistent across
      control plane\n      restarts.  Persistence is a key attribute in ensuring that
      an SR\n      Policy does not temporarily result in misforwarding due to\n      reassignment
      of an Adj-SID.\n   A weight (as described below) is also associated with the
      Adj-SID\n   advertisement.\n   A node SHOULD allocate one Adj-SID for each of
      its adjacencies.\n   A node MAY allocate multiple Adj-SIDs for the same adjacency.
      \ An\n   example is to support an Adj-SID that is eligible for protection and\n
      \  an Adj-SID that is NOT eligible for protection.\n   A node MAY associate
      the same Adj-SID to multiple adjacencies.\n   In order to be able to advertise
      in the IGP all the Adj-SIDs\n   representing the IGP adjacencies between two
      nodes, parallel\n   adjacency suppression MUST NOT be performed by the IGP.\n
      \  When a node binds an Adj-SID V to a local data-link L, the node MUST\n   install
      the following FIB entry:\n      Incoming Active Segment: V\n      Ingress Operation:
      NEXT\n      Egress Interface: L\n   The Adj-SID implies, from the router advertising
      it, the forwarding\n   of the packet through the adjacency or adjacencies identified
      by the\n   Adj-SID, regardless of its IGP/SPF cost.  In other words, the use
      of\n   adjacency segments overrides the routing decision made by the SPF\n   algorithm.\n"
    - contents:
      - "3.4.1.  Parallel Adjacencies\n   Adj-SIDs can be used in order to represent
        a set of parallel\n   interfaces between two adjacent routers.\n   A node
        MUST install a FIB entry for any locally originated Adj-SID of\n   value W
        attached to a set of links B with:\n      Incoming Active Segment: W\n      Ingress
        Operation: NEXT\n      Egress interfaces: load-balance between any data-link
        within set B\n   When parallel adjacencies are used and associated with the
        same Adj-\n   SID, and, in order to optimize the load-balancing function,
        a\n   \"weight\" factor can be associated with the Adj-SID advertised with\n
        \  each adjacency.  The weight tells the ingress (or an SDN/\n   orchestration
        system) about the load-balancing factor over the\n   parallel adjacencies.
        \ As shown in Figure 3, A and B are connected\n   through two parallel adjacencies\n
        \                                 Link-1\n                                +--------+\n
        \                               |        |\n                            S---A
        \       B---C\n                                |        |\n                                +--------+\n
        \                                 Link-2\n                   Figure 3: Parallel
        Links and Adj-SIDs\n   Node A advertises following Adj-SIDs and weights:\n
        \  o  Link-1: Adj-SID 1000, weight: 1\n   o  Link-2: Adj-SID 1000, weight:
        2\n   Node S receives the advertisements of the parallel adjacencies and\n
        \  understands that by using Adj-SID 1000 node A will load-balance the\n   traffic
        across the parallel links (Link-1 and Link-2) according to a\n   1:2 ratio
        i.e., twice as many packets will flow over Link-2 as\n   compared to Link-1.\n"
      title: 3.4.1.  Parallel Adjacencies
    - contents:
      - "3.4.2.  LAN Adjacency Segments\n   In LAN subnetworks, link-state protocols
        define the concept of\n   Designated Router (DR, in OSPF) or Designated Intermediate
        System\n   (DIS, in IS-IS) that conduct flooding in broadcast subnetworks
        and\n   that describe the LAN topology in a special routing update (OSPF\n
        \  Type2 LSA or IS-IS Pseudonode LSP).\n   The difficulty with LANs is that
        each router only advertises its\n   connectivity to the DR/DIS and not to
        each of the individual nodes in\n   the LAN.  Therefore, additional protocol
        mechanisms (IS-IS and OSPF)\n   are necessary in order for each router in
        the LAN to advertise an\n   Adj-SID associated with each neighbor in the LAN.\n"
      title: 3.4.2.  LAN Adjacency Segments
    title: 3.4.  IGP-Adjacency Segment (Adj-SID)
  - contents:
    - "3.5.  Inter-Area Considerations\n   In the following example diagram, it is
      assumed that the all areas\n   are part of a single SR domain.\n   The Figure
      4 assumes the IPv6 control plane with the MPLS data plane.\n               !
      \         !\n               !          !\n        B------C-----F----G-----K\n
      \      /       |          |     |\n S---A/        |          |     |\n      \\
      \       |          |     |\n       \\D------I----------J-----L----Z (2001:DB8::2:1/128,
      Node-SID 150)\n               !          !\n       Area 1  ! Backbone ! Area
      2\n               !   area   !\n                   Figure 4: Inter-Area Topology
      Example\n   In Area 2, node Z allocates Node-SID 150 to his local IPv6 prefix\n
      \  2001:DB8::2:1/128.\n   Area Border Routers (ABRs) G and J will propagate
      the prefix and its\n   SIDs into the backbone area by creating a new instance
      of the prefix\n   according to normal inter-area/level IGP propagation rules.\n
      \  Nodes C and I will apply the same behavior when leaking prefixes from\n   the
      backbone area down to area 1.  Therefore, node S will see prefix\n   2001:DB8::2:1/128
      with Prefix-SID 150 and advertised by nodes C and\n   I.\n   Therefore, the
      result is that a Prefix-SID remains attached to its\n   related IGP prefix through
      the inter-area process, which is the\n   expected behavior in a single SR domain.\n
      \  When node S sends traffic to 2001:DB8::2:1/128, it pushes Node-\n   SID(150)
      as an active segment and forwards it to A.\n   When a packet arrives at ABR
      I (or C), the ABR forwards the packet\n   according to the active segment (Node-SID(150)).
      \ Forwarding\n   continues across area borders, using the same Node-SID(150)
      until the\n   packet reaches its destination.\n"
    title: 3.5.  Inter-Area Considerations
  title: 3.  Link-State IGP Segments
- contents:
  - "4.  BGP Segments\n   BGP segments may be allocated and distributed by BGP.\n"
  - contents:
    - "4.1.  BGP-Prefix Segment\n   A BGP-Prefix segment is a BGP segment attached
      to a BGP prefix.\n   A BGP-Prefix segment is global (unless explicitly advertised\n
      \  otherwise) within the SR domain.\n   The BGP-Prefix segment is the BGP equivalent
      to the IGP-Prefix\n   segment.\n   A likely use case for the BGP-Prefix segment
      is an IGP-free hyper-\n   scale spine-leaf topology where connectivity is learned
      solely via\n   BGP [RFC7938]\n"
    title: 4.1.  BGP-Prefix Segment
  - contents:
    - "4.2.  BGP Peering Segments\n   In the context of BGP Egress Peer Engineering
      (EPE), as described in\n   [SR-CENTRAL-EPE], an EPE-enabled egress node MAY
      advertise segments\n   corresponding to its attached peers.  These segments
      are called BGP\n   peering segments or BGP peering SIDs.  They enable the expression
      of\n   source-routed inter-domain paths.\n   An ingress border router of an
      Autonomous System (AS) may compose a\n   list of segments to steer a flow along
      a selected path within the AS\n   towards a selected egress border router C
      of the AS and through a\n   specific peer.  At a minimum, a BGP peering engineering
      policy\n   applied at an ingress node involves two segments: the Node-SID of
      the\n   chosen egress node and the BGP peering segment for the chosen egress\n
      \  node peer or peering interface.\n   Three types of BGP peering segments/SIDs
      are defined: PeerNode SID,\n   PeerAdj SID, and PeerSet SID.\n   o  PeerNode
      SID: a BGP PeerNode segment/SID is a local segment.  At\n      the BGP node
      advertising it, its semantics are:\n      *  SR operation: NEXT.\n      *  Next-Hop:
      the connected peering node to which the segment is\n         related.\n   o
      \ PeerAdj SID: a BGP PeerAdj segment/SID is a local segment.  At the\n      BGP
      node advertising it, the semantics are:\n      *  SR operation: NEXT.\n      *
      \ Next-Hop: the peer connected through the interface to which the\n         segment
      is related.\n   o  PeerSet SID: a BGP PeerSet segment/SID is a local segment.
      \ At the\n      BGP node advertising it, the semantics are:\n      *  SR operation:
      NEXT.\n      *  Next-Hop: load-balance across any connected interface to any\n
      \        peer in the related group.\n      A peer set could be all the connected
      peers from the same AS or a\n      subset of these.  A group could also span
      across AS.  The group\n      definition is a policy set by the operator.\n   The
      BGP extensions necessary in order to signal these BGP peering\n   segments are
      defined in [BGPLS-SR-EPE].\n"
    title: 4.2.  BGP Peering Segments
  title: 4.  BGP Segments
- contents:
  - "5.  Binding Segment\n   In order to provide greater scalability, network opacity,
    and service\n   independence, SR utilizes a Binding SID (BSID).  The BSID is bound
    to\n   an SR Policy, instantiation of which may involve a list of SIDs.  Any\n
    \  packets received with an active segment equal to BSID are steered\n   onto
    the bound SR Policy.\n   A BSID may be either a local or a global SID.  If local,
    a BSID\n   SHOULD be allocated from the SRLB.  If global, a BSID MUST be\n   allocated
    from the SRGB.\n   Use of a BSID allows the instantiation of the policy (the SID
    list)\n   to be stored only on the node or nodes that need to impose the\n   policy.
    \ Direction of traffic to a node supporting the policy then\n   only requires
    imposition of the BSID.  If the policy changes, this\n   also means that only
    the nodes imposing the policy need to be\n   updated.  Users of the policy are
    not impacted.\n"
  - contents:
    - "5.1.  IGP Mirroring Context Segment\n   One use case for a Binding segment
      is to provide support for an IGP\n   node to advertise its ability to process
      traffic originally destined\n   to another IGP node, called the \"mirrored node\"
      and identified by an\n   IP address or a Node-SID, provided that a Mirroring
      Context segment\n   is inserted in the segment list prior to any service segment
      local to\n   the mirrored node.\n   When a given node B wants to provide egress
      node A protection, it\n   advertises a segment identifying node's A context.
      \ Such a segment is\n   called \"Mirroring Context segment\" and is identified
      by the Mirror\n   SID.\n   The Mirror SID is advertised using the Binding segment
      defined in SR\n   IGP protocol extensions [ISIS-SR-EXT].\n   In the event of
      a failure, a Point of Local Repair (PLR) diverting\n   traffic from A to B does
      a PUSH of the Mirror SID on the protected\n   traffic.  When receiving the traffic
      with the Mirror SID as the\n   active segment, B uses that segment and processes
      underlying segments\n   in the context of A.\n"
    title: 5.1.  IGP Mirroring Context Segment
  title: 5.  Binding Segment
- contents:
  - "6.  Multicast\n   Segment Routing is defined for unicast.  The application of
    the\n   source-route concept to Multicast is not in the scope of this\n   document.\n"
  title: 6.  Multicast
- contents:
  - "7.  IANA Considerations\n   This document has no IANA actions.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Segment Routing is applicable to both MPLS and
    IPv6 data planes.\n   SR adds some metadata (instructions) to the packet, with
    the list of\n   forwarding path elements (e.g., nodes, links, services, etc.)
    that\n   the packet must traverse.  It has to be noted that the complete\n   source-routed
    path may be represented by a single segment.  This is\n   the case of the Binding
    SID.\n   By default, SR operates within a trusted domain.  Traffic MUST be\n   filtered
    at the domain boundaries.\n   The use of best practices to reduce the risk of
    tampering within the\n   trusted domain is important.  Such practices are discussed
    in\n   [RFC4381] and are applicable to both SR-MPLS and SRv6.\n"
  - contents:
    - "8.1.  SR-MPLS\n   When applied to the MPLS data plane, SR does not introduce
      any new\n   behavior or any change in the way the MPLS data plane works.\n   Therefore,
      from a security standpoint, this document does not define\n   any additional
      mechanism in the MPLS data plane.\n   SR allows the expression of a source-routed
      path using a single\n   segment (the Binding SID).  Compared to RSVP-TE, which
      also provides\n   explicit routing capability, there are no fundamental differences
      in\n   terms of information provided.  Both RSVP-TE and Segment Routing may\n
      \  express a source-routed path using a single segment.\n   When a path is expressed
      using a single label, the syntax of the\n   metadata is equivalent between RSVP-TE
      [RFC3209] and SR.\n   When a source-routed path is expressed with a list of
      segments,\n   additional metadata is added to the packet consisting of the source-\n
      \  routed path the packet must follow expressed as a segment list.\n   When
      a path is expressed using a label stack, if one has access to\n   the meaning
      (i.e., the Forwarding Equivalence Class) of the labels,\n   one has the knowledge
      of the explicit path.  For the MPLS data plane,\n   as no data-plane modification
      is required, there is no fundamental\n   change of capability.  Yet, the occurrence
      of label stacking will\n   increase.\n   SR domain boundary routers MUST filter
      any external traffic destined\n   to a label associated with a segment within
      the trusted domain.  This\n   includes labels within the SRGB of the trusted
      domain, labels within\n   the SRLB of the specific boundary router, and labels
      outside either\n   of these blocks.  External traffic is any traffic received
      from an\n   interface connected to a node outside the domain of trust.\n   From
      a network protection standpoint, there is an assumed trust model\n   such that
      any node imposing a label stack on a packet is assumed to\n   be allowed to
      do so.  This is a significant change compared to plain\n   IP offering shortest
      path routing, but it is not fundamentally\n   different compared to existing
      techniques providing explicit routing\n   capability such as RSVP-TE.  By default,
      the explicit routing\n   information MUST NOT be leaked through the boundaries
      of the\n   administered domain.  Segment Routing extensions that have been\n
      \  defined in various protocols, leverage the security mechanisms of\n   these
      protocols such as encryption, authentication, filtering, etc.\n   In the general
      case, a segment-routing-capable router accepts and\n   installs labels only
      if the labels have been previously advertised by\n   a trusted source.  The
      received information is validated using\n   existing control-plane protocols
      providing authentication and\n   security mechanisms.  Segment Routing does
      not define any additional\n   security mechanism in existing control-plane protocols.\n
      \  SR does not introduce signaling between the source and the midpoints\n   of
      a source-routed path.  With SR, the source-routed path is computed\n   using
      SIDs previously advertised in the IP control plane.  Therefore,\n   in addition
      to filtering and controlled advertisement of SIDs at the\n   boundaries of the
      SR domain, filtering in the data plane is also\n   required.  Filtering MUST
      be performed on the forwarding plane at the\n   boundaries of the SR domain
      and may require looking at multiple\n   labels/instructions.\n   For the MPLS
      data plane, there are no new requirements as the\n   existing MPLS architecture
      already allows such source routing by\n   stacking multiple labels.  And, for
      security protection, [RFC4381]\n   and [RFC5920] already call for the filtering
      of MPLS packets on trust\n   boundaries.\n"
    title: 8.1.  SR-MPLS
  - contents:
    - "8.2.  SRv6\n   When applied to the IPv6 data plane, Segment Routing does introduce\n
      \  the Segment Routing Header (SRH, [IPv6-SRH]) which is a type of\n   Routing
      Extension header as defined in [RFC8200].\n   The SRH adds some metadata to
      the IPv6 packet, with the list of\n   forwarding path elements (e.g., nodes,
      links, services, etc.) that\n   the packet must traverse and that are represented
      by IPv6 addresses.\n   A complete source-routed path may be encoded in the packet
      using a\n   single segment (single IPv6 address).\n   SR domain boundary routers
      MUST filter any external traffic destined\n   to an address within the SRGB
      of the trusted domain or the SRLB of\n   the specific boundary router.  External
      traffic is any traffic\n   received from an interface connected to a node outside
      the domain of\n   trust.\n   From a network-protection standpoint, there is
      an assumed trust model\n   such that any node adding an SRH to the packet is
      assumed to be\n   allowed to do so.  Therefore, by default, the explicit routing\n
      \  information MUST NOT be leaked through the boundaries of the\n   administered
      domain.  Segment Routing extensions that have been\n   defined in various protocols,
      leverage the security mechanisms of\n   these protocols such as encryption,
      authentication, filtering, etc.\n   In the general case, an SRv6 router accepts
      and install segments\n   identifiers (in the form of IPv6 addresses), only if
      these SIDs are\n   advertised by a trusted source.  The received information
      is\n   validated using existing control-plane protocols providing\n   authentication
      and security mechanisms.  Segment Routing does not\n   define any additional
      security mechanism in existing control-plane\n   protocols.\n   Problems that
      may arise when the above behaviors are not implemented\n   or when the assumed
      trust model is violated (e.g., through a security\n   breach) include:\n   o
      \ Malicious looping\n   o  Evasion of access controls\n   o  Hiding the source
      of DoS attacks\n   Security concerns with SR at the IPv6 data plane are more
      completely\n   discussed in [RFC5095].  The new IPv6-based Segment Routing Header
      is\n   defined in [IPv6-SRH].  This document also discusses the above\n   security
      concerns.\n"
    title: 8.2.  SRv6
  - contents:
    - "8.3.  Congestion Control\n   SR does not introduce new requirements for congestion
      control.  By\n   default, traffic delivery is assumed to be best effort.  Congestion\n
      \  control may be implemented at endpoints.  Where SR policies are in\n   use,
      bandwidth allocation may be managed by monitoring incoming\n   traffic associated
      with the binding SID identifying the SR Policy.\n   Other solutions such as
      presented in [RFC8084] may be applicable.\n"
    title: 8.3.  Congestion Control
  title: 8.  Security Considerations
- contents:
  - "9.  Manageability Considerations\n   In SR-enabled networks, the path the packet
    takes is encoded in the\n   header.  As the path is not signaled through a protocol,
    OAM\n   mechanisms are necessary in order for the network operator to\n   validate
    the effectiveness of a path as well as to check and monitor\n   its liveness and
    performance.  However, it has to be noted that SR\n   allows to reduce substantially
    the number of states in transit nodes;\n   hence, the number of elements that
    a transit node has to manage is\n   smaller.\n   SR OAM use cases for the MPLS
    data plane are defined in [RFC8403].\n   SR OAM procedures for the MPLS data plane
    are defined in [RFC8287].\n   SR routers receive advertisements of SIDs (index,
    label, or IPv6\n   address) from the different routing protocols being extended
    for SR.\n   Each of these protocols have monitoring and troubleshooting\n   mechanisms
    to provide operation and management functions for IP\n   addresses that must be
    extended in order to include troubleshooting\n   and monitoring functions of the
    SID.\n   SR architecture introduces the usage of global segments.  Each global\n
    \  segment MUST be bound to a unique index or address within an SR\n   domain.
    \ The management of the allocation of such an index or address\n   by the operator
    is critical for the network behavior to avoid\n   situations like misrouting.
    \ In addition to the allocation policy/\n   tooling that the operator will have
    in place, an implementation\n   SHOULD protect the network in case of conflict
    detection by providing\n   a deterministic resolution approach.\n   When a path
    is expressed using a label stack, the occurrence of label\n   stacking will increase.
    \ A node may want to signal, in the control\n   plane, its ability in terms of
    size of the label stack it can\n   support.\n   A YANG data model [RFC6020] for
    SR configuration and operations has\n   been defined in [SR-YANG].\n   When SR
    is applied to the IPv6 data plane, segments are identified\n   through IPv6 addresses.
    \ The allocation, management, and\n   troubleshooting of segment identifiers is
    no different than the\n   existing mechanisms applied to the allocation and management
    of IPv6\n   addresses.\n   The DA of the packet gives the active segment address.
    \ The segment\n   list in the SRH gives the entire path of the packet.  The validation\n
    \  of the source-routed path is done through inspection of DA and SRH\n   present
    in the packet header matched to the equivalent routing table\n   entries.\n   In
    the context of the SRv6 data plane, the source-routed path is\n   encoded in the
    SRH as described in [IPv6-SRH].  The SRv6 source-\n   routed path is instantiated
    into the SRH as a list of IPv6 addresses\n   where the active segment is in the
    DA field of the IPv6 packet\n   header.  Typically, by inspecting, in any node,
    the packet header, it\n   is possible to derive the source-routed path to which
    it belongs.\n   Similar to the context of the SR-MPLS data plane, an implementation\n
    \  may originate path control and monitoring packets where the source-\n   routed
    path is inserted in the SRH and where each segment of the path\n   inserts in
    the packet the relevant data in order to measure the end-\n   to-end path and
    performance.\n"
  title: 9.  Manageability Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3031]  Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label
      Switching Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031, January
      2001,\n              <https://www.rfc-editor.org/info/rfc3031>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8200]  Deering, S. and R.
      Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\",
      STD 86, RFC 8200,\n              DOI 10.17487/RFC8200, July 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [BGPLS-SR-EPE]\n              Previdi, S.,
      Filsfils, C., Patel, K., Ray, S., and J.\n              Dong, \"BGP-LS extensions
      for Segment Routing BGP Egress\n              Peer Engineering\", Work in Progress,
      draft-ietf-idr-bgpls-\n              segment-routing-epe-15, March 2018.\n   [IPv6-SRH]\n
      \             Filsfils, C., Ed., Previdi, S., Leddy, J., Matsushima, S.,\n              and
      D. Voyer, Ed., \"IPv6 Segment Routing Header (SRH)\",\n              Work in
      Progress, draft-ietf-6man-segment-routing-\n              header-14, June 2018.\n
      \  [ISIS-SR-EXT]\n              Previdi, S., Ed., Ginsberg, L., Ed., Filsfils,
      C.,\n              Bashandy, A., Gredler, H., Litkowski, S., Decraene, B.,\n
      \             and J. Tantsura, \"IS-IS Extensions for Segment Routing\",\n              Work
      in Progress, draft-ietf-isis-segment-routing-\n              extensions-19,
      July 2018.\n   [OSPF-SR-EXT]\n              Psenak, P., Previdi, S., Filsfils,
      C., Gredler, H.,\n              Shakir, R., Henderickx, W., and J. Tantsura,
      \"OSPF\n              Extensions for Segment Routing\", Work in Progress,\n
      \             draft-ietf-ospf-segment-routing-extensions-25, April 2018.\n   [OSPFv3-SR-EXT]\n
      \             Psenak, P., Ed., Filsfils, C., Previdi, S., Ed., Gredler,\n              H.,
      Shakir, R., Henderickx, W., and J. Tantsura, \"OSPFv3\n              Extensions
      for Segment Routing\", Work in Progress,\n              draft-ietf-ospf-ospfv3-segment-routing-extensions-13,
      May\n              2018.\n   [PCEP-SR-EXT]\n              Sivabalan, S., Filsfils,
      C., Tantsura, J., Henderickx, W.,\n              and J. Hardwick, \"PCEP Extensions
      for Segment Routing\",\n              Work in Progress, draft-ietf-pce-segment-routing-12,
      June\n              2018.\n   [RFC3209]  Awduche, D., Berger, L., Gan, D., Li,
      T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE: Extensions to
      RSVP for LSP\n              Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December
      2001,\n              <https://www.rfc-editor.org/info/rfc3209>.\n   [RFC4206]
      \ Kompella, K. and Y. Rekhter, \"Label Switched Paths (LSP)\n              Hierarchy
      with Generalized Multi-Protocol Label Switching\n              (GMPLS) Traffic
      Engineering (TE)\", RFC 4206,\n              DOI 10.17487/RFC4206, October 2005,\n
      \             <https://www.rfc-editor.org/info/rfc4206>.\n   [RFC4381]  Behringer,
      M., \"Analysis of the Security of BGP/MPLS IP\n              Virtual Private
      Networks (VPNs)\", RFC 4381,\n              DOI 10.17487/RFC4381, February 2006,\n
      \             <https://www.rfc-editor.org/info/rfc4381>.\n   [RFC4915]  Psenak,
      P., Mirtorabi, S., Roy, A., Nguyen, L., and P.\n              Pillay-Esnault,
      \"Multi-Topology (MT) Routing in OSPF\",\n              RFC 4915, DOI 10.17487/RFC4915,
      June 2007,\n              <https://www.rfc-editor.org/info/rfc4915>.\n   [RFC5095]
      \ Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation\n              of
      Type 0 Routing Headers in IPv6\", RFC 5095,\n              DOI 10.17487/RFC5095,
      December 2007,\n              <https://www.rfc-editor.org/info/rfc5095>.\n   [RFC5120]
      \ Przygienda, T., Shen, N., and N. Sheth, \"M-ISIS: Multi\n              Topology
      (MT) Routing in Intermediate System to\n              Intermediate Systems (IS-ISs)\",
      RFC 5120,\n              DOI 10.17487/RFC5120, February 2008,\n              <https://www.rfc-editor.org/info/rfc5120>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5714]
      \ Shand, M. and S. Bryant, \"IP Fast Reroute Framework\",\n              RFC
      5714, DOI 10.17487/RFC5714, January 2010,\n              <https://www.rfc-editor.org/info/rfc5714>.\n
      \  [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\",
      RFC 5920, DOI 10.17487/RFC5920, July 2010,\n              <https://www.rfc-editor.org/info/rfc5920>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]
      \ Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6549]  Lindem, A., Roy, A., and S. Mirtorabi, \"OSPFv2 Multi-\n              Instance
      Extensions\", RFC 6549, DOI 10.17487/RFC6549,\n              March 2012, <https://www.rfc-editor.org/info/rfc6549>.\n
      \  [RFC7938]  Lapukhov, P., Premji, A., and J. Mitchell, Ed., \"Use of\n              BGP
      for Routing in Large-Scale Data Centers\", RFC 7938,\n              DOI 10.17487/RFC7938,
      August 2016,\n              <https://www.rfc-editor.org/info/rfc7938>.\n   [RFC8084]
      \ Fairhurst, G., \"Network Transport Circuit Breakers\",\n              BCP
      208, RFC 8084, DOI 10.17487/RFC8084, March 2017,\n              <https://www.rfc-editor.org/info/rfc8084>.\n
      \  [RFC8202]  Ginsberg, L., Previdi, S., and W. Henderickx, \"IS-IS\n              Multi-Instance\",
      RFC 8202, DOI 10.17487/RFC8202, June\n              2017, <https://www.rfc-editor.org/info/rfc8202>.\n
      \  [RFC8287]  Kumar, N., Ed., Pignataro, C., Ed., Swallow, G., Akiya,\n              N.,
      Kini, S., and M. Chen, \"Label Switched Path (LSP)\n              Ping/Traceroute
      for Segment Routing (SR) IGP-Prefix and\n              IGP-Adjacency Segment
      Identifiers (SIDs) with MPLS Data\n              Planes\", RFC 8287, DOI 10.17487/RFC8287,
      December 2017,\n              <https://www.rfc-editor.org/info/rfc8287>.\n   [RFC8355]
      \ Filsfils, C., Ed., Previdi, S., Ed., Decraene, B., and R.\n              Shakir,
      \"Resiliency Use Cases in Source Packet Routing in\n              Networking
      (SPRING) Networks\", RFC 8355,\n              DOI 10.17487/RFC8355, March 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8355>.\n   [RFC8403]  Geib,
      R., Ed., Filsfils, C., Pignataro, C., Ed., and N.\n              Kumar, \"A
      Scalable and Topology-Aware MPLS Data-Plane\n              Monitoring System\",
      RFC 8403, DOI 10.17487/RFC8403, July\n              2018, <http://www.rfc-editor.org/info/rfc8403>.\n
      \  [SR-CENTRAL-EPE]\n              Filsfils, C., Previdi, S., Dawra, G., Aries,
      E., and D.\n              Afanasiev, \"Segment Routing Centralized BGP Egress
      Peer\n              Engineering\", Work in Progress, draft-ietf-spring-segment-\n
      \             routing-central-epe-10, December 2017.\n   [SR-MPLS]  Bashandy,
      A., Ed., Filsfils, C., Ed., Previdi, S.,\n              Decraene, B., Litkowski,
      S., and R. Shakir, \"Segment\n              Routing with MPLS data plane\",
      Work in Progress,\n              draft-ietf-spring-segment-routing-mpls-14,
      June 2018.\n   [SR-YANG]  Litkowski, S., Qu, Y., Sarkar, P., and J. Tantsura,
      \"YANG\n              Data Model for Segment Routing\", Work in Progress,\n
      \             draft-ietf-spring-sr-yang-09, June 2018.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgements\n   We would like to thank Dave Ward, Peter Psenak, Dan Frost,
    Stewart\n   Bryant, Pierre Francois, Thomas Telkamp, Ruediger Geib, Hannes\n   Gredler,
    Pushpasis Sarkar, Eric Rosen, Chris Bowers, and Alvaro\n   Retana for their comments
    and review of this document.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following people have substantially contributed to the definition\n
    \  of the Segment Routing architecture and to the editing of this\n   document:\n
    \  Ahmed Bashandy\n   Cisco Systems, Inc.\n   Email: bashandy@cisco.com\n   Martin
    Horneffer\n   Deutsche Telekom\n   Email: Martin.Horneffer@telekom.de\n   Wim
    Henderickx\n   Nokia\n   Email: wim.henderickx@nokia.com\n   Jeff Tantsura\n   Email:
    jefftant@gmail.com\n   Edward Crabbe\n   Email: edward.crabbe@gmail.com\n   Igor
    Milojevic\n   Email: milojevicigor@gmail.com\n   Saku Ytti\n   TDC\n   Email:
    saku@ytti.fi\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Clarence Filsfils (editor)\n   Cisco Systems, Inc.\n   Brussels\n
    \  Belgium\n   Email: cfilsfil@cisco.com\n   Stefano Previdi (editor)\n   Cisco
    Systems, Inc.\n   Italy\n   Email: stefano@previdi.net\n   Les Ginsberg\n   Cisco
    Systems, Inc.\n   Email: ginsberg@cisco.com\n   Bruno Decraene\n   Orange\n   FR\n
    \  Email: bruno.decraene@orange.com\n   Stephane Litkowski\n   Orange\n   France\n
    \  Email: stephane.litkowski@orange.com\n   Rob Shakir\n   Google, Inc.\n   1600
    Amphitheatre Parkway\n   Mountain View, CA  94043\n   United States of America\n
    \  Email: robjs@google.com\n"
  title: Authors' Addresses
