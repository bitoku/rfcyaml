- title: __initial_text__
  contents:
  - '                 S/MIME Version 2 Certificate Handling

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: 1. Overview
  contents:
  - "1. Overview\n   S/MIME (Secure/Multipurpose Internet Mail Extensions), described\
    \ in\n   [SMIME-MSG], provides a method to send and receive secure MIME\n   messages.\
    \ In order to validate the keys of a message sent to it, an\n   S/MIME agent needs\
    \ to certify that the key is valid. This memo\n   describes the mechanisms S/MIME\
    \ uses to create and validate keys\n   using certificates.\n   This specification\
    \ is compatible with PKCS #7 in that it uses the\n   data types defined by PKCS\
    \ #7. It also inherits all the varieties of\n   architectures for certificate-based\
    \ key management supported by PKCS\n   #7.  Note that the method S/MIME messages\
    \ make certificate requests\n   is defined in [SMIME-MSG].\n   In order to handle\
    \ S/MIME certificates, an agent has to follow\n   specifications in this memo,\
    \ as well as some of the specifications\n   listed in the following documents:\n\
    \    - \"PKCS #1: RSA Encryption\", [PKCS-1].\n    - \"PKCS #7: Cryptographic\
    \ Message Syntax\", [PKCS-7]\n    - \"PKCS #10: Certification Request Syntax\"\
    , [PKCS-10].\n   Please note: The information in this document is historical material\n\
    \   being published for the public record. It is not an IETF standard.\n   The\
    \ use of the word \"standard\" in this document indicates a standard\n   for adopters\
    \ of S/MIME version 2, not an IETF standard.\n"
- title: 1.1 Definitions
  contents:
  - "1.1 Definitions\n   For the purposes of this memo, the following definitions\
    \ apply.\n   ASN.1: Abstract Syntax Notation One, as defined in CCITT X.208.\n\
    \   BER: Basic Encoding Rules for ASN.1, as defined in CCITT X.209.\n   Certificate:\
    \ A type that binds an entity's distinguished name to a\n   public key with a\
    \ digital signature. This type is defined in CCITT\n   X.509 [X.509].  This type\
    \ also contains the distinguished name of the\n   certificate issuer (the signer),\
    \ an issuer-specific serial number,\n   the issuer's signature algorithm identifier,\
    \ and a validity period.\n   Certificate Revocation List (CRL): A type that contains\
    \ information\n   about certificates whose validity an issuer has prematurely\
    \ revoked.\n   The information consists of an issuer name, the time of issue,\
    \ the\n   next scheduled time of issue, and a list of certificate serial\n   numbers\
    \ and their associated revocation times. The CRL is signed by\n   the issuer.\
    \ The type intended by this specification is the one\n   defined in [KEYM].\n\
    \   DER: Distinguished Encoding Rules for ASN.1, as defined in CCITT\n   X.509.\n"
- title: 1.2 Compatibility with Prior Practice of S/MIME
  contents:
  - "1.2 Compatibility with Prior Practice of S/MIME\n   Appendix C contains important\
    \ information about how S/MIME agents\n   following this specification should\
    \ act in order to have the greatest\n   interoperability with earlier implementations\
    \ of S/MIME.\n"
- title: 1.3 Terminology
  contents:
  - "1.3 Terminology\n   Throughout this memo, the terms MUST, MUST NOT, SHOULD, and\
    \ SHOULD\n   NOT are used in capital letters. This conforms to the definitions\
    \ in\n   [MUSTSHOULD].  [MUSTSHOULD] defines the use of these key words to\n \
    \  help make the intent of standards track documents as clear as\n   possible.\
    \ The same key words are used in this document to help\n   implementors achieve\
    \ interoperability.\n"
- title: '2. PKCS #7 Options'
  contents:
  - "2. PKCS #7 Options\n   The PKCS #7 message format allows for a wide variety of\
    \ options in\n   content and algorithm support. This section puts forth a number\
    \ of\n   support requirements and recommendations in order to achieve a base\n\
    \   level of interoperability among all S/MIME implementations. Most of\n   the\
    \ PKCS #7 format for S/MIME messages is defined in [SMIME-MSG].\n"
- title: 2.1 CertificateRevocationLists
  contents:
  - "2.1 CertificateRevocationLists\n   Receiving agents MUST support for the Certificate\
    \ Revocation List\n   (CRL) format defined in [KEYM]. If sending agents include\
    \ CRLs in\n   outgoing messages, the CRL format defined in [KEYM] MUST be used.\n\
    \   All agents MUST validate CRLs and check certificates against CRLs, if\n  \
    \ available, in accordance with [KEYM]. All agents SHOULD check the\n   nextUpdate\
    \ field in the CRL against the current time. If the current\n   time is later\
    \ than the nextUpdate time, the action that the agent\n   takes is a local decision.\
    \ For instance, it could warn a human user,\n   it could retrieve a new CRL if\
    \ able, and so on.\n   Receiving agents MUST recognize CRLs in received S/MIME\
    \ messages.\n   Clients MUST use revocation information included as a CRL in an\n\
    \   S/MIME message when verifying the signature and certificate path\n   validity\
    \ in that message.  Clients SHOULD store CRLs received in\n   messages for use\
    \ in processing later messages.\n   Clients MUST handle multiple valid Certificate\
    \ Authority (CA)\n   certificates containing the same subject name and the same\
    \ public\n   keys but with overlapping validity intervals.\n"
- title: 2.2 ExtendedCertificateOrCertificate
  contents:
  - "2.2 ExtendedCertificateOrCertificate\n   Receiving agents MUST support X.509\
    \ v1 and X.509 v3 certificates. See\n   [KEYM] for details about the profile for\
    \ certificate formats. End\n   entity certificates MUST include an Internet mail\
    \ address, as\n   described in section 3.1.\n"
- title: '2.2.1 Historical Note About PKCS #7 Certificates'
  contents:
  - "2.2.1 Historical Note About PKCS #7 Certificates\n   The PKCS #7 message format\
    \ supports a choice of certificate two\n   formats for public key content types:\
    \ X.509 and PKCS #6 Extended\n   Certificates. The PKCS #6 format is not in widespread\
    \ use. In\n   addition, proposed revisions of X.509 certificates address much\
    \ of\n   the same functionality and flexibility as was intended in the PKCS\n\
    \   #6. Thus, sending and receiving agents MUST NOT use PKCS #6 extended\n   certificates.\n"
- title: 2.3 ExtendedCertificateAndCertificates
  contents:
  - "2.3 ExtendedCertificateAndCertificates\n   Receiving agents MUST be able to handle\
    \ an arbitrary number of\n   certificates of arbitrary relationship to the message\
    \ sender and to\n   each other in arbitrary order. In many cases, the certificates\n\
    \   included in a signed message may represent a chain of certification\n   from\
    \ the sender to a particular root. There may be, however,\n   situations where\
    \ the certificates in a signed message may be\n   unrelated and included for convenience.\n\
    \   Sending agents SHOULD include any certificates for the user's public\n   key(s)\
    \ and associated issuer certificates. This increases the\n   likelihood that the\
    \ intended recipient can establish trust in the\n   originator's public key(s).\
    \  This is especially important when\n   sending a message to recipients that\
    \ may not have access to the\n   sender's public key through any other means or\
    \ when sending a signed\n   message to a new recipient. The inclusion of certificates\
    \ in outgoing\n   messages can be omitted if S/MIME objects are sent within a\
    \ group of\n   correspondents that has established access to each other's\n  \
    \ certificates by some other means such as a shared directory or manual\n   certificate\
    \ distribution. Receiving S/MIME agents SHOULD be able to\n   handle messages\
    \ without certificates using a database or directory\n   lookup scheme.\n   A\
    \ sending agent SHOULD include at least one chain of certificates up\n   to, but\
    \ not including, a Certificate Authority (CA) that it believes\n   that the recipient\
    \ may trust as authoritative. A receiving agent\n   SHOULD be able to handle an\
    \ arbitrarily large number of certificates\n   and chains.\n   Clients MAY send\
    \ CA certificates, that is, certificates that are\n   self-signed and can be considered\
    \ the \"root\" of other chains. Note\n   that receiving agents SHOULD NOT simply\
    \ trust any self-signed\n   certificates as valid CAs, but SHOULD use some other\
    \ mechanism to\n   determine if this is a CA that should be trusted.\n   Receiving\
    \ agents MUST support chaining based on the distinguished\n   name fields. Other\
    \ methods of building certificate chains may be\n   supported but are not currently\
    \ recommended.\n"
- title: 3. Distinguished Names in Certificates
  contents:
  - '3. Distinguished Names in Certificates

    '
- title: 3.1 Using Distinguished Names for Internet Mail
  contents:
  - "3.1 Using Distinguished Names for Internet Mail\n   The format of an X.509 certificate\
    \ includes fields for the subject\n   name and issuer name. The subject name identifies\
    \ the owner of a\n   particular public key/private key pair while the issuer name\
    \ is meant\n   to identify the entity that \"certified\" the subject (that is,\
    \ who\n   signed the subject's certificate). The subject name and issuer name\n\
    \   are defined by X.509 as Distinguished Names.\n   Distinguished Names are defined\
    \ by a CCITT standard X.501 [X.501]. A\n   Distinguished Name is broken into one\
    \ or more Relative Distinguished\n   Names.  Each Relative Distinguished Name\
    \ is comprised of one or more\n   Attribute-Value Assertions. Each Attribute-Value\
    \ Assertion consists\n   of a Attribute Identifier and its corresponding value\
    \ information,\n   such as CountryName=US. Distinguished Names were intended to\
    \ identify\n   entities in the X.500 directory tree [X.500]. Each Relative\n \
    \  Distinguished Name can be thought of as a node in the tree which is\n   described\
    \ by some collection of Attribute-Value Assertions. The\n   entire Distinguished\
    \ Name is some collection of nodes in the tree\n   that traverse a path from the\
    \ root of the tree to some end node which\n   represents a particular entity.\n\
    \   The goal of the directory was to provide an infrastructure to\n   uniquely\
    \ name every communications entity everywhere. However,\n   adoption of a global\
    \ X.500 directory infrastructure has been slower\n   than expected. Consequently,\
    \ there is no requirement for X.500\n   directory service provision in the S/MIME\
    \ environment, although such\n   provision would almost undoubtedly be of great\
    \ value in facilitating\n   key management for S/MIME.\n   The use of Distinguished\
    \ Names in accordance with the X.500 directory\n   is not very widespread. By\
    \ contrast, Internet mail addresses, as\n   described in RFC 822 [RFC-822], are\
    \ used almost exclusively in the\n   Internet environment to identify originators\
    \ and recipients of\n   messages. However, Internet mail addresses bear no resemblance\
    \ to\n   X.500 Distinguished Names (except, perhaps, that they are both\n   hierarchical\
    \ in nature). Some method is needed to map Internet mail\n   addresses to entities\
    \ that hold public keys. Some people have\n   suggested that the X.509 certificate\
    \ format should be abandoned in\n   favor of other binding mechanisms. Instead,\
    \ S/MIME keeps the X.509\n   certificate and Distinguished Name mechanisms while\
    \ tailoring the\n   content of the naming information to suit the Internet mail\n\
    \   environment.\n   End-entity certificates MUST contain an Internet mail address\
    \ as\n   described in [RFC-822]. The address must be an \"addr-spec\" as defined\n\
    \   in Section 6.1 of that specification.\n   Receiving agents MUST recognize\
    \ email addresses in the subjectAltName\n   field. Receiving agents MUST recognize\
    \ email addresses in the\n   Distinguished Name field.\n   Sending agents SHOULD\
    \ make the address in the From header in a mail\n   message match an Internet\
    \ mail address in the signer's certificate.\n   Receiving agents MUST check that\
    \ the address in the From header of a\n   mail message matches an Internet mail\
    \ address in the signer's\n   certificate. A receiving agent MUST provide some\
    \ explicit alternate\n   processing of the message if this comparison fails, which\
    \ may be to\n   reject the message.\n"
- title: 3.2 Required Name Attributes
  contents:
  - "3.2 Required Name Attributes\n   Receiving agents MUST support parsing of zero,\
    \ one, or more instances\n   of each of the following set of name attributes within\
    \ the\n   Distinguished Names in certificates.\n   Sending agents MUST include\
    \ the Internet mail address during\n   Distinguished Name creation. Guidelines\
    \ for the inclusion, omission,\n   and ordering of the remaining name attributes\
    \ during the creation of\n   a distinguished name will most likely be dictated\
    \ by the policies\n   associated with the certification service which will certify\
    \ the\n   corresponding name and public key.\n   CountryName\n   StateOrProvinceName\n\
    \   Locality\n   CommonName\n   Title\n   Organization\n   OrganizationalUnit\n\
    \   StreetAddress\n   PostalCode\n   PhoneNumber\n   EmailAddress\n   All attributes\
    \ other than EmailAddress are described in X.520\n   [X.520].  EmailAddress is\
    \ an IA5String that can have multiple\n   attribute values.\n"
- title: 4. Certificate Processing
  contents:
  - "4. Certificate Processing\n   A receiving agent needs to provide some certificate\
    \ retrieval\n   mechanism in order to gain access to certificates for recipients\
    \ of\n   digital envelopes.  There are many ways to implement certificate\n  \
    \ retrieval mechanisms. X.500 directory service is an excellent example\n   of\
    \ a certificate retrieval-only mechanism that is compatible with\n   classic X.500\
    \ Distinguished Names. The PKIX Working Group is\n   investigating other mechanisms.\
    \ Another method under consideration by\n   the IETF is to provide certificate\
    \ retrieval services as part of the\n   existing Domain Name System (DNS). Until\
    \ such mechanisms are widely\n   used, their utility may be limited by the small\
    \ number of\n   correspondent's certificates that can be retrieved. At a minimum,\
    \ for\n   initial S/MIME deployment, a user agent could automatically generate\n\
    \   a message to an intended recipient requesting that recipient's\n   certificate\
    \ in a signed return message.\n   Receiving and sending agents SHOULD also provide\
    \ a mechanism to allow\n   a user to \"store and protect\" certificates for correspondents\
    \ in such\n   a way so as to guarantee their later retrieval. In many environments,\n\
    \   it may be desirable to link the certificate retrieval/storage\n   mechanisms\
    \ together in some sort of certificate database. In its\n   simplest form, a certificate\
    \ database would be local to a particular\n   user and would function in a similar\
    \ way as a \"address book\" that\n   stores a user's frequent correspondents.\
    \ In this way, the certificate\n   retrieval mechanism would be limited to the\
    \ certificates that a user\n   has stored (presumably from incoming messages).\
    \  A comprehensive\n   certificate retrieval/storage solution may combine two\
    \ or more\n   mechanisms to allow the greatest flexibility and utility to the\
    \ user.\n   For instance, a secure Internet mail agent may resort to checking\
    \ a\n   centralized certificate retrieval mechanism for a certificate if it\n\
    \   can not be found in a user's local certificate storage/retrieval\n   database.\n\
    \   Receiving and sending agents SHOULD provide a mechanism for the\n   import\
    \ and export of certificates, using a PKCS #7 certs-only\n   message. This allows\
    \ for import and export of full certificate chains\n   as opposed to just a single\
    \ certificate. This is described in\n   [SMIME-MSG].\n"
- title: 4.1 Certificate Revocation Lists
  contents:
  - "4.1 Certificate Revocation Lists\n   A receiving agent SHOULD have access to\
    \ some certificate-revocation\n   list (CRL) retrieval mechanism in order to gain\
    \ access to\n   certificate-revocation information when validating certificate\n\
    \   chains. A receiving or sending agent SHOULD also provide a mechanism\n   to\
    \ allow a user to store incoming certificate-revocation information\n   for correspondents\
    \ in such a way so as to guarantee its later\n   retrieval. However, it is always\
    \ better to get the latest information\n   from the CA than to get information\
    \ stored away from incoming\n   messages.\n   Receiving and sending agents SHOULD\
    \ retrieve and utilize CRL\n   information every time a certificate is verified\
    \ as part of a\n   certificate chain validation even if the certificate was already\n\
    \   verified in the past.  However, in many instances (such as off-line\n   verification)\
    \ access to the latest CRL information may be difficult\n   or impossible. The\
    \ use of CRL information, therefore, may be dictated\n   by the value of the information\
    \ that is protected. The value of the\n   CRL information in a particular context\
    \ is beyond the scope of this\n   memo but may be governed by the policies associated\
    \ with particular\n   certificate hierarchies.\n"
- title: 4.2 Certificate Chain Validation
  contents:
  - "4.2 Certificate Chain Validation\n   In creating a user agent for secure messaging,\
    \ certificate, CRL, and\n   certificate chain validation SHOULD be highly automated\
    \ while still\n   acting in the best interests of the user. Certificate, CRL,\
    \ and chain\n   validation MUST be performed when validating a correspondent's\
    \ public\n   key. This is necessary when a) verifying a signature from a\n   correspondent\
    \ and, b) creating a digital envelope with the\n   correspondent as the intended\
    \ recipient.\n   Certificates and CRLs are made available to the chain validation\n\
    \   procedure in two ways: a) incoming messages, and b) certificate and\n   CRL\
    \ retrieval mechanisms. Certificates and CRLs in incoming messages\n   are not\
    \ required to be in any particular order nor are they required\n   to be in any\
    \ way related to the sender or recipient of the message\n   (although in most\
    \ cases they will be related to the sender). Incoming\n   certificates and CRLs\
    \ SHOULD be cached for use in chain validation\n   and optionally stored for later\
    \ use. This temporary certificate and\n   CRL cache SHOULD be used to augment\
    \ any other certificate and CRL\n   retrieval mechanisms for chain validation\
    \ on incoming signed\n   messages.\n"
- title: 4.3 Certificate and CRL Signing Algorithms
  contents:
  - "4.3 Certificate and CRL Signing Algorithms\n   Certificates and Certificate-Revocation\
    \ Lists (CRLs) are signed by\n   the certificate issuer. A receiving agent MUST\
    \ be capable of\n   verifying the signatures on certificates andCRLs made with\n\
    \   md5WithRSAEncryption and sha-1WithRSAEncryption signature algorithms\n   with\
    \ key sizes from 512 bits to 2048 bits described in [SMIME-MSG]. A\n   receiving\
    \ agent SHOULD be capable of verifying the signatures on\n   certificates and\
    \ CRLs made with the md2WithRSAEncryption signature\n   algorithm with key sizes\
    \ from 512 bits to 2048 bits.\n"
- title: 4.4 X.509 Version 3 Certificate Extensions
  contents:
  - "4.4 X.509 Version 3 Certificate Extensions\n   The X.509 v3 standard describes\
    \ an extensible framework in which the\n   basic certificate information can be\
    \ extended and how such extensions\n   can be used to control the process of issuing\
    \ and validating\n   certificates. The PKIX Working Group has ongoing efforts\
    \ to identify\n   and create extensions which have value in particular certification\n\
    \   environments. As such, there is still a fair amount of profiling work\n  \
    \ to be done before there is widespread agreement on which v3\n   extensions will\
    \ be used. Further, there are active efforts underway\n   to issue X.509 v3 certificates\
    \ for business purposes. This memo\n   identifies the minumum required set of\
    \ certificate extensions which\n   have the greatest value in the S/MIME environment.\
    \ The\n   basicConstraints, and keyUsage extensions are defined in [X.509].\n\
    \   Sending and receiving agents MUST correctly handle the v3 Basic\n   Constraints\
    \ Certificate Extension, the Key Usage Certificate\n   Extension, authorityKeyID,\
    \ subjectKeyID, and the subjectAltNames when\n   they appear in end-user certificates.\
    \ Some mechanism SHOULD exist to\n   handle the defined v3 certificate extensions\
    \ when they appear in\n   intermediate or CA certificates.\n   Certificates issued\
    \ for the S/MIME environment SHOULD NOT contain any\n   critical extensions other\
    \ than those listed here. These extensions\n   SHOULD be marked as non-critical\
    \ unless the proper handling of the\n   extension is deemed critical to the correct\
    \ interpretation of the\n   associated certificate. Other extensions may be included,\
    \ but those\n   extensions SHOULD NOT be marked as critical.\n"
- title: 4.4.1 Basic Constraints Certificate Extension
  contents:
  - "4.4.1 Basic Constraints Certificate Extension\n   The basic constraints extension\
    \ serves to delimit the role and\n   position of an issuing authority or end-user\
    \ certificate plays in a\n   chain of certificates.\n   For example, certificates\
    \ issued to CAs and subordinate CAs contain a\n   basic constraint extension that\
    \ identifies them as issuing authority\n   certificates. End-user subscriber certificates\
    \ contain an extension\n   that constrains the certificate from being an issuing\
    \ authority\n   certificate.\n   Certificates SHOULD contain a basicContstraints\
    \ extension.\n"
- title: 4.4.2 Key Usage Certificate Extension
  contents:
  - "4.4.2 Key Usage Certificate Extension\n   The key usage extension serves to limit\
    \ the technical purposes for\n   which a public key listed in a valid certificate\
    \ may be used. Issuing\n   authority certificates may contain a key usage extension\
    \ that\n   restricts the key to signing certificates, certificate revocation\n\
    \   lists and other data.\n   For example, a certification authority may create\
    \ subordinate issuer\n   certificates which contain a keyUsage extension which\
    \ specifies that\n   the corresponding public key can be used to sign end user\
    \ certs and\n   sign CRLs.\n"
- title: 5. Generating Keys and Certification Requests
  contents:
  - '5. Generating Keys and Certification Requests

    '
- title: 5.1 Binding Names and Keys
  contents:
  - "5.1 Binding Names and Keys\n   An S/MIME agent or some related administrative\
    \ utility or function\n   MUST be capable of generating a certification request\
    \ given a user's\n   public key and associated name information. In most cases,\
    \ the user's\n   public key/private key pair will be generated simultaneously.\n\
    \   However, there are cases where the keying information may be\n   generated\
    \ by an external process (such as when a key pair is\n   generated on a cryptographic\
    \ token or by a \"key recovery\" service).\n   There SHOULD NOT be multiple valid\
    \ (that is, non-expired and non-\n   revoked) certificates for the same key pair\
    \ bound to different\n   Distinguished Names.  Otherwise, a security flaw exists\
    \ where an\n   attacker can substitute one valid certificate for another in such\
    \ a\n   way that can not be detected by a message recipient. If a users\n   wishes\
    \ to change their name (or create an alternate name), the user\n   agent SHOULD\
    \ generate a new key pair. If the user wishes to reuse an\n   existing key pair\
    \ with a new or alternate name, the user SHOULD first\n   have any valid certificates\
    \ for the existing public key revoked.\n   In general, it is possible for a user\
    \ to request certification for\n   the same name and different public key from\
    \ the same or different\n   certification authorities.  This is acceptable both\
    \ for end-entity\n   and issuer certificates and can be useful in supporting a\
    \ change of\n   issuer keys in a smooth fashion.\n   CAs that re-use their own\
    \ name with distinct keys MUST include the\n   AuthorityKeyIdentifier extension\
    \ in certificates that they issue, and\n   MUST have the SubjectKeyIdentifier\
    \ extension in their own\n   certificate. CAs SHOULD use these extensions uniformly.\n\
    \   Clients SHOULD handle multiple valid CA certificates that certify\n   different\
    \ public keys but contain the same subject name (in this\n   case, that CA's name).\n\
    \   When selecting an appropriate issuer's certificate to use to verify a\n  \
    \ given certificate, clients SHOULD process the AuthorityKeyIdentifier\n   and\
    \ SubjectKeyIdentifier extensions.\n   5.2 Using PKCS #10 for Certification Requests\n\
    \   PKCS #10 is a flexible and extensible message format for representing\n  \
    \ the results of cryptographic operations on some data. The choice of\n   naming\
    \ information is largely dictated by the policies and procedures\n   associated\
    \ with the intended certification service.\n   In addition to key and naming information,\
    \ the PKCS #10 format\n   supports the inclusion of optional attributes, signed\
    \ by the entity\n   requesting certification. This allows for information to be\
    \ conveyed\n   in a certification request which may be useful to the request\n\
    \   process, but not necessarily part of the Distinguished Name being\n   certified.\n\
    \   Receiving agents MUST support the identification of an RSA key with\n   the\
    \ rsa defined in X.509 and the rsaEncryption OID. Certification\n   authorities\
    \ MUST support sha-1WithRSAEncryption and\n   md5WithRSAEncryption and SHOULD\
    \ support MD2WithRSAEncryption for\n   verification of signatures on certificate\
    \ requests as described in\n   [SMIME-MSG].\n   For the creation and submission\
    \ of certification-requests, RSA keys\n   SHOULD be identified with the rsaEncryption\
    \ OID and signed with the\n   sha-1WithRSAEncryption signature algorithm.  Certification-requests\n\
    \   MUST NOT be signed with the md2WithRSAEncryption signature algorithm.\n  \
    \ Certification requests MUST include a valid Internet mail address,\n   either\
    \ as part of the certificate (as described in 3.2) or as part of\n   the PKCS\
    \ #10 attribute list. Certification authorities MUST check\n   that the address\
    \ in the \"From:\" header matches either of these\n   addresses. CAs SHOULD allow\
    \ the CA operator to configure processing\n   of messages whose addresses do not\
    \ match.\n   Certification authorities SHOULD support parsing of zero or one\n\
    \   instance of each of the following set of certification-request\n   attributes\
    \ on incoming messages. Attributes that a particular\n   implementation does not\
    \ support may generate a warning message to the\n   requestor, or may be silently\
    \ ignored.  Inclusion of the following\n   attributes during the creation and\
    \ submission of a certification-\n   request will most likely be dictated by the\
    \ policies associated with\n   the certification service which will certify the\
    \ corresponding name\n   and public key.\n   postalAddress\n   challengePassword\n\
    \   unstructuredAddress\n   postalAddress is described in [X.520].\n"
- title: 5.2.1 Challenge Password
  contents:
  - "5.2.1 Challenge Password\n   The challenge-password attribute type specifies\
    \ a password by which\n   an entity may request certificate revocation. The interpretation\
    \ of\n   the password is intended to be specified by the issuer of the\n   certificate;\
    \ no particular interpretation is required. The\n   challenge-password attribute\
    \ type is intended for PKCS #10\n   certification requests.\n"
- title: 'Challenge-password attribute values have ASN.1 type ChallengePassword:'
  contents:
  - 'Challenge-password attribute values have ASN.1 type ChallengePassword:

    '
- title: ChallengePassword ::= CHOICE {
  contents:
  - "ChallengePassword ::= CHOICE {\n  PrintableString, T61String }\n"
- title: A challenge-password attribute must have a single attribute value.
  contents:
  - 'A challenge-password attribute must have a single attribute value.

    '
- title: It is expected that if UCS becomes an ASN.1 type
  contents:
  - 'It is expected that if UCS becomes an ASN.1 type

    '
- title: (e.g., UNIVERSAL STRING),
  contents:
  - '(e.g., UNIVERSAL STRING),

    '
- title: 'ChallengePassword will become a CHOICE type:'
  contents:
  - 'ChallengePassword will become a CHOICE type:

    '
- title: ChallengePassword ::= CHOICE {
  contents:
  - "ChallengePassword ::= CHOICE {\n    PrintableString, T61String, UNIVERSAL STRING\
    \ }\n"
- title: 5.2.2 Unstructured Address
  contents:
  - "5.2.2 Unstructured Address\n   The unstructured-address attribute type specifies\
    \ the address or\n   addresses of the subject of a certificate as an unstructured\
    \ ASCII or\n   T.61 string.  The interpretation of the addresses is intended to\
    \ be\n   specified by the issuer of the certificate; no particular\n   interpretation\
    \ is required. A likely interpretation is as an\n   alternative to the X.520 postalAddress\
    \ attribute type. The\n   unstructured-address attribute type is intended for\
    \ PKCS #10\n   certification requests.\n   Unstructured-address attribute values\
    \ have\n   ASN.1 type UnstructuredAddress:\n   UnstructuredAddress ::= CHOICE\
    \ {\n     PrintableString, T61String }\n   An unstructured-address attribute can\
    \ have multiple attribute values.\n   Note: T.61's newline character (hexadecimal\
    \ code 0d) is recommended\n   as a line separator in multi-line addresses.\n \
    \  It is expected that if UCS becomes an ASN.1 type (e.g., UNIVERSAL\n   STRING),\
    \ UnstructuredAddress will become a CHOICE type:\n   UnstructuredAddress ::= CHOICE\
    \ {\n       PrintableString, T61String, UNIVERSAL STRING }\n"
- title: 5.3 Fulfilling a Certification Request
  contents:
  - "5.3 Fulfilling a Certification Request\n   Certification authorities SHOULD use\
    \ the sha-1WithRSAEncryption\n   signature algorithms when signing certificates.\n"
- title: '5.4 Using PKCS #7 for Fulfilled Certificate Response'
  contents:
  - "5.4 Using PKCS #7 for Fulfilled Certificate Response\n   [PKCS-7] supports a\
    \ degenerate case of the SignedData content type\n   where there are no signers\
    \ on the content (and hence, the content\n   value is \"irrelevant\"). This degenerate\
    \ case is used to convey\n   certificate and CRL information. Certification authorities\
    \ MUST use\n   this format for returning certificate information resulting from\
    \ the\n   successful fulfillment of a certification request. At a minimum, the\n\
    \   fulfilled certificate response MUST include the actual subject\n   certificate\
    \ (corresponding to the information in the certification\n   request). The response\
    \ SHOULD include other certificates which link\n   the issuer to higher level\
    \ certification authorities and\n   corresponding certificate-revocation lists.\
    \ Unrelated certificates\n   and revocation information is also acceptable.\n\
    \   Receiving agents MUST parse this degenerate PKCS #7 message type and\n   handle\
    \ the certificates and CRLs according to the requirements and\n   recommendations\
    \ in Section 4.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   All of the security issues faced by any cryptographic\
    \ application\n   must be faced by a S/MIME agent. Among these issues are protecting\n\
    \   the user's private key, preventing various attacks, and helping the\n   user\
    \ avoid mistakes such as inadvertently encrypting a message for\n   the wrong\
    \ recipient. The entire list of security considerations is\n   beyond the scope\
    \ of this document, but some significant concerns are\n   listed here.\n   When\
    \ processing certificates, there are many situations where the\n   processing\
    \ might fail. Because the processing may be done by a user\n   agent, a security\
    \ gateway, or other program, there is no single way\n   to handle such failures.\
    \ Just because the methods to handle the\n   failures has not been listed, however,\
    \ the reader should not assume\n   that they are not important.  The opposite\
    \ is true: if a certificate\n   is not provably valid and associated with the\
    \ message, the processing\n   software should take immediate and noticable steps\
    \ to inform the end\n   user about it.\n   Some of the many places where signature\
    \ and certificate checking\n   might fail include:\n   - no Internet mail addresses\
    \ in a certificate match the sender of a\n     message\n   - no certificate chain\
    \ leads to a trusted CA\n   - no ability to check the CRL for a certificate\n\
    \   - an invalid CRL was received\n   - the CRL being checked is expired\n   -\
    \ the certificate is expired\n   - the certificate has been revoked\n   There\
    \ are certainly other instances where a certificate may be\n   invalid, and it\
    \ is the responsibility of the processing software to\n   check them all thoroughly,\
    \ and to decide what to do if the check\n   fails.\n"
- title: A. Object Identifiers and Syntax
  contents:
  - "A. Object Identifiers and Syntax\n   Sections A.1 through A.4 are adopted from\
    \ [SMIME-MSG].\n"
- title: A.5 Name Attributes
  contents:
  - 'A.5 Name Attributes

    '
- title: emailAddress OBJECT IDENTIFIER ::=
  contents:
  - "emailAddress OBJECT IDENTIFIER ::=\n     {iso(1) member-body(2) US(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9) 1}\n"
- title: CountryName OBJECT IDENTIFIER ::=
  contents:
  - "CountryName OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 6}\n"
- title: StateOrProvinceName OBJECT IDENTIFIER ::=
  contents:
  - "StateOrProvinceName OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 8}\n"
- title: locality OBJECT IDENTIFIER ::=
  contents:
  - "locality OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 7}\n"
- title: CommonName OBJECT IDENTIFIER ::=
  contents:
  - "CommonName OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 3}\n"
- title: Title OBJECT IDENTIFIER ::=
  contents:
  - "Title OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 12}\n"
- title: Organization OBJECT IDENTIFIER ::=
  contents:
  - "Organization OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 10}\n"
- title: OrganizationalUnit OBJECT IDENTIFIER ::=
  contents:
  - "OrganizationalUnit OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 11}\n"
- title: StreetAddress OBJECT IDENTIFIER ::=
  contents:
  - "StreetAddress OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 9}\n"
- title: Postal Code OBJECT IDENTIFIER ::=
  contents:
  - "Postal Code OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 17}\n"
- title: Phone Number OBJECT IDENTIFIER ::=
  contents:
  - "Phone Number OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 20}\n"
- title: A.6 Certification Request Attributes
  contents:
  - 'A.6 Certification Request Attributes

    '
- title: postalAddress OBJECT IDENTIFIER ::=
  contents:
  - "postalAddress OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) attributeType(4)\
    \ 16}\n"
- title: challengePassword OBJECT IDENTIFIER ::=
  contents:
  - "challengePassword OBJECT IDENTIFIER ::=\n     {iso(1) member-body(2) US(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) 7}\n"
- title: unstructuredAddress OBJECT IDENTIFIER ::=
  contents:
  - "unstructuredAddress OBJECT IDENTIFIER ::=\n     {iso(1) member-body(2) US(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) 8}\n"
- title: A.7 X.509 V3 Certificate Extensions
  contents:
  - 'A.7 X.509 V3 Certificate Extensions

    '
- title: basicConstraints OBJECT IDENTIFIER ::=
  contents:
  - "basicConstraints OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) 29 19\
    \ }\n"
- title: 'The ASN.1 definition of basicConstraints certificate extension is:'
  contents:
  - 'The ASN.1 definition of basicConstraints certificate extension is:

    '
- title: basicConstraints basicConstraints EXTENSION ::= {
  contents:
  - "basicConstraints basicConstraints EXTENSION ::= {\n     SYNTAX  BasicConstraintsSyntax\n\
    \     IDENTIFIED BY { id-ce 19 } }\n"
- title: BasicConstraintsSyntax ::= SEQUENCE {
  contents:
  - "BasicConstraintsSyntax ::= SEQUENCE {\n     cA                 BOOLEAN DEFAULT\
    \ FALSE,\n     pathLenConstraint  INTEGER (0..MAX) OPTIONAL }\n"
- title: keyUsage OBJECT IDENTIFIER ::=
  contents:
  - "keyUsage OBJECT IDENTIFIER ::=\n     {joint-iso-ccitt(2) ds(5) 29 15 }\n"
- title: 'The ASN.1 definition of keyUsage certificate extension is:'
  contents:
  - 'The ASN.1 definition of keyUsage certificate extension is:

    '
- title: keyUsage EXTENSION ::= {
  contents:
  - "keyUsage EXTENSION ::= {\n     SYNTAX  KeyUsage\n     IDENTIFIED BY { id-ce 15\
    \ }}\n"
- title: KeyUsage ::= BIT STRING {
  contents:
  - "KeyUsage ::= BIT STRING {\n     digitalSignature      (0),\n     nonRepudiation\
    \        (1),\n     keyEncipherment       (2),\n     dataEncipherment      (3),\n\
    \     keyAgreement          (4),\n     keyCertSign           (5),\n     cRLSign\
    \               (6)}\n"
- title: B. References
  contents:
  - "B. References\n   [KEYM] PKIX Part 1. At the time of this writing, PKIX is a\
    \ Work in\n   Progress, but it is expected that there will be standards-track\
    \ RFCs\n   at some point in the future.\n   [MUSTSHOULD] Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n   Requirement Levels\", BCP 1l4, RFC 2119, March\
    \ 1997.\n   [PKCS-1] Kaliski, B., \"PKCS #1: RSA Encryption Version 1.5\", RFC\n\
    \   2313, March 1998.\n   [PKCS-7] Kaliski, B., \"PKCS #7: Cryptographic Message\
    \ Syntax Version\n   1.5\", RFC 2315, March 1998.\n   [PKCS-10] Kaliski, B., \"\
    PKCS #10: Certification Request Syntax\n   Version 1.5\", RFC 2314, March 1998.\n\
    \   [RFC-822] Crocker, D., \"Standard For The Format Of ARPA Internet Text\n \
    \  Messages\", STD 11, RFC 822, August 1982.\n   [SMIME-MSG] Dusse, S., Hoffman,\
    \ P., Ramsdell, R., Lundblade, L., and\n   L. Repka, \"S/MIME Version 2 Message\
    \ Specification\", RFC 2311, March\n   1998.\n   [X.500] ITU-T Recommendation\
    \ X.500 (1997) | ISO/IEC 9594-1:1997,\n   Information technology - Open Systems\
    \ Interconnection - The\n   Directory: Overview of concepts, models and services\n\
    \   [X.501] ITU-T Recommendation X.501 (1997) | ISO/IEC 9594-2:1997,\n   Information\
    \ technology - Open Systems Interconnection - The\n   Directory: Models\n   [X.509]\
    \ ITU-T Recommendation X.509 (1997) | ISO/IEC 9594-8:1997,\n   Information technology\
    \ - Open Systems Interconnection - The\n   Directory: Authentication framework\n\
    \   [X.520] ITU-T Recommendation X.520 (1997) | ISO/IEC 9594-6:1997,\n   Information\
    \ technology - Open Systems Interconnection - The\n   Directory: Selected attribute\
    \ types.\n"
- title: C. Compatibility with Prior Practice in S/MIME
  contents:
  - "C. Compatibility with Prior Practice in S/MIME\n   S/MIME was originally developed\
    \ by RSA Data Security, Inc. Many\n   developers implemented S/MIME agents before\
    \ this document was\n   published. All S/MIME receiving agents SHOULD make every\
    \ attempt to\n   interoperate with these earlier implementations of S/MIME.\n"
- title: D. Acknowledgements
  contents:
  - "D. Acknowledgements\n   Significant contributions to the content of this memo\
    \ were made by\n   many people, including David Solo, Anil Gangolli, Jeff Thompson,\
    \ and\n   Lisa Repka.\n"
- title: E. Authors' Addresses
  contents:
  - "E. Authors' Addresses\n   Steve Dusse\n   RSA Data Security, Inc.\n   100 Marine\
    \ Parkway, #500\n   Redwood City, CA  94065  USA\n   Phone: (415) 595-8782\n \
    \  EMail: spock@rsa.com\n   Paul Hoffman\n   Internet Mail Consortium\n   127\
    \ Segre Place\n   Santa Cruz, CA  95060\n   Phone: (408) 426-9827\n   EMail: phoffman@imc.org\n\
    \   Blake Ramsdell\n   Worldtalk\n   13122 NE 20th St., Suite C\n   Bellevue,\
    \ WA 98005\n   Phone: (425) 882-8861\n   EMail: blaker@deming.com\n   Jeff Weinstein\n\
    \   Netscape Communications Corporation\n   501 East Middlefield Road\n   Mountain\
    \ View, CA  94043\n   Phone: (415) 254-1900\n   EMail: jsw@netscape.com\n"
- title: F.  Full Copyright Statement
  contents:
  - "F.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
