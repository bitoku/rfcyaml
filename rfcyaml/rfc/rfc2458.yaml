- title: __initial_text__
  contents:
  - ''
- title: Netowrk Working Group                                               H. Lu
  contents:
  - "Netowrk Working Group                                               H. Lu\n \
    \              Toward the PSTN/Internet Inter-Networking\n                   \
    \    --Pre-PINT Implementations\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document contains the information relevant to the development\
    \ of\n   the inter-networking interfaces underway in the Public Switched\n   Telephone\
    \ Network (PSTN)/Internet Inter-Networking (PINT) Working\n   Group. It addresses\
    \ technologies, architectures, and several (but by\n   no means all) existing\
    \ pre-PINT implementations of the arrangements\n   through which Internet applications\
    \ can request and enrich PSTN\n   telecommunications services. The common denominator\
    \ of the enriched\n   services (a.k.a. PINT services) is that they combine the\
    \ Internet and\n   PSTN services in such a way that the Internet is used for non-voice\n\
    \   interactions, while the voice (and fax) are carried entirely over the\n  \
    \ PSTN. One key observation is that the pre-PINT implementations, being\n   developed\
    \ independently, do not inter-operate. It is a task of the\n   PINT Working Group\
    \ to define the inter-networking interfaces that\n   will support inter-operation\
    \ of the future implementations of PINT\n   services.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.      Introduction    .......................................\
    \     3\n   2.      Terminology     .......................................  \
    \   3\n   3.      PINT Services   .......................................    \
    \ 4\n   4.      Architectural Overview  ...............................     5\n\
    \   4.1     Public Switched Telephone Network       ...............     5\n  \
    \ 4.2     Pre-PINT Systems        ...............................     9\n   5.\
    \      IN-Based Solutions      ...............................    20\n   5.1 \
    \    The Lucent System       ...............................    20\n   5.1.1 \
    \  Roles of the Web Server, Service Node, and SMS  .......    20\n   5.1.2   A\
    \ Click-to-Dial-Back Service Scenario   ...............    21\n   5.1.3   Web\
    \ Server-Service Node Interface       ...............    22\n   5.1.4   Web Server-SMS\
    \ Interface and SNMP MIB   ...............    24\n   5.1.5   Security Considerations\
    \     ...........................    26\n   5.2     Siemens Web Call Center  \
    \   ...........................    27\n   5.2.1   Service Description     ...............................\
    \    27\n   5.2.2   Implementation      ...................................  \
    \  29\n   5.2.3   Derived Requirements/Lessons      .....................    35\n\
    \   6.      Alternative Solutions   ...............................    37\n  \
    \ 6.1     The AT&T System   .....................................    37\n   6.1.1\
    \   High Level Architecture    ............................    38\n   6.1.2  \
    \ IP Client to CallBroker Interface    ..................    39\n   6.1.3   Protocol\
    \    ...........................................    40\n   6.1.4   APIs Exposed\
    \ to the IP Client     .....................    41\n   6.1.5   Voice-Bridge Control\
    \ API       ........................    41\n   6.2     Simple Computer Telephony\
    \ Protocol      ...............    41\n   6.2.1   Overview    ...........................................\
    \    41\n   6.2.2   How SCTP Fits in with the Reference PINT Services    ..  \
    \  42\n   7.      Session Initiation Protocol--An Emerging Standard    ..    43\n\
    \   7.1     Overview        .......................................    43\n  \
    \ 7.2     SIP Protocol    .......................................    44\n   7.3\
    \     SIP Entities    .......................................    45\n   7.4  \
    \   Providing Call Control Functionality    ...............    46\n   8.     \
    \ Overall Security Considerations   .....................    47\n   9.      Conclusion\
    \      .......................................    48\n   10.     Acknowledgments\
    \     ...................................    48\n   11.     Appendix        .......................................\
    \    49\n   11.1    PSTN/IN 101     .......................................  \
    \  49\n   11.1.1  Public Switched Telephone Network       ...............    49\n\
    \   11.1.2  Intelligent Network     ...............................    51\n  \
    \ 11.2    Call Center Features      .............................    54\n   12.\
    \     References      .......................................    56\n   Authors'\
    \ Addresses    .........................................    57\n   Full Copyright\
    \ Statement     ..................................    60\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document contains the information relevant to the development\
    \ of\n   the inter-networking interfaces underway in the Public Switched\n   Telephone\
    \ Network (PSTN)/Internet Inter-Networking (PINT) Working\n   Group. It addresses\
    \ technologies, architectures, and several (but by\n   no means all) existing\
    \ pre-PINT implementations of the arrangements\n   through which Internet applications\
    \ can request and enrich PSTN\n   telecommunications services. The common denominator\
    \ of the enriched\n   services (a.k.a. PINT services) is that they combine the\
    \ Internet and\n   PSTN services in such a way that the Internet is used for non-voice\n\
    \   interactions, while the voice (and fax) are carried entirely over the\n  \
    \ PSTN.\n   The organization of the document is as follows.  First, the basic\n\
    \   terminology and a short \"intuitive\" description of the PINT services\n \
    \  are provided. The rest of the information deals, in one way or the\n   other,\
    \ with the pre-PINT support of these services where they are\n   used as a benchmark.\
    \ Thus, an architectural overview common to all\n   present solutions is presented.\
    \  The flow of the document then\n   divides into two streams: one is dedicated\
    \ to the Intelligent Network\n   (IN)-based solutions; the other explores alternative\
    \ means (i.e.,\n   CallBroker and Computer-Telephony Integration (CTI) approach).\
    \ At\n   this point, the emerging standards are explored, in particular, the\n\
    \   Session Initiation Protocol (SIP), which promises an elegant solution\n  \
    \ to the PINT problem. Each of the above developments is addressed in a\n   respective\
    \ section. The final sections of the document contain the\n   overall security\
    \ considerations, conclusion, acknowledgments,\n   appendix, and a set of references.\
    \ The security section summarizes\n   the PINT security requirements derived from\
    \ the pre-PINT experiences\n   and the appendix presents a tutorial on the PSTN,\
    \ IN, and Call Center\n   functions.\n"
- title: 2. Terminology
  contents:
  - "2. Terminology\n   This document uses the following terminology:\n   Authentication\
    \ -- verification of the identity of a party.\n   Authorization -- determination\
    \ of whether or not a party has the\n   right to perform certain activities.\n\
    \   PINT Gateway -- the PSTN node that interacts with the Internet.\n   User or\
    \ Customer -- the person who asks for a service request to be\n   issued. In the\
    \ context of PINT Services, this person will use an\n   Internet host to make\
    \ his or her request. The term \"user\" is also\n   used to describe a host originating\
    \ the PINT service request on\n   behalf of this person.\n"
- title: 3. PINT Services
  contents:
  - "3. PINT Services\n   This document addresses four services initially identified\
    \ by the\n   PINT Working Group and presently supported by pre-PINT\n   implementations.\
    \ These services are: click-to-dial-back, click-to-\n   fax, click-to-fax-back\
    \ and voice-access-to-content.\n   Note that the word \"click\" should not be\
    \ taken literally. It is\n   rather used to point out that initiation of the related\
    \ services\n   takes place on the Internet, where point and click are the most\n\
    \   prevalent user actions.  In other words, a service request could\n   originate\
    \ from any type of IP-based platforms. There is no\n   implication that these\
    \ services must be implemented by a device\n   within the PSTN or the Internet\
    \ running a Web server.\n   The common denominator of the PINT services is that\
    \ they combine the\n   Internet and PSTN services in such a way that the Internet\
    \ is used\n   for non-voice interactions, while the voice (and fax) are carried\n\
    \   entirely over the PSTN. (An example of such a service is combination\n   of\
    \ a Web-based Yellow Pages service with the ability to initiate PSTN\n   calls\
    \ between customers and suppliers in a manner described in what\n   follows.)\n\
    \   Some of the benefits of using the PSTN are high quality of the voice,\n  \
    \ an ability to route the call to different locations depending on\n   pre-set\
    \ criteria (for example, time of the day, day of the week, and\n   geographic\
    \ location), outstanding security and reliability, and\n   access to flexible,\
    \ low cost, and secure billing and charging\n   systems. The benefits of using\
    \ the Internet are the uniform, well-\n   defined, and widely-used interfaces\
    \ available anywhere, anytime.\n   Click-to-Dial-Back\n   With this service, a\
    \ user requests (through an IP host) that the PSTN\n   call be established between\
    \ another party and himself or herself. An\n   important pre-requisite for using\
    \ this service is that the user has\n   simultaneous access to both the PSTN and\
    \ Internet.\n   One example of an application of this service is on-line shopping:\
    \ a\n   user browsing through an on-line catalogue, clicks a button thus\n   inviting\
    \ a call from a sales representative. Note that (as is the\n   case with the all-PSTN\
    \ Free-Phone, or \"800\", service) flexible\n   billing arrangements can be implemented\
    \ here on behalf of the service\n   provider. In addition (and also similarly\
    \ to the Free-Phone/800), the\n   PSTN could route the call depending on the time\
    \ of day, day of week,\n   availability of agents in different locations, and\
    \ so on.\n   Click-to-Fax\n   With this service, a user at an IP host requests\
    \ that a fax be sent\n   to a particular fax number. In particular this service\
    \ is especially\n   meaningful when the fax is to be sent to someone who has only\
    \ a fax\n   machine (but no access to the Internet). Consider, as an example,\
    \ a\n   service scenario in which a Web user makes a reservation for a hotel\n\
    \   room in Beijing from a travel service page containing hotel\n   information\
    \ of major cities around the world. Suppose a specific\n   Beijing hotel chosen\
    \ by the user does not have Internet connection\n   but has a fax machine. The\
    \ user fills out the hotel reservation form\n   and then clicks a button sending\
    \ out the form to the travel service\n   provider, which in turn generates a fax\
    \ request and sends it together\n   with the hotel reservation form to the PSTN.\
    \ Upon receiving the\n   request and the associated data, the PSTN translates\
    \ the data into\n   the proper facsimile format and delivers it to the Beijing\
    \ hotel as\n   specified in the fax request.\n   Click-to-Fax-Back\n   With this\
    \ service, a user at an IP host can request that a fax be\n   sent to him or her.\
    \ (Consider the user of the previous example, who\n   now requests the confirmation\
    \ from the Beijing Hotel. Another useful\n   application of the service is when\
    \ size of the information that a\n   user intends to get is so large that downloading\
    \ it to the user's PC\n   over the Internet will require a long time and a lot\
    \ of disk space.)\n   Voice-Access-to-Content\n   With this service, a user at\
    \ an IP host requests that certain\n   information on the Internet be accessed\
    \ (and delivered) in an audio\n   form over the PSTN, using the telephone as an\
    \ informational\n   appliance. One application of this service is to provide Web\
    \ access\n   to the blind.  (This may require special resources--available in\
    \ the\n   PSTN--to convert the Web data into speech.)\n"
- title: 4. Architectural Overview
  contents:
  - '4. Architectural Overview

    '
- title: 4.1 Public Switched Telephone Network
  contents:
  - "4.1 Public Switched Telephone Network\n   From an application perspective, Internet\
    \ nodes are interconnected\n   directly, as shown in Figure 1. When two machines\
    \ are to communicate,\n   they will have the address of the destination end system,\
    \ and will\n   send network level datagrams, assuming that the underlying\n  \
    \ infrastructure will deliver them as required.\n                            \
    \       _____\n                 __          _____/     \\_____\n             \
    \   [__]        /                 \\\n               [----]-.-.-.-.   Internet\
    \       .-.\n                            \\_____     _______/  |\n           \
    \                   __  \\__./     __   .\n                             [__] \
    \  /      [__]  |\n                            [----]-.      [----]-.\n      \
    \         Key: .-.-. Internet Access Link\n                                 Figure\
    \ 1\n   Where all nodes are on the same (broadcast) network, there is no need\n\
    \   for intervening routers; they can send and deliver packets to one\n   another\
    \ directly. The Internet nodes are responsible for their own\n   communications\
    \ requests, and act as peers in the communication\n   sessions that result.\n\
    \   This contrasts with the situation in the PSTN. There, the end systems\n  \
    \ are configured as shown in Figure 2. The end systems tend to be\n   specific\
    \ to a particular type of traffic, so that, for example, the\n   majority of terminals\
    \ are dedicated to carrying speech traffic\n   (telephones) or to carrying facsimile\
    \ data (fax machines). The\n   terminals all connect to Central Offices (COs)\
    \ via access lines, and\n   these COs are interconnected into a network.\n   \
    \ /--\\\n   ()/\\()__\n    /__\\   \\       .................................\n\
    \            \\      !             !                 !           /--\\\n     __\
    \      \\   [-!-]         [-!-]               !          ()/\\()\n     \\ \\ \
    \     \\__[CO ]=========[CO ]==\\\\           !        ___/__\\\n    [Fax]________[---]\
    \         [---]   \\\\        [-!-]     /   __\n                             \
    \           \\\\=======[CO ]____/    \\ \\\n                                 \
    \                [---]________[Fax]\n   Key: ___   Access Lines\n        === \
    \  Trunk Links (inter-CO user data links)\n        ...   Inter-CO signaling network\
    \ links\n        CO    Central Office (Telephone Exchange)\n                 \
    \                Figure 2\n   Communications between the terminals are all \"\
    circuit switched\", so a\n   dedicated synchronous data path (or circuit) needs\
    \ to be placed\n   between the end terminals for carrying all communications.\
    \ Arranging\n   for such a circuit to be made or removed (cleared) is the\n  \
    \ responsibility of the Central Offices in the network. A user makes a\n   request\
    \ via his or her terminal, and this request is passed on to the\n   \"local\"\
    \ Central Office. The relationship between the terminals and\n   the local Central\
    \ Offices to which they are connected is strictly\n   Client/Server.\n   The COs\
    \ are interconnected using two different types of connections.\n   One of these\
    \ is called a trunk connection (shown as a double line in\n   the above figure)\
    \ and is used to carry the data traffic generated by\n   the terminals. The other\
    \ connection acts as part of a separate\n   network (and is shown as a dotted\
    \ line in the above figure). This is\n   the signaling network, and is used by\
    \ the Central Offices to request\n   a connection to be made between themselves\
    \ and the destination of the\n   required circuit. This will be carried across\
    \ the trunk link to the\n   \"next\" Central Office in the path. The path, once\
    \ in place through\n   the PSTN, always takes the same route. This contrasts with\
    \ the\n   Internet, where the underlying datagram nature of the infrastructure\n\
    \   means that data packets are carried over different routes, depending\n   on\
    \ the combined traffic flows through the network at the time.\n   The call set\
    \ up process can be viewed as having two parts: one in\n   which a request for\
    \ connection is made, and the other in which the\n   circuit is made across the\
    \ PSTN and call data flows between the\n   communicating parties. This is shown\
    \ in the next pair of figures (3a\n   and 3b).\n                            /--\\\
    \n                           ()  ()\n                             --____\n   \
    \                         /++\\   \\\n                           /----\\   \\\n\
    \                              A      \\   [-!-]\n                           \
    \           \\->[CO ]\n                                         [---]\n      \
    \                     Time = 13:55\n                                 Figure 3a\n\
    \   Key: ___   Access Lines\n        ===   Trunk Links (inter-CO user data links)\n\
    \        ...   Inter-CO signaling network links\n        CO    Central Office\
    \ (Telephone Exchange)\n    /--\\\n   ()  ()\n     --            .................................\n\
    \    /  \\<---       ^             !                 !           /--\\\n   /----\\\
    \   \\      !             v                 !          ()  ()\n      A'     \\\
    \   [-!-]         [-!-]               !            --\n              \\__[CO ]=========[CO\
    \ ]==\\\\           v        ->-/  \\\n                 [---]         [---]  \
    \ \\\\        [-!-]     /  /----\\\n                                        \\\
    \\=======[CO ]____/     B'\n   Time = 14:00                                  [---]\n\
    \                                 Figure 3b\n   Figure 3 shows a particular kind\
    \ of service that can be provided;\n   call booking. With this service, a request\
    \ is sent for a connection\n   to be made between the A and B telephones at a\
    \ specified time. The\n   telephone is then replaced (the request phase is terminated).\
    \ At the\n   specified time, the CO will make a connection across the network\
    \ in\n   the normal way, but will, first, ring the \"local\" or A' telephone to\n\
    \   inform the user that his or her call is now about to be made.\n   For more\
    \ complex services, the requesting telephone is often\n   connected via its \"\
    local\" CO to a Service Node (SN), where the user\n   can be played prompts and\
    \ can specify the parameters of his or her\n   request in a more flexible manner.\
    \  This is shown below, in Figures\n   4a and 4b. For more details of the operation\
    \ of the Service Node (and\n   other Intelligent Network units), see the Appendix.\n\
    \   When the SN is involved in the request and in the call setup process,\n  \
    \ it appears, to the CO, to be another PSTN terminal. As such, the\n   initial\
    \ request is routed to the Service Node, which, as an end\n   system, then makes\
    \ two independent calls \"out\" to A' and B'.\n                             /--\\\
    \         [---]\n                            ()  ()        [SN ]\n           \
    \                   --___       [|--]\n                             /++\\  \\\
    \       |\n                            /----\\  \\      |\n                  \
    \                   \\     |\n                               A      \\   [|-!]\n\
    \                                       \\->[CO ]\n                          \
    \                [---]\n                            Time = 13:55\n           \
    \                      Figure 4a\n   Key: ___   Access Lines\n        ===   Trunk\
    \ Links (inter-CO user data links)\n        ...   Inter-CO signaling network links\n\
    \        CO    Central Office (Telephone Exchange)\n        SN    Service Node\n\
    \    /--\\         [---]\n   ()  ()        [SN ]\n     --          [|--]     \
    \                                      /--\\\n    /  \\<--       |   ...............................\
    \           ()  ()\n   /----\\  \\      |  ^             !                !  \
    \           --\n            \\     | /              v                v       \
    \     /  \\\n      A'     \\   [|-!]            [-!-]            [-!-]     ->-/----\\\
    \n              \\--[CO ]            [CO ]            [CO ]    /\n           \
    \      [---]            [---]            [---]___/      B'\n   Time = 14:00\n\
    \                                 Figure 4b\n   Note that in both cases as shown\
    \ in Figures 3 and 4 a similar service\n   can be provided in which the B' telephone\
    \ is replaced by an\n   Intelligent Peripheral (or an Special Resource Functional\
    \ entity\n   within a Service Node), playing an announcement. This allows a \"\
    wake\n   up\" call to be requested, with the Intelligent Peripheral or Service\n\
    \   Node Special Resource playing a suitable message to telephone A' at\n   the\
    \ specified time. Again, for more details of the operation of the\n   Special\
    \ Resources (and other Intelligent Network units), see the\n   Appendix.\n"
- title: 4.2 Pre-PINT Systems
  contents:
  - "4.2 Pre-PINT Systems\n   Although the pre-PINT systems reported here (i.e., those\
    \ developed by\n   AT&T, Lucent, Siemens and Nortel) vary in the details of their\n\
    \   operation, they exhibit similarities in the architecture. This\n   section\
    \ highlights the common features. Specific descriptions of\n   these systems will\
    \ follow.\n   All of the systems can be seen as being quite similar to that shown\n\
    \   in the following diagram. In each case, the service is separated into\n  \
    \ two parts; one for the request and another for execution of the\n   service.\
    \ Figure 5 summarizes the process.\n                                _____\n  \
    \            __          _____/     \\_____\n             [__]        /      \
    \           \\\n            [-++-]-.-.>.-.   Internet       .-.-\n           \
    \              \\_____     _______/   .\n                               \\___/\
    \           v\n                                       [----]  .\n            \
    \                           [PINT]-.-\n                                      \
    \ [----]\n                                         %\n                       \
    \                  v\n                                       [---]\n         \
    \                              [SN ]\n                                       [|--]\n\
    \                                 Figure 5a\n   Key: CO    Central Office (Telephone\
    \ Exchange)\n        SN    Service Node\n        PINT  PSTN/Internet Gateway\n\
    \        .-.-. Internet Access Link\n        %%%   Gateway/Service Node Link\n\
    \        ___   PSTN Access Lines\n        ===   PSTN Trunk Links (inter-CO user\
    \ data links)\n        ...   Inter-CO signaling network links\n              \
    \         _____\n     __          _____/     \\_____\n    [__]        /      \
    \           \\\n   [----]-.-.-.-.   Internet       .-.-\n                \\_____\
    \     _______/   .\n                      \\___/           |\n               \
    \               [----]  .\n                              [PINT]-.-\n         \
    \                     [-%--]\n                                %\n            \
    \                    %\n                 /--\\         [-%-]\n               \
    \ ()  ()        [SN ]\n                  --          [|--]                   \
    \            /--\\\n                 /  \\<--       |    ....................\
    \         ()  ()\n                /----\\  \\      |   ^        !          ! \
    \          --\n                         \\     |  /         v          v     \
    \     /  \\\n                   A'     \\   [|-!]       [-!-]      [-!-]    ->-/----\\\
    \n                           \\--[CO ]=======[CO ]======[CO ]   /\n          \
    \                    [---]       [---]      [---]__/      B'\n               \
    \                  Figure 5b\n   Comparing Figure 4a with Figure 5a, the differences\
    \ lie in the way\n   that the information specifying the request is delivered\
    \ to the\n   Service Node. In the PSTN/IN method shown in the earlier diagram,\
    \ the\n   user connects to the SN from the telephone labeled A, with the\n   connection\
    \ being routed via the CO. In the latter case, the request\n   is delivered from\
    \ an Internet node, via the PINT gateway, and thence\n   to the Service Node over\
    \ a \"private\" link. The effect is identical,\n   in that the request for service\
    \ is specified (although the actual\n   parameters used to specify the service\
    \ required may differ somewhat).\n   The figures depicting the respective service\
    \ execution phases\n   (Figures 4b and 5b) show that the operation, from the IN/PSTN\n\
    \   perspective, is again identical. The Service Node appears to initiate\n  \
    \ two independent calls \"out\" to telephones A' and B'.\n   The alternative systems\
    \ developed by AT&T and by Nortel allow another\n   option to be used in which\
    \ the PINT Gateway does not have to connect\n   to the PSTN via a Service Node\
    \ (or other Intelligent Network\n   component), but can instead connect directly\
    \ to Central Offices that\n   support the actions requested by the gateway. In\
    \ these alternatives,\n   the commands are couched at a \"lower level\", specifying\
    \ the call\n   states required for the intended service connection rather than\
    \ the\n   service identifier and the addresses involved (leaving the\n   Intelligent\
    \ Network components to coordinate the details of the\n   service call on the\
    \ gateway's behalf). In this way the vocabulary of\n   the commands is closer\
    \ to that used to control Central Offices. The\n   difference really lies in the\
    \ language used for the services\n   specification, and all systems can use the\
    \ overall architecture\n   depicted in Figure 5; the only question remains whether\
    \ the\n   Intelligent Network components are actually needed in these other\n\
    \   approaches.\n   The following diagram (Figure 6) shows the interface architecture\n\
    \   involved in providing the kind of service mentioned above.\n             \
    \               Internet  __                     __\n                        \
    \    Server   [__]        _______    [__]\n                               [W3S-]-.\
    \ ___/    .-.-.-[W3C-] Internet\n                     _________________|/.-.-.-.-.\
    \   \\         Terminal\n                    /               .. .            \
    \ \\\n                    | Internet     / .  \\             |\n             \
    \       \\___________  .  .   .           /\n                                \\\
    /___|____\\_________/\n                                .    .      .\n       \
    \                        /      |       \\\n                            (A)  \
    \    (B)      (E)\n                           .          .          .\n      \
    \                   _|_         _|_         _|_\n                        [SN ]<-(D)--[SMS]--(H)->[SCP]\n\
    \                        [|-|]        ---        [-!-]\n                     \
    \   /  \\                      !\n                      (C)  (I)   ...........(F)...!.(G).\n\
    \                     /        \\  !                     !\n                 \
    \ [--|]       [|-!]                  [-!-]\n                  [CO ]       [MSC]\
    \                  [SSP]\n                  [---]       [---] \\|/           \
    \   [---]\n             /--\\   |           |____|                 |   /--\\\n\
    \            ()/\\()  |                                  |  ()/\\()\n        \
    \     /--\\___|                1                 |___/--\\\n    Fixed PSTN Terminal\
    \             []            Fixed PSTN Terminal\n                            \
    \ Mobile Terminal\n   Key: W3S   HTTP (Web) Server\n        W3C   HTTP (Web) Client/Browser\n\
    \        CO    Central Office (Telephone Exchange)\n        MSC   Mobile Switching\
    \ Center (Mobile Network Telephone\n              Exchange)\n        SN    Service\
    \ Node\n        SSP   Service Switching Point\n        SCP   Service Control Point\n\
    \        SMS   Service Management System\n        .-.-. Internet relationship\n\
    \        ___   PSTN Access relationship\n        ...   PSTN \"core\" signaling\
    \ relationship\n                                 Figure 6\n   The interfaces are:\n\
    \   A    The interface over which Internet requests for service are\n        delivered\
    \ to the Service Node\n   B    The interface over which Service Management requests\
    \ are sent\n        from the Internet to the Service Management System\n   C \
    \   The interface over which the Service Node sends call control\n        requests\
    \ to a connected Central Office\n   D    The interface over which the Service\
    \ Management System manages\n        the Service Node\n   E    The interface over\
    \ which Internet requests for service are\n        delivered to the Service Control\
    \ Point\n   F    The interface over which the Service Control Point sends service\n\
    \        call control requests to the Mobile Switching Center\n   G    The interface\
    \ over which the Service Control Point sends service\n        control requests\
    \ to the Service Switching Point\n   H    The interface over which the Service\
    \ Management System manages\n        the Service Control Point\n   I    The interface\
    \ over which the Service Node sends service call\n        control requests to\
    \ the Mobile Switching Center\n   In practice, a number of the interfaces have\
    \ very similar purposes to\n   one another. The means by which these purposes\
    \ are achieved differ,\n   in that some of the interfaces (C and I) reflect access\
    \ arrangements,\n   whilst others (F and G) imply a \"core\" signaling relationship.\n\
    \   However, it is possible to categorize them in terms of the \"intent\"\n  \
    \ of messages sent across the interfaces.\n   For example, Interfaces A and E\
    \ are similar; one of the main aims of\n   PINT work is to ensure that they are\
    \ the same. Similarly, Interfaces\n   D and H imply similar actions and are likely\
    \ to carry similar\n   messages. Interfaces C, F, G, and I are all used to request\
    \ that a\n   call be initiated, albeit via access or core signaling relationships.\n\
    \   The interfaces can also be viewed in terms of the kind of components\n   that\
    \ are involved and the bodies by which they are codified.\n   Interfaces A, B,\
    \ and E are all going to be realized as Internet\n   Protocols.  All of the others\
    \ use existing protocols in the PSTN/IN.\n   Traditionally, these have been codified\
    \ by different groups, and this\n   is likely to be the case in the PINT work.\n\
    \   The general arrangements for the different systems are shown below\n   (Figures\
    \ 7, 8, 9, and 10). They differ in the details of their\n   configurations, but\
    \ the main tasks they perform are very similar, and\n   so the overall operation\
    \ is similar to the generic architecture shown\n   in Figures 5 and 6.\n   Key\
    \ for following diagrams:\n       Components:\n   W3C     World Wide Web Client\n\
    \   W3S     World Wide Web Server\n   WSA     Web Server \"Back End Program\"\
    \ Interface (CGI or Servlet\n           interface)\n   Srvlt   Servlet \"back\
    \ end\" program/objects\n   FS      Finger Server\n   SCTPC   Simple Computer\
    \ Telephony Protocol Client\n   SCTPS   Simple Computer Telephony Protocol Server\n\
    \   CBC     CallBroker Client\n   CBS     CallBroker Server\n   SSTPC   Service\
    \ Support Transport Protocol Client\n   SSF     Service Switching Function\n \
    \  SCF     Service Control Function\n   SRF     Special Resource Function\n  \
    \ CO      Central Office/ Public Telephone Exchange\n   SSP     Service Switching\
    \ Point\n   SCP     Service Control Point\n   SR/I.IP Special Resource/ \"Internet\"\
    \ Intelligent Peripheral\n   SMS     Service Management System\n   INAPAd  Intelligent\
    \ Network Application Part Adaptor\n   PktFlt  Packet Filter (Firewall)\n   SNMPAg\
    \  Simple Network Management Protocol Agent\n       Protocols:\n   P0    HyperText\
    \ Transfer Protocol\n   P1    HTTP Server <-> \"Back End Program\" internal protocol\n\
    \   P2    CallBroker Client <-> CallBroker Server protocol (AT&T system),\n  \
    \    or SCTP Client <-> Server protocol (Nortel system)\n   P3    PINT User Agent\
    \ <-> PINT Gateway protocol\n   P4    Intra-Intelligent Network protocol (e.g.,\
    \ INAP)\n   P5    Proprietary (INAP-based) Gateway-> I.IP protocol\n   P6    Finger\
    \ protocol\n   P7    Digital Subscriber Signaling 1 protocol\n   P8    Simple\
    \ Network Management Protocol\n   P9    SMS <-> Service Control Point/Service\
    \ Node protocol\n    _____             _______             _____\n   |[W3C]|----(p0)-->|\
    \ [W3S] |<--(p0)----|[W3C]|\n   |[---]|           | [WSA] |           |[FS.]|\n\
    \   |-----|           |   !   |           |[-!-]|\n                     |  (p1)\
    \ |           |--\\--|\n                     |   !   |               ^\n     \
    \                |   !   |               (p6)\n                     |   !   |\
    \                 \\\n                     |  (p1) |                  \\\n   \
    \                  |   !   |                   \\\n                     |[Srvlt]|\
    \                    \\\n                     |___!___|                     \\\
    \n                         !                          \\\n                   \
    \     (p3)                         \\\n Internet                !            \
    \                !\n .+.+.+.+.+.+.+.+.+.+.+. v .+.+.+.+.+.+.+.+.+.+.+.+.+.!.+.+.+.+.+.\n\
    \ PSTN/IN  _______________!_________________       ____!_____ __________\n   \
    \       |I         [PktFlt]            I|       |[PktFlt]| |[PktFlt]|\n      \
    \    |N          Gateway            N|       |   !    | |   !    |\n         \
    \ |A ___________________________ A|       |   !    | |   !    |\n          |P\
    \ |                         | P|       |   !    | |[SNMPAg]|\n  -(p4)-- |A | <-(p4)->\
    \ [SCP] <-(p4)-> | A|-(p5)->|[SR/IIP]| | [SMS]  |\n  \\       |d |          [-^-]\
    \          | d|       |[------]| | [-^-]  |\n   \\      |__|            !    \
    \        |__|       |________| |___!____|\n    \\                     !      \
    \                                !\n   [-v-]                  !-----------------(p9)-----------------!\n\
    \   [SSP]\n   [---]\n ___| |______\n |           |\n |  /--\\     |    /--\\\n\
    \ | ()/\\()    |   ()/\\()\n |__/__\\     |____/__\\\n                 Figure\
    \ 7: The Siemens Web Call Center\n    _____             _______\n   |[W3C]|----(p0)-->|\
    \ [W3S] |\n   |[---]|           | [WSA] |\n   |-----|           |   !   |\n  \
    \                   |  (p1) |\n                     |   !   |\n              \
    \       |   !   |\n                     |   !   |\n                     |  (p1)\
    \ |\n                     |   !   |\n                     |[SSTPC]|-<----------------------------------\n\
    \                     |___!___|                                   !\n        \
    \                 !                                      (p8)\n              \
    \          (p3)                                     !\n Internet             \
    \   !                                       v\n .+.+.+.+.+.+.+.+.+.+.+. v .+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.\
    \ ! .+.+\n PSTN/IN  _______________!__________________________________ ____!_____\n\
    \          |          [PktFlt]        Service       [PktFlt]| |[PktFlt]|\n   \
    \       |              !             Node                | |   !    |\n      \
    \    |        [SCF Adaptor]                           | |   !    |\n         \
    \ |               !                                | |[SNMPAg]|\n          |[SSF]<-(p4)->[SCF]\
    \ <-------(p4)--------> [SRF]  | | [SMS]  |\n          |[|--]        [-^-]   \
    \                    [---]  | | [-^-]  |\n          |_|_____________!________________________________|\
    \ |___!____|\n            |             !                                    \
    \  !\n   [-v-]  (p7)            !-----------------(p9)-----------------!\n   [CO.]____|\n\
    \   [---]\n ___| |_______\n |           |\n |  /--\\     |    /--\\\n | ()/\\\
    ()    |   ()/\\()\n |__/__\\     |____/__\\\n                      Figure 8: The\
    \ Lucent System\n    _____             ________\n   |[W3C]|----(p0)-->| [W3S]\
    \  |\n   |[---]|           | [WSA]  |\n   |-----|           |   !    |\n     \
    \                |  (p1)  |\n                     |   !    |\n               \
    \      |[WS/CBS]|\n                     |[Adaptr]|\n                     |___!____|\n\
    \                         ^\n                        (p2)\n    _____         \
    \    ___v____\n   |[CBC]|           | [CBS]  |\n   |[---]|<---(p2)-->| [---] \
    \ |-<---------------------------------\n   |-----|           |___!____|      \
    \                            !\n                         !                   \
    \                   (p8)\n                        (p3)                       \
    \              !\n Internet                !                                 \
    \      v\n .+.+.+.+.+.+.+.+.+.+.+. v .+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+. ! .+.+\n\
    \ PSTN/IN  _______________!__________________________________ ____!_____\n   \
    \       |          [PktFlt]        Service       [PktFlt]| |[PktFlt]|\n      \
    \    |              !             Node                | |   !    |\n         \
    \ |        [SCF Adaptor]                           | |   !    |\n          | \
    \              !                                | |[SNMPAg]|\n          |[SSF]<-(p4)->[SCF]\
    \ <-------(p4)--------> [SRF]  | | [SMS]  |\n          |[|--]        [-^-]   \
    \                    [---]  | | [-^-]  |\n          |_|_____________!________________________________|\
    \ |___!____|\n            |             !                                    \
    \  !\n   [---]  (p7)            !-----------------(p9)-----------------!\n   [CO.]____|\n\
    \   [---]\n ___| |_______\n |           |\n |  /--\\     |    /--\\\n | ()/\\\
    ()    |   ()/\\()\n |__/__\\     |____/__\\\n                       Figure 9:\
    \ The AT&T System\n    _____             ________\n   |[W3C]|----(p0)-->| [W3S]\
    \  |\n   |[---]|           | [WSA]  |\n   |-----|           |   !    |\n     \
    \                |  (p1)  |\n                     |   !    |\n               \
    \      |[WS/   ]|\n                     |[ SCTPS]|\n                     |[Adaptr]|\n\
    \                     |___!____|\n                         ^\n               \
    \         (p2)\n  _______             ___v___\n |[SCTPC]|           |[SCTPS]|\n\
    \ |[-----]| <-(p2)--> |[-----]|-<----------------------------------\n |-------|\
    \           |___!___|                                   !\n                  \
    \       !                                      (p8)\n                        (p3)\
    \                                     !\n Internet                !          \
    \                             v\n .+.+.+.+.+.+.+.+.+.+.+. v .+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.\
    \ ! .+.+.\n PSTN/IN  _______________!__________________________________ ____!_____\n\
    \          |          [PktFlt]        Service       [PktFlt]| |[PktFlt]|\n   \
    \       |              !             Node                | |   !    |\n      \
    \    |        [SCF Adaptor]                           | |   !    |\n         \
    \ |               !                                | |[SNMPAg]|\n          |[SSF]<-(p4)->[SCF]\
    \ <-------(p4)--------> [SRF]  | | [SMS]  |\n          |[|--]        [-^-]   \
    \                    [---]  | | [-^-]  |\n          |_|_____________!________________________________|\
    \ |___!____|\n            |             !                                    \
    \  !\n   [---]  (p7)            !-----------------(p9)-----------------!\n   [CO.]____|\n\
    \   [---]\n ___| |_______\n |           |\n |  /--\\     |    /--\\\n | ()/\\\
    ()    |   ()/\\()\n |__/__\\     |____/__\\\n                      Figure 10:\
    \ The Nortel System\n   As these are independent systems developed by different\
    \ groups, the\n   names of the components, unsurprisingly, don't match. Some features\n\
    \   are offered by one of the systems, while they aren't by others.\n   However,\
    \ there are a number of common features. All of the systems\n   provide a Web-based\
    \ interface (at least as an option), using \"back\n   end\" programs to construct\
    \ protocols to pass onwards to the\n   Intelligent Network system.\n   Several\
    \ Intelligent Network Functional Entities are combined into a\n   Service Node\
    \ in the Lucent, AT&T , and Nortel systems, while in the\n   Siemens scheme they\
    \ are separate units. However, this is not\n   particularly important for the\
    \ provision of the services they offer.\n   The main difference lies in whether\
    \ or not the SCF is \"aware\" of the\n   Internet interface and has been modified\
    \ to be \"complicit\" in\n   supporting these Internet requests. The Siemens approach\
    \ was to re-\n   use an existing SCP, providing a gateway function to translate\
    \ as\n   needed.  The Lucent system used a \"lighter weight\" SCF adapter to\n\
    \   terminate the Internet protocols, as the SCF was modified to support\n   the\
    \ Internet interface directly.\n   The AT&T CallBroker and Nortel SCTP Servers\
    \ introduce an intermediate\n   protocol (labeled p2) that allows an alternative\
    \ to the Web based\n   interface supported by the others. This protocol matches\
    \ the\n   \"CallBroker Client API\", or the \"SCTP Client API\". These options\n\
    \   provide for a bi-directional protocol, with indications sent from the\n  \
    \ Call Broker or SCTP Server to the Client as needed.  This is not\n   easily\
    \ possible using an HTTP-based scheme (and in the Siemens case,\n   a dedicated\
    \ Finger client/server pair was used to emulate such an\n   interface)\n   The\
    \ protocol between the Internet server and the Intelligent Network\n   (labeled\
    \ p3 in the above diagrams) differs in each of the systems.\n   One of the main\
    \ aims of future work will be to develop a common\n   protocol that will support\
    \ the services offered, so that the p3\n   interface will allow different implementations\
    \ to inter-operate. In\n   the Lucent, Siemens, and Nortel systems, this was an\
    \ \"internal\"\n   protocol, as it was carried between entities within the Service\
    \ Node\n   or Gateway.\n   Other contrasts between the systems lie in the support\
    \ for Internet\n   access to Service Management, and access to the Internet by\
    \ Special\n   Resources. Internet Management access was most developed in the\n\
    \   Lucent system, in which a Simple Network Management Protocol (SNMP)\n   agent\
    \ was provided to allow inter-operation with the SMS controlling\n   the Service\
    \ Node. In the Siemens scheme, the SMS had no direct\n   Internet access; any\
    \ management actions were carried out within the\n   normal PSTN management activities.\
    \ As for Internet access to special\n   resources, this was only required by the\
    \ Siemens system as part of\n   its support for Call Center agent notification.\
    \ Equivalent\n   functionality would be provided in the AT&T and Nortel systems\
    \ as\n   mentioned above, and this would in turn be associated with event\n  \
    \ notifications being sent as part of their (p3) Internet/IN protocol.\n   These\
    \ differences reflect the different emphases in the products as\n   they were\
    \ developed; again, future work will have to ensure that\n   common protocols\
    \ can be used to support the chosen services fully.\n"
- title: 5. IN-Based Solutions
  contents:
  - '5. IN-Based Solutions

    '
- title: 5.1 The Lucent System
  contents:
  - "5.1 The Lucent System\n   Figure 11 depicts the overall interconnection architecture\
    \ of the\n   Lucent prototype in support of the four PINT services. The IN-based\n\
    \   architecture utilizes the Service Node and Service Management System\n   in\
    \ addition to the Web server, which enables Web-based access to the\n   PINT services.\
    \ This section summarizes the roles of these elements\n   (complemented by a click-to-dial-back\
    \ service scenario), outlines the\n   interfaces of Web Server-Service Node and\
    \ Web Server-Service\n   Management System (i.e., the interfaces A & B), and addresses\
    \ the\n   common security concerns.\n"
- title: 5.1.1 Roles of the Web Server, Service Node, and Service Management
  contents:
  - "5.1.1 Roles of the Web Server, Service Node, and Service Management\n      System\n\
    \   Web Server\n   The Web Server stores the profiles of content providers as\
    \ well as\n   pre-registered users. The content provider profile contains\n  \
    \ information such as content provider ID, telephone number, and fax\n   number.\
    \ In addition, the profile may also include service logic that\n   specifies,\
    \ for example, the telephone (or fax) number to be reached\n   based on time of\
    \ the day, day of the week, or geographical location\n   of the user, and the\
    \ conditions to accept the charge of the calls.\n   Similar to the content provider\
    \ profile, the pre-registered user\n   profile contains information such as user\
    \ name, password, telephone\n   number, and fax number. The last two pieces of\
    \ information can also\n   be linked to time of the day and day of the week so\
    \ the user can be\n   reached at the appropriate telephone (or fax) number accordingly.\n\
    \   Service Node\n   Situated in the PSTN, the SN, like the SCP, performs the\
    \ service\n   control function [1, 2, 3]. It executes service logic and instructs\n\
    \   switches on how to complete a call. The SN also performs certain\n   switching\
    \ functions (like bridging of calls) as well as a set of\n   specialized functions\
    \ (like playing announcements, voice recognition\n   and text-to-speech conversion).\n\
    \   Service Management System\n   The SMS performs administration and management\
    \ of service logic and\n   customer-related data on the SN. It is responsible\
    \ for the\n   replication of content provider profiles and provision of these\
    \ data\n   on the SN. These functions are non-real time.\n    Web Users\n    \
    \                              ____________\n    O --------------------------\
    \  | Internet |-------------------\n                                  ------------\
    \                  |\n                                                       \
    \         |\n                                                                |\n\
    \   ----------------            --------------               ------------\n  \
    \ | Service Node |     D      | Service    |       B       |Web Server|\n   |\
    \     (SN)     |------------| Management |---------------|          |\n   |  \
    \            |            |System (SMS)|               |          |\n   |    \
    \          |      A     --------------               |          |\n   |      \
    \        |-----------------------------------------|          |\n   ----------------\
    \                                         ------------\n      |         |\n  \
    \    | I       | C\n      |         |\n   ----------- ---------\n   |Mobile  \
    \ | |Central|\n   |Switching| |Office |\n   | Center  | ---------\n   -----------\
    \     |\n        |          |\n        |          |\n        O          O\n  \
    \     Mobile      Wireline PSTN\n       Users       Users\n   Figure 11: Overall\
    \ Interconnection Architecture of the Lucent System\n"
- title: 5.1.2 A Click-to-Dial-Back Service Scenario
  contents:
  - "5.1.2 A Click-to-Dial-Back Service Scenario\n   A Web user, who has simultaneous\
    \ access to the Web and telephone\n   services (this can be achieved, for example,\
    \ by having an ISDN\n   connection), is browsing through a sales catalogue and\
    \ deciding to\n   speak to a sales representative.\n   When the Web user clicks\
    \ a button inviting a telephone call from the\n   sales office, the Web Server\
    \ sends a message to the SN over the A\n   interface, thus crossing the Internet-to-PSTN\
    \ boundary. By matching\n   the information received from the Web Server with\
    \ the content\n   provider profile that had been previously loaded and activated\
    \ by the\n   SMS over the D interface, the SN recognizes the signal.\n   At this\
    \ point, the SN calls the Web user. The user answers the call,\n   hears an announcement,\
    \ e.g., \"Please wait, while we are connecting\n   you to the sale agent\", and\
    \ is waiting to be connected to the sale\n   agent. Then the SN invokes service\
    \ logic as indicated in the profile.\n   The execution of this logic selects an\
    \ appropriate sales agent to\n   call based on the time of the day. It is 8 P.M.\
    \  in New York where\n   the Web user is located, and the New York sales office\
    \ has closed.\n   The San Francisco office, however, is still open, and so the\
    \ SN makes\n   a call to an agent in that office. Finally, the SN bridges the\
    \ two\n   calls and establishes a two-party call between the sales agent and\n\
    \   the Web user.\n"
- title: 5.1.3 Web Server-Service Node Interface
  contents:
  - "5.1.3 Web Server-Service Node Interface\n   Lucent developed the Service Support\
    \ Transfer Protocol (SSTP) for\n   communications between the SN and Web Server.\
    \ SSTP is of a\n   request/response type running on top of a reliable transport\
    \ layer,\n   such as TCP. The Web Server sends a request to the SN to invoke a\n\
    \   service and the SN responds with a message indicating either success\n   or\
    \ failure. Note that SSTP engages only the service control function\n   [1, 2,\
    \ 3] of the SN.\n"
- title: 5.1.3.1 Web Server to Service Node
  contents:
  - "5.1.3.1 Web Server to Service Node\n   In this direction, three kinds of messages\
    \ may be sent: the\n   Transaction Initiator message, the Data Message, and the\
    \ End of Data\n   message.\n   The latter two messages are needed if the service\
    \ to be invoked\n   involves data (such as the case in click-to-fax, click-to-fax-back\n\
    \   and voice-access-to-content). This was so designed to handle the\n   varying\
    \ size of data and to ensure that the size of each stream is\n   within the allowable\
    \ size of the underlying transport packet data\n   unit (imposed by some implementations\
    \ of TCP/IP).\n   a. Transaction Initiator\n   This message provides all the necessary\
    \ information but data for\n   invoking a service. It includes the following information\
    \ elements:\n   + Transaction ID, which uniquely specifies a service request.\
    \ The\n   same transaction ID should be used for all the accompanying data-\n\
    \   related messages, if the service request involves data. One way for\n   generating\
    \ unique transaction IDs is to concatenate the information:\n   date, time, Web\
    \ Server ID (uniquely assigned for each one connected\n   to the SN), and transaction\
    \ sequence number (a cyclic counter\n   incremented for each service request).\n\
    \   + Service ID, which specifies the service to be invoked. The service\n   may\
    \ be click-to-dial-back, click-to-fax, click-to-fax-back or voice-\n   access-to-content.\n\
    \   + Content Provider ID, which uniquely represents the content\n   provider.\
    \ This information is the key to accessing the content\n   provider's service\
    \ logic and data on the SN.\n   + Content Provider Directory Number, which is\
    \ the telephone or fax\n   number of the content provider to be called through\
    \ the PSTN.\n   + User Directory Number, which is the telephone or fax number\
    \ of the\n   user requesting the service.\n   + Billed Party, which specifies\
    \ the party (either the user or content\n   provider), to be billed.\n   In addition,\
    \ optional parameters may be sent from the Web Server to\n   the SN. For example,\
    \ a retry parameter may be sent to specify the\n   number of times the SN will\
    \ attempt to complete a service request\n   upon failure before the transport\
    \ connection times out.\n   b. Data Message\n   This message provides the (encapsulated)\
    \ user data part of a service\n   request. For example, in the case of click-to-fax-back\
    \ such data are\n   the content to be faxed to the user. Each message is composed\
    \ of the\n   transaction ID and a data segment. The transaction ID must be the\n\
    \   same as that of the transaction initiator part first invoking the\n   service.\n\
    \   c. End of Data Message\n   This message contains the transaction ID and the\
    \ end of data\n   delimiter. The transaction ID is the same as that of the relevant\n\
    \   transaction initiator message.\n"
- title: 5.1.3.2 Service Node to Web Server
  contents:
  - "5.1.3.2 Service Node to Web Server\n   The SN must respond to a service request\
    \ from the Web Server. The\n   response message consists of the information elements:\n\
    \   transaction ID, service type, result, time, and error code.\n   + Transaction\
    \ ID, which is the same as that of the original service\n   request.\n   + Service\
    \ Type, which is the same as that of the original service\n   request.\n   + Result,\
    \ which is either success or failure.\n   + Time, which indicates the time of\
    \ the day completing the request.\n   + Error Code, which gives the reason for\
    \ failure. Possible reasons\n   for failure are content provider telephone (or\
    \ fax) busy, content\n   provider telephone (or fax) no answer, user telephone\
    \ busy, user\n   refusal to complete, user no answer, nuisance control limit reached,\n\
    \   and content provider telephone (or fax) not in the SN database.\n"
- title: '5.1.3.3 Usage Scenarios: Click-to-Fax and Click-to-Fax-Back'
  contents:
  - "5.1.3.3 Usage Scenarios: Click-to-Fax and Click-to-Fax-Back\n   For the click-to-fax\
    \ and click-to-fax-back services, the Lucent\n   system implemented only the case\
    \ where the data to be sent as\n   facsimile reside in the Web server. There are\
    \ at least three messages\n   that need to be sent from the Web server to the\
    \ Service Node for\n   these services.\n   The first message is the Transaction\
    \ Initiator that identifies the\n   service type as well as a unique Transaction\
    \ ID. It also includes the\n   sender/receiver fax number.\n   The next is one\
    \ or more messages of the data to be faxed. Each\n   message carries the same\
    \ unique Transaction ID as the above.\n   Last comes the end of message. It consists\
    \ of the Transaction ID\n   (again, the same as that of the messages preceding\
    \ it) and the end of\n   data delimiter.\n   Upon receiving these messages, the\
    \ Service Node, equipped with the\n   special resource of a fax card, converts\
    \ the data into the G3 format,\n   calls the receiver fax, and sends back the\
    \ result to the Web server\n   immediately.  Note that the receiver fax busy or\
    \ no answer is\n   interpreted as failure. Further, while the receiver fax answering\
    \ the\n   call is interpreted as success, it does not necessarily mean that the\n\
    \   fax would go through successfully.\n"
- title: 5.1.4 Web Server-SMS Interface and SNMP MIB
  contents:
  - "5.1.4 Web Server-SMS Interface and SNMP MIB\n   This interface is responsible\
    \ for uploading the content provider\n   profile from the Web Server to the SMS\
    \ and for managing the\n   information against any possible corruption. The SN\
    \ verifies the\n   Content Provider ID and the Content Provider Directory Number\
    \ sent by\n   the Web Server with the content provider profile pre-loaded from\
    \ the\n   SMS.\n   The content provider profile was based on ASN.1 [4] structure\
    \ and\n   SNMP [5] was used to set/get the object identifiers in the SMS\n   database.\n\
    \   Following is an example of the simple MIB available on the SMS.\n   inwebContProviderTable\
    \ OBJECT-TYPE\n           SYNTAX          SEQUENCE OF InwebContProviderEntry\n\
    \           MAX-ACCESS      not-accessible\n           STATUS          current\n\
    \           DESCRIPTION\n                   \" A table containing Content Provider\
    \ profiles \"\n           := { inweb 1}\n   inwebContProviderEntry OBJECT-TYPE\n\
    \           SYNTAX          InwebContProviderEntry\n           MAX-ACCESS    \
    \  not-accessible\n           STATUS          current\n           DESCRIPTION\n\
    \                   \" A conceptual row of the inweb. Each row\n             \
    \              contains profile of one Content Provider\"\n           INDEX  \
    \ { inwebSmsNumber }\n           := { inwebContProviderTable 1 }\n   InwebContProviderEntry\
    \ := SEQUENCE {\n           inwebSmsNumber                  Integer32,\n     \
    \      inwebContentProviderId          Integer32,\n           inwebContentProviderPhoneNumber\
    \ Integer32,\n           inwebContentProviderFaxNumber   Integer32\n         \
    \  }\n   inwebSmsNumber OBJECT-TYPE\n           SYNTAX          Integer32\n  \
    \         MAX-ACCESS      read-only\n           STATUS          current\n    \
    \       DESCRIPTION\n                   \" Serial number of the SMS - used for\
    \ SNMP indexing \"\n           := { inwebContProviderEntry 1 }\n   inwebContentProviderId\
    \ OBJECT-TYPE\n           SYNTAX          Integer32\n           MAX-ACCESS   \
    \   read-create\n           STATUS          current\n           DESCRIPTION\n\
    \                   \" A number that uniquely identifies each Content\n   Provider\
    \ \"\n           := { inwebContProviderEntry 2 }\n   inwebContentProviderPhoneNumber\
    \ OBJECT-TYPE\n           SYNTAX          Integer32\n           MAX-ACCESS   \
    \   read-create\n           STATUS          current\n           DESCRIPTION\n\
    \                   \" Content Provider's Phone Number \"\n           := { inwebContProviderEntry\
    \ 3 }\n   inwebContentProviderFaxNumber OBJECT-TYPE\n           SYNTAX       \
    \   Integer32\n           MAX-ACCESS      read-create\n           STATUS     \
    \     current\n           DESCRIPTION\n                   \" Content Provider's\
    \ Fax Number \"\n           := { inwebContProviderEntry 4 }\n"
- title: 5.1.5 Security Considerations
  contents:
  - "5.1.5 Security Considerations\n   The Lucent prototype addressed the security\
    \ issues concerning the\n   interface between the Web Server and the SN. Those\
    \ concerning the\n   interface between the Web Server and SMS, which was based\
    \ in SNMP,\n   were handled by the built-in security features of SNMP.\n   + Secure\
    \ Communication Links\n   If the Network Operator (PSTN provider) is also the\
    \ Web Service\n   provider, the Web Server and SN/SMS will communicate over a\
    \ corporate\n   intranet. This network is almost always protected by the\n   corporation's\
    \ firewall and so can be deemed secure. This was the case\n   handled by the Lucent\
    \ prototype.\n   Nevertheless, if different corporations serve as the Network\
    \ Operator\n   and the Web Service Provider, then it is likely that there may\
    \ not\n   exist a dedicated secure communication link between the Web Server\n\
    \   and SN/SMS. This raises serious security considerations. One possible\n  \
    \ solution is to use Virtual Private Networks (VPN). VPN features\n   support\
    \ authentication of the calling and called parties and\n   encryption of the messages\
    \ sent over insecure links (such as those on\n   the Internet).\n   + Non-Repudiation\n\
    \   All transactions were logged on both the Web Server and the Service\n   Node\
    \ to account for all operations in case of doubt or dispute. The\n   log information\
    \ on the SN may also be used to generate bills.\n   + Malicious Requests of Users\n\
    \   A user may make repeated requests to a content provider directory\n   number\
    \ maliciously. This scenario was handled by setting a Nuisance\n   Control Limit\
    \ (NCL) on either the SN or the Web Server or both. The\n   NCL has two parameters:\
    \ one defining the number of requests from a\n   user and the other the period\
    \ over which these requests takes place.\n   A user may also attempt to request\
    \ a call from a directory number\n   other than that of a content provider. This\
    \ scenario was handled by\n   verifying the directory number (and the content\
    \ provider ID) against\n   the database on the SN containing all the content provider\n\
    \   information. If the directory number (or the content provider ID) was\n  \
    \ not in the database, the request would be rejected.\n"
- title: 5.2 Siemens Web Call Center
  contents:
  - '5.2 Siemens Web Call Center

    '
- title: 5.2.1 Service Description
  contents:
  - "5.2.1 Service Description\n   The Web Call Center is an Intelligent Network System\
    \ that accepts\n   requests from Internet nodes for services to be provided on\
    \ the PSTN.\n   As the name suggests, it was designed to support a cluster of\n\
    \   services that, taken together, provide a subset of the features of a\n   Call\
    \ Center, with almost all user interactions provided via World\n   Wide Web requests\
    \ and responses. See the appendix for a background\n   description of Call Center\
    \ Features.\n   From an Intelligent Network perspective, there are a number of\n\
    \   services that, when combined, provide the Call Center features. The\n   Call\
    \ Center features as implemented supported the scenario in which a\n   customer\
    \ makes a request to be called back by an agent at a time of\n   the customer's\
    \ choosing to discuss an item of interest to him or her.\n   The agent will be\
    \ selected based on his or her availability and\n   expertise in this topic; the\
    \ agent will be told whom he or she is\n   calling and the topic of interest,\
    \ and then the agent will be\n   connected to the customer.\n   In addition, the\
    \ individual services that were deployed to support\n   this scenario provided\
    \ support for management of the list of\n   available agents as well. This involved\
    \ allowing the agent to \"log\n   into\" and \"out of\" the system and to indicate\
    \ whether the agent was\n   then ready to handle calls to the customer. The list\
    \ of services, as\n   seen from a user perspective, follows.\n   The services\
    \ support:\n   i)  Customer Request service - the customer explores a corporate\
    \ Web\n   site, selects a link that offers to request an agent to call the\n \
    \  customer back and then is redirected to the Web Call Center server.\n   This\
    \ presents customer with a form asking for name, the telephone\n   number at which\
    \ he or she wishes to be called, and the time at which\n   the call is to be made.\
    \ Note will also be made of the page to which\n   the customer was referred to\
    \ when he or she was redirected. Once the\n   form has been returned, the customer\
    \ receives an acknowledgment page\n   listing the parameters he or she has entered.\n\
    \   ii)  Agent Registration/Logon - An agent requests a \"login\" page on\n  \
    \ the Web Call Center server. The service checks whether it has a\n   record of\
    \ an agent present at the Internet node from which th call is\n   made. If not,\
    \ then the caller will be sent a form allowing him or her\n   to enter the service\
    \ identity, the company's agent identifier and\n   password. On return, the service\
    \ identity and company agent\n   identifier will be checked against a list of\
    \ known identities. If\n   found, the password will be checked, and if this matches\
    \ the record\n   held by the service then a new session record is made of this\n\
    \   identity and the Internet node from which the call has been made.\n   NB:\
    \ This is very similar to the Universal Personal Telecommunications\n   (UPT)\
    \ service feature \"register for incoming calls\". It implies that\n   the identified\
    \ person has exclusive use of the Internet node from\n   that point onwards, so\
    \ messages for them can be directed there.\n   iii)  Agent Ready - an agent who\
    \ has already logged on can indicate\n   that he or she is ready by requesting\
    \ an appropriate \"ready\" page on\n   the Web Call Center Server. The service\
    \ will match the agent by the\n   Internet node Identifier and Agent Identity\
    \ passed along with the Web\n   request against its list of \"active\" agents.\
    \ It will mark them as\n   being ready to handle calls in its list of available\
    \ agents (with\n   their pre-defined skill set).\n   iv)  Agent Not Ready - an\
    \ agent can request an appropriate \"ready\"\n   page on the Web Call Center Server\
    \ to indicate that he or she is\n   temporarily not ready to handle calls.\n \
    \  v)  Agent Logoff - an agent can request an appropriate \"Logout\" page\n  \
    \ on the Web Call Center Server to indicate that he or she is no longer\n   associated\
    \ with a particular Internet node. The service will match\n   the agent by the\
    \ Internet Node Identifier and Agent Identity passed\n   along with the Web request\
    \ against its list of \"active\" agents. Once\n   found, the session record for\
    \ that agent is removed and the caller is\n   notified of this with an acknowledgment\
    \ page.\n   NB: This is very similar to the UPT \"unregister\" service feature.\n\
    \   vi)  Call Center Agent Selection and Notification - When the time\n   that\
    \ the customer selected has arrived and an available agent with\n   the right\
    \ skills has been selected from the appropriate list, this\n   service will send\
    \ a notification to the Internet node associated with\n   that agent. A dedicated\
    \ server is assumed to be running on the\n   agent's machine that, on receiving\
    \ the notification, triggers the\n   agent's browser into requesting a \"Agent\
    \ Call In\" page from the Web\n   Call Center Server. Once the agent's machine\
    \ has made this request,\n   he or she will be told that there is a customer to\
    \ call.\n   NB: This is similar to a \"Message Waiting\" or \"Wake Up Call\" service.\n\
    \   Note: As implemented, the agent is led automatically into the\n   following\
    \ service (the returned Web page includes an automatic reload\n   command).\n\
    \   vii)  Agent Instruction - a selected agent makes a request of the\n   \"Customer\
    \ Processing\" page on the Web Call Center Server. The\n   Internet node Identifier\
    \ and Agent Identity the agent uses will be\n   matched against a list of agents\
    \ expected to handle calls, and the\n   instructions for the calls will be returned\
    \ to the agent.\n   NB: This is similar to a \"Voice Mail Replay\" message service,\
    \ but in\n   this case the message is automatically generated; there is no\n \
    \  associated voice mail record feature accessible.\n   Note: As implemented,\
    \ the instructions page will include a number of\n   buttons, allowing the agent\
    \ to view the page the customer was looking\n   at when he or she made the request,\
    \ and to trigger the customer\n   callback (as described next).\n   ix)  Agent/Customer\
    \ Telephony Callback -  the agent will make a\n   request of a \"dial-back\" page\
    \ on the Web Call Center Server. The\n   Internet node Identifier and Agent Identity\
    \ he or she uses will be\n   matched against a list of agents expected to handle\
    \ calls, and, when\n   the appropriate records have been found, the service will\
    \ make the\n   telephone call through to the customer and then connect the agent\
    \ to\n   this telephone call (using the telephone number registered in the\n \
    \  respective Call Center service record).\n"
- title: 5.2.2 Implementation
  contents:
  - '5.2.2 Implementation

    '
- title: 5.2.2.1 Introduction
  contents:
  - "5.2.2.1 Introduction\n   The Siemens Web Call Center used an existing IN system\
    \ and service\n   logic that supported Call Center features. The scenario it supports\n\
    \   is very similar to the Siemens IN-based Call Center on which it was\n   based;\
    \ one of the goals was to minimize changes to the service\n   offered. It is also\
    \ virtually identical to the service \"Internet\n   Requested Telephony Dial-back\"\
    \ provided by the Lucent system.\n   As provided via the Internet, the services\
    \ involved are mostly the\n   same as those provided via the PSTN and IN alone.\
    \ The main\n   differences lie in the use of the World Wide Web as an interface\
    \ to\n   the services rather than a telephone, SSP, and Intelligent\n   Peripheral.\
    \ Also, the feature by which a telephone call is made\n   between the agent and\
    \ the customer is implemented within the IN\n   system in a different way; this\
    \ is the only element in which the PSTN\n   is involved.\n"
- title: 5.2.2.2 Web Call Center Configuration
  contents:
  - "5.2.2.2 Web Call Center Configuration\n   The general arrangement for the Web\
    \ Call Center system is shown in\n   Figure 7.  The components that were added\
    \ to an existing IN system to\n   deal with the Internet interface are described\
    \ next.\n   In addition to the SCP, SSP and SMS that were part of the original\n\
    \   IN-based system, another unit was included to send notification\n   messages\
    \ to agents; in the IN system the agents were sent \"wake up\"\n   telephone calls\
    \ when they were required to handle their next\n   customers' call back. This\
    \ unit is called the \"Internet Intelligent\n   Peripheral\", and its use is described\
    \ later under \"Non-World Wide Web\n   Interactions\".\n   As there was a need\
    \ to re-use as many of the existing IN components\n   unchanged, a Gateway unit\
    \ to deal with the interface between the\n   Internet and the SCP was provided.\
    \ This injected INAP (Intelligent\n   Network Application Protocol) messages into\
    \ the SCP, making it think\n   that it had received an Initial DP trigger from\
    \ an SSP. It also\n   intercepted the \"Connect To Resource\" and \"Prompt and\
    \ Collect\" INAP\n   messages sent from the SCP, acting on these to return the\
    \ parameters\n   generated by the Internet users when they filled in the forms\
    \ that\n   triggered the service transaction. It also translated the \"Play\n\
    \   Announcement\" message sent to the Intelligent Peripheral into a form\n  \
    \ that it could use.  Finally, it passed on the INAP message used by\n   the SCP\
    \ to trigger SSP into making the telephone call back.\n"
- title: 5.2.2.3 User Interaction
  contents:
  - "5.2.2.3 User Interaction\n   In the IN/PSTN-based system, the services have contact\
    \ with the\n   customers and agents via their telephones, SSPs, and Intelligent\n\
    \   Peripherals programmed to play announcements to them and to capture\n   their\
    \ responses. These responses are indicated by DTMF tones sent by\n   pressing\
    \ keys on the telephones.\n   In this case, almost all interactions are provided\
    \ via World Wide Web\n   requests and responses. The sequence of announcements\
    \ and responses\n   for each service are \"collapsed\" into individual form filling\n\
    \   transactions, and the requests are not limited to digits (or \"star\"\n  \
    \ and \"hash\"). The implications of the use of forms on service\n   operation\
    \ are covered in more detail later (under HTTP/IN Service\n   mapping).\n"
- title: 5.2.2.4 Service/Caller Identifiers
  contents:
  - "5.2.2.4 Service/Caller Identifiers\n   When provided via the IN/PSTN-based system,\
    \ the services are passed\n   the Calling Line Identity (CLI) of the caller and\
    \ the number the\n   caller dials (the DN). The CLI value is used extensively\
    \ to identify\n   the caller and (in the case of the agent) to index into service\
    \ data\n   tables to decide what to do next.  While an equivalent value to the\n\
    \   DN is passed to the Web-based transactions as the requested Universal\n  \
    \ Resource Locator (URL), the CLI cannot be given reliably. The nearest\n   equivalent\
    \ caller identifier is the IP Address of the customer or\n   agent's machine.\
    \ However, the use of HTTP proxies means that this\n   \"original\" Internet node\
    \ Address may not be available; if a proxy is\n   used then its IP Address will\
    \ be associated with the request.\n   In providing these Call Center features\
    \ the customer only has one\n   Web-based transaction; that of providing the initial\
    \ request for a\n   PSTN telephone callback. To do so he or she will have to fill\
    \ in a\n   form so as to specify not only the time to be called back, but also\n\
    \   the telephone number to be reached.  These values can be used if\n   needed\
    \ to identify the customer, and so the problem of originating\n   Internet Node\
    \ ambiguity is not relevant.\n   With the agents, however, there are sequences\
    \ of coupled\n   transactions, and the particular sequence must be identified.\
    \ There\n   will be a number of such transactions being carried out at once, and\n\
    \   there needs to be some identifier to show which agent is being\n   handled\
    \ in each case.\n   Such an identifier is not part of a sequence of basic Web\n\
    \   transactions. In a Web transaction, the HTTP Client/Web Browser makes\n  \
    \ a request, and the HTTP Server will respond to this, normally\n   including\
    \ some content in its reply message that will be processed by\n   the browser,\
    \ after which it closes the TCP connection. That's the end\n   of the transaction;\
    \ the HTTP client and server cannot normally\n   maintain state information beyond\
    \ this point. Any sequence is reduced\n   to a set of unrelated transactions.\n\
    \   A result of this simple pattern is that any state information\n   reflecting\
    \ longer or more complex interactions must be stored (at\n   least partially)\
    \ in the client system. One approach is the use of\n   cookies [6]. These can\
    \ be set by HTTP servers as part of their\n   response to a request, and will\
    \ be sent back with all subsequent\n   requests for appropriate URLs as extra\
    \ HTTP headers. These cookies\n   allow the HTTP server to identify the client\
    \ in the following\n   requests, so that it can continue an extended session with\
    \ the\n   client.\n   Cookies are used in providing the Internet Call Center.\
    \ Persistent\n   cookies are installed into the Web Browser on machines that are\
    \ to be\n   used by call center agents as a service management (pre-service)\n\
    \   task. The cookie value is unique to the machine and is used to index\n   into\
    \ a list of machine IP addresses that is stored as part of the\n   service data.\n\
    \   Also, a session cookie is stored onto the agent's machine when the\n   agent\
    \ registers, and is cleared when he or she de-registers. This is\n   used to identify\
    \ the agent and so the IP address of the node with\n   which the agent is associated\
    \ (and from which the agent's subsequent\n   requests should originate).  The\
    \ services that interact with Call\n   Center agents use the agent session cookie\
    \ value as an identifier; in\n   principle this is unnecessary but it does simplify\
    \ the session data\n   lookup procedure. The rest of the services use the persistent\
    \ machine\n   identifier in place of the CLI, indexing into their service data\n\
    \   using it. Both cookies are sent with each agent request; if they are\n   not\
    \ present, then the request is redirected to other services (for\n   example to\
    \ the agent Logon service).\n"
- title: 5.2.2.5 Mapping from HTTP Transactions to IN-Based Service Features
  contents:
  - "5.2.2.5 Mapping from HTTP Transactions to IN-Based Service Features\n   All of\
    \ the client-initiated services require user interaction. With\n   the IN/PSTN-based\
    \ system, the majority of the services are typified\n   by the callers being connected\
    \ to an announcement unit that plays\n   them a list of choices and captures their\
    \ selection. The caller can\n   pre-dial the digits needed; in this case the prompts\
    \ are not needed\n   and are not made.\n   The pattern of operation is somewhat\
    \ different in the Internet case,\n   as the initial HTTP request returns a response,\
    \ after which the Web\n   transaction has ended. Where that initial response returns\
    \ a form to\n   be filled in by the caller, subsequently submitting the form\n\
    \   initiates a new HTTP transaction.  This is all part of one instance\n   of\
    \ service, however. The service consists of two request/response\n   pairs in\
    \ tandem.\n   Although it is possible to design a service to handle this pair\
    \ of\n   Web transactions as a single unit, it may be better to reconfigure\n\
    \   it. The design of a service that deals with two Web exchanges as a\n   single\
    \ extended transaction is quite complex. It must maintain state\n   across the\
    \ pair of Web exchanges, and it has to handle a number of\n   failure cases including\
    \ dealing with time-outs and \"out of time\"\n   submission of forms. The alternative\
    \ is to split the service into two\n   sub-features. The first of these reflects\
    \ the initial request and\n   delivery of the form by return, with the second\
    \ one dealing with\n   processing of the submitted form and returning any confirmation\
    \ by\n   reply.\n   The services offered don't all require form-filling, and so\
    \ can be\n   treated as a single IN feature. There are two cases where forms are\n\
    \   required. The first of these is the Customer Request service, while\n   the\
    \ other one is the \"Agent Registration\" service. In both cases the\n   initial\
    \ Web transaction (by which the form is requested and returned\n   to the client)\
    \ need not involve specific service logic processing;\n   the initial delivery\
    \ of the form to a customer or agent can be\n   handled by a \"normal\" Web Server.\
    \ In both cases the service logic is\n   only triggered when the form is submitted;\
    \ this means that, again,\n   each of the services can be treated as a single\
    \ IN feature.\n   The IN service logic that deals with these requests has a general\n\
    \   pattern of action. An HTTP request is received, and this triggers the\n  \
    \ IN service logic into action. The service logic \"sees\" this as an\n   Initial\
    \ DP message and starts its processing as if it had been sent\n   from an SSF.\
    \ The SCF uses what appears to it to be an Intelligent\n   Peripheral to collect\
    \ the parameters of the request, and then to send\n   back final announcements\
    \ to the requesting entity.\n   The main difference, from the perspective of the\
    \ IN service logic\n   running on the SCF, is that the service does not need to\
    \ instruct the\n   SSF to make a temporary connection to the Intelligent Peripheral.\
    \ It\n   is as if this connection had already been made. Similarly, there is\n\
    \   no need to close the service transaction by sending an explicit\n   \"Continue\
    \ Execution\" message to the SSF.\n   The sequence of \"prompt/collect\" instructions\
    \ used to collect service\n   parameters from a caller in an IN service maps quite\
    \ well to a\n   sequence of requests to extract a data value from the HTTP request,\n\
    \   based on a tag. This is a fairly standard feature of Web Server CGI\n   or\
    \ Servlet processing. Using this mapping minimizes the changes to\n   the service\
    \ design, in that the service logic \"sees\" an Intelligent\n   Peripheral to\
    \ which it sends normal \"Request Report Prompt & Collect\"\n   messages, and\
    \ from which it receives data values in response.\n   All services have to fit\
    \ in with the underlying HTTP interaction\n   pattern, and so will be expected\
    \ to send a final \"Announce\"\n   instruction to the Intelligent Peripheral at\
    \ the end of the service;\n   this is done in many IN services anyway and in all\
    \ of the service\n   features described here. These announcements form the content\n\
    \   returned to the Web Client.\n"
- title: 5.2.2.6 Non-World Wide Web Interactions
  contents:
  - "5.2.2.6 Non-World Wide Web Interactions\n   There are two exceptions to the sole\
    \ use of the World Wide Web for\n   interaction. The first one occurs in the \"\
    Message Waiting\"/\"Wake Up\n   Call\" service by which the selected agent is\
    \ informed of a callback\n   request. World Wide Web transactions are very simple;\
    \ the client\n   browser makes a request for content associated with a particular\
    \ HTTP\n   URL, and the server sends a response, marking the end of the\n   transaction.\
    \ The server cannot make a spontaneous association with a\n   client; it must\
    \ be initiated by the client request.\n   While it would be possible for the server\
    \ to defer closing an earlier\n   transaction (by not sending back all of the\
    \ content specified and\n   leaving the TCP connection open) it was decided that\
    \ an alternative\n   scheme would be more convenient. The \"wake up call\" was\
    \ arranged by\n   an \"Internet Intelligent Peripheral\" sending a request to\
    \ a daemon\n   process running on the selected agent's machine, using the Finger\n\
    \   protocol [7]. The daemon sent back a standard response, but in\n   addition\
    \ the Web Browser on the agent's machine was triggered into\n   making a further\
    \ HTTP request of the server. In this way the \"Agent\n   Instruction\" transaction\
    \ is started automatically, while still\n   allowing it to use a normal HTTP request/response\
    \ pattern.\n   The second exception occurs in the final \"Agent/Customer Telephony\n\
    \   Callback\" service. While this transaction is initiated by the agent\n   selecting\
    \ a link on the \"call instructions page\" returned to them,\n   and includes\
    \ a \"confirmation\" page being sent back to them in an HTTP\n   response, the\
    \ purpose of this service is to make a telephone\n   connection via the PSTN between\
    \ the agent's telephone and the\n   customer's telephone. It is the only service\
    \ element that involves\n   the PSTN directly. From an IN/PSTN perspective, the\
    \ resulting\n   telephone connection is different from that provided in the scheme\n\
    \   using the IN and PSTN alone. In this case, a PSTN call is made out to\n  \
    \ the agent's telephone, another call is made out to the customer's\n   telephone,\
    \ and these calls are bridged. This differs from the earlier\n   scheme, in which\
    \ the agent originated a call to the voice mail replay\n   system, and this call\
    \ was redirected to a new destination (the\n   customer's telephone). As this\
    \ feature differs in purpose from the\n   other services, and it requires a different\
    \ implementation within the\n   IN and PSTN system, it was organized as a separate\
    \ service in this\n   case.\n"
- title: 5.2.2.7 Security Considerations
  contents:
  - "5.2.2.7 Security Considerations\n   In the case of this system, assumptions were\
    \ made that the interface\n   presented to requesting agents and customers was\
    \ provided via a fire\n   wall to deal with most attacks on the IN components.\
    \ The interface\n   appeared as a Web Server, and there was no direct access to\
    \ the HTTP\n   documents served, nor to the servlets providing the service logic.\n\
    \   The Callback service was deemed to have simpler security requirements\n  \
    \ than other IN services as it was akin to a free phone \"1-800\" service\n  \
    \ access number; the agents work for the service subscriber and are not\n   charged\
    \ directly. Similarly, the requesting customer is not charged\n   for his or her\
    \ request, nor for the resulting call back. Service\n   subscribers would be willing\
    \ to pay the costs of telephone calls\n   generated as a result of this cluster\
    \ of services, and the costs of\n   running the agent services could be charged\
    \ directly to them. As such\n   the authorization for service is defined by the\
    \ contract between the\n   service subscriber and the service provider.\n   Authentication\
    \ of agents was seen as a problem. As an interim\n   measure, cookies were used,\
    \ but this scheme delivers the cookie data\n   as a plain text item (a header\
    \ of the Web request). Secure Socket\n   Layer connections were required for communication\
    \ with the agent\n   services, and this had an impact on the performance of the\
    \ IN system.\n"
- title: 5.2.3 Derived Requirements/Lessons
  contents:
  - "5.2.3 Derived Requirements/Lessons\n   Security is seen as a major issue. A firewall\
    \ was used to control\n   access to the IN Components. Similarly, SSL was used\
    \ for\n   communication with the Agents, so as to protect the cookie values\n\
    \   that they were sending with their requests.\n   For other services, it is\
    \ likely that the entity from which requests\n   appear to originate will be charged\
    \ for the service to be rendered.\n   This has implications in terms of authentication\
    \ and authorization of\n   service provision at the time of the request. It is\
    \ necessary for the\n   service to be authorized in such a way that non-repudiation\
    \ is\n   ensured; this is likely to mean that a certificate of identity be\n \
    \  provided from the person making the request, and that this can be\n   tied\
    \ in with a financial account that that person has with the\n   service provider.\
    \ The certificate can then be stored as part of the\n   billing record.  While\
    \ the process of electronic commerce is outside\n   of the scope of this work,\
    \ the mechanism by which a request for\n   confirmation of identity is passed\
    \ out to the requesting user and is\n   delivered back to the service logic must\
    \ be considered.\n   When changing from a \"pure\" IN/PSTN system to one supporting\
    \ requests\n   via the Internet, the differences in the way that clients interacted\n\
    \   with the services meant that the service logic had to be redesigned.\n   It\
    \ was realized that maintaining the state of a service during its\n   processing\
    \ was going to be a problem; this problem was side-stepped\n   by re-engineering\
    \ the services as form processors, allowing them to\n   deal with fully specified\
    \ requests as a single (Web) transaction. In\n   addition, a \"normal\" Web Server\
    \ was used to deliver the forms to the\n   users. This is a change from the IN\
    \ system, where the equivalent of\n   the form (the prompts) were sent in sequence\
    \ as part of the same\n   service process.\n   The Call Center features provided\
    \ suited this change. However, this\n   may not be the case for other IN services.\
    \ It is quite common for\n   services to be designed such that the user is prompted\
    \ for a\n   response, and the service continues dependent on this response. The\n\
    \   Web form presents all of the options at once, so this kind of variant\n  \
    \ prompt/collect sequence is not possible. From this, it is difficult\n   to see\
    \ how an IN service could be reused without some degree of\n   modification.\n\
    \   An intermediate \"gateway\" system was provided to \"cocoon\" the service\n\
    \   logic as far as possible from the details of the components with\n   which\
    \ it was working.  Where needed, this unit translated calls from\n   the service\
    \ logic into commands that operated with the Internet (and\n   the Web Server\
    \ that acted as the interface). Our experience was that\n   an SCP could be \"\
    spoofed\" into thinking that it was operating with\n   other IN components in\
    \ the normal way. Within the limits of the\n   service used, this proved simpler\
    \ than was originally expected.\n   Selecting this simple approach still allows\
    \ a considerable range of\n   services to be provided while maintaining any investment\
    \ in existing\n   IN systems.  Modification of existing IN service logic was also\n\
    \   easier than feared. All of the services examined provided\n   announcements\
    \ at the end of the service transaction, and this could\n   be used to trigger\
    \ a Web response to be sent back to the requesting\n   Internet user. The changes\
    \ to the Call Center service logic turned\n   out to be minor; it took as long\
    \ to analyze the service and see how\n   it could be arranged as a sequence of\
    \ \"form processing\" transactions\n   as it did to make the changes to the service\
    \ logic.\n   In the Siemens Web Call Center, the \"Internet Intelligent Peripheral\"\
    \n   with which the service logic communicated was running as a separate\n   program\
    \ on the same node. Where more complex behavior is required of\n   it (such as\
    \ conversion of text to speech data and interface with the\n   PSTN) then it would\
    \ almost certainly be on a separate node. If data\n   is transferred from the\
    \ Internet in such a scheme, any intermediate\n   gateway would be involved in\
    \ relaying the data to this node.\n"
- title: 6. Alternative Solutions
  contents:
  - '6. Alternative Solutions

    '
- title: 6.1 The AT&T System
  contents:
  - "6.1 The AT&T System\n   AT&T developed a framework for controlling voice and\
    \ voice-band data\n   (e.g., fax) and for providing PINT services. Key to the\
    \ framework is\n   CallBroker, a logical entity that acts on behalf of a user\
    \ to set up\n   sessions and make requests for PSTN resources. The sessions typically\n\
    \   include initiation of calls between two or more end points specified\n   by\
    \ the user. In addition to its interactions with the PSTN for call\n   setup,\
    \ the CallBroker is responsible for other functions, when\n   necessary, such\
    \ as authentication and usage recording.\n   This section briefly discusses the\
    \ protocol at the two interfaces\n   that need to be defined and the corresponding\
    \ APIs to provide the\n   above services. The two interfaces are (1) the one between\
    \ the\n   CallBroker (or Web Server) and the Service Control Function in the\n\
    \   Service Node in the PSTN and (2) the one between the IP client and\n   the\
    \ CallBroker. The latter interface, in particular, will enable\n   service providers\
    \ to extend the architecture defined here to serve as\n   a platform for other\
    \ advanced/value-added services (to be identified\n   later). In addition, the\
    \ view taken here is that the IP client is\n   more general, and implements a\
    \ protocol for communication with the\n   CallBroker that allows full two-way\
    \ communications. For example, this\n   is required for the cases where a called\
    \ party hangs up and an\n   indication may be necessary to be given to the IP\
    \ Client about this\n   status/progress. This is also necessary when conferencing\
    \ to give an\n   indication/status of various parties joining the call.\n"
- title: 6.1.1 High Level Architecture
  contents:
  - "6.1.1 High Level Architecture\n   A high level architecture depicting various\
    \ logical entities and the\n   Interfaces among these logical Entities and the\
    \ IP Client is shown in\n   Figure 12.\n                                ________________\n\
    \                               /\n             1        _____   / 2   _____\n\
    \    /|________________|    |________|    |   PSTN\n                      |____|\
    \  \\     |____|\n                      Call     \\    / SCF\\\n             \
    \         Broker    \\  /  SN  \\\n                                 \\_____________\n\
    \                                /          \\\n                             \
    \  /            \\\n                              /              \\\n        \
    \                     __              __\n                             /\\   \
    \           /\\\n                           Calling       Participant\n      \
    \                      Party      (Called Party)\n                Figure 12: \
    \ The CallBroker Architecture\n   The CallBroker, in addition to the initiation\
    \ and control of calls on\n   behalf of the user, performs additional functions.\
    \ These functions\n   include authenticating the IP Client, usage recording, and\
    \ management\n   of the session for the IP Client for the telephony call. The\
    \ notion\n   of the session requires that a client state machine be maintained\
    \ in\n   the CallBroker. This also helps in notifying the IP Client about the\n\
    \   status/progress of the requests generated from the IP Client.\n   From the\
    \ perspective of the IP Client, the logical entities needed\n   for the above\
    \ functions are within the CallBroker and are as shown in\n   Figure 13 below.\
    \  These correspond to the functions already\n   discussed: Usage Recording Function,\
    \ Session Management Function,\n   Voice Bridge, and the Authentication Function.\
    \  The fact that some of\n   these functions may be physically separate from the\
    \ CallBroker (such\n   as the Voice Bridge being in the PSTN) is not inconsistent\
    \ with the\n   general view adopted here. Thus, the CallBroker Model mediates\n\
    \   requests for network services and enables us to define various value\n   added\
    \ services in the future.\n   llllllllllllllll\n   l              l\n   l Call\
    \ Broker  l                  Authentication\n   l  Server      l             \
    \     Function\n   l  ______      l    Interface 2a   ______\n   l |      |x x\
    \ xlx x x x x x x x x  |    |\n   l |______|x    l                   |____|\n\
    \   l       x    x  l\n   l        x    xl  Interface 2b\n   lSession State lx\n\
    \   l   Mnmgt. x   l  x            Usage Recording\n   l  Function    l     x\
    \             Function\n   l _______    x l       x          ______\n   l |  \
    \   |      l          x  x x  |    |\n   l |_____|     xl                  |____|\n\
    \   llllllllllllllll\n                  x\n                   x Interface 2c\n\
    \                   x\n                 _______\n                 |     |\n  \
    \               |_____|\n                  Bridge\n           Figure 13: Functional\
    \ Entities in the Call Broker\n   Various interfaces (i.e., 2a, 2b, 2c in Figure\
    \ 13) between different\n   functional entities in the CallBroker may also be\
    \ standardized. The\n   Session State Management Function may be physically realized\
    \ as part\n   of the CallBroker Server.\n"
- title: 6.1.2 IP Client to CallBroker Interface
  contents:
  - "6.1.2 IP Client to CallBroker Interface\n   Communication on the IP Client to\
    \ CallBroker Interface (Interface 1\n   in Figure 12) is a simple ASCII based\
    \ protocol running directly on\n   TCP. The messages on this interface are primarily\
    \ requests from the\n   client to the CallBroker, responses from the CallBroker\
    \ to the IP\n   client responding to the requests and unsolicited events from\
    \ the\n   CallBroker to the IP client. Since the communication is not strictly\n\
    \   transaction oriented, traditional encapsulation protocols like HTTP\n   cannot\
    \ be used. There has been some ongoing work attempting to use\n   multiple concurrent\
    \ HTTP POST requests to support event delivery but,\n   without too much difficulty,\
    \ the ASCII protocol specified here can\n   easily be mapped to the POST payload\
    \ of the HTTP protocol.\n"
- title: 6.1.3 Protocol
  contents:
  - "6.1.3 Protocol\n   Basic Format\n   The basic format of the protocol is as follows:\n\
    \   [header]<<LF>\n   <<LF>\n   [body]<<LF>\n   <<LF>\n   <<LF>\n   The header\
    \ and body of the protocol are separated by 2 line feed\n   characters.  The format\
    \ of the header and the body is described\n   below. Line feed characters in the\
    \ header or body will be escaped\n   using simple URL encoding.\n   Header\n \
    \  [session-id | 0]<<LF>\n   [message-id]<<LF>\n   [version-info]<<LF>\n   All\
    \ CallBroker transactions are identified by sessions. A session\n   does not necessarily\
    \ correspond one-to-one to a TCP session. If the\n   IP client is attempting to\
    \ initiate a new session with the CallBroker\n   the session-id field is populated\
    \ with '0' to indicate session\n   creation request. Every session request needs\
    \ to be accompanied by\n   sufficient information regarding authentication for\
    \ the CallBroker to\n   create the session.\n   Message-id represents the operation\
    \ of the message.\n   Version-info contains optional version information of the\
    \ protocol.\n   This is to aid possible version mismatch detection and graceful\
    \ error\n   recovery.\n   Body\n   The body of the protocol messages consists\
    \ of name value pairs. These\n   name-value pairs are interpreted with reference\
    \ to the message-id\n   which signifies the operation to be performed by the CallBroker.\n"
- title: 6.1.4 APIs Exposed to the IP Client
  contents:
  - "6.1.4 APIs Exposed to the IP Client\n   The APIs of the CallBroker exposed to\
    \ the IP client are distinct and\n   different from the APIs that the CallBroker\
    \ uses from the different\n   supporting subsystems including the authentication\
    \ subsystem and the\n   usage recording subsystem. The IP client APIs enable clients\
    \ to\n   effectively control voice conferencing.\n"
- title: 6.1.5 Voice-Bridge Control API
  contents:
  - "6.1.5 Voice-Bridge Control API\n   The Voice Bridge Control API is used by CallBroker\
    \ applications to\n   access voice bridging functionality. The API distinguishes\
    \ between\n   sessions and calls. Calls represent actual voice calls placed from/to\n\
    \   the voice bridge.  These calls can be grouped together in sessions.\n   All\
    \ the calls that belong to a session are bridged. Calls have a\n   significance\
    \ outside the scope of sessions. Every call can be\n   associated with multiple\
    \ sessions with different weights at the same\n   time. The advantage of this\
    \ approach is the ability to support\n   concepts like whispering in a conference\
    \ call. Calls can also be\n   dropped from a conference session and bridged together\
    \ in a new\n   session to give the notion of a sub-conference. These calls can\
    \ later\n   be re-added to the main conference session.\n"
- title: 6.2  Simple Computer Telephony Protocol
  contents:
  - '6.2  Simple Computer Telephony Protocol

    '
- title: 6.2.1 Overview
  contents:
  - "6.2.1 Overview\n   The Simple Computer Telephony Protocol (SCTP) is a third party\
    \ call\n   control protocol and as such does not comply with the PINT charter.\n\
    \   SCTP is described in this section to show how PINT services could be\n   implemented\
    \ using SCTP, and where SCTP fits into the PINT\n   architecture.\n   In addition\
    \ to third party call control, SCTP also provides\n   subscriber (i.e., user)\
    \ feature management (e.g., allows a user to\n   set do not disturb, call forwarding\
    \ parameters), and subscriber\n   monitoring of terminal, line and address status.\
    \ SCTP is strictly\n   client/server-based. It has no provisions for peer to peer\n\
    \   communications. SCTP runs as a TCP application protocol. It is\n   ASCII-based\
    \ and uses sockets. The SCTP Server is usually connected to\n   a switch via a\
    \ CTI (Computer-Telephony Integration) connection.\n   Because of this, feature\
    \ interactions are limited to those within the\n   context of a single call, and\
    \ not between PSTN services. The SCTP\n   Server within a PINT Gateway could also\
    \ be connected to an SN, or an\n   SCP. See figures below. SCTP does NOT carry\
    \ media.\n"
- title: 6.2.2 How SCTP Fits in with the Reference PINT Services
  contents:
  - "6.2.2 How SCTP Fits in with the Reference PINT Services\n   SCTP Client as Part\
    \ of a Web Server\n   +------+    +--------+       +--------+    +------+\n  \
    \ |      |    |        | SCTP  |        |    |      |\n   |      |----|      \
    \  |-------|        |----|      |\n   |      |    |        |       |        |\
    \    |      |\n   +------+    +--------+       +--------+    +------+\n   User's\
    \ PC   Web Server/      PINT Gateway  SN/SCP/Switch\n               CGI\n    \
    \         Figure 14: SCTP Client as Part of a Web Server\n   In this architecture,\
    \ the SCTP Client is embedded in the Web Server.\n   It is there for the specific\
    \ purpose of initiating calls to the PSTN\n   based on user requests. The SCTP\
    \ Server is within the PINT Gateway.\n   We go through the classic PINT examples:\n\
    \   Click-to-dial-back: The SCTP Client issues an SCTP MakeCall to the\n   SCTP\
    \ Server with the calling number supplied by Web page, and called\n   number supplied\
    \ by the user.\n   Click-to-fax-back: SCTP Client issues an SCTP MakeCall to the\
    \ SCTP\n   Server with called number set to user's fax machine, and calling\n\
    \   number set to Web Server's fax machine, and treatment set to the URI\n   for\
    \ the file to be faxed.  The SCTP Server takes the file and feeds\n   it into\
    \ the call just as a fax machine would.\n   Click-to-fax: SCTP Client issues an\
    \ SCTP MakeCall with calling number\n   set to user's fax machine, and called\
    \ number set to Web Server's fax\n   machine. How the file is supplied to the\
    \ user's fax machine is\n   outside the scope of SCTP.\n   Voice-access-to-content:\
    \ SCTP Client issues an SCTP MakeCall with\n   called number set to user's telephone\
    \ number, and calling number set\n   to Web Server and treatment set to a URI\
    \ for the file of the\n   particular Web page to be read to the called number.\
    \ The SCTP Server\n   takes care of the file to voice conversion and this is fed\
    \ into the\n   call as if it were voice.\n   In all of the above cases, the SCTP\
    \ Client can generate a variety of\n   different Web pages to send to the Web\
    \ Server via CGI (Common Gateway\n   Interface). The content of these pages is\
    \ based on the call\n   completion status of the CallMake SCTP action.\n   SCTP\
    \ Client Running on the User's PC\n                             +------+\n   \
    \              HTML        |      |  INTERNET\n   +-----+    /--------------|\
    \      |\n   |     |---/               +------+\n   |     |                  \
    \ Web Server\n   |     |---\\\n   +-----+    \\\n   User's PC   \\ SCTP      \
    \  +------+       +------+\n                \\------------|      |-------|   \
    \   | PSTN\n                             |      |       |      |\n           \
    \                  +------+       +------+\n                             PINT\
    \ Gateway   SN/SCP/Switch\n            Figure 15: SCTP Client Running on the User's\
    \ PC\n   In this architecture, the user has an SCTP Client co-located with it.\n\
    \   If the user is using the telephone line for connection to a Web\n   Server\
    \ and there is an incoming call, then the SCTP Server in the\n   PINT Gateway\
    \ will post this event to the SCTP Client. A window will\n   pop up on the user's\
    \ screen with options available to the user for\n   handling of the incoming call.\
    \ The user can choose to take the call,\n   send it to voice mail, or send it\
    \ to another number.\n   For the Fax back service, for example, if the user had\
    \ a separate fax\n   machine from his or her PC, then the SCTP Server would tell\
    \ the SCTP\n   Client there is an incoming fax. The user would end or suspend\
    \ his or\n   her Internet connection, the fax would come in, and the user could\n\
    \   then resume the Internet connection.\n"
- title: 7. Session Initiation Protocol--An Emerging Standard
  contents:
  - '7. Session Initiation Protocol--An Emerging Standard

    '
- title: 7.1 Overview
  contents:
  - "7.1 Overview\n   SIP, the Session Initiation Protocol, is a simple signaling\
    \ protocol\n   for Internet conferencing and telephony. It is currently under\n\
    \   development within the IETF MMUSIC (Multiparty Multimedia Session\n   Control)\
    \ Working Group.\n   SIP provides the necessary mechanisms to support the following\n\
    \   services:\n   - call forwarding, including the equivalent of 700-, 800- and\
    \ 900-\n     type calls;\n   - call-forwarding no answer;\n   - call-forwarding\
    \ busy;\n   - call-forwarding unconditional;\n   - other address-translation services;\n\
    \   - callee and calling \"numbers\" delivery, where the numbers can be of\n \
    \    any (preferably unique) naming scheme;\n   - personal mobility, i.e., the\
    \ ability to reach a called party under\n     a single, location-independent address,\
    \ even when the user changes\n     terminals;\n   - terminal-type negotiation\
    \ and selection: a caller can be given a\n     choice of how to reach a party,\
    \ e.g., via Internet telephony,\n     mobile, phone, and an answering service;\n\
    \   - caller and callee authentication;\n   - blind and supervised call transfer;\n\
    \   - user location; and\n   - invitation to multicast conferences.\n   Extensions\
    \ of SIP to allow third-party signaling (e.g., for click-\n   to-dial-back services,\
    \ fully meshed conferences and connections to\n   Multipoint Control Units (MCUs),\
    \ as well as mixed modes and the\n   transition between those) have been specified.\n\
    \   SIP addresses (URLs) can be embedded in Web pages. SIP is\n   addressing-neutral,\
    \ with addresses expressed as URLs of various types\n   such as SIP, H.323 or\
    \ telephone (E.164). A purely representational\n   example of a SIP URL might\
    \ be sip:+12125551212@foo.example.com, where\n   foo.example.com is the host serving\
    \ as a gateway into the PSTN.\n   SIP is independent of the packet layer and only\
    \ requires an\n   unreliable datagram service, as it provides its own reliability\n\
    \   mechanism. While SIP typically is used over UDP or TCP, it could,\n   without\
    \ technical changes, be run over IPX, or carrier pigeons, ATM\n   AAL5 or X.25,\
    \ in rough order of desirability.\n   SIP can set up calls \"out-of-band\". For\
    \ example, while the SIP\n   protocol exchanges use IP, plus UDP or TCP, the actual\
    \ data transport\n   can take place via the PSTN. This feature makes it possible\
    \ to use\n   SIP to control a PBX or send requests to a Service Control Point.\
    \ The\n   PINT services make use of this flexibility.\n"
- title: 7.2 SIP Protocol
  contents:
  - "7.2 SIP Protocol\n   SIP is a textual client-server protocol, similar in syntax\
    \ to HTTP\n   and RTSP.  Requests consist of a method (INVITE, BYE, ACK, or\n\
    \   REGISTER), a list of parameter-value pairs describing the request and\n  \
    \ an optional request body. Parameters include the origin and\n   destination\
    \ of the call and a unique call identifier. They may\n   indicate the caller's\
    \ organization as well as the call's subject and\n   priority. The request body\
    \ contains a description of the call to be\n   established or the conference to\
    \ be joined. The description format is\n   not prescribed by SIP; SDP is one possibility\
    \ being standardized\n   within the IETF. For the purposes of providing PINT services,\
    \ an\n   additional phone number address format is to be added to SDP.\n   Responses\
    \ indicate whether a request is still being processed, was\n   successful, can\
    \ possibly be satisfied by another node or failed. When\n   a call is redirected,\
    \ the response indicates the name of the node to\n   be tried. Unsuccessful calls\
    \ may also return a better time to try\n   again.\n   In a typical successful\
    \ call, the caller sends an INVITE request to\n   the callee. The callee accepts\
    \ the call by returning a response code\n   to the callee, which then confirms\
    \ the receipt of that acceptance\n   with an ACK request. Either side can terminate\
    \ the call by sending a\n   BYE request.\n   Requests can be authenticated using\
    \ standard HTTP password and\n   challenge-response mechanisms. Requests and responses\
    \ may also be\n   signed and encrypted.\n"
- title: 7.3 SIP entities
  contents:
  - "7.3 SIP entities\n   SIP distinguishes three kinds of entities:\n   User agents\
    \ receive and initiate calls and may forward the call.\n   A proxy server is an\
    \ intermediary program that acts as both a server\n   and a client for the purpose\
    \ of making requests on behalf of other\n   clients. Requests are serviced internally\
    \ or by passing them on,\n   possibly after translation, to other servers. A proxy\
    \ must interpret,\n   and, if necessary, rewrite a request message before forwarding\
    \ it. A\n   proxy server may, for example, locate a user and then attempt one\
    \ or\n   more possible network addresses.\n   Redirect server accepts a SIP request,\
    \ maps the address into zero or\n   more new addresses and returns these addresses\
    \ to the client. Unlike\n   a proxy server, it does not initiate its own SIP request.\
    \ Unlike a\n   user agent server, it does not accept calls.\n   Proxy and redirect\
    \ servers may make use of location servers that\n   determine the current likely\
    \ location of the callee.\n   A PSTN gateway initiates phone calls between two\
    \ parties. This may be\n   a server that sends requests to an SCP in an IN environment\
    \ or it may\n   be a CTI-controlled PBX.\n   A SIP call may traverse one or more\
    \ proxy servers.\n   The servers that control a PBX or an SCP act as user agents.\
    \ A Web\n   server may also act as a SIP user agent.\n"
- title: 7.4 Providing Call Control Functionality
  contents:
  - "7.4 Providing Call Control Functionality\n   The SIP for PINT specification provides\
    \ details on how to use SIP to\n   initiate phone calls between two PSTN end points.\
    \ (SIP can also\n   initiate calls between Internet end points and between an\
    \ Internet\n   and PSTN end point, but this is beyond the scope of this document.)\n\
    \   It should be noted that the SIP client for initiating such phone\n   calls\
    \ can be either at the user's location (his/her workstation) or\n   can be a Web\
    \ server that calls up a SIP client via a CGI program.\n   There is no difference\
    \ in operation or functionality, except that the\n   owner of the Web server may\
    \ be legally responsible for the calls\n   made.\n   A SIP client needs to convey\
    \ two addresses to the PSTN gateway:  the\n   party making the call and the party\
    \ to be called. (The party to be\n   billed also needs to be identified; this\
    \ can either be done by a SIP\n   header or by having the server look up the appropriate\
    \ party based on\n   the two parties. This aspect is for further study.)\n   Described\
    \ below are three ways these addresses can be conveyed in\n   SIP. In the example,\
    \ the address of party A is +1-212-555-1234 and\n   that of party B is +1-415-555-1200.\
    \ (The URL types in this and other\n   examples are representational; they may\
    \ but do not have to exist.)\n   (1) The two PSTN addresses are contained in the\
    \ To header (and\n   request-URI) and an Also header. For example:\n     INVITE\
    \ sip:+1-212-555-1234@pbx.example.com SIP/2.0\n     To: phone:1-212-555-1234\n\
    \     From: sip:j.doe@example.com\n     Content-type: application/sdp\n     Call-ID:\
    \ 19970721T135107.25.181@foo.bar.com\n     Also: phone:+1-415-555-1200\n     v=0\n\
    \     o=user1 53655765 2353687637 IN IP4 128.3.4.5\n     c=PSTN E.164 +1-415-555-1200\n\
    \     t=0 0\n     m=audio 0 RTP/AVP 0\n   In that case, the gateway first connects\
    \ to party A and then party B,\n   but without waiting for A to accept the call\
    \ before calling B.\n   (2) Parties A and B are indicated by separate invitations.\
    \ This\n   allows the gateway to make sure that party A is indeed available\n\
    \   before calling party B.  After calling party A, the gateway could\n   play\
    \ an announcement indicating that the call is being connected\n   using, for example,\
    \ RTSP with appropriate Conference header\n   indicating the call.\n     INVITE\
    \ sip:+1-212-555-1234@pbx.example.com SIP/2.0\n     To: phone:1-212-555-1234\n\
    \     From: sip:j.doe@example.com\n     Content-type: application/sdp\n     Call-ID:\
    \ 19970721T135107.25.181@foo.bar.com\n     ...\n     INVITE sip:+1-415-555-1200@pbx.example.com\
    \ SIP/2.0\n     To: phone:+1-415-555-1200\n     From: sip:j.doe@example.com\n\
    \     Content-type: application/sdp\n     Call-ID: 19970721T135107.25.181@foo.bar.com\n\
    \     ...\n   (3) The two PSTN addresses are conveyed in the To header of the\
    \ SIP\n   request and the address in the SDP media description. Thus, a request\n\
    \   may look as follows:\n     INVITE sip:+1-212-555-1234@pbx.example.com SIP/2.0\n\
    \     To: phone:1-212-555-1234\n     From: sip:j.doe@example.com\n     Content-type:\
    \ application/sdp\n     Call-ID: 19970721T135107.25.181@foo.bar.com\n     v=0\n\
    \     o=user1 53655765 2353687637 IN IP4 128.3.4.5\n     c=PSTN E.164 +1-415-555-1200\n\
    \     t=0 0\n     m=audio 0 RTP/AVP 0\n   Here, pbx.example.com is the name of\
    \ the PSTN gateway; the call will\n   be established between 1-212-555-1234 and\
    \ +1-415-555-1200.\n   Users can be added to an existing call by method (1) or\
    \ (2).\n"
- title: 8. Overall Security Considerations
  contents:
  - "8. Overall Security Considerations\n   Inter-networking of the Internet and PSTN\
    \ necessitates the\n   introduction of new interfaces (e.g., the A, B and E interfaces\
    \ in\n   Figure 6). To ensure that their use does not put the networks, in\n \
    \  particular the PSTN, at additional security risk, these interfaces\n   need\
    \ to be designed with proper security considerations. Sections\n   5.1.5 and 5.2.2.7\
    \ describe how two of the pre-PINT implementations,\n   the Lucent and Siemens\
    \ systems, handle the security aspect,\n   respectively.\n   Worth noting are\
    \ the security requirements suggested by pre-PINT\n   experiences. They are:\n\
    \   +Peer entity authentication to allow a communicating entity to prove\n   its\
    \ identity to another in the network (e.g., the requesting IP-host\n   to the\
    \ PINT gateway, and the PINT gateway to the PSTN node providing\n   the service\
    \ control function).\n   +Authorization and access control to verify if a network\
    \ entity\n   (e.g., the requesting IP-host) is allowed to use a network resource\n\
    \   (e.g., requesting services from the PINT gateway).\n   +Non-repudiation to\
    \ account for all operations in case of doubt or\n   dispute.\n   +Confidentiality\
    \ to avoid disclosure of information (e.g., the end\n   user profile information\
    \ and data) without the permission of its\n   owner.\n   In the course of the\
    \ PINT interface development, additional\n   requirements are likely to arise.\
    \ It is imperative that the resultant\n   interfaces include specific means to\
    \ meet all the security\n   requirements.\n"
- title: 9. Conclusion
  contents:
  - "9. Conclusion\n   This document has provided the information relevant to the\n\
    \   development of inter-networking interfaces between the PSTN and\n   Internet\
    \ for supporting PINT services. Specifically, it addressed\n   technologies, architectures,\
    \ and several existing pre-PINT\n   implementations of the arrangements through\
    \ which Internet\n   applications can request and enrich PSTN telecommunications\
    \ services.\n   One key observation is that the pre-PINT implementations, being\n\
    \   developed independently, do not inter-operate. It is a task of the\n   PINT\
    \ Working Group to define the inter-networking interfaces that\n   will support\
    \ inter-operation of the future implementations of PINT\n   services.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   The authors would like to acknowledge Scott Bradner,\
    \ Igor Faynberg,\n   Dave Oran, Scott Petrack, Allyn Romanow for their insightful\
    \ comments\n   presented to the discussions in the PINT Working Group that lead\
    \ to\n   the creation of this document.\n"
- title: 11. Appendix
  contents:
  - '11. Appendix

    '
- title: 11.1 PSTN/IN 101
  contents:
  - '11.1 PSTN/IN 101

    '
- title: 11.1.1 Public Switched Telephone Network
  contents:
  - "11.1.1 Public Switched Telephone Network\n   What is normally considered as \"\
    the Telephone Network\" consists of a\n   set of interconnected networks. Potentially,\
    \ each of these networks\n   could be owned by a different Network Operator. The\
    \ official name for\n   such a network is Public Switched Telecommunications Network\
    \ (PSTN).\n   A simple PSTN consists of a set of Switches (called Central Offices\n\
    \   or Telephone Exchanges) with links interconnecting them to make up\n   the\
    \ network, along with a set of access connections by which\n   terminals are attached.\
    \ The PSTN is used to deliver calls between\n   terminals connected to itself\
    \ or to other PSTNs with which it is\n   interconnected. Calls on the PSTN are\
    \ circuit switched; that is, a\n   bi-directional connection is made between the\
    \ calling and called\n   terminals for the duration of the call. In  PSTNs the\
    \ connection is\n   usually carried through the network in digital format occupying\
    \ a\n   fixed bandwidth; this is usually 56 or 64 Kbps. The overall\n   configuration\
    \ of the PSTN is shown in Figure 16.\n    /--\\\n   ()/\\()__\n    /__\\   \\\
    \       .................................\n            \\      !             !\
    \                 !           /--\\\n     __      \\   [-!-]         [-!-]   \
    \            !          ()/\\()\n     \\ \\      \\__[CO ]=========[CO ]==\\\\\
    \           !        ___/__\\\n    [Fax]________[---]         [---]   \\\\   \
    \     [-!-]     /   __\n                                        \\\\=======[CO\
    \ ]____/    \\ \\\n                                                 [---]________[Fax]\n\
    \   Key: ___   Access Lines\n        ===   Trunk Links (inter-CO user data links)\n\
    \        ...   Inter-CO signaling network links\n                            \
    \   Figure 16\n   Messages are sent between the Switches to make and dissolve\n\
    \   connections through the network on demand and to indicate the status\n   of\
    \ terminals involved in a call; these \"signaling\" messages are\n   carried over\
    \ a separate (resilient) data network dedicated to this\n   purpose. This signaling\
    \ network is also known as the Common Channel\n   Signaling (CCS) or Signaling\
    \ System Number 7 (or SS7) network after\n   the names of the signaling protocol\
    \ suite used.\n   As yet, the majority of access connections to a PSTN carry analogue\n\
    \   signals, with simple (analogue) telephones or Facsimile machines as\n   terminals.\
    \ Call requests are indicated to the Central Office to which\n   a telephone is\
    \ connected either by a sequence of pulses or tone pairs\n   being sent. Notifications\
    \ on the status of the request are sent back\n   to the telephone in the form\
    \ of tones.  Indication from a Central\n   Office that a call is being offered\
    \ to a telephone is arranged by\n   sending an alternating voltage down the access\
    \ connection which in\n   turn causes the ringer in the telephone to sound. These\
    \ access lines\n   have a unique address associated with them and can support\
    \ a single\n   call.\n   However, with analogue or digital multi-line connections,\
    \ or\n   Integrated Service Digital Network (ISDN) Basic or Primary Rate\n   Interfaces\
    \ (BRI or PRI), several concurrent calls are possible and a\n   set of addresses\
    \ are associated with them. The new ISDN access\n   connections are designed so\
    \ that data exchanged with the network is\n   in multiplexed digital form, and\
    \ there is an individual channel for\n   each of the potential connections, together\
    \ with a separate channel\n   dedicated to sending and receiving call request\
    \ and call alert data\n   as well as carrying packet switched user data. These\
    \ call request and\n   call alert messages act as the equivalent of the pulses\
    \ or tones that\n   are sent when dialing, and the ringing signal that is sent\
    \ to a\n   telephone when a call is being made to it.\n   The operation of the\
    \ call request is fairly simple in most cases and\n   is shown in Figure 17.\n\
    \    /--\\\n   ()  ()\n     --____\n    /++\\   \\       .................................\
    \           /--\\\n   /----\\   \\      ^             v                 !    \
    \      ()  ()\n      A      \\   [-!-]         [-!-]               !         \
    \   --\n              \\->[CO ]=========[CO ]==\\\\           v        ->-/  \\\
    \n                 [---]         [---]   \\\\        [-!-]     /  /----\\\n  \
    \                                      \\\\=======[CO ]____/     B\n         \
    \                                        [---]\n   Key: ___   Access Lines\n \
    \       ===   Trunk Links (inter-CO user data links)\n        ...   Inter-CO signaling\
    \ network links\n        CO    Central Office (Telephone Exchange)\n         \
    \                      Figure 17\n   The user presses a sequence of numbers on\
    \ a telephone handset\n   (labeled A), and the telephone passes a sequence of\
    \ digits (either as\n   pulses or tone pairs) to the Central Office via the access\
    \ line. The\n   Central Office contains a processor that will be notified that\
    \ the\n   user has made a request and the digit string that is the sole\n   parameter\
    \ of the request. This digit string is taken to be the unique\n   address of an\
    \ access line connected either to itself or to another\n   Central Office. There\
    \ is a hierarchical addressing scheme, so that\n   the digit string can be parsed\
    \ easily. A call request to a terminal\n   (labeled B) connected to a remote Central\
    \ Office can be routed by\n   examining the digit string passed; the Central Office\
    \ will extract\n   the part of the passed address that corresponds to the remote\
    \ Central\n   Office in question, and can route the request onward, forming an\n\
    \   inter-Switch call request and passing it via the signaling network.\n   At\
    \ the same time it will allocate one of its available transmission\n   channels\
    \ towards the remote Central Office.\n"
- title: 11.1.2 Intelligent Network
  contents:
  - "11.1.2 Intelligent Network\n   This scheme has been used since the 1950s, and\
    \ suffices for the\n   majority of calls. However, there are a range of other\
    \ services that\n   can be (and have been) provided, enhancing this basic call\n\
    \   processing. Freephone or Premium Rate services (1-800 or 1-900\n   services)\
    \ are good examples of the supplementary services that have\n   been introduced.\
    \ Apart from the important feature that the cost of\n   these calls is varied\
    \ so that the caller does not pay for a free-\n   phone call, or pays an extra\
    \ charge for a premium rate call, they\n   have the similarity that the number\
    \ dialed must be translated to\n   arrive at the \"real\" address of the destination\
    \ terminal. They are\n   known as number translation services, and make up the\
    \ bulk of all\n   supplementary services delivered today.\n   These were originally\
    \ programmed into each Central Office, but the\n   complexity of maintaining the\
    \ data tables on each processor grew\n   cumbersome, so a more general solution\
    \ was sought. After a\n   considerable gestation period, the eventual solution\
    \ was the\n   Intelligent Network. This takes the separation of Central Offices\
    \ and\n   the network links interconnecting them a stage further.\n   The Central\
    \ Offices are considered to provide the Call Control\n   Function (CCF).  In addition,\
    \ the Service Switching Function (SSF) is\n   provided to \"enhance\" the operation\
    \ of these Switches by detecting\n   when a particular request has been made (such\
    \ as by dialing 1-800).\n   If this pattern is detected, the equipment implementing\
    \ the SSF will\n   send a specialized request message over the signaling network\
    \ to a\n   separate computer that implements the Service Control Function (SCF).\n\
    \   This entity is responsible for querying service specific data (held\n   in\
    \ a unit providing the Service Data Function, or SDF), performing\n   any digit\
    \ translations necessary, and sending the details of how to\n   proceed back to\
    \ the SSF, where they are obeyed and the call is put\n   through to the \"real\"\
    \ destination. In many implementations, the SDF\n   is closely coupled to the\
    \ SCF.  This configuration is shown in Figure\n   18.\n                 [---]\
    \           [---]  [---]\n    /--\\         [SRF]           [SCF]  [SDF]\n   ()/\\\
    ()__      [|-!]           [-!-]  [-!-]\n    /__\\   \\     ||  \\.............!......!........\n\
    \            \\    ||  /           !                !          /--\\\n     __\
    \      \\   [|-!]         [-!-]              !         ()/\\()\n     \\ \\   \
    \   \\__[SSF]         [CCF]              !       ___/__\\\n    [Fax]________[CCF]=========[---]==\\\
    \\         [!--]   /   __\n                                       \\\\========[CCF]__/\
    \    \\ \\\n                                                 [---]_______[Fax]\n\
    \   Key: ___   access relationship\n        ===   trunk relationship\n       \
    \ ...   signaling relationship\n                               Figure 18\n   The\
    \ advantage is that there can be a much smaller number of physical\n   units dedicated\
    \ to the SCF, and as they are connected to the\n   signaling network they can\
    \ be contacted by, and can send instructions\n   back to, all of the units providing\
    \ the SSF and thus the CCF.\n   In another enhancement, a separate entity called\
    \ the Special Resource\n   Function (SRF) was defined. Equipment implementing\
    \ this function\n   includes announcement units to play recorded messages (for\
    \ example,\n   prompts to enter digits) to callers. It will also include the tone\n\
    \   decoders needed to capture any digits pressed by the caller in\n   response\
    \ to the prompts. It is connected to the rest of the PSTN\n   usually via trunk\
    \ data links. It will also include a signaling\n   connection (directly or indirectly)\
    \ back to the SCF, via the PSTN's\n   core signaling network.\n   As an example\
    \ of the way that these different functional entities\n   interact, the SCF can\
    \ ask an SSF handling a call to route the caller\n   temporarily through to an\
    \ SRF. In response to instructions sent to it\n   from the SCF over the signaling\
    \ network, the SRF can play\n   announcements and can collect digits that the\
    \ user presses on their\n   terminal in response to prompts they are played. \
    \ Once these digits\n   have been collected they can be passed on to the SCF via\
    \ a signaling\n   message for further processing. In normal operation, the SCF\
    \ would\n   then ask the SSF to dissolve the temporary connection between the\n\
    \   user's terminal and the SRF. This allows the collection of account\n   numbers\
    \ or passwords (or PINs) and forms the heart of many \"Calling\n   Card\" services.\n\
    \   This pattern of user interaction is also used in a wide variety of\n   other\
    \ services where extra account information and PINs are needed.\n   They are collected\
    \ as just described and can be checked against the\n   correct values stored in\
    \ the service database prior to allowing the\n   call to proceed.\n   The Intelligent\
    \ Network functional entities can be realized as\n   physical units in a number\
    \ of different combinations. A common\n   configuration is shown in Figure 19.\n\
    \                 [---]           [---] [---]     [---]\n    /--\\         [I.P]\
    \           [SCP] [SDP]     [SN ]\n   ()/\\()__      [|-!]           [-!-] [-!-]\
    \     [--|]\n    /__\\   \\     ||  \\.............!.....!.....     |\n      \
    \      \\    ||  /           !             \\    |        /--\\\n     __     \
    \ \\   [|-!]         [-!-]            \\   |       ()/\\()\n     \\ \\      \\\
    __[SSP]=========[CO ]==\\\\         \\  |     ___/__\\\n    [Fax]________[---]\
    \         [---]   \\\\        [!-|]   /   __\n                               \
    \         \\\\=======[CO ]__/    \\ \\\n                                     \
    \            [---]_______[Fax]\n   Key: ___   Access Lines\n        ===   Trunk\
    \ Links (inter-CO user data links)\n        ...   Inter-CO signaling network links\n\
    \        SSP   Service Switching Point - a unit that implements the\n        \
    \      Service Switching Function\n        CCP   Call Control Point - a unit that\
    \ performs call control\n              functions.\n              This is normally\
    \ a kind of Central Office (shown as CO\n              above)\n        SCP   Service\
    \ Control Point - a unit implementing the Service\n              Control Function.\
    \ NOTE that this is connected to the SS7\n              Network and uses this\
    \ connection for all of its\n              communications.\n        I.P   Intelligent\
    \ Peripheral - a unit that contains specialized\n              resources (like\
    \ announcement units, tone decoders).\n              In effect, it implements\
    \ Special Resource Functions.\n        SN    Service Node\n                  \
    \             Figure 19\n   This diagram also shows a unit called a Service Node,\
    \ or SN. This\n   contains components that realize all of the operational Intelligent\n\
    \   Network functions (SSF, SCF, SDF, and SRF). It is sometimes more\n   convenient\
    \ to have all of these elements in one node (for example,\n   for operations and\
    \ maintenance reasons), particularly within smaller\n   PSTNs or where there is\
    \ a relatively low level of requests for\n   particular services. Another difference\
    \ is that, as they are all co-\n   located, proprietary protocols can be used\
    \ for internal\n   communication, rather than the full Intelligent Network Application\n\
    \   Part (INAP) protocol used over the core signaling network between\n   discrete\
    \ units. It also differs from the \"unbundled\" approach in that\n   it is connected\
    \ to the COs within a PSTN as a peripheral, having only\n   an access connection\
    \ to a Central Office; there is no connection to\n   the core signaling network.\
    \ Other than this, it operates in a similar\n   way, and can provide the same\
    \ kinds of services. Information on the\n   specification of the Intelligent Network\
    \ can be found in the ITU\n   recommendations [1], while two books ([2] and [3])\
    \ describe the\n   system, its history, operation, and the philosophy behind it.\n"
- title: 11.2 Call Center Features
  contents:
  - "11.2 Call Center Features\n   A Call Center is a system that allows a company\
    \ to be organized with\n   a group of similar individuals (agents), all of whom\
    \ can either make\n   calls to, or take calls from, customers. The system distributes\n\
    \   incoming calls to the agents based on their availability and\n   automates\
    \ the placement of outgoing calls, selecting an agent to\n   handle the call and\
    \ routing the call to them only once the call\n   request has been made of the\
    \ PSTN.\n   The incoming call distribution feature (\"automatic call\n   distribution\"\
    , or ACD) is usually coupled with a call queuing scheme.\n   In this scheme, the\
    \ callers are connected temporarily with an\n   announcement unit that normally\
    \ plays music. The calls are treated in\n   sequence so that (once the caller\
    \ is at the front of the queue) the\n   ACD system selects the next available\
    \ agent and routes the call\n   through to them.\n   Another feature connects\
    \ a customer making an incoming call to a unit\n   that asks them for some information\
    \ on the purpose of their call,\n   selecting the agent to handle the call based\
    \ on the particular area\n   of expertise needed; to do this, the agents are further\
    \ categorized\n   by their knowledge (or \"Skill Set\"). If this skill set categorization\n\
    \   is used then by implication there will be separate queues for each of\n  \
    \ the skill sets. This user selection scheme can be used independently\n   of\
    \ the others. For example these so-called \"voice navigation systems\"\n   can\
    \ be used to select a particular department extension number, based\n   on the\
    \ function required by the customer; as such, they can automate\n   the job of\
    \ company telephone receptionist in routing incoming calls.\n   Where possible,\
    \ the information gleaned from the customer can be\n   provided to the selected\
    \ agent, usually via a separate networked\n   computer connection.  Similarly,\
    \ if an outgoing call is being made to\n   one of a list of customers, information\
    \ on the customer and the\n   purpose of the call can be provided to the agent\
    \ selected to handle\n   the call. Such configurations are generally called \"\
    Computer\n   Telephony Integration\" or CTI systems. Strictly, a CTI system can\
    \ be\n   arranged to handle routing of incoming calls and automation of\n   outgoing\
    \ calls only (also known as computer integrated telephony\n   features), without\
    \ the agents having access to a network of\n   computers. However, the business\
    \ case for combining the telephony\n   functions of the call center with provision\
    \ to the agents of\n   computers with customer information can be compelling.\n\
    \   This is often further combined with a company's order and service\n   processing\
    \ computer system. In this case, a call is treated as part\n   of a business transaction,\
    \ with the information to be exchanged\n   captured as fields of a computer form.\
    \ While such a computer system\n   is not, strictly, part of a call center, integrating\
    \ the company\n   computer system with the call center is very common. This allows\
    \ the\n   details of the call to be stored on a centralized database, allowing\n\
    \   further automated order processing, for example. It also allows the\n   call\
    \ to be transferred from one agent to another where needed,\n   ensuring that\
    \ the new agent has the information already captured.\n   This might be useful\
    \ if someone with a different area of expertise\n   were to be needed to handle\
    \ the customer's requirements.\n   Traditionally, Call Centers have been used\
    \ to support teams of agents\n   working at a single site (or a small number of\
    \ sites, with private\n   telephony trunks interconnecting them). The site Private\
    \ Automatic\n   Branch eXchange (PABX) was integrated with a computer system to\n\
    \   provide these features to people at that site. There can be a\n   business\
    \ case for provision of such features to distributed teams of\n   workers as well.\
    \ In particular, the possibility of providing support\n   for people working from\
    \ home has been seen as important. Some of the\n   Call Center features have been\
    \ incorporated into public telephone\n   exchanges or Central Offices (COs) from\
    \ many manufacturers as part of\n   their \"Centrex\" service offerings.\n   There\
    \ are practical limitations in providing such features on COs.\n   Apart from\
    \ the procedures needed to configure these features for any\n   telephone line\
    \ that is to use them, the basic requirement that every\n   agent must have a\
    \ connection to the supporting CO can limit its\n   usefulness. Another approach\
    \ is to provide Call Center features via\n   the Intelligent Network. The features\
    \ might thus be provided over a\n   Telephone Operator's entire network, and would\
    \ mean that the Call\n   Center could be configured centrally while still allowing\
    \ agents to\n   be located anywhere within the telephone network. It also means\
    \ that\n   the supported company can pay for the Call Center features \"as they\n\
    \   go\" rather than having a high \"up front\" cost.\n"
- title: 12. References
  contents:
  - "12. References\n   [1] ITU-T Q.12xx Recommendation Series, Geneva, 1995.\n  \
    \ [2] I. Faynberg, L. R. Gabuzda, M. P. Kaplan, and N. J. Shah, \"The\n      \
    \ Intelligent Network Standards, their Application to Services\",\n       McGraw-Hill,\
    \ 1996.\n   [3] T. Magedanz and R. Popesku-Zeletin, \"Intelligent Networks: Basic\n\
    \       Technology, Standards and Evolution\", Intl. Thomson Computer\n      \
    \ Press, 1996.\n   [4] Information processing systems - Open Systems Interconnection\
    \ -\n       Specification of Abstract Syntax Notation One (ASN.1),\n       International\
    \ Organization for Standardization, International\n       Standard 8824, December,\
    \ 1987.\n   [5] McCloghrie, K., Editor, \"Structure of Management Information\
    \ for\n       Version 2 of the Simple Network Management Protocol (SNMPv2)\",\n\
    \       RFC 1902, January 1996.\n   [6] Kristol, D. and L. Montulli, \"HTTP State\
    \ Management Mechanism\",\n       RFC 2109, February 1997.\n   [7] Zimmerman,\
    \ D., \"The Finger User Information Protocol\", RFC 1288\n       December 1991.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Steve Bellovin\n   AT&T Labs\n   Room E-215\n   180 Park\
    \ Ave. Bldg. 103\n   Florham Park, NJ 07932-0000\n   USA\n   Phone: +1 973 360\
    \ 8656\n   Fax: +1 973 360 8077\n   EMail: smb@research.att.com\n   Fred M. Burg\n\
    \   AT&T Labs\n   Room 1N-117\n   307 Middletown Lincroft Road\n   Lincroft, NJ\
    \ 07738\n   USA\n   Phone: +1 732 576 4322\n   Fax: +1 732 576 4317\n   EMail:\
    \ fburg@hogpb.att.com\n   Lawrence Conroy\n   Roke Manor Research Limited\n  \
    \ IT&N-INIA Group\n   Roke Manor, Old Salisbury Lane,\n   Romsey, Hampshire  \
    \  SO51 0ZN\n   U.K.\n   Phone: +44 1794 833666\n   Fax: +44 1794 833434\n   EMail:\
    \ lwc@roke.co.uk\n   Paul Davidson\n   Nortel\n   P.O.Box 3511 Station \"C\"\n\
    \   Mail Stop 242\n   Ottawa, Ontario, Canada K1Y 4H7\n   Phone: +1 613 763 4234\n\
    \   EMail: pauldav@nortel.ca\n   A. DeSimone\n   Lucent Technologies\n   Room\
    \ 6H510\n   600-700 Mountain Avenue\n   Murray Hill, NJ  07974-0636\n   USA\n\
    \   Phone: +1 908 582 2382\n   Fax: +1 908 582 1086\n   E-Mail:tds@lucent.com\n\
    \   Murali Krishnaswamy\n   Bell Laboratories\n   Lucent Technologies\n   Room\
    \ 2G-527a\n   101 Crawfords Corner Road\n   Holmdel, NJ 07733-3030\n   USA\n \
    \  Phone: +1 732 949 3611\n   Fax: +1 732 949 3210\n   EMail: murali@bell-labs.com\n\
    \   Hui-Lan Lu\n   Bell Laboratories\n   Lucent Technologies\n   Room 4K-309\n\
    \   101 Crawfords Corner Road\n   Holmdel, NJ 07733-3030\n   USA\n   Phone: +1\
    \ 732 949 0321\n   Fax: +1 732 949 1196\n   EMail: hui-lan.lu@bell-labs.com\n\
    \   Henning Schulzrinne\n   Dept. of Computer Science\n   Columbia University\n\
    \   New York, NY 10027\n   USA\n   Phone: +1 212 939 7042 (@Bell Labs: 732 949\
    \ 8344)\n   Fax: +1 212 666 0140\n   EMail: schulzrinne@cs.columbia.edu\n   Kamlesh\
    \ T. Tewani\n   AT&T Labs\n   Room 1K-334\n   101, Crawfords Corner Rd.\n   Holmdel,\
    \ NJ 07733\n   USA\n   Phone: +1 732 949 5369\n   Fax: +1 732 949 8569\n   EMail:\
    \ tewani@att.com\n   Kumar Vishwanathan\n   Isochrone\n   EMail: kumar@isochrone.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
