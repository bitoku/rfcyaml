- title: __initial_text__
  contents:
  - '                         The mailto URL scheme

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the format of Uniform Resource Locators (URL)\n\
    \   for designating electronic mail addresses. It is one of a suite of\n   documents\
    \ which replace RFC 1738, 'Uniform Resource Locators', and\n   RFC 1808, 'Relative\
    \ Uniform Resource Locators'. The syntax of\n   'mailto' URLs from RFC 1738 is\
    \ extended to allow creation of more RFC\n   822 messages by allowing the URL\
    \ to express additional header and\n   body fields.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The mailto URL scheme is used to designate the Internet mailing\n\
    \   address of an individual or service. In its simplest form, a mailto\n   URL\
    \ contains an Internet mail address.\n   For greater functionality, because interaction\
    \ with some resources\n   may require message headers or message bodies to be\
    \ specified as well\n   as the mail address, the mailto URL scheme is extended\
    \ to allow\n   setting mail header fields and the message body.\n"
- title: 2. Syntax of a mailto URL
  contents:
  - "2. Syntax of a mailto URL\n   Following the syntax conventions of RFC 1738 [RFC1738],\
    \ a \"mailto\"\n   URL has the form:\n     mailtoURL  =  \"mailto:\" [ to ] [\
    \ headers ]\n     to         =  #mailbox\n     headers    =  \"?\" header *( \"\
    &\" header )\n     header     =  hname \"=\" hvalue\n     hname      =  *urlc\n\
    \     hvalue     =  *urlc\n   \"#mailbox\" is as specified in RFC 822 [RFC822].\
    \ This means that it\n   consists of zero or more comma-separated mail addresses,\
    \ possibly\n   including \"phrase\" and \"comment\" components. Note that all\
    \ URL\n   reserved characters in \"to\" must be encoded: in particular,\n   parentheses,\
    \ commas, and the percent sign (\"%\"), which commonly occur\n   in the \"mailbox\"\
    \ syntax.\n   \"hname\" and \"hvalue\" are encodings of an RFC 822 header name\
    \ and\n   value, respectively. As with \"to\", all URL reserved characters must\n\
    \   be encoded.\n   The special hname \"body\" indicates that the associated hvalue\
    \ is the\n   body of the message. The \"body\" hname should contain the content\
    \ for\n   the first text/plain body part of the message. The mailto URL is\n \
    \  primarily intended for generation of short text messages that are\n   actually\
    \ the content of automatic processing (such as \"subscribe\"\n   messages for\
    \ mailing lists), not general MIME bodies.\n   Within mailto URLs, the characters\
    \ \"?\", \"=\", \"&\" are reserved.\n   Because the \"&\" (ampersand) character\
    \ is reserved in HTML, any mailto\n   URL which contains an ampersand must be\
    \ spelled differently in HTML\n   than in other contexts.  A mailto URL which\
    \ appears in an HTML\n   document must use \"&amp;\" instead of \"&\".\n   Also\
    \ note that it is legal to specify both \"to\" and an \"hname\" whose\n   value\
    \ is \"to\". That is,\n     mailto:addr1%2C%20addr2\n     is equivalent to\n \
    \    mailto:?to=addr1%2C%20addr2\n     is equivalent to\n     mailto:addr1?to=addr2\n\
    \   8-bit characters in mailto URLs are forbidden. MIME encoded words (as\n  \
    \ defined in [RFC2047]) are permitted in header values, but not for any\n   part\
    \ of a \"body\" hname.\n"
- title: 3. Semantics and operations
  contents:
  - "3. Semantics and operations\n   A mailto URL designates an \"internet resource\"\
    , which is the mailbox\n   specified in the address. When additional headers are\
    \ supplied, the\n   resource designated is the same address, but with an additional\n\
    \   profile for accessing the resource. While there are Internet\n   resources\
    \ that can only be accessed via electronic mail, the mailto\n   URL is not intended\
    \ as a way of retrieving such objects\n   automatically.\n   In current practice,\
    \ resolving URLs such as those in the \"http\"\n   scheme causes an immediate\
    \ interaction between client software and a\n   host running an interactive server.\
    \ The \"mailto\" URL has unusual\n   semantics because resolving such a URL does\
    \ not cause an immediate\n   interaction. Instead, the client creates a message\
    \ to the designated\n   address with the various header fields set as default.\
    \ The user can\n   edit the message, send this message unedited, or choose not\
    \ to send\n   the message. The operation of how any URL scheme is resolved is\
    \ not\n   mandated by the URL specifications.\n"
- title: 4. Unsafe headers
  contents:
  - "4. Unsafe headers\n   The user agent interpreting a mailto URL SHOULD choose\
    \ not to create\n   a message if any of the headers are considered dangerous;\
    \ it may also\n   choose to create a message with only a subset of the headers\
    \ given in\n   the URL.  Only the Subject, Keywords, and Body headers are believed\n\
    \   to be both safe and useful.\n   The creator of a mailto URL cannot expect\
    \ the resolver of a URL to\n   understand more than the \"subject\" and \"body\"\
    \ headers. Clients that\n   resolve mailto URLs into mail messages should be able\
    \ to correctly\n   create RFC 822-compliant mail messages using the \"subject\"\
    \ and \"body\"\n   headers.\n"
- title: 5. Encoding
  contents:
  - "5. Encoding\n   RFC 1738 requires that many characters in URLs be encoded. This\n\
    \   affects the mailto scheme for some common characters that might\n   appear\
    \ in addresses, headers or message contents. One such character\n   is space (\"\
    \ \", ASCII hex 20). Note the examples above that use \"%20\"\n   for space in\
    \ the message body.  Also note that line breaks in the\n   body of a message MUST\
    \ be encoded with \"%0D%0A\".\n   People creating mailto URLs must be careful\
    \ to encode any reserved\n   characters that are used in the URLs so that properly-written\
    \ URL\n   interpreters can read them. Also, client software that reads URLs\n\
    \   must be careful to decode strings before creating the mail message so\n  \
    \ that the mail messages appear in a form that the recipient will\n   understand.\
    \ These strings should be decoded before showing the user\n   the message.\n \
    \  The mailto URL scheme is limited in that it does not provide for\n   substitution\
    \ of variables. Thus, a message body that must include a\n   user's email address\
    \ can not be encoded using the mailto URL. This\n   limitation also prevents mailto\
    \ URLs that are signed with public keys\n   and other such variable information.\n"
- title: 6. Examples
  contents:
  - "6. Examples\n   URLs for an ordinary individual mailing address:\n     <mailto:chris@example.com>\n\
    \   A URL for a mail response system that requires the name of the file\n   in\
    \ the subject:\n     <mailto:infobot@example.com?subject=current-issue>\n   A\
    \ mail response system that requires a \"send\" request in the body:\n     <mailto:infobot@example.com?body=send%20current-issue>\n\
    \   A similar URL could have two lines with different \"send\" requests (in\n\
    \   this case, \"send current-issue\" and, on the next line, \"send index\".)\n\
    \     <mailto:infobot@example.com?body=send%20current-\n     issue%0D%0Asend%20index>\n\
    \   An interesting use of your mailto URL is when browsing archives of\n   messages.\
    \ Each browsed message might contain a mailto URL like:\n     <mailto:foobar@example.com?In-Reply-\n\
    \     To=%3c3469A91.D10AF4C@example.com>\n   A request to subscribe to a mailing\
    \ list:\n     <mailto:majordomo@example.com?body=subscribe%20bamboo-l>\n   A URL\
    \ for a single user which includes a CC of another user:\n     <mailto:joe@example.com?cc=bob@example.com&body=hello>\n\
    \   Another way of expressing the same thing:\n     <mailto:?to=joe@example.com&cc=bob@example.com&body=hello>\n\
    \   Note the use of the \"&\" reserved character, above. The following\n   example,\
    \ by using \"?\" twice, is incorrect:\n     <mailto:joe@example.com?cc=bob@example.com?body=hello>\
    \   ; WRONG!\n   According to RFC 822, the characters \"?\", \"&\", and even \"\
    %\" may occur\n   in addr-specs. The fact that they are reserved characters in\
    \ this URL\n   scheme is not a problem: those characters may appear in mailto\
    \ URLs,\n   they just may not appear in unencoded form. The standard URL encoding\n\
    \   mechanisms (\"%\" followed by a two-digit hex number) must be used in\n  \
    \ certain cases.\n   To indicate the address \"gorby%kremvax@example.com\" one\
    \ would do:\n     <mailto:gorby%25kremvax@example.com>\n   To indicate the address\
    \ \"unlikely?address@example.com\", and include\n   another header, one would\
    \ do:\n     <mailto:unlikely%3Faddress@example.com?blat=foop>\n   As described\
    \ above, the \"&\" (ampersand) character is reserved in HTML\n   and must be replacded\
    \ with \"&amp;\". Thus, a complex URL that has\n   internal ampersands might look\
    \ like:\n     Click\n     <a href=\"mailto:?to=joe@xyz.com&amp;cc=bob@xyz.com&amp;body=hello\"\
    >\n     mailto:?to=joe@xyz.com&amp;cc=bob@xyz.com&amp;body=hello</a> to\n    \
    \ send a greeting message to <i>Joe and Bob</i>.\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   The mailto scheme can be used to send a message\
    \ from one user to\n   another, and thus can introduce many security concerns.\
    \ Mail messages\n   can be logged at the originating site, the recipient site,\
    \ and\n   intermediary sites along the delivery path. If the messages are not\n\
    \   encoded, they can also be read at any of those sites.\n   A mailto URL gives\
    \ a template for a message that can be sent by mail\n   client software. The contents\
    \ of that template may be opaque or\n   difficult to read by the user at the time\
    \ of specifying the URL.\n   Thus, a mail client should never send a message based\
    \ on a mailto URL\n   without first showing the user the full message that will\
    \ be sent\n   (including all headers that were specified by the mailto URL), fully\n\
    \   decoded, and asking the user for approval to send the message as\n   electronic\
    \ mail. The mail client should also make it clear that the\n   user is about to\
    \ send an electronic mail message, since the user may\n   not be aware that this\
    \ is the result of a mailto URL.\n   A mail client should never send anything\
    \ without complete disclosure\n   to the user of what is will be sent; it should\
    \ disclose not only the\n   message destination, but also any headers. Unrecognized\
    \ headers, or\n   headers with values inconsistent with those the mail client\
    \ would\n   normally send should be especially suspect. MIME headers (MIME-\n\
    \   Version, Content-*) are most likely inappropriate, as are those\n   relating\
    \ to routing (From, Bcc, Apparently-To, etc.)\n   Note that some headers are inherently\
    \ unsafe to include in a message\n   generated from a URL. For example, headers\
    \ such as \"From:\", \"Bcc:\",\n   and so on, should never be interpreted from\
    \ a URL. In general, the\n   fewer headers interpreted from the URL, the less\
    \ likely it is that a\n   sending agent will create an unsafe message.\n   Examples\
    \ of problems with sending unapproved mail include:\n     * mail that breaks laws\
    \ upon delivery, such as making illegal\n       threats;\n     * mail that identifies\
    \ the sender as someone interested in breaking\n       laws;\n     * mail that\
    \ identifies the sender to an unwanted third party;\n     * mail that causes a\
    \ financial charge to be incurred on the sender;\n     * mail that causes an action\
    \ on the recipient machine that causes\n       damage that might be attributed\
    \ to the sender.\n   Programs that interpret mailto URLs should ensure that the\
    \ SMTP\n   \"From\" address is set and correct.\n"
- title: 8. IANA Considerations
  contents:
  - "8. IANA Considerations\n   This document changes the definition of the mailto:\
    \ URI scheme; any\n   registry of URI schemes should refer to this document rather\
    \ than its\n   predecessor, RFC 1738.\n"
- title: 9. References
  contents:
  - "9. References\n   [RFC822] Crocker, D., \"Standard for the Format of ARPA Internet\
    \ Text\n            Messages\", STD 11, RFC 822, August 1982.\n   [RFC1738] Berners-Lee,\
    \ T., Masinter, L., and M. McCahill, Editors,\n             \"Uniform Resource\
    \ Locators (URL)\", RFC 1738, December 1994.\n   [RFC1808] Fielding, R., \"Relative\
    \ Uniform Resource Locators\", RFC\n             1808, June 1995.\n   [RFC2047]\
    \ Moore, K., \"MIME Part Three: Message Header Extensions for\n             Non-ASCII\
    \ Text\", RFC 2047, November 1996.\n"
- title: A. Change from RFC 1738
  contents:
  - "A. Change from RFC 1738\n   RFC 1738 defined only a simple 'mailto' with no headers,\
    \ just an\n   addr-spec (not a full mailbox.)  However, required usage and\n \
    \  implementation has led to the development of an extended syntax that\n   included\
    \ more header fields.\n"
- title: B. Acknowledgments
  contents:
  - "B. Acknowledgments\n   This document was derived from RFC 1738 and RFC 1808 [RFC1808];\
    \ the\n   acknowledgments from those specifications still applies.\n   The following\
    \ people contributed to this memo or had and discussed\n   similar ideas for mailto.\n\
    \   Harald Alvestrand\n   Bryan Costales\n   Steve Dorner\n   Al Gilman\n   Mark\
    \ Joseph\n   Laurence Lundblade\n   Keith Moore\n   Jacob Palme\n   Michael Patton\n"
- title: C. Author Contact Information
  contents:
  - "C. Author Contact Information\n   Paul E. Hoffman\n   Internet Mail Consortium\n\
    \   127 Segre Place\n   Santa Cruz, CA  95060 USA\n   EMail: phoffman@imc.org\n\
    \   Larry Masinter\n   Xerox Corporation\n   3333 Coyote Hill Road\n   Palo Alto,\
    \ CA 94304 USA\n   EMail: masinter@parc.xerox.com\n   Jamie Zawinski\n   Netscape\
    \ Communications Corp.\n   501 East Middlefield Road\n   Mountain View, CA 94043\
    \ USA\n   EMail: jwz@netscape.com\n"
- title: D.  Full Copyright Statement
  contents:
  - "D.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
