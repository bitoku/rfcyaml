- title: __initial_text__
  contents:
  - "     A STRUCTURED FORMAT FOR TRANSMISSION OF MULTI-MEDIA DOCUMENTS\n        \
    \                   Jonathan B. Postel\n                              August 1980\n\
    \                     Information Sciences Institute\n                   University\
    \ of Southern California\n                           4676 Admiralty Way\n    \
    \       A Structured Format for Transmission of Multi-Media Documents\n      \
    \                     TABLE OF CONTENTS\n    PREFACE ........................................................\
    \ iii\n"
- title: 1.  INTRODUCTION ..................................................... 1
  contents:
  - "1.  INTRODUCTION ..................................................... 1\n  1.1.\
    \  Motivation ................................................... 1\n  1.2.  Scope\
    \ ........................................................ 1\n  1.3.  Terminology\
    \ .................................................. 1\n  1.4.  Document Description\
    \ ......................................... 2\n  1.5.  Other Work ...................................................\
    \ 2\n"
- title: 2.  SPECIFICATION .................................................... 3
  contents:
  - "2.  SPECIFICATION .................................................... 3\n  2.1.\
    \  Document ..................................................... 3\n  2.2.  Message\
    \ Objects  ............................................. 5\n  2.3.  Body Structures\
    \ ............................................. 13\n  2.3.1.  Simple Elements\
    \ ........................................... 13\n  2.3.2.  Structured Text ...........................................\
    \ 13\n  2.3.3.  NLS File Example .......................................... 13\n\
    \  2.3.4.  Multimedia Structures ..................................... 15\n  2.3.5.\
    \  The Media ................................................. 21\n  2.3.6.  TEXT\
    \ ...................................................... 22\n  2.3.7.  VOICE .....................................................\
    \ 22\n  2.3.8.  FACSIMILE ................................................. 23\n\
    \  2.3.9.  GRAPHICS .................................................. 24\n"
- title: 3.  EXAMPLES & SCENARIOS ............................................ 25
  contents:
  - "3.  EXAMPLES & SCENARIOS ............................................ 25\n  Example\
    \ 1:  Text Example .......................................... 25\n  Example 2:\
    \  Multimedia Example .................................... 28\n"
- title: REFERENCES .......................................................... 31
  contents:
  - 'REFERENCES .......................................................... 31

    '
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - "A Structured Format for Transmission of Multi-Media Documents\n           A Structured\
    \ Format for Transmission of Multi-Media Documents\n                         \
    \       PREFACE\n"
- title: This is the first edition of this format specification and should be
  contents:
  - 'This is the first edition of this format specification and should be

    '
- title: treated as a request for comments, advice, and suggestions.  A great
  contents:
  - 'treated as a request for comments, advice, and suggestions.  A great

    '
- title: deal of prior work has been done on computer aided message systems and
  contents:
  - 'deal of prior work has been done on computer aided message systems and

    '
- title: some of this is listed in the reference section.  This specification was
  contents:
  - 'some of this is listed in the reference section.  This specification was

    '
- title: shaped by many discussions with members of the ARPA research community,
  contents:
  - 'shaped by many discussions with members of the ARPA research community,

    '
- title: and others interested in the development of computer aided message
  contents:
  - 'and others interested in the development of computer aided message

    '
- title: systems.  This document was prepared as part of the ARPA sponsored
  contents:
  - 'systems.  This document was prepared as part of the ARPA sponsored

    '
- title: Internetwork Concepts Research Project at ISI.
  contents:
  - "Internetwork Concepts Research Project at ISI.\n                            \
    \                                  Jon Postel\n           A Structured Format\
    \ for Transmission of Multi-Media Documents\n"
- title: 'RFC: 767                                                       J. Postel'
  contents:
  - "RFC: 767                                                       J. Postel\n  \
    \                                                               USC-ISI\n    \
    \                                                         August 1980\n     A\
    \ STRUCTURED FORMAT FOR TRANSMISSION OF MULTI-MEDIA DOCUMENTS\n              \
    \              1.  INTRODUCTION\n"
- title: This document describes a format for transmitting structured data
  contents:
  - 'This document describes a format for transmitting structured data

    '
- title: representations of multimedia documents.  This format is intended to be
  contents:
  - 'representations of multimedia documents.  This format is intended to be

    '
- title: used with the Internet Message Protocol in an internetwork message
  contents:
  - 'used with the Internet Message Protocol in an internetwork message

    '
- title: delivery system.  That system is designed to transmit messages between
  contents:
  - 'delivery system.  That system is designed to transmit messages between

    '
- title: processes in host computers called Message Processing Modules (MPMs).
  contents:
  - 'processes in host computers called Message Processing Modules (MPMs).

    '
- title: MPMs are located in several networks and together constitute an
  contents:
  - 'MPMs are located in several networks and together constitute an

    '
- title: internetwork message delivery system.  The Internet Message Protocol
  contents:
  - 'internetwork message delivery system.  The Internet Message Protocol

    '
- title: defines a message as being composed of an Identification, a Command, and
  contents:
  - 'defines a message as being composed of an Identification, a Command, and

    '
- title: a Document.  This report is intended to define the format of such
  contents:
  - 'a Document.  This report is intended to define the format of such

    '
- title: Documents.  The reader is assumed to be familiar with the Internet
  contents:
  - 'Documents.  The reader is assumed to be familiar with the Internet

    '
- title: Message Protocol [1].
  contents:
  - 'Message Protocol [1].

    '
- title: 1.1.  Motivation
  contents:
  - "1.1.  Motivation\n  Computer applications are being implemented which interact\
    \ with users\n  in a variety of media (text, graphics, facsimile, speech).  As\n\
    \  computer devices become available to process multimedia information it\n  becomes\
    \ desirable to use computers to exchange multimedia information\n  between programs\
    \ and users via various mechanisms including computer\n  mail.\n"
- title: 1.2.  Scope
  contents:
  - "1.2.  Scope\n  This format is intended to be used for the transmission of multimedia\n\
    \  documents in the internetwork message delivery system, but it is\n  thought\
    \ that it has a wider applicability.\n"
- title: 1.3.  Terminology
  contents:
  - "1.3.  Terminology\n  The messages are routed by a process called the Message\
    \ Processing\n  Module or MPM.  Messages are created and consumed by User Interface\n\
    \  Programs (UIPs) in conjunction with users.\n  The basic unit transferred between\
    \ MPMs is called a message.  A\n  message is made up of a transaction identifier\
    \ (which uniquely\n  identifies the message), a command (which contains the necessary\n\
    \  information for delivery), and document.  The document is a data\n  structure.\n\
    \  For a personal letter the document body corresponds to the contents of\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Introduction
  contents:
  - "Introduction\n  the letter; the document header corresponds to the date line,\n\
    \  greeting, and signature.\n  For an inter-office memo the document body corresponds\
    \ to the text;\n  the document header corresponds to the header of the memo.\n\
    \  The commands correspond to the information used by the Post Office or\n  the\
    \ mail room to route the letter or memo.  Some of the information in\n  the command\
    \ is supplied by the UIP.\n"
- title: 1.4.  Document Description
  contents:
  - "1.4.  Document Description\n  The document is composed of fields.  Each field\
    \ will carry an\n  identifying name.  Typical fields are DATE, TO, SUBJECT, and\
    \ BODY.\n  Most of the fields will be very simple, some will be complex.  The\n\
    \  body field may be quite complex.  For example, the DATE is a very\n  constrained\
    \ character string specifying the date and time in ISO\n  format. A more complex\
    \ example is the TO field which is a list of\n  mailboxes, where a mailbox is\
    \ itself a property list of address\n  information items.  The BODY may be simply\
    \ a character string, or a\n  very structured collection of data representing\
    \ information in\n  different media.\n  The BODY may be structured to indicate\
    \ a controlled presentation of\n  multimedia information.  There is provision\
    \ for the inclusion of text,\n  graphics, facsimile, and voice information in\
    \ the body of documents.\n  The presentation of information units may sequential,\
    \ independent, or\n  simultaneous.\n"
- title: 1.5.  Other Work
  contents:
  - "1.5.  Other Work\n  This protocol the benefited from the earlier work on message\
    \ protocols\n  in the ARPA Network [2,3,4,5,6], and the ideas of others about\
    \ the\n  design of computer message systems [7,8,9,10,11,12,13,14,15,16,17,18].\n\
    \           A Structured Format for Transmission of Multi-Media Documents\n  \
    \                         2.  SPECIFICATION\n"
- title: The structured format of a document is built on the basic data elements
  contents:
  - 'The structured format of a document is built on the basic data elements

    '
- title: used in the Internet Message Protocol [1].
  contents:
  - 'used in the Internet Message Protocol [1].

    '
- title: 2.1.  Document
  contents:
  - "2.1.  Document\n  The document is a property list of <name,value> pairs called\
    \ fields.\n  A few fields are specifically required and many are optional.  Some\
    \ of\n  the field values are simple and a few are quite complicated.  In\n  particular\
    \ the body value may be highly structured.\n  Older message systems have considered\
    \ the document to be divided into\n  a header and a body, and have used keywords\
    \ to indicate specific\n  header fields (e.g., date, to, subject).  Roughly speaking,\
    \ this\n  functionality is provided in this new structured format by considering\n\
    \  the name part of the <name,value> pair to be a keyword.  In addition,\n  this\
    \ new structured format eliminates the separate treatment of the\n  body.\n  It\
    \ is impossible to foresee the many forms documents will take so the\n  standard\
    \ for a document header must be flexible.  The approach here is\n  to define a\
    \ set of basic fields and allow addition of whatever fields\n  are necessary.\
    \  Features added in this fashion may not be understood\n  by others.\n  The minimum\
    \ document is a property list of the following fields:\n    Name     Value\n \
    \   ----     -----\n    DATE     date string (name)\n    SENDER   a mailbox\n\
    \    SUBJECT  subject string (text)\n    BODY     a data structure\n  A typical\
    \ document is a property list containing the following fields:\n    Name     Value\n\
    \    ----     -----\n    DATE     date string (name)\n    SENDER   a mailbox\n\
    \    FROM     list of mailboxes\n    TO       list of mailboxes\n    CC      \
    \ list of mailboxes\n    SUBJECT  subject string (text)\n    BODY     a data structure\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  An elaborate document might contain the following fields:\n\
    \    Name        Value\n    ----        -----\n    DATE        date string (name)\n\
    \    SENDER      a mailbox\n    FROM        list of mailboxes\n    TO        \
    \  list of mailboxes\n    CC          list of mailboxes\n    BCC         list\
    \ of mailboxes\n    REPLY-TO    list of mailboxes\n    SUBJECT     subject string\
    \ (text)\n    COMMENTS    comment string (text)\n    MESSAGE-ID  message identifier\
    \ of this message (text)\n    IN-REPLY-TO message identifier of previous message\
    \ (text)\n    REFERENCES  message identifiers of other messages (text)\n    KEYWORDS\
    \    key terms used in this message (text)\n    BODY        a data structure\n\
    \  One of the key objects is the mailbox.  It appears in the sender,\n  from,\
    \ to, cc, bcc, and reply-to fields.  The mailbox is a property\n  list of objects\
    \ that combine to specify a destination recipient for a\n  message.  Most of the\
    \ <name,value> pairs that make up a mailbox are\n  identical to those used in\
    \ the deliver command in the Internet Message\n  Protocol [1].  A few additional\
    \ <name,value> pairs are defined for use\n  in a mailbox in the document context.\
    \  In particular, there is a field\n  for the real name of a person in contrast\
    \ to the \"user name\" which\n  identifies a computer account.\n  In addition\
    \ there is a field to specify a distribution group name.\n  Such group names are\
    \ used to indicate that a document is being sent to\n  a group of recipients.\
    \  This essentially presents an alternate form\n  for a mailbox which consists\
    \ of the single <name,value> pair for the\n  group name.  There is no required\
    \ relationship between a group name\n  mailbox and other mailboxes in the same\
    \ list.\n  For example, all of the following situations are allowed:\n    .  a\
    \ mailbox list consisting of a single mailbox specifying a\n       particular\
    \ user,\n    .  a mailbox list consisting of a single mailbox with a group name,\n\
    \    .  a mailbox list consisting of a mailbox with a group name and a\n     \
    \  mailbox specifying a particular user, with either the user in or\n       not\
    \ in the group,\n    .  a mailbox list consisting of a mailbox with a group name\
    \ and a\n           A Structured Format for Transmission of Multi-Media Documents\n\
    \                                                           Specification\n  \
    \     several mailboxes specifying a particular users, with some users\n     \
    \  in the group and some not,\n    .  a mailbox list consisting of several mailboxes\
    \ specifying group\n       names and a several mailboxes specifying a particular\
    \ users, with\n       some users in the groups and some not.\n"
- title: 2.2.  Message Objects
  contents:
  - "2.2.  Message Objects\n  In the documents of messages, we use a set of objects\
    \ such as mailbox\n  or date.  These objects are encoded in basic data elements.\
    \  Some\n  objects are simple things like integers or character strings, other\n\
    \  objects are more complex things like lists or property lists.  The\n  following\
    \ is a list of the objects used in messages.  The object\n  descriptions are in\
    \ alphabetical order.\n  Account\n    The account information.  Represented by\
    \ a name element.\n  Address\n    Address is intended to contain the minimum information\
    \ necessary to\n    identify a user, and no more (compare with mailbox).\n   \
    \ An address is a property list which contains the following\n    <name,value>\
    \ pairs:\n      name    description\n      ----    -----------\n      NET    \
    \ network name\n      HOST    host name\n      USER    user name\n    or:\n  \
    \    name    description\n      ----    -----------\n      MPM     mpm-identifier\n\
    \      USER    user name\n  Answer\n    A yes (true) or no (false) answer to a\
    \ question.  Represented by a\n    boolean element.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  BCC\n    A list of mailboxes.  The addresses of those who receive\
    \ \"blind\n    carbon copies\" of the message.\n  Body\n    A data structure.\
    \  This may be as simple as a character string\n    (represented by a name or\
    \ text element), or complex structure of\n    lists.  It may be encrypted in part\
    \ or in whole.  Section 3.3\n    describes some possible structured bodies.\n\
    \  C\n    A character.  Represented by a name element.\n  CC\n    A list of mailboxes.\
    \  When copies of a message are sent to others in\n    addition to the addresses\
    \ in the To object, those to whom the copies\n    are sent will have their addresses\
    \ recorded here.\n  City\n    A city.  Represented by a name element.\n  Comments\n\
    \    A comment string.  Represented by a text element.\n  Count\n    A count of\
    \ items of some sort.  Represented by a integer element.\n  Country\n    A country.\
    \  Represented by a name element.\n           A Structured Format for Transmission\
    \ of Multi-Media Documents\n                                                 \
    \          Specification\n  Date\n    The date and time are represented according\
    \ to the International\n    Standards Organization (ISO) recommendations [19,20,21].\
    \  Taken\n    together the ISO recommendations 2014, 3307, and 4031 result in\
    \ the\n    following representation of the date and time:\n      yyyy-mm-dd-hh:mm:ss,fff+hh:mm\n\
    \    Where yyyy is the four-digit year, mm is the two-digit month, dd is\n   \
    \ the two-digit day, hh is the two-digit hour in 24 hour time, mm is\n    the\
    \ two-digit minute, ss is the two-digit second, and fff is the\n    decimal fraction\
    \ of the second.  To this basic date and time is\n    appended the offset from\
    \ Greenwich as plus or minus hh hours and mm\n    minutes.\n    The time is local\
    \ time and the offset is the difference between\n    local time and Coordinated\
    \ Universal Time (UTC).  To convert from\n    local time to UTC algebraically\
    \ subtract the offset from the local\n    time.\n    For example, when the time\
    \ in\n              Los Angeles is  14:25:00-08:00\n              the UTC is \
    \     22:25:00\n    or when the time in\n              Paris is        11:43:00+01:00\n\
    \              the UTC is      10:43:00\n  Device\n    A device name.  Represented\
    \ by a name element.\n  Document\n    A property list of fields.\n  Distribution\
    \ Group\n    An distribution group is a property list which contains the\n   \
    \ following <name,value> pair:\n      name    description\n      ----    -----------\n\
    \      GROUP   document distribution group name\n    This construct is used so\
    \ that a distribution group will be a\n    special case of a mailbox.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  Facsimile Structure\n    A facsimile data structure.  Represented\
    \ by a property list.\n  File\n    A file name.  Represented by a name element.\n\
    \  Format\n    A format indicator.  Represented by a name element.\n  From\n \
    \   A list of mailboxes.  The From is the name of the author of a\n    document.\n\
    \  Graphics Structure\n    A graphics data structure.  Represented by a property\
    \ list.\n  Group\n    A document distribution group name.  Represented by a name\
    \ element.\n  Host\n    A host name.  Represented by a name element.\n  Ident\n\
    \    The identifier of a person, usually their initials.  Represented by\n   \
    \ a name element.\n  In-Reply-To\n    The message identifier of previous message.\
    \  Represented by a text\n    element.\n  Internet Address\n    This identifies\
    \ a host in the ARPA internetwork environment.  The\n    internet address is a\
    \ 32 bit number, the higher order 8 bits\n    identify the network, and the lower\
    \ order 24 bits identify the host\n    on that network [22].  For use in this\
    \ format the internet address\n    is divided into eight bit fields and the value\
    \ of each field is\n    represented in decimal digits.  For example, the ARPANET\
    \ address of\n    ISIE is 167837748 and is represented as 10,1,0,52.  Further,\
    \ this\n           A Structured Format for Transmission of Multi-Media Documents\n\
    \                                                           Specification\n  \
    \  representation may be extended to include an address within a host,\n    such\
    \ as the TCP port of an MPM, for example, 10,1,0,52,0,45.\n  Keywords\n    The\
    \ key terms used in this message.  Represented by a text element.\n  Mailbox\n\
    \    This is the destination address of a user of the internetwork mail\n    system.\
    \  Mailbox contains information such as network, host,\n    location, and local\
    \ user identifier of the recipient of the message.\n    The mailbox may contain\
    \ information in addition to the minimum\n    required for delivery.\n    As an\
    \ example, when one sends a message to someone for the first\n    time, he may\
    \ include many items to aid in identifying the correct\n    recipient.  However,\
    \ once he gets a reply to this message, the reply\n    will contain an Address\
    \ (as opposed to Mailbox) which may be used\n    from then on.\n      A mailbox\
    \ is a property list.  A mailbox might contain the\n      following <name,value>\
    \ pairs:\n        name    description\n        ----    -----------\n        MPM\
    \     mpm-identifier\n        NET     network name\n        HOST    host name\n\
    \        PORT    address of MPM within the host\n        USER    user name (computer\
    \ account name)\n        PERSON  the real name of a person\n        GROUP   document\
    \ distribution group\n        ORG     organization name\n        CITY    city\n\
    \        STATE   state\n        COUNTRY country\n        ZIP     zip code\n  \
    \      PHONE   phone number\n    The minimum mail box is an Address or a Distribution\
    \ Group.\n  Message-ID\n    The message identifier of this message.  This is not\
    \ related to the\n    MPM message identification, but is a UIP long term document\n\
    \    identifier.  Represented by a text element.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  MPM-Identifier\n    The internetwork address of an MPM.  This\
    \ may be the ARPA Internet\n    Address or an X.121 Public Data Network Address\
    \ [23].  The\n    mpm-identifier is a property list which has one <name,value>\
    \ pair.\n    This unusual structure is used so that it will be easy to determine\n\
    \    the type of address used.\n  Net\n    A network name.  Represented by a name\
    \ element.\n  NLS Block\n    The information in an NLS node.  Represented by a\
    \ property list.\n  NLS Node\n    An NLS block and substructure.  Represented\
    \ by a property list.\n  NLS Substructure\n    A list of NLS nodes.  Represented\
    \ by a list.\n  Org\n    An organization name.  Represented by a name element.\n\
    \  Paragraph\n    A paragraph of text.  Represented by a text element.\n  Parcel\n\
    \    The basic unit of voice data.  Represented by a bitstr element.\n  Person\n\
    \    The real name of a person.  Represented by a name element.\n  Password\n\
    \    A password.  Represented by a name element.\n  Phone\n    A phone number.\
    \  Represented by a name element.\n           A Structured Format for Transmission\
    \ of Multi-Media Documents\n                                                 \
    \          Specification\n  Pointer\n    A pointer to information stored outside\
    \ this data structure.  A\n    property list containing the information necessary\
    \ to locate the\n    external data, the information necessary to gain access to\
    \ the\n    external data, and the information necessary to apply the correct\n\
    \    interpretation to the external data.  For example, this might\n    include:\n\
    \      name       description\n      ----       -----------\n      NET       \
    \ network name\n      HOST       host name\n      FILE       file name\n     \
    \ USER       user name (computer account name)\n      PASSWORD   password\n  \
    \    ACCOUNT    account\n      FORMAT     format\n  Port\n    The address of MPM\
    \ within the host.  Represented by a name element.\n  Presentation Descriptor\n\
    \    A property list of <name,value> pairs, where the name is an order\n    indicator,\
    \ and the value is a presentation element.  The order\n    indicators are SEQUENTIAL,\
    \ SIMULTANEOUS, and INDEPENDENT.\n  Presentation Element\n    A property list\
    \ of media structures.\n  Protocol\n    The name of the coding scheme used for\
    \ a medium.  Represented by a\n    name element.\n  References\n    The message\
    \ identifiers of other messages.  Represented by a list of\n    text elements.\n\
    \  Reply-To\n    A list of mailboxes.  Sometimes it will be desired to direct\
    \ the\n    replies of a message to some address other than the from or the\n \
    \   sender.  In such a case the reply-to object can be used.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  R 450 Block\n    The unit of Rapicom 450 data (585 bits).  Represented\
    \ by a bitstr\n    element.\n  Sender\n    A mailbox.  The sender will contain\
    \ the address of the individual\n    who sent the message.  In some cases this\
    \ is NOT the same as the\n    author of the message.  Under such a condition,\
    \ the author should be\n    specified in the from object.\n  SID\n    An NLS statement\
    \ indetifier.  Represented by a integer element.\n  State\n    A state name. \
    \ Represented by a name element.\n  Subject\n    The subject of the message. \
    \ Represented by a text element.\n  Text Structure\n    A text data structure.\
    \  Represented by a property list.\n  To\n    A list of mailboxes.  To identifies\
    \ the addressees of the message.\n  User\n    A user name (computer account name).\
    \  Represented by a name element.\n  Version\n    A version number.  Represented\
    \ by a index element.\n  Vocoder\n    A vocoder name.  Represented by a name element.\n\
    \  Voice Structure\n    A voice data structure.  Represented by a property list.\n\
    \           A Structured Format for Transmission of Multi-Media Documents\n  \
    \                                                         Specification\n  X121\
    \ Address\n    This identifies a host in the Public Data Network environment.\
    \  When\n    used as a part of identifier, it identifies the originating host\
    \ of\n    a message.  The X121 address is a sequence of up to 14 digits [23].\n\
    \    For use in this format the X121 address is represented in decimal\n    digits.\n\
    \  ZIP\n    A zip code.  Represented by a name element.\n"
- title: 2.3.  Body Structures
  contents:
  - "2.3.  Body Structures\n  2.3.1.  Simple Elements\n    The body could simply be\
    \ a single data element.  For example a\n    single text element can represent\
    \ a lengthy character string.\n      <body> := TEXT\n      or\n      text:\"this\
    \ is the actual text of the body\"\n  2.3.2.  Structured Text\n    The body could\
    \ be thought of as paragraphs, where each paragraph is\n    represented by a text\
    \ element.  The paragraphs are then the elements\n    of a list.\n      <body>\
    \ := LIST (<paragraph>, <paragraph>, ...)\n        <paragraph> := TEXT\n     \
    \ or\n      list:(text:\"paragraph one\", text:\"paragraph two\", ...)\n  2.3.3.\
    \  NLS File Example\n    It is possible to represent the data from NLS files in\
    \ this format.\n    NLS is a large multipurpose system which operates on structured\
    \ data\n    files.  The files are tree structured, and there is data associated\n\
    \    with each node of the tree.  There are several fields associated\n    with\
    \ each node as well.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n    An NLS file is:\n      proplist(                         \
    \                            file\n        name:\"FILENAME\", name:<file>    \
    \                    name of file\n        name:\"CREATION-DATE\", name:<date>\
    \         creation date and time\n        name:\"VERSION\", index:<version>  \
    \            file version number\n        name:\"SID-COUNT\", integer<count> \
    \              current SID count\n        name:\"LAST-WRITER\", name:<ident> \
    \            last writer of file\n        name:\"OWNER\", name:<ident>       \
    \                  owner of file\n        name:\"LAST-WRITE-TIME\", name:<date>\
    \     last write date and time\n        name:\"LEFT-NAME-DELIM-DEFAULT\", name:<c>\
    \            default name\n        name:\"RIGHT-NAME-DELIM-DEFAULT\", name:<c>\
    \             delimiters\n        name:\"SUBSTRUCTURE\", <nls-substructure>  \
    \           substructure\n      )endlist\n    An NLS substructure is:\n      list:(\
    \                                                substructure\n        <nls-node>\
    \                                 node is defined below\n          .\n       \
    \   .\n          .\n      )endlist\n    An NLS node is:\n      proplist:(    \
    \                                                node\n        name:\"BLOCK\"\
    , <nls-block>                    block defined below\n        name:\"SUBSTRUCTURE\"\
    , <nls-substructure>             substructure\n      )endlist\n    An NLS block\
    \ is:\n      proplist:(                                                   block\n\
    \        name:\"LEFT-NAME-DELIM\", name:<c>             left name delimiter\n\
    \        name:\"RIGHT-NAME-DELIM\", name:<c>           right name delimiter\n\
    \        name:\"SID\", integer:<sid>                             SID number\n\
    \        name:\"CREATOR\", name:<ident>                   statement creator\n\
    \        name:\"CREATION-TIME\", name:<date>         creation date and time\n\
    \        name:\"DATA\", <data>                           data defined below\n\
    \      )endlist\n           A Structured Format for Transmission of Multi-Media\
    \ Documents\n                                                           Specification\n\
    \    NLS data is:\n      proplist:(                                          \
    \          data\n        name:\"<a data name>\", <type depends on data name>\n\
    \                    .           .\n                    .           .\n      \
    \              .           .\n      )endlist\n    For text, data is:\n      proplist:(\
    \                                                    data\n        name:\"TEXT\"\
    , text:\"text of statement\"                       text\n      )endlist\n  2.3.4.\
    \  Multimedia Structures\n    One can conceive of graphical information being\
    \ displayed along with\n    a running commentary, much as seminars use slides.\
    \  A slide and its\n    description are tied together.  The coordination of such\
    \ a\n    presentation is central to its understanding.  This synchronization\n\
    \    should be captured within the document structure.\n    There are three fundamentally\
    \ different types of time ordered\n    control which are needed within the document\
    \ structure.  These are:\n      Simultaneous\n      Sequential\n      Independent\n\
    \    Simultaneous data is intended for synchronous presentation.  The\n    implication\
    \ is that this data is presented in parallel.\n    Sequential data items will\
    \ be presented one at a time, in the order\n    listed.  The ordering is strictly\
    \ left to right.\n    Independent data can be presented in any time order.  It\
    \ is not\n    ordered in any manner.\n    The data is broken into small information\
    \ units called presentation\n    elements or PEs.  The PEs can be combined in\
    \ structures to control\n    the presentation order.  A PE is a property list\
    \ of elements\n    representing information of various media.  For example:\n\
    \      <pe> := proplist(\n                name:\"VOICE\", <voice-structure>,\n\
    \                name:\"GRAPHICS\", <graphics-structure>\n              )endlist\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n    PEs are combined into larger controled presentations by\n\
    \    presentation-descriptors or PDs.  A PD is a property list which\n    specifies\
    \ the type of time ordering of the PEs in its list.\n      <pd> := <<seq>> | <<sim>>\
    \ | <<ind>>\n      <<seq>> := name:\"SEQUENTIAL\", <pe>\n      <<sim>> := name:\"\
    SIMULTANEOUS\", <pe>\n      <<ind>> := name:\"INDEPENDENT\", <pe>\n    A PE is\
    \ a property list of the media <name,value> pairs, or PDs.\n      <pe> := <<text>>\
    \ | <<voice>> | <<facsimile>>\n            | <<graphics>> | <pd>\n      <<text>>\
    \ := name:\"TEXT\", <text structure>\n      <<voice>> := name:\"VOICE\", <voice\
    \ structure>\n      <<facsimile>> := name:\"FACSIMILE\", <facsimile structure>\n\
    \      <<graphics>> := name:\"GRAPHICS\", <graphics structure>\n    If more than\
    \ one <name,value> pair is present within a PE the media\n    are presented on\
    \ different output devices in the order specified by\n    the PE's parent PD.\
    \  The order of appearance within the proplist is\n    important only in the event\
    \ that the parent PD specified sequential\n    ordering.\n    The structure of\
    \ multimedia messages which use this scheme will be\n    demonstrated by a few\
    \ simple examples chosen to illustrate a basic\n    text document and the different\
    \ ordering options.  The last example\n    will suggest some more exotic uses.\n\
    \           A Structured Format for Transmission of Multi-Media Documents\n  \
    \                                                         Specification\n    Plain\
    \ Text Message\n      A simple text body could be represented in a single text\
    \ data\n      structure.  To give the simplest example of a structured body we\n\
    \      show a simple text body represented in the multimedia structure.\n    \
    \    <body> := <pd>\n          <pd> := <<seq>>\n            <<seq>> :=  name:\"\
    SEQUENTIAL\", <pe>\n              <pe> := name:\"TEXT\", <text structure>\n  \
    \      or\n        proplist: (name:\"SEQUENTIAL\",\n                  proplist:(\n\
    \                    name:\"TEXT\", <text structure>\n                  )endlist\n\
    \        )endlist\n    Simultaneous Ordering\n      This ordering option is used\
    \ to indicate when separate streams are\n      to be presented in parallel.  For\
    \ example, assume GRAPHICS and\n      VOICE data were to be presented using simultaneously.\n\
    \        <body> := <pd>\n          <pd> := <<sim>>\n            <<sim>> :=  name:\"\
    SIMULTANEOUS\", <pe>\n              <pe> := name:\"VOICE\", <voice structure>\n\
    \                      name:\"GRAPHICS\", <graphics structure>\n        or\n \
    \       proplist:(\n          name:\"SIMULTANEOUS\",\n            proplist:(\n\
    \              name:\"VOICE\", <voice structure>\n              name:\"GRAPHICS\"\
    , <graphics structure>\n            )endlist\n        )endlist\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n    Sequential Ordering\n      This option is used to indicate\
    \ sequential time ordering.  The\n      media in the sub-tree below this PD are\
    \ not separate streams.\n      Using again the example above, assume GRAPHICS\
    \ and VOICE data were\n      to be presented using sequential ordering.\n    \
    \    <body> := <pd>\n          <pd> := <<seq>>\n            <<seq>> :=  name:\"\
    SEQUENTIAL\", <pe>\n              <pe> := name:\"VOICE\", <voice structure>\n\
    \                      name:\"GRAPHICS\", <graphics structure>\n        or\n \
    \       proplist:(\n          name:\"SEQUENTIAL\",\n            proplist:(\n \
    \             name:\"VOICE\", <voice structure>\n              name:\"GRAPHICS\"\
    , <graphics structure>\n            )endlist\n        )endlist\n    Independent\
    \ Ordering\n      It is apparent that some output devices are very slow in\n \
    \     comparison to others.  An example which demonstrates this is\n      facsimile.\
    \  The majority of facsimile devices are slow.  A\n      detailed picture transmitted\
    \ at 9600 baud takes minutes to print.\n      It is inconvenient for the user\
    \ to wait on such a device when the\n      voice or text information which accompanies\
    \ it is short.\n      For example, if the document a facsimile image and the text\n\
    \      \"Hello Frank, here's a copy of that picture you requested.\"  The\n  \
    \    user need not wait for the picture.  The facsimile machine might\n      be\
    \ spooled, in which case he would pick up the picture later.  In\n      a sense\
    \ the picture was time independent of the text.\n           A Structured Format\
    \ for Transmission of Multi-Media Documents\n                                \
    \                           Specification\n        <body> := <pd>\n          <pd>\
    \ := <<ind>>\n            <<ind>> :=  name:\"INDEPENDENT\", <pe>\n           \
    \   <pe> := name:\"FACSIMILE\", <facsimile structure>\n                      name:\"\
    TEXT\", <text structure>\n        or\n        proplist:(\n          name:\"INDEPENDENT\"\
    ,\n            proplist:(\n              name:\"FACSIMILE\", <facsimile structure>\n\
    \              name:\"TEXT\", <text structure>\n            )endlist\n       \
    \ )endlist\n    A Stream Example\n      By making use of the structure and the\
    \ sequential ordering option\n      it is possible to initiate a stream.  The\
    \ stream will proceed at\n      its own pace until concluded.\n        <body>\
    \ := <pd>\n          <pd> := <<seq>>\n            <<seq>> :=  name:\"SEQUENTIAL\"\
    , <pe>\n              <pe> := <pd>\n                <pd> := <<sim>>\n        \
    \          <<sim>> :=  name:\"SIMULTANEOUS\", <pe>\n                    <pe> :=\
    \ name:\"VOICE\", <voice structure>\n                            name:\"GRAPHICS\"\
    , <graphics structure>\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n        or\n        proplist:(\n          name:\"SEQUENTIAL\"\
    ,\n            proplist:(\n              name:\"SIMULTANEOUS\",\n            \
    \    proplist:(\n                  name:\"VOICE\", <voice structure>\n       \
    \           name:\"GRAPHICS\", <graphics structure>\n                )endlist,\n\
    \              name:\"SIMULTANEOUS\",\n                proplist:(\n          \
    \        name:\"VOICE\", <voice structure>\n                  name:\"GRAPHICS\"\
    , <graphics structure>\n                )endlist,\n              .\n         \
    \     .\n              .\n            )endlist\n        )endlist\n      Such a\
    \ document structure suggests a slide presentation.\n    Multiple Active Stream\
    \ Example\n      This example is exotic but illustrates what is possible. By making\n\
    \      use of the structure and the simultaneous ordering it is possible\n   \
    \   to start in parallel two or more separate streams. Each stream\n      will\
    \ proceed at its own pace until all are concluded.\n        <body> := <pd>\n \
    \         <pd> := name:\"SIMULTANEOUS\", <pe>\n            <pe> = <pd>\n     \
    \         <pd> := name:\"SEQUENTIAL\", <pe>\n                <pe> = <pd>\n   \
    \               <pd> := name:\"SIMULTANEOUS\", <pe>\n                    <pe>\
    \ := name:\"VOICE\",\n                                                       <voice\
    \ structure>\n                            name:\"GRAPHICS\",\n               \
    \                                     <graphics structure>\n           A Structured\
    \ Format for Transmission of Multi-Media Documents\n                         \
    \                                  Specification\n        or\n        proplist:(\n\
    \         name:\"SIMULTANEOUS\",\n           proplist:(\n             name:\"\
    SEQUENTIAL\",\n               proplist:(\n                 name:\"SIMULTANEOUS\"\
    ,\n                   proplist:(\n                     name:\"VOICE\", <voice\
    \ structure>\n                     name:\"GRAPHICS\", <graphics structure>\n \
    \                  )endlist,\n                 name:\"SIMULTANEOUS\",\n      \
    \              proplist:(\n                      name:\"VOICE\", <voice structure>\n\
    \                      name:\"GRAPHICS\", <graphics structure>\n             \
    \       )endlist,\n                 .\n                 .\n                 .\n\
    \               )endlist\n             name:\"SEQUENTIAL\",\n               proplist:(\n\
    \                 name:\"SIMULTANEOUS\",\n                   proplist:(\n    \
    \                 name:\"VOICE\", <voice structure>\n                     name:\"\
    GRAPHICS\", <graphics structure>\n                   )endlist,\n             \
    \    .\n                 .\n                 .\n               )endlist\n    \
    \       )endlist\n        )endlist\n  2.3.5.  The Media\n    So far no explicit\
    \ description has been given for the media classes\n    which fit into a PE. \
    \ It is not known what types of media will be\n    supported in the various document\
    \ stations in the future. Those for\n    which support is in part already available\
    \ are:\n      TEXT\n      VOICE\n      FACSIMILE\n      GRAPHICS\n    Standard\
    \ formats for data in each of these media must be defined.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n  2.3.6.  TEXT\n    The text data may be structured according\
    \ to a variety of protocols\n    (yet to be defined).  The top level of the data\
    \ structure is a\n    property list which identifies the protocol, and the version\
    \ of that\n    protocol.\n      name:\"TEXT\", proplist:(\n                  \
    \    name:\"PROTOCOL\", <protocol>,\n                      name:\"VERSION\", <version>,\n\
    \                      name:\"DATA\", <data>\n                    )endlist\n \
    \   The first protocol is called PARAGRAPH, and the data is a list of\n    paragraphs,\
    \ where each paragraph is a text element.\n      name:\"DATA\", list:(\n     \
    \                text: <paragraph>\n                     text: <paragraph>\n \
    \                    .\n                     .\n                     .\n     \
    \              )endlist\n  2.3.7.  VOICE\n    Since a good deal of research has\
    \ been done towards implementing the\n    transmission of voice data on the ARPANET,\
    \ the Network Voice\n    Protocol (NVP) provides the basis for the standard for\
    \ voice data\n    [24].\n    Voice data a property list which specifies the vocoder\
    \ being used,\n    the transmission protocol and the parcel data.  The parcel\
    \ data form\n    is specific to the protocol used and is grouped in lists.\n \
    \     name:\"VOICE\", proplist:(\n                      name:\"VOCODER\", <vocoder>,\n\
    \                      name:\"PROTOCOL\", <protocol>,\n                      name:\"\
    VERSION\", <version>,\n                      name:\"DATA\", <data>\n         \
    \           )endlist\n    The NVP protocol has a number of parameters, the version\
    \ number\n    specifies a certain set of the parameters used by the vocoder\n\
    \    hardware and software to set up timing and define the type of coding\n  \
    \  used.  It is not expected that within a document the version number\n    will\
    \ change.\n           A Structured Format for Transmission of Multi-Media Documents\n\
    \                                                           Specification\n  \
    \  NVP itself supports negotiation of these parameters to insure both\n    ends\
    \ of a network speech connection 'understand' one another.  Since\n    no such\
    \ interactive negotiation is possible in a document system,\n    negotiation capabilities\
    \ have been excluded.  As differing hardware\n    becomes available new versions\
    \ may be defined.\n    For the NVP protocol the data list will take the following\
    \ form:\n      name:\"DATA\", list:(\n                     bitstr: <parcel>\n\
    \                     bitstr: <parcel>\n                     .\n             \
    \        .\n                     .\n                   )endlist\n    The items\
    \ in the list are parcels.  The individual parcels  are bit\n    string data elements\
    \ whose contents and length are predefined by the\n    version number.  The number\
    \ of parcels in a parcel group is\n    available from the item count in the enclosing\
    \ list header.\n  2.3.8.  FACSIMILE\n    There are a number of facsimile devices\
    \ in use.  While standards are\n    being established by CCITT [25], of the devices\
    \ available today many\n    are incompatible due to proprietary compression algorithms.\
    \  The\n    description of fax data will allow for the possibility of several\n\
    \    protocols.\n      name:\"FACSIMILE\", proplist:(\n                      \
    \    name:\"DEVICE\", <device>,\n                          name:\"PROTOCOL\",\
    \ <protocol>,\n                          name:\"DATA\", <data>\n             \
    \           )endlist\n    There are few facsimile devices interfaced to computers\
    \ though, and\n    the existing experiments in the ARPANET all use the RAPICOM\
    \ 450.  A\n    first facsimile standard format will be based on the data structure\n\
    \    used for this machine [26].  That is, for device RAPICOM450 and\n    protocol\
    \ BLOCK, the data will be:\n      name:\"DATA\", list:(\n                    \
    \ bitstr:<r450-block>,\n                     bitstr:<r450-block>,\n          \
    \           .\n                     .\n                     .\n              \
    \     )endlist\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Specification
  contents:
  - "Specification\n    Where an r450-block is a 585 bit unit.\n  2.3.9.  GRAPHICS\n\
    \    The situation for graphics bears much similarity to facsimile.\n    Devices\
    \ on the market today have a variety of user interfaces and\n    options. A similar\
    \ structure is defined.\n      name:\"GRAPHICS\", proplist:(\n               \
    \           name:\"DEVICE\", <device>,\n                          name:\"PROTOCOL\"\
    , <protocol>,\n                          name:\"DATA\", <data>\n             \
    \           )endlist\n    There are several candidate protocols for use in describing\
    \ graphics\n    data in documents.  One is the Network Graphics Protocol [27],\n\
    \    another is the Graphics Language [28,29], and a third is the\n    SIGGRAPH\
    \ Core System [30].\n           A Structured Format for Transmission of Multi-Media\
    \ Documents\n                        3.  EXAMPLES & SCENARIOS\n"
- title: 'Example 1:  Text Example'
  contents:
  - "Example 1:  Text Example\n  Suppose we want to send the following message:\n\
    \    Date: 1979-03-29-11:46-08:00\n    From: Jon Postel <Postel@ISIF>\n    Subject:\
    \ Meeting Thursday\n    To: Danny Cohen <Cohen@ISIB>\n    CC: Linda\n    Danny:\n\
    \    Please mark your calendar for our meeting Thursday at 3 pm.\n    --jon.\n\
    \  It will be encoded in the structured format.  The following will\n  present\
    \ successive steps in the top down generation of this message.\n  The identification\
    \ and command portions of the messages will not be\n  expanded here (see [1]).\n\
    \  1.  message\n  2.  (identification, command, document)\n  3.  (ID:<<identification>>,\n\
    \       CMD:<<command>>,\n       DOC:( date, from, subject, to, cc, body))\n \
    \ 4.  (ID:<<identification>>,\n       CMD:<<command>>,\n       DOC:(DATE:date,\n\
    \            FROM:from\n            SUBJECT:subject,\n            TO:to,\n   \
    \         CC:cc,\n            BODY:body))\n  5.  (ID:<<identification>>,\n   \
    \    CMD:<<command>>,\n       DOC:(DATE: 1979-03-29-11:46-08:00,\n           \
    \ FROM: (NET:ARPANET,HOST:ISIF,USER:Postel,PERSON:Jon Postel),\n            SUBJECT:\
    \ Meeting Thursday,\n            TO: (NET:ARPANET,HOST:ISIB,USER:Cohen,PERSON:Danny\
    \ Cohen),\n            CC: (NET:ARPANET,HOST:ISIF,USER:Linda),\n            BODY:\n\
    \              Danny:\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Examples & Scenarios
  contents:
  - "Examples & Scenarios\n              Please mark your calendar for our meeting\n\
    \              Thursday at 3 pm.\n              --jon.))\n  6.  PROPLIST:\n  \
    \     (ID:<<identification>>,\n        CMD:<<command>>,\n        DOC:\n      \
    \    PROPLIST:(\n            DATE: 1979-03-29-11:46-08:00,\n            FROM:\n\
    \              LIST:(\n                PROPLIST:(\n                  NET:ARPANET,\n\
    \                  HOST:ISIF,\n                  USER:Postel,\n              \
    \    PERSON:Jon Postel,\n                )ENDLIST,\n              )ENDLIST,\n\
    \            SUBJECT: Meeting Thursday,\n            TO:\n              LIST:(\n\
    \                PROPLIST:(\n                  NET:ARPANET,\n                \
    \  HOST:ISIB,\n                  USER:Cohen,\n                  PERSON:Danny Cohen,\n\
    \                )ENDLIST,\n              )ENDLIST,\n            CC:\n       \
    \       LIST:(\n                PROPLIST:(\n                  NET:ARPANET,\n \
    \                 HOST:ISIF,\n                  USER:Linda,\n                )ENDLIST,\n\
    \              )ENDLIST,\n            BODY:\n              Danny:\n          \
    \    Please mark your calendar for our meeting\n              Thursday at 3 pm.\n\
    \              --jon.\n          )ENDLIST\n        )ENDLIST\n           A Structured\
    \ Format for Transmission of Multi-Media Documents\n                         \
    \                           Examples & Scenarios\n  7.  proplist:(\n        name:\"\
    ID\", <<identification>>,\n        name:\"CMD\", <<command>>,\n        name:\"\
    DOC\",\n          proplist:(\n            name:\"DATE\", name:\"1979-03-29-11:46-08:00\"\
    ,\n            name:\"FROM\",\n              list:(\n                proplist:(\n\
    \                  name:\"NET\", name:\"ARPANET\",\n                  name:\"\
    HOST\", name:\"ISIF\",\n                  name:\"USER\", name:\"Postel\",\n  \
    \                name:\"PERSON\", name:\"Jon Postel\",\n                )endlist,\n\
    \              )endlist,\n            name:\"SUBJECT\", text:\"Meeting Thursday\"\
    ,\n            name:\"TO\",\n              list:(\n                proplist:(\n\
    \                  name:\"NET\", name:\"ARPANET\",\n                  name:\"\
    HOST\", name:\"ISIB\",\n                  name:\"USER\", name:\"Cohen\",\n   \
    \               name:\"PERSON\", name:\"Danny Cohen\",\n                )endlist,\n\
    \              )endlist,\n            name:\"CC\",\n              list:(\n   \
    \             proplist:(\n                  name:\"NET\", name:\"ARPANET\",\n\
    \                  name:\"HOST\", name:\"ISIF\",\n                  name:\"USER\"\
    , name:\"Linda\",\n                )endlist,\n              )endlist,\n      \
    \      name:\"BODY\",\n              text:\"Danny:\n                    Please\
    \ mark your calendar for our\n                    meeting Thursday at 3 pm.\n\
    \                    --jon.\"\n          )endlist\n        )endlist\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: Examples & Scenarios
  contents:
  - 'Examples & Scenarios

    '
- title: 'Example 2:  Multimedia Example'
  contents:
  - "Example 2:  Multimedia Example\n      proplist:(\n        name:\"ID\", <<identification>>,\n\
    \        name:\"CMD\", <<command>>,\n        name:\"DOC\",\n          proplist:(\n\
    \            name:\"DATE\", name:\"1980-08-06-11:46-08:00\",\n            name:\"\
    FROM\",\n              list:(\n                proplist:(\n                  name:\"\
    NET\", name:\"ARPANET\",\n                  name:\"HOST\", name:\"ISIF\",\n  \
    \                name:\"USER\", name:\"Postel\",\n                  name:\"PERSON\"\
    , name:\"Jon Postel\",\n                )endlist,\n              )endlist,\n \
    \           name:\"SUBJECT\", text:\"Multimedia Test Message\",\n            name:\"\
    TO\",\n              list:(\n                proplist:(\n                  name:\"\
    GROUP\", name:\"Multimedia Experiment List\",\n                )endlist,\n   \
    \           )endlist,\n            name:\"CC\",\n              list:(\n      \
    \          proplist:(\n                  name:\"NET\", name:\"ARPANET\",\n   \
    \               name:\"HOST\", name:\"ISIF\",\n                  name:\"USER\"\
    , name:\"Linda\",\n                )endlist,\n              )endlist,\n      \
    \      name:\"BODY\",\n              proplist:(\n                name:\"SEQUENTIAL\"\
    ,\n                  proplist:(\n                    name:\"TEXT\",\n        \
    \              proplist:(\n                        name:\"PROTOCOL\", name:\"\
    PARAGRAPH\",\n                        name:\"VERSION\", index:\"1\",\n       \
    \                 name:\"DATA\",\n                          list:(\n         \
    \                   text:\"This is a test of multimedia mail.\"\n            \
    \                text:\"I hope you like it.\"\n                          )endlist\n\
    \                      )endlist\n           A Structured Format for Transmission\
    \ of Multi-Media Documents\n                                                 \
    \   Examples & Scenarios\n                    name:\"SIMULTANEOUS\",\n       \
    \               proplist:(\n                        name:\"VOICE\",\n        \
    \                  proplist:(\n                            name:\"VOCODER\", name:<vocoder>,\n\
    \                            name:\"PROTOCOL\", name:\"NVP\",\n              \
    \              name:\"VERSION\", index:\"1\",\n                            name:\"\
    DATA\",\n                              list:(\n                              \
    \  bitstr:<parcel>\n                                bitstr:<parcel>\n        \
    \                      )endlist\n                          )endlist\n        \
    \                name:\"GRAPHICS\",\n                          proplist:(\n  \
    \                          name:\"DEVICE\", name:<device>,\n                 \
    \           name:\"PROTOCOL\", name:<protocol>,\n                            name:\"\
    VERSION\", index:<version>,\n                            name:\"DATA\",<data>\n\
    \                              )endlist\n                          )endlist\n\
    \                      )endlist\n                name:\"SEQUENTIAL\",\n      \
    \            proplist:(\n                    name:\"TEXT,\n                  \
    \    proplist:(\n                        name:\"PROTOCOL\", name:\"PARAGRAPH\"\
    ,\n                        name:\"VERSION\", index:\"1\",\n                  \
    \      name:\"DATA\",\n                          list:(\n                    \
    \        text:\"That was supposed to be some voice\n                         \
    \         and graphics in parallel.\"\n                            text:\"--jon.\"\
    \n                          )endlist\n                      )endlist\n       \
    \           )endlist\n                )endlist\n              )endlist\n     \
    \    )endlist\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - "A Structured Format for Transmission of Multi-Media Documents\n           A Structured\
    \ Format for Transmission of Multi-Media Documents\n                         \
    \      REFERENCES\n"
- title: '[1]   Postel, J., "Internet Message Protocol," RFC 759, 113,'
  contents:
  - "[1]   Postel, J., \"Internet Message Protocol,\" RFC 759, 113,\n      USC/Information\
    \ Sciences Institute, August 1980.\n"
- title: '[2]   Bhushan, A., K. Pogran, R. Tomlinson, and J. White, "Standardizing'
  contents:
  - "[2]   Bhushan, A., K. Pogran, R. Tomlinson, and J. White, \"Standardizing\n \
    \     Network Mail Headers,\" RFC 561, NIC 18516, September 1973.\n"
- title: '[3]   Myer, T., and D. Henderson, "Message Transmission Protocol,"'
  contents:
  - "[3]   Myer, T., and D. Henderson, \"Message Transmission Protocol,\"\n      RFC\
    \ 680, NIC 32116, 30 April 1975.\n"
- title: '[4]   Crocker, D., J. Vittal, K. Pogran, and D. Henderson, "Standard for'
  contents:
  - "[4]   Crocker, D., J. Vittal, K. Pogran, and D. Henderson, \"Standard for\n \
    \     the Format of ARPA Network Text Messages,\" RFC 733, NIC 41952,\n      21\
    \ November 1977.\n"
- title: '[5]   Barber, D., and J. Laws, "A Basic Mail Scheme for EIN," INWG 192,'
  contents:
  - "[5]   Barber, D., and J. Laws, \"A Basic Mail Scheme for EIN,\" INWG 192,\n \
    \     February 1979.\n"
- title: '[6]   Braaten, O., "Introduction to a Mail Protocol," Norwegian'
  contents:
  - "[6]   Braaten, O., \"Introduction to a Mail Protocol,\" Norwegian\n      Computing\
    \ Center, INWG 180, August 1978.\n"
- title: '[7]   Crocker, D., E. Szurkowski, and D. Farber, "An Internetwork Memo'
  contents:
  - "[7]   Crocker, D., E. Szurkowski, and D. Farber, \"An Internetwork Memo\n   \
    \   Distribution Capability - MMDF,\" Sixth Data Communications\n      Symposium,\
    \ ACM/IEEE, November 1979.\n"
- title: '[8]   Haverty, J., D. Henderson, and D. Oestreicher, "Proposed'
  contents:
  - "[8]   Haverty, J., D. Henderson, and D. Oestreicher, \"Proposed\n      Specification\
    \ of an Inter-site Message Protocol,\" 8 July 1975.\n"
- title: '[9]   Thomas, R., "Providing Mail Services for NSW Users," BBN NSW'
  contents:
  - "[9]   Thomas, R., \"Providing Mail Services for NSW Users,\" BBN NSW\n      Working\
    \ Note 24, Bolt Beranek and Newman, October 1978.\n"
- title: '[10]  White, J., "A Proposed Mail Protocol," RFC 524, NIC 17140, SRI'
  contents:
  - "[10]  White, J., \"A Proposed Mail Protocol,\" RFC 524, NIC 17140, SRI\n    \
    \  International, 13 June 1973.\n"
- title: '[11]  White, J., "Description of a Multi-Host Journal," NIC 23144, SRI'
  contents:
  - "[11]  White, J., \"Description of a Multi-Host Journal,\" NIC 23144, SRI\n  \
    \    International, 30 May 1974.\n"
- title: '[12]  White, J., "Journal Subscription Service," NIC 23143, SRI'
  contents:
  - "[12]  White, J., \"Journal Subscription Service,\" NIC 23143, SRI\n      International,\
    \ 28 May 1974.\n"
- title: '[13]  Levin, R., and M. Schroeder, "Transport of Electronic Messages'
  contents:
  - "[13]  Levin, R., and M. Schroeder, \"Transport of Electronic Messages\n     \
    \ Through a Network,\" Teleinformatics 79, Boutmy & Danthine (eds.)\n      North\
    \ Holland Publishing Co., 1979.\n"
- title: '[14]  Earnest, L., and J. McCarthy, "DIALNET: A Computer Communications'
  contents:
  - "[14]  Earnest, L., and J. McCarthy, \"DIALNET: A Computer Communications\n  \
    \    Study,\" Computer Science Department, Stanford University, August\n     \
    \ 1978.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
- title: References
  contents:
  - 'References

    '
- title: '[15]  Crispin M., "DIALNET: A Telephone Network Data Communications'
  contents:
  - "[15]  Crispin M., \"DIALNET: A Telephone Network Data Communications\n      Protocol,\"\
    \ DECUS Proceedings, Fall 1979.\n"
- title: '[16]  Caulkins, D., "The Personal Computer Network (PCNET) Project: A'
  contents:
  - "[16]  Caulkins, D., \"The Personal Computer Network (PCNET) Project: A\n    \
    \  Status Report,\" Dr. Dobbs Journal of Computer Calisthenics and\n      Orthodontia,\
    \  v.5, n.6, June 1980.\n"
- title: '[17]  Postel, J., "NSW Transaction Protocol (NSWTP)," USC/Information'
  contents:
  - "[17]  Postel, J., \"NSW Transaction Protocol (NSWTP),\" USC/Information\n   \
    \   Sciences Institute, IEN 38, May 1978.\n"
- title: '[18]  Haverty, J., "MSDTP -- Message Services Data Transmission'
  contents:
  - "[18]  Haverty, J., \"MSDTP -- Message Services Data Transmission\n      Protocol,\"\
    \ RFC 713, NIC 34739, April 1976.\n"
- title: '[19]  ISO-2014, "Writing of calendar dates in all-numeric form,"'
  contents:
  - "[19]  ISO-2014, \"Writing of calendar dates in all-numeric form,\"\n      Recommendation\
    \ 2014, International Organization for\n      Standardization, 1975.\n"
- title: '[20]  ISO-3307, "Information Interchange -- Representations of time of'
  contents:
  - "[20]  ISO-3307, \"Information Interchange -- Representations of time of\n   \
    \   the day,\" Recommendation 3307, International Organization for\n      Standardization,\
    \ 1975.\n"
- title: '[21]  ISO-4031, "Information Interchange -- Representation of local time'
  contents:
  - "[21]  ISO-4031, \"Information Interchange -- Representation of local time\n \
    \     differentials,\" Recommendation 4031, International Organization\n     \
    \ for Standardization, 1978.\n"
- title: '[22]  Postel, J.,  "DOD Standard Internet Protocol," USC/Information'
  contents:
  - "[22]  Postel, J.,  \"DOD Standard Internet Protocol,\" USC/Information\n    \
    \  Sciences Institute, IEN 128, NTIS number AD A079730, January 1980.\n"
- title: '[23]  CCITT-X.121, "International Numbering Plan for Public Data'
  contents:
  - "[23]  CCITT-X.121, \"International Numbering Plan for Public Data\n      Networks,\"\
    \ Recommendation X.121, CCITT, Geneva, 1978.\n"
- title: '[24]  Cohen, D., "Specifications for the Network Voice Protocol (NVP),"'
  contents:
  - "[24]  Cohen, D., \"Specifications for the Network Voice Protocol (NVP),\"\n \
    \     NIC 42444, RFC 741, NSC 68, RR-75-39, USC/Information Sciences\n      Institute,\
    \ January 1976.\n"
- title: '[25]  CCITT-T.30, "Procedures for Document Facsimile Transmission in the'
  contents:
  - "[25]  CCITT-T.30, \"Procedures for Document Facsimile Transmission in the\n \
    \     General Switched Telephone Network,\" Recommendation T.30, Orange\n    \
    \  Book, V. 7, The International Telephone and Telegraph Consulative\n      Committee,\
    \  International Telecommunication Union, Geneva, 1977.\n"
- title: '[26]  Treadwell, S., "FAX File Format," ARPANET Message, 14 November'
  contents:
  - "[26]  Treadwell, S., \"FAX File Format,\" ARPANET Message, 14 November\n    \
    \  1979.\n"
- title: '[27]  Sproull, R., and E. Thomas, "A Network Graphics Protocol,"'
  contents:
  - "[27]  Sproull, R., and E. Thomas, \"A Network Graphics Protocol,\"\n      NIC\
    \ 24308, Xerox Palo Alto Research Center, August 1974.\n           A Structured\
    \ Format for Transmission of Multi-Media Documents\n                         \
    \                                     References\n"
- title: '[28]  Bisbey, R., and D. Hollingworth, "A Distributable,'
  contents:
  - "[28]  Bisbey, R., and D. Hollingworth, \"A Distributable,\n      Display-Device-Independent\
    \ Vector Graphics System for Command and\n      Control,\" RR-80-87, USC/Information\
    \ Sciences Institute, July 1980.\n"
- title: '[29]  Bisbey, R., D. Hollingworth, and B. Britt, "Graphics Language,"'
  contents:
  - "[29]  Bisbey, R., D. Hollingworth, and B. Britt, \"Graphics Language,\"\n   \
    \   TM-80-18, USC/Information Sciences Institute, July 1980.\n"
- title: '[30]  Graphics Standard Planning Committee, "Core System," Computer'
  contents:
  - "[30]  Graphics Standard Planning Committee, \"Core System,\" Computer\n     \
    \ Graphics, V. 13, N. 3, SIGGRAPH, ACM, August 1979.\n"
- title: A Structured Format for Transmission of Multi-Media Documents
  contents:
  - 'A Structured Format for Transmission of Multi-Media Documents

    '
