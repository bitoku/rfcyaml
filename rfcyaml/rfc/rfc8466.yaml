- contents:
  - "                         A YANG Data Model for\n        Layer 2 Virtual Private
    Network (L2VPN) Service Delivery\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a YANG data model that can be used to configure\n
    \  a Layer 2 provider-provisioned VPN service.  It is up to a management\n   system
    to take this as an input and generate specific configuration\n   models to configure
    the different network elements to deliver the\n   service.  How this configuration
    of network elements is done is out\n   of scope for this document.\n   The YANG
    data model defined in this document includes support for\n   point-to-point Virtual
    Private Wire Services (VPWSs) and multipoint\n   Virtual Private LAN Services
    (VPLSs) that use Pseudowires signaled\n   using the Label Distribution Protocol
    (LDP) and the Border Gateway\n   Protocol (BGP) as described in RFCs 4761 and
    6624.\n   The YANG data model defined in this document conforms to the Network\n
    \  Management Datastore Architecture defined in RFC 8342.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8466.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   4\n       1.1.1.  Requirements Language . . . . . . . . . . . . . . .
    .   5\n     1.2.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   5\n
    \  2.  Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   5\n   3.
    \ The Layer 2 VPN Service Model . . . . . . . . . . . . . . . .   7\n     3.1.
    \ Layer 2 VPN Service Types . . . . . . . . . . . . . . . .   7\n     3.2.  Layer
    2 VPN Physical Network Topology . . . . . . . . . .   7\n   4.  Service Data Model
    Usage  . . . . . . . . . . . . . . . . . .   9\n   5.  Design of the Data Model
    \ . . . . . . . . . . . . . . . . . .  11\n     5.1.  Features and Augmentation
    . . . . . . . . . . . . . . . .  20\n     5.2.  VPN Service Overview  . . . .
    . . . . . . . . . . . . . .  20\n       5.2.1.  VPN Service Type  . . . . . .
    . . . . . . . . . . . .  21\n       5.2.2.  VPN Service Topologies  . . . . .
    . . . . . . . . . .  22\n         5.2.2.1.  Route Target Allocation . . . . .
    . . . . . . . .  22\n         5.2.2.2.  Any-to-Any  . . . . . . . . . . . . .
    . . . . . .  22\n         5.2.2.3.  Hub-and-Spoke . . . . . . . . . . . . . .
    . . . .  22\n         5.2.2.4.  Hub-and-Spoke Disjoint  . . . . . . . . . . .
    . .  23\n       5.2.3.  Cloud Access  . . . . . . . . . . . . . . . . . . . .
    \ 24\n       5.2.4.  Extranet VPNs . . . . . . . . . . . . . . . . . . . .  27\n
    \      5.2.5.  Frame Delivery Service  . . . . . . . . . . . . . . .  28\n     5.3.
    \ Site Overview . . . . . . . . . . . . . . . . . . . . . .  30\n       5.3.1.
    \ Devices and Locations . . . . . . . . . . . . . . . .  31\n       5.3.2.  Site
    Network Accesses . . . . . . . . . . . . . . . .  32\n         5.3.2.1.  Bearer
    \ . . . . . . . . . . . . . . . . . . . . .  33\n         5.3.2.2.  Connection
    \ . . . . . . . . . . . . . . . . . . .  33\n     5.4.  Site Roles  . . . . .
    . . . . . . . . . . . . . . . . . .  38\n     5.5.  Site Belonging to Multiple
    VPNs . . . . . . . . . . . . .  38\n       5.5.1.  Site VPN Flavors  . . . . .
    . . . . . . . . . . . . .  38\n         5.5.1.1.  Single VPN Attachment: site-vpn-flavor-single
    . .  39\n         5.5.1.2.  Multi-VPN Attachment: site-vpn-flavor-multi . . .
    \ 39\n         5.5.1.3.  NNI: site-vpn-flavor-nni  . . . . . . . . . . . .  40\n
    \        5.5.1.4.  E2E: site-vpn-flavor-e2e  . . . . . . . . . . . .  41\n       5.5.2.
    \ Attaching a Site to a VPN . . . . . . . . . . . . . .  41\n         5.5.2.1.
    \ Referencing a VPN . . . . . . . . . . . . . . . .  41\n         5.5.2.2.  VPN
    Policy  . . . . . . . . . . . . . . . . . . .  43\n     5.6.  Deciding Where to
    Connect the Site  . . . . . . . . . . .  48\n       5.6.1.  Constraint: Device
    \ . . . . . . . . . . . . . . . . .  49\n       5.6.2.  Constraint/Parameter:
    Site Location . . . . . . . . .  50\n       5.6.3.  Constraint/Parameter: Access
    Type . . . . . . . . . .  51\n       5.6.4.  Constraint: Access Diversity  . .
    . . . . . . . . . .  52\n     5.7.  Route Distinguisher and Network Instance Allocation
    . . .  53\n     5.8.  Site-Network-Access Availability  . . . . . . . . . . .
    .  54\n     5.9.  SVC MTU . . . . . . . . . . . . . . . . . . . . . . . . .  56\n
    \    5.10. Service . . . . . . . . . . . . . . . . . . . . . . . . .  56\n       5.10.1.
    \ Bandwidth  . . . . . . . . . . . . . . . . . . . . .  56\n       5.10.2.  QoS
    \ . . . . . . . . . . . . . . . . . . . . . . . .  57\n         5.10.2.1.  QoS
    Classification . . . . . . . . . . . . . . .  57\n         5.10.2.2.  QoS Profile
    \ . . . . . . . . . . . . . . . . . .  58\n       5.10.3.  Support for BUM  .
    . . . . . . . . . . . . . . . . .  59\n     5.11. Site Management . . . . . .
    . . . . . . . . . . . . . . .  60\n     5.12. MAC Loop Protection . . . . . .
    . . . . . . . . . . . . .  61\n     5.13. MAC Address Limit . . . . . . . . .
    . . . . . . . . . . .  61\n     5.14. Enhanced VPN Features . . . . . . . . .
    . . . . . . . . .  62\n       5.14.1.  Carriers' Carriers . . . . . . . . . .
    . . . . . . .  62\n     5.15. External ID References  . . . . . . . . . . . .
    . . . . .  63\n     5.16. Defining NNIs and Inter-AS Support  . . . . . . . .
    . . .  64\n       5.16.1.  Defining an NNI with the Option A Flavor . . . . .
    .  66\n       5.16.2.  Defining an NNI with the Option B Flavor . . . . . .  70\n
    \      5.16.3.  Defining an NNI with the Option C Flavor . . . . . .  73\n     5.17.
    Applicability of L2SM in Inter-provider and Inter-domain\n           Orchestration
    . . . . . . . . . . . . . . . . . . . . . .  74\n   6.  Interaction with Other
    YANG Modules . . . . . . . . . . . . .  76\n   7.  Service Model Usage Example
    . . . . . . . . . . . . . . . . .  77\n   8.  YANG Module . . . . . . . . . .
    . . . . . . . . . . . . . . .  82\n   9.  Security Considerations . . . . . .
    . . . . . . . . . . . . . 152\n   10. IANA Considerations . . . . . . . . . .
    . . . . . . . . . . . 153\n   11. References  . . . . . . . . . . . . . . . .
    . . . . . . . . . 153\n     11.1.  Normative References . . . . . . . . . . .
    . . . . . . . 153\n     11.2.  Informative References . . . . . . . . . . . .
    . . . . . 155\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . .
    . . . 157\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . .
    . 158\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document defines a YANG data model for the Layer 2
    VPN (L2VPN)\n   service.  This model defines service configuration elements that
    can\n   be used in communication protocols between customers and network\n   operators.
    \ Those elements can also be used as input to automated\n   control and configuration
    applications and can generate specific\n   configuration models to configure the
    different network elements to\n   deliver the service.  How this configuration
    of network elements is\n   done is out of scope for this document.\n   Further
    discussion of the way that services are modeled in YANG and\n   the relationship
    between \"customer service models\" like the one\n   described in this document
    and configuration models can be found in\n   [RFC8309] and [RFC8199].  Sections
    4 and 6 also provide more\n   information on how this service model could be used
    and how it fits\n   into the overall modeling architecture.\n   The YANG data
    model defined in this document includes support for\n   point-to-point Virtual
    Private Wire Services (VPWSs) and multipoint\n   Virtual Private LAN Services
    (VPLSs) that use Pseudowires signaled\n   using the Label Distribution Protocol
    (LDP) and the Border Gateway\n   Protocol (BGP) as described in [RFC4761] and
    [RFC6624].  It also\n   conforms to the Network Management Datastore Architecture
    (NMDA)\n   [RFC8342].\n"
  - contents:
    - "1.1.  Terminology\n   The following terms are defined in [RFC6241] and are
      not redefined\n   here:\n   o  client\n   o  configuration data\n   o  server\n
      \  o  state data\n   The following terms are defined in [RFC7950] and are not
      redefined\n   here:\n   o  augment\n   o  data model\n   o  data node\n   The
      terminology for describing YANG data models is found in\n   [RFC7950].\n"
    - contents:
      - "1.1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
        \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
        \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to
        be interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only
        when, they appear in all\n   capitals, as shown here.\n"
      title: 1.1.1.  Requirements Language
    title: 1.1.  Terminology
  - contents:
    - "1.2.  Tree Diagrams\n   Tree diagrams used in this document follow the notation
      defined in\n   [RFC8340].\n"
    title: 1.2.  Tree Diagrams
  title: 1.  Introduction
- contents:
  - "2.  Definitions\n   This document uses the following terms:\n   Service Provider
    (SP):  The organization (usually a commercial\n      undertaking) responsible
    for operating the network that offers VPN\n      services to clients and customers.\n
    \  Customer Edge (CE) Device:  Equipment that is dedicated to a\n      particular
    customer and is directly connected to one or more PE\n      devices via Attachment
    Circuits (ACs).  A CE is usually located at\n      the customer premises and is
    usually dedicated to a single VPN,\n      although it may support multiple VPNs
    if each one has separate\n      ACs.  The CE devices can be routers, bridges,
    switches, or hosts.\n   Provider Edge (PE) Device:  Equipment managed by the SP
    that can\n      support multiple VPNs for different customers and is directly\n
    \     connected to one or more CE devices via ACs.  A PE is usually\n      located
    at an SP Point of Presence (POP) and is managed by the SP.\n   Virtual Private
    LAN Service (VPLS):  A VPLS is a provider service\n      that emulates the full
    functionality of a traditional LAN.  A VPLS\n      makes it possible to interconnect
    several LAN segments over a\n      packet switched network (PSN) and makes the
    remote LAN segments\n      behave as one single LAN.\n   Virtual Private Wire
    Service (VPWS):  A VPWS is a point-to-point\n      circuit (i.e., link) connecting
    two CE devices.  The link is\n      established as a logical Layer 2 circuit through
    a PSN.  The CE in\n      the customer network is connected to a PE in the provider
    network\n      via an AC: the AC is either a physical or logical circuit.  A VPWS\n
    \     differs from a VPLS in that the VPLS is point-to-multipoint while\n      the
    VPWS is point-to-point.  In some implementations, a set of\n      VPWSs is used
    to create a multi-site L2VPN network.\n   Pseudowire (PW):  A Pseudowire is an
    emulation of a native service\n      over a PSN.  The native service may be ATM,
    Frame Relay, Ethernet,\n      low-rate Time-Division Multiplexing (TDM), or Synchronous
    Optical\n      Network / Synchronous Digital Hierarchy (SONET/SDH), while the
    PSN\n      may be MPLS, IP (either IPv4 or IPv6), or Layer 2 Tunneling\n      Protocol
    version 3 (L2TPv3).\n   MAC-VRF:  A Virtual Routing and Forwarding table for Media
    Access\n      Control (MAC) addresses on a PE.  It is sometimes also referred
    to\n      as a Virtual Switching Instance (VSI).\n   UNI:  User-to-Network Interface.
    \ The physical demarcation point\n      between the customer's area of responsibility
    and the provider's\n      area of responsibility.\n   NNI:  Network-to-Network
    Interface.  A reference point representing\n      the boundary between two networks
    that are operated as separate\n      administrative domains.  The two networks
    may belong to the same\n      provider or to two different providers.\n   This
    document uses the following abbreviations:\n   BSS:  Business Support System\n
    \  BUM:  Broadcast, Unknown Unicast, or Multicast\n   CoS:  Class of Service\n
    \  LAG:  Link Aggregation Group\n   LLDP:  Link Layer Discovery Protocol\n   OAM:
    \ Operations, Administration, and Maintenance\n   OSS:  Operations Support System\n
    \  PDU:  Protocol Data Unit\n   QoS:  Quality of Service\n"
  title: 2.  Definitions
- contents:
  - "3.  The Layer 2 VPN Service Model\n   A Layer 2 VPN (L2VPN) service is a collection
    of sites that are\n   authorized to exchange traffic between each other over a
    shared\n   infrastructure of a common technology.  The L2VPN Service Model\n   (L2SM)
    described in this document provides a common understanding of\n   how the corresponding
    L2VPN service is to be deployed over the shared\n   infrastructure.\n   This document
    presents the L2SM using the YANG data modeling language\n   [RFC7950] as a formal
    language that is both human readable and\n   parsable by software for use with
    protocols such as the Network\n   Configuration Protocol (NETCONF) [RFC6241] and
    RESTCONF [RFC8040].\n   This service model is limited to VPWS-based VPNs and VPLS-based
    VPNs\n   as described in [RFC4761] and [RFC6624] and to Ethernet VPNs (EVPNs)\n
    \  as described in [RFC7432].\n"
  - contents:
    - "3.1.  Layer 2 VPN Service Types\n   From a technology perspective, a set of
      basic L2VPN service types\n   include:\n   o  Point-to-point VPWSs that use
      LDP-signaled Pseudowires or\n      L2TP-signaled Pseudowires [RFC6074].\n   o
      \ Multipoint VPLSs that use LDP-signaled Pseudowires or\n      L2TP-signaled
      Pseudowires [RFC6074].\n   o  Multipoint VPLSs that use a BGP control plane
      as described in\n      [RFC4761] and [RFC6624].\n   o  IP-only LAN Services
      (IPLSs) that are a functional subset of VPLS\n      services [RFC7436].\n   o
      \ BGP MPLS-based EVPN services as described in [RFC7432] and\n      [RFC7209].\n
      \  o  EVPN VPWSs as specified in [RFC8214].\n"
    title: 3.1.  Layer 2 VPN Service Types
  - contents:
    - "3.2.  Layer 2 VPN Physical Network Topology\n   Figure 1 below depicts a typical
      SP's physical network topology.\n   Most SPs have deployed an IP, MPLS, or Segment
      Routing (SR)\n   multi-service core infrastructure.  Ingress Layer 2 service
      frames\n   will be mapped to either an Ethernet Pseudowire (e.g., Pseudowire\n
      \  Emulation Edge to Edge (PWE3)) or a Virtual Extensible Local Area\n   Network
      (VXLAN) PE-to-PE tunnel.  The details of these tunneling\n   mechanisms are
      left to the provider's discretion and are not part of\n   the L2SM.\n   An L2VPN
      provides end-to-end Layer 2 connectivity over this\n   multi-service core infrastructure
      between two or more customer\n   locations or a collection of sites.  ACs are
      placed between CE\n   devices and PE devices that backhaul Layer 2 service frames
      from the\n   customer over the access network to the provider network or remote\n
      \  site.  The demarcation point (i.e., UNI) between the customer and the\n   SP
      can be placed between either (1) customer nodes and the CE device\n   or (2)
      the CE device and the PE device.  The actual bearer connection\n   between the
      CE and the PE will be described in the L2SM.\n   The SP may also choose a \"seamless
      MPLS\" approach to expand the PWE3\n   or VXLAN tunnel between sites.\n   The
      SP may leverage Multiprotocol BGP (MP-BGP) to autodiscover and\n   signal the
      PWE3 or VXLAN tunnel endpoints.\n             Site A  |                          |Site
      B\n    ---     ----     |        VXLAN/PW          |               ---\n   |
      \  |   |    |    |<------------------------>|              |   |\n   | C +---+
      CE |    |                          |              | C |\n   |   |   |    |    |
      \        ---------        |              |   |\n    ---     ----\\    |        (
      \        )       |              /---\n                 \\  -|--     (           )
      \    -|--     ----  /\n                  \\|    |   (             )   |    |
      \  |    |/\n                   | PE +---+ IP/MPLS/SR  +---+ PE +---+ CE |\n
      \                 /|    |   (  Network    )   |    |   |    |\\\n                 /
      \ ----     (           )     ----     ----  \\\n    ---     ----/             (
      \        )                      \\---\n   |   |   |    |              ----+----
      \                      |   |\n   | C +---+ CE |                  |                           |
      C |\n   |   |   |    |                --+--                         |   |\n
      \   ---     ----                | PE  |                         ---\n                                 --+--\n
      \                                  |      Site C\n                                 --+--\n
      \                               | CE  |\n                                 --+--\n
      \                                  |\n                                 --+--\n
      \                               |  C  |\n                                 -----\n
      \           Figure 1: Reference Network for the Use of the L2SM\n   From the
      customer's perspective, however, all the CE devices are\n   connected over a
      simulated LAN environment as shown in Figure 2.\n   Broadcast and multicast
      packets are sent to all participants in the\n   same bridge domain.\n                        CE---+----+-----+---CE\n
      \                            |    |     |\n                             |    |
      \    |\n                             |    |     |\n                        CE---+
      \   CE    +---CE\n                  Figure 2: Customer's View of the L2VPN\n"
    title: 3.2.  Layer 2 VPN Physical Network Topology
  title: 3.  The Layer 2 VPN Service Model
- contents:
  - "4.  Service Data Model Usage\n   The L2SM provides an abstracted interface to
    request, configure, and\n   manage the components of an L2VPN service.  The model
    is used by a\n   customer who purchases connectivity and other services from an
    SP to\n   communicate with that SP.\n   A typical usage for this model is as an
    input to an orchestration\n   layer that is responsible for translating it into
    configuration\n   commands for the network elements that deliver/enable the service.\n
    \  The network elements may be routers, but also servers (like\n   Authentication,
    Authorization, and Accounting (AAA)) that are\n   necessary within the network.\n
    \  The configuration of network elements may be done using the Command\n   Line
    Interface (CLI) or any other configuration (or \"southbound\")\n   interface such
    as NETCONF [RFC6241] in combination with device-\n   specific and protocol-specific
    YANG data models.\n   This way of using the service model is illustrated in Figure
    3 and is\n   described in more detail in [RFC8309] and [RFC8199].  The split of\n
    \  the orchestration function between a \"service orchestrator\" and a\n   \"network
    orchestrator\" is clarified in [RFC8309].  The usage of this\n   service model
    is not limited to this example: it can be used by any\n   component of the management
    system but not directly by network\n   elements.\n   The usage and structure of
    this model should be compared to the\n   Layer 3 VPN service model defined in
    [RFC8299].\n          ----------------------------\n         | Customer Service
    Requester |\n          ----------------------------\n              |\n              |\n
    \       L2SM  |\n              |\n              |\n            -----------------------\n
    \          | Service Orchestration |\n            -----------------------\n              |\n
    \             |     Service             +-------------+\n              |     Delivery
    \   +------>| Application |\n              |     Model       |       |   BSS/OSS
    \  |\n              |                 V       +-------------+\n            -----------------------\n
    \          | Network Orchestration |\n            -----------------------\n              |
    \           |\n      +----------------+   |\n      | Config manager |   |\n      +----------------+
    \  |  Device\n              |            |  Models\n              |            |\n
    \  --------------------------------------------\n                     Network\n
    \                                +++++++\n                                 + AAA
    +\n                                 +++++++\n         ++++++++   Bearer    ++++++++
    \          ++++++++      ++++++++\n         + CE A + ----------- + PE A +           +
    PE B + ---- + CE B +\n         ++++++++  Connection ++++++++           ++++++++
    \     ++++++++\n                    Site A                               Site
    B\n         Figure 3: Reference Architecture for the Use of the L2SM\n   The Metro
    Ethernet Forum (MEF) [MEF-6] has also developed an\n   architecture for network
    management and operations, but the work of\n   the MEF embraces all aspects of
    lifecycle service orchestration,\n   including billing, Service Level Agreements
    (SLAs), order management,\n   and lifecycle management.  The IETF's work on service
    models is\n   typically smaller and offers a simple, self-contained service YANG\n
    \  module.  See [RFC8309] for more details.\n"
  title: 4.  Service Data Model Usage
- contents:
  - "5.  Design of the Data Model\n   The L2SM is structured in a way that allows
    the provider to list\n   multiple circuits of various service types for the same
    customer.  A\n   circuit represents an end-to-end connection between two or more\n
    \  customer locations.\n   The YANG module is divided into two main containers:
    \"vpn-services\"\n   and \"sites\".  The \"vpn-svc\" container under vpn-services
    defines\n   global parameters for the VPN service for a specific customer.\n   A
    site contains at least one network access (i.e., site network\n   accesses providing
    access to the sites, as defined in Section 5.3.2),\n   and there may be multiple
    network accesses in the case of\n   multihoming.  Site-to-network-access attachment
    is done through a\n   bearer with a Layer 2 connection on top.  The bearer refers
    to\n   properties of the attachment that are below Layer 2, while the\n   connection
    refers to Layer 2 protocol-oriented properties.  The\n   bearer may be allocated
    dynamically by the SP, and the customer may\n   provide some constraints or parameters
    to drive the placement.\n   Authorization of traffic exchanges is done through
    what we call a VPN\n   policy or VPN topology that defines routing exchange rules
    between\n   sites.\n   End-to-end multi-segment connectivity can be realized by
    using a\n   combination of per-site connectivity and per-segment connectivity
    at\n   different segments.\n   Figure 4 shows the overall structure of the YANG
    module:\n   module: ietf-l2vpn-svc\n   +--rw l2vpn-svc\n     +--rw vpn-profiles\n
    \    |  +--rw valid-provider-identifiers\n     |     +--rw cloud-identifier*  string{cloud-access}?\n
    \    |     +--rw qos-profile-identifier* string\n     |     +--rw bfd-profile-identifier*
    string\n     |     +--rw remote-carrier-identifier* string\n     +--rw vpn-services\n
    \    |  +--rw vpn-service* [vpn-id]\n     |     +--rw vpn-id                      svc-id\n
    \    |     +--rw vpn-svc-type?               identityref\n     |     +--rw customer-name?
    \             string\n     |     +--rw svc-topo?                   identityref\n
    \    |     +--rw cloud-accesses {cloud-access}?\n     |     |  +--rw cloud-access*
    [cloud-identifier]\n     |     |     +--rw cloud-identifier\n     |     |     |
    \   -> /l2vpn-svc/vpn-profiles/\n     |     |     |      valid-provider-identifiers/cloud-identifier\n
    \    |     |     +--rw (list-flavor)?\n     |     |        +--:(permit-any)\n
    \    |     |        |  +--rw permit-any?         empty\n     |     |        +--:(deny-any-except)\n
    \    |     |        |  +--rw permit-site*\n     |     |        |  :    -> /l2vpn-svc/sites/site/site-id\n
    \    |     |        +--:(permit-any-except)\n     |     |           +--rw deny-site*\n
    \    |     |                -> /l2vpn-svc/sites/site/site-id\n     |     +--rw
    frame-delivery {frame-delivery}?\n     |     |  +--rw customer-tree-flavors\n
    \    |     |  |  +--rw tree-flavor*   identityref\n     |     |  +--rw bum-frame-delivery\n
    \    |     |  |  +--rw bum-frame-delivery* [frame-type]\n     |     |  |     +--rw
    frame-type       identityref\n     |     |  |     +--rw delivery-mode?   identityref\n
    \    |     |  +--rw multicast-gp-port-mapping    identityref\n     |     +--rw
    extranet-vpns {extranet-vpn}?\n     |     |  +--rw extranet-vpn* [vpn-id]\n     |
    \    |     +--rw vpn-id              svc-id\n     |     |     +--rw local-sites-role?
    \  identityref\n     |     +--rw ce-vlan-preservation        boolean\n     |     +--rw
    ce-vlan-cos-preservation    boolean\n     |     +--rw carrierscarrier?            boolean
    {carrierscarrier}?\n     +--rw sites\n       +--rw site* [site-id]\n        +--rw
    site-id                                string\n        +--rw site-vpn-flavor?
    \                      identityref\n        +--rw devices\n        |  +--rw device*
    [device-id]\n        |     +--rw device-id     string\n        |     +--rw location\n
    \       |     |    -> ../../../locations/location/location-id\n        |     +--rw
    management\n        |        +--rw transport?   identityref\n        |        +--rw
    address?     inet:ip-address\n        +--rw management\n        |  +--rw type
    \   identityref\n        +--rw locations\n        |  +--rw location* [location-id]\n
    \       |     +--rw location-id     string\n        |     +--rw address?        string\n
    \       |     +--rw postal-code?    string\n        |     +--rw state?          string\n
    \       |     +--rw city?           string\n        |     +--rw country-code?
    \  string\n        +--rw site-diversity {site-diversity}?\n        |  +--rw groups\n
    \       |     +--rw group* [group-id]\n        |        +--rw group-id    string\n
    \       +--rw vpn-policies\n        |  +--rw vpn-policy* [vpn-policy-id]\n        |
    \    +--rw vpn-policy-id    string\n        |     +--rw entries* [id]\n        |
    \       +--rw id         string\n        |        +--rw filters\n        |        |
    \ +--rw filter* [type]\n        |        |     +--rw type       identityref\n
    \       |        |     +--rw lan-tag*   uint32 {lan-tag}?\n        |        +--rw
    vpn* [vpn-id]\n        |           +--rw vpn-id\n        |           |    -> /l2vpn-svc/vpn-services/\n
    \       |           |            vpn-service/vpn-id\n        |           +--rw
    site-role?   identityref\n        +--rw service\n        |  +--rw qos {qos}?\n
    \       |  |  +--rw qos-classification-policy\n        |  |  |  +--rw rule* [id]\n
    \       |  |  |     +--rw id                   string\n        |  |  |     +--rw
    (match-type)?\n        |  |  |     |  +--:(match-flow)\n        |  |  |     |
    \ |  +--rw match-flow\n        |  |  |     |  |     +--rw dscp?           inet:dscp\n
    \       |  |  |     |  |     +--rw dot1q?          uint16\n        |  |  |     |
    \ |     +--rw pcp?            uint8\n        |  |  |     |  |     +--rw src-mac?
    \       yang:mac-address\n        |  |  |     |  |     +--rw dst-mac?        yang:mac-address\n
    \       |  |  |     |  |     +--rw color-type?     identityref\n        |  |  |
    \    |  |     +--rw target-sites*\n        |  |  |     |  |     |               svc-id
    {target-sites}?\n        |  |  |     |  |     +--rw any?            empty\n        |
    \ |  |     |  |     +--rw vpn-id?         svc-id\n        |  |  |     |  +--:(match-application)\n
    \       |  |  |     |     +--rw match-application?   identityref\n        |  |
    \ |     +--rw target-class-id?     string\n        |  |  +--rw qos-profile\n        |
    \ |     +--rw (qos-profile)?\n        |  |        +--:(standard)\n        |  |
    \       |  +--rw profile?\n        |  |        |       -> /l2vpn-svc/vpn-profiles/\n
    \       |  |        |              valid-provider-identifiers/\n        |  |        |
    \             qos-profile-identifier\n        |  |        +--:(custom)\n        |
    \ |           +--rw classes {qos-custom}?\n        |  |              +--rw class*
    [class-id]\n        |  |                 +--rw class-id        string\n        |
    \ |                 +--rw direction?      identityref\n        |  |                 +--rw
    policing?       identityref\n        |  |                 +--rw byte-offset?    uint16\n
    \       |  |                 +--rw frame-delay\n        |  |                 |
    \ +--rw (flavor)?\n        |  |                 |     +--:(lowest)\n        |
    \ |                 |     |  +--rw use-lowest-latency? empty\n        |  |                 |
    \    +--:(boundary)\n        |  |                 |        +--rw delay-bound?
    \    uint16\n        |  |                 +--rw frame-jitter\n        |  |                 |
    \ +--rw (flavor)?\n        |  |                 |     +--:(lowest)\n        |
    \ |                 |     |  +--rw use-lowest-jitter? empty\n        |  |                 |
    \    +--:(boundary)\n        |  |                 |        +--rw delay-bound?
    \    uint32\n        |  |                 +--rw frame-loss\n        |  |                 |
    \ +--rw rate?   decimal64\n        |  |                 +--rw bandwidth\n        |
    \ |                    +--rw guaranteed-bw-percent decimal64\n        |  |                    +--rw
    end-to-end?           empty\n        |  +--rw carrierscarrier {carrierscarrier}?\n
    \       |     +--rw signaling-type?   identityref\n        +--rw broadcast-unknown-unicast-multicast
    {bum}?\n        |  +--rw multicast-site-type?            enumeration\n        |
    \ +--rw multicast-gp-address-mapping* [id]\n        |  |  +--rw id                 uint16\n
    \       |  |  +--rw vlan-id            uint16\n        |  |  +--rw mac-gp-address
    \    yang:mac-address\n        |  |  +--rw port-lag-number?   uint32\n        |
    \ +--rw bum-overall-rate?     uint32\n        |  +--rw bum-rate-per-type* [type]\n
    \       |     +--rw type    identityref\n        |     +--rw rate?   uint32\n
    \       +--rw mac-loop-prevention {mac-loop-prevention}?\n        |  +--rw protection-type?
    \  identityref\n        |  +--rw frequency?         uint32\n        |  +--rw retry-timer?
    \      uint32\n        +--rw access-control-list\n        |  +--rw mac* [mac-address]\n
    \       |     +--rw mac-address    yang:mac-address\n        +--ro actual-site-start?
    \  yang:date-and-time\n        +--ro actual-site-stop?    yang:date-and-time\n
    \       +--rw bundling-type?       identityref\n        +--rw default-ce-vlan-id
    \  uint32\n        +--rw site-network-accesses\n           +--rw site-network-access*
    [network-access-id]\n           +--rw network-access-id                 string\n
    \          +--rw remote-carrier-name?              string\n           +--rw type?
    \                            identityref\n           +--rw (location-flavor)\n
    \          |  +--:(location)\n           |  |  +--rw location-reference?\n           |
    \ |       -> ../../../locations/location/\n           |  |               location-id\n
    \          |  +--:(device)\n           |     +--rw device-reference?\n           |
    \         -> ../../../devices/device/device-id\n           +--rw access-diversity
    {site-diversity}?\n           |  +--rw groups\n           |  |  +--rw group* [group-id]\n
    \          |  |     +--rw group-id    string\n           |  +--rw constraints\n
    \          |     +--rw constraint* [constraint-type]\n           |        +--rw
    constraint-type    identityref\n           |        +--rw target\n           |
    \          +--rw (target-flavor)?\n           |              +--:(id)\n           |
    \             |  +--rw group* [group-id]\n           |              |     +--rw
    group-id    string\n           |              +--:(all-accesses)\n           |
    \             |  +--rw all-other-accesses?   empty\n           |              +--:(all-groups)\n
    \          |                 +--rw all-other-groups?     empty\n           +--rw
    bearer\n           |  +--rw requested-type {requested-type}?\n           |  |
    \ +--rw type?     string\n           |  |  +--rw strict?   boolean\n           |
    \ +--rw always-on?         boolean {always-on}?\n           |  +--rw bearer-reference?
    \ string {bearer-reference}?\n           +--rw connection\n           |  +--rw
    encapsulation-type?    identityref\n           |  +--rw eth-inf-type?          identityref\n
    \          |  +--rw tagged-interface\n           |  |  +--rw type?               identityref\n
    \          |  |  +--rw dot1q-vlan-tagged {dot1q}?\n           |  |  |  +--rw tg-type?
    \   identityref\n           |  |  |  +--rw cvlan-id    uint16\n           |  |
    \ +--rw priority-tagged\n           |  |  |  +--rw tag-type?   identityref\n           |
    \ |  +--rw qinq {qinq}?\n           |  |  |  +--rw tag-type?   identityref\n           |
    \ |  |  +--rw svlan-id    uint16\n           |  |  |  +--rw cvlan-id    uint16\n
    \          |  |  +--rw qinany {qinany}?\n           |  |  |  +--rw tag-type?   identityref\n
    \          |  |  |  +--rw svlan-id    uint16\n           |  |  +--rw vxlan {vxlan}?\n
    \          |  |     +--rw vni-id       uint32\n           |  |     +--rw peer-mode?
    \  identityref\n           |  |     +--rw peer-list* [peer-ip]\n           |  |
    \       +--rw peer-ip    inet:ip-address\n           |  +--rw untagged-interface\n
    \          |  |  +--rw speed?                 uint32\n           |  |  +--rw mode?
    \                 neg-mode\n           |  |  +--rw phy-mtu?               uint32\n
    \          |  |  +--rw lldp?                  boolean\n           |  |  +--rw
    oam-802.3ah-link {oam-3ah}?\n           |  |  |  +--rw enabled?   boolean\n           |
    \ |  +--rw uni-loop-prevention?   boolean\n           |  +--rw lag-interfaces
    {lag-interface}?\n           |  |  +--rw lag-interface* [index]\n           |
    \ |     +--rw index    string\n           |  |     +--rw lacp {lacp}?\n           |
    \ |        +--rw enabled?           boolean\n           |  |        +--rw mode?
    \             neg-mode\n           |  |        +--rw speed?             uint32\n
    \          |  |        +--rw mini-link-num?     uint32\n           |  |        +--rw
    system-priority?   uint16\n           |  |        +--rw micro-bfd {micro-bfd}?\n
    \          |  |        |  +--rw enabled?      enumeration\n           |  |        |
    \ +--rw interval?     uint32\n           |  |        |  +--rw hold-timer?   uint32\n
    \          |  |        +--rw bfd {bfd}?\n           |  |        |  +--rw enabled?
    \     boolean\n           |  |        |  +--rw (holdtime)?\n           |  |        |
    \    +--:(profile)\n           |  |        |     |  +--rw profile-name?\n           |
    \ |        |     |    -> /l2vpn-svc/\n           |  |        |     |         vpn-profiles/\n
    \          |  |        |     |        valid-provider-identifiers/\n           |
    \ |        |     |       bfd-profile-identifier\n           |  |        |     +--:(fixed)\n
    \          |  |        |        +--rw fixed-value?    uint32\n           |  |
    \       +--rw member-links\n           |  |        |  +--rw member-link* [name]\n
    \          |  |        |     +--rw name                string\n           |  |
    \       |     +--rw speed?              uint32\n           |  |        |     +--rw
    mode?               neg-mode\n           |  |        |     +--rw link-mtu?           uint32\n
    \          |  |        |     +--rw oam-802.3ah-link {oam-3ah}?\n           |  |
    \       |        +--rw enabled?  boolean\n           |  |        +--rw flow-control?
    \     boolean\n           |  |        +--rw lldp?              boolean\n           |
    \ +--rw cvlan-id-to-svc-map* [svc-id]\n           |  |  +--rw svc-id\n           |
    \ |  |    -> /l2vpn-svc/vpn-services/vpn-service/\n           |  |  |           vpn-id\n
    \          |  |  +--rw cvlan-id* [vid]\n           |  |     +--rw vid    uint16\n
    \          |  +--rw l2cp-control {l2cp-control}?\n           |  |  +--rw stp-rstp-mstp?
    \   control-mode\n           |  |  +--rw pause?            control-mode\n           |
    \ |  +--rw lacp-lamp?        control-mode\n           |  |  +--rw link-oam?         control-mode\n
    \          |  |  +--rw esmc?             control-mode\n           |  |  +--rw
    l2cp-802.1x?      control-mode\n           |  |  +--rw e-lmi?            control-mode\n
    \          |  |  +--rw lldp?             boolean\n           |  |  +--rw ptp-peer-delay?
    \  control-mode\n           |  |  +--rw garp-mrp?         control-mode\n           |
    \ +--rw oam {oam}\n           |     +--rw md-name         string\n           |
    \    +--rw md-level        uint16\n           |     +--rw cfm-802.1-ag* [maid]\n
    \          |     |  +--rw maid                     string\n           |     |
    \ +--rw mep-id?                  uint32\n           |     |  +--rw mep-level?
    \              uint32\n           |     |  +--rw mep-up-down?             enumeration\n
    \          |     |  +--rw remote-mep-id?           uint32\n           |     |
    \ +--rw cos-for-cfm-pdus?        uint32\n           |     |  +--rw ccm-interval?
    \           uint32\n           |     |  +--rw ccm-holdtime?            uint32\n
    \          |     |  +--rw alarm-priority-defect?   identityref\n           |     |
    \ +--rw ccm-p-bits-pri?       ccm-priority-type\n           |     +--rw y-1731*
    [maid]\n           |        +--rw maid                           string\n           |
    \       +--rw mep-id?                        uint32\n           |        +--rw
    type?                       identityref\n           |        +--rw remote-mep-id?
    \                uint32\n           |        +--rw message-period?                uint32\n
    \          |        +--rw measurement-interval?          uint32\n           |
    \       +--rw cos?                           uint32\n           |        +--rw
    loss-measurement?              boolean\n           |        +--rw synthetic-loss-measurement?
    \   boolean\n           |        +--rw delay-measurement\n           |        |
    \ +--rw enable-dm?   boolean\n           |        |  +--rw two-way?     boolean\n
    \          |        +--rw frame-size?                    uint32\n           |
    \       +--rw session-type?               enumeration\n           +--rw availability\n
    \          |  +--rw access-priority?   uint32\n           |  +--rw (redundancy-mode)?\n
    \          |     +--:(single-active)\n           |     |  +--rw single-active?
    \    empty\n           |     +--:(all-active)\n           |        +--rw all-active?
    \       empty\n           +--rw vpn-attachment\n           |  +--rw (attachment-flavor)\n
    \          |     +--:(vpn-id)\n           |     |  +--rw vpn-id?\n           |
    \    |  |    -> /l2vpn-svc/vpn-services/\n           |     |  |            vpn-service/vpn-id\n
    \          |     |  +--rw site-role?              identityref\n           |     +--:(vpn-policy-id)\n
    \          |        +--rw vpn-policy-id?\n           |             -> ../../../../vpn-policies/\n
    \          |                     vpn-policy/vpn-policy-id\n           +--rw service\n
    \          |  +--rw svc-bandwidth {input-bw}?\n           |  |  +--rw bandwidth*
    [direction type]\n           |  |     +--rw direction    identityref\n           |
    \ |     +--rw type         identityref\n           |  |     +--rw cos-id?      uint8\n
    \          |  |     +--rw vpn-id?      svc-id\n           |  |     +--rw cir          uint64\n
    \          |  |     +--rw cbs          uint64\n           |  |     +--rw eir?
    \        uint64\n           |  |     +--rw ebs?         uint64\n           |  |
    \    +--rw pir?         uint64\n           |  |     +--rw pbs?         uint64\n
    \          |  +--rw svc-mtu            uint16\n           |  +--rw qos {qos}?\n
    \          |  |  +--rw qos-classification-policy\n           |  |  |  +--rw rule*
    [id]\n           |  |  |     +--rw id                   string\n           |  |
    \ |     +--rw (match-type)?\n           |  |  |     |  +--:(match-flow)\n           |
    \ |  |     |  |  +--rw match-flow\n           |  |  |     |  |     +--rw dscp?
    \          inet:dscp\n           |  |  |     |  |     +--rw dot1q?          uint16\n
    \          |  |  |     |  |     +--rw pcp?            uint8\n           |  |  |
    \    |  |     +--rw src-mac?  yang:mac-address\n           |  |  |     |  |     +--rw
    dst-mac?  yang:mac-address\n           |  |  |     |  |     +--rw color-type?
    \    identityref\n           |  |  |     |  |     +--rw target-sites*\n           |
    \ |  |     |  |     |          svc-id {target-sites}?\n           |  |  |     |
    \ |     +--rw any?            empty\n           |  |  |     |  |     +--rw vpn-id?
    \        svc-id\n           |  |  |     |  +--:(match-application)\n           |
    \ |  |     |     +--rw match-application? identityref\n           |  |  |     +--rw
    target-class-id?     string\n           |  |  +--rw qos-profile\n           |
    \ |     +--rw (qos-profile)?\n           |  |        +--:(standard)\n           |
    \ |        |  +--rw profile?\n           |  |        |       -> /l2vpn-svc/vpn-profiles/\n
    \          |  |        |              valid-provider-identifiers/\n           |
    \ |        |              qos-profile-identifier\n           |  |        +--:(custom)\n
    \          |  |           +--rw classes {qos-custom}?\n           |  |              +--rw
    class* [class-id]\n           |  |                 +--rw class-id        string\n
    \          |  |                 +--rw direction?      identityref\n           |
    \ |                 +--rw policing?       identityref\n           |  |                 +--rw
    byte-offset?    uint16\n           |  |                 +--rw frame-delay\n           |
    \ |                 |  +--rw (flavor)?\n           |  |                 |     +--:(lowest)\n
    \          |  |                 |     |  +--rw use-lowest-latency?\n           |
    \ |                 |     |                     empty\n           |  |                 |
    \    +--:(boundary)\n           |  |                 |        +--rw delay-bound?
    uint16\n           |  |                 +--rw frame-jitter\n           |  |                 |
    \ +--rw (flavor)?\n           |  |                 |     +--:(lowest)\n           |
    \ |                 |     |  +--rw use-lowest-jitter?\n           |  |                 |
    \    |                     empty\n           |  |                 |     +--:(boundary)\n
    \          |  |                 |        +--rw delay-bound? uint32\n           |
    \ |                 +--rw frame-loss\n           |  |                 |  +--rw
    rate?   decimal64\n           |  |                 +--rw bandwidth\n           |
    \ |                    +--rw guaranteed-bw-percent\n           |  |                    |
    \                   decimal64\n           |  |                    +--rw end-to-end?
    \      empty\n           |  +--rw carrierscarrier {carrierscarrier}?\n           |
    \    +--rw signaling-type?   identityref\n           +--rw broadcast-unknown-unicast-multicast
    {bum}?\n           |  +--rw multicast-site-type?            enumeration\n           |
    \ +--rw multicast-gp-address-mapping* [id]\n           |  |  +--rw id                 uint16\n
    \          |  |  +--rw vlan-id            uint16\n           |  |  +--rw mac-gp-address
    \    yang:mac-address\n           |  |  +--rw port-lag-number?   uint32\n           |
    \ +--rw bum-overall-rate?               uint32\n           |  +--rw bum-rate-per-type*
    [type]\n           |     +--rw type    identityref\n           |     +--rw rate?
    \  uint32\n           +--rw mac-loop-prevention {mac-loop-prevention}?\n           |
    \ +--rw protection-type?   identityref\n           |  +--rw frequency?         uint32\n
    \          |  +--rw retry-timer?       uint32\n           +--rw access-control-list\n
    \          |  +--rw mac* [mac-address]\n           |     +--rw mac-address    yang:mac-address\n
    \          +--rw mac-addr-limit\n           +--rw limit-number?    uint16\n           +--rw
    time-interval?   uint32\n           +--rw action?          identityref\n              Figure
    4: Overall Structure of the YANG Module\n"
  - contents:
    - "5.1.  Features and Augmentation\n   The model defined in this document implements
      many features that\n   allow implementations to be modular.  As an example,
      the Layer 2\n   protocol parameters (Section 5.3.2.2) proposed to the customer
      may\n   also be enabled through features.  This model also defines some\n   features
      for options that are more advanced, such as support for\n   extranet VPNs (Section
      5.2.4), site diversity (Section 5.3), and QoS\n   (Section 5.10.2).\n   In addition,
      as for any YANG data model, this service model can be\n   augmented to implement
      new behaviors or specific features.  For\n   example, this model defines VXLAN
      [RFC7348] for Ethernet packet\n   encapsulation; if VXLAN encapsulation does
      not fulfill all\n   requirements for describing the service, new options can
      be added\n   through augmentation.\n"
    title: 5.1.  Features and Augmentation
  - contents:
    - "5.2.  VPN Service Overview\n   The vpn-service list item contains generic information
      about the VPN\n   service.  The vpn-id in the vpn-service list refers to an
      internal\n   reference for this VPN service.  This identifier is purely internal\n
      \  to the organization responsible for the VPN service.\n   The vpn-service
      list is composed of the following characteristics:\n   Customer information
      (customer-name):  Used to identify the customer.\n   VPN service type (vpn-svc-type):
      \ Used to indicate the VPN service\n      type.  The identifier is an identity
      allowing any encoding for the\n      local administration of the VPN service.
      \ Note that another\n      identity can be an extension of the base identity.\n
      \  Cloud access (cloud-access):  All sites in the L2VPN SHOULD be\n      permitted
      to access the cloud by default.  The \"cloud-access\"\n      container provides
      parameters for authorization rules.  A cloud\n      identifier is used to reference
      the target service.  This\n      identifier is local to each administration.\n
      \  Service topology (svc-topo):  Used to identify the type of VPN\n      service
      topology that is required.\n   Frame delivery service (frame-delivery):  Defines
      the frame delivery\n      support required for the L2VPN, e.g., multicast delivery,
      unicast\n      delivery, or broadcast delivery.\n   Extranet VPN (extranet-vpns):
      \ Indicates that a particular VPN needs\n      access to resources located in
      another VPN.\n"
    - contents:
      - "5.2.1.  VPN Service Type\n   The \"vpn-svc-type\" parameter defines the service
        type for provider-\n   provisioned L2VPNs.  The current version of the model
        supports six\n   flavors:\n   o  Point-to-point VPWSs connecting two customer
        sites.\n   o  Point-to-point or point-to-multipoint VPWSs connecting a set
        of\n      customer sites [RFC8214].\n   o  Multipoint VPLSs connecting a set
        of customer sites.\n   o  Multipoint VPLSs connecting one or more root sites
        and a set of\n      leaf sites but preventing inter-leaf-site communication.\n
        \  o  EVPN services [RFC7432] connecting a set of customer sites.\n   o  EVPN
        VPWSs between two customer sites or a set of customer sites\n      as specified
        in [RFC8214].\n   Other L2VPN service types could be included by augmentation.
        \ Note\n   that an Ethernet Private Line (EPL) service or an Ethernet Virtual\n
        \  Private Line (EVPL) service is an Ethernet Line (E-Line) service\n   [MEF-6]or
        a point-to-point Ethernet Virtual Circuit (EVC) service,\n   while an Ethernet
        Private LAN (EP-LAN) service or an Ethernet Virtual\n   Private LAN (EVP-LAN)
        service is an Ethernet LAN (E-LAN) service\n   [MEF-6] or a multipoint-to-multipoint
        EVC service.\n"
      title: 5.2.1.  VPN Service Type
    - contents:
      - "5.2.2.  VPN Service Topologies\n   The types of VPN service topologies discussed
        below can be used for\n   configuration if needed.  The module described in
        this document\n   currently supports any-to-any, Hub-and-Spoke (where Hubs
        can exchange\n   traffic), and Hub-and-Spoke Disjoint (where Hubs cannot exchange\n
        \  traffic).  New topologies could be added by augmentation.  By\n   default,
        the any-to-any VPN service topology is used.\n"
      - contents:
        - "5.2.2.1.  Route Target Allocation\n   A Layer 2 PE-based VPN (such as a
          VPLS-based VPN or an EVPN that uses\n   BGP as its signaling protocol) can
          be built using Route Targets (RTs)\n   as described in [RFC4364] and [RFC7432].
          \ The management system is\n   expected to automatically allocate a set
          of RTs upon receiving a VPN\n   service creation request.  How the management
          system allocates RTs is\n   out of scope for this document, but multiple
          ways could be envisaged,\n   as described in Section 6.2.1.1 of [RFC8299].\n"
        title: 5.2.2.1.  Route Target Allocation
      - contents:
        - "5.2.2.2.  Any-to-Any\n     +--------------------------------------------------------------+\n
          \    |  VPN1_Site 1 ------ PE1               PE2 ------ VPN1_Site 2 |\n
          \    |                                                              |\n
          \    |  VPN1_Site 3 ------ PE3               PE4 ------ VPN1_Site 4 |\n
          \    +--------------------------------------------------------------+\n
          \                Figure 5: Any-to-Any VPN Service Topology\n   In the any-to-any
          VPN service topology, all VPN sites can communicate\n   with each other
          without any restrictions.  The management system that\n   receives an any-to-any
          L2VPN service request through this model is\n   expected to assign and then
          configure the MAC-VRF and RTs on the\n   appropriate PEs.  In the any-to-any
          case, a single RT is generally\n   required, and every MAC-VRF imports and
          exports this RT.\n"
        title: 5.2.2.2.  Any-to-Any
      - contents:
        - "5.2.2.3.  Hub-and-Spoke\n     +---------------------------------------------------------------+\n
          \    |   Hub_Site 1 ------ PE1               PE2 ------ Spoke_Site 1 |\n
          \    |                          +------------------------------------+\n
          \    |                          |\n     |                          +------------------------------------+\n
          \    |   Hub_Site 2 ------ PE3               PE4 ------ Spoke_Site 2 |\n
          \    +---------------------------------------------------------------+\n
          \              Figure 6: Hub-and-Spoke VPN Service Topology\n   In the Hub-and-Spoke
          VPN service topology,\n   o  all Spoke sites can communicate only with Hub
          sites (i.e., Spoke\n      sites cannot communicate with each other).\n   o
          \ Hubs can communicate with each other.\n   The management system that receives
          a Hub-and-Spoke L2VPN service\n   request through this model is expected
          to assign and then configure\n   the MAC-VRF and RTs on the appropriate
          PEs.  In the Hub-and-Spoke\n   case, two RTs are generally required (one
          RT for Hub routes and one\n   RT for Spoke routes).  A Hub MAC-VRF that
          connects Hub sites will\n   export Hub routes with the Hub RT and will import
          Spoke routes\n   through the Spoke RT.  It will also import the Hub RT to
          allow\n   Hub-to-Hub communication.  A Spoke MAC-VRF that connects Spoke
          sites\n   will export Spoke routes with the Spoke RT and will import Hub
          routes\n   through the Hub RT.\n"
        title: 5.2.2.3.  Hub-and-Spoke
      - contents:
        - "5.2.2.4.  Hub-and-Spoke Disjoint\n     +---------------------------------------------------------------+\n
          \    |   Hub_Site 1 ------ PE1               PE2 ------ Spoke_Site 1 |\n
          \    +--------------------------+  +---------------------------------+\n
          \                               |  |\n     +--------------------------+
          \ +---------------------------------+\n     |   Hub_Site 2 ------ PE3               PE4
          ------ Spoke_Site 2 |\n     +---------------------------------------------------------------+\n
          \          Figure 7: Hub-and-Spoke-Disjoint VPN Service Topology\n   In
          the Hub-and-Spoke-Disjoint VPN service topology,\n   o  all Spoke sites
          can communicate only with Hub sites (i.e., Spoke\n      sites cannot communicate
          with each other).\n   o  Hubs cannot communicate with each other.\n   The
          management system that receives a Hub-and-Spoke-Disjoint L2VPN\n   service
          request through this model is expected to assign and then\n   configure
          the VRF and RTs on the appropriate PEs.  In the\n   Hub-and-Spoke-Disjoint
          case, at least two RTs are required for Hubs\n   and Spokes, respectively
          (at least one RT for Hub routes and at least\n   one RT for Spoke routes).
          \ A Hub VRF that connects Hub sites will\n   export Hub routes with the
          Hub RT and will import Spoke routes\n   through the Spoke RT.  A Spoke VRF
          that connects Spoke sites will\n   export Spoke routes with the Spoke RT
          and will import Hub routes\n   through the Hub RT.\n   The management system
          MUST take into account constraints on\n   Hub-and-Spoke connections, as
          in the previous case.\n   Hub-and-Spoke Disjoint can also be seen as multiple
          Hub-and-Spoke\n   VPNs (one per Hub) that share a common set of Spoke sites.\n"
        title: 5.2.2.4.  Hub-and-Spoke Disjoint
      title: 5.2.2.  VPN Service Topologies
    - contents:
      - "5.2.3.  Cloud Access\n   This model provides cloud access configuration through
        the\n   cloud-access container.  The usage of cloud-access is targeted for\n
        \  public cloud access and Internet access.  The cloud-access container\n
        \  provides parameters for authorization rules.  Note that this model\n   considers
        that public cloud and public Internet access share some\n   commonality; therefore,
        it does not distinguish Internet access from\n   cloud access.  If needed,
        a different label for Internet access could\n   be added by augmentation.\n
        \  Private cloud access may be addressed through the site container as\n   described
        in Section 5.3, with usage consistent with sites of\n   type \"NNI\".\n   A
        cloud identifier is used to reference the target service.  This\n   identifier
        is local to each administration.\n   By default, all sites in the L2VPN SHOULD
        be permitted to access the\n   cloud or the Internet.  If restrictions are
        required, a user MAY\n   configure some limitations for some sites or nodes
        by using policies,\n   i.e., the \"permit-site\" or \"deny-site\" leaf-list.
        \ The permit-site\n   leaf-list defines the list of sites authorized for cloud
        access.  The\n   deny-site leaf-list defines the list of sites denied for
        cloud\n   access.  The model supports both \"deny-any-except\" and\n   \"permit-any-except\"
        authorization.\n   How the restrictions will be configured on network elements
        is out of\n   scope for this document.\n                        L2VPN\n              ++++++++++++++++++++++++++++++++
        \    ++++++++++++\n              +            Site 3            + --- +  Cloud
        1 +\n              + Site 1                       +     ++++++++++++\n              +
        \                             +\n              + Site 2                       +
        --- ++++++++++++\n              +                              +     + Internet
        +\n              +            Site 4            +     ++++++++++++\n              ++++++++++++++++++++++++++++++++\n
        \                          |\n                      +++++++++++\n                      +
        Cloud 2 +\n                      +++++++++++\n              Figure 8: Example
        of Cloud Access Configuration\n   As shown in Figure 8, we configure the global
        VPN to access the\n   Internet by creating a cloud-access container pointing
        to the cloud\n   identifier for the Internet service.  (This is illustrated
        in the XML\n   [W3C.REC-xml-20081126] below.)  No authorized sites will be\n
        \  configured, as all sites are required to be able to access the\n   Internet.\n
        \   <?xml version=\"1.0\"?>\n       <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
        \      <vpn-services>\n       <vpn-service>\n       <vpn-id>123456487</vpn-id>\n
        \     <cloud-accesses>\n       <cloud-access>\n          <cloud-identifier>INTERNET</cloud-identifier>\n
        \      </cloud-access>\n      </cloud-accesses>\n      <ce-vlan-preservation>true</ce-vlan-preservation>\n
        \     <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n      </vpn-service>\n
        \     </vpn-services>\n    </l2vpn-svc>\n   If Site 1 and Site 2 require access
        to Cloud 1, a new cloud-access\n   container pointing to the cloud identifier
        of Cloud 1 will be\n   created.  The permit-site leaf-list will be filled
        with a reference\n   to Site 1 and Site 2.\n    <?xml version=\"1.0\"?>\n
        \      <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
        \       <vpn-services>\n         <vpn-service>\n         <vpn-id>123456487</vpn-id>\n
        \        <cloud-accesses>\n          <cloud-access>\n            <cloud-identifier>Cloud1</cloud-identifier>\n
        \           <permit-site>site1</permit-site>\n            <permit-site>site2</permit-site>\n
        \         </cloud-access>\n         </cloud-accesses>\n        <ce-vlan-preservation>true</ce-vlan-preservation>\n
        \       <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n       </vpn-service>\n
        \      </vpn-services>\n    </l2vpn-svc>\n   If all sites except Site 1 require
        access to Cloud 2, a new\n   cloud-access container pointing to the cloud
        identifier of Cloud 2\n   will be created.  The deny-site leaf-list will be
        filled with a\n   reference to Site 1.\n    <?xml version=\"1.0\"?>\n      <l2vpn-svc
        xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n        <vpn-services>\n
        \        <vpn-service>\n           <vpn-id>123456487</vpn-id>\n            <cloud-accesses>\n
        \            <cloud-access>\n              <cloud-identifier>Cloud2</cloud-identifier>\n
        \             <deny-site>site1</deny-site>\n            </cloud-access>\n
        \          </cloud-accesses>\n          <ce-vlan-preservation>true</ce-vlan-preservation>\n
        \         <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n        </vpn-service>\n
        \     </vpn-services>\n    </l2vpn-svc>\n"
      title: 5.2.3.  Cloud Access
    - contents:
      - "5.2.4.  Extranet VPNs\n   There are some cases where a particular VPN needs
        access to resources\n   (servers, hosts, etc.) that are external.  Those resources
        may be\n   located in another VPN.\n                 +-----------+           +-----------+\n
        \               /             \\         /             \\\n     Site A --
        |    VPN A      |  ---  |    VPN B      | --- Site B\n                \\             /
        \        \\             /      (Shared\n                 +-----------+           +-----------+
        \       resources)\n                 Figure 9: Example of Shared VPN Resources\n
        \  As illustrated in Figure 9, VPN B has some resources on Site B that\n   need
        to be made available to some customers/partners.  Specifically,\n   VPN A
        must be able to access those VPN B resources.\n   Such a VPN connection scenario
        can be achieved via a VPN policy as\n   defined in Section 5.5.2.2.  But there
        are some simple cases where a\n   particular VPN (VPN A) needs access to all
        resources in another VPN\n   (VPN B).  The model provides an easy way to set
        up this connection\n   using the \"extranet-vpns\" container.\n   The extranet-vpns
        container defines a list of VPNs a particular VPN\n   wants to access.  The
        extranet-vpns container is used on customer\n   VPNs accessing extranet resources
        in another VPN.  In Figure 9, in\n   order to provide VPN A with access to
        VPN B, the extranet-vpns\n   container needs to be configured under VPN A
        with an entry\n   corresponding to VPN B.  There is no service configuration\n
        \  requirement on VPN B.\n   Readers should note that even if there is no
        configuration\n   requirement on VPN B, if VPN A lists VPN B as an extranet,
        all sites\n   in VPN B will gain access to all sites in VPN A.\n   The \"site-role\"
        leaf defines the role of the local VPN sites in the\n   target extranet VPN
        service topology.  Site roles are defined in\n   Section 5.4.\n   In the example
        below, VPN A accesses VPN B resources through an\n   extranet connection.
        \ A Spoke role is required for VPN A sites, as\n   sites from VPN A must not
        be able to communicate with each other\n   through the extranet VPN connection.\n
        \    <?xml version=\"1.0\"?>\n       <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
        \       <vpn-services>\n          <vpn-service>\n            <vpn-id>VPNB</vpn-id>\n
        \             <svc-topo>hub-spoke</svc-topo>\n             <ce-vlan-preservation>true</ce-vlan-preservation>\n
        \            <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n          </vpn-service>\n
        \         <vpn-service>\n             <vpn-id>VPNA</vpn-id>\n               <svc-topo>any-to-any</svc-topo>\n
        \                 <extranet-vpns>\n                    <extranet-vpn>\n                     <vpn-id>VPNB</vpn-id>\n
        \                    <local-sites-role>spoke-role</local-sites-role>\n                   </extranet-vpn>\n
        \                </extranet-vpns>\n             <ce-vlan-preservation>true</ce-vlan-preservation>\n
        \            <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n         </vpn-service>\n
        \      </vpn-services>\n      </l2vpn-svc>\n   This model does not define
        how the extranet configuration will be\n   achieved within the network.\n
        \  Any VPN interconnection scenario that is more complex (e.g., only\n   certain
        parts of sites on VPN A accessing only certain parts of sites\n   on VPN B)
        needs to be achieved using a VPN attachment as defined in\n   Section 5.5.2
        and, in particular, a VPN policy as defined in\n   Section 5.5.2.2.\n"
      title: 5.2.4.  Extranet VPNs
    - contents:
      - "5.2.5.  Frame Delivery Service\n   If a BUM (Broadcast, Unknown Unicast,
        or Multicast) frame delivery\n   service is supported for an L2VPN, some global
        frame delivery\n   parameters are required as input for the service request.
        \ When a CE\n   sends BUM packets, replication occurs at the ingress PE and
        three\n   frame types need to be supported.\n   Users of this model will need
        to provide the flavors of trees that\n   will be used by customers within
        the L2VPN (customer-tree-flavors).\n   The model defined in this document
        supports bidirectional, shared,\n   and source-based trees (and can be augmented
        to contain other tree\n   types).  Multiple flavors of trees can be supported
        simultaneously.\n                             Operator network\n                              ______________\n
        \                            /              \\\n                            |
        \               |\n                            |                |\n    Recv
        -- Site 2 ------- PE2               |\n                            |               PE1
        --- Site 1 --- Source 1\n                            |                |        \\\n
        \                           |                |         -- Source 2\n                            |
        \               |\n                            |                |\n    Recv
        -- Site 3 ------- PE3               |\n                            |                |\n
        \                           |                |\n    Recv -- Site 4 -------
        PE4               |\n                          / |                |\n    Recv
        -- Site 5 -------  |                |\n                            |                |\n
        \                           |                |\n                             \\______________/\n
        \              Figure 10: BUM Frame Delivery Service Example\n   Multicast-group-to-port
        mappings can be created using the\n   \"rp-group-mappings\" leaf.  Two group-to-port
        mapping methods are\n   supported:\n   o  Static configuration of multicast
        Ethernet addresses and\n      ports/interfaces.\n   o  A multicast control
        protocol based on Layer 2 technology that\n      signals mappings of multicast
        addresses to ports/interfaces, such\n      as the Generic Attribute Registration
        Protocol (GARP) / GARP\n      Multicast Registration Protocol (GARP/GMRP)
        [IEEE-802-1D].\n"
      title: 5.2.5.  Frame Delivery Service
    title: 5.2.  VPN Service Overview
  - contents:
    - "5.3.  Site Overview\n   A site represents a connection of a customer office
      to one or more\n   VPN services.  Each site is associated with one or more locations.\n
      \                                                   +-------------+\n                                                   /
      \              \\\n                                            +-----|      VPN1
      \      |\n     +------------------+                   |      \\               /\n
      \    |                  |                   |       +-------------+\n     |
      \ New York Office |------ (site) -----+\n     |                  |                   |
      \      +-------------+\n     +------------------+                   |      /
      \              \\\n                                            +-----|      VPN2
      \      |\n                                                   \\               /\n
      \                                                   +-------------+\n         Figure
      11: Example: Customer Office and Two VPN Services\n   The provider uses the
      site container to store information regarding\n   detailed implementation arrangements
      made with either the customer or\n   peer operators at each interconnect location.\n
      \  We restrict the L2SM to exterior interfaces (i.e., UNIs and NNIs)\n   only,
      so all internal interfaces and the underlying topology are\n   outside the scope
      of the L2SM.\n   Typically, the following characteristics of a site interface
      handoff\n   need to be documented as part of the service design:\n   Unique
      identifier (site-id):  An arbitrary string to uniquely\n      identify the site
      within the overall network infrastructure.  The\n      format of \"site-id\"
      is determined by the local administrator of\n      the VPN service.\n   Device
      (device):  The customer can request one or more customer\n      premises equipment
      entities from the SP for a particular site.\n   Management (management):  Defines
      the model of management for the\n      site -- for example, type, management-transport,
      address.  This\n      parameter determines the boundary between the SP and the
      customer,\n      i.e., who has ownership of the CE device.\n   Location (location):
      \ The site location information.  Allows easy\n      retrieval of data about
      the nearest available resources.\n   Site diversity (site-diversity):  Presents
      some parameters to support\n      site diversity.\n   Site network accesses
      (site-network-accesses):  Defines the list of\n      ports to the site and their
      properties -- in particular, bearer,\n      connection, and service parameters.\n
      \  A site-network-access represents an Ethernet logical connection to a\n   site.
      \ A site may have multiple site-network-accesses.\n        +------------------+
      \            Site\n        |                  |-------------------------------------\n
      \       |                  |****** (site-network-access#1) ******\n        |
      \ New York Office |\n        |                  |****** (site-network-access#2)
      ******\n        |                  |-------------------------------------\n
      \       +------------------+\n              Figure 12: Two Site-Network-Accesses
      for a Site\n   Multiple site-network-accesses are used, for instance, in the
      case of\n   multihoming.  Some other meshing cases may also include multiple\n
      \  site-network-accesses.\n   The site configuration is viewed as a global entity;
      we assume that\n   it is mostly the management system's role to split the parameters\n
      \  between the different elements within the network.  For example, in\n   the
      case of the site-network-access configuration, the management\n   system needs
      to split the parameters between the PE configuration and\n   the CE configuration.\n
      \  The site may support single-homed access or multihoming.  In the case\n   of
      multihoming, the site can support multiple site-network-accesses.\n   Under
      each site-network-access, \"vpn-attachment\" is defined;\n   vpn-attachment
      will describe the association between a given\n   site-network-access and a
      given site, as well as the VPN to which\n   that site will connect.\n"
    - contents:
      - "5.3.1.  Devices and Locations\n   The information in the \"location\" sub-container
        under a site\n   container and in the \"devices\" container allows easy retrieval
        of\n   data about the nearest available facilities and can be used for\n   access
        topology planning.  It may also be used by other network\n   orchestration
        components to choose the targeted upstream PE and\n   downstream CE.  Location
        is expressed in terms of postal information.\n   More detailed information
        or other location information can be added\n   by augmentation.\n   A site
        may be composed of multiple locations.  All the locations will\n   need to
        be configured as part of the \"locations\" container and list.\n   A typical
        example of a multi-location site is a headquarters office\n   in a city, where
        the office is composed of multiple buildings.  Those\n   buildings may be
        located in different parts of the city and may be\n   linked by intra-city
        fibers (a customer metropolitan area network).\n   This model does not represent
        connectivity between multiple locations\n   of a site, because that connectivity
        is controlled by the customer.\n   In such a case, when connecting to a VPN
        service, the customer may\n   ask for multihoming based on its distributed
        locations.\n            New York Site\n        +------------------+             Site\n
        \       | +--------------+ |-------------------------------------\n        |
        | Manhattan    | |****** (site-network-access#1) ******\n        | +--------------+
        |\n        | +--------------+ |\n        | | Brooklyn     | |****** (site-network-access#2)
        ******\n        | +--------------+ |-------------------------------------\n
        \       +------------------+\n              Figure 13: Two Site-Network-Accesses,
        Two Sites\n   A customer may also request the use of some premises equipment\n
        \  entities (CEs) from the SP via the devices container.  Requesting a\n   CE
        implies a provider-managed or co-managed model.  A particular\n   device must
        be requested for a particular already-configured\n   location.  This would
        help the SP send the device to the appropriate\n   postal address.  In a multi-location
        site, a customer may, for\n   example, request a CE for each location on the
        site where multihoming\n   must be implemented.  In Figure 13, one device
        may be requested for\n   the Manhattan location and one other for the Brooklyn
        location.\n   By using devices and locations, the user can influence the\n
        \  multihoming scenario they want to implement: single CE, dual CE, etc.\n"
      title: 5.3.1.  Devices and Locations
    - contents:
      - "5.3.2.  Site Network Accesses\n   The L2SM includes a set of essential physical
        interface properties\n   and Ethernet-layer characteristics in the \"site-network-accesses\"\n
        \  container.  Some of these are critical implementation arrangements\n   that
        require consent from both the customer and the provider.\n   As mentioned
        earlier, a site may be multihomed.  Each logical network\n   access for a
        site is defined in the site-network-accesses container.\n   The site-network-access
        parameter defines how the site is connected\n   on the network and is split
        into three main classes of parameters:\n   o  bearer: defines requirements
        of the attachment (below Layer 2).\n   o  connection: defines Layer 2 protocol
        parameters of the attachment.\n   o  availability: defines the site's availability
        policy.  The\n      availability parameters are defined in Section 5.8.\n
        \  The site-network-access has a specific type\n   (site-network-access type).
        \ This document defines two types:\n   o  point-to-point: describes a point-to-point
        connection between the\n      SP and the customer.\n   o  multipoint: describes
        a multipoint connection between the SP and\n      the customer.\n   This site-network-access
        type may have an impact on the parameters\n   offered to the customer, e.g.,
        an SP might not offer MAC loop\n   protection for multipoint accesses.  It
        is up to the provider to\n   decide what parameters are supported for point-to-point
        and/or\n   multipoint accesses.  Multipoint accesses are out of scope for
        this\n   document; some containers defined in the model may require extensions\n
        \  in order to work properly for multipoint accesses.\n"
      - contents:
        - "5.3.2.1.  Bearer\n   The \"bearer\" container defines the requirements
          for the site\n   attachment (below Layer 2) to the provider network.\n   The
          bearer parameters will help to determine the access media to\n   be used.\n"
        title: 5.3.2.1.  Bearer
      - contents:
        - "5.3.2.2.  Connection\n   The \"connection\" container defines the Layer
          2 protocol parameters of\n   the attachment (e.g., vlan-id or circuit-id)
          and provides\n   connectivity between customer Ethernet switches.  Depending
          on the\n   management mode, it refers to PE-CE-LAN segment addressing or
          to\n   CE-to-customer-LAN segment addressing.  In any case, it describes
          the\n   responsibility boundary between the provider and the customer.  For
          a\n   customer-managed site, it refers to the PE-CE-LAN segment connection.\n
          \  For a provider-managed site, it refers to the CE-to-customer-LAN\n   segment
          connection.\n   The \"encapsulation-type\" parameter allows the user to
          select between\n   Ethernet encapsulation (port-based) or Ethernet VLAN
          encapsulation\n   (VLAN-based).  All of the allowed Ethernet interface types
          of service\n   frames can be listed under \"ether-inf-type\", e.g., untagged\n
          \  interface, tagged interface, LAG interface.\n   Corresponding to \"ether-inf-type\",
          the connection container also\n   presents three sets of link attributes:
          untagged interface, tagged\n   interface, and optional LAG interface attributes.
          \ These parameters\n   are essential for the connection to be properly established
          between\n   the CE devices and the PE devices.  The connection container
          also\n   defines a Layer 2 Control Protocol (L2CP) attribute that allows\n
          \  control-plane protocol interaction between the CE devices and the PE\n
          \  device.\n"
        - contents:
          - "5.3.2.2.1.  Untagged Interface\n   For each untagged interface (untagged-interface),
            there are basic\n   configuration parameters like interface index and
            speed, interface\n   MTU, auto-negotiation and flow-control settings,
            etc.  In addition,\n   and based on mutual agreement, the customer and
            provider may decide\n   to enable advanced features, such as LLDP, IEEE
            802.3ah\n   [IEEE-802-3ah], or MAC loop detection/prevention at a UNI.
            \ If loop\n   avoidance is required, the attribute \"uni-loop-prevention\"
            must be\n   set to \"true\".\n"
          title: 5.3.2.2.1.  Untagged Interface
        - contents:
          - "5.3.2.2.2.  Tagged Interface\n   If the tagged service is enabled on
            a logical unit on the connection\n   at the interface, \"encapsulation-type\"
            should be specified as the\n   Ethernet VLAN encapsulation (if VLAN-based)
            or VXLAN encapsulation,\n   and \"eth-inf-type\" should be set to indicate
            a tagged interface.\n   In addition, \"tagged-interface-type\" should
            be specified in the\n   \"tagged-interface\" container to determine how
            tagging needs to be\n   done.  The current model defines five ways to
            perform VLAN tagging:\n   o  priority-tagged: SPs encapsulate and tag
            packets between the CE\n      and the PE with the frame priority level.\n
            \  o  dot1q-vlan-tagged: SPs encapsulate packets between the CE and the\n
            \     PE with one or a set of customer VLAN (CVLAN) IDs.\n   o  qinq:
            SPs encapsulate packets that enter their networks with\n      multiple
            CVLAN IDs and a single VLAN tag with a single SP VLAN\n      (SVLAN).\n
            \  o  qinany: SPs encapsulate packets that enter their networks with\n
            \     unknown CVLANs and a single VLAN tag with a single SVLAN.\n   o
            \ vxlan: SPs encapsulate packets that enter their networks with a\n      VXLAN
            Network Identifier (VNI) and a peer list.\n   The overall S-tag for the
            Ethernet circuit and (if applicable)\n   C-tag-to-SVC mapping (where \"SVC\"
            stands for \"Switched Virtual\n   Circuit\") have been placed in the \"service\"
            container.  For the qinq\n   and qinany options, the S-tag under \"qinq\"
            and \"qinany\" should match\n   the S-tag in the service container in
            most cases; however, VLAN\n   translation is required for the S-tag in
            certain deployments at the\n   external-facing interface or upstream PEs
            to \"normalize\" the outer\n   VLAN tag to the service S-tag into the
            network and translate back to\n   the site's S-tag in the opposite direction.
            \ One example of this is\n   with a Layer 2 aggregation switch along the
            path: the S-tag for the\n   SVC has been previously assigned to another
            service and thus cannot\n   be used by this AC.\n"
          title: 5.3.2.2.2.  Tagged Interface
        - contents:
          - "5.3.2.2.3.  LAG Interface\n   Sometimes, the customer may require multiple
            physical links bundled\n   together to form a single, logical, point-to-point
            LAG connection to\n   the SP.  Typically, the Link Aggregation Control
            Protocol (LACP) is\n   used to dynamically manage adding or deleting member
            links of the\n   aggregate group.  In general, a LAG allows for increased
            service\n   bandwidth beyond the speed of a single physical link while
            providing\n   graceful degradation as failure occurs, thus increasing
            availability.\n   In the L2SM, there is a set of attributes under \"lag-interface\"\n
            \  related to link aggregation functionality.  The customer and provider\n
            \  first need to decide on whether LACP PDUs will be exchanged between\n
            \  the edge devices by specifying the \"LACP-state\" as \"on\" or \"off\".
            \ If\n   LACP is to be enabled, then both parties need to further specify\n
            \  (1) whether LACP will be running in active or passive mode and\n   (2)
            the time interval and priority level of the LACP PDU.  The\n   customer
            and provider can also determine the minimum aggregate\n   bandwidth for
            a LAG to be considered as a valid path by specifying\n   the optional
            \"mini-link-num\" attribute.  To enable fast detection of\n   faulty links,
            micro-BFD [RFC7130] (\"BFD\" stands for \"Bidirectional\n   Forwarding
            Detection\") runs independent UDP sessions to monitor the\n   status of
            each member link.  The customer and provider should agree\n   on the BFD
            hello interval and hold time.\n   Each member link will be listed under
            the LAG interface with basic\n   physical link properties.  Certain attributes,
            such as flow control,\n   encapsulation type, allowed ingress Ethertype,
            and LLDP settings, are\n   at the LAG level.\n"
          title: 5.3.2.2.3.  LAG Interface
        - contents:
          - "5.3.2.2.4.  CVLAN-ID-to-SVC Mapping\n   When more than one service is
            multiplexed onto the same interface,\n   ingress service frames are conditionally
            transmitted through one of\n   the L2VPN services based upon a pre-arranged
            customer-VLAN-to-SVC\n   mapping.  Multiple CVLANs can be bundled across
            the same SVC.  The\n   bundling type will determine how a group of CVLANs
            is bundled into\n   one VPN service (i.e., VLAN-bundling).\n   When applicable,
            \"cvlan-id-to-svc-map\" contains the list of CVLANs\n   that are mapped
            to the same service.  In most cases, this will be the\n   VLAN access-list
            for the inner 802.1Q tag [IEEE-802-1Q] (the C-tag).\n   A VPN service
            can be set to preserve the CE-VLAN ID and CE-VLAN CoS\n   from the source
            site to the destination site.  This is required when\n   the customer
            wants to use the VLAN header information between its two\n   sites.  CE-VLAN
            ID preservation and CE-VLAN CoS preservation are\n   applied on each site-network-access
            within sites.  \"Preservation\"\n   means that the value of the CE-VLAN
            ID and/or CE-VLAN CoS at the\n   source site must be equal to the value
            at a destination site\n   belonging to the same L2VPN service.\n   If
            all-to-one bundling is enabled (i.e., the bundling type is set to\n   \"all-to-one
            bundling\"), then preservation applies to all ingress\n   service frames.
            \ If all-to-one bundling is disabled, then\n   preservation applies to
            tagged ingress service frames having the\n   CE-VLAN ID.\n"
          title: 5.3.2.2.4.  CVLAN-ID-to-SVC Mapping
        - contents:
          - "5.3.2.2.5.  L2CP Control Support\n   The customer and the SP should arrange
            in advance whether or not to\n   allow control-plane protocol interaction
            between the CE devices and\n   the PE device.  To provide seamless operation
            with multicast data\n   transport, the transparent operation of Ethernet
            control protocols\n   (e.g., the Spanning Tree Protocol (STP) [IEEE-802-1D])
            can be\n   employed by customers.\n   To support efficient dynamic transport,
            Ethernet multicast control\n   frames (e.g., GARP/GMRP [IEEE-802-1D])
            can be used between the CE and\n   the PE.  However, solutions MUST NOT
            assume that all CEs are always\n   running such protocols (typically in
            the case where a CE is a router\n   and is not aware of Layer 2 details).\n
            \  The destination MAC addresses of these L2CP PDUs fall within two\n
            \  reserved blocks specified by the IEEE 802.1 Working Group.  Packets\n
            \  with destination MAC addresses in these multicast ranges have special\n
            \  forwarding rules.\n   o  Bridge block of protocols: 01-80-C2-00-00-00
            through\n      01-80-C2-00-00-0F\n   o  MRP block of protocols: 01-80-C2-00-00-20
            through\n      01-80-C2-00-00-2F\n   Layer 2 protocol tunneling allows
            SPs to pass subscriber Layer 2\n   control PDUs across the network without
            being interpreted and\n   processed by intermediate network devices.  These
            L2CP PDUs are\n   transparently encapsulated across the MPLS-enabled core
            network in\n   QinQ fashion.\n   The \"L2CP-control\" container contains
            the list of commonly used L2CP\n   protocols and parameters.  The SP can
            specify discard-mode,\n   peer-mode, or tunnel-mode actions for each individual
            protocol.\n"
          title: 5.3.2.2.5.  L2CP Control Support
        - contents:
          - "5.3.2.2.6.  Ethernet Service OAM\n   The advent of Ethernet as a wide-area
            network technology brings the\n   additional requirements of end-to-end
            service monitoring and fault\n   management in the SP network, particularly
            in the area of service\n   availability and Mean Time To Repair (MTTR).
            \ Ethernet Service OAM in\n   the L2SM refers to the combined protocol
            suites of IEEE 802.1ag\n   [IEEE-802-1ag] and ITU-T Y.1731 [ITU-T-Y-1731].\n
            \  Generally speaking, Ethernet Service OAM enables SPs to perform\n   service
            continuity checks, fault isolation, and packet delay/jitter\n   measurement
            at per-customer and per-site-network-access granularity.\n   The information
            collected from Ethernet Service OAM data sets is\n   complementary to
            other higher-layer IP/MPLS OSS tools to ensure that\n   the required SLAs
            can be met.\n   The 802.1ag Connectivity Fault Management (CFM) functional
            model is\n   structured with hierarchical Maintenance Domains (MDs), each
            assigned\n   with a unique maintenance level.  Higher-level MDs can be
            nested over\n   lower-level MDs.  However, the MDs cannot intersect.  The
            scope of\n   each MD can be solely within a customer network or solely
            within the\n   SP network.  An MD can interact between CEs and PEs (customer-to-\n
            \  provider) or between PEs (provider-to-provider), or it can tunnel\n
            \  over another SP network.\n   Depending on the use-case scenario, one
            or more Maintenance Entity\n   Group End Points (MEPs) can be placed on
            the external-facing\n   interface, sending CFM PDUs towards the core network
            (\"Up MEP\") or\n   downstream link (\"Down MEP\").\n   The \"cfm-802.1-ag\"
            sub-container under \"site-network-access\" presents\n   the CFM Maintenance
            Association (MA), i.e., Down MEP for the UNI MA.\n   For each MA, the
            user can define the Maintenance Association\n   Identifier (MAID), MEP
            level, MEP direction, Remote MEP ID, CoS level\n   of the CFM PDUs, Continuity
            Check Message (CCM) interval and hold\n   time, alarm-priority defect
            (i.e., the lowest-priority defect that is\n   allowed to generate a fault
            alarm), CCM priority type, etc.\n   ITU-T Y.1731 Performance Monitoring
            (PM) provides essential network\n   telemetry information that includes
            the measurement of Ethernet\n   service frame delay, frame delay variation,
            frame loss, and frame\n   throughput.  The delay/jitter measurement can
            be either one-way or\n   two-way.  Typically, a Y.1731 PM probe sends
            a small amount of\n   synthetic frames along with service frames to measure
            the SLA\n   parameters.\n   The \"y-1731\" sub-container under \"site-network-access\"
            contains a set\n   of parameters to define the PM probe information, including
            MAID,\n   local and Remote MEP ID, PM PDU type, message period and measurement\n
            \  interval, CoS level of the PM PDUs, loss measurement by synthetic or\n
            \  service frame options, one-way or two-way delay measurement, PM frame\n
            \  size, and session type.\n"
          title: 5.3.2.2.6.  Ethernet Service OAM
        title: 5.3.2.2.  Connection
      title: 5.3.2.  Site Network Accesses
    title: 5.3.  Site Overview
  - contents:
    - "5.4.  Site Roles\n   A VPN has a particular service topology, as described
      in\n   Section 5.2.2.  As a consequence, each site belonging to a VPN is\n   assigned
      a particular role in this topology.  The site-role leaf\n   defines the role
      of the site in a particular VPN topology.\n   In the any-to-any VPN service
      topology, all sites MUST have the same\n   role, which will be \"any-to-any-role\".\n
      \  In the Hub-and-Spoke VPN service topology or the Hub-and-Spoke-\n   Disjoint
      VPN service topology, sites MUST have a Hub role or a\n   Spoke role.\n"
    title: 5.4.  Site Roles
  - contents:
    - '5.5.  Site Belonging to Multiple VPNs

      '
    - contents:
      - "5.5.1.  Site VPN Flavors\n   A site may be part of one or more VPNs.  The
        \"site-vpn-flavor\"\n   defines the way that the VPN multiplexing is done.
        \ There are four\n   possible types of external-facing connections associated
        with an EVPN\n   service and a site.  Therefore, the model supports four flavors:\n
        \  o  site-vpn-flavor-single: The site belongs to only one VPN.\n   o  site-vpn-flavor-multi:
        The site belongs to multiple VPNs, and all\n      the logical accesses of
        the sites belong to the same set of VPNs.\n   o  site-vpn-flavor-nni: The
        site represents an NNI where two\n      administrative domains belonging to
        the same or different\n      providers interconnect.\n   o  site-vpn-flavor-e2e:
        The site represents an end-to-end\n      multi-segment connection.\n"
      - contents:
        - "5.5.1.1.  Single VPN Attachment: site-vpn-flavor-single\n   Figure 14 depicts
          a single VPN attachment.  The site connects to only\n   one VPN.\n                                                         +--------+\n
          \     +------------------+             Site             /          \\\n
          \     |                  |-----------------------------|            |\n
          \     |                  |***(site-network-access#1)***|    VPN1    |\n
          \     |  New York Office |                             |            |\n
          \     |                  |***(site-network-access#2)***|            |\n
          \     |                  |-----------------------------|            |\n
          \     +------------------+                              \\          /\n
          \                                                        +--------+\n                     Figure
          14: Single VPN Attachment\n"
        title: '5.5.1.1.  Single VPN Attachment: site-vpn-flavor-single'
      - contents:
        - "5.5.1.2.  Multi-VPN Attachment: site-vpn-flavor-multi\n   Figure 15 shows
          a site connected to multiple VPNs.\n                                                           +---------+\n
          \                                                     +---/----+      \\\n
          \  +------------------+             Site             /   |      \\      |\n
          \  |                  |--------------------------------- |       |VPN B|\n
          \  |                  |***(site-network-access#1)******* |       |     |\n
          \  |  New York Office |                             |    |       |     |\n
          \  |                  |***(site-network-access#2)*******  \\      |    /\n
          \  |                  |-----------------------------| VPN A+-----|---+\n
          \  +------------------+                              \\          /\n                                                      +--------+\n
          \                     Figure 15: Multi-VPN Attachment\n   In Figure 15,
          the New York office is multihomed.  Both logical\n   accesses are using
          the same VPN attachment rules, and both are\n   connected to VPN A and to
          VPN B.\n   Reaching VPN A or VPN B from the New York office will be done
          via MAC\n   destination-based forwarding.  Having the same destination reachable\n
          \  from the two VPNs may cause routing problems.  The customer\n   administration's
          role in this case would be to ensure the appropriate\n   mapping of its
          MAC addresses in each VPN.  See Sections 5.5.2 and\n   5.10.2 for more details.
          \ See also Section 5.10.3 for details\n   regarding support for BUM.\n"
        title: '5.5.1.2.  Multi-VPN Attachment: site-vpn-flavor-multi'
      - contents:
        - "5.5.1.3.  NNI: site-vpn-flavor-nni\n   A Network-to-Network Interface (NNI)
          scenario may be modeled using\n   the sites container.  It is helpful for
          the SP to indicate that the\n   requested VPN connection is not a regular
          site but rather is an NNI,\n   as specific default device configuration
          parameters may be applied in\n   the case of NNIs (e.g., Access Control
          Lists (ACLs), routing\n   policies).\n             SP A                                         SP
          B\n      -------------------                         -------------------\n
          \    /                   \\                       /                   \\\n
          \   |                     |                     |                     |\n
          \   |                 ++++++++ Inter-AS link ++++++++                 |\n
          \   |                 +      +_______________+      +                 |\n
          \   |                 + (MAC-VRF1)-(VPN1)-(MAC-VRF1)+                 |\n
          \   |                 +      +               +      +                 |\n
          \   |                 + ASBR +               + ASBR +                 |\n
          \   |                 +      +               +      +                 |\n
          \   |                 + (MAC-VRF2)-(VPN2)-(MAC-VRF2)+                 |\n
          \   |                 +      +_______________+      +                 |\n
          \   |                 ++++++++               ++++++++                 |\n
          \   |                     |                     |                     |\n
          \   |                     |                     |                     |\n
          \   |                     |                     |                     |\n
          \   |                 ++++++++ Inter-AS link ++++++++                 |\n
          \   |                 +      +_______________+      +                 |\n
          \   |                 + (MAC-VRF1)-(VPN1)-(MAC-VRF1)+                 |\n
          \   |                 +      +               +      +                 |\n
          \   |                 + ASBR +               + ASBR +                 |\n
          \   |                 +      +               +      +                 |\n
          \   |                 + (MAC-VRF2)-(VPN2)-(MAC-VRF2)+                 |\n
          \   |                 +      +_______________+      +                 |\n
          \   |                 ++++++++               ++++++++                 |\n
          \   |                     |                     |                     |\n
          \   |                     |                     |                     |\n
          \    \\                   /                       \\                   /\n
          \     -------------------                         -------------------\n
          \                    Figure 16: Option A NNI Scenario\n   Figure 16 illustrates
          an option A NNI scenario that can be modeled\n   using the sites container.
          \ In order to connect its customer VPNs\n   (VPN1 and VPN2) in SP B, SP
          A may request the creation of some\n   site-network-accesses to SP B.  The
          site-vpn-flavor-nni type will\n   be used to inform SP B that this is an
          NNI and not a regular\n   customer site.\n"
        title: '5.5.1.3.  NNI: site-vpn-flavor-nni'
      - contents:
        - "5.5.1.4.  E2E: site-vpn-flavor-e2e\n   An end-to-end (E2E) multi-segment
          VPN connection to be constructed\n   out of several connectivity segments
          may be modeled.  It is helpful\n   for the SP to indicate that the requested
          VPN connection is not a\n   regular site but rather is an end-to-end VPN
          connection, as specific\n   default device configuration parameters may
          be applied in the case of\n   site-vpn-flavor-e2e (e.g., QoS configuration).
          \ In order to establish\n   a connection between Site 1 in SP A and Site
          2 in SP B spanning\n   multiple domains, SP A may request the creation of
          end-to-end\n   connectivity to SP B.  The site-vpn-flavor-e2e type will
          be used to\n   indicate that this is an end-to-end connectivity setup and
          not a\n   regular customer site.\n"
        title: '5.5.1.4.  E2E: site-vpn-flavor-e2e'
      title: 5.5.1.  Site VPN Flavors
    - contents:
      - "5.5.2.  Attaching a Site to a VPN\n   Due to the multiple site-vpn flavors,
        the attachment of a site to an\n   L2VPN is done at the site-network-access
        (logical access) level\n   through the \"vpn-attachment\" container.  The
        vpn-attachment container\n   is mandatory.  The model provides two ways to
        attach a site to a VPN:\n   o  By referencing the target VPN directly.\n   o
        \ By referencing a VPN policy for attachments that are more complex.\n   These
        options allow the user to choose the flavor that provides the\n   best fit.\n"
      - contents:
        - "5.5.2.1.  Referencing a VPN\n   Referencing a vpn-id provides an easy way
          to attach a particular\n   logical access to a VPN.  This is the best way
          in the case of a\n   single VPN attachment.  When referencing a vpn-id,
          the site-role\n   setting must be added to express the role of the site
          in the target\n   VPN service topology.\n    <?xml version=\"1.0\"?>\n    <l2vpn-svc
          xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n     <vpn-services>\n
          \       <vpn-service>\n          <vpn-id>VPNA</vpn-id>\n          <ce-vlan-preservation>true</ce-vlan-preservation>\n
          \         <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n        </vpn-service>\n
          \       <vpn-service>\n          <vpn-id>VPNB</vpn-id>\n          <ce-vlan-preservation>true</ce-vlan-preservation>\n
          \         <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n        </vpn-service>\n
          \    </vpn-services>\n     <sites>\n       <site>\n        <site-id>SITE1</site-id>\n
          \      <locations>\n        <location>\n         <location-id>L1</location-id>\n
          \       </location>\n       </locations>\n       <management>\n        <type>customer-managed</type>\n
          \         </management>\n           <site-network-accesses>\n            <site-network-access>\n
          \            <network-access-id>LA1</network-access-id>\n                <service>\n
          \                 <svc-bandwidth>\n                     <bandwidth>\n                       <direction>input-bw</direction>\n
          \                       <type>bw-per-cos</type>\n                         <cir>450000000</cir>\n
          \                        <cbs>20000000</cbs>\n                         <eir>1000000000</eir>\n
          \                        <ebs>200000000</ebs>\n                     </bandwidth>\n
          \                   </svc-bandwidth>\n                     <carrierscarrier>\n
          \                      <signaling-type>bgp</signaling-type>\n                     </carrierscarrier>\n
          \                    <svc-mtu>1514</svc-mtu>\n                   </service>\n
          \           <vpn-attachment>\n             <vpn-id>VPNA</vpn-id>\n             <site-role>spoke-role</site-role>\n
          \           </vpn-attachment>\n           </site-network-access>\n           <site-network-access>\n
          \           <network-access-id>LA2</network-access-id>\n                <service>\n
          \                 <svc-bandwidth>\n                     <bandwidth>\n                       <direction>input-bw</direction>\n
          \                       <type>bw-per-cos</type>\n                         <cir>450000000</cir>\n
          \                        <cbs>20000000</cbs>\n                         <eir>1000000000</eir>\n
          \                        <ebs>200000000</ebs>\n                     </bandwidth>\n
          \                   </svc-bandwidth>\n                     <carrierscarrier>\n
          \                      <signaling-type>bgp</signaling-type>\n                     </carrierscarrier>\n
          \                    <svc-mtu>1514</svc-mtu>\n                   </service>\n
          \           <vpn-attachment>\n             <vpn-id>VPNB</vpn-id>\n             <site-role>spoke-role</site-role>\n
          \           </vpn-attachment>\n           </site-network-access>\n          </site-network-accesses>\n
          \     </site>\n     </sites>\n    </l2vpn-svc>\n   The example above describes
          a multi-VPN case where a site (SITE 1)\n   has two logical accesses (LA1
          and LA2), attached to both VPNA and\n   VPNB.\n"
        title: 5.5.2.1.  Referencing a VPN
      - contents:
        - "5.5.2.2.  VPN Policy\n   The \"vpn-policy\" list helps express a multi-VPN
          scenario where a\n   logical access belongs to multiple VPNs.\n   As a site
          can belong to multiple VPNs, the vpn-policy list may be\n   composed of
          multiple entries.  A filter can be applied to specify\n   that only some
          LANs at the site should be part of a particular VPN.\n   A site can be composed
          of multiple LAN segments, and each LAN segment\n   can be connected to a
          different VPN.  Each time a site (or LAN) is\n   attached to a VPN, the
          user must precisely describe its role\n   (site-role) within the target
          VPN service topology.\n     +---------------------------------------------------------------+\n
          \    |       Site 1 ------ PE7                                       |\n
          \    +-------------------------+                 [VPN2]              |\n
          \                              |                                     |\n
          \    +-------------------------+                                     |\n
          \    |       Site 2 ------ PE3               PE4 ------ Site 3       |\n
          \    +-----------------------------------+                           |\n
          \                                        |                           |\n
          \    +-------------------------------------------------------------+ |\n
          \    |       Site 4 ------ PE5           |   PE6 ------ Site 5     | |\n
          \    |                                                             | |\n
          \    |                      [VPN3]                                 | |\n
          \    +-------------------------------------------------------------+ |\n
          \                                       |                            |\n
          \                                       +----------------------------+\n
          \                      Figure 17: VPN Policy Example\n   In Figure 17, Site
          5 is part of two VPNs: VPN3 and VPN2.  It will\n   play a Hub role in VPN2
          and an any-to-any role in VPN3.  We can\n   express such a multi-VPN scenario
          as follows:\n   <?xml version=\"1.0\"?>\n    <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
          \    <vpn-services>\n      <vpn-service>\n       <vpn-id>VPN2</vpn-id>\n
          \      <ce-vlan-preservation>true</ce-vlan-preservation>\n       <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
          \     </vpn-service>\n      <vpn-service>\n       <vpn-id>VPN3</vpn-id>\n
          \      <ce-vlan-preservation>true</ce-vlan-preservation>\n       <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
          \     </vpn-service>\n     </vpn-services>\n     <sites>\n        <site>\n
          \      <locations>\n        <location>\n         <location-id>L1</location-id>\n
          \       </location>\n       </locations>\n       <management>\n        <type>customer-managed</type>\n
          \      </management>\n          <site-id>Site5</site-id>\n          <vpn-policies>\n
          \          <vpn-policy>\n            <vpn-policy-id>POLICY1</vpn-policy-id>\n
          \           <entries>\n             <id>ENTRY1</id>\n             <vpn>\n
          \             <vpn-id>VPN2</vpn-id>\n              <site-role>hub-role</site-role>\n
          \            </vpn>\n            </entries>\n            <entries>\n             <id>ENTRY2</id>\n
          \            <vpn>\n              <vpn-id>VPN3</vpn-id>\n              <site-role>any-to-any-role</site-role>\n
          \            </vpn>\n            </entries>\n           </vpn-policy>\n
          \         </vpn-policies>\n          <site-network-accesses>\n           <site-network-access>\n
          \           <network-access-id>LA1</network-access-id>\n         <site>\n
          \         <site-id>SITE1</site-id>\n       <locations>\n        <location>\n
          \        <location-id>L1</location-id>\n        </location>\n       </locations>\n
          \      <management>\n        <type>customer-managed</type>\n       </management>\n
          \         <site-network-accesses>\n           <site-network-access>\n            <network-access-id>LA1</network-access-id>\n
          \               <service>\n                  <svc-bandwidth>\n                     <bandwidth>\n
          \                      <direction>input-bw</direction>\n                        <type>bw-per-cos</type>\n
          \                        <cir>450000000</cir>\n                         <cbs>20000000</cbs>\n
          \                        <eir>1000000000</eir>\n                         <ebs>200000000</ebs>\n
          \                    </bandwidth>\n                    </svc-bandwidth>\n
          \                    <carrierscarrier>\n                       <signaling-type>bgp</signaling-type>\n
          \                    </carrierscarrier>\n                     <svc-mtu>1514</svc-mtu>\n
          \                  </service>\n            <vpn-attachment>\n             <vpn-id>VPNA</vpn-id>\n
          \            <site-role>spoke-role</site-role>\n            </vpn-attachment>\n
          \          </site-network-access>\n           <site-network-access>\n            <network-access-id>LA2</network-access-id>\n
          \               <service>\n                  <svc-bandwidth>\n                     <bandwidth>\n
          \                      <direction>input-bw</direction>\n                        <type>bw-per-cos</type>\n
          \                        <cir>450000000</cir>\n                         <cbs>20000000</cbs>\n
          \                        <eir>1000000000</eir>\n                         <ebs>200000000</ebs>\n
          \                    </bandwidth>\n                    </svc-bandwidth>\n
          \                    <carrierscarrier>\n                       <signaling-type>bgp</signaling-type>\n
          \                    </carrierscarrier>\n                     <svc-mtu>1514</svc-mtu>\n
          \                  </service>\n            <vpn-attachment>\n             <vpn-id>VPNB</vpn-id>\n
          \            <site-role>spoke-role</site-role>\n            </vpn-attachment>\n
          \          </site-network-access>\n          </site-network-accesses>\n
          \        </site>\n            <vpn-attachment>\n             <vpn-policy-id>POLICY1</vpn-policy-id>\n
          \           </vpn-attachment>\n           </site-network-access>\n          </site-network-accesses>\n
          \        </site>\n     </sites>\n    </l2vpn-svc>\n   Now, if a more granular
          VPN attachment is necessary, filtering can be\n   used.  For example, if
          LAN1 from Site 5 must be attached to VPN2 as a\n   Hub and LAN2 must be
          attached to VPN3, the following configuration\n   can be used:\n    <?xml
          version=\"1.0\"?>\n      <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
          \       <vpn-services>\n          <vpn-service>\n            <vpn-id>VPN2</vpn-id>\n
          \           <ce-vlan-preservation>true</ce-vlan-preservation>\n            <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
          \           </vpn-service>\n            <vpn-service>\n             <vpn-id>VPN3</vpn-id>\n
          \            <ce-vlan-preservation>true</ce-vlan-preservation>\n             <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
          \           </vpn-service>\n        </vpn-services>\n      <sites>\n       <site>\n
          \      <locations>\n        <location>\n         <location-id>L1</location-id>\n
          \       </location>\n       </locations>\n       <management>\n        <type>customer-managed</type>\n
          \      </management>\n             <site-id>Site5</site-id>\n             <vpn-policies>\n
          \             <vpn-policy>\n               <vpn-policy-id>POLICY1</vpn-policy-id>\n
          \              <entries>\n                <id>ENTRY1</id>\n                <filters>\n
          \                 <filter>\n                    <type>lan</type>\n                    <lan-tag>LAN1</lan-tag>\n
          \                 </filter>\n                </filters>\n                <vpn>\n
          \                <vpn-id>VPN2</vpn-id>\n                 <site-role>hub-role</site-role>\n
          \               </vpn>\n               </entries>\n               <entries>\n
          \               <id>ENTRY2</id>\n                <filters>\n                  <filter>\n
          \                   <type>lan</type>\n                    <lan-tag>LAN2</lan-tag>\n
          \                 </filter>\n                </filters>\n                 <vpn>\n
          \                <vpn-id>VPN3</vpn-id>\n                 <site-role>any-to-any-role</site-role>\n
          \               </vpn>\n               </entries>\n              </vpn-policy>\n
          \            </vpn-policies>\n             <site-network-accesses>\n              <site-network-access>\n
          \              <network-access-id>LA1</network-access-id>\n                 <service>\n
          \                  <svc-bandwidth>\n                      <bandwidth>\n
          \                      <direction>input-bw</direction>\n                        <type>bw-per-cos</type>\n
          \                        <cir>450000000</cir>\n                         <cbs>20000000</cbs>\n
          \                        <eir>1000000000</eir>\n                         <ebs>200000000</ebs>\n
          \                     </bandwidth>\n                     </svc-bandwidth>\n
          \                     <carrierscarrier>\n                         <signaling-type>bgp</signaling-type>\n
          \                     </carrierscarrier>\n                       <svc-mtu>1514</svc-mtu>\n
          \                  </service>\n               <vpn-attachment>\n                <vpn-policy-id>POLICY1</vpn-policy-id>\n
          \              </vpn-attachment>\n              </site-network-access>\n
          \            </site-network-accesses>\n            </site>\n           </sites>\n
          \        </l2vpn-svc>\n"
        title: 5.5.2.2.  VPN Policy
      title: 5.5.2.  Attaching a Site to a VPN
    title: 5.5.  Site Belonging to Multiple VPNs
  - contents:
    - "5.6.  Deciding Where to Connect the Site\n   The management system will have
      to determine where to connect each\n   site-network-access of a particular site
      to the provider network\n   (e.g., PE or aggregation switch).\n   This model
      defines parameters and constraints that can influence the\n   meshing of the
      site-network-access.\n   The management system MUST honor all customer constraints,
      or, if a\n   constraint is too strict and cannot be fulfilled, the management\n
      \  system MUST NOT provision the site and MUST provide the user with\n   information
      regarding any constraints that could not be fulfilled.\n   How this information
      is provided is out of scope for this document.\n   Whether or not to relax the
      constraint would then be left up to\n   the user.\n   Parameters such as site
      location (see Section 5.6.2) and access type\n   (see Section 5.6.3) affect
      the service placement that the management\n   system applies.\n   In addition
      to parameters and constraints, the management system's\n   decision MAY be based
      on any other internal constraints that are left\n   up to the SP, e.g., least
      load, distance.\n"
    - contents:
      - "5.6.1.  Constraint: Device\n   In the case of provider management or co-management,
        one or more\n   devices have been ordered by the customer to a particular
        location\n   that has already been configured.  The customer may force a\n
        \  particular site-network-access to be connected on a particular device\n
        \  that it ordered.\n             New York Site\n        +------------------+
        \            Site\n        | +--------------+ |-------------------------------------\n
        \       | | Manhattan    | |\n        | |           CE1********* (site-network-access#1)
        ******\n        | +--------------+ |\n        | +--------------+ |\n        |
        | Brooklyn     | |\n        | |           CE2********* (site-network-access#2)
        ******\n        | +--------------+ |\n        |                  |-------------------------------------\n
        \       +------------------+\n          Figure 18: Example of a Constraint
        Applied to a Device\n   In Figure 18, site-network-access#1 is associated
        with CE1 in the\n   service request.  The SP must ensure the provisioning
        of this\n   connection.\n"
      title: '5.6.1.  Constraint: Device'
    - contents:
      - "5.6.2.  Constraint/Parameter: Site Location\n   The location information
        provided in this model MAY be used by a\n   management system to determine
        the target PE to mesh the site (SP\n   side).  A particular location must
        be associated with each site\n   network access when configuring it.  The
        SP MUST honor the\n   termination of the access on the location associated
        with the site\n   network access (customer side).  The \"country-code\" in
        the site\n   location should be expressed as an ISO 3166 code and is similar
        to\n   the \"country\" label defined in [RFC4119].\n   The site-network-access
        location is determined by the\n   \"location-flavor\".  In the case of a provider-managed
        or co-managed\n   site, the user is expected to configure a \"device-reference\"
        (device\n   case) that will bind the site-network-access to a particular device\n
        \  that the customer ordered.  As each device is already associated with\n
        \  a particular location, in such a case the location information is\n   retrieved
        from the device location.  In the case of a\n   customer-managed site, the
        user is expected to configure a\n   \"location-reference\" (location case);
        this provides a reference to an\n   existing configured location and will
        help with placement.\n                                         POP#1 (New
        York)\n                                      +---------+\n                                      |
        \  PE1   |\n                 Site 1 ---...        |   PE2   |\n                (Atlantic
        City)       |   PE3   |\n                                      +---------+\n
        \                                        POP#2 (Washington)\n                                      +---------+\n
        \                                     |   PE4   |\n                                      |
        \  PE5   |\n                                      |   PE6   |\n                                      +---------+\n
        \                                        POP#3 (Philadelphia)\n                                      +---------+\n
        \                                     |   PE7   |\n                 Site 2
        CE#1---...    |   PE8   |\n                (Reston)              |   PE9   |\n
        \                                     +---------+\n                 Figure
        19: Location Information for Sites\n   In Figure 19, Site 1 is a customer-managed
        site with a location \"L1\",\n   while Site 2 is a provider-managed site for
        which a CE (CE#1) was\n   ordered.  Site 2 is configured with \"L2\" as its
        location.  When\n   configuring a site-network-access for Site 1, the user
        will need to\n   reference location L1 so that the management system will
        know that\n   the access will need to terminate on this location.  Then, for\n
        \  distance reasons, this management system may mesh Site 1 on a PE in\n   the
        Philadelphia POP.  It may also take into account resources\n   available on
        PEs to determine the exact target PE (e.g., least\n   loaded).  For Site 2,
        the user is expected to configure the\n   site-network-access with a device-reference
        to CE#1 so that the\n   management system will know that the access must terminate
        on the\n   location of CE#1 and must be connected to CE#1.  For placement
        of the\n   SP side of the access connection, in the case of the nearest PE
        used,\n   it may mesh Site 2 on the Washington POP.\n"
      title: '5.6.2.  Constraint/Parameter: Site Location'
    - contents:
      - "5.6.3.  Constraint/Parameter: Access Type\n   The management system needs
        to elect the access media to connect the\n   site to the customer (for example,
        xDSL, leased line, Ethernet\n   backhaul).  The customer may provide some
        parameters/constraints that\n   will provide hints to the management system.\n
        \  The bearer container information SHOULD be the first piece of\n   information
        considered when making this decision:\n   o  The \"requested-type\" parameter
        provides information about the\n      media type that the customer would like
        to use.  If the \"strict\"\n      leaf is equal to \"true\", this MUST be
        considered a strict\n      constraint so that the management system cannot
        connect the site\n      with another media type.  If the \"strict\" leaf is
        equal to \"false\"\n      (default) and if the requested media type cannot
        be fulfilled, the\n      management system can select another media type.
        \ The supported\n      media types SHOULD be communicated by the SP to the
        customer via a\n      mechanism that is out of scope for this document.\n
        \  o  The \"always-on\" leaf defines a strict constraint: if set to\n      \"true\",
        the management system MUST elect a media type that is\n      \"always-on\"
        (e.g., this means no dial-in access type).\n   o  The \"bearer-reference\"
        parameter is used in cases where the\n      customer has already ordered a
        network connection to the SP apart\n      from the L2VPN site and wants to
        reuse this connection.  The\n      string used is an internal reference from
        the SP and describes the\n      already-available connection.  This is also
        a strict requirement\n      that cannot be relaxed.  How the reference is
        given to the\n      customer is out of scope for this document, but as an
        example,\n      when the customer ordered the bearer (through a process that
        is\n      out of scope for this model), the SP may have provided the bearer\n
        \     reference that can be used for provisioning services on top.\n   Any
        other internal parameters from the SP can also be used.  The\n   management
        system MAY use other parameters, such as the requested\n   \"input svc-bandwidth\"
        and \"output svc-bandwidth\", to help decide\n   which access type to use.\n"
      title: '5.6.3.  Constraint/Parameter: Access Type'
    - contents:
      - "5.6.4.  Constraint: Access Diversity\n   Each site-network-access may have
        one or more constraints that would\n   drive the placement of the access.
        \ By default, the model assumes\n   that there are no constraints, but allocation
        of a unique bearer per\n   site-network-access is expected.\n   In order to
        help with the different placement scenarios, a\n   site-network-access may
        be tagged using one or multiple group\n   identifiers.  The group identifier
        is a string, so it can accommodate\n   both explicit naming of a group of
        sites (e.g., \"multihomed-set1\")\n   and the use of a numbered identifier
        (e.g., 12345678).  The meaning\n   of each group-id is local to each customer
        administrator, and the\n   management system MUST ensure that different customers
        can use the\n   same group-ids.  One or more group-ids can also be defined
        at the\n   site level; as a consequence, all site-network-accesses under the\n
        \  site MUST inherit the group-ids of the site to which they belong.\n   When,
        in addition to the site group-ids some group-ids are defined at\n   the site-network-access
        level, the management system MUST consider\n   the union of all groups (site
        level and site-network-access level)\n   for this particular site-network-access.\n
        \  For an already-configured site-network-access, each constraint MUST\n   be
        expressed against a targeted set of site-network-accesses.  This\n   site-network-access
        (i.e., the already-configured\n   site-network-access) MUST never be taken
        into account in the targeted\n   set of site-network-accesses -- for example,
        \"My site-network-access\n   S must not be connected on the same POP as the
        site-network-accesses\n   that are part of Group 10.\"  The set of site-network-accesses
        against\n   which the constraint is evaluated can be expressed as a list of\n
        \  groups, \"all-other-accesses\", or \"all-other-groups\".  The\n   all-other-accesses
        option means that the current site-network-access\n   constraint MUST be evaluated
        against all the other\n   site-network-accesses belonging to the current site.
        \ The\n   all-other-groups option means that the constraint MUST be evaluated\n
        \  against all groups to which the current site-network-access does not\n
        \  belong.\n   The current model defines multiple constraint-types:\n   o
        \ pe-diverse: The current site-network-access MUST NOT be connected\n      to
        the same PE as the targeted site-network-accesses.\n   o  pop-diverse: The
        current site-network-access MUST NOT be connected\n      to the same POP as
        the targeted site-network-accesses.\n   o  linecard-diverse: The current site-network-access
        MUST NOT be\n      connected to the same linecard as the targeted site-network-\n
        \     accesses.  Note that the customer can request linecard-diverse for\n
        \     site-network-accesses, but the specific linecard identifier used\n      should
        not be exposed to the customer.\n   o  bearer-diverse: The current site-network-access
        MUST NOT use\n      common bearer components compared to bearers used by the
        targeted\n      site-network-accesses.  \"bearer-diverse\" provides some level
        of\n      diversity at the access level.  As an example, two bearer-diverse\n
        \     site-network-accesses must not use the same Digital Subscriber\n      Line
        Access Multiplexer (DSLAM), Broadband Access Switch (BAS), or\n      Layer
        2 switch.\n   o  same-pe: The current site-network-access MUST be connected
        to the\n      same PE as the targeted site-network-accesses.\n   o  same-bearer:
        The current site-network-access MUST be connected\n      using the same bearer
        as the targeted site-network-accesses.\n   These constraint-types can be extended
        through augmentation.  Each\n   constraint is expressed as \"The site-network-access
        S must be\n   <constraint-type> (e.g., pe-diverse, pop-diverse) from these
        <target>\n   site-network-accesses.\"\n   The group-id used to target some
        site-network-accesses may be the\n   same as the one used by the current site-network-access.
        \ This eases\n   the configuration of scenarios where a group of site-network-access\n
        \  points has a constraint between the access points in the group.\n"
      title: '5.6.4.  Constraint: Access Diversity'
    title: 5.6.  Deciding Where to Connect the Site
  - contents:
    - "5.7.  Route Distinguisher and Network Instance Allocation\n   The Route Distinguisher
      (RD) is a critical parameter of BGP-based\n   L2VPNs as described in [RFC4364]
      that provides the ability to\n   distinguish common addressing plans in different
      VPNs.  As for Route\n   Targets (RTs), a management system is expected to allocate
      a MAC-VRF\n   on the target PE and an RD for that MAC-VRF; that RD MUST be unique\n
      \  across all MAC-VRFs on the target PE.\n   If a MAC-VRF already exists on
      the target PE and the MAC-VRF fulfills\n   the connectivity constraints for
      the site, there is no need to\n   recreate another MAC-VRF, and the site MAY
      be meshed within the\n   existing MAC-VRF.  How the management system checks
      to see if an\n   existing MAC-VRF fulfills the connectivity constraints for
      a site is\n   out of scope for this document.\n   If no such MAC-VRF exists
      on the target PE, the management system has\n   to initiate the creation of
      a new MAC-VRF on the target PE and has to\n   allocate a new RD for the new
      MAC-VRF.\n   The management system MAY apply a per-VPN or per-MAC-VRF allocation\n
      \  policy for the RD, depending on the SP's policy.  In a per-VPN\n   allocation
      policy, all MAC-VRFs (dispatched on multiple PEs) within a\n   VPN will share
      the same RD value.  In a per-MAC-VRF model, all\n   MAC-VRFs should always have
      a unique RD value.  Some other allocation\n   policies are also possible, and
      this document does not restrict the\n   allocation policies to be used.\n   The
      allocation of RDs MAY be done in the same way as RTs.  The\n   information provided
      in Section 5.2.2.1 could also be used in this\n   scenario.\n   Note that an
      SP MAY configure a target PE for an automated allocation\n   of RDs.  In this
      case, there will be no need for any backend system\n   to allocate an RD value.\n"
    title: 5.7.  Route Distinguisher and Network Instance Allocation
  - contents:
    - "5.8.  Site-Network-Access Availability\n   A site may be multihomed, meaning
      that it has multiple\n   site-network-access points.  The placement constraints
      defined in\n   Section 5.6 will help ensure physical diversity.\n   When the
      site-network-accesses are placed on the network, a customer\n   may want to
      use a particular routing policy on those accesses.  The\n   \"site-network-access/availability\"
      container defines parameters for\n   site redundancy.  The \"access-priority\"
      leaf defines a preference for\n   a particular access.  This preference is used
      to model load-balancing\n   or primary/backup scenarios.  The higher the access-priority
      value,\n   the higher the preference will be.  The \"redundancy-mode\" attribute\n
      \  is defined for a multihoming site and used to model single-active and\n   active/active
      scenarios.  It allows for multiple active paths in\n   forwarding state and
      for load-balancing options.\n   Figure 20 illustrates how the access-priority
      attribute can be used.\n        Hub#1 LAN (Primary/backup)          Hub#2 LAN
      (Load-sharing)\n          |                                                     |\n
      \         |    access-priority 1          access-priority 1     |\n          |---
      CE1 ------- PE1            PE3 --------- CE3 --- |\n          |                                                     |\n
      \         |                                                     |\n          |---
      CE2 ------- PE2            PE4 --------- CE4 --- |\n          |    access-priority
      2          access-priority 1     |\n                                  PE5\n
      \                                  |\n                                   |\n
      \                                  |\n                                  CE5\n
      \                                  |\n                              Spoke#1
      site (Single-homed)\n              Figure 20: Example: Configuring Access Priority\n
      \  In Figure 20, Hub#2 requires load-sharing, so all the site-network-\n   accesses
      must use the same access-priority value.  On the other hand,\n   as Hub#1 requires
      a primary site-network-access and a backup\n   site-network-access, a higher
      access-priority setting will be\n   configured on the primary site-network-access.\n
      \  Scenarios that are more complex can also be modeled.  Let's consider\n   a
      Hub site with five accesses to the network (A1, A2, A3, A4, and\n   A5).  The
      customer wants to load-share its traffic on A1 and A2 in\n   the nominal situation.
      \ If A1 and A2 fail, the customer wants to\n   load-share its traffic on A3
      and A4; finally, if A1, A2, A3, and A4\n   are all down, the customer wants
      to use A5.  We can model this easily\n   by configuring the following access-priority
      values: A1=100, A2=100,\n   A3=50, A4=50, A5=10.\n   The access-priority scenario
      has some limitations.  An\n   access-priority scenario like the previous one
      with five accesses but\n   with the constraint of having traffic load-shared
      between A3 and A4\n   in the case where only A1 or A2 (not both) is down is
      not achievable.\n   But the access-priority attribute defined will cover most
      of the\n   deployment use cases, and if necessary the model can be extended
      via\n   augmentation to support additional use cases.\n"
    title: 5.8.  Site-Network-Access Availability
  - contents:
    - "5.9.  SVC MTU\n   The MTU of subscriber service frames can be derived from
      the physical\n   interface MTU by default, or it can be specified under the
      \"svc-mtu\"\n   leaf if it is different than the default number.\n"
    title: 5.9.  SVC MTU
  - contents:
    - "5.10.  Service\n   The service container defines service parameters associated
      with\n   the site.\n"
    - contents:
      - "5.10.1.  Bandwidth\n   The service bandwidth refers to the bandwidth requirement
        between the\n   CE and the PE and can be represented using the Committed Information\n
        \  Rate (CIR), the Excess Information Rate (EIR), or the Peak\n   Information
        Rate (PIR).  The requested bandwidth is expressed as\n   ingress bandwidth
        and egress bandwidth.  The ingress or egress\n   direction uses the customer
        site as the point of reference:\n   \"ingress-direction bandwidth\" refers
        to download bandwidth for the\n   site, and \"egress-direction bandwidth\"
        refers to upload bandwidth for\n   the site.\n   The service bandwidth is
        only configurable at the site-network-access\n   level (i.e., for the site
        network access associated with the site).\n   Using a different ingress and
        egress bandwidth will allow an SP to\n   know if a customer allows for asymmetric
        bandwidth access like ADSL.\n   It can also be used to set the rate limit
        in a different way for\n   uploads and downloads on symmetric bandwidth access.\n
        \  The svc-bandwidth parameter has a specific type.  This document\n   defines
        four types:\n   o  bw-per-access: bandwidth is per connection or site network
        access,\n      providing rate enforcement for all service frames at the interface\n
        \     that are associated with a particular network access.\n   o  bw-per-cos:
        bandwidth is per CoS, providing rate enforcement for\n      all service frames
        for a given CoS with a specific cos-id.\n   o  bw-per-svc: bandwidth is per
        site, providing rate enforcement for\n      all service frames that are associated
        with a particular VPN\n      service.\n   o  opaque bandwidth is the total
        bandwidth that is not associated\n      with any particular cos-id, VPN service
        identified with the\n      vpn-id, or site network access ID.\n   The svc-bandwidth
        parameter must include a \"cos-id\" parameter if the\n   \"type\" is set to
        \"bw-per-cos\".  The cos-id can be assigned based on\n   either (1) the IEEE
        802.1p value [IEEE-802-1D] in the C-tag or\n   (2) the Differentiated Services
        Code Point (DSCP) in the Ethernet\n   frame header.  Service frames are metered
        against the bandwidth\n   profile based on the cos-id.\n   The svc-bandwidth
        parameter must be associated with a specific\n   \"site-network-access-id\"
        parameter if the \"type\" is set to\n   \"bw-per-access\".  Multiple bandwidths
        per cos-id can be associated\n   with the same site network access.\n   The
        svc-bandwidth parameter must include a specific \"vpn-id\"\n   parameter if
        the \"type\" is set to \"bw-per-svc\".  Multiple bandwidths\n   per cos-id
        can be associated with the same EVPN service.\n"
      title: 5.10.1.  Bandwidth
    - contents:
      - "5.10.2.  QoS\n   The model defines QoS parameters as an abstraction:\n   o
        \ qos-classification-policy: Defines a set of ordered rules to\n      classify
        customer traffic.\n   o  qos-profile: Provides a QoS scheduling profile to
        be applied.\n"
      - contents:
        - "5.10.2.1.  QoS Classification\n   QoS classification rules are handled
          by \"qos-classification-policy\".\n   qos-classification-policy is an ordered
          list of rules that match a\n   flow or application and set the appropriate
          target CoS\n   (target-class-id).  The user can define the match using a\n
          \  more specific flow definition (based on Layer 2 source and\n   destination
          MAC addresses, cos, dscp, cos-id, color-id, etc.).  A\n   \"color-id\" will
          be assigned to a service frame to identify its QoS\n   profile conformance.
          \ A service frame is \"green\" if it is conformant\n   with the \"committed\"
          rate of the bandwidth profile.  A service frame\n   is \"yellow\" if it
          exceeds the \"committed\" rate but is conformant with\n   the \"excess\"
          rate of the bandwidth profile.  Finally, a service frame\n   is \"red\"
          if it is conformant with neither the \"committed\" rate nor\n   the \"excess\"
          rate of the bandwidth profile.\n   When a flow definition is used, the user
          can use a target-sites\n   leaf-list to identify the destination of a flow
          rather than using\n   destination addresses.  In such a case, an association
          between the\n   site abstraction and the MAC addresses used by this site
          must be done\n   dynamically.  How this association is done is out of scope
          for this\n   document.  The association of a site to an L2VPN is done through
          the\n   vpn-attachment container.  Therefore, the user can also employ the\n
          \  \"target-sites\" leaf-list and \"vpn-attachment\" to identify the\n   destination
          of a flow targeted to a specific VPN service.  A rule\n   that does not
          have a \"match\" statement is considered a \"match-all\"\n   rule.  An SP
          may implement a default terminal classification rule if\n   the customer
          does not provide it.  It will be up to the SP to\n   determine its default
          target class.  This model defines some\n   applications, but new application
          identities may be added through\n   augmentation.  The exact meaning of
          each application identity is up\n   to the SP, so it will be necessary for
          the SP to advise the customer\n   on the usage of application-matching.\n"
        title: 5.10.2.1.  QoS Classification
      - contents:
        - "5.10.2.2.  QoS Profile\n   A user can choose between the standard profile
          provided by the\n   operator or a custom profile.  The QoS profile (\"qos-profile\")\n
          \  defines the traffic-scheduling policy to be used by the SP.\n   A custom
          QoS profile is defined as a list of CoS entries and\n   associated properties.
          \ The properties are as follows:\n   o  direction: Used to specify the direction
          to which the qos-profile\n      setting is applied.  This model supports
          the site-to-WAN direction\n      (\"site-to-wan\"), the WAN-to-site direction
          (\"wan-to-site\"), and\n      both directions (\"bidirectional\").  By default,
          \"bidirectional\" is\n      used.  In the case of both directions, the provider
          should ensure\n      scheduling according to the requested policy in both
          traffic\n      directions (SP to customer and customer to SP).  As an example,
          a\n      device-scheduling policy may be implemented on both the PE side\n
          \     and the CE side of the WAN link.  In the case of the WAN-to-site\n
          \     direction, the provider should ensure scheduling from the SP\n      network
          to the customer site.  As an example, a device-scheduling\n      policy
          may be implemented only on the PE side of the WAN link\n      towards the
          customer.\n   o  policing: Optional.  Indicates whether policing should
          apply to\n      one-rate, two-color or to two-rate, three-color.\n   o  byte-offset:
          Optional.  Indicates how many bytes in the service\n      frame header are
          excluded from rate enforcement.\n   o  frame-delay: Used to define the latency
          constraint of the class.\n      The latency constraint can be expressed
          as the lowest possible\n      latency or as a latency boundary expressed
          in milliseconds.  How\n      this latency constraint will be fulfilled is
          up to the SP\n      implementation: a strict priority-queuing mechanism
          may be used on\n      the access and in the core network, or a low-latency
          routing path\n      may be created for this traffic class.\n   o  frame-jitter:
          Used to define the jitter constraint of the class.\n      The jitter constraint
          can be expressed as the lowest possible\n      jitter or as a jitter boundary
          expressed in microseconds.  How\n      this jitter constraint will be fulfilled
          is up to the SP\n      implementation: a strict priority-queuing mechanism
          may be used on\n      the access and in the core network, or a jitter-aware
          routing path\n      may be created for this traffic class.\n   o  bandwidth:
          Used to define a guaranteed amount of bandwidth for\n      the CoS.  It
          is expressed as a percentage.  The\n      \"guaranteed-bw-percent\" parameter
          uses available bandwidth as a\n      reference.  The available bandwidth
          should not fall below the CIR\n      value defined under the input svc-bandwidth
          or the output\n      svc-bandwidth.  When the \"qos-profile\" container
          is implemented on\n      the CE side, the output svc-bandwidth is taken
          into account as a\n      reference.  When it is implemented on the PE side,
          the input\n      svc-bandwidth is used.  By default, the bandwidth reservation
          is\n      only guaranteed at the access level.  The user can use the\n      \"end-to-end\"
          leaf to request an end-to-end bandwidth reservation,\n      including across
          the MPLS transport network.  (In other words, the\n      SP will activate
          something in the MPLS core to ensure that the\n      bandwidth request from
          the customer will be fulfilled by the MPLS\n      core as well.)  How this
          is done (e.g., RSVP-TE reservation,\n      controller reservation) is out
          of scope for this document.\n   In addition, due to network conditions,
          some constraints may not be\n   completely fulfilled by the SP; in this
          case, the SP should advise\n   the customer about the limitations.  How
          this communication is done\n   is out of scope for this document.\n"
        title: 5.10.2.2.  QoS Profile
      title: 5.10.2.  QoS
    - contents:
      - "5.10.3.  Support for BUM\n   The \"broadcast-unknown-unicast-multicast\"
        container defines the type\n   of site in the customer multicast service topology:
        source, receiver,\n   or both.  These parameters will help the management
        system optimize\n   the multicast service.\n   Multiple multicast group-to-port
        mappings can be created using the\n   \"multicast-gp-address-mapping\" list.
        \ The\n   \"multicast-gp-address-mapping\" list defines the multicast group\n
        \  address and port LAG number.  Those parameters will help the SP\n   select
        the appropriate association between an interface and a\n   multicast group
        to fulfill the customer service requirement.\n   To ensure that a given frame
        is transparently transported, a whole\n   Layer 2 multicast frame (whether
        for data or control) should not be\n   altered from a CE to other CEs, except
        for the VLAN ID field.  VLAN\n   IDs assigned by the SP can also be altered.\n
        \  For point-to-point services, the provider only needs to deliver a\n   single
        copy of each service frame to the remote PE, regardless of\n   whether the
        destination MAC address of the incoming frame is unicast,\n   multicast, or
        broadcast.  Therefore, all service frames should be\n   delivered unconditionally.\n
        \  BUM frame forwarding in multipoint-to-multipoint services, on the\n   other
        hand, involves both local flooding to other ACs on the same PE\n   and remote
        replication to all other PEs, thus consuming additional\n   resources and
        core bandwidth.  Special BUM frame disposition rules\n   can be implemented
        at external-facing interfaces (UNIs or External\n   NNIs (E-NNIs)) to rate-limit
        the BUM frames, in terms of the number\n   of packets per second or bits per
        second.\n   The threshold can apply to all BUM traffic, or one threshold can
        be\n   applied for each category of traffic.\n"
      title: 5.10.3.  Support for BUM
    title: 5.10.  Service
  - contents:
    - "5.11.  Site Management\n   The \"management\" sub-container is intended for
      site management\n   options, depending on device ownership and security access
      control.\n   Three common management models are as follows:\n   Provider-managed
      CE:  The provider has sole ownership of the CE\n      device.  Only the provider
      has access to the CE.  The\n      responsibility boundary between the SP and
      the customer is between\n      the CE and the customer network.  This is the
      most common\n      use case.\n   Customer-managed CE:  The customer has sole
      ownership of the CE\n      device.  Only the customer has access to the CE.
      \ In this model,\n      the responsibility boundary between the SP and the customer
      is\n      between the PE and the CE.\n   Co-managed CE:  The provider has ownership
      of the CE device and is\n      responsible for managing the CE.  However, the
      provider grants the\n      customer access to the CE for some configuration/monitoring\n
      \     purposes.  In this co-managed mode, the responsibility boundary is\n      the
      same as for the provider-managed model.\n   The selected management mode is
      specified under the \"type\" leaf.  The\n   \"address\" leaf stores CE device
      management addressing information.\n   The \"management-transport\" leaf is
      used to identify the transport\n   protocol for management traffic: IPv4 or
      IPv6.  Additional security\n   options may be derived based on the particular
      management model\n   selected.\n"
    title: 5.11.  Site Management
  - contents:
    - "5.12.  MAC Loop Protection\n   MAC address flapping between different physical
      ports typically\n   indicates a bridge loop condition in the customer network.\n
      \  Misleading entries in the MAC cache table can cause service frames to\n   circulate
      around the network indefinitely and saturate the links\n   throughout the provider's
      network, affecting other services in the\n   same network.  In the case of EVPNs,
      it also introduces massive BGP\n   updates and control-plane instability.\n
      \  The SP may opt to implement a switching loop-prevention mechanism at\n   the
      external-facing interfaces for multipoint-to-multipoint services\n   by imposing
      a MAC address move threshold.\n   The MAC move rate and prevention-type options
      are listed in the\n   \"mac-loop-prevention\" container.\n"
    title: 5.12.  MAC Loop Protection
  - contents:
    - "5.13.  MAC Address Limit\n   The optional \"mac-addr-limit\" container contains
      the customer MAC\n   address limit and information that describes the action
      taken when\n   the limit is exceeded and the aging time for a MAC address.\n
      \  When multiple services are provided on the same network element, the\n   MAC
      address table (and the Routing Information Base space for\n   MAC routes in
      the case of EVPNs) is a shared common resource.  SPs\n   may impose a maximum
      number of MAC addresses learned from the\n   customer for a single service instance
      by using the \"mac-addr-limit\"\n   leaf and may use the \"action\" leaf to
      specify the action taken when\n   the upper limit is exceeded: drop the packet,
      flood the packet, or\n   simply send a warning log message.\n   For point-to-point
      services, if MAC learning is disabled, then the\n   MAC address limit is not
      necessary.\n"
    title: 5.13.  MAC Address Limit
  - contents:
    - '5.14.  Enhanced VPN Features

      '
    - contents:
      - "5.14.1.  Carriers' Carriers\n   In the case of Carriers' Carriers (CsC) [RFC8299],
        a customer may\n   want to build an MPLS service using an L2VPN to carry its
        traffic.\n                 LAN customer1\n                    |\n                    |\n
        \                  CE1\n                    |\n                    | -------------\n
        \                (vrf_cust1)\n                  CE1_ISP1\n                    |
        \                ISP1 POP\n                    | MPLS link\n                    |
        -------------\n                    |\n                 (vrf ISP1)\n                   PE1\n
        \                 (...)               Provider backbone\n                   PE2\n
        \                 (vrf ISP1)\n                    |\n                    |
        ------------\n                    |\n                    | MPLS link\n                    |
        \                ISP1 POP\n                   CE2_ISP1\n                   (vrf_cust1)\n
        \                   | ------------\n                    |\n                   CE2\n
        \                   |\n                 LAN customer1\n          Figure 21:
        MPLS Service Using an L2VPN to Carry Traffic\n   In Figure 21, ISP1 resells
        an L2VPN service but has no core network\n   infrastructure between its POPs.
        \ ISP1 uses an L2VPN as the core\n   network infrastructure (belonging to
        another provider) between\n   its POPs.\n   In order to support CsC, the VPN
        service must indicate MPLS support\n   by setting the \"carrierscarrier\"
        leaf to \"true\" in the vpn-service\n   list.  The link between CE1_ISP1/PE1
        and CE2_ISP1/PE2 must also run\n   an MPLS signaling protocol.  This configuration
        is done at the site\n   level.\n   In this model, LDP or BGP can be used as
        the MPLS signaling protocol.\n   In the case of LDP, an IGP routing protocol
        MUST also be activated.\n   In the case of BGP signaling, BGP MUST also be
        configured as the\n   routing protocol.\n   If CsC is enabled, the requested
        \"svc-mtu\" leaf will refer to the\n   MPLS MTU and not to the link MTU.\n"
      title: 5.14.1.  Carriers' Carriers
    title: 5.14.  Enhanced VPN Features
  - contents:
    - "5.15.  External ID References\n   The service model sometimes refers to external
      information through\n   identifiers.  As an example, to order cloud access to
      a particular\n   Cloud Service Provider (CSP), the model uses an identifier
      to refer\n   to the targeted CSP.  If a customer is directly using this service\n
      \  model as an API (through RESTCONF or NETCONF, for example) to order a\n   particular
      service, the SP should provide a list of authorized\n   identifiers.  In the
      case of cloud access, the SP will provide the\n   associated identifiers for
      each available CSP.  The same applies to\n   other identifiers, such as qos-profile.\n
      \  As a usage example, the remote-carrier-name setting is used in the\n   NNI
      case because it should be known by the current L2VPN SP to which\n   it is connecting,
      while the cloud-identifier setting should be known\n   by both the current L2VPN
      SP and the customer because it is applied\n   to the public cloud or Internet
      access.\n   How an SP provides the meanings of those identifiers to the customer\n
      \  is out of scope for this document.\n"
    title: 5.15.  External ID References
  - contents:
    - "5.16.  Defining NNIs and Inter-AS Support\n   An Autonomous System (AS) is
      a single network or group of networks\n   that are controlled by a common system
      administration group and that\n   use a single, clearly defined routing protocol.
      \ In some cases, VPNs\n   need to span different ASes in different geographical
      areas or span\n   different SPs.  The connection between ASes is established
      by the SPs\n   and is seamless to the customer.  Examples include:\n   o  A
      partnership between SPs (e.g., carrier, cloud) to extend their\n      VPN services
      seamlessly.\n   o  An internal administrative boundary within a single SP (e.g.,\n
      \     backhaul versus core versus data center).\n   NNIs have to be defined
      to extend the VPNs across multiple ASes.\n   [RFC4761] defines multiple flavors
      of VPN NNI implementations (e.g.,\n   VPLSs).  Each implementation has pros
      and cons; this topic is outside\n   the scope of this document.  For example,
      in an inter-AS option A\n   (two ASes), AS Border Router (ASBR) peers are connected
      by multiple\n   interfaces with at least one of those interfaces spanning the
      two\n   ASes while being present in the same VPN.  In order for these ASBRs\n
      \  to signal label blocks, they associate each interface with a MAC-VRF\n   (VSI)
      (Section 2) and a BGP session.  As a result, traffic between\n   devices in
      the back-to-back VPLS is Ethernet.  In this scenario, the\n   VPNs are isolated
      from each other, and because the traffic is\n   Ethernet, QoS mechanisms that
      operate on Ethernet traffic can be\n   applied to achieve customer SLAs.\n      --------
      \                --------------              -----------\n     /        \\               /
      \             \\            /           \\\n    | Cloud    |             |                |
      \         |             |\n    | Provider |-----NNI-----|                |----NNI---|
      Data Center |\n    |  #1      |             |                |          |             |\n
      \    \\        /              |                |           \\           /\n
      \     --------               |                |            -----------\n                             |
      \               |\n      --------               |   My network   |           -----------\n
      \    /        \\              |                |          /           \\\n    |
      Cloud    |             |                |         |             |\n    | Provider
      |-----NNI-----|                |---NNI---|  L2VPN      |\n    |  #2      |             |
      \               |         |  Partner    |\n     \\        /              |                |
      \        |             |\n      --------               |                |         |
      \            |\n                              \\              /          |             |\n
      \                              --------------            \\           /\n                                     |
      \                   -----------\n                                     |\n                                    NNI\n
      \                                    |\n                                     |\n
      \                            -------------------\n                            /
      \                  \\\n                           |                     |\n
      \                          |                     |\n                           |
      \                    |\n                           |     L2VPN Partner   |\n
      \                          |                     |\n                            \\
      \                  /\n                             -------------------\n                  Figure
      22: SP Network with Several NNIs\n   Figure 22 illustrates an SP network called
      \"My network\" that has\n   several NNIs.  This network uses NNIs to:\n   o
      \ increase its footprint by relying on L2VPN partners.\n   o  connect its own
      data-center services to the customer L2VPN.\n   o  enable the customer to access
      its private resources located in a\n      private cloud owned by some CSPs.\n"
    - contents:
      - "5.16.1.  Defining an NNI with the Option A Flavor\n              AS A                                         AS
        B\n       -------------------                         -------------------\n
        \     /                   \\                       /                   \\\n
        \    |                     |                     |                     |\n
        \    |                 ++++++++ Inter-AS link +++++++++                |\n
        \    |                 +      +_______________+       +                |\n
        \    |                 +(MAC-VRF1)--(VPN1)--(MAC-VRF1)+                |\n
        \    |                 +      +               +       +                |\n
        \    |                 + ASBR +               + ASBR  +                |\n
        \    |                 +      +               +       +                |\n
        \    |                 +(MAC-VRF2)--(VPN2)--(MAC-VRF2)+                |\n
        \    |                 +      +_______________+       +                |\n
        \    |                 ++++++++               +++++++++                |\n
        \    |                     |                     |                     |\n
        \    |                     |                     |                     |\n
        \    |                     |                     |                     |\n
        \    |                 ++++++++ Inter-AS link +++++++++                |\n
        \    |                 +      +_______________+       +                |\n
        \    |                 +(MAC-VRF1)--(VPN1)--(MAC-VRF1)+                |\n
        \    |                 +      +               +       +                |\n
        \    |                 + ASBR +               + ASBR  +                |\n
        \    |                 +      +               +       +                |\n
        \    |                 +(MAC-VRF2)--(VPN2)--(MAC-VRF2)+                |\n
        \    |                 +      +_______________+       +                |\n
        \    |                 ++++++++               +++++++++                |\n
        \    |                     |                     |                     |\n
        \    |                     |                     |                     |\n
        \     \\                   /                       \\                   /\n
        \      -------------------                         -------------------\n        Figure
        23: NNI Defined with the Option A Flavor: Example 1\n   In option A, the two
        ASes are connected to each other with physical\n   links on ASBRs.  For resiliency
        purposes, there may be multiple\n   physical connections between the ASes.
        \ A VPN connection -- physical\n   or logical (on top of physical) -- is created
        for each VPN that needs\n   to cross the AS boundary, thus providing a back-to-back
        VPLS model.\n   From a service model's perspective, this VPN connection can
        be seen\n   as a site.  Let's say that AS B wants to extend some VPN connections\n
        \  for VPN C on AS A.  The administrator of AS B can use this service\n   model
        to order a site on AS A.  All connection scenarios could be\n   realized using
        the features of the current model.  As an example,\n   Figure 23 shows two
        physical connections that have logical\n   connections per VPN overlaid on
        them.  This could be seen as a\n   multi-VPN scenario.  Also, the administrator
        of AS B will be able to\n   choose the appropriate routing protocol (e.g.,
        External BGP (EBGP))\n   to dynamically exchange routes between ASes.\n   This
        document assumes that the option A NNI flavor SHOULD reuse the\n   existing
        VPN site modeling.\n   Figure 24 illustrates an example where a customer wants
        its CSP A to\n   attach its virtual network N to an existing L2VPN (VPN1)
        that it has\n   from L2VPN SP B.\n               CSP A                           L2VPN
        SP B\n        -----------------                     -----------\n       /
        \                \\                   /           \\\n      |       |           |
        \                |             |\n      |  VM --|       ++++++++     NNI    ++++++++++
        \     |--- VPN1\n      |       |       +      +____________+        +      |
        \  Site 1\n      |       |-------+(MAC-VRF1)-(VPN1)-(MAC-VRF1)+      |\n      |
        \      |       +      +            +        +      |\n      |       |       +
        ASBR +            + ASBR   +      |\n      |       |       +      +____________+
        \       +      |\n      |       |       ++++++++            ++++++++++      |\n
        \     |  VM --|           |                 |             |--- VPN1\n      |
        \      |Virtual    |                 |             |   Site 2\n      |       |Network
        \   |                 |             |\n      |  VM --|           |                 |
        \            |--- VPN1\n      |       |           |                 |             |
        \  Site 3\n       \\                 /                   \\           /\n
        \       -----------------                     -----------\n                                                   |\n
        \                                                  |\n                                                  VPN1\n
        \                                                Site 4\n      VM = Virtual
        Machine\n        Figure 24: NNI Defined with the Option A Flavor: Example
        2\n   To create the VPN connectivity, the CSP or the customer may use the\n
        \  L2SM that SP B exposes.  We could consider that, as the NNI is\n   shared,
        the physical connection (bearer) between CSP A and SP B\n   already exists.
        \ CSP A may request through a service model the\n   creation of a new site
        with a single site-network-access\n   (single-homing is used in Figure 24).
        \ As a placement constraint, CSP\n   A may use the existing bearer reference
        it has from SP A to force the\n   placement of the VPN NNI on the existing
        link.  The XML below\n   illustrates a possible configuration request to SP
        B:\n   <?xml version=\"1.0\"?>\n   <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n
        \   <vpn-profiles>\n     <valid-provider-identifiers>\n      <qos-profile-identifier>\n
        \      <id>GOLD</id>\n      </qos-profile-identifier>\n      <qos-profile-identifier>\n
        \      <id>PLATINUM</id>\n      </qos-profile-identifier>\n     </valid-provider-identifiers>\n
        \   </vpn-profiles>\n    <vpn-services>\n     <vpn-service>\n      <vpn-id>VPN1</vpn-id>\n
        \     <ce-vlan-preservation>true</ce-vlan-preservation>\n      <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
        \    </vpn-service>\n    </vpn-services>\n    <sites>\n         <site>\n             <site-id>CSP_A_attachment</site-id>\n
        \             <locations>\n               <location>\n                 <location-id>NY1</location-id>\n
        \                <city>NY</city>\n                 <country-code>US</country-code>\n
        \             </location>\n              </locations>\n             <site-vpn-flavor>site-vpn-flavor-nni</site-vpn-flavor>\n
        \              <site-network-accesses>\n                 <site-network-access>\n
        \                 <network-access-id>CSP_A_VN1</network-access-id>\n                          <connection>\n
        \                         <encapsulation-type>vlan</encapsulation-type>\n
        \                         <eth-inf-type>tagged</eth-inf-type>\n                           <tagged-interface>\n
        \                           <tagged-inf-type>dot1q</tagged-inf-type>\n                            <dot1q-vlan-tagged>\n
        \                            <cvlan-id>17</cvlan-id>\n                           </dot1q-vlan-tagged>\n
        \                          </tagged-interface>\n                          </connection>\n
        \                           <service>\n                              <svc-bandwidth>\n
        \                               <bandwidth>\n                                 <direction>input-bw</direction>\n
        \                                 <type>bw-per-cos</type>\n                                   <cir>450000000</cir>\n
        \                                  <cbs>20000000</cbs>\n                                   <eir>1000000000</eir>\n
        \                                  <ebs>200000000</ebs>\n                                </bandwidth>\n
        \                             </svc-bandwidth>\n                              <carrierscarrier>\n
        \                               <signaling-type>bgp</signaling-type>\n                             </carrierscarrier>\n
        \                           </service>\n                           <vpn-attachment>\n
        \                             <vpn-id>12456487</vpn-id>\n                              <site-role>spoke-role</site-role>\n
        \                           </vpn-attachment>\n                </site-network-access>\n
        \            </site-network-accesses>\n             <management>\n              <type>customer-managed</type>\n
        \            </management>\n         </site>\n    </sites>\n   </l2vpn-svc>\n
        \  The case described above is different from a scenario using the\n   cloud-accesses
        container, as the cloud-access provides a public cloud\n   access while this
        example enables access to private resources located\n   in a CSP network.\n"
      title: 5.16.1.  Defining an NNI with the Option A Flavor
    - contents:
      - "5.16.2.  Defining an NNI with the Option B Flavor\n            AS A                                          AS
        B\n      -------------------                         -------------------\n
        \    /                   \\                       /                   \\\n
        \   |                     |                     |                     |\n
        \   |                 ++++++++ Inter-AS link ++++++++                 |\n
        \   |                 +      +_______________+      +                 |\n
        \   |                 +      +               +      +                 |\n
        \   |                 + ASBR +<---MP-BGP---->+ ASBR +                 |\n
        \   |                 +      +               +      +                 |\n
        \   |                 +      +_______________+      +                 |\n
        \   |                 ++++++++               ++++++++                 |\n
        \   |                     |                     |                     |\n
        \   |                     |                     |                     |\n
        \   |                     |                     |                     |\n
        \   |                 ++++++++ Inter-AS link ++++++++                 |\n
        \   |                 +      +_______________+      +                 |\n
        \   |                 +      +               +      +                 |\n
        \   |                 + ASBR +<---MP-BGP---->+ ASBR +                 |\n
        \   |                 +      +               +      +                 |\n
        \   |                 +      +_______________+      +                 |\n
        \   |                 ++++++++               ++++++++                 |\n
        \   |                     |                     |                     |\n
        \   |                     |                     |                     |\n
        \    \\                   /                       \\                   /\n
        \     -------------------                         -------------------\n        Figure
        25: NNI Defined with the Option B Flavor: Example 1\n   In option B, the two
        ASes are connected to each other with physical\n   links on ASBRs.  For resiliency
        purposes, there may be multiple\n   physical connections between the ASes.
        \ The VPN \"connection\" between\n   ASes is done by exchanging VPN routes
        through MP-BGP [RFC4761].\n   There are multiple flavors of implementations
        of such an NNI.  For\n   example:\n   1.  The NNI is internal to the provider
        and is situated between a\n       backbone and a data center.  There is enough
        trust between the\n       domains to not filter the VPN routes.  So, all the
        VPN routes are\n       exchanged.  RT filtering may be implemented to save
        some\n       unnecessary route states.\n   2.  The NNI is used between providers
        that agreed to exchange VPN\n       routes for specific RTs only.  Each provider
        is authorized to use\n       the RT values from the other provider.\n   3.
        \ The NNI is used between providers that agreed to exchange VPN\n       routes
        for specific RTs only.  Each provider has its own RT\n       scheme.  So,
        a customer spanning the two networks will have\n       different RTs in each
        network for a particular VPN.\n   Case 1 does not require any service modeling,
        as the protocol enables\n   the dynamic exchange of necessary VPN routes.\n
        \  Case 2 requires that an RT-filtering policy on ASBRs be maintained.\n   From
        a service-modeling point of view, it is necessary to agree on\n   the list
        of RTs to authorize.\n   In Case 3, both ASes need to agree on the VPN RT
        to exchange, as well\n   as how to map a VPN RT from AS A to the corresponding
        RT in AS B (and\n   vice versa).\n   Those modelings are currently out of
        scope for this document.\n           CSP A                               L3VPN
        SP B\n      -----------------                    ------------------\n     /
        \                \\                  /                  \\\n    |       |
        \          |                |                    |\n    |  VM --|       ++++++++
        \  NNI    ++++++++                |--- VPN1\n    |       |       +      +__________+
        \     +                |   Site 1\n    |       |-------+      +          +
        \     +                |\n    |       |       + ASBR +<-MP-BGP->+ ASBR +                |\n
        \   |       |       +      +__________+      +                |\n    |       |
        \      ++++++++          ++++++++                |\n    |  VM --|           |
        \               |                    |--- VPN1\n    |       |Virtual    |
        \               |                    |   Site 2\n    |       |Network    |
        \               |                    |\n    |  VM --|           |                |
        \                   |--- VPN1\n    |       |           |                |
        \                   |   Site 3\n     \\                 /                 |
        \                   |\n      -----------------                  |                    |\n
        \                                         \\                  /\n                                           ------------------\n
        \                                                   |\n                                                    |\n
        \                                                  VPN1\n                                                  Site
        4\n      VM = Virtual Machine\n        Figure 26: NNI Defined with the Option
        B Flavor: Example 2\n   Figure 26 shows an NNI connection between CSP A and
        SP network B.\n   The SPs do not trust each other and use different RT allocation\n
        \  policies.  So, in terms of implementation, the customer VPN has a\n   different
        RT in each network (RT A in CSP A and RT B in SP\n   network B).  In order
        to connect the customer's virtual network in\n   CSP A to the customer's L2VPN
        (VPN1) in SP network B, CSP A should\n   request that SP network B open the
        customer VPN on the NNI (accept\n   the appropriate RT).  Who does the RT
        translation depends on the\n   agreement between the two SPs: SP B may permit
        CSP A to request VPN\n   (RT) translation.\n"
      title: 5.16.2.  Defining an NNI with the Option B Flavor
    - contents:
      - "5.16.3.  Defining an NNI with the Option C Flavor\n             AS A                                           AS
        B\n      -------------------                          -------------------\n
        \    /                   \\                        /                   \\\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                 ++++++++ Multihop EBGP  ++++++++                 |\n
        \   |                 +      +                +      +                 |\n
        \   |                 +      +                +      +                 |\n
        \   |                 + RGW  +<----MP-BGP---->+ RGW  +                 |\n
        \   |                 +      +                +      +                 |\n
        \   |                 +      +                +      +                 |\n
        \   |                 ++++++++                ++++++++                 |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                 ++++++++ Inter-AS link ++++++++                  |\n
        \   |                 +      +_______________+      +                  |\n
        \   |                 +      +               +      +                  |\n
        \   |                 + ASBR +               + ASBR +                  |\n
        \   |                 +      +               +      +                  |\n
        \   |                 +      +_______________+      +                  |\n
        \   |                 ++++++++               ++++++++                  |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \   |                 ++++++++ Inter-AS link ++++++++                  |\n
        \   |                 +      +_______________+      +                  |\n
        \   |                 +      +               +      +                  |\n
        \   |                 + ASBR +               + ASBR +                  |\n
        \   |                 +      +               +      +                  |\n
        \   |                 +      +_______________+      +                  |\n
        \   |                 ++++++++               ++++++++                  |\n
        \   |                     |                      |                     |\n
        \   |                     |                      |                     |\n
        \    \\                   /                        \\                   /\n
        \     -------------------                          -------------------\n              Figure
        27: NNI Defined with the Option C Flavor\n   From a VPN service's perspective,
        the option C NNI is very similar to\n   option B, as an MP-BGP session is
        used to exchange VPN routes between\n   the ASes.  The difference is that
        the forwarding plane and the\n   control plane are on different nodes, so
        the MP-BGP session is\n   multihop between routing gateway (RGW) nodes.  From
        a VPN service's\n   point of view, modeling options B and C will be configured\n
        \  identically.\n"
      title: 5.16.3.  Defining an NNI with the Option C Flavor
    title: 5.16.  Defining NNIs and Inter-AS Support
  - contents:
    - "5.17.  Applicability of L2SM in Inter-provider and Inter-domain\n       Orchestration\n
      \  In the case where the ASes belong to different providers, one might\n   imagine
      that providers would like to have fewer signaling sessions\n   crossing the
      AS boundary and that the entities that terminate the\n   sessions could be restricted
      to a smaller set of devices.  Two\n   approaches can be taken:\n   a.  Construct
      inter-provider control connections to run only between\n       the two border
      routers.\n   b.  Allow end-to-end, multi-segment connectivity to be constructed\n
      \      out of several connectivity segments, without maintaining an\n       end-to-end
      control connection.\n   Inter-provider control connections as described in approach
      (a) can\n   be realized using the techniques provided in Section 5.16 (e.g.,\n
      \  defining NNIs).  Multi-segment connectivity as described in\n   approach
      (b) can produce an inter-AS solution that more closely\n   resembles scheme
      (b) in Section 10 of [RFC4364].  It may be realized\n   using \"stitching\"
      of per-site connectivity and service segments at\n   different domains, e.g.,
      end-to-end connectivity between Site 1 and\n   Site 3 spans multiple domains
      (e.g., metropolitan area networks) and\n   can be constructed by stitching network
      access connectivity within\n   Site 1 with SEG1, SEG3, and SEG4, and network
      access connectivity\n   within Site 3 (as shown in Figure 28).  The assumption
      is that the\n   service orchestration component in Figure 3 should have visibility\n
      \  into the complete abstract topology and resource availability.  This\n   may
      rely on network planning.\n             ----------   ----------   ----------\n
      \           |          | |          | |          |\n          +--+        +---+
      \       +---+        +--+\n    Site 1|PE|==SEG1==|   |==SEG3==|   |==SEG4==|PE|Site
      3\n          +--+        +---+        |   |        +--+\n            |          |
      |         |   |         |  ----------\n            |          | |         |
      \  |         | |          |\n          +--+        +---+        |   |        +---+
      \       +--+\n    Site 2|PE|==SEG2==|   |==SEG5==|   |==SEG6==|   |==SEG7==|PE|Site
      4\n          +--+        +---+        +---+        +---+        +--+\n            |
      \         | |          | |          | |          |\n             ----------
      \  ----------   ----------   ----------\n     Figure 28: Example: Inter-provider
      and Inter-domain Orchestration\n   Note that SEG1, SEG2, SEG3, SEG4, SEG5, and
      SEG6 can also be regarded\n   as network access connectivity within a site and
      can be created as a\n   normal site using the L2SM.\n   In Figure 28, we use
      BGP redistribution of L2VPN Network Layer\n   Reachability Information (NLRI)
      instances from AS to neighboring AS.\n   First, the PE routers use BGP to redistribute
      L2VPN NLRIs to either\n   an ASBR or a route reflector of which an ASBR is a
      client.  The ASBR\n   then uses BGP to redistribute those L2VPN NLRIs to an
      ASBR in another\n   AS, which in turn distributes them to the PE routers in
      that AS, or\n   perhaps to another ASBR that in turn distributes them, and so
      on.\n   In this case, a PE can learn the address of an ASBR through which it\n
      \  could reach another PE to which it wishes to establish connectivity.\n   That
      is, a local PE will receive a BGP advertisement containing an\n   L2VPN NLRI
      corresponding to an L2VPN instance in which the local PE\n   has some attached
      members.  The BGP next hop for that L2VPN NLRI will\n   be an ASBR of the local
      AS.  Then, rather than building a control\n   connection all the way to the
      remote PE, it builds one only to the\n   ASBR.  A connectivity segment can now
      be established from the PE to\n   the ASBR.  The ASBR in turn can establish
      connectivity to the ASBR of\n   the next AS and then stitch that connectivity
      to the connectivity\n   from the PE as described in [RFC6073].  Repeating the
      process at each\n   ASBR leads to a sequence of connectivity segments that,
      when stitched\n   together, connect the two PEs.\n   Note that in the approach
      just described, the local PE may never\n   learn the IP address of the remote
      PE.  It learns the L2VPN NLRI\n   advertised by the remote PE, which need not
      contain the remote PE\n   address, and it learns the IP address of the ASBR
      that is the BGP\n   next hop for that NLRI.\n   When this approach is used for
      VPLS or for full-mesh VPWS, it leads\n   to a full mesh of connectivity among
      the PEs, but it does not require\n   a full mesh of control connections (LDP
      or L2TPv3 sessions).\n   Instead, the control connections within a single AS
      run among all the\n   PEs of that AS and the ASBRs of the AS.  A single control
      connection\n   between the ASBRs of adjacent ASes can be used to support as
      many\n   AS-to-AS connectivity segments as may be needed.\n"
    title: 5.17.  Applicability of L2SM in Inter-provider and Inter-domain
  title: 5.  Design of the Data Model
- contents:
  - "6.  Interaction with Other YANG Modules\n   As explained in Section 4, this service
    model is not intended to\n   configure network elements; rather, it is instantiated
    in a\n   management system.\n   The management system might follow modular design
    and comprise two\n   different components:\n   a.  The component instantiating
    the service model (let's call it the\n       service component).\n   b.  The component
    responsible for network element configuration\n       (let's call it the configuration
    component).\n   In some cases, when a split is needed between the behavior and\n
    \  functions that a customer requests and the technology that the\n   network
    operator has available to deliver the service [RFC8309], a\n   new component can
    be separated out of the service component (let's\n   call it the control component).
    \ This component is responsible for\n   network-centric operation and is aware
    of many features such as\n   topology, technology, and operator policy.  As an
    optional component,\n   it can use the service model as input and is not required
    at all if\n   the control component delegates its control operations to the\n
    \  configuration component.\n   In Section 7, we provide an example of translation
    of service\n   provisioning requests to router configuration lines as an\n   illustration.
    \ In the YANG-based ecosystem, it is expected that\n   NETCONF and YANG will be
    used between the configuration component and\n   network elements to configure
    the requested service on those\n   elements.\n   In this framework, it is expected
    that YANG data models will be used\n   to configure service components on network
    elements.  There will be a\n   strong relationship between the abstracted view
    provided by this\n   service model and the detailed configuration view that will
    be\n   provided by specific configuration models for network elements such\n   as
    those defined in [MPLS-L2VPN-YANG] and [EVPN-YANG].  Service\n   components that
    would need configuration of network elements in\n   support of the service model
    defined in this document include:\n   o  Network instance definitions that include
    defined VPN policies.\n   o  Physical interfaces.\n   o  Ethernet-layer parameters
    (e.g., VLAN IDs).\n   o  QoS: classification, profiles, etc.\n   o  Support for
    Ethernet Service OAM.\n"
  title: 6.  Interaction with Other YANG Modules
- contents:
  - "7.  Service Model Usage Example\n   As explained in Section 4, this service model
    is intended to be\n   instantiated at a management layer and is not intended to
    be used\n   directly on network elements.  The management system serves as a\n
    \  central point of configuration of the overall service.\n   This section provides
    an example of how a management system can use\n   this model to configure an L2VPN
    service on network elements.\n   This example provides a VPN service for three
    sites using\n   point-to-point VPWS and a Hub-and-Spoke VPN service topology as
    shown\n   in Figure 29.  Load balancing is not considered in this case.\n     Site
    1\n     ............\n     :          :             P2P VPWS\n     :Spoke Site:-----PE1--------------------------+\n
    \    :          :                                  |        Site 3\n     :..........:
    \                                 |      ............\n                                                   |
    \     :          :\n                                                  PE3-----:
    Hub Site :\n     Site 2                                        |      :          :\n
    \    ............                                  |      :..........:\n     :
    \         :             P2P VPWS             |\n     :Spoke Site:-----PE2--------------------------+\n
    \    :          :\n     :..........:\n              Figure 29: Reference Network
    for Simple Example\n   The following XML describes the overall simplified service\n
    \  configuration of this VPN.\n       <?xml version=\"1.0\"?>\n       <l2vpn-svc
    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n         <vpn-services>\n
    \            <vpn-service>\n              <vpn-id>12456487</vpn-id>\n               <vpn-svc-type>vpws</vpn-svc-type>\n
    \              <svc-topo>hub-spoke</svc-topo>\n               <ce-vlan-preservation>true</ce-vlan-preservation>\n
    \              <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n              </vpn-service>\n
    \            <vpn-service>\n               <vpn-id>12456488</vpn-id>\n               <vpn-svc-type>vpws</vpn-svc-type>\n
    \              <svc-topo>hub-spoke</svc-topo>\n               <ce-vlan-preservation>true</ce-vlan-preservation>\n
    \              <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n              </vpn-service>\n
    \        </vpn-services>\n       </l2vpn-svc>\n   When receiving the request for
    provisioning the VPN service, the\n   management system will internally (or through
    communication with\n   another OSS component) allocate VPN RTs.  In this specific
    case, two\n   RTs will be allocated (100:1 for Hubs and 100:2 for Spokes).  The\n
    \  output below describes the configuration of Spoke Site 1.\n  <?xml version=\"1.0\"?>\n
    \ <l2vpn-svc xmlns=\"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\">\n   <vpn-services>\n
    \   <vpn-service>\n     <vpn-id>12456487</vpn-id>\n     <svc-topo>hub-spoke</svc-topo>\n
    \    <ce-vlan-preservation>true</ce-vlan-preservation>\n     <ce-vlan-cos-preservation>true</ce-vlan-cos-preservation>\n
    \   </vpn-service>\n   </vpn-services>\n   <sites>\n     <site>\n        <site-id>Spoke_Site1</site-id>\n
    \          <locations>\n             <location>\n              <location-id>NY1</location-id>\n
    \             <city>NY</city>\n              <country-code>US</country-code>\n
    \            </location>\n            </locations>\n            <site-network-accesses>\n
    \              <site-network-access>\n                  <network-access-id>Spoke_UNI-Site1</network-access-id>\n
    \                   <access-diversity>\n                      <groups>\n                        <group>\n
    \                         <group-id>20</group-id>\n                        </group>\n
    \                     </groups>\n                    </access-diversity>\n                      <connection>\n
    \                      <encapsulation-type>vlan</encapsulation-type>\n                        <tagged-interface>\n
    \                       <dot1q-vlan-tagged>\n                          <cvlan-id>17</cvlan-id>\n
    \                       </dot1q-vlan-tagged>\n                        </tagged-interface>\n
    \                       <l2cp-control>\n                          <stp-rstp-mstp>tunnel</stp-rstp-mstp>\n
    \                         <lldp>true</lldp>\n                        </l2cp-control>\n
    \                     </connection>\n                      <service>\n                        <svc-bandwidth>\n
    \                         <bandwidth>\n                           <direction>input-bw</direction>\n
    \                           <type>bw-per-cos</type>\n                             <cir>450000000</cir>\n
    \                            <cbs>20000000</cbs>\n                             <eir>1000000000</eir>\n
    \                            <ebs>200000000</ebs>\n                          </bandwidth>\n
    \                       </svc-bandwidth>\n                        <carrierscarrier>\n
    \                        <signaling-type>bgp</signaling-type>\n                        </carrierscarrier>\n
    \                    </service>\n                      <vpn-attachment>\n                        <vpn-id>12456487</vpn-id>\n
    \                       <site-role>spoke-role</site-role>\n                      </vpn-attachment>\n
    \                   </site-network-access>\n                  </site-network-accesses>\n
    \                 <management>\n                    <type>provider-managed</type>\n
    \                 </management>\n                </site>\n          </sites>\n
    \     </l2vpn-svc>\n   When receiving the request for provisioning Spoke Site
    1, the\n   management system MUST allocate network resources for this site.  It\n
    \  MUST first determine the target network elements to provision the\n   access
    and, in particular, the PE router (or possibly an aggregation\n   switch).  As
    described in Sections 5.3.1 and 5.6, the management\n   system SHOULD use the
    location information and MUST use the\n   access-diversity constraint to find
    the appropriate PE.  In this\n   case, we consider that Spoke Site 1 requires
    PE diversity with Hubs\n   and that the management system will allocate PEs based
    on least\n   distance.  Based on the location information, the management system\n
    \  finds the available PEs in the area closest to the customer and picks\n   one
    that fits the access-diversity constraint.\n   When the PE is chosen, the management
    system needs to allocate\n   interface resources on the node.  One interface is
    selected from the\n   PE's available pool of resources.  The management system
    can start\n   provisioning the PE node using any means it wishes (e.g., NETCONF,\n
    \  CLI).  The management system will check to see if a VSI that fits its\n   needs
    is already present.  If not, it will provision the VSI: the RD\n   will come from
    the internal allocation policy model, and the RTs will\n   come from the vpn-policy
    configuration of the site (i.e., the\n   management system will allocate some
    RTs for the VPN).  As the site\n   is a Spoke site (site-role), the management
    system knows which RTs\n   must be imported and exported.  As the site is provider
    managed, some\n   management RTs may also be added (100:5000).  Standard provider
    VPN\n   policies MAY also be added in the configuration.\n   Example of a generated
    PE configuration:\n"
  - "l2vpn vsi context one\n  vpn id 12456487\n     autodiscovery bgp signaling bgp\n
    \    ve id 1001     <---- identify the PE routers within the VPLS domain\n     ve
    range 50    <---- VPLS Edge (VE) size\n     route-distinguisher 100:3123234324\n
    \    route-target import 100:1\n     route-target import 100:5000    <---- Standard
    SP configuration\n     route-target export 100:2               for provider-managed
    CE\n   !\n   When the VSI has been provisioned, the management system can start\n
    \  configuring the access on the PE using the allocated interface\n   information.
    \ The tag or VLAN (e.g., service instance tag) is chosen\n   by the management
    system.  One tag will be picked from an allocated\n   subnet for the PE, and another
    will be used for the CE configuration.\n   LACP protocols will also be configured
    between the PE and the CE; in\n   the case of the provider-managed model, the
    choice is left to the SP.\n   This choice is independent of the LACP protocol
    chosen by the\n   customer.\n   Example of a generated PE configuration:\n   !\n
    \  bridge-domain 1\n    member Ethernet0/0 service-instance 100\n    member vsi
    one\n   !\n   l2 router-id 198.51.100.1\n   !\n   l2 router-id 2001:db8::10:1/64\n
    \  !\n   interface Ethernet0/0\n    no ip address\n    service instance 100 ethernet\n
    \  encapsulation dot1q 100\n    !\n   !\n   router bgp 1\n    bgp log-neighbor-changes\n
    \   neighbor 198.51.100.4 remote-as 1\n    neighbor 198.51.100.4 update-source
    Loopback0\n    !\n    address-family l2vpn vpls\n     neighbor 198.51.100.4 activate\n
    \    neighbor 198.51.100.4 send-community extended\n     neighbor 198.51.100.4
    suppress-signaling-protocol ldp\n     neighbor 2001:db8::0a10:4 activate\n     neighbor
    2001:db8::0a10:4 send-community extended\n    exit-address-family\n   !\n   interface
    vlan 100     <---- Associating the AC with\n     no ip address                the
    MAC-VRF at the PE\n     xconnect vsi PE1-VPLS-A\n   !\n   vlan 100\n     state
    active\n   As the CE router is not reachable at this stage, the management\n   system
    can produce a complete CE configuration that can be manually\n   uploaded to the
    node (e.g., before sending the CE to the customer\n   premises at the appropriate
    postal address, as described in\n   Section 5.3.1).  The CE configuration will
    be built in the same way\n   as the PE configuration is built.  Based on (1) the
    CE type\n   (vendor/model) allocated to the customer and (2) bearer information,\n
    \  the management system knows which interface must be configured on the\n   CE.
    \ PE-CE link configuration is expected to be handled automatically\n   using the
    SP's OSS, as both resources are managed internally.\n   CE-to-LAN interface parameters,
    such as dot1Q tags, are derived from\n   the Ethernet connection, taking into
    account how the management\n   system distributes dot1Q tags between the PE and
    the CE within the\n   subnet.  This will allow a plug'n'play configuration to
    be produced\n   for the CE.\n   Example of a generated CE configuration:\n   interface
    Ethernet0/1\n     switchport trunk allowed vlan none\n     switchport mode trunk\n
    \    service instance 100 ethernet\n     encapsulation default\n     l2protocol
    forward cdp\n     xconnect 203.0.113.1 100 encapsulation mpls\n   !\n"
  title: 7.  Service Model Usage Example
- contents:
  - "8.  YANG Module\n   This YANG module imports typedefs from [RFC6991] and [RFC8341].\n"
  - '<CODE BEGINS> file "ietf-l2vpn-svc@2018-10-09.yang"

    '
  - "module ietf-l2vpn-svc {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\";\n
    \ prefix l2vpn-svc;\n  import ietf-inet-types {\n    prefix inet;\n  }\n  import
    ietf-yang-types {\n    prefix yang;\n  }\n  import ietf-netconf-acm {\n    prefix
    nacm;\n  }\n  organization\n    \"IETF L2SM Working Group.\";\n  contact\n    \"WG
    Web:   <https://datatracker.ietf.org/wg/l2sm/>\n     WG List:  <mailto:l2sm@ietf.org>\n
    \    Editor:   Giuseppe Fioccola\n               <mailto:giuseppe.fioccola@tim.it>\";\n
    \ description\n    \"This YANG module defines a generic service configuration
    model\n     for Layer 2 VPN services common across all vendor\n     implementations.\n
    \    Copyright (c) 2018 IETF Trust and the persons\n     identified as authors
    of the code.  All rights reserved.\n     Redistribution and use in source and
    binary forms, with or\n     without modification, is permitted pursuant to, and
    subject\n     to the license terms contained in, the Simplified BSD License\n
    \    set forth in Section 4.c of the IETF Trust's Legal Provisions\n     Relating
    to IETF Documents\n     (https://trustee.ietf.org/license-info).\n     This version
    of this YANG module is part of RFC 8466;\n     see the RFC itself for full legal
    notices.\";\n  revision 2018-10-09 {\n    description\n      \"Initial revision.\";\n
    \   reference\n      \"RFC 8466: A YANG Data Model for Layer 2 Virtual Private\n
    \      Network (L2VPN) Service Delivery\";\n  }\n  feature carrierscarrier {\n
    \   description\n      \"Enables the support of carriers' carriers (CsC).\";\n
    \ }\n  feature ethernet-oam {\n    description\n      \"Enables the support of
    Ethernet Service OAM.\";\n  }\n  feature extranet-vpn {\n    description\n      \"Enables
    the support of extranet VPNs.\";\n  }\n  feature l2cp-control {\n    description\n
    \     \"Enables the support of L2CP control.\";\n  }\n  feature input-bw {\n    description\n
    \     \"Enables the support of input bandwidth in a VPN.\";\n  }\n  feature output-bw
    {\n    description\n      \"Enables the support of output bandwidth in a VPN.\";\n
    \ }\n  feature uni-list {\n    description\n      \"Enables the support of a list
    of UNIs in a VPN.\";\n  }\n  feature cloud-access {\n    description\n      \"Allows
    the VPN to connect to a Cloud Service Provider (CSP)\n       or an ISP.\";\n  }\n
    \ feature oam-3ah {\n    description\n      \"Enables the support of OAM 802.3ah.\";\n
    \ }\n  feature micro-bfd {\n    description\n      \"Enables the support of micro-BFD.\";\n
    \ }\n  feature bfd {\n    description\n      \"Enables the support of BFD.\";\n
    \ }\n  feature signaling-options {\n    description\n      \"Enables the support
    of signaling options.\";\n  }\n  feature site-diversity {\n    description\n      \"Enables
    the support of site diversity constraints in a VPN.\";\n  }\n  feature encryption
    {\n    description\n      \"Enables the support of encryption.\";\n  }\n  feature
    always-on {\n    description\n      \"Enables support for the 'always-on' access
    constraint.\";\n  }\n  feature requested-type {\n    description\n      \"Enables
    support for the 'requested-type' access constraint.\";\n  }\n  feature bearer-reference
    {\n    description\n      \"Enables support for the 'bearer-reference' access\n
    \      constraint.\";\n  }\n  feature qos {\n    description\n      \"Enables
    support for QoS.\";\n  }\n  feature qos-custom {\n    description\n      \"Enables
    the support of a custom QoS profile.\";\n  }\n  feature lag-interface {\n    description\n
    \     \"Enables LAG interfaces.\";\n  }\n  feature vlan {\n    description\n      \"Enables
    the support of VLANs.\";\n  }\n  feature dot1q {\n    description\n      \"Enables
    the support of dot1Q.\";\n  }\n  feature qinq {\n    description\n      \"Enables
    the support of QinQ.\";\n  }\n  feature qinany {\n    description\n      \"Enables
    the support of QinAny.\";\n  }\n  feature vxlan {\n    description\n      \"Enables
    the support of VXLANs.\";\n  }\n  feature lan-tag {\n    description\n      \"Enables
    LAN tag support in a VPN.\";\n  }\n  feature target-sites {\n    description\n
    \     \"Enables the support of the 'target-sites'\n       match-flow parameter.\";\n
    \ }\n  feature bum {\n    description\n      \"Enables BUM capabilities in a VPN.\";\n
    \ }\n  feature mac-loop-prevention {\n    description\n      \"Enables the MAC
    loop-prevention capability in a VPN.\";\n  }\n  feature lacp {\n    description\n
    \     \"Enables the Link Aggregation Control Protocol (LACP)\n       capability
    in a VPN.\";\n  }\n  feature mac-addr-limit {\n    description\n      \"Enables
    the MAC address limit capability in a VPN.\";\n  }\n  feature acl {\n    description\n
    \     \"Enables the ACL capability in a VPN.\";\n  }\n  feature cfm {\n    description\n
    \     \"Enables the 802.1ag CFM capability in a VPN.\";\n  }\n  feature y-1731
    {\n    description\n      \"Enables the Y.1731 capability in a VPN.\";\n  }\n
    \ typedef svc-id {\n    type string;\n    description\n      \"Defines the type
    of service component identifier.\";\n  }\n  typedef ccm-priority-type {\n    type
    uint8 {\n      range \"0..7\";\n    }\n    description\n      \"A 3-bit priority
    value to be used in the VLAN tag,\n       if present in the transmitted frame.\";\n
    \ }\n  typedef control-mode {\n    type enumeration {\n      enum peer {\n        description\n
    \         \"'peer' mode, i.e., participate in the protocol towards\n           the
    CE.  Peering is common for LACP and the Ethernet\n           Local Management
    Interface (E-LMI) and, occasionally,\n           for LLDP.  For VPLSs and VPWSs,
    the subscriber can also\n           request that the SP peer enable spanning tree.\";\n
    \     }\n      enum tunnel {\n        description\n          \"'tunnel' mode,
    i.e., pass to the egress or destination\n           site.  For EPLs, the expectation
    is that L2CP frames are\n           tunneled.\";\n      }\n      enum discard
    {\n        description\n          \"'discard' mode, i.e., discard the frame.\";\n
    \     }\n    }\n    description\n      \"Defines the type of control mode on L2CP
    protocols.\";\n  }\n  typedef neg-mode {\n    type enumeration {\n      enum full-duplex
    {\n        description\n          \"Defines full-duplex mode.\";\n      }\n      enum
    auto-neg {\n        description\n          \"Defines auto-negotiation mode.\";\n
    \     }\n    }\n    description\n      \"Defines the type of negotiation mode.\";\n
    \ }\n  identity site-network-access-type {\n    description\n      \"Base identity
    for the site-network-access type.\";\n  }\n  identity point-to-point {\n    base
    site-network-access-type;\n    description\n      \"Identity for a point-to-point
    connection.\";\n  }\n  identity multipoint {\n    base site-network-access-type;\n
    \   description\n      \"Identity for a multipoint connection, e.g.,\n       an
    Ethernet broadcast segment.\";\n  }\n  identity tag-type {\n    description\n
    \     \"Base identity from which all tag types are derived.\";\n  }\n  identity
    c-vlan {\n    base tag-type;\n    description\n      \"A CVLAN tag, normally using
    the 0x8100 Ethertype.\";\n  }\n  identity s-vlan {\n    base tag-type;\n    description\n
    \     \"An SVLAN tag.\";\n  }\n  identity c-s-vlan {\n    base tag-type;\n    description\n
    \     \"Using both a CVLAN tag and an SVLAN tag.\";\n  }\n  identity multicast-tree-type
    {\n    description\n      \"Base identity for the multicast tree type.\";\n  }\n
    \ identity ssm-tree-type {\n    base multicast-tree-type;\n    description\n      \"Identity
    for the Source-Specific Multicast (SSM) tree type.\";\n    reference \"RFC 8299:
    YANG Data Model for L3VPN Service Delivery\";\n  }\n  identity asm-tree-type {\n
    \   base multicast-tree-type;\n    description\n      \"Identity for the Any-Source
    Multicast (ASM) tree type.\";\n    reference \"RFC 8299: YANG Data Model for L3VPN
    Service Delivery\";\n  }\n  identity bidir-tree-type {\n    base multicast-tree-type;\n
    \   description\n      \"Identity for the bidirectional tree type.\";\n    reference
    \"RFC 8299: YANG Data Model for L3VPN Service Delivery\";\n  }\n  identity multicast-gp-address-mapping
    {\n    description\n      \"Identity for mapping type.\";\n  }\n  identity static-mapping
    {\n    base multicast-gp-address-mapping;\n    description\n      \"Identity for
    static mapping, i.e., attach the interface\n       to the multicast group as a
    static member.\";\n  }\n  identity dynamic-mapping {\n    base multicast-gp-address-mapping;\n
    \   description\n      \"Identity for dynamic mapping, i.e., an interface was
    added\n       to the multicast group as a result of snooping.\";\n  }\n  identity
    tf-type {\n    description\n      \"Identity for the traffic type.\";\n  }\n  identity
    multicast-traffic {\n    base tf-type;\n    description\n      \"Identity for
    multicast traffic.\";\n  }\n  identity broadcast-traffic {\n    base tf-type;\n
    \   description\n      \"Identity for broadcast traffic.\";\n  }\n  identity unknown-unicast-traffic
    {\n    base tf-type;\n    description\n      \"Identity for unknown unicast traffic.\";\n
    \ }\n  identity encapsulation-type {\n    description\n      \"Identity for the
    encapsulation type.\";\n  }\n  identity ethernet {\n    base encapsulation-type;\n
    \   description\n      \"Identity for Ethernet type.\";\n  }\n  identity vlan
    {\n    base encapsulation-type;\n    description\n      \"Identity for the VLAN
    type.\";\n  }\n  identity carrierscarrier-type {\n    description\n      \"Identity
    of the CsC type.\";\n  }\n  identity ldp {\n    base carrierscarrier-type;\n    description\n
    \     \"Use LDP as the signaling protocol\n       between the PE and the CE.\";\n
    \ }\n  identity bgp {\n    base carrierscarrier-type;\n    description\n      \"Use
    BGP (as per RFC 8277) as the signaling protocol\n       between the PE and the
    CE.\n       In this case, BGP must also be configured as\n       the routing protocol.\";\n
    \ }\n  identity eth-inf-type {\n    description\n      \"Identity of the Ethernet
    interface type.\";\n  }\n  identity tagged {\n    base eth-inf-type;\n    description\n
    \     \"Identity of the tagged interface type.\";\n  }\n  identity untagged {\n
    \   base eth-inf-type;\n    description\n      \"Identity of the untagged interface
    type.\";\n  }\n  identity lag {\n    base eth-inf-type;\n    description\n      \"Identity
    of the LAG interface type.\";\n  }\n  identity bw-type {\n    description\n      \"Identity
    of the bandwidth type.\";\n  }\n  identity bw-per-cos {\n    base bw-type;\n    description\n
    \     \"Bandwidth is per CoS.\";\n  }\n  identity bw-per-port {\n    base bw-type;\n
    \   description\n      \"Bandwidth is per site network access.\";\n  }\n  identity
    bw-per-site {\n    base bw-type;\n    description\n      \"Bandwidth is per site.
    \ It is applicable to\n       all the site network accesses within the site.\";\n
    \ }\n  identity bw-per-svc {\n    base bw-type;\n    description\n      \"Bandwidth
    is per VPN service.\";\n  }\n  identity site-vpn-flavor {\n    description\n      \"Base
    identity for the site VPN service flavor.\";\n  }\n  identity site-vpn-flavor-single
    {\n    base site-vpn-flavor;\n    description\n      \"Identity for the site VPN
    service flavor.\n       Used when the site belongs to only one VPN.\";\n  }\n
    \ identity site-vpn-flavor-multi {\n    base site-vpn-flavor;\n    description\n
    \     \"Identity for the site VPN service flavor.\n       Used when a logical
    connection of a site\n       belongs to multiple VPNs.\";\n  }\n  identity site-vpn-flavor-nni
    {\n    base site-vpn-flavor;\n    description\n      \"Identity for the site VPN
    service flavor.\n       Used to describe an NNI option A connection.\";\n  }\n
    \ identity service-type {\n    description\n      \"Base identity of the service
    type.\";\n  }\n  identity vpws {\n    base service-type;\n    description\n      \"Point-to-point
    Virtual Private Wire Service (VPWS)\n       service type.\";\n  }\n  identity
    pwe3 {\n    base service-type;\n    description\n      \"Pseudowire Emulation
    Edge to Edge (PWE3) service type.\";\n  }\n  identity ldp-l2tp-vpls {\n    base
    service-type;\n    description\n      \"LDP-based or L2TP-based multipoint Virtual
    Private LAN\n       Service (VPLS) service type.  This VPLS uses LDP-signaled\n
    \      Pseudowires or L2TP-signaled Pseudowires.\";\n  }\n  identity bgp-vpls
    {\n    base service-type;\n    description\n      \"BGP-based multipoint VPLS
    service type.  This VPLS uses a\n       BGP control plane as described in RFCs
    4761 and 6624.\";\n  }\n  identity vpws-evpn {\n    base service-type;\n    description\n
    \     \"VPWS service type using Ethernet VPNs (EVPNs)\n       as specified in
    RFC 7432.\";\n  }\n  identity pbb-evpn {\n    base service-type;\n    description\n
    \     \"Provider Backbone Bridge (PBB) service type using\n       EVPNs as specified
    in RFC 7432.\";\n  }\n  identity bundling-type {\n    description\n      \"The
    base identity for the bundling type.  It supports\n       multiple CE-VLANs associated
    with an L2VPN service or\n       all CE-VLANs associated with an L2VPN service.\";\n
    \ }\n  identity multi-svc-bundling {\n    base bundling-type;\n    description\n
    \     \"Identity for multi-service bundling, i.e.,\n       multiple CE-VLAN IDs
    can be associated with an\n       L2VPN service at a site.\";\n  }\n  identity
    one2one-bundling {\n    base bundling-type;\n    description\n      \"Identity
    for one-to-one service bundling, i.e.,\n       each L2VPN can be associated with
    only one CE-VLAN ID\n       at a site.\";\n  }\n  identity all2one-bundling {\n
    \   base bundling-type;\n    description\n      \"Identity for all-to-one bundling,
    i.e., all CE-VLAN IDs\n       are mapped to one L2VPN service.\";\n  }\n  identity
    color-id {\n    description\n      \"Base identity of the color ID.\";\n  }\n
    \ identity color-id-cvlan {\n    base color-id;\n    description\n      \"Identity
    of the color ID based on a CVLAN.\";\n  }\n  identity cos-id {\n    description\n
    \     \"Identity of the CoS ID.\";\n  }\n  identity cos-id-pcp {\n    base cos-id;\n
    \   description\n      \"Identity of the CoS ID based on the\n       Port Control
    Protocol (PCP).\";\n  }\n  identity cos-id-dscp {\n    base cos-id;\n    description\n
    \     \"Identity of the CoS ID based on DSCP.\";\n  }\n  identity color-type {\n
    \   description\n      \"Identity of color types.\";\n  }\n  identity green {\n
    \   base color-type;\n    description\n      \"Identity of the 'green' color type.\";\n
    \ }\n  identity yellow {\n    base color-type;\n    description\n      \"Identity
    of the 'yellow' color type.\";\n  }\n  identity red {\n    base color-type;\n
    \   description\n      \"Identity of the 'red' color type.\";\n  }\n  identity
    policing {\n    description\n      \"Identity of the type of policing applied.\";\n
    \ }\n  identity one-rate-two-color {\n    base policing;\n    description\n      \"Identity
    of one-rate, two-color (1R2C).\";\n  }\n  identity two-rate-three-color {\n    base
    policing;\n    description\n      \"Identity of two-rate, three-color (2R3C).\";\n
    \ }\n  identity bum-type {\n    description\n      \"Identity of the BUM type.\";\n
    \ }\n  identity broadcast {\n    base bum-type;\n    description\n      \"Identity
    of broadcast.\";\n  }\n  identity unicast {\n    base bum-type;\n    description\n
    \     \"Identity of unicast.\";\n  }\n  identity multicast {\n    base bum-type;\n
    \   description\n      \"Identity of multicast.\";\n  }\n  identity loop-prevention-type
    {\n    description\n      \"Identity of loop prevention.\";\n  }\n  identity shut
    {\n    base loop-prevention-type;\n    description\n      \"Identity of shut protection.\";\n
    \ }\n  identity trap {\n    base loop-prevention-type;\n    description\n      \"Identity
    of trap protection.\";\n  }\n  identity lacp-state {\n    description\n      \"Identity
    of the LACP state.\";\n  }\n  identity lacp-on {\n    base lacp-state;\n    description\n
    \     \"Identity of LACP on.\";\n  }\n  identity lacp-off {\n    base lacp-state;\n
    \   description\n      \"Identity of LACP off.\";\n  }\n  identity lacp-mode {\n
    \   description\n      \"Identity of the LACP mode.\";\n  }\n  identity lacp-passive
    {\n    base lacp-mode;\n    description\n      \"Identity of LACP passive.\";\n
    \ }\n  identity lacp-active {\n    base lacp-mode;\n    description\n      \"Identity
    of LACP active.\";\n  }\n  identity lacp-speed {\n    description\n      \"Identity
    of the LACP speed.\";\n  }\n  identity lacp-fast {\n    base lacp-speed;\n    description\n
    \     \"Identity of LACP fast.\";\n  }\n  identity lacp-slow {\n    base lacp-speed;\n
    \   description\n      \"Identity of LACP slow.\";\n  }\n  identity bw-direction
    {\n    description\n      \"Identity for the bandwidth direction.\";\n  }\n  identity
    input-bw {\n    base bw-direction;\n    description\n      \"Identity for the
    input bandwidth.\";\n  }\n  identity output-bw {\n    base bw-direction;\n    description\n
    \     \"Identity for the output bandwidth.\";\n  }\n  identity management {\n
    \   description\n      \"Base identity for the site management scheme.\";\n  }\n
    \ identity co-managed {\n    base management;\n    description\n      \"Identity
    for a co-managed site.\";\n  }\n  identity customer-managed {\n    base management;\n
    \   description\n      \"Identity for a customer-managed site.\";\n  }\n  identity
    provider-managed {\n    base management;\n    description\n      \"Identity for
    a provider-managed site.\";\n  }\n  identity address-family {\n    description\n
    \     \"Identity for an address family.\";\n  }\n  identity ipv4 {\n    base address-family;\n
    \   description\n      \"Identity for an IPv4 address family.\";\n  }\n  identity
    ipv6 {\n    base address-family;\n    description\n      \"Identity for an IPv6
    address family.\";\n  }\n  identity vpn-topology {\n    description\n      \"Base
    identity for the VPN topology.\";\n  }\n  identity any-to-any {\n    base vpn-topology;\n
    \   description\n      \"Identity for the any-to-any VPN topology.\";\n  }\n  identity
    hub-spoke {\n    base vpn-topology;\n    description\n      \"Identity for the
    Hub-and-Spoke VPN topology.\";\n  }\n  identity hub-spoke-disjoint {\n    base
    vpn-topology;\n    description\n      \"Identity for the Hub-and-Spoke VPN topology,\n
    \      where Hubs cannot communicate with each other.\";\n  }\n  identity site-role
    {\n    description\n      \"Base identity for a site type.\";\n  }\n  identity
    any-to-any-role {\n    base site-role;\n    description\n      \"Site in an any-to-any
    L2VPN.\";\n  }\n  identity spoke-role {\n    base site-role;\n    description\n
    \     \"Spoke site in a Hub-and-Spoke L2VPN.\";\n  }\n  identity hub-role {\n
    \   base site-role;\n    description\n      \"Hub site in a Hub-and-Spoke L2VPN.\";\n
    \ }\n  identity pm-type {\n    description\n      \"Performance-monitoring type.\";\n
    \ }\n  identity loss {\n    base pm-type;\n    description\n      \"Loss measurement.\";\n
    \ }\n  identity delay {\n    base pm-type;\n    description\n      \"Delay measurement.\";\n
    \ }\n  identity fault-alarm-defect-type {\n    description\n      \"Indicates
    the alarm-priority defect (i.e., the\n       lowest-priority defect that is allowed
    to\n       generate a fault alarm).\";\n  }\n  identity remote-rdi {\n    base
    fault-alarm-defect-type;\n    description\n      \"Indicates the aggregate health\n
    \      of the Remote MEPs.\";\n  }\n  identity remote-mac-error {\n    base fault-alarm-defect-type;\n
    \   description\n      \"Indicates that one or more of the Remote MEPs are\n       reporting
    a failure in their Port Status TLVs or\n       Interface Status TLVs.\";\n  }\n
    \ identity remote-invalid-ccm {\n    base fault-alarm-defect-type;\n    description\n
    \     \"Indicates that at least one of the Remote MEP\n       state machines is
    not receiving valid\n       Continuity Check Messages (CCMs) from its Remote MEP.\";\n
    \ }\n  identity invalid-ccm {\n    base fault-alarm-defect-type;\n    description\n
    \     \"Indicates that one or more invalid CCMs have been\n       received and
    that a period of time 3.5 times the length\n       of those CCMs' transmission
    intervals has not yet expired.\";\n  }\n  identity cross-connect-ccm {\n    base
    fault-alarm-defect-type;\n    description\n      \"Indicates that one or more
    cross-connect CCMs have been\n       received and that 3.5 times the period of
    at least one of\n       those CCMs' transmission intervals has not yet expired.\";\n
    \ }\n  identity frame-delivery-mode {\n    description\n      \"Delivery types.\";\n
    \ }\n  identity discard {\n    base frame-delivery-mode;\n    description\n      \"Service
    frames are discarded.\";\n  }\n  identity unconditional {\n    base frame-delivery-mode;\n
    \   description\n      \"Service frames are unconditionally delivered to the\n
    \      destination site.\";\n  }\n  identity unknown-discard {\n    base frame-delivery-mode;\n
    \   description\n      \"Service frames are conditionally delivered to the\n       destination
    site.  Packets with unknown destination addresses\n       will be discarded.\";\n
    \ }\n  identity placement-diversity {\n    description\n      \"Base identity
    for site placement constraints.\";\n  }\n  identity bearer-diverse {\n    base
    placement-diversity;\n    description\n      \"Identity for bearer diversity.\n
    \      The bearers should not use common elements.\";\n  }\n  identity pe-diverse
    {\n    base placement-diversity;\n    description\n      \"Identity for PE diversity.\";\n
    \ }\n  identity pop-diverse {\n    base placement-diversity;\n    description\n
    \     \"Identity for POP diversity.\";\n  }\n  identity linecard-diverse {\n    base
    placement-diversity;\n    description\n      \"Identity for linecard diversity.\";\n
    \ }\n  identity same-pe {\n    base placement-diversity;\n    description\n      \"Identity
    for having sites connected on the same PE.\";\n  }\n  identity same-bearer {\n
    \   base placement-diversity;\n    description\n      \"Identity for having sites
    connected using the same bearer.\";\n  }\n  identity tagged-inf-type {\n    description\n
    \     \"Identity for the tagged interface type.\";\n  }\n  identity priority-tagged
    {\n    base tagged-inf-type;\n    description\n      \"Identity for the priority-tagged
    interface.\";\n  }\n  identity qinq {\n    base tagged-inf-type;\n    description\n
    \     \"Identity for the QinQ tagged interface.\";\n  }\n  identity dot1q {\n
    \   base tagged-inf-type;\n    description\n      \"Identity for the dot1Q VLAN
    tagged interface.\";\n  }\n  identity qinany {\n    base tagged-inf-type;\n    description\n
    \     \"Identity for the QinAny tagged interface.\";\n  }\n  identity vxlan {\n
    \   base tagged-inf-type;\n    description\n      \"Identity for the VXLAN tagged
    interface.\";\n  }\n  identity provision-model {\n    description\n      \"Base
    identity for the provision model.\";\n  }\n  identity single-side-provision {\n
    \   description\n      \"Identity for single-sided provisioning with discovery.\";\n
    \ }\n  identity doubled-side-provision {\n    description\n      \"Identity for
    double-sided provisioning.\";\n  }\n  identity mac-learning-mode {\n    description\n
    \     \"MAC learning mode.\";\n  }\n  identity data-plane {\n    base mac-learning-mode;\n
    \   description\n      \"User MAC addresses are learned through ARP broadcast.\";\n
    \ }\n  identity control-plane {\n    base mac-learning-mode;\n    description\n
    \     \"User MAC addresses are advertised through EVPN-BGP.\";\n  }\n  identity
    vpn-policy-filter-type {\n    description\n      \"Base identity for the filter
    type.\";\n  }\n  identity lan {\n    base vpn-policy-filter-type;\n    description\n
    \     \"Identity for a LAN tag filter type.\";\n  }\n  identity mac-action {\n
    \   description\n      \"Base identity for a MAC action.\";\n  }\n  identity drop
    {\n    base mac-action;\n    description\n      \"Identity for dropping a packet.\";\n
    \ }\n  identity flood {\n    base mac-action;\n    description\n      \"Identity
    for packet flooding.\";\n  }\n  identity warning {\n    base mac-action;\n    description\n
    \     \"Identity for sending a warning log message.\";\n  }\n  identity qos-profile-direction
    {\n    description\n      \"Base identity for the QoS-profile direction.\";\n
    \  }\n  identity site-to-wan {\n    base qos-profile-direction;\n    description\n
    \     \"Identity for the site-to-WAN direction.\";\n  }\n  identity wan-to-site
    {\n    base qos-profile-direction;\n    description\n      \"Identity for the
    WAN-to-site direction.\";\n  }\n  identity bidirectional {\n    base qos-profile-direction;\n
    \   description\n      \"Identity for both the WAN-to-site direction\n       and
    the site-to-WAN direction.\";\n  }\n  identity vxlan-peer-mode {\n    description\n
    \     \"Base identity for the VXLAN peer mode.\";\n  }\n  identity static-mode
    {\n    base vxlan-peer-mode;\n    description\n      \"Identity for VXLAN access
    in the static mode.\";\n  }\n  identity bgp-mode {\n    base vxlan-peer-mode;\n
    \   description\n      \"Identity for VXLAN access by BGP EVPN learning.\";\n
    \ }\n  identity customer-application {\n    description\n      \"Base identity
    for a customer application.\";\n  }\n  identity web {\n    base customer-application;\n
    \   description\n      \"Identity for a web application (e.g., HTTP, HTTPS).\";\n
    \ }\n  identity mail {\n    base customer-application;\n    description\n      \"Identity
    for a mail application.\";\n  }\n  identity file-transfer {\n    base customer-application;\n
    \   description\n      \"Identity for a file-transfer application\n       (e.g.,
    FTP, SFTP).\";\n  }\n  identity database {\n    base customer-application;\n    description\n
    \     \"Identity for a database application.\";\n  }\n  identity social {\n    base
    customer-application;\n    description\n      \"Identity for a social-network
    application.\";\n  }\n  identity games {\n    base customer-application;\n    description\n
    \     \"Identity for a gaming application.\";\n  }\n  identity p2p {\n    base
    customer-application;\n    description\n      \"Identity for a peer-to-peer application.\";\n
    \ }\n  identity network-management {\n    base customer-application;\n    description\n
    \     \"Identity for a management application\n       (e.g., Telnet, syslog, SNMP).\";\n
    \ }\n  identity voice {\n    base customer-application;\n    description\n      \"Identity
    for a voice application.\";\n  }\n  identity video {\n    base customer-application;\n
    \   description\n      \"Identity for a videoconference application.\";\n  }\n
    \ identity embb {\n    base customer-application;\n    description\n      \"Identity
    for the enhanced Mobile Broadband (eMBB)\n       application.  Note that the eMBB
    application\n       requires strict threshold values for a wide variety\n       of
    network performance parameters (e.g., data rate,\n       latency, loss rate, reliability).\";\n
    \ }\n  identity urllc {\n    base customer-application;\n    description\n      \"Identity
    for the Ultra-Reliable and Low Latency\n       Communications (URLLC) application.
    \ Note that the\n       URLLC application requires strict threshold values for\n
    \      a wide variety of network performance parameters\n       (e.g., latency,
    reliability).\";\n  }\n  identity mmtc {\n    base customer-application;\n    description\n
    \     \"Identity for the massive Machine Type\n       Communications (mMTC) application.
    \ Note that the\n       mMTC application requires strict threshold values for\n
    \      a wide variety of network performance parameters\n       (e.g., data rate,
    latency, loss rate, reliability).\";\n  }\n  grouping site-acl {\n    container
    access-control-list {\n      if-feature \"acl\";\n      list mac {\n        key
    \"mac-address\";\n        leaf mac-address {\n          type yang:mac-address;\n
    \         description\n            \"MAC addresses.\";\n        }\n        description\n
    \         \"List of MAC addresses.\";\n      }\n      description\n        \"Container
    for the ACL.\";\n    }\n    description\n      \"Grouping that defines the ACL.\";\n
    \ }\n  grouping site-bum {\n    container broadcast-unknown-unicast-multicast
    {\n      if-feature \"bum\";\n      leaf multicast-site-type {\n        type enumeration
    {\n          enum receiver-only {\n            description\n              \"The
    site only has receivers.\";\n          }\n          enum source-only {\n            description\n
    \             \"The site only has sources.\";\n          }\n          enum source-receiver
    {\n            description\n              \"The site has both sources and receivers.\";\n
    \         }\n        }\n        default \"source-receiver\";\n        description\n
    \         \"Type of multicast site.\";\n      }\n      list multicast-gp-address-mapping
    {\n        key \"id\";\n        leaf id {\n          type uint16;\n          description\n
    \           \"Unique identifier for the mapping.\";\n        }\n        leaf vlan-id
    {\n          type uint16 {\n            range \"0..1024\";\n          }\n          mandatory
    true;\n          description\n            \"The VLAN ID of the multicast group.\n
    \            The range of the 12-bit VLAN ID is 0 to 1024.\";\n        }\n        leaf
    mac-gp-address {\n          type yang:mac-address;\n          mandatory true;\n
    \         description\n            \"The MAC address of the multicast group.\";\n
    \       }\n        leaf port-lag-number {\n          type uint32;\n          description\n
    \           \"The ports/LAGs belonging to the multicast group.\";\n        }\n
    \       description\n          \"List of port-to-group mappings.\";\n      }\n
    \     leaf bum-overall-rate {\n        type uint64;\n        units \"bps\";\n
    \       description\n          \"Overall rate for BUM.\";\n      }\n      list
    bum-rate-per-type {\n        key \"type\";\n        leaf type {\n          type
    identityref {\n            base bum-type;\n          }\n          description\n
    \           \"BUM type.\";\n        }\n        leaf rate {\n          type uint64;\n
    \         units \"bps\";\n          description\n            \"Rate for BUM.\";\n
    \       }\n        description\n          \"List of limit rates for the BUM type.\";\n
    \     }\n      description\n        \"Container of BUM configurations.\";\n    }\n
    \   description\n      \"Grouping for BUM.\";\n  }\n  grouping site-mac-loop-prevention
    {\n    container mac-loop-prevention {\n      if-feature \"mac-loop-prevention\";\n
    \     leaf protection-type {\n        type identityref {\n          base loop-prevention-type;\n
    \       }\n        default \"trap\";\n        description\n          \"Protection
    type.  By default, the protection\n           type is 'trap'.\";\n      }\n      leaf
    frequency {\n        type uint32;\n        default \"5\";\n        description\n
    \         \"The number of times to detect MAC duplication, where\n           a
    'duplicate MAC address' situation has occurred and\n           the duplicate MAC
    address has been added to a list of\n           duplicate MAC addresses.  By default,
    the number of\n           times is 5.\";\n      }\n      leaf retry-timer {\n
    \       type uint32;\n        units \"seconds\";\n        description\n          \"The
    retry timer.  When the retry timer expires,\n           the duplicate MAC address
    will be flushed from\n           the MAC-VRF.\";\n      }\n      description\n
    \       \"Container of MAC loop-prevention parameters.\";\n    }\n    description\n
    \     \"Grouping for MAC loop prevention.\";\n  }\n  grouping site-service-qos-profile
    {\n    container qos {\n      if-feature \"qos\";\n      container qos-classification-policy
    {\n        list rule {\n          key \"id\";\n          ordered-by user;\n          leaf
    id {\n            type string;\n            description\n              \"A description
    identifying the QoS classification\n               policy rule.\";\n          }\n
    \         choice match-type {\n            default \"match-flow\";\n            case
    match-flow {\n              container match-flow {\n                leaf dscp
    {\n                  type inet:dscp;\n                  description\n                    \"DSCP
    value.\";\n                }\n                leaf dot1q {\n                  type
    uint16;\n                  description\n                    \"802.1Q matching.
    \ It is a VLAN tag added into\n                     a frame.\";\n                }\n
    \               leaf pcp {\n                  type uint8 {\n                    range
    \"0..7\";\n                  }\n                  description\n                    \"PCP
    value.\";\n                }\n                leaf src-mac {\n                  type
    yang:mac-address;\n                  description\n                    \"Source
    MAC.\";\n                }\n                leaf dst-mac {\n                  type
    yang:mac-address;\n                  description\n                    \"Destination
    MAC.\";\n                }\n                leaf color-type {\n                  type
    identityref {\n                    base color-type;\n                  }\n                  description\n
    \                   \"Color types.\";\n                }\n                leaf-list
    target-sites {\n                  if-feature \"target-sites\";\n                  type
    svc-id;\n                  description\n                    \"Identifies a site
    as a traffic destination.\";\n                }\n                leaf any {\n
    \                 type empty;\n                  description\n                    \"Allow
    all.\";\n                }\n                leaf vpn-id {\n                  type
    svc-id;\n                  description\n                    \"Reference to the
    target VPN.\";\n                }\n                description\n                  \"Describes
    flow-matching criteria.\";\n              }\n            }\n            case match-application
    {\n              leaf match-application {\n                type identityref {\n
    \                 base customer-application;\n                }\n                description\n
    \                 \"Defines the application to match.\";\n              }\n            }\n
    \           description\n              \"Choice for classification.\";\n          }\n
    \         leaf target-class-id {\n            type string;\n            description\n
    \             \"Identification of the CoS.\n               This identifier is
    internal to the\n               administration.\";\n          }\n          description\n
    \           \"List of marking rules.\";\n        }\n        description\n          \"Configuration
    of the traffic classification policy.\";\n      }\n      container qos-profile
    {\n        choice qos-profile {\n          description\n            \"Choice for
    the QoS profile.\n             Can be a standard profile or a customized profile.\";\n
    \         case standard {\n            description\n              \"Standard QoS
    profile.\";\n            leaf profile {\n              type leafref {\n                path
    \"/l2vpn-svc/vpn-profiles/\"\n                   + \"valid-provider-identifiers/\"\n
    \                  + \"qos-profile-identifier\";\n              }\n              description\n
    \               \"QoS profile to be used.\";\n            }\n          }\n          case
    custom {\n            description\n              \"Customized QoS profile.\";\n
    \           container classes {\n              if-feature \"qos-custom\";\n              list
    class {\n                key \"class-id\";\n                leaf class-id {\n
    \                 type string;\n                  description\n                    \"Identification
    of the CoS.  This identifier is\n                     internal to the administration.\";\n
    \               }\n                leaf direction {\n                  type identityref
    {\n                    base qos-profile-direction;\n                  }\n                  default
    \"bidirectional\";\n                  description\n                    \"The direction
    in which the QoS profile is\n                     applied.  By default, the direction
    is\n                     bidirectional.\";\n                }\n                leaf
    policing {\n                  type identityref {\n                    base policing;\n
    \                 }\n                  default \"one-rate-two-color\";\n                  description\n
    \                   \"The policing type can be either one-rate,\n                     two-color
    (1R2C) or two-rate, three-color\n                     (2R3C).  By default, the
    policing type is\n                     'one-rate-two-color'.\";\n                }\n
    \               leaf byte-offset {\n                  type uint16;\n                  description\n
    \                   \"Number of bytes in the service frame header\n                     that
    are excluded from the QoS calculation\n                     (e.g., extra VLAN
    tags).\";\n                }\n                container frame-delay {\n                  choice
    flavor {\n                    case lowest {\n                      leaf use-lowest-latency
    {\n                        type empty;\n                        description\n
    \                         \"The traffic class should use the path\n                           with
    the lowest delay.\";\n                      }\n                    }\n                    case
    boundary {\n                      leaf delay-bound {\n                        type
    uint16;\n                        units \"milliseconds\";\n                        description\n
    \                         \"The traffic class should use a path\n                           with
    a defined maximum delay.\";\n                      }\n                    }\n
    \                   description\n                      \"Delay constraint on the
    traffic class.\";\n                  }\n                  description\n                    \"Delay
    constraint on the traffic class.\";\n                }\n                container
    frame-jitter {\n                  choice flavor {\n                    case lowest
    {\n                      leaf use-lowest-jitter {\n                        type
    empty;\n                        description\n                          \"The traffic
    class should use the path\n                           with the lowest jitter.\";\n
    \                     }\n                    }\n                    case boundary
    {\n                      leaf delay-bound {\n                        type uint32;\n
    \                       units \"microseconds\";\n                        description\n
    \                         \"The traffic class should use a path\n                           with
    a defined maximum jitter.\";\n                      }\n                    }\n
    \                   description\n                      \"Jitter constraint on
    the traffic class.\";\n                  }\n                  description\n                    \"Jitter
    constraint on the traffic class.\";\n                }\n                container
    frame-loss {\n                  leaf rate {\n                    type decimal64
    {\n                      fraction-digits 2;\n                      range \"0..100\";\n
    \                   }\n                    units \"percent\";\n                    description\n
    \                     \"Frame loss rate constraint on the traffic\n                       class.\";\n
    \                 }\n                  description\n                    \"Container
    for frame loss rate.\";\n                }\n                container bandwidth
    {\n                  leaf guaranteed-bw-percent {\n                    type decimal64
    {\n                      fraction-digits 5;\n                      range \"0..100\";\n
    \                   }\n                    units \"percent\";\n                    mandatory
    true;\n                    description\n                      \"Used to define
    the guaranteed bandwidth\n                       as a percentage of the available
    service\n                       bandwidth.\";\n                  }\n                  leaf
    end-to-end {\n                    type empty;\n                    description\n
    \                     \"Used if the bandwidth reservation\n                       must
    be done on the MPLS network too.\";\n                  }\n                  description\n
    \                   \"Bandwidth constraint on the traffic class.\";\n                }\n
    \               description\n                  \"List of CoS entries.\";\n              }\n
    \             description\n                \"Container for list of CoS entries.\";\n
    \           }\n          }\n        }\n        description\n          \"Qos profile
    configuration.\";\n      }\n      description\n        \"QoS configuration.\";\n
    \   }\n    description\n      \"Grouping that defines QoS parameters for a site.\";\n
    \ }\n  grouping site-service-mpls {\n    container carrierscarrier {\n      if-feature
    \"carrierscarrier\";\n      leaf signaling-type {\n        type identityref {\n
    \         base carrierscarrier-type;\n        }\n        default \"bgp\";\n        description\n
    \         \"CsC.  By default, the signaling type is 'bgp'.\";\n      }\n      description\n
    \       \"Container for CsC.\";\n    }\n    description\n      \"Grouping for
    CsC.\";\n  }\n  container l2vpn-svc {\n    container vpn-profiles {\n      container
    valid-provider-identifiers {\n        leaf-list cloud-identifier {\n          if-feature
    \"cloud-access\";\n          type string;\n          description\n            \"Identification
    of the public cloud service or\n             Internet service.  Local to each
    administration.\";\n        }\n        leaf-list qos-profile-identifier {\n          type
    string;\n          description\n            \"Identification of the QoS profile
    to be used.\n             Local to each administration.\";\n        }\n        leaf-list
    bfd-profile-identifier {\n          type string;\n          description\n            \"Identification
    of the SP BFD profile to be used.\n             Local to each administration.\";\n
    \       }\n        leaf-list remote-carrier-identifier {\n          type string;\n
    \         description\n            \"Identification of the remote carrier name
    to be used.\n             It can be an L2VPN partner, data-center SP, or\n             private
    CSP.  Local to each administration.\";\n        }\n        nacm:default-deny-write;\n
    \       description\n          \"Container for valid provider identifiers.\";\n
    \     }\n      description\n        \"Container for VPN profiles.\";\n    }\n
    \   container vpn-services {\n      list vpn-service {\n        key \"vpn-id\";\n
    \       leaf vpn-id {\n          type svc-id;\n          description\n            \"Defines
    a service identifier.\";\n        }\n        leaf vpn-svc-type {\n          type
    identityref {\n            base service-type;\n          }\n          default
    \"vpws\";\n          description\n            \"Service type.  By default, the
    service type is 'vpws'.\";\n        }\n        leaf customer-name {\n          type
    string;\n          description\n            \"Customer name.\";\n        }\n        leaf
    svc-topo {\n          type identityref {\n            base vpn-topology;\n          }\n
    \         default \"any-to-any\";\n          description\n            \"Defines
    the service topology, e.g.,\n             'any-to-any', 'hub-spoke'.\";\n        }\n
    \       container cloud-accesses {\n          if-feature \"cloud-access\";\n          list
    cloud-access {\n            key \"cloud-identifier\";\n            leaf cloud-identifier
    {\n              type leafref {\n                path \"/l2vpn-svc/vpn-profiles/\"\n
    \                  + \"valid-provider-identifiers\"\n                   + \"/cloud-identifier\";\n
    \             }\n              description\n                \"Identification of
    the cloud service.\n                 Local to each administration.\";\n            }\n
    \           choice list-flavor {\n              case permit-any {\n                leaf
    permit-any {\n                  type empty;\n                  description\n                    \"Allow
    all sites.\";\n                }\n              }\n              case deny-any-except
    {\n                leaf-list permit-site {\n                  type leafref {\n
    \                   path \"/l2vpn-svc/sites/site/site-id\";\n                  }\n
    \                 description\n                    \"Site ID to be authorized.\";\n
    \               }\n              }\n              case permit-any-except {\n                leaf-list
    deny-site {\n                  type leafref {\n                    path \"/l2vpn-svc/sites/site/site-id\";\n
    \                 }\n                  description\n                    \"Site
    ID to be denied.\";\n                }\n              }\n              description\n
    \               \"Choice for cloud access policy.\n                 By default,
    all sites in the L2VPN\n                 MUST be authorized to access the cloud.\";\n
    \           }\n            description\n              \"Cloud access configuration.\";\n
    \         }\n          description\n            \"Container for cloud access configurations.\";\n
    \       }\n        container frame-delivery {\n          if-feature \"bum\";\n
    \         container customer-tree-flavors {\n            leaf-list tree-flavor
    {\n              type identityref {\n                base multicast-tree-type;\n
    \             }\n              description\n                \"Type of tree to
    be used.\";\n            }\n            description\n              \"Types of
    trees used by the customer.\";\n          }\n          container bum-deliveries
    {\n            list bum-delivery {\n              key \"frame-type\";\n              leaf
    frame-type {\n                type identityref {\n                  base tf-type;\n
    \               }\n                description\n                  \"Type of frame
    delivery.  It supports unicast\n                   frame delivery, multicast frame
    delivery,\n                   and broadcast frame delivery.\";\n              }\n
    \             leaf delivery-mode {\n                type identityref {\n                  base
    frame-delivery-mode;\n                }\n                default \"unconditional\";\n
    \               description\n                  \"Defines the frame delivery mode\n
    \                  ('unconditional' (default), 'conditional',\n                   or
    'discard').  By default, service frames are\n                   unconditionally
    delivered to the destination site.\";\n              }\n              description\n
    \               \"List of frame delivery types and modes.\";\n            }\n
    \           description\n              \"Defines the frame delivery types and
    modes.\";\n          }\n          leaf multicast-gp-port-mapping {\n            type
    identityref {\n              base multicast-gp-address-mapping;\n            }\n
    \           mandatory true;\n            description\n              \"Describes
    the way in which each interface is\n               associated with the multicast
    group.\";\n          }\n          description\n            \"Multicast global
    parameters for the VPN service.\";\n        }\n        container extranet-vpns
    {\n          if-feature \"extranet-vpn\";\n          list extranet-vpn {\n            key
    \"vpn-id\";\n            leaf vpn-id {\n              type svc-id;\n              description\n
    \               \"Identifies the target VPN that the local VPN wants to\n                 access.\";\n
    \           }\n            leaf local-sites-role {\n              type identityref
    {\n                base site-role;\n              }\n              default \"any-to-any-role\";\n
    \             description\n                \"Describes the role of the local sites
    in the target\n                 VPN topology.  In the any-to-any VPN service topology,\n
    \                the local sites must have the same role, which will be\n                 'any-to-any-role'.
    \ In the Hub-and-Spoke VPN service\n                 topology or the Hub-and-Spoke-Disjoint
    VPN service\n                 topology, the local sites must have a Hub role or
    a\n                 Spoke role.\";\n            }\n            description\n              \"List
    of extranet VPNs to which the local VPN\n               is attached.\";\n          }\n
    \         description\n            \"Container for extranet VPN configurations.\";\n
    \       }\n        leaf ce-vlan-preservation {\n          type boolean;\n          mandatory
    true;\n          description\n            \"Preserves the CE-VLAN ID from ingress
    to egress, i.e.,\n             the CE-VLAN tag of the egress frame is identical
    to\n             that of the ingress frame that yielded this\n             egress
    service frame.  If all-to-one bundling within\n             a site is enabled,
    then preservation applies to all\n             ingress service frames.  If all-to-one
    bundling is\n             disabled, then preservation applies to tagged\n             ingress
    service frames having CE-VLAN IDs 1 through 4094.\";\n        }\n        leaf
    ce-vlan-cos-preservation {\n          type boolean;\n          mandatory true;\n
    \         description\n            \"CE VLAN CoS preservation.  The PCP bits in
    the CE-VLAN tag\n             of the egress frame are identical to those of the\n
    \            ingress frame that yielded this egress service frame.\";\n        }\n
    \       leaf carrierscarrier {\n          if-feature \"carrierscarrier\";\n          type
    boolean;\n          default \"false\";\n          description\n            \"The
    VPN is using CsC, and so MPLS is required.\";\n        }\n        description\n
    \         \"List of VPN services.\";\n      }\n      description\n        \"Container
    for VPN services.\";\n    }\n    container sites {\n      list site {\n        key
    \"site-id\";\n        leaf site-id {\n          type string;\n          description\n
    \           \"Identifier of the site.\";\n        }\n        leaf site-vpn-flavor
    {\n          type identityref {\n            base site-vpn-flavor;\n          }\n
    \         default \"site-vpn-flavor-single\";\n          description\n            \"Defines
    the way that the VPN multiplexing is\n             done, e.g., whether the site
    belongs to\n             a single VPN site or a multi-VPN site.  By\n             default,
    the site belongs to a single VPN.\";\n        }\n        container devices {\n
    \         when \"derived-from-or-self(../management/type, \"\n             + \"'l2vpn-svc:provider-managed')
    or \"\n             + \"derived-from-or-self(../management/type, \"\n             +
    \"'l2vpn-svc:co-managed')\" {\n            description\n              \"Applicable
    only for a provider-managed or\n               co-managed device.\";\n          }\n
    \         list device {\n            key \"device-id\";\n            leaf device-id
    {\n              type string;\n              description\n                \"Identifier
    for the device.\";\n            }\n            leaf location {\n              type
    leafref {\n                path \"../../../locations/location/location-id\";\n
    \             }\n              mandatory true;\n              description\n                \"Location
    of the device.\";\n            }\n            container management {\n              when
    \"derived-from-or-self(../../../management/type, \"\n                 + \"'l2vpn-svc:co-managed')\"
    {\n                description\n                  \"Applicable only for a co-managed
    device.\";\n              }\n              leaf transport {\n                type
    identityref {\n                  base address-family;\n                }\n                description\n
    \                 \"Transport protocol or address family\n                   used
    for management.\";\n              }\n              leaf address {\n                when
    '(../ transport)' {\n                  description\n                    \"If the
    address family is specified, then the\n                     address should also
    be specified.  If the\n                     transport is not specified, then the
    address\n                     should not be specified.\";\n                }\n
    \               type inet:ip-address;\n                description\n                  \"Management
    address.\";\n              }\n              description\n                \"Management
    configuration.  Applicable only for a\n                 co-managed device.\";\n
    \           }\n            description\n              \"List of devices requested
    by the customer.\";\n          }\n          description\n            \"Device
    configurations.\";\n        }\n        container management {\n          leaf
    type {\n            type identityref {\n              base management;\n            }\n
    \           mandatory true;\n            description\n              \"Management
    type of the connection.\";\n          }\n          description\n            \"Management
    configuration.\";\n        }\n        container locations {\n          list location
    {\n            key \"location-id\";\n            leaf location-id {\n              type
    string;\n              description\n                \"Location ID.\";\n            }\n
    \           leaf address {\n              type string;\n              description\n
    \               \"Address (number and street) of the site.\";\n            }\n
    \           leaf postal-code {\n              type string;\n              description\n
    \               \"Postal code of the site.  The format of 'postal-code'\n                 is
    similar to the 'PC' (postal code) label format\n                 defined in RFC
    4119.\";\n            }\n            leaf state {\n              type string;\n
    \             description\n                \"State (region) of the site.  This
    leaf can also be used\n                 to describe a region of a country that
    does not have\n                 states.\";\n            }\n            leaf city
    {\n              type string;\n              description\n                \"City
    of the site.\";\n            }\n            leaf country-code {\n              type
    string;\n              description\n                \"Country of the site.  The
    format of 'country-code' is\n                 similar to the 'country' label defined
    in RFC 4119.\";\n            }\n            description\n              \"List
    of locations.\";\n          }\n          description\n            \"Location of
    the site.\";\n        }\n        container site-diversity {\n          if-feature
    \"site-diversity\";\n          container groups {\n            list group {\n
    \             key \"group-id\";\n              leaf group-id {\n                type
    string;\n                description\n                  \"The group-id to which
    the site belongs.\";\n              }\n              description\n                \"List
    of group-ids.\";\n            }\n            description\n              \"Groups
    to which the site belongs.\n               All site network accesses will inherit
    those group\n               values.\";\n          }\n          description\n            \"The
    type of diversity constraint.\";\n        }\n        container vpn-policies {\n
    \         list vpn-policy {\n            key \"vpn-policy-id\";\n            leaf
    vpn-policy-id {\n              type string;\n              description\n                \"Unique
    identifier for the VPN policy.\";\n            }\n            list entries {\n
    \             key \"id\";\n              leaf id {\n                type string;\n
    \               description\n                  \"Unique identifier for the policy
    entry.\";\n              }\n              container filters {\n                list
    filter {\n                  key \"type\";\n                  ordered-by user;\n
    \                 leaf type {\n                    type identityref {\n                      base
    vpn-policy-filter-type;\n                    }\n                    description\n
    \                     \"Type of VPN policy filter.\";\n                  }\n                  leaf-list
    lan-tag {\n                    when \"derived-from-or-self(../type, \"\n                       +
    \"'l2vpn-svc:lan')\" {\n                      description\n                        \"Only
    applies when the VPN policy filter is a\n                         LAN tag filter.\";\n
    \                   }\n                    if-feature \"lan-tag\";\n                    type
    uint32;\n                    description\n                      \"List of Ethernet
    LAN tags to be matched.  An\n                       Ethernet LAN tag identifies
    a particular\n                       broadcast domain in a VPN.\";\n                  }\n
    \                 description\n                    \"List of filters used on the
    site.  This list can\n                     be augmented.\";\n                }\n
    \               description\n                  \"If a more granular VPN attachment
    is necessary,\n                   filtering can be used.  If used, it permits
    the\n                   splitting of site LANs among multiple VPNs.  The\n                   site
    LAN can be split based on either the LAN tag or\n                   the LAN prefix.
    \ If no filter is used, all the LANs\n                   will be part of the same
    VPNs with the same role.\";\n              }\n              list vpn {\n                key
    \"vpn-id\";\n                leaf vpn-id {\n                  type leafref {\n
    \                   path \"/l2vpn-svc/vpn-services/vpn-service/vpn-id\";\n                  }\n
    \                 description\n                    \"Reference to an L2VPN.\";\n
    \               }\n                leaf site-role {\n                  type identityref
    {\n                    base site-role;\n                  }\n                  default
    \"any-to-any-role\";\n                  description\n                    \"Role
    of the site in the L2VPN.\";\n                }\n                description\n
    \                 \"List of VPNs with which the LAN is associated.\";\n              }\n
    \             description\n                \"List of entries for an export policy.\";\n
    \           }\n            description\n              \"List of VPN policies.\";\n
    \         }\n          description\n            \"VPN policy.\";\n        }\n
    \       container service {\n          uses site-service-qos-profile;\n          uses
    site-service-mpls;\n          description\n            \"Service parameters on
    the attachment.\";\n        }\n        uses site-bum;\n        uses site-mac-loop-prevention;\n
    \       uses site-acl;\n        leaf actual-site-start {\n          type yang:date-and-time;\n
    \         config false;\n          description\n            \"This leaf is optional.
    \ It indicates the date and time\n             when the service at a particular
    site actually started.\";\n        }\n        leaf actual-site-stop {\n          type
    yang:date-and-time;\n          config false;\n          description\n            \"This
    leaf is optional.  It indicates the date and time\n             when the service
    at a particular site actually stopped.\";\n        }\n        leaf bundling-type
    {\n          type identityref {\n            base bundling-type;\n          }\n
    \         default \"one2one-bundling\";\n          description\n            \"Bundling
    type.  By default, each L2VPN\n             can be associated with only one\n
    \            CE-VLAN, i.e., one-to-one bundling is used.\";\n        }\n        leaf
    default-ce-vlan-id {\n          type uint32;\n          mandatory true;\n          description\n
    \           \"Default CE VLAN ID set at the site level.\";\n        }\n        container
    site-network-accesses {\n          list site-network-access {\n            key
    \"network-access-id\";\n            leaf network-access-id {\n              type
    string;\n              description\n                \"Identifier of network access.\";\n
    \           }\n            leaf remote-carrier-name {\n              when \"derived-from-or-self(../../../site-vpn-flavor,\"\n
    \                + \"'l2vpn-svc:site-vpn-flavor-nni')\" {\n                description\n
    \                 \"Relevant when the site's VPN flavor is\n                   'site-vpn-flavor-nni'.\";\n
    \             }\n              type leafref {\n                path \"/l2vpn-svc/vpn-profiles/\"\n
    \                  + \"valid-provider-identifiers\"\n                   + \"/remote-carrier-identifier\";\n
    \             }\n              description\n                \"Remote carrier name.
    \ The 'remote-carrier-name'\n                 parameter must be configured only
    when\n                 'site-vpn-flavor' is set to 'site-vpn-flavor-nni'.\n                 If
    it is not set, it indicates that the customer\n                 does not know
    the remote carrier's name\n                 beforehand.\";\n            }\n            leaf
    type {\n              type identityref {\n                base site-network-access-type;\n
    \             }\n              default \"point-to-point\";\n              description\n
    \               \"Describes the type of connection, e.g.,\n                 point-to-point
    or multipoint.\";\n            }\n            choice location-flavor {\n              case
    location {\n                when \"derived-from-or-self(../../management/type,
    \"\n                   + \"'l2vpn-svc:customer-managed')\" {\n                  description\n
    \                   \"Applicable only for a customer-managed device.\";\n                }\n
    \               leaf location-reference {\n                  type leafref {\n
    \                   path \"../../../locations/location/location-id\";\n                  }\n
    \                 description\n                    \"Location of the site-network-access.\";\n
    \               }\n              }\n              case device {\n                when
    \"derived-from-or-self(../../management/type, \"\n                   + \"'l2vpn-svc:provider-managed')
    or \"\n                   + \"derived-from-or-self(../../management/type, \"\n
    \                  + \"'l2vpn-svc:co-managed')\" {\n                  description\n
    \                   \"Applicable only for a provider-managed\n                     or
    co-managed device.\";\n                }\n                leaf device-reference
    {\n                  type leafref {\n                    path \"../../../devices/device/device-id\";\n
    \                 }\n                  description\n                    \"Identifier
    of the CE to use.\";\n                }\n              }\n              mandatory
    true;\n              description\n                \"Choice of how to describe
    the site's location.\";\n            }\n            container access-diversity
    {\n              if-feature \"site-diversity\";\n              container groups
    {\n                list group {\n                  key \"group-id\";\n                  leaf
    group-id {\n                    type string;\n                    description\n
    \                     \"Group-id to which the site belongs.\";\n                  }\n
    \                 description\n                    \"List of group-ids.\";\n                }\n
    \               description\n                  \"Groups to which the site or site-network-access\n
    \                  belongs.\";\n              }\n              container constraints
    {\n                list constraint {\n                  key \"constraint-type\";\n
    \                 leaf constraint-type {\n                    type identityref
    {\n                      base placement-diversity;\n                    }\n                    description\n
    \                     \"The type of diversity constraint.\";\n                  }\n
    \                 container target {\n                    choice target-flavor
    {\n                      default \"id\";\n                      case id {\n                        list
    group {\n                          key \"group-id\";\n                          leaf
    group-id {\n                            type string;\n                            description\n
    \                             \"The constraint will apply against this\n                               particular
    group-id.\";\n                          }\n                          description\n
    \                           \"List of groups.\";\n                        }\n
    \                     }\n                      case all-accesses {\n                        leaf
    all-other-accesses {\n                          type empty;\n                          description\n
    \                           \"The constraint will apply against all other\n                             site
    network accesses of this site.\";\n                        }\n                      }\n
    \                     case all-groups {\n                        leaf all-other-groups
    {\n                          type empty;\n                          description\n
    \                           \"The constraint will apply against all other\n                             groups
    the customer is managing.\";\n                        }\n                      }\n
    \                     description\n                        \"Choice for the group
    definition.\";\n                    }\n                    description\n                      \"The
    constraint will apply against\n                       this list of groups.\";\n
    \                 }\n                  description\n                    \"List
    of constraints.\";\n                }\n                description\n                  \"Constraints
    for placing this site network access.\";\n              }\n              description\n
    \               \"Diversity parameters.\";\n            }\n            container
    bearer {\n              container requested-type {\n                if-feature
    \"requested-type\";\n                leaf type {\n                  type string;\n
    \                 description\n                    \"Type of requested bearer:
    Ethernet, ATM, Frame\n                     Relay, IP Layer 2 transport, Frame
    Relay Data\n                     Link Connection Identifier (DLCI), SONET/SDH,\n
    \                    PPP.\";\n                }\n                leaf strict {\n
    \                 type boolean;\n                  default \"false\";\n                  description\n
    \                   \"Defines whether the requested type is a preference\n                     or
    a strict requirement.\";\n                }\n                description\n                  \"Container
    for requested types.\";\n              }\n              leaf always-on {\n                if-feature
    \"always-on\";\n                type boolean;\n                default \"true\";\n
    \               description\n                  \"Request for an 'always-on' access
    type.\n                   For example, this could mean no dial-in access\n                   type.\";\n
    \             }\n              leaf bearer-reference {\n                if-feature
    \"bearer-reference\";\n                type string;\n                description\n
    \                 \"An internal reference for the SP.\";\n              }\n              description\n
    \               \"Bearer-specific parameters.  To be augmented.\";\n            }\n
    \           container connection {\n              leaf encapsulation-type {\n
    \               type identityref {\n                  base encapsulation-type;\n
    \               }\n                default \"ethernet\";\n                description\n
    \                 \"Encapsulation type.  By default, the\n                   encapsulation
    type is set to 'ethernet'.\";\n              }\n              leaf eth-inf-type
    {\n                type identityref {\n                  base eth-inf-type;\n
    \               }\n                default \"untagged\";\n                description\n
    \                 \"Ethernet interface type.  By default, the\n                   Ethernet
    interface type is set to 'untagged'.\";\n              }\n              container
    tagged-interface {\n                leaf type {\n                  type identityref
    {\n                    base tagged-inf-type;\n                  }\n                  default
    \"priority-tagged\";\n                  description\n                    \"Tagged
    interface type.  By default,\n                     the type of the tagged interface
    is\n                     'priority-tagged'.\";\n                }\n                container
    dot1q-vlan-tagged {\n                  when \"derived-from-or-self(../type, \"\n
    \                    + \"'l2vpn-svc:dot1q')\" {\n                    description\n
    \                     \"Only applies when the type of the tagged\n                       interface
    is 'dot1q'.\";\n                  }\n                  if-feature \"dot1q\";\n
    \                 leaf tg-type {\n                    type identityref {\n                      base
    tag-type;\n                    }\n                    default \"c-vlan\";\n                    description\n
    \                     \"Tag type.  By default, the tag type is\n                       'c-vlan'.\";\n
    \                 }\n                  leaf cvlan-id {\n                    type
    uint16;\n                    mandatory true;\n                    description\n
    \                     \"VLAN identifier.\";\n                  }\n                  description\n
    \                   \"Tagged interface.\";\n                }\n                container
    priority-tagged {\n                  when \"derived-from-or-self(../type, \"\n
    \                    + \"'l2vpn-svc:priority-tagged')\" {\n                    description\n
    \                     \"Only applies when the type of the tagged\n                       interface
    is 'priority-tagged'.\";\n                  }\n                  leaf tag-type
    {\n                    type identityref {\n                      base tag-type;\n
    \                   }\n                    default \"c-vlan\";\n                    description\n
    \                     \"Tag type.  By default, the tag type is\n                       'c-vlan'.\";\n
    \                 }\n                  description\n                    \"Priority
    tagged.\";\n                }\n                container qinq {\n                  when
    \"derived-from-or-self(../type, \"\n                     + \"'l2vpn-svc:qinq')\"
    {\n                    description\n                      \"Only applies when
    the type of the tagged\n                       interface is 'qinq'.\";\n                  }\n
    \                 if-feature \"qinq\";\n                  leaf tag-type {\n                    type
    identityref {\n                      base tag-type;\n                    }\n                    default
    \"c-s-vlan\";\n                    description\n                      \"Tag type.
    \ By default, the tag type is\n                       'c-s-vlan'.\";\n                  }\n
    \                 leaf svlan-id {\n                    type uint16;\n                    mandatory
    true;\n                    description\n                      \"SVLAN identifier.\";\n
    \                 }\n                  leaf cvlan-id {\n                    type
    uint16;\n                    mandatory true;\n                    description\n
    \                     \"CVLAN identifier.\";\n                  }\n                  description\n
    \                   \"QinQ.\";\n                }\n                container qinany
    {\n                  when \"derived-from-or-self(../type, \"\n                     +
    \"'l2vpn-svc:qinany')\" {\n                    description\n                      \"Only
    applies when the type of the tagged\n                       interface is 'qinany'.\";\n
    \                 }\n                  if-feature \"qinany\";\n                  leaf
    tag-type {\n                    type identityref {\n                      base
    tag-type;\n                    }\n                    default \"s-vlan\";\n                    description\n
    \                     \"Tag type.  By default, the tag type is\n                       's-vlan'.\";\n
    \                 }\n                  leaf svlan-id {\n                    type
    uint16;\n                    mandatory true;\n                    description\n
    \                     \"SVLAN ID.\";\n                  }\n                  description\n
    \                   \"Container for QinAny.\";\n                }\n                container
    vxlan {\n                  when \"derived-from-or-self(../type, \"\n                     +
    \"'l2vpn-svc:vxlan')\" {\n                    description\n                      \"Only
    applies when the type of the tagged\n                       interface is 'vxlan'.\";\n
    \                 }\n                  if-feature \"vxlan\";\n                  leaf
    vni-id {\n                    type uint32;\n                    mandatory true;\n
    \                   description\n                      \"VXLAN Network Identifier
    (VNI).\";\n                  }\n                  leaf peer-mode {\n                    type
    identityref {\n                      base vxlan-peer-mode;\n                    }\n
    \                   default \"static-mode\";\n                    description\n
    \                     \"Specifies the VXLAN access mode.  By default,\n                       the
    peer mode is set to 'static-mode'.\";\n                  }\n                  list
    peer-list {\n                    key \"peer-ip\";\n                    leaf peer-ip
    {\n                      type inet:ip-address;\n                      description\n
    \                       \"Peer IP.\";\n                    }\n                    description\n
    \                     \"List of peer IP addresses.\";\n                  }\n                  description\n
    \                   \"QinQ.\";\n                }\n                description\n
    \                 \"Container for tagged interfaces.\";\n              }\n              container
    untagged-interface {\n                leaf speed {\n                  type uint32;\n
    \                 units \"mbps\";\n                  default \"10\";\n                  description\n
    \                   \"Port speed.\";\n                }\n                leaf
    mode {\n                  type neg-mode;\n                  default \"auto-neg\";\n
    \                 description\n                    \"Negotiation mode.\";\n                }\n
    \               leaf phy-mtu {\n                  type uint32;\n                  units
    \"bytes\";\n                  description\n                    \"PHY MTU.\";\n
    \               }\n                leaf lldp {\n                  type boolean;\n
    \                 default \"false\";\n                  description\n                    \"LLDP.
    \ Indicates that LLDP is supported.\";\n                }\n                container
    oam-802.3ah-link {\n                  if-feature \"oam-3ah\";\n                  leaf
    enabled {\n                    type boolean;\n                    default \"false\";\n
    \                   description\n                      \"Indicates whether or
    not to support\n                       OAM 802.3ah links.\";\n                  }\n
    \                 description\n                    \"Container for OAM 802.3ah
    links.\";\n                }\n                leaf uni-loop-prevention {\n                  type
    boolean;\n                  default \"false\";\n                  description\n
    \                   \"If this leaf is set to 'true', then the port\n                     automatically
    goes down when a physical\n                     loopback is detected.\";\n                }\n
    \               description\n                  \"Container of untagged interface
    attribute\n                   configurations.\";\n              }\n              container
    lag-interfaces {\n                if-feature \"lag-interface\";\n                list
    lag-interface {\n                  key \"index\";\n                  leaf index
    {\n                    type string;\n                    description\n                      \"LAG
    interface index.\";\n                  }\n                  container lacp {\n
    \                   if-feature \"lacp\";\n                    leaf enabled {\n
    \                     type boolean;\n                      default \"false\";\n
    \                     description\n                        \"LACP on/off.  By
    default, LACP is disabled.\";\n                    }\n                    leaf
    mode {\n                      type neg-mode;\n                      description\n
    \                       \"LACP mode.  LACP modes have active mode and\n                         passive
    mode ('false').  'Active mode' means\n                         initiating the
    auto-speed negotiation and\n                         trying to form an Ethernet
    channel with the\n                         other end.  'Passive mode' means not
    initiating\n                         the negotiation but responding to LACP packets\n
    \                        initiated by the other end (e.g., full duplex\n                         or
    half duplex).\";\n                    }\n                    leaf speed {\n                      type
    uint32;\n                      units \"mbps\";\n                      default
    \"10\";\n                      description\n                        \"LACP speed.
    \ By default, the LACP speed is 10\n                         Mbps.\";\n                    }\n
    \                   leaf mini-link-num {\n                      type uint32;\n
    \                     description\n                        \"Defines the minimum
    number of links that must\n                         be active before the aggregating
    link is put\n                         into service.\";\n                    }\n
    \                   leaf system-priority {\n                      type uint16;\n
    \                     default \"32768\";\n                      description\n
    \                       \"Indicates the LACP priority for the system.\n                         The
    range is from 0 to 65535.\n                         The default is 32768.\";\n
    \                   }\n                    container micro-bfd {\n                      if-feature
    \"micro-bfd\";\n                      leaf enabled {\n                        type
    enumeration {\n                          enum on {\n                            description\n
    \                             \"Micro-bfd on.\";\n                          }\n
    \                         enum off {\n                            description\n
    \                             \"Micro-bfd off.\";\n                          }\n
    \                       }\n                        default \"off\";\n                        description\n
    \                         \"Micro-BFD on/off.  By default, micro-BFD\n                           is
    set to 'off'.\";\n                      }\n                      leaf interval
    {\n                        type uint32;\n                        units \"milliseconds\";\n
    \                       description\n                          \"BFD interval.\";\n
    \                     }\n                      leaf hold-timer {\n                        type
    uint32;\n                        units \"milliseconds\";\n                        description\n
    \                         \"BFD hold timer.\";\n                      }\n                      description\n
    \                       \"Container of micro-BFD configurations.\";\n                    }\n
    \                   container bfd {\n                      if-feature \"bfd\";\n
    \                     leaf enabled {\n                        type boolean;\n
    \                       default \"false\";\n                        description\n
    \                         \"BFD activation.  By default, BFD is not\n                           activated.\";\n
    \                     }\n                      choice holdtime {\n                        default
    \"fixed\";\n                        case profile {\n                          leaf
    profile-name {\n                            type leafref {\n                              path
    \"/l2vpn-svc/vpn-profiles/\"\n                                 + \"valid-provider-identifiers\"\n
    \                                + \"/bfd-profile-identifier\";\n                            }\n
    \                           description\n                              \"SP well-known
    profile.\";\n                          }\n                          description\n
    \                           \"SP well-known profile.\";\n                        }\n
    \                       case fixed {\n                          leaf fixed-value
    {\n                            type uint32;\n                            units
    \"milliseconds\";\n                            description\n                              \"Expected
    hold time expressed in\n                               milliseconds.\";\n                          }\n
    \                       }\n                        description\n                          \"Choice
    for the hold-time flavor.\";\n                      }\n                      description\n
    \                       \"Container for BFD.\";\n                    }\n                    container
    member-links {\n                      list member-link {\n                        key
    \"name\";\n                        leaf name {\n                          type
    string;\n                          description\n                            \"Member
    link name.\";\n                        }\n                        leaf speed {\n
    \                         type uint32;\n                          units \"mbps\";\n
    \                         default \"10\";\n                          description\n
    \                           \"Port speed.\";\n                        }\n                        leaf
    mode {\n                          type neg-mode;\n                          default
    \"auto-neg\";\n                          description\n                            \"Negotiation
    mode.\";\n                        }\n                        leaf link-mtu {\n
    \                         type uint32;\n                          units \"bytes\";\n
    \                         description\n                            \"Link MTU
    size.\";\n                        }\n                        container oam-802.3ah-link
    {\n                          if-feature \"oam-3ah\";\n                          leaf
    enabled {\n                            type boolean;\n                            default
    \"false\";\n                            description\n                              \"Indicates
    whether OAM 802.3ah links are\n                               supported.\";\n
    \                         }\n                          description\n                            \"Container
    for OAM 802.3ah links.\";\n                        }\n                        description\n
    \                         \"Member link.\";\n                      }\n                      description\n
    \                       \"Container of the member link list.\";\n                    }\n
    \                   leaf flow-control {\n                      type boolean;\n
    \                     default \"false\";\n                      description\n
    \                       \"Flow control.  Indicates whether flow control\n                         is
    supported.\";\n                    }\n                    leaf lldp {\n                      type
    boolean;\n                      default \"false\";\n                      description\n
    \                       \"LLDP.  Indicates whether LLDP is supported.\";\n                    }\n
    \                   description\n                      \"LACP.\";\n                  }\n
    \                 description\n                    \"List of LAG interfaces.\";\n
    \               }\n                description\n                  \"Container
    of LAG interface attribute\n                   configurations.\";\n              }\n
    \             list cvlan-id-to-svc-map {\n                key \"svc-id\";\n                leaf
    svc-id {\n                  type leafref {\n                    path \"/l2vpn-svc/vpn-services/vpn-service/vpn-id\";\n
    \                 }\n                  description\n                    \"VPN
    service identifier.\";\n                }\n                list cvlan-id {\n                  key
    \"vid\";\n                  leaf vid {\n                    type uint16;\n                    description\n
    \                     \"CVLAN ID.\";\n                  }\n                  description\n
    \                   \"List of CVLAN-ID-to-SVC-map configurations.\";\n                }\n
    \               description\n                  \"List of CVLAN-ID-to-L2VPN-service-map\n
    \                  configurations.\";\n              }\n              container
    l2cp-control {\n                if-feature \"l2cp-control\";\n                leaf
    stp-rstp-mstp {\n                  type control-mode;\n                  description\n
    \                   \"STP / Rapid STP (RSTP) / Multiple STP (MSTP)\n                     protocol
    type applicable to all sites.\";\n                }\n                leaf pause
    {\n                  type control-mode;\n                  description\n                    \"Pause
    protocol type applicable to all sites.\";\n                }\n                leaf
    lacp-lamp {\n                  type control-mode;\n                  description\n
    \                   \"LACP / Link Aggregation Marker Protocol (LAMP).\";\n                }\n
    \               leaf link-oam {\n                  type control-mode;\n                  description\n
    \                   \"Link OAM.\";\n                }\n                leaf esmc
    {\n                  type control-mode;\n                  description\n                    \"Ethernet
    Synchronization Messaging Channel\n                     (ESMC).\";\n                }\n
    \               leaf l2cp-802.1x {\n                  type control-mode;\n                  description\n
    \                   \"IEEE 802.1x.\";\n                }\n                leaf
    e-lmi {\n                  type control-mode;\n                  description\n
    \                   \"E-LMI.\";\n                }\n                leaf lldp
    {\n                  type boolean;\n                  description\n                    \"LLDP
    protocol type applicable to all sites.\";\n                }\n                leaf
    ptp-peer-delay {\n                  type control-mode;\n                  description\n
    \                   \"Precision Time Protocol (PTP) peer delay.\";\n                }\n
    \               leaf garp-mrp {\n                  type control-mode;\n                  description\n
    \                   \"GARP/MRP.\";\n                }\n                description\n
    \                 \"Container of L2CP control configurations.\";\n              }\n
    \             container oam {\n                if-feature \"ethernet-oam\";\n
    \               leaf md-name {\n                  type string;\n                  mandatory
    true;\n                  description\n                    \"Maintenance domain
    name.\";\n                }\n                leaf md-level {\n                  type
    uint16 {\n                    range \"0..255\";\n                  }\n                  mandatory
    true;\n                  description\n                    \"Maintenance domain
    level.  The level may be\n                     restricted in certain protocols
    (e.g.,\n                     protocols in Layer 0 to Layer 7).\";\n                }\n
    \               list cfm-8021-ag {\n                  if-feature \"cfm\";\n                  key
    \"maid\";\n                  leaf maid {\n                    type string;\n                    mandatory
    true;\n                    description\n                      \"Identifies a Maintenance
    Association (MA).\";\n                  }\n                  leaf mep-id {\n                    type
    uint32;\n                    description\n                      \"Local Maintenance
    Entity Group End Point (MEP)\n                       ID.  The non-existence of
    this leaf means\n                       that no defects are to be reported.\";\n
    \                 }\n                  leaf mep-level {\n                    type
    uint32;\n                    description\n                      \"Defines the
    MEP level.  The non-existence of this\n                       leaf means that
    no defects are to be reported.\";\n                  }\n                  leaf
    mep-up-down {\n                    type enumeration {\n                      enum
    up {\n                        description\n                          \"MEP up.\";\n
    \                     }\n                      enum down {\n                        description\n
    \                         \"MEP down.\";\n                      }\n                    }\n
    \                   default \"up\";\n                    description\n                      \"MEP
    up/down.  By default, MEP up is used.\n                       The non-existence
    of this leaf means that\n                       no defects are to be reported.\";\n
    \                 }\n                  leaf remote-mep-id {\n                    type
    uint32;\n                    description\n                      \"Remote MEP ID.
    \ The non-existence of this leaf\n                       means that no defects
    are to be reported.\";\n                  }\n                  leaf cos-for-cfm-pdus
    {\n                    type uint32;\n                    description\n                      \"CoS
    for CFM PDUs.  The non-existence of this leaf\n                       means that
    no defects are to be reported.\";\n                  }\n                  leaf
    ccm-interval {\n                    type uint32;\n                    units \"milliseconds\";\n
    \                   default \"10000\";\n                    description\n                      \"CCM
    interval.  By default, the CCM interval is\n                       10,000 milliseconds
    (10 seconds).\";\n                  }\n                  leaf ccm-holdtime {\n
    \                   type uint32;\n                    units \"milliseconds\";\n
    \                   default \"35000\";\n                    description\n                      \"CCM
    hold time.  By default, the CCM hold time\n                       is 3.5 times
    the CCM interval.\";\n                  }\n                  leaf alarm-priority-defect
    {\n                    type identityref {\n                      base fault-alarm-defect-type;\n
    \                   }\n                    default \"remote-invalid-ccm\";\n                    description\n
    \                     \"The lowest-priority defect that is\n                       allowed
    to generate a fault alarm.  By default,\n                       'fault-alarm-defect-type'
    is set to\n                       'remote-invalid-ccm'.  The non-existence of\n
    \                      this leaf means that no defects are\n                       to
    be reported.\";\n                  }\n                  leaf ccm-p-bits-pri {\n
    \                   type ccm-priority-type;\n                    description\n
    \                     \"The priority parameter for CCMs transmitted by\n                       the
    MEP.  The non-existence of this leaf means\n                       that no defects
    are to be reported.\";\n                  }\n                  description\n                    \"List
    of 802.1ag CFM attributes.\";\n                }\n                list y-1731
    {\n                  if-feature \"y-1731\";\n                  key \"maid\";\n
    \                 leaf maid {\n                    type string;\n                    mandatory
    true;\n                    description\n                      \"Identifies an
    MA.\";\n                  }\n                  leaf mep-id {\n                    type
    uint32;\n                    description\n                      \"Local MEP ID.
    \ The non-existence of this leaf\n                       means that no measurements
    are to be reported.\";\n                  }\n                  leaf type {\n                    type
    identityref {\n                      base pm-type;\n                    }\n                    default
    \"delay\";\n                    description\n                      \"Performance-monitoring
    types.  By default, the\n                       performance-monitoring type is
    set to 'delay'.\n                       The non-existence of this leaf means that
    no\n                       measurements are to be reported.\";\n                  }\n
    \                 leaf remote-mep-id {\n                    type uint32;\n                    description\n
    \                     \"Remote MEP ID.  The non-existence of this\n                       leaf
    means that no measurements are to be\n                       reported.\";\n                  }\n
    \                 leaf message-period {\n                    type uint32;\n                    units
    \"milliseconds\";\n                    default \"10000\";\n                    description\n
    \                     \"Defines the interval between Y.1731\n                       performance-monitoring
    messages.  The message\n                       period is expressed in milliseconds.\";\n
    \                 }\n                  leaf measurement-interval {\n                    type
    uint32;\n                    units \"seconds\";\n                    description\n
    \                     \"Specifies the measurement interval for\n                       statistics.
    \ The measurement interval is\n                       expressed in seconds.\";\n
    \                 }\n                  leaf cos {\n                    type uint32;\n
    \                   description\n                      \"CoS.  The non-existence
    of this leaf means that\n                       no measurements are to be reported.\";\n
    \                 }\n                  leaf loss-measurement {\n                    type
    boolean;\n                    default \"false\";\n                    description\n
    \                     \"Indicates whether or not to enable loss\n                       measurement.
    \ By default, loss\n                       measurement is not enabled.\";\n                  }\n
    \                 leaf synthetic-loss-measurement {\n                    type
    boolean;\n                    default \"false\";\n                    description\n
    \                     \"Indicates whether or not to enable synthetic loss\n                       measurement.
    \ By default, synthetic loss\n                       measurement is not enabled.\";\n
    \                 }\n                  container delay-measurement {\n                    leaf
    enable-dm {\n                      type boolean;\n                      default
    \"false\";\n                      description\n                        \"Indicates
    whether or not to enable delay\n                         measurement.  By default,
    delay measurement\n                         is not enabled.\";\n                    }\n
    \                   leaf two-way {\n                      type boolean;\n                      default
    \"false\";\n                      description\n                        \"Indicates
    whether delay measurement is two-way\n                         ('true') or one-way
    ('false').  By default,\n                         one-way measurement is enabled.\";\n
    \                   }\n                    description\n                      \"Container
    for delay measurement.\";\n                  }\n                  leaf frame-size
    {\n                    type uint32;\n                    units \"bytes\";\n                    description\n
    \                     \"Frame size.  The non-existence of this leaf\n                       means
    that no measurements are to be reported.\";\n                  }\n                  leaf
    session-type {\n                    type enumeration {\n                      enum
    proactive {\n                        description\n                          \"Proactive
    mode.\";\n                      }\n                      enum on-demand {\n                        description\n
    \                         \"On-demand mode.\";\n                      }\n                    }\n
    \                   default \"on-demand\";\n                    description\n
    \                     \"Session type.  By default, the session type\n                       is
    'on-demand'.  The non-existence of this\n                       leaf means that
    no measurements are to be\n                       reported.\";\n                  }\n
    \                 description\n                    \"List of configured Y-1731
    instances.\";\n                }\n                description\n                  \"Container
    for Ethernet Service OAM.\";\n              }\n              description\n                \"Container
    for connection requirements.\";\n            }\n            container availability
    {\n              leaf access-priority {\n                type uint32;\n                default
    \"100\";\n                description\n                  \"Access priority.  The
    higher the access-priority\n                   value, the higher the preference
    will be for the\n                   access in question.\";\n              }\n
    \             choice redundancy-mode {\n                case single-active {\n
    \                 leaf single-active {\n                    type empty;\n                    description\n
    \                     \"Single-active mode.\";\n                  }\n                  description\n
    \                   \"In single-active mode, only one node forwards\n                     traffic
    to and from the Ethernet segment.\";\n                }\n                case
    all-active {\n                  leaf all-active {\n                    type empty;\n
    \                   description\n                      \"All-active mode.\";\n
    \                 }\n                  description\n                    \"In all-active
    mode, all nodes can forward\n                     traffic.\";\n                }\n
    \               description\n                  \"Redundancy mode choice.\";\n
    \             }\n              description\n                \"Container of available
    optional configurations.\";\n            }\n            container vpn-attachment
    {\n              choice attachment-flavor {\n                case vpn-id {\n                  leaf
    vpn-id {\n                    type leafref {\n                      path \"/l2vpn-svc/vpn-services/vpn-service/vpn-id\";\n
    \                   }\n                    description\n                      \"Reference
    to an L2VPN.  Referencing a vpn-id\n                       provides an easy way
    to attach a particular\n                       logical access to a VPN.  In this
    case,\n                       the vpn-id must be configured.\";\n                  }\n
    \                 leaf site-role {\n                    type identityref {\n                      base
    site-role;\n                    }\n                    default \"any-to-any-role\";\n
    \                   description\n                      \"Role of the site in the
    L2VPN.  When referencing\n                       a vpn-id, the site-role setting
    must be added to\n                       express the role of the site in the target
    VPN\n                       service topology.\";\n                  }\n                }\n
    \               case vpn-policy-id {\n                  leaf vpn-policy-id {\n
    \                   type leafref {\n                      path \"../../../../vpn-policies/vpn-policy/\"\n
    \                        + \"vpn-policy-id\";\n                    }\n                    description\n
    \                     \"Reference to a VPN policy.\";\n                  }\n                }\n
    \               mandatory true;\n                description\n                  \"Choice
    for the VPN attachment flavor.\";\n              }\n              description\n
    \               \"Defines the VPN attachment of a site.\";\n            }\n            container
    service {\n              container svc-bandwidth {\n                if-feature
    \"input-bw\";\n                list bandwidth {\n                  key \"direction
    type\";\n                  leaf direction {\n                    type identityref
    {\n                      base bw-direction;\n                    }\n                    description\n
    \                     \"Indicates the bandwidth direction.  It can be\n                       the
    bandwidth download direction from the SP to\n                       the site or
    the bandwidth upload direction from\n                       the site to the SP.\";\n
    \                 }\n                  leaf type {\n                    type identityref
    {\n                      base bw-type;\n                    }\n                    description\n
    \                     \"Bandwidth type.  By default, the bandwidth type\n                       is
    set to 'bw-per-cos'.\";\n                  }\n                  leaf cos-id {\n
    \                   when \"derived-from-or-self(../type, \"\n                       +
    \"'l2vpn-svc:bw-per-cos')\" {\n                      description\n                        \"Relevant
    when the bandwidth type is set to\n                         'bw-per-cos'.\";\n
    \                   }\n                    type uint8;\n                    description\n
    \                     \"Identifier of the CoS, indicated by DSCP or a\n                       CE-VLAN
    CoS (802.1p) value in the service frame.\n                       If the bandwidth
    type is set to 'bw-per-cos',\n                       the CoS ID MUST also be specified.\";\n
    \                 }\n                  leaf vpn-id {\n                    when
    \"derived-from-or-self(../type, \"\n                       + \"'l2vpn-svc:bw-per-svc')\"
    {\n                      description\n                        \"Relevant when
    the bandwidth type is\n                         set as bandwidth per VPN service.\";\n
    \                   }\n                    type svc-id;\n                    description\n
    \                     \"Identifies the target VPN.  If the bandwidth\n                       type
    is set as bandwidth per VPN service, the\n                       vpn-id MUST be
    specified.\";\n                  }\n                  leaf cir {\n                    type
    uint64;\n                    units \"bps\";\n                    mandatory true;\n
    \                   description\n                      \"Committed Information
    Rate.  The maximum number\n                       of bits that a port can receive
    or send over\n                       an interface in one second.\";\n                  }\n
    \                 leaf cbs {\n                    type uint64;\n                    units
    \"bps\";\n                    mandatory true;\n                    description\n
    \                     \"Committed Burst Size (CBS).  Controls the bursty\n                       nature
    of the traffic.  Traffic that does not\n                       use the configured
    Committed Information Rate\n                       (CIR) accumulates credits until
    the credits\n                       reach the configured CBS.\";\n                  }\n
    \                 leaf eir {\n                    type uint64;\n                    units
    \"bps\";\n                    description\n                      \"Excess Information
    Rate (EIR), i.e., excess frame\n                       delivery allowed that is
    not subject to an SLA.\n                       The traffic rate can be limited
    by the EIR.\";\n                  }\n                  leaf ebs {\n                    type
    uint64;\n                    units \"bps\";\n                    description\n
    \                     \"Excess Burst Size (EBS).  The bandwidth available\n                       for
    burst traffic from the EBS is subject to the\n                       amount of
    bandwidth that is accumulated during\n                       periods when traffic
    allocated by the EIR\n                       policy is not used.\";\n                  }\n
    \                 leaf pir {\n                    type uint64;\n                    units
    \"bps\";\n                    description\n                      \"Peak Information
    Rate, i.e., maximum frame\n                       delivery allowed.  It is equal
    to or less\n                       than the sum of the CIR and the EIR.\";\n                  }\n
    \                 leaf pbs {\n                    type uint64;\n                    units
    \"bps\";\n                    description\n                      \"Peak Burst
    Size.  It is measured in bytes per\n                       second.\";\n                  }\n
    \                 description\n                    \"List of bandwidth values
    (e.g., per CoS,\n                     per vpn-id).\";\n                }\n                description\n
    \                 \"From the customer site's perspective, the service\n                   input/output
    bandwidth of the connection or\n                   download/upload bandwidth from
    the SP/site\n                   to the site/SP.\";\n              }\n              leaf
    svc-mtu {\n                type uint16;\n                units \"bytes\";\n                mandatory
    true;\n                description\n                  \"SVC MTU.  It is also known
    as the maximum\n                   transmission unit or maximum frame size.  When\n
    \                  a frame is larger than the MTU, it is broken\n                   down,
    or fragmented, into smaller pieces by\n                   the network protocol
    to accommodate the MTU\n                   of the network.  If CsC is enabled,\n
    \                  the requested svc-mtu leaf will refer to the\n                   MPLS
    MTU and not to the link MTU.\";\n              }\n              uses site-service-qos-profile;\n
    \             uses site-service-mpls;\n              description\n                \"Container
    for services.\";\n            }\n            uses site-bum;\n            uses
    site-mac-loop-prevention;\n            uses site-acl;\n            container mac-addr-limit
    {\n              if-feature \"mac-addr-limit\";\n              leaf limit-number
    {\n                type uint16;\n                default \"2\";\n                description\n
    \                 \"Maximum number of MAC addresses learned from\n                   the
    subscriber for a single service instance.\n                   The default allowed
    maximum number of MAC\n                   addresses is 2.\";\n              }\n
    \             leaf time-interval {\n                type uint32;\n                units
    \"seconds\";\n                default \"300\";\n                description\n
    \                 \"The aging time of the MAC address.  By default,\n                   the
    aging time is set to 300 seconds.\";\n              }\n              leaf action
    {\n                type identityref {\n                  base mac-action;\n                }\n
    \               default \"warning\";\n                description\n                  \"Specifies
    the action taken when the upper limit is\n                   exceeded: drop the
    packet, flood the packet, or\n                   simply send a warning log message.
    \ By default,\n                   the action is set to 'warning'.\";\n              }\n
    \             description\n                \"Container of MAC address limit configurations.\";\n
    \           }\n            description\n              \"List of site network accesses.\";\n
    \         }\n          description\n            \"Container of port configurations.\";\n
    \       }\n        description\n          \"List of sites.\";\n      }\n      description\n
    \       \"Container of site configurations.\";\n    }\n    description\n      \"Container
    for L2VPN services.\";\n  }\n"
  - '}

    '
  - '<CODE ENDS>

    '
  title: 8.  YANG Module
- contents:
  - "9.  Security Considerations\n   The YANG module specified in this document defines
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The NETCONF
    access control model [RFC8341] provides the means to\n   restrict access for particular
    NETCONF or RESTCONF users to a\n   preconfigured subset of all available NETCONF
    or RESTCONF protocol\n   operations and content.\n   There are a number of data
    nodes defined in this YANG module that are\n   writable/creatable/deletable (i.e.,
    config true, which is the\n   default).  These data nodes may be considered sensitive
    or vulnerable\n   in some network environments.  Write operations (e.g., edit-config)\n
    \  to these data nodes without proper protection can have a negative\n   effect
    on network operations.  These are the subtrees and data nodes\n   and their sensitivity/vulnerability:\n
    \  o  /l2vpn-svc/vpn-services/vpn-service\n      The entries in the list above
    include all of the VPN service\n      configurations to which the customer subscribes
    and will use to\n      indirectly create or modify the PE and CE device configurations.\n
    \     Unexpected changes to these entries could lead to service\n      disruptions
    and/or network misbehavior.\n   o  /l2vpn-svc/sites/site\n      The entries in
    the list above include the customer site\n      configurations.  As noted in the
    previous paragraph, unexpected\n      changes to these entries could lead to service
    disruptions and/or\n      network misbehavior.\n   Some of the readable data nodes
    in this YANG module may be considered\n   sensitive or vulnerable in some network
    environments.  It is thus\n   important to control read access (e.g., via get,
    get-config, or\n   notification) to these data nodes.  These are the subtrees
    and data\n   nodes and their sensitivity/vulnerability:\n   o  /l2vpn-svc/vpn-services/vpn-service\n
    \  o  /l2vpn-svc/sites/site\n   The entries in the lists above include customer-proprietary
    or\n   confidential information, e.g., customer name, site location,\n   services
    to which the customer subscribes.\n   When an SP collaborates with multiple customers,
    it has to ensure\n   that a given customer can only view and modify its (the customer's)\n
    \  own service information.\n   The data model defines some security parameters
    that can be extended\n   via augmentation as part of the customer service request;
    those\n   parameters are described in Sections 5.12 and 5.13.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   IANA has assigned a new URI from the \"IETF XML
    Registry\" [RFC3688].\n      URI: urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\n
    \     Registrant Contact: The IESG\n      XML: N/A; the requested URI is an XML
    namespace\n   IANA has assigned a new YANG module name in the \"YANG Module Names\"\n
    \  registry [RFC6020].\n      name: ietf-l2vpn-svc\n      namespace: urn:ietf:params:xml:ns:yang:ietf-l2vpn-svc\n
    \     prefix: l2vpn-svc\n      reference: RFC 8466\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n              Networks
      (VPNs)\", RFC 4364, DOI 10.17487/RFC4364, February\n              2006, <https://www.rfc-editor.org/info/rfc4364>.\n
      \  [RFC4761]  Kompella, K., Ed. and Y. Rekhter, Ed., \"Virtual Private\n              LAN
      Service (VPLS) Using BGP for Auto-Discovery and\n              Signaling\",
      RFC 4761, DOI 10.17487/RFC4761, January 2007,\n              <https://www.rfc-editor.org/info/rfc4761>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6073]
      \ Martini, L., Metz, C., Nadeau, T., Bocci, M., and M.\n              Aissaoui,
      \"Segmented Pseudowire\", RFC 6073,\n              DOI 10.17487/RFC6073, January
      2011,\n              <https://www.rfc-editor.org/info/rfc6073>.\n   [RFC6074]
      \ Rosen, E., Davie, B., Radoaca, V., and W. Luo,\n              \"Provisioning,
      Auto-Discovery, and Signaling in Layer 2\n              Virtual Private Networks
      (L2VPNs)\", RFC 6074,\n              DOI 10.17487/RFC6074, January 2011,\n              <https://www.rfc-editor.org/info/rfc6074>.\n
      \  [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC6991]  Schoenwaelder, J., Ed., \"Common YANG Data Types\",\n              RFC
      6991, DOI 10.17487/RFC6991, July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n
      \  [RFC7432]  Sajassi, A., Ed., Aggarwal, R., Bitar, N., Isaac, A.,\n              Uttaro,
      J., Drake, J., and W. Henderickx, \"BGP MPLS-Based\n              Ethernet VPN\",
      RFC 7432, DOI 10.17487/RFC7432, February\n              2015, <https://www.rfc-editor.org/info/rfc7432>.\n
      \  [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n
      \             RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n
      \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8214]  Boutros, S., Sajassi,
      A., Salam, S., Drake, J., and J.\n              Rabadan, \"Virtual Private Wire
      Service Support in Ethernet\n              VPN\", RFC 8214, DOI 10.17487/RFC8214,
      August 2017,\n              <https://www.rfc-editor.org/info/rfc8214>.\n   [RFC8341]
      \ Bierman, A. and M. Bjorklund, \"Network Configuration\n              Access
      Control Model\", STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March
      2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8342]
      \ Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and
      R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\",
      RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n   [W3C.REC-xml-20081126]\n
      \             Bray, T., Paoli, J., Sperberg-McQueen, M., Maler, E., and\n              F.
      Yergeau, \"Extensible Markup Language (XML) 1.0 (Fifth\n              Edition)\",
      World Wide Web Consortium Recommendation\n              REC-xml-20081126, November
      2008,\n              <https://www.w3.org/TR/2008/REC-xml-20081126>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [EVPN-YANG]\n              Brissette, P.,
      Ed., Shah, H., Ed., Chen, I., Ed., Hussain,\n              I., Ed., Tiruveedhula,
      K., Ed., and J. Rabadan, Ed., \"Yang\n              Data Model for EVPN\", Work
      in Progress, draft-ietf-bess-\n              evpn-yang-05, February 2018.\n
      \  [IEEE-802-1ag]\n              IEEE, \"802.1ag - 2007 - IEEE Standard for
      Local and\n              Metropolitan Area Networks - Virtual Bridged Local
      Area\n              Networks Amendment 5: Connectivity Fault Management\",\n
      \             DOI 10.1109/IEEESTD.2007.4431836.\n   [IEEE-802-1D]\n              IEEE,
      \"802.1D-2004 - IEEE Standard for Local and\n              metropolitan area
      networks: Media Access Control (MAC)\n              Bridges\", DOI 10.1109/IEEESTD.2004.94569.\n
      \  [IEEE-802-1Q]\n              IEEE, \"802.1Q - 2014 - IEEE Standard for Local
      and\n              metropolitan area networks--Bridges and Bridged Networks\",\n
      \             DOI 10.1109/IEEESTD.2014.6991462.\n   [IEEE-802-3ah]\n              IEEE,
      \"802.3ah - 2004 - IEEE Standard for Information\n              technology--
      Local and metropolitan area networks-- Part\n              3: CSMA/CD Access
      Method and Physical Layer Specifications\n              Amendment: Media Access
      Control Parameters, Physical\n              Layers, and Management Parameters
      for Subscriber Access\n              Networks\", DOI 10.1109/IEEESTD.2004.94617.\n
      \  [ITU-T-Y-1731]\n              International Telecommunication Union, \"Operations,\n
      \             administration and maintenance (OAM) functions and\n              mechanisms
      for Ethernet-based networks\",\n              ITU-T Recommendation Y.1731, August
      2015,\n              <https://www.itu.int/rec/T-REC-Y.1731/en>.\n   [MEF-6]
      \   Metro Ethernet Forum, \"Ethernet Services Definitions -\n              Phase
      2\", April 2008, <https://mef.net/PDF_Documents/\n              technical-specifications/MEF6-1.pdf>.\n
      \  [MPLS-L2VPN-YANG]\n              Shah, H., Ed., Brissette, P., Ed., Chen,
      I., Ed., Hussain,\n              I., Ed., Wen, B., Ed., and K. Tiruveedhula,
      Ed., \"YANG\n              Data Model for MPLS-based L2VPN\", Work in Progress,\n
      \             draft-ietf-bess-l2vpn-yang-08, February 2018.\n   [RFC4119]  Peterson,
      J., \"A Presence-based GEOPRIV Location Object\n              Format\", RFC
      4119, DOI 10.17487/RFC4119, December 2005,\n              <https://www.rfc-editor.org/info/rfc4119>.\n
      \  [RFC6624]  Kompella, K., Kothari, B., and R. Cherukuri, \"Layer 2\n              Virtual
      Private Networks Using BGP for Auto-Discovery and\n              Signaling\",
      RFC 6624, DOI 10.17487/RFC6624, May 2012,\n              <https://www.rfc-editor.org/info/rfc6624>.\n
      \  [RFC7130]  Bhatia, M., Ed., Chen, M., Ed., Boutros, S., Ed.,\n              Binderberger,
      M., Ed., and J. Haas, Ed., \"Bidirectional\n              Forwarding Detection
      (BFD) on Link Aggregation Group (LAG)\n              Interfaces\", RFC 7130,
      DOI 10.17487/RFC7130, February\n              2014, <https://www.rfc-editor.org/info/rfc7130>.\n
      \  [RFC7209]  Sajassi, A., Aggarwal, R., Uttaro, J., Bitar, N.,\n              Henderickx,
      W., and A. Isaac, \"Requirements for Ethernet\n              VPN (EVPN)\", RFC
      7209, DOI 10.17487/RFC7209, May 2014,\n              <https://www.rfc-editor.org/info/rfc7209>.\n
      \  [RFC7348]  Mahalingam, M., Dutt, D., Duda, K., Agarwal, P., Kreeger,\n              L.,
      Sridhar, T., Bursell, M., and C. Wright, \"Virtual\n              eXtensible
      Local Area Network (VXLAN): A Framework for\n              Overlaying Virtualized
      Layer 2 Networks over Layer 3\n              Networks\", RFC 7348, DOI 10.17487/RFC7348,
      August 2014,\n              <https://www.rfc-editor.org/info/rfc7348>.\n   [RFC7436]
      \ Shah, H., Rosen, E., Le Faucheur, F., and G. Heron,\n              \"IP-Only
      LAN Service (IPLS)\", RFC 7436,\n              DOI 10.17487/RFC7436, January
      2015,\n              <https://www.rfc-editor.org/info/rfc7436>.\n   [RFC8199]
      \ Bogdanovic, D., Claise, B., and C. Moberg, \"YANG Module\n              Classification\",
      RFC 8199, DOI 10.17487/RFC8199, July\n              2017, <https://www.rfc-editor.org/info/rfc8199>.\n
      \  [RFC8299]  Wu, Q., Ed., Litkowski, S., Tomotaki, L., and K. Ogaki,\n              \"YANG
      Data Model for L3VPN Service Delivery\", RFC 8299,\n              DOI 10.17487/RFC8299,
      January 2018,\n              <https://www.rfc-editor.org/info/rfc8299>.\n   [RFC8309]
      \ Wu, Q., Liu, W., and A. Farrel, \"Service Models\n              Explained\",
      RFC 8309, DOI 10.17487/RFC8309, January 2018,\n              <https://www.rfc-editor.org/info/rfc8309>.\n
      \  [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP
      215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgements\n   Thanks to Qin Wu and Adrian Farrel for facilitating work
    on the\n   initial draft revisions of this document.  Thanks to Zonghe Huang,\n
    \  Wei Deng, and Xiaoling Song for their review of this document.\n   Special
    thanks to Jan Lindblad for his careful review of the YANG.\n   This document has
    drawn on the work of the L3SM Working Group as\n   provided in [RFC8299].\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Bin Wen\n   Comcast\n   Email: bin_wen@comcast.com\n   Giuseppe
    Fioccola (editor)\n   Telecom Italia\n   Email: giuseppe.fioccola@tim.it\n   Chongfeng
    Xie\n   China Telecom\n   Email: xiechf.bri@chinatelecom.cn\n   Luay Jalil\n   Verizon\n
    \  Email: luay.jalil@verizon.com\n"
  title: Authors' Addresses
