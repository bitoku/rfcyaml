- title: __initial_text__
  contents:
  - "    Using IEEE 802.15.4e Time-Slotted Channel Hopping (TSCH) in the\n       \
    \       Internet of Things (IoT): Problem Statement\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the environment, problem statement, and\
    \ goals\n   for using the Time-Slotted Channel Hopping (TSCH) Medium Access\n\
    \   Control (MAC) protocol of IEEE 802.14.4e in the context of Low-Power\n   and\
    \ Lossy Networks (LLNs).  The set of goals enumerated in this\n   document form\
    \ an initial set only.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7554.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  TSCH in the LLN Context . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  Problems and Goals  . . . . . . . . . . . . . . . . . .\
    \ . . .   7\n     3.1.  Network Formation . . . . . . . . . . . . . . . . . .\
    \ . .   8\n     3.2.  Network Maintenance . . . . . . . . . . . . . . . . . .\
    \ .   8\n     3.3.  Multi-Hop Topology  . . . . . . . . . . . . . . . . . . .\
    \   8\n     3.4.  Routing and Timing Parents  . . . . . . . . . . . . . . .  \
    \ 8\n     3.5.  Resource Management . . . . . . . . . . . . . . . . . . .   9\n\
    \     3.6.  Dataflow Control  . . . . . . . . . . . . . . . . . . . .   9\n  \
    \   3.7.  Deterministic Behavior  . . . . . . . . . . . . . . . . .   9\n    \
    \ 3.8.  Scheduling Mechanisms . . . . . . . . . . . . . . . . . .  10\n     3.9.\
    \  Secure Communication  . . . . . . . . . . . . . . . . . .  10\n   4.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .  11\n   5.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  11\n     5.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  11\n     5.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  11\n   Appendix A.  TSCH Protocol\
    \ Highlights . . . . . . . . . . . . . .  15\n     A.1.  Time Slots  . . . . .\
    \ . . . . . . . . . . . . . . . . . .  15\n     A.2.  Slotframes  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  15\n     A.3.  Node TSCH Schedule  . . .\
    \ . . . . . . . . . . . . . . . .  15\n     A.4.  Cells and Bundles . . . . .\
    \ . . . . . . . . . . . . . . .  16\n     A.5.  Dedicated vs. Shared Cells  .\
    \ . . . . . . . . . . . . . .  17\n     A.6.  Absolute Slot Number  . . . . .\
    \ . . . . . . . . . . . . .  17\n     A.7.  Channel Hopping . . . . . . . . .\
    \ . . . . . . . . . . . .  17\n     A.8.  Time Synchronization  . . . . . . .\
    \ . . . . . . . . . . .  18\n     A.9.  Power Consumption . . . . . . . . . .\
    \ . . . . . . . . . .  19\n     A.10. Network TSCH Schedule . . . . . . . . .\
    \ . . . . . . . . .  19\n     A.11. Join Process  . . . . . . . . . . . . . .\
    \ . . . . . . . .  19\n     A.12. Information Elements  . . . . . . . . . . .\
    \ . . . . . . .  20\n     A.13. Extensibility . . . . . . . . . . . . . . . .\
    \ . . . . . .  20\n   Appendix B.  TSCH Features  . . . . . . . . . . . . . .\
    \ . . . . .  21\n     B.1.  Collision-Free Communication  . . . . . . . . . .\
    \ . . . .  21\n     B.2.  Multi-Channel vs. Channel Hopping . . . . . . . . .\
    \ . . .  21\n     B.3.  Cost of (Continuous) Synchronization  . . . . . . . .\
    \ . .  21\n     B.4.  Topology Stability  . . . . . . . . . . . . . . . . . .\
    \ .  21\n     B.5.  Multiple Concurrent Slotframes  . . . . . . . . . . . . .\
    \  22\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  22\n\
    \   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IEEE 802.15.4e [IEEE.802.15.4e] was published in 2012 as\
    \ an amendment\n   to the Medium Access Control (MAC) protocol defined by the\
    \ IEEE\n   802.15.4 standard (of 2011) [IEEE.802.15.4].  IEEE 802.15.4e will be\n\
    \   rolled into the next revision of IEEE 802.15.4, scheduled to be\n   published\
    \ in 2015.  The Time-Slotted Channel Hopping (TSCH) mode of\n   IEEE 802.15.4e\
    \ is the object of this document.  The term \"TSCH\"\n   refers to TSCH as used\
    \ in [IEEE.802.15.4e].\n   This document describes the main issues arising from\
    \ the adoption of\n   the TSCH in the LLN context, following the terminology defined\
    \ in\n   [TERMS-6TISCH].  Appendix A further gives an overview of the key\n  \
    \ features of the TSCH amendment to IEEE 802.15.4e.  Appendix B details\n   features\
    \ of TSCH, which might be interesting for the work of the\n   6TiSCH WG.\n   TSCH\
    \ was designed to allow IEEE 802.15.4 devices to support a wide\n   range of applications\
    \ including, but not limited to, industrial ones\n   [IEEE.802.15.4e].  At its\
    \ core is a medium access technique that uses\n   time synchronization to achieve\
    \ low-power operation and channel\n   hopping to enable high reliability.  Synchronization\
    \ accuracy impacts\n   power consumption and can vary from microseconds to milliseconds\n\
    \   depending on the solution.  This is very different from the \"legacy\"\n \
    \  IEEE 802.15.4 MAC protocol and is therefore better described as a\n   \"redesign\"\
    .  TSCH does not amend the physical layer, i.e., it can\n   operate on any hardware\
    \ that is compliant with IEEE 802.15.4.\n   IEEE 802.15.4e is the latest generation\
    \ of ultra-lower power and\n   reliable networking solutions for LLNs.  [RFC5673]\
    \ discusses\n   industrial applications and highlights the harsh operating conditions\n\
    \   as well as the stringent reliability, availability, and security\n   requirements\
    \ for an LLN to operate in an industrial environment.  In\n   these environments,\
    \ vast deployment environments with large\n   (metallic) equipment cause multi-path\
    \ fading and interference to\n   thwart any attempt of a single-channel solution\
    \ to be reliable; the\n   channel agility of TSCH is the key to its ultra-high\
    \ reliability.\n   Commercial networking solutions are available today in which\
    \ nodes\n   consume 10's of microamps on average [CurrentCalculator] with end-to-\n\
    \   end packet delivery ratios over 99.999% [Doherty07channel].\n   IEEE 802.15.4e\
    \ has been designed for low-power constrained devices,\n   often called \"motes\"\
    .  Several terms are used in the IETF to refer to\n   those devices, including\
    \ \"LLN nodes\" [RFC7102] and \"constrained\n   nodes\" [RFC7228].  In this document,\
    \ we use the generic (and shorter)\n   term \"node\", used as a synonym for \"\
    LLN node\", \"constrained node\", or\n   \"mote\".\n   Enabling the LLN protocol\
    \ stack to operate in industrial environments\n   opens up new application domains\
    \ for these networks.  Sensors\n   deployed in smart cities [RFC5548] will be\
    \ able to be installed for\n   years without needing battery replacement.  \"\
    Umbrella\" networks will\n   interconnect smart elements from different entities\
    \ in smart\n   buildings [RFC5867].  Peel-and-stick switches will obsolete the\
    \ need\n   for costly conduits for lighting solutions in smart homes [RFC5826].\n\
    \   TSCH focuses on the MAC layer only.  This clean layering allows for\n   TSCH\
    \ to fit under an IPv6-enabled protocol stack for LLNs, running an\n   IPv6 over\
    \ Low-Power Wireless Personal Area Network (6LoWPAN)\n   [RFC6282], the IPv6 Routing\
    \ Protocol for Low-Power and Lossy Networks\n   (RPL) [RFC6550], and the Constrained\
    \ Application Protocol (CoAP)\n   [RFC7252].  What is missing is a functional\
    \ entity that is in charge\n   of scheduling TSCH time slots for frames to be\
    \ sent on.  In this\n   document, we refer to this entity as the \"Logical Link\
    \ Control\"\n   (LLC), bearing in mind that realizations of this entity can be\
    \ of\n   different types, including a distributed protocol or a centralized\n\
    \   server in charge of scheduling.\n   While [IEEE.802.15.4e] defines the mechanisms\
    \ for a TSCH node to\n   communicate, it does not define the policies to build\
    \ and maintain\n   the communication schedule, match that schedule to the multi-hop\n\
    \   paths maintained by RPL, adapt the resources allocated between\n   neighbor\
    \ nodes to the data traffic flows, enforce a differentiated\n   treatment for\
    \ data generated at the application layer and signaling\n   messages needed by\
    \ 6LoWPAN and RPL to discover neighbors, react to\n   topology changes, self-configure\
    \ IP addresses, or manage keying\n   material.\n   In other words, TSCH is designed\
    \ to allow optimizations and strong\n   customizations, simplifying the merging\
    \ of TSCH with a protocol stack\n   based on IPv6, 6LoWPAN, and RPL.\n"
- title: 2.  TSCH in the LLN Context
  contents:
  - "2.  TSCH in the LLN Context\n   To map the services required by the IP layer\
    \ to the services provided\n   by the link layer, an adaptation layer is used\n\
    \   [Palattella12standardized].  In 2007, the 6LoWPAN WG started working\n   on\
    \ specifications for transmitting IPv6 packets over IEEE 802.15.4\n   networks\
    \ [RFC4919].  A low-power Wireless Personal Area Network\n   (WPAN) is typically\
    \ composed of a large number of battery-powered\n   devices that are deployed\
    \ at locations that are unknown a priori.\n   Nodes form a star or a mesh topology\
    \ and communicate with one another\n   at a low datarate and using short frames.\
    \  The wireless nature of the\n   links means that they are unreliable in nature.\
    \  Nodes turn off their\n   radio interface most of the time to conserve energy.\
    \  Given these\n   features, it is clear that the adoption of IPv6 on top of a\
    \ low-power\n   WPAN is not straightforward but poses strong requirements for\
    \ the\n   optimization of this adaptation layer.\n   For instance, due to the\
    \ IPv6 default minimum MTU size (1280 bytes),\n   an unfragmented IPv6 packet\
    \ is too large to fit in an IEEE 802.15.4\n   frame.  Moreover, the overhead due\
    \ to the 40-byte-long IPv6 header\n   wastes the scarce bandwidth available at\
    \ the PHY layer [RFC4944].\n   For these reasons, the 6LoWPAN WG has defined an\
    \ effective adaptation\n   layer [RFC6282].  Further issues encompass the autoconfiguration\
    \ of\n   IPv6 addresses [RFC2460] [RFC4862], the compliance with the\n   recommendation\
    \ on supporting link-layer subnet broadcast in shared\n   networks [RFC3819],\
    \ the reduction of routing and management overhead\n   [RFC6606], the adoption\
    \ of lightweight application protocols (or\n   novel data encoding techniques),\
    \ and the support for security\n   mechanisms (confidentiality and integrity protection,\
    \ device\n   bootstrapping, key establishment, and management).\n   These features\
    \ can run on top of TSCH.  There are, however, important\n   issues to solve,\
    \ as highlighted in Section 3.\n   Routing issues are challenging for 6LoWPAN,\
    \ given the low-power and\n   lossy radio links, the battery-powered nodes, the\
    \ multi-hop mesh\n   topologies, and the frequent topology changes due to mobility.\n\
    \   Successful solutions take into account the specific application\n   requirements,\
    \ along with IPv6 behavior and 6LoWPAN mechanisms\n   [Palattella12standardized].\
    \  The ROLL WG has defined RPL in\n   [RFC6550].  RPL can support a wide variety\
    \ of link layers, including\n   ones that are constrained, potentially lossy,\
    \ or typically utilized\n   in conjunction with host or router devices with very\
    \ limited\n   resources, as in building/home automation [RFC5867] [RFC5826],\n\
    \   industrial environments [RFC5673], and urban applications [RFC5548].\n   RPL\
    \ is able to quickly build up network routes, distribute routing\n   knowledge\
    \ among nodes, and adapt to a changing topology.  In a\n   typical setting, nodes\
    \ are connected through multi-hop paths to a\n   small set of root devices, which\
    \ are usually responsible for data\n   collection and coordination.  For each\
    \ of them, a Destination-\n   Oriented Directed Acyclic Graph (DODAG) is created\
    \ by accounting for\n   link costs, node attributes/status information, and an\
    \ Objective\n   Function, which maps the optimization requirements of the target\n\
    \   scenario.\n   The topology is set up based on a Rank metric, which encodes\
    \ the\n   distance of each node with respect to its reference root, as\n   specified\
    \ by the Objective Function.  Regardless of the way it is\n   computed, the Rank\
    \ monotonically decreases along the DODAG towards\n   the root, building a gradient.\
    \  RPL encompass different kinds of\n   traffic and signaling information.  Multipoint-to-Point\
    \ (MP2P) is the\n   dominant traffic in LLN applications.  Data is routed towards\
    \ nodes\n   with some application relevance, such as the LLN gateway to the\n\
    \   larger Internet or to the core of private IP networks.  In general,\n   these\
    \ destinations are the DODAG roots and act as data collection\n   points for distributed\
    \ monitoring applications.  Point-to-Multipoint\n   (P2MP) data streams are used\
    \ for actuation purposes, where messages\n   are sent from DODAG roots to destination\
    \ nodes.  Point-to-Point (P2P)\n   traffic allows communication between two devices\
    \ belonging to the\n   same LLN, such as a sensor and an actuator.  A packet flows\
    \ from the\n   source to the common ancestor of those two communicating devices,\n\
    \   then downward towards the destination.  Therefore, RPL has to\n   discover\
    \ both upward routes (i.e., from nodes to DODAG roots) in\n   order to enable\
    \ MP2P and P2P flows and downward routes (i.e., from\n   DODAG roots to nodes)\
    \ to support P2MP and P2P traffic.\n   Section 3 highlights the challenges that\
    \ need to be addressed to use\n   RPL on top of TSCH.\n   Open-source initiatives\
    \ have emerged around TSCH, with the OpenWSN\n   project [OpenWSN] [OpenWSNETT]\
    \ being the first open-source\n   implementation of a standards-based protocol\
    \ stack.  This\n   implementation was used as the foundation for an IP for the\
    \ Smart\n   Objects Alliance (IPSO) [IPSO] interoperability event in 2011.  In\n\
    \   the absence of a standardized scheduling mechanism for TSCH, a\n   \"slotted\
    \ Aloha\" schedule was used.\n"
- title: 3.  Problems and Goals
  contents:
  - "3.  Problems and Goals\n   As highlighted in Appendix A, TSCH differs from other\
    \ low-power MAC\n   protocols because of its scheduled nature.  TSCH defines the\n\
    \   mechanisms to execute a communication schedule; yet, it is the entity\n  \
    \ that sets up the schedule that controls the topology of the network.\n   This\
    \ scheduling entity also controls the resources allocated to each\n   link in\
    \ that topology.\n   How this entity should operate is out of scope of TSCH. \
    \ The\n   remainder of this section highlights the problems this entity needs\n\
    \   to address.  For simplicity, we refer to this entity by the generic\n   name\
    \ \"LLC\".  Note that the 6top sublayer, currently being defined in\n   [SUBLAYER-6top],\
    \ can be seen as an embodiment of this generic \"LLC\".\n   Some of the issues\
    \ the LLC needs to target might overlap with the\n   scope of other protocols\
    \ (e.g., 6LoWPAN, RPL, and RSVP).  In this\n   case, the LLC will profit from\
    \ the services provided by other\n   protocols to pursue these objectives.\n"
- title: 3.1.  Network Formation
  contents:
  - "3.1.  Network Formation\n   The LLC needs to control the way the network is formed,\
    \ including how\n   new nodes join and how already joined nodes advertise the\
    \ presence of\n   the network.  The LLC needs to:\n   1.  Define the Information\
    \ Elements included in the Enhanced Beacons\n       (EBs) [IEEE.802.15.4e] advertising\
    \ the presence of the network.\n   2.  (For a new node), define rules to process\
    \ and filter received\n       EBs.\n   3.  Define the joining procedure.  This\
    \ might include a mechanism to\n       assign a unique 16-bit address to a node\
    \ and the management of\n       initial keying material.\n   4.  Define a mechanism\
    \ to secure the joining process and the\n       subsequent optional process of\
    \ scheduling more communication\n       cells.\n"
- title: 3.2.  Network Maintenance
  contents:
  - "3.2.  Network Maintenance\n   Once a network is formed, the LLC needs to maintain\
    \ the network's\n   health, allowing for nodes to stay synchronized.  The LLC\
    \ needs to:\n   1.  Manage each node's time source neighbor.\n   2.  Define a\
    \ mechanism for a node to update the join priority it\n       announces in its\
    \ EB.\n   3.  Schedule transmissions of EBs to advertise the presence of the\n\
    \       network.\n"
- title: 3.3.  Multi-Hop Topology
  contents:
  - "3.3.  Multi-Hop Topology\n   RPL, given a weighted connectivity graph, determines\
    \ multi-hop\n   routes.  The LLC needs to:\n   1.  Define a mechanism to gather\
    \ topological information, node and\n       link state, which it can then feed\
    \ to RPL.\n   2.  Ensure that the TSCH schedule contains cells along the multi-hop\n\
    \       routes identified by RPL (a cell in a TSCH schedule is an atomic\n   \
    \    \"unit\" of resource, see Section 3.5).\n   3.  Where applicable, maintain\
    \ independent sets of cells to transport\n       independent flows of data.\n"
- title: 3.4.  Routing and Timing Parents
  contents:
  - "3.4.  Routing and Timing Parents\n   At all times, a TSCH node needs to have\
    \ a time-source neighbor to\n   which it can synchronize.  Therefore, LLC needs\
    \ to assign a time-\n   source neighbor to allow for correct operation of the\
    \ TSCH network.\n   A time-source neighbor could, or not, be taken from the RPL\
    \ routing\n   parent set.\n"
- title: 3.5.  Resource Management
  contents:
  - "3.5.  Resource Management\n   A cell in a TSCH schedule is an atomic \"unit\"\
    \ of resource.  The\n   number of cells to assign between neighbor nodes needs\
    \ to be\n   appropriate for the size of the traffic flow.  The LLC needs to:\n\
    \   1.  Define a mechanism for neighbor nodes to exchange information\n      \
    \ about their schedule and, if applicable, negotiate the addition/\n       deletion\
    \ of cells.\n   2.  Allow for an entity (e.g., a set of devices, a distributed\n\
    \       protocol, a Path Computation Element (PCE), etc.) to take control\n  \
    \     of the schedule.\n"
- title: 3.6.  Dataflow Control
  contents:
  - "3.6.  Dataflow Control\n   TSCH defines mechanisms for a node to signal when\
    \ it cannot accept an\n   incoming packet.  It does not, however, define the policy\
    \ that\n   determines when to stop accepting packets.  The LLC needs to:\n   1.\
    \  Allow for the implementation and configuration of policy to queue\n       incoming\
    \ and outgoing packets.\n   2.  Manage the buffer space, and indicate to TSCH\
    \ when to stop\n       accepting incoming packets.\n   3.  Handle transmissions\
    \ that have failed.  A transmission is\n       declared failed when TSCH has retransmitted\
    \ the packet multiple\n       times, without receiving an acknowledgment.  This\
    \ covers both\n       dedicated and shared cells.\n"
- title: 3.7.  Deterministic Behavior
  contents:
  - "3.7.  Deterministic Behavior\n   As highlighted in [RFC5673], in some applications,\
    \ data is generated\n   periodically and has a well-understood data bandwidth\
    \ requirement,\n   which is deterministic and predictable.  The LLC needs to:\n\
    \   1.  Ensure that the data is delivered to its final destination before\n  \
    \     a deadline possibly determined by the application.\n   2.  Provide a mechanism\
    \ for such deterministic flows to coexist with\n       bursty or infrequent traffic\
    \ flows of different priorities.\n"
- title: 3.8.  Scheduling Mechanisms
  contents:
  - "3.8.  Scheduling Mechanisms\n   Several scheduling mechanisms can be envisioned\
    \ and could possibly\n   coexist in the same network.  For example, [RPL] describes\
    \ how the\n   allocation of bandwidth can be optimized by an external PCE\n  \
    \ [RFC4655].  Another centralized (PCE-based) traffic-aware scheduling\n   algorithm\
    \ is defined in [TASA-PIMRC].  Alternatively, two neighbor\n   nodes can adapt\
    \ the number of cells autonomously by monitoring the\n   amount of traffic and\
    \ negotiating the allocation to extra cell when\n   needed.  An example of a decentralized\
    \ algorithm (i.e., no PCE is\n   needed) is provided in [Tinka10decentralized].\
    \  This mechanism can be\n   used to establish multi-hop paths in a fashion similar\
    \ to RSVP\n   [RFC2205].  The LLC needs to:\n   1.  Provide a mechanism for two\
    \ devices to negotiate the allocation\n       and deallocation of cells between\
    \ them.\n   2.  Provide a mechanism for the device to monitor and manage the\n\
    \       capabilities of a node several hops away.\n   3.  Define a mechanism for\
    \ these different scheduling mechanisms to\n       coexist in the same network.\n"
- title: 3.9.  Secure Communication
  contents:
  - "3.9.  Secure Communication\n   Given some keying material, TSCH defines mechanisms\
    \ to encrypt and\n   authenticate MAC frames.  It does not define how this keying\
    \ material\n   is generated.  The LLC needs to:\n   1.  Define the keying material\
    \ and authentication mechanism needed by\n       a new node to join an existing\
    \ network.\n   2.  Define a mechanism to allow for the secure transfer of\n  \
    \     application data between neighbor nodes.\n   3.  Define a mechanism to allow\
    \ for the secure transfer of signaling\n       data between nodes and the LLC.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This memo is an informational overview of existing\
    \ standards and does\n   not define any new mechanisms or protocols.\n   It does\
    \ describe the need for the 6TiSCH WG to define a secure\n   solution.  In particular,\
    \ Section 3.1 describes security in the join\n   process.  Section 3.9 discusses\
    \ data-frame protection.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [IEEE.802.15.4]\n              IEEE, \"IEEE Standard\
    \ for Local and metropolitan area\n              networks -- Part. 15.4: Low-Rate\
    \ Wireless Personal Area\n              Networks\", IEEE Std. 802.15.4-2011, September\
    \ 2011.\n   [IEEE.802.15.4e]\n              IEEE, \"IEEE Standard for Local and\
    \ metropolitan area\n              networks -- Part 15.4: Low-Rate Wireless Personal\
    \ Area\n              Networks (LR-WPANs) Amendment 1: MAC sublayer\", IEEE Std.\n\
    \              802.15.4e-2012, April 2012.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [CurrentCalculator]\n              Linear Technology,\
    \ \"Application Note: Using the Current\n              Calculator to Estimate\
    \ Mote Power\", August 2012,\n              <http://www.linear.com/docs/43189>.\n\
    \   [Doherty07channel]\n              Doherty, L., Lindsay, W., and J. Simon,\
    \ \"Channel-Specific\n              Wireless Sensor Network Path Data\", IEEE\
    \ International\n              Conference on Computer Communications and Networks\n\
    \              (ICCCN), pp. 89-94, 2007.\n   [IPSO]     IPSO Alliance, \"IP for\
    \ Smart Objects Alliance Homepage\",\n              <http://www.ipso-alliance.org/>.\n\
    \   [OpenWSN]  \"Berkeley's OpenWSN Project Homepage\",\n              <http://www.openwsn.org/>.\n\
    \   [OpenWSNETT]\n              Watteyne, T., Vilajosana, X., Kerkez, B., Chraim,\
    \ F.,\n              Weekly, K., Wang, Q., Glaser, S., and K. Pister, \"OpenWSN:\n\
    \              A Standards-Based Low-Power Wireless Development\n            \
    \  Environment\", Transactions on Emerging Telecommunications\n              Technologies,\
    \ Volume 23: Issue 5, August 2012.\n   [Palattella12standardized]\n          \
    \    Palattella, MR., Accettura, N., Vilajosana, X., Watteyne,\n             \
    \ T., Grieco, LA., Boggia, G., and M. Dohler, \"Standardized\n              Protocol\
    \ Stack For The Internet Of (Important) Things\",\n              IEEE Communications\
    \ Surveys and Tutorials, Volume: 15,\n              Issue 3, December 2012.\n\
    \   [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S.\n  \
    \            Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version 1\n    \
    \          Functional Specification\", RFC 2205, DOI 10.17487/RFC2205,\n     \
    \         September 1997, <http://www.rfc-editor.org/info/rfc2205>.\n   [RFC2460]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", RFC 2460, DOI 10.17487/RFC2460,\n              December 1998,\
    \ <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC3819]  Karn, P., Ed., Bormann,\
    \ C., Fairhurst, G., Grossman, D.,\n              Ludwig, R., Mahdavi, J., Montenegro,\
    \ G., Touch, J., and L.\n              Wood, \"Advice for Internet Subnetwork\
    \ Designers\", BCP 89,\n              RFC 3819, DOI 10.17487/RFC3819, July 2004,\n\
    \              <http://www.rfc-editor.org/info/rfc3819>.\n   [RFC4655]  Farrel,\
    \ A., Vasseur, J., and J. Ash, \"A Path Computation\n              Element (PCE)-Based\
    \ Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655, August 2006,\n\
    \              <http://www.rfc-editor.org/info/rfc4655>.\n   [RFC4862]  Thomson,\
    \ S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\"\
    , RFC 4862,\n              DOI 10.17487/RFC4862, September 2007,\n           \
    \   <http://www.rfc-editor.org/info/rfc4862>.\n   [RFC4919]  Kushalnagar, N.,\
    \ Montenegro, G., and C. Schumacher, \"IPv6\n              over Low-Power Wireless\
    \ Personal Area Networks (6LoWPANs):\n              Overview, Assumptions, Problem\
    \ Statement, and Goals\",\n              RFC 4919, DOI 10.17487/RFC4919, August\
    \ 2007,\n              <http://www.rfc-editor.org/info/rfc4919>.\n   [RFC4944]\
    \  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,\n              \"\
    Transmission of IPv6 Packets over IEEE 802.15.4\n              Networks\", RFC\
    \ 4944, DOI 10.17487/RFC4944, September 2007,\n              <http://www.rfc-editor.org/info/rfc4944>.\n\
    \   [RFC5548]  Dohler, M., Ed., Watteyne, T., Ed., Winter, T., Ed., and\n    \
    \          D. Barthel, Ed., \"Routing Requirements for Urban Low-Power\n     \
    \         and Lossy Networks\", RFC 5548, DOI 10.17487/RFC5548, May\n        \
    \      2009, <http://www.rfc-editor.org/info/rfc5548>.\n   [RFC5673]  Pister,\
    \ K., Ed., Thubert, P., Ed., Dwars, S., and T.\n              Phinney, \"Industrial\
    \ Routing Requirements in Low-Power and\n              Lossy Networks\", RFC 5673,\
    \ DOI 10.17487/RFC5673, October\n              2009, <http://www.rfc-editor.org/info/rfc5673>.\n\
    \   [RFC5826]  Brandt, A., Buron, J., and G. Porcu, \"Home Automation\n      \
    \        Routing Requirements in Low-Power and Lossy Networks\",\n           \
    \   RFC 5826, DOI 10.17487/RFC5826, April 2010,\n              <http://www.rfc-editor.org/info/rfc5826>.\n\
    \   [RFC5867]  Martocci, J., Ed., De Mil, P., Riou, N., and W. Vermeylen,\n  \
    \            \"Building Automation Routing Requirements in Low-Power and\n   \
    \           Lossy Networks\", RFC 5867, DOI 10.17487/RFC5867, June\n         \
    \     2010, <http://www.rfc-editor.org/info/rfc5867>.\n   [RFC6282]  Hui, J.,\
    \ Ed. and P. Thubert, \"Compression Format for IPv6\n              Datagrams over\
    \ IEEE 802.15.4-Based Networks\", RFC 6282,\n              DOI 10.17487/RFC6282,\
    \ September 2011,\n              <http://www.rfc-editor.org/info/rfc6282>.\n \
    \  [RFC6550]  Winter, T., Ed., Thubert, P., Ed., Brandt, A., Hui, J.,\n      \
    \        Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur,\n           \
    \   JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for\n              Low-Power\
    \ and Lossy Networks\", RFC 6550,\n              DOI 10.17487/RFC6550, March 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6550>.\n   [RFC6606]  Kim, E.,\
    \ Kaspar, D., Gomez, C., and C. Bormann, \"Problem\n              Statement and\
    \ Requirements for IPv6 over Low-Power\n              Wireless Personal Area Network\
    \ (6LoWPAN) Routing\",\n              RFC 6606, DOI 10.17487/RFC6606, May 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6606>.\n   [RFC7102]  Vasseur,\
    \ JP., \"Terms Used in Routing for Low-Power and\n              Lossy Networks\"\
    , RFC 7102, DOI 10.17487/RFC7102, January\n              2014, <http://www.rfc-editor.org/info/rfc7102>.\n\
    \   [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, \"Terminology for\n   \
    \           Constrained-Node Networks\", RFC 7228,\n              DOI 10.17487/RFC7228,\
    \ May 2014,\n              <http://www.rfc-editor.org/info/rfc7228>.\n   [RFC7252]\
    \  Shelby, Z., Hartke, K., and C. Bormann, \"The Constrained\n              Application\
    \ Protocol (CoAP)\", RFC 7252,\n              DOI 10.17487/RFC7252, June 2014,\n\
    \              <http://www.rfc-editor.org/info/rfc7252>.\n   [RPL]      Phinney,\
    \ T., Thubert, P., and R. Assimiti, \"RPL\n              applicability in industrial\
    \ networks\", Work in Progress,\n              draft-ietf-roll-rpl-industrial-applicability-02,\
    \ October\n              2013.\n   [SUBLAYER-6top]\n              Wang, Q., Vilajosana,\
    \ X., and T. Watteyne, \"6TiSCH\n              Operation Sublayer (6top)\", Work\
    \ in Progress, draft-wang-\n              6tisch-6top-sublayer-01, July 2014.\n\
    \   [TASA-PIMRC]\n              Palattella, MR., Accettura, N., Dohler, M., Grieco,\
    \ LA.,\n              and G. Boggia, \"Traffic Aware Scheduling Algorithm for\n\
    \              reliable low-power multi-hop IEEE 802.15.4e networks\",\n     \
    \         IEEE 23rd International Symposium on Personal, Indoor and\n        \
    \      Mobile Radio Communications (PIMRC), pp. 327-332,\n              September\
    \ 2012.\n   [TERMS-6TISCH]\n              Palattella, M., Thubert, P., Watteyne,\
    \ T., and Q. Wang,\n              \"Terminology in IPv6 over the TSCH mode of\
    \ IEEE\n              802.15.4e\", Work in Progress, draft-ietf-6tisch-\n    \
    \          terminology-04, March 2015.\n   [Tinka10decentralized]\n          \
    \    Tinka, A., Watteyne, T., and K. Pister, \"A Decentralized\n             \
    \ Scheduling Algorithm for Time Synchronized Channel\n              Hopping\"\
    , Ad Hoc Networks, 2010.\n   [Watteyne09reliability]\n              Watteyne,\
    \ T., Mehta, A., and K. Pister, \"Reliability\n              Through Frequency\
    \ Diversity: Why Channel Hopping Makes\n              Sense\", Proceedings of\
    \ the 6th ACM Symposium on\n              Performance Evaluation of Wireless Ad\
    \ Hoc, Sensor, and\n              Ubiquitous Networks (PE-WASUN), pp. 116-123,\
    \ October 2009.\n"
- title: Appendix A.  TSCH Protocol Highlights
  contents:
  - "Appendix A.  TSCH Protocol Highlights\n   This appendix gives an overview of\
    \ the key features of the IEEE\n   802.15.4e TSCH amendment.  It makes no attempt\
    \ at repeating the\n   standard, rather it focuses on the following:\n   o  Concepts\
    \ that are sufficiently different from other IEEE 802.15.4\n      networking that\
    \ they may need to be defined and presented\n      precisely.\n   o  Techniques\
    \ and ideas that are part of IEEE 802.15.4e and that\n      might be useful for\
    \ the work of the 6TiSCH WG.\n"
- title: A.1.  Time Slots
  contents:
  - "A.1.  Time Slots\n   All nodes in a TSCH network are synchronized.  Time is sliced\
    \ up into\n   time slots.  A time slot is long enough for a MAC frame of maximum\n\
    \   size to be sent from node A to node B, and for node B to reply with\n   an\
    \ acknowledgment (ACK) frame indicating successful reception.\n   The duration\
    \ of a time slot is not defined by the standard.  With\n   radios that are compliant\
    \ with IEEE 802.15.4 operating in the 2.4 GHz\n   frequency band, a maximum-length\
    \ frame of 127 bytes takes about 4 ms\n   to transmit; a shorter ACK takes about\
    \ 1 ms.  With a 10 ms slot (a\n   typical duration), this leaves 5 ms to radio\
    \ turnaround, packet\n   processing, and security operations.\n"
- title: A.2.  Slotframes
  contents:
  - "A.2.  Slotframes\n   Time slots are grouped into one of more slotframes.  A slotframe\n\
    \   continuously repeats over time.  TSCH does not impose a slotframe\n   size.\
    \  Depending on the application needs, these can range from 10's\n   to 1000's\
    \ of time slots.  The shorter the slotframe, the more often a\n   time slot repeats,\
    \ resulting in more available bandwidth, but also in\n   a higher power consumption.\n"
- title: A.3.  Node TSCH Schedule
  contents:
  - "A.3.  Node TSCH Schedule\n   A TSCH schedule instructs each node what to do in\
    \ each time slot:\n   transmit, receive, or sleep.  The schedule indicates, for\
    \ each\n   scheduled (transmit or receive) cell, a channelOffset and the address\n\
    \   of the neighbor with which to communicate.\n   Once a node obtains its schedule,\
    \ it executes it:\n   o  For each transmit cell, the node checks whether there\
    \ is a packet\n      in the outgoing buffer that matches the neighbor written\
    \ in the\n      schedule information for that time slot.  If there is none, the\n\
    \      node keeps its radio off for the duration of the time slot.  If\n     \
    \ there is one, the node can ask for the neighbor to acknowledge it,\n      in\
    \ which case it has to listen for the acknowledgment after\n      transmitting.\n\
    \   o  For each receive cell, the node listens for possible incoming\n      packets.\
    \  If none is received after some listening period, it\n      shuts down its radio.\
    \  If a packet is received, addressed to the\n      node, and passes security\
    \ checks, the node can send back an\n      acknowledgment.\n   How the schedule\
    \ is built, updated, and maintained, and by which\n   entity, is outside of the\
    \ scope of the IEEE 802.15.4e standard.\n"
- title: A.4.  Cells and Bundles
  contents:
  - "A.4.  Cells and Bundles\n   Assuming the schedule is well built, if node A is\
    \ scheduled to\n   transmit to node B at slotOffset 5 and channelOffset 11, node\
    \ B will\n   be scheduled to receive from node A at the same slotOffset and\n\
    \   channelOffset.\n   A single element of the schedule characterized by a slotOffset\
    \ and\n   channelOffset, and reserved for node A to transmit to node B (or for\n\
    \   node B to receive from node A) within a given slotframe, is called a\n   \"\
    scheduled cell\".\n   If there is a lot of data flowing from node A to node B,\
    \ the schedule\n   might contain multiple cells from A to B, at different times.\n\
    \   Multiple cells scheduled to the same neighbor can be equivalent,\n   i.e.,\
    \ the MAC layer sends the packet on whichever of these cells\n   shows up first\
    \ after the packet was put in the MAC queue.  The union\n   of all cells between\
    \ two neighbors, A and B, is called a \"bundle\".\n   Since the slotframe repeats\
    \ over time (and the length of the\n   slotframe is typically constant), each\
    \ cell gives a \"quantum\" of\n   bandwidth to a given neighbor.  Modifying the\
    \ number of equivalent\n   cells in a bundle modifies the amount of resources\
    \ allocated between\n   two neighbors.\n"
- title: A.5.  Dedicated vs. Shared Cells
  contents:
  - "A.5.  Dedicated vs. Shared Cells\n   By default, each scheduled transmit cell\
    \ within the TSCH schedule is\n   dedicated, i.e., reserved only for node A to\
    \ transmit to node B.\n   IEEE 802.15.4e also allows a cell to be marked as shared.\
    \  In a\n   shared cell, multiple nodes can transmit at the same time, on the\n\
    \   same frequency.  To avoid contention, TSCH defines a backoff\n   algorithm\
    \ for shared cells.\n   A scheduled cell can be marked as both transmitting and\
    \ receiving.\n   In this case, a node transmits if it has an appropriate packet\
    \ in its\n   output buffer, or listens otherwise.  Marking a cell as\n   [transmit,receive,shared]\
    \ results in slotted-Aloha behavior.\n"
- title: A.6.  Absolute Slot Number
  contents:
  - "A.6.  Absolute Slot Number\n   TSCH defines a timeslot counter called Absolute\
    \ Slot Number (ASN).\n   When a new network is created, the ASN is initialized\
    \ to 0; from then\n   on, it increments by 1 at each timeslot.  In detail:\n \
    \  ASN = (k*S+t)\n   where k is the slotframe cycle (i.e., the number of slotframe\n\
    \   repetitions since the network was started), S the slotframe size, and\n  \
    \ t the slotOffset.  A node learns the current ASN when it joins the\n   network.\
    \  Since nodes are synchronized, they all know the current\n   value of the ASN,\
    \ at any time.  The ASN is encoded as a 5-byte\n   number: this allows it to increment\
    \ for hundreds of years (the exact\n   value depends on the duration of a timeslot)\
    \ without wrapping over.\n   The ASN is used to calculate the frequency to communicate\
    \ on and can\n   be used for security-related operations.\n"
- title: A.7.  Channel Hopping
  contents:
  - "A.7.  Channel Hopping\n   For each scheduled cell, the schedule specifies a slotOffset\
    \ and a\n   channelOffset.  In a well-built schedule, when node A has a transmit\n\
    \   cell to node B on channelOffset 5, node B has a receive cell from\n   node\
    \ A on the same channelOffset.  The channelOffset is translated by\n   both nodes\
    \ into a frequency using the following function:\n   frequency = F {(ASN + channelOffset)\
    \ mod nFreq}\n   The function F consists of a lookup table containing the set\
    \ of\n   available channels.  The value nFreq (the number of available\n   frequencies)\
    \ is the size of this lookup table.  There are as many\n   channelOffset values\
    \ as there are frequencies available (e.g., 16\n   when using radios that are\
    \ compliant with IEEE 802.15.4 at 2.4 GHz,\n   when all channels are used).  Since\
    \ both nodes have the same\n   channelOffset written in their schedule for that\
    \ scheduled cell, and\n   the same ASN counter, they compute the same frequency.\
    \  At the next\n   iteration (cycle) of the slotframe, however, while the channelOffset\n\
    \   is the same, the ASN has changed, resulting in the computation of a\n   different\
    \ frequency.\n   This results in \"channel hopping\": even with a static schedule,\
    \ pairs\n   of neighbors \"hop\" between the different frequencies when\n   communicating.\
    \  A way of ensuring communication happens on all\n   available frequencies is\
    \ to set the number of timeslots in a\n   slotframe to a prime number.  Channel\
    \ hopping is a technique known to\n   efficiently combat multi-path fading and\
    \ external interference\n   [Watteyne09reliability].\n"
- title: A.8.  Time Synchronization
  contents:
  - "A.8.  Time Synchronization\n   Because of the slotted nature of communication\
    \ in a TSCH network,\n   nodes have to maintain tight synchronization.  All nodes\
    \ are assumed\n   to be equipped with clocks to keep track of time.  Yet, because\n\
    \   clocks in different nodes drift with respect to one another, neighbor\n  \
    \ nodes need to periodically resynchronize.\n   Each node needs to periodically\
    \ synchronize its network clock to\n   another node, and it also provides its\
    \ network time to its neighbors.\n   It is up to the entity that manages the schedule\
    \ to assign an\n   adequate time source neighbor to each node, i.e., to indicate\
    \ in the\n   schedule which neighbor is its \"time source neighbor\".  While setting\n\
    \   the time source neighbor, it is important to avoid synchronization\n   loops,\
    \ which could result in the formation of independent clusters of\n   synchronized\
    \ nodes.\n   TSCH adds timing information in all packets that are exchanged (both\n\
    \   data and ACK frames).  This means that neighbor nodes can\n   resynchronize\
    \ to one another whenever they exchange data.  In detail,\n   two methods are\
    \ defined in IEEE 802.15.4e (of 2012) for allowing a\n   device to synchronize\
    \ in a TSCH network: (i) Acknowledgment-based and\n   (ii) Frame-based synchronization.\
    \  In both cases, the receiver\n   calculates the difference in time between the\
    \ expected time of frame\n   arrival and its actual arrival.  In Acknowledgment-based\n\
    \   synchronization, the receiver provides such information to the sender\n  \
    \ node in its acknowledgment.  In this case, it is the sender node that\n   synchronizes\
    \ to the clock of the receiver.  In Frame-based\n   synchronization, the receiver\
    \ uses the computed delta for adjusting\n   its own clock.  In this case, it is\
    \ the receiver node that\n   synchronizes to the clock of the sender.\n   Different\
    \ synchronization policies are possible.  Nodes can keep\n   synchronization exclusively\
    \ by exchanging EBs.  Nodes can also keep\n   synchronized by periodically sending\
    \ valid frames to a time source\n   neighbor and use the acknowledgment to resynchronize.\
    \  Both methods\n   (or a combination thereof) are valid synchronization policies;\
    \ which\n   one to use depends on network requirements.\n"
- title: A.9.  Power Consumption
  contents:
  - "A.9.  Power Consumption\n   There are only a handful of activities a node can\
    \ perform during a\n   timeslot: transmit, receive, or sleep.  Each of these operations\
    \ has\n   some energy cost associated to them; the exact value depends on the\n\
    \   hardware used.  Given the schedule of a node, it is straightforward\n   to\
    \ calculate the expected average power consumption of that node.\n"
- title: A.10.  Network TSCH Schedule
  contents:
  - "A.10.  Network TSCH Schedule\n   The schedule entirely defines the synchronization\
    \ and communication\n   between nodes.  By adding/removing cells between neighbors,\
    \ one can\n   adapt a schedule to the needs of the application.  Intuitive examples\n\
    \   are:\n   o  Make the schedule \"sparse\" for applications where nodes need\
    \ to\n      consume as little energy as possible, at the price of reduced\n  \
    \    bandwidth.\n   o  Make the schedule \"dense\" for applications where nodes\
    \ generate a\n      lot of data, at the price of increased power consumption.\n\
    \   o  Add more cells along a multi-hop route over which many packets\n      flow.\n"
- title: A.11.  Join Process
  contents:
  - "A.11.  Join Process\n   Nodes already part of the network can periodically send\
    \ EB frames to\n   announce the presence of the network.  These contain information\n\
    \   about the size of the timeslot used in the network, the current ASN,\n   information\
    \ about the slotframes and timeslots the beaconing node is\n   listening on, and\
    \ a 1-byte join priority.  The join priority field\n   gives information to make\
    \ a better decision of which node to join.\n   Even if a node is configured to\
    \ send all EB frames on the same\n   channelOffset, because of the channel hopping\
    \ nature of TSCH\n   described in Appendix A.7, this channelOffset translates\
    \ into a\n   different frequency at different slotframe cycles.  As a result,\
    \ EB\n   frames are sent on all frequencies.\n   A node wishing to join the network\
    \ listens for EBs.  Since EBs are\n   sent on all frequencies, the joining node\
    \ can listen on any frequency\n   until it hears an EB.  What frequency it listens\
    \ on is implementation\n   specific.  Once it has received one or more EBs, the\
    \ new node enables\n   the TSCH mode and uses the ASN and the other timing information\
    \ from\n   the EB to synchronize to the network.  Using the slotframe and cell\n\
    \   information from the EB, it knows how to contact other nodes in the\n   network.\n\
    \   The IEEE 802.15.4e TSCH standard does not define the steps beyond\n   this\
    \ network \"bootstrap\".\n"
- title: A.12.  Information Elements
  contents:
  - "A.12.  Information Elements\n   TSCH introduces the concept of Information Elements\
    \ (IEs).  An IE is\n   a list of Type-Length-Value containers placed at the end\
    \ of the MAC\n   header.  A small number of types are defined for TSCH (e.g.,\
    \ the ASN\n   in the EB is contained in an IE), and an unmanaged range is available\n\
    \   for extensions.\n   A data bit in the MAC header indicates whether the frame\
    \ contains\n   IEs.  IEs are grouped into Header IEs, consumed by the MAC layer\
    \ and\n   therefore typically invisible to the next higher layer, and Payload\n\
    \   IEs, which are passed untouched to the next higher layer, possibly\n   followed\
    \ by regular payload.  Payload IEs can therefore be used for\n   the next higher\
    \ layers of two neighbor nodes to exchange information.\n"
- title: A.13.  Extensibility
  contents:
  - "A.13.  Extensibility\n   The TSCH standard is designed to be extensible.  It\
    \ introduces the\n   mechanisms as \"building block\" (e.g., cells, bundles, slotframes,\n\
    \   etc.), but leaves entire freedom to the upper layer to assemble\n   those.\
    \  The MAC protocol can be extended by defining new Header IEs.\n   An intermediate\
    \ layer can be defined to manage the MAC layer by\n   defining new Payload IEs.\n"
- title: Appendix B.  TSCH Features
  contents:
  - "Appendix B.  TSCH Features\n   This section details features of TSCH, which might\
    \ be interesting for\n   the work of the 6TiSCH WG.  It does not define any requirements.\n"
- title: B.1.  Collision-Free Communication
  contents:
  - "B.1.  Collision-Free Communication\n   TSCH allows one to design a schedule that\
    \ yields collision-free\n   communication.  This is done by building the schedule\
    \ with dedicated\n   cells in such a way that at most, one node communicates with\
    \ a\n   specific neighbor in each slotOffset/channelOffset cell.  Multiple\n \
    \  pairs of neighbor nodes can exchange data at the same time, but on\n   different\
    \ frequencies.\n"
- title: B.2.  Multi-Channel vs. Channel Hopping
  contents:
  - "B.2.  Multi-Channel vs. Channel Hopping\n   A TSCH schedule looks like a matrix\
    \ of width \"slotframe size\", S, and\n   of height \"number of frequencies\"\
    , nFreq.  For a scheduling\n   algorithm, cells can be considered atomic \"units\"\
    \ to schedule.  In\n   particular, because of the channel hopping nature of TSCH,\
    \ the\n   scheduling algorithm should not worry about the actual frequency\n \
    \  communication happens on, since it changes at each slotframe\n   iteration.\n"
- title: B.3.  Cost of (Continuous) Synchronization
  contents:
  - "B.3.  Cost of (Continuous) Synchronization\n   When there is traffic in the network,\
    \ nodes that are communicating\n   implicitly resynchronize using the data frames\
    \ they exchange.  In the\n   absence of data traffic, nodes are required to synchronize\
    \ to their\n   time source neighbor(s) periodically not to drift in time.  If\
    \ they\n   have not been communicating for some time (typically 30 s), nodes can\n\
    \   exchange a dummy data frame to resynchronize.  The frequency at which\n  \
    \ such messages need to be transmitted depends on the stability of the\n   clock\
    \ source and on how \"early\" each node starts listening for data\n   (the \"\
    guard time\").  Theoretically, with a 10 ppm clock and a 1 ms\n   guard time,\
    \ this period can be 100 s.  Assuming this exchange causes\n   the node's radio\
    \ to be on for 5 ms, this yields a radio duty cycle\n   needed to keep synchronized\
    \ of 5 ms / 100 s = 0.005%.  While TSCH\n   does require nodes to resynchronize\
    \ periodically, the cost of doing\n   so is very low.\n"
- title: B.4.  Topology Stability
  contents:
  - "B.4.  Topology Stability\n   The channel hopping nature of TSCH causes links\
    \ to be very \"stable\".\n   Wireless phenomena such as multi-path fading and\
    \ external\n   interference impact a wireless link between two nodes differently\
    \ on\n   each frequency.  If a transmission from node A to node B fails,\n   retransmitting\
    \ on a different frequency has a higher likelihood of\n   succeeding that retransmitting\
    \ on the same frequency.  As a result,\n   even when some frequencies are \"behaving\
    \ bad\", channel hopping\n   \"smoothens\" the contribution of each frequency,\
    \ resulting in more\n   stable links and therefore a more stable topology.\n"
- title: B.5.  Multiple Concurrent Slotframes
  contents:
  - "B.5.  Multiple Concurrent Slotframes\n   The TSCH standard allows for multiple\
    \ slotframes to coexist in a\n   node's schedule.  It is possible that, at some\
    \ timeslot, a node has\n   multiple activities scheduled (e.g., transmit to node\
    \ B on slotframe\n   2, receive from node C on slotframe 1).  To handle this situation,\n\
    \   the TSCH standard defines the following precedence rules:\n   1.  Transmissions\
    \ take precedence over receptions;\n   2.  Lower slotframe identifiers take precedence\
    \ over higher slotframe\n       identifiers.\n   In the example above, the node\
    \ would transmit to node B on slotframe\n   2.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Special thanks to Dominique Barthel, Patricia Brett, Guillaume\n\
    \   Gaillard, Pat Kinney, Ines Robles, Timothy J.  Salo, Jonathan Simon,\n   Rene\
    \ Struik, and Xavi Vilajosana for reviewing the document and\n   providing valuable\
    \ feedback.  Thanks to the IoT6 European Project\n   (STREP) of the 7th Framework\
    \ Program (Grant 288445).\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Watteyne (editor)\n   Linear Technology\n   32990\
    \ Alvarado-Niles Road, Suite 910\n   Union City, CA  94587\n   United States\n\
    \   Phone: +1 (510) 400-2978\n   EMail: twatteyne@linear.com\n   Maria Rita Palattella\n\
    \   University of Luxembourg\n   Interdisciplinary Centre for Security, Reliability\
    \ and Trust\n   4, rue Alphonse Weicker\n   Luxembourg  L-2721\n   Luxembourg\n\
    \   Phone: +352 46 66 44 5841\n   EMail: maria-rita.palattella@uni.lu\n   Luigi\
    \ Alfredo Grieco\n   Politecnico di Bari\n   Department of Electrical and Information\
    \ Engineering\n   Via Orabona 4\n   Bari  70125\n   Italy\n   Phone: +39 08 05\
    \ 96 3911\n   EMail: a.grieco@poliba.it\n"
