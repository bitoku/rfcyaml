- title: __initial_text__
  contents:
  - "               COMMENTS ON THE NEW TELNET SPECIFICATIONS\nI would like to make\
    \ the following comments on the proposed new TELNET\nProtocol Specification (NIC\
    \ # 15372) and TELNET Option Specification\n(NIC 15373).  In general I feel the\
    \ new TELNET protocol is far superior\nto the previous version.  There are, however,\
    \ a few items of substance\nwhich I feel should be changed, as well as some recommended\
    \ editorial\nchanges.\nI feel the most significant error concerns the \"Note on\
    \ 'Sub-\nnegotiations'\" section of the Option Specification (page 2).  The\n\
    problem stems from the statements \"Each party is presumed to be able to\nparse\
    \ the parameter(s)\" and \"Finally, if parameters in an option\n'subnegotiation'\
    \ include a byte with a value of 255, it is not necessary\nto double this byte\
    \ in accordance with the general TELNET IAC.\"  These\ntwo statements make the\
    \ completely unwarranted but all too prevalent\nassumption that there is only\
    \ one \"Telnet Interpreter\" and that all\nTELNET functions are carried out by\
    \ it.  In particular, problems arise\nwhen a TELNET \"synch\" is received, and\
    \ the receiving NCP is required to\nscan the input looking for \"interesting\"\
    \ things.  If the subnegotiation\nwas in fact being carried out by a user process\
    \ (and not the \"TELNET\ninterpreter\") then that user process is probably the\
    \ only one that knows\nhow to interpret the SB parameters; the NCP itself would\
    \ have no way of\nparsing them.  As a solution to this problem I propose that\
    \ all\nsubnegotiation parameters be delimited at the end (perhaps with the same\n\
    TELNET command SB) and that they be required to obey all TELNET rules,\nincluding\
    \ doubling of IAC's.  It may be argued that the user process\ninterpreting the\
    \ SB itself should do the scanning for \"interesting\"\nthings, but I do not feel\
    \ that this burden should be place on all user\nprocesses.\nThe solution to the\
    \ above problem is in fact fairly simple to define and\nimplement.  The general\
    \ problem, however, is one of not taking proper\ncognizance of what I called \"\
    user processes\" (processes which are not\nnetwork standards, but which are simply\
    \ programs attempting to do work\nusing the network).  I feel we must be more\
    \ careful to shape all future\nnetwork standards with these very real user processes\
    \ in mind if in fact\nthe network will ever be as useful as is possible.\nThe\
    \ second item I object to is the incredibly loose definition of\n\"interesting\"\
    \ things (an aside: words which are so imprecise as to\nrequire quotation marks\
    \ should never appear in protocol specifications).\nThe specifications do define\
    \ some of these \"interesting\" things (eg,\nmost TELNET commands) but they then\
    \ include \"and perhaps other\ncharacters or character strings as well\".  To\
    \ eliminate the difficulty\nof implementing an undefined set of \"interesting\"\
    \ things, I would\npropose that the set of \"interesting\" things, contain only\
    \ the DM\ncommand itself.  The TELNET \"synch\" would thus be defined as \"discard\n\
    all input up to and including the next DM command.\"  This change should\ncause\
    \ no problems with user-generated \"interesting\" things if they are\nsent after\
    \ the \"synch\" (as specified in the proposed new File Transfer\nProtocol Specifications).\
    \  System-generated signals (such as option\nrequests) could be discarded, however,\
    \ so some additional discussion is\nin order.  If the recommendation that requests\
    \ not be sent except when\nsomething changes is followed, the spontaneous generation\
    \ of\n\"interesting\" things by TELNET itself (whatever that implies) would seem\n\
    to be rare, especially at the same time that users are generating\n\"synch's\"\
    .  A more positive solution could be had by defining a \"synch\nresponse\" (SR)\
    \ TELNET command.  The SR command would be sent when the\nINS and DM had both\
    \ been processed (ie, when the \"synch\" had been\ncompletely received).  If a\
    \ process should ever receive an SR when it\nhas an option request outstanding,\
    \ the request has been discarded and\nmust be repeated.  User processes which\
    \ carry on option negotiations\nwould be the generators of any \"synch's\" so\
    \ they can handle discarded\noption requests as desired.  Note that this assumes\
    \ that the TELNET\nprocess itself will never generate a spontaneous \"synch\"\
    ; comments are\nsolicited on this.  Another possible solution would be to define\
    \ a\n\"TIMING-MARK\" TELNET command (see \"TELNET Timing Mark Option\", NIC #\n\
    16238), which would be sent immediately following the DM of a \"synch\".\nThe\
    \ response to the TIMING-MARK (also to be defined) would mean the same\nas the\
    \ proposed SR command.\nThe final non-editorial comment concerns the need for\
    \ some means of\nspecifying horizontal tab positions and use.  This is quite a\
    \ nuisance\nwhen dealing with systems which normally handle tabs for local\nterminals.\
    \  Perhaps this issue can be best handled with an appropriate\noption; comments\
    \ are solicited.\nThe only editorial comments are on the TELNET Protocol document,\
    \ which I\nreference below by page number.\nOn page 8 the parenthetical comment\
    \ \"(i.e., when a process at one end of\na TELNET connection is 'blocked on input')\"\
    \ should either be removed or\nrewritten to avoid the (to me) incomprehensible\
    \ phrase \"blocked on\ninput.\"  If additional discussion is felt to be necessary,\
    \ I would\npropose \"i.e., when a process at one end of a TELNET connection cannot\n\
    proceed without additional input).\"  If examples are felt necessary, I\nwould\
    \ propose \"(e.g., in the state characterized by the Multics term\n'blocked on\
    \ input').\"  The parallel could also be drawn between the GA\nand the concept\
    \ of a \"read command\" being issued to request more input.\nOn page 10 I feel\
    \ that there needs to be some more discussion of the\nAbort Output (AO) command,\
    \ particularly the statement that it \"allows a\nprocess... to run to completion...\
    \ but without sending the output to the\nuser's terminal.\"  The problem is that\
    \ nothing is said about when output\nis to resume (presumably at the next system\
    \ prompt character).  I\nrealized that the AO is meant only to invoke this function\
    \ on systems\nwhich already provide it, but it would seem to be more useful if\
    \ more\nfully specified.\nOn page 11 I do not understand what the example \"(e.g.,\
    \ an over-strike)\"\nis trying to say.  Speaking of an overstrike on output would\
    \ imply to me\nthat both characters are to be printed in the same print position,\n\
    reducing the EC to a backspace.  Some more discussion should also be\nadded as\
    \ to what EC (and EL) mean on output (if anything).\nOn page 11 I would like to\
    \ see the word \"promptly\" (which is in\nquotation marks) either eliminated or\
    \ defined, as per my earlier aside\ncomment.  The phrase \"if necessary\" in the\
    \ last line also seems\nunnecessary.\nOn page 12 my proposed redefinition of \"\
    interesting\" signals would\nremove the middle paragraph entirely and would modify\
    \ the third\nparagraph substantially.  The line \"discard all characters which\
    \ would\nhave had an effect on the NVT printer\" should be changed, however, as\
    \ it\nseems BELL's should also be discarded.\nOn page 14 I see no reason why the\
    \ sequence \"CR NUL\" is required to\ngenerate a \"CR\" only, and also object\
    \ to \"and the CR character must be\navoided in other contexts.\"  Either some\
    \ supporting discussion should be\nadded or this restriction should be removed.\n\
    \       [ This RFC was put into machine readable form for entry ]\n       [ into\
    \ the online RFC archives by Alex McKenzie with    ]\n       [ support from GTE,\
    \ formerly BBN Corp.             9/99 ]\n"
