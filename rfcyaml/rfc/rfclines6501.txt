Abstract RFC 5239 defines centralized conferencing (XCON) as an association of participants with a central focus.
The state of a conference is represented by a conference object.
This document defines an XML  based conference information data model to be used for conference objects.
A conference information data model is designed to convey information about the conference and about participation in the conference.
The conference information data model defined in this document constitutes an extension of the data format specified in the Session Initiation Protocol (SIP) event package for conference State.
There is a core data set of conference information that is utilized in any conference, independent of the specific conference media.
This core data set, called the "conference information data model", is defined in this document using an XML based format.
The conference information data model defined in this document is logically represented by the conference object.
Conference objects are a fundamental concept in centralized conferencing, as described in the centralized conferencing framework [RFC5239].
The conference object represents a particular instantiation of a conference information data model.
Consequently, conference objects use the XML format defined in this document.
The Session Initiation Protocol (SIP) event package for conference state, specified in [RFC4575], already defines a data format for conferences.
However, that model is SIP specific and lacks elements related to some of the functionality defined by the centralized conferencing framework [RFC5239] (e.g., floor control).
The data model defined in this document constitutes a superset of the data format defined in [RFC4575].
The result is a data format that supports more call signaling protocols (CSPs) besides SIP and that covers all the functionality defined in the centralized conferencing framework [RFC5239].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
This document uses the terminology defined in the centralized conferencing framework [RFC5239], the SIPPING conferencing framework [RFC4353], and the BFCP (Binary Floor Control Protocol) specification [RFC4582].
Readers of this document should be familiar with the terminology used in those documents.
The data model specified in this document is the result of extending the data format defined in [RFC4575] with new elements.
Examples of such extensions include scheduling elements, media control elements, floor control elements, non SIP URIs, and the addition of localization extensions to text elements.
This data model can be used by conference servers providing different types of basic conferences.
It is expected that this data model can be further extended with new elements in the future in order to implement additional advanced features.
Data Model Format A conference object document is an XML [W3C.REC xml 20081126] document.
Conference object documents MUST be based on XML 1.0 and MUST be encoded using UTF 8.
The normative description of the syntax of the conference object document, for use by implementers of parsers and generators, is found in the RELAX
NG schema provided in Section 5.
Compliant messages MUST meet the requirements of that schema.
This specification defines a new namespace specification for identifying the elements defined in the data model.
This namespace is as follows:
The conference object identifier (XCON URI) can be viewed as a key to accessing a specific conference object.
It can be used, for instance, by the conference control protocol to access, manipulate and delete a conference object.
A conference object identifier is provided to the conferencing client by the conference notification service or through out of band mechanisms (e.g., email).
A conferencing system may maintain a relationship between the conference object identifiers and the identifiers associated with each of the complementary centralized conferencing protocols (e.g., call signaling protocol, BFCP, etc.).
To facilitate the maintenance of these relationships, the conference object identifier acts as a top level identifier within the conferencing system for the purpose of identifying the interfaces for these other protocols.
This implicit binding provides a structured mapping of the various protocols with the associated conference object identifier.
Figure 1 illustrates the relationship between the identifiers used for the protocols and the general conference object identifier (XCON URI).
In Figure 1, the conference object identifier acts as the top level key in the identification process.
The call signaling protocols have an associated conference user identifier, often represented in the form of a URI.
The BFCP, as defined in [RFC4582], defines the 'conference ID' identifier which represents a conference instance within floor control.
When created within the conferencing system, the 'conference ID' has a 1:1 mapping to the unique conference object identifier(XCON URI).
Operations associated with the conference control protocols are directly associated with the conference object; thus, the primary identifier associated with these protocols is the conference object identifier(XCON URI).
The mappings between additional protocols/interfaces is not strictly 1:1 and does allow for multiple occurrences.
For example, multiple call signaling protocols will each have a representation that is implicitly linked to the top level conference object identifier, e.g., H323 and SIP URIs that represent a conference instance.
It should be noted that a conferencing system is free to structure such relationships as required, and this information is just included as a guideline that can be used.
Further elements can be added to the tree representation in Figure 1 to enable a complete representation of a conference instance within a conferencing system.
The syntax is defined by the following ABNF [RFC5234] rules.
"] host conf object i
Note: host and unreserved are defined in RFC 3986 [RFC3986].
An XCON URI is not designed to be resolved, and an application MUST NOT attempt to perform a standard DNS lookup on the host portion of such a URI in an attempt to discover an IP address or port at which to connect.
Normalization and Conference Object URI Comparison
In order to facilitate the comparison of the XCON URI identifiers, all the components of the identifiers MUST be converted to lowercase.
After normalizing the URI strings, the URI comparison MUST be applied on a character by character basis as prescribed by [RFC3986], Section 6.2.1.
The host construction, as defined in RFC 3986, can take the form of an IP address, which is not conventionally compared on a character  by character basis.
The host part of an XCON URI serves only as an identifier; that is, it is never used as an address.
The character  by character comparison still applies.
The information in this data model is structured in the following manner.
All the information related to a conference is contained in a <conference info> element.
> element contains the following child elements:
> element describes the conference as a whole.
It has, for instance, information about the URI of the conference, maximum users allowed in the conference, media available in the conference, or the time the conference will start.
> element contains information about the entity hosting the conference (e.g., its URI).
The <conference state> element informs the subscribers about the changes in the overall conference information.
> element contains information about the status of the different floors in the conference.
The <users> element describes the membership information as a whole.
> element contains a set of <user> child elements, each describing a single participant in the conference.
If a participant in the main conference joins a sidebar, a new element is created in the conference referenced from the <sidebars by ref> element or under one of the <sidebars by val> elements.
Note that some of the elements described above such as <conference  info>, <conference description>, <sidebars by ref>, or <sidebars by  val> are not defined in the data model in this specification but are defined in the data format of [RFC4575].
We describe them here because they are part of the basic structure of the data model.
The following non normative diagram shows the structure of conference object documents.
The following sections describe these elements in detail.
The full RELAX NG schema is provided in Section 5.
A conference object document begins with the root element <conference info>, which is defined in [RFC4575].
The 'state' and 'version' attributes of the <conference info> element are defined in [RFC4575] and are not used in the context of the XCON Conference Information Model since they apply only to notification mechanisms.
In addition, [RFC4575] defines an 'entity' attribute that contains the SIP URI identifier.
This specification extends the meaning of the 'entity' attribute to the conference object identifier (XCON URI)
This specification adds to the <conference info> element the child elements of the <floor information> element.
The <conference description> element, which is defined in [RFC4575], describes the conference as a whole.
It SHOULD have an attribute 'lang' to specify the language used in the contents of this element.
It is comprised of <language>, <display text>, <subject>, <free  text
>, <allow sidebars>, <cloning parent>, <sidebar  parent>, <conference time>, <conf uris>, <service uris>, <maximum  user count>, and <available media
The <display text>, <subject>, <free text
>, <service uris>, and <maximum user count> elements are described in Section 5.3 of [RFC4575].
The following sections describe these elements in more detail.
Other child elements MAY be defined in the future to extend the <conference description> element.
The <language> element indicates the predominant language that is expected to be employed within a conference.
This element contains only one language.
The possible values of this element are the values of the 'Subtag' column of the "Language Subtag Registry" at [IANA Lan] originally defined in [RFC5646].
This element does not enforce the language of the conference: it only informs the participants about the desirable language that they should use in the conference.
Participants are free to switch to other languages if they like.
> element represents a boolean value.
If set to true or "1", the conference is allowed to create sidebar conferences.
If absent, or set to "false" or "0", the conference cannot create sidebar conferences.
When the <cloning parent> is present, it indicates that the conference object is a child of a parent conference.
> element contains the conference object identifier (XCON URI)
(different from the main XCON URI) of the parent.
When the <sidebar parent> is present, it indicates that the conference object represents a sidebar of another conference.
> element contains the conference object identifier (XCON URI)
(different from the main XCON URI) of the parent.
> The <conference time> element contains the information related to time, policy, and duration of a conference.
> element contains one or more <entry> elements, each defining the time and policy information specifying a single conference occurrence.
> element differs from the iCalendar objects
in that it has the ability to define different policies (<can join after offset>, <must join before offset>) for the same conference at different times.
Every <entry> element contains the following child elements:  <base
>: The <base> child element specifies the iCalendar object of the conference.
The iCalendar object components are defined in [RFC5545].
<mixing start offset>: The <mixing start offset> child element specifies when the conference media mixing starts before the conference starts.
> element specifies an absolute value rather than an offset value.
If the <mixing start  offset> element is not present, it indicates that the conference media mixing starts immediately.
The <mixing start offset> MUST include the 'required participant' attribute.
This attribute contains one of the following values: "none", "administrator", "moderator", "user", "observer", and "participant".
The roles' semantic definitions are out of the scope of this document and are subject to future policy documents.
More values can be specified in the future.
The 'required participant' attribute allows a privileged user to define when media mixing starts based on the latter of the mixing start time and the time the first participant arrives.
If the value is set to "none", mixing starts according to the mixing start time.
The <mixing end offset> child element specifies the time conference media mixing stops after the conference stops.
If the <mixing end offset
> element is not present, it indicates that the conference occurrence is not bounded.
> element MUST include the 'required participant' attribute.
This attribute contains one of the following values: "none", "administrator", "moderator", "user", "observer", and "participant".
More values can be specified in the future.
The 'required participant' attribute allows a privileged user to define when media mixing ends based on the earlier of the <mixing end
and the time the last participant leaves.
If the value is set to "none", mixing stops according to the <mixing end offset>.
If the conference policy was modified so that the last privileged user is now a normal conference participant, and the conference requires a privileged user to continue, that conference MUST terminate.
: An administrator can indicate the time when users can join a conference by populating the <can join  after offset> element.
An administrator can define the time after which new users are not allowed to join the conference anymore.
>: This element defines the time when users or resources on the <allowed users list> are requested to join the conference by using the <request users> element.
The <notify end of conference> element defines in seconds when the system MUST send a notification that the end of the conference is approaching.
If the <notify end of  conference
> element is not present, this indicates that the system does not notify the users when the end of the conference is approaching.
<allowed extend mixing end offset>: The <allowed extend mixing  end offset
> element indicates if the conference is allowed to be extended.
It has a boolean value.
The <conf uris> contains a set of <entry> child elements   each containing a new element:
This element contains the password(s) of the conference, for instance, Public Switched Telephone Network (PSTN) conference will store the 'PIN code' in this element.
All the other <conf uris> child elements are described in Section 5.3.1 of [RFC4575].
The RELAX NG schema in Section 5 allows <conference password> to appear anywhere uris type is expanded.
This document only provides meaning for <conference password> appearing as a descendant of the <conf uris> element.
Future standardization may give meaning to <conference password
> appearing in other elements of type "uris  type".
In the absence of such standardization, <conference password> MUST NOT appear in elements of type "uris type" other than <conf  uris
> element consists of a sequence of <entry> child elements.
Each <entry> element MAY contain the following child elements:  The <display text>, <type>, and <status> elements are described in Section 5.3.4 of [RFC4575].
The child element <mixing mode> describes a default scheduling policy by which the mixer will build the outgoing stream from the incoming streams.
Note that this policy is different than the policy describing the floors for each media.
The <mixing mode> child element MUST contain one and only one of the "moderator  controlled", "FCFS", and "automatic" values, indicating the default algorithm to use with every media stream.
The "moderator  controlled" value indicates that the moderator of the conference controls the media stream policy.
The "FCFS" value indicates a 'first come first served' policy.
The "automatic" value means the mixer must choose the best scheduling policy for the conference.
The <codecs> element specifies the allowed codecs in the conference.
It has an attribute 'decision' that specifies if the focus decides the common codec automatically or needs the approval of the moderator of the conference ("automatic", "moderator  controlled").
The <codecs> element contains <codec> elements.
A <codec> element can have the attribute 'name' and 'policy'.
The 'name' attribute is a codec identifier assigned by the conferencing server.
The 'policy' attribute contains the policy for that codec (allowed or disallowed).
> element has the child element <subtype>, which stores the codec's name.
The possible values of this element are the values of the 'subtype' column of the "RTP Payload Format media types" registry at [IANA] originally defined in [RFC4855].
It is expected that future conferencing specifications will define corresponding schema extensions, as appropriate.
> element contains the basic audio and video global control elements for a conference.
These controls are sufficient for the majority of basic conferences.
If the conference server wants to support more advanced controls, then it is RECOMMENDED that an extension to the data model be used.
In the <controls> element, the schema is extensible; hence, new control types can be added in the future.
So, moderator controls that affect all media output would go under the <available media> element.
The following child elements are defined for <controls>:
The <mute> element is used in conjunction with an audio stream to cease transmission of any audio from the associated stream.
That means that for the entire duration where mute is applicable, all current and future participants of the conference are muted and will not send any audio.
It has a boolean value.
If this control is not specified, access to the control is not available to the client.
The <pause video> element is used in conjunction with a video stream to cease transmission of associated media.
It has a boolean value.
If this control is not specified, the access to the control is not available to the client.
The <gain> element is used in conjunction with a media output stream to indicate the amount of amplification of an audio stream.
The value is an integer number that ranges from  127 to 127.
If this control is not specified, access to the control is not available to the client.
> element is used in conjunction with a video stream to specify how the video streams (of participants) are viewed by each participant.
Only one layout type can be specified for each output stream.
If there are fewer participants than panels in the specified layout, then blanking (black screen)
MAY be mixed into the stream on the behalf of the missing input streams.
If unspecified, the <video layout> default type SHOULD be "single view".
The <video layout> types are as follows, although any number of custom layouts may be specified in future extensions:
single view: Only one stream is presented by the focus to all participants in one panel.
dual view: This dual view option will present the video side by side in two panels and not alter the aspect ratio of the streams.
This will require the focus to introduce blanking on parts of the overall image as viewed by the participants.
This side by side layout option instructs the focus to alter the aspect ratio of the streams
so that blanking is not necessary.
The focus handles the cropping of the streams.
: This layout option instructs the focus to place one stream above the other, in essence, with two rows and one column.
In this option, the aspect ratio is not altered and blanking is introduced.
2x1 crop: This layout option also instructs the focus to place one stream above the other, in essence, with two rows and one column.
In this option, the aspect ratio is altered and the video streams are cropped.
Four equal sized panels in a 2x2 layout are presented by the focus to all participants.
Typically, the aspect ratio of the streams are maintained (alter aspect  ratio  FALSE).
Nine equal sized panels in a 3x3 layout are presented by the focus to all participants.
Typically, the aspect ratio of the streams are preserved.
: 16 equal sized panels in a 4x4 layout are presented by the focus to all participants.
Typically, the aspect ratio of the streams are preserved.
multiple 5x1: This option refers to a 5x1 layout where one panel will occupy 4/9 of the mixed video stream while the others will each occupy 1/9 of the stream.
Typically, the aspect ratio of the streams is preserved.
This option allows the focus to add panels as streams are added.
The <host info> element and its child elements are described in [RFC4575], Section 5.4. 4.4.
The <conference state> is introduced in [RFC4575].
> element contains the <allow conference event subscription>, <user count>, <active>, and <locked> child elements.
>, <active>, and <locked> child elements are defined in [RFC4575], Section 5.5.
The <allow conference event subscription
> element represents a boolean action.
If set to true, the focus is instructed to allow the subscription to conference state events, such as 'SIP event package for conference state' [RFC4575].
If set to FALSE, the subscription to conference state events MUST be rejected.
If this element is undefined, it has a default value of true, causing the subscription to conference state events to be accepted.
The <floor information> element contains the <conference ID>, <allow  floor events
>, <floor request handling>, and <conference floor  policy> child elements.
The absence of this element from an XML document indicates that the conference does not have a floor.
The <conference ID> represents a conference instance within floor control.
When BFCP serves as the floor control protocol, the <conference ID
> is a 32 bit BFCP conference identifier defined in [RFC4582], Section 5.1.
Note that when created within the conferencing system, there is a 1:1 mapping between this <conference ID
> and the unique conference object identifier (XCON  URI).
> element represents a boolean action.
If set to true, the focus is instructed to accept the subscription to floor control events.
If set to FALSE, the focus is instructed to reject the subscription.
If this element is undefined, it has a default value of FALSE, causing the subscription to floor control events to be rejected.
A conference participant can subscribe himself to a floor control event in two different ways: one method is using an offer/answer exchange mechanism ([RFC3264]) using SIP INVITE and BFCP parameters in the SDP [RFC4583], the other method is a general authorization mechanism described in Section 9 of [RFC4582] and in [RFC5018].
Future documentation may define additional connection mechanisms.
> element defines the actions used by the conference focus to control floor requests.
This element defines the action that the focus is to take when processing a particular request to a floor within a conference.
This element defines values of the following:  "block":
This action instructs the focus to deny the floor request.
This action is the default action taken in the absence of any other actions.
"confirm": This action instructs the focus to allow the request.
The focus then uses the defined floor algorithm to further allow or deny the floor.
The algorithms used are outside the scope of this document.
Note that this section discusses floor control information; therefore, the value "block" in a <floor request handling
> element is not related with the "block" value in the <join handling> element (see Section 4.6.1).
> The <conference floor policy> element has one or more <floor> child elements.
Every <floor> child elements has an attribute 'id', which uniquely identifies a floor within a conference.
In the case of BFCP [RFC4582], the 'id' attribute corresponds to the floor
id identifier defined in [RFC4582], Section 5.2.2.
Every floor is identified for one or more mandatory <media label> elements.
If the <available media> information is included in the conference document, the value of this element MUST be equal to the "label" value of the corresponding media stream <entry> in the <available media> container.
The number of those elements indicates how many floors the conference can have.
A floor can be used for one or more media types;  <algorithm>:
A floor can be controlled using many algorithms; the mandatory <algorithm> element MUST be set to any of the "moderator controlled", "FCFS", or "random" values indicating the algorithm.
The "moderator controlled" value indicates that the moderator of the conference controls the floor.
The "FCFS" value indicates a 'first come first served' policy.
>: The <max floor users> child element in the <floor> element is OPTIONAL and, if present, dictates the maximum number of users who can have the floor at one time.
The OPTIONAL <moderator id> indicates the "User ID" of the moderator(s).
It MUST be set if the element <algorithm> is set to the "moderator controlled" value.
When the floor is created within the conferencing system, the XCON USERID MAY be used as the <moderator id
In the case where the BFCP is the floor control protocol, the <moderator id> is defined in [RFC4582], Section 3.
Note that [RFC4582] refers to the moderator role as a "floor chair".
The <users> element is described in [RFC4575] and contains the <join  handling>, <user admission policy>, <allowed users list>, and <deny  users list> defined in this document and <user> child elements defined in [RFC4575].
When the <users> element is used in the context of the XCON Conference Information Model, the 'state' and 'version' attributes defined in [RFC4575] are not used, since they apply only to notification mechanisms.
The following sections describe these elements in more detail.
Other child elements and attributes can be used to extend <users> in the future.
> element defines the actions used by the conference focus to control conference participation.
This element defines the action that the focus is to take when processing a particular request to join a conference.
This element defines values of:  "block": This action instructs the focus to deny access to the conference.
This action is the default action taken in the absence of any other actions.
"confirm": This action instructs the focus to place the participant on a pending list (e.g., by parking the call on a music on hold server), awaiting moderator input for further actions.
"allow": This action instructs the focus to accept the conference join request and grant access to the conference within the instructions specified in the transformations of this rule.
"authenticate": This action instructs the focus that the user has to provide a combination of username/password.
"directed operator": This action instructs the focus to direct the user to an operator.
> is an element that lets an organizer (or a participant with appropriate rights) choose a policy for the conference that controls how users are authenticated into the conference, using a mechanism of the conference's choosing.
Since a variety of signaling protocols are possible, a variety of authentication mechanisms   determined by every individual conference server   may need to be mapped from the different protocols.
The specific types of authentication mechanisms are beyond the scope of this document.
The list of possible values are as follows:  "closedAuthenticated": A 'closedAuthenticated' policy MUST have each conference participant in the allowed users list (listed under the <allowed users list> element) with each participant being sufficiently (up to local policy) authenticated.
requests for users not in the allowed users list or participants not authenticated should be rejected unless a <join  handling> action of 'confirm' is selected; in which case, the user is placed on a pending list as indicated earlier.
A 'closedAuthenticated' policy MUST NOT include a <deny users list>.
If <deny users list> appears in the data model, it MUST be ignored.
"openAuthenticated": An 'openAuthenticated' policy requires each conferencing participant to be sufficiently authenticated.
Typically, this implies that anyone capable of authenticating with the conferencing system may join the conference.
The 'openAuthenticated' policy permits the specification of "banned" conferencing participants.
Such banned users are prevented from re joining the conference until they have been un banned.
An 'openAuthenticated' policy SHOULD have a deny users list (listed under the <deny users list> XML element) to support the banning of conferencing participants from a conference.
An 'openAuthenticated' policy MUST NOT include an <allowed users  list
If <allowed users list> appears in the data model, it MUST be ignored.
"anonymous": An 'anonymous' policy grants any join requests and is the least restrictive policy.
An 'anonymous' policy MUST NOT include either an <allowed users list> or a <deny users list
If any of these lists appear in the data model, they MUST be ignored.
In all other cases, the appearance of an <allowed users list> and <deny users list> MUST be ignored, except as otherwise described in a future specification.
Future specifications describing the use of these lists must provide clear guidance on how to process the lists when they occur concurrently, especially when both lists contain the same user.
For example, such a specification could disallow both lists from appearing at the same time similar to <user admission  policy
> values defined in this document.
The <allowed users list> element includes zero or more <target> child elements.
This child element includes the mandatory 'uri' attribute and the mandatory 'method' attribute.
The same 'uri' attribute with different method values can appear in the list more than once.
The 'method' attribute is a list with the following values:  "dial in":
The value "dial in" is used by the focus to determine who can join the conference.
The value "dial out" contains a list of resources with which the focus will initiate a session.
"refer": The value "refer" is used by the focus to determine the resources that the focus needs to "refer to" the conference.
In SIP, this is achieved by the focus sending a REFER request to those potential participants.
In a different paradigm, this could also mean that the focus sends an SMS or an email to the referred user.
This list can be updated during the conference lifetime so it can be used for mid conference refers as well.
The "refer" value differs from "dial out" in that the resources on the "refer" value are expected to initiate the session establishment toward the focus themselves.
It is also envisioned that different users will have different access rights to those lists and therefore a separation between the two is needed.
> element has a <persistent list> child element as well.
Some chat room systems allow   and some require   registration of detailed information about a user before they are allowed to join a chat room.
The <persistent list> child element stores persistent information about users who are not actively part of an ongoing chat room session.
The <persistent list> element stores
The <user> element stores the name, nickname, conference user identifier (XCON USERID), and email address of a user.
It has three attributes: 'name', 'nickname', and 'id' and an <email> element.
Future extensions to this schema may define new elements for the <user> element.
Future extensions to this schema may define new elements for the <target> element.
Such banned users are prevented from re joining the chat room until the ban has been lifted.
<user> and Its <user> Sub Elements
The element <user> is described in [RFC4575] and describes a single participant in the conference.
The <user> element has an attribute 'entity'.
However, when the <user> element is used in the context of the XCON Conference Information Model, the 'state' and 'version' attributes defined in [RFC4575] are not used, since they only apply to notification mechanisms.
The attribute 'entity' contains a unique conference user identifier (XCON USERID) within the scope of the conference.
The URI format of this identifier is as follows (using ABNF [RFC5234]):
1 unreserved Note: unreserved is defined in RFC 3986.
In order to facilitate the comparison of the XCON USERID identifiers, all the components of the identifiers MUST be converted to lowercase.
After normalizing the URI strings, the URIs comparison MUST be applied codepoint by codepoint after conversion to a common character encoding, as prescribed by [RFC3986], Section 6.2.1.
Other user identifiers can be associated with this conference user identifier and enable the conferencing system to correlate and map these multiple authenticated user identities to a single global user identifier.
Figure 2 illustrates an example using the conference user identifier in association with the user identity defined for BFCP, SIP, and H323 user identity.
It should be noted that a conferencing system is free to structure such relationships as required, and this information is just included as a guideline.
The element <user> element contains the <display text>, <associated  aors>, <provide anonymity>, <roles>, <languages>, <cascaded focus
>, <allow refer users dynamically>, <allow invite users dynamically>, <allow remove users dynamically>, and <endpoint>.
The following sections describe these elements in more detail.
The <display text>, <associated aors>, <languages>, and <cascaded focus
> are defined in [RFC4575], Section 5.6.
The <provide anonymity> element specifies what level of anonymity the server should provide to the user.
In this case, the focus provides the rest of the participants with an anonymous identity for that user, for example, anonymousX, or it does not provide any information for that user such that other users cannot see he is a participant in the conference.
This element only affects the way the user information is provided to the other participants.
The real user information is stored in the data model but SHOULD NOT be provided to the other participants of the conference.
This can be achieved by using the <provide anonymity> element.
This element has three values: "private", "semi private", and "hidden".
The "private" value specifies that this user is completely anonymous in the conference.
The "semi private" value specifies that this user is anonymous to all users who have not been granted permission to see him.
The "hidden" value specifies that other users cannot see this participant in the conference.
A <role> provides the context for the set of conference operations that a participant can perform.
This element can contain one or more of the following values: "administrator", "moderator", "user", "participant", "observer", and "none".
A role of "none" indicates that any role is assigned.
The <roles> semantic definition is out of the scope of this document and is subject to future policy documents.
This element can be extended with new roles in future documents.
The <allow refer users dynamically> element represents a boolean value.
If set to true, a participant is allowed to instruct the focus to refer a user to the conference without modifying the <allowed users list> (in SIP terms, a participant is allowed to send a REFER request [RFC3515] to the focus, which results in the focus sending a REFER request to the user the referrer wishes to join the conference).
If set to FALSE, the REFER request is rejected.
If this element is undefined, it has a value of FALSE, causing the REFER request to be rejected.
The <allow invite users dynamically> element represents a boolean action.
If set to true, a participant is allowed to instruct the focus to invite a user to the conference without modifying the <allowed users list> list (in SIP terms, a participant is allowed to send a REFER request [RFC3515] to the focus, which results in the focus sending an INVITE request to the user the referrer wishes to join the conference).
If set to FALSE, the REFER request is rejected.
If this element is undefined, it has a value of FALSE, causing the REFER request to be rejected.
The <allow remove users dynamically> element represents a boolean action.
If set to true, a participant is allowed to instruct the focus to remove a user from the conference without modifying the ruleset (in SIP terms, a participant is allowed to send a REFER request [RFC3515] to the focus, which results in the focus sending a BYE request to the user the referrer wishes to leave the conference).
If set to FALSE, the REFER request is rejected.
If this element is undefined, it has a value of FALSE, causing the REFER request to be rejected.
<endpoint> The <endpoint> child element is identical to the element with the same name in [RFC4575] except that the 'state' attribute is not included.
When the <endpoint> element is used in the context of the XCON Conference Information Model, the 'state' and 'version' attributes defined in [RFC4575] are not used, since they apply only to notification mechanisms.
The <endpoint> element can provide the desired level of detail about the user's devices and their signaling sessions taking part in the conference.
The <endpoint> element has the following child elements: <display  text>, <referred>, <status>,
>, <joining info>, <disconnection method>, <disconnection info>, <media>, and <call  info
All the <endpoint> child elements are defined in [RFC4575] with the exception of the <to mixer> element and the <from mixer> element.
The <to mixer> element details properties associated with the incoming streams to the mixer (streams sent to the mixer from the participant).
The <from mixer> element details properties associated with the outgoing streams from the mixer (sent from the mixer to the participant).
Both of these elements have the attribute 'name'.
The 'name' attribute has the values "VideoIn", "VideoOut", "AudioOut", and "AudioIn".
The "VideoOut" and "AudioOut" media streams detail properties associated with the outgoing video and audio from the mixer.
The "VideoIn" and "AudioIn" media stream details properties associated with the incoming video and audio to the mixer.
Both of these elements can have the <floor> child element defined:
> element refers to the floor assigned to a certain participant in the conference.
If a participant, for instance, needs to talk in the conference, it first needs to get the floor from the chair of the conference.
> element has an attribute 'id', which uniquely identifies a floor within a conference.
The 'id' attribute corresponds to the floor
id identifier defined in [RFC4582], Section 5.2.2.
> element has a boolean value.
A value of FALSE indicates that this user does not hold the floor in this moment.
If this control is not specified, this user SHOULD NOT specify the floor option.
More values can be defined in the future.
> The <sidebars by ref> element contains a set of <entry> child elements.
This element is described in [RFC4575], Section 5.9.1.
When the <sidebars by ref> element is used in the context of the XCON conference information model, the 'state' and 'version' attributes defined in [RFC4575] are not used, since they apply only to notification mechanisms.
> The <sidebars by val> element contains a set of <entry> child elements each containing information about a single sidebar.
This element is described in [RFC4575], Section 5.9.2.
When the <sidebars by val> element is used in the context of the XCON conference information model, the 'state' and 'version' attributes defined in [RFC4575] are not used, since they apply only to notification mechanisms.
In accordance with the centralized conferencing framework document [RFC5239], the conference object is a logical representation of a conference instance.
The conference information schema contains core information that is utilized in any conference.
It also contains the variable information part of the conference object.
The normative schema is backwards compatible with [RFC5239], in other words, valid [RFC5239] instance documents are also valid according to this RELAX
In addition to approximately similar RELAX NG [RELAX] definitions of [RFC5239], this schema contains extension elements in the "urn:ietf:params:xml:ns:xcon conference info" namespace.
"urn:ietf:params:xml:ns:xcon conference info" start   element conference info
& element locked { xsd:
element xcon:allow conference event subscription { xsd:boolean }?
allow refer users dynamically { xsd:
element xcon:allow remove users dynamically { xsd:boolean }?
# ENDPOINT STATUS TYPE endpoint status type
element sip { sip dialog id type } &
anyElement  & anyAttribute # SIP DIALOG ID TYPE sip dialog
# MEDIA TYPE media type   attribute
# MEDIA STATUS TYPE media status type
, element xcon:must join before offset { time type }?
# TIME TYPE time type
# SINGLE ROLE TYPE single role type
xsd:string "participant"   free text extension # MIXING MODE TYPE mixing mode type
string "moderator controlled"   xsd:string "FCFS"
# DECISION TYPE decision type
string "moderator controlled"   free text extension # POLICY TYPE policy type
xsd:string "allowed"   xsd:string "disallowed"   free text extension
string "dual view 2x1 crop"
xsd:string "automatic"   free text extension
allow floor events { xsd:
# FLOOR REQUEST TYPE floor request type
xsd:string "confirm"   free text extension # CONFERENCE FLOOR POLICY conference floor policy   anyAttribute & element xcon:floor { attribute i
max floor users { xsd:
string "moderator controlled"   xsd:string "FCFS"
xsd:string "random"   free text extension
# USERS ADMISSION POLICY user admission policy type
xsd:string "anonymous"   free text extension
# JOIN HANDLING TYPE join handling type
xsd:string "directed operator"   free text extension
# DENY USERLIST deny user list type   anyAttribute & element xcon:target { attribute uri {
# PERSISTENT LIST TYPE persistent list type
# METHOD TYPE method type
xsd:string "dial in"   xsd:string "dial out"
xsd:string "refer"   free text extension
# ANONYMITY TYPE provide anonymity type
# EXTENSIBILITY OF THE SCHEMA #
users   sidebars by ref   sidebars by val   display
modified   user   associated aors   roles   languages
call id   from tag   to tag   label
cloning parent   xcon:sidebar parent   xcon:allow conference event subscription
xcon:allow refer users dynamically   xcon:
allow invite users dynamically   xcon:allow
user admission policy   xcon:allowed users list
conference time   xcon:provide anonymity   xcon:floor
mixing end offset   xcon:can join after offset
request user   xcon:notify end of conference   xcon:allowed extend mixing end offset
xcon:floor request handling   xcon:conference floor policy
moderator id   xcon:target   xcon:persistent list
lang   entity   required participant   label   decision   name   policy
id   nickname) { text }  6.
The conference information data model defined in this document is meant to be extensible.
Extensions are accomplished by defining elements or attributes qualified by namespaces other than "urn:ietf:params:xml:ns:conference info" and "urn:ietf:
params:xml:ns:xcon conference info" for use wherever the schema allows such extensions (i.e., where the RELAX NG definition specifies "anyAttribute" or "anyElement").
Elements or attributes from unknown namespaces MUST be ignored.
The following is an example of a conference information document.
The conference starts on October 17, 2007, at 10:30 a.m. in New York City and finishes the same day at 12:30 p.m. every week and repeats every week.
In this example, there are currently three participants in the conference: one administrator, one moderator, and one participant.
Sidebars are allowed in this conference and, consequently, there is one sidebar in the conference.
In addition, Alice and Carol are using a floor in the main conference to manage the audio and video resources.
At the moment, Alice is assigned to use the floor.
xml version "1.0" encoding "UTF 8"?
<conference info xmlns "urn:ietf:params:xml:ns:conference info" xmlns:
xcon "urn:ietf:params:xml:ns:xcon conference info" entity "conference123@example.com"
:lang "en us"> <display text>Discussion of Formula 1 racing</display text> <subject
> <display text>Conference Bridge</display text>
bob@example.com</uri> <display text>email</display text> </entry> </service uris> <!
MAXIMUM USER COUNT   <maximum user count>50</maximum user count
> <entry label "10234"> <display text>main audio</display text> <type>audio</type> <status>sendrecv</status
codec name "122" policy "allowed"> <xcon:subtype
:controls> </entry> <entry label "10235">
<display text>main video</display text> <type>video</type> <status>sendrecv</status
codec name "123" policy "allowed"> <xcon:subtype>H.263</xcon:
> <xcon:video layout >single view</xcon:
VEVENT DTSTAMP:20071003T140728Z UID:20071003T140728Z 345FDA carol@example.com
mixing start offset required participant "moderator"
mixing start offset> <xcon:mixing end offset required participant "participant" >2007
mixing end offset> <xcon:must join before offset >2007 10
17T15:30:00Z </xcon:must join before offset> </xcon
:entry> </xcon:conference time> </conference description
>Formula1</display text> <web page>http://www.example.com/formula1/</web page
<conference state> <user count>3</user count
Bob Hoskins</display text> <associated aors
bob@example.com</uri> <display text>email</display text> </entry> </associated aors> <roles> <entry>participant</entry> </roles> <languages>en us</languages
Bob's Laptop</display text> <referred> <when>2007 10 17T14:00:00Z</when> <reason>
</xcon:controls> </xcon:to mixer> </media> <!
CALL INFO   <call info> <sip>
vav738dvbs</from tag> <to tag>8954jgjg8432</to tag> </sip
> </call info> </endpoint> <xcon:
allow refer users dynamically >false</xcon:
allow refer users dynamically> <xcon:
allow invite users dynamically >false</xcon:allow invite users dynamically> <xcon:
allow remove users dynamically >false</xcon:
allow remove users dynamically> </user> <!
alice334"> <display text>Alice Kay</display text> <associated aors> <entry>
>email</display text> </entry> </associated aors>
<roles> <entry>moderator</entry> </roles> <languages>en us</languages
>dialed in</joining method> <joining info> <when>2007 10 17T13:35:08Z</when> <reason
>invitation</reason> <by>sip:conference@example.com</by> </joining info> <!
> <media id "2"> <type
to mixer name "AudioIn"> <xcon:controls>
:controls> </xcon:to mixer> <xcon:from mixer name "AudioOut"> <xcon:
:controls> </xcon:from mixer> </media> <!
CALL INFO   <call info> <sip>
> <to tag>3456jgjg1234</to tag> </sip
floor id "345">true</xcon:floor> </endpoint> <xcon:provide anonymity
:allow refer users dynamically> <xcon:allow invite users dynamically
:allow invite users dynamically> <xcon:
:allow remove users dynamically> </user> <!
Carol More</display text> <associated aors
email</display text> </entry> </associated aors>
<roles> <entry>administrator</entry> </roles> <languages>en us</languages
>dialed in</joining method> <joining info> <when>2007 10
>invitation</reason> <by>sip:conference@example.com</by> </joining info> <!
> <media id "2"> <type
to mixer name "AudioIn"> <xcon:controls>
:controls> </xcon:to mixer> <xcon:from mixer name "AudioOut"> <xcon:
:controls> </xcon:from mixer> </media> <!
CALL INFO   <call info> <sip>
:allow refer users dynamically> <xcon:allow invite users dynamically
:allow invite users dynamically> <xcon:
:allow remove users dynamically> </user> <xcon:
target uri "sip:bob@example.com" method "dial out"/>
target uri "sip:alice@example.com" method "dial out"/>
target uri "sip:carol@example.com" method "dial out"/
> </xcon:allowed users list> <!
deny users list> </users> <!
SIDEBARS BY REFERENCE   <sidebars by ref> <entry
<display text>private with Bob</display text> </entry> </sidebars by ref> <!
<sidebars by val> <entry entity "conf223"> <users> <user entity "xcon userid:bob534"/
</users> </entry> </sidebars by val> <!
<xcon:floor information> <xcon:conference ID>567</xcon:conference ID> <xcon:
floor request handling> <xcon:conference floor policy>
media label>10235</xcon:media label> <xcon:algorithm >
conference floor policy> </xcon:floor information>
Note that due to RFC formatting conventions, this documents splits lines whose content would exceed 72 characters.
There are numerous security considerations for this document.
Overall, the security considerations for authentication and the Security and Privacy of Identity described in Sections 11 and 11.2, respectively, of the centralized conferencing framework document [RFC5239] apply to this document.
This specification defines a data model for conference objects.
Different conferencing systems may use different protocols to provide access to these conference objects.
This section contains general security considerations for the conference objects and for the protocols.
The specification of each particular protocol needs to discuss how the specific protocol meets the security requirements provided in this section.
A given conferencing system usually supports different protocols in order to implement different functions (e.g., SIP for session control and BFCP for floor control).
Each of these protocols may use its own authentication mechanism.
In cases where a user is authenticated using multiple authentication mechanisms, it is up to the conferencing system to map all the different authentications to the same user.
Discussing the specifics of different authentication mechanism is beyond the scope of this document.
Furthermore, users may use different identifiers to access a conference, as explained in Section 4.6.5.
These different namespaces can be associated with a unique conference user identifier (XCON USERID).
A mapping database is used to map all these authenticated user namespaces to the XCON USERID.
There are several threats against this database.
In order to minimize these threats, the administrator of the conferencing system MUST ensure that only authorized users can connect to this database (e.g., by using access control rules).
In particular, the integrity of the database MUST be protected against unauthorized modifications.
In addition, the XCON  USERID or XCON URI SHOULD be hard to guess.
It is critical that the URI remain difficult to "guess" via brute force methods.
Generic security considerations for usage of URIs are discussed in [RFC3986].
It is RECOMMENDED that the database uses encryption mechanisms if the information is stored in long term storage (e.g., disk).
If the database contains sensitive elements (e.g., passwords), the confidentiality of the database MUST be protected from unauthorized users.
If no sensitive elements are present, then confidentiality is not needed.
In addition to implementing access control, as discussed above, it is RECOMMENDED that administrators of conferencing systems only provide access to the database over encrypted channels (e.g., using TLS encryption) in order to avoid eavesdroppers.
Administrators of conferencing systems SHOULD also avoid disclosing information to unauthorized parties when a conference is being cloned or when a sidebar is being created.
For example, an external sidebar as defined in [RFC5239], Section 9.4.2, may include participants who were not authorized for the parent conference.
The security considerations for authentication described in Section 11.1 of the centralized conferencing framework document [RFC5239] also apply to this document.
Similarly, the security considerations for authorization described in Section 5.2 of the Session Initiation Protocol (SIP) REFER Method [RFC3515]
apply to this document as well.
Note that the specification of the privacy policy is outside the scope of this document.
Saying that, a privacy policy will be needed in the real implementation of the data model and, therefore, is subject to future policy documents.
This specification registers a schema.
The schema can be found as the sole content of Section 5.
urn:ietf:params:xml:schema:xcon conference info Registrant Contact: IETF XCON working group
The RELAX NG schema to be registered is contained in Section 5.
Its first line is as follows: default namespace
its last line is as follows:
lang   entity   required participant   label   decision   name   policy
id   nickname) { text }  9.2.
This section registers a new XML namespace.
urn:ietf:params:xml:ns:xcon conference info Registrant Contact: IETF XCON working group
" "http://www.w3.org/TR/xhtml basic/xhtml basic10.dtd"> <html xmlns "http://www.w3.org/1999/xhtml"> <head> <meta http equiv
Namespace for Centralized Conferencing</h1> <h2
Conference Object Identifier Registration URI scheme name:
xcon Status: permanent URI scheme syntax: see Section 3.3.1.
URI schema semantics: see Section 3.3 Encoding considerations: see Section 8 Intended usage: see Section 3.3 Applications and/or protocols that use this URI scheme name:
Centralized Conferencing systems Interoperability considerations:
none Security considerations: see Section 8 Relevant publications: conference information data model for Centralized Conferencing (XCON)
Conference User Identifier Registration URI scheme name:
: permanent URI scheme syntax: see Section 4.6.5 URI schema semantics: see Section 4.6.5 Encoding considerations
: see Section 8 Intended usage: see Section 4.6.3 and 4.6.5 Applications and/or protocols that use this URI scheme name: Centralized Conferencing systems.
none Security considerations: see Section 8 Relevant publications: conference information data model for Centralized Conferencing (XCON)
Non Normative RELAX NG Schema in XML Syntax
xml version "1.0" encoding "UTF 8" ?
> <grammar ns "urn:ietf:params:xml:ns:conference info" xmlns "http://relaxng.org/ns/structure/1.0" xmlns:
> </attribute> <ref name "anyAttribute"/
optional> <ref name "conference description
<define name "conference description type"> <element name "conference description"
> <optional> <element name "display text"> <text/
> <element name "subject"> <text/
> </optional> <optional> <element name "free text"
> </optional> <optional> <element name "keywords"> <list> <zeroOrMore
<optional> <element name "available media"
<element name "xcon:language"> <data type "language"/
> </optional> <optional> <element name "xcon:allow sidebars"> <data type "
> </optional> <optional> <element name "xcon:sidebar parent"
<optional> <element name "display text"> <text/
> </zeroOrMore> <ref name "anyAttribute"/
<define name "conference state type"
> <element name "locked"> <data type "
> </optional> <optional> <element name "xcon:allow conference event subscription"> <data type "
<define name "conference media type"
<define name "conference medium type"> <interleave> <attribute name "label"
> </attribute> <ref name "anyAttribute"/
> <optional> <element name "display text"> <text/
URIs TYPE   <define name "uris type"
> <optional> <element name "display text"> <text/
> </optional> <optional> <element name "purpose"
> <element name "modified"> <ref name "execution
> </zeroOrMore> <ref name "anyAttribute"/
> </optional> <optional> <element name "xcon:user admission policy"> <ref name "user admission policy
> </optional> <optional> <element name "xcon:allowed users list"
<optional> <element name "xcon:deny users list"
USER TYPE   <define name "user type"
> <optional> <element name "display text"> <text/
<optional> <element name "languages"> <list> <data type "
> </optional> <optional> <element name "xcon:allow refer users dynamically"> <data type "
> </optional> <optional> <element name "xcon:allow invite users dynamically"> <data type "
> </optional> <optional> <element name "xcon:allow remove users dynamically"> <data type "
ENDPOINT TYPE   <define name "endpoint type"
> </attribute> <ref name "anyAttribute"/
> <optional> <element name "display text"> <text/
<element name "referred"> <ref name "execution
<optional> <element name "joining info"
> </optional> <optional> <element name "disconnection method"> <ref name "disconnection
> </optional> <optional> <element name "disconnection info"> <ref name "execution
<define name "endpoint status type"> <choice
> <ref name "free text
<define name "joining type"> <choice
> <value>dialed in</value> <value>dialed out</value
>focus owner</value> <ref name "free text
<define name "disconnection type"> <choice
>failed</value> <value>busy</value> <ref name "free text
> </optional> <ref name "
<interleave> <element name "sip"> <ref name "sip dialog
> </zeroOrMore> <ref name "anyAttribute"/
<optional> <element name "display text"> <text/
> </zeroOrMore> <ref name "anyAttribute"/
> <optional> <element name "display text"> <text/
> </optional> <optional> <element name "src id"
<define name "media status type"> <choice
>inactive</value> <ref name "free text
<define name "sidebars by val type">
> <element name "xcon:entry"> <element name "xcon:base"
> </optional> <optional> <element name "xcon:
mixing end offset"> <ref name "time type"/
> <attribute name "required participant"> <ref name "single role
> </optional> <optional> <element name "xcon:can join after offset"
> </optional> <optional> <element name "xcon:must join before offset"
> </optional> <optional> <element name "xcon:request user"> <ref name "time
> <element name "xcon:notify end of conference"> <data type "nonNegativeInteger"/
> <element name "xcon:allowed extend mixing end offset"> <data type "
<define name "time type"> <data type "dateTime"> <param name "pattern">.
<define name "single role type"> <choice> <value type "string">none</value> <value type "string">administrator</value>
<value type "string">user</value> <value type "string">observer</value
> <value type "string">participant</value> <ref name "free text
<define name "mixing mode type"> <choice> <value type "string">moderator controlled</value> <value type "
> <value type "string">automatic</value> <ref name "free text extension"/
<define name "decision type"> <choice> <value type "string">automatic</value>
<value type "string">moderator controlled</value> <ref name "free text
<define name "policy type"> <choice> <value type "string">allowed</value> <value type "string">disallowed</value> <ref name "free text
> <element name "xcon:mute"> <data type "
pause video"> <data type "
> </optional> <optional> <element name "xcon:gain"
<define name "gain type"> <data type "int"
<define name "video layout type"> <choice> <value type "string">single view</value>
<value type "string">dual view crop</value>
string">dual view 2x1</value> <value type "string">dual view 2x1 crop</value>
string">multiple 3x3</value> <value type "
string">multiple 4x4</value> <value type "
string">multiple 5x1</value> <value type "string">automatic</value> <ref name "free text extension"/
<define name "floor information type"
<define name "floor request type"> <choice
<value type "string">confirm</value> <ref name "free text
moderator id"> <data type "
<define name "algorithm type"> <choice>
<value type "string">random</value> <ref name "free text extension"/
<define name "user admission policy type"> <choice>
> <value type "string">openAuthenticated</value> <value type "string">anonymous</value> <ref name "free text extension"/
<define name "join handling type"> <choice
operator</value> <ref name "free text
<define name "deny user list type"
<define name "allowed users list type"> <interleave> <ref name "anyAttribute"/
<define name "persistent list type"> <interleave> <zeroOrMore> <element name "xcon:user"> <interleave> <attribute name "name"
TARGET TYPE   <define name "target type"> <attribute name "uri"
<define name "method type"> <choice> <value type "string">dial in</value> <value type
<value type "string">refer</value> <ref name "free text extension"/
<define name "provide anonymity type"
>hidden</value> <ref name "free text
<define name "mixer type"> <interleave> <attribute name "name"> <ref name
> <element name "xcon:floor"> <attribute name "id"
<define name "mixer name type"> <choice> <value>VideoIn</value> <value>VideoOut</value
>AudioOut</value> <value>AudioIn</value> <ref name "free text
EXTENSIBILITY ELEMENTS   <define name "anyElement"
> <element> <anyName> <except> <name>conference description</name>
xcon:allow conference event subscription</name> <name
allow refer users dynamically</name> <name
>xcon:can join after offset</name> <name
notify end of conference</name> <name>xcon:allowed extend mixing end
> <define name "anyExtension"> <zeroOrMore>
> </define> <define name "any"> <element
EXTENSIBILITY ATTRIBUTES   <define name "anyAttribute"> <zeroOrMore>
<attribute> <anyName> <except> <name ns "http://www.w3.org/XML/1998/namespace">lang </name> <name ns "">entity</name
>required participant</name> <name ns ""
>decision</name> <name ns "">name</name> <name ns ""
The non normative W3C XML schema defines extension elements in the "urn:ietf:params:xml:ns:xcon conference info" namespace.
Note that <xs:any> extensions in this schema are stricter than in the normative RELAX NG schema [RELAX], and the normative RELAX
allows unordered child elements unlike this schema (and the [RFC4575] schema).
Also, note that this schema allows otherwise valid extension elements to appear in the non allowed positions.
Likewise, the cardinalities of these extension elements cannot be constrained with this schema.
xml version "1.0" encoding "UTF 8"?
conference info" xmlns:xs "http://www.w3.org/2001/XMLSchema" attributeFormDefault "unqualified" elementFormDefault "qualified" targetNamespace "urn:
ietf:params:xml:ns:xcon conference info"> <xs:import namespace "urn:ietf:params:xml:ns:conference info" schemaLocation "
import namespace "http://www.w3.org/XML/1998/namespace" schemaLocation "http://www.w3.org/2001/03/xml.xsd"/
element name "mixing mode" type "mixing mode
element name "codecs" type "codecs type"/
<xs:element name "conference password" type "xs:string"/
<xs:element name "controls" type "controls
element name "language" type "xs:language"/
element name "allow sidebars" type "xs:
element name "sidebar parent" type "xs:anyURI"/
element name "conference time" type "conference time
element name "allow conference event subscription" type "xs:
to mixer" type "mixer type"/
element name "allow refer users dynamically" type "xs:
> <xs:element name "allow invite users dynamically" type "xs:
> <xs:element name "allow remove users dynamically" type "xs:
element name "join handling" type "
element name "user admission policy" type "user admission policy type"/>
complexType name "conference time type"> <xs:sequence> <xs:
element name "entry" minOccurs "0
<xs:element name "base" type "xs:string
element name "mixing start offset" minOccurs "0">
<xs:extension base "time type"> <xs:
attribute name "required participant" type "role type" use "required"/
anyAttribute namespace "##any" processContents "lax"/
complexType> </xs:element> <xs:element name "mixing end offset" minOccurs "0">
<xs:extension base "time type"> <xs:
attribute name "required participant" type "role type" use "required"/
anyAttribute namespace "##any" processContents "lax"/
element name "can join after offset" type "time type" minOccurs "0"/
:element name "must join before offset" type "time type" minOccurs "
:element name "request user" type "time type" minOccurs "0"/
element name "notify end of conference" type "xs:
element name "allowed extend mixing end offset
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
> </xs:element> <xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
simpleType name "time type"> <xs:restriction base "xs:dateTime"> <xs:pattern value ".
simpleType name "role type"> <xs:restriction base "xs:string"> <xs:pattern value "none"/>
simpleType name "mixing mode type"
restriction base "xs:string"> <xs:pattern value "moderator
complexType name "codecs type"> <xs:sequence> <xs:
element name "codec" type "codec type"/
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
<xs:attribute name "decision" type "decision type" use "required"/
anyAttribute namespace "##any" processContents "lax"/
complexType name "codec type"> <xs:sequence> <xs:
element name "subtype" type "xs:string
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
<xs:attribute name "name" type "xs:string" use "required"/
<xs:attribute name "policy" type "policy type" use "required"/
anyAttribute namespace "##any" processContents "lax"/
simpleType name "decision type"> <xs:restriction base "xs:string"> <xs:pattern value "
simpleType name "policy type"> <xs:restriction base "xs:string"> <xs:pattern value "allowed"/>
complexType name "controls type"> <xs:sequence
<xs:element name "mute" type "xs:boolean" minOccurs "
<xs:element name "pause video" type "xs:boolean" minOccurs "
<xs:element name "gain" type "gain type" minOccurs "0"/
:element name "video layout" type "video layout type" default "single view" minOccurs "
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
simpleType name "gain type"> <xs:restriction base "xs:integer"> <xs:
simpleType name "video layout type"> <xs:restriction base "xs:string"> <xs:pattern value "single view"/>
> <xs:pattern value "dual view
> <xs:pattern value "quad view"/>
complexType name "floor information type"> <xs:sequence> <xs:
element name "conference ID" type "xs:
<xs:element name "allow floor events" type "xs:boolean" default "false" minOccurs "
element name "floor request handling" type "floor request handling
<xs:element name "conference floor policy" type "conference floor policy" minOccurs "
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
simpleType name "floor request handling type"> <xs:restriction base "xs:string"> <xs:
complexType name "conference floor policy"> <xs:sequence
<xs:element name "floor" maxOccurs "unbounded"
" minOccurs "1" maxOccurs "
> <xs:element name "algorithm" type "algorithm type" minOccurs "
element name "max floor users" type "xs:
element name "moderator id" type "xs:nonNegativeInteger" minOccurs "0"/
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
attribute name "id" type "xs:string" use "required"/
anyAttribute namespace "##any" processContents "lax"/
anyAttribute namespace "##any" processContents "lax"/
restriction base "xs:string"> <xs:pattern value "moderator
simpleType name "user admission policy type"> <xs:restriction base "xs:string"> <xs:pattern value "closedAuthenticated"/
simpleType name "join handling type"
complexType name "deny users list type"> <xs:
<xs:element name "target" minOccurs "0
:attribute name "uri" use "required" type "xs:anyURI"/
anyAttribute namespace "##any" processContents "lax"/
> </xs:element> <xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
complexType name "allowed users list type"> <xs:sequence
<xs:element name "target" type "target type" minOccurs "
element name "persistent list" type "persistent list type" minOccurs "
<xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
complexType name "persistent list type"> <xs:sequence
element name "user" minOccurs "0
<xs:element name "email" type "xs:string" minOccurs "0
> <xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
<xs:attribute name "name" use "required" type "xs:
attribute name "nickname" use "required" type "xs:string"/
attribute name "id" use "
anyAttribute namespace "##any" processContents "lax"/
> </xs:element> <xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
anyAttribute namespace "##any" processContents "lax"/
complexType name "target type"> <xs:
attribute name "uri" use "required" type "xs:anyURI"/
<xs:attribute name "method" use "required
anyAttribute namespace "##any" processContents "lax"/
simpleType name "method type"> <xs:restriction base "xs:string"> <xs:pattern value "dial in"/
simpleType name "provide anonymity type"> <xs:restriction base "xs:string"> <xs:pattern value "
complexType name "mixer type"> <xs:sequence> <
"> <xs:attribute name "id" type "xs:
anyAttribute namespace "##any" processContents "lax"/
complexType> </xs:element> <xs:element name "controls" type "controls type" minOccurs "0" maxOccurs "
> <xs:any namespace "##other" processContents "lax" minOccurs "0" maxOccurs "
attribute name "name" type "mixer name type" use "required"/
anyAttribute namespace "##any" processContents "lax"/
simpleType name "mixer name type"> <xs:restriction base "xs:string"> <xs:pattern value "VideoIn"/
