- title: __initial_text__
  contents:
  - "                     Network News Transfer Protocol\n                A Proposed\
    \ Standard for the Stream-Based\n                          Transmission of News\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   NNTP specifies a protocol for the distribution, inquiry,\
    \ retrieval,\n   and posting of news articles using a reliable stream-based\n\
    \   transmission of news among the ARPA-Internet community.  NNTP is\n   designed\
    \ so that news articles are stored in a central database\n   allowing a subscriber\
    \ to select only those items he wishes to read.\n   Indexing, cross-referencing,\
    \ and expiration of aged messages are also\n   provided. This RFC suggests a proposed\
    \ protocol for the ARPA-Internet\n   community, and requests discussion and suggestions\
    \ for improvements.\n   Distribution of this memo is unlimited.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   For many years, the ARPA-Internet community has supported\
    \ the\n   distribution of bulletins, information, and data in a timely fashion\n\
    \   to thousands of participants.  We collectively refer to such items of\n  \
    \ information as \"news\".  Such news provides for the rapid\n   dissemination\
    \ of items of interest such as software bug fixes, new\n   product reviews, technical\
    \ tips, and programming pointers, as well as\n   rapid-fire discussions of matters\
    \ of concern to the working computer\n   professional. News is very popular among\
    \ its readers.\n   There are popularly two methods of distributing such news:\
    \ the\n   Internet method of direct mailing, and the USENET news system.\n"
- title: 1.1.  Internet Mailing Lists
  contents:
  - "1.1.  Internet Mailing Lists\n   The Internet community distributes news by the\
    \ use of mailing lists.\n   These are lists of subscriber's mailbox addresses\
    \ and remailing\n   sublists of all intended recipients.  These mailing lists\
    \ operate by\n   remailing a copy of the information to be distributed to each\n\
    \   subscriber on the mailing list.  Such remailing is inefficient when a\n  \
    \ mailing list grows beyond a dozen or so people, since sending a\n   separate\
    \ copy to each of the subscribers occupies large quantities of\n   network bandwidth,\
    \ CPU resources, and significant amounts of disk\n   storage at the destination\
    \ host.  There is also a significant problem\n   in maintenance of the list itself:\
    \ as subscribers move from one job\n   to another; as new subscribers join and\
    \ old ones leave; and as hosts\n   come in and out of service.\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 1.2.  The USENET News System
  contents:
  - "1.2.  The USENET News System\n   Clearly, a worthwhile reduction of the amount\
    \ of these resources used\n   can be achieved if articles are stored in a central\
    \ database on the\n   receiving host instead of in each subscriber's mailbox.\
    \ The USENET\n   news system provides a method of doing just this.  There is a\
    \ central\n   repository of the news articles in one place (customarily a spool\n\
    \   directory of some sort), and a set of programs that allow a\n   subscriber\
    \ to select those items he wishes to read.  Indexing,\n   cross-referencing, and\
    \ expiration of aged messages are also provided.\n"
- title: 1.3.  Central Storage of News
  contents:
  - "1.3.  Central Storage of News\n   For clusters of hosts connected together by\
    \ fast local area networks\n   (such as Ethernet), it makes even more sense to\
    \ consolidate news\n   distribution onto one (or a very few) hosts, and to allow\
    \ access to\n   these news articles using a server and client model.  Subscribers\
    \ may\n   then request only the articles they wish to see, without having to\n\
    \   wastefully duplicate the storage of a copy of each item on each host.\n"
- title: 1.4.  A Central News Server
  contents:
  - "1.4.  A Central News Server\n   A way to achieve these economies is to have a\
    \ central computer system\n   that can provide news service to the other systems\
    \ on the local area\n   network.  Such a server would manage the collection of\
    \ news articles\n   and index files, with each person who desires to read news\
    \ bulletins\n   doing so over the LAN.  For a large cluster of computer systems,\
    \ the\n   savings in total disk space is clearly worthwhile.  Also, this allows\n\
    \   workstations with limited disk storage space to participate in the\n   news\
    \ without incoming items consuming oppressive amounts of the\n   workstation's\
    \ disk storage.\n   We have heard rumors of somewhat successful attempts to provide\n\
    \   centralized news service using IBIS and other shared or distributed\n   file\
    \ systems.  While it is possible that such a distributed file\n   system implementation\
    \ might work well with a group of similar\n   computers running nearly identical\
    \ operating systems, such a scheme\n   is not general enough to offer service\
    \ to a wide range of client\n   systems, especially when many diverse operating\
    \ systems may be in use\n   among a group of clients.  There are few (if any)\
    \ shared or networked\n   file systems that can offer the generality of service\
    \ that stream\n   connections using Internet TCP provide, particularly when a\
    \ wide\n   range of host hardware and operating systems are considered.\n   NNTP\
    \ specifies a protocol for the distribution, inquiry, retrieval,\n   and posting\
    \ of news articles using a reliable stream (such as TCP)\n   server-client model.\
    \ NNTP is designed so that news articles need only\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   be stored on one (presumably central) host,\
    \ and subscribers on other\n   hosts attached to the LAN may read news articles\
    \ using stream\n   connections to the news host.\n   NNTP is modelled upon the\
    \ news article specifications in RFC 850,\n   which describes the USENET news\
    \ system.  However, NNTP makes few\n   demands upon the structure, content, or\
    \ storage of news articles, and\n   thus we believe it easily can be adapted to\
    \ other non-USENET news\n   systems.\n   Typically, the NNTP server runs as a\
    \ background process on one host,\n   and would accept connections from other\
    \ hosts on the LAN.  This works\n   well when there are a number of small computer\
    \ systems (such as\n   workstations, with only one or at most a few users each),\
    \ and a large\n   central server.\n"
- title: 1.5.  Intermediate News Servers
  contents:
  - "1.5.  Intermediate News Servers\n   For clusters of machines with many users\
    \ (as might be the case in a\n   university or large industrial environment),\
    \ an intermediate server\n   might be used.  This intermediate or \"slave\" server\
    \ runs on each\n   computer system, and is responsible for mediating news reading\n\
    \   requests and performing local caching of recently-retrieved news\n   articles.\n\
    \   Typically, a client attempting to obtain news service would first\n   attempt\
    \ to connect to the news service port on the local machine.  If\n   this attempt\
    \ were unsuccessful, indicating a failed server, an\n   installation might choose\
    \ to either deny news access, or to permit\n   connection to the central \"master\"\
    \ news server.\n   For workstations or other small systems, direct connection\
    \ to the\n   master server would probably be the normal manner of operation.\n\
    \   This specification does not cover the operation of slave NNTP\n   servers.\
    \  We merely suggest that slave servers are a logical addition\n   to NNTP server\
    \ usage which would enhance operation on large local\n   area networks.\n"
- title: 1.6.  News Distribution
  contents:
  - "1.6.  News Distribution\n   NNTP has commands which provide a straightforward\
    \ method of\n   exchanging articles between cooperating hosts. Hosts which are\
    \ well\n   connected on a local area or other fast network and who wish to\n \
    \  actually obtain copies of news articles for local storage might well\n   find\
    \ NNTP to be a more efficient way to distribute news than more\n   traditional\
    \ transfer methods (such as UUCP).\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   In the traditional method of distributing\
    \ news articles, news is\n   propagated from host to host by flooding - that is,\
    \ each host will\n   send all its new news articles on to each host that it feeds.\
    \  These\n   hosts will then in turn send these new articles on to other hosts\n\
    \   that they feed.  Clearly, sending articles that a host already has\n   obtained\
    \ a copy of from another feed (many hosts that receive news\n   are redundantly\
    \ fed) again is a waste of time and communications\n   resources, but for transport\
    \ mechanisms that are single-transaction\n   based rather than interactive (such\
    \ as UUCP in the UNIX-world <1>),\n   distribution time is diminished by sending\
    \ all articles and having\n   the receiving host simply discard the duplicates.\
    \  This is an\n   especially true when communications sessions are limited to\
    \ once a\n   day.\n   Using NNTP, hosts exchanging news articles have an interactive\n\
    \   mechanism for deciding which articles are to be transmitted.  A host\n   desiring\
    \ new news, or which has new news to send, will typically\n   contact one or more\
    \ of its neighbors using NNTP.  First it will\n   inquire if any new news groups\
    \ have been created on the serving host\n   by means of the NEWGROUPS command.\
    \  If so, and those are appropriate\n   or desired (as established by local site-dependent\
    \ rules), those new\n   newsgroups can be created.\n   The client host will then\
    \ inquire as to which new articles have\n   arrived in all or some of the newsgroups\
    \ that it desires to receive,\n   using the NEWNEWS command.  It will receive\
    \ a list of new articles\n   from the server, and can request transmission of\
    \ those articles that\n   it desires and does not already have.\n   Finally, the\
    \ client can advise the server of those new articles which\n   the client has\
    \ recently received.  The server will indicate those\n   articles that it has\
    \ already obtained copies of, and which articles\n   should be sent to add to\
    \ its collection.\n   In this manner, only those articles which are not duplicates\
    \ and\n   which are desired are transferred.\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 2.  The NNTP Specification
  contents:
  - '2.  The NNTP Specification

    '
- title: 2.1.  Overview
  contents:
  - "2.1.  Overview\n   The news server specified by this document uses a stream connection\n\
    \   (such as TCP) and SMTP-like commands and responses.  It is designed\n   to\
    \ accept connections from hosts, and to provide a simple interface\n   to the\
    \ news database.\n   This server is only an interface between programs and the\
    \ news\n   databases. It does not perform any user interaction or presentation-\n\
    \   level functions. These \"user-friendly\" functions are better left to\n  \
    \ the client programs, which have a better understanding of the\n   environment\
    \ in which they are operating.\n   When used via Internet TCP, the contact port\
    \ assigned for this\n   service is 119.\n"
- title: 2.2.  Character Codes
  contents:
  - "2.2.  Character Codes\n   Commands and replies are composed of characters from\
    \ the ASCII\n   character set.  When the transport service provides an 8-bit byte\n\
    \   (octet) transmission channel, each 7-bit character is transmitted\n   right\
    \ justified in an octet with the high order bit cleared to zero.\n"
- title: 2.3.  Commands
  contents:
  - "2.3.  Commands\n   Commands consist of a command word, which in some cases may\
    \ be\n   followed by a parameter.  Commands with parameters must separate the\n\
    \   parameters from each other and from the command by one or more space\n   or\
    \ tab characters.  Command lines must be complete with all required\n   parameters,\
    \ and may not contain more than one command.\n   Commands and command parameters\
    \ are not case sensitive. That is, a\n   command or parameter word may be upper\
    \ case, lower case, or any\n   mixture of upper and lower case.\n   Each command\
    \ line must be terminated by a CR-LF (Carriage Return -\n   Line Feed) pair.\n\
    \   Command lines shall not exceed 512 characters in length, counting all\n  \
    \ characters including spaces, separators, punctuation, and the\n   trailing CR-LF\
    \ (thus there are 510 characters maximum allowed for the\n   command and its parameters).\
    \  There is no provision for continuation\n   command lines.\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 2.4.  Responses
  contents:
  - "2.4.  Responses\n   Responses are of two kinds, textual and status.\n"
- title: 2.4.1.  Text Responses
  contents:
  - "2.4.1.  Text Responses\n   Text is sent only after a numeric status response\
    \ line has been sent\n   that indicates that text will follow.  Text is sent as\
    \ a series of\n   successive lines of textual matter, each terminated with CR-LF\
    \ pair.\n   A single line containing only a period (.) is sent to indicate the\n\
    \   end of the text (i.e., the server will send a CR-LF pair at the end\n   of\
    \ the last line of text, a period, and another CR-LF pair).\n   If the text contained\
    \ a period as the first character of the text\n   line in the original, that first\
    \ period is doubled.  Therefore, the\n   client must examine the first character\
    \ of each line received, and\n   for those beginning with a period, determine\
    \ either that this is the\n   end of the text or whether to collapse the doubled\
    \ period to a single\n   one.\n   The intention is that text messages will usually\
    \ be displayed on the\n   user's terminal whereas command/status responses will\
    \ be interpreted\n   by the client program before any possible display is done.\n"
- title: 2.4.2.  Status Responses
  contents:
  - "2.4.2.  Status Responses\n   These are status reports from the server and indicate\
    \ the response to\n   the last command received from the client.\n   Status response\
    \ lines begin with a 3 digit numeric code which is\n   sufficient to distinguish\
    \ all responses.  Some of these may herald\n   the subsequent transmission of\
    \ text.\n   The first digit of the response broadly indicates the success,\n \
    \  failure, or progress of the previous command.\n      1xx - Informative message\n\
    \      2xx - Command ok\n      3xx - Command ok so far, send the rest of it.\n\
    \      4xx - Command was correct, but couldn't be performed for\n            some\
    \ reason.\n      5xx - Command unimplemented, or incorrect, or a serious\n   \
    \         program error occurred.\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   The next digit in the code indicates the function\
    \ response category.\n      x0x - Connection, setup, and miscellaneous messages\n\
    \      x1x - Newsgroup selection\n      x2x - Article selection\n      x3x - Distribution\
    \ functions\n      x4x - Posting\n      x8x - Nonstandard (private implementation)\
    \ extensions\n      x9x - Debugging output\n   The exact response codes that should\
    \ be expected from each command\n   are detailed in the description of that command.\
    \  In addition, below\n   is listed a general set of response codes that may be\
    \ received at any\n   time.\n   Certain status responses contain parameters such\
    \ as numbers and\n   names. The number and type of such parameters is fixed for\
    \ each\n   response code to simplify interpretation of the response.\n   Parameters\
    \ are separated from the numeric response code and from each\n   other by a single\
    \ space. All numeric parameters are decimal, and may\n   have leading zeros. All\
    \ string parameters begin after the separating\n   space, and end before the following\
    \ separating space or the CR-LF\n   pair at the end of the line. (String parameters\
    \ may not, therefore,\n   contain spaces.) All text, if any, in the response which\
    \ is not a\n   parameter of the response must follow and be separated from the\
    \ last\n   parameter by a space.  Also, note that the text following a response\n\
    \   number may vary in different implementations of the server. The\n   3-digit\
    \ numeric code should be used to determine what response was\n   sent.\n   Response\
    \ codes not specified in this standard may be used for any\n   installation-specific\
    \ additional commands also not specified. These\n   should be chosen to fit the\
    \ pattern of x8x specified above.  (Note\n   that debugging is provided for explicitly\
    \ in the x9x response codes.)\n   The use of unspecified response codes for standard\
    \ commands is\n   prohibited.\n   We have provided a response pattern x9x for\
    \ debugging.  Since much\n   debugging output may be classed as \"informative\
    \ messages\", we would\n   expect, therefore, that responses 190 through 199 would\
    \ be used for\n   various debugging outputs.  There is no requirement in this\n\
    \   specification for debugging output, but if such is provided over the\n   connected\
    \ stream, it must use these response codes.  If appropriate\n   to a specific\
    \ implementation, other x9x codes may be used for\n   debugging.  (An example\
    \ might be to use e.g., 290 to acknowledge a\n   remote debugging request.)\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 2.4.3.  General Responses
  contents:
  - "2.4.3.  General Responses\n   The following is a list of general response codes\
    \ that may be sent by\n   the NNTP server.  These are not specific to any one\
    \ command, but may\n   be returned as the result of a connection, a failure, or\
    \ some unusual\n   condition.\n   In general, 1xx codes may be ignored or displayed\
    \ as desired;  code\n   200 or 201 is sent upon initial connection to the NNTP\
    \ server\n   depending upon posting permission; code 400 will be sent when the\n\
    \   NNTP server discontinues service (by operator request, for example);\n   and\
    \ 5xx codes indicate that the command could not be performed for\n   some unusual\
    \ reason.\n      100 help text\n      190\n        through\n      199 debug output\n\
    \      200 server ready - posting allowed\n      201 server ready - no posting\
    \ allowed\n      400 service discontinued\n      500 command not recognized\n\
    \      501 command syntax error\n      502 access restriction or permission denied\n\
    \      503 program fault - command not performed\n"
- title: 3.  Command and Response Details
  contents:
  - "3.  Command and Response Details\n   On the following pages are descriptions\
    \ of each command recognized by\n   the NNTP server and the responses which will\
    \ be returned by those\n   commands.\n   Each command is shown in upper case for\
    \ clarity, although case is\n   ignored in the interpretation of commands by the\
    \ NNTP server.  Any\n   parameters are shown in lower case.  A parameter shown\
    \ in [square\n   brackets] is optional.  For example, [GMT] indicates that the\n\
    \   triglyph GMT may present or omitted.\n   Every command described in this section\
    \ must be implemented by all\n   NNTP servers.\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   There is no prohibition against additional\
    \ commands being added;\n   however, it is recommended that any such unspecified\
    \ command begin\n   with the letter \"X\" to avoid conflict with later revisions\
    \ of this\n   specification.\n   Implementors are reminded that such additional\
    \ commands may not\n   redefine specified status response codes.  Using additional\n\
    \   unspecified responses for standard commands is also prohibited.\n"
- title: 3.1.  The ARTICLE, BODY, HEAD, and STAT commands
  contents:
  - "3.1.  The ARTICLE, BODY, HEAD, and STAT commands\n   There are two forms to the\
    \ ARTICLE command (and the related BODY,\n   HEAD, and STAT commands), each using\
    \ a different method of specifying\n   which article is to be retrieved.  When\
    \ the ARTICLE command is\n   followed by a message-id in angle brackets (\"<\"\
    \ and \">\"), the first\n   form of the command is used; when a numeric parameter\
    \ or no parameter\n   is supplied, the second form is invoked.\n   The text of\
    \ the article is returned as a textual response, as\n   described earlier in this\
    \ document.\n   The HEAD and BODY commands are identical to the ARTICLE command\n\
    \   except that they respectively return only the header lines or text\n   body\
    \ of the article.\n   The STAT command is similar to the ARTICLE command except\
    \ that no\n   text is returned.  When selecting by message number within a group,\n\
    \   the STAT command serves to set the current article pointer without\n   sending\
    \ text. The returned acknowledgement response will contain the\n   message-id,\
    \ which may be of some value.  Using the STAT command to\n   select by message-id\
    \ is valid but of questionable value, since a\n   selection by message-id does\
    \ NOT alter the \"current article pointer\".\n"
- title: 3.1.1.  ARTICLE (selection by message-id)
  contents:
  - "3.1.1.  ARTICLE (selection by message-id)\n   ARTICLE <message-id>\n   Display\
    \ the header, a blank line, then the body (text) of the\n   specified article.\
    \  Message-id is the message id of an article as\n   shown in that article's header.\
    \  It is anticipated that the client\n   will obtain the message-id from a list\
    \ provided by the NEWNEWS\n   command, from references contained within another\
    \ article, or from\n   the message-id provided in the response to some other commands.\n\
    \   Please note that the internally-maintained \"current article pointer\"\n \
    \  is NOT ALTERED by this command. This is both to facilitate the\n   presentation\
    \ of articles that may be referenced within an article\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   being read, and because of the semantic difficulties\
    \ of determining\n   the proper sequence and membership of an article which may\
    \ have been\n   posted to more than one newsgroup.\n"
- title: 3.1.2.  ARTICLE (selection by number)
  contents:
  - "3.1.2.  ARTICLE (selection by number)\n   ARTICLE [nnn]\n   Displays the header,\
    \ a blank line, then the body (text) of the\n   current or specified article.\
    \  The optional parameter nnn is the\n   numeric id of an article in the current\
    \ newsgroup and must be chosen\n   from the range of articles provided when the\
    \ newsgroup was selected.\n   If it is omitted, the current article is assumed.\n\
    \   The internally-maintained \"current article pointer\" is set by this\n   command\
    \ if a valid article number is specified.\n   [the following applies to both forms\
    \ of the article command.] A\n   response indicating the current article number,\
    \ a message-id string,\n   and that text is to follow will be returned.\n   The\
    \ message-id string returned is an identification string contained\n   within\
    \ angle brackets (\"<\" and \">\"), which is derived from the header\n   of the\
    \ article itself.  The Message-ID header line (required by\n   RFC850) from the\
    \ article must be used to supply this information. If\n   the message-id header\
    \ line is missing from the article, a single\n   digit \"0\" (zero) should be\
    \ supplied within the angle brackets.\n   Since the message-id field is unique\
    \ with each article, it may be\n   used by a news reading program to skip duplicate\
    \ displays of articles\n   that have been posted more than once, or to more than\
    \ one newsgroup.\n"
- title: 3.1.3.  Responses
  contents:
  - "3.1.3.  Responses\n   220 n <a> article retrieved - head and body follow\n  \
    \         (n = article number, <a> = message-id)\n   221 n <a> article retrieved\
    \ - head follows\n   222 n <a> article retrieved - body follows\n   223 n <a>\
    \ article retrieved - request text separately\n   412 no newsgroup has been selected\n\
    \   420 no current article has been selected\n   423 no such article number in\
    \ this group\n   430 no such article found\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 3.2.  The GROUP command
  contents:
  - '3.2.  The GROUP command

    '
- title: 3.2.1.  GROUP
  contents:
  - "3.2.1.  GROUP\n   GROUP ggg\n   The required parameter ggg is the name of the\
    \ newsgroup to be\n   selected (e.g. \"net.news\").  A list of valid newsgroups\
    \ may be\n   obtained from the LIST command.\n   The successful selection response\
    \ will return the article numbers of\n   the first and last articles in the group,\
    \ and an estimate of the\n   number of articles on file in the group.  It is not\
    \ necessary that\n   the estimate be correct, although that is helpful; it must\
    \ only be\n   equal to or larger than the actual number of articles on file. \
    \ (Some\n   implementations will actually count the number of articles on file.\n\
    \   Others will just subtract first article number from last to get an\n   estimate.)\n\
    \   When a valid group is selected by means of this command, the\n   internally\
    \ maintained \"current article pointer\" is set to the first\n   article in the\
    \ group.  If an invalid group is specified, the\n   previously selected group\
    \ and article remain selected.  If an empty\n   newsgroup is selected, the \"\
    current article pointer\" is in an\n   indeterminate state and should not be used.\n\
    \   Note that the name of the newsgroup is not case-dependent.  It must\n   otherwise\
    \ match a newsgroup obtained from the LIST command or an\n   error will result.\n"
- title: 3.2.2.  Responses
  contents:
  - "3.2.2.  Responses\n   211 n f l s group selected\n           (n = estimated number\
    \ of articles in group,\n           f = first article number in the group,\n \
    \          l = last article number in the group,\n           s = name of the group.)\n\
    \   411 no such news group\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 3.3.  The HELP command
  contents:
  - '3.3.  The HELP command

    '
- title: 3.3.1.  HELP
  contents:
  - "3.3.1.  HELP\n   HELP\n   Provides a short summary of commands that are understood\
    \ by this\n   implementation of the server. The help text will be presented as\
    \ a\n   textual response, terminated by a single period on a line by itself.\n\
    \   3.3.2.  Responses\n   100 help text follows\n"
- title: 3.4.  The IHAVE command
  contents:
  - '3.4.  The IHAVE command

    '
- title: 3.4.1.  IHAVE
  contents:
  - "3.4.1.  IHAVE\n   IHAVE <messageid>\n   The IHAVE command informs the server\
    \ that the client has an article\n   whose id is <messageid>.  If the server desires\
    \ a copy of that\n   article, it will return a response instructing the client\
    \ to send the\n   entire article.  If the server does not want the article (if,\
    \ for\n   example, the server already has a copy of it), a response indicating\n\
    \   that the article is not wanted will be returned.\n   If transmission of the\
    \ article is requested, the client should send\n   the entire article, including\
    \ header and body, in the manner\n   specified for text transmission from the\
    \ server. A response code\n   indicating success or failure of the transferral\
    \ of the article will\n   be returned.\n   This function differs from the POST\
    \ command in that it is intended\n   for use in transferring already-posted articles\
    \ between hosts.\n   Normally it will not be used when the client is a personal\n\
    \   newsreading program.  In particular, this function will invoke the\n   server's\
    \ news posting program with the appropriate settings (flags,\n   options, etc)\
    \ to indicate that the forthcoming article is being\n   forwarded from another\
    \ host.\n   The server may, however, elect not to post or forward the article\
    \ if\n   after further examination of the article it deems it inappropriate to\n\
    \   do so.  The 436 or 437 error codes may be returned as appropriate to\n   the\
    \ situation.\n   Reasons for such subsequent rejection of an article may include\
    \ such\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   problems as inappropriate newsgroups or distributions,\
    \ disk space\n   limitations, article lengths, garbled headers, and the like.\
    \  These\n   are typically restrictions enforced by the server host's news\n \
    \  software and not necessarily the NNTP server itself.\n"
- title: 3.4.2.  Responses
  contents:
  - "3.4.2.  Responses\n   235 article transferred ok\n   335 send article to be transferred.\
    \  End with <CR-LF>.<CR-LF>\n   435 article not wanted - do not send it\n   436\
    \ transfer failed - try again later\n   437 article rejected - do not try again\n\
    \   An implementation note:\n   Because some host news posting software may not\
    \ be able to decide\n   immediately that an article is inappropriate for posting\
    \ or\n   forwarding, it is acceptable to acknowledge the successful transfer\n\
    \   of the article and to later silently discard it.  Thus it is\n   permitted\
    \ to return the 235 acknowledgement code and later discard\n   the received article.\
    \  This is not a fully satisfactory solution to\n   the problem.  Perhaps some\
    \ implementations will wish to send mail to\n   the author of the article in certain\
    \ of these cases.\n"
- title: 3.5.  The LAST command
  contents:
  - '3.5.  The LAST command

    '
- title: 3.5.1.  LAST
  contents:
  - "3.5.1.  LAST\n   LAST\n   The internally maintained \"current article pointer\"\
    \ is set to the\n   previous article in the current newsgroup.  If already positioned\
    \ at\n   the first article of the newsgroup, an error message is returned and\n\
    \   the current article remains selected.\n   The internally-maintained \"current\
    \ article pointer\" is set by this\n   command.\n   A response indicating the\
    \ current article number, and a message-id\n   string will be returned.  No text\
    \ is sent in response to this\n   command.\n"
- title: 3.5.2.  Responses
  contents:
  - "3.5.2.  Responses\n   223 n a article retrieved - request text separately\n \
    \          (n = article number, a = unique article id)\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   412 no newsgroup selected\n   420 no current\
    \ article has been selected\n   422 no previous article in this group\n"
- title: 3.6.  The LIST command
  contents:
  - '3.6.  The LIST command

    '
- title: 3.6.1.  LIST
  contents:
  - "3.6.1.  LIST\n   LIST\n   Returns a list of valid newsgroups and associated information.\
    \  Each\n   newsgroup is sent as a line of text in the following format:\n   \
    \   group last first p\n   where <group> is the name of the newsgroup, <last>\
    \ is the number of\n   the last known article currently in that newsgroup, <first>\
    \ is the\n   number of the first article currently in the newsgroup, and <p> is\n\
    \   either 'y' or 'n' indicating whether posting to this newsgroup is\n   allowed\
    \ ('y') or prohibited ('n').\n   The <first> and <last> fields will always be\
    \ numeric.  They may have\n   leading zeros.  If the <last> field evaluates to\
    \ less than the\n   <first> field, there are no articles currently on file in\
    \ the\n   newsgroup.\n   Note that posting may still be prohibited to a client\
    \ even though the\n   LIST command indicates that posting is permitted to a particular\n\
    \   newsgroup. See the POST command for an explanation of client\n   prohibitions.\
    \  The posting flag exists for each newsgroup because\n   some newsgroups are\
    \ moderated or are digests, and therefore cannot be\n   posted to; that is, articles\
    \ posted to them must be mailed to a\n   moderator who will post them for the\
    \ submitter.  This is independent\n   of the posting permission granted to a client\
    \ by the NNTP server.\n   Please note that an empty list (i.e., the text body\
    \ returned by this\n   command consists only of the terminating period) is a possible\
    \ valid\n   response, and indicates that there are currently no valid newsgroups.\n"
- title: 3.6.2.  Responses
  contents:
  - "3.6.2.  Responses\n   215 list of newsgroups follows\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 3.7.  The NEWGROUPS command
  contents:
  - '3.7.  The NEWGROUPS command

    '
- title: 3.7.1.  NEWGROUPS
  contents:
  - "3.7.1.  NEWGROUPS\n   NEWGROUPS date time [GMT] [<distributions>]\n   A list\
    \ of newsgroups created since <date and time> will be listed in\n   the same format\
    \ as the LIST command.\n   The date is sent as 6 digits in the format YYMMDD,\
    \ where YY is the\n   last two digits of the year, MM is the two digits of the\
    \ month (with\n   leading zero, if appropriate), and DD is the day of the month\
    \ (with\n   leading zero, if appropriate).  The closest century is assumed as\n\
    \   part of the year (i.e., 86 specifies 1986, 30 specifies 2030, 99 is\n   1999,\
    \ 00 is 2000).\n   Time must also be specified.  It must be as 6 digits HHMMSS\
    \ with HH\n   being hours on the 24-hour clock, MM minutes 00-59, and SS seconds\n\
    \   00-59.  The time is assumed to be in the server's timezone unless the\n  \
    \ token \"GMT\" appears, in which case both time and date are evaluated\n   at\
    \ the 0 meridian.\n   The optional parameter \"distributions\" is a list of distribution\n\
    \   groups, enclosed in angle brackets.  If specified, the distribution\n   portion\
    \ of a new newsgroup (e.g, 'net' in 'net.wombat') will be\n   examined for a match\
    \ with the distribution categories listed, and\n   only those new newsgroups which\
    \ match will be listed.  If more than\n   one distribution group is to be listed,\
    \ they must be separated by\n   commas within the angle brackets.\n   Please note\
    \ that an empty list (i.e., the text body returned by this\n   command consists\
    \ only of the terminating period) is a possible valid\n   response, and indicates\
    \ that there are currently no new newsgroups.\n"
- title: 3.7.2.  Responses
  contents:
  - "3.7.2.  Responses\n   231 list of new newsgroups follows\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 3.8.  The NEWNEWS command
  contents:
  - '3.8.  The NEWNEWS command

    '
- title: 3.8.1.  NEWNEWS
  contents:
  - "3.8.1.  NEWNEWS\n   NEWNEWS newsgroups date time [GMT] [<distribution>]\n   A\
    \ list of message-ids of articles posted or received to the specified\n   newsgroup\
    \ since \"date\" will be listed. The format of the listing will\n   be one message-id\
    \ per line, as though text were being sent.  A single\n   line consisting solely\
    \ of one period followed by CR-LF will terminate\n   the list.\n   Date and time\
    \ are in the same format as the NEWGROUPS command.\n   A newsgroup name containing\
    \ a \"*\" (an asterisk) may be specified to\n   broaden the article search to\
    \ some or all newsgroups.  The asterisk\n   will be extended to match any part\
    \ of a newsgroup name (e.g.,\n   net.micro* will match net.micro.wombat, net.micro.apple,\
    \ etc). Thus\n   if only an asterisk is given as the newsgroup name, all newsgroups\n\
    \   will be searched for new news.\n   (Please note that the asterisk \"*\" expansion\
    \ is a general\n   replacement; in particular, the specification of e.g., net.*.unix\n\
    \   should be correctly expanded to embrace names such as net.wombat.unix\n  \
    \ and net.whocares.unix.)\n   Conversely, if no asterisk appears in a given newsgroup\
    \ name, only\n   the specified newsgroup will be searched for new articles. Newsgroup\n\
    \   names must be chosen from those returned in the listing of available\n   groups.\
    \  Multiple newsgroup names (including a \"*\") may be specified\n   in this command,\
    \ separated by a comma.  No comma shall appear after\n   the last newsgroup in\
    \ the list.  [Implementors are cautioned to keep\n   the 512 character command\
    \ length limit in mind.]\n   The exclamation point (\"!\") may be used to negate\
    \ a match. This can\n   be used to selectively omit certain newsgroups from an\
    \ otherwise\n   larger list.  For example, a newsgroups specification of\n   \"\
    net.*,mod.*,!mod.map.*\" would specify that all net.<anything> and\n   all mod.<anything>\
    \ EXCEPT mod.map.<anything> newsgroup names would be\n   matched.  If used, the\
    \ exclamation point must appear as the first\n   character of the given newsgroup\
    \ name or pattern.\n   The optional parameter \"distributions\" is a list of distribution\n\
    \   groups, enclosed in angle brackets.  If specified, the distribution\n   portion\
    \ of an article's newsgroup (e.g, 'net' in 'net.wombat') will\n   be examined\
    \ for a match with the distribution categories listed, and\n   only those articles\
    \ which have at least one newsgroup belonging to\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   the list of distributions will be listed.\
    \  If more than one\n   distribution group is to be supplied, they must be separated\
    \ by\n   commas within the angle brackets.\n   The use of the IHAVE, NEWNEWS,\
    \ and NEWGROUPS commands to distribute\n   news is discussed in an earlier part\
    \ of this document.\n   Please note that an empty list (i.e., the text body returned\
    \ by this\n   command consists only of the terminating period) is a possible valid\n\
    \   response, and indicates that there is currently no new news.\n"
- title: 3.8.2.  Responses
  contents:
  - "3.8.2.  Responses\n   230 list of new articles by message-id follows\n"
- title: 3.9.  The NEXT command
  contents:
  - '3.9.  The NEXT command

    '
- title: 3.9.1.  NEXT
  contents:
  - "3.9.1.  NEXT\n   NEXT\n   The internally maintained \"current article pointer\"\
    \ is advanced to\n   the next article in the current newsgroup.  If no more articles\n\
    \   remain in the current group, an error message is returned and the\n   current\
    \ article remains selected.\n   The internally-maintained \"current article pointer\"\
    \ is set by this\n   command.\n   A response indicating the current article number,\
    \ and the message-id\n   string will be returned.  No text is sent in response\
    \ to this\n   command.\n"
- title: 3.9.2.  Responses
  contents:
  - "3.9.2.  Responses\n   223 n a article retrieved - request text separately\n \
    \          (n = article number, a = unique article id)\n   412 no newsgroup selected\n\
    \   420 no current article has been selected\n   421 no next article in this group\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 3.10.  The POST command
  contents:
  - '3.10.  The POST command

    '
- title: 3.10.1.  POST
  contents:
  - "3.10.1.  POST\n   POST\n   If posting is allowed, response code 340 is returned\
    \ to indicate that\n   the article to be posted should be sent. Response code\
    \ 440 indicates\n   that posting is prohibited for some installation-dependent\
    \ reason.\n   If posting is permitted, the article should be presented in the\n\
    \   format specified by RFC850, and should include all required header\n   lines.\
    \ After the article's header and body have been completely sent\n   by the client\
    \ to the server, a further response code will be returned\n   to indicate success\
    \ or failure of the posting attempt.\n   The text forming the header and body\
    \ of the message to be posted\n   should be sent by the client using the conventions\
    \ for text received\n   from the news server:  A single period (\".\") on a line\
    \ indicates the\n   end of the text, with lines starting with a period in the\
    \ original\n   text having that period doubled during transmission.\n   No attempt\
    \ shall be made by the server to filter characters, fold or\n   limit lines, or\
    \ otherwise process incoming text.  It is our intent\n   that the server just\
    \ pass the incoming message to be posted to the\n   server installation's news\
    \ posting software, which is separate from\n   this specification.  See RFC850\
    \ for more details.\n   Since most installations will want the client news program\
    \ to allow\n   the user to prepare his message using some sort of text editor,\
    \ and\n   transmit it to the server for posting only after it is composed, the\n\
    \   client program should take note of the herald message that greeted it\n  \
    \ when the connection was first established. This message indicates\n   whether\
    \ postings from that client are permitted or not, and can be\n   used to caution\
    \ the user that his access is read-only if that is the\n   case. This will prevent\
    \ the user from wasting a good deal of time\n   composing a message only to find\
    \ posting of the message was denied.\n   The method and determination of which\
    \ clients and hosts may post is\n   installation dependent and is not covered\
    \ by this specification.\n"
- title: 3.10.2.  Responses
  contents:
  - "3.10.2.  Responses\n   240 article posted ok\n   340 send article to be posted.\
    \ End with <CR-LF>.<CR-LF>\n   440 posting not allowed\n   441 posting failed\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   (for reference, one of the following codes\
    \ will be sent upon initial\n   connection; the client program should determine\
    \ whether posting is\n   generally permitted from these:) 200 server ready - posting\
    \ allowed\n   201 server ready - no posting allowed\n"
- title: 3.11.  The QUIT command
  contents:
  - '3.11.  The QUIT command

    '
- title: 3.11.1.  QUIT
  contents:
  - "3.11.1.  QUIT\n   QUIT\n   The server process acknowledges the QUIT command and\
    \ then closes the\n   connection to the client.  This is the preferred method\
    \ for a client\n   to indicate that it has finished all its transactions with\
    \ the NNTP\n   server.\n   If a client simply disconnects (or the connection times\
    \ out, or some\n   other fault occurs), the server should gracefully cease its\
    \ attempts\n   to service the client.\n"
- title: 3.11.2.  Responses
  contents:
  - "3.11.2.  Responses\n   205 closing connection - goodbye!\n"
- title: 3.12.  The SLAVE command
  contents:
  - '3.12.  The SLAVE command

    '
- title: 3.12.1.  SLAVE
  contents:
  - "3.12.1.  SLAVE\n   SLAVE\n   Indicates to the server that this client connection\
    \ is to a slave\n   server, rather than a user.\n   This command is intended for\
    \ use in separating connections to single\n   users from those to subsidiary (\"\
    slave\") servers.  It may be used to\n   indicate that priority should therefore\
    \ be given to requests from\n   this client, as it is presumably serving more\
    \ than one person.  It\n   might also be used to determine which connections to\
    \ close when\n   system load levels are exceeded, perhaps giving preference to\
    \ slave\n   servers.  The actual use this command is put to is entirely\n   implementation\
    \ dependent, and may vary from one host to another.  In\n   NNTP servers which\
    \ do not give priority to slave servers, this\n   command must nonetheless be\
    \ recognized and acknowledged.\n"
- title: 3.12.2.  Responses
  contents:
  - "3.12.2.  Responses\n   202 slave status noted\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 4.  Sample Conversations
  contents:
  - "4.  Sample Conversations\n   These are samples of the conversations that might\
    \ be expected with\n   the news server in hypothetical sessions.  The notation\
    \ C: indicates\n   commands sent to the news server from the client program; S:\
    \ indicate\n   responses received from the server by the client.\n"
- title: 4.1.  Example 1 - relative access with NEXT
  contents:
  - "4.1.  Example 1 - relative access with NEXT\n   S:      (listens at TCP port\
    \ 119)\n   C:      (requests connection on TCP port 119)\n   S:      200 wombatvax\
    \ news server ready - posting ok\n   (client asks for a current newsgroup list)\n\
    \   C:      LIST\n   S:      215 list of newsgroups follows\n   S:      net.wombats\
    \ 00543 00501 y\n   S:      net.unix-wizards 10125 10011 y\n           (more information\
    \ here)\n   S:      net.idiots 00100 00001 n\n   S:      .\n   (client selects\
    \ a newsgroup)\n   C:      GROUP net.unix-wizards\n   S:      211 104 10011 10125\
    \ net.unix-wizards group selected\n           (there are 104 articles on file,\
    \ from 10011 to 10125)\n   (client selects an article to read)\n   C:      STAT\
    \ 10110\n   S:      223 10110 <23445@sdcsvax.ARPA> article retrieved - statistics\n\
    \           only (article 10110 selected, its message-id is\n           <23445@sdcsvax.ARPA>)\n\
    \   (client examines the header)\n   C:      HEAD\n   S:      221 10110 <23445@sdcsvax.ARPA>\
    \ article retrieved - head\n           follows (text of the header appears here)\n\
    \   S:      .\n   (client wants to see the text body of the article)\n   C:  \
    \    BODY\n   S:      222 10110 <23445@sdcsvax.ARPA> article retrieved - body\n\
    \           follows (body text here)\n   S:      .\n   (client selects next article\
    \ in group)\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   C:      NEXT\n   S:      223 10113 <21495@nudebch.uucp>\
    \ article retrieved - statistics\n           only (article 10113 was next in group)\n\
    \   (client finishes session)\n   C:      QUIT\n   S:      205 goodbye.\n"
- title: 4.2.  Example 2 - absolute article access with ARTICLE
  contents:
  - "4.2.  Example 2 - absolute article access with ARTICLE\n   S:      (listens at\
    \ TCP port 119)\n   C:      (requests connection on TCP port 119)\n   S:     \
    \ 201 UCB-VAX netnews server ready -- no posting allowed\n   C:      GROUP msgs\n\
    \   S:      211 103 402 504 msgs Your new group is msgs\n           (there are\
    \ 103 articles, from 402 to 504)\n   C:      ARTICLE 401\n   S:      423 No such\
    \ article in this newsgroup\n   C:      ARTICLE 402\n   S:      220 402 <4105@ucbvax.ARPA>\
    \ Article retrieved, text follows\n   S:      (article header and body follow)\n\
    \   S:      .\n   C:      HEAD 403\n   S:      221 403 <3108@mcvax.UUCP> Article\
    \ retrieved, header follows\n   S:      (article header follows)\n   S:      .\n\
    \   C:      QUIT\n   S:      205 UCB-VAX news server closing connection.  Goodbye.\n"
- title: 4.3.  Example 3 - NEWGROUPS command
  contents:
  - "4.3.  Example 3 - NEWGROUPS command\n   S:      (listens at TCP port 119)\n \
    \  C:      (requests connection on TCP port 119)\n   S:      200 Imaginary Institute\
    \ News Server ready (posting ok)\n   (client asks for new newsgroups since April\
    \ 3, 1985)\n   C:      NEWGROUPS 850403 020000\n   S:      231 New newsgroups\
    \ since 03/04/85 02:00:00 follow\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   S:      net.music.gdead\n   S:      net.games.sources\n\
    \   S:      .\n   C:      GROUP net.music.gdead\n   S:      211 0 1 1 net.music.gdead\
    \ Newsgroup selected\n           (there are no articles in that newsgroup, and\n\
    \           the first and last article numbers should be ignored)\n   C:     \
    \ QUIT\n   S:      205 Imaginary Institute news server ceasing service.  Bye!\n"
- title: 4.4.  Example 4 - posting a news article
  contents:
  - "4.4.  Example 4 - posting a news article\n   S:      (listens at TCP port 119)\n\
    \   C:      (requests connection on TCP port 119)\n   S:      200 BANZAIVAX news\
    \ server ready, posting allowed.\n   C:      POST\n   S:      340 Continue posting;\
    \ Period on a line by itself to end\n   C:      (transmits news article in RFC850\
    \ format)\n   C:      .\n   S:      240 Article posted successfully.\n   C:  \
    \    QUIT\n   S:      205 BANZAIVAX closing connection.  Goodbye.\n"
- title: 4.5.  Example 5 - interruption due to operator request
  contents:
  - "4.5.  Example 5 - interruption due to operator request\n   S:      (listens at\
    \ TCP port 119)\n   C:      (requests connection on TCP port 119)\n   S:     \
    \ 201 genericvax news server ready, no posting allowed.\n           (assume normal\
    \ conversation for some time, and\n           that a newsgroup has been selected)\n\
    \   C:      NEXT\n   S:      223 1013 <5734@mcvax.UUCP> Article retrieved; text\
    \ separate.\n   C:      HEAD\n   C:      221 1013 <5734@mcvax.UUCP> Article retrieved;\
    \ head follows.\n   S:      (sends head of article, but halfway through is\n \
    \          interrupted by an operator request.  The following\n           then\
    \ occurs, without client intervention.)\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   S:      (ends current line with a CR-LF pair)\n\
    \   S:      .\n   S:      400 Connection closed by operator.  Goodbye.\n   S:\
    \      (closes connection)\n"
- title: 4.6.  Example 6 - Using the news server to distribute news between
  contents:
  - "4.6.  Example 6 - Using the news server to distribute news between\n      systems.\n\
    \   S:      (listens at TCP port 119)\n   C:      (requests connection on TCP\
    \ port 119)\n   S:      201 Foobar NNTP server ready (no posting)\n   (client\
    \ asks for new newsgroups since 2 am, May 15, 1985)\n   C:      NEWGROUPS 850515\
    \ 020000\n   S:      235 New newsgroups since 850515 follow\n   S:      net.fluff\n\
    \   S:      net.lint\n   S:      .\n   (client asks for new news articles since\
    \ 2 am, May 15, 1985)\n   C:      NEWNEWS * 850515 020000\n   S:      230 New\
    \ news since 850515 020000 follows\n   S:      <1772@foo.UUCP>\n   S:      <87623@baz.UUCP>\n\
    \   S:      <17872@GOLD.CSNET>\n   S:      .\n   (client asks for article <1772@foo.UUCP>)\n\
    \   C:      ARTICLE <1772@foo.UUCP>\n   S:      220 <1772@foo.UUCP> All of article\
    \ follows\n   S:      (sends entire message)\n   S:      .\n   (client asks for\
    \ article <87623@baz.UUCP>\n   C:      ARTICLE <87623@baz.UUCP>\n   S:      220\
    \ <87623@baz.UUCP> All of article follows\n   S:      (sends entire message)\n\
    \   S:      .\n   (client asks for article <17872@GOLD.CSNET>\n   C:      ARTICLE\
    \ <17872@GOLD.CSNET>\n   S:      220 <17872@GOLD.CSNET> All of article follows\n\
    \   S:      (sends entire message)\n   S:      .\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   (client offers an article it has received\
    \ recently)\n   C:      IHAVE <4105@ucbvax.ARPA>\n   S:      435 Already seen\
    \ that one, where you been?\n   (client offers another article)\n   C:      IHAVE\
    \ <4106@ucbvax.ARPA>\n   S:      335 News to me!  <CRLF.CRLF> to end.\n   C: \
    \     (sends article)\n   C:      .\n   S:      235 Article transferred successfully.\
    \  Thanks.\n   (or)\n   S:      436 Transfer failed.\n   (client is all through\
    \ with the session)\n   C:      QUIT\n   S:      205 Foobar NNTP server bids you\
    \ farewell.\n"
- title: 4.7.  Summary of commands and responses.
  contents:
  - "4.7.  Summary of commands and responses.\n   The following are the commands recognized\
    \ and responses returned by\n   the NNTP server.\n"
- title: 4.7.1.  Commands
  contents:
  - "4.7.1.  Commands\n   ARTICLE\n   BODY\n   GROUP\n   HEAD\n   HELP\n   IHAVE\n\
    \   LAST\n   LIST\n   NEWGROUPS\n   NEWNEWS\n   NEXT\n   POST\n   QUIT\n   SLAVE\n\
    \   STAT\n"
- title: 4.7.2.  Responses
  contents:
  - "4.7.2.  Responses\n   100 help text follows\n   199 debug output\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   200 server ready - posting allowed\n   201\
    \ server ready - no posting allowed\n   202 slave status noted\n   205 closing\
    \ connection - goodbye!\n   211 n f l s group selected\n   215 list of newsgroups\
    \ follows\n   220 n <a> article retrieved - head and body follow 221 n <a> article\n\
    \   retrieved - head follows\n   222 n <a> article retrieved - body follows\n\
    \   223 n <a> article retrieved - request text separately 230 list of new\n  \
    \ articles by message-id follows\n   231 list of new newsgroups follows\n   235\
    \ article transferred ok\n   240 article posted ok\n   335 send article to be\
    \ transferred.  End with <CR-LF>.<CR-LF>\n   340 send article to be posted. End\
    \ with <CR-LF>.<CR-LF>\n   400 service discontinued\n   411 no such news group\n\
    \   412 no newsgroup has been selected\n   420 no current article has been selected\n\
    \   421 no next article in this group\n   422 no previous article in this group\n\
    \   423 no such article number in this group\n   430 no such article found\n \
    \  435 article not wanted - do not send it\n   436 transfer failed - try again\
    \ later\n   437 article rejected - do not try again.\n   440 posting not allowed\n\
    \   441 posting failed\n   500 command not recognized\n   501 command syntax error\n\
    \   502 access restriction or permission denied\n   503 program fault - command\
    \ not performed\n"
- title: 4.8.  A Brief Word about the USENET News System
  contents:
  - "4.8.  A Brief Word about the USENET News System\n   In the UNIX world, which\
    \ traditionally has been linked by 1200 baud\n   dial-up telephone lines, the\
    \ USENET News system has evolved to handle\n   central storage, indexing, retrieval,\
    \ and distribution of news.  With\n   the exception of its underlying transport\
    \ mechanism (UUCP), USENET\n   News is an efficient means of providing news and\
    \ bulletin service to\n   subscribers on UNIX and other hosts worldwide.  The\
    \ USENET News\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - "Network News Transfer Protocol\n   system is discussed in detail in RFC 850.\
    \  It runs on most versions\n   of UNIX and on many other operating systems, and\
    \ is customarily\n   distributed without charge.\n   USENET uses a spooling area\
    \ on the UNIX host to store news articles,\n   one per file. Each article consists\
    \ of a series of heading text,\n   which contain the sender's identification and\
    \ organizational\n   affiliation, timestamps, electronic mail reply paths, subject,\n\
    \   newsgroup (subject category), and the like.  A complete news article\n   is\
    \ reproduced in its entirety below.  Please consult RFC 850 for more\n   details.\n\
    \      Relay-Version: version B 2.10.3 4.3bsd-beta 6/6/85; site\n      sdcsvax.UUCP\n\
    \      Posting-Version: version B 2.10.1 6/24/83 SMI; site unitek.uucp\n     \
    \ Path:sdcsvax!sdcrdcf!hplabs!qantel!ihnp4!alberta!ubc-vision!unitek\n      !honman\n\
    \      From: honman@unitek.uucp (Man Wong)\n      Newsgroups: net.unix-wizards\n\
    \      Subject: foreground -> background ?\n      Message-ID: <167@unitek.uucp>\n\
    \      Date: 25 Sep 85 23:51:52 GMT\n      Date-Received: 29 Sep 85 09:54:48 GMT\n\
    \      Reply-To: honman@unitek.UUCP (Hon-Man Wong)\n      Distribution: net.all\n\
    \      Organization: Unitek Technologies Corporation\n      Lines: 12\n      I\
    \ have a process (C program) which generates a child and waits for\n      it to\
    \ return.  What I would like to do is to be able to run the\n      child process\
    \ interactively for a while before kicking itself into\n      the background so\
    \ I can return to the parent process (while the\n      child process is RUNNING\
    \ in the background).  Can it be done?  And\n      if it can, how?\n      Please\
    \ reply by E-mail.  Thanks in advance.\n      Hon-Man Wong\n"
- title: RFC 977                                                    February 1986
  contents:
  - 'RFC 977                                                    February 1986

    '
- title: Network News Transfer Protocol
  contents:
  - 'Network News Transfer Protocol

    '
- title: 5.  References
  contents:
  - "5.  References\n   [1]  Crocker, D., \"Standard for the Format of ARPA Internet\
    \ Text\n        Messages\", RFC-822, Department of Electrical Engineering,\n \
    \       University of Delaware, August, 1982.\n   [2]  Horton, M., \"Standard\
    \ for Interchange of USENET Messages\",\n        RFC-850, USENET Project, June,\
    \ 1983.\n   [3]  Postel, J., \"Transmission Control Protocol- DARPA Internet\n\
    \        Program Protocol Specification\", RFC-793, USC/Information\n        Sciences\
    \ Institute, September, 1981.\n   [4]  Postel, J., \"Simple Mail Transfer Protocol\"\
    , RFC-821,\n        USC/Information Sciences Institute, August, 1982.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors wish to express their heartfelt thanks to\
    \ those many\n   people who contributed to this specification, and especially\
    \ to Erik\n   Fair and Chuq von Rospach, without whose inspiration this whole\
    \ thing\n   would not have been necessary.\n"
- title: 7.  Notes
  contents:
  - "7.  Notes\n   <1> UNIX is a trademark of Bell Laboratories.\n"
