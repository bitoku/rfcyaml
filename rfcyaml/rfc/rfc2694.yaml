- title: __initial_text__
  contents:
  - '        DNS extensions to Network Address Translators (DNS_ALG)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Domain Name Service (DNS) provides name to address mapping within\
    \ a\n   routing class (ex: IP). Network Address Translators (NATs) attempt to\n\
    \   provide transparent routing between hosts in disparate address realms\n  \
    \ of the same routing class. Typically, NATs exist at the border of a\n   stub\
    \ domain, hiding private addresses from external addresses. This\n   document\
    \ identifies the need for DNS extensions to NATs and outlines\n   how a DNS Application\
    \ Level Gateway (DNS_ALG) can meet the need.\n   DNS_ALG modifies payload transparently\
    \ to alter address mapping of\n   hosts as DNS packets cross one address realm\
    \ into another. The\n   document also illustrates the operation of DNS_ALG with\
    \ specific\n   examples.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Network Address Translators (NATs) are often used when network's\n\
    \   internal IP addresses cannot be used outside the network either for\n   privacy\
    \ reasons or because they are invalid for use outside the\n   network.\n   Ideally\
    \ speaking, a host name uniquely identifies a host and its\n   address is used\
    \ to locate routes to the host. However, host name and\n   address are often not\
    \ distinguished and used interchangeably by\n   applications. Applications embed\
    \ IP address instead of host name in\n   payload. Examples would be e-mails that\
    \ specify their MX server\n   address (ex: user@666.42.7.11) instead of server\
    \ name (ex:\n   user@private.com) as sender ID; HTML files that include IP address\n\
    \   instead of names in URLs, etc. Use of IP address in place of host\n   name\
    \ in payload represents a problem as the packet traverses a NAT\n   device because\
    \ NATs alter network and transport headers to suit an\n   address realm, but not\
    \ payload.\n   DNS provides Name to address mapping. Whereas, NAT performs address\n\
    \   translation (in network and transport headers) in datagrams\n   traversing\
    \ between private and external address realms.  DNS\n   Application Level Gateway\
    \ (DNS_ALG) outlined in this document helps\n   translate Name-to-Private-Address\
    \ mapping in DNS payloads into Name-\n   to-external-address mapping and vice\
    \ versa using state information\n   available on NAT.\n   A Network Address Port\
    \ Translator (NAPT) performs address and\n   Transport level port translations\
    \ (i.e, TCP, UDP ports and ICMP query\n   IDs). DNS name mapping granularity,\
    \ however, is limited to IP\n   addresses and does not extend to transport level\
    \ identifiers.  As a\n   result, the DNS_ALG processing for an NAPT configuration\
    \ is\n   simplified in that all host addresses in private network are bound to\n\
    \   a single external address. The DNS name lookup for private hosts\n   (from\
    \ external hosts) do not mandate fresh private-external address\n   binding, as\
    \ all private hosts are bound to a single pre-defined\n   external address. However,\
    \ reverse name lookups for the NAPT external\n   address will not map to any of\
    \ the private hosts and will simply map\n   to the NAPT router.  Suffices to say,\
    \ the processing requirements for\n   a DNS_ALG supporting NAPT configuration\
    \ are a mere subset of Basic\n   NAT.  Hence, the discussion in the remainder\
    \ of the document will\n   focus mainly on Basic NAT, Bi-directional NAT and Twice\
    \ NAT\n   configurations, with no specific reference to NAPT setup.\n   Definitions\
    \ for DNS and related terms may be found in [Ref 3] and\n   [Ref 4]. Definitions\
    \ for NAT related terms may be found in [Ref 1].\n"
- title: 2. Requirement for DNS extensions
  contents:
  - "2. Requirement for DNS extensions\n   There are many ways to ensure that a host\
    \ name is mapped to an\n   address relevant within an address realm. In the following\
    \ sections,\n   we will identify where DNS extensions would be needed.\n   Typically,\
    \ organizations have two types of authoritative name\n   servers. Internal authoritative\
    \ name servers identify all (or\n   majority of) corporate resources within the\
    \ organization. Only a\n   portion of these hosts are allowed to be accessed by\
    \ the external\n   world. The remaining hosts and their names are unique to the\
    \ private\n   network. Hosts visible to the external world and the authoritative\n\
    \   name server that maps their names to network addresses are often\n   configured\
    \ within a DMZ (De-Militarized Zone) in front of a firewall.\n   We will refer\
    \ the hosts and name servers within DMZ as DMZ hosts and\n   DMZ name servers\
    \ respectively. DMZ host names are end-to-end unique\n   in that their FQDNs do\
    \ not overlap with any end node that\n   communicates with it.\n             \
    \                      \\ | /\n                           +-----------------------+\n\
    \                           |Service Provider Router|\n                      \
    \     +-----------------------+\n                            WAN  |\n        \
    \       Stub A .........|\\|....\n                               |\n         \
    \            +-----------------+\n                     |Stub Router w/NAT|\n \
    \                    +-----------------+\n                         |\n       \
    \                  |   DMZ - Network\n   ------------------------------------------------------------\n\
    \      |         |              |            |             |\n     +--+      +--+\
    \           +--+         +--+      +----------+\n     |__|      |__|         \
    \  |__|         |__|      | Firewall |\n    /____\\    /____\\         /____\\\
    \       /____\\     +----------+\n   DMZ-Host1  DMZ-Host2 ...  DMZ-Name     DMZ-Web\
    \       |\n                             Server       Server etc.   |\n       \
    \                                                 |\n     Internal hosts (Private\
    \ IP network)                |\n   ------------------------------------------------------------\n\
    \       |             |                 |           |\n      +--+         +--+\
    \               +--+       +--+\n      |__|         |__|               |__|  \
    \     |__|\n     /____\\       /____\\             /____\\     /____\\\n    Int-Host1\
    \    Int-Host2  .....   Int-Hostn   Int-Name Server\n    Figure 1: DMZ network\
    \ configuration of a private Network.\n   Figure 1 above illustrates configuration\
    \ of a private network which\n   includes a DMZ. Actual configurations may vary.\
    \ Internal name servers\n   are accessed by users within the private network only.\
    \ Internal DNS\n   queries and responses do not cross the private network boundary.\
    \ DMZ\n   name servers and DMZ hosts on the other hand are end-to-end unique\n\
    \   and could be accessed by external as well as internal hosts.\n   Throughout\
    \ this document, our focus will be limited to DMZ hosts and\n   DMZ name servers\
    \ and will not include internal hosts and internal\n   name servers, unless they\
    \ happen to be same.\n"
- title: 2.1. DMZ hosts assigned static external addresses on NAT
  contents:
  - "2.1. DMZ hosts assigned static external addresses on NAT\n   Take the case where\
    \ DMZ hosts are assigned static external addresses\n   on the NAT device. Note,\
    \ all hosts within private domain, including\n   the DMZ hosts are identified\
    \ by their private addresses.  Static\n   mapping on the NAT device allows the\
    \ DMZ hosts to be identified by\n   their public addresses in the external domain.\n"
- title: 2.1.1. Private networks with no DMZ name servers
  contents:
  - "2.1.1. Private networks with no DMZ name servers\n   Take the case where a private\
    \ network has no DMZ name server for\n   itself. If the private network is connected\
    \ to a single service\n   provider for external connectivity, the DMZ hosts may\
    \ be listed by\n   their external addresses in the authoritative name servers\
    \ of the\n   service provider within their forward and in-add.arpa reverse zones.\n\
    \   If the network is connected to multiple service providers, the DMZ\n   host\
    \ names may be listed by their external address(es) within the\n   authoritative\
    \ name servers of each of the service providers.  This is\n   particularly significant\
    \ in the case of in-addr.arpa reverse zones,\n   as  the private network may be\
    \ assigned different address prefixes by\n   the service providers.\n   In both\
    \ cases, externally generated DNS lookups will not reach the\n   private network.\
    \  A large number of NAT based private domains pursue\n   this option to have\
    \ their DMZ hosts listed by their external\n   addresses on service provider's\
    \ name servers.\n"
- title: 2.1.2. Private networks with DMZ name servers
  contents:
  - "2.1.2. Private networks with DMZ name servers\n   Take the case where a private\
    \ network opts to keep an authoritative\n   DMZ name server for the zone within\
    \ the network itself. If the\n   network is connected to a single service provider,\
    \ the DMZ name\n   server may be configured to obviate DNS payload interceptions\
    \ as\n   follows. The hosts in DMZ name server must be mapped to their\n   statically\
    \ assigned external addresses and the internal name server\n   must be configured\
    \ to bypass the DMZ name server for queries\n   concerning external hosts. This\
    \ scheme ensures that DMZ name servers\n   are set for exclusive access to external\
    \ hosts alone (not even to the\n   DMZ hosts) and hence can be configured with\
    \ external addresses only.\n   The above scheme requires careful administrative\
    \ planning to ensure\n   that DMZ name servers are not contacted by the private\
    \ hosts directly\n   or indirectly (through the internal name servers). Using\
    \ DNS-ALG\n   would obviate the administrative ordeals with this approach.\n"
- title: 2.2. DMZ hosts assigned external addresses dynamically on NAT
  contents:
  - "2.2. DMZ hosts assigned external addresses dynamically on NAT\n   Take the case\
    \ where DMZ hosts in a private network are assigned\n   external addresses dynamically\
    \ by NAT. While the addresses issued to\n   these hosts are fixed within the private\
    \ network, their externally\n   known addresses are ephemeral, as determined by\
    \ NAT.  In such a\n   scenario, it is mandatory for the private organization to\
    \ have a DMZ\n   name server in order to allow access to DMZ hosts by their name.\n\
    \   The DMZ name server would be configured with private addresses for\n   DMZ\
    \ hosts. DNS Application Level Gateway (DNS_ALG) residing on NAT\n   device will\
    \ intercept the DNS packets directed to or from the DMZ\n   name server(s) and\
    \ perform transparent payload translations so that a\n   DMZ host name has the\
    \ right address mapping within each address realm\n   (i.e., private or external).\n"
- title: 3. Interactions between NAT and DNS_ALG
  contents:
  - "3. Interactions between NAT and DNS_ALG\n   This document operates on the paradigm\
    \ that interconnecting address\n   realms may have overlapping address space.\
    \ But, names of hosts within\n   interconnected realms must be end-to-end unique\
    \ in order for them to\n   be accessed by all hosts. In other words, there cannot\
    \ be an overlap\n   of FQDNs between end nodes communicating with each other.\
    \  The\n   following diagram illustrates how a DNS packet traversing a NAT\n \
    \  device (with DNS_ALG) is subject to header and payload translations.\n   A\
    \ DNS packet can be a TCP or UDP packet with the source or\n   destination port\
    \ set to 53. NAT would translate the IP and TCP/UDP\n   headers of the DNS packet\
    \ and notify DNS-ALG to perform DNS payload\n   changes. DNS-ALG would interact\
    \ with NAT and use NAT state\n   information to modify payload, as necessary.\n\
    \                Original-IP\n                 packet\n                   ||\n\
    \                   ||\n                   vv\n   +---------------------------------+\
    \    +-----------------------+\n   |                                 |    |DNS\
    \ Appl. Level Gateway|\n   |Network Address Translation (NAT)|--->|     (DNS_ALG)\
    \         |\n   |  *IP & Transport header mods    |<---|  *DNS payload mods  \
    \  |\n   |                                 |    |                       |\n  \
    \ +---------------------------------+    +-----------------------+\n         \
    \          ||\n                   ||\n                   vv\n              Translated-IP\n\
    \                 packet\n    Figure 2: NAT & DNS-ALG in the translation path\
    \ of DNS packets\n"
- title: 3.1. Address Binding considerations
  contents:
  - "3.1. Address Binding considerations\n   We will make a distinction between \"\
    Temporary Address Binding\" and\n   \"Committed Address Binding\" in NATs. This\
    \ distinction becomes\n   necessary because the DNS_ALG will allow external users\
    \ to create\n   state on NAT, and thus the potential for denial-of-service attacks.\n\
    \   Temporary address binding is the phase in which an address binding is\n  \
    \ reserved without any NAT sessions using the binding. Committed\n   address binding\
    \ is the phase in which there exists at least one NAT\n   session using the binding\
    \ between the external and private addresses.\n   Both types of bindings are used\
    \ by DNS_ALG to modify DNS payloads.\n   NAT uses only the committed address bindings\
    \ to modify the IP and\n   Transport headers of datagrams pertaining to NAT sessions.\n\
    \   For statically mapped addresses, the above distinction is not\n   relevant.\
    \ For dynamically mapped addresses, temporary address binding\n   often precedes\
    \ committed binding. Temporary binding occurs when DMZ\n   name server is queried\
    \ for a name lookup. Name query is likely a\n   pre-cursor to a real session between\
    \ query originator and the queried\n   host. The temporary binding becomes committed\
    \ only when NAT sees the\n   first packet of a session between query initiator\
    \ and queried host.\n   A configurable parameter, \"Bind-holdout time\" may be\
    \ defined for\n   dynamic address assignments as the maximum period of time for\
    \ which a\n   temporary address binding is held active without transitioning into\
    \ a\n   committed binding. With each use of temporary binding by DNS_ALG (to\n\
    \   modify DNS payload), this Bind-holdout period is renewed. A default\n   Bind-holdout\
    \ time of a couple of minutes might suffice for most DNS-\n   ALG implementations.\
    \ Note, it is possible for a committed address\n   binding to occur without ever\
    \ having to be preceded by a temporary\n   binding. Lastly, when NAT is ready\
    \ to unbind a committed address\n   binding, the binding is transitioned into\
    \ a temporary binding and\n   kept in that phase for an additional Bind-holdout\
    \ period. The binding\n   is freed only upon expiry of Bind-holdout time. The\
    \ Bind-holdout time\n   preceding the committed-address-binding and the address-unbinding\
    \ are\n   required to ensure that end hosts have sufficient time in which to\n\
    \   initiate a data session subsequent to a name lookup.\n   For example, say\
    \ a private network with address prefix 10/8 is mapped\n   to 198.76.29/24. When\
    \ an external hosts makes a DNS query to host7,\n   bearing address 10.0.0.7,\
    \ the DMZ name server within private network\n   responds with an A type RR for\
    \ host7 as:\n       host7  A  10.0.0.7\n   DNS_ALG would intercept the response\
    \ packet and if 10.0.0.7 is not\n   assigned an external address already, it would\
    \ request NAT to create\n   a temporary address binding with an external address\
    \ and start Bind-\n   holdout timer to age the binding. Say, the assigned external\
    \ address\n   is 198.76.29.1. DNS-ALG would use this temporary binding to modify\n\
    \   the RR in DNS response, replacing 10.0.0.7 with its external address\n   and\
    \ reply with:\n       host7  A  198.76.29.1\n   When query initiator receives\
    \ DNS response, only the assigned\n   external address is seen. Within a short\
    \ period (presumably before\n   the bind-holdout time expires), the query initiator\
    \ would initiate a\n   session with host7. When NAT notices the start of new session\n\
    \   directed to 198.76.29.1, NAT would terminate Bind-holdout timer and\n   transition\
    \ the temporary binding between 198.76.29.1 and 10.0.0.7\n   into a committed\
    \ binding.\n   To minimize denial of service attacks, where a malicious user keeps\n\
    \   attempting name resolutions, without ever initiating a connection,\n   NAT\
    \ would have to monitor temporary address bindings that have not\n   transitioned\
    \ into committed bindings. There could be a limit on the\n   number of temporary\
    \ bindings and attempts to generate additional\n   temporary bindings could be\
    \ simply rejected.  There may be other\n   heuristic solutions to counter this\
    \ type of malicious attacks.\n   We will consider bi-directional NAT to illustrate\
    \ the use of\n   temporary binding by DNS_ALG in the following sub-sections, even\n\
    \   though the concept is applicable to other flavors of NATs as well.\n"
- title: 3.2. Incoming queries
  contents:
  - "3.2. Incoming queries\n   In order to initiate incoming sessions, an external\
    \ host obtains the\n   V4 address of the DMZ-host it is trying to connect to by\
    \ making a DNS\n   request.  This request constitutes prelude to the start of\
    \ a\n   potential new session.\n   The external host resolver makes a name lookup\
    \ for the DMZ host\n   through its DNS server.  When the DNS server does not have\
    \ a record\n   of IPv4 address attached to this name, the lookup query is redirected\n\
    \   at some point to the Primary/Backup DNS server (i.e., in DMZ) of the\n   private\
    \ stub domain.\n   Enroute to DMZ name server, DNS_ALG would intercept the datagram\
    \ and\n   modify the query as follows.\n      a) For Host name to Host address\
    \ query requests:\n         Make no change to the DNS payload.\n      b) For Host\
    \ address to Host name queries:  Replace the external V4\n         address octets\
    \ (in reverse order) preceding the string \"IN-\n         ADDR.ARPA\"  with the\
    \ corresponding private V4 address, if such\n         an address binding exists\
    \ already. However, if a binding does\n         not exist, the DNS_ALG would simply\
    \ respond (as a name server\n         would) with a response code (RCODE) of 5\
    \ (REFUSED to respond\n         due to policy reasons) and set ANCOUNT, NSCOUNT\
    \ and ARCOUT to 0\n         in the header section of the response.\n   In the\
    \ opposite direction, as DNS response traverses from the DNS\n   server in private\
    \ network, DNS_ALG would once again intercept the\n   packet and modify as follows.\n\
    \      a) For a host name to host address query requests, replace the\n      \
    \   private address sent by DMZ name server with a public address\n         internally\
    \ assigned by the NAT router. If a public address is\n         not previously\
    \ assigned to the host's private address, NAT\n         would assign one at this\
    \ time.\n      b) For host address to host name queries, replace the private\n\
    \         address octets preceding the string \"IN-ADDR.ARPA\" in response\n \
    \        RRs with their external address assignments.  There is a chance\n   \
    \      here that by the time the DMZ name server replies, the bind-\n        \
    \ holdout timer in NAT for the address in question has expired.\n         In such\
    \ a case, DNS_ALG would simply drop the reply. The sender\n         will have\
    \ to resend the query (as would happen when a router\n         enroute drops the\
    \ response).\n   For static address assignments, the TTL value supplied in the\n\
    \   original RR will be left unchanged. For dynamic address assignments,\n   DNS_ALG\
    \ would modify the TTL value on DNS resource records (RRs) to\n   be 0, implying\
    \ that the RRs should only be used for transaction in\n   progress, and not be\
    \ cached. For compatibility with broken\n   implementations, TTL of 1 might in\
    \ practice work better.\n   Clearly, setting TTL to be 0 will create more traffic\
    \ than if the\n   addresses were static, because name-to-address mapping is not\
    \ cached.\n   Specifically, network based applications will be required to use\n\
    \   names rather than addresses for identifying peer nodes and must use\n   DNS\
    \ for every name resolution, as name-to-address mapping cannot be\n   shared from\
    \ the previously run applications.\n   In addition, NAT would be requested to\
    \ initiate a bind-holdout timer\n   following the assignment. If no session is\
    \ initiated to the private\n   host within the Bind-holdout time period, NAT would\
    \ terminate the\n   temporary binding.\n"
- title: 3.3. Outgoing Queries
  contents:
  - "3.3. Outgoing Queries\n   For Basic and bi-directional NATs, there is no need\
    \ to distinguish\n   between temporary and committed bindings for outgoing queries.\
    \ This\n   is because, DNS_ALG does not modify the DNS packets directed to or\n\
    \   from external name servers (used during outbound sessions), unlike\n   the\
    \ inbound DNS sessions.\n   Say, a private host needs to communicate with an external\
    \ host.  The\n   DNS query  goes  to  the internal name server (if there exists\
    \ one)\n   and from there to the appropriate authoritative/cache name server\n\
    \   outside the private domain.  The  reply follows the same route but\n   neither\
    \ the query nor the response are subject to DNS_ALG\n   translations.\n   This\
    \ however will not be the case with address isolated twice NAT\n   private and\
    \ external domains. In such a case, NAT would intercept all\n   DNS packets and\
    \ make address modifications to payload as discussed in\n   the previous section.\
    \ Temporary Private to external address bindings\n   are created when responses\
    \ are sent by private DNS servers and\n   temporary external to private address\
    \ bindings are created when\n   responses are sent by external DNS servers.\n"
- title: 4. DNS payload modifications by DNS-ALG
  contents:
  - "4. DNS payload modifications by DNS-ALG\n   Typically, UDP is employed as the\
    \ transport mechanism for DNS queries\n   and responses and TCP for Zone refresh\
    \ activities. In either case,\n   name servers are accessed using a well-known\
    \ DNS server port 53\n   (decimal) and all DNS payloads have the following format\
    \ of data [Ref\n   4]. While NAT is responsible for the translation of IP and\
    \ TCP/UDP\n   headers of a DNS packet, DNS-ALG is responsible for updating the\
    \ DNS\n   payload.\n   The header section within the DNS payload is always present\
    \ and\n   includes fields specifying which of the remaining sections are\n   present.\
    \ The header identifies if the message is a query or a\n   response. No changes\
    \ are required to be made by DNS-ALG to the Header\n   section. DNS_ALG would\
    \ parse only the DNS payloads whose QCLASS is\n   set to IN (IP class).\n    +---------------------+\n\
    \    |        Header       |\n    +---------------------+\n    |       Question\
    \      | the question for the name server\n    +---------------------+\n    |\
    \        Answer       | RRs answering the question\n    +---------------------+\n\
    \    |      Authority      | RRs pointing toward an authority\n    +---------------------+\n\
    \    |      Additional     | RRs holding additional information\n    +---------------------+\n"
- title: 4.1. Question section
  contents:
  - "4.1. Question section\n   The question section contains QDCOUNT (usually 1) entries,\
    \ as\n   specified in Header section, with each of the entries in the\n   following\
    \ format:\n                                    1  1  1  1  1  1\n      0  1  2\
    \  3  4  5  6  7  8  9  0  1  2  3  4  5\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                                               |\n    /                \
    \     QNAME                     /\n    /                                     \
    \          /\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n    |   \
    \                  QTYPE                     |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                     QCLASS                    |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n"
- title: 4.1.1. PTR type Queries
  contents:
  - "4.1.1. PTR type Queries\n   DNS_ALG must identify all names, whose FQDNs (i.e.,\
    \ Fully Qualified\n   Domain Names) fall within IN-ADDR.ARPA domain and replace\
    \ the address\n   octets (in reverse  order)  preceding the string \"IN-ADDR.ARPA\"\
    \  with\n   the corresponding assigned address octets in reverse order, only if\n\
    \   the address binding is active on the NAT router. If the address\n   preceding\
    \ the string \"IN-ADDR.ARPA\" falls within the NAT address map,\n   but does not\
    \ have at least a temporary address binding, DNS_ALG would\n   simply simply respond\
    \ back (as a DNS name server would) with a\n   response code (RCODE) of 5 (REFUSED\
    \ to respond due to policy reasons)\n   and set ANCOUNT, NSCOUNT and ARCOUT to\
    \ 0 in the header section of the\n   response.\n   Note that the above form of\
    \ host address to host name type queries\n   will likely yield different results\
    \ at different times, depending\n   upon address bind status in NAT at a given\
    \ time.\n   For example, a resolver that wanted to find out the hostname\n   corresponding\
    \ to address 198.76.29.1 (externally)  would pursue a\n   query of the form:\n\
    \        QTYPE = PTR, QCLASS = IN, QNAME = 1.29.76.198.IN-ADDR.ARPA.\n   DNS_ALG\
    \ would intervene and if the address 198.76.29.1 is internally\n   mapped to a\
    \ private address of 10.0.0.1, modify the query as below\n   and forward to DMZ\
    \ name server within private network.\n        QTYPE = PTR, QCLASS = IN, QNAME\
    \ = 1.0.0.10.IN-ADDR.ARPA\n   Presumably, the DMZ name server is the authoritative\
    \ name server for\n   10.IN-ADDR.ARPA zone and will respond with an RR of the\
    \ following\n   form in answer section. DNS_ALG translations of the response RRs\
    \ will\n   be considered in a following section.\n        1.0.0.10.IN-ADDR.ARPA\
    \  PTR  host1.fooboo_org.provider_domain\n   An example of Inverse translation\
    \ is e-mail programs using inverse\n   translation to trace e-mail originating\
    \ hosts for spam prevention.\n   Verify if the address from which the e-mail was\
    \ sent does indeed\n   belong to the same domain name the sender claims in sender\
    \ ID.\n   Query modifications of this nature will likely change the length of\n\
    \   DNS payload. As a result, the corresponding IP and TCP/UDP header\n   checksums\
    \ must be updated. In case of TCP based queries, the sequence\n   number deltas\
    \ must be tracked by NAT so that the delta can be applied\n   to subsequent sequence\
    \ numbers in datagrams in the same direction and\n   acknowledgement numbers in\
    \ datagrams in the opposite direction. In\n   case of UDP based queries, message\
    \ sizes are restricted to 512 bytes\n   (not counting the IP or UDP headers).\
    \ Longer messages must be\n   truncated and the TC bit should be set in the header.\n\
    \   Lastly, any compressed domain names using pointers to represent\n   common\
    \ domain denominations must be updated to reflect new pointers\n   with the right\
    \ offset, if the original domain name had to be\n   translated by NAT.\n"
- title: 4.1.2. A, MX, NS and SOA type Queries
  contents:
  - "4.1.2. A, MX, NS and SOA type Queries\n   For these queries, DNS_ALG would not\
    \ modify any of the fields in the\n   query section, not even the name field.\n"
- title: 4.1.3. AXFR type Queries
  contents:
  - "4.1.3. AXFR type Queries\n   AXFR is a special zone transfer type query. Zone\
    \ transfers from\n   private address realm must be avoided for address assignments\
    \ that\n   are not static. Typically, TCP is used for AXFR requests.\n   When\
    \ changes are made to a zone, they must be distributed to all name\n   servers.\
    \  The general model of automatic zone transfer or refreshing\n   is that one\
    \ of the name servers is the master or primary for the\n   zone.  Changes are\
    \ coordinated at the primary, typically by editing a\n   master file for the zone.\
    \  After editing, the administrator signals\n   the master server to load the\
    \ new zone.  The other non-master or\n   secondary servers for the zone periodically\
    \ check the SERIAL field of\n   the SOA for the zone for changes (at some polling\
    \ intervals) and\n   obtain new zone copies when changes have been made.\n   Zone\
    \ transfer is usually from primary to backup name servers. In the\n   case of\
    \ NAT supported private networks, primary and backup servers\n   are advised to\
    \ be located in the same private domain (say,\n   private.zone) so zone transfer\
    \ is not across the domain and DNS_ALG\n   support for zone transfer is not an\
    \ issue. In the case a secondary\n   name server is located outside the private\
    \ domain, zone transfers\n   must not be permitted for non-static address assignments.\
    \ Primary and\n   secondary servers are required to be within the same private\
    \ domain\n   because all references to data in the zone had to be captured. With\n\
    \   dynamic address assignments and bindings, it is impossible to\n   translate\
    \ the axfr data to be up-to-date. Hence, if a secondary\n   server for private.zone\
    \ were to be located external to the domain, it\n   would contain bad data. Note,\
    \ however, the requirement outlined here\n   is not in confirmence with RFC 2182,\
    \ which recommends primary and\n   secondary servers to be placed at topologically\
    \ and geographically\n   dispersed locations on the Internet.\n   During zone\
    \ transfers, DNS_ALG must examine all A type records and\n   replace the original\
    \ address octets with their statically assigned\n   address octets. DNS_ALG could\
    \ also examine if there is an attempt to\n   transfer records for hosts that are\
    \ not assigned static addresses and\n   drop those records alone or drop the whole\
    \ transfer. This would\n   minimize misconfiguration and human errors.\n"
- title: 4.1.4. Dynamic Updates to the DNS.
  contents:
  - "4.1.4. Dynamic Updates to the DNS.\n   An authoritative name server can have\
    \ dynamic updates from the nodes\n   within the zone without intervention from\
    \ NAT and DNS-ALG, so long as\n   one avoids spreading a DNS zone across address\
    \ realms. We recommend\n   keeping a DNS zone within the same realm it is responsible\
    \ for. By\n   doing this, DNS update traffic will not cross address realms and\n\
    \   hence will not be subject to consideration by DNS-ALG.\n   Further, if dynamic\
    \ updates do cross address realms, and the updates\n   must always be secured\
    \ via DNSSEC, then such updates are clearly out\n   of scope for DNS-ALG (as described\
    \ in section 7).\n"
- title: 4.2. Resource records in all other sections
  contents:
  - "4.2. Resource records in all other sections\n   The answer, authority, and additional\
    \ sections all share the same\n   format, with a variable number of resource records.\
    \ The number of RRs\n   specific to each of the sections may be found in the corresponding\n\
    \   count fields in DNS header. Each resource record has the following\n   format:\n\
    \   The TTL value supplied in the original RRs will be left unchanged for\n  \
    \ static address assignments. For dynamic address assignments, DNS_ALG\n   will\
    \ modify the TTL to be 0, so the RRs are used just for the\n   transaction in\
    \ progress, and not cached.  RFC 2181 requires all RRs\n   in an RRset (RRs with\
    \ the same name, class and type, but with\n   different RDATA) to have the same\
    \ TTL. So if the TTL of an RR is set\n   to 0, all other RRs within the same RRset\
    \ will also be adjusted by\n   the DNS-ALG to be 0.\n      0  1  2  3  4  5  6\
    \  7  8  9  0  1  2  3  4  5\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                                               |\n    /                \
    \                               /\n    /                      NAME           \
    \          /\n    |                                               |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                      TYPE                     |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                     CLASS                     |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                      TTL                      |\n    |                \
    \                               |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\
    \    |                   RDLENGTH                    |\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--|\n\
    \    /                     RDATA                     /\n    /                \
    \                               /\n    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n"
- title: 4.2.1. PTR type RRs
  contents:
  - "4.2.1. PTR type RRs\n   The considerations specified in the Question section\
    \ is equally valid\n   with names for PTR type RRs. Private address preceding\
    \ the string\n   \"IN-ADDR.ARPA\" (in reverse order of octets) must be replaced\
    \ by its\n   external address assignment (in reverse order), if a binding exists.\n\
    \   The remaining fields for this RR remain unchanged.\n"
- title: 4.2.2. A type RRs
  contents:
  - "4.2.2. A type RRs\n   The RDATA for A records  is a 4-byte IP address. DNS_ALG\
    \ would simply\n   replace the original address in RDATA with its externally assigned\
    \ IP\n   address, if it succeeded in finding an address binding. Successful\n\
    \   address translation should cause no changes to payload length. Only\n   the\
    \ transport header checksum would need updating. In case of failure\n   to find\
    \ an address binding, DNS_ALG would have to drop the record and\n   decrement\
    \ the corresponding COUNT field in the header section.\n"
- title: 4.2.3. CNAME, MX, NS and SOA type RRs
  contents:
  - "4.2.3. CNAME, MX, NS and SOA type RRs\n   No changes required to be made by DNS_ALG\
    \ for these RRs, as the RDATA\n   does not contain any IP addresses. The host\
    \ names within the RDATA\n   remain unchanged between realms.\n"
- title: 5. Illustration of DNS_ALG in conjunction with Bi-directional NAT
  contents:
  - "5. Illustration of DNS_ALG in conjunction with Bi-directional NAT\n   The following\
    \ diagram illustrates the operation of DNS_ALG in a a\n   bi-directional NAT router.\
    \ We will illustrate by walking through how\n   name lookup and reverse name lookup\
    \ queries are processed.\n                                             .\n   \
    \                      ________________    .     External.com\n              \
    \          (                )   .\n                       (                  )\
    \  .   +-------------+\n            +--+      (      Internet      )-.---|Border\
    \ Router|\n            |__|------ (                  )  .   +-------------+\n\
    \           /____\\       (________________)   .          |\n            Root\
    \                 |           .          |\n         DNS Server              |\
    \           .     ---------------\n                         +---------------+\
    \   .       |         |\n                         |Provider Router|   .     +--+\
    \       +--+\n                         +---------------+   .     |__|       |__|\n\
    \                                 |           .    /____\\     /____\\\n     \
    \                            |           .  DNS Server   Host X\n       External\
    \ domain           |           .  171.68.1.1  171.68.10.1\n     ............................|...............................\n\
    \       Private domain            |\n                                 |      \
    \  Private.com\n                                 |\n                +--------------------------------------+\n\
    \                |Bi-Directional NAT router with DNS_ALG|\n                | \
    \                                     |\n                | Private addresses:\
    \  172.19/16        |\n                | External addresses: 131.108.1/24    \
    \ |\n                +--------------------------------------+\n              \
    \                |      |\n                      ----------    ----------\n  \
    \                      |                  |    DNS Server\n                  \
    \     +--+               +--+  Authoritative\n                       |__|    \
    \           |__|  for private.com\n                      /____\\             /____\\\
    \n                      Host A           DNS Server\n                   172.19.1.10\
    \        172.19.2.1\n                                      (Mapped to 131.108.1.8)\n\
    \    Figure 3: DNS-ALG operation in Bi-Directional NAT setup\n   The above diagram\
    \ depicts a scenario where a company private.com\n   using private address space\
    \ 172.19/16 connects to the Internet using\n   bi-directional NAT. DNS_ALG is\
    \ embedded in the NAT device to make\n   necessary DNS payload changes. NAT is\
    \ configured to translate the\n   private addresses space into an external address\
    \ block of\n   131.108.1/24. NAT is also configured with a static translation\
    \ for\n   private.com's DNS server, so it can be referred in the external\n  \
    \ domain by a valid address.\n   The company external.com is located in the external\
    \ domain, using a\n   registered address block of 171.68/16.  Also shown in the\
    \ topology is\n   a root DNS server.\n   Following simplifications are made to\
    \ the above configuration:\n      *  private.com is not multihomed and all traffic\
    \ to the external\n         space transits a single NAT.\n      *  The DNS server\
    \ for private.com is authoritative for the\n         private.com domain and points\
    \ to the root server for all other\n         DNS resolutions.  The same is true\
    \ for the DNS server in\n         external.com.\n      *  The internal name servers\
    \ for private.com and external.com are\n         same as their DMZ name servers.\
    \ The DNS servers for these\n         domains are configured with addresses private\
    \ to the\n         organization.\n      *  The name resolvers on host nodes do\
    \ not have recursion\n         available on them and desire recursive service\
    \ from servers.\n         All name servers are assumed to be able to provide recursive\n\
    \         service.\n"
- title: 5.1. Outgoing Name-lookup queries
  contents:
  - "5.1. Outgoing Name-lookup queries\n   Say, Host A in private.com needs to perform\
    \ a name lookup for host X\n   in external.com to initiate a session with X. \
    \ This would proceed as\n   follows.\n   1. Host A sends a UDP based name lookup\
    \ query (A record) for\n      \"X.External.Com\" to its local DNS server.\n  \
    \ 2. Local DNS server sends the query to the root server enroute NAT.\n      NAT\
    \ would change the IP and UDP headers to reflect DNS server's\n      statically\
    \ assigned external address.  DNS_ALG will make no\n      changes to the payload.\n\
    \   3. The root server, in turn, refers the local DNS server to query the\n  \
    \    DNS server for External.com. This referal transits the NAT enroute\n    \
    \  to the local DNS server.  NAT would  simply translate the IP and\n      UDP\
    \ headers of the incoming packet to reflect DNS server's private\n      address.\
    \ No changes to the payload by DNS_ALG.\n   4. Private.com DNS server will now\
    \ send the query to the DNS server\n      for external.com, once again, enroute\
    \ NAT. Just as with the query\n      to root, The NAT router would change the\
    \ IP and UDP headers to\n      reflect the DNS server's statically assigned external\
    \ address.\n      And, DNS_ALG will make no changes to the payload.\n   5. The\
    \ DNS server for external.com replies with the IP address\n      171.68.10.1.\
    \  This reply also transits the NAT. NAT would\n      translate the IP and UDP\
    \ headers of the incoming packet to reflect\n      DNS server's private address.\
    \ Once again, no changes to the\n      payload by DNS_ALG.\n   6. The DNS server\
    \ in Private.com replies to host A.\n   When Host A finds the address of Host\
    \ X, A initiates a session with\n   host X, using a destination IP address of\
    \ 171.68.10.1. This datagram\n   and any others that follow in this session will\
    \ be translated as\n   usual by NAT.\n   Note, DNS_ALG does not change the payload\
    \ for DNS packets in either\n   direction.\n"
- title: 5.2. Reverse name lookups originated from private domain
  contents:
  - "5.2. Reverse name lookups originated from private domain\n   This scenario builds\
    \ on the previous case by having host A in\n   Private.com perform a reverse name\
    \ lookup on 171.68.10.1, which is\n   host X's global address. Following is a\
    \ sequence of events.\n   1. Host A sends a UDP based inverse name lookup query\
    \ (PTR record)\n      for \"1.10.68.171.IN-ADDR.ARPA.\" to its local DNS server.\n\
    \   2. Local DNS server sends the query to the root server enroute NAT.\n    \
    \  As before, NAT would change the IP and UDP headers to reflect DNS\n      server's\
    \ statically assigned external address.  DNS_ALG will make\n      no changes to\
    \ the payload.\n   3. The root server, in turn, refers the local DNS server to\
    \ query the\n      DNS server for External.com. This referal transits the NAT\
    \ enroute\n      to the local DNS server.  NAT would  simply translate the IP\
    \ and\n      UDP headers of the incoming packet to reflect DNS server's private\n\
    \      address. No changes to the payload by DNS_ALG.\n   4. Private.com DNS server\
    \ will now send the query to the DNS server\n      for external.com, once again,\
    \ enroute NAT. Just as with the query\n      to root, The NAT router would change\
    \ the IP and UDP headers to\n      reflect the DNS server's statically assigned\
    \ external address.\n      And, DNS_ALG will make no changes to the payload.\n\
    \   5. The DNS server for external.com replies with the host name of\n      \"\
    X.External.Com.\". This reply also transits the NAT. NAT would\n      translate\
    \ the IP and UDP headers of the incoming packet to reflect\n      DNS server's\
    \ private address. Once again, no changes to the\n      payload by DNS_ALG.\n\
    \   6. The DNS server in Private.com replies to host A.\n   Note, DNS_ALG does\
    \ not change the payload in either direction.\n"
- title: 5.3. Incoming Name-lookup queries
  contents:
  - "5.3. Incoming Name-lookup queries\n   This time, host X in external.com wishes\
    \ to initiate a session with\n   host A in Private.com. Below are the sequence\
    \ of events that take\n   place.\n   1. Host X sends a UDP based name lookup query\
    \  (A record) for\n      \"A.Private.com\" to its local DNS server.\n   2. Local\
    \ DNS server in External.com sends the query to root server.\n   3. The root server,\
    \ in turn, refers the DNS server in External.com to\n      query the DNS server\
    \ for private.com,\n   4. External.com DNS server will now send the query to the\
    \ DNS server\n      for Private.com. This query traverses the NAT router. NAT\
    \ would\n      change the IP and UDP headers of the packet to reflect the DNS\n\
    \      server's private address. DNS_ALG will make no changes to the\n      payload.\n\
    \   5. The DNS server for Private.com replies with the IP address\n      172.19.1.10\
    \ for host A.  This reply also transits the NAT. NAT\n      would translate the\
    \ IP and UDP headers of the outgoing packet from\n      the DNS server.\n    \
    \  DNS_ALG will request NAT to (a) setup a temporary binding for Host\n      A\
    \ (172.19.1.10) with an external address and (b) initiate Bind-\n      holdout\
    \ timer. When NAT successfully sets up a temporary binding\n      with an external\
    \ address (say, 131.108.1.12), DNS_ALG would modify\n      the payload to replace\
    \ A's private address with its external\n      assigned address and set the Cache\
    \ timeout to 0.\n   6. The server in External.com replies to host X\n   When Host\
    \ X finds the address of Host A, X initiates a session with\n   A, using a destination\
    \ IP address of 131.108.1.12. This datagram and\n   any others that follow in\
    \ this session will be translated as usual by\n   the NAT.\n   Note, DNS_ALG changes\
    \ only the response packets from the DNS server\n   for Private domain.\n"
- title: 5.4. Reverse name lookups originated from external domain
  contents:
  - "5.4. Reverse name lookups originated from external domain\n   This scenario builds\
    \ on the previous case (section 5.3) by having\n   host X in External.com perform\
    \ a reverse name lookup on 131.108.1.12,\n   which is host A's assigned external\
    \ address. The following sequence\n   of events take place.\n   1. Host X sends\
    \ a UDP based inverse name lookup query (PTR record)\n      for \"12.1.108.131.IN-ADDR.ARPA.\"\
    \ to its local DNS server.\n   2. Local DNS server in External.com sends the query\
    \ to the root\n      server.\n   3. The root server, in turn, refers the local\
    \ DNS server to query the\n      DNS server for Private.com.\n   4. External.com\
    \ DNS server will now send the query to the DNS server\n      for Private.com.\
    \ This query traverses the NAT router. NAT would\n      change the IP and UDP\
    \ headers to reflect the DNS server's private\n      address.\n      DNS_ALG will\
    \ enquire NAT for the private address associated with\n      the external address\
    \ of 131.108.1.12 and modify the payload,\n      replacing 131.108.1.12 with the\
    \ private address of 172.19.1.10.\n   5. The DNS server for Private.com replies\
    \ with the host name of\n      \"A.Private.Com.\". This reply also transits the\
    \ NAT. NAT would\n      translate the IP and UDP headers of the incoming packet\
    \ to reflect\n      DNS server's private address.\n      Once again, DNS_ALG will\
    \ enquire NAT for the assigned external\n      address associated with the private\
    \ address of 172.19.1.10 and\n      modify the payload, replacing 172.19.1.10\
    \ with the assigned\n      external address of 131.108.1.12.\n   6. The DNS server\
    \ in External.com replies to host X.\n   Note, DNS_ALG changes the query as well\
    \ as response packets from DNS\n   server for Private domain.\n"
- title: 6. Illustration of DNS_ALG in conjunction with Twice-NAT
  contents:
  - "6. Illustration of DNS_ALG in conjunction with Twice-NAT\n   The following diagram\
    \ illustrates the operation of DNS_ALG in a Twice\n   NAT router. As before, we\
    \ will illustrate by walking through how name\n   lookup and reverse name lookup\
    \ queries are processed.\n                                             .\n   \
    \                      ________________    .     External.com\n              \
    \          (                )   .\n                       (                  )\
    \  .   +-------------+\n            +--+      (      Internet      )-.---|Border\
    \ Router|\n            |__|------ (                  )  .   +-------------+\n\
    \           /____\\       (________________)   .          |\n            Root\
    \                 |           .          |\n         DNS Server              |\
    \           .     ---------------\n                         +---------------+\
    \   .       |         |\n                         |Provider Router|   .     +--+\
    \       +--+\n                         +---------------+   .     |__|       |__|\n\
    \                                 |           .    /____\\     /____\\\n     \
    \                            |           .  DNS Server   Host X\n       External\
    \ domain           |           .  171.68.1.1  171.68.10.1\n     ............................|...............................\n\
    \       Private domain            |\n                                 |      \
    \  Private.com\n                                 |\n                +-------------------------------------------+\n\
    \                | Twice-NAT router with DNS_ALG             |\n             \
    \   |                                           |\n                | Private addresses:\
    \  171.68/16             |\n                | Assigned External addresses: 131.108.1/24\
    \ |\n                |                                           |\n         \
    \       | External addresses:  171.68/16            |\n                | Assigned\
    \ Private addresses: 10/8          |\n                +-------------------------------------------+\n\
    \                              |      |\n                      ----------    ----------\n\
    \                        |                  |    DNS Server\n                \
    \       +--+               +--+  Authoritative\n                       |__|  \
    \             |__|  for private.com\n                      /____\\           \
    \  /____\\\n                      Host A           DNS Server\n              \
    \     171.68.1.10        171.68.2.1\n                                      (Mapped\
    \ to 131.108.1.8)\n    Figure 4: DNS-ALG operation in Twice-NAT setup\n   In this\
    \ scenario, hosts in private.com were not numbered from the RFC\n   1918 reserved\
    \ 172.19/16 space, but rather were numbered with the\n   globally-routable 171.68/16\
    \ network, the same as external.com.  Not\n   only does private.com need translation\
    \ service for its own host\n   addresses, but it also needs translation service\
    \ if any of those\n   hosts are to be able to exchange datagrams with hosts in\n\
    \   external.com. Twice-NAT accommodates the transition by translating\n   the\
    \ overlapping address space used in external.com with a unique\n   address block\
    \ (10/8) from RFC 1918 address space. Routes are set up\n   within the private\
    \ domain to direct datagrams destined for the\n   address block 10/8 through Twice-NAT\
    \ device to the external global\n   network space.\n   Simplifications and assumptions\
    \ made in section 5.0 will be valid\n   here as well.\n"
- title: 6.1. Outgoing Name-lookup queries
  contents:
  - "6.1. Outgoing Name-lookup queries\n   Say, Host A in private.com needs to perform\
    \ a name lookup for host X\n   in external.com (host X has a FQDN of X.external.com),\
    \ to find its\n   address.  This would would proceed as follows.\n   1. Host A\
    \ sends a UDP based name lookup query (A record) for\n      \"X.External.Com\"\
    \ to its local DNS server.\n   2. Local DNS server sends the query to the root\
    \ server enroute NAT.\n      NAT would change the IP and UDP headers to reflect\
    \ DNS server's\n      statically assigned external address.  DNS_ALG will make\
    \ no\n      changes to the payload.\n   3. The root server, in turn, refers the\
    \ local DNS server to query the\n      DNS server for External.com. This referal\
    \ transits the NAT enroute\n      to the local DNS server.  NAT would  simply\
    \ translate the IP and\n      UDP headers of the incoming packet to reflect DNS\
    \ server's private\n      address.\n      DNS_ALG will request NAT for an assigned\
    \ private address for the\n      referral server and replace the external address\
    \ with its assigned\n      private address in the payload.\n   4. Private.com\
    \ DNS server will now send the query to the DNS server\n      for external.com,\
    \ using its assigned private address, via NAT.\n      This time, NAT would change\
    \ the IP and UDP headers to reflect the\n      External addresses of the DNS servers.\
    \ I.e., Private.com DNS\n      server's IP address is changed to its assigned\
    \ external address\n      and External.Com DNS server's assigned Private address\
    \ is changed\n      to its external address.\n      DNS_ALG will make no changes\
    \ to the payload.\n   5. The DNS server for external.com replies with the IP address\n\
    \      171.68.10.1.  This reply also transits the NAT. NAT would once\n      again\
    \ translate the IP and UDP headers of the incoming to reflect\n      the private\
    \ addresses of the DNS servers.  I.e., Private.com DNS\n      server's IP address\
    \ is changed to its private address and\n      External.Com DNS server's external\
    \ address is changed to its\n      assigned Private address.\n      DNS_ALG will\
    \ request NAT to (a) set up a temporary binding for\n      Host X (171.68.10.1)\
    \ with a private address and (b) initiate\n      Bind-holdout timer. When NAT\
    \ successfully sets up temporary\n      binding with a private address (say, 10.0.0.254),\
    \ DNS_ALG would\n      modify the payload to replace X's external address with\
    \ its\n      assigned private address and set the Cache timeout to 0.\n   6. The\
    \ DNS server in Private.com replies to host A.\n   When Host A finds the address\
    \ of Host X, A initiates a session with\n   host X, using a destination IP address\
    \ of 10.0.0.254. This datagram\n   and any others that follow in this session\
    \ will be translated as\n   usual by Twice NAT.\n   Note, the DNS_ALG has had\
    \ to change payload in both directions.\n"
- title: 6.2. Reverse name lookups originated from private domain
  contents:
  - "6.2. Reverse name lookups originated from private domain\n   This scenario builds\
    \ on the previous case by having host A in\n   Private.com perform a reverse name\
    \ lookup on 10.0.0.254, which is\n   host X's assigned private address. Following\
    \ is a sequence of events.\n   1. Host A sends a UDP based inverse name lookup\
    \ query (PTR record)\n      for \"254.0.0.10.IN-ADDR.ARPA.\" to its local DNS\
    \ server.\n   2. Local DNS server sends the query to the root server enroute NAT.\n\
    \      As before, NAT would change the IP and UDP headers to reflect DNS\n   \
    \   server's statically assigned external address.\n      DNS_ALG will translate\
    \ the private assigned address 10.0.0.254\n      with its external address 171.68.10.1.\n\
    \   3. The root server, in turn, refers the local DNS server to query the\n  \
    \    DNS server for External.com. This referal transits the NAT enroute\n    \
    \  to the local DNS server.  NAT would  simply translate the IP and\n      UDP\
    \ headers of the incoming packet to reflect DNS server's private\n      address.\n\
    \      As with the original query, DNS_ALG will translate the private\n      assigned\
    \ address 10.0.0.254 with its external address 171.68.10.1.\n      In addition,\
    \ DNS_ALG will replace the external address of the\n      referal server (i.e.,\
    \ the DNS server for External.com) with its\n      assigned private address in\
    \ the payload.\n   4. Private.com DNS server will now send the query to the DNS\
    \ server\n      for external.com, using its statically assigned private address,\n\
    \      via NAT. This time, NAT would change the IP and UDP headers to\n      reflect\
    \ the External addresses of the DNS servers. I.e.,\n      Private.com DNS server's\
    \ IP address is changed to its assigned\n      external address and External.Com\
    \ DNS server's assigned Private\n      address is changed to its external address.\n\
    \      As with the original query, DNS_ALG will translate the private\n      assigned\
    \ address 10.0.0.254 with its external address 171.68.10.1.\n   5. The DNS server\
    \ for external.com replies with the FQDN of\n      \"X.External.Com.\".  This\
    \ reply also transits the NAT. NAT would\n      once again translate the IP and\
    \ UDP headers of the incoming to\n      reflect the private addresses of the DNS\
    \ servers.  I.e.,\n      Private.com DNS server's IP address is changed to its\
    \ private\n      address and External.Com DNS server's external address is changed\n\
    \      to its assigned Private address.\n      Once again, DNS_ALG will translate\
    \ the query section, replacing\n      the external address 171.68.10.1 with its\
    \ assigned private address\n      of 10.0.0.254\n   6. The DNS server in Private.com\
    \ replies to host A.\n   Note, the DNS_ALG has had to change payload in both directions.\n"
- title: 6.3. Incoming Name-lookup queries
  contents:
  - "6.3. Incoming Name-lookup queries\n   This time, host X in external.com wishes\
    \ to initiate a session with\n   host A in Private.com. Below are the sequence\
    \ of events that take\n   place.\n   1. Host X sends a UDP based name lookup query\
    \  (A record) for\n      \"A.Private.com\" to its local DNS server.\n   2. Local\
    \ DNS server in External.com sends the query to root server.\n   3. The root server,\
    \ in turn, refers the DNS server in External.com to\n      query the DNS server\
    \ for private.com,\n   4. External.com DNS server will now send the query to the\
    \ DNS server\n      for Private.com. This query traverses the NAT router. NAT\
    \ would\n      change the IP and UDP headers to reflect the private addresses\
    \ of\n      the DNS servers. I.e., Private.com DNS server's IP address is\n  \
    \    changed to its  private address and External.Com DNS server's\n      external\
    \ address is changed to assigned Private address.\n      DNS_ALG will make no\
    \ changes to the payload.\n   5. The DNS server for Private.com replies with the\
    \ IP address\n      171.68.1.10 for host A.  This reply also transits the NAT.\
    \ NAT\n      would once again translate the IP and UDP headers of the incoming\n\
    \      to reflect the external addresses of the DNS servers.  I.e.,\n      Private.com\
    \ DNS server's IP address is changed to its assigned\n      external address and\
    \ External.Com DNS server's assigned private\n      address is changed to its\
    \ external address.\n      DNS_ALG will request NAT to (a) set up temporary binding\
    \ for Host\n      A (171.68.1.10) with an external address and (b) initiate Bind-\n\
    \      holdout timer. When NAT succeeds in finding an external address\n     \
    \ (say, 131.108.1.12) to temporarily bind to host A, DNS_ALG would\n      modify\
    \ the payload to replace A's private address with its\n      external assigned\
    \ address and set the Cache timeout to 0.\n   6. The server in External.com replies\
    \ to host X\n   When Host X finds the address of Host A, X initiates a session\
    \ with\n   A, using a destination IP address of 131.108.1.12. This datagram and\n\
    \   any others that follow in this session will be translated as usual by\n  \
    \ the NAT.\n   Note, DNS_ALG changes only the response packets from the DNS server\n\
    \   for Private domain.\n"
- title: 6.4. Reverse name lookups originated from external domain
  contents:
  - "6.4. Reverse name lookups originated from external domain\n   This scenario builds\
    \ on the previous case (section 6.3) by having\n   host X in External.com perform\
    \ a reverse name lookup on 131.108.1.12,\n   which is host A's assigned external\
    \ address. The following sequence\n   of events take place.\n   1. Host X sends\
    \ a UDP based inverse name lookup query (PTR record)\n      for \"12.1.108.131.IN-ADDR.ARPA.\"\
    \ to its local DNS server.\n   2. Local DNS server in External.com sends the query\
    \ to the root\n      server.\n   3. The root server, in turn, refers the local\
    \ DNS server to query the\n      DNS server for Private.com.\n   4. External.com\
    \ DNS server will now send the query to the DNS server\n      for Private.com.\
    \ This query traverses the NAT router. NAT would\n      change the IP and UDP\
    \ headers to reflect the private addresses of\n      the DNS servers. I.e., Private.com\
    \ DNS server's IP address is\n      changed to its  private address and External.Com\
    \ DNS server's\n      external address is changed to assigned Private address.\n\
    \      DNS_ALG will enquire NAT for the private address associated with\n    \
    \  the external address of 131.108.1.12 and modify the payload,\n      replacing\
    \ 131.108.1.12 with the private address of 171.68.1.10.\n   5. The DNS server\
    \ for Private.com replies with the host name of\n      \"A.Private.Com.\". This\
    \ reply also transits the NAT. NAT would once\n      again translate the IP and\
    \ UDP headers of the incoming to reflect\n      the external addresses of the\
    \ DNS servers.  I.e., Private.com DNS\n      server's IP address is changed to\
    \ its assigned external address\n      and External.Com DNS server's assigned\
    \ private address is changed\n      to its external address.\n      Once again,\
    \ DNS_ALG will enquire NAT for the assigned external\n      address associated\
    \ with the private address of 172.19.1.10 and\n      modify the payload, replacing\
    \ 171.68.1.10 with the assigned\n      external address of 131.108.1.12.\n   6.\
    \ The DNS server in External.com replies to host X.\n   Note, DNS_ALG changes\
    \ the query as well as response packets from DNS\n   server for Private domain.\n"
- title: 7. DNS-ALG limitations and Future Work
  contents:
  - "7. DNS-ALG limitations and Future Work\n   NAT increases the probability of mis-addressing.\
    \ For example, same\n   local address may be bound to different public address\
    \ at different\n   times and vice versa. As a result, hosts that cache the name\
    \ to\n   address mapping for longer periods than the NAT router is configured\n\
    \   to hold the map are likely to misaddress their sessions. Note, this\n   is\
    \ mainly an issue with bad host implementations that hold DNS\n   records longer\
    \ than the TTL in them allows and is not directly\n   attributable to the mechanism\
    \ described here.\n   DNS_ALG cannot support secure DNS name servers in the private\
    \ domain.\n   I.e., Signed replies from an authoritative DNS name server in the\
    \ DMZ\n   to queries originating from the external world will be broken by the\n\
    \   DNS-ALG. At best, DNS-ALG would be able to transform secure dnssec\n   data\
    \ into unprotected data. End-node demanding DNS replies to be\n   signed may reject\
    \ replies that have been tampered with by DNS_ALG.\n   Since, the DNS server does\
    \ not have a way to find where the queries\n   come from (i.e., internal or external),\
    \ it will most likely have to\n   resort to the common denomination of today's\
    \ insecure DNS. Both are\n   serious limitations to DNS_ALG. Zone transfers between\
    \ DNS-SEC\n   servers  is also impacted the same way, if the transfer crosses\n\
    \   address realms.\n   The good news, however, is that only end-nodes in DMZ\
    \ pay the price\n   for the above limitation in a traditional NAT (or, a bi-directional\n\
    \   NAT), as external end-nodes may not access internal hosts due to DNS\n   replies\
    \ not being secure. However, for outgoing sessions (from\n   private network)\
    \ in a bi-directional NAT setup, the DNS queries can\n   be signed and securely\
    \ accepted by DMZ and other internal hosts since\n   DNS_ALG does not intercept\
    \ outgoing DNS queries and incoming replies.\n   Lastly, zone transfers between\
    \ DNS-SEC servers  within the same\n   private network are not impacted.\n   Clearly,\
    \ with DNS SEC deployment in DNS servers and end-host\n   resolvers, the scheme\
    \ suggested in this document will not work.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   If DNS packets are encrypted/authenticated per\
    \ DNSSEC, then DNS_ALG\n   will fail because it won't be able to perform payload\
    \ modifications.\n   Alternately, if packets must be preserved in an address realm,\n\
    \   DNS_ALG will need to hold the secret key to decrypt/verify payload\n   before\
    \ forwarding packets to a different realm. For example, if DNS-\n   ALG, NAT and\
    \ IPsec gateway (providing secure tunneling service) are\n   resident on the same\
    \ device, DNS-ALG will have access to the IPsec\n   security association keys.\
    \  The preceding section, \"DNS-ALG\n   limitations and Future Work\" has coverage\
    \ on DNS_ALG security\n   considerations.\n   Further, with DNS-ALG, there is\
    \ a possibility of denial of service\n   attack from a malicious user, as outlined\
    \ in section 3.1.  Section\n   3.1 suggests some ways to counter this attack.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n    [1] Srisuresh, P. and M. Holdrege, \"IP Network Address Translator\n\
    \        (NAT) Terminology and Considerations\", RFC 2663, August 1999.\n    [2]\
    \ Egevang, K. and  P. Francis, \"The IP Network Address Translator\n        (NAT)\"\
    , RFC 1631, May 1994.\n    [3] Rekhter, Y., Moskowitz, B., Karrenberg, D., de\
    \ Groot, G. and E.\n        Lear, \"Address Allocation for Private Internets\"\
    , BCP 5, RFC\n        1918, February 1996.\n    [4] Mockapetris, P., \"Domain\
    \ Names - Concepts and Facilities\", STD\n        13, RFC 1034, November 1987.\n\
    \    [5] Mockapetris, P., \"Domain Names - Implementation and\n        Specification\"\
    , STD 13, RFC 1035, November 1987.\n    [6] Reynolds J. and J. Postel, \"Assigned\
    \ Numbers\", STD 2, RFC 1700,\n        October 1994.\n    [7] Braden, R., \"Requirements\
    \ for Internet Hosts -- Communication\n        Layers\", STD 3, RFC 1122, October\
    \ 1989.\n    [8] Braden, R., \"Requirements for Internet Hosts -- Application\
    \ and\n        Support\", STD 3, RFC 1123, October 1989.\n    [9] Baker, F., \"\
    Requirements for IP Version 4 Routers\",  RFC 1812,\n        June 1995.\n   [10]\
    \ Carpenter, B., Crowcroft, J. and Y. Rekhter, \"IPv4 Address\n        Behaviour\
    \ Today\", RFC 2101, February 1997.\n   [11] Eastlake, D., \"Domain Name System\
    \ Security Extensions\", RFC\n        2535, March 1999.\n   [12] Vixie, P., Thompson,\
    \ S., Rekhter Y. and J. Bound, \"Dynamic\n        Updates in the Domain Name System\
    \ (DNS UPDATE)\", RFC 2136, April\n        1997.\n   [13] Eastlake, D., \"Secure\
    \ Domain Name System Dynamic Update\", RFC\n        2137, April 1997.\n   [14]\
    \ Elz R. and R. Bush, \"Clarifications to the DNS specification\",\n        RFC\
    \ 2181, July 1997.\n   [15] Elz, R., R. Bush, Bradner S. and M. Patton, \"Selection\
    \ and\n        Operation of Secondary DNS Servers\", RFC 2182, July 1997.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pyda Srisuresh\n   849 Erie Circle\n   Milpitas, CA 95035\n\
    \   U.S.A.\n   Phone: +1 (408) 263-7527\n   EMail: srisuresh@yahoo.com\n   George\
    \ Tsirtsis\n   Internet Transport Group\n   B29 Room 129\n   BT Laboratories\n\
    \   Martlesham Heath\n   IPSWICH\n   Suffolk IP5 3RE\n   England\n   Phone: +44\
    \ 1473 640756\n   Fax:   +44 1473 640709\n   EMail: george@gideon.bt.co.uk\n \
    \  Praveen Akkiraju\n   cisco Systems\n   170 West Tasman Drive\n   San Jose,\
    \ CA  95134  USA\n   Phone: +1 (408) 526-5066\n   EMail: spa@cisco.com\n   Andy\
    \ Heffernan\n   Juniper Networks, Inc.\n   385 Ravensdale Drive.\n   Mountain\
    \ View, CA  94043  USA\n   Phone: +1 (650) 526-8037\n   Fax:   +1 (650) 526-8001\n\
    \   EMail: ahh@juniper.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
