- title: __initial_text__
  contents:
  - '                     Message Posting Protocol (MPP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo describes a protocol for posting messages from\
    \ workstations\n   (e.g., PCs) to a mail service host.  This RFC specifies an\n\
    \   Experimental Protocol for the Internet community.  Discussion and\n   suggestions\
    \ for improvement are requested.  Please refer to the\n   current edition of the\
    \ \"IAB Official Protocol Standards\" for the\n   standardization state and status\
    \ of this protocol.  Distribution of\n   this memo is unlimited.\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   Operating systems for personal computers do not provide a\
    \ mechanism\n   for user authentication.  However, such a mechanism is crucial\
    \ for\n   electronic mail system since authenticating message sender's identity\n\
    \   is important in preventing mail forgery.  Hence, adding personal\n   computers\
    \ to an electronic mail network requires an agent (message\n   posting server)\
    \ to authenticate sender's identity and then submit\n   mail to the message delivery\
    \ system (e.g., Sendmail, MMDF) on behalf\n   of the sender at a PC.  The Netix\
    \ Message Posting Protocol is\n   developed to be the interface between the message\
    \ posting server and\n   the PC (client).  The protocol is designed to use TCP\
    \ and is based on\n   the command and reply structures defined for Simple Mail\
    \ Transfer\n   Protocol (RFC 821) and File Transfer Protocol (RFC 959).\n"
- title: 2. SPECIFICATIONS
  contents:
  - '2. SPECIFICATIONS

    '
- title: 2.1.  Command List
  contents:
  - "2.1.  Command List\n      USER <SP> <username> <CRLF>\n      PASS <SP> <password>\
    \ <CRLF>\n      DATA <CRLF>\n      NOOP <CRLF>\n      QUIT <CRLF>\n"
- title: 2.2.  Reply List
  contents:
  - "2.2.  Reply List\n      220 Message Posting Service Ready.\n      221 Closing\
    \ Connection.\n      250 Command OK.\n      354 Enter mail, end with <CRLF>.<CRLF>\n\
    \      451 Local error encountered.\n      500 Command unrecognized.\n      501\
    \ Argument syntax error.\n      503 Illegal command sequence.\n      530 Authentication\
    \ Failure.\n      550 Error.\n"
- title: 2.3.  Command and Reply Descriptions
  contents:
  - "2.3.  Command and Reply Descriptions\n      USER <SP> <username> <CRLF>\n   \
    \      The USER command informs the message posting server about the\n       \
    \  username of the user trying to submit mail to the network.  The\n         required\
    \ argument for the USER command is a string specifying\n         the message sender's\
    \ username.\n         The USER command can only be used under three conditions:\n\
    \         - when the session with the message posting server has just\n      \
    \     started;\n         - right after a message text (terminated by the \"<CRLF>.<CRLF>\"\
    \n           sequence) has been successfully submitted to the message\n      \
    \     posting server;\n         - right after a USER command that gets the reply\
    \ code 501.\n         List of possible reply codes for the USER command:\n   \
    \      - 250   The username of the message sender has been accepted.\n       \
    \  - 451   Internal error has occurred in the message posting\n              \
    \   server.\n         - 501   Syntax error detected in the username argument.\n\
    \         - 503   The USER command has been used under an inappropriate\n    \
    \             condition (i.e., one that is not specified above).\n         It\
    \ is recommended that the message posting server should return\n         250 even\
    \ if the username is not recognized by the message\n         posting server, as\
    \ long as the username is syntactically\n         correct.  This is an attempt\
    \ to prevent the message posting\n         server from releasing too much information\
    \ about the user\n         database.  Client should not be able to test the existence\
    \ of a\n         certain username.\n      PASS <SP> <password> <CRLF>\n      \
    \   The PASS command is used to inform the message posting server\n         about\
    \ the password associated with the username previously\n         specified.  The\
    \ required argument for the PASS command is a\n         string specifying the\
    \ message sender's password.\n         The PASS command can only be used under\
    \ two conditions:\n         - right after a USER command that gets the reply code\
    \ 250;\n         - right after a PASS command that gets the reply code 501.\n\
    \         List of possible reply codes for the PASS command:\n         - 250 \
    \  The password has been accepted and verified to be\n                 correctly\
    \ associated with the username previously\n                 specified.\n     \
    \    - 451   Internal error has occurred in the message posting\n            \
    \     server.\n         - 501   Syntax error detected in the password argument.\n\
    \         - 503   The PASS command has been used under an inappropriate\n    \
    \             condition (i.e., one that is not specified above).\n         - 530\
    \   The password provided is not the one associated with the\n               \
    \  username previously specified.\n      DATA <CRLF>\n         The DATA command\
    \ is used to inform the message posting server\n         to get ready to accept\
    \ a mail message text.  No argument is\n         expected.  (This command has\
    \ the same meaning as the DATA\n         command defined in RFC 821.)\n      \
    \   The DATA command can only be used under two conditions:\n         - right\
    \ after a PASS command that gets the reply code 250;\n         - right after a\
    \ mail message text has been successfully\n           accepted from the client.\n\
    \         List of possible reply codes for the DATA command:\n         - 354 \
    \  The message posting server is ready to accept the mail\n                 message\
    \ text.\n         - 451   Internal error has occurred in the message posting\n\
    \                 server.\n         - 503   The DATA command has been used under\
    \ an inappropriate\n                 condition (i.e., one that is not specified\
    \ above).\n         Upon receiving the reply code 354 for the DATA command, the\n\
    \         client should submit the mail message text to message posting\n    \
    \     server and terminate the text by the sequence \"<CRLF>.<CRLF>\"\n      \
    \   as defined in RFC 821.  If the message text includes the\n         \"<CRLF>.<CRLF>\"\
    \ sequence, then the sequence is replaced by the\n         \"<CRLF>..<CRLF>\"\
    \ sequence as defined in RFC 821.  The extra \".\"\n         token will not be\
    \ included in the final copy of the submitted\n         message.\n         Upon\
    \ receiving the mail message text terminated by the\n         \"<CRLF>.<CRLF>\"\
    \ sequence, list of possible reply codes is:\n         - 250   The mail message\
    \ text has been successfully queued for\n                 delivery.\n        \
    \ - 451   Internal error has occurred in the message posting\n               \
    \  server and the mail message text has not been queued.\n      NOOP <CRLF>\n\
    \         The NOOP command does not cause any action to be performed by\n    \
    \     the message posting server.  Instead, it tests the status of\n         the\
    \ message posting server.  No argument is expected.\n         The NOOP command\
    \ cannot be used under one condition:\n         - right after a DATA command that\
    \ gets the reply code 354\n           (i.e., when the message posting server is\
    \ expecting the client\n           to submit the mail message text).\n       \
    \  List of possible reply codes for the NOOP command:\n         - 250   The message\
    \ posting server has not encountered any\n                 internal error.\n \
    \        - 451   Internal error has occurred in the message posting\n        \
    \         server during the current session.\n      QUIT <CRLF>\n         The\
    \ QUIT command is used to terminate the session with the\n         message posting\
    \ server.  No argument is expected.\n         The QUIT command can be used under\
    \ any condition.  The message\n         posting server should always return the\
    \ reply code 221 for the\n         QUIT command.\n"
- title: 3. IMPLEMENTATION OF THE MESSAGE POSTING SERVER
  contents:
  - "3. IMPLEMENTATION OF THE MESSAGE POSTING SERVER\n   There are several issues\
    \ to be considered when implementing the\n   message posting server:\n   - secured\
    \ environment\n   - port number assignment\n   - handling of idle client\n   -\
    \ local/remote password database\n   - message queuing\n   - handling of message\
    \ delivery failure\n"
- title: 3.1  Secured Environment
  contents:
  - "3.1  Secured Environment\n   The message posting server is responsible for authenticating\
    \ message\n   senders and submitting mail to the message delivery system.  Hence,\n\
    \   it should be running in a secured environment, such as running on a\n   system\
    \ (UNIX, VMS, MS-DOS) with well restricted physical and network\n   access.\n"
- title: 3.2  Port Number Assignment
  contents:
  - "3.2  Port Number Assignment\n   Port 218 is assigned for the Netix Message Posting\
    \ Protocol.\n"
- title: 3.3  Handling of Idle Client
  contents:
  - "3.3  Handling of Idle Client\n   The message posting server should terminate\
    \ a session if the client\n   has been idle for too long, to release the resource\
    \ allocated for the\n   session.\n"
- title: 3.4  Local/Remote Password Database
  contents:
  - "3.4  Local/Remote Password Database\n   To take advantage of existing password\
    \ databases, such as the passwd\n   file in UNIX, the message posting server can\
    \ use FTP and POP3 to\n   perform the username and password checking with the\
    \ appropriate\n   server.\n   For network that does not have any password database,\
    \ the message\n   posting server should let the system administrator specify a\
    \ local\n   password file on the host that the message posting server is running.\n"
- title: 3.5  Message Queuing
  contents:
  - "3.5  Message Queuing\n   The message posting server should attempt to submit\
    \ accepted messages\n   to the message delivery system as soon as possible.\n"
- title: 3.6  Handling of Message Delivery Failure
  contents:
  - "3.6  Handling of Message Delivery Failure\n   Failure in delivering messages\
    \ should be handled by the message\n   delivery system and the message posting\
    \ server should not interfere.\n"
- title: 4. REFERENCES
  contents:
  - "4. REFERENCES\n   [1] Postel, J., \"Simple Mail Transfer Protocol\", RFC 821,\n\
    \       USC/Information Sciences Institute, August 1982.\n   [2] Postel, J., and\
    \ J. Reynolds, \"File Transfer Protocol\", RFC 959,\n       USC/Information Sciences\
    \ Institute, October 1985.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in section 3.1.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Shannon Yeh\n   Netix Communications, Inc.\n   15375 Barranca\
    \ Parkway, Suite A-215\n   Irvine, CA 92718\n   Phone: (714) 727-9335\n   Email:\
    \ yeh@netix.com\n   David Lee\n   Netix Communications, Inc.\n   15375 Barranca\
    \ Parkway, Suite A-215\n   Irvine, CA 92718\n   Phone: (714) 727-9335\n   EMail:\
    \ dlee@netix.com\n"
