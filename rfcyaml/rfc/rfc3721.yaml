- title: __initial_text__
  contents:
  - "           Internet Small Computer Systems Interface (iSCSI)\n              \
    \            Naming and Discovery\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides examples of the Internet Small Computer\n\
    \   Systems Interface (iSCSI; or SCSI over TCP) name construction and\n   discussion\
    \ of discovery of iSCSI resources (targets) by iSCSI\n   initiators.  This document\
    \ complements the iSCSI protocol document.\n   Flexibility is the key guiding\
    \ principle behind this document.  That\n   is, an effort has been made to satisfy\
    \ the needs of both small\n   isolated environments, as well as large environments\
    \ requiring\n   secure/scalable solutions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. iSCSI Names and Addresses. . . . . . . . . . . . . .\
    \ . . . . .   3\n      1.1.  Constructing iSCSI names using the iqn. format .\
    \ . . . .   5\n      1.2.  Constructing iSCSI names using the eui. format . .\
    \ . . .   8\n   2. iSCSI Alias. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   8\n      2.1.  Purpose of an Alias. . . . . . . . . . . . . . . . . .\
    \ .   8\n      2.2.  Target Alias . . . . . . . . . . . . . . . . . . . . . .\
    \   9\n      2.3.  Initiator Alias. . . . . . . . . . . . . . . . . . . . .  10\n\
    \   3. iSCSI Discovery. . . . . . . . . . . . . . . . . . . . . . . .  12\n  \
    \ 4. Security Considerations. . . . . . . . . . . . . . . . . . . .  13\n   5.\
    \ References . . . . . . . . . . . . . . . . . . . . . . . . . .  13\n      5.1.\
    \  Normative References . . . . . . . . . . . . . . . . . .  13\n      5.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  14\n   6. Acknowledgements . .\
    \ . . . . . . . . . . . . . . . . . . . . .  14\n   Appendix A: iSCSI Naming Notes.\
    \ . . . . . . . . . . . . . . . . .  15\n   Appendix B: Interaction with Proxies\
    \ and Firewalls. . . . . . . .  16\n               B.1.  Port Redirector . . .\
    \ . . . . . . . . . . . . .  16\n               B.2.  SOCKS server. . . . . .\
    \ . . . . . . . . . . . .  17\n               B.3.  SCSI gateway. . . . . . .\
    \ . . . . . . . . . . .  17\n               B.4.  iSCSI Proxy . . . . . . . .\
    \ . . . . . . . . . .  18\n               B.5.  Stateful Inspection Firewall.\
    \ . . . . . . . . .  18\n   Appendix C: iSCSI Names and Security Identifiers.\
    \ . . . . . . . .  19\n   Authors' Addresses. . . . . . . . . . . . . . . . .\
    \ . . . . . . .  21\n   Full Copyright Statement. . . . . . . . . . . . . . .\
    \ . . . . . .  22\n"
- title: 1.  iSCSI Names and Addresses
  contents:
  - "1.  iSCSI Names and Addresses\n   The main addressable, discoverable entity in\
    \ iSCSI is an iSCSI Node.\n   An iSCSI node can be either an initiator, a target,\
    \ or both.  The\n   rules for constructing an iSCSI name are specified in [RFC3720].\n\
    \   This document provides examples of name construction that might be\n   used\
    \ by a naming authority.\n   Both targets and initiators require names for the\
    \ purpose of\n   identification, so that iSCSI storage resources can be managed\n\
    \   regardless of location (address).  An iSCSI name is the unique\n   identifier\
    \ for an iSCSI node, and is also the SCSI device name [SAM2]\n   of an iSCSI device.\
    \  The iSCSI name is the principal object used in\n   authentication of targets\
    \ to initiators and initiators to targets.\n   This name is also used to identify\
    \ and manage iSCSI storage\n   resources.\n   Furthermore, iSCSI names are associated\
    \ with iSCSI nodes instead of\n   with network adapter cards to ensure the free\
    \ movement of network\n   HBAs between hosts without loss of SCSI state information\n\
    \   (reservations, mode page settings etc) and authorization\n   configuration.\n\
    \   An iSCSI node also has one or more addresses.  An iSCSI address\n   specifies\
    \ a single path to an iSCSI node and consists of the iSCSI\n   name, plus a transport\
    \ (TCP) address which uses the following format:\n      <domain-name>[:<port>]\n\
    \   Where <domain-name> is one of:\n   -  IPv4 address, in dotted decimal notation.\
    \  Assumed if the name\n      contains exactly four numbers, separated by dots\
    \ (.), where each\n      number is in the range 0..255.\n   -  IPv6 address, in\
    \ colon-separated hexadecimal notation, as\n      specified in [RFC3513] and enclosed\
    \ in \"[\" and \"]\" characters, as\n      specified in [RFC2732].\n   -  Fully\
    \ Qualified Domain Name (host name).  Assumed if the <domain-\n      name> is\
    \ neither an IPv4 nor an IPv6 address.\n   For iSCSI targets, the <port> in the\
    \ address is optional; if\n   specified, it is the TCP port on which the target\
    \ is listening for\n   connections.  If the <port> is not specified, the default\
    \ port 3260,\n   assigned by IANA, will be assumed.  For iSCSI initiators, the\
    \ <port>\n   is omitted.\n   Examples of addresses:\n   192.0.2.2\n   192.0.2.23:5003\n\
    \   [FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]\n   [1080:0:0:0:8:800:200C:417A]\n\
    \   [3ffe:2a00:100:7031::1]\n   [1080::8:800:200C:417A]\n   [1080::8:800:200C:417A]:3260\n\
    \   [::192.0.2.5]\n   mydisks.example.com\n   moredisks.example.com:5003\n   The\
    \ concepts of names and addresses have been carefully separated in\n   iSCSI:\n\
    \   -  An iSCSI Name is a location-independent, permanent identifier for\n   \
    \   an iSCSI node.  An iSCSI node has one iSCSI name, which stays\n      constant\
    \ for the life of the node.  The terms \"initiator name\" and\n      \"target\
    \ name\" also refer to an iSCSI name.\n   -  An iSCSI Address specifies not only\
    \ the iSCSI name of an iSCSI\n      node, but also a location of that node.  The\
    \ address consists of a\n      host name or IP address, a TCP port number (for\
    \ the target), and\n      the iSCSI Name of the node.  An iSCSI node can have\
    \ any number of\n      addresses, which can change at any time, particularly if\
    \ they are\n      assigned via DHCP.\n   A similar analogy exists for people.\
    \  A person in the USA might be:\n      Robert Smith\n      SSN+DateOfBirth: 333-44-5555\
    \ 14-MAR-1960\n      Phone: +1 (763) 555.1212\n      Home Address: 555 Big Road,\
    \ Minneapolis, MN 55444\n      Work Address: 222 Freeway Blvd, St. Paul, MN 55333\n\
    \   In this case, Robert's globally unique name is really his Social\n   Security\
    \ Number plus Date of Birth.  His common name, \"Robert Smith\",\n   is not guaranteed\
    \ to be unique.  Robert has three locations at which\n   he may be reached; two\
    \ Physical addresses, and a phone number.\n   In this example, Robert's SSN+DOB\
    \ is like the iSCSI Name (date of\n   birth is required to disambiguate SSNs that\
    \ have been reused), his\n   phone number and addresses are analogous to an iSCSI\
    \ node's TCP\n   addresses, and \"Robert Smith\" would be a human-friendly label\
    \ for\n   this person.\n   To assist in providing a more human-readable user interface\
    \ for\n   devices that contain iSCSI targets and initiators, a target or\n   initiator\
    \ may also provide an alias.  This alias is a simple UTF-8\n   string, is not\
    \ globally unique, and is never interpreted or used to\n   identify an initiator\
    \ or device within the iSCSI protocol.  Its use\n   is described further in section\
    \ 2.\n"
- title: 1.1.  Constructing iSCSI names using the iqn. format
  contents:
  - "1.1.  Constructing iSCSI names using the iqn. format\n   The iSCSI naming scheme\
    \ was constructed to give an organizational\n   naming authority the flexibility\
    \ to further subdivide the\n   responsibility for name creation to subordinate\
    \ naming authorities.\n   The iSCSI qualified name format is defined in [RFC3720]\
    \ and contains\n   (in order):\n   -  The string \"iqn.\"\n   -  A date code specifying\
    \ the year and month in which the\n      organization registered the domain or\
    \ sub-domain name used as the\n      naming authority string.\n   -  The organizational\
    \ naming authority string, which consists of a\n      valid, reversed domain or\
    \ subdomain name.\n   -  Optionally, a ':', followed by a string of the assigning\n\
    \      organization's choosing, which must make each assigned iSCSI name\n   \
    \   unique.\n   The following is an example of an iSCSI qualified name from an\n\
    \   equipment vendor:\n        Organizational      Subgroup Naming Authority\n\
    \                Naming      and/or string Defined by\n   Type  Date     Auth\
    \      Org. or Local Naming Authority\n   +--++-----+ +---------+ +--------------------------------+\n\
    \   |  ||     | |         | |                                |\n   iqn.2001-04.com.example:diskarrays-sn-a8675309\n\
    \   Where:\n      \"iqn\" specifies the use of the iSCSI qualified name as the\n\
    \      authority.\n      \"2001-04\" is the year and month on which the naming\
    \ authority\n      acquired the domain name used in this iSCSI name.  This is\
    \ used to\n      ensure that when domain names are sold or transferred to another\n\
    \      organization, iSCSI names generated by these organizations will be\n  \
    \    unique.\n      \"com.example\" is a reversed DNS name, and defines the\n\
    \      organizational naming authority.  The owner of the DNS name\n      \"example.com\"\
    \ has the sole right of use of this name as this part\n      of an iSCSI name,\
    \ as well as the responsibility to keep the\n      remainder of the iSCSI name\
    \ unique.  In this case, example.com\n      happens to manufacture disk arrays.\n\
    \      \"diskarrays\" was picked arbitrarily by example.com to identify the\n\
    \      disk arrays they manufacture.  Another product that ACME makes\n      might\
    \ use a different name, and have its own namespace independent\n      of the disk\
    \ array group.  The owner of \"example.com\" is\n      responsible for keeping\
    \ this structure unique.\n      \"sn\" was picked by the disk array group of ACME\
    \ to show that what\n      follows is a serial number.  They could have just assumed\
    \ that all\n      iSCSI Names are based on serial numbers, but they thought that\n\
    \      perhaps later products might be better identified by something\n      else.\
    \  Adding \"sn\" was a future-proof measure.\n      \"a8675309\" is the serial\
    \ number of the disk array, uniquely\n      identifying it from all other arrays.\n\
    \      Another example shows how the ':' separator helps owners of sub-\n    \
    \  domains to keep their name spaces unique:\n                  Naming       \
    \     Defined by\n   Type  Date     Authority         Naming Authority\n   +--++-----+\
    \ +-----------------+ +-----------+\n   |  ||     | |                 | |    \
    \       |\n   iqn.2001-04.com.example.storage:tape.sys1.xyz\n                \
    \  Naming                Defined by\n   Type  Date     Authority             Naming\
    \ Authority\n   +--++-----+ +----------------------+ +-----------+\n   |  || \
    \    | |                      | |           |\n   iqn.2001-04.com.example.storage.tape:sys1.xyz\n\
    \   Note that, except for the ':' separator, both names are identical.\n   The\
    \ first was assigned by the owner of the subdomain\n   \"storage.example.com\"\
    ; the second was assigned by the owner of\n   \"tape.storage.example.com\".  These\
    \ are both legal names, and are\n   unique.\n   The following is an example of\
    \ a name that might be constructed by a\n   research organization:\n         \
    \       Naming        Defined by  Defined by\n   Type  Date    Authority     \
    \ cs dept    User \"oaks\"\n    +-+ +-----+ +------------+ +--------+ +-----------+\n\
    \    | | |     | |            | |        | |           |\n    iqn.2000-02.edu.example.cs:users.oaks:proto.target4\n\
    \   In the above example, Professor Oaks of Example University is\n   building\
    \ research prototypes of iSCSI targets.  EU's computer science\n   department\
    \ allows each user to use his or her user name as a naming\n   authority for this\
    \ type of work, by attaching \"users.<username>\"\n   after the ':', and another\
    \ ':', followed by a string of the user's\n   choosing (the user is responsible\
    \ for making this part unique).\n   Professor Oaks chose to use \"proto.target4\"\
    \ for this particular\n   target.\n   The following is an example of an iSCSI\
    \ name string from a storage\n   service provider:\n                Organization\
    \            String\n                   Naming            Defined by Org.\n  \
    \ Type  Date    Authority          Naming Authority\n    +-+ +-----+ +-------------+\
    \ +----------------------+\n    | | |     | |             | |                \
    \      |\n    iqn.1995-11.com.example.ssp:customers.4567.disks.107\n   In this\
    \ case, a storage service provider (ssp.example.com) has\n   decided to re-name\
    \ the targets from the manufacturer, to provide the\n   flexibility to move the\
    \ customer's data to a different storage\n   subsystem should the need arise.\n\
    \   The Storage Service Provider (SSP) has configured the iSCSI Name on\n   this\
    \ particular target for one of its customers, and has determined\n   that it made\
    \ the most sense to track these targets by their Customer\n   ID number and a\
    \ disk number.  This target was created for use by\n   customer #4567, and is\
    \ the 107th target configured for this customer.\n   Note that when reversing\
    \ these domain names, the first component\n   (after the \"iqn.\") will always\
    \ be a top-level domain name, which\n   includes \"com\", \"edu\", \"gov\", \"\
    org\", \"net\", \"mil\", or one of the\n   two-letter country codes.  The use\
    \ of anything else as the first\n   component of these names is not allowed. \
    \ In particular, companies\n   generating these names must not eliminate their\
    \ \"com.\" from the\n   string.\n   Again, these iSCSI names are NOT addresses.\
    \  Even though they make\n   use of DNS domain names, they are used only to specify\
    \ the naming\n   authority.  An iSCSI name contains no implications of the iSCSI\n\
    \   target or initiator's location.  The use of the domain name is only a\n  \
    \ method of re-using an already ubiquitous name space.\n"
- title: 1.2.  Constructing iSCSI names using the eui. format
  contents:
  - "1.2.  Constructing iSCSI names using the eui. format\n   The iSCSI eui. naming\
    \ format allows a naming authority to use IEEE\n   EUI-64 identifiers in constructing\
    \ iSCSI names.  The details of\n   constructing EUI-64 identifiers are specified\
    \ by the IEEE\n   Registration Authority (see [EUI64]).\n      Example iSCSI name:\n\
    \      Type  EUI-64 identifier (ASCII-encoded hexadecimal)\n      +--++--------------+\n\
    \      |  ||              |\n      eui.02004567A425678D\n"
- title: 2.  iSCSI Alias
  contents:
  - "2.  iSCSI Alias\n   The iSCSI alias is a UTF-8 text string that may be used as\
    \ an\n   additional descriptive name for an initiator and target.  This may\n\
    \   not be used to identify a target or initiator during login, and does\n   not\
    \ have to follow the uniqueness or other requirements of the iSCSI\n   name. \
    \ The alias strings are communicated between the initiator and\n   target at login,\
    \ and can be displayed by a user interface on either\n   end, helping the user\
    \ tell at a glance whether the initiators and/or\n   targets at the other end\
    \ appear to be correct.  The alias must NOT be\n   used to identify, address,\
    \ or authenticate initiators and targets.\n   The alias is a variable length string,\
    \ between 0 and 255 characters,\n   and is terminated with at least one NULL (0x00)\
    \ character, as defined\n   in [RFC3720].  No other structure is imposed upon\
    \ this string.\n"
- title: 2.1.  Purpose of an Alias
  contents:
  - "2.1.  Purpose of an Alias\n   Initiators and targets are uniquely identified\
    \ by an iSCSI Name.\n   These identifiers may be assigned by a hardware or software\n\
    \   manufacturer, a service provider, or even the customer.  Although\n   these\
    \ identifiers are nominally human-readable, they are likely to be\n   assigned\
    \ from a point of view different from that of the other side\n   of the connection.\
    \  For instance, a target name for a disk array may\n   be built from the array's\
    \ serial number, and some sort of internal\n   target ID.  Although this would\
    \ still be human-readable and\n   transcribable, it offers little assurance to\
    \ someone at a user\n   interface who would like to see \"at-a-glance\" whether\
    \ this target is\n   really the correct one.\n   The use of an alias helps solve\
    \ that problem.  An alias is simply a\n   descriptive name that can be assigned\
    \ to an initiator or target, that\n   is independent of the name, and does not\
    \ have to be unique.  Since it\n   is not unique, the alias must be used in a\
    \ purely informational way.\n   It may not be used to specify a target at login,\
    \ or used during\n   authentication.\n   Both targets and initiators may have\
    \ aliases.\n"
- title: 2.2.  Target Alias
  contents:
  - "2.2.  Target Alias\n   To show the utility of an alias, here is an example using\
    \ an alias\n   for an iSCSI target.\n   Imagine sitting at a desktop station that\
    \ is using some iSCSI devices\n   over a network.  The user requires another iSCSI\
    \ disk, and calls the\n   storage services person (internal or external), giving\
    \ any\n   authentication information that the storage device will require for\n\
    \   the host.  The services person allocates a new target for the host,\n   and\
    \ sends the Target Name for the new target, and probably an\n   address, back\
    \ to the user.  The user then adds this Target Name to\n   the configuration file\
    \ on the host, and discovers the new device.\n   Without an alias, a user managing\
    \ an iSCSI host would click on some\n   sort of management \"show targets\" button\
    \ to show the targets to which\n   the host is currently connected.\n   +--Connected-To-These-Targets----------------------\n\
    \   |\n   |  Target Name\n   |\n   |  iqn.1995-04.com.example:sn.5551212.target.450\n\
    \   |  iqn.1995-04.com.example:sn.5551212.target.489\n   |  iqn.1995-04.com.example:sn.8675309\n\
    \   |  iqn.2001-04.com.example.storage:tape.sys1.xyz\n   |  iqn.2001-04.com.example.storage.tape:sys1.xyz\n\
    \   |\n   +--------------------------------------------------\n   In the above\
    \ example, the user sees a collection of iSCSI Names, but\n   with no real description\
    \ of what they are for.  They will, of course,\n   map to a system-dependent device\
    \ file or drive letter, but it's not\n   easy looking at numbers quickly to see\
    \ if everything is there.\n   If a storage administrator configures an alias for\
    \ each target name,\n   the alias can provide a more descriptive name.  This alias\
    \ may be\n   sent back to the initiator as part of the login response, or found\
    \ in\n   the iSCSI MIB.  It then might be used in a display such as the\n   following:\n\
    \   +--Connected-To-These-Targets----------------------\n   |\n   |  Alias   \
    \       Target Name\n   |\n   |  Oracle 1       iqn.1995-04.com.example:sn.5551212.target.450\n\
    \   |  Local Disk     iqn.1995-04.com.example:sn.5551212.target.489\n   |  Exchange\
    \ 2     iqn.1995-04.com.example:sn.8675309\n   |\n   +--------------------------------------------------\n\
    \   This would give the user a better idea of what's really there.\n   In general,\
    \ flexible, configured aliases will probably be supported\n   by larger storage\
    \ subsystems and configurable gateways.  Simpler\n   devices will likely not keep\
    \ configuration data around for things\n   such as an alias.  The TargetAlias\
    \ string could be either left\n   unsupported (not given to the initiator during\
    \ login) or could be\n   returned as whatever the \"next best thing\" that the\
    \ target has that\n   might better describe it.  Since it does not have to be\
    \ unique, it\n   could even return SCSI inquiry string data.\n   Note that if\
    \ a simple initiator does not wish to keep or display\n   alias information, it\
    \ can be simply ignored if seen in the login\n   response.\n"
- title: 2.3.  Initiator Alias
  contents:
  - "2.3.  Initiator Alias\n   An initiator alias can be used in the same manner as\
    \ a target alias.\n   An initiator may send the alias in a login request, when\
    \ it sends its\n   iSCSI Initiator Name.  The alias is not used for authentication,\
    \ but\n   may be kept with the session information for display through a\n   management\
    \ Graphical User Interface (GUI) or command-line interface\n   (for a more complex\
    \ subsystem or gateway), or through the iSCSI MIB.\n   Note that a simple target\
    \ can just ignore the Initiator Alias if it\n   has no management interface on\
    \ which to display it.\n   Usually just the hostname would be sufficient for an\
    \ initiator alias,\n   but a custom alias could be configured for the sake of\
    \ the service\n   provider if needed.  Even better would be a description of what\
    \ the\n   machine was used for, such as \"Exchange Server 1\", or \"User Web\n\
    \   Server\".\n   Here's an example of a management interface showing a list of\n\
    \   sessions on an iSCSI target network entity.  For this display, the\n   targets\
    \ are using an internal target number, which is a fictional\n   field that has\
    \ purely internal significance.\n   +--Connected-To-These-Initiators-------------------\n\
    \   |\n   |  Target   Initiator Name\n   |\n   |  450      iqn.1995-04.com.example.sw:cd.12345678-OEM-456\n\
    \   |  451      iqn.1995-04.com.example.os:hostid.A598B45C\n   |  309      iqn.1995-04.com.example.sw:cd.87654321-OEM-259\n\
    \   |\n   +--------------------------------------------------\n   And with the\
    \ initiator alias displayed:\n   +--Connected-To-These-Initiators-------------------\n\
    \   |\n   |  Target Alias               Initiator Name\n   |\n   |  450    Web\
    \ Server 4        iqn.1995-04.com.example.sw:cd.12...\n   |  451    scsigw.example.com\
    \  iqn.1995-04.com.example.os:hosti...\n   |  309    Exchange Server     iqn.1995-04.com.example.sw:cd.87...\n\
    \   |\n   +--------------------------------------------------\n   This gives the\
    \ storage administrator a better idea of who is\n   connected to their targets.\
    \  Of course, one could always do a reverse\n   DNS lookup of the incoming IP\
    \ address to determine a host name, but\n   simpler devices really don't do well\
    \ with that particular feature due\n   to blocking problems, and it won't always\
    \ work if there is a firewall\n   or iSCSI gateway involved.\n   Again, these\
    \ are purely informational and optional and require a\n   management application.\n\
    \   Aliases are extremely easy to implement.  Targets just send a\n   TargetAlias\
    \ whenever they send a TargetName.  Initiators just send an\n   InitiatorAlias\
    \ whenever they send an InitiatorName.  If an alias is\n   received that does\
    \ not fit, or seems invalid in any way, it is\n   ignored.\n"
- title: 3.  iSCSI Discovery
  contents:
  - "3.  iSCSI Discovery\n   The goal of iSCSI discovery is to allow an initiator\
    \ to find the\n   targets to which it has access, and at least one address at\
    \ which\n   each target may be accessed.  This should generally be done using\
    \ as\n   little configuration as possible.  This section defines the discovery\n\
    \   mechanism only; no attempt is made to specify central management of\n   iSCSI\
    \ devices within this document.  Moreover, the iSCSI discovery\n   mechanisms\
    \ listed here only deal with target discovery and one still\n   needs to use the\
    \ SCSI protocol for LUN discovery.\n   In order for an iSCSI initiator to establish\
    \ an iSCSI session with an\n   iSCSI target, the initiator needs the IP address,\
    \ TCP port number and\n   iSCSI target name information.  The goal of iSCSI discovery\n\
    \   mechanisms are to provide low overhead support for small iSCSI\n   setups,\
    \ and scalable discovery solutions for large enterprise setups.\n   Thus, there\
    \ are several methods that may be used to find targets\n   ranging from configuring\
    \ a list of targets and addresses on each\n   initiator and doing no discovery\
    \ at all, to configuring nothing on\n   each initiator, and allowing the initiator\
    \ to discover targets\n   dynamically.  The various discovery mechanisms differ\
    \ in their\n   assumptions about what information is already available to the\n\
    \   initiators and what information needs to be still discovered.\n   iSCSI supports\
    \ the following discovery mechanisms:\n   a. Static Configuration: This mechanism\
    \ assumes that the IP address,\n      TCP port and the iSCSI target name information\
    \ are already\n      available to the initiator.  The initiators need to perform\
    \ no\n      discovery in this approach.  The initiator uses the IP address and\n\
    \      the TCP port information to establish a TCP connection, and it\n      uses\
    \ the iSCSI target name information to establish an iSCSI\n      session.  This\
    \ discovery option is convenient for small iSCSI\n      setups.\n   b. SendTargets:\
    \ This mechanism assumes that the target's IP address\n      and TCP port information\
    \ are already available to the initiator.\n      The initiator then uses this\
    \ information to establish a discovery\n      session to the Network Entity. \
    \ The initiator then subsequently\n      issues the SendTargets text command to\
    \ query information about the\n      iSCSI targets available at the particular\
    \ Network Entity (IP\n      address).  SendTargets command details can be found\
    \ in the iSCSI\n      document [RFC3720].  This discovery option is convenient\
    \ for iSCSI\n      gateways and routers.\n   c. Zero-Configuration: This mechanism\
    \ assumes that the initiator does\n      not have any information about the target.\
    \  In this option, the\n      initiator can either multicast discovery messages\
    \ directly to the\n      targets or it can send discovery messages to storage\
    \ name servers.\n      Currently, there are many general purpose discovery frameworks\n\
    \      available such as Salutation [John], Jini [John], UPnP [John], SLP\n  \
    \    [RFC2608] and iSNS [iSNS].  However, with respect to iSCSI, SLP\n      can\
    \ clearly perform the needed discovery functions [iSCSI-SLP],\n      while iSNS\
    \ [iSNS] can be used to provide related management\n      functions including\
    \ notification, access management,\n      configuration, and discovery management.\
    \  iSCSI equipment that\n      need discovery functions beyond SendTargets should\
    \ at least\n      implement SLP, and then consider iSNS when extended discovery\n\
    \      management capabilities are required such as in larger storage\n      networks.\
    \  It should be noted that since iSNS will support SLP,\n      iSNS can be used\
    \ to help manage the discovery information returned\n      by SLP.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Most security issues relating to iSCSI naming\
    \ are discussed in the\n   main iSCSI document [RFC3720] and the iSCSI security\
    \ document\n   [RFC3723].\n   In addition, Appendix B discusses naming and discovery\
    \ issues when\n   gateways, proxies, and firewalls are used to solve security\
    \ or\n   discovery issues in some situations where iSCSI is deployed.\n   iSCSI\
    \ allows several different authentication methods to be used.\n   For many of\
    \ these methods, an authentication identifier is used,\n   which may be different\
    \ from the iSCSI node name of the entity being\n   authenticated.  This is discussed\
    \ in more detail in Appendix C.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC3720]   Satran, J., Meth, K., Sapuntzakis,\
    \ C. Chadalapaka, M. and\n               E. Zeidner, \"Internet Small Computer\
    \ Systems Interface\n               (iSCSI)\", RFC 3720, April 2004.\n   [EUI64]\
    \     EUI - \"Guidelines for 64-bit Global Identifier (EUI-64)\n             \
    \  Registration Authority,\n               http://standards.ieee.org/regauth/oui/tutorials/\n\
    \               EUI64.html\n   [SAM2]      R. Weber et al, INCITS T10 Project\
    \ 1157-D revision 24,\n               \"SCSI Architectural Model - 2 (SAM-2)\"\
    , Section 4.7.6\n               \"SCSI device name\", September 2002.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC2608]   Guttman, E., Perkins, C., Veizades,\
    \ J. and M. Day, \"SLP\n               Version 2\", RFC 2608, June 1999.\n   [RFC2732]\
    \   Hinden, R., Carpenter, B. and L. Masinter, \"Format for\n               Literal\
    \ IPv6 Addresses in URL's\", RFC 2732, December\n               1999.\n   [RFC2979]\
    \   Freed, N., \"Behavior of and Requirements for Internet\n               Firewalls\"\
    , RFC 2979, October 2000.\n   [RFC3303]   Srisuresh, P., Kuthan, J., Rosenberg,\
    \ J., Molitor, A. and\n               A. Rayhan, \"Middlebox Communication Architecture\
    \ and\n               Framework\", RFC 3303, August 2002.\n   [RFC3513]   Hinden,\
    \ R. and S. Deering, \"Internet Protocol Version 6\n               Addressing\
    \ Architecture\", RFC 3513, April 2003.\n   [RFC3723]   Aboba, B., Tseng, J.,\
    \ Walker, J., Rangan, V. and F.\n               Travostino, \"Securing Block Storage\
    \ Protocols over IP\",\n               RFC 3723, April 2004.\n   [iSCSI-SLP] Bakke,\
    \ M., et al., \"Finding iSCSI Targets and Name\n               Servers using SLP\"\
    , Work in Progress, March 2003.\n   [iSNS]      Tseng, J., et al., \"Internet\
    \ Storage Name Service\n               (iSNS)\", Work in Progress, January 2003.\n\
    \   [John]      R. John, \"UPnP, Jini and Salutation- A look at some\n       \
    \        popular coordination frameworks for future networked\n              \
    \ devices\", http://www.cswl.com/whiteppr/tech/upnp.html\",\n               June\
    \ 17, 1999.\n"
- title: 6. Acknowledgements
  contents:
  - "6. Acknowledgements\n   Joe Czap (IBM), Howard Hall (Pirus), Jack Harwood (EMC),\
    \ Yaron Klein\n   (SANRAD), Larry Lamers (Adaptec), Josh Tseng (Nishan Systems),\
    \ and\n   Todd Sperry (Adaptec) have participated and made contributions during\n\
    \   development of this document.\n"
- title: 'Appendix A: iSCSI Naming Notes'
  contents:
  - "Appendix A: iSCSI Naming Notes\n   Some iSCSI Name Examples for Targets\n   -\
    \  Assign to a target based on controller serial number\n      iqn.2001-04.com.example:diskarray.sn.8675309\n\
    \   -  Assign to a target based on serial number\n      iqn.2001-04.com.example:diskarray.sn.8675309.oracle-db-1\n\
    \   Where oracle-db-1 might be a target label assigned by a user.\n   This would\
    \ be useful for a controller that can present different\n   logical targets to\
    \ different hosts.\n   Obviously, any naming authority may come up with its own\
    \ scheme and\n   hierarchy for these names, and be just as valid.\n   A target\
    \ iSCSI Name should never be assigned based on interface\n   hardware, or other\
    \ hardware that can be swapped and moved to other\n   devices.\n   Some iSCSI\
    \ Name Examples for Initiators\n   -  Assign to the OS image by fully qualified\
    \ host name\n      iqn.2001-04.com.example.os:dns.com.customer1.host-four\n  \
    \ Note the use of two FQDNs - that of the naming authority and also\n   that of\
    \ the host that is being named.  This can cause problems, due\n   to limitations\
    \ imposed on the size of the iSCSI Name.\n   - Assign to the OS image by OS install\
    \ serial number\n      iqn.2001-04.com.example.os:newos5.12345-OEM-0067890-23456\n\
    \   Note that this breaks if an install CD is used more than once.\n   Depending\
    \ on the O/S vendor's philosophy, this might be a feature.\n   -  Assign to the\
    \ Raid Array by a service provider\n      iqn.2001-04.com.example.myssp:users.mbakke05657\n"
- title: 'Appendix B: Interaction with Proxies and Firewalls'
  contents:
  - "Appendix B: Interaction with Proxies and Firewalls\n   iSCSI has been designed\
    \ to allow SCSI initiators and targets to\n   communicate over an arbitrary IP\
    \ network.  This means that in theory,\n   making some assumptions about authentication\
    \ and security, the whole\n   internet could be used as one giant storage network.\n\
    \   However, there are many access and scaling problems that would come\n   up\
    \ when this is attempted.\n   1. Most iSCSI targets may only be meant to be accessed\
    \ by one or a\n      few initiators.  Discovering everything would be unnecessary.\n\
    \   2. The initiator and target may be owned by separate entities, each\n    \
    \  with their own directory services, authentication, and other\n      schemes.\
    \  An iSCSI-aware proxy may be required to map between\n      these things.\n\
    \   3. Many environments use non-routable IP addresses, such as the \"10.\"\n\
    \      network.\n   For these and other reasons, various types of firewalls [RFC2979]\
    \ and\n   proxies will be deployed for iSCSI, similar in nature to those\n   already\
    \ handling protocols such as HTTP and FTP.\n"
- title: B.1.  Port Redirector
  contents:
  - "B.1.  Port Redirector\n   A port redirector is a stateless device that is not\
    \ aware of iSCSI.\n   It is used to do Network Address Translation (NAT), which\
    \ can map IP\n   addresses between routable and non-routable domains, as well\
    \ as map\n   TCP ports.  While devices providing these capabilities can often\n\
    \   filter based on IP addresses and TCP ports, they generally do not\n   provide\
    \ meaningful security, and are used instead to resolve internal\n   network routing\
    \ issues.\n   Since it is entirely possible that these devices are used as routers\n\
    \   and/or aggregators between a firewall and an iSCSI initiator or\n   target,\
    \ iSCSI connections must be operable through them.\n   Effects on iSCSI:\n   -\
    \  iSCSI-level data integrity checks must not include information\n      from\
    \ the TCP or IP headers, as these may be changed in between the\n      initiator\
    \ and target.\n   -  iSCSI messages that specify a particular initiator or target,\
    \ such\n      as login requests and third party requests, should specify the\n\
    \      initiator or target in a location-independent manner.  This is\n      accomplished\
    \ using the iSCSI Name.\n   -  When an iSCSI discovery connection is to be used\
    \ through a port\n      redirector, a target will have to be configured to return\
    \ a domain\n      name instead of an IP address in a SendTargets response, since\
    \ the\n      port redirector will not be able to map the IP address(es)\n    \
    \  returned in the iSCSI message.  It is a good practice to do this\n      anyway.\n"
- title: B.2. SOCKS server
  contents:
  - "B.2. SOCKS server\n   A SOCKS server can be used to map TCP connections from\
    \ one network\n   domain to another.  It is aware of the state of each TCP connection.\n\
    \   The SOCKS server provides authenticated firewall traversal for\n   applications\
    \ that are not firewall-aware.  Conceptually, SOCKS is a\n   \"shim-layer\" that\
    \ exists between the application (i.e., iSCSI) and\n   TCP.\n   To use SOCKS,\
    \ the iSCSI initiator must be modified to use the\n   encapsulation routines in\
    \ the SOCKS library.  The initiator then\n   opens up a TCP connection to the\
    \ SOCKS server, typically on the\n   canonical SOCKS port 1080.  A sub-negotiation\
    \ then occurs, during\n   which the initiator is either authenticated or denied\
    \ the connection\n   request.  If authenticated, the SOCKS server then opens a\
    \ TCP\n   connection to the iSCSI target using addressing information sent to\n\
    \   it by the initiator in the SOCKS shim.  The SOCKS server then\n   forwards\
    \ iSCSI commands, data, and responses between the iSCSI\n   initiator and target.\n\
    \   Use of the SOCKS server requires special modifications to the iSCSI\n   initiator.\
    \  No modifications are required to the iSCSI target.\n   As a SOCKS server can\
    \ map most of the addresses and information\n   contained within the IP and TCP\
    \ headers, including sequence numbers,\n   its effects on iSCSI are identical\
    \ to those in the port redirector.\n"
- title: B.3. SCSI gateway
  contents:
  - "B.3. SCSI gateway\n   This gateway presents logical targets (iSCSI Names) to\
    \ the\n   initiators, and maps them to SCSI targets as it chooses.  The\n   initiator\
    \ sees this gateway as a real iSCSI target, and is unaware of\n   any proxy or\
    \ gateway behavior.  The gateway may manufacture its own\n   iSCSI Names, or map\
    \ the iSCSI names using information provided by the\n   physical SCSI devices.\
    \  It is the responsibility of the gateway to\n   ensure the uniqueness of any\
    \ iSCSI name it manufactures.  The gateway\n   may have to account for multiple\
    \ gateways having access to a single\n   physical device.  This type of gateway\
    \ is used to present parallel\n   SCSI, Fibre Channel, SSA, or other devices as\
    \ iSCSI devices.\n   Effects on iSCSI:\n   -  Since the initiator is unaware of\
    \ any addresses beyond the\n      gateway, the gateway's own address is for all\
    \ practical purposes\n      the real address of a target.  Only the iSCSI Name\
    \ needs to be\n      passed.  This is already done in iSCSI, so there are no further\n\
    \      requirements to support SCSI gateways.\n"
- title: B.4. iSCSI Proxy
  contents:
  - "B.4. iSCSI Proxy\n   An iSCSI proxy is a gateway that terminates the iSCSI protocol\
    \ on\n   both sides, rather than translate between iSCSI and some other\n   transport.\
    \  The proxy functionality is aware that both sides are\n   iSCSI, and can take\
    \ advantage of optimizations, such as the\n   preservation of data integrity checks.\
    \  Since an iSCSI initiator's\n   discovery or configuration of a set of targets\
    \ makes use of address-\n   independent iSCSI names, iSCSI does not have the same\
    \ proxy\n   addressing problems as HTTP, which includes address information into\n\
    \   its URLs.  If a proxy is to provide services to an initiator on\n   behalf\
    \ of a target, the proxy allows the initiator to discover its\n   address for\
    \ the target, and the actual target device is discovered\n   only by the proxy.\
    \  Neither the initiator nor the iSCSI protocol\n   needs to be aware of the existence\
    \ of the proxy.  Note that a SCSI\n   gateway may also provide iSCSI proxy functionality\
    \ when mapping\n   targets between two iSCSI interfaces.\n   Effects on iSCSI:\n\
    \   -  Same as a SCSI gateway.  The only other effect is that iSCSI must\n   \
    \   separate data integrity checking on iSCSI headers and iSCSI data,\n      to\
    \ allow the data integrity check on the data to be propagated\n      end-to-end\
    \ through the proxy.\n"
- title: B.5.  Stateful Inspection Firewall (stealth iSCSI firewall)
  contents:
  - "B.5.  Stateful Inspection Firewall (stealth iSCSI firewall)\n   The stealth model\
    \ would exist as an iSCSI-aware firewall, that is\n   invisible to the initiator,\
    \ but provides capabilities found in the\n   iSCSI proxy.\n   Effects on iSCSI:\n\
    \   -  Since this is invisible, there are no additional requirements on\n    \
    \  the iSCSI protocol for this one.\n   This one is more difficult in some ways\
    \ to implement, simply because\n   it has to be part of a standard firewall product,\
    \ rather than part of\n   an iSCSI-type product.\n   Also note that this type\
    \ of firewall is only effective in the\n   outbound direction (allowing an initiator\
    \ behind the firewall to\n   connect to an outside target), unless the iSCSI target\
    \ is located in\n   a DMZ (De-Militarized Zone) [RFC3303].  It does not provide\
    \ adequate\n   security otherwise.\n"
- title: 'Appendix C: iSCSI Names and Security Identifiers'
  contents:
  - "Appendix C: iSCSI Names and Security Identifiers\n   This document has described\
    \ the creation and use of iSCSI Node Names.\n   There will be trusted environments\
    \ where this is a sufficient form of\n   identification.  In these environments\
    \ the iSCSI Target may have an\n   Access Control List (ACL), which will contain\
    \ a list of authorized\n   entities that are permitted to access a restricted\
    \ resource (in this\n   case a Target Storage Controller).  The iSCSI Target will\
    \ then use\n   that ACL to permit (or not) certain iSCSI Initiators to access\
    \ the\n   storage at the iSCSI Target Node.  This form of ACL is used to\n   prevent\
    \ trusted initiators from making a mistake and connecting to\n   the wrong storage\
    \ controller.\n   It is also possible that the ACL and the iSCSI Initiator Node\
    \ Name\n   can be used in conjunction with the SCSI layer for the appropriate\n\
    \   SCSI association of LUNs with the Initiator.  The SCSI layer's use of\n  \
    \ the ACL will not be discussed further in this document.\n   There will be situations\
    \ where the iSCSI Nodes exist in untrusted\n   environments.  That is, some iSCSI\
    \ Initiator Nodes may be authorized\n   to access an iSCSI Target Node, however,\
    \ because of the untrusted\n   environment, nodes on the network cannot be trusted\
    \ to give the\n   correct iSCSI Initiator Node Names.\n   In untrusted environments\
    \ an additional type of identification is\n   required to assure the target that\
    \ it really knows the identity of\n   the requesting entity.\n   The authentication\
    \ and authorization in the iSCSI layer is\n   independent of anything that IPSec\
    \ might handle, underneath or around\n   the TCP layer.  This means that the initiator\
    \ node needs to pass some\n   type of security related identification information\
    \ (e.g., userid) to\n   a security authentication process such as SRP, CHAP, Kerberos\
    \ etc.\n   (These authentication processes will not be discussed in this\n   document.)\n\
    \   Upon the completion of the iSCSI security authentication, the\n   installation\
    \ knows \"who\" sent the request for access.  The\n   installation must then check\
    \ to ensure that such a request, from the\n   identified entity, is permitted/authorized.\
    \  This form of\n   Authorization is generally accomplished via an Access Control\
    \ List\n   (ACL) as described above.  Using this authorization process, the\n\
    \   iSCSI target will know that the entity is authorized to access the\n   iSCSI\
    \ Target Node.\n   It may be possible for an installation to set a rule that the\n\
    \   security identification information (e.g., UserID) be equal to the\n   iSCSI\
    \ Initiator Node Name.  In that case, the ACL approach described\n   above should\
    \ be all the authorization that is needed.\n   If, however, the iSCSI Initiator\
    \ Node Name is not used as the\n   security identifier there is a need for more\
    \ elaborate ACL\n   functionality.  This means that the target requires a mechanism\
    \ to\n   map the security identifier (e.g., UserID) information to the iSCSI\n\
    \   Initiator Node Name.  That is, the target must be sure that the\n   entity\
    \ requesting access is authorized to use the name, which was\n   specified with\
    \ the Login Keyword \"InitiatorName=\".  For example, if\n   security identifier\
    \ 'Frank' is authorized to access the target via\n   iSCSI InitiatorName=xxxx,\
    \ but 'Frank' tries to access the target via\n   iSCSI InitiatorName=yyyy, then\
    \ this login should be rejected.\n   On the other hand, it is possible that 'Frank'\
    \ is a roaming user (or\n   a Storage Administrator) that \"owns\" several different\
    \ systems, and\n   thus, could be authorized to access the target via multiple\
    \ different\n   iSCSI initiators.  In this case, the ACL needs to have the names\
    \ of\n   all the initiators through which 'Frank' can access the target.\n   There\
    \ may be other more elaborate ACL approaches, which can also be\n   deployed to\
    \ provide the installation/user with even more security\n   with flexibility.\n\
    \   The above discussion is trying to inform the reader that, not only is\n  \
    \ there a need for access control dealing with iSCSI Initiator Node\n   Names,\
    \ but in certain iSCSI environments there might also be a need\n   for other complementary\
    \ security identifiers.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kaladhar Voruganti\n   IBM Almaden Research Center\n \
    \  650 Harry Road\n   San Jose, CA 95120\n   EMail: kaladhar@us.ibm.com\n   Mark\
    \ Bakke\n   Cisco Systems, Inc.\n   6450 Wedgwood Road\n   Maple Grove, MN 55311\n\
    \   Phone: +1 763 398-1054\n   EMail: mbakke@cisco.com\n   Jim Hafner\n   IBM\
    \ Almaden Research Center\n   650 Harry Road\n   San Jose, CA 95120\n   Phone:\
    \ +1 408 927-1892\n   EMail: hafner@almaden.ibm.com\n   John L. Hufferd\n   IBM\
    \ Storage Systems Group\n   5600 Cottle Road\n   San Jose, CA 95193\n   Phone:\
    \ +1 408 256-0403\n   EMail: hufferd@us.ibm.com\n   Marjorie Krueger\n   Hewlett-Packard\
    \ Corporation\n   8000 Foothills Blvd\n   Roseville, CA 95747-5668, USA\n   Phone:\
    \ +1 916 785-2656\n   EMail: marjorie_krueger@hp.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
