- title: __initial_text__
  contents:
  - '          DNS Security Extension Clarification on Zone Status

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The definition of a secured zone is presented, clarifying and\n\
    \   updating sections of RFC 2535.  RFC 2535 defines a zone to be secured\n  \
    \ based on a per algorithm basis, e.g., a zone can be secured with RSA\n   keys,\
    \ and not secured with DSA keys.  This document changes this to\n   define a zone\
    \ to be secured or not secured regardless of the key\n   algorithm used (or not\
    \ used).  To further simplify the determination\n   of a zone's status, \"experimentally\
    \ secure\" status is deprecated.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   Whether a DNS zone is \"secured\" or not is a question asked\
    \ in at\n   least four contexts.  A zone administrator asks the question when\n\
    \   configuring a zone to use DNSSEC.  A dynamic update server asks the\n   question\
    \ when an update request arrives, which may require DNSSEC\n   processing.  A\
    \ delegating zone asks the question of a child zone when\n   the parent enters\
    \ data indicating the status the child.  A resolver\n   asks the question upon\
    \ receipt of data belonging to the zone.\n"
- title: 1.1 When a Zone's Status is Important
  contents:
  - "1.1 When a Zone's Status is Important\n   A zone administrator needs to be able\
    \ to determine what steps are\n   needed to make the zone as secure as it can\
    \ be.  Realizing that due\n   to the distributed nature of DNS and its administration,\
    \ any single\n   zone is at the mercy of other zones when it comes to the appearance\n\
    \   of security.  This document will define what makes a zone qualify as\n   secure.\n\
    \   A name server performing dynamic updates needs to know whether a zone\n  \
    \ being updated is to have signatures added to the updated data, NXT\n   records\
    \ applied, and other required processing.  In this case, it is\n   conceivable\
    \ that the name server is configured with the knowledge,\n   but being able to\
    \ determine the status of a zone by examining the\n   data is a desirable alternative\
    \ to configuration parameters.\n   A delegating zone is required to indicate whether\
    \ a child zone is\n   secured.  The reason for this requirement lies in the way\
    \ in which a\n   resolver makes its own determination about a zone (next paragraph).\n\
    \   To shorten a long story, a parent needs to know whether a child\n   should\
    \ be considered secured.  This is a two part question.  Under\n   what circumstances\
    \ does a parent consider a child zone to be secure,\n   and how does a parent\
    \ know if the child conforms?\n   A resolver needs to know if a zone is secured\
    \ when the resolver is\n   processing data from the zone.  Ultimately, a resolver\
    \ needs to know\n   whether or not to expect a usable signature covering the data.\
    \  How\n   this determination is done is out of the scope of this document,\n\
    \   except that, in some cases, the resolver will need to contact the\n   parent\
    \ of the zone to see if the parent states that the child is\n   secured.\n"
- title: 1.2 Islands of Security
  contents:
  - "1.2 Islands of Security\n   The goal of DNSSEC is to have each zone secured,\
    \ from the root zone\n   and the top-level domains down the hierarchy to the leaf\
    \ zones.\n   Transitioning from an unsecured DNS, as we have now, to a fully\n\
    \   secured - or \"as much as will be secured\" - tree will take some time.\n\
    \   During this time, DNSSEC will be applied in various locations in the\n   tree,\
    \ not necessarily \"top down.\"\n   For example, at a particular instant, the\
    \ root zone and the \"test.\"\n   TLD might be secured, but region1.test. might\
    \ not be.  (For\n   reference, let's assume that region2.test. is secured.)  However,\n\
    \   subarea1.region1.test. may have gone through the process of becoming\n   secured,\
    \ along with its delegations.  The dilemma here is that\n   subarea1 cannot get\
    \ its zone keys properly signed as its parent zone,\n   region1, is not secured.\n\
    \   The colloquial phrase describing the collection of contiguous secured\n  \
    \ zones at or below subarea1.region1.test. is an \"island of security.\"\n   The\
    \ only way in which a DNSSEC resolver will come to trust any data\n   from this\
    \ island is if the resolver is pre-configured with the zone\n   key(s) for subarea1.region1.test.,\
    \ i.e., the root of the island of\n   security.  Other resolvers (not so configured)\
    \ will recognize this\n   island as unsecured.\n   An island of security begins\
    \ with one zone whose public key is pre-\n   configured in resolvers.  Within\
    \ this island are subzones which are\n   also secured.  The \"bottom\" of the\
    \ island is defined by delegations\n   to unsecured zones.  One island may also\
    \ be on top of another -\n   meaning that there is at least one unsecured zone\
    \ between the bottom\n   of the upper island and the root of the lower secured\
    \ island.\n   Although both subarea1.region1.test. and region2.test. have both\
    \ been\n   properly brought to a secured state by the administering staff, only\n\
    \   the latter of the two is actually \"globally\" secured - in the sense\n  \
    \ that all DNSSEC resolvers can and will verify its data.  The former,\n   subarea1,\
    \ will be seen as secured by a subset of those resolvers,\n   just those appropriately\
    \ configured.  This document refers to such\n   zones as being \"locally\" secured.\n\
    \   In RFC 2535, there is a provision for \"certification authorities,\"\n   entities\
    \ that will sign public keys for zones such as subarea1.\n   There is another\
    \ document, [RFC3008], that restricts this activity.\n   Regardless of the other\
    \ document, resolvers would still need proper\n   configuration to be able to\
    \ use the certification authority to verify\n   the data for the subarea1 island.\n"
- title: 1.2.1 Determining the closest security root
  contents:
  - "1.2.1 Determining the closest security root\n   Given a domain, in order to determine\
    \ whether it is secure or not,\n   the first step is to determine the closest\
    \ security root.  The\n   closest security root is the top of an island of security\
    \ whose name\n   has the most matching (in order from the root) right-most labels\
    \ to\n   the given domain.\n   For example, given a name \"sub.domain.testing.signed.exp.test.\"\
    , and\n   given the secure roots \"exp.test.\", \"testing.signed.exp.test.\" and\n\
    \   \"not-the-same.xy.\", the middle one is the closest.  The first secure\n \
    \  root shares 2 labels, the middle 4, and the last 0.\n   The reason why the\
    \ closest is desired is to eliminate false senses of\n   insecurity because of\
    \ a NULL key.  Continuing with the example, the\n   reason both \"testing...\"\
    \ and \"exp.test.\" are listed as secure root is\n   presumably because \"signed.exp.test.\"\
    \ is unsecured (has a NULL key).\n   If we started to descend from \"exp.test.\"\
    \ to our given domain\n   (sub...), we would encounter a NULL key and conclude\
    \ that sub... was\n   unsigned.  However, if we descend from \"testing...\" and\
    \ find keys\n   \"domain....\" then we can conclude that \"sub...\" is secured.\n\
    \   Note that this example assumes one-label deep zones, and assumes that\n  \
    \ we do not configure overlapping islands of security.  To be clear,\n   the definition\
    \ given should exclude \"short.xy.test.\" from being a\n   closest security root\
    \ for \"short.xy.\" even though 2 labels match.\n   Overlapping islands of security\
    \ introduce no conceptually interesting\n   ideas and do not impact the protocol\
    \ in anyway.  However, protocol\n   implementers are advised to make sure their\
    \ code is not thrown for a\n   loop by overlaps.  Overlaps are sure to be configuration\
    \ problems as\n   islands of security grow to encompass larger regions of the\
    \ name\n   space.\n"
- title: 1.3 Parent Statement of Child Security
  contents:
  - "1.3 Parent Statement of Child Security\n   In 1.1 of this document, there is\
    \ the comment \"the parent states that\n   the child is secured.\"  This has caused\
    \ quite a bit of confusion.\n   The need to have the parent \"state\" the status\
    \ of a child is derived\n   from the following observation.  If you are looking\
    \ to see if an\n   answer is secured, that it comes from an \"island of security\"\
    \ and is\n   properly signed, you must begin at the (appropriate) root of the\n\
    \   island of security.\n   To find the answer you are inspecting, you may have\
    \ to descend\n   through zones within the island of security.  Beginning with\
    \ the\n   trusted root of the island, you descend into the next zone down.  As\n\
    \   you trust the upper zone, you need to get data from it about the next\n  \
    \ zone down, otherwise there is a vulnerable point in which a zone can\n   be\
    \ hijacked. When or if you reach a point of traversing from a\n   secured zone\
    \ to an unsecured zone, you have left the island of\n   security and should conclude\
    \ that the answer is unsecured.\n   However, in RFC 2535, section 2.3.4, these\
    \ words seem to conflict\n   with the need to have the parent \"state\" something\
    \ about a child:\n      There MUST be a zone KEY RR, signed by its superzone,\
    \ for every\n      subzone if the superzone is secure.  This will normally appear\
    \ in\n      the subzone and may also be included in the superzone.  But, in\n\
    \      the case of an unsecured subzone which can not or will not be\n      modified\
    \ to add any security RRs, a KEY declaring the subzone to\n      be unsecured\
    \ MUST appear with the superzone signature in the\n      superzone, if the superzone\
    \ is secure.\n   The confusion here is that in RFC 2535, a secured parent states\
    \ that\n   a child is secured by SAYING NOTHING (\"may also be\" as opposed to\n\
    \   \"MUST also be\").  This is counter intuitive, the fact that an absence\n\
    \   of data means something is \"secured.\"  This notion, while acceptable\n \
    \  in a theoretic setting has met with some discomfort in an operation\n   setting.\
    \  However, the use of \"silence\" to state something does\n   indeed work in\
    \ this case, so there hasn't been sufficient need\n   demonstrated to change the\
    \ definition.\n"
- title: 1.4 Impact on RFC 2535
  contents:
  - "1.4 Impact on RFC 2535\n   This document updates sections of RFC 2535.  The definition\
    \ of a\n   secured zone is an update to section 3.4 of the RFC.  Section 3.4 is\n\
    \   updated to eliminate the definition of experimental keys and\n   illustrate\
    \ a way to still achieve the functionality they were\n   designed to provide.\
    \  Section 3.1.3 is updated by the specifying the\n   value of the protocol octet\
    \ in a zone key.\n"
- title: 1.5 "MUST" and other key words
  contents:
  - "1.5 \"MUST\" and other key words\n   The key words \"MUST\", \"REQUIRED\", \"\
    SHOULD\", \"RECOMMENDED\", and \"MAY\"\n   in this document are to be interpreted\
    \ as described in [RFC 2119].\n   Currently, only \"MUST\" is used in this document.\n"
- title: 2 Status of a Zone
  contents:
  - "2 Status of a Zone\n   In this section, rules governing a zone's DNSSEC status\
    \ are\n   presented.  There are three levels of security defined: global,\n  \
    \ local, and unsecured.  A zone is globally secure when it complies\n   with the\
    \ strictest set of DNSSEC processing rules.  A zone is locally\n   secured when\
    \ it is configured in such a way that only resolvers that\n   are appropriately\
    \ configured see the zone as secured.  All other\n   zones are unsecured.\n  \
    \ Note: there currently is no document completely defining DNSSEC\n   verification\
    \ rules.  For the purposes of this document, the strictest\n   rules are assumed\
    \ to state that the verification chain of zone keys\n   parallels the delegation\
    \ tree up to the root zone.  (See 2.b below.)\n   This is not intended to disallow\
    \ alternate verification paths, just\n   to establish a baseline definition.\n\
    \   To avoid repetition in the rules below, the following terms are\n   defined.\n\
    \   2.a Zone signing KEY RR - A KEY RR whose flag field has the value 01\n   for\
    \ name type (indicating a zone key) and either value 00 or value 01\n   for key\
    \ type (indicating a key permitted to authenticate data).  (See\n   RFC 2535,\
    \ section 3.1.2).  The KEY RR also has a protocol octet value\n   of DNSSEC (3)\
    \ or ALL (255).\n   The definition updates RFC 2535's definition of a zone key.\
    \  The\n   requirement that the protocol field be either DNSSEC or ALL is a new\n\
    \   requirement (a change to section 3.1.3.)\n   2.b On-tree Validation - The\
    \ authorization model in which only the\n   parent zone is recognized to supply\
    \ a DNSSEC-meaningful signature\n   that is used by a resolver to build a chain\
    \ of trust from the child's\n   keys to a recognized root of security.  The term\
    \ \"on-tree\" refers to\n   following the DNS domain hierarchy (upwards) to reach\
    \ a trusted key,\n   presumably the root key if no other key is available.  The\
    \ term\n   \"validation\" refers to the digital signature by the parent to prove\n\
    \   the integrity, authentication and authorization of the child's key to\n  \
    \ sign the child's zone data.\n   2.c Off-tree Validation - Any authorization\
    \ model that permits domain\n   names other than the parent's to provide a signature\
    \ over a child's\n   zone keys that will enable a resolver to trust the keys.\n"
- title: 2.1 Globally Secured
  contents:
  - "2.1 Globally Secured\n   A globally secured zone, in a nutshell, is a zone that\
    \ uses only\n   mandatory to implement algorithms (RFC 2535, section 3.2) and\
    \ relies\n   on a key certification chain that parallels the delegation tree (on-\n\
    \   tree validation).  Globally secured zones are defined by the\n   following\
    \ rules.\n   2.1.a. The zone's apex MUST have a KEY RR set.  There MUST be at\n\
    \   least one zone signing KEY RR (2.a) of a mandatory to implement\n   algorithm\
    \ in the set.\n   2.1.b. The zone's apex KEY RR set MUST be signed by a private\
    \ key\n   belonging to the parent zone.  The private key's public companion\n\
    \   MUST be a zone signing KEY RR (2.a) of a mandatory to implement\n   algorithm\
    \ and owned by the parent's apex.\n   If a zone cannot get a conforming signature\
    \ from the parent zone, the\n   child zone cannot be considered globally secured.\
    \  The only exception\n   to this is the root zone, for which there is no parent\
    \ zone.\n   2.1.c. NXT records MUST be deployed throughout the zone.  (Clarifies\n\
    \   RFC 2535, section 2.3.2.)  Note: there is some operational discomfort\n  \
    \ with the current NXT record.  This requirement is open to\n   modification when\
    \ two things happen.  First, an alternate mechanism\n   to the NXT is defined\
    \ and second, a means by which a zone can\n   indicate that it is using an alternate\
    \ method.\n   2.1.d. Each RR set that qualifies for zone membership MUST be signed\n\
    \   by a key that is in the apex's KEY RR set and is a zone signing KEY\n   RR\
    \ (2.a) of a mandatory to implement algorithm.  (Updates 2535,\n   section 2.3.1.)\n\
    \   Mentioned earlier, the root zone is a special case.  The root zone\n   will\
    \ be considered to be globally secured provided that if conforms\n   to the rules\
    \ for locally secured, with the exception that rule 2.1.a.\n   be also met (mandatory\
    \ to implement requirement).\n"
- title: 2.2 Locally Secured
  contents:
  - "2.2 Locally Secured\n   The term \"locally\" stems from the likely hood that\
    \ the only resolvers\n   to be configured for a particular zone will be resolvers\
    \ \"local\" to\n   an organization.\n   A locally secured zone is a zone that\
    \ complies with rules like those\n   for a globally secured zone with the following\
    \ exceptions.  The\n   signing keys may be of an algorithm that is not mandatory\
    \ to\n   implement and/or the verification of the zone keys in use may rely on\n\
    \   a verification chain that is not parallel to the delegation tree\n   (off-tree\
    \ validation).\n   2.2.a. The zone's apex MUST have a KEY RR set.  There MUST\
    \ be at\n   least one zone signing KEY RR (2.a) in the set.\n   2.2.b. The zone's\
    \ apex KEY RR set MUST be signed by a private key and\n   one of the following\
    \ two subclauses MUST hold true.\n   2.2.b.1 The private key's public companion\
    \ MUST be pre-configured in\n   all the resolvers of interest.\n   2.2.b.2 The\
    \ private key's public companion MUST be a zone signing KEY\n   RR (2.a) authorized\
    \ to provide validation of the zone's apex KEY RR\n   set, as recognized by resolvers\
    \ of interest.\n   The previous sentence is trying to convey the notion of using\
    \ a\n   trusted third party to provide validation of keys.  If the domain\n  \
    \ name owning the validating key is not the parent zone, the domain\n   name must\
    \ represent someone the resolver trusts to provide\n   validation.\n   2.2.c.\
    \ NXT records MUST be deployed throughout the zone.  Note: see\n   the discussion\
    \ following 2.1.c.\n   2.2.d. Each RR set that qualifies for zone membership MUST\
    \ be signed\n   by a key that is in the apex's KEY RR set and is a zone signing\
    \ KEY\n   RR (2.a).  (Updates 2535, section 2.3.1.)\n"
- title: 2.3 Unsecured
  contents:
  - "2.3 Unsecured\n   All other zones qualify as unsecured.  This includes zones\
    \ that are\n   designed to be experimentally secure, as defined in a later section\n\
    \   on that topic.\n"
- title: 2.4 Wrap up
  contents:
  - "2.4 Wrap up\n   The designation of globally secured, locally secured, and unsecured\n\
    \   are merely labels to apply to zones, based on their contents.\n   Resolvers,\
    \ when determining whether a signature is expected or not,\n   will only see a\
    \ zone as secured or unsecured.\n   Resolvers that follow the most restrictive\
    \ DNSSEC verification rules\n   will only see globally secured zones as secured,\
    \ and all others as\n   unsecured, including zones which are locally secured.\
    \  Resolvers that\n   are not as restrictive, such as those that implement algorithms\
    \ in\n   addition to the mandatory to implement algorithms, will see some\n  \
    \ locally secured zones as secured.\n   The intent of the labels \"global\" and\
    \ \"local\" is to identify the\n   specific attributes of a zone.  The words are\
    \ chosen to assist in the\n   writing of a document recommending the actions a\
    \ zone administrator\n   take in making use of the DNS security extensions.  The\
    \ words are\n   explicitly not intended to convey a state of compliance with DNS\n\
    \   security standards.\n"
- title: 3 Experimental Status
  contents:
  - "3 Experimental Status\n   The purpose of an experimentally secured zone is to\
    \ facilitate the\n   migration from an unsecured zone to a secured zone.  This\
    \ distinction\n   is dropped.\n   The objective of facilitating the migration\
    \ can be achieved without a\n   special designation of an experimentally secure\
    \ status.\n   Experimentally secured is a special case of locally secured.  A\
    \ zone\n   administrator can achieve this by publishing a zone with signatures\n\
    \   and configuring a set of test resolvers with the corresponding public\n  \
    \ keys.  Even if the public key is published in a KEY RR, as long as\n   there\
    \ is no parent signature, the resolvers will need some pre-\n   configuration\
    \ to know to process the signatures.  This allows a zone\n   to be secured with\
    \ in the sphere of the experiment, yet still be\n   registered as unsecured in\
    \ the general Internet.\n"
- title: 4 IANA Considerations
  contents:
  - "4 IANA Considerations\n   This document does not request any action from an assigned\
    \ number\n   authority nor recommends any actions.\n"
- title: 5 Security Considerations
  contents:
  - "5 Security Considerations\n   Without a means to enforce compliance with specified\
    \ protocols or\n   recommended actions, declaring a DNS zone to be \"completely\"\
    \ secured\n   is impossible.  Even if, assuming an omnipotent view of DNS, one\
    \ can\n   declare a zone to be properly configured for security, and all of the\n\
    \   zones up to the root too, a misbehaving resolver could be duped into\n   believing\
    \ bad data.  If a zone and resolver comply, a non-compliant\n   or subverted parent\
    \ could interrupt operations.  The best that can be\n   hoped for is that all\
    \ parties are prepared to be judged secure and\n   that security incidents can\
    \ be traced to the cause in short order.\n"
- title: 6 Acknowledgements
  contents:
  - "6 Acknowledgements\n   The need to refine the definition of a secured zone has\
    \ become\n   apparent through the efforts of the participants at two DNSSEC\n\
    \   workshops, sponsored by the NIC-SE (.se registrar), CAIRN (a DARPA-\n   funded\
    \ research network), and other workshops.  Further discussions\n   leading to\
    \ the document include Olafur Gudmundsson, Russ Mundy,\n   Robert Watson, and\
    \ Brian Wellington.  Roy Arends, Ted Lindgreen and\n   others have contributed\
    \ significant input via the namedroppers\n   mailing list.\n"
- title: 7 References
  contents:
  - "7 References\n   [RFC1034] Mockapetris, P., \"Domain Names - Concepts and Facilities\"\
    ,\n             STD 13, RFC 1034, November 1987.\n   [RFC1035] Mockapetris, P.,\
    \ \"Domain Names - Implementation and\n             Specification\", STD 13, RFC\
    \ 1035, November 1987.\n   [RFC2119] Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC2136] Vixie, P., (Ed.), Thomson, S., Rekhter, Y. and J. Bound,\n     \
    \        \"Dynamic Updates in the Domain Name System\", RFC 2136,\n          \
    \   April 1997.\n   [RFC2535] Eastlake, D., \"Domain Name System Security Extensions\"\
    , RFC\n             2535, March 1999.\n   [RFC3007] Wellington, B., \"Simple Secure\
    \ Domain Name System (DNS)\n             Dynamic Update\", RFC 3007, November\
    \ 2000.\n   [RFC3008] Wellington, B., \"Domain Name System Security (DNSSEC)\n\
    \             Signing Authority\", RFC 3008, November 2000.\n"
- title: 10 Author's Address
  contents:
  - "10 Author's Address\n   Edward Lewis\n   NAI Labs\n   3060 Washington Road Glenwood\n\
    \   MD 21738\n   Phone: +1 443 259 2352\n   EMail: lewis@tislabs.com\n"
- title: 11 Full Copyright Statement
  contents:
  - "11 Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
