- title: __initial_text__
  contents:
  - '        SIEVE Email Filtering: Spamtest and VirusTest Extensions

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The SIEVE mail filtering language \"spamtest\" and \"virustest\"\
    \n   extensions permit users to use simple, portable commands for spam and\n \
    \  virus tests on email messages.  Each extension provides a new test\n   using\
    \ matches against numeric 'scores'.  It is the responsibility of\n   the underlying\
    \ SIEVE implementation to do the actual checks that\n   result in values returned\
    \ by the tests.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Overview  . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  SIEVE Extensions . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n       2.1.  General Considerations . . . . . . . . . . . . .\
    \ . . . .  3\n       2.2.  Test spamtest. . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n       2.3.  Test virustest . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   3.  Security Considerations  . . . . . . . . . . . . . . . . . .\
    \ .  5\n   4.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .\
    \  6\n       4.1.  spamtest registration. . . . . . . . . . . . . . . . . .  6\n\
    \       4.2.  virustest registration . . . . . . . . . . . . . . . . .  6\n  \
    \ 5.  References . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n    \
    \   5.1.  Normative References . . . . . . . . . . . . . . . . . .  7\n      \
    \ 5.2.  Informative References . . . . . . . . . . . . . . . . .  7\n   6.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . .  7\n   7.  Intellectual Property\
    \ Rights Statement . . . . . . . . . . . .  7\n   8.  Author's Address . . . .\
    \ . . . . . . . . . . . . . . . . . . .  8\n   9.  Full Copyright Statement .\
    \ . . . . . . . . . . . . . . . . . .  9\n"
- title: 1.  Introduction and Overview
  contents:
  - "1.  Introduction and Overview\n   SIEVE scripts are frequently being used to\
    \ do spam and virus\n   filtering based on either implicit script tests (e.g.,\
    \ tests for\n   'black-listed' senders directly encoded in the SIEVE script),\
    \ or via\n   testing messages modified by some external spam or virus checker\
    \ that\n   handled the message prior to SIEVE.  The use of third-party spam and\n\
    \   virus checker tools poses a problem since each tool has its own way\n   of\
    \ indicating the result of its checks.  These usually take the form\n   of a header\
    \ added to the message, the content of which indicates the\n   status using some\
    \ syntax defined by the particular tool.  Each user\n   has to then create their\
    \ own SIEVE scripts to match the contents of\n   these headers to do filtering.\
    \  This requires the script to stay in\n   synchronization with the third party\
    \ tool as it gets updated or\n   perhaps replaced with another.  Thus scripts\
    \ become tied to specific\n   environments, and lose portability.\n   The purpose\
    \ of this document is to introduce two SIEVE tests that can\n   be used to implement\
    \ 'generic' tests for spam and viruses in messages\n   processed via SIEVE scripts.\
    \  These tests return a string containing\n   a range of numeric values that indicate\
    \ the severity of spam or\n   viruses in a message, or a string that indicates\
    \ the message has not\n   passed through any spam or virus checking tools.  The\
    \ spam and virus\n   checks themselves are handled by the underlying SIEVE implementation\n\
    \   in whatever manner is appropriate, and the implementation maps the\n   results\
    \ of these checks into the numeric ranges defined by the new\n   tests.  Thus\
    \ a SIEVE implementation can have a spam test that\n   implicitly checks for third-party\
    \ spam tool headers and determines\n   how those map into the spamtest numeric\
    \ range.\n   In order to do numeric comparisons against the returned strings,\n\
    \   server implementations MUST also support the SIEVE relational\n   [RELATIONAL]\
    \ extension, in addition to the extensions described here.\n   All examples below\
    \ assume the relational extension is present.\n   Conventions for notations are\
    \ as in [SIEVE] section 1.1, including\n   use of [KEYWORDS].\n   The term 'spam'\
    \ is used in this document to refer to unsolicited or\n   unwanted email messages.\
    \  This document does not attempt to define\n   what exactly constitutes spam,\
    \ or how it should be identified, or\n   what actions should be taken when detected.\n\
    \   The term 'virus' is used in this document to refer to any type of\n   message\
    \ whose content can cause malicious damage.  This document does\n   not attempt\
    \ to define what exactly constitutes a virus, or how it\n   should be identified,\
    \ or what actions should be taken when detected.\n"
- title: 2.  SIEVE Extensions
  contents:
  - '2.  SIEVE Extensions

    '
- title: 2.1.  General Considerations
  contents:
  - "2.1.  General Considerations\n   The \"spamtest\" and \"virustest\" tests described\
    \ below both return a\n   string that starts with a numeric value, followed by\
    \ an optional\n   space (%x20) character and optional arbitrary text.  The numeric\n\
    \   value can be compared to specific values using the SIEVE relational\n   [RELATIONAL]\
    \ extension in conjunction with the \"i;ascii-numeric\"\n   comparator [ACAP],\
    \ which will test for the presence of a numeric\n   value at the start of the\
    \ string, ignoring any additional text in the\n   string.  The additional text\
    \ can be used to carry implementation\n   specific details about the tests performed\
    \ and descriptive comments\n   about the result.  Tests can be done using standard\
    \ string\n   comparators against this text if it helps to refine behavior, however\n\
    \   this will break portability of the script as the text will likely be\n   specific\
    \ to a particular implementation.\n"
- title: 2.2.  Test spamtest
  contents:
  - "2.2.  Test spamtest\n      Syntax: spamtest [COMPARATOR] [MATCH-TYPE] <value:\
    \ string>\n   SIEVE implementations that implement the \"spamtest\" test have\
    \ an\n   identifier of \"spamtest\" for use with the capability mechanism.\n \
    \  The \"spamtest\" test evaluates to true if the spamtest result matches\n  \
    \ the value.  The type of match is specified by the optional match\n   argument,\
    \ which defaults to \":is\" if not specified.\n   The spamtest result is a string\
    \ starting with a numeric value in the\n   range \"0\" (zero) through \"10\",\
    \ with meanings summarized below:\n      spamtest    interpretation\n      value\n\
    \         0          message was not tested for spam\n         1          message\
    \ was tested and is clear of spam\n         2 - 9      message was tested and\
    \ has a varying likelihood of\n                    containing spam in increasing\
    \ order\n         10         message was tested and definitely contains spam\n\
    \   The underlying SIEVE implementation will map whatever spam check is\n   done\
    \ into this numeric range, as appropriate.\n      Examples:\n         require\
    \ [\"spamtest\", \"fileinto\",\n                  \"relational\", \"comparator-i;ascii-numeric\"\
    ];\n         if spamtest :value \"eq\" :comparator \"i;ascii-numeric\" \"0\"\n\
    \         {\n             fileinto \"INBOX.unclassified\";\n         }\n     \
    \    elsif spamtest :value \"ge\" :comparator \"i;ascii-numeric\" \"3\"\n    \
    \     {\n             fileinto \"INBOX.spam-trap\";\n         }\n   In this example,\
    \ any message that has not passed through a spam check\n   tool will be filed\
    \ into the mailbox \"INBOX.unclassified\".  Any\n   message with a spamtest value\
    \ greater than or equal to \"3\" is filed\n   into a mailbox called \"INBOX.spam-trap\"\
    \ in the user's mailstore.\n"
- title: 2.3.  Test virustest
  contents:
  - "2.3.  Test virustest\n      Syntax: virustest [COMPARATOR] [MATCH-TYPE] <value:\
    \ string>\n   SIEVE implementations that implement the \"virustest\" test have\
    \ an\n   identifier of \"virustest\" for use with the capability mechanism.\n\
    \   The \"virustest\" test evaluates to true if the virustest result\n   matches\
    \ the value.  The type of match is specified by the optional\n   match argument,\
    \ which defaults to \":is\" if not specified.\n   The virustest result is a string\
    \ starting with a numeric value in the\n   range \"0\" (zero) through \"5\", with\
    \ meanings summarized below:\n      virustest   interpretation\n      value\n\
    \         0          message was not tested for viruses\n         1          message\
    \ was tested and contains no known viruses\n         2          message was tested\
    \ and contained a known virus which\n                    was replaced with harmless\
    \ content\n         3          message was tested and contained a known virus\n\
    \                    which was \"cured\" such that it is now harmless\n      \
    \   4          message was tested and possibly contains a\n                  \
    \  known virus\n         5          message was tested and definitely contains\
    \ a\n                    known virus\n   The underlying SIEVE implementation will\
    \ map whatever virus checks\n   are done into this numeric range, as appropriate.\
    \  If the message has\n   not been categorized by any virus checking tools, then\
    \ the virustest\n   result is \"0\".\n   Example:\n      require [\"virustest\"\
    , \"fileinto\",\n               \"relational\", \"comparator-i;ascii-numeric\"\
    ];\n      if virustest :value \"eq\" :comparator \"i;ascii-numeric\" \"0\"\n \
    \     {\n          fileinto \"INBOX.unclassified\";\n      }\n      if virustest\
    \ :value \"eq\" :comparator \"i;ascii-numeric\" \"4\"\n      {\n          fileinto\
    \ \"INBOX.quarantine\";\n      }\n      elsif virustest :value \"eq\" :comparator\
    \ \"i;ascii-numeric\" \"5\"\n      {\n          discard;\n      }\n   In this\
    \ example, any message that has not passed through a virus\n   check tool will\
    \ be filed into the mailbox \"INBOX.unclassified\".  Any\n   message with a virustest\
    \ value equal to \"4\" is filed into a mailbox\n   called \"INBOX.quarantine\"\
    \ in the user's mailstore.  Any message with\n   a virustest value equal to \"\
    5\" is discarded (removed) and not\n   delivered to the user's mailstore.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   SIEVE implementations SHOULD ensure that \"spamtest\"\
    \ and \"virustest\"\n   tests can only occur for messages that have gone through\
    \ a legitimate\n   spam or virus check process.  If such checks rely on the addition\
    \ of\n   special headers to messages, it is the responsibility of the\n   implementation\
    \ to ensure that such headers cannot be spoofed by the\n   sender, to prevent\
    \ the implementation from being tricked into\n   returning the wrong result for\
    \ the test.\n   Server administrators MUST ensure that the virus checking tools\
    \ are\n   kept up to date, to provide reasonable protection for users using the\n\
    \   \"virustest\" test.  Users should be made aware of the fact that the\n   \"\
    virustest\" test does not provide a 100% reliable way to remove all\n   viruses,\
    \ and they should continue to exercise caution when dealing\n   with messages\
    \ of unknown content and origin.\n   Beyond that, the \"spamtest\" and \"virustest\"\
    \ extensions do not raise\n   any security considerations that are not present\
    \ in the base [SIEVE]\n   protocol, and these issues are discussed in [SIEVE].\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   The following templates specify the IANA registration\
    \ of the Sieve\n   extensions specified in this document:\n"
- title: 4.1.  spamtest registration
  contents:
  - "4.1.  spamtest registration\n   To: iana@iana.org\n   Subject: Registration of\
    \ new Sieve extension\n   Capability name: spamtest\n   Capability keyword: spamtest\n\
    \   Capability arguments: N/A\n   Standards Track/IESG-approved RFC XXXX: this\
    \ RFC\n   Person and email address to contact for further information:\n     \
    \ Cyrus Daboo\n      Cyrusoft International, Inc.\n      5001 Baum Blvd., Suite\
    \ 780,\n      Pittsburgh, PA 15213\n      U.S.A.\n      <mailto:daboo@cyrusoft.com>\n\
    \   This information has been added to the list of sieve extensions given\n  \
    \ on http://www.iana.org/assignments/sieve-extensions.\n"
- title: 4.2.  virustest registration
  contents:
  - "4.2.  virustest registration\n   To: iana@iana.org\n   Subject: Registration\
    \ of new Sieve extension\n   Capability name: virustest\n   Capability keyword:\
    \ virustest\n   Capability arguments: N/A\n   Standards Track/IESG-approved RFC\
    \ XXXX: this RFC\n   Person and email address to contact for further information:\n\
    \      Cyrus Daboo\n      Cyrusoft International, Inc.\n      5001 Baum Blvd.,\
    \ Suite 780,\n      Pittsburgh, PA 15213\n      U.S.A.\n      <mailto:daboo@cyrusoft.com>\n\
    \   This information has been added to the list of sieve extensions given\n  \
    \ on http://www.iana.org/assignments/sieve-extensions.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [KEYWORDS]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RELATIONAL] Segmuller, W., \"Sieve Extension: Relational Tests\"\
    , RFC\n                3431, December 2002.\n   [SIEVE]      Showalter, T., \"\
    Sieve: A Mail Filtering Language\", RFC\n                3028, January 2001.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [ACAP]       Newman, C. and J. Myers, \"ACAP\
    \ -- Application\n                Configuration Access Protocol\", RFC 2244, November\
    \ 1997.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Thanks to Tony Hansen, Jutta Degener, Ned Freed, Ashish\
    \ Gawarikar and\n   Nigel Swinson for comments and corrections.\n"
- title: 7.  Intellectual Property Rights Statement
  contents:
  - "7.  Intellectual Property Rights Statement\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 8.  Author's Address
  contents:
  - "8.  Author's Address\n   Cyrus Daboo\n   Cyrusoft International, Inc.\n   5001\
    \ Baum Blvd., Suite 780,\n   Pittsburgh, PA 15213\n   U.S.A.\n   EMail: daboo@cyrusoft.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
