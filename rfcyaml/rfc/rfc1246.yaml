- title: __initial_text__
  contents:
  - "                   Experience with the OSPF protocol\nStatus of this Memo\nThis\
    \ memo provides information for the Internet community. It does not\nspecify any\
    \ Internet standard. Distribution of this memo is unlimited.\nAbstract\nThis is\
    \ the second of two reports on the OSPF protocol. These reports\nare required\
    \ by the IAB/IESG in order for an Internet routing protocol\nto advance to Draft\
    \ Standard Status. OSPF is a TCP/IP routing protocol,\ndesigned to be used internal\
    \ to an Autonomous System (in other words,\nOSPF is an Interior Gateway Protocol).\n\
    OSPF is currently designated as a Proposed Standard. Version 1 of the\nOSPF protocol\
    \ was published in RFC 1131. Since then OSPF version 2 has\nbeen developed. Version\
    \ 2 has been documented in RFC 1247.  The changes\nbetween version 1 and version\
    \ 2 of the OSPF protocol are explained in\nAppendix F of RFC 1247. It is OSPF\
    \ Version 2 that is the subject of this\nreport.\nThis report documents experience\
    \ with OSPF V2. This includes reports on\ninteroperability testing, field experience,\
    \ simulations and the current\nstate of OSPF implementations. It also presents\
    \ a summary of the OSPF\nManagement Information Base (MIB), and a summary of OSPF\
    \ authentication\nmechanism.\nPlease send comments to ospf@trantor.umd.edu.\n\
    1.0  Introduction\nThis document addresses, for OSPF V2, the requirements set\
    \ forth by the\nIAB/IESG for an Internet routing protocol to advance to Draft\
    \ Standard\nstate. This requirements are briefly summarized below. The remaining\n\
    sections of this report document how OSPF V2 satisfies these\nrequirements:\n\
    o  The specification for the routing protocol must be well written such\n   that\
    \ independent, interoperable implementations can be developed\n   solely based\
    \ on the specification. For example, it should be possible\n   to develop an interoperable\
    \ implementation without consulting the\n   original developers of the routing\
    \ protocol.\no  A Management Information Base (MIB) must be written for the protocol.\n\
    \   The MIB must be in the standardization process, but does not need to\n   be\
    \ at the same level of standardization as the routing protocol.\no  The security\
    \ architecture of the protocol must be set forth\n   explicitly. The security\
    \ architecture must include mechanisms for\n   authenticating routing messages\
    \ and may include other forms of\n   protection.\no  Two or more interoperable\
    \ implementations must exist. At least two\n   must be written independently.\n\
    o  There must be evidence that all features of the protocol have been\n   tested,\
    \ running between at least two implementations. This must\n   include that all\
    \ of the security features have been demonstrated to\n   operate, and that the\
    \ mechanisms defined in the protocol actually\n   provide the intended protection.\n\
    o  There must be significant operational experience. This must include\n   running\
    \ in a moderate number routers configured in a moderately\n   complex topology,\
    \ and must be part of the operational Internet. All\n   significant features of\
    \ the protocol must be exercised. In the case\n   of an Interior Gateway Protocol\
    \ (IGP), both interior and exterior\n   routes must be carried (unless another\
    \ mechanism is provided for the\n   exterior routes). In the case of a Exterior\
    \ Gateway Protocol (EGP),\n   it must carry the full complement of exterior routes.\n\
    This report is a compilation of information obtained from many people.\nThe reader\
    \ is referred to specific people when more information on a\nsubject is available.\
    \ People references are gathered into Section 10.0,\nin a format similar to that\
    \ used in [4].\n1.1  Acknowledgments\nThe OSPF protocol has been developed by\
    \ the OSPF Working Group of the\nInternet Engineering Task Force. Many people\
    \ have contributed to this\nreport. They are listed in Section 10.0 of this report.\n\
    2.0  Documentation\nVersion 1 of the OSPF protocol is documented in RFC 1131 [1].\
    \ OSPF\nVersion 2, which supersedes Version 1, has been documented in RFC 1247\n\
    [2]. The differences between OSPF Version 1 and Version 2 are relatively\nminor,\
    \ and are listed in Appendix F of RFC 1247 [2]. All information\npresented in\
    \ this report concerns OSPF V2 unless explicitly mentioned\notherwise.\nThe OSPF\
    \ protocol was developed by the OSPF Working Group of the\nInternet Engineering\
    \ Task Force. This Working Group has a mailing list,\nospf@trantor.umd.edu, where\
    \ discussions of protocol features and\noperation are held. The OSPF Working Group\
    \ also meets during the\nquarterly Internet Engineering Task Force conferences.\
    \ Reports of these\nmeeting are published in the IETF's Proceedings. In addition,\
    \ two\nreports on the OSPF protocol have been presented to the IETF plenary\n\
    (see \"Everything You Ever Wanted to Know about OSPFIGP\" in [5] and \"OSPF\n\
    Update\" in [6]).\nThe OSPF protocol began undergoing field trials in Spring of\
    \ 1990. A\nmailing list, ospf-tests@seka.cso.uiuc.edu, was formed to discuss how\n\
    the field trials were proceeding. This mailing list is maintained by\nRoss Veach\
    \ of the University of Illinois [rrv]. Archives of this list\nare also available.\
    \ There has been quite a bit of discussion on the list\nconcerning OSPF/RIP/EGP\
    \ interaction.\nA OSPF V2 Management Information Base has also been developed\
    \ and\npublished in [3]. For more information, see Section 3.0 of this report.\n\
    There is a free implementation of OSPF available from the University of\nMaryland.\
    \ This implementation was written by Rob Coltun [rcoltun].\nContact Rob for details.\n\
    3.0  MIB\nAn OSPF Management Information Base has been published in RFC 1248 [3].\n\
    The MIB was written by Rob Coltun [rcoltun] and Fred Baker [fbaker]. The\nOSPF\
    \ MIB appears on the mgmt subtree as SMI standard-mib 13.\nThe OSPF MIB was originally\
    \ developed by Rob Coltun of the University of\nMaryland, under contract to Advanced\
    \ Computer Communications. A subset\nof his proposal was implemented to facilitate\
    \ their development, and\nrepresents operational experience of a sort.\nThe MIB\
    \ consists of a general variables group and ten tables:\nTABLE 1. OSPF MIB Organization\n\
    \    Group Name           Description\n    ________________________________________________________________\n\
    \    ospfGeneralGroup     General Global Variables\n    ospfAreaTable        Area\
    \ Descriptions\n    ospfStubAreaTable    Default Metrics, by Type of Service\n\
    \    ospfLsdbTable        Link State Database\n    ospfAreaRangeTable   Address\
    \ Range Specifications\n    ospfHostTable        Directly connected Hosts\n  \
    \  ospfIfTable          OSPF Interface Variables\n    ospfIfMetricTable    Interface\
    \ Metrics, by Type of Service\n    ospfVirtIfTable      Virtual Links\n    ospfNbrTable\
    \         (Non-virtual) OSPF Neighbors\n    ospfVirtNbrTable     Virtual OSPF\
    \ Neighbors\nAs MIBs go, the OSPF MIB is quite large; 105 objects. The following\
    \ are\nsome statistics describing the distribution of the MIB's variables:\no\
    \  11 define the above Group and Tables\no  10 define the Entry in a Table\no\
    \  7 are Counters\no  6 are Gauges\no  68 objects mandated by the OSPF Version\
    \ 2 Specification\nSection D.2 of the OSPF V2 specification [2] lists a set of\
    \ required\nstatistics that an implementation must maintain. These statistics\
    \ have\nbeen incorporated into the OSPF MIB. The MIB's thirteen Counters and\n\
    Gauges enable evaluation of the OSPF protocol's performance in an\noperational\
    \ environment. Most of the remainder of the MIB's variables\nparameterize the\
    \ many features that OSPF provides the network\nadministrator.\nFor more information\
    \ on the MIB contact Fred Baker [fbaker].\n4.0  Security architecture\nIn OSPF,\
    \ all protocol packet exchanges are authenticated. The OSPF\npacket header (which\
    \ is common to all OSPF packets) contains a 16-bit\nAuthentication type field,\
    \ and 64-bits of Authentication data.  Each\nparticular OSPF area must run a single\
    \ authentication scheme, as\nindicated by the Authentication type field. However,\
    \ authentication keys\ncan be configured by the system administrator on a per-network\
    \ basis.\nWhen an OSPF packet is received from a network, the OSPF router first\n\
    verifies that it indicates the correct Authentication type. The router\nthen authenticates\
    \ the packet, running a verification algorithm using\nthe configured authentication\
    \ key, the 64-bits of Authentication data\nand the rest of the OSPF packet data\
    \ as input. The precise algorithm\nused is dictated by the Authentication type.\
    \  Packets failing the\nauthentication algorithm are dropped, and the authentication\
    \ failure is\nnoted in a MIB-accessible variable (see [3]).\nThere are currently\
    \ few Authentication types in use. The current\nassignments are:\nTABLE 2. Current\
    \ OSPF Authentication types.\n  Type code   Algorithm\n  ____________________________________________________________________\n\
    \  0           No authentication performed.\n  1           Simple (clear) password.\n\
    \  2-255       Reserved for assignment by the IANA (iana@isi.edu)\n  > 255   \
    \    Available for local (per-AS) definition.\nFor more information on OSPF's\
    \ authentication procedures, see Sections\n8.1, 8.2, and Appendix E of [2].\n\
    5.0  Implementations\nThe are multiple, interoperable implementations of OSPF\
    \ currently\navailable. This section gives a brief overview of the five\nimplementations\
    \ that have participated in at least one round of\ninteroperability testing. (For\
    \ a detailed discussion of OSPF\ninteroperability testing, see Section 7.0 of\
    \ this report.)  Other\nimplementations do exist, but because of commercial realities\
    \ (e.g., the\nproduct is not yet announced) they unfortunately cannot be listed\
    \ here.\nThe five implementations that have participated in the OSPF\ninteroperability\
    \ testing are (listed in alphabetical order):\no  3com. This implementation was\
    \ wholly developed by 3com. It has\n   participated in all three rounds of interoperability\
    \ testing. It is\n   also the only implementation of OSPF's TOS routing..  The\
    \ 3com\n   implementation consists of approximately 9000 lines of C code,\n  \
    \ including comments but excluding user interface and MIB code.\n   Consult Dino\
    \ Farinacci [dino] for more details.\no  ACC. This implementation is based on\
    \ the University of Maryland code.\n   It participated in the last two rounds\
    \ of interoperability testing.\n   It also contains the only implementation of\
    \ (a precursor to) the OSPF\n   MIB (see Section 3.0 for details), which it uses\
    \ for monitoring and\n   configuration. The ACC implementation consists of approximately\n\
    \   24,000 lines of C code, including its OSPF MIB code. Consult Fred\n   Baker\
    \ [fbaker] for more details.\no  Proteon. This implementation was wholly developed\
    \ by Proteon. It has\n   participated in all three rounds of interoperability\
    \ testing. It is\n   also the only implementation that has a significant amount\
    \ of field\n   experience (see Section 6.0 for details). The Proteon implementation\n\
    \   consists of approximately 9500 lines of C code, including comments\n   but\
    \ excluding user interface code.  Consult John Moy [jmoy] for more\n   details.\n\
    o  Wellfleet. This implementation has participated in all three rounds\n   of\
    \ interoperability testing.  Consult Jonathan Hsu [jhsu] for more\n   details.\n\
    o  University of Maryland. This implementation was developed wholly by\n   Rob\
    \ Coltun at the University of Maryland. It has formed the basis for\n   a number\
    \ of commercial OSPF implementations, and also participated in\n   the latest\
    \ round of interoperability testing. The University of\n   Maryland implementation\
    \ consists of approximately 10,000 lines of C\n   code. Consult Rob Coltun [rcoltun]\
    \ for more details.\nNote that, as required by the IAB/IESG for Draft Standard\
    \ status, there\nare multiple interoperable independent implementations, namely\
    \ those\nfrom 3com, Proteon and the University of Maryland.\n6.0  Operational\
    \ experience\nThis section discusses operational experience with the OSPF protocol.\n\
    Version 1 of the OSPF protocol began to be deployed in the Internet in\nSpring\
    \ of 1990. The results of this original deployment were reported to\nthe mailing\
    \ list ospf-tests@seka.cso.uiuc.edu. (Archives of this mailing\nlist are available\
    \ from Ross Veach [rrv].)  No protocol bugs were found\nin this first deployment,\
    \ although several additional features were\nfound to be desirable.  These new\
    \ features were added to the protocol in\nOSPF Version 2.\nThe OSPF protocol is\
    \ now deployed in a number of places in the Internet.\nIn this section we focus\
    \ on three highly visible systems, namely the\nNASA Sciences Internet, BARRNet\
    \ and OARnet.  The dimensions of these\nthree OSPF systems is summarized in the\
    \ following table:\nTABLE 3. Three operational OSPF deployments\n         Name\
    \      Version 1 date   Version 2 date   # routers\n         _____________________________________________________\n\
    \         NSI       4/13/90          1/1/91           15\n         BARRNet   4/90\
    \             11/90            14\n         OARnet    10/15/90         not yet\
    \          13\nAll the above deployments are using the Proteon OSPF implementation.\n\
    There is one other deployment worth mentioning in this context. 3com has\nstarted\
    \ to deploy OSPF on their corporate network. They have 8 of their\nrouters running\
    \ OSPF (the 3com implementation), and are planning on\ncutting over the remaining\
    \ routers (20 in all). Currently they have two\noperational routers running OSPF\
    \ and RIP simultaneously. One converts\nOSPF data to RIP data, and the other RIP\
    \ data to OSPF data.  For more\ndetails, contact Dino Farinacci [dino].\n6.1 \
    \ NSI\nThe NASA Science Internet (NSI) is a multiprotocol network, currently\n\
    supporting both DECnet and TCP/IP protocols. NSI's mission is to provide\nreliable\
    \ high-speed communications to the NASA science community. The\nNASA Science Internet\
    \ connects with other national networks including\nthe National Science Foundation's\
    \ NSFNET, the Department of Energy's\nESnet and the Department of Defense's MILNET.\
    \  NSI also has\ninternational connections to Japan, Australia, New Zealand, Chile\
    \ and\nseveral European countries.\nFor more information on NSI, contact Jeffrey\
    \ Burgan [jeff] or Milo Medin\n[medin].\n6.1.1  NSI's OSPF system\nNSI was one\
    \ of the initial deployment sites for OSPF Version 1, having\ndeployed the protocol\
    \ in April 1990. NSI has been running OSPF V2 since\n1/1/91. They currently have\
    \ 15 routers in their OSPF system.  This\nsystem is pictured in Figure 1. It consists\
    \ of a nationwide collection\nof serial lines, with ethernets at hub sites. The\
    \ numbers associated to\ninterfaces/links in Figure1 are the associated OSPF costs.\
    \ Note that\ncertain links have been weighted so that they are less preferable\
    \ than\nothers.\nMany of NSI's OSPF routers are speaking either RIP and/or EGP\
    \ as well as\nOSPF. Routes from these other routing protocols are selectively\
    \ imported\ninto their OSPF system as externals. The current number of imported\n\
    externals is 496.\nAll NSI externals are imported as OSPF type 2 metrics. In addition,\
    \ NSI\nuses the OSPF external route tag to manage the readvertisement of\nexternal\
    \ routes. For example, a route learned at one edge of the NSI\nsystem via EGP\
    \ can be tagged with the number of the AS from which it was\nlearned. Then, as\
    \ the OSPF external LSA describing this route is flooded\nthrough the OSPF system,\
    \ this tagging information is distributed to all\nthe other AS boundary routers.\
    \ A router on the other edge of the NSI can\nthen say that it wants to readvertise\
    \ (via EGP) routes learned from one\nparticular AS but not routes learned from\
    \ another AS. This allows NSI to\nimplement transit policies at the granularity\
    \ of Autonomous Systems,\ninstead of network numbers, which greatly reduces the\
    \ network's\nconfiguration burden.\nNSI has also experimented with OSPF stub areas,\
    \ in order to support\nrouters having a small amount of memory.\n6.1.2  NSI -\
    \ Deployment analysis\nNSI ran a couple of experiments after OSPF's deployment\
    \ to test OSPF's\nconvergence time in the face of network failures, and to compare\
    \ the\nlevel of routing traffic in OSPF with the level of routing traffic in\n\
    RIP. These experiments were included in NSI status reports to the OSPF\nplenary.\n\
    The first experiment consisted of running a continuous ICMP ping, and\nthen bringing\
    \ down one of the links in the ping packet's path. They then\ntimed how long it\
    \ took OSPF to find an alternate path, by noticing when\nthe pings resumed. The\
    \ result of this experiment is contained in Milo\nMedin's \"NASA Sciences Internet\
    \ Report\" in [8]. It shows that the\ninterrupted ping resumed in three seconds.\n\
    The second experiment consisted in analyzing the amount of routing\nprotocol traffic\
    \ that flow over an NSI link. One of the NSI links was\ninstalled, but did not\
    \ have any active users yet. For this reason, all\ntraffic that flowed over the\
    \ link was routing protocol traffic. The link\nwas instrumented to continuously\
    \ measure the amount of bandwidth\nconsumed, first in the case where RIP was running,\
    \ and then in the case\nof where OSPF was running. The result is shown graphically\
    \ in Jeffrey\nBurgan's \"NASA Sciences Internet\" report in [9]. It shows that\
    \ OSPF\nconsumes many times less network bandwidth than RIP.\n6.2  BARRNet\nBARRNet\
    \ is the NSFNet regional network in Northern California. At the\npresent time,\
    \ it serves approximately 80 member sites in an area\nstretching from Sacramento\
    \ in the north-east to Monterey in the in the\nsouth-west. Sites are connected\
    \ to the network at speeds from 9.6Kbps to\nfull T1 using Proteon and cisco routers\
    \ as well as a Xylogics terminal\nserver. The membership is composed of a mix\
    \ of university, government,\nand commercial organizations. BARRNet has interconnections\
    \ to the NSFNet\n(peering with both T1 and T3 backbones at Stanford University),\
    \ ESNet\n(peering at LLNL, with additional multi-homed sites at LBL, SLAC, and\n\
    NASA Ames), and DDN national networks (peering at the FIX network at\nNASA Ames),\
    \ and to the statewide networks of the University of\nCalifornia (peering at U.C.\
    \ Berkeley) and the California State\nUniversity system (peering at San Francisco\
    \ State and Sacramento State).\nTopologically, the network consists of fourteen\
    \ OSPF-speaking Proteon\nrouters, which as a \"core\", with six of these redundantly\
    \ connected into\na ring. All \"core\" sites are interconnected via full T1 circuits.\
    \  Other\nmember sites attach as \"stub\" connections to the \"core\" sites. \
    \ The bulk\nof these are connected in a \"star\" configuration at Stanford University,\n\
    with lesser numbers at other \"core\" sites.\nContact Vince Fuller [vaf] for more\
    \ information on BARRNet.\n6.2.1  BARRNet's OSPF system\nBARRNet was also one\
    \ of the initial deployment sites for OSPF Version 1,\nhaving deployed the protocol\
    \ in April 1990. BARRNet has been running\nOSPF V2 since November 1990. They currently\
    \ have 14 routers in their\nOSPF system. The BARRNet OSPF system is pictured in\
    \ Figure 2.  It\nconsists of a collection of T1 serial lines, with ethernets at\
    \ hub\nsites.\nMost of BARRNet's OSPF routers are speaking either RIP and/or EGP\
    \ as\nwell as OSPF. Routes from these other routing protocols are selectively\n\
    imported into their OSPF system as externals. A large number of external\nroutes\
    \ are imported; the current number is1816. The bulk of these are\nthe T1 NSFNet\
    \ routes, followed by several hundred NSN routes, around\n60-80 BARRNet routes\
    \ from the non-OSPF system, and several dozen from\nESNet.\nAll external routes\
    \ are imported into the BARRNet system as external\ntype 1 metrics. In addition,\
    \ BARRnet, like NSI, uses the OSPF's external\nroute tagging feature to help manage\
    \ the readvertisement of external\nroutes via EGP.\nBARRnet is also using four\
    \ stub OSPF areas in order to collapse subnet\ninformation. These stub areas all\
    \ consist of a single LAN. They do not\ncontain any OSPF routers in their interiors.\n\
    6.2.2  BARRNet - Deployment analysis\nInitial deployment of OSPF Version 1 in\
    \ BARRNet pointed to the need for\ntwo new protocol features that were added to\
    \ OSPF V2, namely:\no  Addition of the forwarding address to OSPF external LSAs.\
    \ This\n   eliminated the extra hops that were being taken in BARRNet when only\n\
    \   routers BR5 and BR6 were exchanging EGP information with the NSS (see\n  \
    \ Figure 2). Without the forwarding address feature, that meant that\n   NSFNet\
    \ traffic handled by routers BR10, BR16 and BR28 was taking an\n   extra hop to\
    \ get to the NSS.\no  Addition of stub areas. This was an attempt to get OSPF\
    \ running on\n   some of the BARRNet routers that had insufficient memory to deal\
    \ with\n   all of BARRNet's external routes.\n6.3  OARnet\nOARnet, the Ohio Academic\
    \ Resources Network, is the regional network for\nthe state of Ohio. It serves\
    \ the entire higher education community,\nproviding Ohio schools access to colleagues\
    \ worldwide.  The Ohio\nSupercomputer Center and the NSF Supercomputer Centers\
    \ are reached\nthrough OARnet. Libraries, databases, national and international\n\
    laboratories and research centers are accessible to faculty, helping\nmake Ohio\
    \ schools competitive.\nOARnet was established in 1987 to provide state-wide access\
    \ to the CRAY\nat the Ohio Supercomputer Center in Columbus, Ohio. Since then\
    \ it has\nevolved into a network supporting all aspects of higher education within\n\
    Ohio. A primary goal of OARnet is to facilitate collaborative projects\nand sharing\
    \ of resources between institutions, including those outside\nthe state. OARnet\
    \ connections are available to Ohio academic\ninstitutions and corporations engaged\
    \ in research, product development,\nor instruction. Colleges, universities, and\
    \ industries currently use\nOARnet connections to communicate within the state\
    \ and with colleagues\naround the country.\nOARnet uses the Internet (TCP/IP)\
    \ and DECNET protocols. OARnet\nparticipants using TP/IP protocols are connected\
    \ to the worldwide\nInternet, which includes all the major networks open to non-classified\n\
    research. OARnet is also connected to NSFNet, the national research and\neducation\
    \ network sponsored by the National Science Foundation. It has\ngateways to BITNET,\
    \ CSNET, CICNet (a network connecting the Big Ten\nuniversities), and the NASA\
    \ Science Internet.\nFor more information on OARnet, contact Kannan Varadhan [kannan].\n\
    6.3.1  OARnet's OSPF system\nOARnet has been running OSPF Version 1 since October\
    \ 15, 1990. They\ncurrently have 14 routers in their OSPF system. The OARnet OSPF\
    \ system\nis pictured in Figure 3.\nThere are 29 sites connected directly to the\
    \ OARnet backbone. All 13 of\nOARnet's OSPF routers act as ASBRs. There are 40\
    \ OSPF internal routes on\nOARnet's network, and they import about 120 routes\
    \ from RIP.  OARnet\nruns EGP on the DMZnet at Columbus, which connects them to\
    \ CICNet. The\nrouter connecting OARnet to DMZnet (OAR1 in Figure 3) runs EGP\
    \ on the\nDMZnet side, and OSPF and RIP on the OARnet backbone. No EGP routes\
    \ are\nimported into the OSPF system. The OAR1 router is configured to generate\n\
    a default when EGP routes are available. The OAR1 router is the keystone\nfor\
    \ routing on OARnet's network, in that it acts as an intermediary for\nall of\
    \ OARnet's RIP centric routers.\nOARnet uses the Event Logging System on its Proteon\
    \ routers to generate\ntraps for \"interesting\" events related to routing. They\
    \ have these traps\nsent to an SNMP management station, where the logs are collected\
    \ for\nlater perusal.\n6.3.2  OARnet - Deployment analysis\nOARnet is monitoring\
    \ their OSPF system via collection of traps on their\nSNMP management station.\
    \ The following is a report on their\nobservations. It has been edited slightly\
    \ to conform better with the\nother text and maps presented in this report. For\
    \ more information,\ncontact Kannan Varadhan [kannan]:\n3 of our 10 DS1 circuits\
    \ are on digital microwave, and these tend to\nflap occasionally. Our observations\
    \ indicate that the routers bring up\nlinks, and adjacencies, on average, in about\
    \ 2 seconds.  Routes fallback\nto alternate backup paths instantly. Whole blocks\
    \ of routes cut over the\ninstant the adjacencies are formed.\nIn contrast to\
    \ this, our RIP routes would take about 3-6 minutes to\ncutover, and, on occasion,\
    \ would not cut back to the preferred paths.\nThis was our prime motivation in\
    \ switching to OSPF.\nWe attempted to duplicate Milo Medin's ping test to dramatically\n\
    illustrate the performance of RIP over OSPF. To do this, we selected a\nhost on\
    \ the farthest point from our workstation, and ran a continuous\nping to it. We\
    \ would then bring down a primary DS1 circuit, and watch\nthe time it took to\
    \ switch to the fallback route.  Following this, we\nwould bring the circuit back\
    \ up, and study the time it took to re-sync\nto the new path.     With RIP, we\
    \ were unable to fully complete the\nexperiment, because the farthest point was\
    \ exactly equal to the new (and\npreferred) primary path, and therefore, RIP would\
    \ never choose it on\nit's own, until the path it was currently using failed.\
    \ With OSPF, it\ntook about 2 seconds to synchronize over a new, much slower 56kb\
    \ path,\nand less than a second when the DS1 circuit came back up.\nHere are some\
    \ more observations of the OARnet OSPF system's behavior:\no  131.187.36.0 is\
    \ the 56kb line to Kent State University. Kent also has\n   a DS1 circuit leading\
    \ into ASP, the Akron Pop. Likewise, UAkron.edu\n   has a similar configuration.\
    \ A roundabout backup path exists when\n   traffic heads up to Cleveland over\
    \ a couple of DS1 circuits, and then\n   down a 56kb backup path used by another\
    \ school in the Cleveland area.\n   Some statistical information:\n          \
    \ 1. 09:55:17: SPF.37: new route to Net 131.187.36.5,\n                      \
    \  type SPF cost 32\n           2. 09:55:18: SPF.37: new route to Net 131.187.36.6,\n\
    \                        type SPF cost 22\n           3. 09:55:20: SPF.21: State\
    \ Change, nbr 131.187.27.6,\n                        new state <Full>, event 9\n\
    \           4. 09:55:21: SPF.37: new route to Net 131.187.36.5,\n            \
    \            type SPF cost 31\n           5. 09:55:22: SPF.37: new route to Net\
    \ 131.187.36.6,\n                        type SPF cost 21\n           6. 09:55:28:\
    \ SPF.21: State Change, nbr 131.187.21.5,\n                        new state <Full>,\
    \ event 9\n           7. 09:55:29: SPF.21: State Change, nbr 131.187.51.6,\n \
    \                       new state <Full>, event 9\n           8. 09:55:31: SPF.37:\
    \ new route to Net 131.187.36.5,\n                        type SPF cost 22\n \
    \          9. 09:55:33: SPF.37: new route to Net 131.187.36.5,\n             \
    \           type SPF cost 11\n   The Akron router restarts, and has to re-sync\
    \ with all the lines.\n   This restart is confirmed when one looks at the traps\
    \ from gwCSP1.\n   Traps from gwASP1 still do not get through to us, because traps\
    \ are\n   sent via UDP, and gwASP1's routing tables are not fully configured\n\
    \   yet.\n   Events 1 and 2 are route changes routing traffic via Cleveland,\n\
    \   across 2 DS1 circuits and a 56kb line.\n   When the DS1 circuit to UAkron\
    \ came up, routes instantly cut over to\n   use this as a better least cost path.\
    \ This is shown in events 3, 4\n   and 5.\n   In a few seconds, the line to Columbus\
    \ is the next one up. This is\n   event 6. Event 8 relates to this cutover, and\
    \ is the best path yet.\n   When the DS1 circuit to Kent is up, the link is used\
    \ instantly.\n   We are able to make such a definitive conclusion of these traps\
    \ on\n   the basis of the topological information that we have about the\n   network\
    \ and the means used to monitor them.\no  To illustrate the time required to fully\
    \ synchronize a database, we\n   piece together a few adjacency forming traces...\n\
    \   Please bear in mind that these time stamps are the time stamps on the\n  \
    \ management station, and are not to be taken as the absolute truth.\n   Things\
    \ we haven't taken into account are        transit times of\n   messages,    \
    \   ordering of events (SNMP traps are sent using UDP),\n   loss of event reports\
    \ (recall that an entire synchronization sequence\n   of gwASP1 on the ASP-CSP\
    \ link is missing),     etc.\n   The trace below corresponds to the Akron router,\
    \ gwASP1 bring up the\n   link in the previous section. This is as observed on\
    \ the other end of\n   the line, gwCSP1.\n           REPORT DATE: 02/26/91   ROUTER:\
    \ gwcsp1\n           09:55:06: SPF.15: State Change, ifc 131.187.22.6,\n     \
    \                 new state <Point-To-Point>, event 1\n           09:55:06: GW.xxx:\
    \ Link Up Trap: 09:55:07: SPF.37:\n                     new route to Net 131.187.22.5,\
    \ type SPF cost 1\n           09:55:07: SPF.21: State Change, nbr 131.187.22.5,\n\
    \                     new state <Init>, event 1\n           09:55:09: SPF.37:\
    \ new route to Net 131.187.27.5,\n                     type SPF cost 22\n    \
    \       09:55:11: SPF.21: State Change, nbr 131.187.22.5,\n                  \
    \   new state <ExStart>, event 14\n           09:55:11: SPF.21: State Change,\
    \ nbr 131.187.22.5,\n                     new state <2-Way>, event 3\n       \
    \    09:55:12: SPF.21: State Change, nbr 131.187.22.5,\n                     new\
    \ state <Exchange>, event 5\n           09:55:12: SPF.21: State Change, nbr 131.187.22.5,\n\
    \                     new state <Full>, event 9\n           09:55:12: SPF.21:\
    \ State Change, nbr 131.187.22.5,\n                     new state <Loading>, event\
    \ 6\n   Below, is another trace of the same router restart sequence, where\n \
    \  the router is proceeding to bring up other DS1 circuits. Bringing up\n   the\
    \ first adjacency took about 5 seconds. Subsequent adjacencies take\n   the router\
    \ less than a second as seen below.\n           REPORT DATE: 02/26/91   ROUTER:\
    \ gwasp1\n           09:55:20: SPF.15: State Change, ifc 131.187.27.5,\n     \
    \                new state <Point-To-Point>, event 1\n           09:55:20: GW.xxx:\
    \ Link Up Trap: 09:55:20: SPF.21:\n                     State Change, nbr 131.187.27.6,\
    \ new state <Init>, event 1\n           09:55:20: SPF.21: State Change, nbr 131.187.27.6,\n\
    \                     new state <ExStart>, event 14\n           09:55:20: SPF.21:\
    \ State Change, nbr 131.187.27.6,\n                     new state <Exchange>,\
    \ event 5\n           09:55:20: SPF.21: State Change, nbr 131.187.27.6,\n    \
    \                 new state <Full>, event 9\n           09:55:21: SPF.21: State\
    \ Change, nbr 131.187.27.6,\n                     new state <Loading>, event 6\n\
    \           09:55:24: SPF.21: State Change, nbr 131.187.51.6,\n              \
    \       new state <Init>, event 1\n           09:55:24: SPF.21: State Change,\
    \ nbr 131.187.21.5,\n                     new state <Init>, event 1\n        \
    \   09:55:25: SPF.37: new route to Net 131.187.21.6, type SPF cost 13\n      \
    \     09:55:25: SPF.37: new route to Net 131.187.51.5, type SPF cost 22\n    \
    \       09:55:28: SPF.21: State Change, nbr 131.187.21.5,\n                  \
    \   new state <ExStart>, event 14\n           09:55:28: SPF.21: State Change,\
    \ nbr 131.187.21.5,\n                     new state <2-Way>, event 3\n       \
    \    09:55:28: SPF.21: State Change, nbr 131.187.21.5,\n                     new\
    \ state <Exchange>, event 5\n           09:55:28: SPF.21: State Change, nbr 131.187.21.5,\n\
    \                     new state <Full>, event 9\n           09:55:28: SPF.21:\
    \ State Change, nbr 131.187.21.5,\n                     new state <Loading>, event\
    \ 6\n           09:55:29: SPF.37: new route to Net 131.187.51.6, type SPF cost\
    \ 1\n           09:55:29: SPF.37: new route to Net 131.187.21.5, type SPF cost\
    \ 1\n           09:55:29: SPF.21: State Change, nbr 131.187.51.6,\n          \
    \           new state <Exchange>, event 5\n           09:55:29: SPF.21: State\
    \ Change, nbr 131.187.51.6,\n                     new state <ExStart>, event 14\n\
    \           09:55:29: SPF.21: State Change, nbr 131.187.51.6,\n              \
    \       new state <2-Way>, event 3\n           09:55:29: SPF.21: State Change,\
    \ nbr 131.187.51.6,\n                     new state <Full>, event 9\n        \
    \   09:55:29: SPF.21: State Change, nbr 131.187.51.6,\n                     new\
    \ state <Loading>, event 6\n   A transient fault on a DS1 circuit, causes the\
    \ line to flap. All\n   routers quickly reroute around the flap, and the router\
    \ itself takes\n   about 2 seconds to bring up the adjacency once more.\n    \
    \       REPORT DATE: 02/26/91   ROUTER: gwasp1\n           14:33:43: GW.xxx: Link\
    \ Up Trap:\n           14:34:19: SPF.15: State Change, ifc 131.187.22.5,\n   \
    \                  new state <Down>, event 7\n           14:34:19: GW.xxx: Link\
    \ Failure Trap:\n           14:34:19: SPF.47: Net 131.187.22.6 now unreachable\n\
    \           14:34:36: SPF.15: State Change, ifc 131.187.22.5,\n              \
    \       new state <Point-To-Point>, event 1\n           14:34:36: GW.xxx: Link\
    \ Up Trap:\n           14:34:37: SPF.37: new route to Net 131.187.22.6, type SPF\
    \ cost 1\n           14:34:45: SPF.21: State Change, nbr 131.187.22.6,\n     \
    \                new state <2-Way>, event 3\n           14:34:45: SPF.21: State\
    \ Change, nbr 131.187.22.6,\n                     new state <Init>, event 1\n\
    \           14:34:46: SPF.21: State Change, nbr 131.187.22.6,\n              \
    \       new state <ExStart>, event 14\n           14:34:46: SPF.21: State Change,\
    \ nbr 131.187.22.6,\n                     new state <Exchange>, event 5\n    \
    \       14:34:47: SPF.21: State Change, nbr 131.187.22.6,\n                  \
    \   new state <Full>, event 9\n           14:34:47: SPF.21: State Change, nbr\
    \ 131.187.22.6,\n                     new state <Loading>, event 6\no  On the\
    \ amount of time it takes for a router to restart, and become\n   fully synchronized.\
    \ Taking the logs in the previous instance, we\n   notice that the CSP-ASP link\
    \ comes up at 9:55:06. The last link is\n   observed to be up at 9:55:29, which\
    \ is less than a minute.\no  On the RIP equivalent of the tests, it took us 3\
    \ minutes to cutover\n   to the slower speed fallback route, and we lost countless\
    \ many\n   packets.  The routes never cutover to the higher speed paths when\n\
    \   available, and we waited well over 30 minutes watching this,\n   wondering\
    \ why. Unfortu- nately, at this point, we seem to have lost\n   the RIP statistics.\n\
    \   On the OSPF version, we have...\n           {nisca danw 51}\n           ping\
    \ 131.187.25.6 PING 131.187.25.6 (131.187.25.6):\n           56 data bytes 64\
    \ bytes from 131.187.25.6:\n           icmp seq=0 ttl(255-ttl)=54(201). time=20\
    \ ms\n                   [...]\n           icmp seq=10 ttl(255-ttl)=54(201). time=20\
    \ ms\n                    ||             T1 down\n           icmp seq=14 ttl(255-ttl)=54(201).\
    \ time=180 ms\n           icmp seq=15 ttl(255-ttl)=54(201). time=60 ms\n     \
    \              [...]\n           icmp seq=38 ttl(255-ttl)=8(247). time=1300 ms\n\
    \           icmp seq=39 ttl(255-ttl)=54(201). time=820 ms\n                  \
    \  ||             Tl Up\n           icmp seq=40 ttl(255-ttl)=54(201). time=20\
    \ ms\n           icmp seq=41 ttl(255-ttl)=54(201). time=20 ms\n           131.187.25.6\
    \ PING Statistics\n           51 packets transmitted, 48 packets received, 5%\
    \ packet loss\n           round-trip (ms) min/avg/max = 20/277/1300\n6.4  Features\
    \ exercised during operational deployment\nIn operational environments, all basic\
    \ mechanisms of the OSPF protocol\nhave been exercised.  These mechanisms include:\n\
    o  Designated Router election. There have been operational deployments\n   have\
    \ as many as 8 OSPF routers attached to a single broadcast\n   network.\no  Database\
    \ synchronization. This includes OSPF's adjacency bringup and\n   reliable flooding\
    \ procedures. Large operational OSPF link state\n   databases (e.g., BARRNet)\
    \ have provided a thorough test of these\n   mechanisms.\no  Flushing advertisements.\
    \ The procedure for flushing old or\n   unreachable advertisements (the MaxAge\
    \ procedure) has been tested\n   operationally.  It is interesting to note that\
    \ flushing of\n   advertisements does occur more during interoperability testing\n\
    \   (because of the constant restart- ing of routers) that it does\n   operationally.\
    \ For example, in a week of BARRNet statistics, 9650\n   advertisements were flushed,\
    \ while 688,278 new advertisements were\n   flooded.\no  Import of external routes.\
    \ All options of external LSAs have been\n   tested operationally: type 1 metrics,\
    \ type 2 metrics, forwarding\n   addresses and the external route tag.\no  Authentication.\
    \ The OSPF authentication procedure has been tested\n   operationally.\no  Equal-cost\
    \ multipath. Operational deployments have included\n   topologies with equal-cost,\
    \ redundant paths.\no  Stub areas. These have been deployed both in BARRNet and\
    \ NSI.\n6.5  Limitations of operational deployments\nThe following things have\
    \ not been tested in an operational environment:\no  Multi-vendor deployments.\
    \ So far all deployments have used a single\n   implementation. However, extensive\
    \ interoperability testing of OSPF\n   has been done (see Section 7.0 of this\
    \ report).\no  Regular OSPF areas. These have however been tested in all three\n\
    \   rounds of the OSPF interoperability testing.\no  Virtual links. These have\
    \ however been tested in OSPF's\n   interoperability testing.\no  Non-broadcast\
    \ networks. However, OSPF interoperability testing has\n   been performed over\
    \ X.25 networks.\no  TOS routing. However, this has been tested in OSPF's interoperability\n\
    \   testing.\n6.6  Conclusions\nAll basic features of the OSPF protocol have been\
    \ exercised. Very large\nOSPF link state databases (e.g., BARRNet's OSPF system)\
    \ have been\ndeployed, providing a thorough test of OSPF's database synchronization\n\
    mechanisms. No OSPF protocol problems have been found in operational\ndeployments.\n\
    Most of the hassles in operation deployments has to do with the OSPF/RIP\ninterchange.\
    \ Many of these issues have been ironed out on the ospf-tests\nmailing list (see\
    \ Section 2.0). However, the interaction between OSPF,\nRIP, and EGP continues\
    \ to be an active area of research.\n7.0   Interoperability Testing\nThere have\
    \ been three separate OSPF V2 interoperability testing\nsessions. Five separate\
    \ implementations have participated in at least\none session: implementations\
    \ from the companies 3com, ACC, Proteon and\nWellfleet, and the publicly available\
    \ implementation from the University\nof Maryland.\nEach of the testing sessions\
    \ is described in a succeeding section. For\neach session, the participants are\
    \ identified, and the testing\ntopologies are described along with the particular\
    \ protocol features\nthat were exercised. Any protocol problems that were encountered\
    \ during\nthe testing are also described. In addition, for the second and third\n\
    rounds testing reports were sent to the ospf mailing lists.  These\nreports are\
    \ reproduced in this document.\nThere is quite a bit of commonality in the features\
    \ that have been\ntested from session to session.  There are several reasons for\
    \ this\ncommonality. First, in each testing session an attempt has been made to\n\
    increase the size of the OSPF system under test. For example, the number\nof external\
    \ routes imported has doubled each session. Secondly, the\ninteroperability sessions\
    \ have been debugging sessions as well as\nprotocol sessions. Many things tested\
    \ in the third round were to ver-\nify that implementations had successfully fixed\
    \ problems found in\nearlier sessions. A brief overview of the testing session\
    \ is presented\nin the following table:\nTABLE 4. OSPF interoperability testing\
    \ at a glance.\nSite      Week       Routers   Externals   Implementations\n_____________________________________________________________________________\n\
    Proteon   9/25/90    6         20-30       3com, Proteon, Wellfleet\nSURAnet \
    \  12/17/90   10        96          3com, ACC, Proteon, Wellfleet\n3com      2/4/91\
    \     16        400         3com, ACC, Proteon, Wellfleet, UMD\nFor more information\
    \ on the interoperability testing, the following\npeople can be contacted: Fred\
    \ Baker [fbaker], Rob Coltun [rcoltun], Dino\nFarinacci [dino], Jonathan Hsu [jhsu],\
    \ John Moy [jmoy], and William\nStreilein [bstreile].\n7.1  Testing methodology\n\
    In the interoperability tests, the routers have been interconnected\nusing ethernet,\
    \ serial lines (PPP and proprietary), X.25 and 802.5 token\nring. Monitoring of\
    \ the routers has been done through connecting\nterminals (either directly or\
    \ via telnet) to the router consoles. Each\nimplementation has a different user\
    \ interface, which makes monitoring\nsomewhat difficult. As explained earlier\
    \ in this document, there is now\nan OSPF MIB, which in the future will enable\
    \ a common monitoring\ninterface to all implementations.\nIn general, each implementation\
    \ has an error logging capability, and\nthis is often how problems are discovered.\
    \ LAN protocol analyzers are\nalso used to capture OSPF protocol packet exchanges\
    \ that are causing\nproblems. These packet traces are available for analysis either\
    \ during\nof after the testing sessions.\nVerification of routing was done through\
    \ visual inspection of\nimplementations' routing table and link state databases\
    \ (via the console\ninterface), and through network debugging tools such as \"\
    ping\" and\n\"traceroute\".\n7.2  First round (Proteon, 9/25/90 - 9/29/90)\nThe\
    \ first round of OSPF protocol testing took place at Proteon Inc.'s\nWestborough\
    \ facility, the week of September 25, 1990. Three\nimplementations participated,\
    \ from the vendors 3com, Proteon and\nWellfleet.\nThere were two 3com routers,\
    \ two Wellfleet routers and two Proteon\nrouters available for testing.  These\
    \ routers were interconnected with\nethernets and serial lines. External routes\
    \ were imported from the\nProteon company internet. In addition, during off hours\
    \ we were able to\nconnect the routers under test to the Proteon company internet,\
    \ forming\none fairly large OSPF system.\nThe testing at Proteon proceeded as\
    \ follows:\no  All routers were connected to a single ethernet. Then, as routers\n\
    \   were taken up and down, the Designated Router election algorithm and\n   the\
    \ Database Description process were tested. Also OSPF's reliable\n   flooding\
    \ algorithm was tested in this configuration.\no  Twenty to thirty external routes\
    \ were imported into the OSPF system\n   by a Proteon router (which was simultaneously\
    \ running RIP). It was\n   then verified that these external routes were installed\
    \ into the\n   router's routing tables.\no  One of the 3com routers was configured\
    \ to originate an OSPF default\n   route. This tested OSPF default route processing,\
    \ and also tested the\n   behavior of the system when multiple routers were importing\
    \ external\n   routes.\no  The OSPF system was split into areas. Both regular\
    \ OSPF areas (non-\n   stub) and stub areas were tested.\no  The six routers under\
    \ test were connected to the Proteon company\n   internet (which was also running\
    \ OSPF), forming an OSPF system of\n   eighteen routers. This configuration was\
    \ shortlived, due to a\n   disagreement between the 3com and Proteon routers concerning\
    \ how to\n   represent an OSPF default route.\nUnfortunately, incomplete records\
    \ were kept of this testing, so that no\nmaps of the testing configurations can\
    \ be reproduced for this document.\n7.2.1  Problems found in the First round testing\n\
    A couple of OSPF protocol/specification problems were uncovered in the\nfirst\
    \ round of testing.  First, it was noticed that there was a window\nin the Database\
    \ Description process where concurrently flooded MaxAge\nadvertisements could\
    \ prevent database synchronization from completing.\nThis required a change in\
    \ the specification's handling of MaxAge LSAs.\nSecondly, it was found that the\
    \ OSPF specification did not specify how\nthe Network Mask field should be set\
    \ in external LSAs that were\nadvertising the DefaultDestination. This was a minor\
    \ problem, but caused\ndifficulties because of assumptions made in one implementation\
    \ on how\nthe mask should be set.\n7.3  Second round (SURAnet, 12/17/90 - 12/21/90)\n\
    The second round of OSPF protocol testing took place at SURAnet's\nCollege Park\
    \ facility, the week of December 12, 1990. Four\nimplementations participated,\
    \ from the vendors 3com, ACC, Proteon and\nWellfleet.\nThere were two 3com routers,\
    \ two ACC routers, two Wellfleet routers and\nfour Proteon routers available for\
    \ testing. These routers were\ninterconnected with ethernets, serial lines and\
    \ token rings. External\nroutes were imported from SURAnet by one of the Proteon\
    \ routers.\nThe testing at SURAnet proceeded as follows. Initially nine routers\
    \ were\nconfigured as a single backbone area, with six of the routers connected\n\
    to a single ethernet. This is pictured in Figure 4.  In this\nconfiguration, the\
    \ Designated Router transition and database\nsynchronization process were tested.\
    \ Ninety-six external routes were\nimported from SURAnet to stress the flooding\
    \ algorithm. By restarting\nthe router that was importing the routes, the flushing\
    \ of advertisements\nfrom the routing domain was tested. Additionally, variable-length\n\
    subnets and OSPF's optional TOS routing capability were tested in this\nconfiguration.\n\
    Next the routers were configured into four separate OSPF areas, with\neach area\
    \ directly connected to the OSPF backbone (which was a single\nethernet). There\
    \ were no virtual links in this configuration.  Inter-\narea routing was tested,\
    \ including having AS boundary routers internal\nto a non-backbone area. Also\
    \ tested was the case where a single router\nwas both an area border router and\
    \ an AS boundary router.\nFor more details of the testing, see the \"Official\
    \ report of the Second\nRound Testing\" listed below.\n7.3.1  Official report\
    \ of the Second round testing\nThe following report was sent to the ospf, ospf-tests,\
    \ and router-\nrequirements mailing lists after the second round of interoperability\n\
    tests:\nThe second round of OSPF multi-vendor testing was done in College Park,\n\
    Maryland the week of 12/17/90. The facilities were provided by SURAnet.\nFour\
    \ major router vendors were present, Advanced Computer Communications\n(ACC),\
    \ Proteon, 3Com, and Wellfleet. A press conference and presentation\nwas provided\
    \ for 3 different data communication magazine\nrepresentatives.\nEach vendor provided\
    \ at least 2 routers. Each vendor had a device\nconnected to a common Ethernet.\
    \ This Ethernet was configured as the OSPF\nbackbone area. The rest of the routers\
    \ were attached to the various\nbackbone routers via Ethernet, Token Ring, proprietary\
    \ serial line, PPP\nserial line, and X.25 type media. The following test scenarios\
    \ were\nperformed and completed in the following order:\no  Intra-area routing.\
    \ All routers were configured to reside in the\n   backbone area. Designated Router\
    \ election was performed various\n   number of times so each vendor could be designated\
    \ router for a\n   period of time. Packet data was captured on a Sniffer for later\n\
    \   observation.\no  Variable Length Subnet Masks. Some of the serial lines in\
    \ the\n   configuration were configured to be on the same IP network but with\n\
    \   different subnet masks. It was observed that all routers stored\n   routes\
    \ for the different length subnets.\no  Import SURAnet routes. The Proteon router\
    \ was listening for RIP\n   routes generated by the SURAnet routers. These routes\
    \ were imported\n   into our OSPF test system. 96 external link state advertisements\
    \ were\n   generated as a result. Many scaling type implementation problems\n\
    \   surfaced for each vendor during this exercise.\no  Type of Service generation.\
    \ While the test setup was still configured\n   as a single area, the 3Com router\
    \ generated Type of Service link\n   state advertisements. It was observed how\
    \ the other vendor\n   implementations reacted to it. Some problems were found.\n\
    o  Inter-area routing. Multiple areas were configured. Common non-\n   backbone\
    \ areas were shared by Proteon and Wellfleet and by ACC and\n   3Com. It was observed\
    \ that the correct Intra-area and Inter-area\n   routes appeared in each router's\
    \ routing table. At this point in the\n   test setup, the Proteon router regenerated\
    \ the 96 SURAnet routes into\n   the configuration. It was observed that the routes\
    \ were learned and\n   propagated over area boundaries. Some problems occur at\
    \ this point.\n   More emphasis on this scenario will occur at the next round\
    \ of\n   testing.\no  OSPF over X.25. A point-to-point link was connected between\
    \ the\n   Proteon router and the 3Com router. The X.25 packet level was\n   configured\
    \ to run over the link. OSPF was enabled over the link to\n   verify that multi-vendor\
    \ OSPF over X.25 was performed. Both of these\n   routers were in the same area.\n\
    o  MaxAge advertisements. Link state advertisements were flushed from\n   the\
    \ routing domain using the MaxAge procedure. We verified that all\n   routers\
    \ removed the advertisements from their databases, after they\n   were properly\
    \ acknowledged by the flooding procedure. Some problems\n   were found in this\
    \ test, although not nearly as many as in the first\n   round of testing.\nEach\
    \ vendor agreed that this sort of testing was extremely valuable and\nthat it\
    \ should occur again.  3Com has offered for the third round of\ntesting to occur\
    \ in Santa Clara sometime in February.  3Com will\nencourage other OSPF implementations\
    \ to join in the testing. Items that\nwill be tested are:\no  Intra-area routing\
    \ with loops (as well as equal-cost multipath).\no  Inter-area testing including\
    \ Stub and Transit area support, with both\n   Intra-area and Inter-area loops.\n\
    o  Virtual link testing in the looped Inter-area configuration.\no  RIP/OSPF route\
    \ interchange including testing forwarding address\n   capability in external\
    \ link state advertisements.\no  EGP/OSPF router interchange including the use\
    \ of the route tag field\n   in external link state advertisements.\no  More than\
    \ two routers connected to an X.25 network. We would like to\n   test OSPF's non-broadcast\
    \ multi-access capabilities by attaching more\n   than two vendor's routers to\
    \ an X.25 packet switch.\no  Several vendors running OSPF and RIP simultaneously.\
    \ This will\n   further test the OSPF/RIP interactions.\no  Test processing of\
    \ links with cost LSInfinity. These links should be\n   treated as unreachable.\n\
    Furthermore, we hope that in future rounds of testing an OSPF MIB would\nallow\
    \ us to also use a network management station to gather test data.\nIn summary,\
    \ the stability of implementations were better this time more\nso than the first\
    \ round of testing. No problems with the protocol design\nwere encountered. The\
    \ exchange of ideas and the cooperation among\nimplementors that occurred during\
    \ this test effort, continues the spirit\nthat OSPF is truly an open protocol.\n\
    7.3.2  Problems found in the Second round testing\nNo problems were found in the\
    \ OSPF protocol during the second round of\ntesting.\n7.4  Third round (3com,\
    \ 2/4/91 - 2/8/91)\nThe third round of OSPF protocol testing took place at 3com's\
    \ Santa\nClara facility, the week of February 4, 1991. Five implementations\n\
    participated, from the vendors 3com, ACC, Proteon and Wellfleet and the\npublicly\
    \ available University of Maryland implementation (running on a\nSUN workstation).\n\
    There were five 3com routers, four ACC routers, three Wellfleet routers,\nthree\
    \ Proteon routers and the UMD Sun workstation available for testing\n(giving a\
    \ total of 16 routers available). These routers were\ninterconnected with ethernets,\
    \ serial lines and X.25. External routes\nwere imported from BARRNet by one of\
    \ the 3com routers.\nThe initial testing configuration is shown in Figure 5. Three\
    \ areas were\nconfigured, along with a non-contiguous backbone. The backbone was\
    \ then\njoined by configuring two virtual links. In this configuration the\nfollowing\
    \ OSPF functionality was tested: inter-area routing and virtual\nlinks.\nThe system\
    \ was then reconfigured so that twelve of the routers were\nconnected to a single\
    \ ethernet. This configuration is pictured in Figure\n6. By bringing routers up\
    \ and down, this configuration tested Designated\nRouter election, database synchronization\
    \ and reliable flooding. To see\nhow this functionality, and also the implementations,\
    \ scale, 400\nexternal routes were imported from BARRNet.\n7.4.1  Official report\
    \ of the Third round testing\nThe following report was sent to the ospf, ospf-tests,\
    \ and router-\nrequirements mailing lists after the third round of interoperability\n\
    tests:\nThe third round of OSPF interoperability testing was held at 3com\nCorporation\
    \ in Santa Clara the week of February 4-8. Four router vendors\ncame to the testing:\
    \ 3com, ACC, Proteon and Wellfleet. In addition, Rob\nColtun brought the University\
    \ of Maryland implementation, which was run\non a Sun Workstation.\nTesting was\
    \ performed over ethernet, point-to-point networks (using PPP)\nand X.25. In all\
    \ we had 16 routers available: five 3com routers, four\nACC routers, three Proteon\
    \ routers, three Wellfleet routers and Rob's\nSUN. We also were able to import\
    \ external routes from BARRNet.\nSpecific tests performed included the following:\n\
    o  Initially we configured the routers into three separate areas and a\n   physically\
    \ disconnected backbone. The backbone was then reconnected\n   through configuration\
    \ of several virtual links.  These tests verified\n   the generation and processing\
    \ of summary link advertisements, as well\n   as the operation of virtual links.\n\
    o  We connected multiple routers to an X.25 packet switch, testing\n   OSPF's\
    \ non-broadcast network capability. OSPF was successfully run\n   over the X.25\
    \ network, using routers that were both DR eligible and\n   DR ineligible. Some\
    \ problems were encountered, but they all involved\n   running IP over X.25 (i.e.,\
    \ they were not X.25 specific).\no  We also connected a 3com router, Proteon router,\
    \ and Rob's SUN to an\n   ethernet, and then treated the ethernet as a non-broadcast\
    \ network.\n   This allowed us to connect Rob's SUN into the rest of the routing\n\
    \   domain without installing the IP multicast modifications to the SUN\n   kernel.\
    \ It also further tested the OSPF's non-broadcast network\n   capability.\no \
    \ We then reconfigured the OSPF system so that all but three of the\n   routers\
    \ were connected to a single ethernet. This tested the\n   Designated Router functionality\
    \ (12 routers were synchronizing with\n   the DR). We then also tested the DR\
    \ election algorithm, by\n   selectively restarting the DR, or sometimes both\
    \ the DR and the\n   Backup DR. This also tested OSPF's Database Description process.\n\
    o  In this configuration, we then imported 400 external routes from\n   BARRNet\
    \ (one of the 3com routers ran both OSPF and EGP). Some\n   problems were encountered\
    \ in implementations' buffer allocation\n   strategies, and problems were also\
    \ found in the way implementations\n   avoid IP fragmentation. But overall, this\
    \ system was fairly stable.\nThe following problems we found in the OSPF specification:\n\
    o  The specification should say that the \"Network mask\" field should not\n \
    \  be verified in OSPF Hellos received over virtual links.\no  The specification\
    \ should say that on multi-access networks neighbors\n   are identified by their\
    \ IP address, and on point-to-point networks\n   and virtual links by their OSPF\
    \ Router ID. This eliminates confusion\n   when, for example, a router is restarted\
    \ and comes up with the same\n   IP address but a different Router ID.\nThanks\
    \ to 3com for providing the testing facility, cables. terminals,\nX.25 switch.\
    \ etc. Also thanks to Vince Fuller of BARRNet for helping us\nimport the BARRNet\
    \ routes.\n7.4.2  Problems found in the Third round testing\nA couple of specification/protocol\
    \ problems were found in the third\nround of interoperability testing. First,\
    \ it was noticed that the\nspecification did not specify the setting of the Network\
    \ Mask field in\nHellos sent over virtual links. This caused some initial difficulty\
    \ in\nbringing up virtual links between routers belonging to different\nvendors.\
    \ Secondly, it was noticed that the specification was not strict\nenough in defining\
    \ how OSPF neighbors are identified on multi-access\nnetworks. This caused difficulties\
    \ in one implementation when another\nvendor's router was restarted with the same\
    \ IP address but a different\nOSPF Router ID. This is discussed more fully in\
    \ the above \"Official\nReport of the Third Round Testing\".\n7.5  Overall: Features\
    \ tested\nAll significant protocol features and mechanisms have been tested in\
    \ the\nthree rounds of interoperability testing. In particular, the following\n\
    basic pieces of the protocol have been tested:\no  Designated Router election.\
    \ With as many as thirteen routers attached\n   to a single LAN, the election\
    \ of Backup Designated Router and\n   Designated router was verified by bringing\
    \ routers up and down,\n   singly and in pairs.\no  Adjacency bringup. The Database\
    \ Description process was verified,\n   with databases having over 400 LSAs. Adjacency\
    \ bringup was also\n   verified in times when flooding was taking place simultaneously.\n\
    o  Reliable flooding. It was verified that OSPF's flooding algorithm\n   maintains\
    \ database synchronization, both in the presence of loops in\n   the topology,\
    \ and with large databases (over 400 LSAs).\no  Flushing advertisements from routing\
    \ domain. OSPF's procedure for\n   flushing old or unreachable LSAs from the routing\
    \ domain was\n   verified, both in the presence of topology loops and with many\
    \ LSAs\n   being flushed at once. This is also referred to as OSPF's MaxAge\n\
    \   procedure.\no  OSPF routing hierarchy. The OSPF four level routing hierarchy:\n\
    \   intra-area, inter-area. type 1 externals and type 2 externals was\n   tested.\n\
    o  Import of external routing information. The importing of external\n   routes\
    \ has been tested, with as many as 400 imported at once. Also,\n   the varying\
    \ options in external LSAs has been tested: type 1 or type\n   2 metrics and forwarding\
    \ addresses.escribe all options. In addition,\n   test setups were utilized having\
    \ AS boundary routers both internal to\n   non-backbone areas and also being simultaneously\
    \ area border routers.\no  Running protocol over various network types. In the\
    \ test setups, OSPF\n   has been run over ethernet, point-to-point serial lines\
    \ (both PPP and\n   proprietary), 802.5 token ring and X.25.\no  Non-broadcast,\
    \ multi-access networks. OSPF has been tested over X.25.\n   Some testing was\
    \ also done treating ethernet as a non-broadcast\n   network. Two separate situations\
    \ were tested: when all routers\n   attached to the non-broadcast network were\
    \ DR-eligible, and when only\n   some of them were.\no  Authentication. OSPF's\
    \ authentication procedure was tested for the\n   two current authentication types.\n\
    o  Equal-cost multipath. Much of the testing was done in configurations\n   with\
    \ redundant paths, and equal-cost multipath was verified through\n   examination\
    \ of implementations' routing tables.\no  Variable-length subnet masks. It was\
    \ verified that implementations\n   paid attention to the network mask field present\
    \ in OSPF LSAs.\nTesting was also performed on the following pieces of OSPF's\
    \ Area\nfunctionality:\no  Extent of advertisements. It was verified that all\
    \ advertisements\n   except external LSAs were flooded throughout a single area\
    \ only.\no  Inter-area routing. The generation and processing of summary link\n\
    \   LSAs was tested. Also tested were configurations having multiple area\n  \
    \ border routers attaching to a single area.\no  Virtual links.\nThe following\
    \ OSPF options were also tested:\no  TOS routing. The interplay between TOS-capable\
    \ and non-TOS-capable\n   routers was tested, by configuring TOS-specific metrics\
    \ in the only\n   implementation (3com) supporting TOS routing.\no  Stub areas.\
    \ OSPF's stub area functionality was verified.\n7.6  Testing conclusions\nThe\
    \ interoperability testing has proven to be very valuable. Many bugs\nwere found\
    \ (and fixed) in the implementations. Some protocol problems\nwere found (and\
    \ fixed), and gray areas of the specification were cleared\nup. Implementations\
    \ have also been \"bullet-proofed\" in order to deal\nwith the unexpected behavior\
    \ of other implementations. All participants\nin the testing now understand the\
    \ maxim \"be conservative in what you\ngenerate, and liberal in what you accept\"\
    \ (if they didn't already).\n7.7  Future work\nThe one thing that has gone mostly\
    \ untested at the interoperability\nsessions is the interaction between OSPF and\
    \ other routing protocols\n(such as RIP and EGP). Each interoperability session\
    \ generally had a\nrouter running multiple routing protocols in order to import\
    \ external\nrouting information into the OSPF system. However, simultaneously\n\
    running multiple routing protocols between different vendors' routers\nhas not\
    \ been tested.\nEach vendor has developed a slightly different architecture for\
    \ the\nexchange of routing information between differing routing protocols.  As\n\
    the OSPF field testing has also shown, this exchange of routing\ninformation is\
    \ an area of ongoing work and a candidate for future\nstandardization.\n8.0  Simulation\n\
    The OSPF protocol has been simulated by the Distributed Systems Research\nGroup\
    \ at the University of Maryland Baltimore County (UMBC). The two\nprincipal investigators\
    \ for the OSPF simulation project are Dr.\nDeepinder P. Sidhu of UMBC and Rob\
    \ Coltun. They have been aided by three\ngraduate students: S. Abdallah, T. Fu\
    \ and R. Nair.  This section\nattempts to summarize their simulation setup and\
    \ results.  For more\ninformation, contact the Distributed Systems Research Group\
    \ at the\nfollowing address:\n        Dr. Deepinder P. Sidhu\n        Department\
    \ of Computer Science\n        University of Maryland Baltimore County\n     \
    \   Baltimore, MD 21228\n        email: sidhu@umbc3.umbc.edu\nA demo was given\
    \ of their OSPF simulation at the March 4-8, 1991 IETF in\nSt. Louis. Details\
    \ of the demo should be available in the IETF\nproceedings.\n8.1  Simulator setup\n\
    The Distributed System Research Group uses a significantly enhanced\nversion of\
    \ the MIT network simulator. The simulator is event driven, and\ncontains support\
    \ for both point-to-point networks and ethernet links. It\ncan simulate characteristics\
    \ of both packet switches and hosts, and can\nsimulate internet behavior under\
    \ various types of data traffic load\n(e.g., Poisson, normal, exponential and\
    \ uniform distributions). This\nlatter ability could be used, for example, to\
    \ simulate how a routing\nprotocol works in a congested internet.  Specific network\
    \ topologies can\nbe input into the simulator, or pseudo-random network topologies\
    \ can be\ngenerated. Packet loss rates can also be simulated.\nTo simulate OSPF,\
    \ Rob Coltun's OSPF implementation was incorporated into\nthe simulator, essentially\
    \ unchanged.\nThe output of the simulator can be displayed in a graphical manner\
    \ (it\nuses X windows). Any variable in the implementation under test can be\n\
    monitored. In addition, statistical reports can later be produced from\nlogging\
    \ files produced during the simulation runs.\n8.2  Simulation results\nThe OSPF\
    \ simulation has been run using the following topologies:\no  The two sample topologies\
    \ in the OSPF specification (Figure 2 and\n   Figure 6 in [2]). The first of these\
    \ topologies shows an Autonomous\n   System without areas, the second the same\
    \ AS with three areas and a\n   virtual link configured.\no  The 19-node hub topology\
    \ from [7].\no  A large network of over 50 nodes, all attached to a single ethernet.\n\
    o  A large network of over 50 nodes, containing both ethernets and\n   serial\
    \ lines, pseudo randomly generated.\nIn these topologies, the correctness of the\
    \ OSPF database\nsynchronization was verified. This was done through examination\
    \ of the\nnodes' OSPF link state databases and the nodes' routing tables.  The\n\
    implementation of multiple OSPF areas was also tested. Also, database\nconvergence\
    \ time was analyzed as a function of the network components'\nlink speeds.\nAlso,\
    \ some formal analysis of the OSPF protocol was undertaken. The\nneighbor and\
    \ interface state machines were analyzed. In addition, the\nDesignated Router\
    \ election algorithm was verified for certain sets of\ninitial conditions.\n9.0\
    \  Reference Documents\nThe following documents have been referenced by this report:\n\
    [1] Moy, J., \"The OSPF Specification\", RFC 1131, October 1989.\n[2] Moy, J.,\
    \ \"OSPF Version 2\", RFC 1247, July 1991.\n[3] Coltun, R. and Baker, F., \"OSPF\
    \ Version 2 Management Information\n    Base\", RFC 1248, July 1991.\n[4] Reynolds,\
    \ J. and Postel, J., \"Assigned Numbers', RFC1060, March\n    1990.\n[5] Corporation\
    \ for National Research Initiatives, \"Proceedings of the\n    Thirteenth Internet\
    \ Engineering Task Force\", Cocoa Beach, Florida,\n    April 11-14, 1989.\n[6]\
    \ Corporation for National Research Initiatives, \"Proceedings of the\n    Sixteenth\
    \ Internet Engineering Task Force\", Florida State\n    University, February 6-9,\
    \ 1990.\n[7] Gardner, M., et al., \"Type-of-service routing: modeling and\n  \
    \  simulation,\" Report 6364, BBN Communications Corporation, January\n    1987.\n\
    [8] Corporation for National Research Initiatives, \"Proceedings of the\n    Seventeenth\
    \ Internet Engineering Task Force\", Pittsburgh\n    Supercomputing Center, May\
    \ 1-4, 1990.\n[9] Corporation for National Research Initiatives, \"Proceedings\
    \ of the\n    Eighteenth Internet Engineering Task Force\", University of British\n\
    \    Columbia, July 30-August 3, 1990.\n10.0  People\nThe following people have\
    \ contributed information to this report and can\nbe contacted for further information:\n\
    TABLE 5. People references in this report\nTag        Name                Affiliation\
    \         email\n__________________________________________________________________________________\n\
    bstreile   William Streilein   Wellfleet           bstreile@wellfleet.com\ndino\
    \       Dino Farinacci      3com                dino@buckeye.esd.3com.com\nfbaker\
    \     Fred Baker          ACC                 fbaker@acc.com\njeff       Jeffrey\
    \ Burgan      Sterling Software   jeff@nsipo.nasa.gov\njhsu       Jonathan Hsu\
    \        Wellfleet           jhsu@wellfleet.com\njmoy       John Moy         \
    \   Proteon             jmoy@proteon.com\nkannan     Kannan Varadhan     OARnet\
    \              kannan@oar.net\nmedin      Milo Medin          Sterling Software\
    \   medin@nsipo.nasa.gov\nrcoltun    Rob Coltun          U. of Maryland      rcoltun@umd5.umd.edu\n\
    rrv        Ross Veach          U. of Illinois      rrv@seka.cso.uiuc.edu\nvaf\
    \        Vince Fuller        BARRNet             vaf@valinor.stanford.edu\nSecurity\
    \ Considerations\nThe OSPF protocol's security architecture is described in Section\
    \ 4.0.\nAuthor's Address\nJohn Moy\nProteon Inc.\n2 Technology Drive\nWestborough,\
    \ MA 01581\nPhone: (508) 898-2800\nEmail:  jmoy@proteon.com\n"
