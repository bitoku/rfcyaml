- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                           T. Tsou
  contents:
  - "Independent Submission                                           T. Tsou\n  \
    \       Port Management to Reduce Logging in Large-Scale NATs\n"
- title: Abstract
  contents:
  - "Abstract\n   Various IPv6 transition strategies require the introduction of large-\n\
    \   scale NATs (e.g., AFTR and NAT64) to share the limited supply of IPv4\n  \
    \ addresses available in the network until transition is complete.\n   There has\
    \ recently been debate over how to manage the sharing of\n   ports between different\
    \ subscribers sharing the same IPv4 address.\n   One factor in the discussion\
    \ is the operational requirement to log\n   the assignment of transport addresses\
    \ to subscribers.  It has been\n   argued that dynamic assignment of individual\
    \ ports between\n   subscribers requires the generation of an excessive volume\
    \ of logs.\n   This document suggests a way to achieve dynamic port sharing while\n\
    \   keeping log volumes low.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7768.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  A Suggested Solution  . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Issues Of Traceability  . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Other Considerations  . . . . . . . . . . . . . . . . . .\
    \ . .   5\n   5.  Security Considerations . . . . . . . . . . . . . . . . . .\
    \ .   6\n   6.  Informative References  . . . . . . . . . . . . . . . . . . .\
    \   7\n   Appendix A.  Configure Server Software to Log Source Port . . . .  \
    \ 9\n     A.1.  Apache  . . . . . . . . . . . . . . . . . . . . . . . . .   9\n\
    \     A.2.  Postfix . . . . . . . . . . . . . . . . . . . . . . . . .   9\n  \
    \   A.3.  Sendmail  . . . . . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ A.4.  sshd  . . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     A.5.\
    \  Cyrus IMAP and UW IMAP  . . . . . . . . . . . . . . . . .  10\n   Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . . . . . . .  11\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   During the IPv6 transition period, some large-scale NAT\
    \ devices may\n   be introduced, e.g., Dual-Stack Lite (DS-Lite), Address Family\n\
    \   Transition Router (AFTR), and NAT64.  When a NAT device needs to set\n   up\
    \ a new connection for a given internal address behind the NAT, it\n   needs to\
    \ create a new mapping entry for the new connection, which\n   will contain source\
    \ IP address, source port or ICMP identifier,\n   converted source IP address,\
    \ converted source port, protocol (TCP/\n   UDP), etc.\n   Due to legislation\
    \ and law enforcement requirement, sometimes it is\n   necessary to log these\
    \ mappings for a period of time, such as 6\n   months.  The mapping information\
    \ is highly privacy sensitive; if\n   possible, the information should be deleted\
    \ as soon as possible.\n   Some high-performance NAT devices may need to create\
    \ a large amount\n   of new sessions per second.  If logs are generated for each\
    \ mapping\n   entry, the log traffic could reach tens of megabytes per second\
    \ or\n   more, which would be a problem for log generation, transmission and\n\
    \   storage.  According to a test discussed in \"Analysis of NAT64 Port\n   Allocation\
    \ Methods for Shared IPv4 Addresses\" [ALLOC-METHODS], in a\n   network with 20,000\
    \ subscribers, over a 60-day period, the raw log\n   size can reach 42.5 TB if\
    \ it is based on per-session log, while the\n   log size will be 40.6 GB if it\
    \ is based on port blocks.  Although\n   compression technologies can be used\
    \ before log storage, the log size\n   is still big.\n   [RFC6888], REQ-13 suggests\
    \ \"maximize port utilization\" and REQ-14\n   suggests \"minimize log volume\"\
    .  However, it is difficult to achieve\n   both; there will be a trade-off between\
    \ the efficiency with which\n   ports are used and the rate of generation of log\
    \ records.\n"
- title: 2.  A Suggested Solution
  contents:
  - "2.  A Suggested Solution\n   This document proposes a solution that allows dynamic\
    \ sharing of port\n   ranges between users while minimizing the number of logs\
    \ that have to\n   be generated.  Briefly, ports are allocated to the user in\
    \ blocks.\n   Logs are generated only when blocks are allocated or deallocated.\n\
    \   This provides the necessary traceability while reducing log\n   generation\
    \ by a factor equal to the block size, as compared with\n   fully dynamic port\
    \ allocation.\n   This is how the proposal works in greater detail.  When the\
    \ user\n   sends out the first packet, a port resource pool is allocated for the\n\
    \   user, e.g., assigning ports 2001~2300 of a public IP address to the\n   user's\
    \ resource pool.  Only one log should be generated for this port\n   block.  When\
    \ the NAT needs to set up a new mapping entry for the\n   user, it can use a port\
    \ in the user's resource pool and the\n   corresponding public IP address.  If\
    \ the user needs more port\n   resources, the NAT can allocate another port block,\
    \ e.g., ports\n   3501~3800, to the user's resource pool.  Again, just one log\
    \ needs to\n   be generated for this port block.\n   [RFC6431] takes this idea\
    \ further by allocating non-contiguous sets\n   of ports using a pseudorandom\
    \ function.  Scattering the allocated\n   ports in this way provides a modest\
    \ barrier to port guessing attacks.\n   The use of randomization is discussed\
    \ further in Section 5.\n   Suppose now that a given internal address has been\
    \ assigned more than\n   one block of ports.  The individual sessions using ports\
    \ within a\n   port block will start and end at different times.  If no ports\
    \ in\n   some port block are used for some configurable time, the NAT can\n  \
    \ remove the port block from the resource pool allocated to a given\n   internal\
    \ address and make it available for other users.  In theory,\n   it is unnecessary\
    \ to log deallocations of blocks of ports, because\n   the ports in deallocated\
    \ blocks will not be used again until the\n   blocks are reallocated.  However,\
    \ the deallocation may be logged when\n   it occurs adding robustness to troubleshooting\
    \ or other procedures.\n   The deallocation procedure presents a number of difficulties\
    \ in\n   practice.  The first problem is the choice of timeout value for the\n\
    \   block.  If idle timers are applied for the individual mappings\n   (sessions)\
    \ within the block, and these conform to the recommendations\n   for NAT behavior\
    \ for the protocol concerned, then the additional time\n   that might be configured\
    \ as a guard for the block as a whole need not\n   be more than a few minutes.\
    \  The block timer in this case serves only\n   as a slightly more conservative\
    \ extension of the individual session\n   idle timers.  If, instead, a single\
    \ idle timer is used for the whole\n   block, it must itself conform to the recommendations\
    \ for the protocol\n   with which that block of ports is associated.  For example,\
    \ REQ-5 of\n   [RFC5382] requires an idle timer expiry duration of at least 2\
    \ hours\n   and 4 minutes for TCP.\n   The next issue with port block deallocation\
    \ is the conflict between\n   the desire to randomize port allocation and the\
    \ desire to make unused\n   resources available to other internal addresses. \
    \ As mentioned above,\n   ideally port selection will take place over the entire\
    \ set of blocks\n   allocated to the internal address.  However, taken to its\
    \ fullest\n   extent, such a policy will minimize the probability that all ports\
    \ in\n   any given block are idle long enough for it to be released.\n   As an\
    \ alternative, it is suggested that when choosing which block to\n   select a\
    \ port from, the NAT should omit from its range of choice the\n   block that has\
    \ been idle the longest, unless no ports are available\n   in any of the other\
    \ blocks.  The expression \"block that has been idle\n   the longest\" designates\
    \ the block in which the time since the last\n   packet was observed in any of\
    \ its sessions, in either direction, is\n   earlier than the corresponding time\
    \ in any of the other blocks\n   assigned to that internal address.\n"
- title: 3.  Issues Of Traceability
  contents:
  - "3.  Issues Of Traceability\n   Section 12 of [RFC6269] provides a good discussion\
    \ of the\n   traceability issue.  Complete traceability given the NAT-logging\n\
    \   practices proposed in this document requires that the remote\n   destination\
    \ record the source port of a request along with the source\n   address (and presumably\
    \ protocol, if not implicit).  In addition, the\n   logs at each end must be timestamped,\
    \ and the clocks must be\n   synchronized within a certain degree of accuracy.\
    \  Here is one reason\n   for the guard timing on block release, to increase the\
    \ tolerable\n   level of clock skew between the two ends.\n   The ability to configure\
    \ various server applications to record source\n   ports has been investigated,\
    \ with the following results:\n   o  Source-port recording can be configured in\
    \ Apache, Postfix,\n      sendmail, and sshd.  Please refer to the Appendix for\
    \ the\n      configuration guide.\n   o  Source-port recording is not supported\
    \ by IIS, Cyrus IMAP, and UW\n      IMAP.  But it should not be too difficult\
    \ to get Cyrus IMAP and UW\n      IMAP to support it by modifying the source code.\n\
    \   Where source-port logging can be enabled, this memo strongly urges\n   the\
    \ operators to do so.  Similarly, intrusion detection systems\n   should capture\
    \ source port as well as source address of suspect\n   packets.\n   In some cases\
    \ [RFC6269], a server may not record the source port of a\n   connection.  To\
    \ allow traceability, the NAT device needs to record\n   the destination IP address\
    \ of a connection.  As [RFC6269] points out,\n   this will provide an incomplete\
    \ solution to the issue of traceability\n   because multiple users of the same\
    \ shared public IP address may\n   access the service at the same time.  From\
    \ the point of view of this\n   document, in such situations the game is lost,\
    \ so to speak, and port\n   allocation at the NAT might as well be completely\
    \ dynamic.\n   The final possibility to consider is where the NAT does not do\
    \ per-\n   session logging even given the possibility that the remote end is\n\
    \   failing to capture source ports.  In that case, the port allocation\n   policy\
    \ proposed in this document can be used.  The impact on\n   traceability is that\
    \ analysis of the logs would yield only the list\n   of all internal addresses\
    \ mapped to a given public address during the\n   period of time concerned.  This\
    \ has an impact on privacy as well as\n   traceability, depending on the follow-up\
    \ actions taken.\n"
- title: 4.  Other Considerations
  contents:
  - "4.  Other Considerations\n   [RFC6269] notes several issues introduced by the\
    \ use of dynamic, as\n   opposed to static, port assignment.  For example, Section\
    \ 13.2 of\n   that document notes the effect on authentication procedures.  These\n\
    \   issues must be resolved, but are not specific to the port allocation\n   policy\
    \ described in this document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The discussion that follows addresses an issue\
    \ that is particularly\n   relevant to the proposal made in this document.  The\
    \ security\n   considerations applicable to NAT operation for various protocols\
    \ as\n   documented in, for example, [RFC4787] and [RFC5382] also apply to\n \
    \  this proposal.\n   [RFC6056] summarizes the TCP port-guessing attack, by means\
    \ of which\n   an attacker can hijack one end of a TCP connection.  One mitigating\n\
    \   measure is to make the source port number used for a TCP connection\n   less\
    \ predictable.  [RFC6056] provides various algorithms for this\n   purpose.\n\
    \   As Section 3.1 of that RFC notes: \"...provided adequate algorithms\n   are\
    \ in use, the larger the range from which ephemeral ports are\n   selected, the\
    \ smaller the chances of an attacker are to guess the\n   selected port number.\"\
    \  Conversely, the reduced range sizes proposed\n   by the present document increase\
    \ the attacker's chances of guessing\n   correctly.  This result cannot be totally\
    \ avoided.  However,\n   mitigating measures to improve this situation can be\
    \ taken both at\n   port-block assignment time and when selecting individual ports\
    \ from\n   the blocks that have been allocated to a given user.\n   At assignment\
    \ time, one possibility is to assign ports as non-\n   contiguous sets of values\
    \ as proposed in [RFC6431].  However, this\n   approach creates a lot of complexity\
    \ for operations, and the\n   pseudorandomization can create uncertainty when\
    \ the accuracy of logs\n   is important to protect someone's life or liberty.\n\
    \   Alternatively, the NAT can assign blocks of contiguous ports.\n   However,\
    \ at assignment time, the NAT could attempt to randomize its\n   choice of which\
    \ of the available idle blocks it would assign to a\n   given user.  This strategy\
    \ has to be traded-off against the\n   desirability of minimizing the chance of\
    \ conflict between what\n   [RFC6056] calls \"transport protocol instances\" by\
    \ assigning the most-\n   idle block, as suggested in Section 2.  A compromise\
    \ policy might be\n   to assign blocks only if they have been idle for a certain\
    \ amount of\n   time, and select pseudorandomly between the blocks available\n\
    \   according to this criterion.  In this case, it is suggested that the\n   time\
    \ value used be greater than the guard timing mentioned in\n   Section 2, and\
    \ that no block should ever be reassigned until it has\n   been idle at least\
    \ for the duration given by the guard timer.\n   While the block assignment strategy\
    \ can provide some mitigation of\n   the port-guessing attack, the largest contribution\
    \ will come from\n   pseudorandomization at port-selection time.  [RFC6056] provides\
    \ a\n   number of algorithms for achieving this pseudorandomization.  When\n \
    \  the available ports are contained in blocks, which are not in general\n   consecutive,\
    \ the algorithms clearly need some adaptation.  The task\n   is complicated by\
    \ the fact that the number of blocks allocated to the\n   user may vary over time.\
    \  Adaptation is left as an exercise for the\n   implementor.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [ALLOC-METHODS]\n              Chen, G., Li, W.,\
    \ Tsou, T., Huang, J., Taylor, T., and J.\n              Tremblay, \"Analysis\
    \ of NAT64 Port Allocation Methods for\n              Shared IPv4 Addresses\"\
    , Work in Progress, draft-ietf-\n              sunset4-nat64-port-allocation-02,\
    \ January 2016.\n   [APACHE_LOG_CONFIG]\n              The Apache Software Foundation,\
    \ \"Apache Module\n              mod_log_config\", <http://httpd.apache.org/docs/2.4/mod/\n\
    \              mod_log_config.html>.\n   [POSTFIX_LOG_CONFIG]\n              \"\
    Postfix Configuration Parameters\",\n              <http://www.postfix.org/postconf.5.html>.\n\
    \   [RFC4787]  Audet, F., Ed. and C. Jennings, \"Network Address\n           \
    \   Translation (NAT) Behavioral Requirements for Unicast\n              UDP\"\
    , BCP 127, RFC 4787, DOI 10.17487/RFC4787, January\n              2007, <http://www.rfc-editor.org/info/rfc4787>.\n\
    \   [RFC5382]  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P.\n  \
    \            Srisuresh, \"NAT Behavioral Requirements for TCP\", BCP 142,\n  \
    \            RFC 5382, DOI 10.17487/RFC5382, October 2008,\n              <http://www.rfc-editor.org/info/rfc5382>.\n\
    \   [RFC6056]  Larsen, M. and F. Gont, \"Recommendations for Transport-\n    \
    \          Protocol Port Randomization\", BCP 156, RFC 6056,\n              DOI\
    \ 10.17487/RFC6056, January 2011,\n              <http://www.rfc-editor.org/info/rfc6056>.\n\
    \   [RFC6269]  Ford, M., Ed., Boucadair, M., Durand, A., Levis, P., and\n    \
    \          P. Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n       \
    \       DOI 10.17487/RFC6269, June 2011,\n              <http://www.rfc-editor.org/info/rfc6269>.\n\
    \   [RFC6431]  Boucadair, M., Levis, P., Bajko, G., Savolainen, T., and\n    \
    \          T. Tsou, \"Huawei Port Range Configuration Options for PPP\n      \
    \        IP Control Protocol (IPCP)\", RFC 6431,\n              DOI 10.17487/RFC6431,\
    \ November 2011,\n              <http://www.rfc-editor.org/info/rfc6431>.\n  \
    \ [RFC6888]  Perreault, S., Ed., Yamagata, I., Miyakawa, S., Nakagawa,\n     \
    \         A., and H. Ashida, \"Common Requirements for Carrier-Grade\n       \
    \       NATs (CGNs)\", BCP 127, RFC 6888, DOI 10.17487/RFC6888,\n            \
    \  April 2013, <http://www.rfc-editor.org/info/rfc6888>.\n   [SENDMAIL_LOG_CONFIG]\n\
    \              O'Reilly, \"Sendmail, 3rd Edition, Page 798\", December\n     \
    \         2002.\n   [SSHD_LOG_CONFIG]\n              \"sshd_config OpenSSH SSH\
    \ daemon configuration file\",\n              <http://www.openbsd.org/cgi-bin/\n\
    \              man.cgi?query=sshd_config&sektion=5>.\n"
- title: Appendix A.  Configure Server Software to Log Source Port
  contents:
  - 'Appendix A.  Configure Server Software to Log Source Port

    '
- title: A.1.  Apache
  contents:
  - "A.1.  Apache\n   The user can use the LogFormat command to define a customized\
    \ log\n   format and use the CustomLog command to apply that log format. \"%a\"\
    \n   and \"%{remote}p\" can be used in the format string to require logging\n\
    \   the client's IP address and source port, respectively.  This feature\n   has\
    \ been available since Apache version 2.1.\n   A detailed configuration guide\
    \ can be found at [APACHE_LOG_CONFIG].\n"
- title: A.2.  Postfix
  contents:
  - "A.2.  Postfix\n   In order to log the client source port, macro\n   smtpd_client_port_logging\
    \ should be set to \"yes\" in the configuration\n   file [POSTFIX_LOG_CONFIG].\n\
    \   This feature has been available since Postfix version 2.5.\n"
- title: A.3.  Sendmail
  contents:
  - "A.3.  Sendmail\n   Sendmail has a macro ${client_port} storing the client port.\
    \  To log\n   the source port, the user can define some check rules.  Here is\
    \ an\n   example that should be in the .mc configuration macro\n   [SENDMAIL_LOG_CONFIG]:\n\
    \   LOCAL_CONFIG\n   Klog syslog\n   LOCAL_RULESETS\n   SLocal_check_mail\n  \
    \ R $* $@ $(log Port_Stat $&{client_addr} $&{client_port} $)\n   This feature\
    \ has been available since version 8.10.\n"
- title: A.4.  sshd
  contents:
  - "A.4.  sshd\n   SSHD_CONFIG(5) OpenBSD Programmer's Manual SSHD_CONFIG(5) NAME\n\
    \   sshd_config - OpenSSH SSH daemon configuration file LogLevel Gives\n   the\
    \ verbosity level that is used when logging messages from sshd(8).\n   The possible\
    \ values are: QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG,\n   DEBUG1, DEBUG2, and\
    \ DEBUG3.  The default is INFO.  DEBUG and DEBUG1\n   are equivalent.  DEBUG2\
    \ and DEBUG3 each specify higher levels of\n   debugging output.  Logging with\
    \ a DEBUG level violates the privacy of\n   users and is not recommended.  SyslogFacility\
    \ Gives the facility code\n   that is used when logging messages from sshd(8).\
    \  The possible values\n   are: DAEMON, USER, AUTH, LOCAL0, LOCAL1, LOCAL2, LOCAL3,\
    \ LOCAL4,\n   LOCAL5, LOCAL6, and LOCAL7.  The default is AUTH.\n   sshd supports\
    \ logging the client IP address and client port when a\n   client starts connection\
    \ since version 1.2.2; here is the source code\n   in sshd.c:\n   ...\n   verbose(\"\
    Connection from %.500s port %d\", remote_ip, remote_port);\n   ...\n   sshd supports\
    \ logging the client IP address when a client disconnects\n   in version 1.2.2\
    \ to version 5.0.  Since version 5.1, sshd supports\n   logging the client IP\
    \ address and source port.  Here is the source\n   code in sshd.c:\n   ...\n \
    \  /* from version 1.2.2 to 5.0*/\n   verbose(\"Closing connection to %.100s\"\
    , remote_ip);\n   ...\n   /* since version 5.1*/\n   verbose(\"Closing connection\
    \ to %.500s port %d\",\n   remote_ip, remote_port);\n   In order to log the source\
    \ port, the LogLevel should be set to\n   VERBOSE [SSHD_LOG_CONFIG] in the configuration\
    \ file:\n   LogLevel    VERBOSE\n"
- title: A.5.  Cyrus IMAP and UW IMAP
  contents:
  - "A.5.  Cyrus IMAP and UW IMAP\n   Cyrus IMAP and UW IMAP do not support logging\
    \ the source port for the\n   time being.  Both software use syslog to create\
    \ logs; it should not\n   be too difficult to get it supported by adding some\
    \ new code.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Mohamed Boucadair reviewed the initial document and provided\
    \ useful\n   comments to improve it.  Reinaldo Penno, Joel Jaeggli, and Dan Wing\n\
    \   provided comments on the subsequent draft version that resulted in\n   major\
    \ revisions.  Serafim Petsis provided encouragement to publish\n   the document\
    \ after a hiatus of two years.\n   The authors are grateful to Dan Wing for his\
    \ help in moving this\n   document forward, and in particular for his helpful\
    \ comments on its\n   content.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tina Tsou\n   Philips Lighting\n   3 Burlington Woods\
    \ Dr #4t\n   Burlington, MA  01803\n   United States\n   Email: tina.tsou@philips.com\n\
    \   Weibo Li\n   China Telecom\n   109, Zhongshan Ave. West, Tianhe District\n\
    \   Guangzhou  510630\n   P.R. China\n   Email: mweiboli@gmail.com\n   Tom Taylor\n\
    \   Huawei Technologies\n   Ottawa\n   Canada\n   Email: tom.taylor.stds@gmail.com\n\
    \   James Huang\n   Huawei Technologies\n   Bantian, Longgang District\n   Shenzhen\
    \  518129\n   P.R. China\n   Email: James.huang@huawei.com\n"
