- title: __initial_text__
  contents:
  - "\t\t\tTELNET Byte Macro Option\n1. Command name and code:\n   BM 19\n2. Command\
    \ Meanings:\n   IAC WILL BM\n\tThe sender of this  command REQUESTS or AGREES\
    \  to use the  BM\n\toption, and will send sing1e  data characters which are to\
    \  be\n\tinterpreted as if longer data strings had been sent.\n   IAC WON'T BM\n\
    \tThe  sender  of  this  option  REFUSES  to  send  single  data\n\tcharacters\
    \ which  are  to be  interpreted  as if  longer  data\n\tstrings had been sent.\n\
    \   IAC DO BM\n\tThe sender REQUESTS or AGREES to have the other side (send  of\n\
    \tWILL BM) issue  send single  data characters which  are to  be\n\tinterpreted\
    \ as if longer data strings had been sent.\n   IAC DON'T BM\n\tThe sender REFUSES\
    \ to allow the other side to send single data\n\tcharacters which  are  to be\
    \  interpreted  as if  longer  data\n\tstrings had been sent.\n   IAC SB BM <DEFINE>\
    \ <macro byte> <count>\n                   <expansion string> IAC SE\n\twhere:\n\
    \t   <count> is a  one-byte binary number,  indicating how  many\n\t   <expansion\
    \ string> characters follow, up to the ending  IAC\n\t   SE, but not including\
    \ it.\n\t   <expansion string> is a string of one or more Telnet  ASCII\n\t  \
    \ characters and/or commands,  which the <macro  byte> is  to\n\t   represent;\
    \ any  character may  occur within  an  <expansion\n\t   string>.\n\tThe indicated\
    \  <macro  byte>  will  be  sent  instead  of  the\n\tindicated <expansion string>.\
    \ The receiver of the <macro byte>\n\t(the sender  of the  DO BM)  is to  behave\
    \ EXACTLY  as if  the\n\t<expansion string> of bytes had instead been received\
    \ from the\n\tnetwork. This  interpretation is  to  occur before  any  other\n\
    \tTelnet interpretations, unless the <macro byte> occurs as part\n\tof a BM subcommand;\
    \ in this case no special interpretation  is\n\tto be made.\n\tNote that the effect\
    \ of a particular <macro byte> may be\n\tnegated by reseting it to \"expand\"\
    \ into itself.\n\t<DEFINE> is decimal 01.\n   IAC SB BM <ACCEPT> <macro byte>\
    \ IAC SE\n\tThe receiver  of the  <DEFINE> for  <macro byte>  accepts  the\n\t\
    requested definition and will perform the indicating expansion\n\twhenever a <macro\
    \ byte>  is received and is  not part of a  BM\n\tsubcommand.\n\t<ACCEPT> is decimal\
    \ 02.\n   IAC SB BM <REFUSE> <macro byte> <REASON> IAC SE\n\tThe receive  of \
    \ the  <DEFINE> for  <macro  byte>  refuses  to\n\tperform  the  indicated  translation\
    \  from  <macro  byte>   to\n\t<expansion string> either because the particular\
    \ <macro  byte>\n\tis not  an acceptable  choice  or because  the length  of \
    \ the\n\t<expansion string> exceeds available storage.\n   <REFUSE> is decimal\
    \ 03.\n   <REASON> may be\n\t   <BAD CHOICE> which is decimal 01; or\n   IAC SB\
    \ BM <LITERAL> <macro byte> IAC SE\n\tThe <macro byte> is to be treated as real\
    \ data, rather than as\n\trepresentative of the <expansion string>\n\t<LITERAL>\
    \ is decimal 03.\n3. Default:\n   WON'T BM -- DON'T BM\n\tNo reinterpretation\
    \ of data is allowed.\n4. Motivation for the option:\n   Subcommands for Telnet\
    \ options currently require a minimum of  five\n   characters to be sent over\
    \ the network (i.e., IAC SB <Option  name>\n   IAC SE).   For sub-commands  which\
    \  are employed  infrequently,  in\n   absolute numbers and in relation  to normal\
    \ data, this overhead  is\n   tolerable. In other cases,  however, it is  not.\
    \ For example,  data\n   which is  sent  in  a  block-oriented fashion  may  need\
    \  a  \"block\n   separator\" mark. If  blocks are commonly  as small as  five\
    \ or  ten\n   bytes, then most of the cross-net data will be control information.\n\
    \   The BM option is intended  as a simple data compression  technique,\n   to\
    \ remove this overhead from the communication channel.\n5. Description of the\
    \ option\n   The  option  is   enabled  through  the   standard  Telnet   Option\n\
    \   negotiation process. Afterwards, the SENDER of data (the side which\n   sends\
    \ the IAC WILL BM) is  free to define and use mappings  between\n   single and\
    \ multiple NOT characters. Except for the ability to offer\n   a blanket refusal,\
    \  the receiver of  data has no  control over  the\n   definition and use of mappings.\n\
    \   The sender (of the WILL BM) is prohibited from using or  redefining\n   a\
    \ <macro byte> until  it has received an  <ACCEPT> or <REFUSE>,  in\n   reply\
    \ to a <DEFINE>.\n   NOTE: The  Telnet command  character  IAC (decimal  255)\
    \ may  be  a\n   member of an <expansion string> but is the ONLY character which\
    \ may\n   With  the  exception  of  IAC,  data  transfered  as  part  of   BM\n\
    \   subcommands are NOT to be interpreted. They are to be taken only as\n   their\
    \  normal  character  values.   This  avoids  the  problem   of\n   distinguishing\
    \ between a character which is to be taken as a <macro\n   byte>, and interpreted\
    \ as its corresponding <expansion string>, and\n   that same character to be taken\
    \  as its usual Telnet NVT value.  In\n   all other  cases,  however, <macro \
    \ byte>s  are to  be  interpreted\n   immediately, as if  the <expansion string>\
    \  had actually been  sent\n   across  the  network.    Expanded  strings  are\
    \   not  subject   to\n   reinterpretation, so that recursive definitions cannot\
    \ be made.\n   The <count>  in  the <DEFINE>  subcommand  allows the  receiver\
    \  to\n   allocate storage. IAC interpretation  is not over-ridden during  BM\n\
    \   subcommands so  that  IAC  SE will  continue  to  safely  terminate\n   malformed\
    \ subcommands. To include  IAC as part  of a <DEFINE>,  the\n   string \"IAC IAC\"\
    \ must be sent.\n   The BM option is notably inefficient with regard to problems\
    \ during\n   <macro byte> definition and use of  <macro byte>s as real data. \
    \ It\n   is expected that relatively few  <macro byte>s will be defined  and\n\
    \   that they will represent relatively short strings. Since the Telnet\n   data\
    \ space  between decimal  128 and  decimal 254  is not  normally\n"
