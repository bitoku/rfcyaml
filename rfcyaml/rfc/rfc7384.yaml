- title: __initial_text__
  contents:
  - "                Security Requirements of Time Protocols\n                   \
    \   in Packet Switched Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   As time and frequency distribution protocols are becoming\n   increasingly\
    \ common and widely deployed, concern about their exposure\n   to various security\
    \ threats is increasing.  This document defines a\n   set of security requirements\
    \ for time protocols, focusing on the\n   Precision Time Protocol (PTP) and the\
    \ Network Time Protocol (NTP).\n   This document also discusses the security impacts\
    \ of time protocol\n   practices, the performance implications of external security\n\
    \   practices on time protocols, and the dependencies between other\n   security\
    \ services and time synchronization.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7384.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................5\n  \
    \    2.1. Requirements Language ......................................5\n    \
    \  2.2. Abbreviations ..............................................6\n      2.3.\
    \ Common Terminology for PTP and NTP .........................6\n      2.4. Terms\
    \ Used in This Document ................................6\n   3. Security Threats\
    \ ................................................7\n      3.1. Threat Model ...............................................8\n\
    \           3.1.1. Internal vs. External Attackers .....................8\n  \
    \         3.1.2. Man in the Middle (MITM) vs. Packet Injector ........8\n    \
    \  3.2. Threat Analysis ............................................9\n      \
    \     3.2.1. Packet Manipulation .................................9\n        \
    \   3.2.2. Spoofing ............................................9\n          \
    \ 3.2.3. Replay Attack .......................................9\n           3.2.4.\
    \ Rogue Master Attack .................................9\n           3.2.5. Packet\
    \ Interception and Removal ....................10\n           3.2.6. Packet Delay\
    \ Manipulation ..........................10\n           3.2.7. L2/L3 DoS Attacks\
    \ ..................................10\n           3.2.8. Cryptographic Performance\
    \ Attacks ..................10\n           3.2.9. DoS Attacks against the Time\
    \ Protocol ..............11\n           3.2.10. Grandmaster Time Source Attack\
    \ (e.g., GPS Fraud) ..11\n           3.2.11. Exploiting Vulnerabilities in the\
    \ Time Protocol ...11\n           3.2.12. Network Reconnaissance ............................11\n\
    \      3.3. Threat Analysis Summary ...................................12\n  \
    \ 4. Requirement Levels .............................................13\n   5.\
    \ Security Requirements ..........................................14\n      5.1.\
    \ Clock Identity Authentication and Authorization ...........14\n           5.1.1.\
    \ Authentication and Authorization of Masters ........15\n           5.1.2. Recursive\
    \ Authentication and Authorization\n                  of Masters (Chain of Trust)\
    \ ........................16\n           5.1.3. Authentication and Authorization\
    \ of Slaves .........17\n           5.1.4. PTP: Authentication and Authorization\
    \ of\n                  P2P TCs by the Master ..............................18\n\
    \           5.1.5. PTP: Authentication and Authorization of\n                \
    \  Control Messages ...................................18\n      5.2. Protocol\
    \ Packet Integrity .................................19\n           5.2.1. PTP:\
    \ Hop-by-Hop vs. End-to-End Integrity\n                  Protection .........................................20\n\
    \                  5.2.1.1. Hop-by-Hop Integrity Protection ...........20\n  \
    \                5.2.1.2. End-to-End Integrity Protection ...........21\n    \
    \  5.3. Spoofing Prevention .......................................21\n      5.4.\
    \ Availability ..............................................22\n      5.5. Replay\
    \ Protection .........................................23\n      5.6. Cryptographic\
    \ Keys and Security Associations ..............23\n           5.6.1. Key Freshness\
    \ ......................................23\n           5.6.2. Security Association\
    \ ...............................24\n           5.6.3. Unicast and Multicast Associations\
    \ .................24\n      5.7. Performance ...............................................25\n\
    \      5.8. Confidentiality ...........................................26\n  \
    \    5.9. Protection against Packet Delay and Interception Attacks ..27\n    \
    \  5.10. Combining Secured with Unsecured Nodes ...................27\n      \
    \     5.10.1. Secure Mode .......................................28\n        \
    \   5.10.2. Hybrid Mode .......................................28\n   6. Summary\
    \ of Requirements ........................................29\n   7. Additional\
    \ Security Implications ...............................31\n      7.1. Security\
    \ and On-the-Fly Timestamping ......................31\n      7.2. PTP: Security\
    \ and Two-Step Timestamping ...................31\n      7.3. Intermediate Clocks\
    \ .......................................32\n      7.4. External Security Protocols\
    \ and Time Protocols ............32\n      7.5. External Security Services Requiring\
    \ Time .................33\n           7.5.1. Timestamped Certificates ...........................33\n\
    \           7.5.2. Time Changes and Replay Attacks ....................33\n  \
    \ 8. Issues for Further Discussion ..................................34\n   9.\
    \ Security Considerations ........................................34\n   10. References\
    \ ....................................................34\n      10.1. Normative\
    \ References .....................................34\n      10.2. Informative\
    \ References ...................................34\n   Acknowledgments ...................................................36\n\
    \   Contributors ......................................................36\n  \
    \ Author's Address ..................................................36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As time protocols are becoming increasingly common and widely\n\
    \   deployed, concern about the resulting exposure to various security\n   threats\
    \ is increasing.  If a time protocol is compromised, the\n   applications it serves\
    \ are prone to a range of possible attacks\n   including Denial of Service (DoS)\
    \ or incorrect behavior.\n   This document discusses the security aspects of time\
    \ distribution\n   protocols in packet networks and focuses on the two most common\n\
    \   protocols: the Network Time Protocol [NTPv4] and the Precision Time\n   Protocol\
    \ (PTP) [IEEE1588].  Note that although PTP was not defined by\n   the IETF, it\
    \ is one of the two most common time protocols; hence, it\n   is included in the\
    \ discussion.\n   The Network Time Protocol was defined with an inherent security\n\
    \   protocol; [NTPv4] defines a security protocol that is based on a\n   symmetric\
    \ key authentication scheme, and [AutoKey] presents an\n   alternative security\
    \ protocol, based on a public key authentication\n   scheme.  [IEEE1588] includes\
    \ an experimental security protocol,\n   defined in Annex K of the standard, but\
    \ this Annex was never\n   formalized into a fully defined security protocol.\n\
    \   While NTP includes an inherent security protocol, the absence of a\n   standard\
    \ security solution for PTP undoubtedly contributed to the\n   wide deployment\
    \ of unsecured time synchronization solutions.\n   However, in some cases, security\
    \ mechanisms may not be strictly\n   necessary, e.g., due to other security practices\
    \ in place or due to\n   the architecture of the network.  A time synchronization\
    \ security\n   solution, much like any security solution, is comprised of various\n\
    \   building blocks and must be carefully tailored for the specific\n   system\
    \ in which it is deployed.  Based on a system-specific threat\n   assessment,\
    \ the benefits of a security solution must be weighed\n   against the potential\
    \ risks, and based on this trade-off an optimal\n   security solution can be selected.\n\
    \   The target audience of this document includes:\n   o  Timing and networking\
    \ equipment vendors - can benefit from this\n      document by deriving the security\
    \ features that should be\n      supported in the time/networking equipment.\n\
    \   o  Standards development organizations - can use the requirements\n      defined\
    \ in this document when specifying security mechanisms for a\n      time protocol.\n\
    \   o  Network operators - can use this document as a reference when\n      designing\
    \ a network and its security architecture.  As stated\n      above, the requirements\
    \ in this document may be deployed\n      selectively based on a careful per-system\
    \ threat analysis.\n   This document attempts to add clarity to the time protocol\
    \ security\n   requirements discussion by addressing a series of questions:\n\
    \   (1) What are the threats that need to be addressed for the time\n       protocol\
    \ and what security services need to be provided (e.g., a\n       malicious NTP\
    \ server or PTP master)?\n   (2) What external security practices impact the security\
    \ and\n       performance of time keeping and what can be done to mitigate\n \
    \      these impacts (e.g., an IPsec tunnel in the time protocol traffic\n   \
    \    path)?\n   (3) What are the security impacts of time protocol practices (e.g.,\n\
    \       on-the-fly modification of timestamps)?\n   (4) What are the dependencies\
    \ between other security services and\n       time protocols?  (For example, which\
    \ comes first - the\n       certificate or the timestamp?)\n   In light of the\
    \ questions above, this document defines a set of\n   requirements for security\
    \ solutions for time protocols, focusing on\n   PTP and NTP.\n"
- title: 2.  Terminology
  contents:
  - '2.  Terminology

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [KEYWORDS].\n   This document describes security requirements; thus, requirements\
    \ are\n   phrased in the document in the form \"the security mechanism\n   MUST/SHOULD/...\"\
    .  Note that the phrasing does not imply that this\n   document defines a specific\
    \ security mechanism, but that it defines\n   the requirements with which every\
    \ security mechanism should comply.\n"
- title: 2.2.  Abbreviations
  contents:
  - "2.2.  Abbreviations\n   BC       Boundary Clock [IEEE1588]\n   BMCA     Best\
    \ Master Clock Algorithm [IEEE1588]\n   DoS      Denial of Service\n   MITM  \
    \   Man in the Middle\n   NTP      Network Time Protocol [NTPv4]\n   OC      \
    \ Ordinary Clock [IEEE1588]\n   P2P TC   Peer-to-Peer Transparent Clock [IEEE1588]\n\
    \   PTP      Precision Time Protocol [IEEE1588]\n   TC       Transparent Clock\
    \ [IEEE1588]\n"
- title: 2.3.  Common Terminology for PTP and NTP
  contents:
  - "2.3.  Common Terminology for PTP and NTP\n   This document refers to both PTP\
    \ and NTP.  For the sake of\n   consistency, throughout the document the term\
    \ \"master\" applies to\n   both a PTP master and an NTP server.  Similarly, the\
    \ term \"slave\"\n   applies to both PTP slaves and NTP clients.  The term \"\
    protocol\n   packets\" refers generically to PTP and NTP messages.\n"
- title: 2.4.  Terms Used in This Document
  contents:
  - "2.4.  Terms Used in This Document\n   o  Clock - A node participating in the\
    \ protocol (either PTP or NTP).\n      A clock can be a master, a slave, or an\
    \ intermediate clock (see\n      corresponding definitions below).\n   o  Control\
    \ packets - Packets used by the protocol to exchange\n      information between\
    \ clocks that is not strictly related to the\n      time.  NTP uses NTP Control\
    \ Messages.  PTP uses Announce,\n      Signaling, and Management messages.\n \
    \  o  End-to-end security - A security approach where secured packets\n      sent\
    \ from a source to a destination are not modified by\n      intermediate nodes,\
    \ allowing the destination to authenticate the\n      source of the packets and\
    \ to verify their integrity.  In the\n      context of confidentiality, end-to-end\
    \ encryption guarantees that\n      intermediate nodes cannot eavesdrop to en\
    \ route packets.  However,\n      as discussed in Section 5, confidentiality is\
    \ not a strict\n      requirement in this document.\n   o  Grandmaster - A master\
    \ that receives time information from a\n      locally attached clock device and\
    \ not through the network.  A\n      grandmaster distributes its time to other\
    \ clocks in the network.\n   o  Hop-by-hop security - A security approach where\
    \ secured packets\n      sent from a source to a destination may be modified by\n\
    \      intermediate nodes.  In this approach intermediate nodes share the\n  \
    \    encryption key with the source and destination, allowing them to\n      re-encrypt\
    \ or re-authenticate modified packets before relaying\n      them to the destination.\n\
    \   o  Intermediate clock - A clock that receives timing information from\n  \
    \    a master and sends timing information to other clocks.  In NTP,\n      this\
    \ term refers to an NTP server that is not a Stratum 1 server.\n      In PTP,\
    \ this term refers to a BC or a TC.\n   o  Master - A clock that generates timing\
    \ information to other clocks\n      in the network.  In NTP, 'master' refers\
    \ to an NTP server.  In\n      PTP, 'master' refers to a master OC (aka grandmaster)\
    \ or to a port\n      of a BC that is in the master state.\n   o  Protocol packets\
    \ - Packets used by the time protocol.  The\n      terminology used in this document\
    \ distinguishes between time\n      packets and control packets.\n   o  Secured\
    \ clock - A clock that supports a security mechanism that\n      complies to the\
    \ requirements in this document.\n   o  Slave - A clock that receives timing information\
    \ from a master.\n      In NTP, 'slave' refers to an NTP client.  In PTP, 'slave'\
    \ refers\n      to a slave OC or to a port of a BC that is in the slave state.\n\
    \   o  Time packets - Protocol packets carrying time information.\n   o  Unsecured\
    \ clock - A clock that does not support a security\n      mechanism according\
    \ to the requirements in this document.\n"
- title: 3.  Security Threats
  contents:
  - "3.  Security Threats\n   This section discusses the possible attacker types and\
    \ analyzes\n   various attacks against time protocols.\n   The literature is rich\
    \ with security threats of time protocols, e.g.,\n   [Traps], [AutoKey], [TimeSec],\
    \ [SecPTP], and [SecSen].  The threat\n   analysis in this document is mostly\
    \ based on [TimeSec].\n"
- title: 3.1.  Threat Model
  contents:
  - "3.1.  Threat Model\n   A time protocol can be attacked by various types of attackers.\n\
    \   The analysis in this document classifies attackers according to two\n   criteria,\
    \ as described in Sections 3.1.1 and 3.1.2.\n"
- title: 3.1.1.  Internal vs. External Attackers
  contents:
  - "3.1.1.  Internal vs. External Attackers\n   In the context of internal and external\
    \ attackers, the underlying\n   assumption is that the time protocol is secured\
    \ by either an\n   encryption mechanism, an authentication mechanism, or both.\n\
    \   Internal attackers either have access to a trusted segment of the\n   network\
    \ or possess the encryption or authentication keys.  An\n   internal attack can\
    \ also be performed by exploiting vulnerabilities\n   in devices; for example,\
    \ by installing malware or obtaining\n   credentials to reconfigure the device.\
    \  Thus, an internal attacker\n   can maliciously tamper with legitimate traffic\
    \ in the network as well\n   as generate its own traffic and make it appear legitimate\
    \ to its\n   attacked nodes.\n   Note that internal attacks are a special case\
    \ of Byzantine failures,\n   where a node in the system may fail in arbitrary\
    \ ways; by crashing,\n   by omitting messages, or by malicious behavior.  This\
    \ document\n   focuses on nodes that demonstrate malicious behavior.\n   External\
    \ attackers, on the other hand, do not have the keys and have\n   access only\
    \ to the encrypted or authenticated traffic.\n   Obviously, in the absence of\
    \ a security mechanism, there is no\n   distinction between internal and external\
    \ attackers, since all\n   attackers are internal in practice.\n"
- title: 3.1.2.  Man in the Middle (MITM) vs. Packet Injector
  contents:
  - "3.1.2.  Man in the Middle (MITM) vs. Packet Injector\n   MITM attackers are located\
    \ in a position that allows interception and\n   modification of in-flight protocol\
    \ packets.  It is assumed that an\n   MITM attacker has physical access to a segment\
    \ of the network or has\n   gained control of one of the nodes in the network.\n\
    \   A traffic injector is not located in an MITM position, but can attack\n  \
    \ by generating protocol packets.  An injector can reside either within\n   the\
    \ attacked network or on an external network that is connected to\n   the attacked\
    \ network.  An injector can also potentially eavesdrop on\n   protocol packets\
    \ sent as multicast, record them, and replay them\n   later.\n"
- title: 3.2.  Threat Analysis
  contents:
  - '3.2.  Threat Analysis

    '
- title: 3.2.1.  Packet Manipulation
  contents:
  - "3.2.1.  Packet Manipulation\n   A packet manipulation attack results when an\
    \ MITM attacker receives\n   timing protocol packets, alters them, and relays\
    \ them to their\n   destination, allowing the attacker to maliciously tamper with\
    \ the\n   protocol.  This can result in a situation where the time protocol is\n\
    \   apparently operational but providing intentionally inaccurate\n   information.\n"
- title: 3.2.2.  Spoofing
  contents:
  - "3.2.2.  Spoofing\n   In spoofing, an injector masquerades as a legitimate node\
    \ in the\n   network by generating and transmitting protocol packets or control\n\
    \   packets.  Two typical examples of spoofing attacks:\n   o  An attacker can\
    \ impersonate the master, allowing malicious\n      distribution of false timing\
    \ information.\n   o  An attacker can impersonate a legitimate clock, a slave,\
    \ or an\n      intermediate clock, by sending malicious messages to the master,\n\
    \      causing the master to respond to the legitimate clock with\n      protocol\
    \ packets that are based on the spoofed messages.\n      Consequently, the delay\
    \ computations of the legitimate clock are\n      based on false information.\n\
    \   As with packet manipulation, this attack can result in a situation\n   where\
    \ the time protocol is apparently operational but providing\n   intentionally\
    \ inaccurate information.\n"
- title: 3.2.3.  Replay Attack
  contents:
  - "3.2.3.  Replay Attack\n   In a replay attack, an attacker records protocol packets\
    \ and replays\n   them at a later time without any modification.  This can also\
    \ result\n   in a situation where the time protocol is apparently operational\
    \ but\n   providing intentionally inaccurate information.\n"
- title: 3.2.4.  Rogue Master Attack
  contents:
  - "3.2.4.  Rogue Master Attack\n   In a rogue master attack, an attacker causes\
    \ other nodes in the\n   network to believe it is a legitimate master.  As opposed\
    \ to the\n   spoofing attack, in the rogue master attack the attacker does not\n\
    \   fake its identity, but rather manipulates the master election process\n  \
    \ using malicious control packets.  For example, in PTP, an attacker\n   can manipulate\
    \ the Best Master Clock Algorithm (BMCA) and cause other\n   nodes in the network\
    \ to believe it is the most eligible candidate to\n   be a grandmaster.\n   In\
    \ PTP, a possible variant of this attack is the rogue TC/BC attack.\n   Similar\
    \ to the rogue master attack, an attacker can cause victims to\n   believe it\
    \ is a legitimate TC or BC, allowing the attacker to\n   manipulate the time information\
    \ forwarded to the victims.\n"
- title: 3.2.5.  Packet Interception and Removal
  contents:
  - "3.2.5.  Packet Interception and Removal\n   A packet interception and removal\
    \ attack results when an MITM\n   attacker intercepts and drops protocol packets,\
    \ preventing the\n   destination node from receiving some or all of the protocol\
    \ packets.\n"
- title: 3.2.6.  Packet Delay Manipulation
  contents:
  - "3.2.6.  Packet Delay Manipulation\n   In a packet delay manipulation scenario,\
    \ an MITM attacker receives\n   protocol packets and relays them to their destination\
    \ after adding a\n   maliciously computed delay.  The attacker can use various\
    \ delay\n   attack strategies; the added delay can be constant, jittered, or\n\
    \   slowly wandering.  Each of these strategies has a different impact,\n   but\
    \ they all effectively manipulate the attacked clock.\n   Note that the victim\
    \ still receives one copy of each packet, contrary\n   to the replay attack, where\
    \ some or all of the packets may be\n   received by the victim more than once.\n"
- title: 3.2.7.  L2/L3 DoS Attacks
  contents:
  - "3.2.7.  L2/L3 DoS Attacks\n   There are many possible Layer 2 and Layer 3 DoS\
    \ attacks, e.g., IP\n   spoofing, ARP spoofing [Hack], MAC flooding [Anatomy],\
    \ and many\n   others.  As the target's availability is compromised, the timing\n\
    \   protocol is affected accordingly.\n"
- title: 3.2.8.  Cryptographic Performance Attacks
  contents:
  - "3.2.8.  Cryptographic Performance Attacks\n   In cryptographic performance attacks,\
    \ an attacker transmits fake\n   protocol packets, causing high utilization of\
    \ the cryptographic\n   engine at the receiver, which attempts to verify the integrity\
    \ of\n   these fake packets.\n   This DoS attack is applicable to all encryption\
    \ and authentication\n   protocols.  However, when the time protocol uses a dedicated\
    \ security\n   mechanism implemented in a dedicated cryptographic engine, this\n\
    \   attack can be applied to cause DoS specifically to the time protocol.\n"
- title: 3.2.9.  DoS Attacks against the Time Protocol
  contents:
  - "3.2.9.  DoS Attacks against the Time Protocol\n   An attacker can attack a clock\
    \ by sending an excessive number of time\n   protocol packets, thus degrading\
    \ the victim's performance.  This\n   attack can be implemented, for example,\
    \ using the attacks described\n   in Sections 3.2.2 and 3.2.4.\n"
- title: 3.2.10.  Grandmaster Time Source Attack (e.g., GPS Fraud)
  contents:
  - "3.2.10.  Grandmaster Time Source Attack (e.g., GPS Fraud)\n   Grandmasters receive\
    \ their time from an external accurate time\n   source, such as an atomic clock\
    \ or a GPS clock, and then distribute\n   this time to the slaves using the time\
    \ protocol.\n   Time source attacks are aimed at the accurate time source of the\n\
    \   grandmaster.  For example, if the grandmaster uses a GPS-based clock\n   as\
    \ its reference source, an attacker can jam the reception of the GPS\n   signal,\
    \ or transmit a signal similar to one from a GPS satellite,\n   causing the grandmaster\
    \ to use a false reference time.\n   Note that this attack is outside the scope\
    \ of the time protocol.\n   While various security measures can be taken to mitigate\
    \ this attack,\n   these measures are outside the scope of the security requirements\n\
    \   defined in this document.\n"
- title: 3.2.11.  Exploiting Vulnerabilities in the Time Protocol
  contents:
  - "3.2.11.  Exploiting Vulnerabilities in the Time Protocol\n   Time protocols can\
    \ be attacked by exploiting vulnerabilities in the\n   protocol, implementation\
    \ bugs, or misconfigurations (e.g.,\n   [NTPDDoS]).  It should be noted that such\
    \ attacks cannot typically be\n   mitigated by security mechanisms.  However,\
    \ when a new vulnerability\n   is discovered, operators should react as soon as\
    \ possible, and take\n   the necessary measures to address it.\n"
- title: 3.2.12.  Network Reconnaissance
  contents:
  - "3.2.12.  Network Reconnaissance\n   An attacker can exploit the time protocol\
    \ to collect information such\n   as addresses and locations of nodes that take\
    \ part in the protocol.\n   Reconnaissance can be applied by either passively\
    \ eavesdropping on\n   protocol packets or sending malicious packets and gathering\n\
    \   information from the responses.  By eavesdropping on a time protocol,\n  \
    \ an attacker can learn the network latencies, which provide\n   information about\
    \ the network topology and node locations.\n   Moreover, properties such as the\
    \ frequency of the protocol packets,\n   or the exact times at which they are\
    \ sent, can allow fingerprinting\n   of specific nodes; thus, protocol packets\
    \ from a node can be\n   identified even if network addresses are hidden or encrypted.\n"
- title: 3.3.  Threat Analysis Summary
  contents:
  - "3.3.  Threat Analysis Summary\n   The two key factors to a threat analysis are\
    \ the impact and the\n   likelihood of each of the analyzed attacks.\n   Table\
    \ 1 summarizes the security attacks presented in Section 3.2.\n   For each attack,\
    \ the table specifies its impact, and its\n   applicability to each of the attacker\
    \ types presented in Section 3.1.\n   Table 1 clearly shows the distinction between\
    \ external and internal\n   attackers, and motivates the usage of authentication\
    \ and integrity\n   protection, significantly reducing the impact of external\
    \ attackers.\n   The Impact column provides an intuitive measure of the severity\
    \ of\n   each attack, and the relevant Attacker Type column provides an\n   intuition\
    \ about how difficult each attack is to implement and, hence,\n   about the likelihood\
    \ of each attack.\n   The Impact column in Table 1 can have one of three values:\n\
    \   o  DoS - the attack causes denial of service to the attacked node,\n     \
    \ the impact of which is not restricted to the time protocol.\n   o  Accuracy\
    \ degradation - the attack yields a degradation in the\n      slave accuracy,\
    \ but does not completely compromise the slaves'\n      time and frequency.\n\
    \   o  False time - slaves align to a false time or frequency value due\n    \
    \  to the attack.  Note that if the time protocol aligns to a false\n      time,\
    \ it may cause DoS to other applications that rely on accurate\n      time.  However,\
    \ for the purpose of the analysis in this section,\n      we distinguish this\
    \ implication from 'DoS', which refers to a DoS\n      attack that is not necessarily\
    \ aimed at the time protocol.  All\n      attacks that have a '+' for 'False Time'\
    \ implicitly have a '+' for\n      'Accuracy Degradation'.  Note that 'False Time'\
    \ necessarily\n      implies 'Accuracy Degradation'.  However, two different terms\
    \ are\n      used, indicating two levels of severity.\n   The Attacker Type column\
    \ refers to the four possible combinations of\n   the attacker types defined in\
    \ Section 3.1.\n"
- title: +-----------------------------+-------------------++-------------------+
  contents:
  - '+-----------------------------+-------------------++-------------------+

    '
- title: '| Attack                      |      Impact       ||   Attacker Type   |'
  contents:
  - '| Attack                      |      Impact       ||   Attacker Type   |

    '
- title: '|                             +-----+--------+----++---------+---------+'
  contents:
  - '|                             +-----+--------+----++---------+---------+

    '
- title: '|                             |False|Accuracy|    ||Internal |External |'
  contents:
  - '|                             |False|Accuracy|    ||Internal |External |

    '
- title: '|                             |Time |Degrad. |DoS ||MITM|Inj.|MITM|Inj.|'
  contents:
  - '|                             |Time |Degrad. |DoS ||MITM|Inj.|MITM|Inj.|

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Manipulation                 |  +  |        |    || +  |    |    |    |'
  contents:
  - '|Manipulation                 |  +  |        |    || +  |    |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Spoofing                     |  +  |        |    || +  | +  |    |    |'
  contents:
  - '|Spoofing                     |  +  |        |    || +  | +  |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Replay attack                |  +  |        |    || +  | +  |    |    |'
  contents:
  - '|Replay attack                |  +  |        |    || +  | +  |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Rogue master attack          |  +  |        |    || +  | +  |    |    |'
  contents:
  - '|Rogue master attack          |  +  |        |    || +  | +  |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Interception and removal     |     |   +    | +  || +  |    | +  |    |'
  contents:
  - '|Interception and removal     |     |   +    | +  || +  |    | +  |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Packet delay manipulation    |  +  |        |    || +  |    | +  |    |'
  contents:
  - '|Packet delay manipulation    |  +  |        |    || +  |    | +  |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|L2/L3 DoS attacks            |     |        | +  || +  | +  | +  | +  |'
  contents:
  - '|L2/L3 DoS attacks            |     |        | +  || +  | +  | +  | +  |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Crypt. performance attacks   |     |        | +  || +  | +  | +  | +  |'
  contents:
  - '|Crypt. performance attacks   |     |        | +  || +  | +  | +  | +  |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Time protocol DoS attacks    |     |        | +  || +  | +  |    |    |'
  contents:
  - '|Time protocol DoS attacks    |     |        | +  || +  | +  |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - '+-----------------------------+-----+--------+----++----+----+----+----+

    '
- title: '|Master time source attack    |  +  |        |    || +  | +  | +  | +  |'
  contents:
  - '|Master time source attack    |  +  |        |    || +  | +  | +  | +  |

    '
- title: '|(e.g., GPS spoofing)         |     |        |    ||    |    |    |    |'
  contents:
  - '|(e.g., GPS spoofing)         |     |        |    ||    |    |    |    |

    '
- title: +-----------------------------+-----+--------+----++----+----+----+----+
  contents:
  - "+-----------------------------+-----+--------+----++----+----+----+----+\n  \
    \                   Table 1: Threat Analysis - Summary\n   The threats discussed\
    \ in this section provide the background for the\n   security requirements presented\
    \ in Section 5.\n"
- title: 4.  Requirement Levels
  contents:
  - "4.  Requirement Levels\n   The security requirements are presented in Section\
    \ 5.  Each\n   requirement is defined with a requirement level, in accordance\
    \ with\n   the requirement levels defined in Section 2.1.\n   The requirement\
    \ levels in this document are affected by the following\n   factors:\n   o  Impact:\n\
    \      The possible impact of not implementing the requirement, as\n      illustrated\
    \ in the Impact column of Table 1.  For example, a\n      requirement that addresses\
    \ a threat that can be implemented by an\n      external injector is typically\
    \ a 'MUST', since the threat can be\n      implemented by all the attacker types\
    \ analyzed in Section 3.1.\n   o  Difficulty of the corresponding attack:\n  \
    \    The level of difficulty of the possible attacks that become\n      possible\
    \ by not implementing the requirement.  The level of\n      difficulty is reflected\
    \ in the Attacker Type column of Table 1.\n      For example, a requirement that\
    \ addresses a threat that only\n      compromises the availability of the protocol\
    \ is typically no more\n      than a 'SHOULD'.\n   o  Practical considerations:\n\
    \      Various practical factors that may affect the requirement.  For\n     \
    \ example, if a requirement is very difficult to implement, or is\n      applicable\
    \ to very specific scenarios, these factors may reduce\n      the requirement\
    \ level.\n   Section 5 lists the requirements.  For each requirement, there is\
    \ a\n   short explanation detailing the reason for its requirement level.\n"
- title: 5.  Security Requirements
  contents:
  - "5.  Security Requirements\n   This section defines a set of security requirements.\
    \  These\n   requirements are phrased in the form \"the security mechanism\n \
    \  MUST/SHOULD/MAY...\".  However, this document does not specify how\n   these\
    \ requirements can be met.  While these requirements can be\n   satisfied by defining\
    \ explicit security mechanisms for time\n   protocols, at least a subset of the\
    \ requirements can be met by\n   applying common security practices to the network\
    \ or by using\n   existing security protocols, such as [IPsec] or [MACsec].  Thus,\n\
    \   security solutions that address these requirements are outside the\n   scope\
    \ of this document.\n"
- title: 5.1.  Clock Identity Authentication and Authorization
  contents:
  - "5.1.  Clock Identity Authentication and Authorization\n   Requirement\n     \
    \ The security mechanism MUST support authentication.\n   Requirement\n      The\
    \ security mechanism MUST support authorization.\n   Requirement Level\n     \
    \ The requirements in this subsection address the spoofing attack\n      (Section\
    \ 3.2.2) and the rogue master attack (Section 3.2.4).\n      The requirement level\
    \ of these requirements is 'MUST' since, in\n      the absence of these requirements,\
    \ the protocol is exposed to\n      attacks that are easy to implement and have\
    \ a high impact.\n   Discussion\n      Authentication refers to verifying the\
    \ identity of the peer clock.\n      Authorization, on the other hand, refers\
    \ to verifying that the\n      peer clock is permitted to play the role that it\
    \ plays in the\n      protocol.  For example, some nodes may be permitted to be\
    \ masters,\n      while other nodes are only permitted to be slaves or TCs.\n\
    \      Authentication is typically implemented by means of a\n      cryptographic\
    \ signature, allowing the verification of the identity\n      of the sender. \
    \ Authorization requires clocks to maintain a list\n      of authorized clocks,\
    \ or a \"black list\" of clocks that should be\n      denied service or revoked.\n\
    \      It is noted that while the security mechanism is required to\n      provide\
    \ an authorization mechanism, the deployment of such a\n      mechanism depends\
    \ on the nature of the network.  For example, a\n      network that deploys PTP\
    \ may consist of a set of identical OCs,\n      where all clocks are equally permitted\
    \ to be a master.  In such a\n      network, an authorization mechanism may not\
    \ be necessary.\n      The following subsections describe five distinct cases\
    \ of clock\n      authentication.\n"
- title: 5.1.1.  Authentication and Authorization of Masters
  contents:
  - "5.1.1.  Authentication and Authorization of Masters\n   Requirement\n      The\
    \ security mechanism MUST support an authentication mechanism,\n      allowing\
    \ slaves to authenticate the identity of masters.\n   Requirement\n      The authentication\
    \ mechanism MUST allow slaves to verify that the\n      authenticated master is\
    \ authorized to be a master.\n   Requirement Level\n      The requirements in\
    \ this subsection address the spoofing attack\n      (Section 3.2.2) and the rogue\
    \ master attack (Section 3.2.4).\n      The requirement level of these requirements\
    \ is 'MUST' since, in\n      the absence of these requirements, the protocol is\
    \ exposed to\n      attacks that are easy to implement and have a high impact.\n\
    \   Discussion\n      Clocks authenticate masters in order to ensure the authenticity\
    \ of\n      the time source.  It is important for a slave to verify the\n    \
    \  identity of the master, as well as to verify that the master is\n      indeed\
    \ authorized to be a master.\n"
- title: 5.1.2.  Recursive Authentication and Authorization of Masters (Chain of
  contents:
  - "5.1.2.  Recursive Authentication and Authorization of Masters (Chain of\n   \
    \     Trust)\n   Requirement\n      The security mechanism MUST support recursive\
    \ authentication and\n      authorization of the master, to be used in cases where\
    \ time\n      information is conveyed through intermediate clocks.\n   Requirement\
    \ Level\n      The requirement in this subsection addresses the spoofing attack\n\
    \      (Section 3.2.2) and the rogue master attack (Section 3.2.4).\n      The\
    \ requirement level of this requirement is 'MUST' since, in the\n      absence\
    \ of this requirement, the protocol is exposed to attacks\n      that are easy\
    \ to implement and have a high impact.\n   Discussion\n      In some cases, a\
    \ slave is connected to an intermediate clock that\n      is not the primary time\
    \ source.  For example, in PTP, a slave can\n      be connected to a Boundary\
    \ Clock (BC) or a Transparent Clock (TC),\n      which in turn is connected to\
    \ a grandmaster.  A similar example in\n      NTP is when a client is connected\
    \ to a Stratum 2 server, which is\n      connected to a Stratum 1 server.  In\
    \ both the PTP and the NTP\n      cases, the slave authenticates the intermediate\
    \ clock, and the\n      intermediate clock authenticates the grandmaster.  This\
    \ recursive\n      authentication process is referred to in [AutoKey] as\n   \
    \   proventication.\n      Specifically in PTP, this requirement implies that\
    \ if a slave\n      receives time information through a TC, it must authenticate\
    \ the\n      TC to which it is attached, as well as authenticate the master\n\
    \      from which it receives the time information, as per Section 5.1.1.\n  \
    \    Similarly, if a TC receives time information through an attached\n      TC,\
    \ it must authenticate the attached TC.\n"
- title: 5.1.3.  Authentication and Authorization of Slaves
  contents:
  - "5.1.3.  Authentication and Authorization of Slaves\n   Requirement\n      The\
    \ security mechanism MAY provide a means for a master to\n      authenticate its\
    \ slaves.\n   Requirement\n      The security mechanism MAY provide a means for\
    \ a master to verify\n      that the sender of a protocol packet is authorized\
    \ to send a\n      packet of this type.\n   Requirement Level\n      The requirement\
    \ in this subsection prevents DoS attacks against\n      the master (Section 3.2.9).\n\
    \      The requirement level of this requirement is 'MAY' since:\n      o  Its\
    \ impact is low, i.e., in the absence of this requirement the\n         protocol\
    \ is only exposed to DoS.\n      o  Practical considerations: requiring an NTP\
    \ server to\n         authenticate its clients may significantly impose on the\n\
    \         server's performance.\n      Note that while the requirement level of\
    \ this requirement is\n      'MAY', the requirement in Section 5.1.1 is 'MUST';\
    \ the security\n      mechanism must provide a means for authentication and\n\
    \      authorization, with an emphasis on the master.  Authentication and\n  \
    \    authorization of slaves are specified in this subsection as 'MAY'.\n   Discussion\n\
    \      Slaves and intermediate clocks are authenticated by masters in\n      order\
    \ to verify that they are authorized to receive timing\n      services from the\
    \ master.\n      Authentication of slaves prevents unauthorized clocks from\n\
    \      receiving time services.  Preventing the master from serving\n      unauthorized\
    \ clocks can help in mitigating DoS attacks against the\n      master.  Note that\
    \ the authentication of slaves might put a higher\n      load on the master than\
    \ serving the unauthorized clock; hence,\n      this requirement is 'MAY'.\n"
- title: '5.1.4.  PTP: Authentication and Authorization of P2P TCs by the Master'
  contents:
  - "5.1.4.  PTP: Authentication and Authorization of P2P TCs by the Master\n   Requirement\n\
    \      The security mechanism for PTP MAY provide a means for a master to\n  \
    \    authenticate the identity of the P2P TCs directly connected to it.\n   Requirement\n\
    \      The security mechanism for PTP MAY provide a means for a master to\n  \
    \    verify that P2P TCs directly connected to it are authorized to be\n     \
    \ TCs.\n   Requirement Level\n      The requirement in this subsection prevents\
    \ DoS attacks against\n      the master (Section 3.2.9).\n      The requirement\
    \ level of this requirement is 'MAY' for the same\n      reasons specified in\
    \ Section 5.1.3.\n   Discussion\n      P2P TCs that are one hop from the master\
    \ use the PDelay_Req and\n      PDelay_Resp handshake to compute the link delay\
    \ between the master\n      and TC.  These TCs are authenticated by the master.\n\
    \      Authentication of TCs, much like authentication of slaves, reduces\n  \
    \    unnecessary load on the master and peer TCs, by preventing the\n      master\
    \ from serving unauthorized clocks.\n"
- title: '5.1.5.  PTP: Authentication and Authorization of Control Messages'
  contents:
  - "5.1.5.  PTP: Authentication and Authorization of Control Messages\n   Requirement\n\
    \      The security mechanism for PTP MUST support authentication of\n      Announce\
    \ messages.  The authentication mechanism MUST also verify\n      that the sender\
    \ is authorized to be a master.\n   Requirement\n      The security mechanism\
    \ for PTP MUST support authentication and\n      authorization of Management messages.\n\
    \   Requirement\n      The security mechanism MAY support authentication and\n\
    \      authorization of Signaling messages.\n   Requirement Level\n      The requirements\
    \ in this subsection address the spoofing attack\n      (Section 3.2.2) and the\
    \ rogue master attack (Section 3.2.4).\n      The requirement level of the first\
    \ two requirements is 'MUST'\n      since, in the absence of these requirements,\
    \ the protocol is\n      exposed to attacks that are easy to implement and have\
    \ a high\n      impact.\n      The requirement level of the third requirement\
    \ is 'MAY' since its\n      impact greatly depends on the application for which\
    \ the Signaling\n      messages are used.\n   Discussion\n      Master election\
    \ is performed in PTP using the Best Master Clock\n      Algorithm (BMCA).  Each\
    \ Ordinary Clock (OC) announces its clock\n      attributes using Announce messages,\
    \ and the best master is elected\n      based on the information gathered from\
    \ all the candidates.\n      Announce messages must be authenticated in order\
    \ to prevent rogue\n      master attacks (Section 3.2.4).  Note that this subsection\n\
    \      specifies a requirement that is not necessarily included in\n      Sections\
    \ 5.1.1 or 5.1.3, since the BMCA is initiated before clocks\n      have been defined\
    \ as masters or slaves.\n      Management messages are used to monitor or configure\
    \ PTP clocks.\n      Malicious usage of Management messages enables various attacks,\n\
    \      such as the rogue master attack or DoS attack.\n      Signaling messages\
    \ are used by PTP clocks to exchange information\n      that is not strictly related\
    \ to time information or to master\n      selection, such as unicast negotiation.\
    \  Authentication and\n      authorization of Signaling messages may be required\
    \ in some\n      systems, depending on the application for which these messages\
    \ are\n      used.\n"
- title: 5.2.  Protocol Packet Integrity
  contents:
  - "5.2.  Protocol Packet Integrity\n   Requirement\n      The security mechanism\
    \ MUST protect the integrity of protocol\n      packets.\n   Requirement Level\n\
    \      The requirement in this subsection addresses the packet\n      manipulation\
    \ attack (Section 3.2.1).\n      The requirement level of this requirement is\
    \ 'MUST' since, in the\n      absence of this requirement, the protocol is exposed\
    \ to attacks\n      that are easy to implement and have high impact.\n   Discussion\n\
    \      While Section 5.1 refers to ensuring the identity an authorization\n  \
    \    of the source of a protocol packet, this subsection refers to\n      ensuring\
    \ that the packet arrived intact.  The integrity protection\n      mechanism ensures\
    \ the authenticity and completeness of data from\n      the data originator.\n\
    \      Integrity protection is typically implemented by means of an\n      Integrity\
    \ Check Value (ICV) that is included in protocol packets\n      and is verified\
    \ by the receiver.\n"
- title: '5.2.1.  PTP: Hop-by-Hop vs. End-to-End Integrity Protection'
  contents:
  - "5.2.1.  PTP: Hop-by-Hop vs. End-to-End Integrity Protection\n   Specifically\
    \ in PTP, when protocol packets are subject to\n   modification by TCs, the integrity\
    \ protection can be enforced in one\n   of two approaches: end-to-end or hop-by-hop.\n"
- title: 5.2.1.1.  Hop-by-Hop Integrity Protection
  contents:
  - "5.2.1.1.  Hop-by-Hop Integrity Protection\n   Each hop that needs to modify a\
    \ protocol packet:\n   o  Verifies its integrity.\n   o  Modifies the packet,\
    \ i.e., modifies the correctionField.  Note:\n      TCs improve the end-to-end\
    \ accuracy by updating a correctionField\n      (Clause 6.5 in [IEEE1588]) in\
    \ the PTP packet by adding the latency\n      caused by the current TC.\n   o\
    \  Re-generates the integrity protection, e.g., re-computes a Message\n      Authentication\
    \ Code (MAC).\n   In the hop-by-hop approach, the integrity of protocol packets\
    \ is\n   protected by induction on the path from the originator to the\n   receiver.\n\
    \   This approach is simple, but allows rogue TCs to modify protocol\n   packets.\n"
- title: 5.2.1.2.  End-to-End Integrity Protection
  contents:
  - "5.2.1.2.  End-to-End Integrity Protection\n   In this approach, the integrity\
    \ protection is maintained on the path\n   from the originator of a protocol packet\
    \ to the receiver.  This\n   allows the receiver to directly validate the protocol\
    \ packet without\n   the ability of intermediate TCs to manipulate the packet.\n\
    \   Since TCs need to modify the correctionField, a separate integrity\n   protection\
    \ mechanism is used specifically for the correctionField.\n   The end-to-end approach\
    \ limits the TC's impact to the correctionField\n   alone, while the rest of the\
    \ protocol packet is protected on an end-\n   to-end basis.  It should be noted\
    \ that this approach is more\n   difficult to implement than the hop-by-hop approach,\
    \ as it requires\n   the correctionField to be protected separately from the other\
    \ fields\n   of the packet, possibly using different cryptographic mechanisms\
    \ and\n   keys.\n"
- title: 5.3.  Spoofing Prevention
  contents:
  - "5.3.  Spoofing Prevention\n   Requirement\n      The security mechanism MUST\
    \ provide a means to prevent master\n      spoofing.\n   Requirement\n      The\
    \ security mechanism MUST provide a means to prevent slave\n      spoofing.\n\
    \   Requirement\n      PTP: The security mechanism MUST provide a means to prevent\
    \ P2P TC\n      spoofing.\n   Requirement Level\n      The requirements in this\
    \ subsection address spoofing attacks.  As\n      described in Section 3.2.2,\
    \ when these requirements are not met,\n      the attack may have a high impact,\
    \ causing slaves to rely on false\n      time information.  Thus, the requirement\
    \ level is 'MUST'.\n   Discussion\n      Spoofing attacks may take various forms,\
    \ and they can potentially\n      cause significant impact.  In a master spoofing\
    \ attack, the\n      attacker causes slaves to receive false information about\
    \ the\n      current time by masquerading as the master.\n      By spoofing a\
    \ slave or an intermediate node (the second example of\n      Section 3.2.2),\
    \ an attacker can tamper with the slaves' delay\n      computations.  These attacks\
    \ can be mitigated by an authentication\n      mechanism (Sections 5.1.3 and 5.1.4)\
    \ or by other means, for\n      example, a PTP Delay_Req can include a MAC that\
    \ is included in the\n      corresponding Delay_Resp message, allowing the slave\
    \ to verify\n      that the Delay_Resp was not sent in response to a spoofed message.\n"
- title: 5.4.  Availability
  contents:
  - "5.4.  Availability\n   Requirement\n      The security mechanism SHOULD include\
    \ measures to mitigate DoS\n      attacks against the time protocol.\n   Requirement\
    \ Level\n      The requirement in this subsection prevents DoS attacks against\n\
    \      the protocol (Section 3.2.9).\n      The requirement level of this requirement\
    \ is 'SHOULD' due to its\n      low impact, i.e., in the absence of this requirement\
    \ the protocol\n      is only exposed to DoS.\n   Discussion\n      The protocol\
    \ availability can be compromised by several different\n      attacks.  An attacker\
    \ can inject protocol packets to implement the\n      spoofing attack (Section\
    \ 3.2.2) or the rogue master attack\n      (Section 3.2.4), causing DoS to the\
    \ victim (Section 3.2.9).\n      An authentication mechanism (Section 5.1) limits\
    \ these attacks\n      strictly to internal attackers; thus, it prevents external\n\
    \      attackers from performing them.  Hence, the requirements of\n      Section\
    \ 5.1 can be used to mitigate this attack.  Note that\n      Section 5.1 addresses\
    \ a wider range of threats, whereas the\n      current section is focused on availability.\n\
    \      The DoS attacks described in Section 3.2.7 are performed at lower\n   \
    \   layers than the time protocol layer, and they are thus outside the\n     \
    \ scope of the security requirements defined in this document.\n"
- title: 5.5.  Replay Protection
  contents:
  - "5.5.  Replay Protection\n   Requirement\n      The security mechanism MUST include\
    \ a replay prevention mechanism.\n   Requirement Level\n      The requirement\
    \ in this subsection prevents replay attacks\n      (Section 3.2.3).\n      The\
    \ requirement level of this requirement is 'MUST' since, in the\n      absence\
    \ of this requirement, the protocol is exposed to attacks\n      that are easy\
    \ to implement and have a high impact.\n   Discussion\n      The replay attack\
    \ (Section 3.2.3) can compromise both the\n      integrity and availability of\
    \ the protocol.  Common encryption and\n      authentication mechanisms include\
    \ replay prevention mechanisms\n      that typically use a monotonously increasing\
    \ packet sequence\n      number.\n"
- title: 5.6.  Cryptographic Keys and Security Associations
  contents:
  - '5.6.  Cryptographic Keys and Security Associations

    '
- title: 5.6.1.  Key Freshness
  contents:
  - "5.6.1.  Key Freshness\n   Requirement\n      The security mechanism MUST provide\
    \ a means to refresh the\n      cryptographic keys.\n      The cryptographic keys\
    \ MUST be refreshed frequently.\n   Requirement Level\n      The requirement level\
    \ of this requirement is 'MUST' since key\n      freshness is an essential property\
    \ for cryptographic algorithms,\n      as discussed below.\n   Discussion\n  \
    \    Key freshness guarantees that both sides share a common updated\n      secret\
    \ key.  It also helps in preventing replay attacks.  Thus, it\n      is important\
    \ for keys to be refreshed frequently.  Note that the\n      term 'frequently'\
    \ is used without a quantitative requirement, as\n      the precise frequency\
    \ requirement should be considered on a per-\n      system basis, based on the\
    \ threats and system requirements.\n"
- title: 5.6.2.  Security Association
  contents:
  - "5.6.2.  Security Association\n   Requirement\n      The security protocol SHOULD\
    \ support a security association\n      protocol where:\n         o  Two or more\
    \ clocks authenticate each other.\n         o  The clocks generate and agree on\
    \ a cryptographic session\n            key.\n   Requirement\n      Each instance\
    \ of the association protocol SHOULD produce a\n      different session key.\n\
    \   Requirement Level\n      The requirement level of this requirement is 'SHOULD'\
    \ since it may\n      be expensive in terms of performance, especially in low-cost\n\
    \      clocks.\n   Discussion\n      The security requirements in Sections 5.1\
    \ and 5.2 require usage of\n      cryptographic mechanisms, deploying cryptographic\
    \ keys.  A\n      security association (e.g., [IPsec]) is an important building\n\
    \      block in these mechanisms.\n      It should be noted that in some cases,\
    \ different security\n      association mechanisms may be used at different levels\
    \ of clock\n      hierarchies.  For example, the association between a Stratum\
    \ 2\n      clock and a Stratum 3 clock in NTP may have different\n      characteristics\
    \ than an association between two clocks at the same\n      stratum level.  On\
    \ a related note, in some cases, a hybrid\n      solution may be used, where a\
    \ subset of the network is not secured\n      at all (see Section 5.10.2).\n"
- title: 5.6.3.  Unicast and Multicast Associations
  contents:
  - "5.6.3.  Unicast and Multicast Associations\n   Requirement\n      The security\
    \ mechanism SHOULD support security association\n      protocols for unicast and\
    \ for multicast associations.\n   Requirement Level\n      The requirement level\
    \ of this requirement is 'SHOULD' since it may\n      be expensive in terms of\
    \ performance, especially for low-cost\n      clocks.\n   Discussion\n      A\
    \ unicast protocol requires an association protocol between two\n      clocks,\
    \ whereas a multicast protocol requires an association\n      protocol among two\
    \ or more clocks, where one of the clocks is a\n      master.\n"
- title: 5.7.  Performance
  contents:
  - "5.7.  Performance\n   Requirement\n      The security mechanism MUST be designed\
    \ in such a way that it does\n      not significantly degrade the quality of the\
    \ time transfer.\n   Requirement\n      The mechanism SHOULD minimize computational\
    \ load.\n   Requirement\n      The mechanism SHOULD minimize storage requirements\
    \ of client state\n      in the master.\n   Requirement\n      The mechanism SHOULD\
    \ minimize the bandwidth overhead required by\n      the security protocol.\n\
    \   Requirement Level\n      While the quality of the time transfer is clearly\
    \ a 'MUST', the\n      other three performance requirements are 'SHOULD', since\
    \ some\n      systems may be more sensitive to resource consumption than others;\n\
    \      hence, these requirements should be considered on a per-system\n      basis.\n\
    \   Discussion\n      Performance efficiency is important since client restrictions\n\
    \      often dictate a low processing and memory footprint and because\n     \
    \ the server may have extensive fan-out.\n      Note that the performance requirements\
    \ refer to a time-protocol-\n      specific security mechanism.  In systems where\
    \ a security protocol\n      is used for other types of traffic as well, this\
    \ document does not\n      place any performance requirements on the security\
    \ protocol\n      performance.  For example, if IPsec encryption is used for\n\
    \      securing all information between the master and slave node,\n      including\
    \ information that is not part of the time protocol, the\n      requirements in\
    \ this subsection are not necessarily applicable.\n"
- title: 5.8.  Confidentiality
  contents:
  - "5.8.  Confidentiality\n   Requirement\n      The security mechanism MAY provide\
    \ confidentiality protection of\n      the protocol packets.\n   Requirement Level\n\
    \      The requirement level of this requirement is 'MAY' since the\n      absence\
    \ of this requirement does not expose the protocol to severe\n      threats, as\
    \ discussed below.\n   Discussion\n      In the context of time protocols, confidentiality\
    \ is typically of\n      low importance, since timing information is usually not\
    \ considered\n      secret information.\n      Confidentiality can play an important\
    \ role when service providers\n      charge their customers for time synchronization\
    \ services; thus, an\n      encryption mechanism can prevent eavesdroppers from\
    \ obtaining the\n      service without payment.  Note that these cases are, for\
    \ now,\n      rather esoteric.\n      Confidentiality can also prevent an MITM\
    \ attacker from identifying\n      protocol packets.  Thus, confidentiality can\
    \ assist in protecting\n      the timing protocol against MITM attacks such as\
    \ packet delay\n      (Section 3.2.6), manipulation and interception, and removal\n\
    \      attacks.  Note that time protocols have predictable behavior even\n   \
    \   after encryption, such as packet transmission rates and packet\n      lengths.\
    \  Additional measures can be taken to mitigate encrypted\n      traffic analysis\
    \ by random padding of encrypted packets and by\n      adding random dummy packets.\
    \  Nevertheless, encryption does not\n      prevent such MITM attacks, but rather\
    \ makes these attacks more\n      difficult to implement.\n"
- title: 5.9.  Protection against Packet Delay and Interception Attacks
  contents:
  - "5.9.  Protection against Packet Delay and Interception Attacks\n   Requirement\n\
    \      The security mechanism MUST include means to protect the protocol\n   \
    \   from MITM attacks that degrade the clock accuracy.\n   Requirement Level\n\
    \      The requirements in this subsection address MITM attacks such as\n    \
    \  the packet delay attack (Section 3.2.6) and packet interception\n      attacks\
    \ (Sections 3.2.5 and 3.2.1).\n      The requirement level of this requirement\
    \ is 'MUST'.  In the\n      absence of this requirement, the protocol is exposed\
    \ to attacks\n      that are easy to implement and have a high impact.  Note that\
    \ in\n      the absence of this requirement, the impact is similar to packet\n\
    \      manipulation attacks (Section 3.2.1); thus, this requirement has\n    \
    \  the same requirement level as integrity protection (Section 5.2).\n      It\
    \ is noted that the implementation of this requirement depends on\n      the topology\
    \ and properties of the system.\n   Discussion\n      While this document does\
    \ not define specific security solutions,\n      we note that common practices\
    \ for protection against MITM attacks\n      use redundant masters (e.g., [NTPv4])\
    \ or redundant paths between\n      the master and slave (e.g., [DelayAtt]). \
    \ If one of the time\n      sources indicates a time value that is significantly\
    \ different\n      than the other sources, it is assumed to be erroneous or under\n\
    \      attack and is therefore ignored.\n      Thus, MITM attack prevention derives\
    \ a requirement from the\n      security mechanism and a requirement from the\
    \ network topology.\n      While the security mechanism should support the ability\
    \ to detect\n      delay attacks, it is noted that in some networks it is not\n\
    \      possible to provide the redundancy needed for such a detection\n      mechanism.\n"
- title: 5.10.  Combining Secured with Unsecured Nodes
  contents:
  - "5.10.  Combining Secured with Unsecured Nodes\n   Integrating a security mechanism\
    \ into a time-synchronized system is a\n   complex and expensive process, and\
    \ hence in some cases may require\n   incremental deployment, where new equipment\
    \ supports the security\n   mechanism, and is required to interoperate with legacy\
    \ equipment\n   without the security features.\n"
- title: 5.10.1.  Secure Mode
  contents:
  - "5.10.1.  Secure Mode\n   Requirement\n      The security mechanism MUST support\
    \ a secure mode, where only\n      secured clocks are permitted to take part in\
    \ the time protocol.\n      In this mode every protocol packet received from an\
    \ unsecured\n      clock MUST be discarded.\n   Requirement Level\n      The requirement\
    \ level of this requirement is 'MUST' since the full\n      capacity of the security\
    \ requirements defined in this document can\n      only be achieved in secure\
    \ mode.\n   Discussion\n      While the requirement in this subsection is similar\
    \ to the one in\n      Section 5.1, it refers to the secure mode, as opposed to\
    \ the\n      hybrid mode presented in the next subsection.\n"
- title: 5.10.2.  Hybrid Mode
  contents:
  - "5.10.2.  Hybrid Mode\n   Requirement\n      The security protocol SHOULD support\
    \ a hybrid mode, where both\n      secured and unsecured clocks are permitted\
    \ to take part in the\n      protocol.\n   Requirement Level\n      The requirement\
    \ level of this requirement is 'SHOULD'; on one\n      hand, hybrid mode enables\
    \ a gradual transition from unsecured to\n      secured mode, which is especially\
    \ important in large-scaled\n      deployments.  On the other hand, hybrid mode\
    \ is not required in\n      all systems; this document recommends deployment of\
    \ the 'secure\n      mode' described in Section 5.10.1, where possible.\n   Discussion\n\
    \      The hybrid mode allows both secured and unsecured clocks to take\n    \
    \  part in the time protocol.  NTP, for example, allows a mixture of\n      secured\
    \ and unsecured nodes.\n   Requirement\n      A master in the hybrid mode SHOULD\
    \ be a secured clock.\n      A secured slave in the hybrid mode SHOULD discard\
    \ all protocol\n      packets received from unsecured clocks.\n   Requirement\
    \ Level\n      The requirement level of this requirement is 'SHOULD' since it\
    \ may\n      not be applicable to all deployments.  For example, a hybrid\n  \
    \    network may require the usage of unsecured masters or TCs.\n   Discussion\n\
    \      This requirement ensures that the existence of unsecured clocks\n     \
    \ does not compromise the security provided to secured clocks.\n      Hence, secured\
    \ slaves only \"trust\" protocol packets received from\n      a secured clock.\n\
    \      An unsecured slave can receive protocol packets from either\n      unsecured\
    \ clocks or secured clocks.  Note that the latter does not\n      apply when encryption\
    \ is used.  When integrity protection is used,\n      the unsecured slave can\
    \ receive secured packets ignoring the\n      integrity protection.\n      Note\
    \ that the security scheme in [NTPv4] with [AutoKey] does not\n      satisfy this\
    \ requirement, since nodes prefer the server with the\n      most accurate clock,\
    \ which is not necessarily the server that\n      supports authentication.  For\
    \ example, a Stratum 2 server is\n      connected to two Stratum 1 servers: Server\
    \ A, supporting\n      authentication, and Server B, without authentication. \
    \ If Server B\n      has a more accurate clock than A, the Stratum 2 server chooses\n\
    \      Server B, in spite of the fact it does not support authentication.\n"
- title: 6.  Summary of Requirements
  contents:
  - "6.  Summary of Requirements\n   +-----------+---------------------------------------------+--------+\n\
    \   | Section   | Requirement                                 | Type   |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.1       | Authentication & authorization of sender    | MUST   |\n   |\
    \           +---------------------------------------------+--------+\n   |   \
    \        | Authentication & authorization of master    | MUST   |\n   |      \
    \     +---------------------------------------------+--------+\n   |         \
    \  | Recursive authentication & authorization    | MUST   |\n   |           +---------------------------------------------+--------+\n\
    \   |           | Authentication & authorization of slaves    | MAY    |\n   |\
    \           +---------------------------------------------+--------+\n   |   \
    \        | PTP: Authentication & authorization of      | MAY    |\n   |      \
    \     | P2P TCs by master                           |        |\n   +-----------+---------------------------------------------+--------+\n\
    \   +-----------+---------------------------------------------+--------+\n   |5.1\
    \ (cont) | PTP: Authentication & authorization of      | MUST   |\n   |      \
    \     | Announce messages                           |        |\n   |         \
    \  +---------------------------------------------+--------+\n   |           |\
    \ PTP: Authentication & authorization of      | MUST   |\n   |           | Management\
    \ messages                         |        |\n   |           +---------------------------------------------+--------+\n\
    \   |           | PTP: Authentication & authorization of      | MAY    |\n   |\
    \           | Signaling messages                          |        |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.2       | Integrity protection                        | MUST   |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.3       | Spoofing prevention                         | MUST   |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.4       | Protection from DoS attacks against the     | SHOULD |\n   |\
    \           | time protocol                               |        |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.5       | Replay protection                           | MUST   |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.6       | Key freshness                               | MUST   |\n   |\
    \           +---------------------------------------------+--------+\n   |   \
    \        | Security association                        | SHOULD |\n   |      \
    \     +---------------------------------------------+--------+\n   |         \
    \  | Unicast and multicast associations          | SHOULD |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.7       | Performance: no degradation in quality of   | MUST   |\n   |\
    \           | time transfer                               |        |\n   |   \
    \        +---------------------------------------------+--------+\n   |      \
    \     | Performance: computation load               | SHOULD |\n   |         \
    \  +---------------------------------------------+--------+\n   |           |\
    \ Performance: storage                        | SHOULD |\n   |           +---------------------------------------------+--------+\n\
    \   |           | Performance: bandwidth                      | SHOULD |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.8       | Confidentiality protection                  | MAY    |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.9       | Protection against delay and interception   | MUST   |\n   |\
    \           | attacks                                     |        |\n   +-----------+---------------------------------------------+--------+\n\
    \   | 5.10      | Secure mode                                 | MUST   |\n   |\
    \           +---------------------------------------------+--------+\n   |   \
    \        | Hybrid mode                                 | SHOULD |\n   +-----------+---------------------------------------------+--------+\n\
    \                 Table 2: Summary of Security Requirements\n"
- title: 7.  Additional Security Implications
  contents:
  - "7.  Additional Security Implications\n   This section discusses additional implications\
    \ of the interaction\n   between time protocols and security mechanisms.\n   This\
    \ section refers to time protocol security mechanisms, as well as\n   to \"external\"\
    \ security mechanisms, i.e., security mechanisms that are\n   not strictly related\
    \ to the time protocol.\n"
- title: 7.1.  Security and On-the-Fly Timestamping
  contents:
  - "7.1.  Security and On-the-Fly Timestamping\n   Time protocols often require that\
    \ protocol packets be modified during\n   transmission.  Both NTP and PTP in one-step\
    \ mode require clocks to\n   modify protocol packets based on the time of transmission\
    \ and/or\n   reception.\n   In the presence of a security mechanism, whether encryption\
    \ or\n   integrity protection:\n   o  During transmission the encryption and/or\
    \ integrity protection\n      MUST be applied after integrating the timestamp\
    \ into the packet.\n   To allow high accuracy, timestamping is typically performed\
    \ as close\n   to the transmission or reception time as possible.  However, since\n\
    \   the security engine must be placed between the timestamping function\n   and\
    \ the physical interface, it may introduce non-deterministic\n   latency that\
    \ causes accuracy degradation.  These performance aspects\n   have been analyzed\
    \ in literature, e.g., [1588IPsec] and [Tunnel].\n"
- title: '7.2.  PTP: Security and Two-Step Timestamping'
  contents:
  - "7.2.  PTP: Security and Two-Step Timestamping\n   PTP supports a two-step mode\
    \ of operation, where the time of\n   transmission of protocol packets is communicated\
    \ without modifying\n   the packets.  As opposed to one-step mode, two-step timestamping\
    \ can\n   be performed without the requirement to encrypt after timestamping.\n\
    \   Note that if an encryption mechanism such as IPsec is used, it\n   presents\
    \ a challenge to the timestamping mechanism, since time\n   protocol packets are\
    \ encrypted when traversing the physical\n   interface, and are thus impossible\
    \ to identify.  A possible solution\n   to this problem [IPsecSync] is to include\
    \ an indication in the\n   encryption header that identifies time protocol packets.\n"
- title: 7.3.  Intermediate Clocks
  contents:
  - "7.3.  Intermediate Clocks\n   A time protocol allows slaves to receive time information\
    \ from an\n   accurate time source.  Time information is sent over a path that\n\
    \   often traverses one or more intermediate clocks.\n   o  In NTP, time information\
    \ originated from a Stratum 1 server can be\n      distributed to Stratum 2 servers\
    \ and, in turn, distributed from\n      the Stratum 2 servers to NTP clients.\
    \  In this case, the Stratum 2\n      servers are a layer of intermediate clocks.\
    \  These intermediate\n      clocks are referred to as \"secondary servers\" in\
    \ [NTPv4].\n   o  In PTP, BCs and TCs are intermediate nodes used to improve the\n\
    \      accuracy of time information conveyed between the grandmaster and\n   \
    \   the slaves.\n   A common rule of thumb in network security is that end-to-end\n\
    \   security is the best policy, as it secures the entire path between\n   the\
    \ data originator and its receiver.  The usage of intermediate\n   nodes implies\
    \ that if a security mechanism is deployed in the\n   network, a hop-by-hop security\
    \ scheme must be used, since\n   intermediate nodes must be able to send time\
    \ information to the\n   slaves, or to modify time information sent through them.\n\
    \   This inherent property of using intermediate clocks increases the\n   system's\
    \ exposure to internal threats, as a large number of nodes\n   possess the security\
    \ keys.\n   Thus, there is a trade-off between the achievable clock accuracy of\
    \ a\n   system, and the robustness of its security solution.  On one hand,\n \
    \  high clock accuracy calls for hop-by-hop involvement in the protocol,\n   also\
    \ known as on-path support.  On the other hand, a robust security\n   solution\
    \ calls for end-to-end data protection.\n"
- title: 7.4.  External Security Protocols and Time Protocols
  contents:
  - "7.4.  External Security Protocols and Time Protocols\n   Time protocols are often\
    \ deployed in systems that use security\n   mechanisms and protocols.\n   A typical\
    \ example is the 3GPP Femtocell network [3GPP], where IPsec\n   is used for securing\
    \ traffic between a Femtocell and the Femto\n   Gateway.  In some cases, all traffic\
    \ between these two nodes may be\n   secured by IPsec, including the time protocol\
    \ traffic.  This use-case\n   is thoroughly discussed in [IPsecSync].\n   Another\
    \ typical example is the usage of MACsec encryption ([MACsec])\n   in L2 networks\
    \ that deploy time synchronization [AvbAssum].\n   The usage of external security\
    \ mechanisms may affect time protocols\n   as follows:\n   o  Timestamping accuracy\
    \ can be affected, as described in Section\n      7.1.\n   o  If traffic is secured\
    \ between two nodes in the network, no\n      intermediate clocks can be used\
    \ between these two nodes.  In the\n      [3GPP] example, if traffic between the\
    \ Femtocell and the Femto\n      Gateway is encrypted, then time protocol packets\
    \ are necessarily\n      transported over the underlying network without modification\
    \ and,\n      thus, cannot enjoy the improved accuracy provided by intermediate\n\
    \      clock nodes.\n"
- title: 7.5.  External Security Services Requiring Time
  contents:
  - "7.5.  External Security Services Requiring Time\n   Cryptographic protocols often\
    \ use time as an important factor in the\n   cryptographic algorithm.  If a time\
    \ protocol is compromised, it may\n   consequently expose the security protocols\
    \ that rely on it to various\n   attacks.  Two examples are presented in this\
    \ section.\n"
- title: 7.5.1.  Timestamped Certificates
  contents:
  - "7.5.1.  Timestamped Certificates\n   Certificate validation requires the sender\
    \ and receiver to be roughly\n   time synchronized.  Thus, synchronization is\
    \ required for\n   establishing security protocols such as Internet Key Exchange\n\
    \   Protocol version 2 (IKEv2) and Transport Layer Security (TLS).  Other\n  \
    \ authentication and key exchange mechanisms, such as Kerberos, also\n   require\
    \ the parties involved to be synchronized [Kerb].\n   An even stronger interdependence\
    \ between a time protocol and a\n   security mechanism is defined in [AutoKey],\
    \ which defines mutual\n   dependence between the acquired time information, and\
    \ the\n   authentication protocol that secures it.  This bootstrapping behavior\n\
    \   results from the fact that trusting the received time information\n   requires\
    \ a valid certificate, and validating a certificate requires\n   knowledge of\
    \ the time.\n"
- title: 7.5.2.  Time Changes and Replay Attacks
  contents:
  - "7.5.2.  Time Changes and Replay Attacks\n   A successful attack on a time protocol\
    \ may cause the attacked clocks\n   to go back in time.  The erroneous time may\
    \ expose cryptographic\n   algorithms that rely on time, as a node may use a key\
    \ that was\n   already used in the past and has expired.\n"
- title: 8.  Issues for Further Discussion
  contents:
  - "8.  Issues for Further Discussion\n   The Key distribution is outside the scope\
    \ of this document.  Although\n   this is an essential element of any security\
    \ system, it is outside\n   the scope of this document.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The security considerations of network timing\
    \ protocols are presented\n   throughout this document.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [IEEE1588]    IEEE, \"1588-2008 - IEEE Standard\
    \ for a Precision Clock\n                 Synchronization Protocol for Networked\
    \ Measurement and\n                 Control Systems\", IEEE Standard 1588-2008,\
    \ July 2008.\n   [KEYWORDS]    Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \                 Requirement Levels\", BCP 14, RFC 2119, March 1997,\n      \
    \           <http://www.rfc-editor.org/info/rfc2119>.\n   [NTPv4]       Mills,\
    \ D., Martin, J., Ed., Burbank, J., and W. Kasch,\n                 \"Network\
    \ Time Protocol Version 4: Protocol and\n                 Algorithms Specification\"\
    , RFC 5905, June 2010,\n                 <http://www.rfc-editor.org/info/rfc5905>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [1588IPsec]   Treytl, A. and B. Hirschler,\
    \ \"Securing IEEE 1588 by\n                 IPsec tunnels - An analysis\", in\
    \ Proceedings of 2010\n                 International Symposium for Precision\
    \ Clock\n                 Synchronization for Measurement, Control and\n     \
    \            Communication, ISPCS 2010, pp. 83-90, September 2010.\n   [3GPP]\
    \        3GPP, \"Security of Home Node B (HNB) / Home evolved\n              \
    \   Node B (HeNB)\", 3GPP TS 33.320 11.6.0, November 2012.\n   [Anatomy]     Nachreiner,\
    \ C., \"Anatomy of an ARP Poisoning Attack\",\n                 2003.\n   [AutoKey]\
    \     Haberman, B., Ed., and D. Mills, \"Network Time Protocol\n             \
    \    Version 4: Autokey Specification\", RFC 5906, June 2010,\n              \
    \   <http://www.rfc-editor.org/info/rfc5906>.\n   [AvbAssum]    Pannell, D., \"\
    Audio Video Bridging Gen 2 Assumptions\",\n                 IEEE 802.1 AVB Plenary,\
    \ Work in Progress, May 2012.\n   [DelayAtt]    Mizrahi, T., \"A game theoretic\
    \ analysis of delay\n                 attacks against time synchronization protocols\"\
    ,\n                 accepted, to appear in Proceedings of the International\n\
    \                 IEEE Symposium on Precision Clock Synchronization for\n    \
    \             Measurement, Control and Communication, ISPCS,\n               \
    \  September 2012.\n   [Hack]        McClure, S., Scambray, J., and G. Kurtz,\
    \ \"Hacking\n                 Exposed: Network Security Secrets and Solutions\"\
    ,\n                 McGraw-Hill, 2009.\n   [IPsec]       Kent, S. and K. Seo,\
    \ \"Security Architecture for the\n                 Internet Protocol\", RFC 4301,\
    \ December 2005,\n                 <http://www.rfc-editor.org/info/rfc4301>.\n\
    \   [IPsecSync]   Xu, Y., \"IPsec security for packet based\n                \
    \ synchronization\", Work in Progress, draft-xu-tictoc-\n                 ipsec-security-for-synchronization-02,\
    \ September 2011.\n   [Kerb]        Sakane, S., Kamada, K., Thomas, M., and J.\
    \ Vilhuber,\n                 \"Kerberized Internet Negotiation of Keys (KINK)\"\
    ,\n                 RFC 4430, March 2006,\n                 <http://www.rfc-editor.org/info/rfc4430>.\n\
    \   [MACsec]      IEEE, \"IEEE Standard for Local and metropolitan area\n    \
    \             networks - Media Access Control (MAC) Security\", IEEE\n       \
    \          Standard 802.1AE, August 2006.\n   [NTPDDoS]     \"Attackers use NTP\
    \ reflection in huge DDoS attack\",\n                 TICTOC mail archive, 2014.\n\
    \   [SecPTP]      Tsang, J. and K. Beznosov, \"A Security Analysis of the\n  \
    \               Precise Time Protocol (Short Paper),\" 8th International\n   \
    \              Conference on Information and Communication Security\n        \
    \         (ICICS) Lecture Notes in Computer Science Volume 4307,\n           \
    \      pp. 50-59, 2006.\n   [SecSen]      Ganeriwal, S., Popper, C., Capkun, S.,\
    \ and M. B.\n                 Srivastava, \"Secure Time Synchronization in Sensor\n\
    \                 Networks\", ACM Trans. Inf. Syst. Secur., Volume 11,\n     \
    \            Issue 4, Article 23, July 2008.\n   [TimeSec]     Mizrahi, T., \"\
    Time synchronization security using IPsec\n                 and MACsec\", ISPCS\
    \ 2011, pp. 38-43, September 2011.\n   [Traps]       Treytl, A., Gaderer, G.,\
    \ Hirschler, B., and R. Cohen,\n                 \"Traps and pitfalls in secure\
    \ clock synchronization\" in\n                 Proceedings of 2007 International\
    \ Symposium for\n                 Precision Clock Synchronization for Measurement,\n\
    \                 Control and Communication, ISPCS 2007, pp. 18-24,\n        \
    \         October 2007.\n   [Tunnel]      Treytl, A., Hirschler, B., and T. Sauter,\
    \ \"Secure\n                 tunneling of high-precision clock synchronisation\n\
    \                 protocols and other time-stamped data\", in Proceedings\n  \
    \               of the 8th IEEE International Workshop on Factory\n          \
    \       Communication Systems (WFCS), pp. 303-313, May 2010.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The author gratefully acknowledges Stefano Ruffini, Doug\
    \ Arnold,\n   Kevin Gross, Dieter Sibold, Dan Grossman, Laurent Montini, Russell\n\
    \   Smiley, Shawn Emery, Dan Romascanu, Stephen Farrell, Kathleen\n   Moriarty,\
    \ and Joel Jaeggli for their thorough review and helpful\n   comments.  The author\
    \ would also like to thank members of the TICTOC\n   WG for providing feedback\
    \ on the TICTOC mailing list.\n"
- title: Contributors
  contents:
  - "Contributors\n   Karen O'Donoghue\n   ISOC\n   EMail: odonoghue@isoc.org\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Tal Mizrahi\n   Marvell\n   6 Hamada St.\n   Yokneam, 20692\
    \ Israel\n   EMail: talmi@marvell.com\n"
