- title: __initial_text__
  contents:
  - '                 A One-way Packet Loss Metric for IPPM

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo defines a metric for one-way packet loss across\
    \ Internet\n   paths.  It builds on notions introduced and discussed in the IPPM\n\
    \   Framework document, RFC 2330 [1]; the reader is assumed to be\n   familiar\
    \ with that document.\n   This memo is intended to be parallel in structure to\
    \ a companion\n   document for One-way Delay (\"A One-way Delay Metric for IPPM\"\
    ) [2];\n   the reader is assumed to be familiar with that document.\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in RFC 2119 [5].\n   Although\
    \ RFC 2119 was written with protocols in mind, the key words\n   are used in this\
    \ document for similar reasons.  They are used to\n   ensure the results of measurements\
    \ from two different implementations\n   are comparable, and to note instances\
    \ when an implementation could\n   perturb the network.\n   The structure of the\
    \ memo is as follows:\n   +  A 'singleton' analytic metric, called Type-P-One-way-Loss,\
    \ is\n      introduced to measure a single observation of packet transmission\n\
    \      or loss.\n   +  Using this singleton metric, a 'sample', called Type-P-One-way-\n\
    \      Loss-Poisson-Stream, is introduced to measure a sequence of\n      singleton\
    \ transmissions and/or losses measured at times taken from\n      a Poisson process.\n\
    \   +  Using this sample, several 'statistics' of the sample are defined\n   \
    \   and discussed.\n   This progression from singleton to sample to statistics,\
    \ with clear\n   separation among them, is important.\n   Whenever a technical\
    \ term from the IPPM Framework document is first\n   used in this memo, it will\
    \ be tagged with a trailing asterisk.  For\n   example, \"term*\" indicates that\
    \ \"term\" is defined in the Framework.\n"
- title: '1.1. Motivation:'
  contents:
  - "1.1. Motivation:\n   Understanding one-way packet loss of Type-P* packets from\
    \ a source\n   host* to a destination host is useful for several reasons:\n  \
    \ +  Some applications do not perform well (or at all) if end-to-end\n      loss\
    \ between hosts is large relative to some threshold value.\n   +  Excessive packet\
    \ loss may make it difficult to support certain\n      real-time applications\
    \ (where the precise threshold of \"excessive\"\n      depends on the application).\n\
    \   +  The larger the value of packet loss, the more difficult it is for\n   \
    \   transport-layer protocols to sustain high bandwidths.\n   +  The sensitivity\
    \ of real-time applications and of transport-layer\n      protocols to loss become\
    \ especially important when very large\n      delay-bandwidth products must be\
    \ supported.\n   The measurement of one-way loss instead of round-trip loss is\n\
    \   motivated by the following factors:\n   +  In today's Internet, the path from\
    \ a source to a destination may\n      be different than the path from the destination\
    \ back to the source\n      (\"asymmetric paths\"), such that different sequences\
    \ of routers are\n      used for the forward and reverse paths.  Therefore round-trip\n\
    \      measurements actually measure the performance of two distinct\n      paths\
    \ together.  Measuring each path independently highlights the\n      performance\
    \ difference between the two paths which may traverse\n      different Internet\
    \ service providers, and even radically different\n      types of networks (for\
    \ example, research versus commodity\n      networks, or ATM versus packet-over-SONET).\n\
    \   +  Even when the two paths are symmetric, they may have radically\n      different\
    \ performance characteristics due to asymmetric queueing.\n   +  Performance of\
    \ an application may depend mostly on the performance\n      in one direction.\
    \  For example, a file transfer using TCP may\n      depend more on the performance\
    \ in the direction that data flows,\n      rather than the direction in which\
    \ acknowledgements travel.\n   +  In quality-of-service (QoS) enabled networks,\
    \ provisioning in one\n      direction may be radically different than provisioning\
    \ in the\n      reverse direction, and thus the QoS guarantees differ.  Measuring\n\
    \      the paths independently allows the verification of both\n      guarantees.\n\
    \   It is outside the scope of this document to say precisely how loss\n   metrics\
    \ would be applied to specific problems.\n"
- title: 1.2. General Issues Regarding Time
  contents:
  - "1.2. General Issues Regarding Time\n   {Comment: the terminology below differs\
    \ from that defined by ITU-T\n   documents (e.g., G.810, \"Definitions and terminology\
    \ for\n   synchronization networks\" and I.356, \"B-ISDN ATM layer cell transfer\n\
    \   performance\"), but is consistent with the IPPM Framework document.\n   In\
    \ general, these differences derive from the different backgrounds;\n   the ITU-T\
    \ documents historically have a telephony origin, while the\n   authors of this\
    \ document (and the Framework) have a computer systems\n   background.  Although\
    \ the terms defined below have no direct\n   equivalent in the ITU-T definitions,\
    \ after our definitions we will\n   provide a rough mapping.  However, note one\
    \ potential confusion: our\n   definition of \"clock\" is the computer operating\
    \ systems definition\n   denoting a time-of-day clock, while the ITU-T definition\
    \ of clock\n   denotes a frequency reference.}\n   Whenever a time (i.e., a moment\
    \ in history) is mentioned here, it is\n   understood to be measured in seconds\
    \ (and fractions) relative to UTC.\n   As described more fully in the Framework\
    \ document, there are four\n   distinct, but related notions of clock uncertainty:\n\
    \   synchronization*\n        Synchronization measures the extent to which two\
    \ clocks agree on\n        what time it is.  For example, the clock on one host\
    \ might be\n        5.4 msec ahead of the clock on a second host.  {Comment: A\
    \ rough\n        ITU-T equivalent is \"time error\".}\n   accuracy*\n        Accuracy\
    \ measures the extent to which a given clock agrees with\n        UTC.  For example,\
    \ the clock on a host might be 27.1 msec behind\n        UTC.  {Comment: A rough\
    \ ITU-T equivalent is \"time error from\n        UTC\".}\n   resolution*\n   \
    \     Resolution measures the precision of a given clock.  For\n        example,\
    \ the clock on an old Unix host might advance only once\n        every 10 msec,\
    \ and thus have a resolution of only 10 msec.\n        {Comment: A very rough\
    \ ITU-T equivalent is \"sampling period\".}\n   skew*\n        Skew measures the\
    \ change of accuracy, or of synchronization,\n        with time.  For example,\
    \ the clock on a given host might gain\n        1.3 msec per hour and thus be\
    \ 27.1 msec behind UTC at one time\n        and only 25.8 msec an hour later.\
    \  In this case, we say that the\n        clock of the given host has a skew of\
    \ 1.3 msec per hour relative\n        to UTC, which threatens accuracy.  We might\
    \ also speak of the\n        skew of one clock relative to another clock, which\
    \ threatens\n        synchronization.  {Comment: A rough ITU-T equivalent is \"\
    time\n        drift\".}\n"
- title: 2. A Singleton Definition for One-way Packet Loss
  contents:
  - '2. A Singleton Definition for One-way Packet Loss

    '
- title: '2.1. Metric Name:'
  contents:
  - "2.1. Metric Name:\n      Type-P-One-way-Packet-Loss\n"
- title: '2.2. Metric Parameters:'
  contents:
  - "2.2. Metric Parameters:\n      +  Src, the IP address of a host\n      +  Dst,\
    \ the IP address of a host\n      +  T, a time\n"
- title: '2.3. Metric Units:'
  contents:
  - "2.3. Metric Units:\n   The value of a Type-P-One-way-Packet-Loss is either a\
    \ zero\n   (signifying successful transmission of the packet) or a one\n   (signifying\
    \ loss).\n"
- title: '2.4. Definition:'
  contents:
  - "2.4. Definition:\n   >>The *Type-P-One-way-Packet-Loss* from Src to Dst at T\
    \ is 0<< means\n   that Src sent the first bit of a Type-P packet to Dst at wire-time*\
    \ T\n   and that Dst received that packet.\n   >>The *Type-P-One-way-Packet-Loss*\
    \ from Src to Dst at T is 1<< means\n   that Src sent the first bit of a type-P\
    \ packet to Dst at wire-time T\n   and that Dst did not receive that packet.\n"
- title: '2.5. Discussion:'
  contents:
  - "2.5. Discussion:\n   Thus, Type-P-One-way-Packet-Loss is 0 exactly when Type-P-One-way-\n\
    \   Delay is a finite value, and it is 1 exactly when Type-P-One-way-\n   Delay\
    \ is undefined.\n   The following issues are likely to come up in practice:\n\
    \   +  A given methodology will have to include a way to distinguish\n      between\
    \ a packet loss and a very large (but finite) delay.  As\n      noted by Mahdavi\
    \ and Paxson [3], simple upper bounds (such as the\n      255 seconds theoretical\
    \ upper bound on the lifetimes of IP\n      packets [4]) could be used, but good\
    \ engineering, including an\n      understanding of packet lifetimes, will be\
    \ needed in practice.\n      {Comment: Note that, for many applications of these\
    \ metrics, there\n      may be no harm in treating a large delay as packet loss.\
    \  An audio\n      playback packet, for example, that arrives only after the playback\n\
    \      point may as well have been lost.}\n   +  If the packet arrives, but is\
    \ corrupted, then it is counted as\n      lost.  {Comment: one is tempted to count\
    \ the packet as received\n      since corruption and packet loss are related but\
    \ distinct\n      phenomena.  If the IP header is corrupted, however, one cannot\
    \ be\n      sure about the source or destination IP addresses and is thus on\n\
    \      shaky grounds about knowing that the corrupted received packet\n      corresponds\
    \ to a given sent test packet.  Similarly, if other\n      parts of the packet\
    \ needed by the methodology to know that the\n      corrupted received packet\
    \ corresponds to a given sent test packet,\n      then such a packet would have\
    \ to be counted as lost.  Counting\n      these packets as lost but packet with\
    \ corruption in other parts of\n      the packet as not lost would be inconsistent.}\n\
    \   +  If the packet is duplicated along the path (or paths) so that\n      multiple\
    \ non-corrupt copies arrive at the destination, then the\n      packet is counted\
    \ as received.\n   +  If the packet is fragmented and if, for whatever reason,\n\
    \      reassembly does not occur, then the packet will be deemed lost.\n"
- title: '2.6. Methodologies:'
  contents:
  - "2.6. Methodologies:\n   As with other Type-P-* metrics, the detailed methodology\
    \ will depend\n   on the Type-P (e.g., protocol number, UDP/TCP port number, size,\n\
    \   precedence).\n   Generally, for a given Type-P, one possible methodology would\
    \ proceed\n   as follows:\n   +  Arrange that Src and Dst have clocks that are\
    \ synchronized with\n      each other.  The degree of synchronization is a parameter\
    \ of the\n      methodology, and depends on the threshold used to determine loss\n\
    \      (see below).\n   +  At the Src host, select Src and Dst IP addresses, and\
    \ form a test\n      packet of Type-P with these addresses.\n   +  At the Dst\
    \ host, arrange to receive the packet.\n   +  At the Src host, place a timestamp\
    \ in the prepared Type-P packet,\n      and send it towards Dst.\n   +  If the\
    \ packet arrives within a reasonable period of time, the one-\n      way packet-loss\
    \ is taken to be zero.\n   +  If the packet fails to arrive within a reasonable\
    \ period of time,\n      the one-way packet-loss is taken to be one.  Note that\
    \ the\n      threshold of \"reasonable\" here is a parameter of the methodology.\n\
    \      {Comment: The definition of reasonable is intentionally vague, and\n  \
    \    is intended to indicate a value \"Th\" so large that any value in\n     \
    \ the closed interval [Th-delta, Th+delta] is an equivalent\n      threshold for\
    \ loss.  Here, delta encompasses all error in clock\n      synchronization along\
    \ the measured path.  If there is a single\n      value after which the packet\
    \ must be counted as lost, then we\n      reintroduce the need for a degree of\
    \ clock synchronization similar\n      to that needed for one-way delay.  Therefore,\
    \ if a measure of\n      packet loss parameterized by a specific non-huge \"reasonable\"\
    \n      time-out value is needed, one can always measure one-way delay and\n \
    \     see what percentage of packets from a given stream exceed a given\n    \
    \  time-out value.}\n   Issues such as the packet format, the means by which Dst\
    \ knows when\n   to expect the test packet, and the means by which Src and Dst\
    \ are\n   synchronized are outside the scope of this document.  {Comment: We\n\
    \   plan to document elsewhere our own work in describing such more\n   detailed\
    \ implementation techniques and we encourage others to as\n   well.}\n"
- title: '2.7. Errors and Uncertainties:'
  contents:
  - "2.7. Errors and Uncertainties:\n   The description of any specific measurement\
    \ method should include an\n   accounting and analysis of various sources of error\
    \ or uncertainty.\n   The Framework document provides general guidance on this\
    \ point.\n   For loss, there are three sources of error:\n   +  Synchronization\
    \ between clocks on Src and Dst.\n   +  The packet-loss threshold (which is related\
    \ to the synchronization\n      between clocks).\n   +  Resource limits in the\
    \ network interface or software on the\n      receiving instrument.\n   The first\
    \ two sources are interrelated and could result in a test\n   packet with finite\
    \ delay being reported as lost.  Type-P-One-way-\n   Packet-Loss is 0 if the test\
    \ packet does not arrive, or if it does\n   arrive and the difference between\
    \ Src timestamp and Dst timestamp is\n   greater than the \"reasonable period\
    \ of time\", or loss threshold.  If\n   the clocks are not sufficiently synchronized,\
    \ the loss threshold may\n   not be \"reasonable\" - the packet may take much\
    \ less time to arrive\n   than its Src timestamp indicates.  Similarly, if the\
    \ loss threshold\n   is set too low, then many packets may be counted as lost.\
    \  The loss\n   threshold must be high enough, and the clocks synchronized well\n\
    \   enough so that a packet that arrives is rarely counted as lost.  (See\n  \
    \ the discussions in the previous two sections.)\n   Since the sensitivity of\
    \ packet loss measurement to lack of clock\n   synchronization is less than for\
    \ delay, we refer the reader to the\n   treatment of synchronization errors in\
    \ the One-way Delay metric [2]\n   for more details.\n   The last source of error,\
    \ resource limits, cause the packet to be\n   dropped by the measurement instrument,\
    \ and counted as lost when in\n   fact the network delivered the packet in reasonable\
    \ time.\n   The measurement instruments should be calibrated such that the loss\n\
    \   threshold is reasonable for application of the metrics and the clocks\n  \
    \ are synchronized enough so the loss threshold remains reasonable.\n   In addition,\
    \ the instruments should be checked to ensure the that the\n   possibility a packet\
    \ arrives at the network interface, but is lost\n   due to congestion on the interface\
    \ or to other resource exhaustion\n   (e.g., buffers) on the instrument is low.\n"
- title: '2.8. Reporting the metric:'
  contents:
  - "2.8. Reporting the metric:\n   The calibration and context in which the metric\
    \ is measured MUST be\n   carefully considered, and SHOULD always be reported\
    \ along with metric\n   results.  We now present four items to consider: Type-P\
    \ of the test\n   packets, the loss threshold, instrument calibration, and the\
    \ path\n   traversed by the test packets.  This list is not exhaustive; any\n\
    \   additional information that could be useful in interpreting\n   applications\
    \ of the metrics should also be reported.\n"
- title: 2.8.1. Type-P
  contents:
  - "2.8.1. Type-P\n   As noted in the Framework document [1], the value of the metric\
    \ may\n   depend on the type of IP packets used to make the measurement, or\n\
    \   \"Type-P\".  The value of Type-P-One-way-Delay could change if the\n   protocol\
    \ (UDP or TCP), port number, size, or arrangement for special\n   treatment (e.g.,\
    \ IP precedence or RSVP) changes.  The exact Type-P\n   used to make the measurements\
    \ MUST be accurately reported.\n"
- title: 2.8.2. Loss threshold
  contents:
  - "2.8.2. Loss threshold\n   The threshold (or methodology to distinguish) between\
    \ a large finite\n   delay and loss MUST be reported.\n"
- title: 2.8.3. Calibration results
  contents:
  - "2.8.3. Calibration results\n   The degree of synchronization between the Src\
    \ and Dst clocks MUST be\n   reported.  If possible, possibility that a test packet\
    \ that arrives\n   at the Dst network interface is reported as lost due to resource\n\
    \   exhaustion on Dst SHOULD be reported.\n"
- title: 2.8.4. Path
  contents:
  - "2.8.4. Path\n   Finally, the path traversed by the packet SHOULD be reported,\
    \ if\n   possible.  In general it is impractical to know the precise path a\n\
    \   given packet takes through the network.  The precise path may be\n   known\
    \ for certain Type-P on short or stable paths.  If Type-P\n   includes the record\
    \ route (or loose-source route) option in the IP\n   header, and the path is short\
    \ enough, and all routers* on the path\n   support record (or loose-source) route,\
    \ then the path will be\n   precisely recorded.  This is impractical because the\
    \ route must be\n   short enough, many routers do not support (or are not configured\
    \ for)\n   record route, and use of this feature would often artificially worsen\n\
    \   the performance observed by removing the packet from common-case\n   processing.\
    \  However, partial information is still valuable context.\n   For example, if\
    \ a host can choose between two links* (and hence two\n   separate routes from\
    \ Src to Dst), then the initial link used is\n   valuable context.  {Comment:\
    \ For example, with Merit's NetNow setup,\n   a Src on one NAP can reach a Dst\
    \ on another NAP by either of several\n   different backbone networks.}\n"
- title: 3. A Definition for Samples of One-way Packet Loss
  contents:
  - "3. A Definition for Samples of One-way Packet Loss\n   Given the singleton metric\
    \ Type-P-One-way-Packet-Loss, we now define\n   one particular sample of such\
    \ singletons.  The idea of the sample is\n   to select a particular binding of\
    \ the parameters Src, Dst, and Type-\n   P, then define a sample of values of\
    \ parameter T.  The means for\n   defining the values of T is to select a beginning\
    \ time T0, a final\n   time Tf, and an average rate lambda, then define a pseudo-random\n\
    \   Poisson process of rate lambda, whose values fall between T0 and Tf.\n   The\
    \ time interval between successive values of T will then average\n   1/lambda.\n\
    \   {Comment: Note that Poisson sampling is only one way of defining a\n   sample.\
    \  Poisson has the advantage of limiting bias, but other\n   methods of sampling\
    \ might be appropriate for different situations.\n   We encourage others who find\
    \ such appropriate cases to use this\n   general framework and submit their sampling\
    \ method for\n   standardization.}\n"
- title: '3.1. Metric Name:'
  contents:
  - "3.1. Metric Name:\n   Type-P-One-way-Packet-Loss-Poisson-Stream\n"
- title: '3.2. Metric Parameters:'
  contents:
  - "3.2. Metric Parameters:\n   +  Src, the IP address of a host\n   +  Dst, the\
    \ IP address of a host\n   +  T0, a time\n   +  Tf, a time\n   +  lambda, a rate\
    \ in reciprocal seconds\n"
- title: '3.3. Metric Units:'
  contents:
  - "3.3. Metric Units:\n   A sequence of pairs; the elements of each pair are:\n\
    \   +  T, a time, and\n   +  L, either a zero or a one\n   The values of T in\
    \ the sequence are monotonic increasing.  Note that\n   T would be a valid parameter\
    \ to Type-P-One-way-Packet-Loss, and that\n   L would be a valid value of Type-P-One-way-Packet-Loss.\n"
- title: '3.4. Definition:'
  contents:
  - "3.4. Definition:\n   Given T0, Tf, and lambda, we compute a pseudo-random Poisson\
    \ process\n   beginning at or before T0, with average arrival rate lambda, and\n\
    \   ending at or after Tf.  Those time values greater than or equal to T0\n  \
    \ and less than or equal to Tf are then selected.  At each of the times\n   in\
    \ this process, we obtain the value of Type-P-One-way-Packet-Loss at\n   this\
    \ time.  The value of the sample is the sequence made up of the\n   resulting\
    \ <time, loss> pairs.  If there are no such pairs, the\n   sequence is of length\
    \ zero and the sample is said to be empty.\n"
- title: '3.5. Discussion:'
  contents:
  - "3.5. Discussion:\n   The reader should be familiar with the in-depth discussion\
    \ of Poisson\n   sampling in the Framework document [1], which includes methods\
    \ to\n   compute and verify the pseudo-random Poisson process.\n   We specifically\
    \ do not constrain the value of lambda, except to note\n   the extremes.  If the\
    \ rate is too large, then the measurement traffic\n   will perturb the network,\
    \ and itself cause congestion.  If the rate\n   is too small, then you might not\
    \ capture interesting network\n   behavior.  {Comment: We expect to document our\
    \ experiences with, and\n   suggestions for, lambda elsewhere, culminating in\
    \ a \"best current\n   practices\" document.}\n   Since a pseudo-random number\
    \ sequence is employed, the sequence of\n   times, and hence the value of the\
    \ sample, is not fully specified.\n   Pseudo-random number generators of good\
    \ quality will be needed to\n   achieve the desired qualities.\n   The sample\
    \ is defined in terms of a Poisson process both to avoid the\n   effects of self-synchronization\
    \ and also capture a sample that is\n   statistically as unbiased as possible.\
    \  The Poisson process is used\n   to schedule the delay measurements.  The test\
    \ packets will generally\n   not arrive at Dst according to a Poisson distribution,\
    \ since they are\n   influenced by the network.\n   {Comment: there is, of course,\
    \ no claim that real Internet traffic\n   arrives according to a Poisson arrival\
    \ process.\n   It is important to note that, in contrast to this metric, loss\
    \ rates\n   observed by transport connections do not reflect unbiased samples.\n\
    \   For example, TCP transmissions both (1) occur in bursts, which can\n   induce\
    \ loss due to the burst volume that would not otherwise have\n   been observed,\
    \ and (2) adapt their transmission rate in an attempt to\n   minimize the loss\
    \ rate observed by the connection.}\n   All the singleton Type-P-One-way-Packet-Loss\
    \ metrics in the sequence\n   will have the same values of Src, Dst, and Type-P.\n\
    \   Note also that, given one sample that runs from T0 to Tf, and given\n   new\
    \ time values T0' and Tf' such that T0 <= T0' <= Tf' <= Tf, the\n   subsequence\
    \ of the given sample whose time values fall between T0'\n   and Tf' are also\
    \ a valid Type-P-One-way-Packet-Loss-Poisson-Stream\n   sample.\n"
- title: '3.6. Methodologies:'
  contents:
  - "3.6. Methodologies:\n   The methodologies follow directly from:\n   +  the selection\
    \ of specific times, using the specified Poisson\n      arrival process, and\n\
    \   +  the methodologies discussion already given for the singleton Type-\n  \
    \    P-One-way-Packet-Loss metric.\n   Care must be given to correctly handle\
    \ out-of-order arrival of test\n   packets; it is possible that the Src could\
    \ send one test packet at\n   TS[i], then send a second one (later) at TS[i+1],\
    \ while the Dst could\n   receive the second test packet at TR[i+1], and then\
    \ receive the first\n   one (later) at TR[i].\n"
- title: '3.7. Errors and Uncertainties:'
  contents:
  - "3.7. Errors and Uncertainties:\n   In addition to sources of errors and uncertainties\
    \ associated with\n   methods employed to measure the singleton values that make\
    \ up the\n   sample, care must be given to analyze the accuracy of the Poisson\n\
    \   arrival process of the wire-times of the sending of the test packets.\n  \
    \ Problems with this process could be caused by several things,\n   including\
    \ problems with the pseudo-random number techniques used to\n   generate the Poisson\
    \ arrival process.  The Framework document shows\n   how to use the Anderson-Darling\
    \ test verify the accuracy of the\n   Poisson process over small time frames.\
    \  {Comment: The goal is to\n   ensure that the test packets are sent \"close\
    \ enough\" to a Poisson\n   schedule, and avoid periodic behavior.}\n"
- title: '3.8. Reporting the metric:'
  contents:
  - "3.8. Reporting the metric:\n   The calibration and context for the underlying\
    \ singletons MUST be\n   reported along with the stream.  (See \"Reporting the\
    \ metric\" for\n   Type-P-One-way-Packet-Loss.)\n"
- title: 4. Some Statistics Definitions for One-way Packet Loss
  contents:
  - "4. Some Statistics Definitions for One-way Packet Loss\n   Given the sample metric\
    \ Type-P-One-way-Packet-Loss-Poisson-Stream, we\n   now offer several statistics\
    \ of that sample.  These statistics are\n   offered mostly to be illustrative\
    \ of what could be done.\n"
- title: 4.1. Type-P-One-way-Packet-Loss-Average
  contents:
  - "4.1. Type-P-One-way-Packet-Loss-Average\n   Given a Type-P-One-way-Packet-Loss-Poisson-Stream,\
    \ the average of all\n   the L values in the Stream.  In addition, the Type-P-One-way-Packet-\n\
    \   Loss-Average is undefined if the sample is empty.\n   Example: suppose we\
    \ take a sample and the results are:\n      Stream1 = <\n      <T1, 0>\n     \
    \ <T2, 0>\n      <T3, 1>\n      <T4, 0>\n      <T5, 0>\n      >\n   Then the average\
    \ would be 0.2.\n   Note that, since healthy Internet paths should be operating\
    \ at loss\n   rates below 1% (particularly if high delay-bandwidth products are\
    \ to\n   be sustained), the sample sizes needed might be larger than one would\n\
    \   like.  Thus, for example, if one wants to discriminate between\n   various\
    \ fractions of 1% over one-minute periods, then several hundred\n   samples per\
    \ minute might be needed.  This would result in larger\n   values of lambda than\
    \ one would ordinarily want.\n   Note that although the loss threshold should\
    \ be set such that any\n   errors in loss are not significant, if the possibility\
    \ that a packet\n   which arrived is counted as lost due to resource exhaustion\
    \ is\n   significant compared to the loss rate of interest, Type-P-One-way-\n\
    \   Packet-Loss-Average will be meaningless.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   Conducting Internet measurements raises both security\
    \ and privacy\n   concerns.  This memo does not specify an implementation of the\n\
    \   metrics, so it does not directly affect the security of the Internet\n   nor\
    \ of applications which run on the Internet.  However,\n   implementations of\
    \ these metrics must be mindful of security and\n   privacy concerns.\n   There\
    \ are two types of security concerns: potential harm caused by\n   the measurements,\
    \ and potential harm to the measurements.  The\n   measurements could cause harm\
    \ because they are active, and inject\n   packets into the network.  The measurement\
    \ parameters MUST be\n   carefully selected so that the measurements inject trivial\
    \ amounts of\n   additional traffic into the networks they measure.  If they inject\n\
    \   \"too much\" traffic, they can skew the results of the measurement, and\n\
    \   in extreme cases cause congestion and denial of service.\n   The measurements\
    \ themselves could be harmed by routers giving\n   measurement traffic a different\
    \ priority than \"normal\" traffic, or by\n   an attacker injecting artificial\
    \ measurement traffic.  If routers can\n   recognize measurement traffic and treat\
    \ it separately, the\n   measurements will not reflect actual user traffic.  If\
    \ an attacker\n   injects artificial traffic that is accepted as legitimate, the\
    \ loss\n   rate will be artificially lowered.  Therefore, the measurement\n  \
    \ methodologies SHOULD include appropriate techniques to reduce the\n   probability\
    \ measurement traffic can be distinguished from \"normal\"\n   traffic.  Authentication\
    \ techniques, such as digital signatures, may\n   be used where appropriate to\
    \ guard against injected traffic attacks.\n   The privacy concerns of network\
    \ measurement are limited by the active\n   measurements described in this memo.\
    \  Unlike passive measurements,\n   there can be no release of existing user data.\n"
- title: 6. Acknowledgements
  contents:
  - "6. Acknowledgements\n   Thanks are due to Matt Mathis for encouraging this work\
    \ and for\n   calling attention on so many occasions to the significance of packet\n\
    \   loss.\n   Thanks are due also to Vern Paxson for his valuable comments on\
    \ early\n   drafts, and to Garry Couch and Will Leland for several useful\n  \
    \ suggestions.\n"
- title: 7. References
  contents:
  - "7. References\n   [1]  Paxson, V.,  Almes,G., Mahdavi, J. and M. Mathis, \"Framework\
    \ for\n        IP Performance Metrics\", RFC 2330, May 1998.\n   [2]  Almes, G.,\
    \  Kalidindi, S.  and M. Zekauskas, \"A One-way Delay\n        Metric for IPPM\"\
    , RFC 2679, September 1999.\n   [3]  Mahdavi, J. and V. Paxson, \"IPPM Metrics\
    \ for Measuring\n        Connectivity\", RFC 2678, September 1999.\n   [4]  Postel,\
    \ J., \"Internet Protocol\", STD 5, RFC 791, September 1981.\n   [5]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [6]  Bradner, S., \"The Internet Standards Process\
    \ -- Revision 3\", BCP\n        9, RFC 2026, October 1996.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Guy Almes\n   Advanced Network & Services, Inc.\n \
    \  200 Business Park Drive\n   Armonk, NY  10504\n   USA\n   Phone: +1 914 765\
    \ 1120\n   EMail: almes@advanced.org\n   Sunil Kalidindi\n   Advanced Network\
    \ & Services, Inc.\n   200 Business Park Drive\n   Armonk, NY  10504\n   USA\n\
    \   Phone: +1 914 765 1128\n   EMail: kalidindi@advanced.org\n   Matthew J. Zekauskas\n\
    \   Advanced Network & Services, Inc.\n   200 Business Park Drive\n   Armonk,\
    \ NY 10504\n   USA\n   Phone: +1 914 765 1112\n   EMail: matt@advanced.org\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
