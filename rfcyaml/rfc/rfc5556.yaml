- title: __initial_text__
  contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n            \
    \      Problem and Applicability Statement\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   Current IEEE 802.1 LANs use spanning tree protocols that have a\n\
    \   number of challenges.  These protocols need to strictly avoid loops,\n   even\
    \ temporary ones, during route propagation, because of the lack of\n   header\
    \ loop detection support.  Routing tends not to take full\n   advantage of alternate\
    \ paths, or even non-overlapping pairwise paths\n   (in the case of spanning trees).\
    \  This document addresses these\n   concerns and suggests applying modern network-layer\
    \ routing protocols\n   at the link layer.  This document assumes that solutions\
    \ would not\n   address issues of scalability beyond that of existing IEEE 802.1\n\
    \   bridged links, but that a solution would be backward compatible with\n   802.1,\
    \ including hubs, bridges, and their existing plug-and-play\n   capabilities.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. The TRILL Problem ...............................................3\n  \
    \    2.1. Inefficient Paths ..........................................3\n    \
    \  2.2. Multipath Forwarding .......................................5\n      2.3.\
    \ Convergence and Safety .....................................6\n      2.4. Stability\
    \ of IP Multicast Optimization .....................6\n      2.5. IEEE 802.1 Bridging\
    \ Protocols ..............................7\n      2.6. Problems Not Addressed\
    \ .....................................8\n   3. Desired Properties of Solutions\
    \ to TRILL ........................9\n      3.1. No Change to Link Capabilities\
    \ .............................9\n      3.2. Zero Configuration and Zero Assumption\
    \ ....................10\n      3.3. Forwarding Loop Mitigation ................................10\n\
    \      3.4. Spanning Tree Management ..................................11\n  \
    \    3.5. Multiple Attachments ......................................11\n    \
    \  3.6. VLAN Issues ...............................................11\n      3.7.\
    \ Operational Equivalence ...................................12\n      3.8. Optimizations\
    \ .............................................12\n      3.9. Internet Architecture\
    \ Issues ..............................13\n   4. Applicability ..................................................13\n\
    \   5. Security Considerations ........................................14\n  \
    \ 6. Acknowledgments ................................................15\n   7.\
    \ Informative References .........................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Conventional Ethernet networks -- known in the Internet\
    \ as Ethernet\n   link subnets -- have a number of attractive features, allowing\
    \ hosts\n   and routers to relocate within the subnet without requiring\n   renumbering,\
    \ and supporting automatic configuration.  The basis of\n   the simplicity of\
    \ these subnets is the spanning tree, which although\n   simple and elegant, can\
    \ have substantial limitations.  With spanning\n   trees, the bandwidth across\
    \ the subnet is limited because traffic\n   flows over a subset of links forming\
    \ a single tree -- or, with the\n   latest version of the protocol and significant\
    \ additional\n   configuration, over a small number of superimposed trees.  The\
    \ oldest\n   version of the spanning tree protocol can converge slowly when there\n\
    \   are frequent topology changes.\n   The alternative to an Ethernet link subnet\
    \ is often a network subnet.\n   Network subnets can use link-state routing protocols\
    \ that allow\n   traffic to traverse least-cost paths rather than being aggregated\
    \ on\n   a spanning tree backbone, providing higher aggregate capacity and\n \
    \  more resistance to link failures.  Unfortunately, IP -- the dominant\n   network\
    \ layer technology -- requires that hosts be renumbered when\n   relocated in\
    \ different network subnets, interrupting network (e.g.,\n   tunnels, IPsec) and\
    \ transport (e.g., TCP, UDP) associations that are\n   in progress during the\
    \ transition.\n   It is thus useful to consider a new approach that combines the\n\
    \   features of these two existing solutions, hopefully retaining the\n   desirable\
    \ properties of each.  Such an approach would develop a new\n   kind of bridge\
    \ system that was capable of using network-style\n   routing, while still providing\
    \ Ethernet service.  It allows reuse of\n   well-understood network routing protocols\
    \ to benefit the link layer.\n   This document describes the challenge of such\
    \ a combined approach.\n   This problem is known as \"Transparent Interconnection\
    \ of Lots of\n   Links\" or \"TRILL\".  The remainder of this document makes minimal\n\
    \   assumptions about a solution to TRILL.\n"
- title: 2.  The TRILL Problem
  contents:
  - "2.  The TRILL Problem\n   Ethernet subnets have evolved from 'thicknet' to 'thinnet'\
    \ to twisted\n   pair with hubs to twisted pair with switches, becoming increasingly\n\
    \   simple to wire and manage.  Each level has corresponding topology\n   restrictions;\
    \ thicknet is inherently linear, whereas thinnet and hub-\n   connected twisted\
    \ pair have to be wired as a tree.  Switches, added\n   in IEEE 802.1D, allow\
    \ network managers to avoid thinking in trees,\n   where the spanning tree protocol\
    \ finds a valid tree automatically;\n   unfortunately, this additional simplicity\
    \ comes with a number of\n   associated penalties [Pe99].\n   The spanning tree\
    \ often results in inefficient use of the link\n   topology; traffic is concentrated\
    \ on the spanning tree path, and all\n   traffic follows that path even when other\
    \ more direct paths are\n   available.  The addition in IEEE 802.1Q of support\
    \ for multiple\n   spanning trees helps a little, but the use of multiple spanning\
    \ trees\n   requires additional configuration, the number of trees is limited,\n\
    \   and these defects apply within each tree regardless.  The spanning\n   tree\
    \ protocol reacts to certain small topology changes with large\n   effects on\
    \ the reconfiguration of links in use.  Each of these\n   aspects of the spanning\
    \ tree protocol can cause problems for current\n   link-layer deployments.\n"
- title: 2.1.  Inefficient Paths
  contents:
  - "2.1.  Inefficient Paths\n   The Spanning Tree Protocol (STP) helps break cycles\
    \ in a set of\n   interconnected bridges, but it also can limit the bandwidth\
    \ among\n   that set and cause traffic to take circuitous paths.  For example,\
    \ in\n   a set of N nodes that are interconnected pairwise along a ring, a\n \
    \  spanning tree will disable one physical link so that connectivity is\n   loop\
    \ free.  This will cause traffic between the pair of nodes\n   connected by that\
    \ disabled link to have to go N-1 physical hops\n   around the entire remainder\
    \ of the ring rather than take the most\n   efficient single-hop path.  Using\
    \ modern routing protocols with such\n   a topology, no traffic should have to\
    \ go more than N/2 hops.\n   For another example, consider the network shown in\
    \ Figure 1, which\n   shows a number of bridges and their interconnecting links.\
    \  End-hosts\n   and routers are not shown; they would connect to the bridges\
    \ that are\n   shown, labeled A-H.  Note that the network shown has cycles that\n\
    \   would cause packet storms if hubs (repeaters) were used instead of\n   spanning-tree-capable\
    \ bridges.  One possible spanning tree is shown\n   by double lines.\n       \
    \                       [A]\n                             // \\    [C]\n     \
    \                       //   \\   / \\\\  [D]\n                           // \
    \    \\ /   \\\\ //\n                          [B]=====[H]=====[E]\n         \
    \                   \\     //      ||\n                             \\   //  \
    \     ||\n                              \\ //        ||\n                    \
    \           [G]--------[F]\n           Figure 1: Bridged subnet with spanning\
    \ tree shown\n   The spanning tree limits the capacity of the resulting subnet.\n\
    \   Assume that the links are 100 Mbps.  Figure 2 shows how traffic from\n   hosts\
    \ on A to hosts on C goes via the spanning tree path A-B-H-E-C\n   (links replaced\
    \ with '1' in the figure); traffic from hosts on G to F\n   go via the spanning\
    \ three path G-H-E-F (links replaced by '2' in the\n   figure).  The link H-E\
    \ is shared by both paths (alternating '1's and\n   '2's), resulting in an aggregate\
    \ capacity for both A..C and G..F\n   paths of a total of 100 Mbps.\n        \
    \                          [A]\n                                  1          \
    \ [C]\n                                 1              1\n                   \
    \             1                1\n                              [B]1111111[H]121212[E]\n\
    \                                     2       2\n                            \
    \        2        2\n                                   2         2\n        \
    \                          [G]       [F]\n         Figure 2: Traffic from A..C\
    \ (1) and G..F (2) share a link\n   If traffic from G to F were to go directly\
    \ using full routing, e.g.,\n   from G-F, both paths could have 100 Mbps each,\
    \ and the total\n   aggregate capacity could be 200 Mbps (Figure 3).  In this\
    \ case, the\n   H-F link carries only A-C traffic ('1's) and the G-F traffic ('2's)\n\
    \   is more direct.\n                                  [A]\n                 \
    \                 1           [C]\n                                 1        \
    \      1\n                                1                1\n               \
    \               [B]1111111[H]111111[E]\n                                  [G]2222222[F]\n\
    \       Figure 3: Traffic from A..C (1) and G..F (2) with full routing\n   There\
    \ are a number of features of modern layer 3 routing protocols\n   which would\
    \ be beneficial if available at layer 2, but which cannot\n   practically be integrated\
    \ into the spanning tree system such as\n   multipath routing discussed in Section\
    \ 2.2 below.  Layer 3 routing\n   typically optimizes paths between pairs of endpoints\
    \ based on a cost\n   metric, conventionally based on bandwidth, hop count, latency,\
    \ and/or\n   policy measures.\n"
- title: 2.2.  Multipath Forwarding
  contents:
  - "2.2.  Multipath Forwarding\n   The discussion above assumes that all traffic\
    \ flowing from one point\n   to another follows a single path.  Using spanning\
    \ trees reduces\n   aggregate bandwidth by forcing all such paths onto one tree,\
    \ while\n   modern routing causes such paths to be selected based on a cost\n\
    \   metric.  However, extensions to modern routing protocols enable even\n   greater\
    \ aggregate bandwidth by permitting traffic flowing from one\n   endpoint to another\
    \ to be sent over multiple, typically equal-cost,\n   paths.  (Traffic sent over\
    \ different paths will generally encounter\n   different delays and may be reordered\
    \ with respect to traffic on\n   another path.  Thus, traffic must be divided\
    \ into flows, such that\n   reordering of traffic between flows is not significant,\
    \ and those\n   flows are allocated to paths.)\n   Multipathing typically spreads\
    \ the traffic more evenly over the\n   available physical links.  The addition\
    \ of multipathing to a routed\n   network would typically result in only a small\
    \ improvement in\n   capacity for a network with roughly equal traffic between\
    \ all pairs\n   of nodes, because in that situation traffic is already fairly\
    \ well\n   dispersed.  Conversely, multipathing can produce a dramatic\n   improvement\
    \ in a routed network where the traffic between a small\n   number of pairs of\
    \ nodes dominates, because such traffic can -- under\n   the right circumstances\
    \ -- be spread over multiple paths that might\n   otherwise be lightly loaded.\n"
- title: 2.3.  Convergence and Safety
  contents:
  - "2.3.  Convergence and Safety\n   The spanning tree is dependent on the way a\
    \ set of bridges are\n   interconnected, i.e., the link-layer topology.  Small\
    \ changes in this\n   topology can cause large changes in the spanning tree. \
    \ Changes in\n   the spanning tree can take time to propagate and converge, especially\n\
    \   for older versions of STP.\n   One possible case occurs when one of the branches\
    \ connected to the\n   root bridge fails, causing a large number of ports to block\
    \ and\n   unblock before the network reconverges [Me04].  Consider a ring with\n\
    \   a stub as shown in Figure 4.\n                   [R]----[A]----[B]----[C]----[D]----[E]\n\
    \                           |                           |\n                  \
    \         +--------[F]-----[G]--------+\n         Figure 4: Ring with poor convergence\
    \ under reconfiguration\n   If A is the root bridge, then the paths A->B->C->D\
    \ and A->F->G->E are\n   the two open paths, while the D->E link is blocked. \
    \ If the A->B link\n   fails, then E must unblock its port to D for traffic to\
    \ flow again,\n   but it may require recomputation of the entire tree through\
    \ BPDUs\n   (Bridge PDUs).  Even worse, if R is root and R or the A-R connection\n\
    \   fails, BPDU updates related to the old and new root can lead to a\n   brief\
    \ count-to-infinity event, and, if RSTP (Rapid Spanning Tree\n   Protocol) is\
    \ in use, can delay convergence for a few seconds.  The\n   original IEEE 802.1\
    \ spanning tree protocol can impose 30-second\n   delays in re-establishing data\
    \ connectivity after a topology change\n   in order to be sure a new topology\
    \ has stabilized and been fully\n   propagated.\n   The spanning tree protocol\
    \ is inherently global to an entire layer 2\n   subnet; there is no current way\
    \ to contain, partition, or otherwise\n   factor the protocol into a number of\
    \ smaller, more stable subsets\n   that interact as groups.  Contrast this with\
    \ Internet routing, which\n   includes both intradomain and interdomain variants,\
    \ split to provide\n   exactly that containment and scalability within a domain\
    \ while\n   allowing domains to interact freely independent of what happens\n\
    \   within a domain.\n"
- title: 2.4.  Stability of IP Multicast Optimization
  contents:
  - "2.4.  Stability of IP Multicast Optimization\n   Although it is a layer violation,\
    \ it is common for high-end bridges\n   to snoop on IP multicast control messages\
    \ for the purpose of\n   optimizing the distribution of IP multicast data and\
    \ of those control\n   messages [RFC4541].\n   When such snooping and optimization\
    \ is performed by spanning-tree-\n   based bridges, it done at each bridge based\
    \ on the traffic observed\n   on that bridge's ports.  Changes in topology may\
    \ reverse or otherwise\n   change the required forwarding ports of messages for\
    \ a multicast\n   group.  Bridges must relearn the correct multicast forwarding\
    \ from\n   the receipt of multicast control messages on new ports.  Such control\n\
    \   messages are sent to establish multicast distribution state and then\n   to\
    \ refresh it, sometimes at intervals of seconds.  If a bridging\n   topology change\
    \ has occurred during such intervals, multicast data\n   may be misdirected and\
    \ lost.\n   However, a solution based on link-state routing, for example, can\n\
    \   form and maintain a global view of the multicast group membership and\n  \
    \ multicast router situation in a similar fashion to that in which it\n   maintains\
    \ a global view of the status of links.  Thus, such a\n   solution can adjust\
    \ the forwarding of multicast data and control\n   traffic immediately as it sees\
    \ the LAN topology change.\n"
- title: 2.5.  IEEE 802.1 Bridging Protocols
  contents:
  - "2.5.  IEEE 802.1 Bridging Protocols\n   There have been a variety of IEEE protocols\
    \ beyond the initial\n   shared-media Ethernet variant, including:\n   o  802.1D\
    \ - added bridges (i.e., switches) and a spanning tree\n      protocol (STP) (incorporates\
    \ 802.1w, below) [IEEE04].\n   o  802.1w - extension for rapid reconvergence of\
    \ the spanning tree\n      protocol (RTSP) [IEEE04].\n   o  802.1Q - added VLAN\
    \ and priority support, where each link address\n      maps to one VLAN (incorporates\
    \ 802.1v and 802.1s, below) [IEEE06].\n   o  802.1v - added VLANs where segments\
    \ map to VLANs based on link\n      address together with network protocol and\
    \ transport port\n      [IEEE06].\n   o  802.1s - added support for multiple spanning\
    \ trees, up to a\n      maximum of 65, one per non-overlapping group of VLANs\
    \ (Multiple\n      STP) [IEEE06].\n   This document presumes the above variants\
    \ are supported on the\n   Ethernet subnet, i.e., that a TRILL solution would\
    \ not interfere with\n   (i.e., would not affect) any of the above.\n   In addition,\
    \ the following more recent extensions have been\n   standardized to specify provider/carrier\
    \ Ethernet services that can\n   be effectively transparent to the previously\
    \ specified customer\n   Ethernet services.  The TRILL problem as described in\
    \ this document\n   is limited to customer Ethernet services; however, there is\
    \ no reason\n   that a TRILL solution might not be easily applicable to both customer\n\
    \   and provider Ethernet.\n   o  802.1ad (Provider Bridges) - added support for\
    \ a second level of\n      VLAN tag, called a \"service tag\", and renamed the\
    \ original 802.1Q\n      tag a \"customer tag\".  Also known as Q-in-Q because\
    \ of the\n      stacking of 802.1Q VLAN tags.\n   o  802.1ah (Provider Backbone\
    \ Bridges) - added support for stacking\n      of MAC addresses by providing a\
    \ tag to contain the original source\n      and destination MAC addresses.  Also\
    \ know as MAC-in-MAC.\n   It is useful to note that no extension listed above\
    \ in this section\n   addresses the issue of independent, localized routing in\
    \ a single LAN\n   -- which is the focus of TRILL.\n   The TRILL problem and a\
    \ sketch of a possible solution [Pe04] were\n   presented to both the IETF (via\
    \ a BoF) and IEEE 802 (via an IEEE 802\n   Plenary Meeting Tutorial).  The IEEE,\
    \ in response, approved a project\n   called Shortest Path Bridging (IEEE Project\
    \ P802.1aq), taking a\n   different approach than that presented in [Pe04].  The\
    \ current Draft\n   of P802.1aq appears to describe two different techniques.\
    \  One, which\n   does not use encapsulation, is, according to the IEEE Draft,\
    \ limited\n   in applicability to small networks of no more than 100 shortest\
    \ path\n   bridges.  The other, which uses 802.1ah, is, according to the IEEE\n\
    \   Draft, limited in applicability to networks of no more than 1,000\n   shortest\
    \ path bridges.\n"
- title: 2.6.  Problems Not Addressed
  contents:
  - "2.6.  Problems Not Addressed\n   There are other challenges to deploying Ethernet\
    \ subnets that are not\n   addressed in this document other than, in some cases,\
    \ to mention\n   relevant IEEE 802.1 documents, although it is possible for a\
    \ solution\n   to address one or more of these in addition to the TRILL problem.\n\
    \   These include:\n   o  increased Ethernet link subnet scale\n   o  increased\
    \ node relocation\n   o  security of the Ethernet link subnet management protocol\n\
    \   o  flooding attacks on a Ethernet link subnet\n   o  support for \"provider\"\
    \ services such as Provider Bridges\n      (802.1ad), Provider Backbone Bridges\
    \ (802.1ah), or Provider\n      Backbone Bridge Traffic Engineering (802.1Qay)\n\
    \   Solutions to TRILL need not support deployment of larger scales of\n   Ethernet\
    \ link subnets than current broadcast domains can support\n   (e.g., around 1,000\
    \ end-hosts in a single bridged LAN of 100 bridges,\n   or 100,000 end-hosts inside\
    \ 1,000 VLANs served by 10,000 bridges).\n   Similarly, solutions to TRILL need\
    \ not address link-layer node\n   migration, which can complicate the caches in\
    \ learning bridges.\n   Similar challenges exist in the Address Resolution Protocol\
    \ (ARP),\n   where link-layer forwarding is not updated appropriately when nodes\n\
    \   move to ports on other bridges.  Again, the compartmentalization\n   available\
    \ in network routing, like that of network-layer Autonomous\n   Systems (ASes),\
    \ can help hide the effect of migration.  That is a\n   side effect, however,\
    \ and not a primary focus of this work.\n   Current link-layer control-plane protocols,\
    \ including Ethernet link\n   subnet management (spanning tree) and link/network\
    \ integration (ARP),\n   are vulnerable to a variety of attacks.  Solutions to\
    \ TRILL need not\n   address these insecurities.  Similar attacks exist in the\
    \ data plane,\n   e.g., source address spoofing, single address traffic attacks,\n\
    \   traffic snooping, and broadcast flooding.  TRILL solutions need not\n   address\
    \ any of these issues, although it is critical that they do not\n   introduce\
    \ new vulnerabilities in the process (see Section 5).\n"
- title: 3.  Desired Properties of Solutions to TRILL
  contents:
  - "3.  Desired Properties of Solutions to TRILL\n   This section describes some\
    \ of the desirable or required properties\n   of any system that would solve the\
    \ TRILL problems, independent of the\n   details of such a solution.  Most of\
    \ these are based on retaining\n   useful properties of bridges, or maintaining\
    \ those properties while\n   solving the problems listed in Section 2.\n"
- title: 3.1.  No Change to Link Capabilities
  contents:
  - "3.1.  No Change to Link Capabilities\n   There must be no change to the service\
    \ that Ethernet subnets already\n   provide as a result of deploying a TRILL solution.\
    \  Ethernet supports\n   unicast, broadcast, and multicast natively.  Although\
    \ network\n   protocols, notably IP, can tolerate link layers that do not provide\n\
    \   all three, it would be useful to retain the support already in place\n   [RFC3819].\
    \  So called \"zero configuration protocols\" (also known as\n   \"zeroconf\"\
    , e.g., as used to configure link-local addresses\n   [RFC3927]), as well as existing\
    \ bridge autoconfiguration, are also\n   dependent on broadcast.\n   Current Ethernet\
    \ ensures in-order delivery for frames of the same\n   priority and no duplicated\
    \ frames, under normal operation (excepting\n   transients during reconfiguration).\
    \  These criteria apply in varying\n   degrees to the different types of Ethernet,\
    \ e.g., basic Ethernet up\n   through basic VLAN (802.1Q) ensures that all frames\
    \ with the same\n   priority between two link addresses have both properties,\
    \ but\n   protocol/port VLAN (802.1v) ensures this only for packets with the\n\
    \   same protocol and port.  There are subtle implications to such a\n   requirement.\
    \  Bridge autolearning already is susceptible to moving\n   nodes between ports,\
    \ because previously learned associations between\n   the port and link address\
    \ change.  A TRILL solution could be\n   similarly susceptible to such changes.\n"
- title: 3.2.  Zero Configuration and Zero Assumption
  contents:
  - "3.2.  Zero Configuration and Zero Assumption\n   Both bridges and hubs are zero\
    \ configuration devices; hubs having no\n   configuration at all, and bridges\
    \ being automatically self-\n   configured.  Bridges are further zero-assumption\
    \ devices, unlike\n   hubs.  Bridges can be interconnected in arbitrary topologies,\
    \ without\n   regard for cycles or even self-attachment.  Spanning tree protocols\n\
    \   (STPs) remove the impact of cycles automatically, and port\n   autolearning\
    \ reduces unnecessary broadcast of unicast traffic.\n   A TRILL solution should\
    \ strive to have a similar zero-configuration,\n   zero-assumption operation.\
    \  This includes having TRILL solution\n   components automatically discover other\
    \ TRILL solution components and\n   organize themselves, as well as to configure\
    \ that organization for\n   proper operation (plug-and-play).  It also includes\
    \ zero-\n   configuration backward compatibility with existing bridges and hubs,\n\
    \   which may include interacting with some of the bridge protocols, such\n  \
    \ as spanning tree.\n   VLANs add a caveat to zero configuration; a TRILL solution\
    \ should\n   support automatic use of a default VLAN (like non-VLAN bridges),\
    \ but\n   would undoubtedly require explicit configuration for VLANs where\n \
    \  bridges require such configuration.\n   Autoconfiguration extends to optional\
    \ services, such as multicast\n   support via Internet Group Management Protocol\
    \ (IGMP) snooping,\n   broadcast support via serial copy, and support of multiple\
    \ VLANs.\n"
- title: 3.3.  Forwarding Loop Mitigation
  contents:
  - "3.3.  Forwarding Loop Mitigation\n   Using spanning trees avoids forwarding loops\
    \ by construction,\n   although transient loops can occur, e.g., via the temporarily\n\
    \   undetected appearance of new link connectivity or the loss of a\n   sufficient\
    \ number of spanning-tree control frames.  Solutions to\n   TRILL are intended\
    \ to use adapted network-layer routing protocols\n   that may introduce transient\
    \ loops during routing convergence.  A\n   TRILL solution thus needs to provide\
    \ support for mitigating the\n   effect of such routing loops.\n   In the Internet,\
    \ loop mitigation is provided by decrementing hop\n   counts (Time To Live (TTL));\
    \ in other networks, packets include a\n   trace (sometimes referred to as 'serialized'\
    \ or 'unioned') of visited\n   nodes [RFC1812].  In addition, there may be localized\
    \ consistency\n   checks, such as whether traffic is received on an unexpected\n\
    \   interface, which indicates that routing is in flux and that such\n   traffic\
    \ should probably be discarded for safety.  These types of\n   mechanisms limit\
    \ the impact of loops or detect them explicitly.\n   Mechanisms with similar effect\
    \ should be included in TRILL solutions.\n"
- title: 3.4.  Spanning Tree Management
  contents:
  - "3.4.  Spanning Tree Management\n   In order to address convergence under reconfiguration\
    \ and robustness\n   to link interruption (Section 2.2), participation in the\
    \ spanning\n   tree (STP) must be carefully managed.  The goal is to provide the\n\
    \   desired stability of the TRILL solution and of the entire Ethernet\n   link\
    \ subnet, which may include bridges using STP.  This may involve a\n   TRILL solution\
    \ participating in the STP, where the protocol used for\n   TRILL might dampen\
    \ interactions with STP, or it may involve severing\n   the STP into separate\
    \ STPs on 'stub' external Ethernet link subnet\n   segments.\n   A requirement\
    \ is that a TRILL solution must not require modifications\n   or exceptions to\
    \ the existing spanning tree protocols (e.g., STP,\n   RSTP (Rapid Spanning Tree\
    \ Protocol), MSTP (Multiple Spanning Tree\n   Protocol)).\n"
- title: 3.5.  Multiple Attachments
  contents:
  - "3.5.  Multiple Attachments\n   In STP, a single node with multiple attachments\
    \ to a single spanning\n   tree segment will always get and send traffic over\
    \ only one of the\n   those attachment points.  TRILL must manage all traffic,\
    \ including\n   multicast and broadcast traffic, so as not to create traffic loops\n\
    \   involving Ethernet segments with multiple TRILL attachment points.\n   This\
    \ includes multiple attachments to a single TRILL node and\n   attachments to\
    \ multiple TRILL nodes.  Support for multiple\n   attachments can improve support\
    \ for forms of mobility that induce\n   topology changes, such as \"make before\
    \ break\", although this is not a\n   major goal of TRILL.\n"
- title: 3.6.  VLAN Issues
  contents:
  - "3.6.  VLAN Issues\n   A TRILL solution should support multiple customer VLANs\
    \ (802.1Q,\n   which includes 802.1v and 802.1s).  This may involve ignorance,\
    \ just\n   as many bridge devices do not participate in the VLAN protocols.  A\n\
    \   TRILL solution may alternately furnish direct VLAN support, e.g., by\n   providing\
    \ configurable support for VLAN-ignorant end stations\n   equivalent to that provided\
    \ by 802.1Q non-provider bridges.\n   Provider VLANs (802.1ad) are outside of\
    \ the scope of this document.\n   A TRILL solution might or might not be easily\
    \ adaptable to handling\n   provider VLANs.\n"
- title: 3.7.  Operational Equivalence
  contents:
  - "3.7.  Operational Equivalence\n   As with any extension to an existing architecture,\
    \ it would be useful\n   -- though not strictly necessary -- to be able to describe\
    \ or\n   consider a TRILL solution as equivalent to an existing link layer\n \
    \  component.  Such equivalence provides a validation model for the\n   architecture\
    \ and a way for users to predict the effect of the use of\n   a TRILL solution\
    \ on a deployed Ethernet.  In this case, 'user' refers\n   to users of the Ethernet\
    \ protocol, whether at the host (data\n   segments), bridge (ST control segments),\
    \ or VLAN (VLAN control).\n   This provides a sanity check, i.e., \"we got it\
    \ right if we can\n   exchange a TRILL solution component or components with an\
    \ X\" (where\n   \"X\" might be a single bridge, a hub, or some other link layer\n\
    \   abstraction).  It does not matter whether \"X\" can be implemented on\n  \
    \ the same scale as the corresponding TRILL solution.  It also does not\n   matter\
    \ if it can -- there may be utility to deploying the TRILL\n   solution components\
    \ incrementally, in ways that a single \"X\" could\n   not be installed.\n   For\
    \ example, if a TRILL solution's components were equivalent to a\n   single IEEE\
    \ 802.1D bridge, it would mean that they would -- as a\n   whole - participate\
    \ in the STP.  This need not require that TRILL\n   solution components would\
    \ propagate STP, any more than a bridge need\n   do so in its on-board control.\
    \  It would mean that the solution would\n   interact with BPDUs at the edge,\
    \ where the solution would -- again,\n   as a whole - participate as if a single\
    \ node in the spanning tree.\n   Note that this equivalence is not required; a\
    \ solution may act as if\n   an IEEE 802.1 hub, or may not have a corresponding\
    \ equivalent link\n   layer component at all.\n"
- title: 3.8.  Optimizations
  contents:
  - "3.8.  Optimizations\n   There are a number of optimizations that may be applied\
    \ to TRILL\n   solutions.  These must be applied in a way that does not affect\n\
    \   functionality as a tradeoff for increased performance.  Such\n   optimizations\
    \ may address broadcast and multicast frame distribution,\n   VLAN support, and\
    \ snooping of ARP and IPv6 neighbor discovery.\n   In addition, there may be optimizations\
    \ which make the implementation\n   of a TRILL solution easier than roughly equivalent\
    \ existing bridge\n   devices.  For example, in many bridged LANs, there are topologies\n\
    \   such that central (\"core\") bridges which have both a greater volume\n  \
    \ of traffic flowing through them as well as traffic to and from a\n   larger\
    \ variety of end station than do non-core bridges.  Thus means\n   that such core\
    \ bridges need to learn a large number of end station\n   addresses and need to\
    \ do lookups based on such addresses very\n   rapidly.  This might require large\
    \ high speed content addressable\n   memory making implementation of such core\
    \ bridges difficult.\n   Although a TRILL solution need not provide such optimizations,\
    \ it may\n   reduce the need for such large, high speed content addressable\n\
    \   memories or provide other similar optimizations.\n"
- title: 3.9.  Internet Architecture Issues
  contents:
  - "3.9.  Internet Architecture Issues\n   TRILL solutions are intended to have no\
    \ impact on the Internet\n   network layer architecture.  In particular, the Internet\
    \ and higher\n   layer headers should remain intact when traversing a deployed\
    \ TRILL\n   solution, just as they do when traversing any other link subnet\n\
    \   technologies.  This means that the IP TTL field cannot be co-opted\n   for\
    \ forwarding loop mitigation, as it would interfere with the\n   Internet layer\
    \ assuming that the link subnet was reachable with no\n   changes in TTL.  (Internet\
    \ TTLs are changed only at routers, as per\n   RFC 1812, and even if IP TTL were\
    \ considered, TRILL is expected to\n   support non-IP payloads, and so requires\
    \ a separate solution anyway\n   [RFC1812]).\n   TRILL solutions should also have\
    \ no impact on Internet routing or\n   signaling, which also means that broadcast\
    \ and multicast, both of\n   which can pervade an entire Ethernet link subnet,\
    \ must be able to\n   transparently pervade a deployed TRILL solution.  Changing\
    \ how either\n   of these capabilities behaves would have significant effects\
    \ on a\n   variety of protocols, including RIP (broadcast), RIPv2 (multicast),\n\
    \   ARP (broadcast), IPv6 neighbor discovery (multicast), etc.\n   Note that snooping\
    \ of network-layer packets may be useful, especially\n   for certain optimizations.\
    \  These include snooping multicast\n   control-plane packets (IGMP) to tune link\
    \ multicast to match the\n   network multicast topology, as is already done in\
    \ existing smart\n   switches [RFC3376] [RFC4286].  This also includes snooping\
    \ IPv6\n   neighbor discovery messages to assist with governing TRILL solution\n\
    \   edge configuration, as is the case in some smart learning bridges\n   [RFC4861].\
    \  Other layers may similarly be snooped, notably ARP\n   packets, for similar\
    \ reasons as for IPv4 [RFC826].\n"
- title: 4.  Applicability
  contents:
  - "4.  Applicability\n   As might be expected, TRILL solutions are intended to be\
    \ used to\n   solve the problems described in Section 2.  However, not all such\n\
    \   installations are appropriate environments for such solutions.  This\n   section\
    \ outlines the issues in the appropriate use of these\n   solutions.\n   TRILL\
    \ solutions are intended to address problems of path efficiency\n   and concentration,\
    \ inability to multipath, and path stability within\n   a single Ethernet link\
    \ subnet.  Like bridges, individual TRILL\n   solution components may find other\
    \ TRILL solution components within a\n   single Ethernet link subnet and aggregate\
    \ into a single TRILL\n   solution.\n   TRILL solutions are not intended to span\
    \ separate Ethernet link\n   subnets interconnected by network-layer (e.g., router)\
    \ devices,\n   except via link-layer tunnels, where such tunnels render the distinct\n\
    \   subnet undetectably equivalent from a single Ethernet link subnet.\n   A currently\
    \ open question is whether a single Ethernet link subnet\n   should contain components\
    \ of only one TRILL solution, either of\n   necessity of architecture or utility.\
    \  Multiple TRILL solutions, like\n   Internet ASes, may allow TRILL routing protocols\
    \ to be partitioned in\n   ways that help their stability, but this may come at\
    \ the price of\n   needing the TRILL solutions to participate more fully as nodes\
    \ (each\n   modeling a bridge) in the Ethernet link subnet STP.  Each\n   architecture\
    \ solution should decide whether multiple TRILL solutions\n   are supported within\
    \ a single Ethernet link subnet, and mechanisms\n   should be included to enforce\
    \ whatever decision is made.\n   TRILL solutions need not address scalability\
    \ limitations in bridged\n   subnets.  Although there may be scale benefits of\
    \ other aspects of\n   solving TRILL problems, e.g., of using network-layer routing\
    \ to\n   provide stability under link changes or intermittent outages, this is\n\
    \   not a focus of this work.\n   As also noted earlier, TRILL solutions are not\
    \ intended to address\n   security vulnerabilities in either the data plane or\
    \ control plane of\n   the link layer.  This means that TRILL solutions should\
    \ not limit\n   broadcast frames, ARP requests, or spanning tree protocol messages\n\
    \   (if such are interpreted by the TRILL solution or solution edge).\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   TRILL solutions should not introduce new vulnerabilities\
    \ compared to\n   traditional bridged subnets.\n   TRILL solutions are not intended\
    \ to be a solution to Ethernet link\n   subnet vulnerabilities, including spoofing,\
    \ flooding, snooping, and\n   attacks on the link control plane (STP, flooding\
    \ the learning cache)\n   and link-network control plane (ARP).  Although TRILL\
    \ solutions are\n   intended to provide more stable routing than STP, this stability\
    \ is\n   limited to performance, and the subsequent robustness is intended to\n\
    \   address non-malicious events.\n   There may be some side-effects to the use\
    \ of TRILL solutions that can\n   provide more robust operation under certain\
    \ attacks, such as those\n   interrupting or adding link service, but TRILL solutions\
    \ should not\n   be relied upon for such capabilities.\n   Finally, TRILL solutions\
    \ should not interfere with other protocols\n   intended to address these vulnerabilities,\
    \ such as those to secure\n   IPv6 neighbor discovery [RFC3971].\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Portions of this document are based on documents that\
    \ describe a\n   preliminary solution, and on a related network-layer solution\
    \ [Pe04]\n   [Pe05] [To03].  Donald Eastlake III provided substantial text and\n\
    \   comments.  Additional comments and feedback were provided by the\n   members\
    \ of the IETF TRILL WG, in which this document was developed,\n   and by the IESG.\n\
    \   This document was prepared using 2-Word-v2.0.template.dot.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [IEEE04]  IEEE 802.1D bridging standard, \"IEEE\
    \ Standard for Local and\n             metropolitan area networks: Media Access\
    \ Control (MAC)\n             Bridges\", (incorporates 802.1w), Jun. 2004.\n \
    \  [IEEE06]  IEEE 802.1Q VLAN standard, \"IEEE Standards for Local and\n     \
    \        metropolitan area networks: Virtual Bridged Local Area\n            \
    \ Networks\", (incorporates 802.1v and 802.1s), May 2006.\n   [Me04]    Myers,\
    \ A., T.E. Ng, H. Zhang, \"Rethinking the Service\n             Model: Scaling\
    \ Ethernet to a Million Nodes\", Proc. ACM\n             Third Workshop on Hot\
    \ Topics in Networks (HotNets-III),\n             Mar. 2004.\n   [Pe99]    Perlman,\
    \ R., \"Interconnection: Bridges, Routers, Switches,\n             and Internetworking\
    \ Protocols\", Addison Wesley, Chapter 3,\n             1999.\n   [Pe04]    Perlman,\
    \ R., \"RBridges: Transparent Routing\", Proc. Infocom\n             2005, Mar.\
    \ 2004.\n   [Pe05]    Perlman, R., J. Touch, A. Yegin, \"RBridges: Transparent\n\
    \             Routing,\" (expired work in progress), Apr. 2004 - May 2005.\n \
    \  [RFC826]  Plummer, D., \"Ethernet Address Resolution Protocol: Or\n       \
    \      Converting Network Protocol Addresses to 48.bit Ethernet\n            \
    \ Address for Transmission on Ethernet Hardware\", STD 37, RFC\n             826,\
    \ November 1982.\n   [RFC1812] Baker, F., Ed., \"Requirements for IP Version 4\
    \ Routers\",\n             RFC 1812, June 1995.\n   [RFC3376] Cain, B., Deering,\
    \ S., Kouvelas, I., Fenner, B., and A.\n             Thyagarajan, \"Internet Group\
    \ Management Protocol, Version\n             3\", RFC 3376, October 2002.\n  \
    \ [RFC3819] Karn, P., Ed., Bormann, C., Fairhurst, G., Grossman, D.,\n       \
    \      Ludwig, R., Mahdavi, J., Montenegro, G., Touch, J., and L.\n          \
    \   Wood, \"Advice for Internet Subnetwork Designers\", BCP 89,\n            \
    \ RFC 3819, July 2004.\n   [RFC3927] Cheshire, S., Aboba, B., and E. Guttman,\
    \ \"Dynamic\n             Configuration of IPv4 Link-Local Addresses\", RFC 3927,\
    \ May\n             2005.\n   [RFC3971] Arkko, J., Ed., Kempf, J., Zill, B., and\
    \ P. Nikander,\n             \"SEcure Neighbor Discovery (SEND)\", RFC 3971, March\
    \ 2005.\n   [RFC4286] Rosenberg, J., \"Extensible Markup Language (XML) Formats\n\
    \             for Representing Resource Lists\", RFC 4826, May 2007.\n   [RFC4541]\
    \ Christensen, M., Kimball, K., and F. Solensky,\n             \"Considerations\
    \ for Internet Group Management Protocol\n             (IGMP) and Multicast Listener\
    \ Discovery (MLD) Snooping\n             Switches\", RFC 4541, May 2006.\n   [RFC4861]\
    \ Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n             \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n             September 2007.\n\
    \   [To03]    Touch, J., Y. Wang, L. Eggert, G. Finn, \"A Virtual Internet\n \
    \            Architecture\", ISI Technical Report ISI-TR-570, Presented\n    \
    \         at the Workshop on Future Directions in Network\n             Architecture\
    \ (FDNA) 2003 at Sigcomm 2003, March 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Joe Touch\n   USC/ISI\n   4676 Admiralty Way\n   Marina\
    \ del Rey, CA 90292-6695\n   U.S.A.\n   Phone: +1 (310) 448-9151\n   EMail: touch@isi.edu\n\
    \   URL:   http://www.isi.edu/touch\n   Radia Perlman\n   Sun Microsystems\n \
    \  16 Network Circle\n   umpk16-161\n   Menlo Park, CA 94025\n   U.S.A.\n   EMail:\
    \ Radia.Perlman@sun.com\n"
