- contents:
  - '                        The ORIGIN HTTP/2 Frame

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies the ORIGIN frame for HTTP/2, to indicate
    what\n   origins are available on a given connection.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8336.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Notational Conventions  . . . . . . . . . . . . . .
    . . .   2\n   2.  The ORIGIN HTTP/2 Frame . . . . . . . . . . . . . . . . . .
    .   3\n     2.1.  Syntax  . . . . . . . . . . . . . . . . . . . . . . . . .   3\n
    \    2.2.  Processing ORIGIN Frames  . . . . . . . . . . . . . . . .   3\n     2.3.
    \ The Origin Set  . . . . . . . . . . . . . . . . . . . . .   4\n     2.4.  Authority,
    Push, and Coalescing with ORIGIN . . . . . . .   6\n   3.  IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .   7\n   4.  Security Considerations
    . . . . . . . . . . . . . . . . . . .   7\n   5.  References  . . . . . . . .
    . . . . . . . . . . . . . . . . .   8\n     5.1.  Normative References  . . .
    . . . . . . . . . . . . . . .   8\n     5.2.  Informative References  . . . .
    . . . . . . . . . . . . .   8\n   Appendix A.  Non-Normative Processing Algorithm
    . . . . . . . . .  10\n   Appendix B.  Operational Considerations for Servers
    . . . . . . .  10\n   Authors' Addresses  . . . . . . . . . . . . . . . . . .
    . . . . .  11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   HTTP/2 [RFC7540] allows clients to coalesce different origins\n
    \  [RFC6454] onto the same connection when certain conditions are met.\n   However,
    in some cases, a connection is not usable for a coalesced\n   origin, so the 421
    (Misdirected Request) status code ([RFC7540],\n   Section 9.1.2) was defined.\n
    \  Using a status code in this manner allows clients to recover from\n   misdirected
    requests, but at the penalty of adding latency.  To\n   address that, this specification
    defines a new HTTP/2 frame type,\n   \"ORIGIN\", to allow servers to indicate
    for which origins a connection\n   is usable.\n   Additionally, experience has
    shown that HTTP/2's requirement to\n   establish server authority using both DNS
    and the server's\n   certificate is onerous.  This specification relaxes the requirement\n
    \  to check DNS when the ORIGIN frame is in use.  Doing so has\n   additional
    benefits, such as removing the latency associated with\n   some DNS lookups.\n"
  - contents:
    - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Notational Conventions
  title: 1.  Introduction
- contents:
  - "2.  The ORIGIN HTTP/2 Frame\n   This document defines a new HTTP/2 frame type
    ([RFC7540], Section 4)\n   called ORIGIN, that allows a server to indicate what
    origin(s)\n   [RFC6454] the server would like the client to consider as members
    of\n   the Origin Set (Section 2.3) for the connection within which it\n   occurs.\n"
  - contents:
    - "2.1.  Syntax\n   The ORIGIN frame type is 0xc (decimal 12) and contains zero
      or more\n   instances of the Origin-Entry field.\n   +-------------------------------+-------------------------------+\n
      \  |         Origin-Entry (*)                                    ...\n   +-------------------------------+-------------------------------+\n
      \  An Origin-Entry is a length-delimited string:\n   +-------------------------------+-------------------------------+\n
      \  |         Origin-Len (16)       | ASCII-Origin?               ...\n   +-------------------------------+-------------------------------+\n
      \  Specifically:\n   Origin-Len:  An unsigned, 16-bit integer indicating the
      length, in\n      octets, of the ASCII-Origin field.\n   Origin:  An OPTIONAL
      sequence of characters containing the ASCII\n      serialization of an origin
      ([RFC6454], Section 6.2) that the\n      sender asserts this connection is or
      could be authoritative for.\n   The ORIGIN frame does not define any flags.
      \ However, future updates\n   to this specification MAY define flags.  See Section
      2.2.\n"
    title: 2.1.  Syntax
  - contents:
    - "2.2.  Processing ORIGIN Frames\n   The ORIGIN frame is a non-critical extension
      to HTTP/2.  Endpoints\n   that do not support this frame can safely ignore it
      upon receipt.\n   When received by an implementing client, it is used to initialize
      and\n   manipulate the Origin Set (see Section 2.3), thereby changing how the\n
      \  client establishes authority for origin servers (see Section 2.4).\n   The
      ORIGIN frame MUST be sent on stream 0; an ORIGIN frame on any\n   other stream
      is invalid and MUST be ignored.\n   Likewise, the ORIGIN frame is only valid
      on connections with the \"h2\"\n   protocol identifier or when specifically
      nominated by the protocol's\n   definition; it MUST be ignored when received
      on a connection with the\n   \"h2c\" protocol identifier.\n   This specification
      does not define any flags for the ORIGIN frame,\n   but future updates to this
      specification (through IETF consensus)\n   might use them to change its semantics.
      \ The first four flags (0x1,\n   0x2, 0x4, and 0x8) are reserved for backwards-incompatible
      changes;\n   therefore, when any of them are set, the ORIGIN frame containing
      them\n   MUST be ignored by clients conforming to this specification, unless\n
      \  the flag's semantics are understood.  The remaining flags are\n   reserved
      for backwards-compatible changes and do not affect\n   processing by clients
      conformant to this specification.\n   The ORIGIN frame describes a property
      of the connection and therefore\n   is processed hop by hop.  An intermediary
      MUST NOT forward ORIGIN\n   frames.  Clients configured to use a proxy MUST
      ignore any ORIGIN\n   frames received from it.\n   Each ASCII-Origin field in
      the frame's payload MUST be parsed as an\n   ASCII serialization of an origin
      ([RFC6454], Section 6.2).  If\n   parsing fails, the field MUST be ignored.\n
      \  Note that the ORIGIN frame does not support wildcard names (e.g.,\n   \"*.example.com\")
      in Origin-Entry.  As a result, sending ORIGIN when a\n   wildcard certificate
      is in use effectively disables any origins that\n   are not explicitly listed
      in the ORIGIN frame(s) (when the client\n   understands ORIGIN).\n   See Appendix
      A for an illustrative algorithm for processing ORIGIN\n   frames.\n"
    title: 2.2.  Processing ORIGIN Frames
  - contents:
    - "2.3.  The Origin Set\n   The set of origins (as per [RFC6454]) that a given
      connection might\n   be used for is known in this specification as the Origin
      Set.\n   By default, the Origin Set for a connection is uninitialized.  An\n
      \  uninitialized Origin Set means that clients apply the coalescing\n   rules
      from Section 9.1.1 of [RFC7540].\n   When an ORIGIN frame is first received
      and successfully processed by\n   a client, the connection's Origin Set is defined
      to contain an\n   initial origin.  The initial origin is composed from:\n   o
      \ Scheme: \"https\"\n   o  Host: the value sent in Server Name Indication (SNI)
      ([RFC6066],\n      Section 3) converted to lower case; if SNI is not present,
      the\n      remote address of the connection (i.e., the server's IP address)\n
      \  o  Port: the remote port of the connection (i.e., the server's port)\n   The
      contents of that ORIGIN frame (and subsequent ones) allow the\n   server to
      incrementally add new origins to the Origin Set, as\n   described in Section
      2.2.\n   The Origin Set is also affected by the 421 (Misdirected Request)\n
      \  response status code, as defined in [RFC7540], Section 9.1.2.  Upon\n   receipt
      of a response with this status code, implementing clients\n   MUST create the
      ASCII serialization of the corresponding request's\n   origin (as per [RFC6454],
      Section 6.2) and remove it from the\n   connection's Origin Set, if present.\n
      \  Note:  When sending an ORIGIN frame to a connection that is\n      initialized
      as an alternative service [RFC7838], the initial\n      Origin Set (Section
      2.3) will contain an origin with the\n      appropriate scheme and hostname
      (since RFC 7838 specifies that the\n      origin's hostname be sent in SNI).
      \ However, it is possible that\n      the port will be different than that of
      the intended origin, since\n      the initial Origin Set is calculated using
      the actual port in use,\n      which can be different for the alternative service.
      \ In this case,\n      the intended origin needs to be sent in the ORIGIN frame\n
      \     explicitly.\n      For example, a client making requests for \"https://example.com\"
      is\n      directed to an alternative service at (\"h2\", \"x.example.net\",\n
      \     \"8443\").  If this alternative service sends an ORIGIN frame, the\n      initial
      origin will be \"https://example.com:8443\".  The client\n      will not be
      able to use the alternative service to make requests\n      for \"https://example.com\"
      unless that origin is explicitly\n      included in the ORIGIN frame.\n"
    title: 2.3.  The Origin Set
  - contents:
    - "2.4.  Authority, Push, and Coalescing with ORIGIN\n   Section 10.1 of [RFC7540]
      uses both DNS and the presented Transport\n   Layer Security (TLS) certificate
      to establish the origin server(s)\n   that a connection is authoritative for,
      just as HTTP/1.1 does in\n   [RFC7230].\n   Furthermore, Section 9.1.1 of [RFC7540]
      explicitly allows a\n   connection to be used for more than one origin server,
      if it is\n   authoritative.  This affects what responses can be considered\n
      \  authoritative, both for direct responses to requests and for server\n   push
      (see [RFC7540], Section 8.2.2).  Indirectly, it also affects\n   what requests
      will be sent on a connection, since clients will\n   generally only send requests
      on connections that they believe to be\n   authoritative for the origin in question.\n
      \  Once an Origin Set has been initialized for a connection, clients\n   that
      implement this specification use it to help determine what the\n   connection
      is authoritative for.  Specifically, such clients MUST NOT\n   consider a connection
      to be authoritative for an origin not present\n   in the Origin Set, and they
      SHOULD use the connection for all\n   requests to origins in the Origin Set
      for which the connection is\n   authoritative, unless there are operational
      reasons for opening a new\n   connection.\n   Note that for a connection to
      be considered authoritative for a given\n   origin, the server is still required
      to authenticate with a\n   certificate that passes suitable checks; see Section
      9.1.1 of\n   [RFC7540] for more information.  This includes verifying that the\n
      \  host matches a \"dNSName\" value from the certificate \"subjectAltName\"\n
      \  field (using the rules defined in [RFC2818]; see also [RFC5280],\n   Section
      4.2.1.6).\n   Additionally, clients MAY avoid consulting DNS to establish the\n
      \  connection's authority for new requests to origins in the Origin Set;\n   however,
      those that do so face new risks, as explained in Section 4.\n   Because ORIGIN
      can change the set of origins a connection is used for\n   over time, it is
      possible that a client might have more than one\n   viable connection to an
      origin open at any time.  When this occurs,\n   clients SHOULD NOT emit new
      requests on any connection whose Origin\n   Set is a proper subset of another
      connection's Origin Set, and they\n   SHOULD close it once all outstanding requests
      are satisfied.\n   The Origin Set is unaffected by any alternative services
      [RFC7838]\n   advertisements made by the server.  Advertising an alternative\n
      \  service does not affect whether a server is authoritative.\n"
    title: 2.4.  Authority, Push, and Coalescing with ORIGIN
  title: 2.  The ORIGIN HTTP/2 Frame
- contents:
  - "3.  IANA Considerations\n   This specification adds an entry to the \"HTTP/2
    Frame Type\" registry.\n   o  Frame Type: ORIGIN\n   o  Code: 0xc\n   o  Specification:
    RFC 8336\n"
  title: 3.  IANA Considerations
- contents:
  - "4.  Security Considerations\n   Clients that blindly trust the ORIGIN frame's
    contents will be\n   vulnerable to a large number of attacks.  See Section 2.4
    for\n   mitigations.\n   Relaxing the requirement to consult DNS when determining
    authority\n   for an origin means that an attacker who possesses a valid\n   certificate
    no longer needs to be on path to redirect traffic to\n   them; instead of modifying
    DNS, they need only convince the user to\n   visit another website in order to
    coalesce connections to the target\n   onto their existing connection.\n   As
    a result, clients opting not to consult DNS ought to employ some\n   alternative
    means to establish a high degree of confidence that the\n   certificate is legitimate.
    \ For example, clients might skip\n   consulting DNS only if they receive proof
    of inclusion in a\n   Certificate Transparency log [RFC6962] or if they have a
    recent\n   Online Certificate Status Protocol (OCSP) response [RFC6960]\n   (possibly
    using the \"status_request\" TLS extension [RFC6066]) showing\n   that the certificate
    was not revoked.\n   The Origin Set's size is unbounded by this specification
    and thus\n   could be used by attackers to exhaust client resources.  To mitigate\n
    \  this risk, clients can monitor their state commitment and close the\n   connection
    if it is too high.\n"
  title: 4.  Security Considerations
- contents:
  - '5.  References

    '
  - contents:
    - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2818]  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n              DOI
      10.17487/RFC2818, May 2000,\n              <https://www.rfc-editor.org/info/rfc2818>.\n
      \  [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,
      R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate
      and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI
      10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n
      \  [RFC6066]  Eastlake 3rd, D., \"Transport Layer Security (TLS)\n              Extensions:
      Extension Definitions\", RFC 6066,\n              DOI 10.17487/RFC6066, January
      2011,\n              <https://www.rfc-editor.org/info/rfc6066>.\n   [RFC6454]
      \ Barth, A., \"The Web Origin Concept\", RFC 6454,\n              DOI 10.17487/RFC6454,
      December 2011,\n              <https://www.rfc-editor.org/info/rfc6454>.\n   [RFC7540]
      \ Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n              Transfer
      Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI 10.17487/RFC7540,
      May 2015,\n              <https://www.rfc-editor.org/info/rfc7540>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 5.1.  Normative References
  - contents:
    - "5.2.  Informative References\n   [RFC6960]  Santesson, S., Myers, M., Ankney,
      R., Malpani, A.,\n              Galperin, S., and C. Adams, \"X.509 Internet
      Public Key\n              Infrastructure Online Certificate Status Protocol
      - OCSP\",\n              RFC 6960, DOI 10.17487/RFC6960, June 2013,\n              <https://www.rfc-editor.org/info/rfc6960>.\n
      \  [RFC6962]  Laurie, B., Langley, A., and E. Kasper, \"Certificate\n              Transparency\",
      RFC 6962, DOI 10.17487/RFC6962, June 2013,\n              <https://www.rfc-editor.org/info/rfc6962>.\n
      \  [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n
      \             Protocol (HTTP/1.1): Message Syntax and Routing\",\n              RFC
      7230, DOI 10.17487/RFC7230, June 2014,\n              <https://www.rfc-editor.org/info/rfc7230>.\n
      \  [RFC7838]  Nottingham, M., McManus, P., and J. Reschke, \"HTTP\n              Alternative
      Services\", RFC 7838, DOI 10.17487/RFC7838,\n              April 2016, <https://www.rfc-editor.org/info/rfc7838>.\n
      \  [RFC8288]  Nottingham, M., \"Web Linking\", RFC 8288,\n              DOI
      10.17487/RFC8288, October 2017,\n              <https://www.rfc-editor.org/info/rfc8288>.\n"
    title: 5.2.  Informative References
  title: 5.  References
- contents:
  - "Appendix A.  Non-Normative Processing Algorithm\n   The following algorithm illustrates
    how a client could handle\n   received ORIGIN frames:\n   1.  If the client is
    configured to use a proxy for the connection,\n       ignore the frame and stop
    processing.\n   2.  If the connection is not identified with the \"h2\" protocol\n
    \      identifier or another protocol that has explicitly opted into\n       this
    specification, ignore the frame and stop processing.\n   3.  If the frame occurs
    upon any stream except stream 0, ignore the\n       frame and stop processing.\n
    \  4.  If any of the flags 0x1, 0x2, 0x4, or 0x8 are set, ignore the\n       frame
    and stop processing.\n   5.  If no previous ORIGIN frame on the connection has
    reached this\n       step, initialize the Origin Set as per Section 2.3.\n   6.
    \ For each \"Origin-Entry\" in the frame payload:\n       1.  Parse \"ASCII-Origin\"
    as an ASCII serialization of an origin\n           ([RFC6454], Section 6.2), and
    let the result be\n           \"parsed_origin\".  If parsing fails, skip to the
    next\n           \"Origin-Entry\".\n       2.  Add \"parsed_origin\" to the Origin
    Set.\n"
  title: Appendix A.  Non-Normative Processing Algorithm
- contents:
  - "Appendix B.  Operational Considerations for Servers\n   The ORIGIN frame allows
    a server to indicate for which origins a\n   given connection ought be used.  The
    set of origins advertised using\n   this mechanism is under control of the server;
    servers are not\n   obligated to use it or to advertise all origins that they
    might be\n   able to answer a request for.\n   For example, it can be used to
    inform the client that the connection\n   is to only be used for the SNI-based
    origin, by sending an empty\n   ORIGIN frame.  Or, a larger number of origins
    can be indicated by\n   including a payload.\n   Generally, this information is
    most useful to send before sending any\n   part of a response that might initiate
    a new connection; for example,\n   \"Link\" response header fields [RFC8288],
    or links in the response\n   body.\n   Therefore, the ORIGIN frame ought be sent
    as soon as possible on a\n   connection, ideally before any HEADERS or PUSH_PROMISE
    frames.\n   However, if it's desirable to associate a large number of origins\n
    \  with a connection, doing so might introduce end-user-perceived\n   latency,
    due to their size.  As a result, it might be necessary to\n   select a \"core\"
    set of origins to send initially, and expand the set\n   of origins the connection
    is used for with subsequent ORIGIN frames\n   later (e.g., when the connection
    is idle).\n   That said, senders are encouraged to include as many origins as\n
    \  practical within a single ORIGIN frame; clients need to make\n   decisions
    about creating connections on the fly, and if the Origin\n   Set is split across
    many frames, their behavior might be suboptimal.\n   Senders take note that, as
    per Section 4, Step 5, of [RFC6454], the\n   values in an ORIGIN header need to
    be case-normalized before\n   serialization.\n   Finally, servers that host alternative
    services [RFC7838] will need\n   to explicitly advertise their origins when sending
    ORIGIN, because\n   the default contents of the Origin Set (as per Section 2.3)
    do not\n   contain any alternative services' origins, even if they have been\n
    \  used previously on the connection.\n"
  title: Appendix B.  Operational Considerations for Servers
- contents:
  - "Authors' Addresses\n   Mark Nottingham\n   Email: mnot@mnot.net\n   URI:   https://www.mnot.net/\n
    \  Erik Nygren\n   Akamai Technologies\n   Email: erik+ietf@nygren.org\n"
  title: Authors' Addresses
