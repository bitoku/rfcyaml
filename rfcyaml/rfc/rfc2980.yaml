- title: __initial_text__
  contents:
  - '                         Common NNTP Extensions

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   In this document, a number of popular extensions to the Network\
    \ News\n   Transfer Protocol (NNTP) protocol defined in RFC 977 are documented\n\
    \   and discussed.  While this document is not intended to serve as a\n   standard\
    \ of any kind, it will hopefully serve as a reference document\n   for future\
    \ implementers of the NNTP protocol.  In the role, this\n   document would hopefully\
    \ create the possibility for some level of\n   interoperability among implementations\
    \ that make use of extensions.\n"
- title: Introduction
  contents:
  - "Introduction\n   RFC 977 [1] defines the NNTP protocol and  was released over\
    \ a decade\n   ago.  Since then, NNTP has become one of the most popular protocols\n\
    \   in use on the Internet.  Many implementations of the protocol have\n   been\
    \ created on many different platforms and operating systems.  With\n   the growth\
    \ in use of the protocol, work began on a revision to NNTP\n   in 1991, but that\
    \ work did not result in a new standard protocol\n   specification.  However,\
    \ many ideas from that working group did find\n   their way into many implementations\
    \ of NNTP.  Additionally, many\n   other extensions, often created by newsreader\
    \ authors, are also in\n   use.  This document will capture and define all known\
    \ extensions to\n   NNTP available in official NNTP server releases of some type\
    \ as of\n   this writing.  Where possible, the server software first implementing\n\
    \   a particular extension will be noted.  It is the hope of the author\n   that\
    \ using this document in tandem with RFC 977 will limit the\n   addition of new\
    \ extensions that essentially do the same thing.\n   Software developers may wish\
    \ to use this document and others [2] as a\n   resource for the  development of\
    \ new software.\n   This document does not specify an Internet Standard of any\
    \ kind.  It\n   only attempts to document current practices.  While this document\
    \ may\n   clarify some ambiguity in RFC 977, RFC 977 should be regarded as\n \
    \  authoritative in all cases.  There are some implementations that are\n   not\
    \ strictly RFC 977 compliant and where necessary, these deviations\n   from the\
    \ standard will be noted.  This document does reflect the work\n   of the IETF\
    \ NNTP-EXT working group chaired by Ned Freed and Stan\n   Barber.\n   This document\
    \ is provided to help implementers have a uniform source\n   of information about\
    \ extensions, however, it is important for any\n   prospective implementer to\
    \ understand that the extensions listed here\n   are NOT part of any current standard\
    \ for NNTP.  In fact, some of the\n   ones listed in this document should not\
    \ be included in new NNTP\n   implementations as they should no longer be used\
    \ modern NNTP\n   environments.  Such commands should be considered historic and\
    \ are\n   documented as such in this document.\n   Extensions fall into three\
    \ categories: transport, newsreader and\n   other.  Transport extensions are additions\
    \ to the NNTP specification\n   that were made specifically to move news articles\
    \ from one server to\n   another server.  Newsreader extensions are additions\
    \ to the NNTP\n   specification that were made to assist NNTP clients in selecting\
    \ and\n   retrieving news articles from servers.  Other extensions to the NNTP\n\
    \   specification are those which did not specifically fall into either\n   of\
    \ the other two categories.  Examples of other extensions include\n   authentication\
    \ and time-of-day extensions.  For each command, the\n   format of section 3 of\
    \ RFC 977 will be used.\n"
- title: 1. Transport Extensions
  contents:
  - "1. Transport Extensions\n   A transport extension is one which is primarily used\
    \ in inter-server\n   communications.  Following are the descriptions of each\
    \ transport\n   extension commands and the responses which will be returned by\
    \ those\n   commands.\n   Each command is shown in upper case for clarity, although\
    \ case is\n   ignored in the interpretation of commands by the NNTP server.  Any\n\
    \   parameters are shown in lower case.  A parameter shown in [square\n   brackets]\
    \ is optional.  For example, [GMT] indicates that the\n   triglyph GMT may present\
    \ or omitted.  A parameter that may be\n   repeated is followed by an ellipsis.\n"
- title: 1.1.1  The CHECK command
  contents:
  - "1.1.1  The CHECK command\n   CHECK <message-id>\n   CHECK is used by a peer to\
    \ discover if the article with the specified\n   message-id should be sent to\
    \ the server using the TAKETHIS command.\n   The peer does not have to wait for\
    \ a response from the server before\n   sending the next command.\n   From using\
    \ the responses to the sequence of CHECK commands, a list of\n   articles to be\
    \ sent can be constructed for subsequent use by the\n   TAKETHIS command.\n  \
    \ The use of the CHECK command for streaming is optional.  Some\n   implementations\
    \ will directly use the TAKETHIS command and send all\n   articles in the send\
    \ queue on that peer for the server.\n   On some implementations, the use of the\
    \ CHECK command is not\n   permitted when the server is in slave mode (via the\
    \ SLAVE command).\n   Responses that are of the form X3X must specify the message-id\
    \ in the\n   response.\n"
- title: 1.1.2.  Responses
  contents:
  - "1.1.2.  Responses\n      238 no such article found, please send it to me\n  \
    \    400 not accepting articles\n      431 try sending it again later\n      438\
    \ already have it, please don't send it to me\n      480 Transfer permission denied\n\
    \      500 Command not understood\n"
- title: 1.2.1  The MODE STREAM command
  contents:
  - "1.2.1  The MODE STREAM command\n   MODE STREAM\n   MODE STREAM is used by a peer\
    \ to indicate to the server that it would\n   like to suspend the lock step conversational\
    \ nature of NNTP and send\n   commands in streams.  This command should be used\
    \ before TAKETHIS and\n   CHECK.  See the section on the commands TAKETHIS and\
    \ CHECK for more\n   details.\n"
- title: 1.2.2.  Responses
  contents:
  - "1.2.2.  Responses\n      203 Streaming is OK\n      500 Command not understood\n"
- title: 1.3.1  The TAKETHIS command
  contents:
  - "1.3.1  The TAKETHIS command\n   TAKETHIS <message-id>\n   TAKETHIS is used to\
    \ send articles to a server when in streaming mode.\n   The entire article (header\
    \ and body, in that sequence) is sent\n   immediately after the peer sends the\
    \ TAKETHIS command.  The peer does\n   not have to wait for a response from the\
    \ server before sending the\n   next command and the associated article.\n   During\
    \ transmission of the article, the peer should send the entire\n   article, including\
    \ header and body, in the manner specified for text\n   transmission from the\
    \ server.  See RFC 977, Section 2.4.1 for\n   details.\n   Responses that are\
    \ of the form X3X must specify the message-id in the\n   response.\n"
- title: 1.3.2.  Responses
  contents:
  - "1.3.2.  Responses\n      239 article transferred ok\n      400 not accepting\
    \ articles\n      439 article transfer failed\n      480 Transfer permission denied\n\
    \      500 Command not understood\n"
- title: 1.4.1  The XREPLIC command
  contents:
  - "1.4.1  The XREPLIC command\n   XREPLIC ggg:nnn[,ggg:nnn...]\n   The XREPLIC command\
    \ makes is possible to exactly duplicate the news\n   spool structure of one server\
    \ in another server.  It first appeared\n   in INN.\n   This command works similarly\
    \ to the IHAVE command as specified in RFC\n   977.  The same response codes are\
    \ used.  The command line arguments\n   consist of entries separated by a single\
    \ comma.  Each entry consists\n   of a news group name, a colon, and an article\
    \ number.  If the server\n   responds with a 335 response, the article should\
    \ be filed in the news\n   group(s) and article number(s) specified in the XREPLIC\
    \ command line.\n   If the server cannot do successfully install the article once\
    \ it has\n   accepted it, a 436 or 437 response code can be used to indicate the\n\
    \   failure.\n   This command should only be used when the receiving server is\
    \ being\n   fed by only one other server.  It is likely that when used with\n\
    \   servers that have multiple feeds that this command will frequently\n   fail.\n\
    \   XREPLIC slaving has been deprecated in INN version 1.7.2 and later.\n   INN\
    \ now has the ability to slave servers via transparent means,\n   simply by having\
    \ the article's Xref header transferred.  (In previous\n   versions, this header\
    \ was generated locally and stripped off on\n   outgoing feeds.)\n   It is likely\
    \ that future versions of INN will no longer support\n   XREPLIC.\n"
- title: 1.4.2.  Responses
  contents:
  - "1.4.2.  Responses\n      235 article transferred ok\n      335 send article to\
    \ be transferred.  End with <CR-LF>.<CR-LF>\n      435 article not wanted - do\
    \ not send it\n      436 transfer failed - try again later\n      437 article\
    \ rejected - do not try again\n"
- title: 2. Newsreader Extensions
  contents:
  - "2. Newsreader Extensions\n   Newsreader extensions are those which are primarily\
    \ used by\n   newsreading clients.  Following are the descriptions of each\n \
    \  newsreader extension commands and the responses which will be\n   returned\
    \ by those commands.\n   Each command is shown in upper case for clarity, although\
    \ case is\n   ignored in the interpretation of commands by the NNTP server.  Any\n\
    \   parameters are shown in lower case.  A parameter shown in [square\n   brackets]\
    \ is optional.  For example, [GMT] indicates that the\n   triglyph GMT may present\
    \ or omitted.  A parameter that may be\n   repeated is followed by an ellipsis.\
    \  Mutually exclusive parameters\n   are separated by a vertical bar (|) character.\
    \  For example,\n   ggg|<message-id> indicates that  a group name or a <message-id>\
    \ may\n   be specified, but not both.  Some parameters, notably <message-id>,\n\
    \   is case specific.  See RFC 1036 for these details.\n   Also, certain commands\
    \ make use of a pattern for selection of\n   multiple news groups.  The pattern\
    \ in all cases is based on the\n   wildmat [4] format introduced by Rich Salz\
    \ in 1986.  Arguments\n   expected to be in wildmat format will be represented\
    \ by the string\n   wildmat.  This format is discussed in detail in section 3.3\
    \ of this\n   document.\n"
- title: 2.1.1 Extensions to the LIST command
  contents:
  - "2.1.1 Extensions to the LIST command\n   The original LIST command took no arguments\
    \ in RFC 977 and returned\n   the contents of the active file in a specific format.\
    \  Since the\n   original newsreaders made use of other information available\
    \ in the\n   news transport software in addition to the active file, extensions\
    \ to\n   the LIST command were created to make that information available to\n\
    \   NNTP newsreaders.  There may be other extensions to the LIST command\n   that\
    \ simply return the contents of a file.  This approach is\n   suggested over the\
    \ addition of over verbs.  For example, LIST MOTD\n   could be used instead of\
    \ adding XMOTD.\n"
- title: 2.1.2 LIST ACTIVE
  contents:
  - "2.1.2 LIST ACTIVE\n   LIST ACTIVE [wildmat]\n   LIST ACTIVE is exactly the same\
    \ as the LIST command specified in RFC\n   977.  The responses and the format\
    \ should exactly match the LIST\n   command without arguments.  If the optional\
    \ matching parameter is\n   specified, the list is limited to only the groups\
    \ that match the\n   pattern.  Specifying a single group is usually very efficient\
    \ for the\n   server, and multiple groups may be specified by using wildmat\n\
    \   patterns (described later in this document), not regular expressions.\n  \
    \ If nothing is matched an empty list is returned, not an error.  This\n   command\
    \ first appeared in the UNIX reference version.\n"
- title: 2.1.3 LIST ACTIVE.TIMES
  contents:
  - "2.1.3 LIST ACTIVE.TIMES\n   LIST ACTIVE.TIMES\n   The active.times file is maintained\
    \ by some news transports systems\n   to contain information about the when and\
    \ who created a particular\n   news group.  The format of this file generally\
    \ include three fields.\n   The first field is the name of the news group.  The\
    \ second is the\n   time when this group was created on this news server measured\
    \ in\n   seconds since January 1, 1970.  The third is the email address of the\n\
    \   entity that created the news group.  When executed, the information\n   is\
    \ displayed following the 215 response.  When display is completed,\n   the server\
    \ will send a period on a line by itself.  If the\n   information is not available,\
    \ the server will return the 503 error\n   response.  This command first appeared\
    \ in the UNIX reference version.\n"
- title: 2.1.3.1 Responses
  contents:
  - "2.1.3.1 Responses\n      215 information follows\n      503 program error, function\
    \ not performed\n"
- title: 2.1.4 LIST DISTRIBUTIONS
  contents:
  - "2.1.4 LIST DISTRIBUTIONS\n   LIST DISTRIBUTIONS\n   The distributions file is\
    \ maintained by some news transport systems\n   to contain information about valid\
    \ values for the Distribution: line\n   in a news article header and about what\
    \ the values mean.  Each line\n   contains two fields, the value and a short explanation\
    \ on the meaning\n   of the value.  When executed, the information is displayed\
    \ following\n   the 215 response.  When display is completed, the server will\
    \ send a\n   period on a line by itself.  If the information is not available,\
    \ the\n   server will return the 503 error response.  This command first\n   appeared\
    \ in the UNIX reference version.\n"
- title: 2.1.4.1 Responses
  contents:
  - "2.1.4.1 Responses\n      215 information follows\n      503 program error, function\
    \ not performed\n"
- title: 2.1.5 LIST DISTRIB.PATS
  contents:
  - "2.1.5 LIST DISTRIB.PATS\n   LIST DISTRIB.PATS\n   The distrib.pats file is maintained\
    \ by some news transport systems to\n   contain default values for the Distribution:\
    \  line in a news article\n   header when posting to particular news groups. \
    \ This information\n   could be used to provide a default value for the Distribution:\
    \ line\n   in the header when posting an article.  The information returned\n\
    \   involves three fields separated by colons.  The first column is a\n   weight.\
    \  The second is a group name or a pattern that can be used to\n   match a group\
    \ name in the wildmat format.  The third is the value of\n   the Distribution:\
    \  line that should be used when the group name\n   matches and the weight value\
    \ is the highest.  All this processing is\n   done by the news posting client\
    \ and not by the server itself.  The\n   server just provides this information\
    \ to the client for it to use or\n   ignore as it chooses.  When executed, the\
    \ information is displayed\n   following the 215 response.  When display is completed,\
    \ the server\n   will send a period on a line by itself.  If the information is\
    \ not\n   available, the server will return the 503 error response.  This\n  \
    \ command first appeared in INN.\n"
- title: 2.1.5.1 Responses
  contents:
  - "2.1.5.1 Responses\n      215 information follows\n      503 program error, function\
    \ not performed\n"
- title: 2.1.6 LIST NEWSGROUPS
  contents:
  - "2.1.6 LIST NEWSGROUPS\n   LIST NEWSGROUPS [wildmat]\n   The newsgroups file is\
    \ maintained by some news transport systems to\n   contain the name of each news\
    \ group which is active on the server and\n   a short description about the purpose\
    \ of each news group.  Each line\n   in the file contains two fields, the news\
    \ group name and a short\n   explanation of the purpose of that news group.  When\
    \ executed, the\n   information is displayed following the 215 response.  When\
    \ display is\n   completed, the server will send a period on a line by itself.\
    \  If the\n   information is not available, the server will return the 503\n \
    \  response.  If the optional matching parameter is specified, the list\n   is\
    \ limited to only the groups that match the pattern (no matching is\n   done on\
    \ the group descriptions).  Specifying a single group is\n   usually very efficient\
    \ for the server, and multiple groups may be\n   specified by using wildmat patterns\
    \ (similar to file globbing), not\n   regular expressions.  If nothing is matched\
    \ an empty list is\n   returned, not an error.\n   When the optional parameter\
    \ is specified, this command is equivalent\n   to the XGTITLE command, though\
    \ the response code are different.\n      215 information follows\n      503 program\
    \ error, function not performed\n"
- title: 2.1.7 LIST OVERVIEW.FMT
  contents:
  - "2.1.7 LIST OVERVIEW.FMT\n   LIST OVERVIEW.FMT\n   The overview.fmt file is maintained\
    \ by some news transport systems to\n   contain the order in which header information\
    \ is stored in the\n   overview databases for each news group.  When executed,\
    \ news article\n   header fields are displayed one line at a time in the order\
    \ in which\n   they are stored in the overview database [5] following the 215\n\
    \   response.  When display is completed, the server will send a period\n   on\
    \ a line by itself.  If the information is not available, the server\n   will\
    \ return the 503 response.\n   Please note that if the header has the word \"\
    full\" (without quotes)\n   after the colon, the header's name is prepended to\
    \ its field in the\n   output returned by the server.\n   Many newsreaders work\
    \ better if Xref: is one of the optional fields.\n   It is STRONGLY recommended\
    \ that this command be implemented in any\n   server that implements the XOVER\
    \ command.  See section 2.8 for more\n   details about the XOVER command.\n"
- title: 2.1.7.1 Responses
  contents:
  - "2.1.7.1 Responses\n      215 information follows\n      503 program error, function\
    \ not performed\n"
- title: 2.1.8 LIST SUBSCRIPTIONS
  contents:
  - "2.1.8 LIST SUBSCRIPTIONS\n   LIST SUBSCRIPTIONS\n   This command is used to get\
    \ a default subscription list for new users\n   of this server.  The order of\
    \ groups is significant.\n   When this list is available, it is preceded by the\
    \ 215 response and\n   followed by a period on a line by itself.  When this list\
    \ is not\n   available, the server returns a 503 response code.\n"
- title: 2.1.8.1 Responses
  contents:
  - "2.1.8.1 Responses\n      215 information follows\n      503 program error, function\
    \ not performed\n"
- title: 2.2 LISTGROUP
  contents:
  - "2.2 LISTGROUP\n   LISTGROUP [ggg]\n   The LISTGROUP command is used to get a\
    \ listing of all the article\n   numbers in a particular news group.\n   The optional\
    \ parameter ggg is the name of the news group to be\n   selected (e.g. \"news.software.b\"\
    ).  A list of valid news groups may\n   be obtained from the LIST command.  If\
    \ no group is specified, the\n   current group is used as the default argument.\n\
    \   The successful selection response will be a list of the article\n   numbers\
    \ in the group followed by a period on a line by itself.\n   When a valid group\
    \ is selected by means of this command, the\n   internally maintained \"current\
    \ article pointer\" is set to the first\n   article in the group.  If an invalid\
    \ group is specified, the\n   previously selected group and article remain selected.\
    \  If an empty\n   news group is selected, the \"current article pointer\" is\
    \ in an\n   indeterminate state and should not be used.\n   Note that the name\
    \ of the news group is not case-dependent.  It must\n   otherwise match a news\
    \ group obtained from the LIST command or an\n   error will result.\n"
- title: 2.2.1  Responses
  contents:
  - "2.2.1  Responses\n      211 list of article numbers follow\n      412 Not currently\
    \ in newsgroup\n      502 no permission\n"
- title: 2.3 MODE READER
  contents:
  - "2.3 MODE READER\n   MODE READER is used by the client to indicate to the server\
    \ that it\n   is a news reading client.  Some implementations make use of this\n\
    \   information to reconfigure themselves for better performance in\n   responding\
    \ to news reader commands.  This command can be contrasted\n   with the SLAVE\
    \ command in RFC 977, which was not widely implemented.\n   MODE READER was first\
    \ available in INN.\n"
- title: 2.3.1 Responses
  contents:
  - "2.3.1 Responses\n      200 Hello, you can post\n      201 Hello, you can't post\n"
- title: 2.4 XGTITLE
  contents:
  - "2.4 XGTITLE\n   XGTITLE [wildmat]\n   The XGTITLE command is used to retrieve\
    \ news group descriptions for\n   specific news groups.\n   This extension first\
    \ appeared in ANU-NEWS, an NNTP implementation for\n   DEC's VMS.  The optional\
    \ parameter is a pattern in wildmat format.\n   When executed, a 282 response\
    \ is given followed by lines that have\n   two fields, the news group name (which\
    \ matches the pattern in the\n   argument) and a short explanation of the purpose\
    \ of the news group.\n   When no argument is specified, the default argument is\
    \ the current\n   group name.  When display is completed, the server sends a period\
    \ on\n   a line by itself.\n   Please note that this command and the LIST NEWSGROUP\
    \ command provide\n   the same functionality with different response codes.\n\
    \   Since this command provides the same functionality as LIST NEWSGROUP\n   it\
    \ is suggested that this extension be deprecated and no longer be\n   used in\
    \ newsreading clients.\n   Note that there is a conflict in one of the response\
    \ codes from\n   XGTITLE and some of the authentication extensions.\n"
- title: 2.5.1 Responses
  contents:
  - "2.5.1 Responses\n      481 Groups and descriptions unavailable\n      282 list\
    \ of groups and descriptions follows\n"
- title: 2.6 XHDR
  contents:
  - "2.6 XHDR\n   XHDR header [range|<message-id>]\n   The XHDR command is used to\
    \ retrieve specific headers from specific\n   articles.\n   The required parameter\
    \ is the name of a header line (e.g.  \"subject\")\n   in a news group article.\
    \  See RFC 1036 for a list of valid header\n   lines.  The optional range argument\
    \ may be any of the following:\n               an article number\n           \
    \    an article number followed by a dash to indicate\n                  all following\n\
    \               an article number followed by a dash followed by\n           \
    \       another article number\n   The optional message-id argument indicates\
    \ a specific article.  The\n   range and message-id arguments are mutually exclusive.\
    \  If no\n   argument is specified, then information from the current article\
    \ is\n   displayed.  Successful responses start with a 221 response followed\n\
    \   by a the matched headers from all matched messages.  Each line\n   containing\
    \ matched headers returned by the server has an article\n   number (or message\
    \ ID, if a message ID was specified in the command),\n   then one or more spaces,\
    \ then the value of the requested header in\n   that article.  Once the output\
    \ is complete, a period is sent on a\n   line by itself.  If the optional argument\
    \ is a message-id and no such\n   article exists, the 430 error response is returned.\
    \  If a range is\n   specified, a news group must have been selected earlier,\
    \ else a 412\n   error response is returned.  If no articles are in the range\n\
    \   specified, a 420 error response is returned by the server.  A 502\n   response\
    \ will be returned if the client only has permission to\n   transfer articles.\n\
    \   Some implementations will return \"(none)\" followed by a period on a\n  \
    \ line by itself if no headers match in any of the articles searched.\n   Others\
    \ return the 221 response code followed by a period on a line by\n   itself.\n\
    \   The XHDR command has been available in the UNIX reference\n   implementation\
    \ from its first release.  However, until now, it has\n   been documented only\
    \ in the source for the server.\n"
- title: 2.6.1 Responses
  contents:
  - "2.6.1 Responses\n      221 Header follows\n      412 No news group current selected\n\
    \      420 No current article selected\n      430 no such article\n      502 no\
    \ permission\n"
- title: 2.7 XINDEX
  contents:
  - "2.7 XINDEX\n   XINDEX ggg\n   The XINDEX command is used to retrieve an index\
    \ file in the format of\n   originally created for use by the TIN [6] news reader.\n\
    \   The required parameter ggg is the name of the news group to be\n   selected\
    \ (e.g. \"news.software.b\").  A list of valid news groups may\n   be obtained\
    \ from the LIST command.\n   The successful selection response will return index\
    \ file in the\n   format used by the TIN news reader followed by a period on a\
    \ line by\n   itself.\n   When a valid group is selected by means of this command,\
    \ the\n   internally maintained \"current article pointer\" is set to the first\n\
    \   article in the group.  If an invalid group is specified, the\n   previously\
    \ selected group and article remain selected.  If an empty\n   news group is selected,\
    \ the \"current article pointer\" is in an\n   indeterminate state and should\
    \ not be used.\n   Note that the name of the news group is not case-dependent.\
    \  It must\n   otherwise match a news group obtained from the LIST command or\
    \ an\n   error will result.\n   The format of the tin-style index file is discussed\
    \ in the\n   documentation for the TIN newsreader.  Since more recent versions\
    \ of\n   TIN support the news overview (NOV) format, it is recommended that\n\
    \   this extension become historic and no longer be used in current\n   servers\
    \ or future implementations.\n"
- title: 2.7.1 Responses
  contents:
  - "2.7.1 Responses\n      218 tin-style index follows\n      418 no tin-style index\
    \ is available for this news group\n"
- title: 2.8 XOVER
  contents:
  - "2.8 XOVER\n   XOVER [range]\n   The XOVER command returns information from the\
    \ overview database for\n   the article(s) specified.  This command was originally\
    \ suggested as\n   part of the OVERVIEW work described in \"The Design of a Common\n\
    \   Newsgroup Overview Database for Newsreaders\" by Geoff Collyer.  This\n  \
    \ document is distributed in the Cnews distribution.  The optional\n   range argument\
    \ may be any of the following:\n               an article number\n           \
    \    an article number followed by a dash to indicate\n                  all following\n\
    \               an article number followed by a dash followed by\n           \
    \       another article number\n   If no argument is specified, then information\
    \ from the current\n   article is displayed.  Successful responses start with\
    \ a 224 response\n   followed by the overview information for all matched messages.\
    \  Once\n   the output is complete, a period is sent on a line by itself.  If\
    \ no\n   argument is specified, the information for the current article is\n \
    \  returned.  A news group must have been selected earlier, else a 412\n   error\
    \ response is returned.  If no articles are in the range\n   specified, a 420\
    \ error response is returned by the server.  A 502\n   response will be returned\
    \ if the client only has permission to\n   transfer articles.\n   Each line of\
    \ output will be formatted with the article number,\n   followed by each of the\
    \ headers in the overview database or the\n   article itself (when the data is\
    \ not available in the overview\n   database) for that article separated by a\
    \ tab character.  The\n   sequence of fields must be in this order: subject, author,\
    \ date,\n   message-id, references, byte count, and line count.  Other optional\n\
    \   fields may follow line count.  Other optional fields may follow line\n   count.\
    \  These fields are specified by examining the response to the\n   LIST OVERVIEW.FMT\
    \ command.  Where no data exists, a null field must\n   be provided (i.e. the\
    \ output will have two tab characters adjacent to\n   each other).  Servers should\
    \ not output fields for articles that have\n   been removed since the XOVER database\
    \ was created.\n   The LIST OVERVIEW.FMT command should be implemented if XOVER\
    \ is\n   implemented.  A client can use LIST OVERVIEW.FMT to determine what\n\
    \   optional fields  and in which order all fields will be supplied by\n   the\
    \ XOVER command.  See Section 2.1.7 for more details about the LIST\n   OVERVIEW.FMT\
    \ command.\n   Note that any tab and end-of-line characters in any header data\
    \ that\n   is returned will be converted to a space character.\n"
- title: 2.8.1 Responses
  contents:
  - "2.8.1 Responses\n      224 Overview information follows\n      412 No news group\
    \ current selected\n      420 No article(s) selected\n      502 no permission\n"
- title: 2.9 XPAT
  contents:
  - "2.9 XPAT\n   XPAT header range|<message-id> pat [pat...]\n   The XPAT command\
    \ is used to retrieve specific headers from specific\n   articles, based on pattern\
    \ matching on the contents of the header.\n   This command was first available\
    \ in INN.\n   The required header parameter is the name of a header line (e.g.\n\
    \   \"subject\") in a news group article.  See RFC 1036 for a list of valid\n\
    \   header lines.  The required range argument may be any of the\n   following:\n\
    \               an article number\n               an article number followed by\
    \ a dash to indicate\n                  all following\n               an article\
    \ number followed by a dash followed by\n                  another article number\n\
    \   The required message-id argument indicates a specific article.  The\n   range\
    \ and message-id arguments are mutually exclusive.  At least one\n   pattern in\
    \ wildmat must be specified as well.  If there are\n   additional arguments the\
    \ are joined together separated by a single\n   space to form one complete pattern.\
    \  Successful responses start with\n   a 221 response followed by a the headers\
    \ from all messages in which\n   the pattern matched the contents of the specified\
    \ header line.  This\n   includes an empty list.  Once the output is complete,\
    \ a period is\n   sent on a line by itself.  If the optional argument is a message-id\n\
    \   and no such article exists, the 430 error response is returned.  A\n   502\
    \ response will be returned if the client only has permission to\n   transfer\
    \ articles.\n"
- title: 2.9.1 Responses
  contents:
  - "2.9.1 Responses\n      221 Header follows\n      430 no such article\n      502\
    \ no permission\n"
- title: 2.10 The XPATH command
  contents:
  - "2.10 The XPATH command\n   XPATH <message-id>\n   The XPATH command is used to\
    \ determine the filenames in which an\n   article is filed.  It first appeared\
    \ in INN.\n   The required parameter message-id is the message id of an article\
    \ as\n   shown in that article's message-id header.  According to RFC 1036\n \
    \  [3], all message ids for all articles within the netnews environment\n   are\
    \ unique, but articles may be crossposted to multiple groups.  The\n   response\
    \ to an XPATH command will include a listing of all filenames\n   in which an\
    \ article is stored separated by spaces or a response\n   indicating that no article\
    \ with the specified message-id exists.  The\n   returned data is only useful\
    \ if the news client knows the\n   implementation details of the server.  Because\
    \ of this, it is\n   recommended that client avoid using this command.\n"
- title: 2.10.1  Responses
  contents:
  - "2.10.1  Responses\n      223 path1[ path2 ...]\n      430 no such article on\
    \ server\n"
- title: 2.11 The XROVER command
  contents:
  - "2.11 The XROVER command\n   XROVER [range]\n   The XROVER command returns reference\
    \ information from the overview\n   database for the article(s) specified.  This\
    \ command first appeared\n   in the Unix reference implementation.  The optional\
    \ range argument\n   may be any of the following:\n               an article number\n\
    \               an article number followed by a dash to indicate\n           \
    \         all following\n               an article number followed by a dash followed\
    \ by\n                   another article number\n   Successful responses start\
    \ with a 224 response followed by the\n   contents of reference information for\
    \ all matched messages.  Once the\n   output is complete, a period is sent on\
    \ a line by itself.  If no\n   argument is specified, the information for the\
    \ current article is\n   returned.  A news group must have been selected earlier,\
    \ else a 412\n   error response is returned.  If no articles are in the range\n\
    \   specified, a 420 error response is returned by the server.  A 502\n   response\
    \ will be returned if the client only has permission to\n   transfer articles.\n\
    \   The output will be formatted with the article number, followed by the\n  \
    \ contents of the References: line for that article, but does not\n   contain\
    \ the field name itself.\n   This command provides the same basic functionality\
    \ as using the XHDR\n   command and \"references\" as the header argument.\n"
- title: 2.11.1 Responses
  contents:
  - "2.11.1 Responses\n      224 Overview information follows\n      412 No news group\
    \ current selected\n      420 No article(s) selected\n      502 no permission\n"
- title: 2.12 XTHREAD
  contents:
  - "2.12 XTHREAD\n   XTHREAD [DBINIT|THREAD]\n   The XTHREAD command is used to retrieve\
    \ threading information\n   in format of originally created for use by the TRN\
    \ [6] news\n   reader.\n   The command XTHREAD DBINIT may be issued prior to entering\n\
    \   any groups to see if a thread database exists.  If it does,\n   the database's\
    \ byte order and version number are returned\n   as binary data.\n   If no parameter\
    \ is given, XTHREAD THREAD is assumed.\n   To use XTHREAD THREAD, a news group\
    \ must have been selected\n   earlier, else a 412 error response is returned.\n\
    \   A 502 response will be returned if the client only has\n   permission to transfer\
    \ articles.  A 503 response is returned\n   if the threading files are not available.\n\
    \   The format of the trn-style thread format is discussed in\n   the documentation\
    \ for the TRN newsreader.  Since more recent\n   versions of TRN support the news\
    \ overview (NOV) format, it\n   is recommended that this extension become historic\
    \ and no\n   longer be used in current servers or future implementations.\n"
- title: 2.12.1 Responses
  contents:
  - "2.12.1 Responses\n      288 Binary data to follow\n      412 No newsgroup current\
    \ selected\n      502 No permission\n      503 program error, function not performed\n"
- title: 3. Other Extensions
  contents:
  - '3. Other Extensions

    '
- title: 3.1 AUTHINFO
  contents:
  - "3.1 AUTHINFO\n   AUTHINFO is used to inform a server about the identity of a\
    \ user of\n   the server.  In all cases, clients must provide this information\
    \ when\n   requested by the server.  Servers are not required to accept\n   authentication\
    \ information that is volunteered by the client.\n   Clients must accommodate\
    \ servers that reject any authentication\n   information volunteered by the client.\n\
    \   There are three forms of AUTHINFO in use.  The original version, an\n   NNTP\
    \ v2 revision called AUTHINFO SIMPLE and a more recent version\n   which is called\
    \ AUTHINFO GENERIC.\n"
- title: 3.1.1 Original AUTHINFO
  contents:
  - "3.1.1 Original AUTHINFO\n   AUTHINFO USER username\n   AUTHINFO PASS password\n\
    \   The original AUTHINFO is used to identify a specific entity to the\n   server\
    \ using a simple username/password combination.  It first\n   appeared in the\
    \ UNIX reference implementation.\n   When authorization is required, the server\
    \ will send a 480 response\n   requesting authorization from the client.  The\
    \ client must enter\n   AUTHINFO USER followed by the username.  Once sent, the\
    \ server will\n   cache the username and may send a 381 response requesting the\n\
    \   password associated with that username.  Should the server request a\n   password\
    \ using the 381 response, the client must enter AUTHINFO PASS\n   followed by\
    \ a password and the server will then check the\n   authentication database to\
    \ see if the username/password combination\n   is valid.  If the combination is\
    \ valid or if no password is required,\n   the server will return a 281 response.\
    \  The client should then retry\n   the original command to which the server responded\
    \ with the 480\n   response.  The command should then be processed by the server\n\
    \   normally.  If the combination is not valid, the server will return a\n   502\
    \ response.\n   Clients must provide authentication when requested by the server.\
    \  It\n   is possible that some implementations will accept authentication\n \
    \  information at the beginning of a session, but this was not the\n   original\
    \ intent of the specification.  If a client attempts to\n   reauthenticate, the\
    \ server may return 482 response indicating that\n   the new authentication data\
    \ is rejected by the server.  The 482 code\n   will also be returned when the\
    \ AUTHINFO commands are not entered in\n   the correct sequence (like two AUTHINFO\
    \ USERs in a row, or AUTHINFO\n   PASS preceding AUTHINFO USER).\n   All information\
    \ is passed in cleartext.\n   When authentication succeeds, the server will create\
    \ an email address\n   for the client from the user name supplied in the AUTHINFO\
    \ USER\n   command and the hostname generated by a reverse lookup on the IP\n\
    \   address of the client.  If the reverse lookup fails, the IP address,\n   represented\
    \ in dotted-quad format, will be used.  Once authenticated,\n   the server shall\
    \ generate a Sender:  line using the email address\n   provided by authentication\
    \ if it does not match the client-supplied\n   From: line.  Additionally, the\
    \ server should log the event, including\n   the email address.  This will provide\
    \ a means by which subsequent\n   statistics generation can associate newsgroup\
    \ references with unique\n   entities - not necessarily by name.\n"
- title: 3.1.1.1 Responses
  contents:
  - "3.1.1.1 Responses\n      281 Authentication accepted\n      381 More authentication\
    \ information required\n      480 Authentication required\n      482 Authentication\
    \ rejected\n      502 No permission\n"
- title: 3.1.2 AUTHINFO SIMPLE
  contents:
  - "3.1.2 AUTHINFO SIMPLE\n   AUTHINFO SIMPLE\n   user password\n   This version\
    \ of AUTHINFO was part of a proposed NNTP V2\n   specification, which was started\
    \ in 1991 but never completed, and is\n   implemented in some servers and clients.\
    \  It is a refinement of the\n   original AUTHINFO and provides the same basic\
    \ functionality, but the\n   sequence of commands is much simpler.\n   When authorization\
    \ is required, the server sends a 450 response\n   requesting authorization from\
    \ the client.  The client must enter\n   AUTHINFO SIMPLE.  If the server will\
    \ accept this form of\n   authentication, the server responds with a 350 response.\
    \  The client\n   must then send the username followed by one or more space characters\n\
    \   followed by the password.  If accepted, the server returns a 250\n   response\
    \ and the client should then retry the original command to\n   which the server\
    \ responded with the 450 response.  The command should\n   then be processed by\
    \ the server normally.  If the combination is not\n   valid, the server will return\
    \ a 452 response.\n   Note that the response codes used here were part of the\
    \ proposed NNTP\n   V2 specification and are violations of RFC 977.  It is recommended\n\
    \   that this command not be implemented, but use either or both of the\n   other\
    \ forms of AUTHINFO if such functionality if required.\n"
- title: 3.1.2.1 Responses
  contents:
  - "3.1.2.1 Responses\n      250 Authorization accepted\n      350 Continue with\
    \ authorization sequence\n      450 Authorization required for this command\n\
    \      452 Authorization rejected\n"
- title: 3.1.3 AUTHINFO GENERIC
  contents:
  - "3.1.3 AUTHINFO GENERIC\n   AUTHINFO GENERIC authenticator arguments...\n   AUTHINFO\
    \ GENERIC is used to identify a specific entity to the server\n   using arbitrary\
    \ authentication  or identification protocols.  The\n   desired protocol is indicated\
    \ by the authenticator parameter, and any\n   number of parameters can be passed\
    \ to the authenticator.\n   When authorization is required, the server will send\
    \ a 480 response\n   requesting authorization from the client.  The client should\
    \ enter\n   AUTHINFO GENERIC followed by the authenticator name, and the\n   arguments\
    \ if any.  The authenticator and arguments must not contain\n   the sequence \"\
    ..\".\n   The server will attempt to engage the server end authenticator,\n  \
    \ similarly, the client should engage the client end authenticator.\n   The server\
    \ end authenticator will then initiate authentication using\n   the NNTP sockets\
    \ (if appropriate for that authentication protocol),\n   using the protocol specified\
    \ by the authenticator name.  These\n   authentication protocols are not included\
    \ in this document, but are\n   similar in structure to those referenced in RFC\
    \ 1731 [8] for the\n   IMAP-4 protocol.\n   If the server returns 501, this means\
    \ that the authenticator\n   invocation was syntactically incorrect, or that AUTHINFO\
    \ GENERIC is\n   not supported.  The client should retry using the AUTHINFO USER\n\
    \   command.\n   If the requested authenticator capability is not found, the server\n\
    \   returns the 503 response code.\n   If there is some other unspecified server\
    \ program error, the server\n   returns the 500 response code.\n   The authenticators\
    \ converse using their protocol until complete.  If\n   the authentication succeeds,\
    \ the server authenticator will terminate\n   with a 281, and the client can continue\
    \ by reissuing the command that\n   prompted the 380.  If the authentication fails,\
    \ the server will\n   respond with a 502.\n   The client must provide authentication\
    \ when requested by the server.\n   The server may request authentication at any\
    \ time.  Servers may\n   request authentication more than once during a single\
    \ session.\n   When the server authenticator completes, it provides to the server\n\
    \   (by a mechanism herein undefined) the email address of the user, and\n   potentially\
    \ what the user is allowed to access.  Once authenticated,\n   the server shall\
    \ generate a Sender:  line using the email address\n   provided by the authenticator\
    \ if it does not match the user-supplied\n   From: line.  Additionally, the server\
    \ should log the event, including\n   the user's authenticated email address (if\
    \ available).  This will\n   provide a means by which subsequent statistics generation\
    \ can\n   associate newsgroup references with unique entities - not necessarily\n\
    \   by name.\n   Some implementations make it possible to obtain a list of\n \
    \  authentication procedures available by sending the server AUTHINFO\n   GENERIC\
    \ with no arguments.  The server then returns a list of\n   supported mechanisms\
    \ followed by a period on a line by itself.\n"
- title: 3.1.3.1 Responses
  contents:
  - "3.1.3.1 Responses\n      281 Authentication succeeded\n      480 Authentication\
    \ required\n      500 Command not understood\n      501 Command not supported\n\
    \      502 No permission\n      503 Program error, function not performed\n  \
    \    nnn  authenticator-specific protocol.\n"
- title: 3.2 DATE
  contents:
  - "3.2 DATE\n   DATE\n   The first NNTP working group discussed and proposed a syntax\
    \ for this\n   command to help clients find out the current time from the server's\n\
    \   perspective.  At the time this command was discussed (1991-1992), the\n  \
    \ Network Time Protocol [9] (NTP) was not yet in wide use and there was\n   also\
    \ some concern that small systems may not be able to make\n   effective use of\
    \ NTP.\n   This command returns a one-line response code of 111 followed by the\n\
    \   GMT date and time on the server in the form YYYYMMDDhhmmss.\n"
- title: 3.2.1 Responses
  contents:
  - "3.2.1 Responses\n      111 YYYYMMDDhhmmss\n"
- title: 3.3 The WILDMAT format
  contents:
  - "3.3 The WILDMAT format\n   The WILDMAT format was first developed by Rich Salz\
    \ based on the\n   format used in the UNIX \"find\" command to articulate file\
    \ names.  It\n   was developed to provide a uniform mechanism for matching patterns\
    \ in\n   the same manner that the UNIX shell matches filenames.  Patterns are\n\
    \   implicitly anchored at the beginning and end of each string when\n   testing\
    \ for a match.  There are five pattern matching operations\n   other than a strict\
    \ one-to-one match between the pattern and the\n   source to be checked for a\
    \ match.  The first is an asterisk (*) to\n   match any sequence of zero or more\
    \ characters.  The second is a\n   question mark (?) to match any single character.\
    \  The third specifies\n   a specific set of characters.  The set is specified\
    \ as a list of\n   characters, or as a range of characters where the beginning\
    \ and end\n   of the range are separated by a minus (or dash) character, or as\
    \ any\n   combination of lists and ranges.  The dash can also be included in\n\
    \   the set as a character it if is the beginning or end of the set.\n   This\
    \ set is enclosed in square brackets.  The close square bracket\n   (]) may be\
    \ used in a set if it is the first character in the set.\n   The fourth operation\
    \ is the same as the logical not of the third\n   operation and is specified the\
    \ same way as the third with the\n   addition of a caret character (^) at the\
    \ beginning of the test string\n   just inside the open square bracket.  The final\
    \ operation uses the\n   backslash character to invalidate the special meaning\
    \ of the a open\n   square bracket ([), the asterisk, backslash or the question\
    \ mark.\n   Two backslashes in sequence will result in the evaluation of the\n\
    \   backslash as a character with no special meaning.\n"
- title: 3.3.1 Examples
  contents:
  - "3.3.1 Examples\n   a. [^]-] -- matches any single character other than a close\
    \ square\n               bracket or a minus sign/dash.\n   b. *bdc  -- matches\
    \ any string that ends with the string \"bdc\"\n               including the string\
    \ \"bdc\" (without quotes).\n   c. [0-9a-zA-Z] -- matches any single printable\
    \ alphanumeric ASCII\n               character.\n   d. a??d  --  matches any four\
    \ character string which begins\n                with a and ends with d.\n"
- title: 3.4 Additional Headers
  contents:
  - "3.4 Additional Headers\n   Many NNTP implementations add headers to Usenet articles\
    \ when then\n   are POSTed via NNTP.  These headers are discussed in this section.\n\
    \   None of these headers conflict with those specified in RFC 1036 and\n   should\
    \ be passed unchanged by Usenet transports conforming to RFC\n   1036.\n"
- title: 3.4.1 NNTP-Posting-Host
  contents:
  - "3.4.1 NNTP-Posting-Host\n   This line is added to the header of a posted article\
    \ by the server.\n   The contents of the header is either the IP address or the\
    \ fully\n   qualified domain name of the client host posting the article.  The\n\
    \   fully qualified domain name should be determined by doing a reverse\n   lookup\
    \ in the DNS on the IP address of the client.  If the client\n   article contains\
    \ this line, it is removed by the server before\n   acceptance of the article\
    \ by the Usenet transport system.\n   This header provides some idea of the actual\
    \ host posting the article\n   as opposed to information in the Sender or From\
    \ lines that may be\n   present in the article.  This is not a fool-proof methodology\
    \ since\n   reverse lookups in the DNS are vulnerable to certain types of\n  \
    \ spoofing, but such discussions are outside the scope of this\n   document.\n"
- title: 3.4.2 X-Newsreader and others
  contents:
  - "3.4.2 X-Newsreader and others\n   There are other lines that are added by clients\
    \ as well.  Most of\n   these indicate the type of newsreader software that is\
    \ posting the\n   article.\n"
- title: 4.0 Common Implementation Issues
  contents:
  - "4.0 Common Implementation Issues\n   Many NNTP implementations do not follow\
    \ the specifications in RFC\n   977.  In this section, some common implementation\
    \ issues are\n   summarized.\n"
- title: 4.1 The Response to the LIST command
  contents:
  - "4.1 The Response to the LIST command\n   RFC 977 says that the fourth field of\
    \ the \"list of valid newsgroups\n   associated information\" returned must be\
    \ \"either 'y' or 'n'\n   indicating whether posting to this newsgroup is allowed\
    \ ('y') or\n   prohibited ('n').  Most implementations simply output the exact\n\
    \   contents of the transport system's active newsgroup list.  For more\n   implementations,\
    \ the fourth field usually has more values that 'y' or\n   'n'.\n"
- title: 4.2 The Required Headers in an Article and the POST command
  contents:
  - "4.2 The Required Headers in an Article and the POST command\n   RFC 977 notes\
    \ in section 3.10.1 that articles presented \"should\n   include all required\
    \ header lines.\" In fact, modern implementations\n   only require From, Subject,\
    \ and Newsgroups header lines and will\n   supply the rest; further, many implementers\
    \ believe that it is best\n   for clients to generate as few headers as possible,\
    \ since clients\n   often do not format other headers correctly.\n   This implementation\
    \ behavior is consistent with both Bnews and Cnews\n   which would supply missing\
    \ headers for articles directly submitted to\n   them.\n"
- title: 4.3 Article Numbering
  contents:
  - "4.3 Article Numbering\n   RFC 977 does not directly address the rules concerning\
    \ articles\n   number.  However, the current practice is simple: article numbers\
    \ are\n   monotonically increasing, articles may disappear, and therefore the\n\
    \   high and low water marks returned in a GROUP command should be\n   treated\
    \ as maximum minima, and minimum maxima, respectively.\n"
- title: 4.4 Availability of commands defined in RFC 977
  contents:
  - "4.4 Availability of commands defined in RFC 977\n   Some implementations permit\
    \ administrators to disable commands\n   defined RFC 977.  Some implementations\
    \ have some set of commands\n   disabled by default.  This means that client implementations\
    \ cannot\n   depend on the availability of the disabled set of commands.  This\n\
    \   increases the complexity of the client and does not encourage\n   implementors\
    \ to optimize the implementation of commands that don't\n   perform well.\n  \
    \ NEWNEWS is one of the commands frequently disabled.\n"
- title: 4.5 The Distribution header and NEWNEWS
  contents:
  - "4.5 The Distribution header and NEWNEWS\n   In section 12.4 of RFC 977, the optional\
    \ distributions argument is\n   described.  This argument, according to RFC 977,\
    \ would limit the\n   responses to articles that were in newsgroups with prefixes\
    \ that\n   matched the optional distributions argument.\n   Some implementations\
    \ implement this by matching the Distributions\n   header in articles to the distribution\
    \ argument.  Others do the match\n   against segments of the newsgroup's name.\n\
    \   This variation is probably best explained by the evolution of the\n   USENET\
    \ article format.  At the time RFC 977 was specified, the\n   newsgroup name defined\
    \ how the group was distributed throughout\n   USENET.  RFC 1036 changed this\
    \ convention.  So, those that are\n   strictly implementing RFC 977 would match\
    \ the newsgroup name prefix\n   against the distribution argument and only display\
    \ matches.  Those\n   that implement against the intent of the command (as modified\
    \ by the\n   redefinition of the article format)would match the Distributions\n\
    \   header against the distribution argument and only display those\n   matches.\n"
- title: 5.0 Further Work
  contents:
  - "5.0 Further Work\n   With the continued use of NNTP on the Internet, there remains\
    \ an\n   interest in creating an optimized transport protocol for server-to-\n\
    \   server transfers and an optimized client protocol for client-to-\n   server\
    \ interactions.  There is also considerable interest is building\n   better mechanisms\
    \ to provide audit information on which news groups\n   are being read by which\
    \ users.\n   An IETF working group has been formed and it is the hope of this\n\
    \   author that these issues will be addressed in that forum.\n"
- title: 6.0 Security Considerations
  contents:
  - "6.0 Security Considerations\n   The use of the AUTHINFO is optional.  This command\
    \ as documented has\n   a number of security implications.  In the original and\
    \ simple forms,\n   all passwords are passed in plaintext and could be discovered\
    \ by\n   various forms of network or system surveillance.  The AUTHINFO\n   GENERIC\
    \ command has the potential for the same problems if a\n   mechanism is used that\
    \ also passes cleartext passwords.  RFC 1731 [8]\n   discusses these issues in\
    \ greater detail.\n"
- title: 7.0 References
  contents:
  - "7.0 References\n   [1]  Kantor, B and P. Lapsley, \"Network News Transfer Protocol\"\
    , RFC\n        977, February 1986.\n   [2]  Limoncelli, Tom, \"Read This Before\
    \ You Write a Newsreader\",\n        http://mars.superlink.net/tal/news-software-authors.html,\
    \ June,\n        1996.\n   [3]  Horton, M. and R. Adams, \"Standard for interchange\
    \ of USENET\n        messages\",  RFC 1036, December 1987.\n   [4]  Salz, Rich,\
    \ Manual Page for wildmat(3) from the INN 1.4\n        distribution, UUNET Technologies,\
    \ Revision 1.10, April, 1992.\n   [5]  Robertson, Rob, \"FAQ: Overview database\
    \ / NOV General\n        Information\", ftp://ftp.uu.net/networking/news/nntp/inn/faq-\n\
    \        nov.Z, January, 1995.\n   [6]  Lea, Iain, \"FAQ about the TIN newsreader\"\
    ,\n        http://www.cs.unca.edu/~davidson/handouts/tinfaq.html\n   [7]  Kappesser,\
    \ Peter, \"[news.software.readers] trn newsreader FAQ\",\n        2 parts, ftp://rtfm.mit.edu/pub/usenet-by-hierarchy/news/\n\
    \        software/readers/%5Bnews.software.readers%5D_trn_newsreader\n       \
    \ _FAQ%2C_part_1%3A_Basics and ftp://rtfm.mit.edu/pub/usenet-by\n        -hierarchy/news/software/readers/%5Bnews.software.readers\n\
    \        %5D_trn_news-reader_FAQ%2C_part_2%3A_Advanced, February, 1995.\n   [8]\
    \  Meyers, J., \"IMAP4 Authentication Mechanisms\", RFC 1731,\n        December\
    \ 1994.\n   [9]  Mills, D., \"Network Time Protocol (Version 3), Specification,\n\
    \        Implementation and Analysis\", RFC 1305, March 1992.\n"
- title: 8.0 Notes
  contents:
  - "8.0 Notes\n   DEC is a registered trademark of Compaq Computer Corporation. \
    \ UNIX\n   is a registered trademark of The Open Group.  VMS is a registered\n\
    \   trademark of Compaq Computer Corporation.\n"
- title: 9.0 Acknowledgments
  contents:
  - "9.0 Acknowledgments\n   The author gratefully acknowledges the comments and additional\n\
    \   information provided by the following individuals:\n   Wayne Davison <davison@armory.com>\n\
    \   Chris Lewis <clewis@bnr.ca>\n   Tom Limoncelli <tal@lucent.com>\n   Eric Schnoebelen\
    \ <eric@egsner.cirr.com>\n   Rich Salz <rsalz@osf.org>\n   This work was precipitated\
    \ by the work of various newsreader authors\n   and newsserver authors which includes\
    \ those listed below:\n   Rick Adams    -- Original author of the NNTP extensions\
    \ to the RN\n                    newsreader and last maintainer of Bnews\n   Stan\
    \ Barber   -- Original author of the NNTP extensions to the\n                \
    \    newsreaders that are part of Bnews.\n   Geoff Collyer -- Original author\
    \ of the OVERVIEW database proposal and\n                    one of the original\
    \ authors of CNEWS\n   Dan Curry     -- Original author of the xvnews newsreader\n\
    \   Wayne Davison -- Author of the first threading extensions to the\n       \
    \             RN newsreader (commonly called TRN).\n   Geoff Huston  -- Original\
    \ author of ANU NEWS\n   Phil Lapsey   -- Original author of the UNIX reference\n\
    \                    implementation\n   Iain Lea      -- Original maintainer of\
    \ the TIN newsreader\n   Chris Lewis   -- First known implementor of the AUTHINFO\
    \ GENERIC\n                    extension\n   Rich Salz     -- Original author\
    \ of INN\n   Henry Spencer -- One of the original authors of CNEWS\n   Kim Storm\
    \     -- Original author of the NN newsreader\n"
- title: 10.0 Author's Address
  contents:
  - "10.0 Author's Address\n   Stan Barber\n   P.O. Box 300481\n   Houston, Texas,\
    \ 77230\n   EMail: sob@academ.com\n"
- title: 11.0 Full Copyright Statement
  contents:
  - "11.0 Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
