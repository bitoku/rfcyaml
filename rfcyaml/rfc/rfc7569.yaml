- contents:
  - "       Registry Specification for Mandatory Access Control (MAC)\n                         Security
    Label Formats\n"
  title: __initial_text__
- contents:
  - "Abstract\n   In the past, Mandatory Access Control (MAC) systems have used very\n
    \  rigid policies that were implemented in particular protocols and\n   platforms.
    \ As MAC systems become more widely deployed, additional\n   flexibility in mechanism
    and policy will be required.  While\n   traditional trusted systems implemented
    Multi-Level Security (MLS)\n   and integrity models, modern systems have expanded
    to include such\n   technologies as type enforcement.  Due to the wide range of
    policies\n   and mechanisms that need to be accommodated, it is unlikely that
    the\n   use of a single security label format and model will be viable.\n   To
    allow multiple MAC mechanisms and label formats to co-exist in a\n   network,
    this document creates a registry of label format\n   specifications.  This registry
    contains label format identifiers and\n   provides for the association of each
    such identifier with a\n   corresponding extensive document outlining the exact
    syntax and use\n   of the particular label format.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7569.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Definitions .....................................................4\n   3.
    Existing Label Format Specifications ............................4\n      3.1.
    IP Security Option (IPSO), Basic Security Option (BSO) .....4\n      3.2. Commercial
    IP Security Option (CIPSO) ......................5\n      3.3. Common Architecture
    Label IPv6 Security Option (CALIPSO) ...5\n      3.4. Flux Advanced Security Kernel
    (FLASK) ......................5\n   4. Security Considerations .........................................5\n
    \  5. IANA Considerations .............................................5\n      5.1.
    Initial Registry ...........................................6\n      5.2. Adding
    a New Entry to the Registry .........................7\n      5.3. Obsoleting
    a Label Format Specifier ........................8\n      5.4. Modifying an Existing
    Entry in the Registry ................8\n   6. References ......................................................9\n
    \     6.1. Normative References .......................................9\n      6.2.
    Informative References .....................................9\n   Acknowledgments
    ...................................................10\n   Authors' Addresses ................................................10\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n    With the acceptance of security labels in several mainstream\n
    \   operating systems, the need to communicate labels between these\n    systems
    becomes more important.  In a typical client-and-server\n    scenario, the client
    request to the server acts as a subject trying\n    to access an object on the
    server [RFC7204].  Unfortunately, these\n    systems are diverse enough that attempts
    at establishing one common\n    label format have been unsuccessful.  This is
    because systems\n    implement different Mandatory Access Control (MAC) models,
    which\n    typically do not share any common ground.\n    One solution might be
    to define a single label format that consists\n    of the union of the requirements
    of all MAC models/implementations,\n    known at a given time.  This approach
    is not desirable, because it\n    introduces an environment where either (1) many
    MAC models would\n    have blank fields for many of the label's components or
    (2) many\n    implementations would ignore altogether many of the values that
    are\n    present.  The resulting complexity would be likely to result in a\n    confusing
    situation in which the interaction of fields that are\n    derived from different
    MAC models is never clearly specified and the\n    addition of new models or extensions
    of existing models is unduly\n    difficult.\n    An additional consideration
    is that if a policy authority or\n    identifier field is specified in the label
    format, it would require\n    a robust description that would encompass multiple
    MAC models where\n    an implementation would lock policy administration into
    the\n    described model.\n    Ideally, a mechanism to address this problem should
    allow the most\n    flexibility possible in terms of policy administration while\n
    \   providing a specification that is sufficient to allow for\n    implementation
    of the label format and understanding of the\n    semantics of the label.  This
    means that the label format\n    specification would ideally contain a syntactic
    description of the\n    label format and a description of the semantics for each
    component\n    in the label.  This allows protocols to specify the type of label\n
    \   and label semantics that it requires while leaving policy and policy\n    administration
    to the individual organizations using the protocol in\n    their environment.\n
    \   Policy administration within an organization is a difficult problem.\n    This
    should not be made even more difficult by having to request\n    permission from
    external entities when crafting new policy or just\n    making department specific
    modifications to existing policies.  The\n    policy authority field would allow
    a label format specification to\n    specify a scheme for policy administration
    without forcing it on all\n    users of security labels.  However, by agreeing
    to implement a\n    particular label format specification, the protocol agrees
    to that\n    policy administration mechanism when processing labels of that type.\n
    \   This document creates a registry of label format specifications to\n    allow
    multiple MAC mechanisms and label formats to co-exist in a\n    network.  While
    the initial use of this registry is for the Network\n    File System (NFS) protocol,
    it might also be referenced and used by\n    other IETF protocols in the future.\n"
  title: 1.  Introduction
- contents:
  - "2.  Definitions\n   Label Format Specifier:  an identifier used by the client
    to\n      establish the syntactic format of the security label and the\n      semantic
    meaning of its components.\n   Label Format Specification:  a reference to a stable,
    public document\n      that specifies the label format.\n   Multi-Level Security
    (MLS):  a traditional model where subjects are\n      given a security level (Unclassified,
    Secret, Top Secret, etc.)\n      and objects are given security labels that mandate
    the access of\n      the subject to the object (see [BL73] and [RFC2401]).\n      (Although
    RFC 2401 has been obsoleted by RFC 4301, RFC 2401 is\n      still the definitive
    reference for MLS as discussed in this\n      document.)\n   object:  a passive
    resource within the system that we wish to\n      protect.  Objects can be entities
    such as files, directories,\n      pipes, sockets, and many other system resources
    relevant to the\n      protection of the system state.\n   subject:  an active
    entity, usually a process, user, or client, that\n      is requesting access to
    an object.\n"
  title: 2.  Definitions
- contents:
  - '3.  Existing Label Format Specifications

    '
  - contents:
    - "3.1.  IP Security Option (IPSO), Basic Security Option (BSO)\n   The \"IP Security
      Option (IPSO)\" label format is defined in [RFC1108].\n   IANA has assigned
      IPv4 Option 130 to the IPSO Basic Security Option\n   (BSO).  IPSO is the only
      IPv4 sensitivity label option implemented in\n   commercial IP routers.  IPSO
      BSO continues to have widespread\n   implementation in hosts, and widespread
      deployment.  For the purposes\n   of this document, only the BSO labels in Table
      1 on Page 3 of\n   [RFC1108] are used.\n   In some locales, the BSO value \"(Reserved
      2)\" is used for marking\n   information that is considered \"Restricted\" by
      local policy, where\n   \"Restricted\" is less sensitive than \"Confidential\"
      but more sensitive\n   than \"Unclassified\".\n"
    title: 3.1.  IP Security Option (IPSO), Basic Security Option (BSO)
  - contents:
    - "3.2.  Commercial IP Security Option (CIPSO)\n   The \"Commercial IP Security
      Option (CIPSO)\" label format is\n   documented in [CIPSO] and in [FIPS-188].
      \ While [CIPSO] is long\n   expired, it is widely supported in deployed MLS
      systems that support\n   IPv4.  IANA has assigned IPv4 option number 134 to
      CIPSO.  CIPSO is\n   defined ONLY as an IPv4 option.  IANA has never assigned
      any IPv6\n   option value to CIPSO.\n"
    title: 3.2.  Commercial IP Security Option (CIPSO)
  - contents:
    - "3.3.  Common Architecture Label IPv6 Security Option (CALIPSO)\n   The \"Common
      Architecture Label IPv6 Security Option (CALIPSO)\" label\n   format is specified
      in [RFC5570] and is defined for IPv6.  As noted\n   in Section 10 of [RFC5570],
      CALIPSO is a direct derivative of the\n   IPv4 \"Son of IPSO\" (SIPSO); therefore,
      CALIPSO is NOT derived from\n   CIPSO in any way.\n"
    title: 3.3.  Common Architecture Label IPv6 Security Option (CALIPSO)
  - contents:
    - "3.4.  Flux Advanced Security Kernel (FLASK)\n   The Flux Advanced Security
      Kernel (FLASK) [FLASK99] is an\n   implementation of an architecture to provide
      flexible support for\n   security policies.  Section 2.1 of [FLASK99b] summarizes
      the\n   architecture of FLASK and describes:\n   1.  the interactions between
      a subsystem that enforces security\n       policy decisions and a subsystem
      that makes those decisions.\n   2.  the requirements on the components within
      each subsystem.\n"
    title: 3.4.  Flux Advanced Security Kernel (FLASK)
  title: 3.  Existing Label Format Specifications
- contents:
  - "4.  Security Considerations\n   This document defines a mechanism to associate
    the Label Format\n   Specifier identifier with a document outlining the syntax
    and format\n   of a label.  There are no security considerations for such an\n
    \  association.  The label specification documents referenced by each\n   registration
    entry should state security considerations for the label\n   mechanism it specifies.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This section provides guidance to the Internet Assigned
    Numbers\n   Authority (IANA) regarding the creation of a new registry in\n   accordance
    with [RFC5226].\n   Per this document, IANA has created a new registry called
    \"Security\n   Label Format Selection Registry\".  The new registry has the following\n
    \  fields:\n   Label Format Specifier:  An integer that maps to a particular label\n
    \     format, e.g., the CALIPSO label format defined by [RFC5570].  The\n      namespace
    of this identifier has the range of 0..65535.\n   Label Description:  A human-readable
    ASCII [RFC20] text string that\n      describes the label format, e.g., \"Common
    Architecture Label IPv6\n      Security Option (CALIPSO)\".  The length of this
    field is limited\n      to 128 bytes.\n   Status:  A short ASCII text string indicating
    the status of an entry\n      in the registry.  The status field for most entries
    should have\n      the value \"active\".  In the case where a label format selection\n
    \     entry is obsolete, the status field of the obsoleted entry should\n      be
    \"obsoleted by entry NNN\".\n   Label Format Specification:  A reference to a
    stable, public document\n      that specifies the label format, e.g., a URL to
    [RFC5570].\n"
  - contents:
    - "5.1.  Initial Registry\n   The initial assignments of the registry are as follows:\n
      \  +---------------+---------------------+--------+--------------------+\n   |
      Label Format  | Description         | Status | Reference          |\n   | Specifier
      \    |                     |        |                    |\n   +---------------+---------------------+--------+--------------------+\n
      \  | 0             | Reserved            | -      | -                  |\n   |
      1 - 127       | Private Use         | -      | -                  |\n   | 128
      - 255     | Experimental Use    | -      | -                  |\n   | 256           |
      CIPSO (tag type #1) | active | [FIPS-188]         |\n   | 257           | CALIPSO
      [RFC5570]   | active | [RFC5570]          |\n   | 258           | FLASK Security
      \     | active | [FLASK99]          |\n   |               | Context             |
      \       |                    |\n   | 259           | IPSO                | active
      | [RFC1108]          |\n   | 260 - 65535   | Available for IANA  | -      |
      -                  |\n   |               | Assignment          |        |                    |\n
      \  +---------------+---------------------+--------+--------------------+\n                       Label
      Format Specifier Ranges\n                                  Table 1\n"
    title: 5.1.  Initial Registry
  - contents:
    - "5.2.  Adding a New Entry to the Registry\n   A label format specification document
      is required to add a new entry\n   to the \"Security Label Format Selection
      Registry\".  If the label\n   format document is inside the RFC path, then the
      IANA Considerations\n   section of the label format document should clearly
      reference the\n   \"Security Label Format Selection Registry\" and request allocation
      of\n   a new entry.  The well-known IANA policy Specification Required, as\n
      \  defined in Section 4.1 of [RFC5226], will be used to handle such\n   requests.
      \ Note that the \"Specification Required\" policy implies that\n   this process
      requires a Designated Expert, i.e., adding a new entry\n   to this registry
      requires both a published label format specification\n   and a Designated Expert
      review.\n   In reviewing the published label format specification, the Designated\n
      \  Expert should consider whether or not the specification provides\n   sufficient
      semantics for the object and subject labels to enforce the\n   MAC model and
      policy administration when deployed within an\n   organization.  Another consideration
      is if the label format allows a\n   correct and complete implementation of the
      protocol to process and\n   enforce labels as a policy administration mechanism.
      \ Finally, to\n   reduce interoperability issues, the reviewer must determine
      if the\n   new label format specification has clearly defined syntax and\n   semantics
      for the proposed new labels.\n"
    title: 5.2.  Adding a New Entry to the Registry
  - contents:
    - "5.3.  Obsoleting a Label Format Specifier\n   In the case where a label format
      selector number is assigned to a\n   label format and the label format specification
      is changed later, a\n   new selector assignment should be requested.  The same
      Specification\n   Required IANA policy applies to such requests.  The IANA\n
      \  Considerations section of the updated label format specification\n   should
      be explicit regarding which old label selector assignment it\n   obsoletes.
      \ Below is an example of an obsoleted entry in the\n   registry:\n   +--------------+--------------------+-----------+-------------------+\n
      \  | Label Format | Description        | Status    | Reference         |\n   |
      Specifier    |                    |           |                   |\n   +--------------+--------------------+-----------+-------------------+\n
      \  | 0            | Reserved           | -         | -                 |\n   |
      1 - 127      | Private Use        | -         | -                 |\n   | 128
      - 255    | Experimental Use   | -         | -                 |\n   | 256          |
      CIPSO (tag type    | active    | [FIPS-188]        |\n   |              | #1)
      \               |           |                   |\n   | 257          | CALIPSO
      [RFC5570]  | active    | [RFC5570]         |\n   | 258          | FLASK Security
      \    | obsoleted | [FLASK99]         |\n   |              | Context            |
      by 263    |                   |\n   | ...          |                    |           |
      \                  |\n   | 263          | FLASK Security     | active    | [new
      spec URL]    |\n   |              | Context (v2)       |           |                   |\n
      \  | 264 - 65535  | Available for IANA | -         | -                 |\n   |
      \             | Assignment         |           |                   |\n   +--------------+--------------------+-----------+-------------------+\n
      \              Example Label Format Specifier Updated Ranges\n                                  Table
      2\n"
    title: 5.3.  Obsoleting a Label Format Specifier
  - contents:
    - "5.4.  Modifying an Existing Entry in the Registry\n   A request to modify either
      the Description or the published label\n   format specification will also require
      the Specification Required\n   IANA policy to be applied.  The Designated Expert
      reviewer will need\n   to determine if the published label format specification
      either\n   obsoletes the Label Format Specifier or updates the label syntax
      and/\n   or model.  If the Label Format Specifier is obsoleted, then the\n   reviewer
      will follow the process defined in Section 5.3.  Otherwise,\n   for the update
      of the label syntax and/or the model, the reviewer\n   will approve the change.\n"
    title: 5.4.  Modifying an Existing Entry in the Registry
  title: 5.  IANA Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC20]    Cerf, V., \"ASCII format for network
      interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020, October
      1969,\n              <http://www.rfc-editor.org/info/rfc20>.\n   [RFC5226]  Narten,
      T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations
      Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226, May
      2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [BL73]     Bell, D. and L. LaPadula, \"Secure
      Computer Systems:\n              Mathematical Foundations and Model\", Technical
      Report\n              M74-244, The MITRE Corporation, Bedford, MA, May 1973.\n
      \  [CIPSO]    IETF CIPSO Working Group, \"Commercial IP Security Option\n              (CIPSO
      2.2)\", Work in Progress,\n              draft-ietf-cipso-ipsecurity-01, July
      1992.\n   [FIPS-188] US National Institute of Standards and Technology,\n              \"Standard
      Security Labels for Information Transfer\",\n              Federal Information
      Processing Standards (FIPS) 188,\n              September 1994, <http://csrc.nist.gov/publications/\n
      \             fips/fips188/fips188.pdf>.\n   [FLASK99]  Spencer, R., Smalley,
      S., Loscocco, P., Hibler, M.,\n              Andersen, D., and J. Lepreau, \"The
      Flask Security\n              Architecture: System Support for Diverse Security\n
      \             Policies\", In Proceedings of the Eighth USENIX\n              Security
      Symposium, pages 123-139, August 1999,\n              <https://www.cs.cmu.edu/~dga/papers/\n
      \             flask-usenixsec99.pdf>.\n   [FLASK99b] Secure Computing Corporation,
      \"Assurance in the Fluke\n              Microkernel Formal Security Policy Model\",
      Document\n              00-0930896A001 Rev B, 17 Feb 1999, Secure Computing\n
      \             Corporation, Roseville, MN, USA, February 1999,\n              <http://www.cs.utah.edu/flux/fluke/html/fspm.ps.gz>.\n
      \  [RFC1108]  Kent, S., \"U.S. Department of Defense Security Options for\n
      \             the Internet Protocol\", RFC 1108, DOI 10.17487/RFC1108,\n              November
      1991, <http://www.rfc-editor.org/info/rfc1108>.\n   [RFC2401]  Kent, S. and
      R. Atkinson, \"Security Architecture for the\n              Internet Protocol\",
      RFC 2401, DOI 10.17487/RFC2401,\n              November 1998, <http://www.rfc-editor.org/info/rfc2401>.\n
      \  [RFC5570]  StJohns, M., Atkinson, R., and G. Thomas, \"Common\n              Architecture
      Label IPv6 Security Option (CALIPSO)\", RFC\n              5570, DOI 10.17487/RFC5570,
      July 2009,\n              <http://www.rfc-editor.org/info/rfc5570>.\n   [RFC7204]
      \ Haynes, T., \"Requirements for Labeled NFS\", RFC 7204, DOI\n              10.17487/RFC7204,
      April 2014,\n              <http://www.rfc-editor.org/info/rfc7204>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Acknowledgments\n   Ran Atkinson contributed the text for IPSO.\n   Dave Noveck
    helped detangle the terminology.\n   Alexey Melnikov caught that a process was
    needed for modifying\n   entries in the registry.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   David P. Quigley\n   Email: dpquigl@davequigley.com\n
    \  Jarrett Lu\n   Oracle\n   Email: jarrett.lu@oracle.com\n   Thomas Haynes\n
    \  Primary Data, Inc.\n   4300 El Camino Real Ste 100\n   Los Altos, CA  94022\n
    \  United States\n   Phone: +1 408 215 1519\n   Email: thomas.haynes@primarydata.com\n"
  title: Authors' Addresses
