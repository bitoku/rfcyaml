- contents:
  - "           Signaling Cryptographic Algorithm Understanding in\n                    DNS
    Security Extensions (DNSSEC)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The DNS Security Extensions (DNSSEC) were developed to provide origin\n
    \  authentication and integrity protection for DNS data by using digital\n   signatures.
    \ These digital signatures can be generated using\n   different algorithms.  This
    document specifies a way for validating\n   end-system resolvers to signal to
    a server which digital signature\n   and hash algorithms they support.  The extensions
    allow the signaling\n   of new algorithm uptake in client code to allow zone administrators\n
    \  to know when it is possible to complete an algorithm rollover in a\n   DNSSEC-signed
    zone.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6975.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . . . 3\n   2.  Requirements Language . . . . . . . . . . . . . . . . .
    . . . . 4\n   3.  Signaling DNSSEC Algorithm Understood (DAU), DS Hash\n       Understood
    (DHU), and NSEC3 Hash Understood (N3U) Using EDNS  . 4\n   4.  Client Considerations
    . . . . . . . . . . . . . . . . . . . . . 5\n     4.1.  Stub Resolvers  . . .
    . . . . . . . . . . . . . . . . . . . 5\n       4.1.1.  Validating Stub Resolvers
    . . . . . . . . . . . . . . . 5\n       4.1.2.  Non-validating Stub Resolvers
    . . . . . . . . . . . . . 6\n     4.2.  Recursive Resolvers . . . . . . . . .
    . . . . . . . . . . . 6\n       4.2.1.  Validating Recursive Resolvers  . . .
    . . . . . . . . . 6\n       4.2.2.  Non-validating Recursive Resolvers  . . .
    . . . . . . . 6\n   5.  Intermediate System Considerations  . . . . . . . . .
    . . . . . 6\n   6.  Server Considerations . . . . . . . . . . . . . . . . . .
    . . . 7\n   7.  Traffic Analysis Considerations . . . . . . . . . . . . . . .
    . 7\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 8\n
    \  9.  Security Considerations . . . . . . . . . . . . . . . . . . . . 8\n   10.
    Normative References  . . . . . . . . . . . . . . . . . . . . . 8\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The DNS Security Extensions (DNSSEC), [RFC4033], [RFC4034],
    and\n   [RFC4035], were developed to provide origin authentication and\n   integrity
    protection for DNS data by using digital signatures.  Each\n   digital signature
    (RRSIG) Resource Record (RR) contains an algorithm\n   code number that corresponds
    to a DNSSEC public key (DNSKEY) RR.\n   These algorithm codes tell validators
    which cryptographic algorithm\n   was used to generate the digital signature.\n
    \  Likewise, the Delegation Signer (DS) RRs and Hashed Authenticated\n   Denial
    of Existence (NSEC3) RRs use a hashed value as part of their\n   resource record
    data (RDATA) and, like digital signature algorithms,\n   these hash algorithms
    have code numbers.  All three algorithm codes\n   (RRSIG/DNSKEY, DS, and NSEC3)
    are maintained in unique IANA\n   registries.\n   This document sets specifies
    a way for validating end-system\n   resolvers to tell a server in a DNS query
    which digital signature\n   and/or hash algorithms they support.  This is done
    using the new\n   Extension Mechanisms for DNS (EDNS0) options specified below
    in\n   Section 2 for use in the OPT meta-RR [RFC6891].  These three new\n   EDNS0
    option codes are all OPTIONAL to implement and use.\n   These proposed EDNS0 options
    serve to measure the acceptance and use\n   of new digital signing algorithms.
    \ These signaling options can be\n   used by zone administrators as a gauge to
    measure the successful\n   deployment of code that implements the newly deployed
    digital\n   signature algorithm, DS hash, and the NSEC3 hash algorithm used with\n
    \  DNSSEC.  A zone administrator is able to determine when to stop\n   signing
    with a superseded algorithm when the server sees that a\n   significant number
    of its clients signal that they are able to accept\n   the new algorithm.  Note
    that this survey may be conducted over a\n   period of years before a tipping
    point is seen.\n   This document does not seek to introduce another process for\n
    \  including new algorithms for use with DNSSEC.  It also does not\n   address
    the question of which algorithms are to be included in any\n   official list of
    mandatory or recommended cryptographic algorithms\n   for use with DNSSEC.  Rather,
    this document specifies a means by\n   which a client query can signal the set
    of algorithms and hashes that\n   it implements.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in RFC\n   2119 [RFC2119].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Signaling DNSSEC Algorithm Understood (DAU), DS Hash Understood\n    (DHU),
    and NSEC3 Hash Understood (N3U) Using EDNS\n   The EDNS0 specification outlined
    in [RFC6891] defines a way to\n   include new options using a standardized mechanism.
    \ These options\n   are contained in the RDATA of the OPT meta-RR.  This document
    defines\n   three new EDNS0 options for a client to signal which digital\n   signature
    and/or hash algorithms the client supports.  These options\n   can be used independently
    of each other and MAY appear in any order\n   in the OPT RR.  Each option code
    can appear only once in an OPT RR.\n   The figure below shows how each option
    is defined in the RDATA of the\n   OPT RR specified in [RFC6891]:\n       0                       8
    \                     16\n       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \      |                  OPTION-CODE                  |\n       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \      |                  LIST-LENGTH                  |\n       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \      |       ALG-CODE        |        ...            /\n       +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \  OPTION-CODE is the code for the given signaling option.  The options\n   are:\n
    \  o  DNSSEC Algorithm Understood (DAU) option for DNSSEC digital\n      signing
    algorithms.  Its value is fixed at 5.\n   o  DS Hash Understood (DHU) option for
    DS RR hash algorithms.  Its\n      value is fixed at 6.\n   o  NSEC3 Hash Understood
    (N3U) option for NSEC3 hash algorithms.  Its\n      value is fixed at 7.\n   LIST-LENGTH
    is the length of the list of digital signatures or hash\n   algorithm codes in
    octets.  Each algorithm code occupies a single\n   octet.\n   ALG-CODE is the
    list of assigned values of DNSSEC zone signing\n   algorithms, DS hash algorithms,
    or NSEC3 hash algorithms (depending\n   on the OPTION-CODE in use) that the client
    declares to be supported.\n   The order of the code values can be arbitrary and
    MUST NOT be used to\n   infer preference.\n   If all three options are included
    in the OPT RR, there is a potential\n   for the OPT RR to take up considerable
    size in the DNS message.\n   However, in practical terms, including all three
    options is likely to\n   take up 22-32 octets (average of 6-10 digital signature
    algorithms,\n   3-5 DS hash algorithms, and 1-5 NSEC3 hash algorithms) including
    the\n   EDNS0 option codes and option lengths in potential future examples.\n"
  title: 3.  Signaling DNSSEC Algorithm Understood (DAU), DS Hash Understood
- contents:
  - "4.  Client Considerations\n   A validating end-system resolver sets the DAU,
    DHU, and/or N3U\n   option, or combination thereof, in the OPT meta-RR when sending
    a\n   query.  The validating end-system resolver MUST also set the DNSSEC\n   OK
    bit [RFC4035] to indicate that it wishes to receive DNSSEC RRs in\n   the response.\n
    \  Note that the PRIVATEDNS (253) and/or the PRIVATEOID (254) digital\n   signature
    codes both cover a potentially wide range of algorithms and\n   are likely not
    useful to a server.  There is no compelling reason for\n   a client to include
    these codes in its list of the DAU.  Likewise,\n   clients MUST NOT include RESERVED
    codes in any of the options.\n   Additionally, a client is under no obligation
    to list every algorithm\n   it implements and MAY choose to only list algorithms
    the client\n   wishes to signal as understood.\n   Since the DAU, DHU, and/or
    N3U options are only set in the query, if\n   a client sees these options in the
    response, no action needs to be\n   taken and the client MUST ignore the option
    values.\n"
  - contents:
    - "4.1.  Stub Resolvers\n   Typically, stub resolvers rely on an upstream recursive
      server (or\n   cache) to provide a response.  So optimal setting of the DAU,
      DSU,\n   and N3U options depends on whether the stub resolver elects to\n   perform
      its own validation.\n"
    - contents:
      - "4.1.1.  Validating Stub Resolvers\n   A validating stub resolver sets the
        DNSSEC OK (DO) bit [RFC4035] to\n   indicate that it wishes to receive additional
        DNSSEC RRs (i.e., RRSIG\n   RRs) in the response.  Such validating resolvers
        SHOULD include the\n   DAU, DHU, and/or the N3U option(s) in the OPT RR when
        sending a\n   query.\n"
      title: 4.1.1.  Validating Stub Resolvers
    - contents:
      - "4.1.2.  Non-validating Stub Resolvers\n   The DAU, DHU, and N3U EDNS0 options
        MUST NOT be included by\n   non-validating stub resolvers.\n"
      title: 4.1.2.  Non-validating Stub Resolvers
    title: 4.1.  Stub Resolvers
  - contents:
    - '4.2.  Recursive Resolvers

      '
    - contents:
      - "4.2.1.  Validating Recursive Resolvers\n   A validating recursive resolver
        sets the DAU, DHU, and/or N3U\n   option(s) when performing recursion based
        on its list of algorithms\n   and any DAU, DHU, and/or N3U option lists in
        the stub client query.\n   When the recursive server receives a query with
        one or more of the\n   options set, the recursive server MUST set the algorithm
        list for any\n   outgoing iterative queries for that resolution chain to a
        union of\n   the stub client's list and the validating recursive resolver's
        list.\n   For example, if the recursive resolver's algorithm list for the
        DAU\n   option is (3, 5, 7) and the stub's algorithm list is (7, 8), the\n
        \  final DAU algorithm list would be (3, 5, 7, 8).\n   If the client included
        the DO and Checking Disabled (CD) bits, but\n   did not include the DAU, DHU,
        and/or N3U option(s) in the query, the\n   validating recursive resolver MAY
        include the option(s) with its own\n   list in full.  If one or more of the
        options are missing, the\n   validating recursive resolver MAY include the
        missing options with\n   its own list in full.\n   Validating recursive resolvers
        MUST NOT set the DAU, DHU, and/or N3U\n   option(s) in the final response
        to the stub client.\n"
      title: 4.2.1.  Validating Recursive Resolvers
    - contents:
      - "4.2.2.  Non-validating Recursive Resolvers\n   Recursive resolvers that do
        not do validation MUST copy the DAU, DHU,\n   and/or N3U option(s) seen in
        received queries as they represent the\n   wishes of the validating downstream
        resolver that issued the original\n   query.\n"
      title: 4.2.2.  Non-validating Recursive Resolvers
    title: 4.2.  Recursive Resolvers
  title: 4.  Client Considerations
- contents:
  - "5.  Intermediate System Considerations\n   Intermediate proxies (see Section
    4.4.2 of [RFC5625]) that understand\n   DNS are RECOMMENDED to behave like a comparable
    recursive resolver\n   when dealing with the DAU, DHU, and N3U options.\n"
  title: 5.  Intermediate System Considerations
- contents:
  - "6.  Server Considerations\n   When an authoritative server sees the DAU, DHU,
    and/or N3U option(s)\n   in the OPT meta-RR in a request, the normal algorithm
    for servicing\n   requests is followed.  The options MUST NOT trigger any special\n
    \  processing (e.g., RRSIG filtering in responses) on the server side.\n   If
    the options are present but the DO bit is not set, the server does\n   not do
    any DNSSEC processing, which includes any recording of the\n   option(s).\n   If
    the server sees one (or more) of the options set with RESERVED\n   values, the
    server MAY ignore recoding of those values.\n   Authoritative servers MUST NOT
    set the DAU, DHU, and/or N3U option(s)\n   on any responses.  These values are
    only set in queries.\n"
  title: 6.  Server Considerations
- contents:
  - "7.  Traffic Analysis Considerations\n   Zone administrators that are planning
    or are in the process of a\n   cryptographic algorithm rollover operation should
    monitor DNS query\n   traffic and record the number of queries, the presence of
    the OPT RR\n   in queries, and the values of the DAU/DHU/N3U option(s) (if present).\n
    \  This monitoring can be used to measure the deployment of client code\n   that
    implements (and signals) specific algorithms.  A description of\n   the techniques
    used to capture DNS traffic and measure new algorithm\n   adoption is beyond the
    scope of this document.\n   Zone administrators that need to comply with changes
    to their\n   organization's security policy (with regards to cryptographic\n   algorithm
    use) can use this data to set milestone dates for\n   performing an algorithm
    rollover.  For example, zone administrators\n   can use the data to determine
    when older algorithms can be phased out\n   without disrupting a significant number
    of clients.  In order to keep\n   this disruption to a minimum, zone administrators
    should wait to\n   complete an algorithm rollover until a large majority of clients\n
    \  signal that they recognize the new algorithm.  This may be in the\n   order
    of years rather than months.\n   Note that clients that do not implement these
    options are likely to\n   be older implementations that would also not implement
    any newly\n   deployed algorithm.\n"
  title: 7.  Traffic Analysis Considerations
- contents:
  - "8.  IANA Considerations\n   The algorithm codes used to identify DNSSEC algorithms,
    DS RR hash\n   algorithms, and NSEC3 hash algorithms have already been established\n
    \  by IANA.  This document does not seek to alter that registry in any\n   way.\n
    \  IANA has allocated option codes 5, 6, and 7 for the DAU, DHU, and N3U\n   options,
    respectively, in the \"DNS EDNS0 Option Codes (OPT)\"\n   registry.  The three
    options have a status of \"standard\".\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   This document specifies a way for a client to
    signal its digital\n   signature and hash algorithm knowledge to a cache or server.
    \ It is\n   not meant to be a discussion on algorithm superiority.  The signals\n
    \  are optional codes contained in the OPT meta-RR used with EDNS.  The\n   goal
    of these options is to signal new algorithm uptake in client\n   code to allow
    zone administrators to know when it is possible to\n   complete an algorithm rollover
    in a DNSSEC-signed zone.\n   There is a possibility that an eavesdropper or server
    could infer the\n   validator in use by a client by the presence of the AU options
    and/or\n   algorithm code list.  This information leakage in itself is not very\n
    \  useful to a potential attacker, but it could be used to identify the\n   validator
    or narrow down the possible validator implementations in\n   use by a client,
    which could have a known vulnerability that could be\n   exploited by the attacker.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in
    RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
    1997.\n   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n
    \             Rose, \"DNS Security Introduction and Requirements\",\n              RFC
    4033, March 2005.\n   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey,
    D., and S.\n              Rose, \"Resource Records for the DNS Security Extensions\",\n
    \             RFC 4034, March 2005.\n   [RFC4035]  Arends, R., Austein, R., Larson,
    M., Massey, D., and S.\n              Rose, \"Protocol Modifications for the DNS
    Security\n              Extensions\", RFC 4035, March 2005.\n   [RFC5625]  Bellis,
    R., \"DNS Proxy Implementation Guidelines\",\n              BCP 152, RFC 5625,
    August 2009.\n   [RFC6891]  Damas, J., Graff, M., and P. Vixie, \"Extension Mechanisms\n
    \             for DNS (EDNS(0))\", STD 75, RFC 6891, April 2013.\n"
  title: 10.  Normative References
- contents:
  - "Authors' Addresses\n   Steve Crocker\n   Shinkuro Inc.\n   5110 Edgemoor Lane\n
    \  Bethesda, MD  20814\n   USA\n   EMail: steve@shinkuro.com\n   Scott Rose\n
    \  NIST\n   100 Bureau Dr.\n   Gaithersburg, MD  20899\n   USA\n   Phone: +1-301-975-8439\n
    \  EMail: scottr.nist@gmail.com\n"
  title: Authors' Addresses
