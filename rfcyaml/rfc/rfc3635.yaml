- contents:
  - "                   Definitions of Managed Objects for\n                   the
    Ethernet-like Interface Types\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it defines objects for managing Ethernet-like\n   interfaces.  This
    memo obsoletes RFC 2665.  It updates that\n   specification by including management
    information useful for the\n   management of 10 Gigabit per second (Gb/s) Ethernet
    interfaces.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  The Internet-Standard Management Framework . . . . . .
    . . . .  3\n   3.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n       3.1.  Relation to MIB-2. . . . . . . . . . . . . . . . . . . .
    \ 4\n       3.2.  Relation to the Interfaces MIB . . . . . . . . . . . . .  4\n
    \            3.2.1.  Layering Model . . . . . . . . . . . . . . . . .  4\n             3.2.2.
    \ Virtual Circuits . . . . . . . . . . . . . . . .  4\n             3.2.3.  ifRcvAddressTable.
    . . . . . . . . . . . . . . .  5\n             3.2.4.  ifType . . . . . . . .
    . . . . . . . . . . . . .  5\n             3.2.5.  ifXxxOctets. . . . . . . .
    . . . . . . . . . . .  5\n             3.2.6.  ifXxxXcastPkts . . . . . . . .
    . . . . . . . . .  6\n             3.2.7.  ifMtu. . . . . . . . . . . . . . .
    . . . . . . .  8\n             3.2.8.  ifSpeed and ifHighSpeed. . . . . . . .
    . . . . .  8\n             3.2.9.  ifPhysAddress. . . . . . . . . . . . . . .
    . . .  9\n             3.2.10.  Specific Interface MIB Objects. . . . . . . .
    . 10\n       3.3.  Relation to the 802.3 MAU MIB. . . . . . . . . . . . . . 13\n
    \      3.4.  dot3StatsEtherChipSet. . . . . . . . . . . . . . . . . . 13\n       3.5.
    \ Mapping of IEEE 802.3 Managed Objects. . . . . . . . . . 14\n   4.  Definitions.
    . . . . . . . . . . . . . . . . . . . . . . . . . 17\n   5.  Intellectual Property
    Statement. . . . . . . . . . . . . . . . 55\n   6.  Acknowledgements . . . . .
    . . . . . . . . . . . . . . . . . . 56\n   7.  Normative References . . . . .
    . . . . . . . . . . . . . . . . 57\n   8.  Informative References . . . . . .
    . . . . . . . . . . . . . . 58\n   9.  Security Considerations. . . . . . . .
    . . . . . . . . . . . . 59\n   10. IANA Considerations. . . . . . . . . . . .
    . . . . . . . . . . 60\n   A.  Change Log . . . . . . . . . . . . . . . . . .
    . . . . . . . . 61\n       A.1.  Changes since RFC 2665 . . . . . . . . . . .
    . . . . . . 61\n       A.2.  Changes between RFC 2358 and RFC 2665  . . . . .
    . . . . 62\n       A.3.  Changes between RFC 1650 and RFC 2358. . . . . . . .
    . . 62\n   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . .
    63\n   Full Copyright Statement  . . . . . . . . . . . . . . . . . . . . .64\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   This memo defines a portion of the Management Information
    Base (MIB)\n   for use with network management protocols in the Internet community.\n
    \  In particular, it defines objects for managing Ethernet-like\n   interfaces.\n
    \  This memo also includes a MIB module.  This MIB module updates the\n   list
    of managed objects specified in the earlier version of this MIB,\n   module, RFC
    2665 [RFC2665].\n   Ethernet technology, as defined by the 802.3 Working Group
    of the\n   IEEE, continues to evolve, with scalable increases in speed, new\n
    \  types of cabling and interfaces, and new features.  This evolution\n   may
    require changes in the managed objects in order to reflect this\n   new functionality.
    \ This document, as with other documents issued by\n   this working group, reflects
    a certain stage in the evolution of\n   Ethernet technology.  In the future, this
    document might be revised,\n   or new documents might be issued by the Ethernet
    Interfaces and Hub\n   MIB Working Group, in order to reflect the evolution of
    Ethernet\n   technology.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 1. Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Overview\n   Instances of these object types represent attributes of an interface\n
    \  to an ethernet-like communications medium.  At present, ethernet-like\n   media
    are identified by the value ethernetCsmacd(6) of the ifType\n   object in the
    Interfaces MIB [RFC2863].  Some older implementations\n   may return the values
    iso88023Csmacd(7) or starLan(11) for ifType for\n   ethernet-like media.\n   The
    definitions presented here are based on Section 30, \"10 Mb/s, 100\n   Mb/s 1000
    Mb/s and 10 Gb/s Management\", and Annex 30A, \"GDMO\n   Specification for 802.3
    managed object classes\" of IEEE Std. 802.3,\n   2002 Edition [IEEE802.3], amended
    by IEEE Std. 802.3ae-2002\n   [IEEE802.3ae], as originally interpreted by Frank
    Kastenholz, then of\n   Interlan in [KASTEN].  Implementors of these MIB objects
    should note\n   that IEEE Std. 802.3 [IEEE802.3] explicitly describes (in the
    form of\n   Pascal pseudocode) when, where, and how various MAC attributes are\n
    \  measured.  The IEEE document also describes the effects of MAC\n   actions
    that may be invoked by manipulating instances of the MIB\n   objects defined here.\n
    \  To the extent that some of the attributes defined in [IEEE802.3] are\n   represented
    by previously defined objects in MIB-2 [RFC1213] or in\n   the Interfaces MIB
    [RFC2863], such attributes are not redundantly\n   represented by objects defined
    in this memo.  Among the attributes\n   represented by objects defined in other
    memos are the number of\n   octets transmitted or received on a particular interface,
    the number\n   of frames transmitted or received on a particular interface, the\n
    \  promiscuous status of an interface, the MAC address of an interface,\n   and
    multicast information associated with an interface.\n"
  - contents:
    - "3.1.  Relation to MIB-2\n   This section applies only when this MIB is used
      in conjunction with\n   the \"old\" [RFC1213] interface group.\n   The relationship
      between an ethernet-like interface and an interface\n   in the context of MIB-2
      is one-to-one.  As such, the value of an\n   ifIndex object instance can be
      directly used to identify\n   corresponding instances of the objects defined
      herein.\n   For agents which implement the (now deprecated) ifSpecific object,
      an\n   instance of that object that is associated with an ethernet-like\n   interface
      has the OBJECT IDENTIFIER value:\n         dot3    OBJECT IDENTIFIER ::= { transmission
      7 }\n"
    title: 3.1.  Relation to MIB-2
  - contents:
    - "3.2.  Relation to the Interfaces MIB\n   The Interface MIB [RFC2863] requires
      that any MIB which is an adjunct\n   of the Interface MIB clarify specific areas
      within the Interface MIB.\n   These areas were intentionally left vague in the
      Interface MIB to\n   avoid over constraining the MIB, thereby precluding management
      of\n   certain media-types.\n   Section 4 of [RFC2863] enumerates several areas
      which a\n   media-specific MIB must clarify.  Each of these areas is addressed
      in\n   a following subsection.  The implementor is referred to [RFC2863] in\n
      \  order to understand the general intent of these areas.\n"
    - contents:
      - "3.2.1.  Layering Model\n   Ordinarily, there are no sublayers for an ethernet-like
        interface.\n   However there may be implementation-specific requirements which\n
        \  require the use of sublayers.  One example is the use of 802.3 link\n   aggregation.
        \ In this case, Annex 30C of [IEEE802.3] describes the\n   layering model
        and the use of the ifStackTable for representing\n   aggregated links.  Another
        example is the use of the 802.3 WAN\n   Interface Sublayer.  In this case,
        The 802.3 WIS MIB [RFC3637]\n   describes the layering model and the use of
        the ifStackTable for\n   representing the WAN sublayer.\n"
      title: 3.2.1.  Layering Model
    - contents:
      - "3.2.2.  Virtual Circuits\n   This medium does not support virtual circuits
        and this area is not\n   applicable to this MIB.\n"
      title: 3.2.2.  Virtual Circuits
    - contents:
      - "3.2.3.  ifRcvAddressTable\n   This table contains all IEEE 802.3 addresses,
        unicast, multicast, and\n   broadcast, for which this interface will receive
        packets and forward\n   them up to a higher layer entity for local consumption.
        \ The format\n   of the address, contained in ifRcvAddressAddress, is the
        same as for\n   ifPhysAddress.\n   In the event that the interface is part
        of a MAC bridge, this table\n   does not include unicast addresses which are
        accepted for possible\n   forwarding out some other port.  This table is explicitly
        not\n   intended to provide a bridge address filtering mechanism.\n"
      title: 3.2.3.  ifRcvAddressTable
    - contents:
      - "3.2.4.  ifType\n   This MIB applies to interfaces which have the ifType value\n
        \  ethernetCsmacd(6).  It is REQUIRED that all ethernet-like interfaces\n
        \  use an ifType of ethernetCsmacd(6) regardless of the speed that the\n   interface
        is running or the link-layer encapsulation in use.  Use of\n   the ifType
        values iso88023Csmacd(7) and starLan(11) are deprecated,\n   however some
        older implementations may return these values.\n   Management applications
        should be prepared to receive these\n   deprecated ifType values from older
        implementations.\n   There are three other interface types defined in the
        IANAifType-MIB\n   for Ethernet.  They are fastEther(62), fastEtherFX(69),
        and\n   gigabitEthernet(117).  These interface types were registered by\n
        \  individual vendors, not by any IETF working group.  A requirement for\n
        \  compliance with this document is that all ethernet-like interfaces\n   MUST
        return ethernetCsmacd(6) for ifType, and MUST NOT return\n   fastEther(62),
        fastEtherFX(69), or gigabitEthernet(117).  However, as\n   there are fielded
        implementations that do return these obsolete\n   ifType values, management
        applications SHOULD be prepared to receive\n   them from older implementations.\n
        \  Information on the particular flavor of Ethernet that an interface is\n
        \  running is available from ifSpeed in the Interfaces MIB, and\n   ifMauType
        in the 802.3 MAU MIB [RFC3636].  Note that implementation\n   of the 802.3
        MAU MIB [RFC3636] is REQUIRED for all ethernet-like\n   interfaces.\n"
      title: 3.2.4.  ifType
    - contents:
      - "3.2.5.  ifXxxOctets\n   The Interface MIB octet counters, ifInOctets, ifOutOctets,\n
        \  ifHCInOctets and ifHCOutOctets, MUST include all octets in valid\n   frames
        sent or received on the interface, including the MAC header\n   and FCS, but
        not the preamble, start of frame delimiter, or extension\n   octets.  This
        corresponds to the definition of frameSize/8 in section\n   4.2.7.1 of [IEEE802.3]
        (frameSize is defined in bits rather than\n   octets, and is defined as 2
        x addressSize + lengthOrTypeSize +\n   dataSize + crcSize).  They do not include
        the number of octets in\n   collided or failed transmit attempts, since the
        MAC layer driver\n   typically does not have visibility to count these octets.
        \ They also\n   do not include octets in received invalid frames, since this\n
        \  information is normally not passed to the MAC layer, and since\n   non-promiscuous
        MAC implementations cannot reliably determine whether\n   an invalid frame
        was actually addressed to this station.\n   Note that these counters do include
        octets in valid MAC control\n   frames sent or received on the interface,
        as well as octets in\n   otherwise valid received MAC frames that are discarded
        by the MAC\n   layer for some reason (insufficient buffer space, unknown protocol,\n
        \  etc.).\n   Note that the octet counters in IF-MIB do not exactly match
        the\n   definition of the octet counters in IEEE 802.3.  aOctetsTransmittedOK\n
        \  and aOctetsReceivedOK count only the octets in the clientData and Pad\n
        \  fields, whereas ifInOctets and ifOutOctets include the entire MAC\n   frame,
        including MAC header and FCS.  However, the IF-MIB counters\n   can be derived
        from the IEEE 802.3 counters as follows:\n     ifInOctets = aOctetsReceivedOK
        + (18 * aFramesReceivedOK)\n     ifOutOctets = aOctetsTransmittedOK + (18
        * aFramesTransmittedOK)\n   Another difference to keep in mind between the
        IF-MIB counters and\n   IEEE 802.3 counters is that in the IEEE 802.3 document,
        the frame\n   counters and octet counters are always incremented together.\n
        \  aOctetsTransmittedOK counts the number of octets in frames that were\n
        \  counted by aFramesTransmittedOK.  aOctetsReceivedOK counts the number\n
        \  of octets in frames that were counted by aFramesReceivedOK.  This is\n
        \  not the case with the IF-MIB counters.  The IF-MIB octet counters\n   count
        the number of octets sent to or received from the layer below\n   this interface,
        whereas the packet counters count the number of\n   packets sent to or received
        from the layer above.  Therefore,\n   received MAC Control frames, ifInDiscards,
        and ifInUnknownProtos are\n   counted by ifInOctets, but not ifInXcastPkts.
        \ Transmitted MAC\n   Control frames are counted by ifOutOctets, but not ifOutXcastPkts.\n
        \  ifOutDiscards and ifOutErrors are counted by ifOutXcastPkts, but not\n
        \  ifOutOctets.\n"
      title: 3.2.5.  ifXxxOctets
    - contents:
      - "3.2.6.  ifXxxXcastPkts\n   The packet counters in the IF-MIB do not exactly
        match the definition\n   of the frame counters in IEEE 802.3.  aFramesTransmittedOK
        counts the\n   number of frames successfully transmitted on the interface,
        whereas\n   ifOutUcastPkts, ifOutMulticastPkts and ifOutBroadcastPkts count
        the\n   number of transmit requests made from a higher layer, whether or not\n
        \  the transmit attempt was successful.  This means that packets counted\n
        \  by ifOutErrors or ifOutDiscards are also counted by ifOutXcastPkts,\n   but
        are not counted by aFramesTransmittedOK.  This also means that,\n   since
        MAC Control frames are generated by a sublayer internal to the\n   interface
        layer rather than by a higher layer, they are not counted\n   by ifOutXcastPkts,
        but are counted by aFramesTransmittedOK.  Roughly:\n     aFramesTransmittedOK
        = ifOutUcastPkts + ifOutMulticastPkts +\n                            ifOutBroadcastPkts
        + dot3OutPauseFrames -\n                            (ifOutErrors + ifOutDiscards)\n
        \  Similarly, aFramesReceivedOK counts the number of frames received\n   successfully
        by the interface, whether or not they are passed to a\n   higher layer, whereas
        ifInUcastPkts, ifInMulticastPkts and\n   ifInBroadcastPkts count only the
        number of packets passed to a higher\n   layer.  This means that packets counted
        by ifInDiscards or\n   ifInUnknownProtos are also counted by aFramesReceivedOK,
        but are not\n   counted by ifInXcastPkts.  This also means that, since MAC
        Control\n   frames are consumed by a sublayer internal to the interface layer
        and\n   not passed to a higher layer, they are not counted by ifInXcastPkts,\n
        \  but are counted by aFramesReceivedOK.  Roughly:\n     aFramesReceivedOK
        = ifInUcastPkts + ifInMulticastPkts +\n                         ifInBroadcastPkts
        + dot3InPauseFrames +\n                         ifInDiscards + ifInUnknownProtos\n
        \  This specification chooses to treat MAC control frames as being\n   originated
        and consumed within the interface and not counted by the\n   IF-MIB packet
        counters.  MAC control frames are normally sent as\n   multicast packets.
        \ In many network environments, MAC control frames\n   can greatly outnumber
        multicast frames carrying actual data.  If MAC\n   control frames were included
        in the ifInMulticastPkts and\n   ifOutMulticastPkts, the count of data-carrying
        multicast packets\n   would tend to be drowned out by the count of MAC control
        frames,\n   rendering those counters considerably less useful.\n   To better
        understand the issues surrounding the mapping of the IF-MIB\n   packet and
        octet counters to an Ethernet interface, it is useful to\n   refer to a Case
        Diagram [CASE] for the IF-MIB counters, with\n   modifications to show the
        proper interpretation for the Ethernet\n   interface layer.\n                               layer
        above\n   --------------------------------------------------------------------\n
        \      ifInUcastPkts+         ^           |     ifOutUcastPkts+\n       ifInBroadcastPkts+
        ----|----   ----|---- ifOutBroadcastPkts+\n       ifInMulticastPkts      |
        \          |     ifOutMulticastPkts\n                              |           |\n
        \       dot3InPauseFrames <---|           |<--- dot3OutPauseFrames\n                              |
        \          |\n             ifInDiscards <---|           |\n                              |
        \          |\n        ifInUnknownProtos <---|           |---> ifOutDiscards\n
        \                             |           |\n               ifInOctets ----|----
        \  ----|---- ifOutOctets\n                              |           |\n               ifInErrors
        <---|           |---> ifOutErrors\n                              |           V\n
        \  --------------------------------------------------------------------\n
        \                              layer below\n"
      title: 3.2.6.  ifXxxXcastPkts
    - contents:
      - "3.2.7.  ifMtu\n   The defined standard MTU for ethernet-like interfaces is
        1500 octets.\n   However, many implementations today support larger packet
        sizes than\n   the IEEE 802.3 standard.  The value of this object MUST reflect
        the\n   actual MTU in use on the interface, whether it matches the standard\n
        \  MTU or not.\n   This value should reflect the value seen by the MAC client
        interface.\n   When a higher layer protocol, like IP, is running over Ethernet\n
        \  framing, this is the MTU that will be seen by that higher layer\n   protocol.
        \ However, most ethernet-like interfaces today run multiple\n   protocols
        that use a mix of different framing types.  For example, an\n   IEEE 802.2
        LLC type 1 client protocol will see an MTU of 1497 octets\n   on an interface
        using the IEEE standard maximum packet size, and a\n   protocol running over
        SNAP will see an MTU of 1492 octets on an\n   interface using the IEEE standard
        maximum packet size.  However,\n   since specification mandates using the
        MTU as seen at the MAC client\n   interface, the value of ifMtu would be reported
        as 1500 octets in\n   these cases.\n"
      title: 3.2.7.  ifMtu
    - contents:
      - "3.2.8.  ifSpeed and ifHighSpeed\n   For ethernet-like interfaces operating
        at 1000 Megabits per second\n   (Mb/s) or less, ifSpeed will represent the
        current operational speed\n   of the interface in bits per second.  For current
        interface types,\n   this will be equal to 1,000,000 (1 million), 10,000,000
        (10 million),\n   100,000,000 (100 million), or 1,000,000,000 (1 billion).
        \ ifHighSpeed\n   will represent the current operational speed in millions
        of bits per\n   second.  For current ethernet-like interfaces, this will be
        equal to\n   1, 10, 100, or 1,000.  If the interface implements auto-negotiation,\n
        \  auto-negotiation is enabled for this interface, and the interface has\n
        \  not yet negotiated to an operational speed, these objects SHOULD\n   reflect
        the maximum speed supported by the interface.\n   For ethernet-like interfaces
        operating at greater than 1000 Mb/s,\n   ifHighSpeed will represent the current
        operational speed of the\n   interface in millions of bits per second.  Note
        that for WAN\n   implementations, this will be the payload data rate over
        the WAN\n   interface sublayer.  For current implementations, this will be
        equal\n   to 10,000 for LAN implementations of 10 Gb/s, and 9,294 for WAN\n
        \  implementations of the 10 Gb/s MAC over an OC-192 PHY.  For these\n   speeds,
        ifSpeed should report a maximum unsigned 32-bit value of\n   4,294,967,295
        as specified in [RFC2863].\n   Note that these object MUST NOT indicate a
        doubled value when\n   operating in full-duplex mode.  It MUST indicate the
        correct line\n   speed regardless of the current duplex mode.  The duplex
        mode of the\n   interface may be determined by examining either the\n   dot3StatsDuplexStatus
        object in this MIB module, or the ifMauType\n   object in the 802.3 MAU MIB
        [RFC3636].\n"
      title: 3.2.8.  ifSpeed and ifHighSpeed
    - contents:
      - "3.2.9.  ifPhysAddress\n   This object contains the IEEE 802.3 address which
        is placed in the\n   source-address field of any Ethernet, Starlan, or IEEE
        802.3 frames\n   that originate at this interface.  Usually this will be kept
        in ROM\n   on the interface hardware.  Some systems may set this address via\n
        \  software.\n   In a system where there are several such addresses the designer
        has a\n   tougher choice.  The address chosen should be the one most likely
        to\n   be of use to network management (e.g.  the address placed in ARP\n
        \  responses for systems which are primarily IP systems).\n   If the designer
        truly can not chose, use of the factory-provided ROM\n   address is suggested.\n
        \  If the address can not be determined, an octet string of zero length\n
        \  should be returned.\n   The address is stored in binary in this object.
        \ The address is\n   stored in \"canonical\" bit order, that is, the Group
        Bit is positioned\n   as the low-order bit of the first octet.  Thus, the
        first byte of a\n   multicast address would have the bit 0x01 set.\n"
      title: 3.2.9.  ifPhysAddress
    - contents:
      - "3.2.10.  Specific Interface MIB Objects\n   The following table provides
        specific implementation guidelines for\n   applying the interface group objects
        to ethernet-like media.\n     Object                     Guidelines\n     ifIndex
        \                   Each ethernet-like interface is\n                                represented
        by an ifEntry.  The\n                                dot3StatsTable in this
        MIB module is\n                                indexed by dot3StatsIndex.
        The interface\n                                identified by a particular
        value of\n                                dot3StatsIndex is the same interface
        as\n                                identified by the same value of ifIndex.\n
        \    ifDescr                    Refer to [RFC2863].\n     ifType                     Refer
        to section 3.2.4.\n     ifMtu                      Refer to section 3.2.7.\n
        \    ifSpeed                    Refer to section 3.2.8.\n     ifPhysAddress
        \             Refer to section 3.2.9.\n     ifAdminStatus              Write
        access is not required.  Support\n                                for 'testing'
        is not required.\n     ifOperStatus               The operational state of
        the interface.\n                                Support for 'testing' is not
        required.\n                                The value 'dormant' has no meaning
        for\n                                an ethernet-like interface.\n     ifLastChange
        \              Refer to [RFC2863].\n     ifInOctets                 The number
        of octets in valid MAC frames\n                                received on
        this interface, including\n                                the MAC header
        and FCS.  This does\n                                include the number of
        octets in valid\n                                MAC Control frames received
        on this\n                                interface.  See section 3.2.5.\n
        \    ifInUcastPkts              Refer to [RFC2863].  Note that this does\n
        \                               not include MAC Control frames, since\n                                MAC
        Control frames are consumed by the\n                                interface
        layer and are not passed to\n                                any higher layer
        protocol.  See\n                                section 3.2.6.\n     ifInDiscards
        \              Refer to [RFC2863].\n     ifInErrors                 The sum
        for this interface of\n                                dot3StatsAlignmentErrors,\n
        \                               dot3StatsFCSErrors,\n                                dot3StatsFrameTooLongs,\n
        \                               and dot3StatsInternalMacReceiveErrors.\n     ifInUnknownProtos
        \         Refer to [RFC2863].\n     ifOutOctets                The number
        of octets transmitted in\n                                valid MAC frames
        on this interface,\n                                including the MAC header
        and FCS.  This\n                                does include the number of
        octets in\n                                valid MAC Control frames transmitted
        on\n                                this interface.  See section 3.2.5.\n
        \    ifOutUcastPkts             Refer to [RFC2863].  Note that this does\n
        \                               not include MAC Control frames, since\n                                MAC
        Control frames are generated by the\n                                interface
        layer, and are not passed from\n                                any higher
        layer protocol.  See section\n                                3.2.6.\n     ifOutDiscards
        \             Refer to [RFC2863].\n     ifOutErrors                The sum
        for this interface of:\n                                dot3StatsSQETestErrors,\n
        \                               dot3StatsLateCollisions,\n                                dot3StatsExcessiveCollisions,\n
        \                               dot3StatsInternalMacTransmitErrors and\n                                dot3StatsCarrierSenseErrors.\n
        \    ifName                     Locally-significant textual name for the\n
        \                               interface (e.g. lan0).\n     ifInMulticastPkts
        \         Refer to [RFC2863].  Note that this does\n                                not
        include MAC Control frames, since\n                                MAC Control
        frames are consumed by the\n                                interface layer
        and are not passed to\n                                any higher layer protocol.
        \ See section\n                                3.2.6.\n     ifInBroadcastPkts
        \         Refer to [RFC2863].  Note that this does\n                                not
        include MAC Control frames, since\n                                MAC Control
        frames are consumed by the\n                                interface layer,
        and are not passed to\n                                any higher layer protocol.
        \ See section\n                                3.2.6.\n     ifOutMulticastPkts
        \        Refer to [RFC2863].  Note that this does\n                                not
        include MAC Control frames, since\n                                MAC Control
        frames are generated by the\n                                interface layer,
        and are not passed from\n                                any higher layer
        protocol.  See section\n                                3.2.6.\n     ifOutBroadcastPkts
        \        Refer to [RFC2863].  Note that this does\n                                not
        include MAC Control frames, since\n                                MAC Control
        frames are generated by the\n                                interface layer,
        and are not passed from\n                                any higher layer
        protocol.  See section\n                                3.2.6.\n     ifHCInOctets
        \              64-bit versions of counters.  Required\n     ifHCOutOctets
        \             for ethernet-like interfaces that are\n                                capable
        of operating at 20 Mb/s or\n                                faster, even if
        the interface is\n                                currently operating at less
        than\n                                20 Mb/s.\n     ifHCInUcastPkts            64-bit
        versions of packet counters.\n     ifHCInMulticastPkts        Required for
        ethernet-like interfaces\n     ifHCInBroadcastPkts        that are capable
        of operating at\n     ifHCOutUcastPkts           640 Mb/s or faster, even
        if the\n     ifHCOutMulticastPkts       interface is currently operating at\n
        \    ifHCOutBroadcastPkts       less than 640 Mb/s.\n     ifLinkUpDownTrapEnable
        \    Refer to [RFC2863].  Default is\n                                'enabled'\n
        \    ifHighSpeed                Refer to section 3.2.8.\n     ifPromiscuousMode
        \         Refer to [RFC2863].\n     ifConnectorPresent         This will normally
        be 'true'. It will\n                                be 'false' in the case
        where this\n                                interface uses the WAN Interface\n
        \                               Sublayer.  See [RFC3637] for details.\n     ifAlias
        \                   Refer to [RFC2863].\n     ifCounterDiscontinuityTime Refer
        to [RFC2863].  Note that a\n                                discontinuity
        in the Interface MIB\n                                counters may also indicate
        a\n                                discontinuity in some or all of the\n                                counters
        in this MIB that are associated\n                                with that
        interface.\n     ifStackHigherLayer         Refer to section 3.2.1.\n     ifStackLowerLayer\n
        \    ifStackStatus\n     ifRcvAddressAddress        Refer to section 3.2.3.\n
        \    ifRcvAddressStatus\n     ifRcvAddressType\n"
      title: 3.2.10.  Specific Interface MIB Objects
    title: 3.2.  Relation to the Interfaces MIB
  - contents:
    - "3.3.  Relation to the 802.3 MAU MIB\n   Support for the mauModIfCompl3 compliance
      statement of the MAU-MIB\n   [RFC3636] is REQUIRED for Ethernet-like interfaces.
      \ This MIB is\n   needed in order to allow applications to determine the current
      MAU\n   type in use by the interface, and to control autonegotiation and\n   duplex
      mode for the interface.  Implementing this MIB module without\n   implementing
      the MAU-MIB would leave applications with no standard\n   way to determine the
      media type in use, and no standard way to\n   control the duplex mode of the
      interface.\n"
    title: 3.3.  Relation to the 802.3 MAU MIB
  - contents:
    - "3.4.  dot3StatsEtherChipSet\n   This document defines an object called dot3StatsEtherChipSet,
      which\n   is used to identify the MAC hardware used to communicate on an\n   interface.
      \ Previous versions of this document contained a number of\n   OID assignments
      for some existing Ethernet chipsets.  Maintaining\n   that list as part of this
      document has proven to be problematic, so\n   the OID assignments contained
      in previous versions of this document\n   have now been moved to a separate
      document [RFC2666].\n   The dot3StatsEtherChipSet object has now been deprecated.\n
      \  Implementation feedback indicates that this object is much more\n   useful
      in theory than in practice.  The object's utility in debugging\n   network problems
      in the field appears to be limited.  In those cases\n   where it may be useful,
      it is not sufficient, since it identifies\n   only the MAC chip, and not the
      PHY, PMD, or driver.  The\n   administrative overhead involved in maintaining
      a central registry of\n   chipset OIDs cannot be justified for an object whose
      usefulness is\n   questionable at best.\n   Implementations which continue to
      support this object for the purpose\n   of backwards compatibility may continue
      to use the values defined in\n   [RFC2666].  For chipsets not listed in [RFC2666],
      implementors that\n   wish to support this object and return a valid OBJECT
      IDENTIFIER\n   value may assign OBJECT IDENTIFIERS within that part of the\n
      \  registration tree delegated to individual enterprises.\n"
    title: 3.4.  dot3StatsEtherChipSet
  - contents:
    - "3.5.  Mapping of IEEE 802.3 Managed Objects\n   IEEE 802.3 Managed Object         Corresponding
      SNMP Object\n"
    - "oMacEntity\n .aMACID                          dot3StatsIndex or\n                                  IF-MIB
      - ifIndex\n .aFramesTransmittedOK            IF-MIB - ifOutUCastPkts +\n                                           ifOutMulticastPkts
      +\n                                           ifOutBroadcastPkts*\n .aSingleCollisionFrames
      \         dot3StatsSingleCollisionFrames\n .aMultipleCollisionFrames        dot3StatsMultipleCollisionFrames\n
      .aFramesReceivedOK               IF-MIB - ifInUcastPkts +\n                                           ifInMulticastPkts
      +\n                                           ifInBroadcastPkts*\n .aFrameCheckSequenceErrors
      \      dot3StatsFCSErrors\n .aAlignmentErrors                dot3StatsAlignmentErrors\n
      .aOctetsTransmittedOK            IF-MIB - ifOutOctets*\n .aFramesWithDeferredXmissions
      \   dot3StatsDeferredTransmissions\n .aLateCollisions                 dot3StatsLateCollisions\n
      .aFramesAbortedDueToXSColls      dot3StatsExcessiveCollisions\n .aFramesLostDueToIntMACXmitError
      dot3StatsInternalMacTransmitErrors\n .aCarrierSenseErrors             dot3StatsCarrierSenseErrors\n
      .aOctetsReceivedOK               IF-MIB - ifInOctets*\n .aFramesLostDueToIntMACRcvError
      \ dot3StatsInternalMacReceiveErrors\n .aPromiscuousStatus              IF-MIB
      - ifPromiscuousMode\n .aReadMulticastAddressList       IF-MIB - ifRcvAddressTable\n
      .aMulticastFramesXmittedOK       IF-MIB - ifOutMulticastPkts*\n .aBroadcastFramesXmittedOK
      \      IF-MIB - ifOutBroadcastPkts*\n .aMulticastFramesReceivedOK      IF-MIB
      - ifInMulticastPkts*\n .aBroadcastFramesReceivedOK      IF-MIB - ifInBroadcastPkts*\n
      .aFrameTooLongErrors             dot3StatsFrameTooLongs\n .aReadWriteMACAddress
      \           IF-MIB - ifPhysAddress\n .aCollisionFrames                dot3CollFrequencies\n
      .aDuplexStatus                   dot3StatsDuplexStatus\n .aRateControlAbility
      \            dot3StatsRateControlAbility\n .aRateControlStatus              dot3StatsRateControlStatus\n
      .acAddGroupAddress               IF-MIB - ifRcvAddressTable\n .acDeleteGroupAddress
      \           IF-MIB - ifRcvAddressTable\n .acExecuteSelfTest               dot3TestLoopBack\n"
    - "oPHYEntity\n .aPHYID                          dot3StatsIndex or\n                                  IF-MIB
      - ifIndex\n .aSQETestErrors                  dot3StatsSQETestErrors\n .aSymbolErrorDuringCarrier
      \      dot3StatsSymbolErrors\n"
    - "oMACControlEntity\n .aMACControlID                   dot3StatsIndex or\n                                  IF-MIB
      - ifIndex\n .aMACControlFunctionsSupported   dot3ControlFunctionsSupported and\n
      \                                 dot3ControlFunctionsEnabled\n .aUnsupportedOpcodesReceived
      \    dot3ControlInUnknownOpcodes\n"
    - "oPAUSEEntity\n .aPAUSEMACCtrlFramesTransmitted  dot3OutPauseFrames\n .aPAUSEMACCtrlFramesReceived
      \    dot3InPauseFrames\n   * Note that the octet counters in IF-MIB do not exactly
      match the\n   definition of the octet counters in IEEE 802.3.  See section 3.2.5\n
      \  for details.\n   Also note that the packet counters in the IF-MIB do not
      exactly match\n   the definition of the frame counters in IEEE 802.3.  See section\n
      \  3.2.6 for details.\n   The following IEEE 802.3 managed objects have been
      removed from this\n   MIB module as a result of implementation feedback:\n   oMacEntity\n
      \    .aFramesWithExcessiveDeferral\n     .aInRangeLengthErrors\n     .aOutOfRangeLengthField\n
      \    .aMACEnableStatus\n     .aTransmitEnableStatus\n     .aMulticastReceiveStatus\n
      \    .acInitializeMAC\n   Please see [RFC1369] for the detailed reasoning on
      why these objects\n   were removed.\n   In addition, the following IEEE 802.3
      managed objects have not been\n   included in this MIB for the following reasons.\n
      \  IEEE 802.3 Managed Object         Disposition\n   oMACEntity\n    .aMACCapabilities
      \               Can be derived from\n                                     MAU-MIB
      - ifMauTypeListBits\n     .aStretchRatio                  Implementation constant.\n
      \  oPHYEntity\n    .aPhyType                        Can be derived from\n                                     MAU-MIB
      - ifMauType\n    .aPhyTypeList                    Can be derived from\n                                     MAU-MIB
      - ifMauTypeListBits\n    .aMIIDetect                      Not considered useful.\n
      \   .aPhyAdminState                  Can already obtain interface\n                                     state
      from IF-MIB - ifAdminStatus\n                                     and MAU state
      from MAU-MIB -\n                                     ifMauStatus.  Providing
      an\n                                     additional state for the PHY\n                                     was
      not considered useful.\n    .acPhyAdminControl               Can already control
      interface\n                                     state from IF-MIB - ifAdminStatus\n
      \                                    and MAU state from MAU-MIB -\n                                     ifMauStatus.
      \ Providing separate\n                                     admin control of
      the PHY was not\n                                     considered useful.\n   oMACControlEntity\n
      \   .aMACControlFramesTransmitted    Can be determined by summing the\n                                     OutFrames
      counters for the\n                                     individual control functions\n
      \   .aMACControlFramesReceived       Can be determined by summing the\n                                     InFrames
      counters for the\n                                     individual control functions\n
      \  oPAUSEEntity\n    .aPAUSELinkDelayAllowance        Not considered useful.\n"
    title: 3.5.  Mapping of IEEE 802.3 Managed Objects
  title: 3.  Overview
- contents:
  - "4.  Definitions\n   EtherLike-MIB DEFINITIONS ::= BEGIN\n       IMPORTS\n           MODULE-IDENTITY,
    OBJECT-TYPE, OBJECT-IDENTITY,\n           Integer32, Counter32, Counter64, mib-2,
    transmission\n               FROM SNMPv2-SMI\n           MODULE-COMPLIANCE, OBJECT-GROUP\n
    \              FROM SNMPv2-CONF\n           TruthValue\n               FROM SNMPv2-TC\n
    \          ifIndex, InterfaceIndex\n               FROM IF-MIB;\n       etherMIB
    MODULE-IDENTITY\n           LAST-UPDATED \"200309190000Z\"  -- September 19, 2003\n
    \          ORGANIZATION \"IETF Ethernet Interfaces and Hub MIB\n                        Working
    Group\"\n           CONTACT-INFO\n               \"WG E-mail: hubmib@ietf.org\n
    \            To subscribe: hubmib-request@ietf.org\n                    Chair:
    Dan Romascanu\n                   Postal: Avaya Inc.\n                           Atidum
    Technology Park, Bldg. 3\n                           Tel Aviv 61131\n                           Israel\n
    \                     Tel: +972 3 645 8414\n                   E-mail: dromasca@avaya.com\n
    \                 Editor: John Flick\n                  Postal: Hewlett-Packard
    Company\n                          8000 Foothills Blvd. M/S 5557\n                          Roseville,
    CA 95747-5557\n                          USA\n                     Tel: +1 916
    785 4018\n                     Fax: +1 916 785 1199\n                  E-mail:
    johnf@rose.hp.com\"\n           DESCRIPTION \"The MIB module to describe generic
    objects for\n                       ethernet-like network interfaces.\n                       The
    following reference is used throughout this\n                       MIB module:\n
    \                      [IEEE 802.3 Std] refers to:\n                          IEEE
    Std 802.3, 2002 Edition: 'IEEE Standard\n                          for Information
    technology -\n                          Telecommunications and information exchange\n
    \                         between systems - Local and metropolitan\n                          area
    networks - Specific requirements -\n                          Part 3: Carrier
    sense multiple access with\n                          collision detection (CSMA/CD)
    access method\n                          and physical layer specifications', as\n
    \                         amended by IEEE Std 802.3ae-2002:\n                          'Amendment:
    Media Access Control (MAC)\n                          Parameters, Physical Layer,
    and Management\n                          Parameters for 10 Gb/s Operation', August,\n
    \                         2002.\n                       Of particular interest
    is Clause 30, '10 Mb/s,\n                       100 Mb/s, 1000 Mb/s, and 10 Gb/s
    Management'.\n                       Copyright (C) The Internet Society (2003).
    \ This\n                       version of this MIB module is part of RFC 3635;\n
    \                      see the RFC itself for full legal notices.\"\n           REVISION
    \   \"200309190000Z\"  -- September 19, 2003\n           DESCRIPTION \"Updated
    to include support for 10 Gb/sec\n                        interfaces.  This resulted
    in the following\n                        revisions:\n                        -
    Updated dot3StatsAlignmentErrors and\n                          dot3StatsSymbolErrors
    DESCRIPTIONs to\n                          reflect behaviour at 10 Gb/s\n                        -
    Added dot3StatsRateControlAbility and\n                          dot3RateControlStatus
    for management\n                          of the Rate Control function in 10 Gb/s\n
    \                         WAN applications\n                        - Added 64-bit
    versions of all counters\n                          that are used on high-speed
    ethernet\n                          interfaces\n                        - Added
    object groups to contain the new\n                          objects\n                        -
    Deprecated etherStatsBaseGroup and\n                          split into etherStatsBaseGroup2
    and\n                          etherStatsHalfDuplexGroup, so that\n                          interfaces
    which can only operate at\n                          full-duplex do not need to
    implement\n                          half-duplex-only statistics\n                        -
    Deprecated dot3Compliance and replaced\n                          it with dot3Compliance2,
    which includes\n                          the compliance information for the new\n
    \                         object groups\n                        In addition,
    the dot3Tests and dot3Errors\n                        object identities have been
    deprecated,\n                        since there is no longer a standard method\n
    \                       for using them.\n                        This version
    published as RFC 3635.\"\n           REVISION    \"199908240400Z\"  -- August
    24, 1999\n           DESCRIPTION \"Updated to include support for 1000 Mb/sec\n
    \                       interfaces and full-duplex interfaces.\n                        This
    version published as RFC 2665.\"\n           REVISION    \"199806032150Z\"  --
    June 3, 1998\n           DESCRIPTION \"Updated to include support for 100 Mb/sec\n
    \                       interfaces.\n                        This version published
    as RFC 2358.\"\n           REVISION    \"199402030400Z\"  -- February 3, 1994\n
    \          DESCRIPTION \"Initial version, published as RFC 1650.\"\n           ::=
    { mib-2 35 }\n       etherMIBObjects OBJECT IDENTIFIER ::= { etherMIB 1 }\n       dot3
    \   OBJECT IDENTIFIER ::= { transmission 7 }\n       -- the Ethernet-like Statistics
    group\n       dot3StatsTable OBJECT-TYPE\n           SYNTAX     SEQUENCE OF Dot3StatsEntry\n
    \          MAX-ACCESS not-accessible\n           STATUS     current\n           DESCRIPTION
    \"Statistics for a collection of ethernet-like\n                       interfaces
    attached to a particular system.\n                       There will be one row
    in this table for each\n                       ethernet-like interface in the
    system.\"\n           ::= { dot3 2 }\n       dot3StatsEntry OBJECT-TYPE\n           SYNTAX
    \    Dot3StatsEntry\n           MAX-ACCESS not-accessible\n           STATUS     current\n
    \          DESCRIPTION \"Statistics for a particular interface to an\n                       ethernet-like
    medium.\"\n           INDEX       { dot3StatsIndex }\n           ::= { dot3StatsTable
    1 }\n       Dot3StatsEntry ::=\n           SEQUENCE {\n               dot3StatsIndex
    \                     InterfaceIndex,\n               dot3StatsAlignmentErrors
    \           Counter32,\n               dot3StatsFCSErrors                  Counter32,\n
    \              dot3StatsSingleCollisionFrames      Counter32,\n               dot3StatsMultipleCollisionFrames
    \   Counter32,\n               dot3StatsSQETestErrors              Counter32,\n
    \              dot3StatsDeferredTransmissions      Counter32,\n               dot3StatsLateCollisions
    \            Counter32,\n               dot3StatsExcessiveCollisions        Counter32,\n
    \              dot3StatsInternalMacTransmitErrors  Counter32,\n               dot3StatsCarrierSenseErrors
    \        Counter32,\n               dot3StatsFrameTooLongs              Counter32,\n
    \              dot3StatsInternalMacReceiveErrors   Counter32,\n               dot3StatsEtherChipSet
    \              OBJECT IDENTIFIER,\n               dot3StatsSymbolErrors               Counter32,\n
    \              dot3StatsDuplexStatus               INTEGER,\n               dot3StatsRateControlAbility
    \        TruthValue,\n               dot3StatsRateControlStatus          INTEGER\n
    \          }\n       dot3StatsIndex OBJECT-TYPE\n           SYNTAX      InterfaceIndex\n
    \          MAX-ACCESS  read-only  -- read-only since originally an\n                                  --
    SMIv1 index\n           STATUS      current\n           DESCRIPTION \"An index
    value that uniquely identifies an\n                       interface to an ethernet-like
    medium.  The\n                       interface identified by a particular value
    of\n                       this index is the same interface as identified\n                       by
    the same value of ifIndex.\"\n           REFERENCE   \"RFC 2863, ifIndex\"\n           ::=
    { dot3StatsEntry 1 }\n       dot3StatsAlignmentErrors OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"A count of frames received on a particular\n                       interface
    that are not an integral number of\n                       octets in length and
    do not pass the FCS check.\n                       The count represented by an
    instance of this\n                       object is incremented when the alignmentError\n
    \                      status is returned by the MAC service to the\n                       LLC
    (or other MAC user). Received frames for\n                       which multiple
    error conditions pertain are,\n                       according to the conventions
    of IEEE 802.3\n                       Layer Management, counted exclusively according\n
    \                      to the error status presented to the LLC.\n                       This
    counter does not increment for group\n                       encoding schemes
    greater than 4 bits per group.\n                       For interfaces operating
    at 10 Gb/s, this\n                       counter can roll over in less than 5
    minutes if\n                       it is incrementing at its maximum rate.  Since\n
    \                      that amount of time could be less than a\n                       management
    station's poll cycle time, in order\n                       to avoid a loss of
    information, a management\n                       station is advised to poll the\n
    \                      dot3HCStatsAlignmentErrors object for 10 Gb/s\n                       or
    faster interfaces.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.1.1.7,\n                       aAlignmentErrors\"\n           ::= { dot3StatsEntry
    2 }\n       dot3StatsFCSErrors OBJECT-TYPE\n           SYNTAX      Counter32\n
    \          MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION
    \"A count of frames received on a particular\n                       interface
    that are an integral number of octets\n                       in length but do
    not pass the FCS check.  This\n                       count does not include frames
    received with\n                       frame-too-long or frame-too-short error.\n
    \                      The count represented by an instance of this\n                       object
    is incremented when the frameCheckError\n                       status is returned
    by the MAC service to the\n                       LLC (or other MAC user). Received
    frames for\n                       which multiple error conditions pertain are,\n
    \                      according to the conventions of IEEE 802.3\n                       Layer
    Management, counted exclusively according\n                       to the error
    status presented to the LLC.\n                       Note:  Coding errors detected
    by the physical\n                       layer for speeds above 10 Mb/s will cause
    the\n                       frame to fail the FCS check.\n                       For
    interfaces operating at 10 Gb/s, this\n                       counter can roll
    over in less than 5 minutes if\n                       it is incrementing at its
    maximum rate.  Since\n                       that amount of time could be less
    than a\n                       management station's poll cycle time, in order\n
    \                      to avoid a loss of information, a management\n                       station
    is advised to poll the\n                       dot3HCStatsFCSErrors object for
    10 Gb/s or\n                       faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.6,\n                       aFrameCheckSequenceErrors.\"\n
    \          ::= { dot3StatsEntry 3 }\n       dot3StatsSingleCollisionFrames OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames that are involved in
    a single\n                       collision, and are subsequently transmitted\n
    \                      successfully.\n                       A frame that is counted
    by an instance of this\n                       object is also counted by the corresponding\n
    \                      instance of either the ifOutUcastPkts,\n                       ifOutMulticastPkts,
    or ifOutBroadcastPkts,\n                       and is not counted by the corresponding\n
    \                      instance of the dot3StatsMultipleCollisionFrames\n                       object.\n
    \                      This counter does not increment when the\n                       interface
    is operating in full-duplex mode.\n                       Discontinuities in the
    value of this counter can\n                       occur at re-initialization of
    the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.3,\n                       aSingleCollisionFrames.\"\n
    \          ::= { dot3StatsEntry 4 }\n       dot3StatsMultipleCollisionFrames OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames that are involved in
    more\n                       than one collision and are subsequently\n                       transmitted
    successfully.\n                       A frame that is counted by an instance of
    this\n                       object is also counted by the corresponding\n                       instance
    of either the ifOutUcastPkts,\n                       ifOutMulticastPkts, or ifOutBroadcastPkts,\n
    \                      and is not counted by the corresponding\n                       instance
    of the dot3StatsSingleCollisionFrames\n                       object.\n                       This
    counter does not increment when the\n                       interface is operating
    in full-duplex mode.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.1.1.4,\n                       aMultipleCollisionFrames.\"\n           ::=
    { dot3StatsEntry 5 }\n       dot3StatsSQETestErrors OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"A count of times that the SQE TEST ERROR\n                       is
    received on a particular interface. The\n                       SQE TEST ERROR
    is set in accordance with the\n                       rules for verification of
    the SQE detection\n                       mechanism in the PLS Carrier Sense Function
    as\n                       described in IEEE Std. 802.3, 2000 Edition,\n                       section
    7.2.4.6.\n                       This counter does not increment on interfaces\n
    \                      operating at speeds greater than 10 Mb/s, or on\n                       interfaces
    operating in full-duplex mode.\n                       Discontinuities in the
    value of this counter can\n                       occur at re-initialization of
    the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 7.2.4.6, also 30.3.2.1.4,\n                       aSQETestErrors.\"\n
    \          ::= { dot3StatsEntry 6 }\n       dot3StatsDeferredTransmissions OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames for which the first\n
    \                      transmission attempt on a particular interface\n                       is
    delayed because the medium is busy.\n                       The count represented
    by an instance of this\n                       object does not include frames
    involved in\n                       collisions.\n                       This counter
    does not increment when the\n                       interface is operating in
    full-duplex mode.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.1.1.9,\n                       aFramesWithDeferredXmissions.\"\n           ::=
    { dot3StatsEntry 7 }\n       dot3StatsLateCollisions OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"The number of times that a collision is\n                       detected
    on a particular interface later than\n                       one slotTime into
    the transmission of a packet.\n                       A (late) collision included
    in a count\n                       represented by an instance of this object is\n
    \                      also considered as a (generic) collision for\n                       purposes
    of other collision-related\n                       statistics.\n                       This
    counter does not increment when the\n                       interface is operating
    in full-duplex mode.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.1.1.10,\n                       aLateCollisions.\"\n           ::= { dot3StatsEntry
    8 }\n       dot3StatsExcessiveCollisions OBJECT-TYPE\n           SYNTAX      Counter32\n
    \          MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION
    \"A count of frames for which transmission on a\n                       particular
    interface fails due to excessive\n                       collisions.\n                       This
    counter does not increment when the\n                       interface is operating
    in full-duplex mode.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.1.1.11,\n                       aFramesAbortedDueToXSColls.\"\n           ::=
    { dot3StatsEntry 9 }\n       dot3StatsInternalMacTransmitErrors OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames for which transmission
    on a\n                       particular interface fails due to an internal\n                       MAC
    sublayer transmit error. A frame is only\n                       counted by an
    instance of this object if it is\n                       not counted by the corresponding
    instance of\n                       either the dot3StatsLateCollisions object,
    the\n                       dot3StatsExcessiveCollisions object, or the\n                       dot3StatsCarrierSenseErrors
    object.\n                       The precise meaning of the count represented by\n
    \                      an instance of this object is implementation-\n                       specific.
    \ In particular, an instance of this\n                       object may represent
    a count of transmission\n                       errors on a particular interface
    that are not\n                       otherwise counted.\n                       For
    interfaces operating at 10 Gb/s, this\n                       counter can roll
    over in less than 5 minutes if\n                       it is incrementing at its
    maximum rate.  Since\n                       that amount of time could be less
    than a\n                       management station's poll cycle time, in order\n
    \                      to avoid a loss of information, a management\n                       station
    is advised to poll the\n                       dot3HCStatsInternalMacTransmitErrors
    object for\n                       10 Gb/s or faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.12,\n                       aFramesLostDueToIntMACXmitError.\"\n
    \          ::= { dot3StatsEntry 10 }\n       dot3StatsCarrierSenseErrors OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"The number of times that the carrier sense\n
    \                      condition was lost or never asserted when\n                       attempting
    to transmit a frame on a particular\n                       interface.\n                       The
    count represented by an instance of this\n                       object is incremented
    at most once per\n                       transmission attempt, even if the carrier
    sense\n                       condition fluctuates during a transmission\n                       attempt.\n
    \                      This counter does not increment when the\n                       interface
    is operating in full-duplex mode.\n                       Discontinuities in the
    value of this counter can\n                       occur at re-initialization of
    the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.13,\n                       aCarrierSenseErrors.\"\n
    \          ::= { dot3StatsEntry 11 }\n       -- { dot3StatsEntry 12 } is not assigned\n
    \      dot3StatsFrameTooLongs OBJECT-TYPE\n           SYNTAX      Counter32\n
    \          MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION
    \"A count of frames received on a particular\n                       interface
    that exceed the maximum permitted\n                       frame size.\n                       The
    count represented by an instance of this\n                       object is incremented
    when the frameTooLong\n                       status is returned by the MAC service
    to the\n                       LLC (or other MAC user). Received frames for\n
    \                      which multiple error conditions pertain are,\n                       according
    to the conventions of IEEE 802.3\n                       Layer Management, counted
    exclusively according\n                       to the error status presented to
    the LLC.\n                       For interfaces operating at 10 Gb/s, this\n                       counter
    can roll over in less than 80 minutes if\n                       it is incrementing
    at its maximum rate.  Since\n                       that amount of time could
    be less than a\n                       management station's poll cycle time, in
    order\n                       to avoid a loss of information, a management\n                       station
    is advised to poll the\n                       dot3HCStatsFrameTooLongs object
    for 10 Gb/s\n                       or faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.25,\n                       aFrameTooLongErrors.\"\n
    \          ::= { dot3StatsEntry 13 }\n       -- { dot3StatsEntry 14 } is not assigned\n
    \      -- { dot3StatsEntry 15 } is not assigned\n       dot3StatsInternalMacReceiveErrors
    OBJECT-TYPE\n           SYNTAX      Counter32\n           MAX-ACCESS  read-only\n
    \          STATUS      current\n           DESCRIPTION \"A count of frames for
    which reception on a\n                       particular interface fails due to
    an internal\n                       MAC sublayer receive error. A frame is only\n
    \                      counted by an instance of this object if it is\n                       not
    counted by the corresponding instance of\n                       either the dot3StatsFrameTooLongs
    object, the\n                       dot3StatsAlignmentErrors object, or the\n
    \                      dot3StatsFCSErrors object.\n                       The
    precise meaning of the count represented by\n                       an instance
    of this object is implementation-\n                       specific.  In particular,
    an instance of this\n                       object may represent a count of receive
    errors\n                       on a particular interface that are not\n                       otherwise
    counted.\n                       For interfaces operating at 10 Gb/s, this\n                       counter
    can roll over in less than 5 minutes if\n                       it is incrementing
    at its maximum rate.  Since\n                       that amount of time could
    be less than a\n                       management station's poll cycle time, in
    order\n                       to avoid a loss of information, a management\n                       station
    is advised to poll the\n                       dot3HCStatsInternalMacReceiveErrors
    object for\n                       10 Gb/s or faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.15,\n                       aFramesLostDueToIntMACRcvError.\"\n
    \          ::= { dot3StatsEntry 16 }\n       dot3StatsEtherChipSet OBJECT-TYPE\n
    \          SYNTAX      OBJECT IDENTIFIER\n           MAX-ACCESS  read-only\n           STATUS
    \     deprecated\n           DESCRIPTION \"******** THIS OBJECT IS DEPRECATED
    ********\n                       This object contains an OBJECT IDENTIFIER\n                       which
    identifies the chipset used to\n                       realize the interface.
    Ethernet-like\n                       interfaces are typically built out of\n
    \                      several different chips. The MIB implementor\n                       is
    presented with a decision of which chip\n                       to identify via
    this object. The implementor\n                       should identify the chip
    which is usually\n                       called the Medium Access Control chip.\n
    \                      If no such chip is easily identifiable,\n                       the
    implementor should identify the chip\n                       which actually gathers
    the transmit\n                       and receive statistics and error\n                       indications.
    This would allow a\n                       manager station to correlate the\n
    \                      statistics and the chip generating\n                       them,
    giving it the ability to take\n                       into account any known anomalies\n
    \                      in the chip.\n                       This object has been
    deprecated.  Implementation\n                       feedback indicates that it
    is of limited use for\n                       debugging network problems in the
    field, and\n                       the administrative overhead involved in\n                       maintaining
    a registry of chipset OIDs is not\n                       justified.\"\n           ::=
    { dot3StatsEntry 17 }\n       dot3StatsSymbolErrors OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"For an interface operating at 100 Mb/s, the\n                       number
    of times there was an invalid data symbol\n                       when a valid
    carrier was present.\n                       For an interface operating in half-duplex
    mode\n                       at 1000 Mb/s, the number of times the receiving\n
    \                      media is non-idle (a carrier event) for a period\n                       of
    time equal to or greater than slotTime, and\n                       during which
    there was at least one occurrence\n                       of an event that causes
    the PHY to indicate\n                       'Data reception error' or 'carrier
    extend error'\n                       on the GMII.\n                       For
    an interface operating in full-duplex mode\n                       at 1000 Mb/s,
    the number of times the receiving\n                       media is non-idle (a
    carrier event) for a period\n                       of time equal to or greater
    than minFrameSize,\n                       and during which there was at least
    one\n                       occurrence of an event that causes the PHY to\n                       indicate
    'Data reception error' on the GMII.\n                       For an interface operating
    at 10 Gb/s, the\n                       number of times the receiving media is
    non-idle\n                       (a carrier event) for a period of time equal
    to\n                       or greater than minFrameSize, and during which\n                       there
    was at least one occurrence of an event\n                       that causes the
    PHY to indicate 'Receive Error'\n                       on the XGMII.\n                       The
    count represented by an instance of this\n                       object is incremented
    at most once per carrier\n                       event, even if multiple symbol
    errors occur\n                       during the carrier event.  This count does\n
    \                      not increment if a collision is present.\n                       This
    counter does not increment when the\n                       interface is operating
    at 10 Mb/s.\n                       For interfaces operating at 10 Gb/s, this\n
    \                      counter can roll over in less than 5 minutes if\n                       it
    is incrementing at its maximum rate.  Since\n                       that amount
    of time could be less than a\n                       management station's poll
    cycle time, in order\n                       to avoid a loss of information, a
    management\n                       station is advised to poll the\n                       dot3HCStatsSymbolErrors
    object for 10 Gb/s\n                       or faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.2.1.5,\n                       aSymbolErrorDuringCarrier.\"\n
    \          ::= { dot3StatsEntry 18 }\n       dot3StatsDuplexStatus OBJECT-TYPE\n
    \          SYNTAX      INTEGER {\n                           unknown(1),\n                           halfDuplex(2),\n
    \                          fullDuplex(3)\n                       }\n           MAX-ACCESS
    \ read-only\n           STATUS      current\n           DESCRIPTION \"The current
    mode of operation of the MAC\n                       entity.  'unknown' indicates
    that the current\n                       duplex mode could not be determined.\n
    \                      Management control of the duplex mode is\n                       accomplished
    through the MAU MIB.  When\n                       an interface does not support
    autonegotiation,\n                       or when autonegotiation is not enabled,
    the\n                       duplex mode is controlled using\n                       ifMauDefaultType.
    \ When autonegotiation is\n                       supported and enabled, duplex
    mode is controlled\n                       using ifMauAutoNegAdvertisedBits.  In
    either\n                       case, the currently operating duplex mode is\n
    \                      reflected both in this object and in ifMauType.\n                       Note
    that this object provides redundant\n                       information with ifMauType.
    \ Normally, redundant\n                       objects are discouraged.  However,
    in this\n                       instance, it allows a management application to\n
    \                      determine the duplex status of an interface\n                       without
    having to know every possible value of\n                       ifMauType.  This
    was felt to be sufficiently\n                       valuable to justify the redundancy.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.32,\n                       aDuplexStatus.\"\n
    \          ::= { dot3StatsEntry 19 }\n       dot3StatsRateControlAbility OBJECT-TYPE\n
    \          SYNTAX      TruthValue\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"'true' for interfaces operating at speeds
    above\n                       1000 Mb/s that support Rate Control through\n                       lowering
    the average data rate of the MAC\n                       sublayer, with frame
    granularity, and 'false'\n                       otherwise.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.33,\n                       aRateControlAbility.\"\n
    \          ::= { dot3StatsEntry 20 }\n       dot3StatsRateControlStatus OBJECT-TYPE\n
    \          SYNTAX      INTEGER {\n                           rateControlOff(1),\n
    \                          rateControlOn(2),\n                           unknown(3)\n
    \                      }\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"The current Rate Control mode of operation
    of\n                       the MAC sublayer of this interface.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.34,\n                       aRateControlStatus.\"\n
    \          ::= { dot3StatsEntry 21 }\n       -- the Ethernet-like Collision Statistics
    group\n       -- Implementation of this group is optional; it is appropriate\n
    \      -- for all systems which have the necessary metering\n       dot3CollTable
    OBJECT-TYPE\n           SYNTAX      SEQUENCE OF Dot3CollEntry\n           MAX-ACCESS
    \ not-accessible\n           STATUS      current\n           DESCRIPTION \"A collection
    of collision histograms for a\n                       particular set of interfaces.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.30,\n                       aCollisionFrames.\"\n
    \          ::= { dot3 5 }\n       dot3CollEntry OBJECT-TYPE\n           SYNTAX
    \     Dot3CollEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"A cell in the histogram of per-frame\n
    \                      collisions for a particular interface.  An\n                       instance
    of this object represents the\n                       frequency of individual
    MAC frames for which\n                       the transmission (successful or otherwise)
    on a\n                       particular interface is accompanied by a\n                       particular
    number of media collisions.\"\n           INDEX       { ifIndex, dot3CollCount
    }\n           ::= { dot3CollTable 1 }\n       Dot3CollEntry ::=\n           SEQUENCE
    {\n               dot3CollCount        Integer32,\n               dot3CollFrequencies
    \ Counter32\n           }\n       -- { dot3CollEntry 1 } is no longer in use\n
    \      dot3CollCount OBJECT-TYPE\n           SYNTAX      Integer32 (1..16)\n           MAX-ACCESS
    \ not-accessible\n           STATUS      current\n           DESCRIPTION \"The
    number of per-frame media collisions for\n                       which a particular
    collision histogram cell\n                       represents the frequency on a
    particular\n                       interface.\"\n           ::= { dot3CollEntry
    2 }\n       dot3CollFrequencies OBJECT-TYPE\n           SYNTAX      Counter32\n
    \          MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION
    \"A count of individual MAC frames for which the\n                       transmission
    (successful or otherwise) on a\n                       particular interface occurs
    after the\n                       frame has experienced exactly the number\n                       of
    collisions in the associated\n                       dot3CollCount object.\n                       For
    example, a frame which is transmitted\n                       on interface 77
    after experiencing\n                       exactly 4 collisions would be indicated\n
    \                      by incrementing only dot3CollFrequencies.77.4.\n                       No
    other instance of dot3CollFrequencies would\n                       be incremented
    in this example.\n                       This counter does not increment when
    the\n                       interface is operating in full-duplex mode.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           ::=
    { dot3CollEntry 3 }\n       dot3ControlTable OBJECT-TYPE\n           SYNTAX      SEQUENCE
    OF Dot3ControlEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"A table of descriptive and status information\n
    \                      about the MAC Control sublayer on the\n                       ethernet-like
    interfaces attached to a\n                       particular system.  There will
    be one row in\n                       this table for each ethernet-like interface
    in\n                       the system which implements the MAC Control\n                       sublayer.
    \ If some, but not all, of the\n                       ethernet-like interfaces
    in the system implement\n                       the MAC Control sublayer, there
    will be fewer\n                       rows in this table than in the dot3StatsTable.\"\n
    \          ::= { dot3 9 }\n       dot3ControlEntry OBJECT-TYPE\n           SYNTAX
    \     Dot3ControlEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"An entry in the table, containing information\n
    \                      about the MAC Control sublayer on a single\n                       ethernet-like
    interface.\"\n           INDEX       { dot3StatsIndex }\n           ::= { dot3ControlTable
    1 }\n       Dot3ControlEntry ::=\n           SEQUENCE {\n               dot3ControlFunctionsSupported
    \      BITS,\n               dot3ControlInUnknownOpcodes         Counter32,\n
    \              dot3HCControlInUnknownOpcodes       Counter64\n           }\n       dot3ControlFunctionsSupported
    OBJECT-TYPE\n           SYNTAX      BITS {\n                           pause(0)
    \  -- 802.3 flow control\n                       }\n           MAX-ACCESS  read-only\n
    \          STATUS      current\n           DESCRIPTION \"A list of the possible
    MAC Control functions\n                       implemented for this interface.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.3.2,\n                       aMACControlFunctionsSupported.\"\n
    \          ::= { dot3ControlEntry 1 }\n       dot3ControlInUnknownOpcodes OBJECT-TYPE\n
    \          SYNTAX      Counter32\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of MAC Control frames received
    on this\n                       interface that contain an opcode that is not\n
    \                      supported by this device.\n                       For interfaces
    operating at 10 Gb/s, this\n                       counter can roll over in less
    than 5 minutes if\n                       it is incrementing at its maximum rate.
    \ Since\n                       that amount of time could be less than a\n                       management
    station's poll cycle time, in order\n                       to avoid a loss of
    information, a management\n                       station is advised to poll the\n
    \                      dot3HCControlInUnknownOpcodes object for 10 Gb/s\n                       or
    faster interfaces.\n                       Discontinuities in the value of this
    counter can\n                       occur at re-initialization of the management\n
    \                      system, and at other times as indicated by the\n                       value
    of ifCounterDiscontinuityTime.\"\n           REFERENCE   \"[IEEE 802.3 Std.],
    30.3.3.5,\n                       aUnsupportedOpcodesReceived\"\n           ::=
    { dot3ControlEntry 2 }\n       dot3HCControlInUnknownOpcodes OBJECT-TYPE\n           SYNTAX
    \     Counter64\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"A count of MAC Control frames received on this\n                       interface
    that contain an opcode that is not\n                       supported by this device.\n
    \                      This counter is a 64 bit version of\n                       dot3ControlInUnknownOpcodes.
    \ It should be used\n                       on interfaces operating at 10 Gb/s
    or faster.\n                       Discontinuities in the value of this counter
    can\n                       occur at re-initialization of the management\n                       system,
    and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.3.5,\n                       aUnsupportedOpcodesReceived\"\n
    \          ::= { dot3ControlEntry 3 }\n       dot3PauseTable OBJECT-TYPE\n           SYNTAX
    \     SEQUENCE OF Dot3PauseEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"A table of descriptive and status information\n
    \                      about the MAC Control PAUSE function on the\n                       ethernet-like
    interfaces attached to a\n                       particular system. There will
    be one row in\n                       this table for each ethernet-like interface
    in\n                       the system which supports the MAC Control PAUSE\n                       function
    (i.e., the 'pause' bit in the\n                       corresponding instance of\n
    \                      dot3ControlFunctionsSupported is set).  If some,\n                       but
    not all, of the ethernet-like interfaces in\n                       the system
    implement the MAC Control PAUSE\n                       function (for example,
    if some interfaces only\n                       support half-duplex), there will
    be fewer rows\n                       in this table than in the dot3StatsTable.\"\n
    \          ::= { dot3 10 }\n       dot3PauseEntry OBJECT-TYPE\n           SYNTAX
    \     Dot3PauseEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"An entry in the table, containing information\n
    \                      about the MAC Control PAUSE function on a single\n                       ethernet-like
    interface.\"\n           INDEX       { dot3StatsIndex }\n           ::= { dot3PauseTable
    1 }\n       Dot3PauseEntry ::=\n           SEQUENCE {\n               dot3PauseAdminMode
    \                 INTEGER,\n               dot3PauseOperMode                   INTEGER,\n
    \              dot3InPauseFrames                   Counter32,\n               dot3OutPauseFrames
    \                 Counter32,\n               dot3HCInPauseFrames                 Counter64,\n
    \              dot3HCOutPauseFrames                Counter64\n           }\n       dot3PauseAdminMode
    OBJECT-TYPE\n           SYNTAX      INTEGER {\n                           disabled(1),\n
    \                          enabledXmit(2),\n                           enabledRcv(3),\n
    \                          enabledXmitAndRcv(4)\n                       }\n           MAX-ACCESS
    \ read-write\n           STATUS      current\n           DESCRIPTION \"This object
    is used to configure the default\n                       administrative PAUSE
    mode for this interface.\n                       This object represents the\n
    \                      administratively-configured PAUSE mode for this\n                       interface.
    \ If auto-negotiation is not enabled\n                       or is not implemented
    for the active MAU\n                       attached to this interface, the value
    of this\n                       object determines the operational PAUSE mode\n
    \                      of the interface whenever it is operating in\n                       full-duplex
    mode.  In this case, a set to this\n                       object will force the
    interface into the\n                       specified mode.\n                       If
    auto-negotiation is implemented and enabled\n                       for the MAU
    attached to this interface, the\n                       PAUSE mode for this interface
    is determined by\n                       auto-negotiation, and the value of this
    object\n                       denotes the mode to which the interface will\n
    \                      automatically revert if/when auto-negotiation is\n                       later
    disabled.  Note that when auto-negotiation\n                       is running,
    administrative control of the PAUSE\n                       mode may be accomplished
    using the\n                       ifMauAutoNegCapAdvertisedBits object in the\n
    \                      MAU-MIB.\n                       Note that the value of
    this object is ignored\n                       when the interface is not operating
    in\n                       full-duplex mode.\n                       An attempt
    to set this object to\n                       'enabledXmit(2)' or 'enabledRcv(3)'
    will fail\n                       on interfaces that do not support operation\n
    \                      at greater than 100 Mb/s.\"\n           ::= { dot3PauseEntry
    1 }\n       dot3PauseOperMode OBJECT-TYPE\n           SYNTAX      INTEGER {\n
    \                          disabled(1),\n                           enabledXmit(2),\n
    \                          enabledRcv(3),\n                           enabledXmitAndRcv(4)\n
    \                      }\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"This object reflects the PAUSE mode currently\n
    \                      in use on this interface, as determined by\n                       either
    (1) the result of the auto-negotiation\n                       function or (2)
    if auto-negotiation is not\n                       enabled or is not implemented
    for the active MAU\n                       attached to this interface, by the
    value of\n                       dot3PauseAdminMode.  Interfaces operating at\n
    \                      100 Mb/s or less will never return\n                       'enabledXmit(2)'
    or 'enabledRcv(3)'.  Interfaces\n                       operating in half-duplex
    mode will always return\n                       'disabled(1)'.  Interfaces on
    which\n                       auto-negotiation is enabled but not yet\n                       completed
    should return the value\n                       'disabled(1)'.\"\n           ::=
    { dot3PauseEntry 2 }\n       dot3InPauseFrames OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"A count of MAC Control frames received on this\n                       interface
    with an opcode indicating the PAUSE\n                       operation.\n                       This
    counter does not increment when the\n                       interface is operating
    in half-duplex mode.\n                       For interfaces operating at 10 Gb/s,
    this\n                       counter can roll over in less than 5 minutes if\n
    \                      it is incrementing at its maximum rate.  Since\n                       that
    amount of time could be less than a\n                       management station's
    poll cycle time, in order\n                       to avoid a loss of information,
    a management\n                       station is advised to poll the\n                       dot3HCInPauseFrames
    object for 10 Gb/s or\n                       faster interfaces.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.4.3,\n                       aPAUSEMACCtrlFramesReceived.\"\n
    \          ::= { dot3PauseEntry 3 }\n       dot3OutPauseFrames OBJECT-TYPE\n           SYNTAX
    \     Counter32\n           MAX-ACCESS  read-only\n           STATUS      current\n
    \          DESCRIPTION \"A count of MAC Control frames transmitted on\n                       this
    interface with an opcode indicating the\n                       PAUSE operation.\n
    \                      This counter does not increment when the\n                       interface
    is operating in half-duplex mode.\n                       For interfaces operating
    at 10 Gb/s, this\n                       counter can roll over in less than 5
    minutes if\n                       it is incrementing at its maximum rate.  Since\n
    \                      that amount of time could be less than a\n                       management
    station's poll cycle time, in order\n                       to avoid a loss of
    information, a management\n                       station is advised to poll the\n
    \                      dot3HCOutPauseFrames object for 10 Gb/s or\n                       faster
    interfaces.\n                       Discontinuities in the value of this counter
    can\n                       occur at re-initialization of the management\n                       system,
    and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.4.2,\n                       aPAUSEMACCtrlFramesTransmitted.\"\n
    \          ::= { dot3PauseEntry 4 }\n       dot3HCInPauseFrames OBJECT-TYPE\n
    \          SYNTAX      Counter64\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of MAC Control frames received
    on this\n                       interface with an opcode indicating the PAUSE\n
    \                      operation.\n                       This counter does not
    increment when the\n                       interface is operating in half-duplex
    mode.\n                       This counter is a 64 bit version of\n                       dot3InPauseFrames.
    \ It should be used on\n                       interfaces operating at 10 Gb/s
    or faster.\n                       Discontinuities in the value of this counter
    can\n                       occur at re-initialization of the management\n                       system,
    and at other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.4.3,\n                       aPAUSEMACCtrlFramesReceived.\"\n
    \          ::= { dot3PauseEntry 5 }\n       dot3HCOutPauseFrames OBJECT-TYPE\n
    \          SYNTAX      Counter64\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of MAC Control frames transmitted
    on\n                       this interface with an opcode indicating the\n                       PAUSE
    operation.\n                       This counter does not increment when the\n
    \                      interface is operating in half-duplex mode.\n                       This
    counter is a 64 bit version of\n                       dot3OutPauseFrames.  It
    should be used on\n                       interfaces operating at 10 Gb/s or faster.\n
    \                      Discontinuities in the value of this counter can\n                       occur
    at re-initialization of the management\n                       system, and at
    other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.4.2,\n                       aPAUSEMACCtrlFramesTransmitted.\"\n
    \          ::= { dot3PauseEntry 6 }\n       dot3HCStatsTable OBJECT-TYPE\n           SYNTAX
    \     SEQUENCE OF Dot3HCStatsEntry\n           MAX-ACCESS  not-accessible\n           STATUS
    \     current\n           DESCRIPTION \"A table containing 64-bit versions of
    error\n                       counters from the dot3StatsTable.  The 32-bit\n
    \                      versions of these counters may roll over quite\n                       quickly
    on higher speed ethernet interfaces.\n                       The counters that
    have 64-bit versions in this\n                       table are the counters that
    apply to full-duplex\n                       interfaces, since 10 Gb/s and faster\n
    \                      ethernet-like interfaces do not support\n                       half-duplex,
    and very few 1000 Mb/s\n                       ethernet-like interfaces support
    half-duplex.\n                       Entries in this table are recommended for\n
    \                      interfaces capable of operating at 1000 Mb/s or\n                       faster,
    and are required for interfaces capable\n                       of operating at
    10 Gb/s or faster.  Lower speed\n                       ethernet-like interfaces
    do not need entries in\n                       this table, in which case there
    may be fewer\n                       entries in this table than in the\n                       dot3StatsTable.
    However, implementations\n                       containing interfaces with a
    mix of speeds may\n                       choose to implement entries in this
    table for\n                       all ethernet-like interfaces.\"\n           ::=
    { dot3 11 }\n       dot3HCStatsEntry OBJECT-TYPE\n           SYNTAX      Dot3HCStatsEntry\n
    \          MAX-ACCESS  not-accessible\n           STATUS      current\n           DESCRIPTION
    \"An entry containing 64-bit statistics for a\n                       single ethernet-like
    interface.\"\n           INDEX       { dot3StatsIndex }\n           ::= { dot3HCStatsTable
    1 }\n       Dot3HCStatsEntry ::=\n           SEQUENCE {\n               dot3HCStatsAlignmentErrors
    \          Counter64,\n               dot3HCStatsFCSErrors                 Counter64,\n
    \              dot3HCStatsInternalMacTransmitErrors Counter64,\n               dot3HCStatsFrameTooLongs
    \            Counter64,\n               dot3HCStatsInternalMacReceiveErrors  Counter64,\n
    \              dot3HCStatsSymbolErrors              Counter64\n           }\n
    \      dot3HCStatsAlignmentErrors OBJECT-TYPE\n           SYNTAX      Counter64\n
    \          MAX-ACCESS  read-only\n           STATUS      current\n           DESCRIPTION
    \"A count of frames received on a particular\n                       interface
    that are not an integral number of\n                       octets in length and
    do not pass the FCS check.\n                       The count represented by an
    instance of this\n                       object is incremented when the alignmentError\n
    \                      status is returned by the MAC service to the\n                       LLC
    (or other MAC user). Received frames for\n                       which multiple
    error conditions pertain are,\n                       according to the conventions
    of IEEE 802.3\n                       Layer Management, counted exclusively according\n
    \                      to the error status presented to the LLC.\n                       This
    counter does not increment for group\n                       encoding schemes
    greater than 4 bits per group.\n                       This counter is a 64 bit
    version of\n                       dot3StatsAlignmentErrors.  It should be used\n
    \                      on interfaces operating at 10 Gb/s or faster.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.7,\n                       aAlignmentErrors\"\n
    \          ::= { dot3HCStatsEntry 1 }\n       dot3HCStatsFCSErrors OBJECT-TYPE\n
    \          SYNTAX      Counter64\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames received on a particular\n
    \                      interface that are an integral number of octets\n                       in
    length but do not pass the FCS check.  This\n                       count does
    not include frames received with\n                       frame-too-long or frame-too-short
    error.\n                       The count represented by an instance of this\n
    \                      object is incremented when the frameCheckError\n                       status
    is returned by the MAC service to the\n                       LLC (or other MAC
    user). Received frames for\n                       which multiple error conditions
    pertain are,\n                       according to the conventions of IEEE 802.3\n
    \                      Layer Management, counted exclusively according\n                       to
    the error status presented to the LLC.\n                       Note:  Coding errors
    detected by the physical\n                       layer for speeds above 10 Mb/s
    will cause the\n                       frame to fail the FCS check.\n                       This
    counter is a 64 bit version of\n                       dot3StatsFCSErrors.  It
    should be used on\n                       interfaces operating at 10 Gb/s or faster.\n
    \                      Discontinuities in the value of this counter can\n                       occur
    at re-initialization of the management\n                       system, and at
    other times as indicated by the\n                       value of ifCounterDiscontinuityTime.\"\n
    \          REFERENCE   \"[IEEE 802.3 Std.], 30.3.1.1.6,\n                       aFrameCheckSequenceErrors.\"\n
    \          ::= { dot3HCStatsEntry 2 }\n       dot3HCStatsInternalMacTransmitErrors
    OBJECT-TYPE\n           SYNTAX      Counter64\n           MAX-ACCESS  read-only\n
    \          STATUS      current\n           DESCRIPTION \"A count of frames for
    which transmission on a\n                       particular interface fails due
    to an internal\n                       MAC sublayer transmit error. A frame is
    only\n                       counted by an instance of this object if it is\n
    \                      not counted by the corresponding instance of\n                       either
    the dot3StatsLateCollisions object, the\n                       dot3StatsExcessiveCollisions
    object, or the\n                       dot3StatsCarrierSenseErrors object.\n                       The
    precise meaning of the count represented by\n                       an instance
    of this object is implementation-\n                       specific.  In particular,
    an instance of this\n                       object may represent a count of transmission\n
    \                      errors on a particular interface that are not\n                       otherwise
    counted.\n                       This counter is a 64 bit version of\n                       dot3StatsInternalMacTransmitErrors.
    \ It should\n                       be used on interfaces operating at 10 Gb/s
    or\n                       faster.\n                       Discontinuities in
    the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.12,\n                       aFramesLostDueToIntMACXmitError.\"\n
    \          ::= { dot3HCStatsEntry 3 }\n       dot3HCStatsFrameTooLongs OBJECT-TYPE\n
    \          SYNTAX      Counter64\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"A count of frames received on a particular\n
    \                      interface that exceed the maximum permitted\n                       frame
    size.\n                       The count represented by an instance of this\n                       object
    is incremented when the frameTooLong\n                       status is returned
    by the MAC service to the\n                       LLC (or other MAC user). Received
    frames for\n                       which multiple error conditions pertain are,\n
    \                      according to the conventions of IEEE 802.3\n                       Layer
    Management, counted exclusively according\n                       to the error
    status presented to the LLC.\n                       This counter is a 64 bit
    version of\n                       dot3StatsFrameTooLongs.  It should be used
    on\n                       interfaces operating at 10 Gb/s or faster.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.25,\n                       aFrameTooLongErrors.\"\n
    \          ::= { dot3HCStatsEntry 4 }\n       dot3HCStatsInternalMacReceiveErrors
    OBJECT-TYPE\n           SYNTAX      Counter64\n           MAX-ACCESS  read-only\n
    \          STATUS      current\n           DESCRIPTION \"A count of frames for
    which reception on a\n                       particular interface fails due to
    an internal\n                       MAC sublayer receive error. A frame is only\n
    \                      counted by an instance of this object if it is\n                       not
    counted by the corresponding instance of\n                       either the dot3StatsFrameTooLongs
    object, the\n                       dot3StatsAlignmentErrors object, or the\n
    \                      dot3StatsFCSErrors object.\n                       The
    precise meaning of the count represented by\n                       an instance
    of this object is implementation-\n                       specific.  In particular,
    an instance of this\n                       object may represent a count of receive
    errors\n                       on a particular interface that are not\n                       otherwise
    counted.\n                       This counter is a 64 bit version of\n                       dot3StatsInternalMacReceiveErrors.
    \ It should be\n                       used on interfaces operating at 10 Gb/s
    or\n                       faster.\n                       Discontinuities in
    the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.1.1.15,\n                       aFramesLostDueToIntMACRcvError.\"\n
    \          ::= { dot3HCStatsEntry 5 }\n       dot3HCStatsSymbolErrors OBJECT-TYPE\n
    \          SYNTAX      Counter64\n           MAX-ACCESS  read-only\n           STATUS
    \     current\n           DESCRIPTION \"For an interface operating at 100 Mb/s,
    the\n                       number of times there was an invalid data symbol\n
    \                      when a valid carrier was present.\n                       For
    an interface operating in half-duplex mode\n                       at 1000 Mb/s,
    the number of times the receiving\n                       media is non-idle (a
    carrier event) for a period\n                       of time equal to or greater
    than slotTime, and\n                       during which there was at least one
    occurrence\n                       of an event that causes the PHY to indicate\n
    \                      'Data reception error' or 'carrier extend error'\n                       on
    the GMII.\n                       For an interface operating in full-duplex mode\n
    \                      at 1000 Mb/s, the number of times the receiving\n                       media
    is non-idle (a carrier event) for a period\n                       of time equal
    to or greater than minFrameSize,\n                       and during which there
    was at least one\n                       occurrence of an event that causes the
    PHY to\n                       indicate 'Data reception error' on the GMII.\n
    \                      For an interface operating at 10 Gb/s, the\n                       number
    of times the receiving media is non-idle\n                       (a carrier event)
    for a period of time equal to\n                       or greater than minFrameSize,
    and during which\n                       there was at least one occurrence of
    an event\n                       that causes the PHY to indicate 'Receive Error'\n
    \                      on the XGMII.\n                       The count represented
    by an instance of this\n                       object is incremented at most once
    per carrier\n                       event, even if multiple symbol errors occur\n
    \                      during the carrier event.  This count does\n                       not
    increment if a collision is present.\n                       This counter is a
    64 bit version of\n                       dot3StatsSymbolErrors.  It should be
    used on\n                       interfaces operating at 10 Gb/s or faster.\n                       Discontinuities
    in the value of this counter can\n                       occur at re-initialization
    of the management\n                       system, and at other times as indicated
    by the\n                       value of ifCounterDiscontinuityTime.\"\n           REFERENCE
    \  \"[IEEE 802.3 Std.], 30.3.2.1.5,\n                       aSymbolErrorDuringCarrier.\"\n
    \          ::= { dot3HCStatsEntry 6 }\n       --  802.3 Tests\n       dot3Tests
    \  OBJECT IDENTIFIER ::= { dot3 6 }\n       dot3Errors  OBJECT IDENTIFIER ::=
    { dot3 7 }\n       --  TDR Test\n       dot3TestTdr OBJECT-IDENTITY\n           STATUS
    \     deprecated\n           DESCRIPTION \"******** THIS IDENTITY IS DEPRECATED
    *******\n                       The Time-Domain Reflectometry (TDR) test is\n
    \                      specific to ethernet-like interfaces of type\n                       10Base5
    and 10Base2.  The TDR value may be\n                       useful in determining
    the approximate distance\n                       to a cable fault.  It is advisable
    to repeat\n                       this test to check for a consistent resulting\n
    \                      TDR value, to verify that there is a fault.\n                       A
    TDR test returns as its result the time\n                       interval, measured
    in 10 MHz ticks or 100 nsec\n                       units, between the start of
    TDR test\n                       transmission and the subsequent detection of
    a\n                       collision or deassertion of carrier.  On\n                       successful
    completion of a TDR test, the result\n                       is stored as the
    value of an appropriate\n                       instance of an appropriate vendor
    specific MIB\n                       object, and the OBJECT IDENTIFIER of that\n
    \                      instance is stored in the appropriate instance\n                       of
    the appropriate test result code object\n                       (thereby indicating
    where the result has been\n                       stored).\n                       This
    object identity has been deprecated, since\n                       the ifTestTable
    in the IF-MIB was deprecated,\n                       and there is no longer a
    standard mechanism for\n                       initiating an interface test.  This
    left no\n                       standard way of using this object identity.\"\n
    \          ::= { dot3Tests 1 }\n       -- Loopback Test\n       dot3TestLoopBack
    OBJECT-IDENTITY\n           STATUS      deprecated\n           DESCRIPTION \"********
    THIS IDENTITY IS DEPRECATED *******\n                       This test configures
    the MAC chip and executes\n                       an internal loopback test of
    memory, data paths,\n                       and the MAC chip logic.  This loopback
    test can\n                       only be executed if the interface is offline.\n
    \                      Once the test has completed, the MAC chip should\n                       be
    reinitialized for network operation, but it\n                       should remain
    offline.\n                       If an error occurs during a test, the\n                       appropriate
    test result object will be set\n                       to indicate a failure.
    \ The two OBJECT\n                       IDENTIFIER values dot3ErrorInitError
    and\n                       dot3ErrorLoopbackError may be used to provided\n                       more
    information as values for an appropriate\n                       test result code
    object.\n                       This object identity has been deprecated, since\n
    \                      the ifTestTable in the IF-MIB was deprecated,\n                       and
    there is no longer a standard mechanism for\n                       initiating
    an interface test.  This left no\n                       standard way of using
    this object identity.\"\n           ::= { dot3Tests 2 }\n       dot3ErrorInitError
    OBJECT-IDENTITY\n           STATUS      deprecated\n           DESCRIPTION \"********
    THIS IDENTITY IS DEPRECATED *******\n                       Couldn't initialize
    MAC chip for test.\n                       This object identity has been deprecated,
    since\n                       the ifTestTable in the IF-MIB was deprecated,\n
    \                      and there is no longer a standard mechanism for\n                       initiating
    an interface test.  This left no\n                       standard way of using
    this object identity.\"\n           ::= { dot3Errors 1 }\n       dot3ErrorLoopbackError
    OBJECT-IDENTITY\n           STATUS      deprecated\n           DESCRIPTION \"********
    THIS IDENTITY IS DEPRECATED *******\n                       Expected data not
    received (or not received\n                       correctly) in loopback test.\n
    \                      This object identity has been deprecated, since\n                       the
    ifTestTable in the IF-MIB was deprecated,\n                       and there is
    no longer a standard mechanism for\n                       initiating an interface
    test.  This left no\n                       standard way of using this object
    identity.\"\n           ::= { dot3Errors 2 }\n       -- { dot3 8 }, the dot3ChipSets
    tree, is defined in [RFC2666]\n       -- conformance information\n       etherConformance
    OBJECT IDENTIFIER ::= { etherMIB 2 }\n       etherGroups      OBJECT IDENTIFIER
    ::= { etherConformance 1 }\n       etherCompliances OBJECT IDENTIFIER ::= { etherConformance
    2 }\n       -- compliance statements\n       etherCompliance MODULE-COMPLIANCE\n
    \          STATUS      deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE
    IS DEPRECATED ********\n                       The compliance statement for managed
    network\n                       entities which have ethernet-like network\n                       interfaces.\n
    \                      This compliance is deprecated and replaced by\n                       dot3Compliance.\"\n
    \          MODULE  -- this module\n               MANDATORY-GROUPS { etherStatsGroup
    }\n               GROUP       etherCollisionTableGroup\n               DESCRIPTION
    \"This group is optional. It is appropriate\n                           for all
    systems which have the necessary\n                           metering. Implementation
    in such systems is\n                           highly recommended.\"\n           ::=
    { etherCompliances 1 }\n       ether100MbsCompliance MODULE-COMPLIANCE\n           STATUS
    \     deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE IS DEPRECATED
    ********\n                       The compliance statement for managed network\n
    \                      entities which have 100 Mb/sec ethernet-like\n                       network
    interfaces.\n                       This compliance is deprecated and replaced
    by\n                       dot3Compliance.\"\n           MODULE  -- this module\n
    \              MANDATORY-GROUPS { etherStats100MbsGroup }\n               GROUP
    \      etherCollisionTableGroup\n               DESCRIPTION \"This group is optional.
    It is appropriate\n                           for all systems which have the necessary\n
    \                          metering. Implementation in such systems is\n                           highly
    recommended.\"\n           ::= { etherCompliances 2 }\n       dot3Compliance MODULE-COMPLIANCE\n
    \          STATUS      deprecated\n           DESCRIPTION \"******** THIS COMPLIANCE
    IS DEPRECATED ********\n                       The compliance statement for managed
    network\n                       entities which have ethernet-like network\n                       interfaces.\n
    \                      This compliance is deprecated and replaced by\n                       dot3Compliance2.\"\n
    \          MODULE  -- this module\n               MANDATORY-GROUPS { etherStatsBaseGroup
    }\n               GROUP       etherDuplexGroup\n               DESCRIPTION \"This
    group is mandatory for all\n                           ethernet-like network interfaces
    which are\n                           capable of operating in full-duplex mode.\n
    \                          It is highly recommended for all\n                           ethernet-like
    network interfaces.\"\n               GROUP       etherStatsLowSpeedGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating at 10 Mb/s
    or slower in\n                           half-duplex mode.\"\n               GROUP
    \      etherStatsHighSpeedGroup\n               DESCRIPTION \"This group is mandatory
    for all\n                           ethernet-like network interfaces which are\n
    \                          capable of operating at 100 Mb/s or faster.\"\n               GROUP
    \      etherControlGroup\n               DESCRIPTION \"This group is mandatory
    for all\n                           ethernet-like network interfaces that\n                           support
    the MAC Control sublayer.\"\n               GROUP       etherControlPauseGroup\n
    \              DESCRIPTION \"This group is mandatory for all\n                           ethernet-like
    network interfaces that\n                           support the MAC Control PAUSE
    function.\"\n               GROUP       etherCollisionTableGroup\n               DESCRIPTION
    \"This group is optional. It is appropriate\n                           for all
    ethernet-like network interfaces\n                           which are capable
    of operating in\n                           half-duplex mode and have the necessary\n
    \                          metering. Implementation in systems with\n                           such
    interfaces is highly recommended.\"\n           ::= { etherCompliances 3 }\n           dot3Compliance2
    MODULE-COMPLIANCE\n               STATUS      current\n               DESCRIPTION
    \"The compliance statement for managed network\n                           entities
    which have ethernet-like network\n                           interfaces.\n                           Note
    that compliance with this MIB module\n                           requires compliance
    with the ifCompliance3\n                           MODULE-COMPLIANCE statement
    of the IF-MIB\n                           (RFC2863).  In addition, compliance
    with this\n                           MIB module requires compliance  with the\n
    \                          mauModIfCompl3 MODULE-COMPLIANCE statement of\n                           the
    MAU-MIB (RFC3636).\"\n           MODULE  -- this module\n               MANDATORY-GROUPS
    { etherStatsBaseGroup2 }\n               GROUP       etherDuplexGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating in full-duplex
    mode.\n                           It is highly recommended for all\n                           ethernet-like
    network interfaces.\"\n               GROUP       etherRateControlGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating at speeds
    faster than\n                           1000 Mb/s. It is highly recommended for
    all\n                           ethernet-like network interfaces.\"\n               GROUP
    \      etherStatsLowSpeedGroup\n               DESCRIPTION \"This group is mandatory
    for all\n                           ethernet-like network interfaces which are\n
    \                          capable of operating at 10 Mb/s or slower in\n                           half-duplex
    mode.\"\n               GROUP       etherStatsHighSpeedGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating at 100 Mb/s
    or faster.\"\n               GROUP       etherStatsHalfDuplexGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating in half-duplex
    mode.\"\n               GROUP       etherHCStatsGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces which are\n                           capable of operating at 10 Gb/s
    or faster.\n                           It is recommended for all ethernet-like\n
    \                          network interfaces which are capable of\n                           operating
    at 1000 Mb/s or faster.\"\n               GROUP       etherControlGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces that\n                           support the MAC Control sublayer.\"\n
    \              GROUP       etherHCControlGroup\n               DESCRIPTION \"This
    group is mandatory for all\n                           ethernet-like network interfaces
    that\n                           support the MAC Control sublayer and are\n                           capable
    of operating at 10 Gb/s or faster.\"\n               GROUP       etherControlPauseGroup\n
    \              DESCRIPTION \"This group is mandatory for all\n                           ethernet-like
    network interfaces that\n                           support the MAC Control PAUSE
    function.\"\n               GROUP       etherHCControlPauseGroup\n               DESCRIPTION
    \"This group is mandatory for all\n                           ethernet-like network
    interfaces that\n                           support the MAC Control PAUSE function
    and\n                           are capable of operating at 10 Gb/s or\n                           faster.\"\n
    \              GROUP       etherCollisionTableGroup\n               DESCRIPTION
    \"This group is optional. It is appropriate\n                           for all
    ethernet-like network interfaces\n                           which are capable
    of operating in\n                           half-duplex mode and have the necessary\n
    \                          metering. Implementation in systems with\n                           such
    interfaces is highly recommended.\"\n           ::= { etherCompliances 4 }\n       --
    units of conformance\n       etherStatsGroup OBJECT-GROUP\n           OBJECTS
    \    { dot3StatsIndex,\n                         dot3StatsAlignmentErrors,\n                         dot3StatsFCSErrors,\n
    \                        dot3StatsSingleCollisionFrames,\n                         dot3StatsMultipleCollisionFrames,\n
    \                        dot3StatsSQETestErrors,\n                         dot3StatsDeferredTransmissions,\n
    \                        dot3StatsLateCollisions,\n                         dot3StatsExcessiveCollisions,\n
    \                        dot3StatsInternalMacTransmitErrors,\n                         dot3StatsCarrierSenseErrors,\n
    \                        dot3StatsFrameTooLongs,\n                         dot3StatsInternalMacReceiveErrors,\n
    \                        dot3StatsEtherChipSet\n                       }\n           STATUS
    \     deprecated\n           DESCRIPTION \"********* THIS GROUP IS DEPRECATED
    **********\n                       A collection of objects providing information\n
    \                      applicable to all ethernet-like network\n                       interfaces.\n
    \                      This object group has been deprecated and\n                       replaced
    by etherStatsBaseGroup and\n                       etherStatsLowSpeedGroup.\"\n
    \          ::= { etherGroups 1 }\n       etherCollisionTableGroup OBJECT-GROUP\n
    \          OBJECTS     { dot3CollFrequencies\n                       }\n           STATUS
    \     current\n           DESCRIPTION \"A collection of objects providing a histogram\n
    \                      of packets successfully transmitted after\n                       experiencing
    exactly N collisions.\"\n           ::= { etherGroups 2 }\n       etherStats100MbsGroup
    OBJECT-GROUP\n           OBJECTS     { dot3StatsIndex,\n                         dot3StatsAlignmentErrors,\n
    \                        dot3StatsFCSErrors,\n                         dot3StatsSingleCollisionFrames,\n
    \                        dot3StatsMultipleCollisionFrames,\n                         dot3StatsDeferredTransmissions,\n
    \                        dot3StatsLateCollisions,\n                         dot3StatsExcessiveCollisions,\n
    \                        dot3StatsInternalMacTransmitErrors,\n                         dot3StatsCarrierSenseErrors,\n
    \                        dot3StatsFrameTooLongs,\n                         dot3StatsInternalMacReceiveErrors,\n
    \                        dot3StatsEtherChipSet,\n                         dot3StatsSymbolErrors\n
    \                      }\n           STATUS      deprecated\n           DESCRIPTION
    \"********* THIS GROUP IS DEPRECATED **********\n                       A collection
    of objects providing information\n                       applicable to 100 Mb/sec
    ethernet-like network\n                       interfaces.\n                       This
    object group has been deprecated and\n                       replaced by etherStatsBaseGroup
    and\n                       etherStatsHighSpeedGroup.\"\n           ::= { etherGroups
    3 }\n       etherStatsBaseGroup OBJECT-GROUP\n           OBJECTS     { dot3StatsIndex,\n
    \                        dot3StatsAlignmentErrors,\n                         dot3StatsFCSErrors,\n
    \                        dot3StatsSingleCollisionFrames,\n                         dot3StatsMultipleCollisionFrames,\n
    \                        dot3StatsDeferredTransmissions,\n                         dot3StatsLateCollisions,\n
    \                        dot3StatsExcessiveCollisions,\n                         dot3StatsInternalMacTransmitErrors,\n
    \                        dot3StatsCarrierSenseErrors,\n                         dot3StatsFrameTooLongs,\n
    \                        dot3StatsInternalMacReceiveErrors\n                       }\n
    \          STATUS      deprecated\n           DESCRIPTION \"********* THIS GROUP
    IS DEPRECATED **********\n                       A collection of objects providing
    information\n                       applicable to all ethernet-like network\n
    \                      interfaces.\n                       This object group has
    been deprecated and\n                       replaced by etherStatsBaseGroup2 and\n
    \                      etherStatsHalfDuplexGroup, to separate\n                       objects
    which must be implemented by all\n                       ethernet-like network
    interfaces from\n                       objects that need only be implemented
    on\n                       ethernet-like network interfaces that are\n                       capable
    of half-duplex operation.\"\n           ::= { etherGroups 4 }\n       etherStatsLowSpeedGroup
    OBJECT-GROUP\n           OBJECTS     { dot3StatsSQETestErrors }\n           STATUS
    \     current\n           DESCRIPTION \"A collection of objects providing information\n
    \                      applicable to ethernet-like network interfaces\n                       capable
    of operating at 10 Mb/s or slower in\n                       half-duplex mode.\"\n
    \          ::= { etherGroups 5 }\n       etherStatsHighSpeedGroup OBJECT-GROUP\n
    \          OBJECTS     { dot3StatsSymbolErrors }\n           STATUS      current\n
    \          DESCRIPTION \"A collection of objects providing information\n                       applicable
    to ethernet-like network interfaces\n                       capable of operating
    at 100 Mb/s or faster.\"\n           ::= { etherGroups 6 }\n       etherDuplexGroup
    OBJECT-GROUP\n           OBJECTS     { dot3StatsDuplexStatus }\n           STATUS
    \     current\n           DESCRIPTION \"A collection of objects providing information\n
    \                      about the duplex mode of an ethernet-like\n                       network
    interface.\"\n           ::= { etherGroups 7 }\n       etherControlGroup OBJECT-GROUP\n
    \          OBJECTS     { dot3ControlFunctionsSupported,\n                         dot3ControlInUnknownOpcodes\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing information\n                       about
    the MAC Control sublayer on ethernet-like\n                       network interfaces.\"\n
    \          ::= { etherGroups 8 }\n       etherControlPauseGroup OBJECT-GROUP\n
    \          OBJECTS     { dot3PauseAdminMode,\n                         dot3PauseOperMode,\n
    \                        dot3InPauseFrames,\n                         dot3OutPauseFrames\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing information\n                       about
    and control of the MAC Control PAUSE\n                       function on ethernet-like
    network interfaces.\"\n           ::= { etherGroups 9 }\n       etherStatsBaseGroup2
    OBJECT-GROUP\n           OBJECTS     { dot3StatsIndex,\n                         dot3StatsAlignmentErrors,\n
    \                        dot3StatsFCSErrors,\n                         dot3StatsInternalMacTransmitErrors,\n
    \                        dot3StatsFrameTooLongs,\n                         dot3StatsInternalMacReceiveErrors\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing information\n                       applicable
    to all ethernet-like network\n                       interfaces.\"\n           ::=
    { etherGroups 10 }\n       etherStatsHalfDuplexGroup OBJECT-GROUP\n           OBJECTS
    \    { dot3StatsSingleCollisionFrames,\n                         dot3StatsMultipleCollisionFrames,\n
    \                        dot3StatsDeferredTransmissions,\n                         dot3StatsLateCollisions,\n
    \                        dot3StatsExcessiveCollisions,\n                         dot3StatsCarrierSenseErrors\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing information\n                       applicable
    only to half-duplex ethernet-like\n                       network interfaces.\"\n
    \          ::= { etherGroups 11 }\n       etherHCStatsGroup OBJECT-GROUP\n           OBJECTS
    \    { dot3HCStatsAlignmentErrors,\n                         dot3HCStatsFCSErrors,\n
    \                        dot3HCStatsInternalMacTransmitErrors,\n                         dot3HCStatsFrameTooLongs,\n
    \                        dot3HCStatsInternalMacReceiveErrors,\n                         dot3HCStatsSymbolErrors\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing high-capacity\n                       statistics
    applicable to higher-speed\n                       ethernet-like network interfaces.\"\n
    \          ::= { etherGroups 12 }\n       etherHCControlGroup OBJECT-GROUP\n           OBJECTS
    \    { dot3HCControlInUnknownOpcodes }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing high-capacity\n                       statistics
    for the MAC Control sublayer on\n                       higher-speed ethernet-like
    network interfaces.\"\n           ::= { etherGroups 13 }\n       etherHCControlPauseGroup
    OBJECT-GROUP\n           OBJECTS     { dot3HCInPauseFrames,\n                         dot3HCOutPauseFrames\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing high-capacity\n                       statistics
    for the MAC Control PAUSE function on\n                       higher-speed ethernet-like
    network interfaces.\"\n           ::= { etherGroups 14 }\n       etherRateControlGroup
    OBJECT-GROUP\n           OBJECTS     { dot3StatsRateControlAbility,\n                         dot3StatsRateControlStatus\n
    \                      }\n           STATUS      current\n           DESCRIPTION
    \"A collection of objects providing information\n                       about
    the Rate Control function on ethernet-like\n                       interfaces.\"\n
    \          ::= { etherGroups 15 }\n   END\n"
  title: 4.  Definitions
- contents:
  - "5.  Intellectual Property Statement\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 5.  Intellectual Property Statement
- contents:
  - "6.  Acknowledgements\n   This document was produced by the IETF Ethernet Interfaces
    and Hub\n   MIB Working Group, whose efforts were greatly advanced by the\n   contributions
    of the following people:\n       Ran Atkinson\n       Mike Ayers\n       Mike
    Heard\n       Jeffrey Johnson\n       Lynn Kubinec\n       Kam Lam\n       Kerry
    McDonald\n       Steve McRobert\n       K.C. Norseth\n       Dan Romascanu\n       Randy
    Presuhn\n       Andrew Smith\n       Kaj Tesink\n       Geoff Thompson\n   This
    document is based on the Proposed Standard Ethernet MIB, RFC\n   2665 [RFC2665],
    edited by John Flick of Hewlett-Packard and Jeffrey\n   Johnson of RedBack Networks
    and produced by the Ethernet Interfaces\n   and Hub MIB Working Group.  It extends
    that document by providing\n   support for 10 Gb/s Ethernet interfaces as defined
    in [IEEE802.3ae].\n   RFC 2665, in turn, is based on the Proposed Standard Ethernet
    MIB,\n   RFC 2358 [RFC2358], edited by John Flick of Hewlett-Packard and\n   Jeffrey
    Johnson of RedBack Networks and produced by the 802.3 Hub MIB\n   Working Group.
    \ It extends that document by providing support for\n   full-duplex Ethernet interfaces
    and 1000 Mb/sec Ethernet interfaces\n   as outlined in [IEEE802.3].\n   RFC 2358,
    in turn, is almost completely based on both the Standard\n   Ethernet MIB, RFC
    1643 [RFC1643], and the Proposed Standard Ethernet\n   MIB using the SNMPv2 SMI,
    RFC 1650 [RFC1650], both of which were\n   edited by Frank Kastenholz of FTP Software
    and produced by the\n   Interfaces MIB Working Group.  RFC 2358 extends those
    documents by\n   providing support for 100 Mb/sec ethernet interfaces.\n   RFC
    1643 and RFC 1650, in turn, are based on the Draft Standard\n   Ethernet MIB,
    RFC 1398 [RFC1398], also edited by Frank Kastenholz and\n   produced by the Ethernet
    MIB Working Group.\n   RFC 1398, in turn, is based on the Proposed Standard Ethernet
    MIB,\n   RFC 1284 [RFC1284], which was edited by John Cook of Chipcom and\n   produced
    by the Transmission MIB Working Group.  The Ethernet MIB\n   Working Group gathered
    implementation experience of the variables\n   specified in RFC 1284, documented
    that experience in RFC 1369\n   [RFC1369], and used that information to develop
    this revised MIB.\n   RFC 1284, in turn, is based on a document written by Frank\n
    \  Kastenholz, then of Interlan, entitled IEEE 802.3 Layer Management\n   Draft
    M compatible MIB for TCP/IP Networks [KASTEN].  This document\n   was modestly
    reworked, initially by the SNMP Working Group, and then\n   by the Transmission
    Working Group, to reflect the current conventions\n   for defining objects for
    MIB interfaces.  James Davin, of the MIT\n   Laboratory for Computer Science,
    and Keith McCloghrie of Hughes LAN\n   Systems, contributed to later drafts of
    this memo.  Marshall Rose of\n   Performance Systems International, Inc. converted
    the document into\n   RFC 1212 [RFC1212] concise format.  Anil Rijsinghani of
    DEC\n   contributed text that more adequately describes the TDR test.  Thanks\n
    \  to Frank Kastenholz of Interlan and Louis Steinberg of IBM for their\n   experimentation.\n"
  title: 6.  Acknowledgements
- contents:
  - "7.  Normative References\n   [RFC2119]     Bradner, S., \"Key words for use in
    RFCs to Indicate\n                 Requirements Levels\", BCP 14, RFC 2119, March
    1997.\n   [RFC2578]     McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\n
    \                J., Rose, M. and S. Waldbusser, \"Structure of\n                 Management
    Information Version 2 (SMIv2)\", STD 58, RFC\n                 2578, April 1999.\n
    \  [RFC2579]     McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\n                 J.,
    Rose, M. and S. Waldbusser, \"Textual Conventions\n                 for SMIv2\",
    STD 58, RFC 2579, April 1999.\n   [RFC2580]     McCloghrie, K., Perkins, D., Schoenwaelder,
    J., Case,\n                 J., Rose, M. and S. Waldbusser, \"Conformance Statements\n
    \                for SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC2863]     McCloghrie,
    K. and F. Kastenholz, \"The Interfaces Group\n                 MIB using SMIv2\",
    RFC 2863, June 2000.\n   [IEEE802.3]   IEEE, IEEE Std 802.3, 2002 Edition: \"Carrier
    Sense\n                 Multiple Access with Collision Detection (CSMA/CD)\n                 Access
    Method and Physical Layer Specifications\", March\n                 2002.\n   [IEEE802.3ae]
    IEEE, IEEE Std 802.3ae-2002, \"Amendment: Media Access\n                 Control
    (MAC) Parameters, Physical Layers, and\n                 Management Parameters
    for 10 Gb/s Operation\", August,\n                 2002.\n   [RFC3636]     Flick,
    J., \"Definitions of Managed Objects for IEEE\n                 802.3 Medium Attachment
    Units (MAUs) using SMIv2\", RFC\n                 3636, September 2003.\n"
  title: 7.  Normative References
- contents:
  - "8.  Informative References\n   [RFC1212]     Rose, M. and K. McCloghrie, Editors,
    \"Concise MIB\n                 Definitions\", STD 16, RFC 1212, March 1991.\n
    \  [RFC1213]     McCloghrie, K. and M. Rose, Editors, \"Management\n                 Information
    Base for Network Management of TCP/IP-based\n                 internets: MIB-II\",
    STD 17, RFC 1213, March 1991.\n   [RFC1284]     Cook, J., \"Definitions of Managed
    Objects for\n                 Ethernet-Like Interface Types\", RFC 1284, December\n
    \                1991.\n   [RFC1369]     Kastenholz, F., \"Implementation Notes
    and Experience\n                 for The Internet Ethernet MIB\", RFC 1369, October
    1992.\n   [RFC1398]     Kastenholz, F., \"Definitions of Managed Objects for the\n
    \                Ethernet-like Interface Types\", RFC 1398, January 1993.\n   [RFC1643]
    \    Kastenholz, F., \"Definitions of Managed Objects for the\n                 Ethernet-like
    Interface Types\", STD 50, RFC 1643, July\n                 1994.\n   [RFC1650]
    \    Kastenholz, F., \"Definitions of Managed Objects for the\n                 Ethernet-like
    Interface Types using SMIv2\", RFC 1650,\n                 August 1994.\n   [RFC2358]
    \    Flick, J. and J. Johnson, \"Definitions of Managed\n                 Objects
    for the Ethernet-like Interface Types\", RFC\n                 2358, June 1998.\n
    \  [RFC2665]     Flick, J. and J. Johnson, \"Definitions of Managed\n                 Objects
    for the Ethernet-like Interface Types\", RFC\n                 2665, August 1999.\n
    \  [RFC2666]     Flick, J., \"Definitions of Object Identifiers for\n                 Identifying
    Ethernet Chip Sets\", RFC 2666, August 1999.\n   [RFC3410]     Case, J., Mundy,
    R., Partain, D. and B. Stewart,\n                 \"Introduction and Applicability
    Statements for\n                 Internet-Standard Network Management Framework\",
    RFC\n                 3410, December 2002.\n   [CASE]        Case, J., and C.
    Partridge, \"Case Diagrams: A First\n                 Step to Diagrammed Management
    Information Bases\",\n                 Computer Communications Review, 19(1):13-16,
    January\n                 1989.\n   [RFC3637]     Heard, C., \"Definitions of
    Managed Objects for the\n                 Ethernet WAN Interface Sublayer\", RFC
    3637, September\n                 2003.\n   [KASTEN]      Kastenholz, F., \"IEEE
    802.3 Layer Management Draft\n                 compatible MIB for TCP/IP Networks\",
    electronic mail\n                 message to mib-wg@nnsc.nsf.net, 9 June 1989.\n"
  title: 8.  Informative References
- contents:
  - "9.  Security Considerations\n   There is one management object defined in this
    MIB that has a MAX-\n   ACCESS clause of read-write.  That object, dot3PauseAdminMode,
    may be\n   used to change the flow control configuration on a network interface,\n
    \  which may result in dropped packets, or sending flow control packets\n   on
    links where the link partner will not understand them.  Either\n   action could
    be detrimental to network performance.\n   Such objects may be considered sensitive
    or vulnerable in some\n   network environments.  The support for SET operations
    in a non-secure\n   environment without proper protection can have a negative
    effect on\n   network operations.\n   Some of the readable objects in this MIB
    module (i.e., objects with a\n   MAX-ACCESS other than not-accessible) may be
    considered sensitive or\n   vulnerable in some network environments.  In particular,
    the\n   dot3StatsEtherChipSet object may be considered sensitive in many\n   environments,
    since it would allow an intruder to obtain information\n   about which vendor's
    equipment is in use on the network.  Note that\n   this object has been deprecated.
    \ However, some implementors may\n   still choose to implement it for backwards
    compatability.\n   Most of the objects in this MIB module contain statistical\n
    \  information about particular network links.  In some network\n   environments,
    this information may be considered sensitive.\n   It is thus important to control
    even GET and/or NOTIFY access to\n   these objects and possibly to even encrypt
    the values of these\n   objects when sending them over the network via SNMP.\n
    \  SNMP versions prior to SNMPv3 did not include adequate security.\n   Even if
    the network itself is secure (for example by using IPSec),\n   even then, there
    is no control as to who on the secure network is\n   allowed to access and GET/SET
    (read/change/create/delete) the objects\n   in this MIB module.\n   It is recommended
    that the implementors consider the security\n   features as provided by the SNMPv3
    framework (see [RFC3410], section\n   8), including full support for the SNMPv3
    cryptographic mechanisms\n   (for authentication and privacy).\n   Furthermore,
    deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead,
    it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic security.  It
    is then a customer/operator\n   responsibility to ensure that the SNMP entity
    giving access to an\n   instance of this MIB module is properly configured to
    give access to\n   the objects only to those principals (users) that have legitimate\n
    \  rights to indeed GET or SET (change/create/delete) them.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   This document does not define any new name space
    to be administered\n   by IANA.  However, section 3.2.4 does specify that some
    of the\n   defined values in a current IANA-maintained name space are to be\n
    \  marked as deprecated or obsolete.  In particular, the following\n   enumerated
    values in the IANAifType TEXTUAL-CONVENTION in the\n   IANAifType-MIB module have
    had an ASN.1 comment added by IANA stating\n   that they have been deprecated:\n
    \      - iso88032Csmacd(7)\n       - starLan(11)\n   In addition, the following
    enumerated values have had an ASN.1\n   comment added by IANA stating that they
    are obsolete:\n       - fastEther(62)\n       - fastEtherFX(69)\n       - gigabitEthernet(117)\n
    \  In all of the above cases, the ASN.1 comment indicates that\n   ethernetCsmacd(6)
    should be used instead of these values.\n"
  - 'A.  Change Log

    '
  - contents:
    - "A.1.  Changes since RFC 2665\n   This section enumerates changes made to RFC
      2665 to produce this\n   document.\n      (1)   Updated references to the IEEE
      802.3 standard to\n            refer to the 2002 edition.\n      (2)   Added
      reference to IEEE 802.3ae-2002.\n      (3)   Updated WG e-mail address.\n      (4)
      \  The following DESCRIPTION clauses have been updated\n            to reflect
      behaviour on 10 Gb/s interfaces:\n            dot3StatsAlignmentErrors and dot3StatsSymbolErrors.\n
      \     (5)   The following objects have been added for management\n            of
      the Rate Control function in WAN applications of\n            ethernet:  dot3StatsRateControlAbility
      and\n            dot3StatsRateControlStatus.\n      (6)   The following 64-bit
      counters have been added to\n            support operation on high-speed ethernet
      interfaces:\n            dot3HCControlInUnknownOpcodes, dot3HCInPauseFrames,\n
      \           dot3HCOutPauseFrames, dot3HCStatsAlignmentErrors,\n            dot3HCStatsFCSErrors,
      dot3HCStatsFrameTooLongs,\n            dot3HCStatsInternalMacTransmitErrors,\n
      \           dot3HCStatsInternalMacReceiveErrors,\n            dot3HCStatsSymbolErrors\n
      \     (7)   Object groups and compliances have been added to\n            contain
      the new objects.\n      (8)   The MODULE-IDENTITY clause has been updated to\n
      \           reflect the changes in the MIB module.\n      (9)   Use of the various
      ifType values for ethernet has\n            been clarified to emphasize that
      all ethernet-like\n            interfaces must use the ethernetCsmacd ifType.\n
      \     (10)  Several clarifications were made to the section on\n            the
      mapping of the Interface MIB objects to ethernet.\n      (11)  MIB boilerplate
      in section 2 has been updated to the\n            latest approved text.\n"
    title: A.1.  Changes since RFC 2665
  - contents:
    - "A.2.  Changes between RFC 2358 and RFC 2665\n   This section enumerates changes
      made to RFC 2358 to produce RFC 2665.\n      (1)   Section 2 has been replaced
      with the current SNMP\n            Management Framework boilerplate.\n      (2)
      \  The ifMtu mapping has been clarified.\n      (3)   The relationship between
      the IEEE 802.3 octet counters\n            and the IF-MIB octet counters has
      been clarified.\n      (4)   REFERENCE clauses have been updated to reflect
      the\n            actual IEEE 802.3 managed object that each MIB object\n            is
      based on.\n      (5)   The following object DESCRIPTION clauses have been\n
      \           updated to reflect that they do not increment in\n            full-duplex
      mode: dot3StatsSingleCollisionFrames,\n            dot3StatsMultipleCollisionFrames,
      dot3StatsSQETestErrors,\n            dot3StatsDeferredTransmissions, dot3StatsLateCollisions,\n
      \           dot3StatsExcessiveCollisions, dot3StatsCarrierSenseErrors,\n            dot3CollFrequencies.\n
      \     (6)   The following object DESCRIPTION clauses have been\n            updated
      to reflect behaviour on full-duplex and\n            1000 Mb/s interfaces: dot3StatsAlignmentErrors,\n
      \           dot3StatsFCSErrors, dot3StatsSQETestErrors,\n            dot3StatsLateCollisions,
      dot3StatsSymbolErrors.\n      (7)   Two new tables, dot3ControlTable and dot3PauseTable,\n
      \           have been added.\n      (8)   A new object, dot3StatsDuplexStatus,
      has been added.\n      (9)   The object groups and compliances have been restructured.\n
      \     (10)  The dot3StatsEtherChipSet object has been deprecated.\n      (11)
      \ The dot3ChipSets have been moved to a separate document.\n"
    title: A.2.  Changes between RFC 2358 and RFC 2665
  - contents:
    - "A.3.  Changes between RFC 1650 and RFC 2358\n   This section enumerates changes
      made to RFC 1650 to produce RFC 2358.\n      (1)   The MODULE-IDENTITY has been
      updated to reflect the changes\n            in the MIB.\n      (2)   A new object,
      dot3StatsSymbolErrors, has been added.\n      (3)   The definition of the object
      dot3StatsIndex has been\n            converted to use the SMIv2 OBJECT-TYPE
      macro.\n      (4)   A new conformance group, etherStats100MbsGroup, has been\n
      \           added.\n      (5)   A new compliance statement, ether100MbsCompliance,
      has\n            been added.\n      (6)   The Acknowledgements were extended
      to provide a more\n            complete history of the origin of this document.\n
      \     (7)   The discussion of ifType has been expanded.\n      (8)   A section
      on mapping of Interfaces MIB objects has\n            been added.\n      (9)
      \  A section defining the relationship of this MIB to\n            the MAU MIB
      has been added.\n      (10)  A section on the mapping of IEEE 802.3 managed
      objects\n            to this MIB and the Interfaces MIB has been added.\n      (11)
      \ Converted the dot3Tests, dot3Errors, and dot3ChipSets\n            OIDs to
      use the OBJECT-IDENTITY macro.\n      (12)  Added to the list of registered
      dot3ChipSets.\n      (13)  An intellectual property notice and copyright notice\n
      \           were added, as required by RFC 2026.\n"
    title: A.3.  Changes between RFC 1650 and RFC 2358
  title: 10.  IANA Considerations
- contents:
  - "Author's Address\n   John Flick\n   Hewlett-Packard Company\n   8000 Foothills
    Blvd. M/S 5557\n   Roseville, CA 95747-5557\n   Phone: +1 916 785 4018\n   EMail:
    johnf@rose.hp.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
