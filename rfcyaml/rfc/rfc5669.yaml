- contents:
  - "                 The SEED Cipher Algorithm and Its Use\n          with the Secure
    Real-Time Transport Protocol (SRTP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the use of the SEED block cipher algorithm
    in\n   the Secure Real-time Transport Protocol (SRTP) for providing\n   confidentiality
    for Real-time Transport Protocol (RTP) traffic and\n   for the control traffic
    for RTP, the Real-time Transport Control\n   Protocol (RTCP).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5669.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. SEED .......................................................3\n      1.2.
    Terminology ................................................3\n      1.3. Definitions
    ................................................3\n   2. Cryptographic Transforms
    ........................................4\n      2.1. Counter ....................................................4\n
    \          2.1.1. Message Authentication/Integrity: HMAC-SHA1 .........4\n      2.2.
    Counter with CBC-MAC (CCM) .................................4\n      2.3. Galois/Counter
    Mode (GCM) ..................................6\n   3. Nonce Format for CCM and
    GCM ....................................6\n      3.1. Nonce for SRTP .............................................6\n
    \     3.2. Nonce for SRTCP ............................................6\n   4.
    Key Derivation: SEED-CTR PRF ....................................7\n   5. Mandatory-to-Implement
    Transforms ...............................7\n   6. Security Considerations .........................................7\n
    \  7. IANA Considerations .............................................8\n   8.
    Acknowledgements ................................................8\n   9. References
    ......................................................8\n      9.1. Normative
    References .......................................8\n      9.2. Informative References
    .....................................9\n   Appendix A. Test Vectors ..........................................10\n
    \     A.1. SEED-CTR Test Vectors .....................................10\n      A.2.
    SEED-CCM Test Vectors .....................................11\n      A.3. SEED-GCM
    Test Vectors .....................................12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes the use of the SEED [RFC4269] block
    cipher\n   algorithm in the Secure Real-time Transport Protocol (SRTP) [RFC3711]\n
    \  for providing confidentiality for Real-time Transport Protocol (RTP)\n   [RFC3550]
    traffic and for the control traffic for RTP, the Real-time\n   Transport Control
    Protocol (RTCP) [RFC3550].\n"
  - contents:
    - "1.1.  SEED\n   SEED is a symmetric encryption algorithm that was developed
      by the\n   Korea Information Security Agency (KISA) and a group of experts,\n
      \  beginning in 1998.  The input/output block size of SEED is 128-bit\n   and
      the key length is also 128-bit.  SEED has the 16-round Feistel\n   structure.
      \ A 128-bit input is divided into two 64-bit blocks and the\n   right 64-bit
      block is an input to the round function with a 64-bit\n   subkey generated from
      the key scheduling.\n   SEED is easily implemented in various software and hardware
      because\n   it is designed to increase the efficiency of memory storage and
      the\n   simplicity of generating keys without degrading the security of the\n
      \  algorithm.  In particular, it can be effectively adopted in a\n   computing
      environment that has restricted resources such as mobile\n   devices, smart
      cards, and so on.\n   SEED is a national industrial association standard [TTASSEED]
      and is\n   widely used in South Korea for electronic commerce and financial\n
      \  services operated on wired and wireless PKI.\n   The algorithm specification
      and object identifiers are described in\n   [RFC4269].  The SEED homepage, http://seed.kisa.or.kr/eng/main.jsp,\n
      \  contains a wealth of information about SEED, including detailed\n   specification,
      evaluation report, test vectors, and so on.\n"
    title: 1.1.  SEED
  - contents:
    - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
    title: 1.2.  Terminology
  - contents:
    - "1.3.  Definitions\n   ||   concatenation\n   XOR  exclusive or\n"
    title: 1.3.  Definitions
  title: 1.  Introduction
- contents:
  - "2.  Cryptographic Transforms\n   All symmetric block cipher algorithms share
    common characteristics,\n   including mode, key size, weak keys, and block size.
    \ The following\n   sections contain descriptions of the relevant characteristics
    of\n   SEED.\n   SEED does not have any restrictions for modes of operation that
    are\n   used with this block cipher.  We define three modes of running SEED:\n
    \  (1) SEED in counter mode, (2) SEED in counter mode with CBC-MAC\n   (CCM),
    and (3) SEED in Galois/Counter Mode (GCM).\n"
  - contents:
    - "2.1.  Counter\n   Section 4.1.1 of [RFC3711] defines AES counter mode encryption,
      which\n   that document refers to as AES-CM.  SEED counter mode is defined in
      a\n   similar manner and is denoted as SEED-CTR.  The plaintext inputs to\n
      \  the block cipher are formed as in AES-CM, and the block cipher\n   outputs
      are processed as in AES-CM.  The only difference in the\n   processing is that
      SEED-CTR uses SEED as the underlying encryption\n   primitive.  When SEED-CTR
      is used, it MUST be used only in\n   conjunction with an authentication function.\n"
    - contents:
      - "2.1.1.  Message Authentication/Integrity: HMAC-SHA1\n   HMAC-SHA1 [RFC2104],
        as defined in Section 4.2.1 of [RFC3711], SHALL\n   be the default message-authentication
        code to be used with SEED-CTR.\n   The default session-authentication key
        length SHALL be 160 bits, the\n   default authentication tag length SHALL
        be 80 bits, and the\n   SRTP_PREFIX_LENGTH SHALL be zero for HMAC-SHA1.  For
        SRTP, smaller\n   values are NOT RECOMMENDED but MAY be used after careful\n
        \  consideration of the issues discussed in Sections 7.5 and 9.5 of\n   [RFC3711].\n"
      title: '2.1.1.  Message Authentication/Integrity: HMAC-SHA1'
    title: 2.1.  Counter
  - contents:
    - "2.2.  Counter with CBC-MAC (CCM)\n   CCM [RFC3610] is a generic authenticate-and-encrypt
      block cipher\n   mode.  In this specification, CCM used with the SEED block
      cipher is\n   denoted as SEED-CCM.\n   Section 3.3 of [RFC3711] defines procedures
      to construct or to\n   authenticate and decrypt SRTP packets.  For SEED-CCM,
      however, the\n   sender performs Step 7 before Step 5 and the receiver performs
      the\n   second half of Step 5 (verification) after Step 6.  This means that\n
      \  authentication is performed on the plaintext rather than the\n   ciphertext.
      \ This applies equally to SRTCP.\n   All SRTP packets MUST be authenticated
      and encrypted.  Unlike SRTP,\n   Secure Real-time Transport Control Protocol
      (SRTCP) packet encryption\n   is optional (but authentication is mandatory).
      \ A sender can select\n   which packets to encrypt and indicates this choice
      with a 1-bit\n   encryption flag (located in the leftmost bit of the 32-bit
      word that\n   contains the SRTCP index).\n   SEED-CCM has two parameters:\n
      \     M   M indicates the size of the authentication tag.  In SRTP, a\n          full
      80-bit authentication tag SHOULD be used and\n          implementation of this
      specification MUST support M values of\n          10 octets.\n      L   L indicates
      the size of the length field in octets.  The\n          number of octets in
      the nonce MUST be 12, i.e., L is 3.\n   SEED-CCM has four inputs:\n      Key\n
      \         A single key is used to calculate the authentication tag\n          (using
      CBC-MAC) and to perform payload encryption using\n          counter mode.  SEED
      only supports a key size of 128 bits.\n      Nonce\n          The size of the
      nonce depends on the value selected for the\n          parameter L.  It is 15-L
      octets.  L equals 3, and hence the\n          nonce size equals 12 octets.\n
      \     Plaintext\n          In the case of SRTP, the payload of the RTP packet,
      the RTP\n          padding, and the RTP pad count field (if the latter two fields\n
      \         are present) are treated as plaintext.\n          In the case of SRTCP,
      when the encryption flag is set to 1,\n          the Encrypted Portion described
      in Fig.2 of [RFC3711] is\n          treated as plaintext.  When the encryption
      flag is set to 0,\n          the plaintext is zero-length.\n      Additional
      Authentication Data (AAD)\n          In the case of SRTP, the header of the
      RTP packet, including\n          the contributing source (CSRC) identifier (if
      present) and the\n          RTP header extension (if present), is considered
      AAD.\n          In the case of SRTCP, when the encryption flag is set to 0,\n
      \         the Authentication Portion described in Fig.2 of [RFC3711] is\n          treated
      as AAD.  When the encryption flag is set to 1, the\n          first 8 octets,
      the encryption flag, and the SRTCP index are\n          treated as AAD.\n   SEED-CCM
      accepts these four inputs and returns a ciphertext field.\n"
    title: 2.2.  Counter with CBC-MAC (CCM)
  - contents:
    - "2.3.  Galois/Counter Mode (GCM)\n   GCM is a block cipher mode of operation
      providing both\n   confidentiality and data origin authentication [GCM].  GCM
      used with\n   the SEED block cipher is denoted as SEED-GCM.\n   SEED-GCM has
      four inputs: a key, a plaintext, a nonce, and the\n   additional authenticated
      data (AAD), all described in Section 2.2.\n   The bit length of the tag, denoted
      t, is 12, and an authentication\n   tag with a length of 12 octets (96 bits)
      is used.\n"
    title: 2.3.  Galois/Counter Mode (GCM)
  title: 2.  Cryptographic Transforms
- contents:
  - '3.  Nonce Format for CCM and GCM

    '
  - contents:
    - "3.1.  Nonce for SRTP\n   The nonce for SRTP SHALL be formed in the following
      way:\n      Nonce = (16 bits of zeroes || SSRC || ROC || SEQ) XOR Salt\n   The
      4-octet SSRC and the 2-octet SEQ SHALL be taken from the RTP\n   header.  The
      4-octet ROC is from the cryptographic context.  The\n   12-octet Salt SHALL
      be produced by the SRTP key derivation function.\n"
    title: 3.1.  Nonce for SRTP
  - contents:
    - "3.2.  Nonce for SRTCP\n   The nonce for SRTCP SHALL be formed in the following
      way:\n      Nonce = (16 bits of zeroes || SSRC || 16 bits of zeroes ||\n               SRTCP
      index) XOR Salt\n   The 4-octet SSRC SHALL be taken from the RTCP header and
      the 31-bit\n   SRTCP index (packed zero-filled and right-justified into a 4-octet\n
      \  field) is from each packet.  The 12-octet Salt SHALL be produced by\n   the
      SRTP key derivation function.\n"
    title: 3.2.  Nonce for SRTCP
  title: 3.  Nonce Format for CCM and GCM
- contents:
  - "4.  Key Derivation: SEED-CTR PRF\n   Section 4.3.3 of [RFC3711] defines the AES-128
    counter mode key\n   derivation function, which it refers to as \"AES-CM PRF\".
    \ The SEED-\n   CTR PRF is defined in a similar manner, but with each invocation
    of\n   AES replaced with an invocation of SEED.\n   The currently defined PRF,
    keyed by the 128-bit master key, has input\n   block size m = 128 and can produce
    n-bit outputs for n up to 2^23.\n   SEED-PRF_n(k_master, x) SHALL be SEED in counter
    mode, as described\n   in Section 2.1; it SHALL be applied to key k_master, have
    IV equal to\n   (x*2^16), and have the output keystream truncated to the first
    n\n   (leftmost) bits.\n"
  title: '4.  Key Derivation: SEED-CTR PRF'
- contents:
  - "5.  Mandatory-to-Implement Transforms\n   \"Mandatory-to-implement\" means conformance
    to this specification, and\n   that Table 1 in this document does not supercede
    a similar table in\n   Section 5 of [RFC3711].  An RTP implementation that supports
    SEED\n   MUST implement the modes listed in Table 1 of this document.\n                            mandatory-to-implement
    \     optional\n   encryption                     SEED-CTR          SEED-CCM,SEED-GCM\n
    \  message integrity              HMAC-SHA1         SEED-CCM,SEED-GCM\n   key
    derivation (PRF)           SEED-CTR                  -\n   Table 1: Mandatory-to-implement
    and optional transforms in SRTP and\n   SRTCP\n"
  title: 5.  Mandatory-to-Implement Transforms
- contents:
  - "6.  Security Considerations\n   No security problem has been found on SEED.  SEED
    is secure against\n   all known attacks, including differential cryptanalysis,
    linear\n   cryptanalysis, and related key attacks.  The best known attack is\n
    \  only an exhaustive search for the key.  For further security\n   considerations,
    the reader is encouraged to read [SEED-EVAL].\n   See [RFC3610] and [GCM] for
    security considerations regarding the CCM\n   and GCM Modes of Operation, respectively.
    \ In the context of SRTP,\n   the procedures in [RFC3711] ensure the critical
    property of non-reuse\n   of counter values.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   [RFC4568] defines SRTP \"crypto suites\".  In order
    to allow the\n   Session Description Protocol (SDP) to signal the use of the\n
    \  algorithms defined in this document, IANA has registered the\n   following
    crypto suites into the subregistry for SRTP crypto suites\n   under the Media
    Stream Transports of the SDP Security Descriptions:\n         SEED_CTR_128_HMAC_SHA1_80\n
    \        SEED_128_CCM_80\n         SEED_128_GCM_96\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgements\n   The authors would like to thank David McGrew, Eric Rescorla,
    Alexey\n   Melnikov, Alfred Hoenes, Colin Perkins, Young-Chan Shin, the AVT WG\n
    \  (in particular, the chairmen Roni Even and Tom Taylor), and the Real-\n   time
    Applications and Infrastructure Area Directors for their reviews\n   and support.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [GCM]       Dworkin, M., \"NIST Special Publication
      800-38D:\n               Recommendation for Block Cipher Modes of Operation:\n
      \              Galois/Counter Mode (GCM) and GMAC\", U.S. National\n               Institute
      of Standards and Technology,\n               http://csrc.nist.gov/publications/nistpubs/800-38D/\n
      \              SP-800-38D.pdf\n   [RFC2104]   Krawczyk, H., Bellare, M., and
      R. Canetti, \"HMAC: Keyed-\n               Hashing for Message Authentication\",
      RFC 2104, February\n               1997.\n   [RFC2119]   Bradner, S., \"Key
      words for use in RFCs to Indicate\n               Requirement Levels\", BCP
      14, RFC 2119, March 1997.\n   [RFC3550]   Schulzrinne, H., Casner, S., Frederick,
      R., and V.\n               Jacobson, \"RTP: A Transport Protocol for Real-Time\n
      \              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3610]   Whiting,
      D., Housley, R., and N. Ferguson, \"Counter with\n               CBC-MAC (CCM)\",
      RFC 3610, September 2003.\n   [RFC3711]   Baugher, M., McGrew, D., Naslund,
      M., Carrara, E., and K.\n               Norrman, \"The Secure Real-time Transport
      Protocol\n               (SRTP)\", RFC 3711, March 2004.\n   [RFC4269]   Lee,
      H., Lee, S., Yoon, J., Cheon, D., and J. Lee, \"The\n               SEED Encryption
      Algorithm\", RFC 4269, December 2005.\n   [RFC4568]   Andreasen, F., Baugher,
      M., and D. Wing, \"Session\n               Description Protocol (SDP) Security
      Descriptions for\n               Media Streams\", RFC 4568, July 2006.\n   [TTASSEED]
      \ Telecommunications Technology Association (TTA), South\n               Korea,
      \"128-bit Symmetric Block Cipher (SEED)\",\n               TTAS.KO-12.0004/R1,
      December 2005, (In Korean)\n               http://www.tta.or.kr/English/index.jsp.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [SEED-EVAL] KISA, \"Self Evaluation Report\",\n
      \              http://seed.kisa.or.kr/eng/main.jsp\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  Test Vectors\n   All values are in hexadecimal.\n"
  - contents:
    - "A.1.  SEED-CTR Test Vectors\n   Session Key:               0c5ffd37a11edc42c325287fc0604f2e\n
      \  Rollover Counter:          00000000\n   Sequence Number:           315e\n
      \  SSRC:                      20e8f5eb\n   Authentication Key:        f93563311b354748c978913795530631\n
      \  Session Salt:              cd3a7c42c671e0067a2a2639b43a\n   Initialization
      Vector:     cd3a7c42e69915ed7a2a263985640000\n   RTP Payload:               f57af5fd4ae19562976ec57a5a7ad55a\n
      \                             5af5c5e5c5fdf5c55ad57a4a7272d572\n                              62e9729566ed66e97ac54a4a5a7ad5e1\n
      \                             5ae5fdd5fd5ac5d56ae56ad5c572d54a\n                              e54ac55a956afd6aed5a4ac562957a95\n
      \                             16991691d572fd14e97ae962ed7a9f4a\n                              955af572e162f57a956666e17ae1f54a\n
      \                             95f566d54a66e16e4afd6a9f7ae1c5c5\n                              5ae5d56afde916c5e94a6ec56695e14a\n
      \                             fde1148416e94ad57ac5146ed59d1cc5\n   Encrypted
      RTP Payload:     df5a89291e7e383e9beff765e691a737\n                              49c9e33139ad3001cd8da73ad07f69a2\n
      \                             805a70358b5c7c8c60ed359f95cf5e08\n                              f713c53ff7b808250d79a19ccb8d1073\n
      \                             4e3cb72ed1f0a4e85b002b248049ab07\n                              63dbe571bec52cf9153fdf2019e421ef\n
      \                             779cd6f4bd1c8211da8c272e2fce4393\n                              4b9eabb87362510f254149f992599036\n
      \                             f5e43102327db1ac5e78adc4f66546ed\n                              7abfb5a4db320fb7b9c52a61bc554e44\n
      \  Authentication Tag:        a5cdaa4d9edc53763855\n"
    title: A.1.  SEED-CTR Test Vectors
  - contents:
    - "A.2.  SEED-CCM Test Vectors\n   Key:                       974bee725d44fc3992267b284c3c6750\n
      \  Rollover Counter:          00000000\n   Sequence Number:           315e\n
      \  SSRC:                      20e8f5eb\n   Nonce:                     000020e8f5eb00000000315e\n
      \  Payload:                   f57af5fd4ae19562976ec57a5a7ad55a\n                              5af5c5e5c5fdf5c55ad57a4a7272d572\n
      \                             62e9729566ed66e97ac54a4a5a7ad5e1\n                              5ae5fdd5fd5ac5d56ae56ad5c572d54a\n
      \                             e54ac55a956afd6aed5a4ac562957a95\n                              16991691d572fd14e97ae962ed7a9f4a\n
      \                             955af572e162f57a956666e17ae1f54a\n                              95f566d54a66e16e4afd6a9f7ae1c5c5\n
      \                             5ae5d56afde916c5e94a6ec56695e14a\n                              fde1148416e94ad57ac5146ed59d1cc5\n
      \  AAD:                       8008315ebf2e6fe020e8f5eb\n   Encrypted RTP Payload:
      \    486843a881df215a8574650ddabf5dbb\n                              2650f06f51252bccaeb4012899d6d71e\n
      \                             30c64dad5ead5d8ba65ffe9d79aaf30d\n                              c9e6334490c07e7533d704114a9006ec\n
      \                             b3b3bff59ecf585485bc0bd286ed434c\n                              fd684d19a1ad514ca5f37b71d93288c0\n
      \                             7cf4d5e9b83db8becc8c692a7279b6a9\n                              ac62ba970fc54f46dcc926d434c0b5ad\n
      \                             8678fbf0e7a03037924dae342ef64fa6\n                              5b8eaea260fecb477a57e3919c5dab82\n
      \  Authentication Tag:        b0a8274cf6a8bb6cc466\n"
    title: A.2.  SEED-CCM Test Vectors
  - contents:
    - "A.3.  SEED-GCM Test Vectors\n   Key:                       e91e5e75da65554a48181f3846349562\n
      \  Rollover Counter:          00000000\n   Sequence Number:           315e\n
      \  SSRC:                      20e8f5eb\n   Nonce:                     000020e8f5eb00000000315e\n
      \  Payload:                   f57af5fd4ae19562976ec57a5a7ad55a\n                              5af5c5e5c5fdf5c55ad57a4a7272d572\n
      \                             62e9729566ed66e97ac54a4a5a7ad5e1\n                              5ae5fdd5fd5ac5d56ae56ad5c572d54a\n
      \                             e54ac55a956afd6aed5a4ac562957a95\n                              16991691d572fd14e97ae962ed7a9f4a\n
      \                             955af572e162f57a956666e17ae1f54a\n                              95f566d54a66e16e4afd6a9f7ae1c5c5\n
      \                             5ae5d56afde916c5e94a6ec56695e14a\n                              fde1148416e94ad57ac5146ed59d1cc5\n
      \  AAD:                       8008315ebf2e6fe020e8f5eb\n   Encrypted RTP Payload:
      \    8a5363682c6b1bbf13c0b09cf747a551\n                              2543cb2f129b8bd0e92dfadf735cda8f\n
      \                             88c4bbf90288f5e58d20c4f1bb0d5844\n                              6ea009103ee57ba99cdeabaaa18d4a9a\n
      \                             05ddb46e7e5290a5a2284fe50b1f6fe9\n                              ad3f1348c354181e85b24f1a552a1193\n
      \                             cf0e13eed5ab95ae854fb4f5b0edb2d3\n                              ee5eb238c8f4bfb136b2eb6cd7876042\n
      \                             0680ce1879100014f140a15e07e70133\n                              ed9cbb6d57b75d574acb0087eefbac99\n
      \  Authentication Tag:        36cd9ae602be3ee2cd8d5d9d\n"
    title: A.3.  SEED-GCM Test Vectors
  title: Appendix A.  Test Vectors
- contents:
  - "Authors' Addresses\n   Seokung Yoon\n   Korea Internet & Security Agency\n   IT
    Venture Tower, Jungdaero 135\n   Songpa-gu, Seoul, Korea 138-950\n   EMail: seokung@kisa.or.kr\n
    \  Joongman Kim\n   Korea Internet & Security Agency\n   IT Venture Tower, Jungdaero
    135\n   Songpa-gu, Seoul, Korea 138-950\n   EMail: seopo@kisa.or.kr\n   Haeryong
    Park\n   Korea Internet & Security Agency\n   IT Venture Tower, Jungdaero 135\n
    \  Songpa-gu, Seoul, Korea 138-950\n   EMail: hrpark@kisa.or.kr\n   Hyuncheol
    Jeong\n   Korea Internet & Security Agency\n   IT Venture Tower, Jungdaero 135\n
    \  Songpa-gu, Seoul, Korea 138-950\n   EMail: hcjung@kisa.or.kr\n   Yoojae Won\n
    \  Korea Internet & Security Agency\n   IT Venture Tower, Jungdaero 135\n   Songpa-gu,
    Seoul, Korea 138-950\n   EMail: yjwon@kisa.or.kr\n"
  title: Authors' Addresses
