- title: __initial_text__
  contents:
  - '          Securing Neighbor Discovery Proxy: Problem Statement

    '
- title: Abstract
  contents:
  - "Abstract\n   Neighbor Discovery Proxies are used to provide an address presence\
    \ on\n   a link for nodes that are no longer present on the link.  They allow\n\
    \   a node to receive packets directed at its address by allowing another\n  \
    \ device to perform Neighbor Discovery operations on its behalf.\n   Neighbor\
    \ Discovery Proxy is used in Mobile IPv6 and related protocols\n   to provide\
    \ reachability from nodes on the home network when a Mobile\n   Node is not at\
    \ home, by allowing the Home Agent to act as proxy.  It\n   is also used as a\
    \ mechanism to allow a global prefix to span multiple\n   links, where proxies\
    \ act as relays for Neighbor Discovery messages.\n   Neighbor Discovery Proxy\
    \ currently cannot be secured using Secure\n   Neighbor Discovery (SEND).  Today,\
    \ SEND assumes that a node\n   advertising an address is the address owner and\
    \ in possession of\n   appropriate public and private keys for that node.  This\
    \ document\n   describes how existing practice for proxy Neighbor Discovery relates\n\
    \   to SEND.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5909.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Scenarios  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n     2.1.  IPv6 Mobile Nodes and Neighbor Discovery Proxy . .\
    \ . . . .  4\n     2.2.  IPv6 Fixed Nodes and Neighbor Discovery Proxy  . . .\
    \ . . .  6\n     2.3.  Bridge-Like ND Proxies . . . . . . . . . . . . . . . .\
    \ . .  6\n   3.  Proxy Neighbor Discovery and SEND  . . . . . . . . . . . . .\
    \ .  9\n     3.1.  CGA Signatures and Proxy Neighbor Discovery  . . . . . . .\
    \  9\n     3.2.  Non-CGA Signatures and Proxy Neighbor Discovery  . . . . . 10\n\
    \     3.3.  Securing Proxy DAD . . . . . . . . . . . . . . . . . . . . 11\n  \
    \   3.4.  Securing Router Advertisements . . . . . . . . . . . . . . 11\n   4.\
    \  Potential Approaches to Securing Proxy ND  . . . . . . . . . . 12\n     4.1.\
    \  Secured Proxy ND and Mobile IPv6 . . . . . . . . . . . . . 12\n       4.1.1.\
    \  Mobile IPv6 and Router-Based Authorization . . . . . . 13\n       4.1.2.  Mobile\
    \ IPv6 and Per-Address Authorization  . . . . . . 13\n       4.1.3.  Cryptographic-Based\
    \ Solutions  . . . . . . . . . . . . 13\n       4.1.4.  Solution Based on the\
    \ 'Point-to-Point' Link Model  . . 14\n     4.2.  Secured Proxy ND and Bridge-Like\
    \ Proxies . . . . . . . . . 14\n       4.2.1.  Authorization Delegation . . .\
    \ . . . . . . . . . . . . 14\n       4.2.2.  Unauthorized Routers and Proxies\
    \ . . . . . . . . . . . 14\n       4.2.3.  Multiple Proxy Spans . . . . . . .\
    \ . . . . . . . . . . 15\n       4.2.4.  Routing Infrastructure Delegation  .\
    \ . . . . . . . . . 15\n       4.2.5.  Local Delegation . . . . . . . . . . .\
    \ . . . . . . . . 16\n       4.2.6.  Host Delegation of Trust to Proxies  . .\
    \ . . . . . . . 17\n     4.3.  Proxying Unsecured Addresses . . . . . . . . .\
    \ . . . . . . 17\n   5.  Two or More Nodes Defending the Same Address . . . .\
    \ . . . . . 18\n   6.  Security Considerations  . . . . . . . . . . . . . . .\
    \ . . . . 19\n     6.1.  Router Trust Assumption  . . . . . . . . . . . . . .\
    \ . . . 19\n     6.2.  Certificate Transport  . . . . . . . . . . . . . . . .\
    \ . . 19\n     6.3.  Timekeeping  . . . . . . . . . . . . . . . . . . . . . .\
    \ . 19\n   7.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . .\
    \ 20\n   8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n\
    \     8.1.  Normative References . . . . . . . . . . . . . . . . . . . 20\n  \
    \   8.2.  Informative References . . . . . . . . . . . . . . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Neighbor Discovery Proxy is defined in IPv6 Neighbor Discovery\n\
    \   [RFC4861].  It is used in networks where a prefix has to span\n   multiple\
    \ links [RFC4389] but also in Mobile IPv6 [RFC3775] (and so in\n   Mobile-IPv6-based\
    \ protocols like Network Mobility (NEMO) [RFC3963],\n   Fast Handovers for Mobile\
    \ IPv6 (FMIPv6) [RFC5568], or Hierarchical\n   Mobile IPv6 (HMIPv6) [RFC5380])\
    \ and in the Internet Key Exchange\n   Protocol (IKE) version 2 (IKEv2) [RFC4306].\
    \  It allows a device that\n   is not physically present on a link to have another\
    \ advertise its\n   presence, and forward packets to the off-link device.\n  \
    \ Neighbor Discovery Proxy relies upon another device, the proxy, to\n   monitor\
    \ for Neighbor Solicitations (NSs), and answer with Neighbor\n   Advertisements\
    \ (NAs).  These proxy Neighbor Advertisements direct\n   data traffic through\
    \ the proxy.  Proxied traffic is then forwarded to\n   the end destination.\n"
- title: 2.  Scenarios
  contents:
  - "2.  Scenarios\n   This section describes the different scenarios where the interaction\n\
    \   between Secure Neighbor Discovery (SEND) and ND Proxy raises issues.\n"
- title: 2.1.  IPv6 Mobile Nodes and Neighbor Discovery Proxy
  contents:
  - "2.1.  IPv6 Mobile Nodes and Neighbor Discovery Proxy\n   The goal of IPv6 mobility\
    \ is to allow nodes to remain reachable while\n   moving around in the IPv6 Internet.\
    \  The following text is focused on\n   Mobile IPv6 but the issue raised by the\
    \ interaction between SEND and\n   ND Proxy may be the same with Mobile IPv6 based\
    \ protocols (e.g.,\n   NEMO, HMIPv6).\n   For Mobile IPv6 Mobile Nodes (MNs),\
    \ it is necessary to keep existing\n   sessions going or to allow new sessions\
    \ even when one leaves the home\n   network.\n   In order to continue existing\
    \ sessions, when nodes are present on the\n   home link, the Proxy (i.e., the\
    \ Home Agent in Mobile IPv6) sends an\n   unsolicited NA to the all-nodes multicast\
    \ address on the home link as\n   specified [RFC3775].\n   For new sessions, the\
    \ Proxy, which listens to the MN's address\n   responds with a Neighbor Advertisement\
    \ that originates at its own\n   IPv6 address and has the proxy's address as the\
    \ Target Link-Layer\n   Address, but contains the absent mobile in the Target\
    \ Address field\n   of the Neighbor Advertisement.  In this case, SEND cannot\
    \ be applied\n   because the address in the Target Address field is not the same\
    \ as\n   the one in the Source Address field of the IP header.\n   As seen in\
    \ Figure 1, solicitors send a multicast solicitation to the\n   solicited nodes\
    \ multicast address (based on the unicast address) of\n   the absent node (a mobile\
    \ node that is away from the home link).\n            Absent Mobile       Proxy\
    \         Solicitor\n                                        NS:SL3=S,DL3=Sol(A),TA=A\n\
    \                               +-----+     SL2=s,DL2=sol(a),SLL=s\n         \
    \                      |     |<================\n                            \
    \   |     |\n                               |     |================>\n       \
    \                        +-----+  NA:SL3=P,DL3=S,TA=A,\n                     \
    \                      SL2=p,DL2=s,TLL=p\n   Legend:\n      SL3: Source      IPv6\
    \ Address         NS: Neighbor Solicitation\n      DL3: Destination IPv6 Address\
    \         NA: Neighbor Advertisement\n      SL2: Source Link-Layer Address   \
    \     RS: Router Solicitation\n      DL2: Destination Link-Layer Address   RA:\
    \ Router Advertisement\n      TA:  Target Address\n      SLL/TLL:  Source/Target\
    \ Link-Layer Address Option\n                                 Figure 1\n   While\
    \ at home, if the MN has configured Cryptographically Generated\n   Addresses\
    \ (CGAs) [RFC3972], it can secure establishment by its on-\n   link neighbors\
    \ of Neighbor Cache Entries (NCEs) for its CGAs by using\n   SEND [RFC3971]. \
    \ SEND security requires a node sending Neighbor\n   Advertisements for a given\
    \ address to be in possession of the public/\n   private key pair that generated\
    \ the address.\n   When an MN moves away from the home link, a proxy has to undertake\n\
    \   Neighbor Discovery signaling on behalf of the MN.  In Mobile IPv6,\n   the\
    \ role of the proxy is undertaken by the Home Agent.  While the\n   Home Agent\
    \ has a security association with the MN, it does not have\n   access to the public/private\
    \ key pair used to generate the MN's CGA.\n   Thus, the Home Agent acting as an\
    \ ND proxy cannot use SEND for the\n   address it is proxying [RFC3971].\n   When\
    \ an MN moves from the home network to a visited network, the\n   proxy will have\
    \ to override the MN's existing Neighbor Cache Entries\n   that are flagged as\
    \ secure [RFC3971].  This is needed for the Home\n   Agent to intercept traffic\
    \ sent on-link to the MN that would\n   otherwise be sent to the MN's link-layer\
    \ address.\n   With the current SEND specification, any solicitation or\n   advertisement\
    \ sent by the proxy will be unsecure and thus will not be\n   able to update the\
    \ MN's NCE for the home address because it is\n   flagged as secured.  These existing\
    \ Neighbor Cache Entries will only\n   time-out after Neighbor Unreachability\
    \ Detection [RFC4861] concludes\n   the Home Address is unreachable at the link\
    \ layer recorded in the\n   NCE.\n   Where secured proxy services are not able\
    \ to be provided, a proxy's\n   advertisement may be overridden by a rogue proxy\
    \ without the\n   receiving host realizing that an attack has occurred.  This\
    \ is\n   identical to what happens in a network where SEND is not deployed.\n"
- title: 2.2.  IPv6 Fixed Nodes and Neighbor Discovery Proxy
  contents:
  - "2.2.  IPv6 Fixed Nodes and Neighbor Discovery Proxy\n   This scenario is a sub-case\
    \ of the previous one.  In this scenario,\n   the IPv6 node will never be on the\
    \ link where the ND messages are\n   proxied.  For example, an IPv6 node gains\
    \ remote access to a network\n   protected by a security gateway that runs IKEv2\
    \ [RFC4306].  When a\n   node needs an IP address in the network protected by\
    \ a security\n   gateway, the security gateway assigns an address dynamically\
    \ using\n   Configuration Payload during IKEv2 exchanges.  The security gateway\n\
    \   then needs to receive packets sent to this address; one way to do so\n   would\
    \ be to proxy ND messages.\n"
- title: 2.3.  Bridge-Like ND Proxies
  contents:
  - "2.3.  Bridge-Like ND Proxies\n   The Neighbor Discovery (ND) Proxy specification\
    \ [RFC4389] defines an\n   alternative method to classic bridging.  Just as with\
    \ classic\n   bridging, multiple link-layer segments are bridged into a single\n\
    \   segment, but with the help of proxying at the IP layer rather than\n   link-layer\
    \ bridging.  In this case, the proxy forwards messages while\n   modifying their\
    \ source and destination MAC addresses, and it rewrites\n   their solicited and\
    \ override flags and Link-Layer Address Options.\n   This rewriting is incompatible\
    \ with SEND signed messages for a number\n   of reasons:\n   o  Rewriting elements\
    \ within the message will break the digital\n      signature.\n   o  The source\
    \ IP address of each packet is the packet's origin, not\n      the proxy's address.\
    \  The proxy is unable to generate another\n      signature for this address,\
    \ as it doesn't have the CGA private key\n      [RFC3971].\n   Thus, proxy modification\
    \ of SEND solicitations may require sharing of\n   credentials between the proxied\
    \ node and the proxying node or\n   creation of new options with proxying capabilities.\n\
    \   While bridge-like ND proxies aim to provide as little interference\n   with\
    \ ND mechanisms as possible, SEND has been designed to prevent\n   modification\
    \ or spoofing of advertisements by devices on the link.\n   Of particular note\
    \ is the fact that ND Proxy performs a different\n   kind of proxy Neighbor Discovery\
    \ to Mobile IPv6 [RFC3775] [RFC4389].\n   RFC 3775 (Mobile IPv6) specifies that\
    \ the Home Agent as proxy sends\n   Neighbor Advertisements from its own address\
    \ with the Target Address\n   set to the absent Mobile Node's address.  The Home\
    \ Agent's own link-\n   layer address is placed in the Target Link-Layer Address\
    \ Option\n   [RFC3775].  On the other hand, ND Proxy resends messages containing\n\
    \   their original address, even after modification (i.e., the IP source\n   address\
    \ remains the same) [RFC4389].  Figure 2 describes packet\n   formats for proxy\
    \ Neighbor solicitation and advertisement as\n   specified by RFC 4389.\n    \
    \        Advertiser          Proxy         Solicitor\n     NS:SL3=S,DL3=Sol(A),TA=A,\
    \          NS:SL3=S,DL3=Sol(A),TA=A,\n        SL2=p,DL2=sol(a),SLL=p +-----+ \
    \     SL2=s,DL2=sol(a),SLL=s\n            <==================|     |<================\n\
    \                               |     |\n            ==================>|    \
    \ |================>\n     NA:SL3=A,DL3=S,TA=A,      +-----+  NA:SL3=A,DL3=S,TA=A\n\
    \        SL2=a,DL2=p,TLL=a                  SL2=p,DL2=s,TLL=p\n   Legend:\n  \
    \    SL3: Source      IPv6 Address         NS: Neighbor Solicitation\n      DL3:\
    \ Destination IPv6 Address         NA: Neighbor Advertisement\n      SL2: Source\
    \ Link-Layer Address\n      DL2: Destination Link-Layer Address\n      TA:  Target\
    \ Address\n      SLL/TLL:  Source/Target Link-Layer Address Option\n         \
    \                        Figure 2\n   In order to use the same security procedures\
    \ for both ND Proxy and\n   Mobile IPv6, changes may be needed to the proxying\
    \ procedures in\n   [RFC4389], as well as changes to SEND.\n   An additional (and\
    \ undocumented) requirement for bridge-like proxying\n   is the operation of router\
    \ discovery.  Router discovery packets may\n   similarly modify Neighbor Cache\
    \ state, and require protection from\n   SEND.\n   In Figure 3, the router discovery\
    \ messages propagate without\n   modification to the router address, but elements\
    \ within the message\n   change.  This is consistent with the description of Neighbor\n\
    \   Discovery above.\n            Advertiser          Proxy         Solicitor\n\
    \     RS:SL3=S,DL3=AllR,                 RS:SL3=S,DL3=AllR,\n        SL2=p,DL2=allr,SLL=p\
    \   +-----+     SL2=s,DL2=allr,SLL=s\n            <==================|     |<================\n\
    \                               |     |\n            ==================>|    \
    \ |================>\n     RA:SL3=A,DL3=S,           +-----+  RA:SL3=A,DL3=S,\n\
    \        SL2=a,DL2=p,SLL=a                 SL2=p,DL2=s,SLL=p\n   Legend:\n   \
    \   SL3: Source      IPv6 Address         RS: Router Solicitation\n      DL3:\
    \ Destination IPv6 Address         RA: Router Advertisement\n      SL2: Source\
    \ Link-Layer Address\n      DL2: Destination Link-Layer Address\n      TA:  Target\
    \ Address\n      SLL/TLL:  Source/Target Link-Layer Address Option\n         \
    \                        Figure 3\n   Once again, these messages may not be signed\
    \ with a CGA signature by\n   the proxy, because it does not own the source address.\n\
    \   Additionally, Authorization Delegation Discovery messages need to be\n   exchanged\
    \ for bridge-like ND proxies to prove their authority to\n   forward.  Unless\
    \ the proxy receives explicit authority to act as a\n   router, or the router\
    \ knows of its presence, no authorization may be\n   made.  This explicit authorization\
    \ requirement may be at odds with\n   the zero configuration goal of ND proxying\
    \ [RFC4389].\n   An alternative (alluded to in an appendix of ND Proxy [RFC4389])\n\
    \   suggests that the proxy send Router Advertisements (RAs) from its own\n  \
    \ address.  As described by ND Proxy, this is insufficient for\n   providing proxied\
    \ Neighbor Advertisement service, but may be matched\n   with Neighbor solicitation\
    \ and advertisement services using the\n   proxy's source address in the same\
    \ way as Mobile IPv6 [RFC4389]\n   [RFC3775].  This means that all router and\
    \ Neighbor advertisements\n   would come from the proxied address, but may contain\
    \ a target address\n   that allows proxied Neighbor presence to be established\
    \ with peers on\n   other segments.  Router discovery in this case has the identity\
    \ of\n   the original (non-proxy) router completely obscured in router\n   discovery\
    \ messages.\n   The resultant proxy messages would have no identifying information\n\
    \   indicating their origin, which means that proxying between multiple\n   links\
    \ would require state to be stored on outstanding solicitations\n   (effectively\
    \ a ND only NAT).  This level of state storage may be\n   undesirable.\n   Mobile\
    \ IPv6 does not experience this issue when supplying its own\n   address, since\
    \ ND messages are never forwarded on to the absent node\n   (the Home Agent having\
    \ sufficient information to respond itself).\n   Authorization from a router may\
    \ still be required for Router\n   Advertisement, and will be discussed in Section\
    \ 4.2.\n"
- title: 3.  Proxy Neighbor Discovery and SEND
  contents:
  - "3.  Proxy Neighbor Discovery and SEND\n   There are currently no existing secured\
    \ Neighbor Discovery procedures\n   for proxied addresses, and all Neighbor Advertisements\
    \ from SEND\n   nodes are required to have equal source and target addresses,\
    \ and be\n   signed by the transmitter (Section 7.4 of [RFC3971]).\n   Signatures\
    \ over SEND messages are required to be applied on the CGA\n   source address\
    \ of the message, and there is no way of indicating that\n   a message is proxied.\n\
    \   Even if the message is able to be transmitted from the original\n   owner,\
    \ differences in link-layer addressing and options require\n   modification by\
    \ a proxy.  If a message is signed with a CGA-based\n   signature, the proxy is\
    \ unable to regenerate a signature over the\n   changed message as it lacks the\
    \ keying material.\n   Therefore, a router wishing to provide proxy Neighbor Advertisement\n\
    \   service cannot use existing SEND procedures on those messages.\n   A host\
    \ may wish to establish a session with a device that is not on-\n   link but is\
    \ proxied.  As a SEND host, it prefers to create Neighbor\n   Cache Entries using\
    \ secured procedures.  Since SEND signatures cannot\n   be applied to an existing\
    \ proxy Neighbor Advertisement, it must\n   accept non-SEND advertisements in\
    \ order to receive proxy Neighbor\n   Advertisements.\n   Neighbor Cache spoofing\
    \ of another node therefore becomes trivial, as\n   any address may be proxy-advertised\
    \ to the SEND node, and overridden\n   only if the node is there to protect itself.\
    \  When a node is present\n   to defend itself, it may also be difficult for the\
    \ solicitor\n   determine the difference between a proxy-spoofing attack, and\
    \ a\n   situation where a proxied device returns to a link and overrides\n   other\
    \ proxy advertisers [RFC4861].\n"
- title: 3.1.  CGA Signatures and Proxy Neighbor Discovery
  contents:
  - "3.1.  CGA Signatures and Proxy Neighbor Discovery\n   SEND defines one public-key\
    \ and signature format for use with\n   Cryptographically Generated Addresses\
    \ (CGAs) [RFC3972].  CGAs are\n   intended to tie address ownership to a particular\
    \ public/private key\n   pair.\n   In SEND as defined today, Neighbor Discovery\
    \ messages (including the\n   IP Addresses from the IPv6 header) are signed with\
    \ the same key used\n   to generate the CGA.  This means that message recipients\
    \ have proof\n   that the signer of the message owned the address.\n   When a\
    \ proxy replaces the message's source IPv6 address with its own\n   CGA, the existing\
    \ CGA option and RSA signature option would need to\n   be replaced with ones\
    \ that correspond to the CGA of the proxy.  To be\n   valid according to the SEND\
    \ specification, the Target Address of the\n   Neighbor Advertisement message\
    \ would need to be replaced also to be\n   equal to the Source Address [RFC3971].\n\
    \   Additional authorization information may be needed to prove that the\n   proxy\
    \ is indeed allowed to advertise for the target address, as is\n   described in\
    \ Section 4.\n"
- title: 3.2.  Non-CGA Signatures and Proxy Neighbor Discovery
  contents:
  - "3.2.  Non-CGA Signatures and Proxy Neighbor Discovery\n   Where a proxy retains\
    \ the original source address in a proxied\n   message, existing security checks\
    \ for SEND will fail, since fields\n   within the message will be changed.  In\
    \ order to achieve secured\n   proxy Neighbor Discovery in this case, extended\
    \ authorization\n   mechanisms may be needed for SEND.\n   SEND provides mechanisms\
    \ for extension of SEND to non-CGA-based\n   authorization.  Messages are available\
    \ for Authorization Delegation\n   Discovery, which is able to carry arbitrary\
    \ PKIX/X.509 certificates\n   [RFC5280].\n   There is, however, no specification\
    \ of keying information option\n   formats analogous to the SEND CGA Option [RFC3971].\
    \  The existing\n   option allows a host to verify message integrity by specifying\
    \ a key\n   and algorithm for digital signature, without providing authorization\n\
    \   via mechanisms other than CGA ownership.\n   The digital signature in SEND\
    \ is transported in the RSA Signature\n   Option.  As currently specified, the\
    \ signature operation is performed\n   over a CGA Message type, and allows for\
    \ CGA verification.  Updating\n   the signature function to support non-CGA operations\
    \ may be\n   necessary.\n   Within SEND, more advanced functions such as routing\
    \ may be\n   authorized by certificate path verification using Authorization\n\
    \   Delegation Discovery.\n   With non-CGA signatures and authentication, certificate\
    \ contents for\n   authorization may need to be determined, as outlined in Section\
    \ 4.\n   While SEND provides for extensions to new non-CGA methods, existing\n\
    \   SEND hosts may silently discard messages with unverifiable RSA\n   signature\
    \ options (Section 5.2.2 of [RFC3971]), if configured only to\n   accept SEND\
    \ messages.  In cases where unsecured Neighbor Cache\n   Entries are still accepted,\
    \ messages from new algorithms will be\n   treated as unsecured.\n"
- title: 3.3.  Securing Proxy DAD
  contents:
  - "3.3.  Securing Proxy DAD\n   Initiation of proxy Neighbor Discovery also requires\
    \ Duplicate\n   Address Detection (DAD) checks of the address [RFC4862].  These\
    \ DAD\n   checks need to be performed by sending Neighbor Solicitations, from\n\
    \   the unspecified source address, with the target being the proxied\n   address.\n\
    \   In existing SEND procedures, the address that is used for CGA tests\n   on\
    \ DAD NS is the target address.  A Proxy that originates this\n   message while\
    \ the proxied address owner is absent is unable to\n   generate a CGA-based signature\
    \ for this address and must undertake\n   DAD with an unsecured NS.  It may be\
    \ possible that the proxy can\n   ensure that responding NAs are secured though.\n\
    \   Where bridge-like ND proxy operations are being performed, DAD NSs\n   may\
    \ be copied from the original source, without modification\n   (considering they\
    \ have an unspecified source address and contain no\n   link-layer address options)\
    \ [RFC4389].\n   If non-CGA-based signatures are available, then the signature\
    \ over\n   the DAD NS doesn't need to have a CGA relationship to the Target\n\
    \   Address, but authorization for address configuration needs to be\n   shown\
    \ using certificates.\n   In case there is a DAD collision between two SEND nodes\
    \ on different\n   interfaces of the proxy, it is possible that the proxy may\
    \ not have\n   the authority to modify the NA defending the address.  In this\
    \ case,\n   the proxy still needs to modify the NA and pass it onto the other\n\
    \   interfaces even if it will fail SEND verification on the receiving\n   node.\n"
- title: 3.4.  Securing Router Advertisements
  contents:
  - "3.4.  Securing Router Advertisements\n   While Router Solicitations are protected\
    \ in the same manner as\n   Neighbor Solicitations, the security for Router Advertisements\
    \ is\n   mainly based on the use of certificates.  Even though the mechanism\n\
    \   for securing RAs is different, the problems that arise due to the\n   modification\
    \ of the L2 addresses are exactly the same: the proxy\n   needs to have the right\
    \ security material (e.g., certificate) to sign\n   the RA messages after modification.\n"
- title: 4.  Potential Approaches to Securing Proxy ND
  contents:
  - "4.  Potential Approaches to Securing Proxy ND\n   SEND nodes already have the\
    \ concept of delegated authority through\n   requiring external authorization\
    \ of routers to perform their routing\n   and advertisement roles.  The authorization\
    \ of these routers takes\n   the form of delegation certificates.\n   Proxy Neighbor\
    \ Discovery requires a delegation of authority (on\n   behalf of the absent address\
    \ owner) to the proxier.  Without this\n   authority, other devices on the link\
    \ have no reason to trust an\n   advertiser.\n   For bridge-like proxies, it is\
    \ assumed that there is no preexisting\n   trust between the host owning the address\
    \ and the proxy.  Therefore,\n   authority may necessarily be dynamic or based\
    \ on topological roles\n   within the network [RFC4389].\n   Existing trust relationships\
    \ lend themselves to providing authority\n   for proxying in two alternative ways.\n\
    \   First, the SEND router authorization mechanisms described above\n   provide\
    \ delegation from the organization responsible for routing in\n   an address domain\
    \ to the certified routers.  It may be argued that\n   routers so certified may\
    \ be trusted to provide service for nodes that\n   form part of a link's address\
    \ range, but are themselves absent.\n   Devices which are proxies could either\
    \ be granted the right to proxy\n   by the network's router, or be implicitly\
    \ allowed to proxy by virtue\n   of being an authorized router.\n   Second, where\
    \ the proxied address is itself a CGA, the holder of the\n   public and private\
    \ keys is seen to be authoritative about the\n   address's use.  If this address\
    \ owner was able to sign the proxier's\n   address and public key information,\
    \ it would be possible to identify\n   that the proxy is known and trusted by\
    \ the CGA address owner for\n   proxy service.  This method requires that the\
    \ proxied address know or\n   learn the proxy's address and public key, and that\
    \ the certificate\n   signed by the proxied node's is passed to the proxy, either\
    \ while\n   they share the same link, or at a later stage.\n   In both methods,\
    \ the original address owner's advertisements need to\n   override the proxy if\
    \ it suddenly returns, and therefore timing and\n   replay protection from such\
    \ messages need to be carefully considered.\n"
- title: 4.1.  Secured Proxy ND and Mobile IPv6
  contents:
  - "4.1.  Secured Proxy ND and Mobile IPv6\n   Mobile IPv6 has a security association\
    \ between the Mobile Node and\n   Home Agent.  The Mobile Node sends a Binding\
    \ Update to the Home\n   Agent, to indicate that it is not at home.  This implies\
    \ that the\n   Mobile Node wishes the Home Agent to begin proxy Neighbor Discovery\n\
    \   operations for its home address(es).\n"
- title: 4.1.1.  Mobile IPv6 and Router-Based Authorization
  contents:
  - "4.1.1.  Mobile IPv6 and Router-Based Authorization\n   A secured Proxy Neighbor\
    \ Advertisements proposal based on existing\n   router trust would require no\
    \ explicit authorization signaling\n   between HA and MN to allow proxying.  Hosts\
    \ on the home link will\n   believe proxied advertisements solely because they\
    \ come from a\n   trusted router.\n   Where the home agent operates as a router\
    \ without explicit trust to\n   route from the advertising routing infrastructure\
    \ (such as in a home,\n   with a router managed by an ISP), more explicit proxying\n\
    \   authorization may be required, as described in Section 4.2.\n"
- title: 4.1.2.  Mobile IPv6 and Per-Address Authorization
  contents:
  - "4.1.2.  Mobile IPv6 and Per-Address Authorization\n   Where proxy Neighbor Discovery\
    \ is delegated by the MN to the home\n   agent, the MN needs to learn the public\
    \ key for the Home Agent, so\n   that it can generate a certificate authorizing\
    \ the public/private key\n   pair to be used in proxying.  It may conceivably\
    \ do this using\n   Certificate Path Solicitations either over a home tunnel,\
    \ when it is\n   away from home, or during router discovery while still at home\n\
    \   [RFC3971] [RFC3775].\n   When sending its Binding Update to the HA, the MN\
    \ would need to\n   provide a certificate containing the subject's (i.e., proxy\
    \ HA's)\n   public key and address, the issuer's (i.e., MN's) CGA and public key,\n\
    \   and timestamps indicating when the authority began and when it ends.\n   This\
    \ certificate would need to be transmitted at binding time.\n   Messaging or such\
    \ an exchange mechanism would have to be developed.\n"
- title: 4.1.3.  Cryptographic-Based Solutions
  contents:
  - "4.1.3.  Cryptographic-Based Solutions\n   Specific cryptographic algorithms may\
    \ help to allow trust between\n   entities of a same group.\n   This is the case,\
    \ for example, with ring signature algorithms.  These\n   algorithms generate\
    \ a signature using the private key of any member\n   from the same group, but\
    \ to verify the signature the public keys of\n   all group members are required.\
    \  Applied to SEND, the addresses are\n   cryptographically generated using multiple\
    \ public keys, and the\n   Neighbor Discovery messages are signed with an RSA\
    \ ring signature\n   [RING].  (Note that the cryptographic algorithms that are\
    \ the\n   foundation for [RING] and other similar solutions are not widely\n \
    \  accepted in the security community; additional research is needed\n   before\
    \ a Standards Track protocol could be developed.)\n"
- title: 4.1.4.  Solution Based on the 'Point-to-Point' Link Model
  contents:
  - "4.1.4.  Solution Based on the 'Point-to-Point' Link Model\n   Another approach\
    \ is to use the 'Point-to-Point' link model.\n   In this model, one prefix is\
    \ provided per MN, and only an MN and the\n   HA are on a same link.  The consequence\
    \ is the HA no longer needs to\n   act as ND Proxy.\n   One way to design such\
    \ a solution is to use virtual interfaces, on\n   the MN and the HA, and a virtual\
    \ link between them.  Addresses\n   generated on the virtual interfaces will only\
    \ be advertised on the\n   virtual link.  For Mobile IPv6, this results in a virtual\
    \ Home\n   Network where the MN will never come back.\n"
- title: 4.2.  Secured Proxy ND and Bridge-Like Proxies
  contents:
  - "4.2.  Secured Proxy ND and Bridge-Like Proxies\n   In link-extension environments,\
    \ the role of a proxy is more\n   explicitly separated from that of a router.\
    \  In SEND, routers may\n   expect to be authorized by the routing infrastructure\
    \ to advertise\n   and may provide this authority to hosts in order to allow them\
    \ to\n   change forwarding state.\n   Proxies are not part of the traditional\
    \ infrastructure of the\n   Internet, and hosts or routers may not have an explicit\
    \ reason to\n   trust them, except that they can forward packets to regions where\n\
    \   otherwise those hosts or routers could not reach.\n"
- title: 4.2.1.  Authorization Delegation
  contents:
  - "4.2.1.  Authorization Delegation\n   If a proxy can convince a device that it\
    \ should be trusted to perform\n   proxying function, it may require that device\
    \ to vouch for its\n   operation in dealing with other devices.  It may do this\
    \ by receiving\n   a certificate, signed by the originating device that the proxy\
    \ is\n   believed capable of proxying under certain circumstances.\n   This allows\
    \ nodes receiving proxied Neighbor Discovery packets to\n   quickly check if the\
    \ proxy is authorized for the operation.  There\n   are several bases for such\
    \ trust, and requirements in proxied\n   environments, which are discussed below.\n"
- title: 4.2.2.  Unauthorized Routers and Proxies
  contents:
  - "4.2.2.  Unauthorized Routers and Proxies\n   Routers may be advertising on networks\
    \ without any explicit\n   authorization, and SEND hosts will register these routers\
    \ if there\n   are no other options [RFC3971].  While proxies may similarly attempt\n\
    \   to advertise without authority, this provides no security for the\n   routing\
    \ infrastructure.  Any device can be setup as a SEND proxy/\n   router so long\
    \ as it signs its own ND messages from its CGA.\n   This may not help in the case\
    \ that a proxy attempts to update\n   Neighbor Cache Entries for a SEND node that\
    \ moves between links,\n   since the SEND node's authority to advertise its own\
    \ CGA address\n   would not be superseded by a proxy with no credentials.\n"
- title: 4.2.3.  Multiple Proxy Spans
  contents:
  - "4.2.3.  Multiple Proxy Spans\n   Proxies may have multiple levels of nesting,\
    \ which allow the network\n   to connect between non-adjacent segments.\n   In\
    \ this case, authority delegated at one point will have to be\n   redelegated\
    \ (possibly in a diluted form) to proxies further away from\n   the origin of\
    \ the trust.\n       Trust        Proxy A            Proxy B     Distant\n   \
    \    Origin - T                                  Node - D\n        +-----+   \
    \                                 +-----+\n        |     |                   \
    \                 |     |\n        +-----+     +-----+            +-----+    \
    \ +-----+\n           |        |     |            |     |        |\n        ------------|\
    \     |------------|     |----------\n                    |     |            |\
    \     |\n                    +-----+            +-----+\n          ==========>\
    \     ==============>    ==========>\n          Deleg(A,T)    Deleg(B,Deleg(A,T))\
    \   Advertise(D, Deleg(B,\n                                                  \
    \  Deleg(A,T))\n                                 Figure 4\n   As shown in Figure\
    \ 4, the Proxy A needs to redelegate authority to\n   proxy for T to Proxy B;\
    \ this allows it to proxy advertisements that\n   target T back to D.\n"
- title: 4.2.4.  Routing Infrastructure Delegation
  contents:
  - "4.2.4.  Routing Infrastructure Delegation\n   Where it is possible for the proxy\
    \ to pre-establish trust with the\n   routing infrastructure, or at least to the\
    \ local router, it may be\n   possible to authorize proxying as a function of\
    \ routing within the\n   subnet.  The router or CA may then be able to certify\
    \ proxying for\n   only a subset of the prefixes for which it is itself certified.\n\
    \   If a router or CA provides certification for a particular prefix, it\n   may\
    \ be able to indicate that only proxying is supported, so that\n   Neighbor Cache\
    \ Entries of routers connected to Internet\n   infrastructure are never overridden\
    \ by the proxy, if the router is\n   present on a segment.\n   Hosts understanding\
    \ such certificates may allow authorized proxies\n   and routers to override the\
    \ host when assuming proxy roles, if the\n   host is absent.\n   Proxy certificate\
    \ signing could be done either dynamically (requiring\n   exchanges of identity\
    \ and authorization information) or statically\n   when the network is set up.\n"
- title: 4.2.5.  Local Delegation
  contents:
  - "4.2.5.  Local Delegation\n   Where no trust tie exists between the authority\
    \ that provides the\n   routing infrastructure and the provider of bridging and\
    \ proxying\n   services, it may still be possible for SEND hosts to trust the\n\
    \   bridging provider to authorize proxying operations.\n   SEND itself requires\
    \ that routers be able to show authorization, but\n   doesn't require routers\
    \ to have a single trusted root.\n   A local bridging/proxying authority trust\
    \ delegation may be possible.\n   It would be possible for this authority to pass\
    \ out local-use\n   certificates, allowing proxying on a specific subnet or subnets,\
    \ with\n   a separate authorization chain to those subnets for the routers with\n\
    \   Internet access.\n   This would require little modification to SEND, other\
    \ than the\n   addition of router-based proxy authority (as in Section 4.2.4),\
    \ and\n   proxies would in effect be treated as routers by SEND hosts\n   [RFC3971].\
    \  Distribution of keying and trust material for the initial\n   bootstrap of\
    \ proxies would not be provided though (and may be\n   static).\n   Within small\
    \ domains, key management and distribution may be a\n   tractable problem, so\
    \ long as these operations are simple enough to\n   perform.\n   Since these domains\
    \ may be small, it may be necessary to provide\n   certificate chains for trust\
    \ anchors that weren't requested in\n   Certificate Path Solicitations, if the\
    \ proxy doesn't have a trust\n   chain to any requested trust anchor.\n   This\
    \ is akin to 'suggesting' an appropriate trusted root.  It may\n   allow for user\
    \ action in allowing trust extension when visiting\n   domains without ties to\
    \ a global keying infrastructure.  In this\n   case, the trust chain would have\
    \ to start with a self-signed\n   certificate from the original CA.\n"
- title: 4.2.6.  Host Delegation of Trust to Proxies
  contents:
  - "4.2.6.  Host Delegation of Trust to Proxies\n   Unlike Mobile IPv6, for bridge-like\
    \ proxied networks, there is no\n   existing security association upon which to\
    \ transport proxying\n   authorization credentials.\n   Thus, proxies need to\
    \ convince Neighbors to delegate proxy authority\n   to them, in order to proxy-advertise\
    \ to nodes on different segments.\n   It will be difficult without additional\
    \ information to distinguish\n   between legitimate proxies and devices that have\
    \ no need or right to\n   proxy (and may want to make two network segments appear\
    \ connected).\n   When proxy advertising, proxies must not only identify that\
    \ proxying\n   needs to occur, but provide proof that they are allowed to do so,\
    \ so\n   that SEND Neighbor Cache Entries may be updated.  Unless the\n   authorization\
    \ to update such entries is tied to address ownership\n   proofs from the proxied\
    \ host or the verifiable routing\n   infrastructure, spoofing may occur.\n   When\
    \ a host received a proxied Neighbor advertisement, it would be\n   necessary\
    \ to check authorization in the same way that authorization\n   delegation discovery\
    \ is performed in SEND.\n   Otherwise, certificate transport will be required\
    \ to exchange\n   authorization between proxied nodes and proxies.\n   Proxies\
    \ would have to be able to delegate this authorization to\n   downstream proxies,\
    \ as described in Section 4.2.3.\n"
- title: 4.3.  Proxying Unsecured Addresses
  contents:
  - "4.3.  Proxying Unsecured Addresses\n   Where the original Neighbor Discovery\
    \ message is unsecured, there is\n   an argument for not providing secured proxy\
    \ service for that node.\n   In both the Mobile IPv6 and extended networks cases,\
    \ the node may\n   arrive back at the network and require other hosts to map their\n\
    \   existing Neighbor Cache Entry to the node's link-layer address.  The\n   re-arriving\
    \ node's overriding of link-layer address mappings will\n   occur without SEND\
    \ in this case.\n   It is notable that without SEND protection any node may spoof\
    \ the\n   arrival, and effectively steal service across an extended network.\n\
    \   This is the same as in the non-proxy case, and is not made\n   significantly\
    \ worse by the proxy's presence (although the identity of\n   the attacker may\
    \ be masked if source addresses are being replaced).\n   If signatures over the\
    \ proxied messages were to be used, re-arrival\n   and override of the Neighbor\
    \ Cache Entries would have to be allowed,\n   so the signatures would indicate\
    \ that at least the proxy wasn't\n   spoofing (even if the original sender was).\n\
    \   For non-SEND routers, though, it may be possible for secured proxies\n   to\
    \ send signed router advertisement messages, in order to ensure that\n   routers\
    \ aren't spoofed, and subsequently switched to different parts\n   of the extended\
    \ network.\n   This has problems in that the origin is again unsecured, and any\
    \ node\n   on the network could spoof router advertisement for an unsecured\n\
    \   address.  These spoofed messages may become almost indistinguishable\n   (except\
    \ for the non-CGA origin address) from unspoofed messages from\n   SEND routers.\n\
    \   Given these complexities, the simplest method is to allow unsecured\n   devices\
    \ to be spoofed from any port on the network, as is the case\n   today.\n"
- title: 5.  Two or More Nodes Defending the Same Address
  contents:
  - "5.  Two or More Nodes Defending the Same Address\n   All the previous sections\
    \ of this document focused on the case where\n   two nodes defend the same address\
    \ (i.e., the node and the proxy).\n   However, there are also cases where two\
    \ or more nodes are defending\n   the same address.  This is at least the case\
    \ for:\n   o  Nodes having the same address, as the Mobile Access Gateway's\n\
    \      (MAG's) ingress link-local address in Proxy Mobile IPv6 (PMIPv6)\n    \
    \  [RFC5213].\n   o  Nodes having a common anycast address [RFC4291].\n   The\
    \ problem statement, described previously in this document, applies\n   for these\
    \ cases, and the issues are the same from a signaling point\n   of view.\n   Multicast\
    \ addresses are not mentioned here because Neighbor Discovery\n   Protocol is\
    \ not used for them.\n   In the first case, [RFC5213] assumes that the security\
    \ material used\n   by SEND (i.e., public-private key pair) is shared between\
    \ all the\n   MAGs.  For the second case, there is no solution today.  But, in\
    \ the\n   same way, it should be possible to assume that the nodes having a\n\
    \   common anycast address could also share the security material.\n   It is important\
    \ to notice that when many nodes defending the same\n   address are not in the\
    \ same administrative domain (e.g., MAGs in\n   different administrative domains\
    \ but in the same PMIPv6 domain\n   [RFC5213]), sharing the security material\
    \ used by SEND may raise a\n   security issue.\n"
- title: 6.  Security Considerations
  contents:
  - '6.  Security Considerations

    '
- title: 6.1.  Router Trust Assumption
  contents:
  - "6.1.  Router Trust Assumption\n   Router-based authorization for Secured Proxy\
    \ ND may occur without the\n   knowledge or consent of a device.  It is susceptible\
    \ to the 'Good\n   Router Goes Bad' attack described in [RFC3756].\n"
- title: 6.2.  Certificate Transport
  contents:
  - "6.2.  Certificate Transport\n   Certificate delegation relies upon transfer of\
    \ the new credentials to\n   the proxying HA in order to undertake ND proxy on\
    \ its behalf.  Since\n   the binding cannot come into effect until DAD has taken\
    \ place, the\n   delegation of the proxying authority necessarily predates the\
    \ return\n   of the Binding Ack, as described in [RFC3775].  In the case above\n\
    \   described, the home tunnel that comes into creation as part of the\n   binding\
    \ process may be required for transport of Certificate Path\n   Solicitations\
    \ or Advertisements [RFC3971].  This constitutes a\n   potential chicken-and-egg\
    \ problem.  Either modifications to initial\n   home binding semantics or certificate\
    \ transport are required.  This\n   may be trivial if certificates are sent in\
    \ the clear between the MN's\n   Care-of Address (CoA) and the HA without being\
    \ tunneled.\n"
- title: 6.3.  Timekeeping
  contents:
  - "6.3.  Timekeeping\n   All of the presented methods rely on accurate timekeeping\
    \ on the\n   receiver nodes of Neighbor Discovery Timestamp Options.\n   For router-authorized\
    \ proxy ND, a Neighbor may not know that a\n   particular ND message is replayed\
    \ from the time when the proxied host\n   was still on-link, since the message's\
    \ timestamp falls within the\n   valid timing window.  Where the router advertises\
    \ its secured proxy\n   NA, a subsequent replay of the old message will override\
    \ the NCE\n   created by the proxy.\n   Creating the NCE in this way, without\
    \ reference to accurate\n   subsequent timing, may only be done once.  Otherwise,\
    \ the receiver\n   will notice that the timestamp of the advertisement is old\
    \ or doesn't\n   match.\n   One way of creating a sequence of replayable messages\
    \ that have\n   timestamps likely to be accepted is to pretend to do an unsecured\
    \ DAD\n   on the address each second while the MN is at home.  The attacker\n\
    \   saves each DAD defense in a sequence.  The granularity of SEND\n   timestamp\
    \ matching is around one second, so the attacker has a set of\n   SEND NAs to\
    \ advertise, starting at a particular timestamp, and valid\n   for as many seconds\
    \ as the original NA gathering occurred.\n   This sequence may then be played\
    \ against any host that doesn't have a\n   timestamp history for that MN, by tracking\
    \ the number of seconds\n   elapsed since the initial transmission of the replayed\
    \ NA to that\n   victim, and replaying the appropriate cached NA.\n   Where certificate-based\
    \ authorization of ND proxy is in use, the\n   origination/starting timestamp\
    \ of the delegated authority may be used\n   to override a replayed (non-proxy)\
    \ SEND NA, while also ensuring that\n   the Proxy NA's timestamp (provided by\
    \ the proxy) is fresh.  A\n   returning MN would advertise a more recent timestamp\
    \ than the\n   delegated authority and thus override it.  This method is therefore\n\
    \   not subject to the above attack, since the proxy advertisement's\n   certificate\
    \ will have a timestamp greater than any replayed messages,\n   preventing it\
    \ from being overridden.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   James Kempf and Dave Thaler particularly contributed\
    \ to work on this\n   document.  Contributions to discussion on this topic helped\
    \ to\n   develop this document.  The authors would also like to thank Jari\n \
    \  Arkko, Vijay Devarapalli, Mohan Parthasarathy, Marcelo Bagnulo,\n   Julien\
    \ Laganier, Tony Cheneau, Michaela Vanderveen, Sean Shen, and\n   Sheng Jiang\
    \ for their comments and suggestions.\n   Jean-Michel Combes is partly funded\
    \ by MobiSEND, a research project\n   supported by the French 'National Research\
    \ Agency' (ANR).\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3775]  Johnson, D., Perkins, C., and J. Arkko,\
    \ \"Mobility Support\n              in IPv6\", RFC 3775, June 2004.\n   [RFC3971]\
    \  Arkko, J., Kempf, J., Zill, B., and P. Nikander, \"SEcure\n              Neighbor\
    \ Discovery (SEND)\", RFC 3971, March 2005.\n   [RFC3972]  Aura, T., \"Cryptographically\
    \ Generated Addresses (CGA)\",\n              RFC 3972, March 2005.\n   [RFC4291]\
    \  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n              Architecture\"\
    , RFC 4291, February 2006.\n   [RFC4306]  Kaufman, C., \"Internet Key Exchange\
    \ (IKEv2) Protocol\",\n              RFC 4306, December 2005.\n   [RFC4389]  Thaler,\
    \ D., Talwar, M., and C. Patel, \"Neighbor Discovery\n              Proxies (ND\
    \ Proxy)\", RFC 4389, April 2006.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson,\
    \ W., and H. Soliman,\n              \"Neighbor Discovery for IP version 6 (IPv6)\"\
    , RFC 4861,\n              September 2007.\n   [RFC4862]  Thomson, S., Narten,\
    \ T., and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\"\
    , RFC 4862, September 2007.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3756]  Nikander, P., Kempf, J., and E. Nordmark,\
    \ \"IPv6 Neighbor\n              Discovery (ND) Trust Models and Threats\", RFC\
    \ 3756,\n              May 2004.\n   [RFC3963]  Devarapalli, V., Wakikawa, R.,\
    \ Petrescu, A., and P.\n              Thubert, \"Network Mobility (NEMO) Basic\
    \ Support Protocol\",\n              RFC 3963, January 2005.\n   [RFC5213]  Gundavelli,\
    \ S., Leung, K., Devarapalli, V., Chowdhury, K.,\n              and B. Patil,\
    \ \"Proxy Mobile IPv6\", RFC 5213, August 2008.\n   [RFC5280]  Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation\
    \ List\n              (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5380]  Soliman,\
    \ H., Castelluccia, C., ElMalki, K., and L.\n              Bellier, \"Hierarchical\
    \ Mobile IPv6 (HMIPv6) Mobility\n              Management\", RFC 5380, October\
    \ 2008.\n   [RFC5568]  Koodli, R., \"Mobile IPv6 Fast Handovers\", RFC 5568,\n\
    \              July 2009.\n   [RING]     Kempf, J. and C. Gentry, \"Secure IPv6\
    \ Address Proxying\n              using Multi-Key Cryptographically Generated\
    \ Addresses\n              (MCGAs)\", Work in Progress, August 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jean-Michel Combes\n   France Telecom Orange\n   38 rue\
    \ du General Leclerc\n   92794 Issy-les-Moulineaux Cedex 9\n   France\n   EMail:\
    \ jeanmichel.combes@orange-ftgroup.com\n   Suresh Krishnan\n   Ericsson\n   8400\
    \ Decarie Blvd.\n   Town of Mount Royal\n   QC Canada\n   EMail: Suresh.Krishnan@ericsson.com\n\
    \   Greg Daley\n   Netstar Logicalis\n   Level 6/616 St Kilda Road\n   Melbourne,\
    \ Victoria  3004\n   Australia\n   Phone: +61 401 772 770\n   EMail: hoskuld@hotmail.com\n"
