- title: __initial_text__
  contents:
  - "                          TIP Message Buffers\n     We have recently heard some\
    \ groaning about the size of the TIP's\nmessage buffers.  While we realize these\
    \ aren't as big as some Hosts\nmight desire, they aren't as small as the intensity\
    \ of the groans\nsuggest either.\n     Let's first consider messages going from\
    \ a TIP to another Host.\nThe buffers have the following sizes:\n     device numbers\
    \           buffer size (in 8 bit characters)\n         1-2                  \
    \     64\n         3-16                      32\n        17-41               \
    \       16\n        42-62                      8\n         63                \
    \        6\nThe TIP user has the option of having his messages sent 1) every\n\
    character, 2) on line feeds and/or com's, 3) every nth character, or\n4) the OR\
    \ of 2) and 3). Selecting to have messages sent every large\nnumber of characters,\
    \ say 100, will result in the TIP sending the\nlongest messages it can for a given\
    \ device.  Hosts which don't like to\nreceive very short messages might advise\
    \ users accessing them from a\nTIP to set the TIP's parameters to use the maximum\
    \ length buffer.\n     Now let's consider messages going from another Host to\
    \ a TIP.\nThe buffers have the following sizes:\n     device numbers         \
    \  buffer size (in 8 bit characters)\n        1                          96\n\
    \        2                          64\n        3                          48\n\
    \       4-17                        24\n      18-35                        16\n\
    \      36-63                         8\nbetween 8 and 96 characters, depending\
    \ on the terminals device number,\nand when a message comes using up the allocation,\
    \ the TIP immediately\nsends another allocation for the same number of characters\
    \ while it\nprints the first buffer.\n     For traffic both to and from the TIP,\
    \ lower numbered devices have\nbigger buffers.  Therefore, users of line oriented\
    \ systems, as well as\nusers of higher speed devices, should try to come in through\
    \ the lower\nnumbered ports on the TIP's multi-line controller, if possible.\n\
    \     The sizes of the TIP's message buffers and the number of each\nsize are\
    \ not permanently fixed and can be changed if a better\ndistribution is suggested.\
    \  We didn't know what size buffers to\nprovide so we have provided a variety,\
    \ What is fairly fixed is the\ntotal amount of buffer space: two output buffers\
    \ and one input buffer\nfor each of 63 devices must come out of this total buffer\
    \ space.\n     The answer to your question \"Why not dynamically allocate buffers\n\
    at run time?\" is: It is a complicated job to do that.  It requires\nmemory compactions,\
    \ a mechanism to reclaim space from current users\nwhen a new user comes on, etc.\
    \  Our guess is that the code to\ndynamically allocate buffers at run time would\
    \ reduce the total space\navailable for buffers by about one-fifth.\n       [\
    \ This RFC was put into machine readable form for entry ]\n       [ into the online\
    \ RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.\
    \                   12/96   ]\n"
