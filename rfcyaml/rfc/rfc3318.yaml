- title: __initial_text__
  contents:
  - '                   Framework Policy Information Base

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a set of PRovisioning Classes (PRCs) and\n\
    \   textual conventions that are common to all clients that provision\n   policy\
    \ using Common Open Policy Service (COPS) protocol for\n   Provisioning.\n   Structure\
    \ of Policy Provisioning Information (SPPI) describes a\n   structure for specifying\
    \ policy information that can then be\n   transmitted to a network device for\
    \ the purpose of configuring policy\n   at that device.  The model underlying\
    \ this structure is one of well-\n   defined (PRCs) and instances of these classes\
    \ (PRIs) residing in a\n   virtual information store called the Policy Information\
    \ Base (PIB).\n   One way to provision policy is by means of the (COPS) protocol\
    \ with\n   the extensions for provisioning.  This protocol supports multiple\n\
    \   clients, each of which may provision policy for a specific policy\n   domain\
    \ such as QoS, virtual private networks, or security.\n   As described in COPS\
    \ usage for Policy Provisioning (COPS-PR), each\n   client supports a non-overlapping\
    \ and independent set of PIB modules.\n   However, some PRovisioning Classes are\
    \ common to all subject-\n   categories (client-types) and need to be present\
    \ in each.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Conventions used in this document.................................2\n\
    \   1. Glossary.......................................................2\n   2.\
    \ General PIB Concepts...........................................3\n     2.1.\
    \ Roles......................................................3\n       2.1.1.\
    \ An Example.............................................5\n     2.2. Management\
    \ of Role-Combinations from the PDP...............6\n     2.3. Updating a Request\
    \ State...................................7\n       2.3.1 Full Request State......................................8\n\
    \       2.3.2 Installing PRIs in a Request............................8\n    \
    \   2.3.3 Updating PRIs in a Request..............................8\n       2.3.4\
    \ Removing PRIs from a Request............................9\n       2.3.5 Removing\
    \ EXTENDED, AUGMENTED PRIs.......................9\n       2.3.6 Error Handling\
    \ in Request updates.......................9\n     2.4. Multiple PIB Instances....................................10\n\
    \     2.5. Reporting and Configuring of Device Capabilities..........11\n    \
    \ 2.6. Reporting of Device Limitations...........................12\n   3. The\
    \ Framework TC PIB module...................................12\n   4. Summary\
    \ of the Framework PIB..................................17\n     4.1. Base PIB\
    \ classes Group....................................17\n     4.2. Device Capabilities\
    \ group.................................19\n     4.3. Classifier group..........................................20\n\
    \     4.4. Marker group..............................................20\n   5.\
    \ The Framework PIB Module......................................21\n   6. Security\
    \ Considerations.......................................66\n   7. IANA Considerations...........................................67\n\
    \   8. References....................................................67\n    \
    \ 8.1 Normative References.......................................67\n     8.2\
    \ Informative References.....................................68\n   9. Acknowledgments...............................................68\n\
    \   10. Authors' Addresses...........................................69\n   11.\
    \ Full Copyright Statement.....................................70\n"
- title: Conventions used in this document
  contents:
  - "Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1. Glossary
  contents:
  - "1. Glossary\n   PRC    PRovisioning Class.  A type of policy data.  See [POLTERM].\n\
    \   PRI    PRovisioning Instance.  An instance of a PRC.  See [POLTERM].\n   PIB\
    \    Policy Information Base.  The database of policy information.\n         \
    \ See [POLTERM]\n   PDP    Policy Decision Point.  See [RAP-FRAMEWORK].\n   PEP\
    \    Policy Enforcement Point.  See [RAP-FRAMEWORK].\n"
- title: 2. General PIB Concepts
  contents:
  - '2. General PIB Concepts

    '
- title: 2.1. Roles
  contents:
  - "2.1. Roles\n   The policy to apply to an interface may depend on many factors,\
    \ such\n   as immutable characteristics of the interface (e.g., Ethernet or\n\
    \   frame relay), the status of the interface (e.g., half or full\n   duplex),\
    \ or user configuration (e.g., branch office or headquarters\n   interface). \
    \ Rather than specifying policies explicitly for each\n   interface of all devices\
    \ in the network, policies are specified in\n   terms of interface functionality.\n\
    \   To describe these functionalities of an interface, we use the concept\n  \
    \ of \"Roles\".  A Role is simply a string that is associated with an\n   interface.\
    \  A given interface may have any number of roles\n   simultaneously.  Provisioning\
    \ classes have an attribute called a\n   \"RoleCombination\" which is a lexicographically\
    \ ordered set of roles.\n   Instances of a given PRovisioning Class are applied\
    \ to an interface\n   if and only if the set of roles in the role combination\
    \ matches the\n   set of the roles of the interface.\n   Thus, roles provide a\
    \ way to bind policy to interfaces without having\n   to explicitly identify interfaces\
    \ in a consistent manner across all\n   network devices.  That is, roles provide\
    \ a level of indirection to\n   the application of a set of policies to specific\
    \ interfaces.  This\n   separates the policy definition from device implementation\
    \ specific\n   interface identification.  Furthermore, if the same policy is being\n\
    \   applied to several interfaces, that policy needs to be pushed to the\n   device\
    \ only once, rather than once per interface, as long as the\n   interfaces are\
    \ configured with the same role combination.\n   We point out that, in the event\
    \ that the administrator needs to have\n   a unique policy for each interface,\
    \ the administrator can configure\n   each interface with a unique role.\n   The\
    \ PEP sends all its Capability Set Names, Role Combinations, Policy\n   Controlled\
    \ Interfaces, and their relationships to the PDP in the\n   first COPS request\
    \ (REQ) message for a handle, and whenever any\n   updates or deletes occur. \
    \ The PDP can install new instances or\n   change existing instances of these\
    \ PRIs.  This operation can also\n   occur in subsequent request messages generated\
    \ in response to COPS\n   state synchronization (SSQ) requests and local configuration\
    \ changes.\n   The comparing of roles (or role combinations) is case sensitive.\n\
    \   By convention, when formatting the role-combination for exchange\n   within\
    \ a protocol message, within a PIB object's value, or as a\n   printed value,\
    \ the set is formatted in lexicographical order of the\n   role's ASCII values;\
    \ that is, the role that is first is formatted\n   first.  For example, \"a+b\"\
    \ and \"b+a\" are NOT different role-\n   combinations; rather, they are different\
    \ formatting of the same\n   role-combination, and hence for this example:\n \
    \  - \"a+b\" is the valid formatting of that role-combination,\n   - \"b+a\" is\
    \ an invalid formatting of that role-combination.\n   The role-combination of\
    \ interfaces to which no roles have been\n   assigned is known as the \"null\"\
    \ role-combination.  (Note the\n   deliberate use of lower-case letters for \"\
    null\" so that it avoids\n   confusion with the ASCII NULL character that has\
    \ a value of zero but\n   a length of one.)\n   In an \"install\" or an \"install-notify\"\
    \ class, the wildcard role-\n   combination \"*\" can be used.  In addition to\
    \ providing for\n   interface-specific roles, it also allows for other optimizations\
    \ in\n   reducing the number of role-combinations for which a policy has to be\n\
    \   specified.  For example:\n   Suppose we have three interfaces:\n      Roles\
    \ A, B and R1 are assigned to interface I1\n      Roles A, B and R2 are assigned\
    \ to interface I2\n      Roles A, B and R3 are assigned to interface I3\n   Then,\
    \ a PRI of a fictional IfDscpAssignTable that has the following\n   values for\
    \ its attributes:\n      ifDscpAssignPrid    = 1\n      ifDscpAssignRoles   =\
    \ \"*+A+B\"\n      ifDscpAssignName    = \"4queues\"\n      ifDscpAssignDscpMap\
    \ = 1\n   will apply to all three interfaces, because \"*\" matches with R1, R2\n\
    \   and R3.  The policies can be assigned to an interface due to more\n   than\
    \ one wild-carded role combo matching a given interface's role\n   combo string.\
    \  The PDP should attempt to resolve conflicts between\n   policies before sending\
    \ policies to the PEP.  In the situation where\n   the PDP sends multiple policies\
    \ to a PEP and they do conflict, either\n   because of an error by the PDP or\
    \ because of a device specific\n   conflict, the PEP MUST reject the installation\
    \ of the conflicting\n   policies and return an error.\n   Formally,\n   - The\
    \ wildcard Role is denoted by \"*\",\n   - The \"*\" Role is not allowed to be\
    \ defined as part of the role-\n     combination of an interface as notified by\
    \ the PEP to the PDP; it\n     is only allowed in policies installed/deleted via\
    \ COPS-PR from the\n     PDP to the PEP.\n   - For a policy to apply to an interface\
    \ when the policy's role-\n     combination is \"*+a+b\", the interface's role-combination:\n\
    \      - Must include \"a\" and \"b\", and\n      - Can include zero or more other\
    \ roles.\n   - The wildcard character \"*\" is listed before the other roles as\
    \ \"*\"\n     is lexicographically before \"a\"; however, the wildcard matches\
    \ any\n     zero or more roles, irrespective of lexicographical order.  For\n\
    \     example: \"*+b+e+g\" would match \"a+b+c+e+f+g\".\n     Note that the characters\
    \ \"+\" and \"*\" MUST not be used in an\n     interface Role.  The Framework\
    \ Role PIB module in section 4 of this\n     document contains the Role and RoleCombination\
    \ Textual Conventions.\n"
- title: 2.1.1. An Example
  contents:
  - "2.1.1. An Example\n   The functioning of roles might be best understood by an\
    \ example.\n   Suppose I have a device with three interfaces, with roles as follows:\n\
    \         IF1: \"finance\"\n         IF2: \"finance\"\n         IF3: \"manager\"\
    \n   Suppose, I also have a PDP with two policies:\n         P1: Packets from\
    \ finance department (role \"finance\") get DSCP 5\n         P2: Packets from\
    \ managers (role \"manager\") get DSCP 6\n   To obtain policy, the PEP reports\
    \ to the PDP that it has some\n   interfaces with role combination \"finance\"\
    \ and some with role\n   combination \"manager\".  In response, the PDP downloads\
    \ policy P1\n   associated with role combination \"finance\" and downloads a second\n\
    \   policy P2 associated with role combination \"manager\".\n   Now suppose the\
    \ finance person attached to IF2 is promoted to manager\n   and so the system\
    \ administrator adds the role \"manager\" to IF2.  The\n   PEP now reports to\
    \ the PDP that it has three role combinations: some\n   interfaces with role combination\
    \ \"finance\", some with role\n   combination \"manager\" and some with role combination\n\
    \   \"finance+manager\".  In response, the PDP downloads an additional\n   third\
    \ policy associated with the new role combination\n   \"finance+manager\".\n \
    \  How the PDP determines the policy for this new role combination is\n   entirely\
    \ the responsibility of the PDP.  It could do so\n   algorithmically or by rule.\
    \  For example, there might be a rule that\n   specifies that manager policy takes\
    \ preference over department\n   policy.  Or there might be a third policy installed\
    \ in the PDP as\n   follows:\n         P3: Packets from finance managers (role\
    \ \"finance\" and role\n             \"manager\") get DSCP 7\n   The point here\
    \ is that the PDP is required to determine what policy\n   applies to this new\
    \ role combination and to download a third policy\n   to the PEP for the role\
    \ combination \"finance+manager\", even if that\n   policy is the same as one\
    \ already downloaded.  The PEP is not\n   required (or allowed) to construct policy\
    \ for new role combinations\n   from existing policy.\n"
- title: 2.2. Management of Role-Combinations from the PDP
  contents:
  - "2.2. Management of Role-Combinations from the PDP\n   The PEP notifies the PDP\
    \ of the Role-Combination assigned to each\n   interface and capability set name\
    \ in a COPS configuration request\n   (instances of the frwkIfRoleComboTable).\
    \  The first request sent to\n   the PDP must be a 'full state' request.  A 'full\
    \ state' request for a\n   PEP includes notify and install-notify table PRIs for\
    \ the PEP which\n   must be interpreted as the complete state of the PEP and must\
    \ not be\n   interpreted as updates to any previous set of PRIs sent in a previous\n\
    \   message.  Any previous PRIs from the PEP should be discarded when a\n   'full\
    \ state' request is received for the particular request handle.\n   A request\
    \ is specified as a 'full state' request by setting the\n   frwkPibIncarnationFullState\
    \ attribute in the frwkPibIncarnation PRI\n   sent in the request.\n   All existing\
    \ frwkIfRoleCombo instances must be sent to the PDP in the\n   first configuration\
    \ request for a request handle.  If the Role-\n   Combinations are not assigned\
    \ specific values, default ('null')\n   Role-Combinations must be sent to the\
    \ PDP for all ifIndices active on\n   the PEP and updates must be sent every time\
    \ the IfIndices are\n   updated.  The PEP may notify the PDP of the Capability\
    \ sets (if any)\n   via the frwkCapabilitySetTable.  If the PEP does not need\
    \ to notify\n   the PDP of capability sets, it must set the capability set name\
    \ in\n   the frwkIfRoleComboTable instances to a zero length string.\n   In response\
    \ to this configuration request, if applicable, the PDP may\n   send policies\
    \ for the PEP in a solicited decision or must send a null\n   decision.  The PEP\
    \ must then send a solicited report message for the\n   decision.\n   At any later\
    \ time, the PDP can update the Role-Combinations assigned\n   to a specific interface,\
    \ identified by IfIndex, or for an aggregate,\n   identified by the capability\
    \ set name, via an unsolicited decision to\n   the PEP on any open request handle.\
    \  The PDP does this by sending\n   updated PRIs for the frwkIfRoleComboTable.\n\
    \   When the Interface Role Combination associations are updated by the\n   PDP,\
    \ the PEP SHOULD send updated 'full state' requests for all open\n   contexts.\
    \  A context is an instantiation of the PIB module(s)\n   namespace identified\
    \ by a unique COPS handle for a particular COPS\n   client type.  This is true\
    \ even if the PEP's request state changes\n   due to an internal event or if the\
    \ state is changed by the PDP.  If\n   the role-combination updates were sent\
    \ by the PDP, the PEP SHOULD\n   send these updated requests only if it can process\
    \ the unsolicited\n   decision containing the frwkIfRoleCombo PRIs successfully,\
    \ and it\n   MUST do so after sending the success report for the unsolicited\n\
    \   decision.  If the PEP failed to process the decision (i.e., the\n   frwkIfRoleCombo\
    \ PRIs), it MUST only send a failure report to the PDP.\n   On the other hand,\
    \ the PDP must not expect to receive the updated\n   requests with the revised\
    \ role-combination information until after it\n   receives a success report for\
    \ these updates from the PEP.  If the PDP\n   does not receive updated requests\
    \ on some request handles, the PEP\n   must not be sent decision updates for that\
    \ frwkIfRoleCombo updates,\n   i.e., the PDP must have the previous request state\
    \ that it maintained\n   for that request handle.\n   Note that, any unsolicited\
    \ decisions received by the PEP in the time\n   period after it receives updates\
    \ to its Role-Combination associations\n   and before receiving solicited decisions\
    \ for the updated requests it\n   sent for all context handles, could possibly\
    \ contain outdated\n   policies corresponding to the old Role-Combination associations\
    \ as\n   notified by this PEP in a previous request state.\n   The PDP must respond\
    \ to the updated requests by solicited decisions,\n   sending policies if applicable\
    \ or null decisions.  The PEP must\n   respond to these solicited decisions with\
    \ solicited reports to\n   complete the transaction.\n"
- title: 2.3. Updating a Request State
  contents:
  - "2.3. Updating a Request State\n   This section describes the messages exchanged\
    \ between the PEP and PDP\n   when the PEP is updating a previously sent request\
    \ for a particular\n   COPS handle.  Note that a PEP can incrementally update\
    \ a request only\n   if the frwkPibIncarnationFullState attribute is shown to\
    \ be supported\n   via the supported PRC table.  If this attribute is not supported,\
    \ the\n   PDP must treat all PEP requests as the full request state.\n"
- title: 2.3.1 Full Request State
  contents:
  - "2.3.1 Full Request State\n   When the PEP wants to send the entire request state\
    \ to the PDP (for\n   example, in response to a Synchronize State Request from\
    \ the PDP),\n   the PEP MUST send the incarnation instance with the\n   frwkPibIncarnationFullState\
    \ attribute set to 'true'.\n   A PDP that receives an incarnation instance in\
    \ the request message\n   with this attribute set to 'true', must clear the request\
    \ information\n   it maintains for this request handle and re-install the information\n\
    \   received.\n   If this attribute is set to 'false' or if the incarnation instance\
    \ is\n   missing in the request message, the request must be interpreted as an\n\
    \   incremental update to the previous request message.\n"
- title: 2.3.2 Installing PRIs in a Request
  contents:
  - "2.3.2 Installing PRIs in a Request\n   If the PEP wants to install additional\
    \ PRIs for a request handle, the\n   PEP MUST ensure that the frwkPibIncarnationFullState\
    \ attribute is set\n   to 'false', and the PEP MUST use new (unused in this context)\n\
    \   InstanceIds [SPPI] for these PRIs.\n   When a PDP receives instances with\
    \ new InstanceIds for a request with\n   the frwkPibIncarnationFullState in the\
    \ incarnation instance set to\n   'false', or if the request has no incarnation\
    \ information, it must\n   interpret these PRIs as an incremental update to the\
    \ request state\n   and add them to the request state it maintains for this handle.\n"
- title: 2.3.3 Updating PRIs in a Request
  contents:
  - "2.3.3 Updating PRIs in a Request\n   If the PEP wants to update previously installed\
    \ PRIs for a request\n   handle, the PEP MUST ensure that the frwkPibIncarnationFullState\n\
    \   attribute is set to 'false' for these PRIs.  Note that the PEP must\n   send\
    \ the same InstanceIds for the PRIs being updated.  If the PEP\n   uses new InstanceIds,\
    \ the PDP must interpret them as Install's for\n   this request state.\n   When\
    \ a PDP receives a request with instances having InstanceIds that\n   exist in\
    \ its state for that handle with the\n   frwkPibIncarnationFullState in the incarnation\
    \ instance set to\n   'false' or if the request has no incarnation information,\
    \ it must\n   interpret these PRIs as an update to the PRIs in the request state\
    \ it\n   maintains for this handle.\n"
- title: 2.3.4 Removing PRIs from a Request
  contents:
  - "2.3.4 Removing PRIs from a Request\n   If the PEP wants to remove previously\
    \ installed PRIs for a request\n   handle, the PEP MUST ensure that the frwkPibIncarnationFullState\n\
    \   attribute is set to 'false', and MUST send the PRI bindings with the\n   PRID\
    \ set to the InstanceId of the PRI to be removed, and the length\n   field in\
    \ the EPD object header set to the header length only,\n   effectively setting\
    \ the data length to zero.\n   Note that the PEP must send the same InstanceIds\
    \ for the PRIs being\n   removed.  If the PEP sends new InstanceIds and the length\
    \ field in\n   the EPD object header is set to the header length only (implying\
    \ the\n   data length is zero), the PEP is attempting to remove an\n   unknown/non-existent\
    \ PRI.  This SHOULD result in the PDP sending\n   error PRIs in the solicited\
    \ decision (see section 2.3.6 for a\n   description of the frwkErrorTable).\n\
    \   If the PEP sends new InstanceIds, and the length field in the EPD\n   object\
    \ header is greater than the header length only (implying the\n   EPD object has\
    \ some attributes encoded in it), the PDP will interpret\n   this as an install\
    \ of the PRI if it can decode the EPD successfully.\n   When a PDP receives a\
    \ request with instances having InstanceIds that\n   exist in its state for that\
    \ handle with the\n   frwkPibIncarnationFullState in the incarnation instance\
    \ set to\n   'false', or if the request has no incarnation information, and the\n\
    \   length field in the EPD object header is set to the header length\n   only\
    \ (implying the data length is zero), it must remove these PRIs\n   from the request\
    \ state it maintains for this handle.\n"
- title: 2.3.5 Removing EXTENDED, AUGMENTED PRIs
  contents:
  - "2.3.5 Removing EXTENDED, AUGMENTED PRIs\n   The PEP should remove the extended/augmented\
    \ PRIs when it removes the\n   base PRIs in the same COPS message.  See [SPPI]\
    \ for a description of\n   EXTENDED/AUGMENTED PRCs.  A PDP that receives removes\
    \ for a base PRI\n   must implicitly remove the extensions.\n"
- title: 2.3.6 Error Handling in Request updates
  contents:
  - "2.3.6 Error Handling in Request updates\n   If the PDP cannot process all the\
    \ request installs/updates/removes in\n   the COPS request message successfully,\
    \ it MUST rollback to its\n   previous request state and it MUST send a solicited\
    \ decision to the\n   PEP that contains frwkErrorTable instances.  These instances\
    \ contain\n   an error code and a sub-code as defined in the [COPS-PR] CPERR\n\
    \   object.  For example, if the PEP tries to remove an instance that\n   does\
    \ not exist, the 'priInstanceInvalid' error code must be sent to\n   the PEP in\
    \ a frwkError PRI.  The frwkError PRIs also contain the PRC\n   and the InstanceId\
    \ of the error-causing PRI.  The PEP may then\n   examine these error PRIs and\
    \ resend the modified request.  Note that,\n   until the PEP resends the request\
    \ updates/removes, it will have\n   configuration information for the last successful\
    \ request state it\n   sent to the PDP.\n"
- title: 2.4. Multiple PIB Instances
  contents:
  - "2.4. Multiple PIB Instances\n   [COPS-PR] supports multiple, disjoint, independent\
    \ instances of the\n   PIB to represent multiple instances of configured policy.\
    \  The intent\n   is to allow for the pre-provisioning of policy that can then\
    \ be made\n   active by a single, short decision from the PDP.\n   A COPS context\
    \ can be defined as an independent COPS request state\n   for a particular subject\
    \ category (client-type).  A context may be an\n   outsourcing context or a configuration\
    \ context.  A configuration\n   context is an instance of the PIB triggered and\
    \ controlled by the\n   PDP, which contains device setup information.  This device\n\
    \   configuration information dictates the device behavior as specified\n   by\
    \ the PDP.  An outsourcing context on the other hand, is a PIB\n   instance that\
    \ is triggered from the PEP side and is a request to the\n   PDP for action. \
    \ The action requested will be interpreted in the\n   domain of the client-type.\
    \  Configuration contexts belong to a set of\n   configuration contexts for a\
    \ specific client type - out of which one\n   configuration context may be active.\
    \  However, multiple outsourcing\n   contexts can be active simultaneously.\n\
    \   With the [COPS-PR] protocol, each of these states is identified by a\n   unique\
    \ client handle.  The creation and deletion of these PIB\n   instances can be\
    \ controlled by the PDP as described in [COPS-PR] or\n   can be triggered by an\
    \ event by the PEP.  A PEP must open at least\n   one \"request-state\" for configuration\
    \ for a given subject-category\n   (client type).  Additional \"request-states\"\
    \ at the PEP may be\n   initiated by the PDP or asynchronously generated by the\
    \ PEP for\n   outsourcing due to local events, which will be fully specified by\
    \ the\n   PRID/EPD data carried in the request.\n   The frwkPibIncarnationInCtxtSet\
    \ flag defines a set of contexts out of\n   which only one context can be active\
    \ at any given time.  This set is\n   called the 'configuration contexts' set.\
    \  At most, one context may be\n   active from this 'configuration context' set\
    \ at any given time.\n   Contexts that have the frwkPibIncarnationInCtxtSet attribute\
    \ set to\n   'true' belong to this set.  Contexts that do not belong to this set\n\
    \   have the frwkPibIncarnationInCtxtSet set to 'false' and belong to the\n  \
    \ set of 'outsourcing contexts'.  Note that a PEP can have these two\n   sets\
    \ of contexts only if the frwkPibIncarnationInCtxtSet attribute is\n   shown to\
    \ be supported via the supported PRC table.  If the\n   frwkPibIncarnationInCtxtSet\
    \ is not supported, a PEP must treat all\n   contexts as belonging to the set\
    \ of 'configuration contexts' i.e., at\n   the most one context can be active\
    \ at any given time.\n   Note that in the event that a PEP has a capability change\
    \ such as a\n   card hot swap or any other change in its notify information that\
    \ may\n   warrant a policy refresh, a subsequent complete or incremental\n   request\
    \ must be issued to the PDP containing the new/updated\n   capabilities for all\
    \ the configuration contexts.  A request for re-\n   configuration is issued for\
    \ all request state configuration contexts,\n   both for the active configuration\
    \ context as well as any inactive\n   configuration contexts.  This is to ensure\
    \ that when an inactive\n   configuration context is activated, it has been pre-configured\
    \ with\n   policies compatible with the PEP's current capabilities.\n   Although\
    \ many PIB instances may be configured on a device (the\n   maximum number of\
    \ these instances being determined by the device\n   itself), only one of the\
    \ contexts from the 'configuration contexts'\n   set can be active at any given\
    \ time; the active one being selected by\n   the PDP.  The Framework PIB supports\
    \ the attribute\n   frwkPibIncarnationActive in the frwkPibIncarnationTable to\
    \ allow the\n   PDP to denote the PIB instance as being active in a COPS decision\n\
    \   message, and similarly, to report the active state (active or not) of\n  \
    \ the PIB instance to the PDP in a COPS request message.\n   When the PEP installs\
    \ an attribute frwkPibIncarnationActive that is\n   'true' in one PIB instance\
    \ which belongs to the 'configuration\n   contexts' set, the PEP must ensure,\
    \ re-setting the attribute if\n   necessary, that the frwkPibIncarnationActive\
    \ attribute is 'false' in\n   all other installed contexts that belong to this\
    \ set.  To switch\n   contexts, the PDP should set the frwkPibIncarnationActive\
    \ attribute\n   to 'true' in the context it wants to make the active context.\
    \  The\n   PDP should set this attribute in a context to 'false' only if it\n\
    \   wants to send an inactive context to the PEP or deactivate the active\n  \
    \ context on the PEP.  If an active context is made inactive without\n   activating\
    \ another context, the PEP must not have any policies\n   enforced from any configuration\
    \ contexts installed.\n"
- title: 2.5. Reporting and Configuring of Device Capabilities
  contents:
  - "2.5. Reporting and Configuring of Device Capabilities\n   Each network device\
    \ providing policy-based services has its own\n   inherent capabilities.  These\
    \ capabilities can be hardware specific,\n   e.g., an Ethernet interface supporting\
    \ input classification, or can\n   be statically configured, e.g., supported queuing\
    \ disciplines.  These\n   capabilities are organized into Capability Sets, with\
    \ each Capability\n   Set given a unique name (frwkCapabilitySetName) and associated\
    \ with a\n   set of Role Combinations.  In that way, each Role Combination may\
    \ be\n   associated with a set of interfaces.  These capabilities are\n   communicated\
    \ to the PDP when policy is requested by the PEP.  Knowing\n   device capabilities,\
    \ the PDP can send the PRIs relevant to the\n   specific device, rather than sending\
    \ the entire PIB.\n   Specific capability PRCs may be defined in other PIBs. \
    \ These\n   capability instances are grouped via the frwkCapabilitySetTable. \
    \ If\n   the PEP wishes to send capability information to the PDP, the PIB\n \
    \  must indicate which capabilities the PEP may send to the PDP by means\n   of\
    \ the 'notify' PIB-ACCESS clause as described in [SPPI].  If a PIB\n   does not\
    \ have any capabilities to communicate to the PDP, it must not\n   send any instances\
    \ for the frwkCapabilitySetTable.  If in this case\n   the frwkIfRoleCombo table\
    \ is used to communicate role combinations\n   assigned to interfaces (via IfIndex),\
    \ the frwkRoleComboCapSetName\n   attribute in the frwkIfRoleComboTable instances\
    \ must be set to a zero\n   length string.\n"
- title: 2.6. Reporting of Device Limitations
  contents:
  - "2.6. Reporting of Device Limitations\n   To facilitate efficient policy installation,\
    \ it is important to\n   understand a device's limitations in relation to the\
    \ advertised\n   device capabilities.  Limitations may be class-based, e.g., an\n\
    \   \"install\" class is supported as a \"notify\" or only a limited number\n\
    \   of class instances may be created, or attribute-based.  Attribute\n   limitations,\
    \ such as supporting a restricted set of enumerations or\n   requiring related\
    \ attributes to have certain values, detail\n   implementation limitations at\
    \ a fine level of granularity.\n   A PDP can avoid certain installation issues\
    \ in a proactive fashion by\n   taking into account a device's limitations prior\
    \ to policy\n   installation rather than in a reactive mode during installation.\
    \  As\n   with device capabilities, device limitations are communicated to the\n\
    \   PDP when policy is requested.\n   Reported device limitations may be accompanied\
    \ by guidance values\n   that can be used by a PDP to determine acceptable values\
    \ for the\n   identified attributes.\n"
- title: 3. The Framework TC PIB module
  contents:
  - '3. The Framework TC PIB module

    '
- title: FRAMEWORK-TC-PIB  PIB-DEFINITIONS ::= BEGIN
  contents:
  - 'FRAMEWORK-TC-PIB  PIB-DEFINITIONS ::= BEGIN

    '
- title: IMPORTS  MODULE-IDENTITY, TEXTUAL-CONVENTION,
  contents:
  - "IMPORTS  MODULE-IDENTITY, TEXTUAL-CONVENTION,\n         Unsigned32, pib FROM\
    \ COPS-PR-SPPI;\n"
- title: frwkTcPib  MODULE-IDENTITY
  contents:
  - "frwkTcPib  MODULE-IDENTITY\n    SUBJECT-CATEGORIES   { all }\n    LAST-UPDATED\
    \ \"200302130000Z\"  -- 13 Feb 2003\n    ORGANIZATION \"IETF RAP WG\"\n    CONTACT-INFO\
    \ \"Keith McCloghrie\n                  Cisco Systems, Inc.\n                \
    \  170 West Tasman Drive,\n                  San Jose, CA 95134-1706 USA\n   \
    \               Phone: +1 408 526 5260\n                  Email: kzm@cisco.com\n\
    \                  John Seligson\n                  Nortel Networks, Inc.\n  \
    \                4401 Great America Parkway\n                  Santa Clara, CA\
    \ 95054 USA\n                  Phone: +1 408 495 2992\n                  Email:\
    \ jseligso@nortelnetworks.com\n                  Ravi Sahita\n               \
    \   Intel Labs.\n                  2111 NE 25th Ave.\n                  Hillsboro,\
    \ OR 97124 USA\n                  Phone: +1 503 712 1554\n                  Email:\
    \ ravi.sahita@intel.com\n                  RAP WG Mailing list: rap@ops.ietf.org\
    \ \"\n    DESCRIPTION\n         \"The PIB module containing the Role and RoleCombination\n\
    \         Textual Conventions and other generic TCs.\n         Copyright (C) The\
    \ Internet Society (2003). This version of\n         this PIB module is part of\
    \ RFC 3318; see the RFC itself for\n         full legal notices.\"\n    REVISION\
    \     \"200302130000Z\"  -- 13 Feb 2003\n    DESCRIPTION  \"Initial version, published\
    \ in RFC 3318.\"\n      ::= { pib 3 }\n"
- title: Role ::= TEXTUAL-CONVENTION
  contents:
  - "Role ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n    \
    \    \"A role represents a functionality characteristic or\n        capability\
    \ of a resource to which policies are applied.\n        Examples of roles include\
    \ Backbone_interface,\n        Frame_Relay_interface, BGP-capable-router, web-server,\n\
    \        firewall, etc.\n        The only valid character set is US-ASCII. Valid\
    \ characters\n        are a-z, A-Z, 0-9, period, hyphen and underscore. A role\n\
    \        must always start with a letter (a-z or A-Z). A role must\n        not\
    \ contain the US-ASCII characters '*' or '+' since they\n        have special\
    \ meaning associated with them, explained in the\n        RoleCombination TEXTUAL\
    \ CONVENTION.\"\n    SYNTAX OCTET STRING (SIZE (1..31))\n"
- title: RoleCombination ::= TEXTUAL-CONVENTION
  contents:
  - "RoleCombination ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"An octet string containing concatenated Roles. For the\n        format\
    \ specification of roles, refer to the 'Role' TEXTUAL-\n        CONVENTION. A\
    \ valid Role Combination must be formed by a set\n        of valid Roles, concatenated\
    \ by the US-ASCII character '+',\n        where the roles are in lexicographic\
    \ order from minimum to\n        maximum. For example, 'a+b' and 'b+a' are NOT\
    \ different\n        role-combinations; rather, they are different formatting\
    \ of\n        the same (one) role-combination.\n        Notice the roles within\
    \ a role-combination are in\n        Lexicographic order from minimum to maximum,\
    \ hence, we\n        declare:\n        'a+b' is the valid formatting of the role-combination,\n\
    \        'b+a' is an invalid formatting of the role-combination.\n        Notice\
    \ the need of zero-length role-combination as the role-\n        combination of\
    \ interfaces to which no roles have been\n        assigned. This role-combination\
    \ is also known as the 'null'\n        role-combination. (Note the deliberate\
    \ use of lower case\n        letters to avoid confusion with the US-ASCII NULL\
    \ character\n        which has a value of zero but length of one.)\n        The\
    \ US-ASCII character '*' is used to specify a wild carded\n        Role Combination.\
    \ '*' must not be used to wildcard Roles.\n        Hence, we declare:\n      \
    \  '*+a+b' is a valid wild carded Role Combination.\n        'eth*+a+b' is not\
    \ a valid wild carded Role Combination.\n        Note that since Roles are lexicographically\
    \ listed in a Role\n        Combination, the following is an invalid role combination,\n\
    \        since '*' is lexicographically before 'a': 'a+b+*'.\"\n    SYNTAX OCTET\
    \ STRING  (SIZE (0..255))\n"
- title: PrcIdentifierOid ::= TEXTUAL-CONVENTION
  contents:
  - "PrcIdentifierOid ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"An OID that identifies a PRC. The value MUST be an OID\n        assigned\
    \ to a PRC's entry definition. The Entry definition\n        of a PRC has an OID\
    \ value XxxTable.1 where XxxTable is the\n        OID assigned to the PRC table\
    \ object.\n        An attribute with this syntax MUST specify a PRC, which is\n\
    \        defined in the PIB module(s) registered in the context of\n        the\
    \ client-type used.\n        An attribute with this syntax cannot have the value\
    \ 0.0\n        (zeroDotZero). If the attribute using this syntax can be set\n\
    \        to 0.0 use the PrcIdentifierOidOrZero TEXTUAL-CONVENTION\n        which\
    \ makes such use explicit.\"\n    SYNTAX    OBJECT IDENTIFIER\n"
- title: PrcIdentifierOidOrZero ::= TEXTUAL-CONVENTION
  contents:
  - "PrcIdentifierOidOrZero ::= TEXTUAL-CONVENTION\n    STATUS       current\n   \
    \ DESCRIPTION\n        \"An OID that identifies a PRC or zeroDotZero (0.0). The\n\
    \        value MUST be an OID assigned to a PRC's entry definition or\n      \
    \  0.0  (zeroDotZero). The Entry definition of a PRC has an OID\n        value\
    \ XxxTable.1 where XxxTable is the OID assigned to the\n        PRC table object.\n\
    \        An attribute with this syntax can have the value 0.0\n        (zeroDotZero)\
    \ to indicate that it currently does not\n        identify a PRC.\"\n    SYNTAX\
    \    OBJECT IDENTIFIER\n"
- title: AttrIdentifier ::= TEXTUAL-CONVENTION
  contents:
  - "AttrIdentifier ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"A Unsigned32 value that identifies an attribute in a PRC by\n     \
    \   its sub-id. The sub-id is the OID assigned to this attribute\n        in the\
    \ PRC definition.\n        A AttrIdentifier value is always interpreted within\
    \ the\n        context of an attribute of type PrcIdentifierOid or\n        PrcIdentifierOidOrZero.\
    \ The PrcIdentifierOid (or\n           PrcIdentifierOidOrZero) object which defines\
    \ the context\n        must be registered immediately before the object which\
    \ uses\n        the AttrIdentifier textual convention. If the context\n      \
    \  defining attribute is of type PrcIdentifierOidOrZero and has\n        the value\
    \ 0.0, then in that case this attribute value has no\n        meaning.\n     \
    \   An attribute with this syntax MUST specify a sub-id which\n        MUST be\
    \ defined in the PRC identified (if any) in the\n        PrcIdentifierOid (or\
    \ PrcIdentifierOidOrZero) attribute. The\n        PrcIdentifierOid (orZero) and\
    \ the AttrIdentifier attributes\n        together identify a particular attribute\
    \ in a particular\n        PRC.\n        An attribute with this syntax cannot\
    \ have the value 0\n        (zero). If the attribute using this syntax can be\
    \ set\n        to 0 use the AttrIdentifierOrZero TEXTUAL-CONVENTION which\n  \
    \      makes that explicit.\"\n    SYNTAX    Unsigned32 (1..4294967295)\n"
- title: AttrIdentifierOrZero ::= TEXTUAL-CONVENTION
  contents:
  - "AttrIdentifierOrZero ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"A Unsigned32 value that identifies an attribute in a PRC by\n     \
    \   its sub-id or has the value 0 (zero). The sub-id if non-\n        zero, is\
    \ the OID assigned to this attribute in the PRC\n        definition.\n       \
    \ An AttrIdentifierOrZero value is always interpreted within\n        the context\
    \ of an attribute of type PrcIdentifierOid or\n        PrcIdentifierOidOrZero.\
    \ The PrcIdentifierOid (or\n        PrcIdentifierOidOrZero) object that defines\
    \ the context must\n        be registered immediately before the object which\
    \ uses the\n        AttrIdentifierOrZero textual convention. If the context\n\
    \        defining attribute is of type PrcIdentifierOidOrZero and has\n      \
    \  the value 0.0, then in that case this attribute value has no\n        meaning.\n\
    \        An attribute with this syntax can have the value 0 (zero) to\n      \
    \  indicate that it currently does not identify a PRC\n        attribute. If it\
    \ has a non-zero value, the\n        PrcIdentifierOid (orZero) and the AttrIdentifierOrZero\n\
    \        attributes together identify a particular attribute in a\n        particular\
    \ PRC.\"\n    SYNTAX    Unsigned32\n"
- title: AttrIdentifierOid ::= TEXTUAL-CONVENTION
  contents:
  - "AttrIdentifierOid ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"An OID that identifies an attribute in a PRC. The value\n        MUST\
    \ be an OID assigned to a PRC's attribute definition. The\n        last sub-id\
    \ is the sub-id of the attribute as it is\n        defined in the PRC entry definition.\
    \ The prefix OID (after\n        dropping the last sub-id) is the OID assigned\
    \ to the Entry\n        object of a defined PRC. The Entry definition of a PRC\
    \ has\n        an OID value XxxTable.1 where XxxTable is the OID assigned\n  \
    \      to the PRC Table object.\n        An attribute with this syntax MUST not\
    \ have the value 0.0\n        (zeroDotZero). If 0.0 is a valid value, the TEXTUAL\n\
    \        CONVENTION AttrIdentifierOidOrZero must be used which makes\n       \
    \ such use explicit.\"\n    SYNTAX    OBJECT IDENTIFIER\n"
- title: AttrIdentifierOidOrZero ::= TEXTUAL-CONVENTION
  contents:
  - "AttrIdentifierOidOrZero ::= TEXTUAL-CONVENTION\n    STATUS       current\n  \
    \  DESCRIPTION\n        \"An OID that identifies an attribute in a PRC or has\
    \ a value\n         0.0 (zeroDotZero). The value MUST be an OID assigned to a\n\
    \         PRC's attribute definition or the value 0.0.\n         If not 0.0, the\
    \ last sub-id MUST be the sub-id of the\n         attribute as it is defined in\
    \ the PRC Entry object\n         definition. The prefix OID (after dropping the\
    \ last sub-id)\n         is the OID assigned to the Entry object of a defined\
    \ PRC.\n         The Entry definition of a PRC has an OID value XxxTable.1\n \
    \        Where, XxxTable is the OID assigned to the PRC Table\n         object.\n\
    \         An attribute with this syntax can have the value 0.0\n         (zeroDotZero)\
    \ to indicate that it currently does not\n         identify a PRC's attribute.\"\
    \n    SYNTAX    OBJECT IDENTIFIER\n"
- title: ClientType ::= TEXTUAL-CONVENTION
  contents:
  - "ClientType ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"An Unsigned32 value that identifies a COPS Client-type. An\n      \
    \  attribute with this syntax must be set to zero if it does\n        not specify\
    \ a COPS client-type for the PRI.\"\n    REFERENCE\n        \"The COPS (Common\
    \ Open Policy Service) Protocol, RFC 2748.\"\n    SYNTAX    Unsigned32 (0..65535)\n"
- title: ClientHandle ::= TEXTUAL-CONVENTION
  contents:
  - "ClientHandle ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \        \"An octet string that identifies a COPS Client handle. A\n        zero\
    \ length value implies the attribute does not specify a\n        valid client\
    \ handle.\"\n    REFERENCE\n        \"The COPS (Common Open Policy Service) Protocol,\
    \ RFC 2748.\"\n    SYNTAX    OCTET STRING (SIZE(0..65535))\n"
- title: END
  contents:
  - 'END

    '
- title: 4. Summary of the Framework PIB
  contents:
  - "4. Summary of the Framework PIB\n   The Framework PIB defines four groups of\
    \ PRCs:\n"
- title: 4.1. Base PIB classes Group
  contents:
  - "4.1. Base PIB classes Group\n   This contains PRCs intended to describe the PRCs\
    \ supported by the\n   PEP, PRC and/or attribute limitations and its current configuration.\n\
    \      PRC Support Table\n         As the technology evolves, we expect devices\
    \ to be enhanced\n         with new PIBs, existing PIBs to add new PRCs and existing\
    \ PRCs\n         to be augmented or extended with new attributes.  Also, it is\n\
    \         likely that some existing PRCs or individual attributes of PRCs\n  \
    \       will be deprecated.  The PRC Support Table describes the PRCs\n      \
    \   that the device supports as well as the individual attributes\n         of\
    \ each PRC.  Using this information the PDP can potentially\n         tailor the\
    \ policy to more closely match the capabilities of the\n         device.  The\
    \ PRC Support Table instances are specific to the\n         particular Subject\
    \ Category (Client-Type).  That is, the PRC\n         Support Table for Subject\
    \ Category 'A' will not include\n         instances for classes supported by the\
    \ Subject Category 'B'.\n         Note that the COPS client-type [COPS] used for\
    \ Framework PIB\n         PRIs sent/received over COPS-PR MUST be the unique SUBJECT-\n\
    \         CATEGORY number assigned for the area of policy being managed\n    \
    \     (e.g., QoS, Security etc). The PEP MUST ignore the attributes\n        \
    \ that it reports as not Supported in the decision from the PDP.\n         The\
    \ PEP SHOULD not send duplicate PRC support instances in a\n         COPS Request\
    \ and the PDP MUST ignore duplicate instances and\n         MUST use the first\
    \ instance received for a supported PRC in a\n         COPS Request.\n      PIB\
    \ Incarnation Table\n         This PRC contains exactly one row (corresponding\
    \ to one PRI)\n         per context.  It identifies the PDP that was the last\
    \ to\n         download policy into the device and also contains an identifier\n\
    \         to identify the version of the policy currently downloaded.\n      \
    \   This identifier, both its syntax and value, is meaningful only\n         to\
    \ the PDPs.  It is intended to be a mechanism whereby a PDP,\n         when accepting\
    \ a connection from a PEP, can easily identify a\n         known incarnation of\
    \ policy.  This PRC defines a flag via which\n         the installed contexts\
    \ are divided into a set of contexts\n         ('configuration contexts') out\
    \ of which only one context is\n         active and a the remaining contexts form\
    \ a set of 'outsourcing\n         contexts' which are all active.  The incarnation\
    \ PRC also\n         defines an attribute to indicate which configuration context\
    \ is\n         the active one at the present time in the 'configuration\n    \
    \     contexts' set.  The incarnation instance is specific to the\n         particular\
    \ Subject Category (Client-Type).\n      Component Limitations Table\n       \
    \  Some devices may not be able to implement the full range of\n         values\
    \ for all attributes.  In principle, each PRC supports a\n         set of errors\
    \ that the PEP can report to the PDP in the event\n         that the specified\
    \ policy is not implementable.  It may be\n         preferable for the PDP to\
    \ be informed of the device limitations\n         before actually attempting to\
    \ install policy, and while the\n         error can indicate that a particular\
    \ attribute value is\n         unacceptable to the PEP, this does not help the\
    \ PDP ascertain\n         which values would be acceptable.  To alleviate these\n\
    \         limitations, the PEP can report some limitations of attribute\n    \
    \     values and/or classes and possibly guidance values for the\n         attribute\
    \ in the Component Limitations Table\n      Device Identification Table\n    \
    \     This PRC contains a single PRI that contains device-specific\n         information\
    \ that is used to facilitate efficient policy\n         installation by a PDP.\
    \  The instance of this PRC is reported to\n         the PDP in a COPS request\
    \ message so that the PDP can take into\n         account certain device characteristics\
    \ during policy\n         installation.\n"
- title: 4.2. Device Capabilities group
  contents:
  - "4.2. Device Capabilities group\n   This group contains the PRCs that describe\
    \ the characteristics of\n   interfaces of the device and the Role Combinations\
    \ assigned to them.\n      Capabilities Set Table\n         The capabilities the\
    \ PEP supports are described by rows in this\n         PRC (frwkCapabilitySetTable).\
    \  Each row, or instance of this\n         class, associates a unique capability\
    \ name with a set of\n         capabilities that an entity on the PEP may support.\
    \  The unique\n         name is used to form a set of capabilities that the name\n\
    \         represents.  The capability references can specify instances in\n  \
    \       relevant capability tables in any PIB.  The PEP notifies the\n       \
    \  PDP of these capability sets and then the PDP configures the\n         interfaces,\
    \ per role combination.  The unique name\n         (frwkCapabilitySetName) is\
    \ not to be confused with the IfType\n         object in the Interfaces Group\
    \ MIB [RFC2863].\n      Interface and Role Combination Table\n         The Capabilities\
    \ Set Table (explained above) describes the\n         entities on the PEP (for\
    \ example, interfaces) by their\n         capabilities, by assigning the capability\
    \ sets a unique name\n         (frwkCapabilitySetName).  It is possible to tailor\
    \ the behavior\n         of interfaces by assigning specific role-combinations\
    \ to the\n         capability sets.  This allows interfaces with the same\n  \
    \       capability sets to be assigned different policies, based on the\n    \
    \     current roles assigned to them.  At the PDP, configuration is\n        \
    \ done in terms of these interface capability set names and the\n         role-combinations\
    \ assigned to them.  Thus, each row of this\n         class is a <Interface Index,\
    \ interface capability set name,\n         Role Combo> tuple, that indicates the\
    \ roles that have been\n         assigned to a particular capability set (as identified\
    \ by\n         frwkRoleComboCapSetName) and to a particular interface.  Note\n\
    \         that the uniqueness criteria for this PRC has all the\n         attributes,\
    \ thus a frwkRoleComboCapSetName may have multiple\n         role-combinations\
    \ that it is associated with.  Via the IfIndex,\n         this PRC answers the\
    \ questions of 'which interfaces have a\n         specific role combination?'\
    \ and 'what role combination a\n         specific interface is a part of?'.\n"
- title: 4.3. Classifier group
  contents:
  - "4.3. Classifier group\n   This group contains the IP, IEEE 802 and Internal Label\
    \ Classifier\n   elements.  The set of tables consist of a Base Filter table that\n\
    \   contains the Index InstanceId and the Negation flag for the filter.\n   This\
    \ frwkBaseFilterTable is extended to form the IP Filter table, the\n   802 Filter\
    \ table [802] and the Internal Label table.  Filters may\n   also be defined outside\
    \ this document and used to extend the Base\n   Filter table.\n   The Extended\
    \ classes do not have a separate Index value. Instances of\n   the extended classes\
    \ have the same indices as their base class\n   instance.  Inheritance is achieved\
    \ using the EXTENDS keyword as\n   defined in [SPPI].\n"
- title: 4.4. Marker group
  contents:
  - "4.4. Marker group\n   This group contains the 802 marker and internal label marker\
    \ PRCs.\n   The 802 marker may be applied to mark 802 packets with the required\n\
    \   VLAN Id and/or priority value.  The Internal Label marker is applied\n   to\
    \ traffic in order to label it with a network device specific label.\n   Such\
    \ a label is used to assist the differentiation of an input flow\n   after it\
    \ has been aggregated with other flows.  The label is\n   implementation specific\
    \ and may be used for other policy related\n   functions like flow accounting\
    \ purposes and/or other data path\n   treatments.\n"
- title: 5. The Framework PIB Module
  contents:
  - "5. The Framework PIB Module\n  FRAMEWORK-PIB PIB-DEFINITIONS ::= BEGIN\n  IMPORTS\n\
    \      Unsigned32, Integer32, MODULE-IDENTITY,\n      MODULE-COMPLIANCE, OBJECT-TYPE,\
    \ OBJECT-GROUP, pib\n              FROM COPS-PR-SPPI\n      InstanceId, Prid\n\
    \              FROM COPS-PR-SPPI-TC\n      RoleCombination, PrcIdentifierOid,\
    \ AttrIdentifierOrZero,\n      ClientType, ClientHandle\n              FROM FRAMEWORK-TC-PIB\n\
    \      InetAddress, InetAddressType,\n      InetAddressPrefixLength, InetPortNumber\n\
    \              FROM INET-ADDRESS-MIB\n      InterfaceIndex\n              FROM\
    \ IF-MIB\n      DscpOrAny\n              FROM DIFFSERV-DSCP-TC\n      TruthValue,\
    \ PhysAddress\n              FROM SNMPv2-TC\n      SnmpAdminString\n         \
    \     FROM SNMP-FRAMEWORK-MIB;\n  frameworkPib  MODULE-IDENTITY\n      SUBJECT-CATEGORIES\
    \ { all }\n      LAST-UPDATED \"200302130000Z\"  -- 13 Feb 2003\n      ORGANIZATION\
    \ \"IETF RAP WG\"\n      CONTACT-INFO \"\n                    Keith McCloghrie\n\
    \                    Cisco Systems, Inc.\n                    170 West Tasman\
    \ Drive,\n                    San Jose, CA 95134-1706 USA\n                  \
    \  Phone: +1 408 526 5260\n                    Email: kzm@cisco.com\n        \
    \            John Seligson\n                    Nortel Networks, Inc.\n      \
    \              4401 Great America Parkway\n                    Santa Clara, CA\
    \ 95054 USA\n                    Phone: +1 408 495 2992\n                    Email:\
    \ jseligso@nortelnetworks.com\n                    Ravi Sahita\n             \
    \       Intel Labs.\n                    2111 NE 25th Ave.\n                 \
    \   Hillsboro, OR 97124 USA\n                    Phone: +1 503 712 1554\n    \
    \                Email: ravi.sahita@intel.com\n                    RAP WG Mailing\
    \ list: rap@ops.ietf.org\"\n      DESCRIPTION\n           \"A PIB module containing\
    \ the base set of PRCs that\n           provide support for management of multiple\
    \ PIB contexts,\n           association of roles to device capabilities and other\n\
    \           reusable PRCs. PEPs are required for to implement this\n         \
    \  PIB if the above features are desired. This PIB defines\n           PRCs applicable\
    \ to 'all' subject-categories.\n           Copyright (C) The Internet Society\
    \ (2003). This version\n           of this PIB module is part of RFC 3318; see\
    \ the RFC\n           itself for full legal notices.\"\n      REVISION     \"\
    200302130000Z\"  -- 13 Feb 2003\n      DESCRIPTION\n           \"Initial version,\
    \ published in RFC 3318.\"\n      ::= { pib 2 }\n  --\n  -- The root OID for PRCs\
    \ in the Framework PIB\n  --\n  frwkBasePibClasses\n               OBJECT IDENTIFIER\
    \ ::= { frameworkPib 1 }\n  --\n  -- PRC Support Table\n  --\n  frwkPrcSupportTable\
    \ OBJECT-TYPE\n      SYNTAX         SEQUENCE OF FrwkPrcSupportEntry\n      PIB-ACCESS\
    \     notify\n      STATUS         current\n      DESCRIPTION\n          \"Each\
    \ instance of this PRC specifies a PRC that the device\n          supports and\
    \ a bit string to indicate the attributes of the\n          class that are supported.\
    \  These PRIs are sent to the PDP to\n          indicate to the PDP which PRCs,\
    \ and which attributes of\n          these PRCs, the device supports.\n      \
    \    All install and install-notify PRCs supported by the device\n          must\
    \ be represented in this PRC. Notify PRCs may be\n          represented for informational\
    \ purposes.\"\n      ::= { frwkBasePibClasses 1 }\n  frwkPrcSupportEntry OBJECT-TYPE\n\
    \      SYNTAX         FrwkPrcSupportEntry\n      STATUS         current\n    \
    \  DESCRIPTION\n          \"An instance of the frwkPrcSupport class that identifies\
    \ a\n          specific PRC and associated attributes as supported\n         \
    \ by the device.\"\n      PIB-INDEX { frwkPrcSupportPrid }\n      UNIQUENESS {\
    \ frwkPrcSupportSupportedPrc }\n      ::= { frwkPrcSupportTable 1 }\n  FrwkPrcSupportEntry\
    \ ::= SEQUENCE {\n          frwkPrcSupportPrid           InstanceId,\n       \
    \   frwkPrcSupportSupportedPrc   PrcIdentifierOid,\n          frwkPrcSupportSupportedAttrs\
    \ OCTET STRING\n  }\n  frwkPrcSupportPrid OBJECT-TYPE\n      SYNTAX         InstanceId\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An arbitrary integer\
    \ index that uniquely identifies an\n          instance of the frwkPrcSupport\
    \ class.\"\n      ::= { frwkPrcSupportEntry 1 }\n  frwkPrcSupportSupportedPrc\
    \ OBJECT-TYPE\n      SYNTAX         PrcIdentifierOid\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The object identifier of a supported PRC. The\
    \ value is the\n           OID of the Entry object of the PRC definition. The\
    \ Entry\n           Object definition of a PRC has an OID with value XxxTable.1\n\
    \           Where, XxxTable is the OID assigned to the PRC Table\n           Object\
    \ definition. There may not be more than one instance\n           of the frwkPrcSupport\
    \ class with the same value of\n           frwkPrcSupportSupportedPrc.\"\n   \
    \   ::= { frwkPrcSupportEntry 2 }\n  frwkPrcSupportSupportedAttrs OBJECT-TYPE\n\
    \      SYNTAX         OCTET STRING\n      STATUS         current\n      DESCRIPTION\n\
    \          \"A bit string representing the supported attributes of the\n     \
    \     class that is identified by the frwkPrcSupportSupportedPrc\n          object.\n\
    \          Each bit of this bit string corresponds to a class\n          attribute,\
    \ with the most significant bit of the i-th octet\n          of this octet string\
    \ corresponding to the (8*i - 7)-th\n          attribute, and the least significant\
    \ bit of the i-th octet\n          corresponding to the (8*i)-th class attribute.\
    \ Each bit\n          specifies whether or not the corresponding class attribute\n\
    \          is currently supported, with a '1' indicating support and a\n     \
    \     '0' indicating no support.\n          If the value of this bit string is\
    \ N bits long and there are\n          more than N class attributes then the bit\
    \ string is\n          logically extended with 0's to the required length.\n \
    \         On the other hand, If the PDP receives a bit string of\n          length\
    \ N and there are less that N class attributes then the\n          PDP should\
    \ ignore the extra bits in the bit string, i.e.,\n          assume those attributes\
    \ are unsupported.\"\n        REFERENCE\n          \"COPS Usage for Policy Provisioning.\
    \  RFC 3084, section\n          2.2.1.\"\n      ::= { frwkPrcSupportEntry 3 }\n\
    \  --\n  -- PIB Incarnation Table\n  --\n  frwkPibIncarnationTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkPibIncarnationEntry\n      PIB-ACCESS  \
    \   install-notify\n      STATUS         current\n      DESCRIPTION\n        \
    \  \"This PRC contains a single PRovisioning Instance per\n          installed\
    \ context that identifies the current incarnation\n          of the PIB and the\
    \ PDP or network manager that installed\n          this incarnation.  The instance\
    \ of this PRC is reported to\n          the PDP in the REQ message so that the\
    \ PDP can (attempt to)\n          ascertain the current state of the PIB. A network\
    \ manager\n          may use the instance to determine the state of the device.\"\
    \n      ::= { frwkBasePibClasses 2 }\n  frwkPibIncarnationEntry OBJECT-TYPE\n\
    \      SYNTAX         FrwkPibIncarnationEntry\n      STATUS         current\n\
    \      DESCRIPTION\n          \"An instance of the frwkPibIncarnation class. Only\n\
    \          one instance of this PRC is ever instantiated per context\"\n     \
    \ PIB-INDEX { frwkPibIncarnationPrid }\n      ::= { frwkPibIncarnationTable 1\
    \ }\n  FrwkPibIncarnationEntry ::= SEQUENCE {\n          frwkPibIncarnationPrid\
    \                InstanceId,\n          frwkPibIncarnationName               \
    \ SnmpAdminString,\n          frwkPibIncarnationId                  OCTET STRING,\n\
    \          frwkPibIncarnationLongevity           INTEGER,\n          frwkPibIncarnationTtl\
    \                 Unsigned32,\n          frwkPibIncarnationInCtxtSet         \
    \  TruthValue,\n          frwkPibIncarnationActive              TruthValue,\n\
    \          frwkPibIncarnationFullState           TruthValue\n  }\n  frwkPibIncarnationPrid\
    \ OBJECT-TYPE\n      SYNTAX         InstanceId\n      STATUS         current\n\
    \      DESCRIPTION\n          \"An index to uniquely identify an instance of this\
    \ PRC.\"\n      ::= { frwkPibIncarnationEntry 1 }\n  frwkPibIncarnationName OBJECT-TYPE\n\
    \      SYNTAX         SnmpAdminString (SIZE (0..255))\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The name of the PDP that installed the current\
    \ incarnation\n          of the PIB into the device.  A zero-length string value\
    \ for\n          this type implies the PDP has not assigned this type any\n  \
    \        value. By default, it is the zero length string.\"\n      ::= { frwkPibIncarnationEntry\
    \ 2 }\n  frwkPibIncarnationId OBJECT-TYPE\n      SYNTAX         OCTET STRING (SIZE\
    \ (0..255))\n      STATUS         current\n      DESCRIPTION\n          \"An ID\
    \ to identify the current incarnation.  It has meaning\n          to the PDP/manager\
    \ that installed the PIB and perhaps its\n          standby PDPs/managers. A zero-length\
    \ string value for\n          this type implies the PDP has not assigned this\
    \ type any\n          value. By default, it is the zero-length string.\"\n   \
    \   ::= { frwkPibIncarnationEntry 3 }\n  frwkPibIncarnationLongevity OBJECT-TYPE\n\
    \      SYNTAX         INTEGER {\n                          expireNever(1),\n \
    \                         expireImmediate(2),\n                          expireOnTimeout(3)\n\
    \                     }\n      STATUS         current\n      DESCRIPTION\n   \
    \       \"This attribute controls what the PEP does with the\n          downloaded\
    \ policy on a Client Close message or a loss of\n          connection to the PDP.\n\
    \          If set to expireNever, the PEP continues to operate with the\n    \
    \      installed policy indefinitely.  If set to expireImmediate,\n          the\
    \ PEP immediately expires the policy obtained from the PDP\n          and installs\
    \ policy from local configuration.  If set to\n          expireOnTimeout, the\
    \ PEP continues to operate with the\n          policy installed by the PDP for\
    \ a period of time specified\n          by frwkPibIncarnationTtl.  After this\
    \ time (and it has not\n          reconnected to the original or new PDP) the\
    \ PEP expires this\n          policy and reverts to local configuration.\n   \
    \       For all cases, it is the responsibility of the PDP to check\n        \
    \  the incarnation and download new policy, if necessary, on a\n          reconnect.\
    \ On receiving a Remove-State for the active\n          context, this attribute\
    \ value MUST be ignored and the PEP\n          should expire the policy in that\
    \ active context immediately.\n          Policy enforcement timing only applies\
    \ to policies that have\n          been installed dynamically (e.g., by a PDP\
    \ via COPS).\"\n      REFERENCE\n          \"COPS Usage for Policy Provisioning.\
    \ RFC 3084.\"\n      ::= { frwkPibIncarnationEntry 4 }\n  frwkPibIncarnationTtl\
    \ OBJECT-TYPE\n      SYNTAX         Unsigned32\n      UNITS          \"seconds\"\
    \n      STATUS         current\n      DESCRIPTION\n          \"The number of seconds\
    \ after a Client Close or TCP timeout\n          for which the PEP continues to\
    \ enforce the policy in the\n          PIB. After this interval, the PIB is considered\
    \ expired and\n          the device no longer enforces the policy installed in\
    \ the\n          PIB.\n          This attribute is only meaningful if\n      \
    \    frwkPibIncarnationLongevity is set to expireOnTimeout.\"\n      ::= { frwkPibIncarnationEntry\
    \ 5 }\n  frwkPibIncarnationInCtxtSet OBJECT-TYPE\n      SYNTAX        TruthValue\n\
    \      STATUS         current\n      DESCRIPTION\n          \"When the PDP installs\
    \ a PRI with this flag set to 'true' it\n          implies this context belongs\
    \ to the set of contexts out of\n          which at the most one context can be\
    \ active at a given time.\n          If this attribute is set to 'false' this\
    \ context is one of\n          the outsourcing (simultaneous active) contexts\
    \ on the PEP.\n          This attribute is 'true' for all contexts belong to the\
    \ set\n          of configuration contexts. Within the configuration context\n\
    \          set, one context can be active identified by the\n          frwkPibIncarnationActive\
    \ attribute.\"\n      REFERENCE\n          \"TruthValue Textual Convention, defined\
    \ in RFC 2579.\"\n      ::= { frwkPibIncarnationEntry 6 }\n  frwkPibIncarnationActive\
    \ OBJECT-TYPE\n      SYNTAX         TruthValue\n      STATUS         current\n\
    \      DESCRIPTION\n          \"When the PDP installs a PRI on the PEP with this\
    \ attribute\n          set to 'true' and if this context belongs to the\n    \
    \      'configuration contexts' set, i.e., the\n          frwkPibIncarnationInCtxtSet\
    \ is set to 'true', then the PIB\n          instance to which this PRI belongs\
    \ must become the active\n          PIB instance. In this case, the previous active\
    \ instance\n          from this set MUST become inactive and the\n          frwkPibIncarnationActive\
    \ attribute in that PIB instance MUST\n          be set to 'false'.\n        \
    \  When the PDP installs an attribute frwkPibIncarnationActive\n          on the\
    \ PEP  that is 'true' in one PIB instance and if the\n          context belongs\
    \ to the 'configuration contexts' set, the PEP\n          must ensure, re-setting\
    \ the attribute if necessary, that the\n          frwkPibIncarnationActive attribute\
    \ is  'false' in all other\n          contexts which belong to the 'configuration\
    \ contexts' set.\"\n      ::= { frwkPibIncarnationEntry 7 }\n  frwkPibIncarnationFullState\
    \ OBJECT-TYPE\n      SYNTAX         TruthValue\n      STATUS         current\n\
    \      DESCRIPTION\n          \"This attribute is interpreted only when sent in\
    \ a COPS\n          request message from the PEP to the PDP. It does not have\n\
    \          any meaning when sent from the PDP to the PEP.\n          If this attribute\
    \ is set to 'true' by the PEP, then the\n          request that the PEP sends\
    \ to the PDP must be interpreted as\n          the complete configuration request\
    \ for the PEP. The PDP must\n          in this case refresh the request information\
    \ for the\n          handle that the request containing this PRI was received\
    \ on.\n          If this attribute is set to 'false', then the\n             request\
    \ PRIs sent in the request must be interpreted as\n          updates to the previous\
    \ request PRIs sent using that handle.\n          See section 3.3 for details\
    \ on updating request state\n          information.\"\n      REFERENCE\n     \
    \     \"RFC 3318 Section 2.3\"\n      ::= { frwkPibIncarnationEntry 8 }\n  --\n\
    \  -- Device Identification Table\n  --\n  frwkDeviceIdTable OBJECT-TYPE\n   \
    \   SYNTAX         SEQUENCE OF FrwkDeviceIdEntry\n      PIB-ACCESS     notify\n\
    \      STATUS         current\n      DESCRIPTION\n          \"This PRC contains\
    \ a single PRovisioning Instance that\n          contains general purpose device-specific\
    \ information that is\n          used to facilitate efficient policy communication\
    \ by a PDP.\n          The  instance of this PRC is reported to the PDP in a COPS\n\
    \          request message so that the PDP can take into account\n          certain\
    \ device characteristics during policy installation.\"\n      ::= { frwkBasePibClasses\
    \ 3 }\n  frwkDeviceIdEntry OBJECT-TYPE\n      SYNTAX         FrwkDeviceIdEntry\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An instance of the\
    \ frwkDeviceId class. Only one instance of\n          this PRC is ever instantiated.\"\
    \n      PIB-INDEX { frwkDeviceIdPrid }\n      ::= { frwkDeviceIdTable 1 }\n  FrwkDeviceIdEntry\
    \ ::= SEQUENCE {\n          frwkDeviceIdPrid        InstanceId,\n          frwkDeviceIdDescr\
    \       SnmpAdminString,\n          frwkDeviceIdMaxMsg      Unsigned32,\n    \
    \      frwkDeviceIdMaxContexts Unsigned32\n  }\n  frwkDeviceIdPrid OBJECT-TYPE\n\
    \      SYNTAX         InstanceId\n      STATUS         current\n      DESCRIPTION\n\
    \          \"An index to uniquely identify an instance of this PRC.\"\n      ::=\
    \ { frwkDeviceIdEntry 1 }\n  frwkDeviceIdDescr OBJECT-TYPE\n      SYNTAX     \
    \    SnmpAdminString (SIZE (1..255))\n      STATUS         current\n      DESCRIPTION\n\
    \          \"A textual description of the PEP. This value should include\n   \
    \       the name and version identification of the PEP's hardware\n          and\
    \ software.\"\n      ::= { frwkDeviceIdEntry 2 }\n  frwkDeviceIdMaxMsg OBJECT-TYPE\n\
    \      SYNTAX         Unsigned32 (64..4294967295)\n      UNITS          \"octets\"\
    \n      STATUS         current\n      DESCRIPTION\n          \"The maximum COPS-PR\
    \ message size, in octets, that the\n          device is capable of processing.\
    \ Received messages with a\n          size in excess of this value must cause\
    \ the PEP to return an\n          error to the PDP containing the global error\
    \ code\n          'maxMsgSizeExceeded'. This is an additional error-avoidance\n\
    \          mechanism to allow the administrator to know the maximum\n        \
    \  message size supported so that they have the ability to\n          control\
    \ the message size of messages sent to the device.\n          This attribute must\
    \ have a non-zero value. The device should\n          send the MAX value for Unsigned32\
    \ for this attribute if it\n          not defined.\"\n      DEFVAL { 4294967295\
    \ }\n      ::= { frwkDeviceIdEntry 3 }\n  frwkDeviceIdMaxContexts OBJECT-TYPE\n\
    \     SYNTAX         Unsigned32 (1..4294967295)\n     UNITS          \"contexts\"\
    \n     STATUS         current\n     DESCRIPTION\n         \"The maximum number\
    \ of unique contexts supported by\n          the device. This is an additional\
    \ error-avoidance mechanism\n          to allow the administrators to have the\
    \ ability to know the\n          maximum number of contexts supported so that\
    \ they can\n          control the number of configuration contexts they install\
    \ on\n          the device. This attribute must have a non-zero value. The\n \
    \         device should send the MAX value for Unsigned32 for this\n         \
    \ attribute if it not defined.\"\n      DEFVAL { 4294967295 }\n     ::= { frwkDeviceIdEntry\
    \ 4 }\n  --\n  -- Component Limitations Table\n  --\n  frwkCompLimitsTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkCompLimitsEntry\n      PIB-ACCESS     notify\n\
    \      STATUS         current\n      DESCRIPTION\n          \"This PRC supports\
    \ the ability to export information\n          detailing PRC/attribute implementation\
    \ limitations to the\n          policy management system. Instances of this PRC\
    \ apply only\n          for PRCs with access type 'install' or 'install-notify'.\n\
    \          Each instance of this PRC identifies a PRovisioning Class\n       \
    \   or attribute and a limitation related to the implementation\n          of\
    \ the class/attribute in the device. Additional information\n          providing\
    \ guidance related to the limitation may also be\n          present. These PRIs\
    \ are sent to the PDP to indicate which\n          PRCs or PRC attributes the\
    \ device supports in a restricted\n          manner.\"\n      ::= { frwkBasePibClasses\
    \ 4 }\n  frwkCompLimitsEntry OBJECT-TYPE\n      SYNTAX         FrwkCompLimitsEntry\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An instance of the\
    \ frwkCompLimits class that identifies\n          a PRC or PRC attribute and a\
    \ limitation related to the PRC\n          or PRC attribute implementation supported\
    \ by the device.\n          COPS-PR lists the error codes that MUST be returned\
    \ (if\n          applicable)for policy installation that don't abide by the\n\
    \          restrictions indicated by the limitations exported. [SPPI]\n      \
    \    defines an INSTALL-ERRORS clause that allows PIB designers\n          to\
    \ define PRC specific error codes that can be returned for\n          policy installation.\
    \ This allows efficient debugging of PIB\n          implementations.\"\n     \
    \ REFERENCE\n          \"COPS Usage for Policy Provisioning. RFC 3084.\"\n   \
    \   PIB-INDEX { frwkCompLimitsPrid }\n      UNIQUENESS { frwkCompLimitsComponent,\n\
    \                   frwkCompLimitsAttrPos,\n                   frwkCompLimitsNegation,\n\
    \                   frwkCompLimitsType,\n                   frwkCompLimitsSubType,\n\
    \                   frwkCompLimitsGuidance }\n      ::= { frwkCompLimitsTable\
    \ 1 }\n  FrwkCompLimitsEntry ::= SEQUENCE {\n          frwkCompLimitsPrid    \
    \       InstanceId,\n          frwkCompLimitsComponent      PrcIdentifierOid,\n\
    \          frwkCompLimitsAttrPos        AttrIdentifierOrZero,\n          frwkCompLimitsNegation\
    \       TruthValue,\n          frwkCompLimitsType           INTEGER,\n       \
    \   frwkCompLimitsSubType        INTEGER,\n          frwkCompLimitsGuidance  \
    \     OCTET STRING\n  }\n  frwkCompLimitsPrid OBJECT-TYPE\n      SYNTAX      \
    \   InstanceId\n      STATUS         current\n      DESCRIPTION\n          \"\
    An arbitrary integer index that uniquely identifies an\n          instance of\
    \ the frwkCompLimits class.\"\n      ::= { frwkCompLimitsEntry 1 }\n  frwkCompLimitsComponent\
    \ OBJECT-TYPE\n      SYNTAX         PrcIdentifierOid\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The value is the OID of a PRC (the table entry)\
    \ which is\n          supported in some limited fashion or contains an attribute\n\
    \          that is supported in some limited fashion with regard to\n        \
    \  it's definition in the associated PIB module. The same OID\n          may appear\
    \ in the table several times, once for each\n          implementation limitation\
    \ acknowledged by the device.\"\n      ::= { frwkCompLimitsEntry 2 }\n  frwkCompLimitsAttrPos\
    \ OBJECT-TYPE\n      SYNTAX         AttrIdentifierOrZero\n      STATUS       \
    \  current\n      DESCRIPTION\n          \"The relative position of the attribute\
    \ within the PRC\n          specified by the frwkCompLimitsComponent. A value\
    \ of 1 would\n          represent the first columnar object in the PRC and a value\n\
    \          of N would represent the Nth columnar object in the PRC. A\n      \
    \    value of zero (0) indicates that the limit applies to the\n          PRC\
    \ itself and not to a specific attribute.\"\n      ::= { frwkCompLimitsEntry 3\
    \ }\n  frwkCompLimitsNegation OBJECT-TYPE\n      SYNTAX        TruthValue\n  \
    \    STATUS        current\n      DESCRIPTION\n           \"A boolean value ,if\
    \ 'true', negates the component limit\n           exported.\"\n      ::= { frwkCompLimitsEntry\
    \ 4 }\n  frwkCompLimitsType OBJECT-TYPE\n      SYNTAX    INTEGER {\n         \
    \                  priSpaceLimited(1),\n                           attrValueSupLimited(2),\n\
    \                           attrEnumSupLimited(3),\n                         \
    \  attrLengthLimited(4),\n                           prcLimitedNotify(5)\n   \
    \                     }\n      STATUS   current\n      DESCRIPTION\n         \
    \ \"A value describing an implementation limitation for the\n          device\
    \ related to the PRC or PRC attribute identified by\n          the frwkCompLimitsComponent\
    \ and the frwkCompLimitsAttrPos\n          attributes.\n          Values for this\
    \ object are one of the following:\n          priSpaceLimited(1) - No more instances\
    \ than that specified\n          by the guidance value may be installed in the\
    \ given class.\n          The component identified MUST be a valid PRC. The SubType\n\
    \          used MUST be valueOnly(9).\n          attrValueSupLimited(2) - Limited\
    \ values are acceptable for\n          the identified component. The component\
    \ identified MUST be a\n          valid PRC attribute. The guidance OCTET STRING\
    \ will be\n          decoded according to the attribute type.\n          attrEnumSupLimited(3)\
    \ - Limited enumeration values are legal\n          for the identified component.\
    \ The attribute identified MUST\n          be a valid enum type.\n          attrLengthLimited(4)\
    \ - The length of the specified\n          value for the identified component\
    \ is limited. The component\n          identified MUST be a valid PRC attribute\
    \ of base-type OCTET\n          STRING.\n          prcLimitedNotify (5) - The\
    \ component is currently limited\n          for use by request or report messages\
    \ prohibiting decision\n          installation. The component identified must\
    \ be a valid PRC.\"\n      ::= { frwkCompLimitsEntry 5 }\n     frwkCompLimitsSubType\
    \ OBJECT-TYPE\n      SYNTAX         INTEGER {\n                              \
    \    none(1),\n                                  lengthMin(2),\n             \
    \                     lengthMax(3),\n                                  rangeMin(4),\n\
    \                                  rangeMax(5),\n                            \
    \      enumMin(6),\n                                  enumMax(7),\n          \
    \                        enumOnly(8),\n                                  valueOnly(9),\n\
    \                                  bitMask(10)\n                             \
    \ }\n      STATUS         current\n      DESCRIPTION\n          \"This object\
    \ indicates the type of guidance related\n          to the noted limitation (as\
    \ indicated by the\n          frwkCompLimitsType attribute) that is provided\n\
    \          in the frwkCompLimitsGuidance attribute.\n          A value of 'none(1)'\
    \ means that no additional\n          guidance is provided for the noted limitation\
    \ type.\n          A value of 'lengthMin(2)' means that the guidance\n       \
    \   attribute provides data related to the minimum\n          acceptable length\
    \ for the value of the identified\n          component. A corresponding class\
    \ instance\n          specifying the 'lengthMax(3)' value is required\n      \
    \    in conjunction with this sub-type.\n          A value of 'lengthMax(3)' means\
    \ that the guidance\n          attribute provides data related to the maximum\n\
    \          acceptable length for the value of the identified\n          component.\
    \ A corresponding class instance\n          specifying the 'lengthMin(2)' value\
    \ is required\n          in conjunction with this sub-type.\n          A value\
    \ of 'rangeMin(4)' means that the guidance\n          attribute provides data\
    \ related to the lower bound\n          of the range for the value of the identified\n\
    \          component. A corresponding class instance\n          specifying the\
    \ 'rangeMax(5)' value is required\n          in conjunction with this sub-type.\n\
    \          A value of 'rangeMax(5)' means that the guidance\n          attribute\
    \ provides data related to the upper bound\n          of the range for the value\
    \ of the identified\n          component. A corresponding class instance\n   \
    \       specifying the 'rangeMin(4)' value is required\n          in conjunction\
    \ with this sub-type.\n          A value of 'enumMin(6)' means that the guidance\n\
    \          attribute provides data related to the lowest\n          enumeration\
    \ acceptable for the value of the\n          identified component. A corresponding\n\
    \          class instance specifying the 'enumMax(7)'\n          value is required\
    \ in conjunction with this sub-type.\n          A value of 'enumMax(7)' means\
    \ that the guidance\n          attribute provides data related to the largest\n\
    \          enumeration acceptable for the value of the\n          identified component.\
    \ A corresponding\n          class instance specifying the 'enumMin(6)'\n    \
    \      value is required in conjunction with this sub-type.\n          A value\
    \ of 'enumOnly(8)' means that the guidance\n          attribute provides data\
    \ related to a single\n          enumeration acceptable for the value of the\n\
    \          identified component.\n          A value of 'valueOnly(9)' means that\
    \ the guidance\n          attribute provides data related to a single\n      \
    \    value that is acceptable for the identified\n          component.\n     \
    \     A value of 'bitMask(10)' means that the guidance\n          attribute is\
    \ a bit mask such that all the combinations of\n          bits set in the bitmask\
    \ are acceptable values for the\n          identified component which should be\
    \ an attribute of type\n          'BITS'.\n          For example, an implementation\
    \ of the frwkIpFilter class may\n          be limited in several ways, such as\
    \ address mask, protocol\n          and Layer 4 port options. These limitations\
    \ could be\n          exported using this PRC with the following instances:\n\
    \          Component        Type                 Sub-Type   Guidance\n       \
    \   ------------------------------------------------------------\n          DstPrefixLength\
    \  attrValueSupLimited  valueOnly   24\n          SrcPrefixLength  attrValueSupLimited\
    \  valueOnly   24\n          Protocol         attrValueSupLimited  rangeMin  \
    \  10\n          Protocol         attrValueSupLimited  rangeMax    20\n      \
    \    The above entries describe a number of limitations that\n          may be\
    \ in effect for the frwkIpFilter class on a given\n          device. The limitations\
    \ include restrictions on acceptable\n          values for certain attributes.\n\
    \          Also, an implementation of a PRC may be limited in the ways\n     \
    \     it can be accessed. For instance, for a fictitious PRC\n          dscpMapEntry,\
    \ which has a PIB-ACCESS of 'install-notify':\n          Component    Type   \
    \           SubType  Guidance\n          ------------------------------------------------------------\n\
    \          dscpMapEntry prcLimitedNotify  none     zero-length string.\"\n   \
    \      ::= { frwkCompLimitsEntry 6 }\n   frwkCompLimitsGuidance OBJECT-TYPE\n\
    \         SYNTAX         OCTET STRING\n         STATUS         current\n     \
    \    DESCRIPTION\n             \"A value used to convey additional information\
    \ related\n             to the implementation limitation. Note that a guidance\n\
    \             value will not necessarily be provided for all exported\n      \
    \       limitations. If a guidance value is not provided, the\n             value\
    \ must be a zero-length string.\n             The format of the guidance value,\
    \ if one is present as\n             indicated by the frwkCompLimitsSubType attribute,\n\
    \             is described by the following table. Note that the\n           \
    \  format of guidance value is dictated by the base-type of\n             the\
    \ component whose limitation is being exported,\n             interpreted in the\
    \ context of the frwkCompLimitsType and\n             frwkCompLimitsSubType values.\
    \ Any other restrictions\n             (such as size/range/enumerated value) on\
    \ the guidance\n             value MUST be complied with according to the definition\n\
    \             of the component for which guidance is being specified.\n      \
    \       Note that numbers are encoded in network byte order.\n             Base\
    \ Type                      Value\n             ---------                    \
    \  -----\n             Unsigned32/Integer32/INTEGER   32-bit value.\n        \
    \     Unsigned64/Integer64        64-bit Value.\n             OCTET STRING   \
    \             octets of data.\n             OID                         32-bit\
    \ OID components.\n             BITS                        Binary octets of length\n\
    \                                         same as Component specified.\"\n   \
    \      ::= { frwkCompLimitsEntry 7 }\n  --\n  -- Complete Reference specification\
    \ table\n  --\n  frwkReferenceTable OBJECT-TYPE\n      SYNTAX         SEQUENCE\
    \ OF FrwkReferenceEntry\n      PIB-ACCESS     install-notify\n      STATUS   \
    \      current\n      DESCRIPTION\n          \"Each instance of this PRC specifies\
    \ a reference to a PRI\n          in a specific PIB context (handle) for a specific\
    \ client-\n          type. This table gives the PDP the ability to set up\n  \
    \        policies that span installed contexts and the PEP the\n          ability\
    \ to reference instances in another, perhaps\n          configured context. The\
    \ PEP must send a\n          'attrReferenceUnknown' COPS-PR error to the PDP if\
    \ it\n          encounters an invalid reference. \"\n      REFERENCE\n       \
    \   \"COPS Usage for Policy Provisioning. RFC 3084, error\n          codes section\
    \ 4.5.\"\n      ::= { frwkBasePibClasses 5 }\n  frwkReferenceEntry OBJECT-TYPE\n\
    \      SYNTAX         FrwkReferenceEntry\n      STATUS         current\n     \
    \ DESCRIPTION\n          \"Entry specification for the frwkReferenceTable.\"\n\
    \      PIB-INDEX { frwkReferencePrid }\n      UNIQUENESS { }\n      ::= { frwkReferenceTable\
    \ 1 }\n  FrwkReferenceEntry ::= SEQUENCE {\n          frwkReferencePrid      \
    \     InstanceId,\n          frwkReferenceClientType     ClientType,\n       \
    \   frwkReferenceClientHandle   ClientHandle,\n          frwkReferenceInstance\
    \       Prid\n  }\n  frwkReferencePrid  OBJECT-TYPE\n      SYNTAX         InstanceId\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An arbitrary integer\
    \ index that uniquely identifies an\n          instance of the frwkReference class.\"\
    \n      ::= { frwkReferenceEntry 1 }\n  frwkReferenceClientType OBJECT-TYPE\n\
    \      SYNTAX         ClientType\n      STATUS         current\n      DESCRIPTION\n\
    \          \"Is unused if set to zero else specifies a client-type for\n     \
    \      which the reference is to be interpreted. This non-zero\n           client-type\
    \ must be activated explicitly via a separate\n           COPS client-open else\
    \ this attribute is not valid.\"\n      ::= { frwkReferenceEntry 2 }\n  frwkReferenceClientHandle\
    \ OBJECT-TYPE\n      SYNTAX         ClientHandle\n      STATUS         current\n\
    \      DESCRIPTION\n          \"Must be set to specify a valid client-handle in\
    \ the scope\n          of the client-type specified.\"\n      ::= { frwkReferenceEntry\
    \ 3 }\n  frwkReferenceInstance OBJECT-TYPE\n      SYNTAX         Prid\n      STATUS\
    \         current\n      DESCRIPTION\n          \"References a PRI in the context\
    \ identified by\n           frwkReferenceClientHandle for client-type identified\
    \ by\n           frwkReferenceClientType.\"\n      ::= { frwkReferenceEntry 4\
    \ }\n  --\n  -- Error specification table\n  --\n  frwkErrorTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkErrorEntry\n      PIB-ACCESS     install\n\
    \      STATUS         current\n      DESCRIPTION\n          \"Each instance of\
    \ this PRC specifies a class specific\n          error object. Instances of this\
    \ PRC are transient, i.e.,\n          instances received in a COPS decision message\
    \ must not be\n          maintained by the PEP in its copy of the PIB instances.\
    \ This\n          PRC allows a PDP to send error information to the PEP if the\n\
    \          PDP cannot process updates to a Request successfully.\"\n      ::=\
    \ { frwkBasePibClasses 6 }\n  frwkErrorEntry OBJECT-TYPE\n      SYNTAX       \
    \  FrwkErrorEntry\n      STATUS         current\n      DESCRIPTION\n         \
    \ \"Entry specification for the frwkErrorTable.\"\n      PIB-INDEX { frwkErrorPrid\
    \ }\n      UNIQUENESS {\n                   frwkErrorCode,\n                 \
    \  frwkErrorSubCode,\n                   frwkErrorPrc,\n                   frwkErrorInstance\n\
    \                 }\n      ::= { frwkErrorTable 1 }\n  FrwkErrorEntry ::= SEQUENCE\
    \ {\n          frwkErrorPrid        InstanceId,\n          frwkErrorCode     \
    \   Unsigned32,\n          frwkErrorSubCode     Unsigned32,\n          frwkErrorPrc\
    \         PrcIdentifierOid,\n          frwkErrorInstance    InstanceId\n  }\n\
    \  frwkErrorPrid  OBJECT-TYPE\n      SYNTAX         InstanceId\n      STATUS \
    \        current\n      DESCRIPTION\n          \"An arbitrary integer index that\
    \ uniquely identifies an\n          instance of the frwkError class.\"\n     \
    \ ::= { frwkErrorEntry 1 }\n  frwkErrorCode OBJECT-TYPE\n      SYNTAX        \
    \ Unsigned32 (0..65535)\n      STATUS         current\n      DESCRIPTION\n   \
    \       \"Error code defined in COPS-PR CPERR object.\"\n      REFERENCE\n   \
    \       \"COPS Usage for Policy Provisioning. RFC 3084.\"\n      ::= { frwkErrorEntry\
    \ 2 }\n  frwkErrorSubCode OBJECT-TYPE\n      SYNTAX         Unsigned32 (0..65535)\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The class-specific\
    \ error object is used to communicate\n          errors relating to specific PRCs.\"\
    \n      ::= { frwkErrorEntry 3 }\n  frwkErrorPrc OBJECT-TYPE\n      SYNTAX   \
    \      PrcIdentifierOid\n      STATUS         current\n      DESCRIPTION\n   \
    \       \"The PRC due to which the error specified by codes\n          (frwkErrorCode\
    \ , frwkErrorSubCode) occurred.\"\n      ::= { frwkErrorEntry 4 }\n  frwkErrorInstance\
    \ OBJECT-TYPE\n      SYNTAX         InstanceId\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The PRI of the identified PRC (frwkErrorPrc) due\
    \ to which\n          the error specified by codes (frwkErrorCode ,\n        \
    \  frwkErrorSubCode) occurred. Must be set to zero if unused.\"\n      ::= { frwkErrorEntry\
    \ 5 }\n  --\n  -- The device capabilities and role combo classes group\n  --\n\
    \  frwkDeviceCapClasses\n              OBJECT IDENTIFIER ::= { frameworkPib 2\
    \ }\n  --\n  -- Capability Set Table\n  --\n  frwkCapabilitySetTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkCapabilitySetEntry\n      PIB-ACCESS   \
    \  notify\n      STATUS         current\n      DESCRIPTION\n          \"This PRC\
    \ describes the capability sets that exist on the\n          interfaces on the\
    \ device. The capability set is given a\n          unique name that identifies\
    \ a set. These capability set\n          names are used by the PDP to determine\
    \ policy information to\n          be associated with interfaces that possess\
    \ similar sets of\n          capabilities.\"\n      ::= { frwkDeviceCapClasses\
    \ 1 }\n  frwkCapabilitySetEntry OBJECT-TYPE\n      SYNTAX         FrwkCapabilitySetEntry\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An instance of this\
    \ PRC describes a particular set of\n          capabilities and associates a unique\
    \ name with the set.\"\n      PIB-INDEX { frwkCapabilitySetPrid }\n      UNIQUENESS\
    \ { frwkCapabilitySetName,\n                   frwkCapabilitySetCapability }\n\
    \      ::= { frwkCapabilitySetTable 1 }\n  FrwkCapabilitySetEntry ::= SEQUENCE\
    \ {\n          frwkCapabilitySetPrid           InstanceId,\n          frwkCapabilitySetName\
    \           SnmpAdminString,\n          frwkCapabilitySetCapability     Prid\n\
    \  }\n  frwkCapabilitySetPrid OBJECT-TYPE\n      SYNTAX         InstanceId\n \
    \     STATUS         current\n      DESCRIPTION\n          \"An arbitrary integer\
    \ index that uniquely identifies a\n          instance of the class.\"\n     \
    \ ::= { frwkCapabilitySetEntry 1 }\n  frwkCapabilitySetName OBJECT-TYPE\n    \
    \  SYNTAX         SnmpAdminString (SIZE (1..255))\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The name for the capability set.  This name  is\
    \ the unique\n          identifier of a set of capabilities. This attribute must\
    \ not\n          be assigned a zero-length string.\"\n      ::= { frwkCapabilitySetEntry\
    \ 2 }\n  frwkCapabilitySetCapability OBJECT-TYPE\n      SYNTAX      Prid\n   \
    \   STATUS      current\n      DESCRIPTION\n          \"The complete PRC OID and\
    \ instance identifier specifying the\n          capability PRC instance for the\
    \ interface. This attribute\n          references a specific instance of a capability\
    \ table. The\n          capability table whose instance is referenced must be\n\
    \          defined in the client type specific PIB that this PIB is\n        \
    \  used with. The referenced capability instance becomes a part\n          of\
    \ the set of capabilities associated with the specified\n          frwkCapabilitySetName.\"\
    \n      ::= { frwkCapabilitySetEntry 3 }\n  --\n  -- Interface and Role Combination\
    \ Tables\n  --\n  frwkRoleComboTable OBJECT-TYPE\n      SYNTAX         SEQUENCE\
    \ OF FrwkRoleComboEntry\n      PIB-ACCESS     install-notify\n      STATUS   \
    \      current\n      DESCRIPTION\n          \"This is an abstract PRC that may\
    \ be extended or referenced\n          to enumerate the role combinations, capability\
    \ set names\n          assigned to any interface on a PEP. The identification\
    \ of\n          the interface is to be defined by its extensions or\n        \
    \  referencing PRCs.\"\n      ::= { frwkDeviceCapClasses 2 }\n  frwkRoleComboEntry\
    \ OBJECT-TYPE\n      SYNTAX         FrwkRoleComboEntry\n      STATUS         current\n\
    \      DESCRIPTION\n          \"An instance of this PRC describes one association\
    \ of an\n          interface to a role-combination and capability set name .\n\
    \          Note that an interface can have multiple associations. This\n     \
    \     constraint is controlled by the extending or referencing\n          PRC's\
    \ uniqueness clause.\"\n      PIB-INDEX { frwkRoleComboPrid }\n      UNIQUENESS\
    \ { }\n      ::= { frwkRoleComboTable 1 }\n  FrwkRoleComboEntry ::= SEQUENCE {\n\
    \          frwkRoleComboPrid         InstanceId,\n          frwkRoleComboRoles\
    \        RoleCombination,\n          frwkRoleComboCapSetName   SnmpAdminString\n\
    \  }\n  frwkRoleComboPrid OBJECT-TYPE\n      SYNTAX         InstanceId\n     \
    \ STATUS         current\n      DESCRIPTION\n          \"An arbitrary integer\
    \ index that uniquely identifies an\n          instance of the class.\"\n    \
    \  ::= { frwkRoleComboEntry 1 }\n  frwkRoleComboRoles OBJECT-TYPE\n      SYNTAX\
    \         RoleCombination\n      STATUS         current\n      DESCRIPTION\n \
    \         \"The role combination assigned to a specific interface.\"\n      ::=\
    \ { frwkRoleComboEntry 2 }\n  frwkRoleComboCapSetName OBJECT-TYPE\n      SYNTAX\
    \         SnmpAdminString (SIZE (0..255))\n      STATUS         current\n    \
    \  DESCRIPTION\n          \"The name of the capability set associated with\n \
    \         the Role Combination specified in frwkRoleComboRoles. If\n         \
    \ this is a zero length string it implies the PEP is not\n          exporting\
    \ any capability set information for this\n          RoleCombination. The PDP\
    \ must then use the RoleCombinations\n          provided as the only means of\
    \ assigning policies\n          If a non-zero length string is specified, the\
    \ name must\n          exist in frwkCapabilitySetTable.\"\n      ::= { frwkRoleComboEntry\
    \ 3 }\n  --\n  -- Interface, Role Combination association via IfIndex\n  --\n\
    \  frwkIfRoleComboTable OBJECT-TYPE\n      SYNTAX         SEQUENCE OF FrwkIfRoleComboEntry\n\
    \      PIB-ACCESS     install-notify\n      STATUS         current\n      DESCRIPTION\n\
    \          \"This PRC enumerates the interface to role combination and\n     \
    \     frwkRoleComboCapSetName mapping for all policy managed\n          interfaces\
    \ of a device. Policy for an interface depends not\n          only on the capability\
    \ set of an interface but also on its\n          roles. This  table specifies\
    \ all the <interface index,\n          interface capability set name, role combination>\
    \ tuples\n          currently on the device\"\n      ::= { frwkDeviceCapClasses\
    \ 3 }\n  frwkIfRoleComboEntry OBJECT-TYPE\n      SYNTAX         FrwkIfRoleComboEntry\n\
    \      STATUS         current\n      DESCRIPTION\n          \"An instance of this\
    \ PRC describes the association of\n          a interface to an capability set\
    \ name and a role\n          combination.\n          Note that a capability set\
    \ name can have multiple role\n          combinations assigned to it, but an IfIndex\
    \ can have only\n          one role combination associated.\"\n      EXTENDS {\
    \ frwkRoleComboEntry }\n      UNIQUENESS { frwkIfRoleComboIfIndex,\n         \
    \          frwkRoleComboCapSetName   }\n      ::= { frwkIfRoleComboTable 1 }\n\
    \  FrwkIfRoleComboEntry ::= SEQUENCE {\n          frwkIfRoleComboIfIndex     \
    \ InterfaceIndex\n  }\n  frwkIfRoleComboIfIndex OBJECT-TYPE\n      SYNTAX    \
    \     InterfaceIndex\n      STATUS         current\n      DESCRIPTION\n      \
    \    \"The value of this attribute is the ifIndex which is\n          associated\
    \ with the specified RoleCombination and interface\n          capability set name.\"\
    \n      ::= { frwkIfRoleComboEntry 1 }\n  --\n  -- The Classification classes\
    \ group\n  --\n  frwkClassifierClasses\n             OBJECT IDENTIFIER ::= { frameworkPib\
    \ 3 }\n  --\n  -- The Base Filter Table\n  --\n  frwkBaseFilterTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkBaseFilterEntry\n      PIB-ACCESS     install\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The Base Filter\
    \ class.  A packet has to match all\n          fields in an Filter.  Wildcards\
    \ may be specified for those\n          fields that are not relevant.\"\n    \
    \  ::= { frwkClassifierClasses 1 }\n  frwkBaseFilterEntry OBJECT-TYPE\n      SYNTAX\
    \         FrwkBaseFilterEntry\n      STATUS         current\n      DESCRIPTION\n\
    \          \"An instance of the frwkBaseFilter class.\"\n      PIB-INDEX { frwkBaseFilterPrid\
    \ }\n      ::= { frwkBaseFilterTable 1 }\n  FrwkBaseFilterEntry ::= SEQUENCE {\n\
    \          frwkBaseFilterPrid         InstanceId,\n          frwkBaseFilterNegation\
    \     TruthValue\n  }\n  frwkBaseFilterPrid OBJECT-TYPE\n      SYNTAX        \
    \ InstanceId\n      STATUS         current\n      DESCRIPTION\n          \"An\
    \ integer index to uniquely identify this Filter among all\n          the Filters.\"\
    \n      ::= { frwkBaseFilterEntry 1 }\n  frwkBaseFilterNegation OBJECT-TYPE\n\
    \      SYNTAX         TruthValue\n      STATUS         current\n      DESCRIPTION\n\
    \          \"This attribute behaves like a logical NOT for the filter.\n     \
    \     If the packet matches this filter and the value of this\n          attribute\
    \ is 'true', the action associated with this filter\n          is not applied\
    \ to the packet.  If the value of this\n          attribute is 'false', then the\
    \ action is applied to the\n          packet.\"\n      ::= { frwkBaseFilterEntry\
    \ 2 }\n  --\n  -- The IP Filter Table\n  --\n  frwkIpFilterTable OBJECT-TYPE\n\
    \      SYNTAX         SEQUENCE OF FrwkIpFilterEntry\n      PIB-ACCESS     install\n\
    \      STATUS         current\n      DESCRIPTION\n          \"Filter definitions.\
    \  A packet has to match all fields in a\n          filter.  Wildcards may be\
    \ specified for those fields that\n          are not relevant.\"\n      INSTALL-ERRORS\
    \ {\n          invalidDstL4PortData(1),\n          invalidSrcL4PortData(2)\n \
    \         }\n      ::= { frwkClassifierClasses 2 }\n  frwkIpFilterEntry OBJECT-TYPE\n\
    \      SYNTAX         FrwkIpFilterEntry\n      STATUS         current\n      DESCRIPTION\n\
    \          \"An instance of the frwkIpFilter class.\"\n      EXTENDS { frwkBaseFilterEntry\
    \ }\n      UNIQUENESS { frwkBaseFilterNegation,\n                   frwkIpFilterAddrType,\n\
    \                   frwkIpFilterDstAddr,\n                   frwkIpFilterDstPrefixLength,\n\
    \                   frwkIpFilterSrcAddr,\n                   frwkIpFilterSrcPrefixLength,\n\
    \                   frwkIpFilterDscp,\n                   frwkIpFilterFlowId,\n\
    \                   frwkIpFilterProtocol,\n                   frwkIpFilterDstL4PortMin,\n\
    \                   frwkIpFilterDstL4PortMax,\n                   frwkIpFilterSrcL4PortMin,\n\
    \                   frwkIpFilterSrcL4PortMax }\n      ::= { frwkIpFilterTable\
    \ 1 }\n  FrwkIpFilterEntry ::= SEQUENCE {\n          frwkIpFilterAddrType    \
    \     InetAddressType,\n          frwkIpFilterDstAddr          InetAddress,\n\
    \          frwkIpFilterDstPrefixLength  InetAddressPrefixLength,\n          frwkIpFilterSrcAddr\
    \          InetAddress,\n          frwkIpFilterSrcPrefixLength  InetAddressPrefixLength,\n\
    \          frwkIpFilterDscp             DscpOrAny,\n          frwkIpFilterFlowId\
    \           Integer32,\n          frwkIpFilterProtocol         Unsigned32,\n \
    \         frwkIpFilterDstL4PortMin     InetPortNumber,\n          frwkIpFilterDstL4PortMax\
    \     InetPortNumber,\n          frwkIpFilterSrcL4PortMin     InetPortNumber,\n\
    \          frwkIpFilterSrcL4PortMax     InetPortNumber\n  }\n  frwkIpFilterAddrType\
    \ OBJECT-TYPE\n      SYNTAX         InetAddressType\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The address type enumeration value to specify\
    \ the type of\n          the packet's IP address.\n          While other types\
    \ of addresses are defined in the\n          InetAddressType textual convention,\
    \ an IP filter can only\n          use IPv4 and IPv6 addresses directly to classify\
    \ traffic.\n          All other InetAddressTypes require mapping to the\n    \
    \      corresponding Ipv4 or IPv6 address before being used to\n          classify\
    \ traffic. Therefore, this object as such is not\n          limited to IPv4 and\
    \ IPv6 addresses, i.e., it can be assigned\n          any of the valid values\
    \ defined in the InetAddressType TC,\n          but the mapping of the address\
    \ values to IPv4 or IPv6\n          addresses for the address attributes (frwkIpFilterDstAddr\n\
    \          and frwkIpFilterSrcAddr) must be done by the PEP. For\n          example\
    \ when dns (16) is used, the PEP must resolve\n          the address to IPv4 or\
    \ IPv6 at install time.\"\n      REFERENCE\n          \"Textual Conventions for\
    \ Internet Network Addresses.\n          RFC 3291.\"\n      ::= { frwkIpFilterEntry\
    \ 1 }\n  frwkIpFilterDstAddr OBJECT-TYPE\n      SYNTAX         InetAddress\n \
    \     STATUS         current\n      DESCRIPTION\n          \"The IP address to\
    \ match against the packet's\n           destination IP address. If the address\
    \ type is 'ipv4',\n           'ipv6', 'ipv4z' or 'ipv6z' then, the attribute\n\
    \           frwkIpFilterDstPrefixLength indicates the number of bits\n       \
    \    that are relevant. \"\n      REFERENCE\n          \"Textual Conventions for\
    \ Internet Network Addresses.\n          RFC 3291.\"\n      ::= { frwkIpFilterEntry\
    \ 2 }\n  frwkIpFilterDstPrefixLength OBJECT-TYPE\n      SYNTAX         InetAddressPrefixLength\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The length of a\
    \ mask for the matching of the destination\n           IP address. This attribute\
    \ is interpreted only if the\n           InetAddressType is 'ipv4', 'ipv4z', 'ipv6'\
    \ or 'ipv6z'.\n           Masks are constructed by setting bits in sequence from\
    \ the\n           most-significant bit downwards for\n           frwkIpFilterDstPrefixLength\
    \ bits length. All other bits in\n           the mask, up to the  number needed\
    \ to fill the length of\n           the address frwkIpFilterDstAddr are cleared\
    \ to zero. A zero\n           bit in the mask then means that the corresponding\
    \ bit in\n           the address always matches.\n           In IPv4 addresses,\
    \ a length of 0 indicates a match of any\n           address; a length of 32 indicates\
    \ a match of a single host\n           address, and a length between 0 and 32\
    \ indicates the use of\n           a CIDR Prefix. IPv6 is similar, except that\
    \ prefix lengths\n           range from 0..128.\"\n      REFERENCE\n         \
    \ \"Textual Conventions for Internet Network Addresses.\n          RFC 3291.\"\
    \n      DEFVAL { 0 }\n      ::= { frwkIpFilterEntry 3 }\n  frwkIpFilterSrcAddr\
    \ OBJECT-TYPE\n      SYNTAX         InetAddress\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The IP address to match against the packet's source\
    \ IP\n          address. If the address type is 'ipv4', 'ipv6', 'ipv4z' or\n \
    \         'ipv6z' then, the attribute frwkIpFilterSrcPrefixLength\n          indicates\
    \ the number of bits that are relevant.\"\n      REFERENCE\n          \"Textual\
    \ Conventions for Internet Network Addresses.\n          RFC 3291.\"\n      ::=\
    \ { frwkIpFilterEntry 4 }\n  frwkIpFilterSrcPrefixLength OBJECT-TYPE\n      SYNTAX\
    \         InetAddressPrefixLength\n      UNITS          \"bits\"\n      STATUS\
    \         current\n      DESCRIPTION\n          \"The length of a mask for the\
    \ matching of the source IP\n           address. This attribute is interpreted\
    \ only if the\n           InetAddressType is 'ipv4', 'ipv4z', 'ipv6' or 'ipv6z'.\n\
    \           Masks are constructed by setting bits in sequence from the\n     \
    \      most-significant bit downwards for\n           frwkIpFilterSrcPrefixLength\
    \ bits length. All other bits in\n           the mask, up to the  number needed\
    \ to fill the length of\n           the address frwkIpFilterSrcAddr are cleared\
    \ to zero.  A\n           zero bit in the mask then means that the corresponding\
    \ bit\n           in the address always matches.\n           In IPv4 addresses,\
    \ a length of 0 indicates a match of any\n           address; a length of 32 indicates\
    \ a match of a single host\n           address, and a length between 0 and 32\
    \ indicates the use of\n           a CIDR Prefix. IPv6 is similar, except that\
    \ prefix lengths\n           range from 0..128.\"\n      REFERENCE\n         \
    \ \"Textual Conventions for Internet Network Addresses.\n          RFC 3291.\"\
    \n      DEFVAL { 0 }\n      ::= { frwkIpFilterEntry 5 }\n  frwkIpFilterDscp OBJECT-TYPE\n\
    \      SYNTAX         DscpOrAny\n      STATUS         current\n      DESCRIPTION\n\
    \          \"The value that the DSCP in the packet can have and\n           match\
    \ this filter. A value of -1 indicates that a specific\n           DSCP value\
    \ has not been defined and thus all DSCP values\n           are considered a match.\"\
    \n      REFERENCE\n          \"Management Information Base for the Differentiated\
    \ Services\n           Architecture. RFC 3289.\"\n      DEFVAL { -1 }\n      ::=\
    \ { frwkIpFilterEntry 6 }\n  frwkIpFilterFlowId OBJECT-TYPE\n      SYNTAX    \
    \    Integer32 (-1 | 0..1048575)\n      STATUS         current\n      DESCRIPTION\n\
    \          \"The flow label or flow identifier in an IPv6 header\n           that\
    \ may be used to discriminate traffic flows.\n           The value of -1 for this\
    \ attribute MUST imply that\n           any flow label value in the IPv6 header\
    \ will match,\n           resulting in the flow label field of the IPv6 header\n\
    \           being ignored for matching this filter entry.\"\n      ::= { frwkIpFilterEntry\
    \ 7 }\n  frwkIpFilterProtocol OBJECT-TYPE\n      SYNTAX         Unsigned32 (0..255)\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The layer-4 protocol\
    \ Id to match against the IPv4 protocol\n          number or the IPv6 Next-Header\
    \ number in the packet. A value\n          of 255 means match all. Note the protocol\
    \ number of 255 is\n          reserved by IANA, and Next-Header number of 0 is\
    \ used in\n          IPv6.\"\n      DEFVAL { 255 }\n      ::= { frwkIpFilterEntry\
    \ 8 }\n  frwkIpFilterDstL4PortMin OBJECT-TYPE\n      SYNTAX         InetPortNumber\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The minimum value\
    \ that the packet's layer 4 destination\n          port number can have and match\
    \ this filter. This value must\n          be equal to or lesser that the value\
    \ specified for this\n          filter in frwkIpFilterDstL4PortMax.\n        \
    \  COPS-PR error code 'attrValueInvalid' must be returned if\n          the frwkIpFilterSrcL4PortMin\
    \ is greater than\n          frwkIpFilterSrcL4PortMax\"\n      REFERENCE\n   \
    \       \"COPS Usage for Policy Provisioning.  RFC 3084, error\n          codes\
    \ section 4.5.\"\n      DEFVAL { 0 }\n     ::= { frwkIpFilterEntry 9 }\n  frwkIpFilterDstL4PortMax\
    \ OBJECT-TYPE\n      SYNTAX         InetPortNumber\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The maximum value that the packet's layer 4 destination\n\
    \          port number can have and match this filter. This value must\n     \
    \     be equal to or greater that the value specified for this\n          filter\
    \ in frwkIpFilterDstL4PortMin.\n          COPS-PR error code 'attrValueInvalid'\
    \ must be returned if\n          the frwkIpFilterDstL4PortMax is less than\n \
    \         frwkIpFilterDstL4PortMin\"\n      REFERENCE\n          \"COPS Usage\
    \ for Policy Provisioning.  RFC 3084, error\n          codes section 4.5.\"\n\
    \      DEFVAL { 65535 }\n      ::= { frwkIpFilterEntry 10 }\n  frwkIpFilterSrcL4PortMin\
    \ OBJECT-TYPE\n      SYNTAX         InetPortNumber\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The minimum value that the packet's layer 4 source\
    \ port\n          number can have and match this filter. This value must\n   \
    \       be equal to or lesser that the value specified for this\n          filter\
    \ in frwkIpFilterSrcL4PortMax.\n          COPS-PR error code 'attrValueInvalid'\
    \ must be returned if\n          the frwkIpFilterSrcL4PortMin is greated than\n\
    \          frwkIpFilterSrcL4PortMax\"\n      REFERENCE\n          \"COPS Usage\
    \ for Policy Provisioning.  RFC 3084, error\n          codes section 4.5.\"\n\
    \      DEFVAL { 0 }\n      ::= { frwkIpFilterEntry 11 }\n  frwkIpFilterSrcL4PortMax\
    \ OBJECT-TYPE\n      SYNTAX         InetPortNumber\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The maximum value that the packet's layer 4 source\
    \ port\n          number can have and match this filter.  This value must be\n\
    \          equal to or greater that the value specified for this filter\n    \
    \      in frwkIpFilterSrcL4PortMin.\n          COPS-PR error code 'attrValueInvalid'\
    \ must be returned if\n          the frwkIpFilterSrcL4PortMax is less than\n \
    \         frwkIpFilterSrcL4PortMin\"\n      REFERENCE\n          \"COPS Usage\
    \ for Policy Provisioning.  RFC error codes\n          section 4.5.\"\n      DEFVAL\
    \ { 65535 }\n      ::= { frwkIpFilterEntry 12 }\n  --\n  -- The IEEE 802 Filter\
    \ Table\n  --\n  frwk802FilterTable OBJECT-TYPE\n      SYNTAX         SEQUENCE\
    \ OF Frwk802FilterEntry\n      PIB-ACCESS     install\n      STATUS         current\n\
    \      DESCRIPTION\n          \"IEEE 802-based filter definitions. A class that\
    \ contains\n          attributes of IEEE 802 (e.g., 802.3) traffic that form\n\
    \          filters that are used to perform traffic classification.\"\n      REFERENCE\n\
    \          \"IEEE Standards for Local and Metropolitan Area Networks.\n      \
    \    Overview and Architecture, ANSI/IEEE Std 802, 1990.\"\n      ::= { frwkClassifierClasses\
    \ 3 }\n  frwk802FilterEntry OBJECT-TYPE\n      SYNTAX         Frwk802FilterEntry\n\
    \      STATUS         current\n      DESCRIPTION\n          \"IEEE 802-based filter\
    \ definitions.  An entry specifies\n          (potentially) several distinct matching\
    \ components. Each\n          component is tested against the data in a frame\n\
    \          individually. An overall match occurs when all of the\n          individual\
    \ components match the data they are compared\n          against in the frame\
    \ being processed. A failure of any\n          one test causes the overall match\
    \ to fail.\n          Wildcards may be specified for those fields that are not\n\
    \          relevant.\"\n      EXTENDS { frwkBaseFilterEntry }\n      UNIQUENESS\
    \ { frwkBaseFilterNegation,\n                   frwk802FilterDstAddr,\n      \
    \             frwk802FilterDstAddrMask,\n                   frwk802FilterSrcAddr,\n\
    \                   frwk802FilterSrcAddrMask,\n                   frwk802FilterVlanId,\n\
    \                   frwk802FilterVlanTagRequired,\n                   frwk802FilterEtherType,\n\
    \                   frwk802FilterUserPriority }\n      ::= { frwk802FilterTable\
    \ 1 }\n  Frwk802FilterEntry ::= SEQUENCE {\n          frwk802FilterDstAddr   \
    \      PhysAddress,\n          frwk802FilterDstAddrMask     PhysAddress,\n   \
    \       frwk802FilterSrcAddr         PhysAddress,\n          frwk802FilterSrcAddrMask\
    \     PhysAddress,\n          frwk802FilterVlanId          Integer32,\n      \
    \    frwk802FilterVlanTagRequired INTEGER,\n          frwk802FilterEtherType \
    \      Integer32,\n          frwk802FilterUserPriority    BITS\n  }\n  frwk802FilterDstAddr\
    \ OBJECT-TYPE\n      SYNTAX         PhysAddress\n      STATUS         current\n\
    \      DESCRIPTION\n          \"The 802 address against which the 802 DA of incoming\n\
    \          traffic streams will be compared. Frames whose 802 DA\n          matches\
    \ the physical address specified by this object,\n          taking into account\
    \ address wildcarding as specified by the\n          frwk802FilterDstAddrMask\
    \ object, are potentially subject to\n          the processing guidelines that\
    \ are associated with this\n          entry through the related action class.\"\
    \n      REFERENCE\n          \"Textual Conventions for SMIv2, RFC 2579.\"\n  \
    \    ::= { frwk802FilterEntry 1 }\n  frwk802FilterDstAddrMask OBJECT-TYPE\n  \
    \    SYNTAX         PhysAddress\n      STATUS         current\n      DESCRIPTION\n\
    \          \"This object specifies the bits in a 802 destination address\n   \
    \       that should be considered when performing a 802 DA\n          comparison\
    \ against the address specified in the\n          frwk802FilterDstAddr object.\n\
    \          The value of this object represents a mask that is logically\n    \
    \      and'ed with the 802 DA in received frames to derive the\n          value\
    \ to be compared against the frwk802FilterDstAddr\n          address. A zero bit\
    \ in the mask thus means that the\n          corresponding bit in the address\
    \ always matches. The\n          frwk802FilterDstAddr value must also be masked\
    \ using this\n          value prior to any comparisons.\n          The length\
    \ of this object in octets must equal the length in\n          octets of the frwk802FilterDstAddr.\
    \ Note that a mask with no\n          bits set (i.e., all zeroes) effectively\
    \ wildcards the\n          frwk802FilterDstAddr object.\"\n      ::= { frwk802FilterEntry\
    \ 2 }\n  frwk802FilterSrcAddr OBJECT-TYPE\n      SYNTAX         PhysAddress\n\
    \      STATUS         current\n      DESCRIPTION\n          \"The 802 MAC address\
    \ against which the 802 MAC SA of\n          incoming traffic streams will be\
    \ compared. Frames whose 802\n          MAC SA matches the physical address specified\
    \ by this\n          object, taking into account address wildcarding as specified\n\
    \          by the frwk802FilterSrcAddrMask object, are potentially\n         \
    \ subject to the processing guidelines that are associated\n          with this\
    \ entry through the related action class.\"\n      ::= { frwk802FilterEntry 3\
    \ }\n  frwk802FilterSrcAddrMask OBJECT-TYPE\n      SYNTAX         PhysAddress\n\
    \      STATUS         current\n      DESCRIPTION\n          \"This object specifies\
    \ the bits in a 802 MAC source address\n          that should be considered when\
    \ performing a 802 MAC SA\n          comparison against the address specified\
    \ in the\n          frwk802FilterSrcAddr object.\n          The value of this\
    \ object represents a mask that is logically\n          and'ed with the 802 MAC\
    \ SA in received frames to derive the\n          value to be compared against\
    \ the frwk802FilterSrcAddr\n          address. A zero bit in the mask thus means\
    \ that the\n          corresponding bit in the address always matches. The\n \
    \         frwk802FilterSrcAddr value must also be masked using this\n        \
    \  value prior to any comparisons.\n          The length of this object in octets\
    \ must equal the length in\n          octets of the frwk802FilterSrcAddr. Note\
    \ that a mask with no\n          bits set (i.e., all zeroes) effectively wildcards\
    \ the\n          frwk802FilterSrcAddr object.\"\n      ::= { frwk802FilterEntry\
    \ 4 }\n  frwk802FilterVlanId OBJECT-TYPE\n      SYNTAX         Integer32 (-1 |\
    \ 1..4094)\n      STATUS         current\n      DESCRIPTION\n          \"The VLAN\
    \ ID (VID) that uniquely identifies a VLAN\n          within the device. This\
    \ VLAN may be known or unknown\n          (i.e., traffic associated with this\
    \ VID has not yet\n          been seen by the device) at the time this entry\n\
    \          is instantiated.\n          Setting the frwk802FilterVlanId object\
    \ to -1 indicates that\n          VLAN data should not be considered during traffic\n\
    \          classification.\"\n      ::= { frwk802FilterEntry 5 }\n  frwk802FilterVlanTagRequired\
    \ OBJECT-TYPE\n      SYNTAX         INTEGER {\n                         taggedOnly(1),\n\
    \                         priorityTaggedPlus(2),\n                         untaggedOnly(3),\n\
    \                         ignoreTag(4)\n                     }\n      STATUS \
    \        current\n      DESCRIPTION\n          \"This object indicates whether\
    \ the presence of an\n          IEEE 802.1Q VLAN tag in data link layer frames\
    \ must\n          be considered when determining if a given frame\n          matches\
    \ this 802 filter entry.\n          A value of 'taggedOnly(1)' means that only\
    \ frames\n          containing a VLAN tag with a non-Null VID (i.e., a\n     \
    \     VID in the range 1..4094) will be considered a match.\n          A value\
    \ of 'priorityTaggedPlus(2)' means that only\n          frames containing a VLAN\
    \ tag, regardless of the value\n          of the VID, will be considered a match.\n\
    \          A value of 'untaggedOnly(3)' indicates that only\n          untagged\
    \ frames will match this filter component.\n          The presence of a VLAN tag\
    \ is not taken into\n          consideration in terms of a match if the value\
    \ is\n          'ignoreTag(4)'.\"\n      ::= { frwk802FilterEntry 6 }\n  frwk802FilterEtherType\
    \ OBJECT-TYPE\n      SYNTAX         Integer32 (-1 | 0..'ffff'h)\n      STATUS\
    \         current\n      DESCRIPTION\n          \"This object specifies the value\
    \ that will be compared\n          against the value contained in the EtherType\
    \ field of an\n          IEEE 802 frame. Example settings would include 'IP'\n\
    \          (0x0800), 'ARP' (0x0806) and 'IPX' (0x8137).\n          Setting the\
    \ frwk802FilterEtherTypeMin object to -1 indicates\n          that EtherType data\
    \ should not be considered during traffic\n          classification.\n       \
    \   Note that the position of the EtherType field depends on\n          the underlying\
    \ frame format. For Ethernet-II encapsulation,\n          the EtherType field\
    \ follows the 802 MAC source address. For\n          802.2 LLC/SNAP encapsulation,\
    \ the EtherType value follows\n          the Organization Code field in the 802.2\
    \ SNAP header. The\n        value that is tested with regard to this filter component\n\
    \        therefore depends on the data link layer frame format being\n       \
    \ used. If this 802 filter component is active when there is\n        no EtherType\
    \ field in a frame (e.g., 802.2 LLC), a match is\n        implied.\"\n    ::=\
    \ { frwk802FilterEntry 7 }\n"
- title: frwk802FilterUserPriority OBJECT-TYPE
  contents:
  - "frwk802FilterUserPriority OBJECT-TYPE\n    SYNTAX         BITS {\n          \
    \              matchPriority0(0),\n                        matchPriority1(1),\n\
    \                        matchPriority2(2),\n                        matchPriority3(3),\n\
    \                        matchPriority4(4),\n                        matchPriority5(5),\n\
    \                        matchPriority6(6),\n                        matchPriority7(7)\n\
    \                   }\n    STATUS         current\n    DESCRIPTION\n        \"\
    The set of values, representing the potential range\n        of user priority\
    \ values, against which the value contained\n        in the user priority field\
    \ of a tagged 802.1 frame is\n        compared. A test for equality is performed\
    \ when determining\n        if a match exists between the data in a data link\
    \ layer\n        frame and the value of this 802 filter component. Multiple\n\
    \        values may be set at one time such that potentially several\n       \
    \ different user priority values may match this 802 filter\n        component.\n\
    \        Setting all of the bits that are associated with this\n        object\
    \ causes all user priority values to match this\n        attribute. This essentially\
    \ makes any comparisons\n        with regard to user priority values unnecessary.\
    \ Untagged\n        frames are treated as an implicit match.\"\n    ::= { frwk802FilterEntry\
    \ 8 }\n"
- title: --
  contents:
  - '--

    '
- title: -- The Internal label filter extension
  contents:
  - '-- The Internal label filter extension

    '
- title: --
  contents:
  - '--

    '
- title: frwkILabelFilterTable OBJECT-TYPE
  contents:
  - "frwkILabelFilterTable OBJECT-TYPE\n    SYNTAX         SEQUENCE OF FrwkILabelFilterEntry\n\
    \    PIB-ACCESS     install\n    STATUS         current\n    DESCRIPTION\n   \
    \     \"Internal label filter Table. This PRC is used to achieve\n         classification\
    \ based on the internal flow label set by the\n         PEP possibly after ingress\
    \ classification to avoid\n         re-classification at the egress interface\
    \ on the same PEP.\"\n    ::= { frwkClassifierClasses 4 }\n"
- title: frwkILabelFilterEntry OBJECT-TYPE
  contents:
  - "frwkILabelFilterEntry OBJECT-TYPE\n    SYNTAX         FrwkILabelFilterEntry\n\
    \    STATUS         current\n    DESCRIPTION\n        \"Internal label filter\
    \ entry definition.\"\n    EXTENDS { frwkBaseFilterEntry }\n    UNIQUENESS { frwkBaseFilterNegation,\n\
    \                 frwkILabelFilterILabel }\n    ::= { frwkILabelFilterTable 1\
    \ }\n"
- title: FrwkILabelFilterEntry ::= SEQUENCE {
  contents:
  - "FrwkILabelFilterEntry ::= SEQUENCE {\n   frwkILabelFilterILabel      OCTET STRING\n"
- title: '}'
  contents:
  - '}

    '
- title: frwkILabelFilterILabel      OBJECT-TYPE
  contents:
  - "frwkILabelFilterILabel      OBJECT-TYPE\n    SYNTAX       OCTET STRING\n    STATUS\
    \       current\n    DESCRIPTION\n       \"The Label that this flow uses for differentiating\
    \ traffic\n        flows.  The flow labeling is meant for network device\n   \
    \    internal usage. A value of zero length string matches all\n       internal\
    \ labels.\"\n    ::= { frwkILabelFilterEntry 1 }\n"
- title: --
  contents:
  - '--

    '
- title: -- The Marker classes group
  contents:
  - '-- The Marker classes group

    '
- title: --
  contents:
  - '--

    '
- title: frwkMarkerClasses
  contents:
  - "frwkMarkerClasses\n           OBJECT IDENTIFIER ::= { frameworkPib 4 }\n"
- title: --
  contents:
  - '--

    '
- title: -- The 802 Marker Table
  contents:
  - '-- The 802 Marker Table

    '
- title: --
  contents:
  - '--

    '
- title: frwk802MarkerTable OBJECT-TYPE
  contents:
  - "frwk802MarkerTable OBJECT-TYPE\n    SYNTAX         SEQUENCE OF Frwk802MarkerEntry\n\
    \    PIB-ACCESS     install\n    STATUS         current\n    DESCRIPTION\n   \
    \     \"The 802 Marker class. An 802 packet can be marked with the\n         specified\
    \ VLAN id, priority level.\"\n    ::= { frwkMarkerClasses 1 }\n"
- title: frwk802MarkerEntry OBJECT-TYPE
  contents:
  - "frwk802MarkerEntry OBJECT-TYPE\n    SYNTAX         Frwk802MarkerEntry\n    STATUS\
    \         current\n    DESCRIPTION\n        \"frwk802Marker entry definition.\"\
    \n    PIB-INDEX { frwk802MarkerPrid }\n    UNIQUENESS { frwk802MarkerVlanId,\n\
    \                 frwk802MarkerPriority }\n    ::= { frwk802MarkerTable 1 }\n"
- title: Frwk802MarkerEntry::= SEQUENCE {
  contents:
  - "Frwk802MarkerEntry::= SEQUENCE {\n        frwk802MarkerPrid          InstanceId,\n\
    \        frwk802MarkerVlanId        Unsigned32,\n        frwk802MarkerPriority\
    \      Unsigned32\n"
- title: '}'
  contents:
  - '}

    '
- title: frwk802MarkerPrid  OBJECT-TYPE
  contents:
  - "frwk802MarkerPrid  OBJECT-TYPE\n    SYNTAX         InstanceId\n    STATUS   \
    \      current\n    DESCRIPTION\n        \"An integer index to uniquely identify\
    \ this 802 Marker.\"\n    ::= { frwk802MarkerEntry 1 }\n"
- title: frwk802MarkerVlanId  OBJECT-TYPE
  contents:
  - "frwk802MarkerVlanId  OBJECT-TYPE\n    SYNTAX         Unsigned32 (1..4094)\n \
    \   STATUS         current\n    DESCRIPTION\n        \"The VLAN ID (VID) that\
    \ uniquely identifies a VLAN within\n         the device.\"\n    ::= { frwk802MarkerEntry\
    \ 2 }\n"
- title: frwk802MarkerPriority  OBJECT-TYPE
  contents:
  - "frwk802MarkerPriority  OBJECT-TYPE\n    SYNTAX         Unsigned32 (0..7)\n  \
    \  STATUS         current\n    DESCRIPTION\n        \"The user priority field\
    \ of a tagged 802.1 frame.\"\n    ::= { frwk802MarkerEntry 3 }\n"
- title: --
  contents:
  - '--

    '
- title: -- The Internal Label Marker Table
  contents:
  - '-- The Internal Label Marker Table

    '
- title: --
  contents:
  - '--

    '
- title: frwkILabelMarkerTable OBJECT-TYPE
  contents:
  - "frwkILabelMarkerTable OBJECT-TYPE\n    SYNTAX         SEQUENCE OF FrwkILabelMarkerEntry\n\
    \    PIB-ACCESS     install\n    STATUS         current\n    DESCRIPTION\n   \
    \     \"The Internal Label Marker class. A flow in a PEP can be\n        marked\
    \ with an internal label using this PRC.\"\n    ::= { frwkMarkerClasses 2 }\n"
- title: frwkILabelMarkerEntry OBJECT-TYPE
  contents:
  - "frwkILabelMarkerEntry OBJECT-TYPE\n    SYNTAX         FrwkILabelMarkerEntry\n\
    \    STATUS         current\n    DESCRIPTION\n        \"frwkILabelkMarker entry\
    \ definition.\"\n    PIB-INDEX { frwkILabelMarkerPrid }\n    UNIQUENESS { frwkILabelMarkerILabel\
    \ }\n    ::= { frwkILabelMarkerTable 1 }\n"
- title: FrwkILabelMarkerEntry::= SEQUENCE {
  contents:
  - "FrwkILabelMarkerEntry::= SEQUENCE {\n        frwkILabelMarkerPrid          InstanceId,\n\
    \        frwkILabelMarkerILabel        OCTET STRING\n"
- title: '}'
  contents:
  - '}

    '
- title: frwkILabelMarkerPrid  OBJECT-TYPE
  contents:
  - "frwkILabelMarkerPrid  OBJECT-TYPE\n    SYNTAX         InstanceId\n    STATUS\
    \         current\n    DESCRIPTION\n        \"An integer index to uniquely identify\
    \ this Label Marker.\"\n    ::= { frwkILabelMarkerEntry 1 }\n"
- title: frwkILabelMarkerILabel  OBJECT-TYPE
  contents:
  - "frwkILabelMarkerILabel  OBJECT-TYPE\n    SYNTAX         OCTET STRING\n    STATUS\
    \         current\n    DESCRIPTION\n        \"This internal label is implementation\
    \ specific and may be\n         used for other policy related functions like flow\n\
    \         accounting purposes and/or other data path treatments.\"\n    ::= {\
    \ frwkILabelMarkerEntry 2 }\n"
- title: --
  contents:
  - '--

    '
- title: -- Conformance Section
  contents:
  - '-- Conformance Section

    '
- title: --
  contents:
  - '--

    '
- title: frwkBasePibConformance
  contents:
  - "frwkBasePibConformance\n                OBJECT IDENTIFIER ::= { frameworkPib\
    \ 5 }\n"
- title: frwkBasePibCompliances
  contents:
  - "frwkBasePibCompliances\n                OBJECT IDENTIFIER ::= { frwkBasePibConformance\
    \ 1 }\n"
- title: frwkBasePibGroups
  contents:
  - "frwkBasePibGroups\n                OBJECT IDENTIFIER ::= { frwkBasePibConformance\
    \ 2 }\n"
- title: frwkBasePibCompliance MODULE-COMPLIANCE
  contents:
  - "frwkBasePibCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n\
    \            \"Describes the requirements for conformance to the\n           \
    \ Framework PIB.\"\n    MODULE  -- this module\n        MANDATORY-GROUPS { frwkPrcSupportGroup,\n\
    \                           frwkPibIncarnationGroup,\n                       \
    \    frwkDeviceIdGroup,\n                           frwkCompLimitsGroup,\n   \
    \                        frwkCapabilitySetGroup,\n                           frwkRoleComboGroup,\n\
    \                           frwkIfRoleComboGroup }\n        OBJECT          frwkPibIncarnationLongevity\n\
    \        PIB-MIN-ACCESS  notify\n        DESCRIPTION\n           \"Install support\
    \ is required if policy expiration is to\n           be supported.\"\n       \
    \ OBJECT          frwkPibIncarnationTtl\n        PIB-MIN-ACCESS  notify\n    \
    \    DESCRIPTION\n           \"Install support is required if policy expiration\
    \ is to\n           be supported.\"\n        OBJECT          frwkPibIncarnationInCtxtSet\n\
    \        PIB-MIN-ACCESS  notify\n        DESCRIPTION\n           \"Install support\
    \ is required if configuration contexts\n           and outsourcing contexts are\
    \ both to be supported.\"\n        OBJECT          frwkPibIncarnationFullState\n\
    \        PIB-MIN-ACCESS  notify\n        DESCRIPTION\n            \"Install support\
    \ is required if incremental updates to\n            request states is to be supported.\"\
    \n    GROUP   frwkReferenceGroup\n        DESCRIPTION\n            \"The frwkReferenceGroup\
    \ is mandatory if referencing\n            across PIB contexts for specific client-types\
    \ is to be\n            supported.\"\n    GROUP   frwkErrorGroup\n        DESCRIPTION\n\
    \            \"The frwkErrorGroup is mandatory sending errors in\n           \
    \  decisions is to be supported.\"\n    GROUP   frwkBaseFilterGroup\n        DESCRIPTION\n\
    \            \"The frwkBaseFilterGroup is mandatory if filtering\n           \
    \  based on traffic components is to be supported.\"\n    GROUP   frwkIpFilterGroup\n\
    \        DESCRIPTION\n            \"The frwkIpFilterGroup is mandatory if filtering\n\
    \             based on IP traffic components is to be supported.\"\n    GROUP\
    \   frwk802FilterGroup\n        DESCRIPTION\n            \"The frwk802FilterGroup\
    \ is mandatory if filtering\n            based on 802 traffic criteria is to be\
    \ supported.\"\n    GROUP   frwkILabelFilterGroup\n        DESCRIPTION\n     \
    \       \"The frwkILabelFilterGroup is mandatory if filtering\n            based\
    \ on PEP internal label is to be supported.\"\n    GROUP   frwk802MarkerGroup\n\
    \        DESCRIPTION\n            \"The frwk802MarkerGroup is mandatory if marking\
    \ a packet\n            with 802 traffic criteria is to be supported.\"\n    GROUP\
    \   frwkILabelMarkerGroup\n        DESCRIPTION\n            \"The frwkILabelMarkerGroup\
    \ is mandatory if marking a\n            flow with internal labels is to be supported.\"\
    \n    ::= { frwkBasePibCompliances 1 }\n"
- title: frwkPrcSupportGroup OBJECT-GROUP
  contents:
  - "frwkPrcSupportGroup OBJECT-GROUP\n    OBJECTS {\n             frwkPrcSupportPrid,\n\
    \             frwkPrcSupportSupportedPrc,\n             frwkPrcSupportSupportedAttrs\
    \ }\n    STATUS  current\n    DESCRIPTION\n            \"Objects from the frwkPrcSupportTable.\"\
    \n    ::= { frwkBasePibGroups 1 }\n"
- title: frwkPibIncarnationGroup OBJECT-GROUP
  contents:
  - "frwkPibIncarnationGroup OBJECT-GROUP\n    OBJECTS {\n             frwkPibIncarnationPrid,\n\
    \             frwkPibIncarnationName,\n             frwkPibIncarnationId,\n  \
    \           frwkPibIncarnationLongevity,\n             frwkPibIncarnationTtl,\n\
    \             frwkPibIncarnationInCtxtSet,\n             frwkPibIncarnationActive,\n\
    \             frwkPibIncarnationFullState\n            }\n    STATUS  current\n\
    \    DESCRIPTION\n            \"Objects from the frwkDevicePibIncarnationTable.\"\
    \n    ::= { frwkBasePibGroups 2 }\n"
- title: frwkDeviceIdGroup OBJECT-GROUP
  contents:
  - "frwkDeviceIdGroup OBJECT-GROUP\n    OBJECTS {\n             frwkDeviceIdPrid,\n\
    \             frwkDeviceIdDescr,\n             frwkDeviceIdMaxMsg,\n         \
    \    frwkDeviceIdMaxContexts }\n    STATUS  current\n    DESCRIPTION\n       \
    \     \"Objects from the frwkDeviceIdTable.\"\n    ::= { frwkBasePibGroups 3 }\n"
- title: frwkCompLimitsGroup OBJECT-GROUP
  contents:
  - "frwkCompLimitsGroup OBJECT-GROUP\n    OBJECTS {\n             frwkCompLimitsPrid,\n\
    \             frwkCompLimitsComponent,\n             frwkCompLimitsAttrPos,\n\
    \             frwkCompLimitsNegation,\n             frwkCompLimitsType,\n    \
    \         frwkCompLimitsSubType,\n             frwkCompLimitsGuidance }\n    STATUS\
    \  current\n    DESCRIPTION\n            \"Objects from the frwkCompLimitsTable.\"\
    \n    ::= { frwkBasePibGroups 4 }\n"
- title: frwkReferenceGroup OBJECT-GROUP
  contents:
  - "frwkReferenceGroup OBJECT-GROUP\n    OBJECTS {\n             frwkReferencePrid,\n\
    \             frwkReferenceClientType,\n             frwkReferenceClientHandle,\n\
    \             frwkReferenceInstance }\n    STATUS  current\n    DESCRIPTION\n\
    \            \"Objects from the frwkReferenceTable.\"\n    ::= { frwkBasePibGroups\
    \ 5 }\n"
- title: frwkErrorGroup OBJECT-GROUP
  contents:
  - "frwkErrorGroup OBJECT-GROUP\n    OBJECTS {\n             frwkErrorPrid,\n   \
    \          frwkErrorCode,\n             frwkErrorSubCode,\n             frwkErrorPrc,\n\
    \             frwkErrorInstance }\n    STATUS  current\n    DESCRIPTION\n    \
    \        \"Objects from the frwkErrorTable.\"\n    ::= { frwkBasePibGroups 6 }\n"
- title: frwkCapabilitySetGroup OBJECT-GROUP
  contents:
  - "frwkCapabilitySetGroup OBJECT-GROUP\n    OBJECTS {\n             frwkCapabilitySetPrid,\n\
    \             frwkCapabilitySetName,\n             frwkCapabilitySetCapability\
    \ }\n    STATUS  current\n    DESCRIPTION\n            \"Objects from the frwkCapabilitySetTable.\"\
    \n    ::= { frwkBasePibGroups 7 }\n"
- title: frwkRoleComboGroup OBJECT-GROUP
  contents:
  - "frwkRoleComboGroup OBJECT-GROUP\n    OBJECTS {\n             frwkRoleComboPrid,\n\
    \             frwkRoleComboRoles,\n             frwkRoleComboCapSetName }\n  \
    \  STATUS  current\n    DESCRIPTION\n            \"Objects from the frwkRoleComboTable.\"\
    \n    ::= { frwkBasePibGroups 8 }\n"
- title: frwkIfRoleComboGroup OBJECT-GROUP
  contents:
  - "frwkIfRoleComboGroup OBJECT-GROUP\n    OBJECTS { frwkIfRoleComboIfIndex }\n \
    \   STATUS  current\n    DESCRIPTION\n            \"Objects from the frwkIfRoleComboTable.\"\
    \n    ::= { frwkBasePibGroups 9 }\n"
- title: frwkBaseFilterGroup OBJECT-GROUP
  contents:
  - "frwkBaseFilterGroup OBJECT-GROUP\n    OBJECTS {\n             frwkBaseFilterPrid,\n\
    \             frwkBaseFilterNegation }\n    STATUS  current\n    DESCRIPTION\n\
    \            \"Objects from the frwkBaseFilterTable.\"\n    ::= { frwkBasePibGroups\
    \ 10 }\n"
- title: frwkIpFilterGroup OBJECT-GROUP
  contents:
  - "frwkIpFilterGroup OBJECT-GROUP\n    OBJECTS {\n             frwkIpFilterAddrType,\n\
    \             frwkIpFilterDstAddr,\n             frwkIpFilterDstPrefixLength,\n\
    \             frwkIpFilterSrcAddr,\n             frwkIpFilterSrcPrefixLength,\n\
    \             frwkIpFilterDscp,\n             frwkIpFilterFlowId,\n          \
    \   frwkIpFilterProtocol,\n             frwkIpFilterDstL4PortMin,\n          \
    \   frwkIpFilterDstL4PortMax,\n             frwkIpFilterSrcL4PortMin,\n      \
    \       frwkIpFilterSrcL4PortMax }\n    STATUS  current\n    DESCRIPTION\n   \
    \         \"Objects from the frwkIpFilterTable.\"\n    ::= { frwkBasePibGroups\
    \ 11 }\n"
- title: frwk802FilterGroup OBJECT-GROUP
  contents:
  - "frwk802FilterGroup OBJECT-GROUP\n    OBJECTS {\n             frwk802FilterDstAddr,\n\
    \             frwk802FilterDstAddrMask,\n             frwk802FilterSrcAddr,\n\
    \             frwk802FilterSrcAddrMask,\n             frwk802FilterVlanId,\n \
    \            frwk802FilterVlanTagRequired,\n             frwk802FilterEtherType,\n\
    \             frwk802FilterUserPriority }\n    STATUS  current\n    DESCRIPTION\n\
    \            \"Objects from the frwk802FilterTable.\"\n    ::= { frwkBasePibGroups\
    \ 12 }\n"
- title: frwkILabelFilterGroup OBJECT-GROUP
  contents:
  - "frwkILabelFilterGroup OBJECT-GROUP\n    OBJECTS { frwkILabelFilterILabel }\n\
    \    STATUS  current\n    DESCRIPTION\n            \"Objects from the frwkILabelFilterTable.\"\
    \n    ::= { frwkBasePibGroups 13 }\n"
- title: frwk802MarkerGroup OBJECT-GROUP
  contents:
  - "frwk802MarkerGroup OBJECT-GROUP\n    OBJECTS {\n             frwk802MarkerPrid,\n\
    \             frwk802MarkerVlanId,\n             frwk802MarkerPriority }\n   \
    \ STATUS  current\n    DESCRIPTION\n            \"Objects from the frwk802MarkerTable.\"\
    \n    ::= { frwkBasePibGroups 14 }\n"
- title: frwkILabelMarkerGroup OBJECT-GROUP
  contents:
  - "frwkILabelMarkerGroup OBJECT-GROUP\n    OBJECTS {\n             frwkILabelMarkerPrid,\n\
    \             frwkILabelMarkerILabel }\n    STATUS  current\n    DESCRIPTION\n\
    \            \"Objects from the frwkILabelMarkerTable.\"\n    ::= { frwkBasePibGroups\
    \ 15 }\n"
- title: END
  contents:
  - 'END

    '
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   It is clear that this PIB is used for configuration\
    \ using [COPS-PR],\n   and anything that can be configured can be misconfigured,\
    \ with a\n   potentially disastrous effect.  At this writing, no security holes\n\
    \   have been identified beyond those that the COPS base protocol\n   security\
    \ is itself intended to address.  These relate primarily to\n   controlled access\
    \ to sensitive information and the ability to\n   configure a device - or which\
    \ might result from operator error, which\n   is beyond the scope of any security\
    \ architecture.\n   There are a number of PRovisioning Classes defined in this\
    \ PIB that\n   have a PIB-ACCESS clause of install and install-notify (read-create).\n\
    \   These are:\n   frwkPibIncarnationTable: Malicious access of this PRC can cause\
    \ the\n   PEP to use an incorrect context of policies.\n   frwkReferenceTable:\
    \ Malicious access of this PRC can cause the PEP to\n   interpret the installed\
    \ policy in an incorrect manner.\n   frwkErrorTable: Malicious access of this\
    \ PRC can cause the PEP to\n   incorrectly assume that the PDP could not process\
    \ its messages.\n   FrwkCapabilitySetTable, frwkRoleComboTable and frwkIfRoleComboTable:\n\
    \   Malicious access of these PRCs can cause the PEP to apply policies to\n  \
    \ the wrong interfaces.\n   FrwkBaseFilterTable, frwkIpFilterTable, frwk802FilterTable\
    \ and\n   frwkILabelFilterTable: Malicious access of these PRCs can cause\n  \
    \ unintended classification of traffic on the PEP potentially leading\n   to incorrect\
    \ policies being applied.\n   frwk802MarkerTable, frwkILabelMarkerTable: Malicious\
    \ access of these\n   PRCs can cause unintended marking of traffic on the PEP\
    \ potentially\n   leading to incorrect policies being applied.\n   Such objects\
    \ may be considered sensitive or vulnerable in some\n   network environments.\
    \  The support for \"Install\" or \"Install-Notify\"\n   decisions sent over [COPS-PR]\
    \ in a non-secure environment without\n   proper protection can have a negative\
    \ effect on network operations.\n   There are a number of PRovisioning Classes\
    \ in this PIB that may\n   contain information that may be sensitive from a business\n\
    \   perspective, in that they may represent a customer's service contract\n  \
    \ or the filters that the service provider chooses to apply to a\n   customer's\
    \ ingress or egress traffic.  There are no PRCs that are\n   sensitive in their\
    \ own right, such as passwords or monetary amounts.\n   It may be important to\
    \ control even \"Notify\"(read-only) access to\n   these PRCs and possibly to\
    \ even encrypt the values of these PRIs when\n   sending them over the network\
    \ via COPS-PR.  The use of IPSEC between\n   the PDP and the PEP, as described\
    \ in [COPS], provides the necessary\n   protection against security threats. \
    \ However, even if the network\n   itself is secure, there is no control as to\
    \ who on the secure network\n   is allowed to \"Install/Notify\" (read/change/create/delete)\
    \ the PRIs\n   in this PIB.\n   It is then a customer/user responsibility to ensure\
    \ that the PEP/PDP\n   giving access to an instance of this PIB, is properly configured\
    \ to\n   give access to only the PRIs and principals (users) that have\n   legitimate\
    \ rights to indeed \"Install\" or \"Notify\" (change/create/\n   delete) them.\n"
- title: 7. IANA Considerations
  contents:
  - "7. IANA Considerations\n   This document describes the frameworkPib and frwkTcPib\
    \ Policy\n   Information Base (PIB) modules for registration under the \"pib\"\
    \n   branch registered with IANA.  The IANA has assigned PIB numbers 2 and\n \
    \  3, respectively.\n   Both these PIBs use \"all\" in the SUBJECT-CATEGORIES\
    \ clause, i.e.,\n   they apply to all COPS client types.  No new COPS client type\
    \ is to\n   be registered for these two PIB modules.\n"
- title: 8. References
  contents:
  - '8. References

    '
- title: 8.1 Normative References
  contents:
  - "8.1 Normative References\n   [COPS]           Boyle, J., Cohen, R., Durham, D.,\
    \ Herzog, S., Rajan,\n                    R. and A. Sastry, \"The COPS (Common\
    \ Open Policy\n                    Service) Protocol\", RFC 2748, January 2000.\n\
    \   [COPS-PR]        Chan, K., Durham, D., Gai, S., Herzog, S.,\n            \
    \        McCloghrie, K., Reichmeyer, Seligson, J., Smith, A.\n               \
    \     and R. Yavatkar, \"COPS Usage for Policy\n                    Provisioning\"\
    , RFC 3084, March 2001.\n   [SPPI]           McCloghrie, K., Fine, M., Seligson,\
    \ J., Chan, K.,\n                    Hahn, S., Sahita, R., Smith, A. and F. Reichmeyer,\n\
    \                    \"Structure of Policy Provisioning Information\", RFC\n \
    \                   3159, August 2001.\n   [SNMP-SMI]       McCloghrie, K., Perkins,\
    \ D., Schoenwaelder, J.,\n                    Case, J., Rose, M. and S. Waldbusser,\
    \ \"Structure of\n                    Management Information Version 2 (SMIv2)\"\
    , STD 58,\n                    RFC 2578, April 1999.\n   [INETADDR]       Daniele,\
    \ M., Haberman, B., Routhier, S. and J.\n                    Schoenwaelder, \"\
    Textual Conventions for Internet\n                    Network Addresses\", RFC\
    \ 3291, May 2002.\n   [802]            IEEE Standards for Local and Metropolitan\
    \ Area\n                    Networks: Overview and Architecture, ANSI/IEEE Std\n\
    \                    802, 1990.\n   [SNMPFRWK]       Harrington, D., Presuhn,\
    \ R. and B. Wijnen, \"An\n                    Architecture for Describing Simple\
    \ Network\n                    Management Protocol (SNMP) Management Frameworks\"\
    ,\n                    STD 62, RFC 3411, December 2002.\n   [RFC2863]        McCloghrie,\
    \ K. and F. Kastenholz, \"The Interfaces\n                    Group MIB\", RFC\
    \ 2863, June 2000.\n   [DS-MIB]         Baker, F., Chan, K. and  A. Smith, \"\
    Management\n                    Information Base for the Differentiated Services\n\
    \                    Architecture\", RFC 3289, May 2002.\n   [SNMPv2TC]      \
    \ McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n                    \"Textual\
    \ Conventions for SMIv2\", STD 58, RFC 2579,\n                    April 1999.\n\
    \   [RFC2279]        Yergeau, F. \"UTF-8, a transformation format of ISO\n   \
    \                 10646\", RFC 2279, January 1998.\n   [RFC2119]        Bradner,\
    \ S., \"Key words to use in the RFCs\", BCP 14,\n                    RFC 2119,\
    \ March 1997.\n"
- title: 8.2 Informative References
  contents:
  - "8.2 Informative References\n   [RAP-FRAMEWORK]  Yavatkar, R and D. Pendarakis,\
    \ \"A Framework for\n                    Policy-based Admission Control\", RFC\
    \ 2753, January\n                    2000.\n   [POLTERM]        Westerinen, A.,\
    \ Schnizlein, J., Strassner, J.,\n                    Scherling, M., Quinn, B.,\
    \ Herzog, S., Huynh, A.,\n                    Carlson, M., Perry, J. and S. Waldbusser,\n\
    \                    \"Terminology for Policy-Based Management\", RFC 3198,\n\
    \                    November 2001.\n"
- title: 9. Acknowledgments
  contents:
  - "9. Acknowledgments\n   Early versions of this specification were also co-authored\
    \ by Michael\n   Fine, Francis Reichmeyer, John Seligson and Andrew Smith.\n \
    \  Special thanks to Carol Bell, David Durham and Bert Wijnen for their\n   many\
    \ significant comments.\n   Additional useful comments have been made by Diana\
    \ Rawlins, Martin\n   Bokaemper, Tina Iliff, Pedro Da Silva, Juergen Schoenwaelder,\n\
    \   Noisette Yoann and Man Li.\n"
- title: 10. Authors' Addresses
  contents:
  - "10. Authors' Addresses\n   Ravi Sahita\n   Intel Labs.\n   2111 NE 25th Avenue\n\
    \   Hillsboro, OR 97124 USA\n   Phone: +1 503 712 1554\n   EMail: ravi.sahita@intel.com\n\
    \   Scott Hahn\n   Intel Corp.\n   2111 NE 25th Avenue\n   Hillsboro, OR 97124\
    \ USA\n   Phone: +1 503 264 8231\n   EMail: scott.hahn@intel.com\n   Kwok Ho Chan\n\
    \   Nortel Networks, Inc.\n   600 Technology Park Drive\n   Billerica, MA 01821\
    \ USA\n   Phone: +1 978 288 8175\n   EMail: khchan@nortelnetworks.com\n   Keith\
    \ McCloghrie\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA\
    \  95134-1706 USA\n   Phone: +1 408 526 5260\n   EMail: kzm@cisco.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
