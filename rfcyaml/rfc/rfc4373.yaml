- title: __initial_text__
  contents:
  - "             Lightweight Directory Access Protocol (LDAP)\n                Bulk\
    \ Update/Replication Protocol (LBURP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Lightweight Directory Access Protocol (LDAP) Bulk\n   Update/Replication\
    \ Protocol (LBURP) allows an LDAP client to perform\n   a bulk update to an LDAP\
    \ server.  The protocol frames a sequenced set\n   of update operations within\
    \ a pair of LDAP extended operations to\n   notify the server that the update\
    \ operations in the framed set are\n   related in such a way that the ordering\
    \ of all operations can be\n   preserved during processing even when they are\
    \ sent asynchronously by\n   the client.  Update operations can be grouped within\
    \ a single\n   protocol message to maximize the efficiency of client-server\n\
    \   communication.\n   The protocol is suitable for efficiently making a substantial\
    \ set of\n   updates to the entries in an LDAP server.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................3\n  \
    \ 3. Overview of Protocol ............................................3\n    \
    \  3.1. Update Initiation ..........................................4\n      3.2.\
    \ Update Stream ..............................................4\n           3.2.1.\
    \ LBURPUpdateRequest ..................................4\n           3.2.2. LBURPUpdateResponse\
    \ .................................4\n      3.3. Update Termination .........................................4\n\
    \      3.4. Applicability of Protocol ..................................5\n  \
    \ 4. Description of Protocol Flow ....................................5\n   5.\
    \ Elements of Protocol ............................................6\n      5.1.\
    \ StartLBURPRequest ..........................................7\n           5.1.1.\
    \ updateStyleOID ......................................7\n      5.2. StartLBURPResponse\
    \ .........................................7\n           5.2.1. maxOperations\
    \ .......................................8\n      5.3. LBURPUpdateRequest .........................................8\n\
    \           5.3.1. sequenceNumber ......................................8\n  \
    \         5.3.2. UpdateOperationList .................................9\n    \
    \  5.4. LBURPUpdateResponse ........................................9\n      \
    \     5.4.1. OperationResults ...................................10\n        \
    \          5.4.1.1. operationNumber ...........................10\n          \
    \        5.4.1.2. ldapResult ................................10\n      5.5. EndLBURPRequest\
    \ ...........................................10\n           5.5.1. sequenceNumber\
    \ .....................................10\n      5.6. EndLBURPResponse ..........................................11\n\
    \   6. Semantics of the Incremental Update Style ......................11\n  \
    \ 7. General LBURP Semantics ........................................11\n   8.\
    \ Security Considerations ........................................12\n   9. IANA\
    \ Considerations ............................................13\n      9.1. LDAP\
    \ Object Identifier Registrations ......................13\n   10. Normative References\
    \ ..........................................14\n   11. Informative References\
    \ ........................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight Directory Access Protocol (LDAP) Bulk\n\
    \   Update/Replication Protocol (LBURP) arose from the need to allow an\n   LDAP\
    \ client to efficiently present large quantities of updates to an\n   LDAP server\
    \ and have the LDAP server efficiently process them.  LBURP\n   introduces a minimum\
    \ of new operational functionality to the LDAP\n   protocol because the update\
    \ requests sent by the client encapsulate\n   standard LDAP [RFC2251] update operations.\
    \  However, this protocol\n   greatly facilitates bulk updates by allowing the\
    \ client to send the\n   update operations asynchronously and still allow the\
    \ server to\n   maintain proper ordering of the operations.  It also allows the\n\
    \   server to recognize the client's intent to perform a potentially\n   large\
    \ set of update operations and then to change its processing\n   strategy to more\
    \ efficiently process the operations.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   Imperative keywords defined in RFC\
    \ 2119 [RFC2119] are used in this\n   document, and carry the meanings described\
    \ there.\n   All Basic Encoding Rules (BER) [X.690] encodings follow the\n   conventions\
    \ found in section 5.1 of [RFC2251].\n   The term \"supplier\" applies to an LDAP\
    \ client or an LDAP server\n   (acting as a client) that supplies a set of update\
    \ operations to a\n   consumer.\n   The term \"consumer\" applies to an LDAP server\
    \ that consumes (i.e.,\n   processes) the sequenced set of update operations sent\
    \ to it by a\n   supplier.\n"
- title: 3.  Overview of Protocol
  contents:
  - "3.  Overview of Protocol\n   LBURP frames a set of update operations within a\
    \ pair of LDAP\n   extended operations that mark the beginning and end of the\
    \ update\n   set.  These updates are sent via LDAP extended operations, each\n\
    \   containing a sequence number and a list of one or more update\n   operations\
    \ to be performed by the consumer.  Except for the fact that\n   they are grouped\
    \ together as part of a larger LDAP message, the\n   update operations in each\
    \ subset are encoded as LDAP update\n   operations and use the LDAP Abstract Syntax\
    \ Notation One (ASN.1)\n   [X.680] message types specified in [RFC2251].\n"
- title: 3.1.  Update Initiation
  contents:
  - "3.1.  Update Initiation\n   The protocol is initiated when a supplier sends a\
    \ StartLBURPRequest\n   extended operation to a consumer as a notification that\
    \ a stream of\n   associated LBURPUpdateRequests will follow.  The supplier associates\n\
    \   semantics with this stream of requests by including the Object\n   Identifier\
    \ (OID) of the bulk update/replication style in the\n   StartLBURPRequest.  The\
    \ consumer responds to the StartLBURPRequest\n   with a StartLBURPResponse message.\n"
- title: 3.2.  Update Stream
  contents:
  - "3.2.  Update Stream\n   After the consumer responds with a StartLBURPResponse,\
    \ the supplier\n   sends a stream of LBURPUpdateRequest messages to the consumer.\n\
    \   Messages within this stream may be sent asynchronously to maximize\n   the\
    \ efficiency of the transfer.  The consumer responds to each\n   LBURPUpdateRequest\
    \ with an LBURPUpdateResponse message.\n"
- title: 3.2.1.  LBURPUpdateRequest
  contents:
  - "3.2.1.  LBURPUpdateRequest\n   Each LBURPUpdateRequest contains a sequence number\
    \ identifying its\n   relative position within the update stream and an UpdateOperationList\n\
    \   containing an ordered list of LDAP update operations to be applied to\n  \
    \ the Directory Information Tree (DIT).  The sequence number enables\n   the consumer\
    \ to process LBURPUpdateRequest messages in the order they\n   were sent by the\
    \ supplier even when they are sent asynchronously.\n   The consumer processes\
    \ each LBURPUpdateRequest according to the\n   sequence number by applying the\
    \ LDAP update operations in its\n   UpdateOperationList to the DIT in the order\
    \ they are listed.\n"
- title: 3.2.2.  LBURPUpdateResponse
  contents:
  - "3.2.2.  LBURPUpdateResponse\n   When the consumer has processed the update operations\
    \ from an\n   UpdateOperationList, it sends an LBURPUpdateResponse to the supplier\n\
    \   indicating the success or failure of the update operations contained\n   within\
    \ the corresponding LBURPUpdateRequest.\n"
- title: 3.3.  Update Termination
  contents:
  - "3.3.  Update Termination\n   After the supplier has sent all of its LBURPUpdateRequest\
    \ messages,\n   it sends an EndLBURPRequest message to the consumer to terminate\
    \ the\n   update stream.  Upon servicing all LBURPOperation requests and\n   receiving\
    \ the EndLBURPRequest, the consumer responds with an\n   EndLBURPResponse, and\
    \ the update is complete.\n"
- title: 3.4.  Applicability of Protocol
  contents:
  - "3.4.  Applicability of Protocol\n   LBURP is designed to facilitate the bulk\
    \ update of LDAP servers.  It\n   can also be used to synchronize directory information\
    \ between a\n   single master and multiple slaves.\n   No attempt is made to deal\
    \ with the issues associated with multiple-\n   master replication environments\
    \ (such as keeping modification times\n   of attribute values) so that updates\
    \ to the same entry on different\n   replicas can be correctly ordered.  For this\
    \ reason, when LBURP alone\n   is used for replication, proper convergence of\
    \ the data between all\n   replicas can only be assured in a single-master replication\n\
    \   environment.\n"
- title: 4.  Description of Protocol Flow
  contents:
  - "4.  Description of Protocol Flow\n   This section describes the LBURP protocol\
    \ flow and the information\n   contained in each protocol message.  Throughout\
    \ this section, the\n   client or server acting as a supplier is indicated by\
    \ the letter \"S\",\n   and the server acting as a consumer is indicated by the\
    \ letter \"C\".\n   The construct \"S -> C\" indicates that the supplier is sending\
    \ an LDAP\n   message to the consumer, and \"C -> S\" indicates that the consumer\
    \ is\n   sending an LDAP message to the supplier.  Note that the protocol flow\n\
    \   below assumes that a properly authenticated LDAP session has already\n   been\
    \ established between the supplier and consumer.\n       S -> C: StartLBURPRequest\
    \ message.  The parameter is:\n                  1) OID for the LBURP update style\
    \ (see section 5.1.1).\n       C -> S: StartLBURPResponse message.  The parameter\
    \ is:\n                  1) An optional maxOperations instruction\n          \
    \           (see section 5.2.1).\n       S -> C: An update stream consisting of\
    \ zero or more\n               LBURPUpdateRequest messages.  The requests MAY\
    \ be sent\n               asynchronously.  The parameters are:\n             \
    \     1) A sequence number specifying the order of\n                     this\
    \ LBURPUpdateRequest with respect to the\n                     other LBURPUpdateRequest\
    \ messages in the update\n                     stream (see section 5.3.1).\n \
    \                 2) LBURPUpdateRequest.updateOperationList, a list\n        \
    \             of one or more LDAP update operations (see section\n           \
    \          5.3.2).\n               The consumer processes the LBURPUpdateRequest\
    \ messages\n               in the order of their sequence numbers and applies\
    \ the\n               LDAP update operations contained within each\n         \
    \      LBURPUpdateRequest to the DIT in the order they are\n               listed.\n\
    \       C -> S: LBURPUpdateResponse message.  This is sent when the\n        \
    \       consumer completes processing the update operations\n               from\
    \ each LBURPUpdateRequest.updateOperationList.\n       S -> C: EndLBURPRequest\
    \ message.  This is sent after the\n               supplier sends all of its LBURPUpdateRequest\
    \ messages\n               to the consumer.  The parameter is:\n             \
    \     1) A sequence number that is one greater than the\n                    \
    \ sequence number of the last LBURPUpdateRequest\n                     message\
    \ in the update stream.  This allows the\n                     EndLBURPRequest\
    \ to also be sent asynchronously.\n       C -> S: EndLBURPResponse message.  This\
    \ is sent in response to\n               the EndLBURPRequest after the consumer\
    \ has serviced\n               all LBURPOperation requests.\n"
- title: 5.  Elements of Protocol
  contents:
  - "5.  Elements of Protocol\n   LBURP uses two LDAP ExtendedRequest messages--StartLBURPRequest\
    \ and\n   EndLBURPRequest--to initiate and terminate the protocol.  A third\n\
    \   LDAP ExtendedRequest message--LBURPUpdateRequest--is used to send\n   update\
    \ operations from the supplier to the consumer.  These three\n   requests along\
    \ with their corresponding responses comprise the entire\n   protocol.\n   LBURP\
    \ request messages are defined in terms of the LDAP\n   ExtendedRequest [RFC2251]\
    \ as follows:\n        ExtendedRequest ::= [APPLICATION 23] SEQUENCE {\n     \
    \       requestName    [0] LDAPOID,\n            requestValue   [1] OCTET STRING\
    \ OPTIONAL\n        }\n   LBURP response messages are defined in terms of the\
    \ LDAP\n   ExtendedResponse [RFC2251] as follows:\n       ExtendedResponse ::=\
    \ [APPLICATION 24] SEQUENCE {\n           COMPONENTS of LDAPResult,\n        \
    \   responseName  [10] LDAPOID OPTIONAL,\n           response      [11] OCTET\
    \ STRING OPTIONAL\n        }\n"
- title: 5.1.  StartLBURPRequest
  contents:
  - "5.1.  StartLBURPRequest\n   The requestName value of the StartLBURPRequest is\
    \ OID 1.3.6.1.1.17.1.\n   The requestValue of the StartLBURPRequest contains the\
    \ BER-encoding\n   of the following ASN.1:\n       StartLBURPRequestValue ::=\
    \ SEQUENCE {\n           updateStyleOID LDAPOID\n       }\n   LDAPOID is defined\
    \ in [RFC2251], section 4.1.2.\n"
- title: 5.1.1.  updateStyleOID
  contents:
  - "5.1.1.  updateStyleOID\n   The updateStyleOID is an OID that uniquely identifies\
    \ the LBURP\n   update style being used.  This document defines one LBURP update\n\
    \   semantic style that can be transmitted between the StartLBURPRequest\n   and\
    \ EndLBURPRequest.  The updateStyleOID is included in the protocol\n   for future\
    \ expansion of additional update styles.  For example, a\n   future specification\
    \ might define an update style with semantics to\n   replace all existing entries\
    \ with a new set of entries and thus only\n   allows the Add operation.\n   The\
    \ updateStyleOID for the LBURP Incremental Update style is\n   1.3.6.1.1.17.7.\
    \  The semantics of this update style are described in\n   section 6.\n"
- title: 5.2.  StartLBURPResponse
  contents:
  - "5.2.  StartLBURPResponse\n   The responseName of the StartLBURPResponse is the\
    \ OID 1.3.6.1.1.17.2.\n   The optional response element contains the BER-encoding\
    \ of the\n   following ASN.1:\n       StartLBURPResponseValue ::= maxOperations\n\
    \       maxOperations ::= INTEGER (0 .. maxInt)\n       maxInt INTEGER ::= 2147483647\
    \ -- (2^^31 - 1) --\n"
- title: 5.2.1.  maxOperations
  contents:
  - "5.2.1.  maxOperations\n   When present, the value of maxOperations instructs\
    \ the supplier to\n   send no more than that number of update operations per\n\
    \   LBURPUpdateRequest.updateOperationList (see section 5.3.2).  If the\n   consumer\
    \ does not send a maxOperations value, it MUST be prepared to\n   accept any number\
    \ of update operations per\n   LBURPUpdateRequest.updateOperationList.  The supplier\
    \ MAY send fewer\n   but MUST NOT send more than maxOperations update operations\
    \ in a\n   single LBURPUpdateRequest.updateOperationList.\n"
- title: 5.3.  LBURPUpdateRequest
  contents:
  - "5.3.  LBURPUpdateRequest\n   The LBURPUpdateRequest message is used to send a\
    \ set of zero or more\n   LDAP update operations from the supplier to the consumer\
    \ along with\n   sequencing information that enables the consumer to maintain\
    \ the\n   proper sequencing of multiple asynchronous LBURPUpdateRequest\n   messages.\n\
    \   The requestName of the LBURPUpdateRequest is the OID 1.3.6.1.1.17.5.\n   The\
    \ requestValue of an LBURPOperation contains the BER-encoding of\n   the following\
    \ ASN.1:\n       LBURPUpdateRequestValue ::= SEQUENCE {\n           sequenceNumber\
    \ INTEGER (1 .. maxInt),\n           updateOperationList UpdateOperationList\n\
    \       }\n"
- title: 5.3.1.  sequenceNumber
  contents:
  - "5.3.1.  sequenceNumber\n   The sequenceNumber orders associated LBURPOperation\
    \ requests.  This\n   enables the consumer to process LBURPOperation requests\
    \ in the order\n   specified by the supplier.  The supplier MUST set the value\
    \ of\n   sequenceNumber of the first LBURPUpdateRequest to 1, and MUST\n   increment\
    \ the value of sequenceNumber by 1 for each succeeding\n   LBURPUpdateRequest.\
    \  In the unlikely event that the number of\n   LBURPUpdateRequest messages exceeds\
    \ maxInt, a sequenceNumber value of\n   1 is deemed to be the succeeding sequence\
    \ number following a sequence\n   number of maxInt.\n"
- title: 5.3.2.  UpdateOperationList
  contents:
  - "5.3.2.  UpdateOperationList\n   The UpdateOperationList is a list of one or more\
    \ standard LDAP update\n   requests and is defined as follows:\n       UpdateOperationList\
    \ ::= SEQUENCE OF SEQUENCE{\n           updateOperation CHOICE {\n           \
    \   addRequest       AddRequest,\n              modifyRequest    ModifyRequest,\n\
    \              delRequest       DelRequest,\n              modDNRequest     ModifyDNRequest\n\
    \           },\n           controls       [0] Controls OPTIONAL\n       }\n  \
    \ AddRequest, ModifyRequest, DelRequest, and ModifyDNRequest are\n   defined in\
    \ [RFC2251], sections 4.6, 4.7, 4.8, and 4.9.\n   The LDAP update requests in\
    \ the UpdateOperationList MUST be applied\n   to the DIT in the order in which\
    \ they are listed.\n"
- title: 5.4.  LBURPUpdateResponse
  contents:
  - "5.4.  LBURPUpdateResponse\n   An LBURPUpdateResponse message is sent from the\
    \ consumer to the\n   supplier to signal that all of the update operations from\
    \ the\n   UpdateOperationList of an LBURPUpdateRequest have been completed and\n\
    \   to give the results for the update operations from that list.\n   The responseName\
    \ of the LBURPUpdateResponse is the OID\n   1.3.6.1.1.17.6.\n   If the consumer\
    \ server cannot successfully decode an\n   LBURPUpdateRequest in its entirety,\
    \ the resultCode for the\n   corresponding LBURPUpdateResponse is set to protocolError\
    \ and the\n   response element is omitted.  Updates from the LBURPUpdateRequest\n\
    \   SHALL NOT be committed to the DIT in this circumstance.\n   If the status\
    \ of all of the update operations being reported by an\n   LBURPUpdateResponse\
    \ message is success, the resultCode of the\n   LBURPUpdateResponse message is\
    \ set to success and the response\n   element is omitted.\n   If the status of\
    \ any of the update operations being reported by an\n   LBURPUpdateResponse message\
    \ is something other than success, the\n   resultCode for the entire LBURPUpdateResponse\
    \ is set to other to\n   signal that the response element is present.\n"
- title: 5.4.1.  OperationResults
  contents:
  - "5.4.1.  OperationResults\n   When a response element is included in an LBURPUpdateResponse\n\
    \   message, it contains the BER-encoding of the following ASN.1:\n       OperationResults\
    \ ::= SEQUENCE OF OperationResult\n       OperationResult ::= SEQUENCE {\n   \
    \       operationNumber    INTEGER,\n          ldapResult         LDAPResult\n\
    \       }\n   An OperationResult is included for each operation from the\n   UpdateOperationList\
    \ that failed during processing.\n"
- title: 5.4.1.1.  operationNumber
  contents:
  - "5.4.1.1.  operationNumber\n   The operationNumber identifies the LDAP update\
    \ operation from the\n   UpdateOperationList of the LBURPUpdateRequest that failed.\n\
    \   Operations are numbered beginning at 1.\n"
- title: 5.4.1.2.  ldapResult
  contents:
  - "5.4.1.2.  ldapResult\n   The ldapResult included in the OperationResult is the\
    \ same ldapResult\n   that would be sent for the update operation that failed\
    \ if it had\n   failed while being processed as a normal LDAP update operation.\n\
    \   LDAPResult is defined in [RFC2251], section 4.1.10.\n"
- title: 5.5.  EndLBURPRequest
  contents:
  - "5.5.  EndLBURPRequest\n   The requestName of the EndLBURPRequest is the OID 1.3.6.1.1.17.3.\n\
    \   The requestValue contains the BER-encoding of the following ASN.1:\n     \
    \   EndLBURPRequestValue::= SEQUENCE {\n            sequenceNumber INTEGER (1\
    \ .. maxInt)\n        }\n"
- title: 5.5.1.  sequenceNumber
  contents:
  - "5.5.1.  sequenceNumber\n   The value in sequenceNumber is one greater than the\
    \ last\n   LBURPUpdateRequest.sequenceNumber in the update stream.  It allows\n\
    \   the server to know when it has received all outstanding asynchronous\n   LBURPUpdateRequests.\n"
- title: 5.6.  EndLBURPResponse
  contents:
  - "5.6.  EndLBURPResponse\n   The responseName of the EndLBURPResponse is the OID\
    \ 1.3.6.1.1.17.4.\n   There is no response element in the EndLBURPResponse message.\n"
- title: 6.  Semantics of the Incremental Update Style
  contents:
  - "6.  Semantics of the Incremental Update Style\n   The initial state of entries\
    \ in the consumer's DIT plus the\n   LBURPUpdateRequest messages in the update\
    \ stream collectively\n   represent the desired final state of the consumer's\
    \ DIT.  All LDAP\n   update operations defined in [RFC2251]--Add, Modify, Delete,\
    \ and\n   Modify DN--are allowed in the incremental update stream.  All of the\n\
    \   semantics of those operations are in effect, so for instance, an\n   attempt\
    \ to add an entry that already exists will fail just as it\n   would during a\
    \ normal LDAP Add operation.\n"
- title: 7.  General LBURP Semantics
  contents:
  - "7.  General LBURP Semantics\n   The consumer server may take any action required\
    \ to efficiently\n   process the updates sent via LBURP, as long as the final\
    \ state is\n   equivalent to that which would have been achieved if the updates\
    \ in\n   the update stream had been applied to the DIT using normal LDAP\n   update\
    \ operations.\n   The LBURPUpdateRequest messages that form the update stream\
    \ MAY be\n   sent asynchronously by the supplier to the consumer.  This means\
    \ that\n   the supplier need not wait for an LBURPUpdateResponse message for one\n\
    \   LBURPUpdateRequest message before sending the next LBURPUpdateRequest\n  \
    \ message.\n   When the LBURP update stream contains a request that affects multiple\n\
    \   Directory System Agents (DSAs), the consumer MAY choose to perform\n   the\
    \ request or return a resultCode value of affectsMultipleDSAs.  As\n   with any\
    \ LDAP operation, a consumer MAY send a resultCode value of\n   referral as part\
    \ of the OperationResult element for any operation on\n   an entry that it does\
    \ not contain.  If the consumer is configured to\n   do so, it MAY chain on behalf\
    \ of the supplier to complete the update\n   operation instead.\n   While a consumer\
    \ server is processing an LBURP update stream, it may\n   choose not to service\
    \ LDAP requests on other connections.  This\n   provision is designed to allow\
    \ implementers the freedom to implement\n   highly-efficient methods of handling\
    \ the update stream without being\n   constrained by the need to maintain a live,\
    \ working DIT database\n   while doing so.\n   If a consumer chooses to refuse\
    \ LDAP operation requests from other\n   suppliers during LBURP update, it is\
    \ RECOMMENDED that the consumer\n   refer those requests to another server that\
    \ has the appropriate data\n   to complete the operation.\n   Unless attribute\
    \ values specifying timestamps are included as part of\n   the update stream,\
    \ updates made using LBURP are treated the same as\n   other LDAP operations wherein\
    \ they are deemed to occur at the\n   present.  Consumers MAY store timestamp\
    \ values sent by suppliers but\n   are not required to do so.\n   Implementations\
    \ may choose to perform the operations in the update\n   stream with special permissions\
    \ to improve performance.\n   Consumer implementations should include functionality\
    \ to detect and\n   terminate connections on which an LBURP session has been initiated\n\
    \   but information (such as the EndLBURPRequest) needed to complete the\n   LBURP\
    \ session is never received.  A timeout is one mechanism that can\n   be used\
    \ to accomplish this.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Implementations should ensure that a supplier\
    \ making an LBURP request\n   is properly authenticated and authorized to make\
    \ the updates\n   requested.  There is a potential for loss of data if updates\
    \ are made\n   to the DIT without proper authorization.  If LBURP is used for\n\
    \   replication, implementers should note that unlike other replication\n   protocols,\
    \ no existing replication agreement between supplier and\n   consumer is required.\
    \  These risks increase if the consumer server\n   also processes the update stream\
    \ with special permissions to improve\n   performance.  For these reasons, implementers\
    \ should carefully\n   consider which permissions should be required to perform\
    \ LBURP\n   operations and take steps to ensure that only connections with\n \
    \  appropriate authorization are allowed to perform them.\n   The data contained\
    \ in the update stream may contain passwords and\n   other sensitive data.  Care\
    \ should be taken to properly safeguard\n   this information while in transit\
    \ between supplier and consumer.  The\n   StartTLS [RFC2830] operation is one\
    \ mechanism that can be used to\n   provide data confidentiality and integrity\
    \ services for this purpose.\n   As with any asynchronous LDAP operation, it may\
    \ be possible for an\n   LBURP supplier to send asynchronous LBURPUpdateRequest\
    \ messages to\n   the consumer faster than the consumer can process them.  Consumer\n\
    \   implementers should take steps to prevent LBURP suppliers from\n   interfering\
    \ with the normal operation of a consumer server by issuing\n   a rapid stream\
    \ of asynchronous LBURPUpdateRequest messages.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   Registration of the following values has been made\
    \ by the IANA\n   [RFC3383].\n"
- title: 9.1.  LDAP Object Identifier Registrations
  contents:
  - "9.1.  LDAP Object Identifier Registrations\n   The IANA has registered LDAP Object\
    \ Identifiers identifying the\n   protocol elements defined in this technical\
    \ specification.  The\n   following registration template was provided:\n   Subject:\
    \ Request for LDAP OID Registration\n   Person & email address to contact for\
    \ further information:\n       Roger Harrison\n       rharrison@novell.com\n \
    \  Specification: RFC 4373\n   Author/Change Controller: IESG\n   Comments:\n\
    \   Seven delegations will be made under the assigned OID.  The\n   following\
    \ 6 OIDs are Protocol Mechanism OIDs of type \"E\"\n   (supportedExtension):\n\
    \   1.3.6.1.1.17.1 StartLBURPRequest LDAP ExtendedRequest message\n   1.3.6.1.1.17.2\
    \ StartLBURPResponse LDAP ExtendedResponse message\n   1.3.6.1.1.17.3 EndLBURPRequest\
    \ LDAP ExtendedRequest message\n   1.3.6.1.1.17.4 EndLBURPResponse LDAP ExtendedResponse\
    \ message\n   1.3.6.1.1.17.5 LBURPUpdateRequest LDAP ExtendedRequest message\n\
    \   1.3.6.1.1.17.6 LBURPUpdateResponse LDAP ExtendedResponse message\n   The following\
    \ 1 OID is a Protocol Mechanism OID of type \"F\"\n   (supportedFeature):\n  \
    \ 1.3.6.1.1.17.7 LBURP Incremental Update style OID\n"
- title: 10.  Normative References
  contents:
  - "10.  Normative References\n   [RFC2119]  Bradner, S., \"Key Words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2251]  Wahl, M., Howes, T., and S. Kille, \"Lightweight Directory\n\
    \              Access Protocol (v3)\", RFC 2251, December 1997.\n   [RFC3383]\
    \  Zeilenga, K., \"Internet Assigned Numbers Authority (IANA)\n              Considerations\
    \ for the Lightweight Directory Access\n              Protocol (LDAP)\", BCP 64,\
    \ RFC 3383, September 2002.\n   [X.680]    ITU-T Recommendation X.680 (07/2002)\
    \ | ISO/IEC 8824-1:2002\n              \"Information Technology - Abstract Syntax\
    \ Notation One\n              (ASN.1): Specification of basic notation\"\n   [X.690]\
    \    ITU-T Rec. X.690 (07/2002) | ISO/IEC 8825-1:2002,\n              \"Information\
    \ technology - ASN.1 encoding rules:\n              Specification of Basic Encoding\
    \ Rules (BER), Canonical\n              Encoding Rules (CER) and Distinguished\
    \ Encoding Rules\n              (DER)\", 2002.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [RFC2830]  Hodges, J., Morgan, R., and M. Wahl,\
    \ \"Lightweight\n              Directory Access Protocol (v3): Extension for Transport\n\
    \              Layer Security\", RFC 2830, May 2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Roger Harrison\n   Novell, Inc.\n   1800 S. Novell Place\n\
    \   Provo, UT 84606\n   Phone: +1 801 861 2642\n   EMail: rharrison@novell.com\n\
    \   Jim Sermersheim\n   Novell, Inc.\n   1800 S. Novell Place\n   Provo, UT 84606\n\
    \   Phone: +1 801 861 3088\n   EMail: jimse@novell.com\n   Yulin Dong\n   EMail:\
    \ yulindong@gmail.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
