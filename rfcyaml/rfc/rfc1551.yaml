- title: __initial_text__
  contents:
  - '               Novell IPX Over Various WAN Media (IPXWAN)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how Novell IPX operates over various WAN\n\
    \   media.  Specifically, it describes the common \"IPX WAN\" protocol\n   Novell\
    \ uses to exchange necessary router to router information prior\n   to exchanging\
    \ standard IPX routing information and traffic over WAN\n   datalinks. This document\
    \ supercedes RFC 1362 and adds capability for\n   Unnumbered RIP links, On-demand\
    \ statically routed links and client to\n   router connectivity.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction .................................................\
    \ 2\n   1.1 Operation Over PPP ........................................... 2\n\
    \   1.2 Operation Over X.25 Switched Virtual Circuits ................ 2\n   1.3\
    \ Operation Over X.25 Permanent Virtual Circuits ............... 3\n   1.4 Operation\
    \ Over Frame Relay ................................... 3\n   1.5 Operation Over\
    \ Other WAN Media ............................... 3\n   2.  Glossary Of Terms\
    \ ............................................ 4\n   3.  IPX WAN Protocol Description\
    \ ................................. 4\n   3.1 The Initial Negotiation ......................................\
    \ 5\n   3.2 Information Exchange ......................................... 9\n\
    \   3.3 NAK Packets .................................................. 10\n  \
    \ 4.  Information Exchange Packet Formats .......................... 10\n   4.1\
    \ Timer Request Packet ......................................... 11\n   4.2 Timer\
    \ Response Packet ........................................ 14\n   4.3 Information\
    \ Request Packet ................................... 15\n   4.4 Information Response\
    \ Packet .................................. 18\n   5.  Running Unnumbered RIP\
    \ ....................................... 19\n   6.  Workstation Connectivity\
    \ ..................................... 19\n   7.  On-demand, Statically Routed\
    \ Links ........................... 19\n   8.  References ...................................................\
    \ 21\n   9.  Security Considerations ...................................... 21\n\
    \   10. Author's Address.............................................. 22\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes how Novell IPX operates over various\
    \ WAN\n   media. It is strongly motivated by a desire for IPX to treat ALL wide\n\
    \   area links in the same manner. Sections 3 and 4 describe this common\n   \"\
    IPX WAN\" protocol.\n   The IPX WAN protocol operation begins immediately after\
    \ link\n   establishment. While IPX is a connectionless datagram protocol, WANs\n\
    \   are often connection-oriented.  Different WANs have different methods\n  \
    \ of link establishment. The subsections of section 1 of this document\n   describe\
    \ what link establishment means to IPX for different media.\n   They also describe\
    \ other WAN-media-dependent aspects of IPX\n   operation, such as protocol identification,\
    \ frame encapsulation, and\n   link tear down.\n"
- title: 1.1 Operation Over PPP
  contents:
  - "1.1 Operation Over PPP\n   IPX uses PPP [1] when operating over point-to-point\
    \ synchronous and\n   asynchronous networks.\n   With PPP, link establishment\
    \ means the IPX NCP [4] reaches the Open\n   state. NetWare IPX will negotiate\
    \ down to a null set of NCP options,\n   and uses normal frame encapsulation as\
    \ defined by PPP. The IPXWAN\n   protocol MUST NOT occur until the IPX NCP reaches\
    \ the Open state.\n   Options negotiated by the IPXWAN protocol MUST supercede\
    \ any options\n   negotiated by the IPXCP.\n   PPP allows either side of a connection\
    \ to stop forwarding IPX if one\n   end sends an IPXCP or an LCP Terminate-Request.\
    \ When a router detects\n   this, it will immediately reflect the lost connectivity\
    \ in its\n   routing information database instead of naturally aging it out.\n"
- title: 1.2 Operation over X.25 Switched Virtual Circuits
  contents:
  - "1.2 Operation over X.25 Switched Virtual Circuits\n   With X.25, link establishment\
    \ means successfully opening an X.25\n   virtual circuit.  As specified in RFC-1356,\
    \ \"Multiprotocol\n   Interconnect on X.25 and ISDN in the Packet Mode\" [2],\
    \ the protocol\n   identifier 0x800000008137 is used in the X.25 Call User Data\
    \ field of\n   the Call Request frame, and indicates that the virtual circuit\
    \ will\n   be devoted to IPX.\n   Furthermore, each IPX packet is encapsulated\
    \ directly in X.25 data\n   frame sequences without additional framing.\n   Either\
    \ side of the virtual circuit may close it, thereby tearing down\n   the IPX link.\
    \ When a router detects this, it will immediately reflect\n   the lost connectivity\
    \ in its routing information database instead of\n   naturally aging it out.\n"
- title: 1.3 Operation over X.25 Permanent Virtual Circuits
  contents:
  - "1.3 Operation over X.25 Permanent Virtual Circuits\n   The nature of X.25 PVC's\
    \ is that no call request is made.  When the\n   router is informed that X.25\
    \ Layer 2 is up, the router should assume\n   that link establishment is complete.\n\
    \   Each IPX packet is encapsulated in an X.25 data frame sequence\n   without\
    \ additional framing. Novell IPX assumes a particular X.25\n   permanent circuit\
    \ is devoted to the use of IPX.\n   If a router receives a layer 2 error condition\
    \ (e.g., X.25 Restart),\n   it should reflect lost connectivity for the permanent\
    \ circuits in its\n   routing information database and re-perform the necessary\
    \ steps to\n   obtain a full IPX connection.\n"
- title: 1.4 Operation over Frame Relay Permanent Virtual Circuits
  contents:
  - "1.4 Operation over Frame Relay Permanent Virtual Circuits\n   To determine when\
    \ a permanent virtual circuit (PVC) has become active\n   or inactive, the router\
    \ interacts periodically with either a private\n   Frame Relay switch or a public\
    \ Frame Relay network. The method used\n   depends on the switch or service provider.\
    \ Some support [7], section\n   6l others support [3], Annex D. Novell supports\
    \ both methods.\n   When a router is restarted, IPXWAN exchanges over active Frame\
    \ Relay\n   PVCs (that is, PVCs that have remained active before and after\n \
    \  restart) can begin immediately.\n   Each IPX packet is encapsulated in a Frame\
    \ Relay frame sequence as\n   defined in [3] without additional framing.\n   When\
    \ a router detects that a Frame Relay PVC has transitioned from an\n   inactive\
    \ to an active state, link establishment is considered\n   complete and IPXWAN\
    \ exchange over this newly activated link begins.\n   When an active PVC becomes\
    \ inactive, the router reflects the lost\n   connectivity in its routing information\
    \ database.\n"
- title: 1.5 Operation over other WAN media
  contents:
  - "1.5 Operation over other WAN media\n   Additional WAN media will be added here\
    \ as specifications are\n   developed.\n"
- title: 2. Glossary Of Terms
  contents:
  - "2. Glossary Of Terms\n   Primary Network Number:\n      Every IPX WAN router\
    \ has a \"primary network number\". This is an\n      IPX network number unique\
    \ to the entire internet.  This number\n      will be a permanently assigned network\
    \ number for the router.\n      Those readers familiar with NetWare 3.x servers\
    \ should realize\n      that this is the \"Internal\" network number.\n   Router\
    \ Name:\n      Every IPX WAN router must have a \"Router Name\". This is a symbolic\n\
    \      name given to the router. Its purpose is to allow routers to know\n   \
    \   who they are connected to after link establishment - particularly\n      for\
    \ network management purposes.  A symbolic name conveys more\n      information\
    \ to an operator than a set of numbers. The symbolic\n      name should be between\
    \ 1 and 47 characters in length containing\n      the characters 'A' through 'Z',\
    \ underscore (_), hyphen (-) and\n      \"at\" sign (@). The string of characters\
    \ should be followed by a\n      null character (byte of zero) and padded to 48\
    \ characters using\n      the null character.  Those readers familiar with NetWare\
    \ 3.x\n      servers should realize that the file server name is the Router\n\
    \      Name.\n      For workstation (client) connectivity, it is useful if the\
    \ client\n      connection software is configured with a symbolic name reflecting\n\
    \      the name of the client. This allows a router management utility to\n  \
    \    determine which connection connects with which client/router.  If\n     \
    \ no name is configured, it is recommended that a default string\n      such as\
    \ \"DIAL-IN-CLIENT\" is used.\n"
- title: 3. IPX WAN Protocol Description
  contents:
  - "3. IPX WAN Protocol Description\n   After the underlying data link connection\
    \ is established as described\n   in the preceding media dependant description,\
    \ the IPXWAN protocol is\n   activated to exchange identities and determine certain\
    \ operational\n   charactaristics of the link.\n   There are two steps in the\
    \ IPXWAN operation:\n      - Negotiating master/slave role and choice of routing\
    \ protocol.\n        The master/slave roles persist for the IPXWAN exchanges only;\n\
    \      - Information exchange of final router configuration.\n   After these steps\
    \ are concluded, transmission of IPX routing packets\n   begins - using the routing\
    \ protocol negotiated - as well as\n   transmission of IPX data traffic.\n"
- title: 3.1 The Initial Negotiation
  contents:
  - "3.1 The Initial Negotiation\n   The first exchange of packets decides the master/slave\
    \ roles and the\n   routing protocol to be used on the link and gauges the link\
    \ delay for\n   the routing metrics. The initial negotiation is the same for all\n\
    \   protocols.\n        +---------------+                 +---------------+\n\
    \        | Timer Request |                 | Timer Request |\n        +---------------+\
    \                 +---------------+\n                         \\---->\\   /<----/\n\
    \                                \\ /\n                                 x\n  \
    \                              / \\\n                   /\\    /<----/   \\---->\\\
    \    /\\\n                 /    \\                     /    \\\n             \
    \  /        \\                 /        \\\n             / My primary \\     \
    \        / My primary \\\n           / network address\\         / network address\\\
    \n           \\    is larger   /         \\   is smaller   /\n             \\\
    \            /             \\            /\n               \\        /       \
    \          \\        /\n                 \\    /                     \\    /\n\
    \                   \\/                         \\/\n                 MASTER \
    \                     SLAVE\n                                          +----------------+\n\
    \                         <----------------+ Timer Response +\n              \
    \                            +----------------+\n   After link establishment,\
    \ both sides of the link send Timer Request\n   packets and start a timer waiting\
    \ for a Timer Response. These Timer\n   Requests are sent every 20 seconds until\
    \ a response is received or a\n   descision is made that the remote node is not\
    \ responding. This could\n   be after a predefined time (min. 60 seconds) or a\
    \ number of retries\n   (e.g., 16).\n   In composing the Timer Request, the router\
    \ or workstation takes into\n   consideration:\n      - Which types of routing\
    \ protocols it supports;\n      - Whether it is prepared to assign a network address\
    \ to the link;\n      - For workstations, whether they require the ability to\
    \ specify\n        their network/NIC address on a reconnect;\n      - Whether\
    \ it is able to support IPX header compression [6].\n   For each routing protocol\
    \ supported, place an option in the Timer\n   Request packet. The Routing Type\
    \ options should be added in the\n   originator's order of preference with the\
    \ most preferred option\n   first.\n   Some of the newer (or modified) routing\
    \ protocols do not have the\n   requirement to allocate a network number on a\
    \ WAN link. This type of\n   routing protocol has the advantage of potentially\
    \ simpler\n   configuration as no network number pools are necessary for WAN links.\n\
    \   However, these router implementations may still wish to interoperate\n   with\
    \ the older IPXWAN implementations which are able to allocate\n   network numbers\
    \ to the WAN link. In this case, the following method\n   is used to force the\
    \ older implementation to become the link master.\n   It should be noted that\
    \ a router implementation capable of supporting\n   workstation dial-in MUST be\
    \ able to supply AT LEAST ONE network\n   number on which the workstation can\
    \ reside.\n   If the router is prepared to assign an IPX network number to the\n\
    \   link, it sends its primary network number in the Timer Request\n   WNodeID\
    \ field, and omits the Extended Node ID option. On the other\n   hand, if the\
    \ router is NOT prepared to assign an IPX network number\n   to the link, it sets\
    \ the Timer Request WNodeID field to zero, and\n   includes its primary network\
    \ number in an Extended Node ID option.\n   Workstations follow a similar, but\
    \ slightly different set of rules\n   for setting the WNodeID field. If this is\
    \ the first time the work-\n   station is connecting to the router, the workstation\
    \ will set the\n   WNodeID to zero indicating the router should be the link master\
    \ and\n   allocate a network number for the new link. In this case, the work-\n\
    \   station will respond to the router's Timer Request and acknowledge\n   only\
    \ the Workstation Routing Type option. Note that a workstation\n   does NOT include\
    \ an Extended Node ID option in  it's timer request.\n   If the workstation is\
    \ reconnecting a link after an earlier inactivity\n   disconnect, it is necessary\
    \ for the workstation to be able to specify\n   its network, NIC address and \"\
    Router Name\" field (so that file server\n   connections can be maintained after\
    \ the reconnect).  In this case,\n   the workstation will set its WNodeID field\
    \ to FFFFFFFFh forcing\n   itself to be the link master. In this case, the router\
    \ will respond\n   to the workstation's Timer Request with only the Workstation\
    \ Router\n   Type acknowledged.\n   Further packets in the IPXWAN exchange MUST\
    \ use the correct WNodeID\n   (workstations will always use zero).\n   On receiving\
    \ a Timer Request packet, a router determines its role -\n   master or slave -\
    \ for the remainder of the IPXWAN exchanges. The\n   master role does not denote\
    \ special privileges, it merely means that\n   the router is the requestor in\
    \ the ensuing request/response\n   exchanges. The descision is made as follows:\n\
    \      a) If there is an Extended Node ID present (and we understand\n       \
    \  the option), this must be compared to our Primary Network\n         Number.\
    \ If we have the lower Primary Network Number, we\n         MUST respond with\
    \ a Timer Response and become the slave.\n      b) If there is NO Extended Node\
    \ ID, we must compare the WNodeID\n         of the received Timer Request with\
    \ our Primary Network Number\n         and respond if we have a lower number.\n\
    \      Note: The Primary Network Number for a workstation when\n      determining\
    \ master/slave roles depends on whether the\n      workstation requires itself\
    \ to be the master of slave. It\n      should compare the received WNodeID to\
    \ that sent in it's own\n      Timer Request.\n   The numeric comparisons are\
    \ done by considering each byte of the\n   WNodeID or Extended Node ID fields\
    \ as an unsigned integer, and the\n   first byte as most significant.\n   The\
    \ link slave responds to the Timer Request with a Timer Response.\n   To do so,\
    \ each option in the received Timer Request is parsed. If an\n   option is not\
    \ supported (or recognized), that option is rejected by\n   changing the WAccept\
    \ field to \"NO\" for that option.\n   When selecting the router type which will\
    \ be used on the link, the\n   first option in the Timer Request which can be\
    \ supported should be\n   accepted. All other router types should have the WAccept\
    \ field set to\n   \"NO\". A router MUST NOT accept workstation connectivity to\
    \ a node\n   which is another router.\n   Note: It is permitted for a router to\
    \ support a numbered routing\n   type, but not be able to assign the network number.\
    \ In this case,\n   that routing type can be selected only if the other router\
    \ supports\n   it and is able to assign the network number. This can be determined\n\
    \   by the value of the received WNodeID field. If the router is unable\n   to\
    \ assign a network number to the link, it MUST support Unnumbered\n   RIP and\
    \ include this option in the Timer Requests.\n   If a router wishes to provide\
    \ WAN Client access without supporting\n   other WAN routing types, a potential\
    \ problem arises since a router\n   and WAN client would both just be sending\
    \ a single Routing Type\n   option indicating the use of WAN Client. The IPXWAN\
    \ specification\n   does not allow a WAN workstation to connect to another WAN\n\
    \   workstation. The method for detecting this is that the sent and\n   received\
    \ Timer Requests have a single Routing Type defined of WAN\n   Client. To overcome\
    \ this problem, IPXWAN defines that a router MUST\n   NOT send a single Routing\
    \ Type if that type is just WAN Client. The\n   router MUST additionally include\
    \ one (or more) of the defined routing\n   types (like WAN RIP) with the WAccept\
    \ option set to NO. This is so\n   that a workstation may detect that this is\
    \ actually a router sending\n   the Timer Request and not just another workstation\
    \ trying to call a\n   workstation. The extra option will serve to be a counted\
    \ Routing Type\n   that will be ignored. If a workstation detects it is connecting\
    \ to\n   another workstation, it should disconnect the link.\n   Note that a router\
    \ supporting a workstation will need to be able to\n   supply AT LEAST one network\
    \ number for workstations. All dial-in\n   workstations could share the same network,\
    \ and be assigned unique\n   node numbers by the router, or each workstation could\
    \ be assigned a\n   different network number. This is a router specific implementation\n\
    \   detail. Use of a single network for all clients is prefered, however,\n  \
    \ this does involve extra work by the router when dealing with\n   broadcast frames.\
    \ When the router is the link master and allocating\n   NIC addresses on a single\
    \ network,it should ALWAYS use a unique value\n   - by incrementing the NIC address\
    \ for each client connection. This\n   allows a workstation which is reconnecting\
    \ the ability to specify his\n   old network and NIC address. It is unlikely with\
    \ a 6 byte NIC\n   address, that there will be wrap-around in the numbers that\
    \ would\n   cause a problem. Router Node Number allocation should follow a few\n\
    \   simple rules. The six byte NIC address SHOULD have the first byte set\n  \
    \ to 2.\n         Byte # +--1----2----3----4----5----6-+\n                | 02\
    \ | XX | XX | XX | XX | XX |\n                +-----------------------------+\n\
    \   In an IEEE address space, this would represent a non-multicast,\n   locally\
    \ defined address. Node numbers of zero or -1 are not allowed.\n   If a slave\
    \ determines it cannot support any of the supplied routing\n   protocols in the\
    \ received Timer Request, it MUST issue a disconnect\n   on the connection being\
    \ established. The master of the link\n   (determined when a Timer Response packet\
    \ is received) is responsible\n   for defining the network number that is to be\
    \ used as a common\n   network number for the new WAN link, and for calculating\
    \ the RIP\n   transport time that will be advertized to other RIP routers for\
    \ the\n   new link. This is calculated by stopping the timer which was started\n\
    \   when a Timer Request was initiated and applying the algorithm in\n   section\
    \ 4.3.\n"
- title: 3.2 Information Exchange
  contents:
  - "3.2 Information Exchange\n   After exchanging Timer Request packets, the link\
    \ master and slave\n   have been determined, and the Routing Protocol to be used\
    \ on the link\n   is negotiated. The link master is now responsible for sending\
    \ an\n   Information Request packet to the slave specifying the network number\n\
    \   to be used on the new link (zero for unnumbered RIP and On Demand),\n   the\
    \ calculated transport time to be used in the routing metric, the\n   Router Name\
    \ (for management purposes), and for a workstation\n   connection, the NIC address\
    \ the workstation will be adopting. The NIC\n   address option is a separate option\
    \ added in the Information\n   Request/Response for workstation connectivity.\
    \ It is NOT present for\n   router to router connections.\n   If a router receives\
    \ an inappropriate Information Request from a\n   workstation trying to set the\
    \ common network number and NIC address\n   the router MUST overwrite these values\
    \ with preferred values. When\n   the workstation receives the Information Response,\
    \ it MUST note the\n   new values. If the workstation is unable to adjust to the\
    \ new values,\n   it MUST issue a disconnect on the link. If a workstation is\
    \ the link\n   master (i.e., it is reconnecting), the router is additionally\n\
    \   responsible for ensuring the \"Router Name\" field matches that of the\n \
    \  original connection. If the values differ, the call should be\n   disconnected.\n\
    \   If a router detects an error for which no suitable protocol response\n   exists\
    \ (e.g., unable to allocate a network number), the link should\n   be terminated\
    \ according to the relevant media specification.\n   Under certain circumstances,\
    \ particularly on X.25 permanent circuits,\n   it is only possible to detect the\
    \ remote router went away when it\n   comes back up again.  In this case, one\
    \ side of the link receives a\n   Timer Request packet when IPX is in a fully\
    \ connected state.  The\n   side receiving the Timer Request MUST realize that\
    \ a problem\n   occurred, and revert to the IPX link establishment phase.\n  \
    \ Furthermore, the routing information learned from this connection\n   should\
    \ be immediately discarded.\n   When Unnumbered RIP, On-demand or Workstation\
    \ options are negotiated,\n   Information Request packets are repeated every 20\
    \ seconds until a\n   response is received. For the Numbered RIP links, the Information\n\
    \   Request is NOT resent. Instead, the link is disconnected after a\n   suitable\
    \ delay (min. 60 seconds) - this requirement ensures\n   interoperabilty with\
    \ earlier versions of IPXWAN.  When Information\n   Requests are repeated, they\
    \ should continue for a preconfigured time\n   (min. 60 seconds) or a preconfigured\
    \ number of retries (e.g., 16).\n   Each retry uses an incremented sequence number.\n"
- title: 3.3 NAK Packets
  contents:
  - "3.3 NAK Packets\n   The IPXWAN protocol uses a NAK packet to indicate the received\
    \ IPXWAN\n   packet was not acceptable. A NAK packet is an exact copy of the\n\
    \   received packet with the WPacketType field set to NAK. There are two\n   anticipated\
    \ uses of this packet.\n      - The received WPacketType is invalid or not recognized;\n\
    \      - A badly formed IPXWAN packet is received.\n   Returning a NAK packet\
    \ allows the sender a chance to work out what\n   was wrong. If the sender was\
    \ unable to determine the problem, the\n   call can then be disconnected.\n  \
    \ The value of the NAK WPacketType is FFh.\n"
- title: 4. Information Exchange Packet Formats
  contents:
  - "4. Information Exchange Packet Formats\n   All IPX WAN protocol exchanges utilize\
    \ the standard Novell IPX packet\n   format. The packets use the IPX defined packet\
    \ type 04 defining a\n   Packet Exchange Packet. The socket number 0x9004 is a\
    \ Novell reserved\n   socket number for exclusive use with IPX WAN protocol exchange.\
    \ IPX\n   defines that a network number of zero (0) is interpreted as being a\n\
    \   local network of unknown number that requires no routing. This\n   feature\
    \ is of use to us in transferring these packets before the\n   common network\
    \ number is exchanged. Some routers need to know a \"Node\n   Number\" (or MAC\
    \ address) for each node on a link. Node numbers will\n   be formed from the \"\
    WNode ID\" field.  The node number will be the 4\n   bytes of WNode ID followed\
    \ by 2 bytes of zero. For a workstation, the\n   node number will be explicitly\
    \ assigned by the router and notified to\n   the workstation in the Information\
    \ Request packet.\n   Router Type number assignment. Other vendors IPX routing\
    \ protocols\n   can make use of the IPXWAN protocol definition by obtaining Router\n\
    \   Types from Novell. This document will then include the new Router\n   Types\
    \ (with the references to vendor protocol description documents).\n   Current\
    \ Routing Types are:\n      00      Numbered RIP/SAP\n      01      NLSP (no RIP/SAP\
    \ - defined in [8])\n      02      Unnumbered RIP/SAP\n      03      On Demand,\
    \ static routing (no RIP/SAP or NLSP)\n      04      Workstation (no RIP/SAP)\n\
    \      05-FF   Currently undefined\n   WOption Number assignment. These numbers\
    \ only need to be assigned\n   from Novell for the \"Timer Request\" and \"Timer\
    \ Response\" packets.\n   Packet Types also need to be assigned by Novell. However,\
    \ the options\n   within these packets are dependant on the \"Router Type\" negotiated.\n\
    \   WOption numbers in these packets are then defined by the vendor\n   defining\
    \ the Routing Type. The same packet format should still be\n   maintained.\n \
    \  Router Type 01 will not be described in this document since it\n   involves\
    \ knowledge of the NLSP protocol to implement. Please refer to\n   [8] for a complete\
    \ specification of these NLSP IPXWAN exchanges and\n   the NLSP protocol.\n"
- title: 4.1 Timer Request Packet
  contents:
  - "4.1 Timer Request Packet\n    +---------------------------------------------------------------+\n\
    \    | Checksum         | FF FF             | Always FFFF            |\n    |\
    \ Packet Length    | 02 40             | Max IPX size (576 bytes|\n    |     \
    \             |                   | Hi Lo order)           |\n    | Trans Control\
    \    | 00                | Hops traversed         |\n    | Packet Type      |\
    \ 04                | Packet Exchange Packet |\n    | Dest Net #       | 00 00\
    \ 00 00       | Local Network          |\n    | Dest Node #      | FF FF FF FF\
    \ FF FF | Broadcast              |\n    | Dest Socket #    | 90 04           \
    \  | Reserved WAN socket    |\n    | Source Net #     | 00 00 00 00       | Local\
    \ Network          |\n    | Source Node #    | 00 00 00 00 00 00 | Set to zero\
    \            |\n    | Source Socket #  | 90 04             | Reserved WAN socket\
    \    |\n    |------------------+-------------------+------------------------|\n\
    \    | WIdentifier      | 57 41 53 4D       | Confidence identifier  |\n    |\
    \ WPacket Type     | 00                | Timer Request          |\n    | WNode\
    \ ID         | xx xx xx xx       | Primary Net # of       |\n    |           \
    \       |                   | sending router         |\n    |                \
    \  |                   | (Hi Lo order)          |\n    | WSequence #      | xx\
    \                | Sequence start at 0    |\n    | WNum Options     | xx     \
    \           | Number of options      |\n    |------------------+-------------------+------------------------|\n\
    \    | WOption Number   | xx                | Option Identifier      |\n    |\
    \ WAccept Option   | xx                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | xx xx             | Number of following    |\n    |             \
    \     |                   | option bytes (Hi Lo)   |\n    | WOption Data     |\
    \ nn                | Option specific data   |\n    +---------------------------------------------------------------+\n"
- title: 'Routing Type Option:'
  contents:
  - "Routing Type Option:\n    One or more of the following router type options should\
    \ be included\n    in a Timer Request packet. A router should ALWAYS include Routing\n\
    \    Type zero (0) if full interoperability is required with an older\n    implementation.\
    \ The router types MUST be included in the senders\n    order of preference. If\
    \ a router receives a Timer Response with more\n    than one Router Type having\
    \ WAccept set to Yes, the link MUST be\n    disconnected.\n    +---------------------------------------------------------------+\n\
    \    | WOption Number   | 00                | Define Routing Type    |\n    |\
    \ WAccept Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | 00 01             | Option length (Hi Lo)  |\n    | WOption Data\
    \     | 00                | IPX RIP/SAP Routing    |\n    +---------------------------------------------------------------+\n\
    \    +---------------------------------------------------------------+\n    |\
    \ WOption Number   | 00                | Define Routing Type    |\n    | WAccept\
    \ Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption Data\
    \ Len | 00 01             | Option length (Hi Lo)  |\n    | WOption Data     |\
    \ 01                | NLSP                   |\n    +---------------------------------------------------------------+\n\
    \    +---------------------------------------------------------------+\n    |\
    \ WOption Number   | 00                | Define Routing Type    |\n    | WAccept\
    \ Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption Data\
    \ Len | 00 01             | Option length (Hi Lo)  |\n    | WOption Data     |\
    \ 02                | Unnumbered RIP/SAP     |\n    +---------------------------------------------------------------+\n\
    \    +---------------------------------------------------------------+\n    |\
    \ WOption Number   | 00                | Define Routing Type    |\n    | WAccept\
    \ Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption Data\
    \ Len | 00 01             | Option length (Hi Lo)  |\n    | WOption Data     |\
    \ 03                | On-demand, static Rting|\n    +---------------------------------------------------------------+\n\
    \    +---------------------------------------------------------------+\n    |\
    \ WOption Number   | 00                | Define Routing Type    |\n    | WAccept\
    \ Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption Data\
    \ Len | 00 01             | Option length (Hi Lo)  |\n    | WOption Data     |\
    \ 04                | Client - No RIP/SAP    |\n    |                  |     \
    \              | except on request      |\n    +---------------------------------------------------------------+\n"
- title: 'Extended Node ID Option:'
  contents:
  - "Extended Node ID Option:\n    The extended node ID should only be included if\
    \ the WNodeID field is\n    set to zero AND the node constructing the packet is\
    \ a router. Note\n    that an older version of IPXWAN will just reject this option\
    \ and\n    automatically become the link master as the WNodeID is zero.\n    +---------------------------------------------------------------+\n\
    \    | WOption Number   | 04                | Extended Node ID       |\n    |\
    \ WAccept Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | 00 04             | Pad data length (Hi Lo)|\n    | WOption Data\
    \     | xx xx xx xx       | Real primary network # |\n    |                  |\
    \                   | of this router (Hi-Lo) |\n    +---------------------------------------------------------------+\n"
- title: 'Header Compression Option:'
  contents:
  - "Header Compression Option:\n    Although more than one header compression option\
    \ may be specified in\n    a Timer Request packet, it is important that a MAXIMUM\
    \ of ONE header\n    compression option is accepted. If an implementation receives\
    \ a\n    Timer Response with more than one header compression option with the\n\
    \    accept option set to Yes, the link MUST be disconnected. [Ref 6]\n    defines\
    \ the full Telebit Header Compression method.\n    +---------------------------------------------------------------+\n\
    \    | WOption Number   | 80                | Header Compression     |\n    |\
    \ WAccept Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | 00 03             | Variable - at least 1  |\n    | WOption Data\
    \     | 00                | 0 = Telebit Hdr Compr. |\n    |                  |\
    \ xx                | Compression Options    |\n    |                  | xx  \
    \              | Compression Slots      |\n    +---------------------------------------------------------------+\n"
- title: 'PAD Option:'
  contents:
  - "PAD Option:\n    The PAD option is used to fill the Timer Request up to the 576\
    \ byte\n    limit. This field will be of variable length depending on the number\n\
    \    of other options in the packet. This option will normally be the\n    last\
    \ entry in the packet.  Its sole purpose is to fill the IPX\n    packet to be\
    \ 576 bytes.  The pad option data should be filled with a\n    selection of totally\
    \ random numbers to avoid compression modems or\n    PPP data compression from\
    \ destroying the link delay calculation.\n    Note that this is different from\
    \ the original RFC 1362\n    specification. This should not affect implementations.\n\
    \    Implementations should not attempt to verify the contents of a PAD\n    option.\n\
    \    +---------------------------------------------------------------+\n    |\
    \ WOption Number   | FF                | Pad option             |\n    | WAccept\
    \ Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption Data\
    \ Len | xx xx             | Pad data length (Hi Lo)|\n    |                  |\
    \                   | (enough to fill packet)|\n    | WOption Data     | Random\
    \ numbers    |                        |\n    +---------------------------------------------------------------+\n\
    \    Note:\n            Timer Request packets will always be 576 bytes. However,\n\
    \            there should be no assumption made about the number of\n        \
    \    options specified in this packet.\n   After link establishment, Timer Request\
    \ packets are sent by both\n   sides of the link. Each end starts their sequence\
    \ number at zero.\n   Subsequent retries (every 20 seconds) will increment the\
    \ value of\n   this sequence number.  Only a Timer Response packet with a sequence\n\
    \   number matching the last sent sequence number will be acted upon.\n   As mentioned\
    \ earlier, the WNodeID field may be set to zero for a\n   router if it is unable\
    \ to provide a network number for the link.  If\n   a router ONLY supports the\
    \ Numbered RIP/SAP option, it MUST be\n   capable of proving a network number\
    \ for a WAN link.\n   Packets received on the reserved socket number not having\
    \ the\n   WIdentifier set to the hexadecimal values noted above should be\n  \
    \ discarded.\n"
- title: 4.2 Timer Response Packet
  contents:
  - "4.2 Timer Response Packet\n    +---------------------------------------------------------------+\n\
    \    | Checksum         | FF FF             | Always FFFF            |\n    |\
    \ Packet Length    | 02 40             | Max IPX size (576 bytes|\n    |     \
    \             |                   | Hi Lo order)           |\n    | Trans Control\
    \    | 00                | Hops traversed         |\n    | Packet Type      |\
    \ 04                | Packet Exchange Packet |\n    | Dest Net #       | 00 00\
    \ 00 00       | Local Network          |\n    | Dest Node #      | FF FF FF FF\
    \ FF FF | Broadcast              |\n    | Dest Socket #    | 90 04           \
    \  | Reserved WAN socket    |\n    | Source Net #     | 00 00 00 00       | Local\
    \ Network          |\n    | Source Node #    | 00 00 00 00 00 00 | Set to zero\
    \            |\n    | Source Socket #  | 90 04             | Reserved WAN socket\
    \    |\n    |------------------+-------------------+------------------------|\n\
    \    | WIdentifier      | 57 41 53 4D       | Confidence identifier  |\n    |\
    \ WPacket Type     | 01                | Timer Response         |\n    | WNode\
    \ ID         | xx xx xx xx       | Primary Net # of       |\n    |           \
    \       |                   | sending router         |\n    |                \
    \  |                   | (Hi Lo order)          |\n    | WSequence #      | xx\
    \                | Same as Timer Request  |\n    |                  |        \
    \           | received               |\n    | WNum Options     | xx          \
    \      | Number of options      |\n    |------------------+-------------------+------------------------|\n\
    \    | WOption Number   | xx                | Option Identifier      |\n    |\
    \ WAccept Option   | xx                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | xx xx             | Number of following    |\n    |             \
    \     |                   | option bytes (Hi Lo)   |\n    | WOption Data     |\
    \ nn                | Option specific data   |\n    +---------------------------------------------------------------+\n\
    \   The options contained within this packet are as described in section\n   4.1\
    \ Any unknown options or not supported options within the Timer\n   Request MUST\
    \ have the WAccept Option set to NO in the Timer Response.\n   If the Timer Request\
    \ packet contained more than one Router Type\n   option and the \"Slave\" supports\
    \ all the options, the \"Slave\" MUST set\n   the WAccept Option to YES on the\
    \ FIRST Router Type supported and NO\n   to ALL other Router Types. This is the\
    \ Router Type which is to be\n   adopted by both ends of the link. Information\
    \ exchanges will then\n   proceed by the link master based on the accepted Router\
    \ Type.\n   This packet must contain the same sequence number as the received\n\
    \   Timer Request. This packet should ONLY be sent by the router or\n   workstation\
    \ determining themselves to be the \"Slave\" of the link.\n   (Workstations are\
    \ ALWAYS the link slave).\n   Routers MUST set the WNodeID to their correct value\
    \ when responding\n   with the Timer Response. A value of zero must NOT be used.\n"
- title: 4.3 Information Request Packet
  contents:
  - "4.3 Information Request Packet\n    +---------------------------------------------------------------+\n\
    \    | Checksum         | FF FF             | Always FFFF            |\n    |\
    \ Packet Length    | 00 63             | Size of header+data    |\n    |     \
    \             |                   | (Hi Lo order)          |\n    | Trans Control\
    \    | 00                | Hops traversed         |\n    | Packet Type      |\
    \ 04                | Packet Exchange Packet |\n    | Dest Net #       | 00 00\
    \ 00 00       | Local Network          |\n    | Dest Node #      | FF FF FF FF\
    \ FF FF | Broadcast              |\n    | Dest Socket #    | 90 04           \
    \  | Reserved WAN socket    |\n    | Source Net #     | 00 00 00 00       | Local\
    \ Network          |\n    | Source Node #    | 00 00 00 00 00 00 | Set to zero\
    \            |\n    | Source Socket #  | 90 04             | Reserved WAN socket\
    \    |\n    |------------------+-------------------+------------------------|\n\
    \    | WIdentifier      | 57 41 53 4D       | Confidence identifier  |\n    |\
    \ WPacket Type     | 02                | Information Request    |\n    | WNode\
    \ ID         | xx xx xx xx       | Primary Net # of       |\n    |           \
    \       |                   | sending router         |\n    |                \
    \  |                   | (Hi Lo order)          |\n    | WSequence #      | 00\
    \                | Sequence start at 0    |\n    | WNum Options     | 01     \
    \           | 1 Option to follow     |\n    | WOption Number   | 01          \
    \      | Define IPX RIP/SAP     |\n    |                  |                  \
    \ | info exchange          |\n    | WAccept Option   | 01                | 0=No,1=Yes,3=Not\
    \ Applic|\n    | WOption Data Len | 00 36             | Option length (Hi Lo)\
    \  |\n    | WOption Data     |                   |                        |\n\
    \    |  Link Delay      | xx xx             | Hi Lo link delay in    |\n    |\
    \                  |                   | milli seconds (see     |\n    |     \
    \             |                   | below for calculation) |\n    |  Common Net\
    \ #    | xx xx xx xx       | Hi Lo Common Network # |\n    |  Router Name    \
    \ | xx (x 48 decimal) | Router name - as defned|\n    |                  |   \
    \                | in section 2.          |\n    +---------------------------------------------------------------+\n\
    \   Routers MUST set the WNodeID to their correct value when sending an\n   Information\
    \ Request. A value of zero must NOT be used.\n   A workstation should replace\
    \ the Router Name with the configured\n   name, or a constant descriptor string\
    \ as described in section 2.\n   For a Workstation Information Request, an extra\
    \ option is added which\n   specifies the NIC address for the workstation. In\
    \ this case, the\n   number of options will be set to two (2).\n    +---------------------------------------------------------------+\n\
    \    | WOption Number   | 05                | Define NIC Address     |\n    |\
    \ WAccept Option   | 01                | 0=No,1=Yes,3=Not Applic|\n    | WOption\
    \ Data Len | 00 06             | Option length (Hi Lo)  |\n    | WOption Data\
    \     | 02 xx xx xx xx xx | NIC Address for W/S    |\n    +---------------------------------------------------------------+\n\
    \   Routers or workstations should not refuse to use a NIC address having\n  \
    \ a first byte with a value other than 02.\n   Calculation of link delay is performed\
    \ as follows:\n    // Start_time is a time stamp when Timer Request sent out\n\
    \    // End_time is a time stamp when a Timer Response is\n    // received.\n\
    \    link_delay = end_time - start_time; // 1/18th second\n    if (link_delay\
    \ < 1)\n    {\n        link_delay = 1;\n    }/*IF*/\n    // We are on a slow net,\
    \ so add some biasing to help stop\n    // multiple workstation sessions timing\
    \ out on the link\n    link_delay *= 6;   /* Add the biasing  for multiple sessions\
    \ */\n    link_delay *= 55;  /* Convert link delay to milliseconds */\n    If\
    \ a higher resolution timer is available, better results may be\n    obtained\
    \ using the following algorithm:\n    conversion_factor = number of timer units\
    \ in 1/18th second;\n    link_delay = ((end_time - start_time) * 6) / conversion_factor;\n\
    \    if (link_delay == 0)\n    {\n        link_delay = 1;\n    }/*IF*/\n    link_delay\
    \ *= 55; /* Convert link delay to milliseconds */\n   The \"Link Delay\" is used\
    \ as the network transport time when\n   advertized in the IPX RIP packet tuple\
    \ for the network entry \"Common\n   Net #\". For a consistent network, a common\
    \ link delay is required at\n   both ends of the link and is calculated by the\
    \ link \"Master\". Link\n   Delay is specified in milli seconds.\n   The Common\
    \ Net # is supplied by the link \"Master\". This number must\n   be unique in\
    \ the connected internetwork. Each WAN call requires a\n   separate number. If\
    \ the negotiated Router Type was Unnumbered RIP,\n   On-demand, or NLSP, the specified\
    \ Common Net # will be zero.\n   This packet should contain a sequence number\
    \ starting at zero. This\n   packet should ONLY be sent by the router or workstation\
    \ determining\n   themselves to be the \"Slave\" of the link.\n   If extra options\
    \ are included in this packet, they should be silently\n   discarded.If the information\
    \ option is missing, the link MUST be\n   disconnected.\n"
- title: 4.4 Information Response Packet
  contents:
  - "4.4 Information Response Packet\n    +---------------------------------------------------------------+\n\
    \    | Checksum         | FF FF             | Always FFFF            |\n    |\
    \ Packet Length    | 00 63             | Size of header+data    |\n    |     \
    \             |                   | (Hi Lo Order)          |\n    | Trans Control\
    \    | 00                | Hops traversed         |\n    | Packet Type      |\
    \ 04                | Packet Exchange Packet |\n    | Dest Net #       | 00 00\
    \ 00 00       | Local Network          |\n    | Dest Node #      | FF FF FF FF\
    \ FF FF | Broadcast              |\n    | Dest Socket #    | 90 04           \
    \  | Reserved WAN socket    |\n    | Source Net #     | 00 00 00 00       | Local\
    \ Network          |\n    | Source Node #    | 00 00 00 00 00 00 | Set to zero\
    \            |\n    | Source Socket #  | 90 04             | Reserved WAN socket\
    \    |\n    |------------------+-------------------+------------------------|\n\
    \    | WIdentifier      | 57 41 53 4D       | Confidence identifier  |\n    |\
    \ WPacket Type     | 03                | Information Response   |\n    | WNode\
    \ ID         | xx xx xx xx       | Primary Net # of       |\n    |           \
    \       |                   | sending router         |\n    |                \
    \  |                   | (Hi Lo order)          |\n    | WSequence #      | 00\
    \                | Same as Info Request   |\n    | WNum Options     | 01     \
    \           | 1 Option to follow     |\n    | WOption Number   | 01          \
    \      | Define IPX RIP/SAP     |\n    |                  |                  \
    \ | info exchange          |\n    | WAccept Option   | 01                | 0=No,1=Yes,3=Not\
    \ Applic|\n    | WOption Data Len | 00 36             | Option length (Hi Lo)\
    \  |\n    | WOption Data     |                   |                        |\n\
    \    |  Link Delay      | xx xx             | Hi Lo link delay (as   |\n    |\
    \                  |                   | received in Info Requ) |\n    |  Common\
    \ Net #    | xx xx xx xx       | Hi Lo Common Network # |\n    |             \
    \     |                   | (as received in Info   |\n    |                  |\
    \                   | request)               |\n    |  Router Name     | xx (x\
    \ 48 decimal) | Router name - as defned|\n    |                  |           \
    \        | in section 2.          |\n    +---------------------------------------------------------------+\n\
    \   The responses contained within this packet are as described in\n   section\
    \ 4.3.\n   A link slave will additionally respond with the received  NIC address\n\
    \   option as a confirmation of receipt. A workstation should replace the\n  \
    \ Router Name with the configured name, or a constant descriptor string\n   as\
    \ described in section 2. If the Information Request contained an\n   inappropriate\
    \ Common Net # or NIC address, the Information Response\n   may set new values.\
    \ The receiver of the Information Response is\n   responsible for checking on\
    \ the value and terminating the connection\n   if the new values cannot be used.\n\
    \   Routers MUST set the WNodeID to their correct value when sending an\n   Information\
    \ Response. A value of zero must NOT be used.\n"
- title: 5. Running Unnumbered RIP
  contents:
  - "5. Running Unnumbered RIP\n   Unnumbered RIP refers to the case where two WAN\
    \ routers are\n   communicating using the RIP protocol across a link with NO physical\n\
    \   IPX network address. The premise for this ability is that there is no\n  \
    \ need to address a packet to anything on that WAN link. RIP and SAP\n   run in\
    \ exactly the same way as before, except the source and\n   destination network\
    \ numbers should be set to zero.\n   The advantage to running unnumbered RIP links\
    \ is that it is not\n   necessary to allocate/configure a pool of usable IPX network\
    \ numbers\n   which can be used on the WAN links. The other advantage is that\
    \ when\n   there is a large number of WAN links, it is not necessary to flood\n\
    \   the network with an unnecessary set of extra RIP information.\n"
- title: 6. Workstation Connectivity
  contents:
  - "6. Workstation Connectivity\n   Workstations MUST reside on a network and have\
    \ a unique NIC address\n   on that network to be individually addressable. However,\
    \ workstations\n   do not need to periodically receive RIP and SAP broadcasts\
    \ as they\n   play no part in the routing process. This allows routers to reduce\n\
    \   background traffic on the workstation link by not sending any\n   periodic\
    \ RIP and SAP data. Note that it will not cause a problem if\n   the RIP and SAP\
    \ is sent. It will just slow down the workstation\n   access times.\n   RIP and\
    \ SAP information should ONLY be sent if the workstation makes\n   a specific\
    \ request for information - like a service or route request.\n   It should also\
    \ be noted that if multiple workstations are attached to\n   a single WAN workstation\
    \ network (per router), broadcasts on that\n   network - whether originated from\
    \ a workstation or the router - MUST\n   reach ALL other workstations. This will\
    \ involve the router\n   duplicating the packet to all WAN workstation connections.\n"
- title: 7. On-demand, Statically Routed Links
  contents:
  - "7. On-demand, Statically Routed Links\n   On-demand, Static Routing serves two\
    \ purposes. The \"on-demand\" part\n   means that a router initiates communication\
    \ to a destination only\n   when there is data to be forwarded to that destination.\
    \ \"Inititating\n   comunication\" includes making a datalink call (where necessary)\
    \ and\n   performing the IPXWAN exchange. A transient connection is closed\n \
    \  after a period of inactivity.\n   The \"static routing\" part means that no\
    \ routing information is sent\n   over the link - no RIP, no SAP, and no NLSP.\
    \ Instead, the router at\n   each end is configured with the routes and services\
    \ accessible\n   through the link.\n   With on-demand, static routing, the called\
    \ router must be able to\n   identify the calling router so that statically configured\
    \ routes and\n   services can be attached to that connection. For example, with\
    \ X.25\n   switched virtual circuits, the calling DTE address can be used; with\n\
    \   PPP, the PPP authentication can be used; after IPXWAN has completed,\n   the\
    \ \"Router Name\" can be used; with a persistent datalink connection,\n   the\
    \ physical port identifier or a permanent virtual circuit\n   identifier can be\
    \ used. The choice of identifier is an implementation\n   decision. Whatever value\
    \ the called router uses is called a Remote\n   System Identifier, or RSI. For\
    \ PPP links, Novell uses PPP PAP or CHAP\n   authentication to determine the caller.\n\
    \   A router implementing on-demand, static routing must maintain a\n   database\
    \ of RSIs, and lists describing the network numbers and\n   services reachable\
    \ through each RSI. These lists determine the\n   reachability information it\
    \ transmits to other routers in a routing\n   area. Other routers treat each on-demand,\
    \ static routing link as\n   though it were permanently available.\n   The on-demand\
    \ exchange has a slight variation on the IPXWAN protocol.\n   The differences\
    \ are as follows.\n   In the Timer Request, the calling router offers only the\
    \ \"On-demand,\n   static routing\" Routing Type. If the called router is capable\
    \ of On-\n   demand static routing, it offers \"On-demand, static routing\" in\
    \ the\n   Timer Request, along with any additional routing types it is willing\n\
    \   to support on the link. The Master/Slave election and choice of\n   routing\
    \ type proceeds as described previously. If the Slave detects a\n   mismatch in\
    \ routing types, it disconnects the link.\n   For a persistent datalink (like\
    \ X.25 PVCs), there may be no\n   descerable \"link establishemnt\" event. For\
    \ such media, arrival of a\n   Timer Request plays the role of detecting link\
    \ establishment.\n   As with Unnumbered RIP, there is no network number assigned\
    \ to the\n   link. NLSP Packets are not sent on the link. Moreover, periodic RIP\n\
    \   and SAP packets are not sent on the link. However, a router must\n   respond\
    \ to RIP and SAP queries received on the link.\n"
- title: 8. References
  contents:
  - "8. References\n   [1] Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\
    \ for the\n       Transmission of Multi-protocol Datagrams over Point-to-Point\n\
    \       Links\", RFC 1548, Daydreamer, December 1993.\n   [2] Malis, A., Robinson,\
    \ D., and R. Ullman, \"Multiprotocol\n       Interconnect on X.25 and ISDN in\
    \ the Packet Mode\", RFC 1356,\n       August 1992.\n   [3] Bradley, T., Brown,\
    \ C., and A. Malis, \"Multiprotocol\n       Interconnect over Frame Relay\", RFC\
    \ 1490, Wellfleet\n       Communications, Inc., Ascom Timeplex, Inc., July 1993.\n\
    \   [4] Simpson, W., \"The PPP Internetwork Packet Exchange Control\n       Protocol\
    \ (IPXCP)\", RFC 1552, Daydreamer, December 1993.\n   [5] Novell IPX Router Specification.\n\
    \       Novell Part Number 107-000029-001. This document may be\n       retrieved\
    \ via Anonymous FTP to SJF-LWP (130.57.11.140) under\n       /sys/ftpguest/nw_shell/ipxdocs/ipxrout.zip.\n\
    \   [6] Mathur, S., and M. Lewis, M., \"Compressing IPX Headers\n       Over WAN\
    \ Media (CIPX)\", RFC 1553, Telebit Corporation,\n       December 1993.\n   [7]\
    \ ANSI, \"Integrated Services Digital Network (ISDN) - Digital\n       Subscriber\
    \ Signalling System Number 1 (DSS1) - Signalling\n       Specification for Frame\
    \ Relay\", ANSI T1.617-1991, June 1991\n   [8] Novell NetWare Link Services Protocol\
    \ (NLSP) Specification.\n       Novell part number 100-001708-002. Information\
    \ on this document\n       may be obtained by sending e-mail to dsink@novell.com.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 10. Author's Address
  contents:
  - "10. Author's Address\n      Michael Allen\n      Novell, Inc.\n      2180 Fortune\
    \ Drive\n      San Jose, CA 95131\n      EMail: mallen@novell.com\n   The working\
    \ group can be contacted via the current chair:\n      Fred Baker\n      Advanced\
    \ Computer Communications\n      315 Bollay Drive\n      Santa Barbara, California,\
    \ 93111\n      EMail: fbaker@acc.com\n"
