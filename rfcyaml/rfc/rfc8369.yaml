- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                         H. Kaplan
  contents:
  - "Independent Submission                                         H. Kaplan\n  \
    \           Internationalizing IPv6 Using 128-Bit Unicode\n"
- title: Abstract
  contents:
  - "Abstract\n   It is clear that Unicode will eventually exhaust its supply of code\n\
    \   points, and more will be needed.  Assuming ISO and the Unicode\n   Consortium\
    \ follow the practices of the IETF, the next Unicode code\n   point size will\
    \ be 128 bits.  This document describes how this future\n   128-bit Unicode can\
    \ be leveraged to improve IPv6 adoption and finally\n   bring internationalization\
    \ support to IPv6.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8369.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Definitions . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   2.  The Need for 128-Bit Code Points  . . . . . . . . . . . .\
    \ . .   4\n   3.  Unicode IPv6 Addresses  . . . . . . . . . . . . . . . . . .\
    \ .   6\n     3.1.  Reserved Addresses  . . . . . . . . . . . . . . . . . . .\
    \   6\n     3.2.  Multicast . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 7\n     3.3.  IPv6 Routing  . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \   4.  Using Unicode IPv6 Addresses  . . . . . . . . . . . . . . . .   8\n  \
    \   4.1.  Uniform Resource Identifiers  . . . . . . . . . . . . . .   8\n    \
    \ 4.2.  Address Allocation and Resolution . . . . . . . . . . . .   8\n   5. \
    \ Summary . . . . . . . . . . . . . . . . . . . . . . . . . . .   9\n   6.  IANA\
    \ Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   7.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   9\n   8.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     8.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  10\n     8.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  10\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  11\n   Author's Address  . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Unicode [Unicode] is currently limited to 1,114,112 code\
    \ points,\n   encoded in various encoding formats (e.g., UTF-8, UTF-16, UTF-32).\n\
    \   At the time of this document's publication, 136,755 code points have\n   been\
    \ allocated, with more already in the approval process.  Every\n   year, more\
    \ writing scripts, symbols, and emojis are added, while none\n   are removed.\
    \  After consulting expert mathematicians, we have\n   determined that the world\
    \ will run out of code points someday in the\n   future.\n   While it might appear\
    \ that the current rate of code point allocation\n   gives us plenty of time to\
    \ deal with the exhaustion problem, the\n   Internet's history has shown that\
    \ popular number spaces do not fill\n   up linearly, but rather exponentially.\
    \  And once the size of a\n   particular number space becomes entrenched, it takes\
    \ decades to\n   migrate to a larger one.  Therefore, the code point number space\
    \ must\n   be increased as soon as possible.\n   The details for expanding the\
    \ Unicode code point space are not\n   covered in this document.  Such details\
    \ need to be worked out between\n   the IETF, ISO, the Unicode Consortium, and\
    \ various gods.  We assume,\n   however, that the code point space will need to\
    \ grow dramatically,\n   and there will continue to be a need for a fixed-length\
    \ encoding\n   scheme similar to UTF-32.  Naturally, the next size increment should\n\
    \   go from UTF-32 to UTF-128, and thus the rest of this document follows\n  \
    \ this assumption.\n   This new 128-bit Unicode code point space can be leveraged\
    \ by the\n   IETF to address one of the lingering issues with IPv6: there's not\n\
    \   much left to standardize.  With the changes described in this\n   document,\
    \ the IETF will be kept busy for decades to come.  It also\n   enables new features\
    \ and market opportunities, to help the global\n   economy.  This in turn will\
    \ increase tax revenues for governments,\n   which eventually may lead to increased\
    \ funds for combating global\n   warming.  Therefore, the ultimate goal of this\
    \ document is to reduce\n   global warming.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.  All other words SHOULD be interpreted as\n\
    \   described by the Oxford English Dictionary OED [OED], which MAY be\n   considered\
    \ almost as authoritative for word definitions as the IETF.\n"
- title: 1.2.  Definitions
  contents:
  - "1.2.  Definitions\n   UTF-128:  A fixed-length encoding for 128-bit Unicode.\
    \  It is\n         implemented as an array of bytes in the same manner as legacy\n\
    \         IPv6 addresses to avoid endianness issues.\n   Short-Name Tag:  A short\
    \ descriptive name for a Unicode character\n         code point, surrounded by\
    \ colons (:).  For example \":garfield:\"\n         represents the Unicode code\
    \ point for the Garfield cat imoji.\n   Emoji:  Pictographic symbol encoded in\
    \ Unicode, used to express a\n         general item, concept, or emotion.\n  \
    \ Imoji:  Pictographic symbol encoded in Unicode, used to represent an\n     \
    \    individual, specific thing: a specific human, a favorite pet, a\n       \
    \  famous animal, etc.\n   Amoji:  Pictographic symbol encoded in Unicode, used\
    \ to represent an\n         individual of an alien species.\n   Umoji:  Pictographic\
    \ symbol encoded in Unicode, used to represent\n         unknown things not covered\
    \ by the other mojis.\n   Omoji:  Pictographic symbol encoded in Unicode, used\
    \ to represent\n         obfuscated identities, used as addresses for the purpose\
    \ of\n         privacy.\n"
- title: 2.  The Need for 128-Bit Code Points
  contents:
  - "2.  The Need for 128-Bit Code Points\n   The exponentially increasing demand\
    \ for Unicode character code points\n   might not be obvious at first glance.\
    \  While it is true that the\n   number of languages and their writing scripts\
    \ do not grow quickly\n   over time, one type of \"character\" will: emojis. \
    \ Unicode has barely\n   begun providing code points for all of the various emojis\
    \ currently\n   in use, and it is likely that more emojis will be created in the\n\
    \   future.  For example, there are still missing emoji symbols for most\n   types\
    \ of food and drink, the flags of each town and city on Earth,\n   all human sporting\
    \ and leisure activities including all local and\n   national sports teams and\
    \ players, and every plant and animal species\n   and gender.\n   Furthermore,\
    \ it has become common for some applications to allow\n   their users to create\
    \ custom emojis, whereby the user can provide the\n   graphic to display for a\
    \ new \"character\".  For example, a user might\n   set their chat application\
    \ to display a graphic of Carlos Ramirez's\n   popular \"Trollface\" meme [TROLL],\
    \ using the short-name tag\n   ':trollface:' in their chat application.  All other\
    \ users of the same\n   chat app will be able to see and use the same custom trollface\
    \ emoji.\n   However, since there is no Unicode code point for :trollface:, the\n\
    \   chat app cannot export the trollface emoji to other chat apps or\n   protocols,\
    \ such as Internet Relay Chat (IRC) or the Extensible\n   Messaging and Presence\
    \ Protocol (XMPP).  This represents a clear\n   interoperability issue.\n   In\
    \ the future, it might also become desirable to assign each human a\n   Unicode\
    \ code point to represent them, similar to names, with the\n   glyph being a picture\
    \ of their face or a custom graphic.  These\n   personal code points are not truly\
    \ \"emojis\" in the classical sense of\n   being generic concepts, so we've decided\
    \ to give them a new name to\n   avoid confusion: imoji.  Unlike human names,\
    \ code points for imojis\n   will be unique per human, for all space and time.\
    \  Favorite pets and\n   famous animals can also be assigned imojis.\n   Lastly,\
    \ if we ever encounter sentient species from other planets,\n   they too will\
    \ need Unicode code points for their writing scripts and\n   emojis; and they\
    \ will each need unique amojis (imojis for aliens),\n   for whatever form their\
    \ individual identity might take.  Section 4 of\n   RFC 8136 [RFC8136] clearly\
    \ supports such a scenario, with the new UFO\n   IPv6 option.\n   Based on the\
    \ above obvious use cases, it is clear that the current ~1\n   million code points\
    \ are nowhere near enough.  Increasing to 64 bits\n   might be sufficient for\
    \ now, but since this will be a painful\n   transition process no matter the size,\
    \ we believe jumping to 128 bits\n   is the appropriate choice.\n   Note: The\
    \ current limit of ~1 million code points is a formal limit\n   due to what UTF-16\
    \ can encode today.  Increasing the limit will\n   either require deprecating\
    \ UTF-16 or paying a hefty overhead penalty\n   to encode 128 bits across many\
    \ pairs of surrogate code points.  Since\n   the ultimate goal of this document\
    \ is to reduce global warming, the\n   challenge of choosing between deprecating\
    \ UTF-16 or paying the\n   overhead price is a trivial dilemma to solve by comparison.\n"
- title: 3.  Unicode IPv6 Addresses
  contents:
  - "3.  Unicode IPv6 Addresses\n   Assuming the new Unicode code point space is 128\
    \ bits -- excluding\n   some reserved bits for backwards compatibility and future\
    \ expansion\n   -- it seems only natural to use Unicode code points for IPv6\n\
    \   addresses, and vice versa.  This leads to some exciting changes, such\n  \
    \ as:\n   o  IPv6 addresses no longer need to be typed as hex values --\n    \
    \  instead, the glyph for the script character, symbol, emoji, or\n      imoji\
    \ representing that address can be input by the user, and it\n      will be displayed\
    \ by the application as the graphic itself.  From\n      the user's perspective,\
    \ this will also be more compact than the\n      representation described in RFC\
    \ 1924 [RFC1924].\n   o  Network monitoring and troubleshooting tools can now\
    \ display\n      pretty glyphs in place of ugly IPv6 addresses, leading to less\n\
    \      stress on the eyes of network administrators.\n   o  For cases where graphical\
    \ glyphs cannot be used, such as IETF\n      documents, we can deprecate the legacy\
    \ textual notation of IPv6\n      addresses of the style '2001:db8:85a3::8a2e:370:7334'\
    \ to the\n      simpler Unicode textual notation\n      'U+20010DB885A3000000008A2E03707334'.\
    \  Using the short-name tag is\n      also possible, such as ':v6address-1:'.\n\
    \   Due to the nature of having IPv6 addresses be Unicode code points,\n   RFC\
    \ 8135 [RFC8135] is made obsolete by this document.  It was found\n   to be too\
    \ complex to implement anyway.\n"
- title: 3.1.  Reserved Addresses
  contents:
  - "3.1.  Reserved Addresses\n   Some address code points will be inappropriate for\
    \ IPv6 addressing,\n   such as formatting characters and control codes.  Such\
    \ code points\n   MUST NOT be used for IPv6 addresses.\n   We do, however, still\
    \ need to reserve some code points for private\n   network use.  Since no sentient\
    \ life has been found on Mars, the code\n   points that would have been allocated\
    \ for Martian imojis are hereby\n   allocated for this private use.  These addresses\
    \ are thus called\n   \"Martians\", also known as \"Bogons\" due to them being\
    \ bogus.\n   Note: Should life be found on Mars in the future, new code points\n\
    \   will be allocated for them.  To avoid confusion, they will be called\n   \"\
    Barsoom Indigenous Glyph Off-world Network\" addresses, or \"Bigons\"\n   (pronounced\
    \ \"bye-gons\").  We're certain the Martians will let Bogons\n   be bygones, and\
    \ Bigons be Bigons.\n"
- title: 3.2.  Multicast
  contents:
  - "3.2.  Multicast\n   In both IPv4 and IPv6, multicast addresses have been relegated\
    \ to\n   predefined IP address ranges, limiting how many multicast groups\n  \
    \ could be used simultaneously.  Given the rise of broadcasting-style\n   social\
    \ media platforms, and the market demand for individuals to be\n   watched/followed\
    \ by numerous random strangers constantly, it seems\n   clear that we need to\
    \ be able to multicast everything, all the time.\n   To address this need, the\
    \ high-order bit of the 128-bit code point\n   space SHALL be reserved to indicate\
    \ multicast.  All valid code points\n   (i.e., IPv6 addresses) will thus have\
    \ multicast counterparts.  For\n   example, the code point allocated for :cat:\
    \ is U+1F408.  The\n   multicast group U+8000000000000000000000000001F408 is thus\
    \ for\n   content about cats.  Note that this is for general cat content --\n\
    \   other code points are allocated for specific cat content, such as joy\n  \
    \ cat, grinning cat, pouty cat, etc.  For an individual cat like\n   Garfield,\
    \ setting the high-order bit to the code point allocated for\n   :garfield: will\
    \ indicate that it is multicast content about Garfield.\n   Source-specific multicast\
    \ also plays a role; for example, joining the\n   :garfield: multicast group and\
    \ restricting it to a source of\n   :garfield: results in only receiving content\
    \ about Garfield, from\n   Garfield.\n"
- title: 3.3.  IPv6 Routing
  contents:
  - "3.3.  IPv6 Routing\n   There should be little impact on routing using code-point-based\
    \ IPv6\n   addresses.  There might be some exponential growth in routing and\n\
    \   forwarding tables due to difficulties in aggregating code points;\n   hopefully,\
    \ this will be offset by increases in processor and memory\n   capacity.  Of course\
    \ this will also drive the need to frequently\n   upgrade networking hardware,\
    \ resulting in a boost to the global\n   economy, and thus a reduction in global\
    \ warming.\n   One improvement to routing that MAY be considered is for scenic\n\
    \   routing as defined by RFC 7511 [RFC7511].  With emojis and imojis\n   being\
    \ available for addressing, we can now specify which exact type\n   of scenery\
    \ to visit along the way, or even which exact avian carrier\n   [RFC6214] to ride\
    \ with.  Note that avian carriers as described in RFC\n   1149 [RFC1149] are not\
    \ supported, since they only support IPv4.\n"
- title: 4.  Using Unicode IPv6 Addresses
  contents:
  - '4.  Using Unicode IPv6 Addresses

    '
- title: 4.1.  Uniform Resource Identifiers
  contents:
  - "4.1.  Uniform Resource Identifiers\n   Uniform Resource Identifiers (URIs) and\
    \ Uniform Resource Locators\n   (URLs) already support Unicode through Internationalized\
    \ Resource\n   Identifiers (IRIs), but these are merely a means to use multiple\n\
    \   Unicode characters to indicate a resource.  With 128-bit Unicode, the\n  \
    \ number space is large enough to identify each resource with a single\n   Unicode\
    \ character.  Why waste space and time typing out multiple\n   characters, when\
    \ you can just use one?\n   For URLs, this new model might only mean using a single\
    \ Unicode\n   character for the hostname portion -- for example, a corporate logo\n\
    \   in place of the legacy corporate domain name.  Another alternative is\n  \
    \ to allocate a code point for the entire host and path, possibly even\n   including\
    \ the scheme.  These types of decisions can be made in future\n   IETF Working\
    \ Groups.\n   The interesting aspect of this change for URIs/URLs is that no\n\
    \   address lookup needs to be performed.  The single 128-bit Unicode for\n  \
    \ the URL *is* the IPv6 address.  An additional step is only needed if\n   the\
    \ user inputs a private Unicode character or short-name tag that\n   needs to\
    \ be converted to a publicly allocated one.  This would\n   require Network Address\
    \ Translation (NAT) from the private code point\n   or short-name tag to a public\
    \ Unicode code point.  This can be done\n   locally, thus finally bringing NATs\
    \ into the last part of the\n   Internet in which they are not currently deployed:\
    \ the user's\n   application.\n"
- title: 4.2.  Address Allocation and Resolution
  contents:
  - "4.2.  Address Allocation and Resolution\n   It is obvious that once a single\
    \ 128-bit Unicode character is used\n   for addresses and URIs, using domain names\
    \ will quickly become\n   obsolete.  The subsequent collapse of the domain name\
    \ industry\n   presents a threat to the world economy, which MUST be addressed.\n\
    \   One solution to this danger is to establish a Unicode registry model\n   and\
    \ an accompanying Code Point Unicode Resolution System (CPURS,\n   pronounced\
    \ \"keepers\").  CPURS would replace DNS and provide an\n   architecture and resolution\
    \ mechanism to resolve Unicode code points\n   to their registered glyphs and\
    \ short-name tags, and vice versa.  The\n   new Unicode registries and registrars\
    \ would thus replace the legacy\n   domain name counterparts.  This would lead\
    \ to a new gold rush for\n   registering Unicode code points for corporate logos\
    \ and product\n   icons, and thus usher in an era of economic prosperity, which\
    \ would\n   eventually reduce global warming.\n   Once Unicode registries and\
    \ CPURS are in place, IPv6 addresses would\n   be allocated by registering code\
    \ points through that system; they\n   would no longer be registered by IANA and\
    \ RIRs.  This is not a major\n   concern, however, because any tax revenue loss\
    \ will be more than\n   offset by Unicode registries allocating code points. \
    \ Furthermore, in\n   order to make CPURS possible, the actual graphic files for\
    \ the glyphs\n   need to be standardized and created in numerous formats and sizes,\n\
    \   with various intellectual property rules.  This will provide more\n   work\
    \ for graphic artists and lawyers, further increasing tax revenue.\n   The astute\
    \ reader might ask why we need CPURS if Unicode translation\n   is performed locally\
    \ on hosts today.  The answer is volume: it is\n   unlikely that host applications\
    \ can keep up with the rate of new\n   Unicode code points being allocated for\
    \ emojis, imojis, and umojis.\n   While application and operating system updates\
    \ have been occurring at\n   an ever-increasing rate, and will soon reach the\
    \ same rate as human\n   births, it is doubtful that it will ever reach the rate\
    \ of sentient\n   extraterrestrial births.  Therefore, we need a system that can\
    \ scale\n   to reach such volume before we make first contact; otherwise, the\n\
    \   diplomatic failure to quickly provide the aliens with amojis of their\n  \
    \ own may lead to armed conflict.  An armed conflict with other\n   sentient beings\
    \ capable of reaching Earth might increase global\n   warming, defeating this\
    \ document's ultimate purpose.\n"
- title: 5.  Summary
  contents:
  - "5.  Summary\n   There is still much to be decided on, most of which is frankly\
    \ rather\n   boring.  It is clear, however, that 128-bit Unicode code points will\n\
    \   be needed eventually, and IPv6 addressing MUST be migrated to it.\n   Thus,\
    \ the time to act is now!\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The main security concern with using 128-bit\
    \ Unicode for IPv6\n   addressing is the need for privacy, in terms of anonymity.\
    \  If an\n   IPv6 packet is sent with an imoji or amoji address, then man-in-the-\n\
    \   middle devices in the network will know the specific human or alien\n   that\
    \ sent or received the packet.  Using such information might lead\n   to heated\
    \ discussions, thereby increasing global warming.\n   To address this concern,\
    \ an IPv6 address MAY be obfuscated by using\n   an omoji.  An omoji is simply\
    \ the original Unicode code point but\n   with the least-significant bit set;\
    \ all other types of 128-bit\n   Unicode code points MUST have the least-significant\
    \ bit cleared.  The\n   graphical representation of an omoji is the same as its\
    \ unobfsucated\n   moji counterpart, except that it is covered over by a solid\
    \ black\n   block.\n   By setting the least-significant bit of the source or destination\
    \ and\n   thus turning it into an omoji, the IPv6 address is obfuscated and the\n\
    \   true identity cannot be determined, while IPv6 routers can still\n   route\
    \ the packet appropriately.  Note that this only provides a bit\n   of privacy,\
    \ but every bit helps.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [OED]      Oxford University Press, \"Oxford\
    \ English Dictionary\",\n              <http://www.oed.com>.\n   [RFC1149]  Waitzman,\
    \ D., \"Standard for the transmission of IP\n              datagrams on avian\
    \ carriers\", RFC 1149,\n              DOI 10.17487/RFC1149, April 1990,\n   \
    \           <https://www.rfc-editor.org/info/rfc1149>.\n   [RFC1924]  Elz, R.,\
    \ \"A Compact Representation of IPv6 Addresses\",\n              RFC 1924, DOI\
    \ 10.17487/RFC1924, April 1996,\n              <https://www.rfc-editor.org/info/rfc1924>.\n\
    \   [RFC6214]  Carpenter, B. and R. Hinden, \"Adaptation of RFC 1149 for\n   \
    \           IPv6\", RFC 6214, DOI 10.17487/RFC6214, April 2011,\n            \
    \  <https://www.rfc-editor.org/info/rfc6214>.\n   [RFC7511]  Wilhelm, M., \"Scenic\
    \ Routing for IPv6\", RFC 7511,\n              DOI 10.17487/RFC7511, April 2015,\n\
    \              <https://www.rfc-editor.org/info/rfc7511>.\n   [RFC8135]  Danielson,\
    \ M. and M. Nilsson, \"Complex Addressing in\n              IPv6\", RFC 8135,\
    \ DOI 10.17487/RFC8135, April 2017,\n              <https://www.rfc-editor.org/info/rfc8135>.\n\
    \   [RFC8136]  Carpenter, B. and R. Hinden, \"Additional Transition\n        \
    \      Functionality for IPv6\", RFC 8136, DOI 10.17487/RFC8136,\n           \
    \   April 2017, <https://www.rfc-editor.org/info/rfc8136>.\n   [TROLL]    The\
    \ Meme Wikia, \"Trollface\",\n              <http://meme.wikia.com/wiki/Rule_63?oldid=23602>.\n\
    \   [Unicode]  The Unicode Consortium, \"Unicode\", <http://unicode.org>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors wish to thank the following people for providing\
    \ the\n   inspiration for this work: Cal Henderson, Carlos Ramirez, Graham\n \
    \  Linehan, Agnetha Faltskog, Bjorn Ulvaeus, Benny Andersson, and\n   Anni-Frid\
    \ Lyngstad.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Hadriel Kaplan\n   128 Technology\n   Burlington, MA\n \
    \  United States of America\n   Email: hadriel@128technology.com\n"
