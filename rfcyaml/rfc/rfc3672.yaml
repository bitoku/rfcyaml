- contents:
  - '     Subentries in the Lightweight Directory Access Protocol (LDAP)

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   In X.500 directories, subentries are special entries used to hold\n
    \  information associated with a subtree or subtree refinement.  This\n   document
    adapts X.500 subentries mechanisms for use with the\n   Lightweight Directory
    Access Protocol (LDAP).\n"
  title: Abstract
- contents:
  - "1.  Overview\n   From [X.501]:\n       A subentry is a special kind of entry
    immediately subordinate to\n       an administrative point.  It contains attributes
    that pertain to\n       a subtree (or subtree refinement) associated with its\n
    \      administrative point.  The subentries and their administrative\n       point
    are part of the same naming context.\n       A single subentry may serve all or
    several aspects of\n       administrative authority.  Alternatively, a specific
    aspect of\n       administrative authority may be handled through one or more
    of\n       its own subentries.\n   Subentries in the Lightweight Directory Access
    Protocol (LDAP)\n   [RFC3377] SHALL behave in accordance with X.501 unless noted\n
    \  otherwise in this specification.\n   In absence of the subentries control (detailed
    in Section 3),\n   subentries SHALL NOT be considered in one-level and subtree
    scope\n   search operations.  For all other operations, including base scope\n
    \  search operations, subentries SHALL be considered.\n"
  - contents:
    - "1.1.  Conventions\n   Schema definitions are provided using LDAP description
      formats\n   [RFC2252].  Definitions provided here are formatted (line wrapped)\n
      \  for readability.\n   Protocol elements are described using ASN.1 [X.680].
      \ The term \"BER-\n   encoded\" means the element is to be encoded using the
      Basic Encoding\n   Rules [X.690] under the restrictions detailed in Section
      5.1 of\n   [RFC2251].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      BCP 14 [RFC2119].\n"
    title: 1.1.  Conventions
  title: 1.  Overview
- contents:
  - '2.  Subentry Schema

    '
  - contents:
    - "2.1.  Subtree Specification Syntax\n   The Subtree Specification syntax provides
      a general purpose mechanism\n   for the specification of a subset of entries
      in a subtree of the\n   Directory Information Tree (DIT).  A subtree begins
      at some base\n   entry and includes the subordinates of that entry down to some\n
      \  identified lower boundary, possibly extending to the leaf entries.  A\n   subtree
      specification is always used within a context or scope which\n   implicitly
      determines the bounds of the subtree.  For example, the\n   scope of a subtree
      specification for a subschema administrative area\n   does not include the subtrees
      of any subordinate administrative point\n   entries for subschema administration.
      \ Where a subtree specification\n   does not identify a contiguous subset of
      the entries within a single\n   subtree the collection is termed a subtree refinement.\n
      \  This syntax corresponds to the SubtreeSpecification ASN.1 type\n   described
      in [X.501], Section 11.3.  This ASN.1 data type definition\n   is reproduced
      here for completeness.\n     SubtreeSpecification ::= SEQUENCE {\n         base
      \               [0] LocalName DEFAULT { },\n                                 COMPONENTS
      OF ChopSpecification,\n         specificationFilter [4] Refinement OPTIONAL
      }\n     LocalName ::= RDNSequence\n     ChopSpecification ::= SEQUENCE {\n         specificExclusions
      \ [1] SET OF CHOICE {\n                                 chopBefore [0] LocalName,\n
      \                                chopAfter [1] LocalName } OPTIONAL,\n         minimum
      \            [2] BaseDistance DEFAULT 0,\n         maximum             [3] BaseDistance
      OPTIONAL }\n     BaseDistance ::= INTEGER (0 .. MAX)\n     Refinement ::= CHOICE
      {\n         item                [0] OBJECT-CLASS.&id,\n         and                 [1]
      SET OF Refinement,\n         or                  [2] SET OF Refinement,\n         not
      \                [3] Refinement }\n   The components of SubtreeSpecification
      are: base, which identifies\n   the base entry of the subtree or subtree refinement,
      and\n   specificExclusions, minimum, maximum and specificationFilter, which\n
      \  then reduce the set of subordinate entries of the base entry.  The\n   subtree
      or subtree refinement contains all the entries within scope\n   that are not
      excluded by any of the components of the subtree\n   specification.  When all
      of the components of SubtreeSpecification\n   are absent (i.e., when a value
      of the Subtree Specification syntax is\n   the empty sequence, {}), the specified
      subtree implicitly includes\n   all the entries within scope.\n   Any particular
      use of this mechanism MAY impose limitations or\n   constraints on the components
      of SubtreeSpecification.\n   The LDAP syntax specification is:\n       ( 1.3.6.1.4.1.1466.115.121.1.45
      DESC 'SubtreeSpecification' )\n   The LDAP-specific encoding of values of this
      syntax is defined by the\n   Generic String Encoding Rules [RFC3641].  Appendix
      A provides an\n   equivalent Augmented Backus-Naur Form (ABNF) [RFC2234] for
      this\n   syntax.\n"
    - contents:
      - "2.1.1.  Base\n   The base component of SubtreeSpecification nominates the
        base entry\n   of the subtree or subtree refinement.  The base entry may be
        an entry\n   which is subordinate to the root entry of the scope in which
        the\n   subtree specification is used, in which case the base component\n
        \  contains a sequence of Relative Distinguished Names (RDNs) relative\n   to
        the root entry of the scope, or may be the root entry of the scope\n   itself
        (the default), in which case the base component is absent or\n   contains
        an empty sequence of RDNs.\n   Entries that are not subordinates of the base
        entry are excluded from\n   the subtree or subtree refinement.\n"
      title: 2.1.1.  Base
    - contents:
      - "2.1.2.  Specific Exclusions\n   The specificExclusions component of a ChopSpecification
        is a list of\n   exclusions that specify entries and their subordinates to
        be excluded\n   from the subtree or subtree refinement.  The entry is specified
        by a\n   sequence of RDNs relative to the base entry (i.e., a LocalName).\n
        \  Each exclusion is of either the chopBefore or chopAfter form.  If the\n
        \  chopBefore form is used then the specified entry and its subordinates\n
        \  are excluded from the subtree or subtree refinement.  If the\n   chopAfter
        form is used then only the subordinates of the specified\n   entry are excluded
        from the subtree or subtree refinement.\n"
      title: 2.1.2.  Specific Exclusions
    - contents:
      - "2.1.3.  Minimum and Maximum\n   The minimum and maximum components of a ChopSpecification
        allow the\n   exclusion of entries based on their depth in the DIT.\n   Entries
        that are less than the minimum number of RDN arcs below the\n   base entry
        are excluded from the subtree or subtree refinement.  A\n   minimum value
        of zero (the default) corresponds to the base entry.\n   Entries that are
        more than the maximum number of RDN arcs below the\n   base entry are excluded
        from the subtree or subtree refinement.  An\n   absent maximum component indicates
        that there is no upper limit on\n   the number of RDN arcs below the base
        entry for entries in the\n   subtree or subtree refinement.\n"
      title: 2.1.3.  Minimum and Maximum
    - contents:
      - "2.1.4.  Specification Filter\n   The specificationFilter component is a boolean
        expression of\n   assertions about the values of the objectClass attribute
        of the base\n   entry and its subordinates.  A Refinement assertion item evaluates
        to\n   true for an entry if that entry's objectClass attribute contains the\n
        \  OID nominated in the assertion.  Entries for which the overall filter\n
        \  evaluates to false are excluded from the subtree refinement.  If the\n
        \  specificationFilter is absent then no entries are excluded from the\n   subtree
        or subtree refinement because of their objectClass attribute\n   values.\n"
      title: 2.1.4.  Specification Filter
    title: 2.1.  Subtree Specification Syntax
  - contents:
    - "2.2.  Administrative Role Attribute Type\n   The Administrative Model defined
      in [X.501], clause 10 requires that\n   administrative entries contain an administrativeRole
      attribute to\n   indicate that the associated administrative area is concerned
      with\n   one or more administrative roles.\n   The administrativeRole operational
      attribute is specified as follows:\n       ( 2.5.18.5 NAME 'administrativeRole'\n
      \          EQUALITY objectIdentifierMatch\n           USAGE directoryOperation\n
      \          SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 )\n   The possible values of
      this attribute defined in X.501 are:\n        OID            NAME\n        --------
      \ -------------------------------\n       2.5.23.1   autonomousArea\n       2.5.23.2
      \  accessControlSpecificArea\n       2.5.23.3   accessControlInnerArea\n       2.5.23.4
      \  subschemaAdminSpecificArea\n       2.5.23.5   collectiveAttributeSpecificArea\n
      \      2.5.23.6   collectiveAttributeInnerArea\n   Other values may be defined
      in other specifications.  Names\n   associated with each administrative role
      are Object Identifier\n   Descriptors [RFC3383].\n   The administrativeRole
      operational attribute is also used to regulate\n   the subentries permitted
      to be subordinate to an administrative\n   entry.  A subentry not of a class
      permitted by the administrativeRole\n   attribute cannot be subordinate to the
      administrative entry.\n"
    title: 2.2.  Administrative Role Attribute Type
  - contents:
    - "2.3.  Subtree Specification Attribute Type\n   The subtreeSpecification operational
      attribute is defined as follows:\n       ( 2.5.18.6 NAME 'subtreeSpecification'\n
      \          SINGLE-VALUE\n           USAGE directoryOperation\n           SYNTAX
      1.3.6.1.4.1.1466.115.121.1.45 )\n   This attribute is present in all subentries.
      \ See [X.501], clause 10.\n   Values of the subtreeSpecification attribute nominate
      collections of\n   entries within the DIT for one or more aspects of administrative\n
      \  authority.\n"
    title: 2.3.  Subtree Specification Attribute Type
  - contents:
    - "2.4.  Subentry Object Class\n   The subentry object class is a structural object
      class.\n       ( 2.5.17.0 NAME 'subentry'\n           SUP top STRUCTURAL\n           MUST
      ( cn $ subtreeSpecification ) )\n"
    title: 2.4.  Subentry Object Class
  title: 2.  Subentry Schema
- contents:
  - "3.  Subentries Control\n   The subentries control MAY be sent with a searchRequest
    to control\n   the visibility of entries and subentries which are within scope.\n
    \  Non-visible entries or subentries are not returned in response to the\n   request.\n
    \  The subentries control is an LDAP Control whose controlType is\n   1.3.6.1.4.1.4203.1.10.1,
    criticality is TRUE or FALSE (hence absent),\n   and controlValue contains a BER-encoded
    BOOLEAN indicating\n   visibility.  A controlValue containing the value TRUE indicates
    that\n   subentries are visible and normal entries are not.  A controlValue\n
    \  containing the value FALSE indicates that normal entries are visible\n   and
    subentries are not.\n   Note that TRUE visibility has the three octet encoding
    { 01 01 FF }\n   and FALSE visibility has the three octet encoding { 01 01 00
    }.\n   The controlValue SHALL NOT be absent.\n   In absence of this control, subentries
    are not visible to singleLevel\n   and wholeSubtree scope Search requests but
    are visible to baseObject\n   scope Search requests.\n   There is no corresponding
    response control.\n   This control is not appropriate for non-Search operations.\n"
  title: 3.  Subentries Control
- contents:
  - "4.  Security Considerations\n   Subentries often hold administrative information
    or other sensitive\n   information and should be protected from unauthorized access
    and\n   disclosure as described in [RFC2829][RFC2830].\n   General LDAP [RFC3377]
    security considerations also apply.\n"
  title: 4.  Security Considerations
- contents:
  - '5.  IANA Considerations

    '
  - contents:
    - "5.1.  Descriptors\n   The IANA has registered the LDAP descriptors detailed
      in this\n   technical specification.  The following registration template is\n
      \  suggested:\n       Subject: Request for LDAP Descriptor Registration\n       Descriptor
      (short name): see comment\n       Object Identifier: see comment\n       Person
      & email address to contact for further information:\n           Kurt Zeilenga
      <kurt@OpenLDAP.org>\n       Usage: see comment\n       Specification: RFC3672\n
      \      Author/Change Controller: IESG\n       Comments:\n         NAME                            Type
      OID\n         ------------------------        ---- --------\n         accessControlInnerArea
      \         R    2.5.23.3\n         accessControlSpecificArea       R    2.5.23.2\n
      \        administrativeRole              A    2.5.18.5\n         autonomousArea
      \                 R    2.5.23.1\n         collectiveAttributeInnerArea    R
      \   2.5.23.6\n         collectiveAttributeSpecificArea R    2.5.23.5\n         subentry
      \                       O    2.5.17.0\n         subschemaAdminSpecificArea      R
      \   2.5.23.4\n         subtreeSpecification            A    2.5.18.6\n       where
      Type A is Attribute, Type O is ObjectClass, and Type R is\n       Administrative
      Role.\n"
    title: 5.1.  Descriptors
  - contents:
    - "5.2.  Object Identifiers\n   This document uses the OID 1.3.6.1.4.1.4203.1.10.1
      to identify an\n   LDAP protocol element defined herein.  This OID was assigned
      [ASSIGN]\n   by OpenLDAP Foundation, under its IANA-assigned private enterprise\n
      \  allocation [PRIVATE], for use in this specification.\n   Other OIDs which
      appear in this document were either assigned by the\n   ISO/IEC Joint Technical
      Committee 1 - Subcommittee 6 to identify\n   elements of X.500 schema or assigned
      in RFC 2252 for the use\n   described here.\n"
    title: 5.2.  Object Identifiers
  - contents:
    - "5.3.  Protocol Mechanisms\n   The IANA has registered the LDAP protocol mechanisms
      [RFC3383]\n   detailed in this specification.\n   Subject: Request for LDAP
      Protocol Mechanism Registration\n   Description: Subentries\n   Person & email
      address to contact for further information:\n        Kurt Zeilenga <kurt@openldap.org>\n
      \  Usage: Control\n   Specification: RFC3672\n   Author/Change Controller: IESG\n
      \  Comments: none\n"
    title: 5.3.  Protocol Mechanisms
  title: 5.  IANA Considerations
- contents:
  - "6.  Acknowledgment\n   This document is based on engineering done by IETF LDUP
    and LDAPext\n   Working Groups including \"LDAP Subentry Schema\" by Ed Reed.
    \ This\n   document also borrows from a number of ITU documents including X.501.\n"
  title: 6.  Acknowledgment
- contents:
  - "7.  Intellectual Property Statement\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 7.  Intellectual Property Statement
- contents:
  - "A.  Subtree Specification ABNF\n   This appendix is non-normative.\n   The LDAP-specific
    string encoding for the Subtree Specification\n   syntax is specified by the Generic
    String Encoding Rules [RFC3641].\n   The ABNF [RFC2234] in this appendix for this
    syntax is provided only\n   as a convenience and is equivalent to the encoding
    specified by the\n   application of [RFC3641].  Since the SubtreeSpecification
    ASN.1 type\n   may be extended in future editions of [X.501], the provided ABNF\n
    \  should be regarded as a snapshot in time.  The LDAP-specific encoding\n   for
    any extension to the SubtreeSpecification ASN.1 type can be\n   determined from
    [RFC3641].\n   In the event that there is a discrepancy between this ABNF and
    the\n   encoding determined by [RFC3641], [RFC3641] is to be taken as\n   definitive.\n
    \  SubtreeSpecification = \"{\"    [ sp ss-base ]\n                             [
    sep sp ss-specificExclusions ]\n                             [ sep sp ss-minimum
    ]\n                             [ sep sp ss-maximum ]\n                             [
    sep sp ss-specificationFilter ]\n                                   sp \"}\"\n
    \  ss-base                = id-base                msp LocalName\n   ss-specificExclusions
    \ = id-specificExclusions  msp\n                               SpecificExclusions\n
    \  ss-minimum             = id-minimum             msp BaseDistance\n   ss-maximum
    \            = id-maximum             msp BaseDistance\n   ss-specificationFilter
    = id-specificationFilter msp Refinement\n   id-base                = %x62.61.73.65
    ; \"base\"\n   id-specificExclusions  = %x73.70.65.63.69.66.69.63.45.78.63.6C.75.73\n
    \                              %x69.6F.6E.73 ; \"specificExclusions\"\n   id-minimum
    \            = %x6D.69.6E.69.6D.75.6D ; \"minimum\"\n   id-maximum             =
    %x6D.61.78.69.6D.75.6D ; \"maximum\"\n   id-specificationFilter = %x73.70.65.63.69.66.69.63.61.74.69.6F.6E.46\n
    \                              %x69.6C.74.65.72 ; \"specificationFilter\"\n   SpecificExclusions
    = \"{\" [ sp SpecificExclusion\n                           *( \",\" sp SpecificExclusion
    ) ] sp \"}\"\n   SpecificExclusion  = chopBefore / chopAfter\n   chopBefore         =
    id-chopBefore \":\" LocalName\n   chopAfter          = id-chopAfter  \":\" LocalName\n
    \  id-chopBefore      = %x63.68.6F.70.42.65.66.6F.72.65 ; \"chopBefore\"\n   id-chopAfter
    \      = %x63.68.6F.70.41.66.74.65.72    ; \"chopAfter\"\n   Refinement  = item
    / and / or / not\n   item        = id-item \":\" OBJECT-IDENTIFIER\n   and         =
    id-and  \":\" Refinements\n   or          = id-or   \":\" Refinements\n   not
    \        = id-not  \":\" Refinement\n   Refinements = \"{\" [ sp Refinement\n
    \                   *( \",\" sp Refinement ) ] sp \"}\"\n   id-item     = %x69.74.65.6D
    ; \"item\"\n   id-and      = %x61.6E.64    ; \"and\"\n   id-or       = %x6F.72
    \      ; \"or\"\n   id-not      = %x6E.6F.74    ; \"not\"\n   BaseDistance = INTEGER-0-MAX\n
    \  The <sp>, <msp>, <sep>, <INTEGER>, <INTEGER-0-MAX>, <OBJECT-\n   IDENTIFIER>
    and <LocalName> rules are defined in [RFC3642].\n"
  title: A.  Subtree Specification ABNF
- contents:
  - "Normative References\n   [X.501]     ITU-T, \"The Directory -- Models,\" X.501,
    1993.\n   [X.680]     ITU-T, \"Abstract Syntax Notation One (ASN.1) -\n               Specification
    of Basic Notation\", X.680, 1994.\n   [X.690]     ITU-T, \"Specification of ASN.1
    encoding rules:  Basic,\n               Canonical, and Distinguished Encoding
    Rules\", X.690,\n               1994.\n   [RFC2119]   Bradner, S., \"Key words
    for use in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC
    2119, March 1997.\n   [RFC2251]   Wahl, M., Howes, T. and S. Kille, \"Lightweight
    Directory\n               Access Protocol (v3)\", RFC 2251, December 1997.\n   [RFC2252]
    \  Wahl, M., Coulbeck, A., Howes, T. and S. Kille,\n               \"Lightweight
    Directory Access Protocol (v3):  Attribute\n               Syntax Definitions\",
    RFC 2252, December 1997.\n   [RFC2829]   Wahl, M., Alvestrand, H., Hodges, J.
    and R. Morgan,\n               \"Authentication Methods for LDAP\", RFC 2829,
    May 2000.\n   [RFC2830]   Hodges, J., Morgan, R. and M. Wahl, \"Lightweight\n
    \              Directory Access Protocol (v3): Extension for Transport\n               Layer
    Security\", RFC 2830, May 2000.\n   [RFC3377]   Hodges, J. and R. Morgan, \"Lightweight
    Directory Access\n               Protocol (v3): Technical Specification\", RFC
    3377,\n               September 2002.\n   [RFC3383]   Zeilenga, K., \"Internet
    Assigned Numbers Authority (IANA)\n               Considerations for the Lightweight
    Directory Access\n               Protocol (LDAP)\", RFC 3383, September 2002.\n
    \  [RFC3641]   Legg, S., \"Generic String Encoding Rules (GSER) for ASN.1\n               Types\",
    RFC 3641, October 2003.\n"
  title: Normative References
- contents:
  - "Informative References\n   [RFC2234]   Crocker, D. and P. Overell, \"Augmented
    BNF for Syntax\n               Specifications: ABNF\", RFC 2234, November 1997.\n
    \  [RFC3642]   Legg, S., \"Common Elements of Generic String Encoding\n               Rules
    (GSER) Encodings\", RFC 3642, October 2003.\n   [ASSIGN]    OpenLDAP Foundation,
    \"OpenLDAP OID Delegations\",\n               http://www.openldap.org/foundation/oid-delegate.txt\n
    \  [PRIVATE]   IANA, \"Private Enterprise Numbers\",\n               http://www.iana.org/assignments/enterprise-numbers\n"
  title: Informative References
- contents:
  - "Authors' Addresses\n   Kurt D. Zeilenga\n   OpenLDAP Foundation\n   EMail: Kurt@OpenLDAP.org\n
    \  Steven Legg\n   Adacel Technologies Ltd.\n   250 Bay Street\n   Brighton, Victoria
    3186\n   AUSTRALIA\n   Phone: +61 3 8530 7710\n   Fax:   +61 3 8530 7888\n   EMail:
    steven.legg@adacel.com.au\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
