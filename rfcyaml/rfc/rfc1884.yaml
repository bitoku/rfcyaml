- title: __initial_text__
  contents:
  - '                  IP Version 6 Addressing Architecture

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification defines the addressing architecture of the IP\n\
    \   Version 6 protocol [IPV6].  The document includes the IPv6 addressing\n  \
    \ model, text representations of IPv6 addresses, definition of IPv6\n   unicast\
    \ addresses, anycast addresses, and multicast addresses, and an\n   IPv6 nodes\
    \ required addresses.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction................................................3\n\
    \   2. IPv6 Addressing.............................................3\n      2.1\
    \ Addressing Model........................................4\n      2.2 Text Representation\
    \ of Addresses........................4\n      2.3 Address Type Representation.............................5\n\
    \      2.4 Unicast Addresses.......................................7\n       \
    \ 2.4.1 Unicast Address Example.............................8\n        2.4.2 The\
    \ Unspecified Address.............................9\n        2.4.3 The Loopback\
    \ Address................................9\n        2.4.4 IPv6 Addresses with\
    \ Embedded IPv4 Addresses.........9\n        2.4.5 NSAP Addresses......................................10\n\
    \        2.4.6 IPX Addresses.......................................10\n      \
    \  2.4.7 Provider-Based Global Unicast Addresses.............10\n        2.4.8\
    \ Local-use IPv6 Unicast Addresses....................11\n      2.5 Anycast Addresses.......................................12\n\
    \        2.5.1 Required Anycast Address............................13\n      2.6\
    \ Multicast Addresses.....................................14\n        2.6.1 Pre-Defined\
    \ Multicast Addresses.....................15\n      2.7 A Node's Required Addresses.............................17\n\
    \   REFERENCES.....................................................18\n   SECURITY\
    \ CONSIDERATIONS........................................18\n   DOCUMENT EDITOR'S\
    \ ADDRESSES....................................18\n"
- title: 1.0 INTRODUCTION
  contents:
  - "1.0 INTRODUCTION\n   This specification defines the addressing architecture of\
    \ the IP\n   Version 6 protocol.  It includes a detailed description of the\n\
    \   currently defined address formats for IPv6 [IPV6].\n   The editors would like\
    \ to acknowledge the contributions of Paul\n   Francis, Jim Bound, Brian Carpenter,\
    \ Deborah Estrin, Peter Ford, Bob\n   Gilligan, Christian Huitema, Tony Li, Greg\
    \ Minshall, Erik Nordmark,\n   Yakov Rekhter, Bill Simpson, and Sue Thomson.\n"
- title: 2.0 IPv6 ADDRESSING
  contents:
  - "2.0 IPv6 ADDRESSING\n   IPv6 addresses are 128-bit identifiers for interfaces\
    \ and sets of\n   interfaces.  There are three types of addresses:\n       Unicast:\
    \   An identifier for a single interface.  A packet sent\n                  to\
    \ a unicast address is delivered to the interface\n                  identified\
    \ by that address.\n       Anycast:   An identifier for a set of interfaces (typically\n\
    \                  belonging to different nodes).  A packet sent to an\n     \
    \             anycast address is delivered to one of the interfaces\n        \
    \          identified by that address (the \"nearest\" one,\n                \
    \  according to the routing protocols' measure of\n                  distance).\n\
    \       Multicast: An identifier for a set of interfaces (typically\n        \
    \          belonging to different nodes).  A packet sent to a\n              \
    \    multicast address is delivered to all interfaces\n                  identified\
    \ by that address.\n   There are no broadcast addresses in IPv6, their function\
    \ being\n   superseded by multicast addresses.\n   In this document, fields in\
    \ addresses are given a specific name, for\n   example \"subscriber\".  When this\
    \ name is used with the term \"ID\" for\n   identifier after the name (e.g., \"\
    subscriber ID\"), it refers to the\n   contents of the named field.  When it is\
    \ used with the term \"prefix\"\n   (e.g., \"subscriber prefix\") it refers to\
    \ all of the address up to and\n   including this field.\n   In IPv6, all zeros\
    \ and all ones are legal values for any field,\n   unless specifically excluded.\
    \  Specifically, prefixes may contain\n   zero-valued fields or end in zeros.\n\
    \   2.1 Addressing Model\n   IPv6 Addresses of all types are assigned to interfaces,\
    \ not nodes.\n   Since each interface belongs to a single node, any of that node's\n\
    \   interfaces' unicast addresses may be used as an identifier for the\n   node.\n\
    \   An IPv6 unicast address refers to a single interface.  A single\n   interface\
    \ may be assigned multiple IPv6 addresses of any type\n   (unicast, anycast, and\
    \ multicast).  There are two exceptions to this\n   model.  These are:\n     1)\
    \ A single address may be assigned to multiple physical interfaces\n        if\
    \ the implementation treats the multiple physical interfaces as\n        one interface\
    \ when presenting it to the internet layer.  This is\n        useful for load-sharing\
    \ over multiple physical interfaces.\n     2) Routers may have unnumbered interfaces\
    \ (i.e., no IPv6 address\n        assigned to the interface) on point-to-point\
    \ links to eliminate\n        the necessity to manually configure and advertise\
    \ the addresses.\n        Addresses are not needed for point-to-point interfaces\
    \ on\n        routers if those interfaces are not to be used as the origins or\n\
    \        destinations of any IPv6 datagrams.\n   IPv6 continues the IPv4 model\
    \ that a subnet is associated with one\n   link.  Multiple subnets may be assigned\
    \ to the same link.\n   2.2 Text Representation of Addresses\n   There are three\
    \ conventional forms for representing IPv6 addresses as\n   text strings:\n  \
    \   1. The preferred form is x:x:x:x:x:x:x:x, where the 'x's are the\n       \
    \ hexadecimal values of the eight 16-bit pieces of the address.\n        Examples:\n\
    \                   FEDC:BA98:7654:3210:FEDC:BA98:7654:3210\n                \
    \   1080:0:0:0:8:800:200C:417A\n        Note that it is not necessary to write\
    \ the leading zeros in an\n        individual field, but there must be at least\
    \ one numeral in\n        every field (except for the case described in 2.).\n\
    \     2. Due to the method of allocating certain styles of IPv6\n        addresses,\
    \ it will be common for addresses to contain long\n        strings of zero bits.\
    \  In order to make writing addresses\n        containing zero bits easier a special\
    \ syntax is available to\n        compress the zeros.  The use of \"::\" indicates\
    \ multiple groups\n        of 16-bits of zeros.  The \"::\" can only appear once\
    \ in an\n        address.  The \"::\" can also be used to compress the leading\n\
    \        and/or trailing zeros in an address.\n        For example the following\
    \ addresses:\n             1080:0:0:0:8:800:200C:417A  a unicast address\n   \
    \          FF01:0:0:0:0:0:0:43         a multicast address\n             0:0:0:0:0:0:0:1\
    \             the loopback address\n             0:0:0:0:0:0:0:0             the\
    \ unspecified addresses\n        may be represented as:\n             1080::8:800:200C:417A\
    \       a unicast address\n             FF01::43                    a multicast\
    \ address\n             ::1                         the loopback address\n   \
    \          ::                          the unspecified addresses\n     3. An alternative\
    \ form that is sometimes more convenient when\n        dealing with a mixed environment\
    \ of IPv4 and IPv6 nodes is\n        x:x:x:x:x:x:d.d.d.d, where the 'x's are the\
    \ hexadecimal values\n        of the six high-order 16-bit pieces of the address,\
    \ and the 'd's\n        are the decimal values of the four low-order 8-bit pieces\
    \ of the\n        address (standard IPv4 representation).  Examples:\n       \
    \      0:0:0:0:0:0:13.1.68.3\n             0:0:0:0:0:FFFF:129.144.52.38\n    \
    \    or in compressed form:\n             ::13.1.68.3\n             ::FFFF:129.144.52.38\n\
    \   2.3 Address Type Representation\n   The specific type of an IPv6 address is\
    \ indicated by the leading bits\n   in the address.  The variable-length field\
    \ comprising these leading\n   bits is called the Format Prefix (FP).  The initial\
    \ allocation of\n   these prefixes is as follows:\n        Allocation        \
    \                 Prefix         Fraction of\n                               \
    \            (binary)       Address Space\n        -------------------------------\
    \    --------       -------------\n        Reserved                          \
    \ 0000 0000      1/256\n        Unassigned                         0000 0001 \
    \     1/256\n        Reserved for NSAP Allocation       0000 001       1/128\n\
    \        Reserved for IPX Allocation        0000 010       1/128\n        Unassigned\
    \                         0000 011       1/128\n        Unassigned           \
    \              0000 1         1/32\n        Unassigned                       \
    \  0001           1/16\n        Unassigned                         001       \
    \     1/8\n        Provider-Based Unicast Address     010            1/8\n   \
    \     Unassigned                         011            1/8\n        Reserved\
    \ for Geographic-\n        Based Unicast Addresses            100            1/8\n\
    \        Unassigned                         101            1/8\n        Unassigned\
    \                         110            1/8\n        Unassigned             \
    \            1110           1/16\n        Unassigned                         1111\
    \ 0         1/32\n        Unassigned                         1111 10        1/64\n\
    \        Unassigned                         1111 110       1/128\n        Unassigned\
    \                         1111 1110 0    1/512\n        Link Local Use Addresses\
    \           1111 1110 10   1/1024\n        Site Local Use Addresses          \
    \ 1111 1110 11   1/1024\n        Multicast Addresses                1111 1111\
    \      1/256\n        Note: The \"unspecified address\" (see section 2.4.2), the\n\
    \        loopback address (see section 2.4.3), and the IPv6 Addresses\n      \
    \  with Embedded IPv4 Addresses (see section 2.4.4), are assigned\n        out\
    \ of the 0000 0000 format prefix space.\n   This allocation supports the direct\
    \ allocation of provider addresses,\n   local use addresses, and multicast addresses.\
    \  Space is reserved for\n   NSAP addresses, IPX addresses, and geographic addresses.\
    \  The\n   remainder of the address space is unassigned for future use.  This\n\
    \   can be used for expansion of existing use (e.g., additional provider\n   addresses,\
    \ etc.) or new uses (e.g., separate locators and\n   identifiers).  Fifteen percent\
    \ of the address space is initially\n   allocated.  The remaining 85% is reserved\
    \ for future use.\n   Unicast addresses are distinguished from multicast addresses\
    \ by the\n   value of the high-order octet of the addresses: a value of FF\n \
    \  (11111111) identifies an address as a multicast address; any other\n   value\
    \ identifies an address as a unicast address.  Anycast addresses\n   are taken\
    \ from the unicast address space, and are not syntactically\n   distinguishable\
    \ from unicast addresses.\n   2.4 Unicast Addresses\n   The IPv6 unicast address\
    \ is contiguous bit-wise maskable, similar to\n   IPv4 addresses under Class-less\
    \ Interdomain Routing [CIDR].\n   There are several forms of unicast address assignment\
    \ in IPv6,\n   including the global provider based unicast address, the geographic\n\
    \   based unicast address, the NSAP address, the IPX hierarchical\n   address,\
    \ the site-local-use address, the link-local-use address, and\n   the IPv4-capable\
    \ host address.  Additional address types can be\n   defined in the future.\n\
    \   IPv6 nodes may have considerable or little knowledge of the internal\n   structure\
    \ of the IPv6 address, depending on the role the node plays\n   (for instance,\
    \ host versus router).  At a minimum, a node may\n   consider that unicast addresses\
    \ (including its own) have no internal\n   structure:\n    |                 \
    \          128 bits                              |\n    +-----------------------------------------------------------------+\n\
    \    |                          node address                           |\n   \
    \ +-----------------------------------------------------------------+\n   A slightly\
    \ sophisticated host (but still rather simple) may\n   additionally be aware of\
    \ subnet prefix(es) for the link(s) it is\n   attached to, where different addresses\
    \ may have different values for\n   n:\n    |                         n bits \
    \                |   128-n bits   |\n    +------------------------------------------------+----------------+\n\
    \    |                   subnet prefix                | interface ID   |\n   \
    \ +------------------------------------------------+----------------+\n   Still\
    \ more sophisticated hosts may be aware of other hierarchical\n   boundaries in\
    \ the unicast address.  Though a very simple router may\n   have no knowledge\
    \ of the internal structure of IPv6 unicast\n   addresses, routers will more generally\
    \ have knowledge of one or more\n   of the hierarchical boundaries for the operation\
    \ of routing\n   protocols.  The known boundaries will differ from router to router,\n\
    \   depending on what positions the router holds in the routing\n   hierarchy.\n\
    \   2.4.1 Unicast Address Examples\n   An example of a Unicast address format\
    \ which will likely be common on\n   LANs and other environments where IEEE 802\
    \ MAC addresses are\n   available is:\n    |              n bits            |\
    \ 80-n bits |     48 bits        |\n    +--------------------------------+-----------+--------------------+\n\
    \    |        subscriber prefix       | subnet ID |   interface ID     |\n   \
    \ +--------------------------------+-----------+--------------------+\n   Where\
    \ the 48-bit Interface ID is an IEEE-802 MAC address.  The use of\n   IEEE 802\
    \ MAC addresses as a interface ID is expected to be very\n   common in environments\
    \ where nodes have an IEEE 802 MAC address.  In\n   other environments, where\
    \ IEEE 802 MAC addresses are not available,\n   other types of link layer addresses\
    \ can be used, such as E.164\n   addresses, for the interface ID.\n   The inclusion\
    \ of a unique global interface identifier, such as an\n   IEEE MAC address, makes\
    \ possible a very simple form of auto-\n   configuration of addresses.  A node\
    \ may discover a subnet ID by\n   listening to Router Advertisement messages sent\
    \ by a router on its\n   attached link(s), and then fabricating an IPv6 address\
    \ for itself by\n   using its IEEE MAC address as the interface ID on that subnet.\n\
    \   Another unicast address format example is where a site or\n   organization\
    \ requires additional layers of internal hierarchy.  In\n   this example the subnet\
    \ ID is divided into an area ID and a subnet\n   ID.  Its format is:\n    |  \
    \       s bits       | n bits  |   m bits     | 128-s-n-m bits  |\n    +----------------------+---------+--------------+-----------------+\n\
    \    |   subscriber prefix  | area ID |  subnet ID   |  interface ID   |\n   \
    \ +----------------------+---------+--------------+-----------------+\n   This\
    \ technique can be continued to allow a site or organization to\n   add additional\
    \ layers of internal hierarchy.  It may be desirable to\n   use an interface ID\
    \ smaller than a 48-bit IEEE 802 MAC address to\n   allow more space for the additional\
    \ layers of internal hierarchy.\n   These could be interface IDs which are administratively\
    \ created by\n   the site or organization.\n   2.4.2 The Unspecified Address\n\
    \   The address 0:0:0:0:0:0:0:0 is called the unspecified address.  It\n   must\
    \ never be assigned to any node.  It indicates the absence of an\n   address.\
    \  One example of its use is in the Source Address field of\n   any IPv6 datagrams\
    \ sent by an initializing host before it has learned\n   its own address.\n  \
    \ The unspecified address must not be used as the destination address\n   of IPv6\
    \ datagrams or in IPv6 Routing Headers.\n   2.4.3 The Loopback Address\n   The\
    \ unicast address 0:0:0:0:0:0:0:1 is called the loopback address.\n   It may be\
    \ used by a node to send an IPv6 datagram to itself.  It may\n   never be assigned\
    \ to any interface.\n   The loopback address must not be used as the source address\
    \ in IPv6\n   datagrams that are sent outside of a single node.  An IPv6 datagram\n\
    \   with a destination address of loopback must never be sent outside of\n   a\
    \ single node.\n   2.4.4 IPv6 Addresses with Embedded IPv4 Addresses\n   The IPv6\
    \ transition mechanisms include a technique for hosts and\n   routers to dynamically\
    \ tunnel IPv6 packets over IPv4 routing\n   infrastructure.  IPv6 nodes that utilize\
    \ this technique are assigned\n   special IPv6 unicast addresses that carry an\
    \ IPv4 address in the\n   low-order 32-bits.  This type of address is termed an\
    \ \"IPv4-\n   compatible IPv6 address\" and has the format:\n    |           \
    \     80 bits               | 16 |      32 bits        |\n    +--------------------------------------+--------------------------+\n\
    \    |0000..............................0000|0000|    IPv4 address     |\n   \
    \ +--------------------------------------+----+---------------------+\n   A second\
    \ type of IPv6 address which holds an embedded IPv4 address is\n   also defined.\
    \  This address is used to represent the addresses of\n   IPv4-only nodes (those\
    \ that *do not* support IPv6) as IPv6 addresses.\n   This type of address is termed\
    \ an \"IPv4-mapped IPv6 address\" and has\n   the format:\n    |             \
    \   80 bits               | 16 |      32 bits        |\n    +--------------------------------------+--------------------------+\n\
    \    |0000..............................0000|FFFF|    IPv4 address     |\n   \
    \ +--------------------------------------+----+---------------------+\n   2.4.5\
    \ NSAP Addresses\n   This mapping of NSAP address into IPv6 addresses is as follows:\n\
    \    |   7   |                   121 bits                              |\n   \
    \ +-------+---------------------------------------------------------+\n    |0000001|\
    \                 to be defined                           |\n    +-------+---------------------------------------------------------+\n\
    \   The draft definition, motivation, and usage are under study [NSAP].\n   2.4.6\
    \ IPX Addresses\n   This mapping of IPX address into IPv6 addresses is as follows:\n\
    \    |   7   |                   121 bits                              |\n   \
    \ +-------+---------------------------------------------------------+\n    |0000010|\
    \                 to be defined                           |\n    +-------+---------------------------------------------------------+\n\
    \   The draft definition, motivation, and usage are under study.\n   2.4.7 Provider-Based\
    \ Global Unicast Addresses\n   The global provider-based unicast address is assigned\
    \ as described in\n   [ALLOC].  This initial assignment plan for these unicast\
    \ addresses is\n   similar to assignment of IPv4 addresses under the CIDR scheme\
    \ [CIDR].\n   The IPv6 global provider-based unicast address format is as follows:\n\
    \    | 3 |  n bits   |  m bits   |   o bits    |   125-n-m-o bits   |\n    +---+-----------+-----------+-------------+--------------------+\n\
    \    |010|registry ID|provider ID|subscriber ID|  intra-subscriber  |\n    +---+-----------+-----------+-------------+--------------------+\n\
    \   The high-order part of the address is assigned to registries, who\n   then\
    \ assign portions of the address space to providers, who then\n   assign portions\
    \ of the address space to subscribers, etc.\n   The registry ID identifies the\
    \ registry which assigns the provider\n   portion of the address.  The term \"\
    registry prefix\" refers to the\n   high-order part of the address up to and including\
    \ the registry ID.\n   The provider ID identifies a specific provider which assigns\
    \ the\n   subscriber portion of the address.  The term \"provider prefix\" refers\n\
    \   to the high-order part of the address up to and including the\n   provider\
    \ ID.\n   The subscriber ID distinguishes among multiple subscribers attached\n\
    \   to the provider identified by the provider ID.  The term \"subscriber\n  \
    \ prefix\" refers to the high-order part of the address up to and\n   including\
    \ the subscriber ID.\n   The intra-subscriber portion of the address is defined\
    \ by an\n   individual subscriber and is organized according to the subscribers\n\
    \   local internet topology.  It is likely that many subscribers will\n   choose\
    \ to divide the intra-subscriber portion of the address into a\n   subnet ID and\
    \ an interface ID.  In this case the subnet ID identifies\n   a specific physical\
    \ link and the interface ID identifies a single\n   interface on that subnet.\n\
    \   2.4.8 Local-use IPv6 Unicast Addresses\n   There are two types of local-use\
    \ unicast addresses defined.  These\n   are Link-Local and Site-Local.  The Link-Local\
    \ is for use on a single\n   link and the Site-Local is for use in a single site.\
    \  Link-Local\n   addresses have the following format:\n    |   10     |\n   \
    \ |  bits    |        n bits           |       118-n bits           |\n    +----------+-------------------------+----------------------------+\n\
    \    |1111111010|           0             |       interface ID         |\n   \
    \ +----------+-------------------------+----------------------------+\n   Link-Local\
    \ addresses are designed to be used for addressing on a\n   single link for purposes\
    \ such as auto-address configuration, neighbor\n   discovery, or when no routers\
    \ are present.\n   Routers MUST not forward any packets with link-local source\n\
    \   addresses.\n   Site-Local addresses have the following format:\n    |   10\
    \     |\n    |  bits    | n bits  |    m bits     |       118-n-m bits       \
    \  |\n    +----------+---------+---------------+----------------------------+\n\
    \    |1111111011|    0    |   subnet ID   |       interface ID         |\n   \
    \ +----------+---------+---------------+----------------------------+\n   Site-Local\
    \ addresses may be used for sites or organizations that are\n   not (yet) connected\
    \ to the global Internet.  They do not need to\n   request or \"steal\" an address\
    \ prefix from the global Internet address\n   space.  IPv6 site-local addresses\
    \ can be used instead.  When the\n   organization connects to the global Internet,\
    \ it can then form global\n   addresses by replacing the site-local prefix with\
    \ a subscriber\n   prefix.\n   Routers MUST not forward any packets with site-local\
    \ source addresses\n   outside of the site.\n   2.5 Anycast Addresses\n   An IPv6\
    \ anycast address is an address that is assigned to more than\n   one interface\
    \ (typically belonging to different nodes), with the\n   property that a packet\
    \ sent to an anycast address is routed to the\n   \"nearest\" interface having\
    \ that address, according to the routing\n   protocols' measure of distance.\n\
    \   Anycast addresses are allocated from the unicast address space, using\n  \
    \ any of the defined unicast address formats.  Thus, anycast addresses\n   are\
    \ syntactically indistinguishable from unicast addresses.  When a\n   unicast\
    \ address is assigned to more than one interface, thus turning\n   it into an\
    \ anycast address, the nodes to which the address is\n   assigned must be explicitly\
    \ configured to know that it is an anycast\n   address.\n   For any assigned anycast\
    \ address, there is a longest address prefix P\n   that identifies the topological\
    \ region in which all interfaces\n   belonging to that anycast address reside.\
    \  Within the region\n   identified by P, each member of the anycast set must\
    \ be advertised as\n   a separate entry in the routing system (commonly referred\
    \ to as a\n   \"host route\"); outside the region identified by P, the anycast\n\
    \   address may be aggregated into the routing advertisement for prefix\n   P.\n\
    \   Note that in, the worst case, the prefix P of an anycast set may be\n   the\
    \ null prefix, i.e., the members of the set may have no topological\n   locality.\
    \  In that case, the anycast address must be advertised as a\n   separate routing\
    \ entry throughout the entire internet, which presents\n   a severe scaling limit\
    \ on how many such \"global\" anycast sets may be\n   supported.  Therefore, it\
    \ is expected that support for global anycast\n   sets may be unavailable or very\
    \ restricted.\n   One expected use of anycast addresses is to identify the set\
    \ of\n   routers belonging to an internet service provider.  Such addresses\n\
    \   could be used as intermediate addresses in an IPv6 Routing header, to\n  \
    \ cause a packet to be delivered via a particular provider or sequence\n   of\
    \ providers.  Some other possible uses are to identify the set of\n   routers\
    \ attached to a particular subnet, or the set of routers\n   providing entry into\
    \ a particular routing domain.\n   There is little experience with widespread,\
    \ arbitrary use of internet\n   anycast addresses, and some known complications\
    \ and hazards when\n   using them in their full generality [ANYCST].  Until more\
    \ experience\n   has been gained and solutions agreed upon for those problems,\
    \ the\n   following restrictions are imposed on IPv6 anycast addresses:\n    \
    \  o An anycast address MUST NOT be used as the source address of an\n       \
    \ IPv6 packet.\n      o An anycast address MUST NOT be assigned to an IPv6 host,\
    \ that\n        is, it may be assigned to an IPv6 router only.\n   2.5.1 Required\
    \ Anycast Address\n   The Subnet-Router anycast address is predefined.  It's format\
    \ is as\n   follows:\n    |                         n bits                 | \
    \  128-n bits   |\n    +------------------------------------------------+----------------+\n\
    \    |                   subnet prefix                | 00000000000000 |\n   \
    \ +------------------------------------------------+----------------+\n   The\
    \ \"subnet prefix\" in an anycast address is the prefix which\n   identifies a\
    \ specific link.  This anycast address is syntactically\n   the same as a unicast\
    \ address for an interface on the link with the\n   interface identifier set to\
    \ zero.\n   Packets sent to the Subnet-Router anycast address will be delivered\n\
    \   to one router on the subnet.  All routers are required to support the\n  \
    \ Subnet-Router anycast addresses for the subnets which they have\n   interfaces.\n\
    \   The subnet-router anycast address is intended to be used for\n   applications\
    \ where a node needs to communicate with one of a set of\n   routers on a remote\
    \ subnet.  For example when a mobile host needs to\n   communicate with one of\
    \ the mobile agents on it's \"home\" subnet.\n   2.6 Multicast Addresses\n   An\
    \ IPv6 multicast address is an identifier for a group of nodes.  A\n   node may\
    \ belong to any number of multicast groups.  Multicast\n   addresses have the\
    \ following format:\n    |   8    |  4 |  4 |                  112 bits      \
    \             |\n    +------ -+----+----+---------------------------------------------+\n\
    \    |11111111|flgs|scop|                  group ID                   |\n    +--------+----+----+---------------------------------------------+\n\
    \        11111111 at the start of the address identifies the address as\n    \
    \    being a multicast address.\n                                      +-+-+-+-+\n\
    \        flgs is a set of 4 flags:     |0|0|0|T|\n                           \
    \           +-+-+-+-+\n             The high-order 3 flags are reserved, and must\
    \ be\n             initialized to 0.\n             T = 0 indicates a permanently-assigned\
    \ (\"well-known\")\n             multicast address, assigned by the global internet\n\
    \             numbering authority.\n             T = 1 indicates a non-permanently-assigned\
    \ (\"transient\")\n             multicast address.\n        scop is a 4-bit multicast\
    \ scope value used to limit the scope of\n        the multicast group.  The values\
    \ are:\n             0  reserved\n             1  node-local scope\n         \
    \    2  link-local scope\n             3  (unassigned)\n             4  (unassigned)\n\
    \             5  site-local scope\n             6  (unassigned)\n            \
    \ 7  (unassigned)\n             8  organization-local scope\n             9  (unassigned)\n\
    \             A  (unassigned)\n             B  (unassigned)\n             C  (unassigned)\n\
    \             D  (unassigned)\n             E  global scope\n             F  reserved\n\
    \        group ID identifies the multicast group, either permanent or\n      \
    \  transient, within the given scope.\n   The \"meaning\" of a permanently-assigned\
    \ multicast address is\n   independent of the scope value.  For example, if the\
    \ \"NTP servers\n   group\" is assigned a permanent multicast address with a group\
    \ ID of\n   43 (hex), then:\n        FF01:0:0:0:0:0:0:43 means all NTP servers\
    \ on the same node as\n        the sender.\n        FF02:0:0:0:0:0:0:43 means\
    \ all NTP servers on the same link as\n        the sender.\n        FF05:0:0:0:0:0:0:43\
    \ means all NTP servers at the same site as\n        the sender.\n        FF0E:0:0:0:0:0:0:43\
    \ means all NTP servers in the internet.\n   Non-permanently-assigned multicast\
    \ addresses are meaningful only\n   within a given scope.  For example, a group\
    \ identified by the non-\n   permanent, site-local multicast address FF15:0:0:0:0:0:0:43\
    \ at one\n   site bears no relationship to a group using the same address at a\n\
    \   different site, nor to a non-permanent group using the same group ID\n   with\
    \ different scope, nor to a permanent group with the same group\n   ID.\n   Multicast\
    \ addresses must not be used as source addresses in IPv6\n   datagrams or appear\
    \ in any routing header.\n   2.6.1 Pre-Defined Multicast Addresses\n   The following\
    \ well-known multicast addresses are pre-defined:\n        Reserved Multicast\
    \ Addresses:   FF00:0:0:0:0:0:0:0\n                                        FF01:0:0:0:0:0:0:0\n\
    \                                        FF02:0:0:0:0:0:0:0\n                \
    \                        FF03:0:0:0:0:0:0:0\n                                \
    \        FF04:0:0:0:0:0:0:0\n                                        FF05:0:0:0:0:0:0:0\n\
    \                                        FF06:0:0:0:0:0:0:0\n                \
    \                        FF07:0:0:0:0:0:0:0\n                                \
    \        FF08:0:0:0:0:0:0:0\n                                        FF09:0:0:0:0:0:0:0\n\
    \                                        FF0A:0:0:0:0:0:0:0\n                \
    \                        FF0B:0:0:0:0:0:0:0\n                                \
    \        FF0C:0:0:0:0:0:0:0\n                                        FF0D:0:0:0:0:0:0:0\n\
    \                                        FF0E:0:0:0:0:0:0:0\n                \
    \                        FF0F:0:0:0:0:0:0:0\n   The above multicast addresses\
    \ are reserved and shall never be\n   assigned to any multicast group.\n     \
    \   All Nodes Addresses:    FF01:0:0:0:0:0:0:1\n                             \
    \   FF02:0:0:0:0:0:0:1\n   The above multicast addresses identify the group of\
    \ all IPv6 nodes,\n   within scope 1 (node-local) or 2 (link-local).\n       \
    \ All Routers Addresses:   FF01:0:0:0:0:0:0:2\n                              \
    \   FF02:0:0:0:0:0:0:2\n   The above multicast addresses identify the group of\
    \ all IPv6 routers,\n   within scope 1 (node-local) or 2 (link-local).\n     \
    \   DHCP Server/Relay-Agent: FF02:0:0:0:0:0:0:C\n   The above multicast addresses\
    \ identify the group of all IPv6 DHCP\n   Servers and Relay Agents within scope\
    \ 2 (link-local).\n        Solicited-Node Address:  FF02:0:0:0:0:1:XXXX:XXXX\n\
    \   The above multicast address is computed as a function of a node's\n   unicast\
    \ and anycast addresses.  The solicited-node multicast address\n   is formed by\
    \ taking the low-order 32 bits of the address (unicast or\n   anycast) and appending\
    \ those bits to the 96-bit prefix FF02:0:0:0:0:1\n   resulting in a multicast\
    \ address in the range\n           FF02:0:0:0:0:1:0000:0000\n   to\n         \
    \  FF02:0:0:0:0:1:FFFF:FFFF\n   For example, the solicited node multicast address\
    \ corresponding to\n   the IPv6 address 4037::01:800:200E:8C6C is FF02::1:200E:8C6C.\
    \  IPv6\n   addresses that differ only in the high-order bits, e.g., due to\n\
    \   multiple high-order prefixes associated with different providers,\n   will\
    \ map to the same solicited-node address thereby reducing the\n   number of multicast\
    \ addresses a node must join.\n   A node is required to compute and support a\
    \ Solicited-Node multicast\n   addresses for every unicast and anycast address\
    \ it is assigned.\n   2.7 A Node's Required Addresses\n   A host is required to\
    \ recognize the following addresses as\n   identifying itself:\n      o Its Link-Local\
    \ Address for each interface\n      o Assigned Unicast Addresses\n      o Loopback\
    \ Address\n      o All-Nodes Multicast Address\n      o Solicited-Node Multicast\
    \ Address for each of its assigned\n        unicast and anycast addresses\n  \
    \    o Multicast Addresses of all other groups which the host belongs.\n   A router\
    \ is required to recognize the following addresses as\n   identifying itself:\n\
    \      o Its Link-Local Address for each interface\n      o Assigned Unicast Addresses\n\
    \      o Loopback Address\n      o The Subnet-Router anycast addresses for the\
    \ links it has\n        interfaces.\n      o All other Anycast addresses with\
    \ which the router has been\n        configured.\n      o All-Nodes Multicast\
    \ Address\n      o All-Router Multicast Address\n      o Solicited-Node Multicast\
    \ Address for each of its assigned\n        unicast and anycast addresses\n  \
    \    o Multicast Addresses of all other groups which the router\n        belongs.\n\
    \   The only address prefixes which should be predefined in an\n   implementation\
    \ are the:\n      o Unspecified Address\n      o Loopback Address\n      o Multicast\
    \ Prefix (FF)\n      o Local-Use Prefixes (Link-Local and Site-Local)\n      o\
    \ Pre-Defined Multicast Addresses\n      o IPv4-Compatible Prefixes\n   Implementations\
    \ should assume all other addresses are unicast unless\n   specifically configured\
    \ (e.g., anycast addresses).\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n     [ALLOC] Rekhter, Y., and T. Li, \"An Architecture for IPv6 Unicast\n\
    \             Address Allocation\", RFC 1887, cisco Systems, December\n      \
    \       1995.\n     [ANYCST] Partridge, C., Mendez, T., and W. Milliken, \"Host\n\
    \             Anycasting Service\", RFC 1546, BBN, November 1993.\n     [CIDR]\
    \ Fuller, V., Li, T., Varadhan, K., and J. Yu, \"Supernetting:\n             an\
    \ Address Assignment and Aggregation Strategy\", RFC 1338,\n             BARRNet,\
    \ cisco, Merit, OARnet, June 1992.\n     [IPV6] Deering, S., and R. Hinden, Editors,\
    \ \"Internet Protocol,\n             Version 6 (IPv6) Specification\", RFC 1883,\
    \ Xerox PARC,\n             Ipsilon Networks, December 1995.\n     [MULT] Deering,\
    \ S., \"Host Extensions for IP multicasting\", STD 5,\n             RFC 1112,\
    \ Stanford University, August 1989.\n     [NSAP] Carpenter, B., Editor, \"Mechanisms\
    \ for OSIN SAPs, CLNP and\n             TP over IPv6\", Work in Progress.\n"
- title: SECURITY CONSIDERATIONS
  contents:
  - "SECURITY CONSIDERATIONS\n   Security issues are not discussed in this document.\n"
- title: DOCUMENT EDITOR'S ADDRESSES
  contents:
  - "DOCUMENT EDITOR'S ADDRESSES\n   Robert M. Hinden                     Stephen\
    \ E. Deering\n   Ipsilon Networks, Inc.               Xerox Palo Alto Research\
    \ Center\n   2191 E. Bayshore Road, Suite 100     3333 Coyote Hill Road\n   Palo\
    \ Alto, CA 94303                  Palo Alto, CA 94304\n   USA                \
    \                  USA\n   Phone: +1 415 846 4604               Phone: +1 415\
    \ 812 4839\n   Fax:   +1 415 855 1414               Fax:   +1 415 812 4471\n \
    \  EMail: hinden@ipsilon.com            EMail: deering@parc.xerox.com\n"
