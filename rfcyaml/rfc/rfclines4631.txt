Abstract This document provides minor corrections to and obsoletes RFC 4327.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects for modeling the Link Management Protocol (LMP).
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Introduction Current work is under way in the IETF to specify a suite of protocols to be used as a common control plane and a separate common measurement plane.
[RFC3471] and the Link Management Protocol [RFC4204] are key components of this standardization activity.
The primary purpose of LMP is to manage traffic engineering (TE) links.
Primary goals of LMP are the maintenance of the control channel connectivity, correlation of link properties, verification of data bearing links, and detection and isolation of link faults.
We describe in this document a MIB module that can be used to manage LMP implementations.
This MIB module covers both configuration and performance monitoring aspects of LMP.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
This document uses terminology from the document describing the Link Management Protocol [RFC4204].
An "LMP adjacency" is formed between two nodes that support the same capabilities, and LMP messages are exchanged between the node pair over control channels that form this adjacency.
Several control channels can be active at the same time.
With the exception of messages related to control channel management, anytime an LMP message needs to be transferred to a neighbor node, it can be sent on any of the active control channels.
The control channels can also be used to exchange MPLS control plane information or routing information.
LMP is designed to support aggregation of one or more data bearing links into a traffic engineering (TE) link.
The data bearing links can be either component links or ports, depending on their multiplexing capability (see [RFC4204] for the distinction between port and component link).
Each TE link is associated with an LMP adjacency, and one or more control channels are used to exchange LMP messages for a particular adjacency.
In turn, control channels are used to manage the TE links associated with the LMP adjacency.
The Link Management Protocol MIB module (LMP MIB) is designed to satisfy the following requirements and constraints:
The MIB module supports the enabling and disabling of LMP capability on LMP capable interfaces of a photonic switch, optical cross connect, or router.
The MIB module is used to provide information about LMP adjacencies.
Support is provided for configuration of the keep alive and link verification parameters.
The MIB module is used to express the mapping between local and remote TE links, as well as local and remote interface identifiers for port or component link.
Performance counters are provided for measuring LMP performance on a per control channel basis.
Performance counters are also provided for measuring LMP performance on the data bearing links.
Note that the LMP MIB module goes hand in hand with the TE Link (TE  LINK STD MIB)
The TE link table, which is used to associate data bearing links to TE links, is defined in the TE Link MIB.
The TE link table in the LMP MIB module contains TE link information specific to LMP. 5.
Outline Configuring LMP through an optical device involves the following steps:  Enabling LMP on LMP capable interfaces through control channel configuration.
Optionally, specifying link verification parameters.
Configuring the data bearing links and associating them to the appropriate TE link (this association is stored in the ifStackTable of the Interfaces Group MIB).
TE links are managed by the control channels that run between the same pair of nodes (LMP adjacency).
Brief Description of MIB Objects Sections 6.1 6.8 describe objects pertaining to LMP.
The MIB objects were derived from the LMP document [RFC4204].
The remote node table is used to identify the pair of nodes that exchange LMP messages over control channels.
The control channel table is used for enabling the LMP protocol on LMP capable interfaces.
A photonic switch, optical cross connect, or router creates an entry in this table for every LMP capable interface in that device.
The control channel performance table is used for collecting LMP performance counts on a per control channel basis.
Each entry in the lmpControlChannelTable has a corresponding entry in the lmpControlChannelPerfTable.
The TE link table is used for specifying LMP information associated with TE links.
The link verification table is used for configuring the LMP link verification parameters of TE links.
For every TE link entry in the lmpTeLinkTable that supports the link verification procedure, there is a corresponding entry in the lmpLinkVerificationTable.
The TE link performance table is used for collecting LMP performance counts on a per TE link basis.
Each entry in the lmpTeLinkTable has a corresponding entry in the lmpTeLinkPerfTable.
The data bearing link table is used to specify the data bearing links that are associated with TE links.
The data bearing link performance table is used for collecting LMP performance counts on data bearing links.
Example of LMP Control Channel Setup
In this section, we provide a brief example of using the MIB objects described in Section 9 to set up an LMP control channel.
This example is not meant to illustrate every nuance of the MIB module, but it is intended as an aid to understanding some of the key concepts.
It is meant to be read after one goes through the MIB itself.
Suppose that one would like to form an LMP adjacency between two nodes using two control channels.
Suppose also that there are three data bearing links.
We also assume that the data bearing links are ports (lambdas) and that the link verification procedure is not enabled.
The following example illustrates which rows and corresponding objects might be created to accomplish this.
First, LMP must be enabled between the pair of nodes.
} Then, the control channels must be set up.
These are created in the lmpControlChannelTable.
Next, the three data bearing links are created.
For each data  bearing link, an ifEntry with the same ifIndex needs to be created beforehand.
} Note that the data bearing link type (lmpDataLinkType) does not need to be provisioned, as it is automatically populated by the node.
The definition of the protection role (primary or secondary) for the data bearing links is stored in the componentLinkTable of the TE Link MIB module [RFC4220].
Then, a TE link is created as an ifEntry with ifType teLink in the ifTable.
Once the TE link is created in the ifTable, a TE link entry is created in the LMP MIB module to specify TE link information specific to LMP.
} The association between the data bearing links and the TE links is stored in the ifStackTable
In parallel with the entry created in the lmpTeLinkTable, an entry may be created in the teLinkTable of the TE Link MIB module [RFC4220].
Application of the Interfaces Group to
LMP The Interfaces Group [RFC2863] defines generic managed objects for managing interfaces.
This memo contains the media specific extensions to the Interfaces Group for managing LMP control channels that are modeled as interfaces.
If the control channel as defined in the lmpControlChannelTable is modeled as an ifEntry, then the following definition applies.
An lmpControlChannelTable entry is designated as being represented as an Interfaces MIB ifEntry if the lmpControlChannelEntry object lmpCcIsIf is set to true (1).
In this case, the control channel SHOULD be modeled as an ifEntry and provide appropriate interface stacking, as defined below.
This memo assumes the interpretation of the Interfaces Group to be in accordance with [RFC2863], which states that the interfaces table (ifTable) contains information on the managed resource's interfaces and that each sub layer below the internetwork layer of a network interface is considered an interface.
Since the LMP interface only carries control traffic, it is considered to be below the internetwork layer.
Thus, the LMP interface may be represented as an entry in the ifTable.
The interrelation of entries in the ifTable is defined by Interfaces Stack Group defined in [RFC2863].
Note that if the underlying layer provides multiple access to its media (i.e., Ethernet), then it is possible to stack multiple LMP interfaces on top of this interface in parallel.
Note that it is not a requirement that LMP control channels be modeled as interfaces.
It is acceptable that control channels simply exist as logical connections between adjacent LMP capable nodes.
In this case, lmpCcIsIf is set to false(2), and no corresponding entry is made in the ifTable.
Support of the LMP Layer by ifTable
Some specific interpretations of ifTable for the LMP layer follow.
Each LMP interface may be represented by an ifEntry.
This number has been assigned by the IANA.
The total bandwidth in bits per second for use by the LMP layer.
This variable indicates the administrator's intent as to whether LMP should be enabled, disabled, or running in some diagnostic testing mode on this interface.
This value reflects the actual or operational status of LMP on this interface.
The number of received octets over the interface; i.e., the number of octets received as LMP packets.
The number of transmitted octets over the interface; i.e., the number of octets transmitted as LMP packets.
The number of LMP packets dropped due to uncorrectable errors.
The number of received packets discarded during packet header validation, including packets with unrecognized label values.
ifLinkUpDownTrapEnable Default is disabled (2).
The 64 bit version of ifInOctets; supported if required by the compliance statements in [RFC2863].
The 64 bit version of ifOutOctets; supported if required by the compliance statements in [RFC2863].
The nonvolatile 'alias' name for the interface, as specified by a network manager.
This MIB module IMPORTs objects from [RFC2578]
, [RFC2579], [RFC2580], [RFC2863], [RFC4001], and [RFC4220], and it has REFERENCE clauses to [RFC4204], [RFC4207], [RFC4209], [RFC3471], and [RFC2914].
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, transmission, Unsigned32,
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
Jonathan P. Lang Email:  jplang@ieee.org
Adrian Farrel Email:  adrian@olddog.co.uk" DESCRIPTION "
This version of the MIB module is part of RFC 4631; see the RFC itself for full legal notices.
This MIB module contains managed object definitions for the Link Management Protocol (LMP) as defined in 'Link Management Protocol'."
Fixes textual descriptions of TruthValue settings such that True is always 1 and False is always 2.
Adds punctuation to REFERENCE clauses.
"The interval delay, in milliseconds."
"The retransmission interval delay in milliseconds."
"Represents a Node ID in network byte order.
Node ID is an address of type IPv4."
REFERENCE "Section 1.1 of Link Management Protocol, RFC 4204.
Top level components of this MIB   Notifications lmpNotifications
} MAX ACCESS    read write
The desired operational status of LMP on the node.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
LMP Neighbor Table lmpNbrTable OBJECT TYPE
"This table specifies the neighbor node(s) to which control channels may be established."
An entry in this table is created by a LMP enabled device for every pair of nodes that can establish control channels.
"This is a unique index for an entry in the LmpNbrTable.
This value represents the remote Node ID."
"This object specifies the initial retransmission interval that is used for the retransmission of messages that require acknowledgement.
This object, along with lmpNbrRetryLimit, is used to implement the congestion handling mechanism defined in Section 10 of the Link Management Protocol specification, which is based on RFC 2914.
" REFERENCE "Link Management Protocol, RFC 4204.
Congestion Control Principles, RFC 2914."
"This object specifies the maximum number of times a message is transmitted without being acknowledged.
A value of 0 is used to indicate that a node should never stop retransmission.
This object, along with lmpNbrRetransmitInterval, is used to implement the congestion handling mechanism as defined in Section 10 of the Link Management Protocol specification, which is based on RFC 2914.
" REFERENCE "Link Management Protocol, RFC 4204.
Congestion Control Principles, RFC 2914."
"This object governs the speed with which the sender increases the retransmission interval, as explained in Section 10 of the Link Management Protocol specification, which is based on RFC 2914.
This value is a power used to express the exponential backoff.
The ratio of two successive retransmission intervals is (1   Delta)."
REFERENCE "Link Management Protocol, RFC 4204.
Congestion Control Principles, RFC 2914."
"The desired operational status of LMP to this remote node."
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if the status is active(1).
All read create objects must have valid and consistent values before the row can be activated."
"The storage type for this conceptual row in the lmpNbrTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
LmpInterval MAX ACCESS    read write
"This object specifies the default value for the HelloInterval parameter used in the Hello protocol keep alive phase.
It indicates how frequently LMP Hello messages will be sent.
It is used as the default value for lmpCcHelloInterval.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
REFERENCE "Link Management Protocol, RFC 4204."
LmpInterval MAX ACCESS    read write
"This object specifies the default minimum value for the HelloInterval parameter.
It is used as a default value for lmpCcHelloIntervalMin.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
LmpInterval MAX ACCESS    read write
"This object specifies the default maximum value for the HelloInterval parameter.
It is used as a default value for lmpCcHelloIntervalMax.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
LmpInterval MAX ACCESS    read write
"This object specifies the default HelloDeadInterval parameter to use in the Hello protocol keep alive phase.
It indicates how long a device should wait before declaring the control channel dead.
The HelloDeadInterval parameter should be at least three times the value of HelloInterval.
It is used as a default value for lmpCcHelloDeadInterval.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
REFERENCE "Link Management Protocol, RFC 4204."
LmpInterval MAX ACCESS    read write
"This object specifies the default minimum value for the HelloDeadInterval parameter.
It is used as a default value for lmpCcHelloDeadIntervalMin.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
LmpInterval MAX ACCESS    read write
"This object specifies the default maximum value for the HelloDeadInterval parameter.
It is used as a default value for lmpCcHelloDeadIntervalMax.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"This table specifies LMP control channel information."
"An entry in this table is created by an LMP enabled device for every control channel.
Whenever a new entry is created with lmpCcIsIf set to true(1), a corresponding entry is created in ifTable as well (see RFC 2863).
"This value represents the local control channel identifier.
The control channel identifier is a non zero 32 bit number."
"If lmpCcIsIf is set to true(1), this object carries the index into the ifTable of the entry that represents the LMP interface over which LMP will transmit its traffic.
If this object is set to zero but lmpCcIsIf is set to true(1), the control channel is not currently associated with any underlying interface, and the control channel's operational status must not be up(1); nor should the control channel forward or receive traffic.
If lmpCcIsIf is set to false(2), this object should be set to zero and ignored."
In implementations where the control channels are modeled as interfaces, the value of this object is true(1), and this control channel is represented by an interface in the interfaces group table as indicated by the value of lmpCcUnderlyingIfIndex.
If control channels are not modeled as interfaces, the value of this object is false(2), and there is no corresponding interface for this control channel in the interfaces group table; the value of lmpCcUnderlyingIfIndex should be ignored."
"This is the Node ID of the control channel remote node.
This value either is configured or gets created by the node when a Config message is received or when an outgoing Config message is acknowledged by the remote node."
"This value represents the remote control channel identifier (32 bit number).
It is determined during the negotiation phase.
A value of zero means that the remote control channel identifier has not yet been learned."
"This value represents the remote control channel IP address type.
In point to point configuration, this value can be set to unknown(0)."
"This value represents the remote control channel Internet address for numbered control channel.
The type of this address is determined by lmpCcRemoteAddressType.
The control channel must be numbered on non point to point configuration.
For point to point configuration, the remote control channel address can be of type unknown, in which case this object must be a zero length string.
The lmpCcRemoteId object then identifies the unnumbered address."
"The role that this node should take during establishment of this control channel.
An active node will initiate establishment.
A passive node will wait for the remote node to initiate.
A pair of nodes that both take the passive role will never establish communications."
"This object indicates whether the control channel must use authentication.
REFERENCE "Link Management Protocol, RFC 4204."
"This object specifies the value of the HelloInterval parameter.
The default value for this object should be set to lmpCcHelloIntervalDefault."
"This object specifies the minimum value for the HelloInterval parameter.
The default value for this object should be set to lmpCcHelloIntervalMinDefault."
"This object specifies the maximum value for the HelloInterval parameter.
The default value for this object should be set to lmpCcHelloIntervalMaxDefault."
"Once the control channel is active, this object represents the negotiated HelloInterval value."
{ lmpControlChannelEntry 13 } lmpCcHelloDeadInterval OBJECT
"This object specifies the value of the HelloDeadInterval parameter.
The default value for this object should be set to lmpCcHelloDeadIntervalDefault."
"This object specifies the minimum value for the HelloDeadInterval parameter.
The default value for this object should be set to lmpCcHelloDeadIntervalMinDefault."
"This object specifies the maximum value for the HelloDeadInterval parameter.
The default value for this object should be set to lmpCcHelloIntervalMaxDefault."
"Once the control channel is active, this object represents the negotiated HelloDeadInterval value."
The value of sysUpTime at the time the control channel entered its current operational state.
If the current state was entered prior to the last re initialization of the local network management subsystem, then this object contains a zero value."
"The desired operational status of this control channel."
{ lmpControlChannelEntry 19 } lmpCcOperStatus OBJECT
The actual operational status of this control channel."
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if the status is active(1).
All read create objects must have valid and consistent values before the row can be activated."
"The storage type for this conceptual row in the lmpControlChannelTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
End of lmpControlChannelTable   LMP Control Channel Performance Table
"This table specifies LMP control channel performance counters."
"An entry in this table is created by a LMP enabled device for every control channel.
lmpCcCounterDiscontinuityTime is used to indicate potential discontinuity for all counter objects in this table.
"The total number of LMP message octets received on the control channel."
"The number of inbound packets that were chosen to be discarded even though no errors had been detected.
One possible reason for discarding such a packet could be to free up buffer space."
{ lmpControlChannelPerfEntry 2 } lmpCcInErrors OBJECT
"The number of outbound packets that were chosen to be discarded even though no errors had been detected to prevent their being transmitted.
One possible reason for discarding such a packet could be to free up buffer space."
"This object counts the number of Config messages that have been received on this control channel."
"This object counts the number of Config messages that have been sent on this control channel."
"This object counts the number of Config messages that have been retransmitted over this control channel."
"This object counts the number of ConfigAck messages that have been received on this control channel."
"This object counts the number of ConfigAck messages that have been sent on this control channel."
{ lmpControlChannelPerfEntry 11 } lmpCcConfigNackReceived OBJECT TYPE SYNTAX
"This object counts the number of ConfigNack messages that have been received on this control channel."
} lmpCcConfigNackSent OBJECT TYPE SYNTAX
"This object counts the number of ConfigNack messages that have been sent on this control channel."
"This object counts the number of Hello messages that have been received on this control channel."
"This object counts the number of Hello messages that have been sent on this control channel."
"This object counts the number of BeginVerify messages that have been received on this control channel."
"This object counts the number of BeginVerify messages that have been sent on this control channel."
} lmpCcBeginVerifyRetransmit OBJECT TYPE SYNTAX
"This object counts the number of BeginVerify messages that have been retransmitted over this control channel."
"This object counts the number of BeginVerifyAck messages that have been received on this control channel."
"This object counts the number of BeginVerifyAck messages that have been sent on this control channel."
{ lmpControlChannelPerfEntry 20 } lmpCcBeginVerifyNackReceived OBJECT TYPE SYNTAX
"This object counts the number of BeginVerifyNack messages that have been received on this control channel."
"This object counts the number of BeginVerifyNack messages that have been sent on this control channel."
{ lmpControlChannelPerfEntry 22 } lmpCcEndVerifyReceived OBJECT TYPE SYNTAX
"This object counts the number of EndVerify messages that have been received on this control channel."
"This object counts the number of EndVerify messages that have been sent on this control channel."
"This object counts the number of EndVerify messages that have been retransmitted over this control channel."
"This object counts the number of EndVerifyAck messages that have been received on this control channel."
"This object counts the number of EndVerifyAck messages that have been sent on this control channel."
"This object counts the number of TestStatusSuccess messages that have been received on this control channel."
"This object counts the number of TestStatusSuccess messages that have been sent on this control channel."
"This object counts the number of TestStatusSuccess messages that have been retransmitted over this control channel."
"This object counts the number of TestStatusFailure messages that have been received on this control channel."
"This object counts the number of TestStatusFailure messages that have been sent on this control channel."
"This object counts the number of TestStatusFailure messages that have been retransmitted over this control channel."
{ lmpControlChannelPerfEntry 33 } lmpCcTestStatusAckReceived OBJECT TYPE SYNTAX
"This object counts the number of TestStatusAck messages that have been received on this control channel."
{ lmpControlChannelPerfEntry 34 } lmpCcTestStatusAckSent OBJECT TYPE SYNTAX
"This object counts the number of TestStatusAck messages that have been sent on this control channel."
{ lmpControlChannelPerfEntry 35 } lmpCcLinkSummaryReceived OBJECT TYPE SYNTAX
"This object counts the number of LinkSummary messages that have been received on this control channel."
"This object counts the number of LinkSummary messages that have been sent on this control channel."
"This object counts the number of LinkSummary messages that have been retransmitted over this control channel."
"This object counts the number of LinkSummaryAck messages that have been received on this control channel."
"This object counts the number of LinkSummaryAck messages that have been sent on this control channel."
"This object counts the number of LinkSummaryNack messages that have been received on this control channel."
"This object counts the number of LinkSummaryNack messages that have been sent on this control channel."
"This object counts the number of ChannelStatus messages that have been received on this control channel."
"This object counts the number of ChannelStatus messages that have been sent on this control channel."
} lmpCcChannelStatusRetransmit OBJECT TYPE SYNTAX
"This object counts the number of ChannelStatus messages that have been retransmitted on this control channel."
{ lmpControlChannelPerfEntry 45 } lmpCcChannelStatusAckReceived OBJECT TYPE SYNTAX
"This object counts the number of ChannelStatusAck messages that have been received on this control channel."
"This object counts the number of ChannelStatus messages that have been sent on this control channel."
{ lmpControlChannelPerfEntry 47 } lmpCcChannelStatusReqReceived OBJECT TYPE SYNTAX
"This object counts the number of ChannelStatusRequest messages that have been received on this control channel."
"This object counts the number of ChannelStatusRequest messages that have been sent on this control channel."
"This object counts the number of ChannelStatusRequest messages that have been retransmitted on this control channel."
"This object counts the number of ChannelStatusResponse messages that have been received on this control channel."
"This object counts the number of ChannelStatusResponse messages that have been sent on this control channel."
The relevant counters are the specific instances associated with this control channel of any Counter32 object contained in the lmpControlChannelPerfTable.
If no such discontinuities have occurred since the last re  initialization of the local management subsystem, then this object contains a zero value."
LMP TE Link Table lmpTeLinkTable
"This table specifies the LMP specific TE link information.
Overall TE link information is kept in three separate tables: ifTable for interface specific information, lmpTeLinkTable for LMP specific information, and teLinkTable for generic TE link information.
ifIndex is the common index to all tables."
"An entry in this table exists for each ifEntry with an ifType of teLink(200) that is managed by LMP.
An ifEntry with an ifIndex must exist before the corresponding lmpTeLinkEntry is created.
If a TE link entry in the ifTable is destroyed, then so is the corresponding entry in the lmpTeLinkTable.
The administrative status value is controlled from the ifEntry.
Setting the administrative status to testing prompts LMP to start link verification on the TE link.
Information about the TE link that is not LMP specific is contained in the teLinkTable of the TE LINK STD MIB MIB module.
"This is the Node ID of the TE link remote node.
This value may be learned during the control channel parameter negotiation phase (in the Config message).
Node ID is an address whose type must be IPv4."
{ lmpTeLinkEntry 1 } lmpTeLinkVerification OBJECT TYPE SYNTAX
"This object indicates whether the LMP link verification procedure is enabled for this TE link.
REFERENCE "Link Management Protocol, RFC 4204."
"This object indicates whether the LMP fault management procedure is enabled on this TE link.
REFERENCE "Link Management Protocol, RFC 4204."
} lmpTeLinkDwdm OBJECT TYPE SYNTAX
"This object indicates whether the LMP DWDM procedure is enabled on this TE link.
REFERENCE "Link Management Protocol (LMP) for Dense Wavelength Division Multiplexing (DWDM)
Optical Line Systems, RFC 4209."
, testing(3), init(4), degraded(5) }
The actual operational status of this TE link.
The status is set to testing when the TE link is performing link verification.
A degraded state indicates that there is no active control channel between the pair of nodes that form the endpoints of the TE link, but that at least one data bearing link on the TE link is allocated."
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if the status is active(1).
All read create objects must have valid and consistent values before the row can be activated."
"The storage type for this conceptual row in the lmpTeLinkTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
"This object indicates how often the link verification procedure is executed.
The interval is in milliseconds.
A value of 0 is used to indicate that the link verification procedure should not be executed.
The interval specified in this object should be large enough to allow the verification procedure to be completed before the start of the next interval.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
LMP Link Verification Table lmpLinkVerificationTable OBJECT TYPE
"This table specifies TE link information associated with the LMP verification procedure."
"An entry in this table is created by an LMP enabled device for every TE link that supports the LMP verification procedure.
"This object specifies the VerifyInterval parameter used in the LMP link verification process.
It indicates the interval at which the Test messages are sent."
REFERENCE "Link Management Protocol, RFC 4204."
"This object specifies the VerifyDeadInterval parameter used in the verification of the physical connectivity of data  bearing links.
It specifies the observation period used to detect a Test message at the remote node.
REFERENCE "Link Management Protocol, RFC 4204."
"This defines the transport mechanism for the Test messages.
The scope of this bit mask is restricted to each link encoding type.
The local node will set the bits corresponding to the various mechanisms it can support for transmitting LMP Test messages.
The receiver chooses the appropriate mechanism in the BeginVerifyAck message."
REFERENCE "Link Management Protocol, RFC 4204 Synchronous Optical Network
(SONET)/Synchronous Digital Hierarchy (SDH) Encoding for Link Management Protocol (LMP)
"A value of true(1) for this object indicates that the verification process checks all unallocated links; otherwise, only the new ports or component links that have been added to this TE link are verified."
"This is the transmission rate of the data link over which the Test messages will be transmitted and is expressed in bytes per second."
REFERENCE "Link Management Protocol, RFC 4204."
"This value corresponds to the wavelength at which the Test messages will be transmitted and is measured in nanometers (nm).
If each data bearing link corresponds to a separate wavelength, then this value should be set to 0.
REFERENCE "Link Management Protocol, RFC 4204."
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if the status is active(1).
All read create objects must have valid and consistent values before the row can be activated."
"The storage type for this conceptual row in the lmpLinkVerificationTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
End of lmpLinkVerificationTable   LMP TE Link Performance Table lmpTeLinkPerfTable
"This table specifies LMP TE link performance counters."
"An entry in this table is created by an LMP enabled device for every TE link.
lmpTeCounterDiscontinuityTime is used to indicate potential discontinuity for all counter objects in this table.
"This object counts the number of BeginVerify messages that have been received for this TE link."
"This object counts the number of BeginVerify messages that have been sent for this TE link."
"This object counts the number of BeginVerify messages that have been retransmitted for this TE link."
} lmpTeBeginVerifyAckReceived OBJECT TYPE SYNTAX
"This object counts the number of BeginVerifyAck messages that have been received for this TE link."
"This object counts the number of BeginVerifyAck messages that have been sent for this TE link."
"This object counts the number of BeginVerifyNack messages that have been received for this TE link."
"This object counts the number of BeginVerifyNack messages that have been sent for this TE link."
"This object counts the number of EndVerify messages that have been received for this TE link."
"This object counts the number of EndVerify messages that have been sent for this TE link."
"This object counts the number of EndVerify messages that have been retransmitted over this control channel."
"This object counts the number of EndVerifyAck messages that have been received for this TE link."
"This object counts the number of EndVerifyAck messages that have been sent for this TE link."
"This object counts the number of TestStatusSuccess messages that have been received for this TE link."
"This object counts the number of TestStatusSuccess messages that have been sent for this TE link."
"This object counts the number of TestStatusSuccess messages that have been retransmitted for this TE link."
"This object counts the number of TestStatusFailure messages that have been received for this TE link."
"This object counts the number of TestStatusFailure messages that have been sent for this TE link."
"This object counts the number of TestStatusFailure messages that have been retransmitted on this TE link."
"This object counts the number of TestStatusAck messages that have been received for this TE link."
"This object counts the number of TestStatusAck messages that have been sent for this TE link."
"This object counts the number of LinkSummary messages that have been received for this TE link."
"This object counts the number of LinkSummary messages that have been sent for this TE link."
{ lmpTeLinkPerfEntry 24 } lmpTeLinkSummaryRetransmit OBJECT TYPE SYNTAX
"This object counts the number of LinkSummary messages that have been retransmitted over this control channel."
"This object counts the number of LinkSummaryAck messages that have been received for this TE link."
"This object counts the number of LinkSummaryAck messages that have been sent for this TE link."
"This object counts the number of LinkSummaryNack messages that have been received for this TE link."
"This object counts the number of LinkSummaryNack messages that have been sent for this TE link."
"This object counts the number of ChannelStatus messages that have been received for this TE link."
"This object counts the number of ChannelStatus messages that have been sent for this TE link."
"This object counts the number of ChannelStatus messages that have been retransmitted for this TE link."
"This object counts the number of ChannelStatusAck messages that have been received for this TE link."
"This object counts the number of ChannelStatus messages that have been sent for this TE link."
"This object counts the number of ChannelStatusRequest messages that have been received for this TE link."
"This object counts the number of ChannelStatusRequest messages that have been sent for this TE link."
"This object counts the number of ChannelStatusRequest messages that have been retransmitted for this TE link."
"This object counts the number of ChannelStatusResponse messages that have been received for this TE link."
"This object counts the number of ChannelStatusResponse messages that have been sent for this TE link."
The value of sysUpTime on the most recent occasion at which one or more of this TE link's counters suffered a discontinuity.
The relevant counters are the specific instances associated with this TE link of any Counter32 object contained in the lmpTeLinkPerfTable.
If no such discontinuities have occurred since the last re  initialization of the local management subsystem, then this object contains a zero value."
LMP Data Link Table lmpDataLinkTable
"This table specifies the data bearing links managed by the LMP."
An entry in this table exists for each ifEntry that represents a data bearing link.
An ifEntry with an ifIndex must exist before the corresponding lmpDataLinkEntry is created.
If an entry representing the data bearing link is destroyed in the ifTable, then so is the corresponding entry in the lmpDataLinkTable.
The administrative status value is controlled from the ifEntry.
The index to this table is also used to get information in the componentLinkTable of the TE LINK STD MIB MIB module.
"This attribute specifies whether this data bearing link is a port or a component link.
Component links are multiplex capable, whereas ports are not multiplex capable."
REFERENCE "Link Management Protocol, RFC 4204."
{ lmpDataLinkEntry 1 } lmpDataLinkAddressType OBJECT TYPE SYNTAX
"This attribute specifies the data bearing link IP address type.
If the data bearing link is unnumbered, the address type must be set to unknown(0)."
The type of this address is determined by the value of lmpDataLinkAddressType object.
For IPv4 and IPv6 numbered links, this object represents the local IP address associated with the data bearing link.
For an unnumbered link, the local address is of type unknown, and this object is set to the zero length string; the ifIndex object then identifies the unnumbered address."
The remote Internet address for numbered data bearing links.
The type of this address is determined by the lmpDataLinkAddressType object.
For IPv4 and IPv6 numbered links, this object represents the remote IP address associated with the data bearing link.
For an unnumbered link, the remote address is of type unknown, and this object is set to the zero length string; the lmpDataLinkRemoteIfId object then identifies the unnumbered address.
This information is either configured manually or communicated by the remote node during the link verification procedure."
Interface identifier of the remote end point.
This information is either configured manually or communicated by the remote node during the link verification procedure."
"The encoding type of the data bearing link."
REFERENCE "Generalized MPLS Signaling Functional Description, RFC 3471."
"The actual operational status of this data bearing link (active FSM).
" REFERENCE "Link Management Protocol, RFC 4204."
" REFERENCE "Link Management Protocol, RFC 4204."
"This variable is used to create, modify, and/or delete a row in this table.
None of the writable objects in a row can be changed if the status is active(1).
All read create objects must have valid and consistent values before the row can be activated."
"The storage type for this conceptual row in the lmpDataLinkTable.
Conceptual rows having the value 'permanent' need not allow write access to any columnar object in the row."
LMP Data Link Performance Table lmpDataLinkPerfTable
"This table specifies the data bearing links LMP performance counters."
An entry in this table contains information about the LMP performance counters for the data bearing links.
lmpDataLinkDiscontinuityTime is used to indicate potential discontinuity for all counter objects in this table.
Counter32, lmpDataLinkDiscontinuityTime   TimeStamp } lmpDataLinkTestReceived OBJECT TYPE SYNTAX
"This object counts the number of Test messages that have been received on this data bearing link."
"This object counts the number of Test messages that have been sent on this data bearing link."
"This object counts the number of data bearing link tests that were successful on the active side of this data  bearing link."
"This object counts the number of data bearing link tests that failed on the active side of this data bearing link."
"This object counts the number of data bearing link tests that were successful on the passive side of this data  bearing link."
"This object counts the number of data bearing link tests that failed on the passive side of this data bearing link."
The value of sysUpTime on the most recent occasion at which one or more of this data bearing link's counters suffered a discontinuity.
The relevant counters are the specific instances associated with this data bearing link of any Counter32 object contained in the lmpDataLinkPerfTable.
If no such discontinuities have occurred since the last re  initialization of the local management subsystem, then this object contains a zero value."
The LMP notification rate depends on the size of the network, the type of links, the network configuration, the reliability of the network, etc.
When this MIB was designed, care was taken to minimize the amount of notifications generated for LMP purposes.
Wherever possible, notifications are state driven, meaning that the notifications are sent only when the system changes state.
The only notifications that are repeated and that could cause a problem as far as congestion is concerned are the ones associated with data link verification.
Without any considerations to handling of these notifications, a problem may arise if the number of data links is high.
Since the data link verification notifications can happen only once per data link per link verification interval, the notification rate should be sustainable if one chooses an appropriate link verification interval for a given network configuration.
For instance, a network of 100 nodes with 5 links of 128 wavelengths each and a link verification of 1 minute, where no more than 10% of the links failed at any given time, would have 1 notification per second sent from each node, or 100 notifications per second for the whole network.
The rest of the notifications are negligible compared to this number.
To alleviate the congestion problem, the lmpNotificationMaxRate object can be used to implement a throttling mechanism.
It is also possible to enable/disable certain type of notifications.
This variable indicates the maximum number of notifications issued per minute.
If events occur more rapidly, the implementation may simply fail to emit these notifications during that period or may queue them until an appropriate time.
A value of 0 means that no throttling is applied and events may be notified at the rate at which they occur.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"If this object is true(1), then it enables the generation of lmpTeLinkPropertyMismatch and lmpDataLinkPropertyMismatch notifications; otherwise, these notifications are not emitted.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"If this object is true(1), then it enables the generation of lmpUnprotected notifications; otherwise, these notifications are not emitted.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"If this object is true(1), then it enables the generation of lmpControlChannelUp and lmpControlChannelDown notifications; otherwise, these notifications are not emitted.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"If this object is true(1), then it enables the generation of lmpTeLinkDegraded and lmpTeLinkNotDegraded notifications; otherwise, these notifications are not emitted.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
"If this object is true(1), then it enables the generation of lmpDataLinkVerificationFailure notification; otherwise, these notifications are not emitted.
Implementations should save the value of this object in persistent memory so that it survives restarts or reboot."
Notifications   Link Property Mismatch Notifications
"This notification is generated when a TE link property mismatch is detected on the node.
The received remote TE link ID of the misconfigured TE link is represented by either teLinkRemoteIpAddr or teLinkIncomingIfId, depending on whether the TE link is numbered or unnumbered.
This notification should not be sent unless lmpLinkPropertyNotificationsEnabled is true(1).
It is recommended that this notification be reported only the first time a mismatch is detected.
Otherwise, for a given TE link, this notification can occur no more than once per verification interval (lmpGlobalLinkVerificationInterval)."
"This notification is generated when a data bearing link property mismatch is detected on the node.
lmpDataLinkType is used to identify the local identifiers associated with the data link.
(The data link interface index can be used to determine the TE link interface index, as this relationship is captured in the interface stack table.)
The remote entity interface ID is the remote entity interface ID received in the LinkSummary message.
This notification should not be sent unless lmpLinkPropertyNotificationsEnabled is true(1).
It is recommended that this notification be reported only the first time a mismatch is detected.
Otherwise, for a given data link, this notification can occur no more than once per verification interval (lmpGlobalLinkVerificationInterval)."
"This notification is generated when there is more than one control channel between LMP neighbors and the last redundant control channel has failed.
If the remaining operational control channel fails, then there will be no more control channels between the pair of nodes and all the TE links between the pair of nodes, will go to degraded state.
This notification should not be sent unless lmpUnprotectedNotificationsEnabled is set to true(1)."
Control Channel Notifications lmpControlChannelUp NOTIFICATION
"This notification is generated when a control channel transitions to the up operational state.
This notification should not be sent unless lmpCcUpDownNotificationsEnabled is true(1)."
"This notification is generated when a control channel transitions out of the up operational state.
This notification should not be sent unless lmpCcUpDownNotificationsEnabled is true(1)."
"This notification is generated when a lmpTeLinkOperStatus object for a TE link enters the degraded state.
This notification should not be sent unless lmpTeLinkNotificationsEnabled is true(1)."
"This notification is generated when a lmpTeLinkOperStatus object for a TE link leaves the degraded state.
This notification should not be sent unless lmpTeLinkNotificationsEnabled is true(1)."
Data bearing Link Notification lmpDataLinkVerificationFailure
"This notification is generated when a data bearing link verification fails.
This notification should not be sent unless lmpDataLinkNotificationsEnabled is true(1).
For a given data link, this notification can occur no more than once per verification interval (lmpGlobalLinkVerificationInterval)."
MODULE COMPLIANCE STATUS current DESCRIPTION "Compliance statement for agents that support the configuration and monitoring of LMP MIB.
"This group is mandatory for devices that support control channels that are not interfaces, in addition to lmpControlChannelGroup.
The following constraint applies: lmpCcIsIf must at least be read only, returning false(2)."
This group is mandatory for devices that support control channels that are interfaces, in addition to lmpControlChannelGroup.
The following constraint applies: lmpCcIsIf must at least be read only, returning true(1)."
GROUP lmpLinkVerificationGroup DESCRIPTION "This group is mandatory for devices that support the link verification procedure."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
} DESCRIPTION "Only ipv4(1) and ipv6(2)
address types need to be supported for non point to point configurations."
The size of the IP address depends on the address type."
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
, down(2) } DESCRIPTION "
A value of configSnd(3), configRcv(4), active(5), or goingDown(6) need not be supported."
The testing(3) and init(4) state need not be supported."
RowStatus { active(1), notInService(2) } WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
A value of testing(4) need not be supported.
} DESCRIPTION "A value of psvTst(4)
WRITE SYNTAX RowStatus { active(1), notInService(2), createAndGo(4), destroy(6
) } DESCRIPTION "Support for notReady(3) and createAndWait(5) is not required."
The mandatory groups have to be implemented   by all LMP enabled devices.
However, they may all be supported   as read only objects in the case where manual   configuration is not supported.
This group is mandatory for devices that support control channels that are not interfaces, in addition to lmpControlChannelGroup.
The following constraint applies: lmpCcIsIf must at least be read only, returning false(2)."
This group is mandatory for devices that support control channels that are interfaces, in addition to lmpControlChannelGroup.
The following constraint applies: lmpCcIsIf must at least be read only, returning true(1)."
GROUP lmpLinkVerificationGroup DESCRIPTION "This group is mandatory for devices that support the link verification procedure."
lmpAdminStatus MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
lmpCcHelloIntervalDefaultMin MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
lmpCcHelloDeadIntervalDefaultMin MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
lmpNbrRetransmitInterval MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required.
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "Write access is not required, and
active(1) is the only status that needs to be supported."
"Write access is not required."
lmpCcUnderlyingIfIndex MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION "
Only ipv4(1) and ipv6(2) address types need to be supported for non point to point configurations."
MIN ACCESS  read only DESCRIPTION "
The size of the IP address depends on the address type."
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
RowStatus { active(1) } MIN ACCESS  read only DESCRIPTION "Write access is not required, and
active(1) is the only status that needs to be supported."
, down(2) } DESCRIPTION "
A value of configSnd(3), configRcv(4), active(5), or goingDown(6) need not be supported.
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required.
"Write access is not required."
"Write access is not required if the link verification procedure is enabled."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required.
The testing(3) and init(4) state need not be supported."
RowStatus { active(1) } MIN ACCESS  read only DESCRIPTION "Write access is not required, and
active(1) is the only status that needs to be supported.
"Write access is not required."
lmpLinkVerifyTransmissionRate MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
active(1) is the only status that needs to be supported."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
} MIN ACCESS  read only DESCRIPTION "
Only ipv4(1) and ipv6(2) address types need to be supported for numbered links.
For unnumbered links, the unknown(0) address type needs to be supported."
MIN ACCESS  read only DESCRIPTION "
The size of the data bearing link IP address depends on the type of data bearing link.
Data bearing link IP address size is zero if the link is unnumbered, four if the link IP address is IPv4, and sixteen if the link IP address is IPv6."
MIN ACCESS  read only DESCRIPTION
"Write access is not required if the link verification procedure is enabled."
"Write access is not required if the link verification procedure is enabled."
"Write access is not required."
A value of testing(4) need not be supported.
} DESCRIPTION "A value of psvTst(4)
MIN ACCESS  read only DESCRIPTION "Write access is not required, and
active(1) is the only status that needs to be supported.
"Write access is not required."
GROUP OBJECTS { lmpAdminStatus, lmpOperStatus, lmpNbrAdminStatus, lmpNbrOperStatus, lmpNbrRowStatus, lmpNbrStorageType, lmpUnprotectedNotificationsEnabled, lmpNotificationMaxRate } STATUS
current DESCRIPTION "Collection of objects that represent LMP node configuration."
GROUP OBJECTS { lmpLinkPropertyNotificationsEnabled } STATUS
current DESCRIPTION "Collection of objects used to configure the link property correlation procedure."
OBJECT GROUP OBJECTS { lmpCcInOctets, lmpCcInDiscards, lmpCcInErrors, lmpCcOutOctets, lmpCcOutDiscards, lmpCcOutErrors, lmpCcConfigReceived, lmpCcConfigSent, lmpCcConfigRetransmit, lmpCcConfigAckReceived, lmpCcConfigAckSent,
lmpCcConfigNackSent, lmpCcConfigNackReceived, lmpCcHelloReceived, lmpCcHelloSent, lmpCcBeginVerifyReceived, lmpCcBeginVerifySent, lmpCcBeginVerifyRetransmit, lmpCcBeginVerifyAckReceived, lmpCcBeginVerifyAckSent, lmpCcBeginVerifyNackReceived, lmpCcBeginVerifyNackSent, lmpCcEndVerifyReceived, lmpCcEndVerifySent, lmpCcEndVerifyRetransmit, lmpCcEndVerifyAckReceived, lmpCcEndVerifyAckSent, lmpCcTestStatusSuccessReceived, lmpCcTestStatusSuccessSent, lmpCcTestStatusSuccessRetransmit, lmpCcTestStatusFailureReceived, lmpCcTestStatusFailureSent, lmpCcTestStatusFailureRetransmit, lmpCcTestStatusAckReceived, lmpCcTestStatusAckSent, lmpCcLinkSummaryReceived, lmpCcLinkSummarySent, lmpCcLinkSummaryRetransmit, lmpCcLinkSummaryAckReceived, lmpCcLinkSummaryAckSent, lmpCcLinkSummaryNackReceived, lmpCcLinkSummaryNackSent, lmpCcChannelStatusReceived, lmpCcChannelStatusSent, lmpCcChannelStatusRetransmit, lmpCcChannelStatusAckReceived, lmpCcChannelStatusAckSent, lmpCcChannelStatusReqReceived, lmpCcChannelStatusReqSent, lmpCcChannelStatusReqRetransmit, lmpCcChannelStatusRspReceived, lmpCcChannelStatusRspSent, lmpCcCounterDiscontinuityTime, lmpTeInOctets, lmpTeOutOctets, lmpTeBeginVerifyReceived, lmpTeBeginVerifySent, lmpTeBeginVerifyRetransmit, lmpTeBeginVerifyAckReceived, lmpTeBeginVerifyAckSent, lmpTeBeginVerifyNackReceived, lmpTeBeginVerifyNackSent, lmpTeEndVerifyReceived, lmpTeEndVerifySent, lmpTeEndVerifyRetransmit, lmpTeEndVerifyAckReceived, lmpTeEndVerifyAckSent, lmpTeTestStatusSuccessReceived, lmpTeTestStatusSuccessSent, lmpTeTestStatusSuccessRetransmit, lmpTeTestStatusFailureReceived, lmpTeTestStatusFailureSent, lmpTeTestStatusFailureRetransmit, lmpTeTestStatusAckReceived, lmpTeTestStatusAckSent, lmpTeLinkSummaryReceived, lmpTeLinkSummarySent, lmpTeLinkSummaryRetransmit, lmpTeLinkSummaryAckReceived, lmpTeLinkSummaryAckSent, lmpTeLinkSummaryNackReceived, lmpTeLinkSummaryNackSent, lmpTeChannelStatusReceived, lmpTeChannelStatusSent, lmpTeChannelStatusRetransmit, lmpTeChannelStatusAckReceived, lmpTeChannelStatusAckSent, lmpTeChannelStatusReqReceived, lmpTeChannelStatusReqSent, lmpTeChannelStatusReqRetransmit, lmpTeChannelStatusRspSent, lmpTeChannelStatusRspReceived, lmpTeCounterDiscontinuityTime, lmpDataLinkTestReceived,
, lmpDataLinkActiveTestFailure, lmpDataLinkPassiveTestSuccess, lmpDataLinkPassiveTestFailure, lmpDataLinkDiscontinuityTime } STATUS
current DESCRIPTION "Collection of objects used to provide performance information about LMP interfaces and data bearing links."
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
Unauthorized changes to the lmpNbrTable, lmpControlChannelTable, lmpTeLinkTable, and lmpDataLinkTable may disrupt allocation of resources in the network.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
The lmpNbrTable exposes the network provider's node IP addresses.
lmpControlChannelTable exposes the network provider's control network.
lmpDataLinkTable exposes the network provider's data network.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
No new IANA actions are requested in this document.
All IANA actions from RFC 4327 still hold and are reproduced here for information.
Note that new assignments can only be made via a Standards Action as specified in [RFC2434].
IANA Considerations for LMP ifType
The IANA has assigned 227 ifType for LMP interfaces.
IANA Considerations for LMP MIB
The IANA has assigned { transmission 227 } to the LMP MIB module specified in this document.
Changes from RFC 4327 to RFC 4631
The following changes have been made relative to RFC 4327.
Show that this document obsoletes RFC 4327.
b.  Indicate in Abstract that this document provides minor corrections to RFC 4327.
c.  Correct use of TruthValue settings such that True is always 1, and False is always 2.
e.  Note in IANA section to show no further action required.
Remove identification of RFC 4327 and request RFC Editor to insert new RFC number.
i.  Added punctuation to REFERENCE clauses.
j.  Update Revision History clause.
Remove square braces from references to external documents from within the MIB module itself.
Minor editorial corrections to text and DESCRIPTIONS clauses.
