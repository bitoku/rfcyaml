Abstract This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the provisioning and management of E.164 numbers that represent domain names stored in a shared central repository.
Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for the provisioning of E.164 numbers.
This document describes an E.164 number mapping for version 1.0 of the Extensible Provisioning Protocol (EPP).
This mapping, an extension of the domain name mapping described in [1], is specified using the Extensible Markup Language (XML) 1.0, as described in [2], and XML Schema notation, as described in [3] and [4].
The EPP core protocol specification [5] provides a complete description of EPP command and response structures.
A thorough understanding of the base protocol specification is necessary to understand the mapping described in this document.
ENUM [6] describes how the Domain Name System (DNS) can be used to identify services associated with an E.164 number.
The EPP mapping described in this document specifies a mechanism for the provisioning and management of E.164 numbers stored in a shared central repository.
Information exchanged via this mapping can be extracted from the repository and used to publish DNS resource records as described in ENUM [6].
Examples used in this document were chosen specifically to illustrate provisioning concepts for the example resource records described in the ENUM specification.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [7].
In examples, "C:" represents lines sent by a protocol client, and "S:" represents lines returned by a protocol server.
Indentation and white space in examples are only provided to illustrate element relationships and are not a REQUIRED feature of this specification.
Unless stated otherwise, XML specifications and examples provided in this document MUST be interpreted in the character case presented to develop a conforming implementation.
This extension adds elements to the EPP domain name mapping [1].
Only new element descriptions are described here.
An E.164 domain name is a representation of an E.164 number that has been translated to conform to domain name syntax, as described in the ENUM specification [6].
The labels used to describe the name space of an E.164 domain name are a policy matter that is beyond the scope of this document.
According to ENUM [6], Naming Authority Pointer (NAPTR) resource records are used to identify available ways for contacting a specific node identified by a domain name created from the translation of an E.164 number.
The basic NAPTR record format is described in RFC 3403 [8].
Rules for structuring and using NAPTR records for use with ENUM are described in RFC 3761 [6].
Several NAPTR field values are optional per RFC 3403.
RFC 3761 describes processing rules that require the presence of certain NAPTR field values.
This document describes field value requirements that correspond to RFC 3761.
The NAPTR order field, a 16 bit unsigned integer, is represented in this mapping using the XML Schema "unsignedShort" data type.
The NAPTR flags field is represented in this mapping using a single character.
The case of the flag character is not significant.
The NAPTR service field is represented in this mapping using a character string with an unspecified maximum length.
Valid values are application dependent.
The NAPTR regexp field is represented in this mapping using a character string with an unspecified maximum length.
This field can contain numerous backslashes and should thus be treated with care.
The NAPTR replacement field, whose value is a domain name, is represented in this mapping using a character string with a maximum length of 255 characters.
A detailed description of the EPP syntax and semantics can be found in the EPP core protocol specification [5].
The command mappings described here are specifically for use in implementing ENUM provisioning processes via EPP.
EPP Query Commands EPP provides three commands to retrieve object information:
<check> to determine if an object is known to the server, <info> to retrieve detailed information associated with an object, and <transfer> to retrieve object transfer status information.
This extension does not add any elements to the EPP <check> command or <check
> response described in the EPP domain mapping [1].
This extension does not add any elements to the EPP <info> command described in the EPP domain mapping [1].
Additional elements are defined for the <info> response.
When an <info> command has been processed successfully, the EPP <resData> element MUST contain child elements as described in the EPP domain mapping [1].
In addition, the EPP <extension> element MUST contain a child <e164:
> element that identifies the extension namespace and the location of the extension schema.
> element contains one or more <e164:naptr> elements that contain the following child elements:
> element that contains a NAPTR order value.
An <e164:pref> element that contains a NAPTR preference value.
An OPTIONAL <e164:flags> element that contains a NAPTR flags value.
An <e164:svc> element that contains a NAPTR service value.
An OPTIONAL <e164:regex> element that contains a NAPTR regular expression value.
An OPTIONAL <e164:replacement> element that contains a NAPTR replacement value.
Example <info> response: S:<?xml version "1.0" encoding "UTF 8" standalone "no"?
An EPP error response MUST be returned if an extended <info> command can not be processed for any reason.
This extension does not add any elements to the EPP <transfer> command or <transfer> response described in the EPP domain mapping [1].
EPP Transform Commands EPP provides five commands to transform objects: <create> to create an instance of an object, <delete> to delete an instance of an object, <renew> to extend the validity period of an object, <transfer> to manage object sponsorship changes, and <update> to change information associated with an object.
This extension defines additional elements for the EPP <create
> command described in the EPP domain mapping [1].
No additional elements are defined for the EPP <create> response.
The EPP <create> command provides a transform operation that allows a client to create a domain object.
In addition to the EPP command elements described in the EPP domain mapping [1], the command MUST contain an <extension> element.
The <extension> element MUST contain a child <e164:create> element that identifies the extension namespace and the location of the extension schema.
The <e164:create> element contains one or more <e164:
naptr> elements that contain the following child elements:
An <e164:order> element that contains a NAPTR order value.
An <e164:pref> element that contains a NAPTR preference value.
An OPTIONAL <e164:flags> element that contains a NAPTR flags value.
An <e164:svc> element that contains a NAPTR service value.
An OPTIONAL <e164:regex> element that contains a NAPTR regular expression value.
An OPTIONAL <e164:replacement> element that contains a NAPTR replacement value.
C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When an extended <create> command has been processed successfully, the EPP response is as described in the EPP domain mapping [1].
This extension does not add any elements to the EPP <delete> command or <delete> response described in the EPP domain mapping [1].
This extension does not add any elements to the EPP <renew> command or <renew> response described in the EPP domain mapping [1].
This extension does not add any elements to the EPP <transfer> command or <transfer> response described in the EPP domain mapping [1].
This extension defines additional elements for the EPP <update
> command described in the EPP domain mapping [1].
No additional elements are defined for the EPP <update> response.
The EPP <update> command provides a transform operation that allows a client to change the state of a domain object.
In addition to the EPP command elements described in the EPP domain mapping [1], the <update> command MUST contain an <extension> element.
The <extension> element MUST contain a child <e164:
> element that identifies the extension namespace and the location of the extension schema.
> element contains one or more <e164:
rem> element contains an <e164:naptr
> element that contains the following child elements:
An <e164:order> element that contains a NAPTR order value.
An <e164:pref> element that contains a NAPTR preference value.
An OPTIONAL <e164:flags> element that contains a NAPTR flags value.
An <e164:svc> element that contains a NAPTR service value.
An OPTIONAL <e164:regex> element that contains a NAPTR regular expression value.
An OPTIONAL <e164:replacement> element that contains a NAPTR replacement value.
Example <update> command: C:<?xml version "1.0" encoding "UTF 8" standalone "no"?
When an extended <update> command has been processed successfully, the EPP response is as described in the EPP domain mapping [1].
An EPP object mapping is specified in XML Schema notation.
The formal syntax presented here is a complete schema representation of the object mapping suitable for automated validation of EPP XML instances.
The BEGIN and END tags are not part of the schema; they are used to note the beginning and ending of the schema for URI registration purposes.
xml version "1.0" encoding "UTF 8"?
e164 "urn:ietf:params:xml:ns:e164epp 1.0" xmlns "http://www.w3.org/2001/XMLSchema" elementFormDefault
"qualified"> <annotation> <documentation> Extensible Provisioning Protocol v1.0 domain name extension schema for E.164 number provisioning.
Child elements found in EPP commands.
<element name "create" type "
<element name "naptr" type "e164:naptrType"/
Child elements of the <create> command.
<element ref "e164:naptr" maxOccurs "
<element name "order" type "unsignedShort"/>
<element name "pref" type "unsignedShort"/>
<element name "flags" type "e164:flagsType" minOccurs "
> <element name "repl" type "e164:replType" minOccurs "
<simpleType name "flagsType"> <restriction base "token"> <pattern value "[A Z] [a z] [0 9]"/
> <simpleType name "svcType"> <restriction base "token"> <minLength value "
> <simpleType name "regexType"> <restriction base "token"> <minLength value "
<simpleType name "replType"> <restriction base "token"> <minLength value "1"/>
Child elements of the <update> command.
> <element name "rem" type "e164:addRemType
Data elements that can be added or removed.
"> <sequence> <element ref "e164:naptr" maxOccurs "
> <sequence> <element ref "e164:naptr" maxOccurs "
Internationalization Considerations EPP is represented in XML, which provides native support for encoding information using the Unicode character set and its more compact representations, including UTF 8 [10].
Conformant XML processors recognize both UTF 8 and UTF 16 [11].
Though XML includes provisions to identify and use other character encodings through use of an "encoding" attribute in an <?
> declaration, use of UTF 8 is RECOMMENDED in environments where parser encoding support incompatibility exists.
As an extension of the EPP domain mapping [1], the elements, element content, attributes, and attribute values described in this document MUST inherit the internationalization conventions used to represent higher layer domain and core protocol structures present in an XML instance that includes this extension.
This document uses URNs to describe XML namespaces and XML schemas conforming to a registry mechanism described in RFC 3688
Two URI assignments have been completed by the IANA:
Registration for the extension namespace:
Namespace URIs do not represent an XML specification.
Registration for the extension XML schema:
: See the "Formal Syntax" section of this document.
The mapping extensions described in this document do not provide any security services beyond those described by EPP [5], the EPP domain name mapping [1], and protocol layers used by EPP.
Security considerations related to ENUM are described in the "Security Considerations" section of the ENUM specification [6]; security considerations related to the Dynamic Delegation Discovery System and NAPTR records are described in the "Security Considerations" section of RFC 3403 [8].
The security considerations described in these specifications apply to this specification as well.
As with other domain object transforms, the EPP transform operations described in this document MUST be restricted to the sponsoring client as authenticated using the mechanisms described in sections 2.9.1.1 and 7 of RFC 3730 [5].
Any attempt to perform a transform operation on a domain object by any client other than the sponsoring client MUST be rejected with an appropriate EPP authorization error.
