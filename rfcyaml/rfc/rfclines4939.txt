(Internet Storage Name Service) protocol provides storage name service functionality on an IP network that is being used for iSCSI
(Internet Small Computer System Interface) or iFCP
(Internet Fibre Channel Protocol) storage.
This document provides a mechanism to monitor multiple iSNS Servers, including information about registered objects in an iSNS Server.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The iSNS protocol, as described in RFC 4171 [RFC4171], can be used by IP based storage devices for dynamic registration and discovery of other storage devices in the network.
It has the capability to group devices into storage Discovery Domains, and Discovery Domains into Discovery Domain Sets.
The iSNS MIB is designed to allow Simple Network Management Protocol (SNMP) to be used to monitor iSNS servers supporting iSCSI [RFC3720] and iFCP [RFC4172].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The following entity relationship figure indicates the objects that can be registered in the iSNS, and their relationship to each other.
The MIB is divided into sections for iSNS server information, iSNS server registered objects information, and iSNS notifications.
The sections that are required to implement are for iSNS Server management and notification.
The isnsServerInfo section provides the ability to monitor multiple iSNS Server instances.
The isnsServerTable table provides information on each server instance.
This table is indexed by the variable isnsServerIndex.
The table indicates current settings for each iSNS server being managed.
The network address, TCP and UDP ports being used by a server for iSNSP registrations and queries can be determined from this table.
The count of objects registered in each iSNS server instance is shown in the table isnsNumObjectsTable.
The provides a summary of the number Discovery Domain Sets, Discovery Domains, Entities, Portals, Portal Groups, iSCSI Nodes, and iFCP FC Nodes and Ports.
As defined in the iSNS specification, Control Nodes are objects that have been registered with the server and are allowed to manage the iSNS server.
These Control Nodes are identified by their iSCSI Node Name or iFCP
The isnsControlNodeInfo section of the MIB provides the ability to view the currently registered set of iSCSI and iFCP control nodes.
The isnsDdsInfo section provides information on each registered DDS, the Discovery Domain members of each DDS, for each iSNS
DDSs provide a method to group multiple Discovery Domains for easier control.
As described in the iSNS Specification [RFC4171], a DDS can be enabled or disabled, which in turn enables or disables the member Discovery Domains.
Discovery Domains that are contained in an enabled DDS are then enforced by an iSNS Server.
The isnsDdInfo section provides information on each registered DD, and the DD members, for each iSNS
DDs are collections of storage nodes and portals that are allowed to discover one another.
DD members can be iSCSI nodes, Entity Portals, or iFCP nodes.
The isnsReg section provides information on the registered storage objects for a specific iSNS Server instance.
This section is divided into subsections for Entities, Portals, and iSCSI Nodes, as well as iFCP Port and Node information.
The isnsRegEntityInfo section provides information on the registered entities.
Entities are collections of storage nodes and portals.
The isnsRegPortalInfo section provides information on the registered portals for a specific iSNS Server instance.
Portals are logical IP Address, TCP/UDP Port pairs that provide access to storage nodes contained in the associated Entity.
The isnsRegPortalGroupInfo section provides information on the registered portal groups for a specific iSNS Server instance.
As described in iSCSI [RFC3720], Portal Groups provide a mapping between Portals and iSCSI Storage Nodes contained in an Entity.
The isnsRegIscsiNodeInfo section provides information on the registered iSCSI Nodes for a specific iSNS Server instance.
The iSCSI nodes are individual storage targets or initiators.
The isnsRegFcPortInfo section provides information on the registered FC Ports for a specific iSNS Server instance.
The FC Ports are ports associated with an iFCP gateway.
The isnsRegFcNodeInfo section provides information on the registered FC Nodes for a specific iSNS Server instance.
The FC nodes are individual storage devices associated with an iFCP gateway.
The management of multiple instances of iSNS servers by the agent is supported.
As described in Section 3.3, each managed iSNS
server instance has an entry in the table isnsServerTable.
The isnsNotification section provides SNMP notifications for iSNS Server state changes.
From RFC 2578 MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, Integer32,
Unsigned32, Gauge32, mib 2 FROM SNMPv2 SMI    From RFC 2579 TEXTUAL CONVENTION, TimeStamp, TruthValue FROM SNMPv2 TC
From RFC 2580 OBJECT GROUP, MODULE COMPLIANCE, NOTIFICATION GROUP FROM SNMPv2 CONF    From RFC 3411
SnmpAdminString FROM SNMP FRAMEWORK MIB    From RFC 4001 InetAddressType, InetAddress, InetPortNumber FROM INET ADDRESS
From RFC 4044 FcNameIdOrZero, FcAddressIdOrZero FROM FC MGMT
From RFC 4133 PhysicalIndex FROM ENTITY MIB ; isnsMIB  MODULE IDENTITY LAST UPDATED "200707110000Z" ORGANIZATION "IETF IPS Working Group" CONTACT INFO "
Inc. 1704 Automation Parkway San Jose, CA 95131
408 895 1387 Fax:  1 408
G.D. Ramkumar SnapTell, Inc. 2741
Middlefield Rd, Suite 200 Palo Alto, CA 94306
326 7627 Fax:  1 650
Scott Kipp Brocade 4 McDATA Pkwy Broomfield, CO 80021
USA Tel:  1 720 558
Fax:  1 720 558 8999
This module defines management information specific to internet Storage Name Service (iSNS) management.
This version of this MIB module is part of RFC 4939; see the RFC itself for full legal notices."
This MIB published as RFC 4939."
( 1 .. 4294967295 )
The initially assigned values are below:
RESERVED Setting a bit to 1
indicates the feature is enabled.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
, reserved30(30), ddsEnabled (31) }
:  TEXTUAL CONVENTION DISPLAY HINT   "
This is used to uniquely index and reference a DD.
( 1 .. 4294967295 )
"This type defines the features that each Discovery Domain (DD) has.
Setting a bit to 1 indicates the feature is enabled.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
The methods that can be used to modify the Discovery Domain and Discovery Domain Sets in an iSNS Server instance.
The identifier for the unique integer Entity Index associated with an iSNS registered Entity object, and the value zero.
The value zero is object specific and MUST therefore be defined as part of the description of any object that uses this syntax.
Examples of the usage of zero might include situations where the Entity is unknown, or not yet registered in the iSNS server.
If a value of zero is not valid for an object, then that MUST be indicated.
The identifier for the unique integer Portal Group Index associated with an iSNS registered Portal Group object.
( 1 .. 4294967295 )
The identifier for the unique integer Portal Index associated with an iSNS registered Portal object.
The index is created by the iSNS Server for mapping between registered objects.
The Portal Index used for a specific portal IP address and port number pair is only persistent across reboots for portals that have been explicitly added to a Discovery Domain (DD).
If a portal is not explicitly registered in any DD, then the index used for a portal can change after a server reinitialization.
A PGT with no association is a NULL value.
The value of  1 indicates a NULL value.
"Indicates security attribute settings for a Portal that is registered in the iSNS server.
The bitmapVALID field must be set in order for the contents to be considered valid information.
The definitions of the bit fields are based on RFC 4171.
The initial representation of each bit setting (0 or 1) is indicated below.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
The identifier for the unique integer Node Index associated with a storage node.
This index provides a 1 to 1 mapping to an iSCSI node name.
The iSCSI node name maximum length is too long to be used for an index directly.
The iSCSI node index used for a specific iSCSI node name is identical in all DDs, and is persistent across server reinitializations when the iSCSI node is a member of a Discovery Domain (DD) or is registered as a Control Node.
Furthermore, index values for recently deregistered objects SHOULD NOT be reused in the short term.
( 1 .. 4294967295 )
The iSCSI Node Type defines the functions of the registered object.
The definitions of each setting are defined in RFC 4171.
RESERVED Setting a bit to 1
indicates the node has the corresponding characteristics.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
"This defines the Fibre Channel Class of Service types that are supported by the registered port.
The definitions are as defined in RFC 4171.
RESERVED Setting a bit to 1
indicates the class of service is supported.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
The iSCSI Node State Change Notification (SCN) values for a node as defined in RFC 4171.
removed (Mgmt Reg/SCN only) 31
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
The iFCP State Change Notification (SCN) values for an iFCP object as defined in RFC 4171.
removed (Mgmt Reg/SCN only) 31
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
"The FC Port Role defines the functions of the registered object.
The definitions of each setting are defined in RFC 4171.
indicates the port has the corresponding characteristics.
The future assignment of any of the reserved values will be documented in a revision of RFC 4171.
"The types of iSNS Server discovery methods that are enabled on an iSNS Server.
The options are DHCP, Service Location Protocol (SLP), multicast group iSNS heartbeat, broadcast group iSNS heartbeat, configured server list, and other.
The iSNS Server may support additional discovery methods not indicated.
"This table provides a list of the iSNS Server instances that are managed through the same SNMP context."
"This is a row in the iSNS Server instance table.
The number of rows is dependent on the number of iSNS Server instances that are being managed through the same SNMP context.
Unsigned32, isnsServerEnableControlNodeMgtScn TruthValue, isnsServerDefaultDdDdsStatus INTEGER, isnsServerUpdateDdDdsSupported IsnsDdDdsModificationType, isnsServerUpdateDdDdsEnabled IsnsDdDdsModificationType }
( 1 .. 4294967295 )
"This object uniquely identifies the iSNS Server being managed by the SNMP context and is the key for this table.
This is an instance index for each iSNS
The value of this object is used elsewhere in the MIB to reference specific iSNS Servers."
If not configured, then the string SHALL be zero length."
The iSNS version value as contained in messages received from the current primary server.
The header of each iSNSP message contains the iSNS version of the sender.
If unknown, the reported value is 0.
"If this server instance is utilizing the product of a particular 'vendor', then this managed object contains that vendor's name and version.
Otherwise, the string SHALL be zero length.
The format of the string is as follows:
Vendor Name, Vendor Version, Vendor Defined Information.
The name of the vendor (if one exists
The version of the vendor product Vendor Defined
An index identifying the network interface for this iSNS Server within a network entity.
This index maps to the entPhysicalIndex of entPhysicalTable table in RFC 4133.
The entPhysicalClass value for the table row must be 'port', as the interface must be able to send and receive data.
this iSNS instance is accepting iSNSP messages on, generally the iSNS well known port.
The well known TCP port for iSNSP is 3205.
"Indicates the UDP port this iSNS instance is accepting iSNSP messages on; generally, the iSNS well known port.
The well known UDP port for iSNSP is 3205.
"The value of sysUpTime on the most recent occasion that this iSNS server became active or suffered a discontinuity."
The current operational mode of this iSNS Server instance.
The iSNS Server role is not configured.
The iSNS Server instance is an operational iSNS Server.
The iSNS Server instance is currently acting as a backup."
This allows a client to determine what discovery methods can be used for this iSNS Server.
Additional methods of discovery may also be supported."
{ isnsServerEntry 10 } isnsServerDiscoveryMcGroupType   OBJECT TYPE SYNTAX
The type of Internet address in isnsServerDiscoveryMcGroupAddress.
If the address is specified, then it must be a valid multicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsServerDiscoveryMcGroupAddress is the zero length string."
The multicast group that iSNS
Heartbeat messages are sent to if multicast based discovery has been enabled for this server instance.
If not configured, then the string SHALL be zero length.
The format of this object is specified by isnsServerDiscoveryMcGroupType."
the number of ESI messages that will be sent without receiving a response before an entity is deregistered from the iSNS database.
A value of 0 indicates Entities will never be deregistered due to non receipt of ESI messages."
"Indicates if the iSNS Server administrative option to send Management SCNs to Control Nodes is enabled.
Management SCNs are used by Control Nodes to monitor and control an iSNS Server.
If enabled, Control Nodes can register to receive Management SCNs.
This indicates the Discovery Domain (DD) and Discovery Domain Set (DDS) membership status for a new device when registered in the iSNS Server instance.
Either the new device will not be in a DD/DDS, or will be placed into a default DD and default DDS.
The default setting is inNoDomain."
The methods that this iSNS
Server instance supports to modify Discovery Domains and Discovery Domain Sets.
This indicates the methods this server instance currently allows for modifying Discovery Domains and Discovery Domain Sets.
The number of entries is dependent upon the number of iSNS Server instances being managed."
The current total number of Discovery Domain Sets in this iSNS instance.
This is the number of rows in the isnsDdsTable."
The current total number of Discovery Domains in this iSNS instance.
This is the number of rows in the isnsDdTable."
The current number of Entities registered in this iSNS Server instance.
This is the number of rows in the isnsRegEntityTable for this instance."
The current total number of Portals registered in iSNS.
This is the number of rows in isnsRegPortalTable."
The current total number of Portal Groups registered in iSNS.
This is the number of rows in isnsRegPgTable."
The current total number of iSCSI node entries registered in the iSNS.
This is the number rows in isnsRegIscsiNodeTable."
The current total number of FC Port entries registered in the iSNS.
This is the number of rows in isnsRegFcPortTable."
The current total number of FC node entries registered in the iSNS.
This is the number of rows in isnsRegFcNodeTable."
Specific iSCSI Nodes authorized to register as Control   Nodes
The number of rows is dependent on the number of iSCSI Control Nodes."
This is an iSCSI Control Node entry for a specific iSNS server instance.
The index for the iSCSI storage node authorized to act as a control node."
The iSCSI Name of the initiator or target associated with the storage node.
The iSCSI Name cannot be longer than 223 bytes.
The iSNS Server internal maximum size is 224 bytes to provide NULL termination.
This is the iSCSI Node Name for the storage node authorized and/or acting as a control node."
"Indicates whether the control node is currently registered in the iSNS Server instance."
"Indicates whether the Control Node has registered to receive Management SCNs.
Management SCNs are sent to a Control Node if they are enabled, as indicated by isnsServerEnableControlNodeMgtScn, and the Control Node has registered for them."
The number of rows is dependent on the number of FC Port Control Nodes."
FC Port control node entry.
"The FC Port World Wide Port Name that can and/or is acting as a Control Node for the specified iSNS Server.
A zero  length string is not valid for this managed object.
This managed object, combined with the isnsServerIndex, is the key for this table."
"Indicates whether the control node is currently registered in the iSNS Server instance."
"Indicates whether the Control Node has registered to receive Management SCNs.
Management SCNs are sent to a Control Node if they are enabled, as indicated by isnsServerEnableControlNodeMgtScn, and the Control Node has registered for them."
SEQUENCE OF IsnsDdsEntry MAX ACCESS
A table containing configuration information for each Discovery Domain Set (DDS) registered in the iSNS Server instance.
The number of rows in the table is dependent on the number of DDSs registered in the specified iSNS server instance."
The ID that refers to this Discovery Domain Set and index to the table."
If a Symbolic Name is not provided, then one will be generated by the iSNS server."
The status of this Discovery Domain Set (DDS)."
A table containing Discovery Domains (DDs) that have been assigned to specific Discovery Domain Sets (DDSs).
The number of rows in the table is dependent on the number of DD to DDS relationships in the iSNS instance."
"The mapping of one Discovery Domain (DD) to a Discovery Domain Set (DDS).
This indicates the DD is a member of the DDS.
The ID that identifies the Discovery Domain that is a member of the Discovery Domain Set."
The Symbolic Name of the Discovery Domain that is a member of this DDS.
This value SHALL be identical to the object
isnsDdSymbolicName for the associated DD ID.
A table containing configuration information for each Discovery Domain (DD) registered in the iSNS.
The number of rows in the table is dependent on the number of DDs registered in the iSNS instance."
The ID that refers to this Discovery Domain, and the index to the table."
The Discovery Domain Symbolic Name field contains a unique variable length description (up to 255 bytes) that is associated with the DD."
This defines the features the Discovery Domain has.
A table containing iSCSI node indexes that have been assigned to specific DDs in this iSNS Server instance.
The number of rows in the table is dependent on the number of relationships between iSCSI Nodes and DDs registered in the iSNS instance."
The mapping of one iSCSI Node to a Discovery Domain to indicate membership in the DD.
The indexes are the iSNS server instance, the DD ID of the Discovery Domain, and the iSCSI Node Index of the iSCSI Node.
IsnsNodeIndexId, isnsDdIscsiMemberName    SnmpAdminString, isnsDdIscsiMemberIsRegistered TruthValue }
The index for this member iSCSI node entry."
The iSCSI Name associated with the storage node.
The iSCSI Name cannot be longer than 223 bytes.
The iSNS server internal maximum size is 224 bytes to provide NULL termination.
This is the iSCSI Name for the storage node that is a member of the DD.
This value maps 1 to 1 to the isnsDdIscsiMemberIndex node index.
The iSCSI Name field is too long to be easily used for an index directly.
The node index used for a specific node name is only persistent across iSNS Server reinitializations for nodes that are in a Discovery Domain (DD) or are registered control nodes.
This value is only required during row creation if the storage node is not yet registered in the iSNS Server instance.
If the storage node is not yet registered, then the iSCSI Name MUST be provided with the iSCSI node index during row creation in order to create the 1 to 1 mapping.
This indicates whether this member of the DD is currently registered in the iSNS Server instance.
Storage Node members do not need to be currently registered in order for their iSCSI Name and Index to be added to a DD."
A table containing currently registered and unregistered portal objects that have been explicitly assigned to specific DDs.
Explicit assignment of a portal to a DD is only done when a specific set of portals are preferred for use within a DD.
Otherwise, for iSCSI, the Portal Group Object should be used for identifying which portals provide access to which storage nodes.
The number of rows in the table is dependent on the number of explicit relationships between portals and DDs registered in the iSNS.
"Each entry indicates an explicit addition of a portal to a discovery domain.
The explicit addition of an entity portal to a discovery domain indicates the portal is preferred for access to nodes of the entity for this discovery domain.
Registered Portal Group objects are used in iSCSI to indicate mapping of portals to nodes across all discovery domains.
Portals that have been explicitly mapped to a discovery domain will be returned as part of a query that is scoped to that discovery domain.
If no portal of an entity has been explicitly mapped to a discovery domain, then all portals of the entity that provide access to a storage node are returned as part of a query.
The table indexes are the server instance, the DD ID of the Discovery Domain, and the Portal Index of the portal.
The index for a portal explicitly contained in the discovery domain.
This managed object, combined with isnsServerIndex and isnsDdId, is the key for this table.
The type of Inet address in isnsDdPortalMemberAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsDdPortalMemberAddress is the zero length string."
The format of this object is specified by isnsDdPortalMemberAddressType."
The port type for the portal, either UDP or TCP."
The port number for the portal.
Whether the portal type is TCP or UDP is indicated by isnsDdPortalMemberPortType.
} isnsDdPortalMemberIsRegistered OBJECT TYPE SYNTAX
This indicates whether this member of the DD is currently registered in the iSNS Server instance.
Portals that are DD members do not need to be currently registered in order for them to be added to a DD."
DD FC Port Membership Assignment
A table containing FC Port World Wide Names (WWN) that have been assigned to specific DDs.
The number of rows in the table is dependent on the number of relationships between FC Ports and DDs registered in the iSNS."
The association of one FC Port with a Discovery Domain.
Membership of an FC Port in a Discovery Domain is indicated by creating a row for the appropriate DD ID and FC Port WWN.
The Port WWN of the FC Port that is a member of the DD.
The value MUST be a valid FC WWN, as per the FC GS (Fibre Channel Generic Services) standard.
This managed object, combined with the isnsServerIndex and isnsDdId are the key for this table.
A zero length string is not a valid value for this managed object."
This indicates whether this member of the DD is currently registered in the iSNS Server instance."
A table containing registered Entity objects in each iSNS server instance.
The number of entries in the table is dependent on the number of Entity objects registered in the iSNS Server instances.
All Entity objects are registered in the iSNS using the iSNS protocol."
( 1 .. 4294967295 )
This index is assigned by the iSNS Server when an Entity is initially registered.
The Entity Index can be used to represent a registered Entity object in situations where the Entity EID would be too long/unwieldy.
Zero is not a valid value for this object.
"The EID is a unique registered Entity object identifier, as specified in the iSNS Specification.
This is the iSNS Entity Identifier for the registered Entity object.
( 1 .. 4294967295 )
The block storage protocol supported by this entity, as defined in the iSNS Specification, Section 6.2.2.
The following values are initially assigned.
Please refer to RFC 4171 and the iSNS parameters maintained at IANA.
The type of Inet address in isnsRegEntityManagementAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsRegEntityManagementAddress is the zero length string."
The format of this object is specified by isnsRegEntityManagementAddressType."
This is the most recent date and time that the registered Entity object, and associated registered objects contained in the Entity, were registered or updated."
The minimum version supported for the block storage protocol specified by isnsRegEntityProtocol.
The protocol version specified can be from 1 to 254.
A value of 255 is a wildcard value, indicating no minimum version value has been specified for this Entity.
Entity registrations with an isnsRegEntityProtocol of 'No Protocol' SHALL have an isnsRegEntityVersionMin value of 0."
The maximum version supported for the block storage protocol specified by isnsRegEntityProtocol.
The protocol version specified can be from 1 to 254.
A value of 255 is a wildcard value, indicating no maximum version value has been specified for this Entity.
Entity registrations with an isnsRegEntityProtocol of 'No Protocol' SHALL have an isnsRegEntityVersionMax value of 0."
If the Registration Period is set to 0, then the Entity SHALL NOT be deregistered due to no contact with the entity."
Associated With an Entity Information
SEQUENCE OF IsnsRegEntityNumObjectsEntry MAX ACCESS
A table containing information on the number of registered objects associated with a registered Entity in the iSNS server instance.
The number of entries in the table is dependent on the number of registered Entity objects in the iSNS."
The number of Portals associated with this Entity."
The number of Portal Groups associated with this Entity."
The number of iSCSI Storage Nodes associated with this Entity."
The number of FC Ports associated with this Entity."
The number of FC Nodes associated with this Entity."
SEQUENCE OF IsnsRegPortalEntry MAX ACCESS
A table containing the registered Portals in the iSNS.
The number of entries is dependent on the number of Portals registered in the iSNS."
The Entity Index is part of the table index to quickly find Portals that support a specific Entity.
The index for this Entity Portal."
The type of Inet address in isnsRegPortalAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsRegPortalAddress is the zero length string."
The format of this object is specified by isnsRegPortalAddressType."
The port type for this Portal, either UDP or TCP, as defined in the iSNS Specification, RFC 4171.
The port number for this Portal as defined in the iSNS Specification, RFC 4171.
Whether the Portal type is TCP or UDP is indicated by isnsRegPortalPortType."
If not provided, then the string SHALL be zero length."
A value of 0 indicates that ESI monitoring has not been configured for this Portal."
The port type for the ESI Port, either UDP or TCP, as defined in the iSNS Specification, RFC 4171.
Whether the port type is TCP or UDP is indicated by isnsRegPortalEsiPortType.
A value of 0 indicates that ESI monitoring is not enabled for this Portal."
The port type for the SCN Port, either UDP or TCP, as defined in the iSNS Specification, RFC 4171.
Whether the port type is TCP or UDP is indicated by isnsRegPortalScnPortType.
A value of 0 indicates that SCN message receipt is not enabled for this Portal."
Indicates security attribute settings for the Portal as registered in the iSNS server.
The bit for bitmapVALID must be set in order for this attribute to contain valid information.
Setting a bit to 1 indicates the feature is enabled.
A table containing the registered Portal Groups (PGs) in the iSNS Server instance.
The number of entries is dependent on the number of Portal Groups registered in the iSNS."
The Entity Index is part of the table index to quickly find Portal Groups that support Portals and iSCSI Storage Nodes in a specific Entity.
The index is created by the iSNS Server instance for uniquely identifying registered objects.
The PG object is registered at the same time a Portal or Storage Node is registered using the iSNS protocol."
The index for the iSCSI Node associated with this PG.
This index can be used to reference the isnsRegIscsiNodeTable.
The iSCSI Name of the initiator or target associated with the storage node.
The iSCSI Name cannot be longer than 223 bytes.
The iSNS Server internal maximum size is 224 bytes to provide NULL termination.
This is the PG iSCSI Name that uniquely identifies the iSCSI Storage Node that is associated with this PG."
"The Portal Index for the Portal associated with this PG.
This index can be used to reference the isnsRegPortalTable."
The type of Inet address in isnsRegPgPortalAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsRegPgPortalAddress is the zero length string."
The format of this object is specified by isnsRegPgPortalAddressType."
The port type, either UDP or TCP, for the Portal that is associated with this registered PG object."
The port number for the Portal that is associated with this registered PG object.
Whether the Portal type is TCP or UDP is indicated by isnsRegPgPortalPortType.
The Portal Group Tag (PGT) for the registered iSCSI Portal Group object in an iSNS Server instance.
This indicates the tag value that the Portal uses for access to the iSCSI Storage Node.
The PGT is used for coordinated access between multiple Portals, as described in the iSCSI Specification, RFC 3720.
A PGT with no association is a NULL value.
The value of  1 indicates a NULL value."
A table containing the registered iSCSI Nodes in the iSNS server instance.
Storage devices register using the iSNS protocol.
While a device cannot be registered in an iSNS server using SNMP, an entry can be deleted in order to remove 'stale' entries.
The number of entries is related to the number of iSCSI nodes registered in the iSNS."
New rows cannot be added using SNMP.
The index for this iSCSI node."
The iSCSI Name of the initiator or target associated with the storage node.
The iSCSI Name cannot be longer than 223 bytes.
The iSNS Server internal maximum size is 224 bytes to provide NULL termination.
This is the iSCSI Name that uniquely identifies the initiator, initiator/target, target, or control node in the network."
The Node Type defining the functions of this iSCSI node."
The Alias name of the iSCSI node.
This is a variable length text based description of up to 255 bytes."
The State Change Notification (SCN) types enabled for this iSCSI node."
This contains a globally unique 64 bit integer value that can be used to represent the World Wide Node Name of the iSCSI device in a Fibre Channel fabric.
This identifier is used during the device registration process, and MUST conform to the requirements in RFC 4171.
A zero length string for this managed object indicates that a Node WWN token has not been assigned.
This attribute contains a null terminated string containing UTF 8 text listing the iSCSI authentication methods enabled for this iSCSI Node, in order of preference.
The text values used to identify iSCSI authentication methods are embedded in this string attribute and delineated by a comma.
The text values are identical to those found in RFC 3720 iSCSI.
Additional vendor specific text values are also possible."
A table containing the registered FC Nodes in the iSNS.
This supports iFCP as defined in RFC 4172."
"The FC Node World Wide Node Name as defined in the iSNS Specification, RFC 4171.
A zero length string is not valid for this managed object."
The FC Node Symbolic Name of the node as defined in the iSNS Specification, RFC 4171.
This is a variable length text based description.
If not provided, then the string SHALL be zero length."
The type of Inet address in isnsRegFcNodeAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsRegFcNodeAddress is the zero length string."
The format of this object is specified by isnsRegFcNodeAddressType.
This managed object identifies the FC Initial Process Associator of the node as defined in the iSNS Specification, RFC 4171.
The iSCSI Name used to represent the FC Node in the IP network.
It is used as a pointer to the matching iSCSI Name entry in the iSNS Server.
Its value is usually registered by an FC iSCSI gateway connecting the IP network to the fabric containing the FC device.
The number of FC Ports associated with this FC Node."
SEQUENCE OF IsnsRegFcPortEntry MAX ACCESS
FC Ports are associated with registered FC Nodes.
This supports iFCP as defined in RFC 4172.
"The FC Port's World Wide Port Name as defined in the iSNS Specification, RFC 4171.
A zero length string is not valid for this managed object."
The future assignment of any additional values will be documented in a revision of RFC 4171.
REFERENCE "RFC 4171, Section 6.6.3
"The FC Port Symbolic Name as defined in the iSNS Specification, RFC 4171.
If not provided, then the string SHALL be zero length."
} isnsRegFcPortFabricPortWwn  OBJECT TYPE SYNTAX
A zero length string for this managed object indicates that the Fabric Port WWN is not known, or has not yet been registered with the iSNS Server.
The type of Inet address in isnsRegFcPortAddress.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsRegFcPortAddress is the zero length string."
The format of this object is specified by isnsRegFcPortAddressType.
The FC Port Class of Service as defined in the iSNS Specification, RFC 4171.
"The FC Port FC 4 Types as defined in the iSNS Specification, RFC 4171."
The FC 4 Descriptor cannot be longer than 255 bytes.
The iSNS Server internal maximum size is 256 bytes to provide NULL termination."
The iFCP State Change Notification (SCN) types enabled for the registered object.
The FC Port Role defines the role of the registered object.
"The FC Node World Wide Node Name that is associated with this FC Port as defined in the iSNS Specification, RFC 4171.
This managed object may contain a zero length string prior to a device registering this value with the iSNS Server."
The Permanent Port Name (PPN) attribute is the FC Port Name WWPN of the first Storage Node registered in the iSNS Database that is associated with a particular FC Device (FC Node).
The PPN of all subsequent Storage Node registrations that are associated with that FC Device (FC Node) SHALL be set to the FC Port Name WWPN of the first Storage Node, as defined in the iSNS Specification, RFC 4171.
This managed object may contain a zero length string prior to a device registering this value with the iSNS Server."
Mapping from FC Node to Entity FC Port   isnsRegFcNodePortTable
A table containing the mapping of a registered FC Node and associated registered iFCP Port to the supporting registered Entity object in an iSNS Server instance."
} isnsRegFcNodePortEntityIndex OBJECT TYPE SYNTAX
The Entity Index for the registered Entity object associated with the FC Port and FC Node.
This managed object may contain the value of zero prior to a device registering this value with the iSNS Server."
The type of Inet address in isnsAddressNotification.
If the address is specified, then it must be a valid unicast address and the value of this object must be ipv4(1), ipv6(2), ipv4z(3), or ipv6z(4); otherwise, the value of this object is unknown(0), and the value of isnsAddressNotification is the zero length string."
Identifies the IP address of the iSNS Server.
The format of this object is specified by isnsAddressNotificationType.
The IP address will always be specified in the notification unless an error causes the IP address to not be known."
the iSNS Server is using, or 0 if TCP based registrations are not supported."
the iSNS Server is using, or 0 if UDP based registrations are not supported."
"This notification is sent when an iSNS Server begins operation.
The notification provides the following: isnsInstanceInfo :
iSNS Server textual information isnsAddressTypeNotification : iSNS
Server address type isnsAddressNotification :
iSNS Server address isnsTcpPortNotification :
Server TCP Port isnsUdpPortNotification :
"This notification is sent when an iSNS Server is shutdown.
The notification provides the following: isnsInstanceInfo :
iSNS Server textual information isnsAddressTypeNotification : iSNS
Server address type isnsAddressNotification :
iSNS Server address isnsTcpPortNotification :
Server TCP Port isnsUdpPortNotification :
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required."
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
OBJECT isnsDdPortalMemberAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required.
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
OBJECT isnsRegEntityManagementAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required."
OBJECT isnsRegEntityManagementAddress SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required.
OBJECT isnsRegPortalAddress SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
OBJECT isnsRegPgPortalAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required.
OBJECT isnsRegPgPortalAddress SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, ipv6z is required.
OBJECT isnsAddressNotification SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z and their related SIZE need to be supported."
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
OBJECT isnsDdPortalMemberAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
OBJECT isnsRegEntityManagementAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
OBJECT isnsRegEntityManagementAddress SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
OBJECT isnsRegPortalAddress SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
OBJECT isnsRegFcNodeAddressType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2), ipv4z(3), ipv6z(4)
} DESCRIPTION "Only support for unknown, ipv4, ipv6, ipv4z, and ipv6z is required."
OBJECT isnsAddressNotification SYNTAX InetAddress (SIZE (0
Only addresses for unknown, ipv4, ipv6, ipv4z, ipv6z, and their related SIZE need to be supported."
OBJECT GROUP OBJECTS { isnsNumDds,
isnsNumDd, isnsNumEntities, isnsNumPortals, isnsNumPortalGroups, isnsNumIscsiNodes, isnsNumFcPorts, isnsNumFcNodes, isnsRegEntityInfoNumPortals, isnsRegEntityInfoNumPortalGroups, isnsRegEntityInfoNumIscsiNodes,
"Managed objects indicating the number of registered objects in an iSNS Server or the number of registered objects associated with a registered Entity.
These managed objects are optional to implement."
OBJECT GROUP OBJECTS { isnsControlNodeIscsiNodeName, isnsControlNodeIscsiIsRegistered,
Server iSCSI control node managed objects."
Server DDS and DD managed objects for iSCSI."
Server DDS and DD managed objects for iFCP.
Server registered iSCSI managed objects."
OBJECT GROUP OBJECTS { isnsRegEntityEID, isnsRegEntityProtocol, isnsRegEntityManagementAddressType, isnsRegEntityManagementAddress, isnsRegEntityTimestamp, isnsRegEntityVersionMin, isnsRegEntityVersionMax, isnsRegEntityRegistrationPeriod, isnsRegEntityInfoNumPortals, isnsRegEntityInfoNumPortalGroups, isnsRegEntityInfoNumIscsiNodes, isnsRegEntityInfoNumFcPorts, isnsRegEntityInfoNumFcNodes, isnsRegPortalAddressType, isnsRegPortalAddress, isnsRegPortalPortType, isnsRegPortalPort, isnsRegPortalSymbolicName, isnsRegPortalEsiInterval, isnsRegPortalEsiPortType,
isnsRegPortalEsiPort, isnsRegPortalScnPortType, isnsRegPortalScnPort, isnsRegPortalSecurityInfo, isnsRegFcPortID, isnsRegFcPortType, isnsRegFcPortSymbolicName, isnsRegFcPortFabricPortWwn, isnsRegFcPortHA, isnsRegFcPortAddressType, isnsRegFcPortAddress, isnsRegFcPortFcCos, isnsRegFcPortFc4Types,
Server registered iFCP managed objects."
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
} This RFC utilizes the IANA registry of iSNS parameters.
This registry was created for the iSNS Specification [RFC4171], and is located at http://www.iana.org/assignments/isns parameters.
Specifically, the isnsRegEntityProtocol values used in the MIB module are the values for the Block Storage Protocols that IANA assigns and documents in http://www.iana.org/assignments/isns parameters.
There are no management objects defined in this MIB module that have a MAX ACCESS clause of read write and/or read create.
So, if this MIB module is implemented correctly, then there is no risk that an intruder can alter or create any management objects of this MIB module via direct SNMP SET operations.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability: The isnsDdsMemberTable contains information about which Discovery Domains may be enabled at the same time.
The isnsDdTable contains information about Discovery Domains, containing storage nodes with an ability to communicate and exchange storage data.
The isnsDdIscsiMemberTable indicates which iSCSI nodes are contained in which Discovery Domains.
The isnsDdPortalMemberTable indicates which iSCSI portals are contained in which Discovery Domains.
The isnsDdFcPortMemberTable indicates which iFCP FC N Ports are contained in which Discovery Domains.
The isnsControlNodeIscsiTable indicates which iSCSI nodes have the ability to possibly control an iSNS server.
The isnsControlNodeFcPortTable indicates which iFCP FC N Ports have the ability to possibly control an iSNS server.
The above object tables provide information about storage objects sessions, and can indicate to a user who is communicating and exchanging storage data.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
