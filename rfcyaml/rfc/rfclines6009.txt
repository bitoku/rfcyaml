Abstract This document describes the "envelope dsn", "redirect dsn", "envelope deliverby", and "redirect deliverby" extensions to the Sieve email filtering language.
The "envelope dsn" and "envelope  deliverby" extensions provide access to additional envelope information provided by the delivery status notification (DSN) and Deliver By SMTP extensions, respectively.
The "redirect dsn" and "redirect deliverby" extensions extend Sieve's redirect action to provide control over delivery status notification and Deliver By parameters, respectively.
Sieve [RFC5228] is a language for filtering email messages at or around the time of final delivery.
It is designed to be implementable on either a mail client or mail server.
It is suitable for running on a mail server where users may not be allowed to execute arbitrary programs, such as on black box Internet Message Access Protocol [RFC3501] servers,
as it has no user controlled loops or the ability to run external programs.
The base Sieve specification defines the envelope extension and test to access information in the message envelope.
Only information available in regular SMTP [RFC5321] is provided; additional information added to the SMTP envelope by SMTP extensions cannot be accessed.
The "envelope dsn" extension extends the envelope test to allow access to the additional envelope fields defined by the SMTP extension for delivery status notifications (DSNs) specified in RFC 3461 [RFC3461].
The "envelope deliverby" extension extends the envelope test to allow access to the additional envelope fields defined by the Deliver By SMTP extension defined in [RFC2852].
The base Sieve specification also defines the redirect action, which sends the message to a different address.
Redirect only allows specification of the new recipient address.
The "redirect dsn" extension extends redirect to allow specification of some fields defined by the delivery status notification SMTP extension.
"redirect deliverby" in turn provides the ability to set a time limit for delivery as specified in RFC 2852
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The terms used to describe the various components of the Sieve language are taken from Section 1.1 of [RFC5228].
The nature and handling of Sieve errors are described in Section 2.10.6 of [RFC5228].
This document uses the ABNF notation specified in [RFC5234], and refers to the notify esmtp value ABNF production defined in Section 4.1 of [RFC3461].
The capability strings associated with the extensions defined in this document are "envelope dsn", "redirect dsn", "envelope deliverby", and "redirect deliverby".
The "envelope dsn" extension does not define any new tests or actions; rather, it adds four values to the list of possible (case  insensitive)
envelope part strings defined in Section 5.4 of [RFC5228]
: notify  Match the list of notification conditions, or NOTIFY values, associated with the TO address used in the SMTP RCPT TO command that resulted in this message getting delivered to this user.
More than one notification condition can be in effect at once; each condition that is in effect is tested separately, and any match causes the test to succeed.
The syntax and semantics of the NOTIFY parameter are defined in Section 4.1 of RFC 3461
Currently, the possible notification condition values are "NEVER", "SUCCESS", "FAILURE", and "DELAY".
Note that the value "NEVER" is never combined with any other value.
orcpt  Match the original recipient, or ORCPT, value associated with the TO address used in the SMTP RCPT TO command that resulted in this message getting delivered to this user, with xtext encoding removed.
The syntax and semantics of the ORCPT parameter are defined in Section 4.2 of RFC 3461
ret  Match the return of content, or RET, value given in the SMTP MAIL FROM command.
The syntax and semantics of the RET parameter are defined in Section 4.3 of RFC 3461
The possible return of content values are "FULL" and "HDRS".
envid  Match the envelope identifier, or ENVID, value in decoded form given in the SMTP MAIL FROM command.
The syntax and semantics of the ENVID parameter are defined in Section 4.4 of RFC 3461
The envelope test fails unconditionally for each of these envelope  part strings if the specified envelope parameter does not exist for the current message or recipient.
The envelope test's ADDRESS PART argument assumes the string being tested
has the syntax of an email address.
None of the new envelope parts defined here have address syntax; accordingly, it is an error to specify an ADDRESS PART argument in conjunction with these new envelope parts.
The "relational" extension [RFC5231] adds a match type called ":count".
The count of an envelope test with an envelope part of "orcpt", "ret", and "envid" is 1 if the corresponding SMTP parameter is present and 0 otherwise.
The count of an envelope test with an envelope part of "notify" is equal to the number of notification conditions specified and 0 if the NOTIFY parameter is not present.
The fact that the NOTIFY envelope parameter is multivalued and the notify envelope part turns this into a list of values makes it easy to check to see if a given value is present without having to worry about other values:
# Check whether SUCCESS notifications were requested, # irrespective of any other requests that were made if envelope "notify" "SUCCESS" {
whatever } Checking to see if a given request is the only one present is a little trickier, however: require ["envelope", "envelope dsn", "relational", "comparator i;ascii numeric"];
# Check whether only FAILURE notifications were requested if allof ( envelope "notify" "FAILURE",
The orcpt envelope part always contains an address type indicator prefix in addition to an address, which must be taken into account in any tests: require ["envelope", "envelope dsn"];
# See if the orcpt is an RFC822 address in the example.com # domain if envelope :
The "envelope deliverby" extension does not define any new tests or actions; rather, it adds four values to the list of possible (case  insensitive)
envelope part strings defined in Section 5.4 of [RFC5228] and an optional :zone tagged argument.
This updates the usage description for envelope to: Usage:   envelope [COMPARATOR]
[MATCH TYPE] [:zone <time zone: string>]
<envelope part: string list> <key list:
These new envelope parts correspond to the new MAIL FROM parameters defined in Section 4 of [RFC2852].
bytimeabsolute  Match the current value of the initial integer part of the Deliver
By extension's BY parameter on the SMTP MAIL FROM command, converted into an absolute time represented in restricted ISO 8601 format.
The restricted ISO 8601 format is specified by the date time ABNF production given in [RFC3339], Section 5.6, with the added restrictions that the letters "T" and "Z" MUST be in upper case, and a time zone offset of zero MUST be represented by "Z" and not " 00:00".
the current value of the initial integer part of the Deliver
By extension's BY parameter specified in the SMTP MAIL FROM command.
a string computed from the by mode part of the Deliver
The possible values are "notify" and "return", which correspond to the BY parameter mode specifier characters "N" and "R", respectively.
the trace modifier computed from the by trace modifier on the Deliver
These values correspond to the presence or absence of the by trace "T" modifier, respectively.
The envelope test fails unconditionally for each of these envelope  part strings if the BY SMTP MAIL FROM parameter does not exist for the current message or recipient.
The new :zone argument specifies a time zone offset string that any bytimeabsolute value is to be shifted to prior to testing.
:zone has no effect on envelope parts other than bytimeabsolute.
The first two digits indicate the number of hours difference from Universal Time, and the last two digits indicate the number of minutes difference from Universal Time.
Note that this agrees with the [RFC5322] format for time zone offsets, not the ISO 8601 format.
The local time zone MUST be used for bytimeabsolute if the :zone argument is omitted.
The envelope test's ADDRESS PART argument assumes the string being tested
has the syntax of an email address.
None of the new envelope parts defined here have address syntax; accordingly, it is an error to specify an ADDRESS PART argument in conjunction with these new envelope parts.
The "relational" extension [RFC5231] adds a match type called ":count".
The count of an envelope test with an envelope part of "bytime", "bymode", and "bytrace" is 1 if the BY parameter is present and 0 otherwise.
It is important to note that the Deliver By by time is decremented as the message passes through the transport infrastructure.
Accordingly, it is not possible to tell what the message originator set the value to; only the amount of time remaining at the moment the sieve is run can be determined.
Additionally, note that bytimerelative values can be negative, making it necessary to either perform additional checks or else use a comparator that, unlike i;ascii numeric, is capable of handling signed integers.
As noted above, this extension does not provide access to the originator's initial by time setting for the simple reason that this information is not part of the envelope.
It can, however, be used to check and see if the message was delivered within the allotted time.
Note the additional check to see if the value is negative: require ["envelope", "envelope deliverby", "relational", "comparator i;ascii numeric"];
# Check to see if this message didn't make it in the time allotted by # the originator.
# do whatever } This operation can be done more simply if the date [RFC5260] and variables [RFC5229] extensions are available: require ["envelope", "envelope deliverby", "relational", "date", "variables"];
# Check to see if this message didn't make it in the time allotted by # the originator.
A similar check could be written using :zone if the action taken depends on having the by time represented in a particular zone: require ["envelope", "envelope deliverby", "relational", "date", "variables"];
The "redirect dsn" extension does not define any new tests or actions; rather, it adds two new arguments, NOTIFY and RET, to the redirect action defined in Section 4.2 of [RFC5228].
This updates the usage description for redirect to: Usage:
The syntax for the NOTIFY and RET arguments are: NOTIFY   "
:notify" notify value notify value
DQUOTE ("NEVER" / notify esmtp list)
The notify list element ABNF production is defined in Section 4.1 of [RFC3461].
When these arguments are specified, they set the corresponding NOTIFY ESMTP RCPT TO and RET ESMTP MAIL FROM parameters, respectively.
These arguments are only honored if the delivery status notification (DSN) ESMTP extension is available.
When the DSN extension is not available, these arguments MUST be ignored and MUST NOT cause an error.
MAIL FROM Address Selection RFC 5228 does not require that any particular envelope sender address be associated with redirected messages.
However, the redirect dsn extension isn't terribly useful if the place where the delivery status notifications are sent isn't known.
Accordingly, when either :notify or :ret is specified and the envelope sender address isn't empty, implementations MUST set the envelope sender address to the address of the sieve owner.
One possible use of :notify on redirect is to combine the copy extension [RFC3894] with the ability to suppress nondelivery notifications to generate a private copy of selected messages with no side effects or error notifications: require ["copy", "redirect dsn"];
# Make a private copy of messages from user@example.com if address "from" "
The "redirect deliverby" extension does not define any new tests or actions; rather, it adds three new arguments, BYTIME, BYMODE, and BYTRACE, to the redirect action defined in Section 4.2 of [RFC5228].
bytimerelative specifies the number of seconds within which the message should be delivered.
This parameter does not allow specification of negative values; it should not be necessary to specify such values in this context.
:bytimeabsolute specifies an absolute time limit on delivery.
The limit in this case is specified in the restricted ISO 8601 format specified by the date time ABNF production given in [RFC3339].
:bymode specifies whether a notification should be sent or the message simply returned if the time limit is exceeded.
The default is "return" if :bymode is not specified.
:bytrace, if specified, activates message tracing.
The semantics of delivery time limits and these parameters are specified and discussed at length in [RFC2852].
It is an error to specify either :bymode or :bytrace without either :bytimeabsolute or :bytimerelative.
When these arguments are specified, they are used to construct the corresponding BY ESMTP MAIL FROM parameter.
The :bytimeabsolute or :bytimerelative value becomes the by time, the :bymode becomes the by mode value, and :bytrace sets the by trace modifier.
If the Deliver By extension is unavailable, the handling of the redirected message MUST conform to the semantics specified in [RFC2852], Section 4.1.4 for relaying to a server that does not support the Deliver By SMTP extension.
MAIL FROM Address Selection RFC 5228 does not require that any particular envelope sender address be associated with redirected messages.
However, the redirect  deliverby extension, like the redirect dsn extension, isn't terribly useful if the place where any delivery status notifications are sent isn't known.
Accordingly, when either :bytimeabsolute or :bytimerelative is specified and the envelope sender address isn't empty, implementations MUST set the envelope sender address to the address of the sieve owner.
copy :bytimerelative 600 "cellphone@example.com"; }
The envelope dsn and envelope deliverby extensions provide access to additional message envelope information.
This is not believed to raise any additional security issues beyond those for the Sieve "envelope" test.
The redirect dsn extension allows specification of the delivery status notification's NOTIFY parameter, which can cause the generation of notification messages that might otherwise not be generated, especially if notification in the event of successful delivery is required.
Sites that limit the ability to request success notifications will also need to restrict the ability to request them using the redirect dsn extension.
Similarly, the redirect deliverby extension is used to control how long the transport infrastructure will continue to attempt to deliver a message before giving up, which could result in the generation of additional notification messages.
While the underlying Deliver By extension does have a minimum by time limit, sites may wish to impose additional limits on the minimum by time allowed in a redirect action.
All of the security considerations given in the base Sieve specification also apply to this extension.
The following template specifies the IANA registration of the Sieve extension specified in this document:
Registration of new Sieve extensions Capability name:
Sieve discussion list <sieve@ietf.org> Capability name: redirect dsn Description:
The "redirect dsn" extension extends the redirect action to allow specification of the NOTIFY and RET ESMTP parameters associated with the DSN SMTP extension defined in RFC 3461.
This information has been added to the list of Sieve extensions available from http://www.iana.org.
