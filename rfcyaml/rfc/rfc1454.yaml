- title: __initial_text__
  contents:
  - '             Comparison of Proposals for Next Version of IP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This is a slightly edited reprint of RARE Technical Report\n   (RTC(93)004).\n\
    \   The following is a brief summary of the characteristics of the three\n   main\
    \ proposals for replacing the current Internet Protocol. It is not\n   intended\
    \ to be exhaustive or definitive (a brief bibliography at the\n   end points to\
    \ sources of more information), but to serve as input to\n   the European discussions\
    \ on these proposals, to be co-ordinated by\n   RARE and RIPE. It should be recognised\
    \ that the proposals are\n   themselves \"moving targets\", and in so far as this\
    \ paper is accurate\n   at all, it reflects the position at the 25th IETF meeting\
    \ in\n   Washington, DC. Comments from Ross Callon and Paul Tsuchiya on the\n\
    \   original draft have been incorporated.  Note that for a time the term\n  \
    \ \"IPv7\" was use to mean the eventual next version of IP, but that the\n   same\
    \ term was closely associated with a particilar proposal, so the\n   term \"IPng\"\
    \ is now used to identify the eventual next generation of\n   IP.\n   The paper\
    \ begins with a \"generic\" discussion of the mechanisms for\n   solving problems\
    \ and achieving particular goals, before discussing\n   the proposals invidually.\n"
- title: 1. WHY IS THE CURRENT IP INADEQUATE?
  contents:
  - "1. WHY IS THE CURRENT IP INADEQUATE?\n   The problem has been investigated and\
    \ formulated by the ROAD group,\n   but briefly reduces to the following:\n  \
    \    - Exhaustion of IP Class B Address Space.\n      - Exhaustion of IP Address\
    \ Space in General.\n      - Non-hierarchical nature of address allocation leading\
    \ to flat\n        routing space.\n   Although the IESG requirements for a new\
    \ Internet Protocol go further\n   than simply routing and addressing issues,\
    \  it is these issues that\n   make extension of the current protocol an impractical\
    \ option.\n   Consequently, most of the discussion and development of the various\n\
    \   proposed protocols has concentrated on these specific problems.\n   Near term\
    \ remedies for these problems include the CIDR proposals\n   (which permit the\
    \ aggregation of Class C networks for routing\n   purposes) and assignment policies\
    \ which will allocate Class C network\n   numbers in a fashion which CIDR can\
    \ take advantage of. Routing\n   protocols supporting CIDR are OSPF and BGP4.\
    \ None of these are pre-\n   requisites for the new IP (IPng), but are necessary\
    \ to prolong the\n   life of the current Internet long enough to work on longer-term\n\
    \   solutions. Ross Callon points out that there are other options for\n   prolonging\
    \ the life of IP and that some ideas have been distributed\n   on the TUBA list.\n\
    \   Longer term proposals are being sought which ultimately allow for\n   further\
    \ growth of the Internet. The timescale for considering these\n   proposals is\
    \ as follows:\n      - Dec 15 Issue selection criteria as RFC.\n      - Feb 12\
    \ Two interoperable implementations available.\n      - Feb 26 Second draft of\
    \ proposal documents available.\n   The (ambitious) target is for a decision to\
    \ be made at the 26th IETF\n   (Columbus, Ohio in March 1993) on which proposals\
    \ to pursue.\n   The current likely candidates for selection are:\n      - PIP\
    \ ('P' Internet Protocol - an entirely new protocol).\n      - TUBA (TCP/UDP with\
    \ Big Addresses - uses ISO CLNP).\n      - SIP (Simple IP - IP with larger addresses\
    \ and fewer options).\n   There is a further proposal from Robert Ullman of which\
    \ I don't claim\n   to have much knowledge. Associated with each of the candidates\
    \ are\n   transition plans, but these are largely independent of the protocol\n\
    \   itself and contain elements which could be adopted separately, even\n   with\
    \ IP v4, to further extend the life of current implementations and\n   systems.\n"
- title: 2. WHAT THE PROPOSALS HAVE IN COMMON
  contents:
  - '2. WHAT THE PROPOSALS HAVE IN COMMON

    '
- title: 2.1 Larger Addresses
  contents:
  - "2.1 Larger Addresses\n   All the proposals (of course) make provision for larger\
    \ address\n   fields which not only increase the number of addressable systems,\
    \ but\n   also permit the hierarchical allocation of addresses to facilitate\n\
    \   route aggregation.\n"
- title: 2.2 Philosophy
  contents:
  - "2.2 Philosophy\n   The proposals also originate from a \"routing implementation\"\
    \ view of\n   the world - that is to say they focus on the internals of routing\n\
    \   within the network and do not primarily look at the network service\n   seen\
    \ by the end-user, or by applications. This is perhaps inevitable,\n   especially\
    \ given the tight time constraints for producing\n   interoperable implementations.\
    \ However, the (few) representatives of\n   real users at the 25th IETF, the people\
    \ whose support is ultimately\n   necessary to deploy new host implementations,\
    \ were distinctly\n   unhappy.\n   There is an inbuilt assumption in the proposals\
    \ that IPng is\n   intended to be a universal protocol: that is, that the same\
    \ network-\n   layer protocol will be used between hosts on the same LAN, between\n\
    \   hosts and routers, between routers in the same domain, and between\n   routers\
    \ in different domains. There are some advantages in defining\n   separate \"\
    access\" and \"long-haul\" protocols, and this is not\n   precluded by the requirements.\
    \ However, despite the few opportunities\n   for major change of this sort within\
    \ the Internet, the need for speed\n   of development and low risk have led to\
    \ the proposals being\n   incremental, rather than radical, changes to well-proven\
    \ existing\n   technology.\n   There is a further unstated assumption that the\
    \ architecture is\n   targeted at the singly-connected host. It is currently difficult\
    \ to\n   design IPv4 networks which permit hosts with more than one interface\n\
    \   to benefit from increased bandwidth and reliability compared with\n   singly-connected\
    \ hosts (a consequence of the address belonging to the\n   interface and not the\
    \ host). It would be preferable if topological\n   constraints such as these were\
    \ documented. It has been asserted that\n   this is not necessarily a constraint\
    \ of either the PIP or TUBA\n   proposals, but I believe it is an issue that has\
    \ not emerged so far\n   amongst the comparative criteria.\n"
- title: 2.3 Source Routing
  contents:
  - "2.3 Source Routing\n   The existing IPv4 has provision for source-specified routes,\
    \ though\n   this is little used [would someone like to contradict me here?],\n\
    \   partly because it requires knowledge of the internal structure of the\n  \
    \ network down to the router level. Source routes are usually required\n   by\
    \ users when there are policy requirements which make it preferable\n   or imperative\
    \ that traffic between a source and destination should\n   pass through particular\
    \ administrative domains. Source routes can\n   also be used by routers within\
    \ administrative domains to route via\n   particular logical topologies. Source-specified\
    \ routing requires a\n   number of distinct components:\n      a.  The specification\
    \ by the source of the policy by which the\n          route should be selected.\n\
    \      b.  The selection of a route appropriate to the policy.\n      c.  Marking\
    \ traffic with the identified route.\n      d.  Routing marked traffic accordingly.\n\
    \   These steps are not wholly independent. The way in which routes are\n   identified\
    \ in step (c) may constrain the kinds of route which can be\n   selected in previous\
    \ steps. The destination, inevitably, participates\n   in the specification of\
    \ source routes either by advertising the\n   policies it is prepared to accept\
    \ or, conceivably, by a negotiation\n   process.\n   All of the proposals mark\
    \ source routes by adding a chain of (perhaps\n   partially-specified) intermediate\
    \ addresses to each packet. None\n   specifies the process by which a host might\
    \ acquire the information\n   needed to  specify these intermediate addresses\
    \ [not entirely\n   unreasonably at this stage, but further information is expected].\
    \ The\n   negative consequences of these decisions are:\n      - Packet headers\
    \ can become quite long, depending on the number of\n        intermediate addresses\
    \ that must be specified (although there are\n        mechanisms which are currently\
    \ specified or which can be imagined\n        to specify only the significant\
    \ portions of intermediate addresses).\n      - The source route may have to be\
    \ re-specified periodically if\n        particular intermediate addresses are\
    \ no longer reachable.\n   The positive consequences are:\n      - Inter-domain\
    \ routers do not have to understand policies, they\n        simply have to mechanically\
    \ follow the source route.\n      - Routers do not have to store context identifying\
    \ routes, since\n        the information is specified in each packet header.\n\
    \      - Route servers can be located anywhere in the network, provided\n    \
    \    the hosts know how to find them.\n"
- title: 2.4 Encapsulation
  contents:
  - "2.4 Encapsulation\n   Encapsulation is the ability to enclose a network-layer\
    \ packet within\n   another one so that the actual packet can be directed via\
    \ a path it\n   would not otherwise take to a router that can remove the outermost\n\
    \   packet and direct the resultant packet to its destination.\n   Encapsulation\
    \ requires:\n      a.  An indication in the packet that it contains another packet.\n\
    \      b.  A function in routers which, on receiving such a packet,\n        \
    \  removes the encapsulation and re-enters the forwarding process.\n   All the\
    \ proposals support encapsulation. Note that it is possible to\n   achieve the\
    \ effect of source routing by suitable encapsulation by the\n   source.\n"
- title: 2.5 Multicast
  contents:
  - "2.5 Multicast\n   The specification of addresses to permit multicast with various\n\
    \   scopes can be accomodated by all the proposals. Internet-wide\n   multicast\
    \ is, of course, for further study!\n"
- title: 2.6 Fragmentation
  contents:
  - "2.6 Fragmentation\n   All the proposals support the fragmentation of packets\
    \ by\n   intermediate routers, though there has been some recent discussion of\n\
    \   removing this mechanism from some of the proposals and requiring the\n   use\
    \ of an MTU-discovery process to avoid the need for fragmentation.\n   Such a\
    \ decision would effectively preclude the use of transport\n   protocols which\
    \ use message-count sequence numbering (such as OSI\n   Transport) over the network,\
    \ as only protocols with byte-count\n   acknowledgement (such as TCP) can deal\
    \ with MTU reductions during the\n   lifetime of a connection. OSI Transport may\
    \ not be particularly\n   relevant to the IP community (though it may be of relevance\
    \ to\n   commercial suppliers providing multiprotocol services), however the\n\
    \   consequences for the types of services which may be supported over\n   IPng\
    \ should be noted.\n"
- title: 2.7 The End of Lifetime as We Know It
  contents:
  - "2.7 The End of Lifetime as We Know It\n   The old IPv4 \"Time to Live\" field\
    \ has been recast in every case as a\n   simple hop count, largely on grounds\
    \ of implementation convenience.\n   Although the old TTL was largely implemented\
    \ in this fashion anyway,\n   it did serve an architectural purpose in putting\
    \ an upper bound on\n   the lifetime of a packet in the network. If this field\
    \ is recast as a\n   hop-count, there must be some other specification of the\
    \ maximum\n   lifetime of a packet in the network so that a source host can ensure\n\
    \   that network-layer fragment ids and transport-layer sequence numbers\n   are\
    \ never in danger of re-use whilst there is a danger of confusion.\n   There are,\
    \ in fact, three separate issues here:\n      1. Terminating routing loops (solved\
    \ by hop count).\n      2. Bounding lifetime of network-layer packets (a necessity,\n\
    \         unspecified so far) to support assumptions by the transport\n      \
    \   layer.\n      3. Permitting the source to place further restrictions on packet\n\
    \         lifetime (for example so that \"old\" real-time traffic can be\n   \
    \      discarded in favour of new traffic in the case of congestion\n        \
    \ (an optional feature, unspecified so far).\n"
- title: 3. WHAT THE PROPOSALS ONLY HINT AT
  contents:
  - '3. WHAT THE PROPOSALS ONLY HINT AT

    '
- title: 3.1 Resource Reservation
  contents:
  - "3.1 Resource Reservation\n   Increasingly, applications require a certain bandwidth\
    \ or transit\n   delay if they are to be at all useful (for example, real-time\
    \ video\n   and audio transport). Such applications need procedures to indicate\n\
    \   their requirements to the network and to have the required resources\n   reserved.\
    \  This process is in some ways analogous to the selection of\n   a source route:\n\
    \      a.  The specification by the source of its requirements.\n      b.  The\
    \ confirmation that the requirements can be met.\n      c.  Marking traffic with\
    \ the requirement.\n      d.  Routing marked traffic accordingly.\n   Traffic\
    \ which is routed according to the same set of resource\n   requirements is sometimes\
    \ called a \"flow\". The identification of\n   flows requires a setup process,\
    \ and it is tempting to suppose that\n   the same process might also be used to\
    \ set up source routes, however,\n   there are a number of differences:\n    \
    \  - All the routers on a path must participate in resource\n        reservation\
    \ and agree to it.\n      - Consequently, it is relatively straightforward to\
    \ maintain\n        context in each router and the identification for flows can\
    \ be\n        short.\n      - The network can choose to reroute on failure.\n\
    \   By various means, each proposal could carry flow-identification,\n   though\
    \ this is very much \"for future study\" at present. No setup\n   mechansisms\
    \ are defined. The process for actually reserving the\n   resources is a higher-order\
    \ problem. The interaction between source-\n   routing and resource reservation\
    \ needs further investigation:\n   although the two are distinct and have different\
    \ implementation\n   constraints, the consequence of having two different mechanisms\
    \ could\n   be that it becomes difficult to select routes which meet both policy\n\
    \   and performance goals.\n"
- title: 3.2 Address-Assignment Policies
  contents:
  - "3.2 Address-Assignment Policies\n   In IPv4, addresses were bound to systems\
    \ on a long-term basis and in\n   many cases could be used interchangeably with\
    \ DNS names. It is\n   tacitly accepted that the association of an address with\
    \ a particular\n   system may be more volatile in IPng. Indeed, one of the proposals,\n\
    \   PIP, makes a distinction between the identification of a system (a\n   fixed\
    \ quantity) and its address, and permits the binding to be\n   altered on the\
    \ fly. None of the proposals defines bounds for the\n   lifetime of addresses,\
    \ and the manner in which addresses are assigned\n   is not necessarily bound\
    \ to a particular proposal. For example,\n   within the larger address space to\
    \ be provided by IPng, there is a\n   choice to be made of assigning the \"higher\
    \ order\" part of the\n   hierarchical address in a geographically-related fashion\
    \ or by\n   reference to service provider. Geographically-based addresses can\
    \ be\n   constant and easy to assign, but represent a renewed danger of\n   degeneration\
    \ to \"flat\" addresses within the region of assignment,\n   unless certain topological\
    \ restrictions are assumed.  Provider-based\n   address assignment results in\
    \ a change of address (if providers are\n   changed) or multiple addresses (if\
    \ multiple providers are used).\n   Mobile hosts (depending on the underlying\
    \ technology) can present\n   problems in both geographic and provider-based schemes.\n\
    \   Without firm proposals for address-assignment schemes and the\n   consequences\
    \ for likely address lifetimes, it is impossible to assume\n   that the existing\
    \ DNS model by which name-to-address bindings can be\n   discovered remains valid.\n\
    \   Note that there is an interaction between the mechanism for\n   assignment\
    \ of addresses and way in which automatic configuration may\n   be deployed.\n"
- title: 3.3 Automatic Configuration
  contents:
  - "3.3 Automatic Configuration\n   Amongst the biggest (user) bugbears of current\
    \ IP services is the\n   administrative effort of maintaining basic configuration\
    \ information,\n   such as assigning names and addresses to hosts, ensuring these\
    \ are\n   refelected in the DNS, and keeping this information correct. Part of\n\
    \   this results from poor implementation (or the blind belief that vi\n   and\
    \ awk are network management tools). However, a lot of the problems\n   could\
    \ be alleviated by making this process more automatic. Some of\n   the possibilities\
    \ (some mutually-exlusive) are:\n      - Assigning host addresses from some (relative)\
    \ invariant, such\n        as a LAN address.\n      - Defining a protocol for\
    \ dynamic assignment of addresses within a\n        subnetwork.\n      - Defining\
    \ \"generic addresses\" by which hosts can without\n        preconfiguration reach\
    \ necessary local servers (DNS, route\n        servers, etc.).\n      - Have hosts\
    \ determine their name by DNS lookup.\n      - Have hosts update their name/address\
    \ bindings when their\n        configuration changes.\n   Whilst a number of the\
    \ proposals make mention of some of these\n   possibilities, the choice of appropriate\
    \ solutions depends to some\n   extent on address-assignment policies. Also, dynamic\
    \ configuration\n   results in some difficult philosopical and practical issues\
    \ (what\n   exactly is the role of an address?, In what sense is a host \"the\
    \ same\n   host\" when its address changes?, How do you handle dynamic changes\
    \ to\n   DNS mappings and how do you authenticate them?).\n   The groups involved\
    \ in the proposals would, I think, see most of\n   these questions outside their\
    \ scope. It would seem to be a failure in\n   the process of defining and selecting\
    \ candidates for IPng that\n   \"systemness\" issues like these will probably\
    \ not be much discussed.\n   This is recognised by the participants, and it is\
    \ likely that, even\n   when a decision is made, some of these ideas will be revisited\
    \ by a\n   wider audience.\n   It is, however, unlikely that IP will make an impact\
    \ on proprietary\n   networking systems for the non-technical environment (e.g.,\
    \ Netware,\n   Appletalk), without automatic configuration being taken seriously\n\
    \   either in the architecture, or by suppliers. I believe that there are\n  \
    \ ideas on people's heads of how to address these issues - they simply\n   have\
    \ not made it onto paper yet.\n"
- title: 3.4 Application Interface/Application Protocol Changes
  contents:
  - "3.4 Application Interface/Application Protocol Changes\n   A number of common\
    \ application protocols (FTP, RPC, etc.) have been\n   identified which specifically\
    \ transfer 32-bit IPv4 addresses, and\n   there are doubtless others, both standard\
    \ and proprietary. There are\n   also many applications which treat IPv4 addresses\
    \ as simple 32-bit\n   integers. Even applications which use BSD sockets and try\
    \ to handle\n   addresses opaquely will not understand how to parse or print longer\n\
    \   addresses (even if the socket structure is big enough to accommodate\n   them).\n\
    \   Each proposal, therefore, needs to specify mechanisms to permit\n   existing\
    \ applications and interfaces to operate in the new\n   environment whilst conversion\
    \ takes place. It would be useful also,\n   to have (one) specification of a reference\
    \ programming interface for\n   (TCP and) IPng (which would also operate on IPv4),\
    \ to allow\n   developers to begin changing applications now. All the proposals\n\
    \   specify transition mechansisms from which existing application-\n   compatibility\
    \ can be inferred. There is no sign yet of a new\n   interface specification independent\
    \ of chosen protocol.\n"
- title: 3.5 DNS Changes
  contents:
  - "3.5 DNS Changes\n   It is obvious that there has to be a name to address mapping\
    \ service\n   which supports the new, longer, addresses. All the proposals assume\n\
    \   that this service will be provided by DNS, with some suitably-defined\n  \
    \ new resource record. There is some discussion ongoing about the\n   appropriateness\
    \ of returning this information along with \"A\" record\n   information in response\
    \ to certain enquiries, and which information\n   should be requested first. There\
    \ is a potential tradeoff between the\n   number of queries needed to establish\
    \ the correct address to use and\n   the potential for breaking existing implementations\
    \ by returning\n   information that they do not expect.\n   There has been heat,\
    \ but not light, generated by discussion of  the\n   use of DNS for auto-configuration\
    \ and the scaling (or otherwise) of\n   reverse translations for certain addressing\
    \ schemes.\n"
- title: 4. WHAT THE PROPOSALS DON'T REALLY MENTION
  contents:
  - '4. WHAT THE PROPOSALS DON''T REALLY MENTION

    '
- title: 4.1 Congestion Avoidance
  contents:
  - "4.1 Congestion Avoidance\n   IPv4 offers \"Source Quench\" control messages which\
    \ may be used by\n   routers to indicate to a source that it is congested and\
    \ has or may\n   shortly drop packets. TUBA/PIP have a \"congestion encountered\"\
    \ bit\n   which provides similar information to the destination. None of these\n\
    \   specifications offers detailed instructions on how to use these\n   facilities.\
    \ However, there has been a substantial body of analysis\n   over recent years\
    \ that suggests that such facilities can be used (by\n   providing information\
    \ to the transport protocol) not only to signal\n   congestion, but also to minimise\
    \ delay through the network layer.\n   Each proposal can offer some form of congestion\
    \  signalling, but none\n   specifies a mechanism for its use (or an analysis\
    \ of whether the\n   mechanism is in fact useful).\n   As a user of a network\
    \ service which currently has a discard rate of\n   around 30% and a round-trip-time\
    \ of up to 2 seconds for a distance of\n   only 500 miles I would be most interested\
    \ in some proposals for a\n   more graceful degradation of the network service\
    \ under excess load.\n"
- title: 4.2 Mobile Hosts
  contents:
  - "4.2 Mobile Hosts\n   A characteristic of mobile hosts is that they (relatively)\
    \ rapidly\n   move their physical location and point of attachment to the network\n\
    \   topology.  This obviously has signficance for addressing (whether\n   geographical\
    \ or topological) and routing. There seems to be an\n   understanding of the problem,\
    \ but so far no detailed specification of\n   a solution.\n"
- title: 4.3 Accounting
  contents:
  - "4.3 Accounting\n   The IESG selection criteria require only that proposals do\
    \ not have\n   the effect of preventing the collection of information that may\
    \ be of\n   interest for audit or billing purposes. Consequently, none of the\n\
    \   proposals  consider potential accounting mechanisms.\n"
- title: 4.4 Security
  contents:
  - "4.4 Security\n   \"Network Layer Security Issues are For Further Study\". Or\
    \ secret.\n   However, it would be useful to have it demonstrated that each\n\
    \   candidate could be extended to provide a level of security, for\n   example\
    \ against address-spoofing. This will be particularly\n   important if resource-allocation\
    \ features will permit certain hosts\n   to claim large chunks of available bandwidth\
    \ for specialised\n   applications.\n   Note that providing some level of security\
    \ implies manual\n   configuration of security information within the network\
    \ and must be\n   considered in relationship to auto-configuration goals.\n"
- title: 5. WHAT MAKES THE PROPOSALS DIFFERENT?
  contents:
  - "5. WHAT MAKES THE PROPOSALS DIFFERENT?\n   Each proposal is about as different\
    \ to the others as it is to IPv4 -\n   that is the differences are small in principle,\
    \ but may have\n   significant effects (extending the size of addresses is only\
    \ a small\n   difference in principle!). The main distinct characteristics are:\n\
    \   PIP:\n      PIP has an innovative header format that facilitates hierarchical,\n\
    \      policy and virtual-circuit routing. It also has \"opaque\" fields in\n\
    \      the header whose semantics can be defined differently in different\n  \
    \    administrative domains and whose use and translation can be\n      negotiated\
    \ across domain boundaries. No control protocol is yet\n      specified.\n   SIP:\n\
    \      SIP offers a \"minimalist\" approach - removing all little-used\n     \
    \ fields from the IPv4 header and extending the size of addresses to\n      (only)\
    \ 64 bits. The control protocol is based on modifications to\n      ICMP. This\
    \ proposal has the advantages of processing efficiency\n      and familiarity.\n\
    \   TUBA:\n      TUBA is based on CLNP (ISO 8473) and the ES-IS (ISO 9542) control\n\
    \      protocol. TUBA provides for the operation of TCP transport and UDP\n  \
    \    over a CLNP network. The main arguments in favour of TUBA are that\n    \
    \  routers already exist which can handle the network-layer protocol,\n      that\
    \ the extensible addresses offer a wide margin of \"future-\n      proofing\"\
    \ and that there is an opportunity for convergence of\n      standards and products.\n"
- title: 5.1 PIP
  contents:
  - "5.1 PIP\n   PIP packet headers contain a set of instructions to the router's\n\
    \   forwarding processor to perform certain actions on the packet. In\n   traditional\
    \ protocols, the contents of certain fields imply certain\n   actions; PIP gives\
    \ the source the flexibility to write small\n   \"programs\" which direct the\
    \ routing of packets through the network.\n   PIP addresses have an effectively\
    \ unlimited length: each level in the\n   topological hierarchy of the network\
    \ contributes part of the address\n   and addresses change as the network topology\
    \ changes. In a completely\n   hierarchical network topology, the amount of routing\
    \ information\n   required at each level could be very small. However, in practice,\n\
    \   levels of hierarchy will be determined more by commercial and\n   practical\
    \ factors than by the constraints of any particular routing\n   protocol. A greater\
    \ advantage is that higher-order parts of the\n   address may be omitted in local\
    \ exchanges and that lower-order parts\n   may be omitted in source routes, reducing\
    \ the amount of topological\n   information that host systems are required to\
    \ know.\n   There is an assumption that PIP addresses are liable to change, so\
    \ a\n   further quantity, the PIP ID, is assigned to systems for the purposes\n\
    \   of identification. It isn't clear that this quantity has any purpose\n   which\
    \ could not equally be served by a DNS name [it is more compact,\n   but equally\
    \ it does not need to be carried in every packet and\n   requires an additional\
    \ lookup]. However, the problem does arise of\n   how two potentially-communicating\
    \ host systems find the correct\n   addresses to use.\n   The most complex part\
    \ of PIP is that the meaning of some of the\n   header fields is determined by\
    \ mutual agreement within a particular\n   domain. The semantics of specific processing\
    \ facilities (for example,\n   queuing priority) are registered globally, but\
    \ the actual use and\n   encoding of requests for these facilities in the packet\
    \ header can be\n   different in different domains. Border routers between two\
    \ domains\n   which use different encodings must map  from one encoding to another.\n\
    \   Since routers may not only be adjacent physically to other domains,\n   but\
    \ also via \"tunnels\", the number of different encoding rules a\n   router may\
    \ need to understand is potentially quite large. Although\n   there is a saving\
    \ in header space by using such a scheme as opposed\n   to the more familiar \"\
    options\", the cost in the complexity of\n   negotiating the use and encoding\
    \ of these facilities, together with\n   re-coding the packets at each domain\
    \ border, is a subject of some\n   concern. Although it may be possible for hosts\
    \ to \"precompile\" the\n   encoding rules for their local domain, there are many\
    \ potential\n   implementaion difficulties.\n   Although PIP offers the most flexibility\
    \ of the three proposals, more\n   work needs to be done on \"likely use\" scenarios\
    \ which make the\n   potential advantages and disadvantages more concrete.\n"
- title: 5.2 SIP
  contents:
  - "5.2 SIP\n   SIP is simply IP with larger addresses and fewer options. Its main\n\
    \   advantage is that it is even simpler that IPv4 to process. Its main\n   disadvantages\
    \ are:\n      - It is far from clear that, if 32 bits of address are\n       \
    \ insufficient, 64 will be enough for the forseeable future;\n      - although\
    \ there are a few \"reserved\" bits in the header, the\n        extension of SIP\
    \ to support new features is not obvious.\n   There's really very little else\
    \ to say!\n"
- title: 5.3 TUBA
  contents:
  - "5.3 TUBA\n   The characteristics of ISO CLNS are reasonably well known: the\n\
    \   protocol bears a strong cultural resemblance to IPv4, though with\n   20-byte\
    \ network-layer addressing. Apart from a spurious \"Not Invented\n   Here\" prejudice,\
    \ the main argument againt TUBA is that it is rather\n   too like IPv4, offering\
    \ nothing other than larger, more flexible,\n   addresses.  There is proof-by-example\
    \ that routers are capable of\n   handling the (very) long addresses efficiently,\
    \ rather less that the\n   longer headers do not adversely impact network bandwidth.\n\
    \   There are a number of objections to the proposed control protocol\n   (ISO\
    \ 9542):\n      - My early experience is that the process by which routers\n \
    \       discover hosts is inefficient and resource consuming for\n        routers\
    \ - and requires quite fine timer resolution on hosts -\n        if large LANs\
    \ are to be accomodated reasonably. Proponents of\n        TUBA suggest that recent\
    \ experience suggests that ARP is no\n        better, but I think this issue needs\
    \ examination.\n      - The \"redirect\" mechanism is based on (effectively) LAN\n\
    \        addresses and not network addresses, meaning that local routers\n   \
    \     can only \"hand-off\" complex routing decisions to other routers\n     \
    \   on the same LAN.  Equally, redirection schemes (such as that of\n        IPv4)\
    \ which redirect to network addresses can result in\n        unnecessary extra\
    \ hops.  Analysis of which solution is better\n        is rather dependent on\
    \ the scenarios which are constructed.\n   To be fair, however, the part of the\
    \ protocol which provides for\n   router-discovery provides a mechanism, absent\
    \ from other proposals,\n   by which hosts can locate nearby gateways and potentially\n\
    \   automatically configure their addresses.\n"
- title: 6. Transition Plans
  contents:
  - "6. Transition Plans\n   It should be obvious that a transition which permits\
    \ \"old\" hosts to\n   talk to \"new\" hosts requires:\n   Either:\n      (a)\
    \ That IPng hosts can also use IPv4 or\n      (b) There is translation by an intermediate\
    \ system\n   and either:\n      (c) The infrastructure between systems is capable\
    \ of carrying both\n          IPng and IPv4 or (d) Tunneling or translation is\
    \ used to carry\n          one protocol within another in parts of the network\n\
    \   The transition plans espoused by the various proposals are simply\n   different\
    \ combinations of the above. Experience would tend to show\n   that all these\
    \ things will in fact happen, regardless of which\n   protocol is chosen.\n  \
    \ One problem of the tunneling/translation process is that there is\n   additional\
    \ information (the extra address parts) which must be\n   carried across IPv4\
    \ tunnels in the network. This can either be\n   carried by adding an extra \"\
    header\" to the data before encapsulation\n   in the IPv4 packet, or by encoding\
    \ the information as new IPv4 option\n   types. In the former case, it may be\
    \ difficult to map error messages\n   correctly, since the original packet is\
    \ truncated before return; in\n   the latter case there is a danger of the packet\
    \ being discarded (IPv4\n   options are not self-describing and new ones may not\
    \ pass through\n   IPv4 routers). There is thus the possibility of having to introduce\
    \ a\n   \"new\" version of IPv4 in order to support IPng tunneling.\n   The alternative\
    \ (in which IPng hosts have two stacks and the\n   infrastructure may or may not\
    \ support IPng or IPv4) of course\n   requires a mechanism for resolving which\
    \ protocols to try.\n"
- title: 7. Random Comments
  contents:
  - "7. Random Comments\n   This is the first fundamental change in the Internet protocols\
    \ that\n   has occurred since the Internet was manageable as an entity and its\n\
    \   development was tied to US government contracts. It was perhaps\n   inevitable\
    \ that the IETF/IESG/IAB structure would not have evolved to\n   manage a change\
    \ of this magnitude and it is to be hoped that the new\n   structures that are\
    \ proposed will be more successful in promoting a\n   (useful) consensus. It is\
    \ interesting to see that many of the\n   perceived problems of the OSI process\
    \ (slow progress, factional\n   infighting over trivia, convergence on the lowest-common\
    \ denominator\n   solution, lack of consideration for the end-user) are in danger\
    \ of\n   attaching themselves to IPng and it will be interesting to see to\n \
    \  what extent these difficulties are an inevitable consequence of wide\n   representation\
    \ and participation in network design.\n   It could be regarded either as a sign\
    \ of success or failure of the\n   competitive process for the selection of IPng\
    \ that the three main\n   proposals  have few really significant differences.\
    \ In this respect,\n   the result of the selection process is not of particular\n\
    \   significance, but the process itself is perhaps necessary to repair\n   the\
    \ social and technical cohesion of the Internet Engineering\n   process.\n"
- title: 8. Further Information
  contents:
  - "8. Further Information\n   The main discussion lists for the proposals listed\
    \ are:\n        TUBA:           tuba@lanl.gov\n        PIP:            pip@thumper.bellcore.com\n\
    \        SIP:            sip@caldera.usc.edu\n        General:        big-internet@munnari.oz.au\n\
    \        (Requests to: <list name>-request@<host>)\n   Internet-Drafts and RFCs\
    \ for the various proposals can be found in\n   the usual places.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Tim Dixon\n   RARE Secretariat\n   Singel 466-468\n   NL-1017AW\
    \ Amsterdam\n   (Netherlands)\n   Phone: +31 20 639 1131 or + 44 91 232 0936\n\
    \   EMail: dixon@rare.nl or Tim.Dixon@newcastle.ac.uk\n"
