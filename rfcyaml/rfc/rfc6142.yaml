- title: __initial_text__
  contents:
  - '         ANSI C12.22, IEEE 1703, and MC12.22 Transport Over IP

    '
- title: Abstract
  contents:
  - "Abstract\n   This RFC provides a framework for transporting ANSI C12.22/IEEE\n\
    \   1703/MC12.22 Advanced Metering Infrastructure (AMI) Application Layer\n  \
    \ Messages on an IP network.\n   This document is not an official submission on\
    \ behalf of the ANSI\n   C12.19 and C12.22 working groups.  It was created by\
    \ participants in\n   those groups, building on knowledge of several proprietary\
    \ C12.22-\n   over-IP implementations.  The content of this document is an\n \
    \  expression of a consensus aggregation of those implementations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6142.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Definitions .....................................................3\n   4.\
    \ The C12.22 IP Network Segment ...................................6\n      4.1.\
    \ Composition of a C12.22 IP Network Segment .................6\n      4.2. Native\
    \ IP Address ..........................................7\n      4.3. Encoding\
    \ of Native IP Addresses ............................7\n      4.4. Standardized\
    \ Port Numbers ..................................9\n      4.5. Use of UDP Source\
    \ Port 0 ...................................9\n      4.6. IP Multicast ..............................................10\n\
    \      4.7. IP Broadcast ..............................................12\n  \
    \    4.8. Encoding of Multicast and Broadcast Addresses .............12\n   5.\
    \ IP Message Transport ...........................................14\n      5.1.\
    \ C12.22 Connection Types and TCP/UDP Transport Modes .......14\n      5.2. IP\
    \ Message Transport Details ..............................15\n           5.2.1.\
    \ TCP and UDP Port Use ...............................15\n           5.2.2. Active-OPEN\
    \ UDP Mode (CL=1, CL Accept=0) ...........16\n           5.2.3. Passive-OPEN UDP\
    \ Mode (CL=1, CL Accept=1) ..........17\n           5.2.4. Active-OPEN TCP Mode\
    \ (CO=1, CO Accept=0) ...........17\n           5.2.5. Passive-OPEN TCP Mode (CO=1,\
    \ CO Accept=1) ..........18\n           5.2.6. TCP and C12.22 Message Directionality\
    \ ..............18\n      5.3. Using IP Broadcast/Multicast ..............................19\n\
    \      5.4. Transport Protocol Decisions ..............................20\n  \
    \         5.4.1. Unicast Versus Multicast Versus Broadcast ..........20\n    \
    \       5.4.2. Sending Large C12.22 APDUs Using UDP ...............20\n      \
    \     5.4.3. Choice of Protocol for C12.22 Response APDUs .......20\n      5.5.\
    \ Quality of Service ........................................20\n      5.6. Congestion\
    \ Control ........................................21\n   6. Security Considerations\
    \ ........................................21\n   7. IANA Considerations ............................................23\n\
    \   8. Acknowledgments ................................................23\n  \
    \ 9. References .....................................................23\n    \
    \  9.1. Normative References ......................................23\n      9.2.\
    \ Informative References ....................................25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The ANSI C12.22 standard [1] provides a set of application\
    \ layer\n   messaging services that are applicable for the enterprise and End\n\
    \   Device components of an Advanced Metering Infrastructure (AMI) for\n   the\
    \ Smart Grid.  The messaging services are tailored for, but not\n   limited to,\
    \ the exchange of the Data Table Elements defined and\n   co-published in ANSI\
    \ C12.19 [2], IEEE P1377 [3], and MC12.19 [23].\n   These standards were developed\
    \ jointly by ANSI (ANSI C12.22 and ANSI\n   C12.19), IEEE (IEEE 1377 and IEEE\
    \ 1703), and Measurement Canada\n   (MC12.19 and MC12.22).\n   ANSI C12.22, which\
    \ is an application level messaging protocol, may be\n   transported over any\
    \ underlying transport network.  This RFC defines\n   the requirements governing\
    \ the transmission of ANSI C12.22 Messages\n   via the TCP and UDP transports\
    \ in IP networks (whereby the OSI\n   Session, Presentation, and Application Layers\
    \ of ANSI C12.22 are\n   collapsed into a single Application Layer).\n   Specifically,\
    \ this RFC applies to the operational details of\n   Section 5, \"C12.22 Node\
    \ to C12.22 Network Segment Details\", of ANSI\n   C12.22, and covers the mapping,\
    \ encoding, and interpreting of ANSI\n   C12.19 Device Network Table Elements\
    \ and Native Addresses for use on\n   IP networks.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [4].\n   Throughout this document, we use terms like \"ANSI C12.22\" or\
    \ \"ANSI\n   C12.19\", as in \"C12.22 Relay\" or \"ANSI C12.19 Device\".  These\
    \ terms\n   are interchangeable with the terms \"IEEE 1703 Relay\" and \"IEEE\
    \ 1377\n   Device\", respectively.  However, the recent versions of the Utility\n\
    \   End Device communication standards were developed under the auspices\n   of\
    \ ANSI C12 SC17 WG1 and ANSI C12 SC17 WG2.  For that reason, the\n   terminology\
    \ used in this document expands on the ANSI C12.22-2008 [1]\n   and ANSI C12.19-2008\
    \ [2] definitions as revised by IEEE 1703-2010 [5]\n   and IEEE 1377-2010 [3].\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   This specification uses a number of terms to refer to the\
    \ roles\n   played by participants (actors) in, and objects of, the ANSI C12.22\n\
    \   [1], IEEE 1703 [5], and MC12.22 [24] protocol.  Any terms prefixed by\n  \
    \ \"C12.22\" or \"C12.19\" that are not defined in this document can be\n   resolved\
    \ in [1], [5], [24] or in [2], [3], [23].\n   ACSE\n      Association Control\
    \ Service Element.  In the context of this\n      specification and of [1], ACSEs\
    \ are encoded per ISO/IEC 10035-1\n      [6] using the ASN.1 Basic Encoding Rules\
    \ (BER) [7].\n   Active-OPEN UDP\n      Active-OPEN UDP is a state used by a local\
    \ C12.22 IP Node to\n      expect and receive incoming C12.22 Messages that it\
    \ solicited from\n      a foreign C12.22 IP Node using UDP.  The local C12.22\
    \ IP Node MAY\n      exit the Active-OPEN UDP state when it has received all of\
    \ the\n      expected C12.22 Messages or a C12.22 Message timeout has occurred.\n\
    \      The local C12.22 IP Node receives all C12.22 Response Messages\n      solicited\
    \ from the foreign C12.22 IP Node that arrive at the local\n      port number\
    \ that matches the source port number used to solicit\n      the C12.22 Messages\
    \ from the foreign C12.22 IP Node.\n   Active-OPEN TCP\n      Active-OPEN TCP\
    \ is a state used by a local C12.22 IP Node to\n      establish a TCP connection\
    \ with a fully specified foreign C12.22\n      IP Node using TCP and the foreign\
    \ C12.22 IP Node's registered\n      Native IP Address.  The Active-OPEN TCP state\
    \ is identical to a\n      local \"Active-OPEN\" as defined in [9].\n   APDU\n\
    \      Application Protocol Data Unit.  In the context of the ANSI C12.22\n  \
    \    Application, it is an ACSE C12.22 Message.\n   ACSE APDU\n      ACSE Application\
    \ Protocol Data Unit; same as APDU.\n   ApTitle\n      An ANSI C12.22 Application-process\
    \ Title.  An ApTitle is a name\n      for a system-independent application activity\
    \ that exposes\n      application services to the application agent, e.g., a set\
    \ of\n      application service elements that together perform all or part of\n\
    \      the communication aspects of an application process.  An ApTitle\n    \
    \  is encoded as a unique registered (as per [1]) object identifier.\n   C12.22\
    \ IP Node\n      A C12.22 Node that is located on a C12.22 IP Network Segment\
    \ and\n      communicates using the Internet Protocol.\n   C12.22 IP Network Segment\n\
    \      A collection of all C12.22 IP Nodes that implement the IP-based\n     \
    \ protocols, as defined in this specification, and can communicate\n      with\
    \ each other using IP routers, switches, and bridges and\n      without the use\
    \ of a C12.22 Relay.\n   C12.22 IP Relay\n      A C12.22 IP Node that performs\
    \ the functions of a C12.22 Relay.\n      A C12.22 IP Relay acts as a bridge between\
    \ a C12.22 IP Network\n      Segment and an adjacent, C12.22 Network Segment.\n\
    \   C12.22 Message\n      An ACSE APDU that is fully assembled, or a segment of\
    \ a C12.22\n      Request Message, or a segment of a C12.22 Response Message.\
    \  The\n      C12.22 Message described in this specification MUST be encoded\n\
    \      using [7].\n   C12.22 Request Message\n      A fully assembled C12.22 APDU\
    \ that contains an ACSE user-\n      information element, which includes one or\
    \ more EPSEM Service\n      Requests.\n   C12.22 Response Message\n      A fully\
    \ assembled C12.22 APDU that contains an ACSE user-\n      information element,\
    \ which includes one or more EPSEM service\n      responses.\n   Connection\n\
    \      A logical and physical binding between two or more users of a\n      service\
    \ [1].\n   EPSEM\n      Extended Protocol Specification for Electronic Metering.\
    \  EPSEM\n      defines structures and services used to encode multiple requests\n\
    \      and responses for use by devices such as gas, water, electricity,\n   \
    \   and related electronic modules or appliances.\n   Initiating C12.22 IP Node\n\
    \      A role of a C12.22 IP Node in which it initiates the transmission\n   \
    \   of a C12.22 Request Message.\n   Native Address\n      The term \"Native Address\"\
    \ refers to the transport address that may\n      be used to reach a C12.22 Node\
    \ on its C12.22 Network Segment [1].\n      In this specification, the Native\
    \ Address refers to the Native IP\n      Address.\n   Passive-OPEN UDP\n     \
    \ Passive-OPEN UDP is a state used by a local C12.22 IP Node to\n      expect\
    \ and receive incoming C12.22 Messages from any foreign\n      C12.22 IP Node\
    \ using UDP.  When the Passive-OPEN UDP state is\n      active, the local C12.22\
    \ IP Node accepts all C12.22 Messages that\n      arrive at the local port number\
    \ that was registered by the local\n      C12.22 IP Node.\n   Passive-OPEN TCP\n\
    \      Passive-OPEN TCP is a state used by a local C12.22 IP Node that\n     \
    \ wants to establish a TCP connection with an unspecified foreign\n      C12.22\
    \ IP Node using TCP.  In this case, any foreign C12.22 IP\n      Node MAY connect\
    \ to the local C12.22 IP Node as long as the local\n      port matches the port\
    \ used by the foreign C12.22 IP Node.  The\n      Passive-OPEN TCP state is identical\
    \ to \"local passive OPEN\"\n      defined in [9].\n   Responding C12.22 IP Node\n\
    \      A role of a C12.22 IP Node in which it responds to the reception\n    \
    \  of a C12.22 Request Message.\n   Target C12.22 IP Node\n      The C12.22 IP\
    \ Node that is the destination for a C12.22 Message.\n"
- title: 4.  The C12.22 IP Network Segment
  contents:
  - "4.  The C12.22 IP Network Segment\n   This section defines the characteristics\
    \ of the C12.22 IP Network\n   Segment.\n"
- title: 4.1.  Composition of a C12.22 IP Network Segment
  contents:
  - "4.1.  Composition of a C12.22 IP Network Segment\n   A C12.22 Network Segment\
    \ is a collection of C12.22 Nodes that can\n   communicate with each other directly\
    \ -- without having to forward\n   C12.22 Messages through a C12.22 Relay.\n \
    \  A C12.22 IP Network Segment comprises C12.22 IP Nodes and the network\n   infrastructure\
    \ that enables any one node to reach all other nodes on\n   the same segment.\
    \  All C12.22 IP Nodes on the C12.22 IP Network\n   Segment employ the same IP\
    \ address encoding scheme (per Figures 1\n   and 2) and the same network and transport\
    \ protocols in accordance\n   with this specification.\n   There is no restriction\
    \ on the size of a C12.22 IP Network Segment.\n   It MAY be as small as a single\
    \ LAN or subnet, or it MAY include\n   numerous, heterogeneous LANs and WANs connected\
    \ by routers, bridges,\n   and switches.  The C12.22 IP Network Segment MAY be\
    \ completely\n   private, or include communication across the global Internet.\n"
- title: 4.2.  Native IP Address
  contents:
  - "4.2.  Native IP Address\n   The term \"Native IP Address\" denotes a Native Address\
    \ that MAY be\n   used to reach a C12.22 Node on its C12.22 IP Network Segment.\
    \  The\n   Native IP Address includes the binary IP address, and an OPTIONAL\n\
    \   port number that MAY be followed by an OPTIONAL protocol identifier.\n   The\
    \ Native IP Address SHALL be encoded as described below in\n   Section 4.3, \"\
    Encoding of Native IP Addresses\".\n   The IP address of the C12.22 IP Node MUST\
    \ be configured before the\n   C12.22 IP Node attempts to send or receive any\
    \ C12.22 Message on its\n   C12.22 IP Network Segment.  If the port number is\
    \ not explicitly\n   configured by the controlling application, it SHALL be set\
    \ to the\n   default port number, 1153 (see Section 4.4, \"Standardized Port\n\
    \   Numbers\", below).\n   It is beyond the scope of this specification to define\
    \ the method of\n   configuration, the configuration parameters, or any administrative\n\
    \   controls that the system administrator may wish to implement to\n   assign\
    \ an IP address.\n"
- title: 4.3.  Encoding of Native IP Addresses
  contents:
  - "4.3.  Encoding of Native IP Addresses\n   ANSI C12.22 defines binary fields for\
    \ encoding a C12.22 Native\n   Address for transport within C12.22 Messages and\
    \ for storage in\n   C12.19 Device Tables.  In this RFC, the fields SHALL contain\
    \ an IPv4\n   or an IPv6 binary native IP address that is followed by an OPTIONAL\n\
    \   two-byte TCP or UDP port number.  The TCP or UDP port number, when\n   present,\
    \ MAY be followed by an OPTIONAL one-byte transport protocol\n   identifier (\"\
    Protocol\" for IPv4 or \"Next Header\" for IPv6).  The\n   transport protocol\
    \ identifier SHALL be set to 17 (0x11) for UDP\n   transport, or to 6 (0x06) for\
    \ TCP transport, or not set (absent) for\n   both UDP and TCP transports.  The\
    \ transport protocol values SHALL be\n   consistent with the C12.22 Node's registered\
    \ attributes (see\n   Connectionless (CL) and Connection-Oriented (CO) flags in\n\
    \   Section 5.1, \"C12.22 Connection Types and TCP/UDP Transport Modes\",\n  \
    \ below).\n   ANSI C12.22 allows the Native Address fields to be conveyed in select\n\
    \   ANSI C12.22 EPSEM service elements (e.g., ANSI C12.22 Registration\n   Service\
    \ <native-address>, ANSI C12.22 Resolve Service response\n   <local-address>,\
    \ and ANSI C12.19 INTERFACE_CTRL_TBL Element\n   NATIVE_ADDRESS).  The length\
    \ of the C12.22 Native Address is\n   qualified by an ANSI C12.22 address length\
    \ field (e.g., ANSI C12.22\n   Registration Service <address-length>, ANSI C12.22\
    \ Resolve Service\n   response <local-address-length>, and ANSI C12.19 ACT_NETWORK_TBL\n\
    \   Element NATIVE_ADDRESS_LEN).\n   The ANSI C12.22 Registration Service permits\
    \ only one Native Address\n   to be recorded with each registered ApTitle.  For\
    \ this reason, a\n   C12.22 IP Node that wishes to register different port numbers\
    \ for UDP\n   and TCP MUST register twice using different ApTitles.\n   The binary\
    \ Native IP Address fields SHALL be encoded in network byte\n   order, as shown\
    \ in Figure 1.\n                             IP Address (ADDR), Port (P), Transport\
    \ (T)\n                  Address\n                   Length                  \
    \      Octet\n                               0                   1\n         \
    \                      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\n               \
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       IPv4         \
    \ 4        | ADDR4 |\n                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  IPv4+Port     6        | ADDR4 | P |\n                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  IPv4+Port     7        | ADDR4 | P |T|\n       +Transport             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  IPv6         16        |             ADDR6             |\n                \
    \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                     \
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       IPv6+Port    18    \
    \    |             ADDR6             | P |\n                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  IPv6+Port    19        |             ADDR6             | P |T|\n       +Transport\
    \             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Figure 1: Encoding\
    \ of the Native IP Addresses for ANSI C12.22\n   When an ANSI C12.22 Native Address\
    \ is encoded in the ANSI C12.19\n   Tables' BINARY data Elements, the size of\
    \ the Native Address Element\n   is defined by ACT_NETWORK_TBL.NATIVE_ADDRESS_LEN\
    \ (see Table 121 of\n   [1], and [2]).  This is the actual number of octets that\
    \ are placed\n   inside the C12.19 BINARY Element.  This value is common to all\
    \ of the\n   C12.22 Node's interfaces, including those that are not IP based (thus\n\
    \   not conforming to this specification).  For this reason, the\n   ACT_NETWORK_TBL.NATIVE_ADDRESS_LEN\
    \ MAY be greater than, and SHALL NOT\n   be smaller than, the actual length needed\
    \ to encode a Native IP\n   Address per Figure 1.  When this is the case, the\
    \ C12.22 Native IP\n   Address SHALL be padded with zero (0) to fill the Table's\
    \ BINARY data\n   Element.\n   In instances where the Native IP Address length\
    \ does not exactly\n   match any of the Address Lengths listed in Figure 1, the\
    \ actual\n   Address Length SHALL be determined by stripping all trailing binary\n\
    \   zeros (0x00) and then adjusting the Address Length upwards to the\n   next\
    \ largest value shown in Figure 1.\n"
- title: 4.4.  Standardized Port Numbers
  contents:
  - "4.4.  Standardized Port Numbers\n   IANA (Internet Assigned Numbers Authority)\
    \ has assigned port 1153 for\n   UDP [8] and TCP [9] C12.22 IP Messages.\n   By\
    \ default, C12.22 IP Nodes SHALL send all C12.22 Application\n   association initiation\
    \ message requests with 1153 set as the\n   destination port number.\n   To ensure\
    \ interoperability among C12.22 IP Nodes, all C12.22 IP\n   Relays and Master\
    \ Relays SHALL monitor and accept UDP and TCP\n   messages destined to port 1153.\n\
    \   Any IP firewalls or Access Control Lists (ACLs) shielding C12.22\n   Nodes\
    \ and the IP network MUST be configured to forward UDP and TCP\n   traffic destined\
    \ to port 1153 and other ports that are assigned and\n   registered by the network\
    \ administrator, in order to maintain the\n   continuity of the C12.22 IP Network\
    \ Segment.\n"
- title: 4.5.  Use of UDP Source Port 0
  contents:
  - "4.5.  Use of UDP Source Port 0\n   Although RFC 768 [8] allows for a source port\
    \ number of zero (0),\n   C12.22 IP Nodes SHALL NOT send datagrams on UDP with\
    \ the source port\n   set to zero.  A C12.22 IP Node SHALL ignore and SHALL NOT\
    \ respond to\n   any C12.22 Message that it receives from source port 0.\n   Further\
    \ details of the C12.22 IP Node's use of UDP, and of TCP, are\n   given in Section\
    \ 5, \"IP Message Transport\", below.\n"
- title: 4.6.  IP Multicast
  contents:
  - "4.6.  IP Multicast\n   In addition to unicast, the ANSI C12.22 protocol requires\
    \ the support\n   of a multicast message delivery service from the network.  In\
    \ cases\n   where C12.22 IP Nodes MUST perform Native IP Address discovery (e.g.,\n\
    \   the discovery of the Native IP Address of C12.22 IP Relays that\n   provide\
    \ a route out of the C12.22 IP Network Segment, or the\n   discovery of the Native\
    \ IP Address of a C12.22 IP Master Relay on the\n   C12.22 IP Network), the C12.22\
    \ IP Nodes use IP multicast to send a\n   C12.22 Message that contains an EPSEM\
    \ Resolve Service Request on the\n   IP LAN.\n   IP multicast is also desirable,\
    \ for example, when a C12.22 Host needs\n   to read a multitude of C12.22 Nodes\
    \ (e.g., meters) that are\n   configured with a common C12.22 multicast group\
    \ ApTitle.  Using IP\n   multicast, the C12.22 Host MAY send a C12.22 Message\
    \ containing an\n   EPSEM Read Service Request that reaches all C12.22 Nodes on\
    \ the\n   C12.22 IP Network Segment.\n   For these reasons, all C12.22 IP Relays\
    \ and Master Relays SHALL\n   support IP multicast, and it is RECOMMENDED that\
    \ all C12.22 Nodes\n   support IP multicast.  Any IPv4 C12.22 IP Node that supports\
    \ IP\n   multicast SHALL use the Internet Group Management Protocol version 1\n\
    \   (IGMPv1) [10] as a minimum, to report (i.e., request) membership in\n   the\
    \ C12.22 multicast group to its local router(s).  It is RECOMMENDED\n   that C12.22\
    \ IP Nodes implement IGMPv3 [11].\n   Any IPv6 C12.22 IP Node that supports IP\
    \ multicast SHALL use\n   Multicast Listener Discovery version 2 (MLDv2) (RFC\
    \ 3810 [12]),\n   possibly within ICMPv6 (RFC 4443 [13]), to report membership.\n\
    \   Routers that interconnect C12.22 IP Nodes on the C12.22 IP Network\n   Segment\
    \ MUST support Protocol Independent Multicast - Sparse Mode\n   (PIM-SM) (RFC\
    \ 4601 [14]) along with IGMPv1 (RFC 1112 [10]) as a\n   minimum for IPv4, or MLDv2\
    \ for IPv6 (RFC 3810 [12]).  It is\n   RECOMMENDED that they implement IGMPv3\
    \ [11].  It is beyond the scope\n   of this specification to define the mechanism\
    \ for selecting an\n   initial Rendezvous Point (RP) for the C12.22 multicast\
    \ group, the use\n   of shared versus source trees, or the mechanism for inter-domain\n\
    \   multicast routing.\n   IANA has registered the \"All C1222 Nodes\" multicast\
    \ group, and has\n   assigned the IPv4 multicast address of 224.0.2.4 and the\
    \ IPv6\n   multicast address of FF0X::204, where X represents the Scope field\
    \ as\n   defined in RFC 4291, \"IP Version 6 Addressing Architecture\" [15].\n\
    \   For IPv6, all C12.22 IP Relays, C12.22 IP Master Relays, and all\n   C12.22\
    \ IP Nodes configured to support broadcast and multicast (see\n   Section 5.3,\
    \ \"Using IP Broadcast/Multicast\", below) SHALL join the\n   global-scope multicast\
    \ address, FF0E::204, as well as all of the\n   assigned, reduced-scope, multicast\
    \ addresses:\n                    link-local         -- FF02::204;\n         \
    \           admin-local        -- FF04::204;\n                    site-local \
    \        -- FF05::204; and\n                    organization-local -- FF08::204.\n\
    \   IPv6 C12.22 IP Nodes SHOULD use the minimum scope needed, when\n   initiating\
    \ IP multicast messages to reach another C12.22 IP Node on\n   the C12.22 Network.\
    \  This practice allows the sender to limit\n   unnecessary propagation of C12.22\
    \ IP Multicast Messages.\n   To determine the minimum scope required to reach\
    \ the closest C12.22\n   IP Relay on the C12.22 Node's IP Network Segment, this\
    \ specification\n   RECOMMENDS the following simple steps:\n   1.  Starting with\
    \ the smallest (local-most) scope (i.e., link-local\n       scope or another pre-configured\
    \ scope), send the C12.22 EPSEM\n       Resolve Service Request for the purpose\
    \ of C12.22 IP Relay\n       discovery.\n   2.  Listen for a response from a C12.22\
    \ IP Relay; then:\n       A.  If no response is received, assign the next wider\
    \ scope\n           level, then repeat steps (1) and (2) at the newly assigned\n\
    \           scope.\n       B.  If a response is received, then record the scope\
    \ level as the\n           minimum scope to use on the node's C12.22 IP Network\
    \ Segment.\n   A C12.22 IPv6 Node that initiates any EPSEM Service Request SHOULD\n\
    \   use the minimum scope necessary to reach its Target C12.22 IP Nodes.\n   A\
    \ C12.22 IPv6 Relay SHALL use the global scope for any C12.22 Message\n   destined\
    \ for the global Internet.\n   This specification does not preclude the use of\
    \ the unassigned scope\n   values defined in [15]; those scope values MAY be used\
    \ on a private\n   basis, or through mutual operating agreements.\n   For IPv4,\
    \ all C12.22 IP Relays, C12.22 IP Master Relays, and all\n   C12.22 IP Nodes configured\
    \ to support broadcast/multicast SHALL join\n   the assigned multicast address\
    \ of 224.0.2.4.  This global address\n   does not provide for the type of scoping\
    \ discussed above for IPv6,\n   nor is it compatible with the administratively\
    \ scoped IP multicast\n   specification in RFC 2365 [16].  Therefore, a different\
    \ technique to\n   limit the propagation of C12.22 IP Multicast Messages is needed.\
    \  One\n   available technique to control IPv4 multicast scope is through the\n\
    \   use of the Time-to-Live (TTL) attribute in the IP packet header.\n   This\
    \ attribute is not managed by the C12.22 protocol.\n   In the implementation of\
    \ this technique, an administrative domain\n   MUST include at least one C12.22\
    \ IP Relay, and all C12.22 IP Nodes in\n   the administrative domain SHOULD be\
    \ configured with a TTL\n   sufficiently large to reach that C12.22 IP Relay.\n\
    \   A C12.22 IPv4 Node that initiates any C12.22 Request Message SHOULD\n   use\
    \ the minimum TTL needed to reach its Target C12.22 IP Nodes.\n"
- title: 4.7.  IP Broadcast
  contents:
  - "4.7.  IP Broadcast\n   IP broadcast is not generally suitable as a replacement\
    \ for, or an\n   alternative to, multicast in a C12.22 IP Network Segment.  IP\n\
    \   broadcast is not supported in IPv6, and it suffers from limited scope\n  \
    \ in IPv4.  This specification, however, does not preclude the use of\n   IP network\
    \ directed or limited/local scope (address 255.255.255.255)\n   broadcast within\
    \ a controlled management domain (as per RFC 2644\n   [17]).\n"
- title: 4.8.  Encoding of Multicast and Broadcast Addresses
  contents:
  - "4.8.  Encoding of Multicast and Broadcast Addresses\n   ANSI C12.22 Tables provide\
    \ BINARY Elements for encoding a broadcast\n   or multicast Native IP Address\
    \ for transport within a C12.22 Message.\n   The encoding of these Table Elements\
    \ is identical to that defined in\n   Section 4.3, \"Encoding of Native IP Addresses\"\
    .  These fields SHALL\n   be used as shown in Figure 2.\n                    \
    \         IP Address (ADDR), Port (P), Transport (T)\n                   Address\n\
    \                    Length                       Octet\n                    \
    \           0                   1\n                               0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8\n       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Broadcast      4       |BADDR4 |\n                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Broadcast      6       |BADDR4 | P |\n       +Port                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Broadcast      7       |BADDR4 | P |T|\n       +Port+Transport        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Multicast      4       |MADDR4 |\n                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Multicast      6       |MADDR4 | P |\n       +Port                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv4                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Multicast      7       |MADDR4 | P |T|\n       +Port+Transport        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv6                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Multicast     16       |            MADDR6             |\n                \
    \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       IPv6          \
    \         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Multicast     18   \
    \    |            MADDR6             | P |\n       +Port                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       IPv6                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     \
    \  Multicast     19       |            MADDR6             | P |T|\n       +Port+Transport\
    \        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Figure 2: Encoding of\
    \ Broadcast/Multicast Native IP Addresses\n   The IPv4 and IPv6 multicast addresses\
    \ -- MADDR4 and MADDR6,\n   respectively -- are those assigned by IANA for use\
    \ by ANSI C12.22.\n   When a broadcast/multicast Native IP Address is encoded\
    \ in the ANSI\n   C12.19 Tables' BINARY data Elements, the size of the Native\
    \ Address\n   Element transmitted is defined by ACT_NETWORK_TBL.NATIVE_ADDRESS_LEN\n\
    \   (see Table 121 of [1], and [2]).  This is the actual number of octets\n  \
    \ that are placed inside the C12.19 BINARY Element.  This value is\n   common\
    \ to all of the C12.22 Node's interfaces, including those that\n   are not IP\
    \ based (thus not conforming to this specification).  For\n   this reason, the\
    \ ACT_NETWORK_TBL.NATIVE_ADDRESS_LEN MAY be greater\n   than, and SHALL NOT be\
    \ smaller than, the actual length needed to\n   encode a broadcast/multicast Native\
    \ IP Address per Figure 2.  When\n   this is the case, the C12.22 Native IP Address\
    \ SHALL be padded with\n   zero (0) to fill the Table's BINARY data Element.\n\
    \   The IPv4 network directed broadcast address can be computed by\n   performing\
    \ a bitwise OR between the bit complement of the subnet mask\n   of the target\
    \ IP subnet and the IP address of any host on that IP\n   subnet.\n"
- title: 5.  IP Message Transport
  contents:
  - "5.  IP Message Transport\n   This section defines a C12.22 Node's usage of the\
    \ Connection-Oriented\n   (CO) and Connectionless (CL) transport layer protocols\
    \ -- TCP and\n   UDP, respectively.\n"
- title: 5.1.  C12.22 Connection Types and TCP/UDP Transport Modes
  contents:
  - "5.1.  C12.22 Connection Types and TCP/UDP Transport Modes\n   A C12.22 IP Node's\
    \ use of TCP and UDP is based on its registered\n   capabilities as defined in\
    \ its configuration parameters (flags) and\n   as expressed in the Node's accepted\
    \ registration attributes [1]:\n         CL Flag = <connection-type>.CONNECTIONLESS_MODE_SUPPORTED;\n\
    \         CL Accept Flag = <connection-type>.ACCEPT_CONNECTIONLESS;\n        \
    \ CO Flag = <connection-type>.CONNECTION_MODE_SUPPORTED; and\n         CO Accept\
    \ Flag = <connection-type>.ACCEPT_CONNECTIONS.\n   The mapping of the connection-type\
    \ parameters to the IP-based\n   transport variants that a C12.22 Node MAY support\
    \ is defined in\n   Table 1.\n   +------+------+----------+----------+-------------------------------+\n\
    \   |  CL  |  CO  |    CL    |    CO    | IP Transport Mode Supported   |\n  \
    \ | Flag | Flag |  Accept  |  Accept  |                               |\n   |\
    \      |      |   Flag   |   Flag   |                               |\n   +------+------+----------+----------+-------------------------------+\n\
    \   |   0  |   0  |     x    |     x    | Invalid                       |\n  \
    \ |   0  |   1  |     0    |     0    | TCP, Active-OPEN              |\n   |\
    \   0  |   1  |     0    |     1    | TCP, Passive- and Active-OPEN |\n   |  \
    \ 0  |   1  |     1    |     0    | Invalid                       |\n   |   0\
    \  |   1  |     1    |     1    | Invalid                       |\n   |   1  |\
    \   0  |     0    |     0    | UDP, Active-OPEN              |\n   |   1  |  \
    \ 0  |     0    |     1    | Invalid                       |\n   |   1  |   0\
    \  |     1    |     0    | UDP, Passive- and Active-OPEN |\n   |   1  |   0  |\
    \     1    |     1    | Invalid                       |\n   |   1  |   1  |  \
    \   0    |     0    | UDP, Active-OPEN; TCP         |\n   |      |      |    \
    \      |          | Active-OPEN                   |\n   |   1  |   1  |     0\
    \    |     1    | UDP, Active-OPEN; TCP,        |\n   |      |      |        \
    \  |          | Passive- and Active-OPEN      |\n   |   1  |   1  |     1    |\
    \     0    | UDP, Passive- and             |\n   |      |      |          |  \
    \        | Active-OPEN; TCP, Active-OPEN |\n   |   1  |   1  |     1    |    \
    \ 1    | UDP, Passive- and             |\n   |      |      |          |      \
    \    | Active-OPEN; TCP, Passive-    |\n   |      |      |          |        \
    \  | and Active-OPEN               |\n   +------+------+----------+----------+-------------------------------+\n\
    \          Table 1: C12.22 Node Parameters to IP Transport Mapping\n   Every C12.22\
    \ IP Node MUST support at least one of the unicast CO or\n   CL operating capabilities\
    \ (as advertised in Decade 12, \"Node Network\n   Control Tables\" [1], where\
    \ available, and as registered using the\n   C12.22 Registration Service [1]).\n"
- title: 5.2.  IP Message Transport Details
  contents:
  - '5.2.  IP Message Transport Details

    '
- title: 5.2.1.  TCP and UDP Port Use
  contents:
  - "5.2.1.  TCP and UDP Port Use\n   General rules:\n   1.  A C12.22 IP Node that\
    \ implements [CL Accept=1] SHALL receive\n       incoming UDP C12.22 Messages\
    \ on its registered Native IP Address\n       (IP address and port number).\n\
    \   2.  A C12.22 IP Node that implements [CO Accept=1] SHALL receive\n       incoming\
    \ TCP connections on its registered Native IP Address (IP\n       address and\
    \ port number).\n   3.  A C12.22 IP Relay that forwards a UDP C12.22 Message to\
    \ a C12.22\n       IP Node on the C12.22 IP Network Segment SHALL send the C12.22\n\
    \       Message to the C12.22 IP Node's registered Native IP Address (IP\n   \
    \    address and port number).\n   4.  A C12.22 IP Relay that forwards a TCP C12.22\
    \ Message to a C12.22\n       IP Node on the C12.22 IP Network Segment MAY use\
    \ an established\n       TCP connection to that C12.22 IP Node, or it SHALL establish\
    \ a\n       new TCP connection to the C12.22 IP Node's registered Native IP\n\
    \       Address (IP address and port number).\n   5.  A C12.22 IP Node that implements\
    \ [CL=1] SHOULD set the source\n       port number in outbound UDP C12.22 Messages\
    \ to its registered\n       port number.  When the target UDP C12.22 IP Node is\
    \ reachable\n       using direct messaging (as defined in [1]), the C12.22 IP\
    \ Node\n       MAY set the source port number to a UDP port number that is\n \
    \      different than its registered port number.\n   6.  When the registered\
    \ Native IP Address of a C12.22 IP Node does\n       not include the OPTIONAL\
    \ port number, then port 1153 SHALL be\n       assumed and used as the registered\
    \ port number.\n   7.  All C12.22 IP Nodes SHOULD use port 1153 in their Native\
    \ IP\n       Address when registering.\n"
- title: 5.2.2.  Active-OPEN UDP Mode (CL=1, CL Accept=0)
  contents:
  - "5.2.2.  Active-OPEN UDP Mode (CL=1, CL Accept=0)\n   A C12.22 IP Node that supports\
    \ this mode SHALL NOT monitor for\n   unsolicited incoming C12.22 Messages via\
    \ UDP.  As a result, the\n   C12.22 IP Node is incapable of receiving unsolicited\
    \ C12.22 Messages\n   using UDP.\n   The C12.22 IP Node MAY enter the Active-OPEN\
    \ UDP state by initiating\n   an unsolicited UDP transmission to a Target C12.22\
    \ IP Node, which is\n   expected to implement the Passive-OPEN UDP mode.\n   C12.22\
    \ IP Nodes SHOULD use their registered UDP port number, or if\n   not yet registered,\
    \ then they SHOULD use port 1153 as the source port\n   number for all UDP C12.22\
    \ IP Messages.\n"
- title: 5.2.3.  Passive-OPEN UDP Mode (CL=1, CL Accept=1)
  contents:
  - "5.2.3.  Passive-OPEN UDP Mode (CL=1, CL Accept=1)\n   A C12.22 IP Node that operates\
    \ in this mode SHALL be capable of\n   receiving solicited and unsolicited C12.22\
    \ Messages from other C12.22\n   IP Nodes.  The C12.22 Node MAY change the port\
    \ number that it\n   monitors by using the <native-address> parameter of the ANSI\
    \ C12.22\n   Registration Service.  The C12.22 IP Node MAY initiate unsolicited\n\
    \   Active-OPEN UDP transmissions to other C12.22 IP Nodes that implement\n  \
    \ the Passive-OPEN UDP mode.\n   When operating in this mode, the C12.22 IP Nodes\
    \ SHALL use their\n   registered UDP port number as the source port number for\
    \ all UDP\n   C12.22 IP Messages.\n   All C12.22 IP Relays SHALL support the Passive-OPEN\
    \ UDP mode.  C12.22\n   Authentication Hosts and C12.22 Notification Hosts that\
    \ implement UDP\n   SHALL support the Passive-OPEN UDP mode.  For all other C12.22\
    \ IP\n   Nodes, the Passive-OPEN UDP mode is the RECOMMENDED mode when\n   implementing\
    \ UDP.\n"
- title: 5.2.4.  Active-OPEN TCP Mode (CO=1, CO Accept=0)
  contents:
  - "5.2.4.  Active-OPEN TCP Mode (CO=1, CO Accept=0)\n   A C12.22 IP Node that supports\
    \ this mode SHALL NOT monitor for\n   inbound TCP connections.  As a result, the\
    \ node is incapable of\n   accepting incoming connections via TCP.  The C12.22\
    \ IP Node MAY\n   initiate TCP connections to Target C12.22 IP Nodes, which are\n\
    \   expected to implement the Passive-OPEN TCP mode.\n   In this mode, C12.22\
    \ Messages exchanged by a pair of associated\n   C12.22 IP Nodes can only be communicated\
    \ through any of the TCP\n   connections that were initiated by the C12.22 IP\
    \ Node that implements\n   this mode.  The loss or closure of a connection SHALL\
    \ NOT\n   automatically result in the termination of the C12.22 associations\n\
    \   between the peer nodes.  In order to continue exchanging C12.22\n   Messages\
    \ without loss of association, the initiating C12.22 IP Node\n   MAY re-establish\
    \ new TCP connections with the peer node, or use\n   existing connections to the\
    \ peer node.  The termination of the C12.22\n   Application associations is dependent\
    \ upon C12.22 Application timeout\n   attributes and C12.22 link management services\
    \ (such as Procedure 25,\n   \"Network Interface Control\" [1]).\n"
- title: 5.2.5.  Passive-OPEN TCP Mode (CO=1, CO Accept=1)
  contents:
  - "5.2.5.  Passive-OPEN TCP Mode (CO=1, CO Accept=1)\n   A C12.22 IP Node that operates\
    \ in this mode SHALL monitor and accept\n   incoming TCP connections.  The C12.22\
    \ Node MAY change the port number\n   that it monitors by using the <native-address>\
    \ parameter of the ANSI\n   C12.22 Registration Service.  The C12.22 IP Node MAY\
    \ initiate Active-\n   OPEN TCP connections to other C12.22 IP Nodes that implement\
    \ the\n   Passive-OPEN TCP mode.\n   In this mode, C12.22 Messages exchanged by\
    \ a pair of associated\n   C12.22 IP Nodes can arrive through any of the TCP connections\
    \ that\n   were established by either node.  The loss or closure of a connection\n\
    \   SHALL NOT automatically result in the termination of the C12.22\n   associations\
    \ between the peer nodes.  In order to continue exchanging\n   C12.22 Messages\
    \ without loss of association, either C12.22 IP Node\n   MAY re-establish new\
    \ TCP connections with the peer node, or use\n   existing connections to the peer\
    \ node.  The termination of the C12.22\n   Application associations is dependent\
    \ upon C12.22 Application timeout\n   attributes and C12.22 link management services\
    \ (such as Procedure 25,\n   \"Network Interface Control\" [1]).\n   All C12.22\
    \ IP Relays SHALL support the Passive-OPEN TCP mode.  C12.22\n   Authentication\
    \ Hosts and C12.22 Notification Hosts that implement TCP\n   SHALL support Passive-OPEN\
    \ TCP mode.  For all other C12.22 IP Nodes,\n   Passive-OPEN TCP mode is the RECOMMENDED\
    \ mode when implementing TCP.\n"
- title: 5.2.6.  TCP and C12.22 Message Directionality
  contents:
  - "5.2.6.  TCP and C12.22 Message Directionality\n   C12.22 IP Nodes MAY use TCP\
    \ in one of two ways: bi-directional\n   traffic flow or uni-directional traffic\
    \ flow.\n   When TCP connections are used, any new or established TCP connection\n\
    \   between the two C12.22 IP Nodes MAY be used equivalently by the\n   C12.22\
    \ IP Nodes to send and to receive C12.22 Messages.  This is the\n   RECOMMENDED\
    \ and default mode of operation because ANSI C12.22\n   requires the transport\
    \ network to be reliable and connectionless (per\n   connectionless-mode ACSE).\
    \  For this reason, ANSI C12.22 defines\n   peer-to-peer application associations\
    \ and not peer-to-peer\n   connections.\n   It is known that some C12.22 implementations\
    \ have been deployed in\n   which TCP is used for uni-directional traffic flow.\
    \  For these types\n   of implementations, an established TCP connection SHALL\
    \ be used by\n   the initiator of that connection to send C12.22 Messages and\
    \ by the\n   target node (that accepted the connection) to receive C12.22\n  \
    \ Messages.  If a C12.22 IP Node wishes to send a C12.22 Message to a\n   peer\
    \ C12.22 IP Node, it MUST establish and use a new TCP connection,\n   or use an\
    \ existing TCP connection that it had previously initiated,\n   for its outbound\
    \ uni-directional traffic flow.\n   For increased interoperability, the initiator\
    \ of the connection\n   SHOULD accept incoming C12.22 Messages on that connection\
    \ in case the\n   target node attempts to use the connection for bi-directional\
    \ traffic\n   flow.\n   Uni-directional use of TCP is a special mode of operation;\
    \ it is NOT\n   RECOMMENDED because multiple one-way channel communication is\
    \ not\n   described by ANSI C12.22, and it utilizes one-half of the TCP\n   connection\
    \ capability.  As a result, it doubles the number of TCP\n   connections used\
    \ to communicate C12.22 Messages and thus could become\n   a burden when a large\
    \ number of connections are required.\n"
- title: 5.3.  Using IP Broadcast/Multicast
  contents:
  - "5.3.  Using IP Broadcast/Multicast\n   A C12.22 IP Node's use of broadcast/multicast\
    \ is based on its\n   capabilities as defined in its configuration parameters\
    \ (flags) and\n   as expressed in the Node's accepted registration attributes\
    \ [1]\n   (<connection-type>.BROADCAST_AND_MULTICAST_SUPPORTED).  The mapping\n\
    \   of the C12.22 IP Node's Broadcast/Multicast parameter (flag) to IP\n   broadcast/multicast\
    \ usage is defined in Table 2.\n    C12.22 Broadcast and  IP Broadcast/Multicast\
    \ Supported\n     Multicast Supported\n            Flag\n   ----------------------\
    \ ----------------------------------------------\n              0           The\
    \ C12.22 IP Node does not accept IP\n                          broadcast, and\
    \ it does not accept IP multicast\n                          messages.\n     \
    \         1           The C12.22 IP Node accepts both IP broadcast\n         \
    \                 (IPv4 only) and IP multicast messages (IPv4\n              \
    \            and IPv6).\n             Table 2: C12.22 to IP Broadcast/Multicast\
    \ Mapping\n   If a C12.22 IP Node is configured to accept IP broadcast and\n \
    \  multicast messages, it SHALL join the \"All C1222 Nodes\" multicast\n   group\
    \ (see Section 4.6, \"IP Multicast\", above), and SHALL use the\n   default port\
    \ 1153.  In addition, it SHALL accept IP network directed\n   or limited (local\
    \ scope) broadcast messages sent to port 1153.  Note\n   that successful communication\
    \ using network directed broadcast\n   requires configuration of network routers,\
    \ which by default SHALL NOT\n   forward directed broadcasts as per RFC 2644 [17].\n"
- title: 5.4.  Transport Protocol Decisions
  contents:
  - '5.4.  Transport Protocol Decisions

    '
- title: 5.4.1.  Unicast Versus Multicast Versus Broadcast
  contents:
  - "5.4.1.  Unicast Versus Multicast Versus Broadcast\n   An initiating C12.22 IP\
    \ Node MAY send any C12.22 Message using UDP or\n   TCP.  However, in accordance\
    \ with Section 5.3.2.4.12, \"Resolve\n   Service\", of ANSI C12.22, it is RECOMMENDED\
    \ that the C12.22 Resolve\n   Request Message be transported using UDP/IP multicast\
    \ when the Native\n   IP Address of the Target C12.22 Node is not known.  The\
    \ use of UDP/IP\n   multicast is preferred over the use of IP network directed\
    \ or limited\n   broadcast; therefore, when UDP/IP multicast is supported, its\
    \ use is\n   RECOMMENDED over network broadcast.\n"
- title: 5.4.2.  Sending Large C12.22 APDUs Using UDP
  contents:
  - "5.4.2.  Sending Large C12.22 APDUs Using UDP\n   When sending via UDP a large\
    \ C12.22 Message that exceeds the path\n   MTU, the sender SHALL segment the ACSE\
    \ APDU in accordance with the\n   ANSI C12.22 Datagram Segmentation and Reassembly\
    \ algorithm, such that\n   the size of the resulting IP datagram does not exceed\
    \ the path MTU\n   and thus avoids UDP packet fragmentation.  The fundamental\
    \ issue with\n   fragmentation exists for both IPv4 and IPv6.  Section 3.2 of\
    \ RFC 5405\n   [18] provides additional guidelines for determining the appropriate\n\
    \   UDP message size.  When the path MTU is not known, the sender SHALL\n   follow\
    \ the guidelines stipulated in Section 3.2 of RFC 5405 [18]: for\n   IPv4, use\
    \ the smaller of 576 bytes and the first-hop MTU [19], and\n   for IPv6, use 1280\
    \ bytes [20].  Sending large APDUs via UDP may lead\n   to network congestion.\
    \  For more information on avoiding network\n   congestion see Section 5.6, \"\
    Congestion Control\".\n"
- title: 5.4.3.   Choice of Protocol for C12.22 Response APDUs
  contents:
  - "5.4.3.   Choice of Protocol for C12.22 Response APDUs\n   When a Target C12.22\
    \ IP Node receives a C12.22 Request Message from\n   an initiating C12.22 IP Node,\
    \ it SHALL send a C12.22 Response Message\n   using the same transport protocol\
    \ (i.e., TCP to TCP, UDP to UDP).\n   In the case of UDP, the target SHALL send\
    \ the C12.22 Response Message\n   to the source IP address and port number.\n"
- title: 5.5.  Quality of Service
  contents:
  - "5.5.  Quality of Service\n   The ANSI C12.22 standard provides a configuration\
    \ parameter in the\n   APDU's <calling-AE-qualifier>.URGENT attribute to mark\
    \ a message as\n   urgent.  There are numerous IP-based technologies that enable\n\
    \   enhanced levels of message delivery and quality of service.  This\n   specification\
    \ does not define the technology to be used to send\n   urgent messages over IP.\n"
- title: 5.6.  Congestion Control
  contents:
  - "5.6.  Congestion Control\n   Designers of unicast applications that implement\
    \ the upper layers of\n   C12.22 messaging over UDP SHOULD follow the congestion\
    \ control\n   guidelines in Section 3.1 of RFC 5405 [18].\n   For the transmission\
    \ of C12.22 Messages that are greater than what\n   the TCP initial window would\
    \ be over a given Internet path, TCP\n   SHOULD be used rather than UDP as the\
    \ transport protocol.  TCP's\n   initial window depends on the maximum segment\
    \ size (MSS), which in\n   turn depends on the path MTU, and is computed according\
    \ to formula\n   (1) in RFC 3390 [21].  For unknown path MTUs, the smallest allowable\n\
    \   MSS MUST be used, and the C12.22 Application SHOULD assume the\n   maximum\
    \ C12.22 Message size to be 2048 bytes.  By using TCP, the\n   C12.22 Application\
    \ benefits from the built-in TCP congestion control\n   mechanism.\n   When UDP\
    \ is the preferred transport mechanism, or when UDP multicast\n   or broadcast\
    \ are the preferred modes of communication, then the\n   C12.22 Application SHOULD\
    \ use C12.22 acknowledged Messages that are\n   smaller than TCP's initial window\
    \ over the return path, as computed\n   by formula (1) in [21] and described above.\
    \  The size of the C12.22\n   Message MAY be managed through the use of ANSI C12.22\
    \ EPSEM Partial\n   Table Read/Write Service Requests and Responses.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The ANSI C12.22 Application Layer Security is\
    \ defined in\n   Section 5.3.4.13, \"C12.22 Security Mechanism\", of the ANSI\
    \ C12.22\n   standard.  The security mechanisms include provisions for message\n\
    \   privacy and authentication, playback rejection, and message\n   acceptance\
    \ windows, as well as ANSI C12.19 [2] role-based data access\n   and secured register\
    \ mechanisms.  The ANSI C12.22 Application Layer\n   default security mechanism\
    \ provides three options to choose from when\n   sending C12.22 Messages:\n  \
    \ 1.  Sending cleartext messages over the C12.22 Network [1], [5],\n       which\
    \ MAY result in altered C12.22 Messages and exposure to\n       password sniffing\
    \ attacks, as described in RFC 3552 [22].\n   2.  Sending of authenticated plaintext\
    \ messages over the C12.22\n       Network [1], [5], which MAY result in password\
    \ sniffing attacks\n       as described in RFC 3552 [22].\n   3.  Sending of authenticated\
    \ ciphertext over the C12.22 Network,\n       providing for message and peer node\
    \ authentication and privacy.\n   When option 1 is used, then it is RECOMMENDED\
    \ that the network or\n   transport layer provide authentication and confidentiality\
    \ service.\n   When option 2 is used, then it is RECOMMENDED that the network\
    \ or\n   transport layer provide confidentiality services.  When option 3 is\n\
    \   used, then no additional network or transport layer security services\n  \
    \ are necessary.\n   Additional transport or network layer security protocols\
    \ are not\n   required by ANSI C12.22, but they MAY be provided transparently\
    \ by\n   C12.22 IP Network Segment integrators (e.g., in C12.22 IP Relays) in\n\
    \   order to improve on the security provisions cited above.  However,\n   any\
    \ added transport security (e.g., Transport Layer Security (TLS),\n   RFC 5246\
    \ [27]) or IP security (e.g., IPsec, RFC 4302 [25], RFC 4303\n   [26], RFC 5996\
    \ [28]) features SHALL act only to enhance (i.e., not be\n   a substitute for,\
    \ or an alteration of) the interoperable ANSI C12.22\n   and ANSI C12.19 security\
    \ provisions, and SHALL NOT corrupt and SHALL\n   NOT alter the C12.22 Message\
    \ as presented by the C12.22 Application\n   Layer.\n   The ANSI C12.22 [1] and\
    \ ANSI C12.19 [2] standards provide for the\n   transmission of keys and their\
    \ storage in C12.19 End Devices (e.g.,\n   meters and head-end systems).  The\
    \ key management protocol (when and\n   how keys are exchanged) is not described\
    \ in the ANSI C12.22 [1] and\n   ANSI C12.19 [2] standards, except to state that\
    \ keys MAY not be\n   readable from a C12.19 End Device (in response to a Read\
    \ Service\n   Request).  It is RECOMMENDED that all C12.22 Nodes encrypt user\n\
    \   information element key fields and passwords.  It is also RECOMMENDED\n  \
    \ that all C12.22 Nodes mask user information element key fields and\n   password\
    \ fields of EPSEM Read Service Responses (e.g., by replacing\n   all key and password\
    \ bytes with zeros (0x00) or spaces (0x20)).\n   Legacy deployments exist that\
    \ are not connected to the Internet, so\n   there are some implementations that\
    \ do not include security.  It is\n   likely that multi-homed C12.22 Nodes with\
    \ interfaces to the Internet\n   will exist in future deployments, so security\
    \ mechanisms MUST be used\n   by those C12.22 Nodes to ensure C12.22 Message authentication\
    \ and\n   confidentiality.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   UDP and TCP port 1153, which is used for C12.22 communication\
    \ over\n   IP, is registered with IANA.\n   Section 4.6, \"IP Multicast\", defines\
    \ the use of multicast.  The\n   following multicast addresses have been registered\
    \ by IANA for use by\n   the ANSI C12.22 standard:\n      IPv4 -- \"All C1222\
    \ Nodes\" address 224.0.2.4\n      IPv6 -- \"All C1222 Nodes\" address FF0X::204\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   The authors wish to recognize Alexander Shulgin for providing\n\
    \   valuable comments and for conducting feasibility testing in support\n   of\
    \ this work.\n   The following people have improved this document through thoughtful\n\
    \   comments and suggestions: Fred Baker, Ralph Droms, Vijay Gurbani,\n   Michael\
    \ Stuber, Spencer Dawkins, Alfred Hoenes, Russ Housley, Paul\n   Hoffman, Lars\
    \ Eggert, and Sean Turner.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]   ANSI, \"Protocol Specification for Interfacing\
    \ to Data\n         Communication Networks\", ANSI C12.22-2008, January 2009.\n\
    \   [2]   ANSI, \"Utility Industry End Device Data Tables\", ANSI C12.19-\n  \
    \       2008, February 2009.\n   [3]   IEEE, \"Draft Standard for Utility Industry\
    \ Metering\n         Communication Protocol Application Layer (End Device Data\n\
    \         Tables)\", IEEE P1377-2010, October 2010.\n   [4]   Bradner, S., \"\
    Key words for use in RFCs to Indicate Requirement\n         Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [5]   IEEE, \"Standard for Local Area Network/Wide\
    \ Area Network (LAN/\n         WAN) Node Communication Protocol to Complement\
    \ the Utility\n         Industry End Device Data Tables\", IEEE P1703-2010,\n\
    \         October 2010.\n   [6]   ISO/IEC, \"Information Technology-Open Systems\
    \ Interconnection-\n         Connectionless Protocol for the Association Control\
    \ Service\n         Element: Protocol Specification\", ISO/IEC 10035-1, 1995.\n\
    \   [7]   ISO/IEC, \"Information Technology-ASN.1 Encoding Rules:\n         Specification\
    \ of Basic Encoding Rules (BER), Canonical Encoding\n         Rules (CER) and\
    \ Distinguished Encoding Rules (DER)\", ISO/\n         IEC 8825-1, 2002.\n   [8]\
    \   Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n         August 1980.\n\
    \   [9]   Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793,\n   \
    \      September 1981.\n   [10]  Deering, S., \"Host extensions for IP multicasting\"\
    , STD 5,\n         RFC 1112, August 1989.\n   [11]  Cain, B., Deering, S., Kouvelas,\
    \ I., Fenner, B., and A.\n         Thyagarajan, \"Internet Group Management Protocol,\
    \ Version 3\",\n         RFC 3376, October 2002.\n   [12]  Vida, R., Ed., and\
    \ L. Costa, Ed., \"Multicast Listener Discovery\n         Version 2 (MLDv2) for\
    \ IPv6\", RFC 3810, June 2004.\n   [13]  Conta, A., Deering, S., and M. Gupta,\
    \ Ed., \"Internet Control\n         Message Protocol (ICMPv6) for the Internet\
    \ Protocol Version 6\n         (IPv6) Specification\", RFC 4443, March 2006.\n\
    \   [14]  Fenner, B., Handley, M., Holbrook, H., and I. Kouvelas,\n         \"\
    Protocol Independent Multicast - Sparse Mode (PIM-SM):\n         Protocol Specification\
    \ (Revised)\", RFC 4601, August 2006.\n   [15]  Hinden, R. and S. Deering, \"\
    IP Version 6 Addressing\n         Architecture\", RFC 4291, February 2006.\n \
    \  [16]  Meyer, D., \"Administratively Scoped IP Multicast\", BCP 23,\n      \
    \   RFC 2365, July 1998.\n   [17]  Senie, D., \"Changing the Default for Directed\
    \ Broadcasts in\n         Routers\", BCP 34, RFC 2644, August 1999.\n   [18] \
    \ Eggert, L. and G. Fairhurst, \"Unicast UDP Usage Guidelines for\n         Application\
    \ Designers\", BCP 145, RFC 5405, November 2008.\n   [19]  Braden, R., Ed., \"\
    Requirements for Internet Hosts -\n         Communication Layers\", STD 3, RFC\
    \ 1122, October 1989.\n   [20]  Deering, S. and R. Hinden, \"Internet Protocol,\
    \ Version 6 (IPv6)\n         Specification\", RFC 2460, December 1998.\n   [21]\
    \  Allman, M., Floyd, S., and C. Partridge, \"Increasing TCP's\n         Initial\
    \ Window\", RFC 3390, October 2002.\n   [22]  Rescorla, E. and B. Korver, \"Guidelines\
    \ for Writing RFC Text on\n         Security Considerations\", BCP 72, RFC 3552,\
    \ July 2003.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [23]  Measurement Canada, \"Specification for\
    \ Utility Industry\n         Metering Communication Protocol Application Layer\
    \ (End Device\n         Data Tables)\", Draft MC12.19, 2011.\n   [24]  Measurement\
    \ Canada, \"Specification for Local Area Network/Wide\n         Area Network (LAN/WAN)\
    \ Node Communication Protocol to\n         Complement the Utility Industry End\
    \ Device Data Tables\",\n         Draft MC12.22, 2011.\n   [25]  Kent, S., \"\
    IP Authentication Header\", RFC 4302, December 2005.\n   [26]  Kent, S., \"IP\
    \ Encapsulating Security Payload (ESP)\", RFC 4303,\n         December 2005.\n\
    \   [27]  Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS)\n \
    \        Protocol Version 1.2\", RFC 5246, August 2008.\n   [28]  Kaufman, C.,\
    \ Hoffman, P., Nir, Y., and P. Eronen, \"Internet Key\n         Exchange Protocol\
    \ Version 2 (IKEv2)\", RFC 5996, September 2010.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Avygdor Moise\n   Future DOS R&D Inc.\n   #303 - 6707\
    \ Elbow Drive SW\n   Calgary, Alberta  T2V 0E5\n   Canada\n   EMail: avy@fdos.ca\n\
    \   URI:   http://www.fdos.ca\n   Jonathan Brodkin\n   Future DOS R&D Inc.\n \
    \  #303 - 6707 Elbow Drive SW\n   Calgary, Alberta  T2V 0E5\n   Canada\n   EMail:\
    \ jonathan.brodkin@fdos.ca\n   URI:   http://www.fdos.ca\n"
