This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing ethernet like objects.
The Internet standard Network Management Framework consists of three components.
They are: RFC 1155 which defines the SMI, the mechanisms used for describing and naming objects for the purpose of management.
RFC 1212 defines a more concise description mechanism, which is wholly consistent with the SMI.
RFC 1156 which defines MIB I, the core set of managed objects for the Internet suite of protocols.
RFC 1213, defines MIB II, an evolution of MIB I based on implementation experience and new operational requirements.
RFC 1157 which defines the SNMP, the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Objects Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1)
[7] defined in the SMI.
In particular, each object has a name, a syntax, and an encoding.
The name is an object identifier, an administratively assigned name, which specifies an object type.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the OBJECT DESCRIPTOR, to also refer to the object type.
The syntax of an object type defines the abstract data structure corresponding to that object type.
The ASN.1 language is used for this purpose.
However, the SMI [3] purposely restricts the ASN.1 constructs which may be used.
These restrictions are explicitly made for simplicity.
The encoding of an object type is simply how that object type is represented using the object type's syntax.
Implicitly tied to the notion of an object type's syntax and encoding
is how the object type is represented when being transmitted on the network.
The SMI specifies the use of the basic encoding rules of ASN.1 [8], subject to the additional requirements imposed by the SNMP.
Format of Definitions Section 5 contains contains the specification of all object types contained in this MIB module.
The object types are defined using the conventions defined in the SMI, as amended by the extensions specified in [13].
Overview Instances of these object types represent attributes of an interface to an ethernet like communications medium.
At present, ethernet like media are identified by three values of the ifType object in the Internet standard MIB: ethernet csmacd(6) iso88023
The definitions presented here are based on the IEEE 802.3 Layer Management Specification [9], as originally interpreted by Frank Kastenholz of Interlan in [10].
Implementors of these MIB objects should note that the IEEE document explicitly describes (in the form of Pascal pseudocode)
when, where, and how various MAC attributes are measured.
The IEEE document also describes the effects of MAC actions that may be invoked by manipulating instances of the MIB objects defined here.
To the extent that some of the attributes defined in [9] are represented by previously defined objects in the Internet standard MIB or in the generic interface extensions MIB [11], such attributes are not redundantly represented by objects defined in this memo.
Among the attributes represented by objects defined in other memos are the number of octets transmitted or received on a particular interface, the number of frames transmitted or received on a particular interface, the promiscuous status of an interface, the MAC address of an interface, and multicast information associated with an interface.
The relationship between an ethernet like interface and an interface in the context of the Internet standard MIB is one to one.
As such, the value of an ifIndex object instance can be directly used to identify corresponding instances of the objects defined herein.
IMPORTS Counter, Gauge FROM RFC1155
MIB OBJECT TYPE FROM RFC 1212;
This MIB module uses the extended OBJECT TYPE macro as    defined in [13]
this is the MIB module for ethernet like objects
mandatory DESCRIPTION "Status information and control variables for a collection of ethernet like interfaces attached to a particular system."
{ dot3 1 } dot3Entry OBJECT TYPE SYNTAX
mandatory DESCRIPTION "Status information and control variables for a particular interface to an ethernet like medium.
Gauge } dot3Index OBJECT TYPE SYNTAX
INTEGER ACCESS  read only STATUS  mandatory DESCRIPTION
"An index value that uniquely identifies an interface to an ethernet like medium.
The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
INTEGER { initialized(1), uninitialized(2) } ACCESS
"The initialization status of the MAC and PLS (Physical Layer Signalling) subsystems for a particular interface.
The value initialized(1) signifies that the subsystems for a particular interface have been previously initialized; the value uninitialized(2) signifies that they have not been previously initialized.
Each alteration of an instance of this object to either of the values initialized(1) or uninitialized(2) is analogous to an invocation of the initializeMAC action defined in [9] and has the effect of (re )initializing the MAC and PLS subsystems for the associated interface.
In particular, all management counters pertaining to the MAC and PLS subsystems for said interface are reset to zero; the receive and transmit layer management state variables (receiveEnabled and transmitEnabled in [9]) are set to enable reception and transmission of frames; the promiscuous receive function is disabled; and multicast reception is disabled."
INTEGER { enabled(1), disabled(2) } ACCESS
"The operational status of the MAC sublayer for a particular interface.
The value enabled(1) signifies that the MAC sublayer for said interface is operational for both transmitting and receiving frames
that is, that the value of both the receive and transmit layer management state variables (receiveEnabled and transmitEnabled in [9]) for said interface are true.
The value disabled(2) signifies that the MAC sublayer for said interface is not operational for either transmitting or receiving frames.
In particular, the value of an instance of this object is disabled(2)
whenever the value of the corresponding instance of the dot3Enabled object is false(2).
Each alteration of an instance of this object to the value enabled(1) is analogous to an invocation of the enableMACSublayer action defined in [9] and has the effect of starting normal transmit and receive operations (from the ``idle'' state) on the associated interface.
In particular, such an alteration has the effect of resetting the PLS for said interface and of setting the receive and transmit layer management state variables (receiveEnabled and transmitEnabled in [9]) to be true.
Each alteration of an instance of this object to the value disabled(2) is analogous to an invocation of the disableMACSublayer action defined in [9] and has the effect of terminating transmit and receive operations on the associated interface.
In particular, such an alteration has the effect of setting the receive and transmit layer management state variables (receiveEnabled and transmitEnabled in [9]) to be false.
Any transmissions/receptions in progress are completed before operation is terminated."
{ dot3Entry 3 } dot3MulticastReceiveStatus OBJECT TYPE SYNTAX
INTEGER { enabled(1), disabled(2) } ACCESS
"The multicast receive status for a particular interface.
The value enabled(1) signifies that reception of multicast frames by the MAC sublayer is enabled on said interface.
The value disabled(2) signifies that reception of multicast frames by the MAC sublayer is not enabled on said interface.
Each alteration of an instance of this object to the value enabled(1) is analogous to an invocation of the enableMulticastReceive action defined in [9] and has the effect of enabling multicast frame reception on the associated interface.
Actual reception of multicast frames is only possible on an interface when the values for the associated instances of the dot3MulticastReceiveStatus and dot3MacSubLayerStatus objects are enabled(1) and enabled(1), respectively.
Each alteration of an instance of this object to the value disabled(2) is analogous to an invocation of the disableMulticastReceive action defined in [9] and has the effect of inhibiting multicast frame reception on the associated interface."
INTEGER { true(1), false(2)  }
"The transmit layer management state variable (transmitEnabled as defined in [9]) for a particular interface.
The value true(1) signifies that the MAC frame transmission is enabled on said interface.
The value false(2) signifies that the MAC frame transmission is inhibited on said interface.
In particular, the value of an instance of this object is false(2) whenever the value of the corresponding instance of the dot3MacSubLayerStatus object is disabled(2).
Each alteration of an instance of this object to the value true(1) is analogous to an invocation of the enableTransmit action defined in [9] and has the effect of enabling MAC sublayer frame transmission on the associated interface.
In particular, such an alteration has the effect of setting the transmit layer management state variable (transmitEnabled in [9])
for said interface to be true.
Each alteration of an instance of this object to the value false(2) is analogous to an invocation of the disableTransmit action defined in [9] and has the effect of inhibiting MAC sublayer frame transmission on the associated interface.
In particular, such an alteration has the effect of setting the transmit layer management state variable (transmitEnabled in [9])
for said interface to be false.
Any transmissions in progress are completed before transmission is inhibited."
read only STATUS  mandatory DESCRIPTION
"The number of 10 MHz ticks which elapsed between the beginning of a TDR measurement and the collision which ended it, for the most recently executed TDR test.
If no TDR test has been executed, or the last TDR value is not available, this object has the value 0."
the Ethernet like Statistics group   Implementation of this group is mandatory   Due to implementation restrictions (e.g. in the   instrumentation provided by a chipset, or a device   driver), some of the counters in this group may be   difficult or impossible to implement.
In such cases, an implementator should apply reasonable   best effort to detect as many occurrences as possible.
In any case, the value of a counter will be the number   actually detected, which will always be less or equal   to the number of actual occurrences.
In the extreme   case of a total inability to detect occurrences, the   counter will always be zero.
Vendors are strongly encouraged to document in user guides and   other appropriate documentation the conditions under which the   values of the counters in this group may represent an   underestimate of the true count.
mandatory DESCRIPTION "Statistics for a collection of ethernet like interfaces attached to a particular system."
mandatory DESCRIPTION "Statistics for a particular interface to an ethernet like medium."
Counter, dot3StatsFCSErrors Counter, dot3StatsSingleCollisionFrames Counter, dot3StatsMultipleCollisionFrames Counter, dot3StatsSQETestErrors Counter, dot3StatsDeferredTransmissions
INTEGER ACCESS  read only STATUS  mandatory DESCRIPTION
"An index value that uniquely identifies an interface to an ethernet like medium.
The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
read only STATUS  mandatory DESCRIPTION
"A count of frames received on a particular interface that are not an integral number of octets in length and do not pass the FCS check.
The count represented by an instance of this object is incremented when the alignmentError status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of [9], counted exclusively according to the error status presented to the LLC."
read only STATUS  mandatory DESCRIPTION
"A count of frames received on a particular interface that are an integral number of octets in length but do not pass the FCS check.
The count represented by an instance of this object is incremented when the frameCheckError status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of [9], counted exclusively according to the error status presented to the LLC."
read only STATUS  mandatory DESCRIPTION
"A count of successfully transmitted frames on a particular interface for which transmission is inhibited by exactly one collision.
A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsMultipleCollisionFrames object."
read only STATUS  mandatory DESCRIPTION
"A count of successfully transmitted frames on a particular interface for which transmission is inhibited by more than one collision.
A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the dot3StatsSingleCollisionFrames object."
read only STATUS  mandatory DESCRIPTION
"A count of times that the SQE TEST ERROR message is generated by the PLS sublayer for a particular interface.
The SQE TEST ERROR message is defined in section 7.2.2.2.4 of [12] and its generation is described in section 7.2.4.6 of the same document."
read only STATUS  mandatory DESCRIPTION
"A count of frames for which the first transmission attempt on a particular interface is delayed because the medium is busy.
The count represented by an instance of this object does not include frames involved in collisions."
read only STATUS  mandatory DESCRIPTION
The number of times that a collision is detected on a particular interface later than 512 bit times into the transmission of a packet.
Five hundred and twelve bit times corresponds to 51.2 microseconds on a 10 Mbit/s system.
A (late) collision included in a count represented by an instance of this object is also considered as a (generic) collision for purposes of other collision related statistics."
read only STATUS  mandatory DESCRIPTION
} dot3StatsInternalMacTransmitErrors OBJECT TYPE SYNTAX
read only STATUS  mandatory DESCRIPTION
"A count of frames for which transmission on a particular interface fails due to an internal MAC sublayer transmit error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsLateCollisions object,
the dot3StatsExcessiveCollisions object, the dot3StatsCarrierSenseErrors object, or the dot3StatsExcessiveDeferrals object.
The precise meaning of the count represented by an instance of this object
In particular, an instance of this object may represent a count of transmission errors on a particular interface that are not otherwise counted."
read only STATUS  mandatory DESCRIPTION
"The number of times that the carrier sense condition was lost or never asserted when attempting to transmit a frame on a particular interface.
The count represented by an instance of this object is incremented at most once per transmission attempt, even if the carrier sense condition fluctuates during a transmission attempt."
read only STATUS  mandatory DESCRIPTION
The count represented by an instance of this object is incremented when the frameTooLong status is returned by the MAC service to the LLC (or other MAC user).
Received frames for which multiple error conditions obtain are, according to the conventions of [9], counted exclusively according to the error status presented to the LLC."
{ dot3StatsEntry 13 } dot3StatsInRangeLengthErrors OBJECT TYPE SYNTAX
read only STATUS  mandatory DESCRIPTION
"A count of frames received on a particular interface with a length field value that falls between the minimum unpadded LLC data size and the maximum allowed LLC data size inclusive and that does not match the number of LLC data octets received.
The count represented by an instance of this object also includes frames for which the length field value is less than the minimum unpadded LLC data size."
read only STATUS  mandatory DESCRIPTION
"A count of frames received on a particular interface for which the length field value exceeds the maximum allowed LLC data size.
The count represented by an instance of this object is not incremented in implementations that observe Ethernet encapsulation conventions (by which the IEEE 802.3 length field is interpreted as the Ethernet Type field)."
read only STATUS  mandatory DESCRIPTION
"A count of frames for which reception on a particular interface fails due to an internal MAC sublayer receive error.
A frame is only counted by an instance of this object if it is not counted by the corresponding instance of either the dot3StatsFrameTooLongs object, the dot3StatsAlignmentErrors object, the dot3StatsFCSErrors object, the dot3StatsInRangeLengthErrors object, or the dot3StatsOutOfRangeLengthFields object.
The precise meaning of the count represented by an instance of this object
In particular, an instance of this object may represent a count of receive errors on a particular interface that are not otherwise counted."
A cell in the histogram of per frame collisions for a particular interface.
An instance of this object represents the frequency of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions.
INTEGER ACCESS  read only STATUS  mandatory DESCRIPTION
"The index value that uniquely identifies the interface to which a particular collision histogram cell pertains.
The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
ACCESS  read only STATUS  mandatory DESCRIPTION
read only STATUS  mandatory DESCRIPTION
"A count of individual MAC frames for which the transmission (successful or otherwise) on a particular interface is accompanied by a particular number of media collisions."
The ifExtnsTestTable defined in [11] provides a common means   for a manager to test any interface corresponding to a value   of ifIndex.
At this time, one well known test (testFullDuplexLoopBack) is   defined in [11].
For ethernet like interfaces, this test   configures the MAC chip and executes an internal loopback   test of memory and the MAC chip logic.
This loopback test can   only be executed if the interface is offline.
Once the test   has completed, the MAC chip should be reinitialized for network   operation, but it should remain offline.
If an error occurs during a test, the object ifExtnsTestResult
(defined in [11]) will be set to failed(7).
The following two   OBJECT IDENTIFIERs may be used to provided more information as   values for the object ifExtnsTestCode in [11]:
expected data not received (or not   received correctly) in loopback test dot3ErrorLoopbackError
Another test, specific to ethernet like interfaces,   is Time domain Reflectometry (TDR) which is defined   as follows:
A TDR test returns as its result the time interval between the   most recent TDR test transmission and the subsequent detection   of a collision.
This interval is based on a 10 MHz clock and   should be normalized if the time base is other than 10 MHz.
On successful completion of a TDR test, the result is stored   as the value of the appropriate instance of the MIB object   dot3TestTdrValue, and the OBJECT IDENTIFIER of that instance   is stored in the corresponding instance of ifExtnsTestResult
(thereby indicating where the result has been stored).
The object ifExtnsChipSet is provided in [11] to identify the   MAC hardware used to communcate on an interface.
For those chipsets not represented above, OBJECT IDENTIFIER   assignment is required in other documentation, e.g., assignment   within that part of the registration tree delegated to   individual enterprises (see [3]).
END Security Considerations Security issues are not discussed in this memo.
