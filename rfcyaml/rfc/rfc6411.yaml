- title: __initial_text__
  contents:
  - '           Applicability of Keying Methods for RSVP Security

    '
- title: Abstract
  contents:
  - "Abstract\n   The Resource reSerVation Protocol (RSVP) allows hop-by-hop integrity\n\
    \   protection of RSVP neighbors.  This requires messages to be\n   cryptographically\
    \ protected using a shared secret between\n   participating nodes.  This document\
    \ compares group keying for RSVP\n   with per-neighbor or per-interface keying,\
    \ and discusses the\n   associated key provisioning methods as well as applicability\
    \ and\n   limitations of these approaches.  This document also discusses\n   applicability\
    \ of encrypting RSVP messages.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6411.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Problem Statement . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   2.  The RSVP Hop-by-Hop Trust Model  . . . . . . . . . . .\
    \ . . . .  4\n   3.  Applicability of Key Types for RSVP  . . . . . . . . . .\
    \ . . .  5\n     3.1.  Per-Interface and Per-Neighbor Keys  . . . . . . . . .\
    \ . .  5\n     3.2.  Group Keys . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  6\n   4.  Key Provisioning Methods for RSVP  . . . . . . . . . . . . . .\
    \  8\n     4.1.  Static Key Provisioning  . . . . . . . . . . . . . . . . .  8\n\
    \     4.2.  Dynamic Keying . . . . . . . . . . . . . . . . . . . . . .  8\n  \
    \     4.2.1.  Per-Neighbor and Per-Interface Key Negotiation . . . .  8\n    \
    \   4.2.2.  Dynamic Group Key Distribution . . . . . . . . . . . .  8\n   5. \
    \ Specific Cases Supporting Use of Group Keying  . . . . . . . .  9\n     5.1.\
    \  RSVP Notify Messages . . . . . . . . . . . . . . . . . . .  9\n     5.2.  RSVP-TE\
    \ and GMPLS  . . . . . . . . . . . . . . . . . . . .  9\n   6.  Applicability\
    \ of IPsec for RSVP  . . . . . . . . . . . . . . . 10\n     6.1.  General Considerations\
    \ Using IPsec . . . . . . . . . . . . 10\n     6.2.  Comparing AH and the INTEGRITY\
    \ Object  . . . . . . . . . . 11\n     6.3.  Applicability of Tunnel Mode . .\
    \ . . . . . . . . . . . . . 11\n     6.4.  Non-Applicability of Transport Mode\
    \  . . . . . . . . . . . 12\n     6.5.  Applicability of Tunnel Mode with Address\
    \ Preservation . . 12\n   7.  End-Host Considerations  . . . . . . . . . . . .\
    \ . . . . . . . 13\n   8.  Applicability to Other Architectures and Protocols\
    \ . . . . . . 14\n   9.  Summary  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 15\n   10. Security Considerations  . . . . . . . . . . . . . . .\
    \ . . . . 16\n     10.1. Subverted Nodes  . . . . . . . . . . . . . . . . . .\
    \ . . . 16\n   11. Acknowledgements . . . . . . . . . . . . . . . . . . . . .\
    \ . . 16\n   12. Informative References . . . . . . . . . . . . . . . . . . .\
    \ . 16\n"
- title: 1.  Introduction and Problem Statement
  contents:
  - "1.  Introduction and Problem Statement\n   The Resource reSerVation Protocol\
    \ [RFC2205] allows hop-by-hop\n   authentication of RSVP neighbors, as specified\
    \ in [RFC2747].  In this\n   mode, an integrity object is attached to each RSVP\
    \ message to\n   transmit a keyed message digest.  This message digest allows\
    \ the\n   recipient to verify the identity of the RSVP node that sent the\n  \
    \ message and to validate the integrity of the message.  Through the\n   inclusion\
    \ of a sequence number in the scope of the digest, the digest\n   also offers\
    \ replay protection.\n   [RFC2747] does not dictate how the key for the integrity\
    \ operation is\n   derived.  Currently, most implementations of RSVP use a statically\n\
    \   configured key, per interface or per neighbor.  However, to manually\n   configure\
    \ a key per router pair across an entire network is\n   operationally hard, especially\
    \ when key changes are to be performed\n   on a regular basis.  Effectively, many\
    \ users of RSVP therefore resort\n   to using the same key throughout their RSVP\
    \ network, and they change\n   it rarely, if ever, because of the operational\
    \ burden.  However, it\n   is often necessary to change keys due to network operational\n\
    \   requirements (e.g., change of operational staff).\n   This document discusses\
    \ a variety of keying methods and their\n   applicability to different RSVP deployment\
    \ environments, for both\n   message integrity and encryption.  It is meant as\
    \ a comparative guide\n   to understand where each RSVP keying method is best\
    \ deployed and the\n   limitations of each method.  Furthermore, it discusses\
    \ how RSVP hop-\n   by-hop authentication is impacted in the presence of non-RSVP\
    \ nodes,\n   or subverted nodes, in the reservation path.\n   \"RSVP Security\
    \ Properties\" ([RFC4230]) provides an overview of RSVP\n   security, including\
    \ RSVP Cryptographic Authentication [RFC2747], but\n   does not discuss key management.\
    \  It states that \"RFC 2205 assumes\n   that security associations are already\
    \ available\".  The present\n   document focuses specifically on key management\
    \ with different key\n   types, including group keys.  Therefore, this document\
    \ complements\n   [RFC4230].\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   A security domain is defined in this document as two or\
    \ more nodes\n   that share a common RSVP security policy.\n   When a key is mentioned\
    \ in this document, it is a symmetric key.  A\n   symmetric key best meets the\
    \ operational requirements of RSVP\n   deployments and is the only type of key\
    \ currently explicitly\n   supported for protecting RSVP messages.\n"
- title: 2.  The RSVP Hop-by-Hop Trust Model
  contents:
  - "2.  The RSVP Hop-by-Hop Trust Model\n   Many protocol security mechanisms used\
    \ in networks require and use\n   per-peer authentication.  Each hop authenticates\
    \ messages from its\n   neighbor with a shared key or certificate.  This is also\
    \ the model\n   used for RSVP.  Trust in this model is transitive.  Each RSVP\
    \ node\n   trusts explicitly only its RSVP next-hop peers, through the message\n\
    \   digest contained in the INTEGRITY object.  The next-hop RSVP speaker\n   in\
    \ turn trusts its own peers and so on.  See also \"RSVP Security\n   Properties\"\
    \ [RFC4230] for more background.\n   The keys used for protecting RSVP messages\
    \ can, in particular, be\n   group keys (for example, distributed via the Group\
    \ Domain of\n   Interpretation (GDOI) [RFC6407], as discussed in [GDOI-MAC]).\
    \  If a\n   group key is used, the authentication granularity becomes group\n\
    \   membership of devices, not (individual) peer authentication between\n   devices.\n\
    \   The trust an RSVP node has to another RSVP node within a common\n   security\
    \ domain has an explicit and an implicit component.\n   Explicitly, the node trusts\
    \ the other node to maintain the RSVP\n   messages intact or confidential, depending\
    \ on whether authentication\n   or encryption (or both) is used.  This means only\
    \ that the message\n   has not been altered or seen by another, non-trusted node.\n\
    \   Implicitly, each node trusts the other node to maintain the level of\n   protection\
    \ specified within that security domain.  In any group-\n   keying scheme like\
    \ GDOI, a node trusts all the other members of the\n   group (because the authentication\
    \ is now based on group membership,\n   as noted above).\n   The RSVP protocol\
    \ can operate in the presence of a non-RSVP router in\n   the path from the sender\
    \ to the receiver.  The non-RSVP hop will\n   ignore the RSVP message and just\
    \ pass it along.  The next RSVP node\n   can then process the RSVP message.  For\
    \ RSVP authentication or\n   encryption to work in this case, the key used for\
    \ computing the RSVP\n   message digest needs to be shared by the two RSVP neighbors,\
    \ even if\n   they are not IP neighbors.  In the presence of non-RSVP hops, while\n\
    \   an RSVP node always knows the next IP hop before forwarding an RSVP\n   message,\
    \ it does not always know the RSVP next hop.  In fact, part of\n   the role of\
    \ a Path message is precisely to discover the RSVP next hop\n   (and to dynamically\
    \ re-discover it when it changes, for example,\n   because of a routing change).\
    \  Thus, the presence of non-RSVP hops\n   impacts operation of RSVP authentication\
    \ or encryption and may\n   influence the selection of keying approaches.\n  \
    \ Figure 1 illustrates this scenario.  R2 in this picture does not\n   participate\
    \ in RSVP; the other nodes do.  In this case, R2 will pass\n   on any RSVP messages\
    \ unchanged and will ignore them.\n                                  ----R3---\n\
    \                                 /         \\\n                sender----R1---R2(*)\
    \       R4----receiver\n                                 \\         /\n      \
    \                            ----R5---\n                              (*) Non-RSVP\
    \ hop\n                   Figure 1: A Non-RSVP Node in the Path\n   This creates\
    \ a challenge for RSVP authentication and encryption.  In\n   the presence of\
    \ a non-RSVP hop, with some RSVP messages such as a\n   PATH message, an RSVP\
    \ router does not know the RSVP next hop for that\n   message at the time of forwarding\
    \ it.  For example, in Figure 1, R1\n   knows that the next IP hop for a Path\
    \ message addressed to the\n   receiver is R2, but it does not necessarily know\
    \ if the RSVP next hop\n   is R3 or R5.  This means that per-interface and per-neighbor\
    \ keys\n   cannot easily be used in the presence of non-RSVP routers on the path\n\
    \   between senders and receivers.\n   Section 4.3 of [RFC2747] states that \"\
    ... the receiver MAY initiate\n   an integrity handshake with the sender\".  If\
    \ this handshake is taking\n   place, it can be used to determine the identity\
    \ of the next RSVP hop.\n   In this case, non-RSVP hops can be traversed also\
    \ using per-interface\n   or per-neighbor keys.\n   Group keying will naturally\
    \ work in the presence of non-RSVP routers.\n   Referring back to Figure 1, with\
    \ group keying, R1 would use the group\n   key to protect a Path message addressed\
    \ to the receiver and forwards\n   it to R2.  Being a non-RSVP node, R2 will ignore\
    \ and forward the Path\n   message to R3 or R5 depending on the current shortest\
    \ path as\n   determined by routing.  Whether it is R3 or R5, the RSVP router\
    \ that\n   receives the Path message will be able to authenticate the message\n\
    \   successfully using the group key.\n"
- title: 3.  Applicability of Key Types for RSVP
  contents:
  - '3.  Applicability of Key Types for RSVP

    '
- title: 3.1.  Per-Interface and Per-Neighbor Keys
  contents:
  - "3.1.  Per-Interface and Per-Neighbor Keys\n   Most current RSVP authentication\
    \ implementations support per-\n   interface RSVP keys.  When the interface is\
    \ point-to-point (and\n   therefore an RSVP router has only a single RSVP neighbor\
    \ on each\n   interface), this is equivalent to per-neighbor keys in the sense\
    \ that\n   a different key is used for each neighbor.  In the point-to-point\n\
    \   case, the security domain is simply between the router and its\n   neighbor.\
    \  However, when the interface is multipoint, all RSVP\n   speakers on a given\
    \ subnet have to belong to the same security domain\n   and share the same key\
    \ in this model.  This makes it unsuitable for\n   deployment scenarios where\
    \ nodes from different security domains are\n   present on a subnet, for example,\
    \ Internet exchange points.  In such\n   cases, per-neighbor keys are required,\
    \ and the security domain is\n   between the router and its neighbor.\n   With\
    \ per-neighbor keys, each RSVP key is bound to an interface plus a\n   neighbor\
    \ on that interface.  It allows for the existence of different\n   security domains\
    \ on a single interface and subnet.\n   Per-interface and per-neighbor keys can\
    \ be used within a single\n   security domain.\n   These key types can also be\
    \ used between security domains, since they\n   are specific to a particular interface\
    \ or neighbor.\n   Both monotonically increasing sequence number (e.g., the INTEGRITY\n\
    \   object simple sequence numbers [RFC2747], or the Encapsulating\n   Security\
    \ Payload (ESP) and Authentication Header (AH) anti-replay\n   service [RFC4301]\
    \ sequence numbers) and time-based anti-replay\n   methods (e.g., the INTEGRITY\
    \ sequence numbers based on a clock\n   [RFC2747]) can be used with per-neighbor\
    \ and per-interface keys.\n   As discussed in the previous section, per-neighbor\
    \ and per-interface\n   keys can not be used in the presence of non-RSVP hops.\n"
- title: 3.2.  Group Keys
  contents:
  - "3.2.  Group Keys\n   In the case of group keys, all members of a group of RSVP\
    \ nodes share\n   the same key.  This implies that a node uses the same key regardless\n\
    \   of the next RSVP hop that will process the message (within the group\n   of\
    \ nodes sharing the particular key).  It also implies that a node\n   will use\
    \ the same key on the receiving as on the sending side (when\n   exchanging RSVP\
    \ messages within the group).\n   Group keys apply naturally to intra-domain RSVP\
    \ authentication, where\n   all RSVP nodes are part of the same security domain\
    \ and implicitly\n   trust each other.  The nodes also extended trust to a group\
    \ key\n   server (GKS), which administers group membership and provides group\n\
    \   keys.  This is represented in Figure 2.\n                      ......GKS1.............\n\
    \                      :    :   :   :        :\n                      :    : \
    \  :   :        :\n                  source--R1--R2--R3-----destination\n    \
    \              |                                |\n                  |<-----domain\
    \ 1----------------->|\n       Figure 2: A Group Key Server within a Single Security\
    \ Domain\n   A single group key cannot normally be used to cover multiple security\n\
    \   domains because, by definition, the different domains do not trust\n   each\
    \ other.  They would therefore not be willing to trust the same\n   group key\
    \ server.  For a single group key to be used in several\n   security domains,\
    \ there is a need for a single group key server,\n   which is trusted by both\
    \ sides.  While this is theoretically\n   possible, in practice it is unlikely\
    \ that there is a single such\n   entity trusted by both domains.  Figure 3 illustrates\
    \ this setup.\n                ...............GKS1....................\n     \
    \           :    :   :   :        :   :   :       :\n                :    :  \
    \ :   :        :   :   :       :\n            source--R1--R2--R3--------R4--R5--R6--destination\n\
    \            |                  |    |                      |\n            |<-----domain\
    \ 1--->|    |<-------domain 2----->|\n        Figure 3: A Single Group Key Server\
    \ across Security Domains\n   A more practical approach for RSVP operation across\
    \ security domains,\n   is to use a separate group key server for each security\
    \ domain, and\n   to use per-interface or per-neighbor keys between the two domains\n\
    \   (thus comprising a third security domain).  Figure 4 shows this\n   setup.\n\
    \                ....GKS1......        ....GKS2.........\n                :  \
    \  :   :   :        :   :   :       :\n                :    :   :   :        :\
    \   :   :       :\n            source--R1--R2--R3--------R4--R5--R6--destination\n\
    \            |                  |    |                      |\n            |<-----domain\
    \ 1--->|    |<-------domain 2----->|\n                               |<-->|\n\
    \                              domain 3\n             Figure 4: A Group Key Server\
    \ per Security Domain\n   As discussed in Section 2, group keying can be used\
    \ in the presence\n   of non-RSVP hops.\n   Because a group key may be used to\
    \ verify messages from different\n   peers, monotonically increasing sequence\
    \ number methods are not\n   appropriate.  Time-based anti-replay methods (e.g.,\
    \ the INTEGRITY\n   sequence numbers based on a clock [RFC2747]) can be used with\
    \ group\n   keys.\n"
- title: 4.  Key Provisioning Methods for RSVP
  contents:
  - '4.  Key Provisioning Methods for RSVP

    '
- title: 4.1.  Static Key Provisioning
  contents:
  - "4.1.  Static Key Provisioning\n   Static keys are preconfigured, either manually\
    \ or through a network\n   management system.  The simplest way to implement RSVP\
    \ authentication\n   is to use static keys.  Static keying can be used with per-interface\n\
    \   keys, per-neighbor keys, or group keys.\n   The provisioning of static keys\
    \ requires either manual operator\n   intervention on each node or a network management\
    \ system performing\n   the same task.  Time synchronization of static key provisioning\
    \ and\n   changes is critical in order to avoid inconsistent keys within a\n \
    \  security domain.\n   Static key provisioning is therefore not an ideal model\
    \ in a large\n   network.\n   Often, the number of interconnection points across\
    \ two domains where\n   RSVP is allowed to transit is relatively small and well\
    \ controlled.\n   Also, the different domains may not be in a position to use\
    \ an\n   infrastructure trusted by both domains to update keys on both sides.\n\
    \   Thus, statically provisioned keys may be applicable to inter-domain\n   RSVP\
    \ authentication.\n   Since it is not feasible to carry out a key change at the\
    \ exact same\n   time in communicating RSVP nodes, some grace period needs to\
    \ be\n   implemented during which an RSVP node will accept both the old and\n\
    \   the new key.  Otherwise, RSVP operation would suffer interruptions.\n   (Also\
    \ with dynamic keying approaches, there can be a grace period\n   where two keys\
    \ are valid at the same time; however, the grace period\n   in manual keying tends\
    \ to be significantly longer than with dynamic\n   key rollover schemes.)\n"
- title: 4.2.  Dynamic Keying
  contents:
  - '4.2.  Dynamic Keying

    '
- title: 4.2.1.  Per-Neighbor and Per-Interface Key Negotiation
  contents:
  - "4.2.1.  Per-Neighbor and Per-Interface Key Negotiation\n   To avoid the problem\
    \ of manual key provisioning and updates in static\n   key deployments, key negotiation\
    \ between RSVP neighbors could be used\n   to derive either per-interface or per-neighbor\
    \ keys.\n"
- title: 4.2.2.  Dynamic Group Key Distribution
  contents:
  - "4.2.2.  Dynamic Group Key Distribution\n   With this approach, group keys are\
    \ dynamically distributed among a\n   set of RSVP routers.  For example, [GDOI-MAC]\
    \ describes a mechanism\n   to distribute group keys to a group of RSVP speakers,\
    \ using GDOI\n   [RFC6407].  In this solution, each RSVP node requests a group\
    \ key\n   from a key server as part of an encrypted and integrity-protected key\n\
    \   agreement protocol.  Once the key server has authenticated and\n   authorized\
    \ the RSVP nodes, it distributes a group key to the group\n   member.  The authentication\
    \ in this model can be based on public key\n   mechanisms, thereby avoiding the\
    \ need for static key provisioning.\n"
- title: 5.  Specific Cases Supporting Use of Group Keying
  contents:
  - '5.  Specific Cases Supporting Use of Group Keying

    '
- title: 5.1.  RSVP Notify Messages
  contents:
  - "5.1.  RSVP Notify Messages\n   [RFC3473] introduces the Notify message and allows\
    \ such messages to\n   be sent in a non-hop-by-hop fashion.  As discussed in the\
    \ Security\n   Considerations section of [RFC3473], this can interfere with RSVP's\n\
    \   hop-by-hop integrity and authentication model.  [RFC3473] describes\n   how\
    \ standard IPsec-based integrity and authentication can be used to\n   protect\
    \ Notify messages.\n   Group keying may allow use of regular RSVP authentication\
    \ [RFC2747]\n   for protection of non-hop-by-hop Notify messages.  For example,\
    \ RSVP\n   Notify messages commonly used for traffic engineering in MPLS\n   networks\
    \ are non-hop-by-hop messages.  Such messages may be sent from\n   an ingress\
    \ node directly to an egress node.  Group keying in such a\n   case avoids the\
    \ establishment of node-to-node keying when node-to-\n   node keying is not otherwise\
    \ used.\n"
- title: 5.2.  RSVP-TE and GMPLS
  contents:
  - "5.2.  RSVP-TE and GMPLS\n   Use of RSVP authentication for RSVP-TE [RFC3209]\
    \ and for RSVP-TE Fast\n   Reroute [RFC4090] deserves additional considerations.\n\
    \   With the facility backup method of Fast Reroute, a backup tunnel from\n  \
    \ the Point of Local Repair (PLR) to the Merge Point (MP) is used to\n   protect\
    \ Label Switched Paths (protected LSPs) against the failure of\n   a facility\
    \ (e.g., a router) located between the PLR and the MP.\n   During the failure\
    \ of the facility, the PLR redirects a protected LSP\n   inside the backup tunnel\
    \ and as a result, the PLR and MP then need to\n   exchange RSVP control messages\
    \ between each other (e.g., for the\n   maintenance of the protected LSP).  Some\
    \ of the RSVP messages between\n   the PLR and MP are sent over the backup tunnel\
    \ (e.g., a Path message\n   from PLR to MP), while some are directly addressed\
    \ to the RSVP node\n   (e.g., a Resv message from MP to PLR).  During the rerouted\
    \ period,\n   the PLR and the MP effectively become RSVP neighbors, while they\
    \ may\n   not be directly connected to each other and thus do not behave as\n\
    \   RSVP neighbors in the absence of failure.  This point is raised in\n   the\
    \ Security Considerations section of [RFC4090] that says: \"Note\n   that the\
    \ facility backup method requires that a PLR and its selected\n   merge point\
    \ trust RSVP messages received from each other\".  Such\n   environments may benefit\
    \ from group keying.  A group key can be used\n   among a set of routers enabled\
    \ for Fast Reroute, thereby easily\n   ensuring that PLR and MP authenticate messages\
    \ from each other,\n   without requiring prior specific configuration of keys,\
    \ or activation\n   of key update mechanism, for every possible pair of PLR and\
    \ MP.\n   Where RSVP-TE or RSVP-TE Fast Reroute is deployed across AS\n   boundaries\
    \ (see [RFC4216]), the considerations presented above in\n   Sections 3.1 and\
    \ 3.2 apply, such that per-interface or per-neighbor\n   keys can be used between\
    \ two RSVP neighbors in different ASes\n   (independently of the keying method\
    \ used by the RSVP router to talk\n   to the RSVP routers in the same AS).\n \
    \  [RFC4875] specifies protocol extensions for support of Point-to-\n   Multipoint\
    \ (P2MP) RSVP-TE.  RSVP message integrity mechanisms for\n   hop-by-hop RSVP signaling\
    \ apply to the hop-by-hop P2MP RSVP-TE\n   signaling (see the Security Considerations\
    \ in [RFC4875]).\n   [RFC4206] defines LSP Hierarchy with GMPLS TE and uses non-hop-by-hop\n\
    \   signaling.  Because it reuses LSP Hierarchy procedures for some of\n   its\
    \ operations, P2MP RSVP-TE also uses non-hop-by-hop signaling.\n   Both LSP hierarchy\
    \ and P2MP RSVP-TE rely on the security mechanisms\n   defined in [RFC3473] and\
    \ [RFC4206] for non hop-by-hop RSVP-TE\n   signaling.  Group keying can simplify\
    \ protection of non-hop-by-hop\n   signaling for LSP Hierarchy and P2MP RSVP-TE.\n"
- title: 6.  Applicability of IPsec for RSVP
  contents:
  - '6.  Applicability of IPsec for RSVP

    '
- title: 6.1.  General Considerations Using IPsec
  contents:
  - "6.1.  General Considerations Using IPsec\n   The discussions about the various\
    \ keying methods in this document are\n   also applicable when using IPsec [RFC4301]\
    \ to protect RSVP.  Section\n   1.2 of [RFC2747] states that IPsec is not an optimal\
    \ choice to\n   protect RSVP.  The key argument is that an IPsec security association\n\
    \   (SA) and an RSVP SA are not based on the same parameters.\n   Nevertheless,\
    \ IPsec can be used to protect RSVP.  The Security Policy\n   Database (SPD) traffic\
    \ selectors for related RSVP flows will not be\n   constant.  In some cases, the\
    \ source and destination addresses are\n   end hosts, and sometimes they are RSVP\
    \ routers.  Therefore, traffic\n   selectors in the SPD are expected to specify\
    \ ANY for the source\n   address and destination addresses, and to specify IP\
    \ protocol 46\n   (RSVP).\n   \"The Multicast Group Security Architecture\" [RFC3740]\
    \ defines in\n   detail a \"Group Security Association\" (GSA).  This definition\
    \ is also\n   applicable in the context discussed here, and allows the use of\
    \ IPsec\n   for RSVP.  The existing GDOI specification [RFC6407] manages group\n\
    \   security associations, which can be used by IPsec.  An example GDOI\n   policy\
    \ would be to encrypt or authenticate all packets of the RSVP\n   protocol itself\
    \ (IP protocol 46).  A router implementing GDOI and the\n   AH and/or ESP protocols\
    \ is therefore able to implement this policy.\n   Because the traffic selectors\
    \ for an SA cannot be predicted, SA\n   lookup is expected to use only the Security\
    \ Parameters Index (SPI)\n   (or SPI plus protocol).\n"
- title: 6.2.  Comparing AH and the INTEGRITY Object
  contents:
  - "6.2.  Comparing AH and the INTEGRITY Object\n   The INTEGRITY object defined\
    \ by [RFC2747] provides integrity\n   protection for RSVP also in a group-keying\
    \ context, as discussed\n   above.  AH [RFC4302] is an alternative method to provide\
    \ integrity\n   protection for RSVP packets.\n   The RSVP INTEGRITY object protects\
    \ the entire RSVP message, but does\n   not protect the IP header of the packet\
    \ nor the IP options (in IPv4)\n   or extension headers (in IPv6).\n   AH tunnel\
    \ mode (transport mode is not applicable; see Section 6.4)\n   protects the entire\
    \ original IP packet, including the IP header of\n   the original IP packet (\"\
    inner header\"), IP options or extension\n   headers, plus the entire RSVP packet.\
    \  It also protects the immutable\n   fields of the outer header.\n   The difference\
    \ between the two schemes in terms of covered fields is\n   therefore whether\
    \ the IPv4 header and IP options, or the IPv6 header\n   and extension headers,\
    \ of the original IP packet are protected (as is\n   the case with AH) or not\
    \ (as is the case with the INTEGRITY object).\n   Also, AH covers the immutable\
    \ fields of the outer header.\n   As described in the next section, IPsec tunnel\
    \ mode cannot be applied\n   for RSVP traffic in the presence of non-RSVP nodes;\
    \ therefore, the\n   security associations in both cases, AH and INTEGRITY object,\
    \ are\n   between the same RSVP neighbors.  From a keying point of view, both\n\
    \   approaches are therefore comparable.\n"
- title: 6.3.  Applicability of Tunnel Mode
  contents:
  - "6.3.  Applicability of Tunnel Mode\n   IPsec tunnel mode encapsulates the original\
    \ packet, prepending a new\n   IP header plus an ESP or AH sub-header.  The entire\
    \ original packet\n   plus the ESP/AH sub-header is secured.  However, in the\
    \ case of ESP,\n   the new, outer IP header is not cryptographically secured in\
    \ this\n   process.\n   Protecting RSVP packets with IPsec tunnel mode works with\
    \ any of the\n   keying methods described above (per-interface, per-neighbor,\
    \ or group\n   keying), as long as there are no non-RSVP nodes on the path (however,\n\
    \   see the group-keying considerations below).  For RSVP messages to be\n   visible\
    \ and considered at each hop, such a tunnel would not cross\n   routers, but each\
    \ RSVP node would establish a tunnel with each of its\n   peers, effectively leading\
    \ to link protection.\n   In the presence of a non-RSVP hop, tunnel mode cannot\
    \ be applied\n   because a router upstream from a non-RSVP hop does not know the\
    \ next\n   RSVP hop, and thus cannot apply the correct tunnel header.  The same\n\
    \   situation applies to a host attached to the network by a non-RSVP-\n   enabled\
    \ first hop.  This is independent of the key type used.\n   The use of group keying\
    \ with ESP tunnel mode where a security gateway\n   places a peer security gateway\
    \ address as the destination of the ESP\n   packet has consequences.  In particular,\
    \ if a man-in-the-middle\n   attacker redirects the ESP-protected reservation\
    \ to a different\n   security gateway, the receiving security gateway cannot detect\
    \ that\n   the destination address was changed.  However, it has received and\n\
    \   will act upon an RSVP reservation that will be routed along an\n   unintended\
    \ path.  Because RSVP routers encountering the RSVP packet\n   path will not be\
    \ aware that this is an unintended path, they will act\n   upon it, and the resulting\
    \ RSVP state along both the intended path\n   and unintended path will be incorrect.\
    \  Therefore, using group keying\n   with ESP tunnel mode is not recommended,\
    \ unless address preservation\n   is used (see Section 6.5).\n"
- title: 6.4.  Non-Applicability of Transport Mode
  contents:
  - "6.4.  Non-Applicability of Transport Mode\n   IPsec transport mode, as defined\
    \ in [RFC4303] is not suitable for\n   securing RSVP Path messages, since those\
    \ messages preserve the\n   original source and destination.  [RFC4301] states\
    \ explicitly that\n   \"the use of transport mode by an intermediate system (e.g.,\
    \ a\n   security gateway) is permitted only when applied to packets whose\n  \
    \ source address (for outbound packets) or destination address (for\n   inbound\
    \ packets) is an address belonging to the intermediate system\n   itself\".  This\
    \ would not be the case for RSVP Path messages.\n"
- title: 6.5.  Applicability of Tunnel Mode with Address Preservation
  contents:
  - "6.5.  Applicability of Tunnel Mode with Address Preservation\n   When the identity\
    \ of the next-hop RSVP peer is not known, it is not\n   possible to use a tunnel-endpoint\
    \ destination address in the tunnel\n   mode outer IP header.  Section 3.1 of\
    \ \"Multicast Extensions to the\n   Security Architecture for the Internet Protocol\"\
    \ [RFC5374] defines a\n   new tunnel mode: tunnel mode with address preservation.\
    \  This mode\n   copies the destination and optionally the source address from\
    \ the\n   inner header to the outer header.  Therefore, the encapsulated packet\n\
    \   will have the same destination address as the original packet, and\n   will\
    \ be normally subject to the same routing decisions.  While\n   [RFC5374] is focusing\
    \ on multicast environments, tunnel mode with\n   address preservation can be\
    \ used also to protect unicast traffic in\n   conjunction with group keying. \
    \ In this tunnel mode, the RSVP\n   speakers act as security gateways because\
    \ they maintain the original\n   end-system addresses of the RSVP packets in the\
    \ tunnel mode outer IP\n   header.  This addressing scheme is used by RSVP to\
    \ ensure that the\n   packets continue along the routed path toward the destination\
    \ end\n   host.\n   Tunnel mode with address preservation, in conjunction with\
    \ group\n   keying, allows the use of AH or ESP for protection of RSVP even in\n\
    \   cases where non-RSVP nodes have to be traversed.  This is because it\n   allows\
    \ routing of the IPsec-protected packet through the non-RSVP\n   nodes in the\
    \ same way as if it were not IPsec protected.\n   When used with group keying,\
    \ tunnel mode with address preservation\n   can be used to mitigate redirection\
    \ attacks where a man-in-the-middle\n   modifies the destination of the outer\
    \ IP header of the tunnel mode\n   packet.  The inbound processing rules for tunnel\
    \ mode with address\n   preservation (Section 5.2 of [RFC5374]) require that the\
    \ receiver\n   verify that the addresses in the outer IP header and the inner\
    \ IP\n   header are consistent.  Therefore, the attack can be detected, and\n\
    \   RSVP reservations will not proceed along an unintended path.\n"
- title: 7.  End-Host Considerations
  contents:
  - "7.  End-Host Considerations\n   Unless RSVP Proxy entities [RFC5945] are used,\
    \ RSVP signaling is\n   controlled by end systems and not routers.  As discussed\
    \ in\n   [RFC4230], RSVP allows both user-based security and host-based\n   security.\
    \  User-based authentication aims at \"providing policy based\n   admission control\
    \ mechanism based on user identities or application\"\n   [RFC3182].  To identify\
    \ the user or the application, a policy element\n   called AUTH_DATA, which is\
    \ contained in the POLICY_DATA object, is\n   created by the RSVP daemon at the\
    \ user's host and transmitted inside\n   the RSVP message.  This way, a user may\
    \ authenticate to the Policy\n   Decision Point (or directly to the first-hop\
    \ router).  Host-based\n   security relies on the same mechanisms as between routers\
    \ (i.e., the\n   INTEGRITY object) as specified in [RFC2747].  For host-based\n\
    \   security, per-interface or per-neighbor keys may be used; however,\n   key\
    \ management with statically provisioned keys can be difficult in a\n   large-scale\
    \ deployment, as described in Section 4.  In principle, an\n   end host can also\
    \ be part of a group key scheme, such as GDOI.  If\n   the end systems are part\
    \ of the same security domain as the RSVP hops\n   in the network, group keying\
    \ can be extended to include the end\n   systems.  If the end systems and the\
    \ network are in different zones\n   of trust, group keying cannot be used.\n"
- title: 8.  Applicability to Other Architectures and Protocols
  contents:
  - "8.  Applicability to Other Architectures and Protocols\n   While, so far, this\
    \ document discusses only RSVP security assuming\n   the traditional RSVP model\
    \ as defined by [RFC2205] and [RFC2747], the\n   analysis is also applicable to\
    \ other RSVP deployment models as well\n   as to similar protocols.  These include\
    \ the following:\n   o  \"Aggregation of RSVP for IPv4 and IPv6 Reservations\"\
    \ [RFC3175]:\n      This scheme defines aggregation of individual RSVP reservations,\n\
    \      and discusses use of RSVP authentication for the signaling\n      messages.\
    \  Group keying is applicable to this scheme, particularly\n      when automatic\
    \ Deaggregator discovery is used, since in that case,\n      the Aggregator does\
    \ not know ahead of time which Deaggregator will\n      intercept the initial\
    \ end-to-end RSVP Path message.\n   o  \"Generic Aggregate Resource ReSerVation\
    \ Protocol (RSVP)\n      Reservations\" [RFC4860]: This document also discusses\
    \ aggregation\n      of individual RSVP reservations.  Here again, group keying\
    \ applies\n      and is mentioned in the Security Considerations section.\n  \
    \ o  \"Aggregation of Resource ReSerVation Protocol (RSVP) Reservations\n    \
    \  over MPLS TE/DS-TE Tunnels\" [RFC4804]: This scheme also defines a\n      form\
    \ of aggregation of RSVP reservation, but this time over\n      MPLS-TE tunnels.\
    \  Similarly, group keying may be used in such an\n      environment.\n   o  \"\
    Pre-Congestion Notification (PCN) Architecture\" [RFC5559]:\n      defines an\
    \ architecture for flow admission and termination based\n      on aggregated pre-congestion\
    \ information.  One deployment model\n      for this architecture is based on\
    \ Intserv over Diffserv: the\n      Diffserv region is PCN-enabled.  Also, RSVP\
    \ signaling is used end-\n      to-end, but the PCN-domain is a single RSVP hop,\
    \ i.e., only the\n      PCN-boundary-nodes process RSVP messages.  In this scenario,\
    \ RSVP\n      authentication may be required among PCN-boundary-nodes, and the\n\
    \      considerations about keying approaches discussed earlier in this\n    \
    \  document apply.  In particular, group keying may facilitate\n      operations\
    \ since the ingress PCN-boundary-node does not\n      necessarily know ahead of\
    \ time which PCN-egress-node will\n      intercept and process the initial end-to-end\
    \ Path message.  From\n      the viewpoint of securing end-to-end RSVP in this\
    \ scenario (from\n      the end host to the PCN-ingress-node, to the PCN-egress-node,\
    \ to\n      the other end host), there are a lot of similarities in scenarios\n\
    \      involving RSVP Aggregation over aggregate RSVP reservations\n      [RFC3175]\
    \ [RFC4860], RSVP Aggregation over MPLS-TE tunnels\n      [RFC4804], and RSVP\
    \ (Aggregation) over PCN ingress-egress\n      aggregates.\n"
- title: 9.  Summary
  contents:
  - "9.  Summary\n   The following table summarizes the various approaches for RSVP\n\
    \   keying, and their applicability to various RSVP scenarios.  In\n   particular,\
    \ such keying can be used for RSVP authentication (e.g.,\n   using the RSVP INTEGRITY\
    \ object or AH) and/or for RSVP encryption\n   (e.g., using ESP in tunnel mode).\n\
    \   +----------------------------+-----------------+--------------------+\n  \
    \ |                            |  per-neighbor / |     group keys     |\n   |\
    \                            |  per-interface  |                    |\n   |  \
    \                          |       keys      |                    |\n   +----------------------------+-----------------+--------------------+\n\
    \   | Works intra-domain         |       Yes       |         Yes        |\n  \
    \ | Works inter-domain         |       Yes       |         No         |\n   |\
    \ Works over non-RSVP hops   |        No       |       Yes (1)      |\n   | Dynamic\
    \ keying             |    Yes (IKE)    |  Yes (e.g., GDOI)  |\n   +----------------------------+-----------------+--------------------+\n\
    \      Table 1: Overview of Keying Approaches and Their Applicability\n   (1):\
    \  RSVP integrity with group keys works over non-RSVP nodes; RSVP\n         encryption\
    \ with ESP and RSVP authentication with AH work over\n         non-RSVP nodes\
    \ in tunnel mode with address preservation; RSVP\n         encryption with ESP\
    \ and RSVP authentication with AH do not work\n         over non-RSVP nodes in\
    \ tunnel mode.\n   We also make the following observations:\n   o  All key types\
    \ can be used statically, or with dynamic key\n      negotiation.  This impacts\
    \ the manageability of the solution, but\n      not the applicability itself.\n\
    \   o  For encryption of RSVP messages, IPsec ESP in tunnel mode can be\n    \
    \  used.\n   o  There are some special cases in RSVP, like non-RSVP hosts, the\n\
    \      Notify message (as discussed in Section 5.1, the various RSVP\n      deployment\
    \ models discussed in Section 8, and MPLS Traffic\n      Engineering and GMPLS\
    \ discussed in Section 5.2, which would\n      benefit from a group-keying approach.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This entire document discusses RSVP security;\
    \ this section describes\n   specific security considerations relating to subverted\
    \ RSVP nodes.\n"
- title: 10.1.  Subverted Nodes
  contents:
  - "10.1.  Subverted Nodes\n   An undetected subverted node, for example, one that\
    \ an intruder has\n   gained control over, is still implicitly a trusted node.\
    \  However, it\n   is a threat to the security of RSVP.  Since RSVP authentication\
    \ is\n   hop by hop and not end to end, a subverted node in the path breaks\n\
    \   the chain of trust.  This is, to a large extent, independent of the\n   type\
    \ of keying used.\n   For per-interface or per-neighbor keying, the subverted\
    \ node can now\n   introduce fake messages to its neighbors.  This can be used\
    \ in a\n   variety of ways, for example, by changing the receiver address in the\n\
    \   Path message or by generating fake Path messages.  This allows path\n   states\
    \ to be created on every RSVP router along any arbitrary path\n   through the\
    \ RSVP domain.  That in itself could result in a form of\n   denial of service\
    \ by allowing exhaustion of some router resources\n   (e.g., memory).  The subverted\
    \ node could also generate fake Resv\n   messages upstream corresponding to valid\
    \ Path states.  In doing so,\n   the subverted node can reserve excessive amounts\
    \ of bandwidth thereby\n   possibly performing a denial-of-service attack.\n \
    \  Group keying allows the additional abuse of sending fake RSVP\n   messages\
    \ to any node in the RSVP domain, not just adjacent RSVP\n   nodes.  However,\
    \ in practice, this can be achieved to a large extent\n   also with per-neighbor\
    \ or per-interface keys, as discussed above.\n   Therefore, the impact of subverted\
    \ nodes on the path is comparable\n   for all keying schemes discussed here (per-interface,\
    \ per-neighbor,\n   and group keys).\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors would like to thank everybody who provided\
    \ feedback on\n   this document.  Specific thanks to Bob Briscoe, Hannes Tschofenig,\n\
    \   Ran Atkinson, Stephen Kent, and Kenneth G. Carlberg.\n"
- title: 12.  Informative References
  contents:
  - "12.  Informative References\n   [GDOI-MAC]  Weis, B. and S. Rowles, \"GDOI Generic\
    \ Message\n               Authentication Code Policy\", Work in Progress, September\n\
    \               2011.\n   [RFC2205]   Braden, B., Zhang, L., Berson, S., Herzog,\
    \ S., and S.\n               Jamin, \"Resource ReSerVation Protocol (RSVP) --\
    \ Version 1\n               Functional Specification\", RFC 2205, September 1997.\n\
    \   [RFC2747]   Baker, F., Lindell, B., and M. Talwar, \"RSVP\n              \
    \ Cryptographic Authentication\", RFC 2747, January 2000.\n   [RFC3175]   Baker,\
    \ F., Iturralde, C., Le Faucheur, F., and B. Davie,\n               \"Aggregation\
    \ of RSVP for IPv4 and IPv6 Reservations\", RFC\n               3175, September\
    \ 2001.\n   [RFC3182]   Yadav, S., Yavatkar, R., Pabbati, R., Ford, P., Moore,\n\
    \               T., Herzog, S., and R. Hess, \"Identity Representation for\n \
    \              RSVP\", RFC 3182, October 2001.\n   [RFC3209]   Awduche, D., Berger,\
    \ L., Gan, D., Li, T., Srinivasan, V.,\n               and G. Swallow, \"RSVP-TE:\
    \ Extensions to RSVP for LSP\n               Tunnels\", RFC 3209, December 2001.\n\
    \   [RFC3473]   Berger, L., \"Generalized Multi-Protocol Label Switching\n   \
    \            (GMPLS) Signaling Resource ReserVation Protocol-Traffic\n       \
    \        Engineering (RSVP-TE) Extensions\", RFC 3473, January\n             \
    \  2003.\n   [RFC3740]   Hardjono, T. and B. Weis, \"The Multicast Group Security\n\
    \               Architecture\", RFC 3740, March 2004.\n   [RFC4090]   Pan, P.,\
    \ Swallow, G., and A. Atlas, \"Fast Reroute\n               Extensions to RSVP-TE\
    \ for LSP Tunnels\", RFC 4090, May\n               2005.\n   [RFC4206]   Kompella,\
    \ K. and Y. Rekhter, \"Label Switched Paths (LSP)\n               Hierarchy with\
    \ Generalized Multi-Protocol Label Switching\n               (GMPLS) Traffic Engineering\
    \ (TE)\", RFC 4206, October\n               2005.\n   [RFC4216]   Zhang, R. and\
    \ J. Vasseur, \"MPLS Inter-Autonomous System\n               (AS) Traffic Engineering\
    \ (TE) Requirements\", RFC 4216,\n               November 2005.\n   [RFC4230]\
    \   Tschofenig, H. and R. Graveman, \"RSVP Security\n               Properties\"\
    , RFC 4230, December 2005.\n   [RFC4301]   Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n               Internet Protocol\", RFC 4301, December 2005.\n   [RFC4302]\
    \   Kent, S., \"IP Authentication Header\", RFC 4302, December\n             \
    \  2005.\n   [RFC4303]   Kent, S., \"IP Encapsulating Security Payload (ESP)\"\
    , RFC\n               4303, December 2005.\n   [RFC4804]   Le Faucheur, F., \"\
    Aggregation of Resource ReSerVation\n               Protocol (RSVP) Reservations\
    \ over MPLS TE/DS-TE Tunnels\",\n               RFC 4804, February 2007.\n   [RFC4860]\
    \   Le Faucheur, F., Davie, B., Bose, P., Christou, C., and\n               M.\
    \ Davenport, \"Generic Aggregate Resource ReSerVation\n               Protocol\
    \ (RSVP) Reservations\", RFC 4860, May 2007.\n   [RFC4875]   Aggarwal, R., Papadimitriou,\
    \ D., and S. Yasukawa,\n               \"Extensions to Resource Reservation Protocol\
    \ - Traffic\n               Engineering (RSVP-TE) for Point-to-Multipoint TE Label\n\
    \               Switched Paths (LSPs)\", RFC 4875, May 2007.\n   [RFC5374]   Weis,\
    \ B., Gross, G., and D. Ignjatic, \"Multicast\n               Extensions to the\
    \ Security Architecture for the Internet\n               Protocol\", RFC 5374,\
    \ November 2008.\n   [RFC5559]   Eardley, P., \"Pre-Congestion Notification (PCN)\n\
    \               Architecture\", RFC 5559, June 2009.\n   [RFC5945]   Le Faucheur,\
    \ F., Manner, J., Wing, D., and A. Guillou,\n               \"Resource Reservation\
    \ Protocol (RSVP) Proxy Approaches\",\n               RFC 5945, October 2010.\n\
    \   [RFC6407]   Weis, B., Rowles, S., and T. Hardjono, \"The Group Domain\n  \
    \             of Interpretation\", RFC 6407, October 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael H. Behringer\n   Cisco Systems\n   Village d'Entreprises\
    \ Green Side\n   400, Avenue Roumanille, Batiment T 3\n   Biot - Sophia Antipolis\
    \  06410\n   France\n   EMail: mbehring@cisco.com\n   URI:   http://www.cisco.com\n\
    \   Francois Le Faucheur\n   Cisco Systems\n   Village d'Entreprises Green Side\n\
    \   400, Avenue Roumanille, Batiment T 3\n   Biot - Sophia Antipolis  06410\n\
    \   France\n   EMail: flefauch@cisco.com\n   URI:   http://www.cisco.com\n   Brian\
    \ Weis\n   Cisco Systems\n   170 W. Tasman Drive\n   San Jose, California  95134-1706\n\
    \   USA\n   EMail: bew@cisco.com\n   URI:   http://www.cisco.com\n"
