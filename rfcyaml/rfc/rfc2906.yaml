- title: __initial_text__
  contents:
  - '                     AAA Authorization Requirements

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the requirements that Authentication\n \
    \  Authorization Accounting (AAA) protocols must meet in order to\n   support\
    \ authorization services in the Internet. The requirements have\n   been elicited\
    \ from a study of a range of applications including\n   mobile-IP, roamops and\
    \ others.\n"
- title: Table Of Contents
  contents:
  - "Table Of Contents\n   1. Introduction.................................................2\n\
    \   2. Requirements.................................................3\n      \
    \ 2.1  Authorization Information..............................3\n       2.2  Security\
    \ of authorization information..................7\n       2.3  Time...................................................9\n\
    \       2.4  Topology..............................................10\n      \
    \ 2.5  Application Proxying..................................12\n       2.6  Trust\
    \ Model...........................................12\n       2.7  Not just transactions.................................14\n\
    \       2.8  Administration........................................15\n      \
    \ 2.9  Bytes on-the-wire.....................................16\n       2.10 Interfaces............................................17\n\
    \       2.11 Negotiation...........................................18\n   3. Security\
    \ Considerations.....................................19\n   4. References..................................................20\n\
    \   Authors' Addresses.............................................20\n   Full\
    \ Copyright Statement.......................................23\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document is one of a series of three documents under\n\
    \   consideration by the AAAarch RG dealing with the authorization\n   requirements\
    \ for AAA protocols.  The three documents are:\n         AAA Authorization Framework\
    \ [FRMW]\n         AAA Authorization Requirements (this document)\n         AAA\
    \ Authorization Application Examples [SAMP]\n   The work for this memo was done\
    \ by a group that originally was the\n   Authorization subgroup of the AAA Working\
    \ Group of the IETF.  When\n   the charter of the AAA working group was changed\
    \ to focus on MobileIP\n   and NAS requirements, the AAAarch Research Group was\
    \ chartered within\n   the IRTF to continue and expand the architectural work\
    \ started by the\n   Authorization subgroup.  This memo is one of four which were\
    \ created\n   by the subgroup.  This memo is a starting point for further work\n\
    \   within the AAAarch Research Group.  It is still a work in progress\n   and\
    \ is published so that the work will be available for the AAAarch\n   subgroup\
    \ and others working in this area, not as a definitive\n   description of architecture\
    \ or requirements.\n   The process followed in producing this document was to\
    \ analyze the\n   requirements from [SAMP] based on a common understanding of\
    \ the AAA\n   authorization framework [FRMW]. This document assumes familiarity\n\
    \   with both the general issues involved in authorization and, in\n   particular,\
    \ the reader will benefit from a reading of [FRMW] where,\n   for example, definitions\
    \ of terms can be found.\n   The key words \"MUST\", \"REQUIRED\", \"SHOULD\"\
    , \"RECOMMENDED\", and \"MAY\"\n   in this document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2. Requirements
  contents:
  - "2. Requirements\n   Requirements are grouped under headings for convenience;\
    \ this\n   grouping is not significant.\n   Definitions and explanations of some\
    \ of the technical terms used in\n   this document may be found in [FRMW].\n \
    \  Each requirement is presented as a succinct (usually a sentence or\n   two)\
    \ statement. Most are followed by a paragraph of explanatory\n   material, which\
    \ sometimes contains an example. Fully described\n   examples may be found in\
    \ [SAMP].\n   The requirements presented are not intended to be \"orthogonal\"\
    , that\n   is, some of them repeat, or overlap, with others.\n"
- title: 2.1 Authorization Information
  contents:
  - '2.1 Authorization Information

    '
- title: 2.1.1   Authorization decisions MUST be able to be based on information
  contents:
  - "2.1.1   Authorization decisions MUST be able to be based on information\n   about\
    \ the requestor, the service/method requested, and the operating\n   environment\
    \ (authorization information). AAA protocols are required\n   to transport this\
    \ information.\n   This simply states the requirement for a protocol and an access\n\
    \   decision function, which takes inputs, based on the requestor, the\n   resource\
    \ requested and the environment.\n"
- title: 2.1.2   It MUST be possible to represent authorization information as
  contents:
  - "2.1.2   It MUST be possible to represent authorization information as\n   sets\
    \ of attributes. It MAY be possible to represent authorization\n   information\
    \ as objects.\n   This states that authorization information must be decomposable\
    \ into\n   sets of attributes. It is not intended to imply any particular\n  \
    \ mechanism for representing attributes.\n"
- title: 2.1.3   It MUST be possible to package authorization information so that
  contents:
  - "2.1.3   It MUST be possible to package authorization information so that\n  \
    \ the authorization information for multiple services or applications\n   can\
    \ be carried in a single message in a AAA or application protocol.\n   This states\
    \ that a protocol, which always required separate AAA\n   messages/transactions\
    \ for each service/application, would not meet\n   the requirement. For example,\
    \ it should be possible for a single AAA\n   message/transaction to be sufficient\
    \ to allow both network and\n   application access.\n"
- title: 2.1.4   Standard attributes types SHOULD be defined which are relevant
  contents:
  - "2.1.4   Standard attributes types SHOULD be defined which are relevant\n   to\
    \ many Internet applications/services (e.g.  identity information,\n   group information,\
    \ ...)\n   There are many attributes that are used in lots of contexts, and\n\
    \   these should only be defined once, in order to promote\n   interoperability\
    \ and prevent duplication of effort.\n"
- title: 2.1.5   Authorization decisions MUST NOT be limited to being based on
  contents:
  - "2.1.5   Authorization decisions MUST NOT be limited to being based on\n   identity\
    \ information, i.e. AAA protocols MUST support the use of\n   non-identifying\
    \ information, e.g. to support role based access\n   control (RBAC).\n   Authorization\
    \ based on clearances, roles, groups or other information\n   is required to be\
    \ supported. A AAA protocol that only carried\n   identity information would not\
    \ meet the requirement.\n"
- title: 2.1.6   Authorization data MAY include limits in addition to attributes
  contents:
  - "2.1.6   Authorization data MAY include limits in addition to attributes\n   which\
    \ are directly \"owned\" by end entities.\n   This states that some attributes\
    \ do not simply represent attributes\n   of an entity, for example a spending\
    \ limit of IR 1,000 is not an\n   intrinsic attribute of an entity. This also\
    \ impacts on the access\n   decision function, in that the comparison to be made\
    \ is not a simple\n   equality match.\n"
- title: 2.1.7   It MUST be possible for other (non-AAA) protocols to define
  contents:
  - "2.1.7   It MUST be possible for other (non-AAA) protocols to define\n   their\
    \ own attribute types, which can then be carried within an\n   authorization package\
    \ in a AAA or application protocol.\n   This states that the attributes that are\
    \ significant in an\n   authorization decision, may be application protocol dependent.\
    \ For\n   example, many attribute types are defined by [RFC2138] and support\n\
    \   for the semantics of these attributes will be required. Of course,\n   only\
    \ AAA entities that are aware of the added attribute types can\n   make use of\
    \ them.\n"
- title: 2.1.8   It SHOULD be possible for administrators of deployed systems to
  contents:
  - "2.1.8   It SHOULD be possible for administrators of deployed systems to\n   define\
    \ their own attribute types, which can then be carried within an\n   authorization\
    \ package in a AAA or application protocol.\n   This states that the attributes\
    \ that are significant in an\n   authorization decision, may be dependent on a\
    \ closed environment.\n   For example, many organizations have a well-defined\
    \ scheme of\n   seniority, which can be used to determine access levels. Of course,\n\
    \   only AAA entities that are aware of the added attribute types can\n   make\
    \ use of them.\n"
- title: 2.1.9   It SHOULD be possible to define new attribute types without
  contents:
  - "2.1.9   It SHOULD be possible to define new attribute types without\n   central\
    \ administration and control of attribute name space.\n   A centralized or distributed\
    \ registration scheme of some sort is\n   needed if collisions in attribute type\
    \ allocations are to be avoided.\n   However a AAA protocol which always requires\
    \ use of such a\n   centralized registration would not meet the requirement. Of\
    \ course,\n   collisions should be avoided where possible.\n"
- title: 2.1.10  It MUST be possible to define attribute types so that an
  contents:
  - "2.1.10  It MUST be possible to define attribute types so that an\n   instance\
    \ of an attribute in a single AAA message can have multiple\n   values.\n   This\
    \ states that a protocol which does not allow multiple instances\n   of an attribute\
    \ in a message/transaction would not meet the\n   requirement.  For example it\
    \ should be possible to have a \"group\"\n   attribute which contains more than\
    \ one groupname (or number or\n   whatever).\n"
- title: 2.1.11  If MUST be possible to distinguish different instances of the
  contents:
  - "2.1.11  If MUST be possible to distinguish different instances of the\n   same\
    \ authorization attribute type or value, on the basis of \"security\n   domain\"\
    \ or \"authority\".\n   This recognizes that it is important to be able to distinguish\n\
    \   between attributes based not only on their value. For example, all NT\n  \
    \ domains (which use the English language) have an Administrators\n   group, an\
    \ access decision function has to be able to determine to\n   which of these groups\
    \ the requestor belongs.\n"
- title: 2.1.12  AAA protocols MUST specify mechanisms for updating the rules
  contents:
  - "2.1.12  AAA protocols MUST specify mechanisms for updating the rules\n   which\
    \ will be used to control authorization decisions.\n   This states that a AAA\
    \ protocol that cannot provide a mechanism for\n   distributing authorization\
    \ rules is not sufficient. For example, this\n   could be used to download ACLs\
    \ to a PDP.\n   Note that this is not meant to mean that this AAA protocol mechanism\n\
    \   must always be used, simply that it must be available for use. In\n   particular,\
    \ storing authorization rules in a trusted repository (in\n   many cases an LDAP\
    \ server) will in many cases be used instead of such\n   a AAA protocol mechanism.\
    \  Neither does this requirement call for a\n   standardized format for authorization\
    \ rules, merely that there be a\n   mechanism for transporting these.\n"
- title: 2.1.13  The AAA protocol MUST allow for chains of AAA entities to be
  contents:
  - "2.1.13  The AAA protocol MUST allow for chains of AAA entities to be\n   involved\
    \ in an authorization decision.\n   This states that more than one AAA server\
    \ may have to be involved in\n   a single authorization decision. This may occur\
    \ either due to a\n   decision being spread across more than one \"domain\" or\
    \ in order to\n   distribute authorization within a single \"domain\".\n"
- title: 2.1.14  The AAA protocol MUST allow for intermediate AAA entities to add
  contents:
  - "2.1.14  The AAA protocol MUST allow for intermediate AAA entities to add\n  \
    \ their own local authorization information to a AAA request or\n   response.\n\
    \   This states that where more than one AAA entity is involved in an\n   authorization\
    \ decision each of the AAA entities may manipulate the\n   AAA messages involved\
    \ either by adding more information or by\n   processing parts of the information.\n"
- title: 2.1.15  AAA entities MAY be either be deployed independently or
  contents:
  - "2.1.15  AAA entities MAY be either be deployed independently or\n   integrated\
    \ with application entities.\n   This states that the AAA entities may either\
    \ be implemented as AAA\n   servers or integrated with application entities.\n"
- title: 2.1.16  The AAA protocol MUST support the creation and encoding of rules
  contents:
  - "2.1.16  The AAA protocol MUST support the creation and encoding of rules\n  \
    \ that are to be active inside one AAA server based on attributes\n   published\
    \ by another AAA server. The level of authorization of the\n   requesting AAA\
    \ Server MAY govern the view on attributes.\n   This states that one AAA entity\
    \ may have to distribute authorization\n   rules to another, and that the AAA\
    \ entity that receives the rules may\n   only be seeing part of the story.\n"
- title: 2.1.17  AAA protocols MAY have to support the idea of critical and non-
  contents:
  - "2.1.17  AAA protocols MAY have to support the idea of critical and non-\n   critical\
    \ attribute types.\n   This is analogous to the use of the criticality flag in\
    \ public key\n   certificate extensions.\n"
- title: 2.1.18  A AAA protocol MUST allow authorization rules to be expressed in
  contents:
  - "2.1.18  A AAA protocol MUST allow authorization rules to be expressed in\n  \
    \ terms of combinations of other authorization rules which have been\n   evaluated.\n\
    \   For example, access may only be granted if the requestor is member of\n  \
    \ the backup users group and not a member of the administrator's group.\n   Note\
    \ that this requirement does not state which types of combinations\n   are to\
    \ be supported.\n"
- title: 2.1.19  It SHOULD be possible to make authorization decisions based on
  contents:
  - "2.1.19  It SHOULD be possible to make authorization decisions based on\n   the\
    \ geographic location of a requestor, service or AAA entity.\n   This is just\
    \ an example of an authorization attribute type, notable\n   because it requires\
    \ different underlying implementation mechanisms.\n"
- title: 2.1.20  It SHOULD be possible to make authorization decisions based on
  contents:
  - "2.1.20  It SHOULD be possible to make authorization decisions based on\n   the\
    \ identity or the equipment used by a requestor, service or AAA\n   entity.\n\
    \   This is just an example of an authorization attribute type, notable\n   because\
    \ it may require different underlying implementation mechanisms\n   (if IPSec\
    \ isn't available).\n"
- title: 2.1.21  When there are multiple instances of a given attribute, there
  contents:
  - "2.1.21  When there are multiple instances of a given attribute, there\n   must\
    \ be an unambiguous mechanism by which a receiving peer can\n   determine the\
    \ value of specified instance.\n"
- title: 2.2 Security of authorization information
  contents:
  - '2.2 Security of authorization information

    '
- title: 2.2.1   It MUST be possible for authorization information to be
  contents:
  - "2.2.1   It MUST be possible for authorization information to be\n   communicated\
    \ securely in AAA and application protocols.  Mechanisms\n   that preserve authenticity,\
    \ integrity and privacy for this\n   information MUST be specified.\n   This states\
    \ that there must be a well-defined method for securing\n   authorization information,\
    \ not that such methods must always be used.\n   Whether support for these mechanisms\
    \ is to be required for\n   conformance is left open. In particular, mechanisms\
    \ must be provided\n   so that a service administrator in the middle of a chain\
    \ cannot read\n   or change authorization information being sent between other\
    \ AAA\n   entities.\n"
- title: 2.2.2   AAA protocols MUST allow for use of an appropriate level of
  contents:
  - "2.2.2   AAA protocols MUST allow for use of an appropriate level of\n   security\
    \ for authorization information. AAA protocols MUST be able to\n   support both\
    \ highly secure and less secure mechanisms for data\n   integrity/confidentiality\
    \ etc.\n   It is important that AAA protocols do not mandate too heavy a\n   security\
    \ overhead, thus the security mechanisms specified don't\n   always need to be\
    \ used (though not using them may affect the\n   authorization decision).\n"
- title: 2.2.3   The security requirements MAY differ between different parts of
  contents:
  - "2.2.3   The security requirements MAY differ between different parts of\n   a\
    \ package of authorization information.\n   Some parts may require confidentiality\
    \ and integrity, some may only\n   require integrity. This effectively states\
    \ that we require something\n   like selective field security mechanisms. For\
    \ example, information\n   required to gain access to a network may have to be\
    \ in clear, whilst\n   information required for access to an application within\
    \ that network\n   may have to be encrypted in the AAA protocol.\n"
- title: 2.2.4   AAA protocols MUST provide mechanisms that prevent intermediate
  contents:
  - "2.2.4   AAA protocols MUST provide mechanisms that prevent intermediate\n   administrators\
    \ breaching security.\n   This is a basic requirement to prevent man-in-the-middle\
    \ attacks, for\n   example where an intermediate administrator changes AAA messages\
    \ on\n   the fly.\n"
- title: 2.2.5   AAA protocols MUST NOT open up replay attacks based on replay of
  contents:
  - "2.2.5   AAA protocols MUST NOT open up replay attacks based on replay of\n  \
    \ the authorization information.\n   For example, a AAA protocol should not allow\
    \ flooding attacks where\n   the attacker replays AAA messages that require the\
    \ recipient to use a\n   lot of CPU or communications before the replay is detected.\n"
- title: 2.2.6   AAA protocols MUST be capable of leveraging any underlying peer
  contents:
  - "2.2.6   AAA protocols MUST be capable of leveraging any underlying peer\n   entity\
    \ authentication mechanisms that may have been applied - this\n   MAY provide\
    \ additional assurance that the owner of the authorization\n   information is\
    \ the same as the authenticated entity.  For example, if\n   IPSec provides sufficient\
    \ authentication, then it must be possible to\n   omit AAA protocol authentication.\n"
- title: 2.2.7   End-to-end confidentiality, integrity, peer-entity-
  contents:
  - "2.2.7   End-to-end confidentiality, integrity, peer-entity-\n   authentication,\
    \ or non-repudiation MAY be required for packages of\n   authorization information.\n\
    \   This states that confidentiality, (resp. the other security\n   services),\
    \ may have to be provided for parts of a AAA message, even\n   where it is transmitted\
    \ via other AAA entities. It does allow that\n   such a AAA message may also contain\
    \ non-confidential, resp. the other\n   security services), parts. In addition,\
    \ intermediate AAA entities may\n   themselves be considered end-points for end-to-end\
    \ security services\n   applied to other parts of the AAA message.\n"
- title: 2.2.8   AAA protocols MUST be usable even in environments where no peer
  contents:
  - "2.2.8   AAA protocols MUST be usable even in environments where no peer\n   entity\
    \ authentication is required (e.g. a network address on a secure\n   LAN may be\
    \ enough to decide).\n   This requirement (in a sense the opposite of 2.2.6),\
    \ indicates the\n   level of flexibility that is required in order to make the\
    \ AAA\n   protocol useful across a broad range of applications/services.\n"
- title: 2.2.9   AAA protocols MUST specify "secure" defaults for all protocol
  contents:
  - "2.2.9   AAA protocols MUST specify \"secure\" defaults for all protocol\n   options.\
    \ Implementations of AAA entities MUST use these \"secure\"\n   defaults unless\
    \ otherwise configured/administered.\n   This states that the out-of-the-box configuration\
    \ must be \"secure\",\n   for example, authorization decisions should result in\
    \ denial of\n   access until a AAA entity is configured. Note that the interpretation\n\
    \   of \"secure\" will vary on a case-by-case basis, though the principle\n  \
    \ remains the same.\n"
- title: 2.3 Time
  contents:
  - '2.3 Time

    '
- title: 2.3.1   Authorization information MUST be timely, which means that it
  contents:
  - "2.3.1   Authorization information MUST be timely, which means that it\n   MUST\
    \ expire and in some cases MAY be revoked before expiry.\n   This states that\
    \ authorization information itself is never to be\n   considered valid for all\
    \ time, every piece of authorization\n   information must have associated either\
    \ an explicit or implicit\n   validity period or time-to-live.\n"
- title: 2.3.2   AAA protocols MUST provide mechanisms for revoking authorization
  contents:
  - "2.3.2   AAA protocols MUST provide mechanisms for revoking authorization\n  \
    \ information, in particular privileges.\n   Where the validity or time-to-live\
    \ is long, it may be necessary to\n   revoke the authorization information, e.g.\
    \ where someone leaves a\n   company. Note that this requirement does not mandate\
    \ a particular\n   scheme for revocation, so that it is not a requirement for\
    \ blacklists\n   or CRLs.\n"
- title: 2.3.3   A set of attributes MAY have an associated validity period -
  contents:
  - "2.3.3   A set of attributes MAY have an associated validity period -\n   such\
    \ that that the set MUST only be used for authorization decisions\n   during that\
    \ period. The validity period may be relatively long, (e.g.\n   months) or short\
    \ (hours, minutes).\n   This states that explicit validity periods are, in some\
    \ cases, needed\n   at the field level.\n"
- title: 2.3.4   Authorization decisions MAY be time sensitive. Support for e.g.
  contents:
  - "2.3.4   Authorization decisions MAY be time sensitive. Support for e.g.\n   \"\
    working hours\" or equivalent MUST be possible.\n   This states that the AAA protocol\
    \ must be able to support the\n   transmission of time control attributes, although\
    \ it does not mandate\n   that AAA protocols must include a standard way of expressing\
    \ the\n   \"working hours\" type constraint.\n"
- title: 2.3.5   It MUST be possible to support authorization decisions that
  contents:
  - "2.3.5   It MUST be possible to support authorization decisions that\n   produce\
    \ time dependent results.\n   For example, an authorization result may be that\
    \ service should be\n   provided for a certain period. In such cases a AAA protocol\
    \ must be\n   able to transport this information, possibly as a specific result\
    \ of\n   the authorization decision, or, as an additional \"termination of\n \
    \  service\" AAA message transmitted later.\n"
- title: 2.3.6   It MUST be possible to support models where the authorization
  contents:
  - "2.3.6   It MUST be possible to support models where the authorization\n   information\
    \ is issued in well in advance of an authorization decision\n   rather than near\
    \ the time of the authorization decision.\n   This is required in order to support\
    \ pre-paid (as opposed to\n   subscription) scenarios (e.g. for VoIP).\n"
- title: 2.3.7   It SHOULD be possible to support models where the authorization
  contents:
  - "2.3.7   It SHOULD be possible to support models where the authorization\n   decision\
    \ is made in advance of a service request.\n   This is for some applications such\
    \ as backup, where actions are\n   scheduled for future dates. It also covers\
    \ applications that require\n   reservation of resources.\n"
- title: 2.3.8   A AAA mechanism must allow time stamp information to be carried
  contents:
  - "2.3.8   A AAA mechanism must allow time stamp information to be carried\n   along\
    \ with authorization information (e.g. for non-repudiation).\n   The PKIX WG is\
    \ developing a time stamp protocol, which can be used as\n   part of a non-repudiation\
    \ solution. In some environments it may be\n   necessary that certain AAA protocol\
    \ messages are timestamped (by a\n   trusted authority) and that the timestamps\
    \ are forwarded within\n   subsequent AAA messages.\n"
- title: 2.4 Topology
  contents:
  - '2.4 Topology

    '
- title: 2.4.1   AAA protocols MUST be able to support the use of the push, pull
  contents:
  - "2.4.1   AAA protocols MUST be able to support the use of the push, pull\n   and\
    \ agent models.\n   This states that a protocol that only supported one model,\
    \ say pull,\n   would not meet the requirements of all the applications. The models\n\
    \   are defined in [FRMW].\n"
- title: 2.4.2   In transactions/sessions, which involve more than one AAA
  contents:
  - "2.4.2   In transactions/sessions, which involve more than one AAA\n   entity,\
    \ each \"hop\" MAY use a different push/pull/agent model.\n   For example, in\
    \ the mobile IP case, a \"foreign\" AAA server might pull\n   authorization information\
    \ from a broker, whereas the broker might\n   push some authorization information\
    \ to a \"home\" AAA server.\n"
- title: 2.4.3   AAA Protocols MUST cater for applications and services where the
  contents:
  - "2.4.3   AAA Protocols MUST cater for applications and services where the\n  \
    \ entities involved in the application or AAA protocols belong to\n   different\
    \ (security) domains.\n   This states that it must be possible for any AAA protocol\
    \ message to\n   cross security or administrative domain boundaries. Typically,\
    \ higher\n   levels of security will be applied when crossing such boundaries,\
    \ and\n   accounting mechanisms may also have to be more stringent.\n"
- title: 2.4.4   AAA protocols MUST support roaming.
  contents:
  - "2.4.4   AAA protocols MUST support roaming.\n   Roaming here may also be thought\
    \ of as \"away-from-home\" operation.\n   For example, this is a fundamental requirement\
    \ for the mobile IP\n   case.\n"
- title: 2.4.5   AAA protocols SHOULD support dynamic mobility
  contents:
  - "2.4.5   AAA protocols SHOULD support dynamic mobility\n   Dynamic mobility here\
    \ means that a client moves from one domain to\n   another, without having to\
    \ completely re-establish e.g. whatever AAA\n   session information is being maintained.\n"
- title: 2.4.6   An authorization decision MAY have to be made before the
  contents:
  - "2.4.6   An authorization decision MAY have to be made before the\n   requestor\
    \ has any other connection to a network.\n   For example, this means that the\
    \ requestor can't go anywhere on the\n   network to fetch anything and must do\
    \ requests via an\n   application/service or via an intermediate AAA entity. The\
    \ AAA\n   protocol should not overexpose such a server to denial-of-service\n\
    \   attacks.\n"
- title: 2.4.7   AAA protocols MUST support the use of intermediate AAA entities
  contents:
  - "2.4.7   AAA protocols MUST support the use of intermediate AAA entities\n   which\
    \ take part in authorization transactions but which don't \"own\"\n   any of the\
    \ end entities or authorization data.\n   In some environments (e.g. roamops),\
    \ these entities are termed\n   brokers (though these are not the same as bandwidth\
    \ brokers in the\n   QoS environment).\n"
- title: 2.4.8   AAA protocols MAY support cases where an intermediate AAA entity
  contents:
  - "2.4.8   AAA protocols MAY support cases where an intermediate AAA entity\n  \
    \ returns a forwarding address to a requestor or AAA entity, in order\n   that\
    \ the requestor or originating AAA entity can contact another AAA\n   entity.\n\
    \   This requirement recognizes that there will be routing issues with\n   AAA\
    \ servers, and that this requires that AAA protocols are able to\n   help with\
    \ such routing. For example, in the mobile IP case, a broker\n   may be required,\
    \ in part to allow the foreign and home AAA servers to\n   get in contact.\n"
- title: 2.4.9   It MUST be possible for an access decision function to discover
  contents:
  - "2.4.9   It MUST be possible for an access decision function to discover\n   the\
    \ AAA server of a requestor. If the requestor provides information\n   used in\
    \ this discovery process then the access decision function MUST\n   be able to\
    \ verify this information in a trusted manner.\n   This states that not only do\
    \ AAA servers have to be able to find one\n   another, but that sometimes an application\
    \ entity may have to find an\n   appropriate AAA server.\n"
- title: 2.5 Application Proxying
  contents:
  - '2.5 Application Proxying

    '
- title: 2.5.1   AAA protocols MUST support cases where applications use proxies,
  contents:
  - "2.5.1   AAA protocols MUST support cases where applications use proxies,\n  \
    \ that is, an application entity (C), originates a service request to a\n   peer\
    \ (I) and this intermediary (I) also initiates a service request\n   on behalf\
    \ of the client (C) to a final target (T).  AAA protocols\n   MUST be such that\
    \ the authorization decision made at T, MAY depend on\n   the authorization information\
    \ associated with C and/or with I. This\n   \"application proxying\" must not\
    \ introduce new security weaknesses in\n   the AAA protocols. There MAY be chains\
    \ of application proxies of any\n   length.\n   Note that this requirement addresses\
    \ application layer proxying - not\n   chains of AAA servers. For example, a chain\
    \ of HTTP proxies might\n   each want to restrict the content they serve to the\
    \ \"outside\".  As\n   the HTTP GET message goes from HTTP proxy to HTTP proxy,\
    \ this\n   requirement states that it must be possible that the authorization\n\
    \   decisions made at each stage can depend on the user at the browser,\n   and\
    \ not say, solely on the previous HTTP proxy's identity. Of course\n   there may\
    \ only be a single AAA server involved, or there may be many.\n"
- title: 2.5.2   Where there is a chain of application proxies, the AAA protocol
  contents:
  - "2.5.2   Where there is a chain of application proxies, the AAA protocol\n   flows\
    \ at each stage MAY be independent, i.e. the first hop may use\n   the push model,\
    \ the second pull, the third the agent model.\n   This simply restates a previous\
    \ requirement (no. 2.4.7), to make it\n   clear that this also applies when application\
    \ proxying is being used.\n"
- title: 2.6 Trust Model
  contents:
  - '2.6 Trust Model

    '
- title: 2.6.1   AAA entities MUST be able to make decisions about which other
  contents:
  - "2.6.1   AAA entities MUST be able to make decisions about which other\n   AAA\
    \ entities are trusted for which sorts of authorization\n   information.\n   This\
    \ is analogous to a requirement in public key infrastructures:\n   Just because\
    \ someone can produce a cryptographically correct public\n   key certificate does\
    \ not mean that I should trust them for anything,\n   in particular, I might trust\
    \ the issuer for some purposes, but not\n   for others.\n"
- title: 2.6.2   AAA protocols MUST allow entities to be trusted for different
  contents:
  - "2.6.2   AAA protocols MUST allow entities to be trusted for different\n   purposes,\
    \ trust MUST NOT be an all-or-nothing issue.\n   This relates the packaging (no.\
    \ 2.1.3) and trust (no. 2.6.1)\n   requirements. For example, a AAA entity may\
    \ trust some parts of an\n   authorization package but not others.\n"
- title: 2.6.3   A confirmation of authorization MAY be required in order to
  contents:
  - "2.6.3   A confirmation of authorization MAY be required in order to\n   initialize\
    \ or resynchronize a AAA entity.\n   This states that a AAA entity may need to\
    \ process some AAA protocol\n   messages in order to initialize itself. In particular,\
    \ a AAA entity\n   may need to check that a previous AAA message remains \"valid\"\
    , e.g.\n   at boot-time.\n"
- title: 2.6.4   A negation of static authorization MAY be required to shut down
  contents:
  - "2.6.4   A negation of static authorization MAY be required to shut down\n   certain\
    \ services.\n   This is the converse of 2.6.5 above. It means that a AAA entity\
    \ may\n   be \"told\" by another that a previous AAA message is no longer\n  \
    \ \"valid\". See also 2.3.2 and 2.7.6.\n"
- title: 2.6.5   It MUST be possible to configure sets of AAA entities that
  contents:
  - "2.6.5   It MUST be possible to configure sets of AAA entities that\n   belong\
    \ to a local domain, so that they are mutually trusting, but so\n   that any external\
    \ trust MUST be via some nominated subset of AAA\n   entities.\n   This states\
    \ that for efficiency or organizational reasons, it must be\n   possible to set\
    \ up some AAA servers through which all \"external\" AAA\n   services are handled.\
    \ It also states that it must be possible to do\n   this without over-burdening\
    \ the \"internal-only\" AAA servers with\n   onerous security mechanisms, just\
    \ because some AAA servers do handle\n   external relations.\n"
- title: 2.6.6   Intermediate AAA entities in a chain MUST be able to refuse a
  contents:
  - "2.6.6   Intermediate AAA entities in a chain MUST be able to refuse a\n   connection\
    \ approved by an earlier entity in the chain.\n   For example, in mobile IP the\
    \ home network may authorize a\n   connection, but the foreign network may refuse\
    \ to allow the\n   connection due to the settings chosen by the home network,\
    \ say if the\n   home network will refuse to pay.\n"
- title: 2.6.7   It SHOULD be possible to modify authorization for resources
  contents:
  - "2.6.7   It SHOULD be possible to modify authorization for resources\n   while\
    \ a session is in progress without destroying other session\n   information.\n\
    \   For example, a \"parent\" AAA server should be able to modify the\n   authorization\
    \ state of sessions managed by a \"child\" AAA server, say\n   by changing the\
    \ maximum number of simultaneous sessions which are\n   allowed.\n"
- title: 2.7 Not just transactions
  contents:
  - '2.7 Not just transactions

    '
- title: 2.7.1   Authorization decisions MAY be context sensitive, AAA protocols
  contents:
  - "2.7.1   Authorization decisions MAY be context sensitive, AAA protocols\n   MUST\
    \ enable such decisions.\n   This states that AAA protocols need to support cases\
    \ where the\n   authorization depends, (perhaps even only depends), on the current\n\
    \   state of the system, e.g. only seven sessions allowed, seventh\n   decision\
    \ depends on existence of six current sessions. Since the\n   context might involve\
    \ more than one service, the AAA protocol is\n   likely to have to offer some\
    \ support.\n"
- title: 2.7.2   AAA protocols SHOULD support both the authorization of
  contents:
  - "2.7.2   AAA protocols SHOULD support both the authorization of\n   transactions\
    \ and continuing authorization of sessions.\n   This states that AAA entities\
    \ may have to maintain state and act when\n   the state indicates some condition\
    \ has been met.\n"
- title: 2.7.3   Within a single session or transaction, it MUST be possible to
  contents:
  - "2.7.3   Within a single session or transaction, it MUST be possible to\n   interleave\
    \ authentication, authorization and accounting AAA messages.\n   This states,\
    \ that e.g. a session may have to use initial\n   authentication, authorization\
    \ and accounting AAA message(s), but also\n   have to include e.g. re-authentication\
    \ every 30 minutes, or a\n   continuous \"drip-drip\" of accounting AAA messages.\n"
- title: 2.7.4   Authorization decisions may result in a "not ready" answer.
  contents:
  - "2.7.4   Authorization decisions may result in a \"not ready\" answer.\n   This\
    \ states that yes and no are not the only outcomes of an\n   authorization decision.\
    \ In particular, if the AAA entity cannot yet\n   give a decision, it might have\
    \ to return such a result. This is\n   analogous to how public key certification\
    \ requests are sometimes\n   handled in PKI management protocols.\n"
- title: 2.7.5   A AAA entity MAY re-direct a AAA request that it has received.
  contents:
  - "2.7.5   A AAA entity MAY re-direct a AAA request that it has received.\n   This\
    \ states that if entity \"a\" asks \"b\", then \"b\" may say: \"don't ask\n  \
    \ me, ask 'c'\". This is analogous to HTTP re-direction (status code\n   307).\n"
- title: 2.7.6   AAA protocols SHOULD allow a AAA entity to "take back" an
  contents:
  - "2.7.6   AAA protocols SHOULD allow a AAA entity to \"take back\" an\n   authorization.\n\
    \   The expectation is that AAA protocols will support the ability of a\n   AAA\
    \ entity to signal an application or other AAA entity that an\n   authorization\
    \ (possibly previously granted by a third AAA entity) is\n   no longer valid.\n"
- title: 2.8 Administration
  contents:
  - '2.8 Administration

    '
- title: 2.8.1   It MUST be possible for authorization data to be administered on
  contents:
  - "2.8.1   It MUST be possible for authorization data to be administered on\n  \
    \ behalf of the end entities and AAA entities.\n   This requirement indicates\
    \ that administration of AAA has to be\n   considered as part of protocol design\
    \ - a AAA protocol, which\n   required all AAA entities act independent of all\
    \ other AAA entities,\n   would not meet the requirement.\n"
- title: 2.8.2   Centralizable administration of all features SHOULD be
  contents:
  - "2.8.2   Centralizable administration of all features SHOULD be\n   supported.\n\
    \   It should be possible (if it meets the domain requirements) to\n   centralize\
    \ or distribute the administration of AAA.\n"
- title: 2.8.3   AAA protocols SHOULD support cases where the user (as opposed to
  contents:
  - "2.8.3   AAA protocols SHOULD support cases where the user (as opposed to\n  \
    \ an administrator) authorizes a transaction.\n   For example, a user might want\
    \ to control anti-spam measures or\n   authorize things like a purchase. In such\
    \ cases, the user is acting\n   somewhat like an administrator.\n"
- title: 2.8.4   One AAA entity MAY create authorization rules for another AAA
  contents:
  - "2.8.4   One AAA entity MAY create authorization rules for another AAA\n   entity.\n\
    \   This is required to properly support delegation of authority, however\n  \
    \ when allowed, this must be able to be done in a secure fashion.\n"
- title: 2.8.5   AAA protocols SHOULD support failure recovery when one AAA
  contents:
  - "2.8.5   AAA protocols SHOULD support failure recovery when one AAA\n   entity\
    \ in a chain of AAA entities that maintain state about a session\n   fails.\n\
    \   For example, in a network access situation it may be required that a\n   AAA\
    \ server which has crashed be able to determine how many sessions\n   are in progress,\
    \ in order to make the \"next\" authorization decision.\n"
- title: 2.8.6   It SHOULD be possible for a AAA entity to query the
  contents:
  - "2.8.6   It SHOULD be possible for a AAA entity to query the\n   authorization\
    \ state of another AAA entity.\n   This may be required as part of a failure recovery\
    \ procedure.\n"
- title: 2.8.7   AAA protocols MUST be able to support "hot fail-over" for server
  contents:
  - "2.8.7   AAA protocols MUST be able to support \"hot fail-over\" for server\n\
    \   components without loss of state information.\n   This states that AAA protocols\
    \ must be able to support cases where,\n   when a server is no longer operable,\
    \ a secondary server can\n   automatically be brought \"live\" without losing\
    \ important state\n   information.\n"
- title: 2.9 Bytes on-the-wire
  contents:
  - '2.9 Bytes on-the-wire

    '
- title: 2.9.1   Authorization separate from authentication SHOULD be allowed
  contents:
  - "2.9.1   Authorization separate from authentication SHOULD be allowed\n   when\
    \ necessary, but the AAA protocols MUST also allow for a single\n   message to\
    \ request both authentication and authorization.\n   AAA protocols have to allow\
    \ a split between authentication and\n   authorization so that different mechanisms\
    \ are used for each. This\n   states that sometimes both types of information\
    \ need to be carried in\n   the same message.\n"
- title: 2.9.2   In order to minimize resource usage (e.g. reduce roundtrips) it
  contents:
  - "2.9.2   In order to minimize resource usage (e.g. reduce roundtrips) it\n   MUST\
    \ be possible to embed AAA PDUs into other protocols.\n   This states that the\
    \ AAA protocol authorization packages must be\n   defined so that they can also\
    \ be carried in other protocols. For\n   example, depending on AAA protocol header\
    \ information in order to\n   reference an authorization package could cause a\
    \ protocol to fail to\n   meet the requirement.\n"
- title: 2.9.3   A AAA protocol MAY provide mechanisms for replication of state
  contents:
  - "2.9.3   A AAA protocol MAY provide mechanisms for replication of state\n   information.\n\
    \   This can be required e.g. to support resiliency in cases where hot\n   fail-over\
    \ is required. Note that AAA protocols are of course, subject\n   to normal protocol\
    \ design requirements to do with reliability, no\n   single-point-of-failure etc\
    \ even though these are not all specified\n   here.\n"
- title: 2.9.4   A AAA protocol SHOULD allow the possibility for implementation
  contents:
  - "2.9.4   A AAA protocol SHOULD allow the possibility for implementation\n   of\
    \ a gateway function between the AAA protocol and other legacy AAA\n   related\
    \ protocols.\n   For example, some form of support for [RFC2138] as a legacy protocol\n\
    \   is very likely to be required. Of course, the use of such a gateway\n   is\
    \ almost certain to mean not meeting some other requirements, (e.g.\n   end-to-end\
    \ security), for transactions routed through the gateway.\n   There is no implication\
    \ that such gateway functionality needs to be a\n   separate server.\n"
- title: 2.9.5   A AAA protocol MUST be able to support use of a wide range of
  contents:
  - "2.9.5   A AAA protocol MUST be able to support use of a wide range of\n   primitive\
    \ data types, including RFC2277.\n   For example, various sized, signed and unsigned\
    \ integers, possibly\n   including multi-precision integers will almost certainly\
    \ need to be\n   transported. Floating point support according to ANSI IEEE 754-1985\n\
    \   may also be required.\n"
- title: 2.9.6   A AAA protocol transport SHOULD support being optimized for a
  contents:
  - "2.9.6   A AAA protocol transport SHOULD support being optimized for a\n   long-term\
    \ exchange of small packets in a stream between a pair of\n   hosts.\n   NASes\
    \ typically have a high number of transactions/second, so the AAA\n   protocol\
    \ MUST allow the flow of requests to be controlled in order\n   for the server\
    \ to make efficient use of it's receive buffers.\n"
- title: 2.9.7   A AAA protocol MUST provide support for load balancing.
  contents:
  - "2.9.7   A AAA protocol MUST provide support for load balancing.\n   In the event\
    \ that a peer's cannot receive any immediate requests, the\n   AAA protocol MUST\
    \ allow for an implementation to balance the load of\n   requests among a set\
    \ of peers.\n"
- title: 2.10    Interfaces
  contents:
  - '2.10    Interfaces

    '
- title: 2.10.1  It SHOULD be possible that authorization data can be used for
  contents:
  - "2.10.1  It SHOULD be possible that authorization data can be used for\n   application\
    \ purposes.\n   For example, in web access, if the authorization data includes\
    \ a\n   group name, mechanisms to make this data available to the application\n\
    \   so that it can modify the URL originally requested are desirable.\n"
- title: 2.10.2  It SHOULD be possible that authorization data can be used to
  contents:
  - "2.10.2  It SHOULD be possible that authorization data can be used to\n   mediate\
    \ the response to a request.\n   For example, with web access the clearance attribute\
    \ value may affect\n   the content of the HTTP response message.\n"
- title: 2.10.3  AAA protocols SHOULD be able to operate in environments where
  contents:
  - "2.10.3  AAA protocols SHOULD be able to operate in environments where\n   requestors\
    \ are not pre-registered (at least for authorization\n   purposes, but possibly\
    \ also for authentication purposes).\n   This is necessary to be able to scale\
    \ a AAA solution where there are\n   many requestors.\n"
- title: 2.10.4  AAA protocols MUST be able to support a linkage between
  contents:
  - "2.10.4  AAA protocols MUST be able to support a linkage between\n   authorization\
    \ and accounting mechanisms.\n   Motherhood and apple-pie.\n"
- title: 2.10.5  AAA protocols MUST be able to support accountability
  contents:
  - "2.10.5  AAA protocols MUST be able to support accountability\n   (audit/non-repudiation)\
    \ mechanisms.\n   Sometimes, an authorization decision will be made where the\
    \ requestor\n   has not authenticated. In such cases, it must be possible that\
    \ the\n   authorization data used is linked to audit or other accountability\n\
    \   mechanisms. Note that this requirement does not call for mandatory\n   support\
    \ for digital signatures, or other parts of a non-repudiation\n   solution.\n"
- title: 2.11    Negotiation
  contents:
  - '2.11    Negotiation

    '
- title: 2.11.1  AAA protocols MUST support the ability to refer to sets of
  contents:
  - "2.11.1  AAA protocols MUST support the ability to refer to sets of\n   authorization\
    \ packages in order to allow peers negotiate a common\n   set.\n   Given that\
    \ peers may support different combinations of authorization\n   attribute types\
    \ and packages, the requirement states that protocol\n   support is required to\
    \ ensure that the peers use packages supported\n   by both peers.\n"
- title: 2.11.2  It MUST be possible to negotiate authorization packages between
  contents:
  - "2.11.2  It MUST be possible to negotiate authorization packages between\n   AAA\
    \ entities that are not in direct communication.\n   This states that where, e.g.\
    \ a broker is involved, the end AAA\n   servers might still need to negotiate.\n"
- title: 2.11.3  Where negotiation fails to produce an acceptable common
  contents:
  - "2.11.3  Where negotiation fails to produce an acceptable common\n   supported\
    \ set then access MUST be denied.\n   For example, a server cannot grant access\
    \ if it cannot understand the\n   attributes of the requestor.\n"
- title: 2.11.4  Where negotiation fails to produce an acceptable common
  contents:
  - "2.11.4  Where negotiation fails to produce an acceptable common\n   supported\
    \ set then it SHOULD be possible to generate an error\n   indication to be sent\
    \ to another AAA entity.\n   If negotiation fails, then some administrator intervention\
    \ is often\n   required, and protocol support for this should be provided.\n"
- title: 2.11.5  It MUST be possible to pre-provision the result of a
  contents:
  - "2.11.5  It MUST be possible to pre-provision the result of a\n   negotiation,\
    \ but in such cases, the AAA protocol MUST include a\n   confirmation of the \"\
    negotiation result\".\n   Even if the supported packages of a peer are configured,\
    \ this must be\n   confirmed before assuming both sides are similarly configured.\n"
- title: 2.11.6  For each application making use of a AAA protocol, there MUST be
  contents:
  - "2.11.6  For each application making use of a AAA protocol, there MUST be\n  \
    \ one inter-operable IETF standards-track specification of the\n   authorization\
    \ package types that are \"mandatory to implement\".\n   This requirement assures\
    \ that communicating peers can count on\n   finding at least one IETF specified\
    \ inter-operable AAA protocol\n   dialect provided they are doing authorization\
    \ for a common\n   application specific problem domain. This does not preclude\
    \ the\n   negotiation of commonly understood but private AAA protocol\n   authorization\
    \ package types (e.g. vendor specific).\n"
- title: 2.11.7  It SHOULD also be possible to rank AAA negotiation options in
  contents:
  - "2.11.7  It SHOULD also be possible to rank AAA negotiation options in\n   order\
    \ of preference.\n   This states that, when negotiating, peers must be able to\
    \ indicate\n   preferences as well as capabilities.\n"
- title: 2.11.8  The negotiation mechanisms used by AAA protocols SHOULD NOT be
  contents:
  - "2.11.8  The negotiation mechanisms used by AAA protocols SHOULD NOT be\n   vulnerable\
    \ to a \"bidding-down\" attack.\n   A \"bidding-down\" attack is where an attacker\
    \ forces the negotiating\n   parties to choose the \"weakest\" option available.\
    \ This is analogous\n   to forcing 40-bit encryption on a link. The requirement\
    \ highlights\n   that protocol support is needed to prevent such attacks, for\
    \ example\n   by including the negotiation messages as part of a later MAC\n \
    \  calculation, if authentication has produced a shared secret.\n"
- title: 2.11.9  A peer MUST NOT send an attribute within an authorization
  contents:
  - "2.11.9  A peer MUST NOT send an attribute within an authorization\n   package\
    \ or attribute that was not agreed to by a prior successful\n   negotiation. If\
    \ this AAA protocol violation occurs, then it MUST be\n   possible to send an\
    \ error indication to the misbehaving peer, and\n   generate an error indication\
    \ to the network operator.\n"
- title: 2.11.10 A peer MUST declare all of the sets of the authorization
  contents:
  - "2.11.10 A peer MUST declare all of the sets of the authorization\n   packages\
    \ that it understands in its initial negotiation bid message.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   This document includes specific security requirements.\n\
    \   This document does not state any detailed requirements for the\n   interplay\
    \ with authentication, accounting or accountability (audit).\n   A AAA protocol,\
    \ which meets all of the above requirements, may still\n   leave vulnerabilities\
    \ due to such interactions. Such issues must be\n   considered as part of AAA\
    \ protocol design.\n"
- title: 4. References
  contents:
  - "4. References\n   [FRMW]     Vollbrecht, J., Calhoun, P., Farrell, S., Gommans,\
    \ L.,\n              Gross, G., de Bruijn, B., de Laat, C., Holdrege, M. and D.\n\
    \              Spence, \"AAA Authorization Framework\", RFC 2904, August\n   \
    \           2000.\n   [RFC2026]  Bradner, S., \"The Internet Standards Process\
    \ -- Revision\n              3\", BCP 9, RFC 2026, October 1996.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2138]  Rigney, C., Rubens, A.,\
    \ Simpson, W. and S. Willens,\n              \"Remote Authentication Dial In User\
    \ Service (RADIUS)\", RFC\n              2138, April 1997.\n   [RFC2277]  Alvestrand,\
    \ H., \"IETF Policy on Character Sets and\n              Languages\", RFC 2277,\
    \ January 1998.\n   [SAMP]     Vollbrecht, J., Calhoun, P., Farrell, S., Gommans,\
    \ L.,\n              Gross, G., de Bruijn, B., de Laat, C., Holdrege, M. and D.\n\
    \              Spence, \"AAA Authorization Application Examples\", RFC\n     \
    \         2905, August 2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephen Farrell\n   Baltimore Technologies\n   61/62 Fitzwilliam\
    \ Lane\n   Dublin 2,\n   IRELAND\n   Phone: +353-1-647-7300\n   Fax: +353-1-647-7499\n\
    \   EMail: stephen.farrell@baltimore.ie\n   John R. Vollbrecht\n   Interlink Networks,\
    \ Inc.\n   775 Technology Drive, Suite 200\n   Ann Arbor, MI  48108\n   USA\n\
    \   Phone: +1 734 821 1205\n   Fax:   +1 734 821 1235\n   EMail: jrv@interlinknetworks.com\n\
    \   Pat R. Calhoun\n   Network and Security Research\n   Center, Sun Labs\n  \
    \ Sun Microsystems, Inc.\n   15 Network Circle\n   Menlo Park, California, 94025\n\
    \   USA\n   Phone:  +1 650 786 7733\n   Fax:  +1 650 786 6445\n   EMail:  pcalhoun@eng.sun.com\n\
    \   Leon Gommans\n   Enterasys Networks EMEA\n   Kerkplein 24\n   2841 XM  Moordrecht\n\
    \   The Netherlands\n   Phone: +31 182 379279\n   email: gommans@cabletron.com\n\
    \          or at University of Utrecht:\n          l.h.m.gommans@phys.uu.nl\n\
    \   George M. Gross\n   Lucent Technologies\n   184 Liberty Corner Road, m.s.\n\
    \   LC2N-D13\n   Warren, NJ 07059\n   USA\n   Phone:  +1 908 580 4589\n   Fax:\
    \    +1 908-580-4991\n   EMail:  gmgross@lucent.com\n   Betty de Bruijn\n   Interpay\
    \ Nederland B.V.\n   Eendrachtlaan 315\n   3526 LB Utrecht\n   The Netherlands\n\
    \   Phone: +31 30 2835104\n   EMail: betty@euronet.nl\n   Cees T.A.M. de Laat\n\
    \   Physics and Astronomy dept.\n   Utrecht University\n   Pincetonplein 5,\n\
    \   3584CC Utrecht\n   Netherlands\n   Phone: +31 30 2534585\n   Phone: +31 30\
    \ 2537555\n   EMail: delaat@phys.uu.nl\n   Matt Holdrege\n   ipVerse\n   223 Ximeno\
    \ Ave.\n   Long Beach, CA 90803\n   EMail: matt@ipverse.com\n   David W. Spence\n\
    \   Interlink Networks, Inc.\n   775 Technology Drive, Suite 200\n   Ann Arbor,\
    \ MI  48108\n   USA\n   Phone: +1 734 821 1203\n   Fax:   +1 734 821 1235\n  \
    \ EMail: dspence@interlinknetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
