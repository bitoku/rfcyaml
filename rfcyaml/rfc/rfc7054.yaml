- title: __initial_text__
  contents:
  - "         Addressing Requirements and Design Considerations for\n   Per-Interface\
    \ Maintenance Entity Group Intermediate Points (MIPs)\n"
- title: Abstract
  contents:
  - "Abstract\n   The framework for Operations, Administration and Maintenance (OAM)\n\
    \   within the MPLS Transport Profile (MPLS-TP) describes how the\n   Maintenance\
    \ Entity Group Intermediate Points (MIPs) may be situated\n   within network nodes\
    \ at incoming and outgoing interfaces.\n   This document elaborates on important\
    \ considerations for internal MIP\n   addressing.  More precisely, it describes\
    \ important restrictions for\n   any mechanism that specifies a way of forming\
    \ OAM messages so that\n   they can be targeted at MIPs on either incoming or\
    \ outgoing\n   interfaces and forwarded correctly through the forwarding engine.\n\
    \   Furthermore, the document includes considerations for node\n   implementations\
    \ where there is no distinction between the incoming\n   and outgoing MIP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7054.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Summary of the Problem Statement ................................3\n   4.\
    \ Requirements and Design Considerations for Internal-MIP\n      Addressing ......................................................6\n\
    \   5. Security Considerations ........................................10\n  \
    \ 6. Acknowledgments ................................................10\n   7.\
    \ References .....................................................10\n      7.1.\
    \ Normative References ......................................10\n      7.2. Informative\
    \ References ....................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The framework for Operations, Administration and Maintenance\
    \ (OAM)\n   within the MPLS Transport Profile (MPLS-TP)(the MPLS-TP OAM\n   Framework,\
    \ [RFC6371]) distinguishes two configurations for the\n   Maintenance Entity Group\
    \ Intermediate Points (MIPs) on a node.  It\n   defines per-node MIPs and per-interface\
    \ MIPs, where a per-node MIP is\n   a single MIP per node in an unspecified location\
    \ within the node and\n   per-interface MIPs are two (or more) MIPs per node on\
    \ each side of\n   the forwarding engine.\n   In-band OAM messages are sent using\
    \ the Generic Associated Channel\n   (G-ACh) [RFC5586].  OAM messages for the\
    \ transit points of\n   pseudowires (PWs) or Label Switched Paths (LSPs) are delivered\
    \ using\n   the expiration of the MPLS shim header Time-to-Live (TTL) field. \
    \ OAM\n   messages for the end points of PWs and LSPs are simply delivered as\n\
    \   normal.\n   OAM messages delivered to end points or transit points are\n \
    \  distinguished from other (data) packets so that they can be processed\n   as\
    \ OAM.  In LSPs, the mechanism used is the presence of the Generic\n   Associated\
    \ Channel Label (GAL) in the Label Stack Entry (LSE) under\n   the top LSE [RFC5586].\
    \  In PWs, the mechanism used is the presence of\n   the PW Associated Channel\
    \ Header (PWACH) [RFC4385] or the presence of\n   a GAL [RFC6423].\n   If multiple\
    \ MIPs are present on a single node, these mechanisms alone\n   provide no way\
    \ to address one particular MIP out of the set of MIPs.\n   A mechanism that addresses\
    \ this shortcoming has to obey a few\n   important design considerations, which\
    \ are discussed in this\n   document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, we use the term in-MIP (incoming MIP) to\
    \ refer to\n   the MIP that processes OAM messages before they pass through the\n\
    \   forwarding engine of a node.  An out-MIP (outgoing MIP) processes OAM\n  \
    \ messages after they have passed the forwarding engine of the node.\n   The two\
    \ together are referred to as internal MIPs.  The term\n   \"forwarding engine\"\
    \ is used as defined in [RFC6371].\n   Note that the acronym \"OAM\" is used in\
    \ conformance with [RFC6291].\n"
- title: 3.  Summary of the Problem Statement
  contents:
  - "3.  Summary of the Problem Statement\n   Figure 1 shows an abstract functional\
    \ representation of an MPLS-TP\n   node.  It is decomposed as an incoming interface\
    \ (labeled \"In\"), a\n   forwarding engine (FW), and an outgoing interface (labeled\
    \ \"Out\").\n   As per the discussion in [RFC6371], MIPs may be placed in each\
    \ of the\n   functional interface components.\n                            ------------------------\n\
    \                           |-----              -----|\n                     \
    \      | MIP |            | MIP |\n                           |     |    ----\
    \    |     |\n                    ----->-| In  |->-| FW |->-| Out |->----\n  \
    \                         | i/f |    ----    | i/f |\n                       \
    \    |-----              -----|\n                            ------------------------\n\
    \      Figure 1: Abstract Functional Representation of an MPLS-TP Node\n   Several\
    \ distinct OAM functions are required within this architectural\n   model for\
    \ both PWs and LSPs, such as:\n   o  Connectivity Verification (CV) between a\
    \ Maintenance Entity Group\n      End Point (MEP) and a MIP\n   o  traceroute\
    \ over an MPLS-TP LSP and/or an MPLS-TP PW containing\n      MIPs\n   o  data-plane\
    \ loopback configuration at a MIP\n   o  diagnostic tests\n   The MIPs in these\
    \ OAM functions may also be the MIPs at the incoming\n   or outgoing interfaces.\n\
    \   Per-interface MIPs have the advantage that they enable a more\n   accurate\
    \ localization and identification of faults and diagnostic\n   tests.  In particular,\
    \ the identification of whether a problem is\n   located between nodes or on a\
    \ particular node and where on that node\n   is greatly enhanced.  For obvious\
    \ reasons, it is important to narrow\n   down the cause of a fault quickly to\
    \ initiate a timely and well-\n   directed maintenance action to resume normal\
    \ network operation.\n   The following two figures illustrate the fundamental\
    \ difference\n   between using per-node and per-interface MEPs and MIPs for OAM.\n\
    \   Figure 2 depicts OAM using per-node MIPs and MEPs.  For reasons of\n   exposition,\
    \ we pick a location for the MIPs on the nodes but the\n   standard does not mandate\
    \ the exact location for the per-node model.\n   In the figure, a bidirectional\
    \ LSP is depicted where in the forward\n   (FWD) direction MEP1, MIP1, and MEP2\
    \ are located on the ingress\n   interface.  In the backward (BWD) direction MEP1',\
    \ MIP1' and MEP2'\n   are located on the egress interface, i.e., the same interfaces.\
    \  S1\n   in the figure denotes the segment from PE1 In to P1 In and S2 denotes\n\
    \   the segment from PE1 In to P2 In.  Figure 3, on the other hand, shows\n  \
    \ the same basic network, but per-interface maintenance points are\n   configured\
    \ for OAM operations.  Note that these figures are merely\n   examples.  It is\
    \ important to note that per-interface MEPs or per-\n   interface MIPs must logically\
    \ be placed at a point before (for\n   in-MIP) or after (for out-MIP) passing\
    \ the forwarding engine as\n   defined in [RFC6371].  All traffic associated with\
    \ the MEP/MIP must\n   pass through or be terminated at that point.\n        \
    \ Customer|           Operator's Administrative     | Customer\n         Domain\
    \  |           Domain                        | Domain\n         ------> |<--------------------------------------->|\
    \ <------\n           CE1   |   T-PE/PE1      S-PE/P1        T-PE/PE2 |   CE2\n\
    \                 |  <-------->    <-------->    <--------> |\n          +---+\
    \  | +-+ +-+ +-+   +-+ +-+ +-+   +-+ +-+ +-+ |  +---+\n          |   |  | | |\
    \ | | | |   | | | | | |   | | | | | | |  |   |\n          |   |  | | | | | | |\
    \   | | | | | |   | | | | | | |  |   |\n          +---+  | +-+ +-+ +-+   +-+ +-+\
    \ +-+   +-+ +-+ +-+ |  +---+\n                 | In  FW  Out   In  FW  Out   In\
    \  FW  Out |\n                 |                                         |\n \
    \     FWD PW/LSP |  o-------------------------- >          |\n               \
    \  |  V-------------*-------------V          |\n                 | MEP1      \
    \    MIP1          MEP2        |\n      BWD PW/LSP |  <---------------------------o\
    \          |\n                 |  V-------------*-------------V          |\n \
    \                |         MEP1'        MIP1'         MEP2'|\n               \
    \ (S1)<============>\n                (S2)<==========================>\n     \
    \   Figure 2: Example of OAM Relying on Per-Node MIPs and MEPs\n   To illustrate\
    \ the difference between these two modes of operation, we\n   use fault detection\
    \ as an example.  Consider the case where the\n   client traffic between CE1 and\
    \ CE2 experiences a fault.  Also assume\n   that an on-demand CV test between\
    \ PE1 and PE2 was successful.  The\n   scenario in Figure 2 therefore leaves the\
    \ forwarding engine (FW) of\n   PE2, the out-going interface of PE2, the transmission\
    \ line between\n   PE2 and CE2, or CE2 itself as a potential location of the fault\
    \ as\n   on-demand CV can only be performed on segment S2.  Note that in this\n\
    \   scenario, the PWs or LSPs are to be understood as two examples (not\n   one),\
    \ i.e., the figures do not show the layer structure of PWs and\n   LSPs.\n   The\
    \ per-interface model in Figure 3 allows more fine-grained OAM\n   operations\
    \ to be performed.  At first, CV on segment S'4 and in\n   addition CV on segment\
    \ S'5 can help to rule out, for example, the\n   forwarding engine of PE2.  This\
    \ is of course only a single example,\n   and other OAM functions and scenarios\
    \ are trivially conceivable.  The\n   basic message is that with the per-interface\
    \ OAM model, an operator\n   can configure smaller segments on a transport path\
    \ to which OAM\n   operations apply.  This enables a more fine-grained scoping\
    \ of OAM\n   operations, such as fault localization and performance monitoring,\n\
    \   which gives operators better information to deal with adverse\n   networking\
    \ conditions.\n         Customer|          Operator's Administrative      |Customer\n\
    \         Domain  |          Domain                         |Domain\n        \
    \ ------->|<--------------------------------------->|<------\n           CE1 \
    \  |   T-PE/PE1      S-PE/P1       T-PE/PE2  |   CE2\n                 |  <-------->\
    \    <-------->    <--------> |\n          +---+  | +-+ +-+ +-+   +-+ +-+ +-+\
    \   +-+ +-+ +-+ |  +---+\n          |   |  | | | | | | |   | | | | | |   | | |\
    \ | | | |  |   |\n          |   |  | | | | | | |   | | | | | |   | | | | | | |\
    \  |   |\n          +---+  | +-+ +-+ +-+   +-+ +-+ +-+   +-+ +-+ +-+ |  +---+\n\
    \                 | In  FW  Out   In  FW  Out   In  FW  Out |\n              \
    \   |                                         |\n      FWD PW/LSP |  o----------------------------------->\
    \  |\n                 |  V-------*------*------*-----*-------V  |\n         \
    \        | MEP1    MIP1   MIP2   MIP3  MIP4    MEP2|\n                 |     \
    \                                    |\n      BWD PW/LSP |  <-----------------------------------o\
    \  |\n                 | MEP1'   MIP1'  MIP2'  MIP3' MIP4'  MEP2'|\n         \
    \      (S'1)<======>\n               (S'2)<=============>\n               (S'3)<====================>\n\
    \               (S'4)<==========================>\n               (S'5)<==================================>\n\
    \      Figure 3: Example of OAM Relying on Per-Interface MIPs and MEPs\n"
- title: 4.  Requirements and Design Considerations for Internal-MIP Addressing
  contents:
  - "4.  Requirements and Design Considerations for Internal-MIP Addressing\n   OAM\
    \ messages for transit points of PWs or LSPs are delivered using\n   the expiration\
    \ of the TTL field in the top LSE of the MPLS packet\n   header.  OAM messages\
    \ for the end points of PWs and LSPs are simply\n   delivered as normal.  These\
    \ messages are distinguished from other\n   (data) packets so that they can be\
    \ processed as OAM.  In LSPs, the\n   mechanism used is the presence of the GAL\
    \ in the LSE under the top\n   LSE [RFC5586].  In PWs, the mechanism used is the\
    \ presence of the PW\n   Associated Channel Header [RFC4385] or the presence of\
    \ a GAL\n   [RFC6423].  In addition, two sets of identifiers exist that can be\n\
    \   used to address MIPs, which are defined in [RFC6370] and [RFC6923]\n   Any\
    \ solution for sending OAM messages to the in- and out-MIPs must\n   fit within\
    \ these existing models of handling OAM.\n   Additionally, many MPLS-TP nodes\
    \ are implemented in a way that all\n   queuing and the forwarding function are\
    \ performed at the incoming\n   interface.  The abstract functional representation\
    \ of such a node is\n   shown in Figure 4.  As shown in the figure, the outgoing\
    \ interfaces\n   are minimal and for this reason it may not be possible to include\n\
    \   MIP functions on those interfaces.  This is the case for existing\n   deployed\
    \ implementations in particular.\n   Any solution that attempts to send OAM messages\
    \ to the outgoing\n   interface of an MPLS-TP node must not cause any problems\
    \ when such\n   implementations are present (such as leaking OAM packets with\
    \ a TTL\n   of 0).\n                          ---------------------\n        \
    \                 |------------         |\n                         | MIP    \
    \    |        |\n                         |      ----  |        |\n          \
    \        ----->-| In  | FW | |-->-Out-|->---\n                         | i/f \
    \ ----  |    i/f |\n                         |------------         |\n       \
    \                   ---------------------\n              Figure 4: Abstract Functional\
    \ Representation of\n                        Some Existing MPLS-TP Nodes\n   OAM\
    \ must operate on MPLS-TP nodes that are branch points on point-to-\n   multipoint\
    \ (P2MP) trees.  This means that it must be possible to\n   target individual\
    \ outgoing MIPs as well as all outgoing MIPs in the\n   abstract functional representation\
    \ shown in Figure 5, and to handle\n   the P2MP node implementations as shown\
    \ in Figure 6 without causing\n   problems.\n                        --------------------------\n\
    \                       |                     -----|\n                       |\
    \                    | MIP |\n                       |                 ->-|  \
    \   |->----\n                       |                |   | Out |\n           \
    \            |                |   | i/f |\n                       |          \
    \      |    -----|\n                       |-----           |    -----|\n    \
    \                   | MIP |    ----  |   | MIP |\n                       |   \
    \  |   |    |-    |     |\n                ----->-| In  |->-| FW |--->-| Out |->----\n\
    \                       | i/f |   |    |-    | i/f |\n                       |-----\
    \     ----  |    -----|\n                       |                |    -----|\n\
    \                       |                |   | MIP |\n                       |\
    \                |   |     |\n                       |                 ->-| Out\
    \ |->----\n                       |                    | i/f |\n             \
    \          |                     -----|\n                        --------------------------\n\
    \            Figure 5: Abstract Functional Representation of an\n            \
    \           MPLS-TP Node Supporting P2MP\n                          ----------------------\n\
    \                         |               ->-Out-|->----\n                   \
    \      |              |   i/f |\n                         |------------  |   \
    \    |\n                         |            | |       |\n                  \
    \       | MIP  ----  | |       |\n                         |     |    | |-   \
    \     |\n                  ----->-| In  | FW | |--->-Out-|->----\n           \
    \              | i/f |    | |-    i/f |\n                         |      ----\
    \  | |       |\n                         |            | |       |\n          \
    \               |------------  |       |\n                         |         \
    \     |   Out |\n                         |               ->-i/f-|->----\n   \
    \                       ----------------------\n              Figure 6: Abstract\
    \ Functional Representation of\n                Some Existing MPLS-TP Nodes Supporting\
    \ P2MP\n   In summary, the solution for OAM message delivery must behave as\n\
    \   follows:\n   o  Delivery of OAM messages to the correct MPLS-TP node.\n  \
    \ o  Delivery of OAM instructions to the correct MIP within an MPLS-TP\n     \
    \ node.\n   o  Forwarding of OAM packets exactly as data packets.\n   o  Packet\
    \ inspection at the incoming and outgoing interfaces must be\n      minimized.\n\
    \   The first and second bullet points are obvious.  However, the third\n   bullet\
    \ point is also vital.  To illustrate the importance, a rejected\n   solution\
    \ is depicted in Figure 7.  In the figure, all data and non-\n   local OAM is\
    \ handled as normal.  Local OAM is intercepted at the\n   incoming interface and\
    \ delivered to the MIP at the incoming\n   interface.  If the OAM is intended\
    \ for the incoming MIP, it is\n   handled there with no issue.  If the OAM is\
    \ intended for the outgoing\n   MIP, it is forwarded to that MIP using some internal\
    \ messaging system\n   that is implementation specific.\n                    \
    \       ------------------------\n                          |-----           \
    \   -----|\n         local OAM ----->-| MIP |----->------| MIP |\n           \
    \               |     |    ----    |     |\n              data =====>=| In  |=>=|\
    \ FW |=>=| Out |=>==== data\n     non-local OAM ~~~~~>~| i/f |~>~|    |~>~| i/f\
    \ |~>~~~~ non-local OAM\n                          |-----     ----     -----|\n\
    \                           ------------------------\n             Figure 7: OAM\
    \ Control Message Delivery Bypassing\n                           the Forwarding\
    \ Engine\n   This solution is fully functional for the incoming MIP.  It also\n\
    \   supports control of data loopback for the outgoing MIP and can\n   adequately\
    \ perform some OAM features such as interface identity\n   reporting at the outgoing\
    \ MIP.\n   However, because the OAM message is not forwarded through the\n   forwarding\
    \ engine, this solution cannot correctly perform OAM\n   loopback, connectivity\
    \ verification, LSP tracing, or performance\n   measurement.\n   The last bullet\
    \ point is also an important requirement for any\n   solution to the internal-MIP\
    \ addressing problem.  Since OAM packets\n   that target an out-MIP need to be\
    \ sent through the forwarding engine\n   and treated exactly as regular data packets,\
    \ the determination of\n   whether to forward the packet or process it at the\
    \ incoming MIP needs\n   to be fast; therefore, the processing overhead must be\
    \ kept to a\n   minimum.  In addition, there are a few OAM procedures that operate\
    \ at\n   line rate such as OAM loopback.  This adds to the requirement of\n  \
    \ minimal processing overhead for both the in-MIP and out-MIP.\n   Most of the\
    \ above superficially appears to be an implementation\n   matter local to an individual\
    \ node; however, the format of the\n   message needs to be standardized so that:\n\
    \   o  A MEP can correctly target the outgoing MIP of a specific MPLS-TP\n   \
    \   node.\n   o  A node can correctly filter out any OAM messages that were\n\
    \      intended for its upstream neighbor's outgoing MIP, but which were\n   \
    \   not handled there because the upstream neighbor is an\n      implementation\
    \ as shown in Figures 4 and 6.\n   Note that the last bullet point describes a\
    \ safety net in case OAM\n   messages leak beyond their intended scope, but implementations\
    \ should\n   take care that messages do not leak so that the safety net does not\n\
    \   need to be used.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   OAM security is discussed in [RFC6371] and security\
    \ aspects specific\n   to MPLS-TP in general are outlined in [RFC6941].\n   OAM\
    \ can provide useful information for detecting and tracing security\n   attacks.\n\
    \   OAM can also be used to illicitly gather information or for denial-\n   of-service\
    \ attacks and other types of attack.  Implementations\n   therefore are required\
    \ to offer security mechanisms for OAM.\n   Deployments are therefore strongly\
    \ advised to follow the security\n   advice provided in RFCs 6371 and 6941.\n\
    \   Mixing of per-node and per-interface OAM on a single node is not\n   advised\
    \ as OAM message leakage could be the result.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors gratefully acknowledge the substantial contributions\
    \ of\n   Zhenlong Cui.  We would also like to thank Eric Gray, Sami Boutros,\n\
    \   and Shahram Davari for interesting input to this document through\n   discussions.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC4385]  Bryant, S., Swallow, G., Martini, L.,\
    \ and D. McPherson,\n              \"Pseudowire Emulation Edge-to-Edge (PWE3)\
    \ Control Word for\n              Use over an MPLS PSN\", RFC 4385, February 2006.\n\
    \   [RFC5586]  Bocci, M., Ed., Vigoureux, M., Ed., and S. Bryant, Ed.,\n     \
    \         \"MPLS Generic Associated Channel\", RFC 5586, June 2009.\n   [RFC6370]\
    \  Bocci, M., Swallow, G., and E. Gray, \"MPLS Transport\n              Profile\
    \ (MPLS-TP) Identifiers\", RFC 6370, September 2011.\n   [RFC6371]  Busi, I.,\
    \ Ed., and D. Allan, Ed., \"Operations,\n              Administration, and Maintenance\
    \ Framework for MPLS-Based\n              Transport Networks\", RFC 6371, September\
    \ 2011.\n   [RFC6423]  Li, H., Martini, L., He, J., and F. Huang, \"Using the\n\
    \              Generic Associated Channel Label for Pseudowire in the\n      \
    \        MPLS Transport Profile (MPLS-TP)\", RFC 6423, November\n            \
    \  2011.\n   [RFC6923]  Winter, R., Gray, E., van Helvoort, H., and M. Betts,\n\
    \              \"MPLS Transport Profile (MPLS-TP) Identifiers Following\n    \
    \          ITU-T Conventions\", RFC 6923, May 2013.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC6291]  Andersson, L., van Helvoort, H.,\
    \ Bonica, R., Romascanu,\n              D., and S. Mansfield, \"Guidelines for\
    \ the Use of the \"OAM\"\n              Acronym in the IETF\", BCP 161, RFC 6291,\
    \ June 2011.\n   [RFC6941]  Fang, L., Ed., Niven-Jenkins, B., Ed., Mansfield,\
    \ S., Ed.,\n              and R. Graveman, Ed., \"MPLS Transport Profile (MPLS-TP)\n\
    \              Security Framework\", RFC 6941, April 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Adrian Farrel\n   Juniper Networks\n   EMail: adrian@olddog.co.uk\n\
    \   Hideki Endo\n   Hitachi, Ltd.\n   EMail: hideki.endo.es@hitachi.com\n   Rolf\
    \ Winter\n   NEC\n   EMail: rolf.winter@neclab.eu\n   Yoshinori Koike\n   NTT\n\
    \   EMail: koike.yoshinori@lab.ntt.co.jp\n   Manuel Paul\n   Deutsche Telekom\n\
    \   EMail: Manuel.Paul@telekom.de\n"
