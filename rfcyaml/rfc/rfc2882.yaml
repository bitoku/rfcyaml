- title: __initial_text__
  contents:
  - "                  Network Access Servers Requirements:\n                    \
    \   Extended RADIUS Practices\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes current practices implemented in NAS products\n\
    \   that go beyond the scope of the RADIUS RFCs 2138, 2139 [1,2]. The\n   purpose\
    \ of this effort is to give examples that show the need for\n   addressing and\
    \ standardizing these types of ad-hoc functions.  Since\n   many of these features\
    \ require a matching server support component,\n   the ability to deploy and manage\
    \ interoperable NAS and AAA server\n   products is severely hindered.\n   These\
    \ practices are documented here to show functions that are\n   obviously desired\
    \ in developing future AAA protocols for NAS\n   deployment.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  2\n   1.1.  Disclaimers . . . . . . . . . . . . . . . . . . . . . .\
    \ .  3\n   1.2.  Presentation  . . . . . . . . . . . . . . . . . . . . . .  3\n\
    \   2.  Attribute Usage . . . . . . . . . . . . . . . . . . . . . .  3\n   2.1.\
    \ Attribute Conflicts  . . . . . . . . . . . . . . . . . . .  4\n   2.2. Attribute\
    \ Value Conflicts  . . . . . . . . . . . . . . . .  4\n   2.2.1 Vendor Specific\
    \ Enumerations Proposal . . . . . . . . . .  4\n   2.3   Vendor Specific Attribute\
    \ Usage . . . . . . . . . . . . .  5\n   2.3.1 VSAs in use by clients: . . . .\
    \ . . . . . . . . . . . . .  5\n   2.3.2 Clients that support multiple Vendors:\
    \  . . . . . . . . .  5\n   3.  Attribute Data Types  . . . . . . . . . . . .\
    \ . . . . . . .  6\n   4.  New Messages  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  7\n   5.  Additional Functions  . . . . . . . . . . . . . . . . . .\
    \ .  7\n   5.1 Password Change   . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   5.2 Authentication Modes  . . . . . . . . . . . . . . . . . . .  8\n   5.3\
    \ Menus . . . . . . . . . . . . . . . . . . . . . . . . . . .  8\n   5.4 Pseudo\
    \ Users  . . . . . . . . . . . . . . . . . . . . . . .  9\n   6.  Resource Management\
    \ . . . . . . . . . . . . . . . . . . . .  9\n   6.1 Managed Resources . . . .\
    \ . . . . . . . . . . . . . . . . .  9\n   6.2 Resource Management Messages  .\
    \ . . . . . . . . . . . . . . 10\n   6.3 Concurrent Logins . . . . . . . . . .\
    \ . . . . . . . . . . . 10\n   6.4 Authorization Changes . . . . . . . . . . .\
    \ . . . . . . . . 11\n   7. Policy Services  . . . . . . . . . . . . . . . . .\
    \ . . . . . 11\n   8. Accounting Extensions  . . . . . . . . . . . . . . . . .\
    \ . . 12\n   8.1 Auditing/Activity . . . . . . . . . . . . . . . . . . . . . 12\n\
    \   9. Conclusions  . . . . . . . . . . . . . . . . . . . . . . . . 12\n   10.\
    \ Security Considerations . . . . . . . . . . . . . . . . . . 13\n   11. Implementation\
    \ Documents  . . . . . . . . . . . . . . . . . 13\n   11.1. Clients . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . 13\n   11.2. Servers . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . 14\n   12. References  . . . . . . . . . .\
    \ . . . . . . . . . . . . . . 14\n   13. Author's Address  . . . . . . . . . .\
    \ . . . . . . . . . . . 15\n   14. Full Copyright Statement  . . . . . . . . .\
    \ . . . . . . . . 16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RADIUS Working Group was formed in 1995 to document\
    \ the protocol\n   of the same name, and was chartered to stay within a set of\
    \ bounds\n   for dial-in terminal servers.  Unfortunately the real world of\n\
    \   Network Access Servers (NASes) hasn't stayed that small and simple,\n   and\
    \ continues to evolve at an amazing rate.\n   This document shows some of the\
    \ current implementations on the market\n   have already outstripped the capabilities\
    \ of the RADIUS protocol.  A\n   quite a few features have been developed completely\
    \ outside the\n   protocol.  These features use the RADIUS protocol structure\
    \ and\n   format, but employ operations and semantics well beyond the RFC\n  \
    \ documents.\n   I learn of the details of these functions from reading industry\n\
    \   manuals and often have to respond to them in competive bid\n   specifications.\
    \  As they become deployed in the field, they gather\n   the force of de-facto\
    \ standards.\n   Because they have been done outside scope of the RFCs, they are\n\
    \   vendor specific, and introduce significant problems in offering an\n   interoperable\
    \ product.\n"
- title: 1.1.  Disclaimers
  contents:
  - "1.1.  Disclaimers\n   The data and numbers in this document have been gleaned\
    \ from public\n   sources and vendor documents along the way.  Actual implementation\
    \ of\n   many these features and variation from the documentation has not been\n\
    \   confirmed.\n   This document is a snapshot of known practices at the time\
    \ of\n   writing.  It is not intended to standardize these practices here, or\n\
    \   keep this document current, beyond initial publication. While some\n   detailed\
    \ information is given, it is not the purpose of this document\n   to directly\
    \ or sufficiently describe the functions mentioned to the\n   level of a complete\
    \ functional specification.\n   The author has not transcribed copyrighted material,\
    \ and is not aware\n   of whether any of these practices have of intellectual\
    \ property\n   restrictions.\n   Any numeric assignments or functional operations\
    \ are subject to\n   change by vendors without notice.  I would appreciate any\
    \ direct\n   input, preferably first hand, from implementors.\n"
- title: 1.2.  Presentation
  contents:
  - "1.2.  Presentation\n   Without any easy organization for the material, information\
    \ is\n   arranged in a simple taxonomy from bottom-up complexity:\n   -    Attribute\
    \ Usage\n   -    Attribute Data Types\n   -    Message Codes\n   -    New Operations\n"
- title: 2.  Attribute Usage
  contents:
  - "2.  Attribute Usage\n   The RADIUS RFCs define attribute type ranges and specific\
    \ attribute\n   definitions.\n   -    There are about 70 defined RADIUS attributes:\n\
    \   -    Values 192-223 are reserved for experimental use\n   -    Values 224-240\
    \ are reserved for implementation-specific use\n   -    Values 241-255 are reserved\
    \ and should not be used.\n   Attribute 26 was defined to be the Vendor Specific\
    \ Attribute (VSA)\n   with further internal structure to allow vendor expansion.\n"
- title: 2.1.  Attribute conflicts
  contents:
  - "2.1.  Attribute conflicts\n   In practice attributes 92-255 are in use by a vendor.\
    \ And another\n   vendor also use attributes in the 90-104 range and conflicts\
    \ with\n   this usage.\n   To deal with these issues, server vendors have added\
    \ vendor specific\n   parameters to their client database files.  The administrator\
    \ has to\n   indicate the vendor type of NAS along with the client IP address\
    \ and\n   secret, so that the server can disambiguate the attribute usage.\n \
    \  One server has a single large vendors file to describe the mapping\n   all\
    \ attributes to an internal format that retains the vendor id.\n   Another server\
    \ implementation uses multiple dictionaries, each\n   indexed to a NAS and Vendor\
    \ Model definition list.\n"
- title: 2.2.  Attribute Value Conflicts
  contents:
  - "2.2.  Attribute Value Conflicts\n   Adding additional attributes may be more\
    \ trouble than necessary for\n   simple features.  Often existing RADIUS attributes\
    \ could be extended\n   with additional values (particularly attributes that are\
    \ enumerated\n   choices).  But in doing such there is no way to guarantee not\n\
    \   conflicting with other vendor's extensions.\n"
- title: 2.2.1.  Vendor Specific Enumerations proposal
  contents:
  - "2.2.1.  Vendor Specific Enumerations proposal\n   One proposed solution to this\
    \ problem was Vendor Specific\n   Enumerations (VSEs).  That is to imbed the vendor's\
    \ management ID in\n   the numeric value (ala VSAs) which would to divide up the\
    \ attribute\n   value space.  This technique has not seen any acceptance by the\n\
    \   working group or other vendors, however, the vendor did accomplish\n   the\
    \ goal of not conflicting with working group additions or other\n   vendor values.\n\
    \   Example dictionary of VSE values:\n   VALUE   Service-Type        VSE-Authorize-Only\
    \       0x06300001\n   VALUE   Acct-Status-Type    VSE-User-Reject          0x06300001\n\
    \   VALUE   Acct-Status-Type    VSE-Call-Reject          0x06300002\n   VALUE\
    \   Acct-Status-Type    VSE-IPCP-Start           0x06300003\n   VALUE   Acct-Status-Type\
    \    VSE-IPXCP-Start          0x06300004\n   VALUE   Acct-Status-Type    VSE-ATCP-Start\
    \           0x06300005\n   VALUE   Acct-Status-Type    VSE-Accounting-Restart\
    \   0x06300006\n   VALUE   Acct-Status-Type    VSE-Accounting-Shutoff   0x06300007\n\
    \   VALUE   Acct-Status-Type    VSE-Tunnel-Start         0x06300008\n   VALUE\
    \   Acct-Status-Type    VSE-Tunnel-Stop          0x06300009\n   VALUE   Acct-Status-Type\
    \    VSE-Tunnel-Reject        0x0630000a\n   VALUE   Acct-Status-Type    VSE-Tunnel-Link-Start\
    \    0x0630000b\n   VALUE   Acct-Status-Type    VSE-Tunnel-Link-Stop     0x0630000c\n\
    \   VALUE   Acct-Status-Type    VSE-MP-Start             0x0630000d\n   VALUE\
    \   Acct-Status-Type    VSE-MP-Stop              0x0630000e\n   VALUE   Acct-Status-Type\
    \    VSE-Line-Seizure         0x0630000f\n   VALUE   Acct-Status-Type    VSE-Rlogin-Start\
    \         0x06300010\n   VALUE   Acct-Status-Type    VSE-Rlogin-Stop         \
    \ 0x06300011\n"
- title: 2.3.  Vendor Specific Attribute Usage
  contents:
  - "2.3.  Vendor Specific Attribute Usage\n   Because attribute 26 Vendor Specific\
    \ Attributes (VSAs) came late in\n   the RADIUS working group development,  there\
    \ were some server\n   implementations that were late to support them.  Today,\
    \ there are\n   several leading implementations of clients that make extensive\
    \ use of\n   VSAs.  What's unfortunate is that there is also several different\n\
    \   formats of VSAs implemented.  This is because the RFC suggested\n   format\
    \ does not support more than 256 attributes.\n"
- title: '2.3.1.  VSAs in use by some clients:'
  contents:
  - "2.3.1.  VSAs in use by some clients:\n   At the time this document was written,\
    \ the following had be observed:\n   -    Microsoft: several for MS-CHAP authentication\
    \ support [9]\n   -    ACC: 42 [10]\n   -    Nortel(Bay): about 60 VSAs and 16\
    \ VSEs\n   -    Nortel(Aptis): about 60 VSA: 20 1-byte, ~130 4-byte header.\n\
    \        Aptis VSAs have shifted from a regular format to a 4-byte header\n  \
    \      format, due to the large number of attributes implemented.\n   -    3Com\
    \ (USR): about 130\n        USR VSAs are different than the format suggested in\
    \ RFC 2138.\n        They have a 4 byte type field and have no internal length.\n\
    \   Some vendors that did not initially use VSAs, have shifted in later\n   releases\
    \ VSA usage as a configuration option.\n"
- title: 2.3.2.  Clients that support Multiple Vendor Attributes
  contents:
  - "2.3.2.  Clients that support Multiple Vendor Attributes\n   Now that MS-CHAP\
    \ RADIUS attributes have been published in RFC 2548\n   [9] as Microsoft VSA attributes,\
    \ it will become typical that for NAS\n   clients that support MS-CHAP authentication\
    \ to process several\n   different vendor VSA types.  This has implications for\
    \ RADIUS servers\n   that filter or \"prune\" return attributes based on the vendor\n\
    \   make/model of the NAS client.\n   One NAS implementation can receive up to\
    \ three different vendor\n   specific attribute sets, but will only send attributes\
    \ according to\n   the \"mode\" that has been configured by the operator. This\
    \ allows it\n   to fit into environments where the customer has become dependent\
    \ on a\n   particular set of RADIUS attributes, and allows the NAS to \"drop-in\"\
    \n   without server attribute changes.\n   There is another NAS that supports\
    \ 3 vendor attributes sets\n   concurrently.  That is, it will normally use a\
    \ combination of\n   different vendor VSAs in return profiles from the server.\
    \  This was\n   done to support a superset of competing vendor's extensions, as\
    \ well\n   as it's own, and include an extensions from a sister product.\n"
- title: 3.  Attribute Data Types
  contents:
  - "3.  Attribute Data Types\n   The base RFCs define only has 4 basic data types:\n\
    \   -    integer, 32 bit unsigned\n   -    string, 1-253 bytes, counted.\n   -\
    \    ipaddr, 32 bit IPv4\n   -    date, 32 bit Unix format.\n   Since then, various\
    \ variations have been added:\n   The tunnel authentication document [6] adds\
    \ an optional compound\n   \"tag\" byte to tunnel attributes.  These are a single\
    \ byte prepended\n   to the data field in order to support sets of attributes\
    \ to be\n   returned.  The byte value must be in the range 01-3F hex or it is\n\
    \   considered to be data.\n   Note that there is no native support for IPv6 addresses.\
    \ In fact IPv6\n   support is missing in some fixed message components too.\n\
    \   There have been special attribute types created within servers.  For\n   packet\
    \ filters, the format called \"abinary\" was created.  The user\n   enters an\
    \ ASCII string filter description in the user profile, but\n   the server parses\
    \ it into a binary string before passing it to the\n   NAS.  This lowers the complexity\
    \ of the NAS parser.  Also a\n   \"phonestring\" server data type allows additional\
    \ data type checking\n   at the entry application.\n"
- title: 4.  New Messages
  contents:
  - "4.  New Messages\n   A number of new message types have been introduced by various\
    \ parties\n   over time. The base specification has 6, vendors have added 26.\n\
    \   These fall into a number of categories which are described in the\n   next\
    \ section below. Some of these messages are actually used between\n   the RADIUS\
    \ server and some other resource server, using a RADIUS-like\n   protocol to implement\
    \ new functions.\n         6 Accounting Status\n                  (now Interim\
    \ Accounting [5])\n         7 Password Request\n         8 Password Ack\n    \
    \     9 Password Reject\n         10 Accounting Message\n         21 Resource\
    \ Free Request\n         22 Resource Free Response\n         23 Resource Query\
    \ Request\n         24 Resource Query Response\n         25 Alternate Resource\
    \ Reclaim Request\n         26 NAS Reboot Request\n         27 NAS Reboot Response\n\
    \         29 Next Passcode\n         30 New Pin\n         31 Terminate Session\n\
    \         32 Password Expired\n         33 Event Request\n         34 Event Response\n\
    \         40 Disconnect Request\n         41 Disconnect Ack\n         42 Disconnect\
    \ Nak\n         43 Change Filters Request\n         44 Change Filters Ack\n  \
    \       45 Change Filters Nak\n         50 IP Address Allocate\n         51 IP\
    \ Address Release\n"
- title: 5.  Additional Functions
  contents:
  - "5.  Additional Functions\n   These are operations performed using RADIUS extensions\
    \ and additional\n   messages types.\n"
- title: 5.1.  Password Change
  contents:
  - "5.1.  Password Change\n   Remotely requested password change operations were\
    \ described and\n   proposed, but rejected by the working group.  None the less,\
    \ the\n   feature is still deployed in a number of products.\n   Message types:\n\
    \    - Password Request\n    - Password Ack or Reject\n"
- title: 5.2.  Authentication Modes
  contents:
  - "5.2.  Authentication Modes\n   Additional message types have been added to negotiate\
    \ passcode\n   changes for token card servers.\n    - Next Passcode\n    - New\
    \ PIN\n    - Password Expired\n   They allow the NAS or RADIUS server negotiate\
    \ passcode changes with\n   an external security server.\n"
- title: 5.3.  Menus
  contents:
  - "5.3.  Menus\n   At least two vendors have built menuing interaction systems for\
    \ use\n   with terminal dial-ins.\n   One implementation uses the Reply-Message\
    \ string as the menu text to\n   be displayed, and the State attribute to keep\
    \ track of the place in\n   the menu.  The menu is displayed using the Access-Challenge\
    \ message.\n   The response is encoded in the User-Password field like an ordinary\n\
    \   challenge sequence would.\n   Some RADIUS clients have problems with this\
    \ because they cannot\n   handle long or multiple Reply-Message attributes that\
    \ may have\n   embedded carriage returns and line-feeds.  The new Echo attribute\n\
    \   should also control echo behavior on the menu response.   Use of the\n   State\
    \ attribute to keep track of a Challenge sequence is also\n   standard behavior.\n\
    \   Another implementation uses two vendor attributes (VSA-Menu-Item, and\n  \
    \ VSA-Menu-Selector as well as VSA-Third-Prompt) to convey this\n   information.\
    \  This implementation is vendor specific.\n"
- title: 5.4.  Pseudo Users
  contents:
  - "5.4.  Pseudo Users\n   One client implementation takes advantage of your vanilla\
    \ RADIUS\n   server's ability to be used as a remote database server.  By using\n\
    \   some well-known, implementation specific, strings for Username and\n   Password\
    \ attributes, the NAS can request information from the server,\n   such as:  Static\
    \ IP routes, Static IPX routes, or the Message of the\n   Day.\n   These are called\
    \ pseudo-user requests, because they use a user entry\n   with this manufactured\
    \ name, for purposes other than authentication.\n   Another client also uses a\
    \ pseudo-user technique for resolving\n   unknown Filter-ID(11) values.  An Access-Request\
    \ message is sent to\n   the RADIUS server with the Filter-ID as the Username\
    \ value, the\n   password is a known string, and the Service-Type is VSE-\n  \
    \ Authorization-Only.  The response must also be of the same Service-\n   Type,\
    \ or the response will be ignored.  The responding profile should\n   contain\
    \ the IP-Filter VSA attributes that will define the desired\n   filter.\n   It\
    \ should be noticed that pseudo-user profiles could be a security\n   problem\
    \ if a specific or operationally invalid Service-Type is not\n   attached to the\
    \ profile. The client should test for this returned\n   value, to prevent normal\
    \ dial-in users from gaining access via this\n   profile.\n"
- title: 6.  Resource Management
  contents:
  - "6.  Resource Management\n   Authorized sessions may need to be allocated additional\
    \ dynamic\n   resources in order to perform their services.  The most typical\
    \ is IP\n   addresses.  The allocation may want to be delayed until needed or\n\
    \   coordinated on a scale independent of the RADIUS server.  Additional\n   messages\
    \ may be used to allocate and free these resources.  The\n   RADIUS server may\
    \ proxy these requests to another server.\n   Examples: Certain servers can allocate\
    \ addresses local to the NAS or\n   use an outboard address server.  Other servers\
    \ have an internal\n   address pool capability, which will fill in the Framed-IP-Address\n\
    \   attribute with an assigned value based on pool selected.\n"
- title: '6.1.  Managed Resources:'
  contents:
  - "6.1.  Managed Resources:\n   Resources managed include: IP Addresses, Concurrent\
    \ Logins, Dial-in\n   Port allocation policies, Tunnel limits and load distribution.\n\
    \   There are several different types of implementation techniques:\n    - Explicit\
    \ request/free resource requests\n    - Monitor usage with deamons watching the\
    \ state\n    - Explicit messages to a state deamon\n    - Monitor Accounting messages\
    \ for state changes\n"
- title: 6.2.  Resource Management Messages
  contents:
  - "6.2.  Resource Management Messages\n   Messages used for resource management\n\
    \    - IP Address Allocate\n    - IP Address Release\n    - Resource Request\n\
    \    - Resource Response\n    - Resource Free Request\n    - Resource Free Response\n\
    \    - Resource Reclaim Request\n    - NAS Reboot Request/Response\n   These messages\
    \ are used to allocate and free resources for a NAS from\n   a centralized server.\
    \  These mechanisms allows the service provider\n   better administrative control\
    \ than some automated LAN services, which\n   don't have policy inputs or controls.\n"
- title: 6.3.  Concurrent Logins
  contents:
  - "6.3.  Concurrent Logins\n   The RADIUS protocol was designed to allow stateless\
    \ servers.  That\n   is, servers that don't know the status of the active sessions.\n\
    \   However, it is very important for many service providers to keep\n   track\
    \ of how many sessions a given user may have open, and\n   accordingly disallow\
    \ access.\n   There are several different techniques used to implement login limits\n\
    \   on a RADIUS environment.  Some vendors have build NAS monitoring\n   tools\
    \ either into their RADIUS servers, either directly or as\n   auxiliary deamons,\
    \ that can check the session status of the\n   controlled NASes by SNMP or proprietary\
    \ methods.\n   Other vendors monitor the RADIUS accesses and accounting messages\
    \ and\n   derive state information from the requests.  This monitoring is not\n\
    \   as reliable as directly auditing the NAS, but it is also less vendor\n   specific,\
    \ and can work with any RADIUS NAS, provided it sends both\n   streams to the\
    \ same server.\n   Some of the approaches used:\n    - SNMP commands\n    - Telnet\
    \ monitor deamon\n    - Accounting monitor\n"
- title: '6.4.  Authorization Changes:'
  contents:
  - "6.4.  Authorization Changes:\n   To implement an active changes to a running\
    \ session, such as filter\n   changes or timeout and disconnect, at least one\
    \ vendor has added a\n   RADIUS \"server\" to his NAS. This server accepts messages\
    \ sent from an\n   application in the network, and upon matching some session\n\
    \   information, will perform such operations.\n   Messages sent from Server to\
    \ NAS\n    - Change Filter Request\n    - Change Filter Ack / Nak\n    - Disconnect\
    \ Request\n    - Disconnect Response\n   Filters are used to limit the access\
    \ the user has to the network by\n   restricting the systems and protocols he\
    \ can send packets to.  Upon\n   fulfilling some registration with an authorization\
    \ server, the\n   service provider may wish to remove those restrictions, or disconnect\n\
    \   the user.\n"
- title: 7.  Policy Services
  contents:
  - "7.  Policy Services\n   Some vendors have implemented policy servers using RADIUS\
    \ as the\n   control protocol.  Two prominent Policy Managers act as RADIUS proxy\n\
    \   filters and use RADIUS messages to deny access to new sessions that\n   exceed\
    \ active policy limits.\n   One implementation behaves like a RADIUS proxy server,\
    \ but with a\n   policy process governing it's forward decisions. Typically a\
    \ pre-\n   authentication message (like the new RADIUS draft Service-Type =\n\
    \   CallCheck) is emitted by the NAS upon call arrival. This message will\n  \
    \ contain only the Dialed-Number information in the Username field.\n   The server\
    \ receives the Access-Request messages and processes them\n   against it's knowledge\
    \ of the network state and the provisioned\n   policies.\n   An Access-Accept\
    \ will be returned to the system to accept the call,\n   and many also contain\
    \ dynamic policy information and Virtual POP\n   specific default parameters.\
    \ When the real PPP authentication is\n   engaged, the proxy will forwards the\
    \ Access-Request to a RADIUS\n   server, if this session was approved at pre-auth.\
    \  It can also\n   process Access-Requests that were not preceded by a pre-auth\n\
    \   exchange, and use the Username field for information about the\n   desired\
    \ realm, in it's policy evaluation.\n   The other implementation performs a similar\
    \ operations. It uses VSAs\n   in the Access-Request to distinguish pre-authentication\
    \ message\n   types.\n"
- title: 8.  Accounting Extensions
  contents:
  - "8.  Accounting Extensions\n   Traditional Accounting only records session starts\
    \ and stops which is\n   pretty boring. Additional session information reporting\
    \ can be added\n   easily which gives a better picture of operation in use as\
    \ they\n   happen.  Some event types are listed below.\n"
- title: 8.1.  Auditing/Activity
  contents:
  - "8.1.  Auditing/Activity\n    - Call or Modem Starts, Stops\n    - Tunnel Starts,\
    \ Stops\n    - Tunnel Link Starts & Stops\n    - Admin changes\n   These events\
    \ if monitored by a stateful server can be used to gather\n   information about\
    \ the usage of the network on a user/session basis.\n   Information about when\
    \ a particular user entered the network is more\n   relevant to network service\
    \ management than attempting track\n   backwards from low level IP address flows.\
    \   Useful information about\n   port usage across a range of NASes allows service\
    \ provider to quickly\n   find problem areas or users.\n   Information about call\
    \ failures, successes, and quality are also\n   deemed important many service\
    \ providers.\n   Extending RADIUS accounting is easy, it's surprising that more\n\
    \   implementations have not been made in this area.\n"
- title: 9.  Conclusions
  contents:
  - "9.  Conclusions\n   In real life RADIUS Servers are becoming rather complex software\n\
    \   implementations.  They are often brokering authentication and\n   authorization\
    \ to other authorities or repositories.  Variants of\n   RADIUS protocol is often\
    \ used as glue protocol for these type of\n   solutions.\n   Some of the solutions\
    \ are kludges that could be cleaned up by better\n   underlying services.\n  \
    \ What this means to the implementor is that RADIUS as the RFCs\n   describe it\
    \ is becoming less relevant.  Many additional features\n   require matching client\
    \ and server processing message processing.\n   Without standardization of these\
    \ functions we don't have much\n   interoperability in the field and much effort\
    \ is spent in reverse\n   engineering and reaction to unknown areas.\n   This\
    \ memo is not a complete survey by any means.  It is a\n   representative summary\
    \ of practices that I am aware of at the time of\n   writing.  I still appreciate\
    \ input from vendors or users on practices\n   and details known, and particularly\
    \ any reference material you can\n   pass me.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   This document documents known practices, and\
    \ does not propose any\n   particular new protocols. Extensions to RADIUS protocols\
    \ create new\n   security implications because of their functions go beyond those\n\
    \   considered in the RFCs.  Some of these include:\n    - The ability to change\
    \ passwords via a RADIUS exchange was\n      deliberately left out of the protocol\
    \ by the working group,\n      because of security concerns.\n    - The Pseudo-User\
    \ profiles and the Call-Check operation may allow\n      unintended access if\
    \ static and well-know account names and\n      passwords are allowed to be used\
    \ by regular interactive accounts.\n    - Resource Management operations must\
    \ be protected from denial of\n      service attacks.\n    - Client side authorization\
    \ change exchanges need to be secured from\n      attacks that could disconnect\
    \ or restrict user services.\n"
- title: 11.  Implementation Documents
  contents:
  - "11.  Implementation Documents\n   Information about the following implementations\
    \ can be obtained from\n   the respective owners.  Most listed are available from\
    \ the\n   manufacturer's web site.\n"
- title: '11.1.  Clients:'
  contents:
  - "11.1.  Clients:\n   - 3Com(USR) Total Control Hub\n   - Ericsson(ACC) Tigris\n\
    \           draft-ilgun-radius-accvsa-01.txt, Dec 1998\n   - Lucent(Ascend) MAX\
    \ TNT\n   - Lucent(Livingston) Portmaster\n   - Nortel(Aptis) CVX 1800\n   - Nortel(Bay\
    \ Networks) Versalar 5399/8000 Remote Access Controller\n   - Intel(Shiva)\n"
- title: '11.2.  Servers:'
  contents:
  - "11.2.  Servers:\n   - Ericsson(ACC) Virtual Port Server Manager\n   - Funk Steel-Belted\
    \ RADIUS\n   - Intel(Shiva) Access Manager\n   - Lucent(Ascend) Access Control\n\
    \   - Lucent(Ascend) NavisAccess\n   - Lucent(Ascend) Modified Livingston 1.16\n\
    \   - Lucent(Livingston) V2.01\n   - Lucent(Livingston) ABM\n   - Lucent Port\
    \ Authority\n   - MERIT AAA Servers\n   - Nortel(Bay Networks) BaySecure Access\
    \ Control\n   - Nortel Preside Radius\n   - Nortel CVX Policy Manager\n"
- title: 12.  References
  contents:
  - "12.  References\n   [1]  Rigney, C., Rubens, A., Simpson, W. and S. Willens,\
    \ \"Remote\n        Authentication Dial In User Service (RADIUS)\", RFC 2138,\
    \ April\n        1997.\n   [2]  Rigney, C., \"RADIUS Accounting\", RFC 2139, April\
    \ 1997.\n   [3]  Rigney, C., Willens, S., Ruebens, A. and W. Simpson, \"Remote\n\
    \        Authentication Dial In User Service (RADIUS)\", RFC 2865, June\n    \
    \    2000.\n   [4]  Rigney, C., \"RADIUS Accounting\", RFC 2866, June 2000.\n\
    \   [5]  Rigney, C., Willats, W. and P. Calhoun, \"RADIUS Extensions\", RFC\n\
    \        2869, June 2000.\n   [6]  Zorn, G., Leifer, D., Rubens, A., Shriver,\
    \ J., Holdrege, M. and\n        I. Goyret, \"RADIUS Attributes for Tunnel Protocol\
    \ Support\", RFC\n        2868, June 2000.\n   [7]  Zorn, G., Aboba, B. and D.\
    \ Mitton, \"RADIUS Accounting\n        Modifications for Tunnel Protocol Support\"\
    , RFC 2867, June 2000.\n   [8]  Aboba, B. and G. Zorn, \"Implementation of L2TP\
    \ Compulsory\n        Tunneling via RADIUS\", RFC 2809, April 2000.\n   [9]  Zorn,\
    \ G., \"Microsoft Vendor-specific RADIUS Attributes\", RFC\n        2548, March\
    \ 1999.\n   [10] Ilgun, K., \"RADIUS Vendor Specific Attributes for ACC/Ericsson\n\
    \        Datacom Access\", Work in Progress.\n"
- title: 13.  Author's Address
  contents:
  - "13.  Author's Address\n   David Mitton\n   Nortel Networks\n   880 Technology\
    \ Park Drive\n   Billerica, MA 01821\n   Phone: 978-288-4570\n   EMail: dmitton@nortelnetworks.com\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
