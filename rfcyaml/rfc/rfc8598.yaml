- contents:
  - "                        Split DNS Configuration\n        for the Internet Key
    Exchange Protocol Version 2 (IKEv2)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines two Configuration Payload Attribute Types\n
    \  (INTERNAL_DNS_DOMAIN and INTERNAL_DNSSEC_TA) for the Internet Key\n   Exchange
    Protocol version 2 (IKEv2).  These payloads add support for\n   private (internal-only)
    DNS domains.  These domains are intended to\n   be resolved using non-public DNS
    servers that are only reachable\n   through the IPsec connection.  DNS resolution
    for other domains\n   remains unchanged.  These Configuration Payloads only apply
    to split-\n   tunnel configurations.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8598.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   4\n   2.  Applicability . . . . . . . . . . . . . . . . . . . . . . .
    .   4\n   3.  Protocol Exchange . . . . . . . . . . . . . . . . . . . . . .   5\n
    \    3.1.  Configuration Request . . . . . . . . . . . . . . . . . .   5\n     3.2.
    \ Configuration Reply . . . . . . . . . . . . . . . . . . .   6\n     3.3.  Mapping
    DNS Servers to Domains  . . . . . . . . . . . . .   7\n     3.4.  Example Exchanges
    . . . . . . . . . . . . . . . . . . . .   7\n       3.4.1.  Simple Case . . .
    . . . . . . . . . . . . . . . . . .   7\n       3.4.2.  Requesting Domains and
    DNSSEC Trust Anchors . . . . .   7\n   4.  Payload Formats . . . . . . . . . .
    . . . . . . . . . . . . .   9\n     4.1.  INTERNAL_DNS_DOMAIN Configuration Attribute
    Type Request\n           and Reply . . . . . . . . . . . . . . . . . . . . . .
    . .   9\n     4.2.  INTERNAL_DNSSEC_TA Configuration Attribute  . . . . . . .
    \  9\n   5.  INTERNAL_DNS_DOMAIN Usage Guidelines  . . . . . . . . . . . .  11\n
    \  6.  INTERNAL_DNSSEC_TA Usage Guidelines . . . . . . . . . . . . .  12\n   7.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  13\n   8.  Security
    Considerations . . . . . . . . . . . . . . . . . . .  14\n   9.  References  .
    . . . . . . . . . . . . . . . . . . . . . . . .  15\n     9.1.  Normative References
    \ . . . . . . . . . . . . . . . . . .  15\n     9.2.  Informative References  .
    . . . . . . . . . . . . . . . .  16\n   Authors' Addresses  . . . . . . . . .
    . . . . . . . . . . . . . .  16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Split-tunnel Virtual Private Network (VPN) configurations
    only send\n   packets with a specific destination IP range, usually chosen from\n
    \  [RFC1918], via the VPN.  All other traffic is not sent via the VPN.\n   This
    allows an enterprise deployment to offer remote access VPN\n   services without
    needing to accept and forward all the non-\n   enterprise-related network traffic
    generated by their remote users.\n   Resources within the enterprise can be accessed
    by the user via the\n   VPN, while all other traffic generated by the user is
    not sent over\n   the VPN.\n   These internal resources tend to only have internal-only
    DNS names\n   and require the use of special internal-only DNS servers to get\n
    \  resolved.  Split DNS [RFC2775] is commonly configured as part of\n   split-tunnel
    VPN configurations to allow remote access users to use\n   special internal-only
    domain names.\n   The IKEv2 protocol [RFC7296] negotiates configuration parameters\n
    \  using Configuration Payload Attribute Types.  This document defines\n   two
    Configuration Payload Attribute Types that add support for\n   trusted Split DNS
    domains.\n   The INTERNAL_DNS_DOMAIN attribute type is used to convey that the\n
    \  specified DNS domain MUST be resolved using the provided DNS\n   nameserver
    IP addresses as specified in the INTERNAL_IP4_DNS and\n   INTERNAL_IP6_DNS Configuration
    Payloads, causing these requests to\n   use the IPsec connection.\n   The INTERNAL_DNSSEC_TA
    attribute type is used to convey a DNSSEC\n   trust anchor for such a domain.
    \ This is required if the external\n   view uses DNSSEC, which would prove the
    internal view does not exist\n   or would expect a different DNSSEC key on the
    different versions\n   (internal and external) of the enterprise domain.\n   If
    an INTERNAL_DNS_DOMAIN is sent by the responder, the responder\n   MUST also include
    one or more INTERNAL_IP4_DNS or INTERNAL_IP6_DNS\n   attributes that contain the
    IPv4 or IPv6 address of the internal DNS\n   server.\n   For the purposes of this
    document, DNS resolution servers accessible\n   through an IPsec connection will
    be referred to as \"internal DNS\n   servers\", and other DNS servers will be
    referred to as \"external DNS\n   servers\".\n   Other tunnel-establishment protocols
    already support the assignment\n   of Split DNS domains.  For example, there are
    proprietary extensions\n   to IKEv1 that allow a server to assign Split DNS domains
    to a client.\n   However, the IKEv2 standard does not include a method to configure\n
    \  this option.  This document defines a standard way to negotiate this\n   option
    for IKEv2.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Applicability\n   If the negotiated IPsec connection is not a split-tunnel\n
    \  configuration, the INTERNAL_DNS_DOMAIN and INTERNAL_DNSSEC_TA\n   Configuration
    Payloads MUST be ignored.  This prevents generic (non-\n   enterprise) VPN services
    from overriding the public DNS hierarchy,\n   which could lead to malicious overrides
    of DNS and DNSSEC.\n   Such configurations SHOULD instead use only the INTERNAL_IP4_DNS
    and\n   INTERNAL_IP6_DNS Configuration Payloads to ensure all of the user's\n
    \  DNS traffic is sent through the IPsec connection and does not leak\n   unencrypted
    information onto the local network, as the local network\n   is often explicitly
    exempted from IPsec encryption.\n   For split-tunnel configurations, an enterprise
    can require one or\n   more DNS domains to be resolved via internal DNS servers.
    \ This can\n   be a special domain, such as \"corp.example.com\" for an enterprise\n
    \  that is publicly known to use \"example.com\".  In this case, the\n   remote
    user needs to be informed what the internal-only domain names\n   are and what
    the IP addresses of the internal DNS servers are.  An\n   enterprise can also
    run a different version of its public domain on\n   its internal network.  In
    that case, the VPN client is instructed to\n   send DNS queries for the enterprise
    public domain (e.g.,\n   \"example.com\") to the internal DNS servers.  A configuration
    for this\n   deployment scenario is referred to as a Split DNS configuration.\n
    \  Split DNS configurations are often preferable to sending all DNS\n   queries
    to the enterprise.  This allows the remote user to only send\n   DNS queries for
    the enterprise to the internal DNS servers.  The\n   enterprise remains unaware
    of all non-enterprise (DNS) activity of\n   the user.  It also allows the enterprise
    DNS servers to only be\n   configured for the enterprise DNS domains, which removes
    the legal\n   and technical responsibility of the enterprise to resolve every
    DNS\n   domain potentially asked for by the remote user.\n   A client using these
    Configuration Payloads will be able to request\n   and receive Split DNS configurations
    using the INTERNAL_DNS_DOMAIN\n   and INTERNAL_DNSSEC_TA configuration attributes.
    \ These attributes\n   MUST be accompanied by one or more INTERNAL_IP4_DNS or\n
    \  INTERNAL_IP6_DNS configuration attributes.  The client device can\n   then
    use the internal DNS server(s) for any DNS queries within the\n   assigned domains.
    \ DNS queries for other domains SHOULD be sent to\n   the regular DNS service
    of the client unless it prefers to use the\n   IPsec tunnel for all its DNS queries.
    \ For example, the client could\n   trust the IPsec-provided DNS servers more
    than the locally provided\n   DNS servers, especially in the case of connecting
    to unknown or\n   untrusted networks (e.g., coffee shops or hotel networks).  Or
    the\n   client could prefer the IPsec-based DNS servers because they provide\n
    \  additional features compared to the local DNS servers.\n"
  title: 2.  Applicability
- contents:
  - "3.  Protocol Exchange\n   In order to negotiate which domains are considered
    internal to an\n   IKEv2 tunnel, initiators indicate support for Split DNS in
    their\n   CFG_REQUEST payloads, and responders assign internal domains (and\n
    \  DNSSEC trust anchors) in their CFG_REPLY payloads.  When Split DNS\n   has
    been negotiated, the INTERNAL_IP4_DNS and INTERNAL_IP6_DNS DNS\n   server configuration
    attributes will be interpreted as internal DNS\n   servers that can resolve hostnames
    within the internal domains.\n"
  - contents:
    - "3.1.  Configuration Request\n   To indicate support for Split DNS, an initiator
      includes one or more\n   INTERNAL_DNS_DOMAIN attributes as defined in Section
      4 as part of the\n   CFG_REQUEST payload.  If an INTERNAL_DNS_DOMAIN attribute
      is included\n   in the CFG_REQUEST, the initiator MUST also include one or more\n
      \  INTERNAL_IP4_DNS or INTERNAL_IP6_DNS attributes in the CFG_REQUEST.\n   The
      INTERNAL_DNS_DOMAIN attribute sent by the initiator is usually\n   empty but
      MAY contain a suggested domain name.\n   The absence of INTERNAL_DNS_DOMAIN
      attributes in the CFG_REQUEST\n   payload indicates that the initiator does
      not support or is unwilling\n   to accept a Split DNS configuration.\n   To
      indicate support for receiving DNSSEC trust anchors for Split DNS\n   domains,
      an initiator includes one or more INTERNAL_DNSSEC_TA\n   attributes as defined
      in Section 4 as part of the CFG_REQUEST\n   payload.  If an INTERNAL_DNSSEC_TA
      attribute is included in the\n   CFG_REQUEST, the initiator MUST also include
      one or more\n   INTERNAL_DNS_DOMAIN attributes in the CFG_REQUEST.  If the initiator\n
      \  includes an INTERNAL_DNSSEC_TA attribute but does not include an\n   INTERNAL_DNS_DOMAIN
      attribute, the responder MAY still respond with\n   both INTERNAL_DNSSEC_TA
      and INTERNAL_DNS_DOMAIN attributes.\n   An initiator MAY convey its current
      DNSSEC trust anchors for the\n   domain specified in the INTERNAL_DNS_DOMAIN
      attribute.  A responder\n   can use this information to determine that it does
      not need to send a\n   different trust anchor.  If the initiator does not wish
      to convey\n   this information, it MUST use a length of 0.\n   The absence of
      INTERNAL_DNSSEC_TA attributes in the CFG_REQUEST\n   payload indicates that
      the initiator does not support or is unwilling\n   to accept the DNSSEC trust
      anchor configuration.\n"
    title: 3.1.  Configuration Request
  - contents:
    - "3.2.  Configuration Reply\n   Responders MAY send one or more INTERNAL_DNS_DOMAIN
      attributes in\n   their CFG_REPLY payload.  If an INTERNAL_DNS_DOMAIN attribute
      is\n   included in the CFG_REPLY, the responder MUST also include one or\n   both
      of the INTERNAL_IP4_DNS and INTERNAL_IP6_DNS attributes in the\n   CFG_REPLY.
      \ These DNS server configurations are necessary to define\n   which servers
      can receive queries for hostnames in internal domains.\n   If the CFG_REQUEST
      included an INTERNAL_DNS_DOMAIN attribute but the\n   CFG_REPLY does not include
      an INTERNAL_DNS_DOMAIN attribute, the\n   initiator MUST behave as if Split
      DNS configurations are not\n   supported by the server, unless the initiator
      has been configured\n   with local policy to define a set of Split DNS domains
      to use by\n   default.\n   Each INTERNAL_DNS_DOMAIN represents a domain that
      the DNS server\n   addresses listed in INTERNAL_IP4_DNS and INTERNAL_IP6_DNS
      can\n   resolve.\n   If the CFG_REQUEST included INTERNAL_DNS_DOMAIN attributes
      with non-\n   zero lengths, the content MAY be ignored or be interpreted as
      a\n   suggestion by the responder.\n   For each DNS domain specified in an INTERNAL_DNS_DOMAIN
      attribute,\n   one or more INTERNAL_DNSSEC_TA attributes MAY be included by
      the\n   responder.  This attribute lists the corresponding internal DNSSEC\n
      \  trust anchor information of a DS record (see [RFC4034]).  The\n   INTERNAL_DNSSEC_TA
      attribute MUST immediately follow the\n   INTERNAL_DNS_DOMAIN attribute that
      it applies to.\n"
    title: 3.2.  Configuration Reply
  - contents:
    - "3.3.  Mapping DNS Servers to Domains\n   All DNS servers provided in the CFG_REPLY
      MUST support resolving\n   hostnames within all INTERNAL_DNS_DOMAIN domains.
      \ In other words,\n   the INTERNAL_DNS_DOMAIN attributes in a CFG_REPLY payload
      form a\n   single list of Split DNS domains that applies to the entire list
      of\n   INTERNAL_IP4_DNS and INTERNAL_IP6_DNS attributes.\n"
    title: 3.3.  Mapping DNS Servers to Domains
  - contents:
    - '3.4.  Example Exchanges

      '
    - contents:
      - "3.4.1.  Simple Case\n   In this example exchange, the initiator requests
        INTERNAL_IP4_DNS,\n   INTERNAL_IP6_DNS, and INTERNAL_DNS_DOMAIN attributes
        in the\n   CFG_REQUEST but does not specify any value for either.  This\n
        \  indicates that it supports Split DNS but has no preference for which\n
        \  DNS requests will be routed through the tunnel.\n   The responder replies
        with two DNS server addresses and two internal\n   domains, \"example.com\"
        and \"city.other.test\".\n   Any subsequent DNS queries from the initiator
        for domains such as\n   \"www.example.com\" SHOULD use 198.51.100.2 or 198.51.100.4
        to resolve.\n   CP(CFG_REQUEST) =\n     INTERNAL_IP4_ADDRESS()\n     INTERNAL_IP4_DNS()\n
        \    INTERNAL_IP6_ADDRESS()\n     INTERNAL_IP6_DNS()\n     INTERNAL_DNS_DOMAIN()\n
        \  CP(CFG_REPLY) =\n     INTERNAL_IP4_ADDRESS(198.51.100.234)\n     INTERNAL_IP4_DNS(198.51.100.2)\n
        \    INTERNAL_IP4_DNS(198.51.100.4)\n     INTERNAL_IP6_ADDRESS(2001:DB8:0:1:2:3:4:5/64)\n
        \    INTERNAL_IP6_DNS(2001:DB8:99:88:77:66:55:44)\n     INTERNAL_DNS_DOMAIN(example.com)\n
        \    INTERNAL_DNS_DOMAIN(city.other.test)\n"
      title: 3.4.1.  Simple Case
    - contents:
      - "3.4.2.  Requesting Domains and DNSSEC Trust Anchors\n   In this example exchange,
        the initiator requests INTERNAL_IP4_DNS,\n   INTERNAL_IP6_DNS, INTERNAL_DNS_DOMAIN
        and INTERNAL_DNSSEC_TA\n   attributes in the CFG_REQUEST.\n   Any subsequent
        DNS queries from the initiator for domains such as\n   \"www.example.com\"
        or \"city.other.test\" would be DNSSEC validated\n   using the DNSSEC trust
        anchor received in the CFG_REPLY.\n   In this example, the initiator has no
        existing DNSSEC trust anchors\n   for the requested domain.  The \"example.com\"
        domain has DNSSEC trust\n   anchors that are returned, while the \"other.test\"
        domain has no\n   DNSSEC trust anchors.\n   CP(CFG_REQUEST) =\n     INTERNAL_IP4_ADDRESS()\n
        \    INTERNAL_IP4_DNS()\n     INTERNAL_IP6_ADDRESS()\n     INTERNAL_IP6_DNS()\n
        \    INTERNAL_DNS_DOMAIN()\n     INTERNAL_DNSSEC_TA()\n   CP(CFG_REPLY) =\n
        \    INTERNAL_IP4_ADDRESS(198.51.100.234)\n     INTERNAL_IP4_DNS(198.51.100.2)\n
        \    INTERNAL_IP4_DNS(198.51.100.4)\n     INTERNAL_IP6_ADDRESS(2001:DB8:0:1:2:3:4:5/64)\n
        \    INTERNAL_IP6_DNS(2001:DB8:99:88:77:66:55:44)\n     INTERNAL_DNS_DOMAIN(example.com)\n
        \    INTERNAL_DNSSEC_TA(43547,8,1,B6225AB2CC613E0DCA7962BDC2342EA4...)\n     INTERNAL_DNSSEC_TA(31406,8,2,F78CF3344F72137235098ECBBD08947C...)\n
        \    INTERNAL_DNS_DOMAIN(city.other.test)\n"
      title: 3.4.2.  Requesting Domains and DNSSEC Trust Anchors
    title: 3.4.  Example Exchanges
  title: 3.  Protocol Exchange
- contents:
  - "4.  Payload Formats\n   All multi-octet fields representing integers are laid
    out in big-\n   endian order (also known as \"most significant byte first\" or
    \"network\n   byte order\").\n"
  - contents:
    - "4.1.  INTERNAL_DNS_DOMAIN Configuration Attribute Type Request and Reply\n
      \                       1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-----------------------------+-------------------------------+\n
      \  |R|         Attribute Type      |            Length             |\n   +-+-----------------------------+-------------------------------+\n
      \  |                                                               |\n   ~             Domain
      Name in DNS presentation format            ~\n   |                                                               |\n
      \  +---------------------------------------------------------------+\n   o  Reserved
      (1 bit) - Defined in IKEv2 RFC [RFC7296].\n   o  Attribute Type (15 bits) -
      set to value 25 for\n      INTERNAL_DNS_DOMAIN.\n   o  Length (2 octets) - Length
      of domain name.\n   o  Domain Name (0 or more octets) - A Fully Qualified Domain
      Name\n      used for Split DNS rules, such as \"example.com\", in DNS\n      presentation
      format and using an Internationalized Domain Names\n      for Applications (IDNA)
      A-label [RFC5890].  Implementors need to\n      be careful that this value is
      not null terminated.\n"
    title: 4.1.  INTERNAL_DNS_DOMAIN Configuration Attribute Type Request and Reply
  - contents:
    - "4.2.  INTERNAL_DNSSEC_TA Configuration Attribute\n   An INTERNAL_DNSSEC_TA
      Configuration Attribute can either be empty, or\n   it can contain one trust
      anchor by containing a non-zero Length with\n   a DNSKEY Key Tag, DNSKEY Algorithm,
      Digest Type and Digest Data\n   fields.\n   An empty INTERNAL_DNSSEC_TA CFG
      attribute:\n                        1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-----------------------------+-------------------------------+\n
      \  |R|       Attribute Type        |       Length (set to 0)       |\n   +-+-----------------------------+-------------------------------+\n
      \  o  Reserved (1 bit) - Defined in IKEv2 RFC [RFC7296].\n   o  Attribute Type
      (15 bits) - set to value 26 for INTERNAL_DNSSEC_TA.\n   o  Length (2 octets)
      - Set to 0 for an empty attribute.\n   A non-empty INTERNAL_DNSSEC_TA CFG attribute:\n
      \                       1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-----------------------------+-------------------------------+\n
      \  |R|       Attribute Type        |            Length             |\n   +-+-----------------------------+---------------+---------------+\n
      \  |        DNSKEY Key Tag         |  DNSKEY Alg   |  Digest Type  |\n   +-------------------------------+---------------+---------------+\n
      \  |                                                               |\n   ~                         Digest
      Data                           ~\n   |                                                               |\n
      \  +---------------------------------------------------------------+\n   o  Reserved
      (1 bit) - Defined in IKEv2 RFC [RFC7296].\n   o  Attribute Type (15 bits) -
      set to value 26 for INTERNAL_DNSSEC_TA.\n   o  Length (2 octets) - Length of
      DNSSEC trust anchor data (4 octets\n      plus the length of the Digest Data).\n
      \  o  DNSKEY Key Tag (2 octets) - Delegation Signer (DS) Key Tag as\n      specified
      in Section 5.1 of [RFC4034].\n   o  DNSKEY Algorithm (1 octet) - DNSKEY algorithm
      value from the IANA\n      DNS Security Algorithm Numbers Registry.\n   o  Digest
      Type (1 octet) - DS algorithm value from the IANA\n      Delegation Signer (DS)
      Resource Record (RR) Type Digest Algorithms\n      Registry.\n   o  Digest Data
      (1 or more octets) - The DNSKEY digest as specified in\n      Section 5.1 of
      [RFC4034] in presentation format.\n   Each INTERNAL_DNSSEC_TA attribute in the
      CFG_REPLY payload MUST\n   immediately follow a corresponding INTERNAL_DNS_DOMAIN
      attribute.  As\n   the INTERNAL_DNSSEC_TA format itself does not contain the
      domain\n   name, it relies on the preceding INTERNAL_DNS_DOMAIN to provide the\n
      \  domain for which it specifies the trust anchor.  Any\n   INTERNAL_DNSSEC_TA
      attribute that is not immediately preceded by an\n   INTERNAL_DNS_DOMAIN or
      another INTERNAL_DNSSEC_TA attribute applying\n   to the same domain name MUST
      be ignored.\n"
    title: 4.2.  INTERNAL_DNSSEC_TA Configuration Attribute
  title: 4.  Payload Formats
- contents:
  - "5.  INTERNAL_DNS_DOMAIN Usage Guidelines\n   If a CFG_REPLY payload contains
    no INTERNAL_DNS_DOMAIN attributes,\n   the client MAY use the provided INTERNAL_IP4_DNS
    or INTERNAL_IP6_DNS\n   servers as the default DNS server(s) for all queries.\n
    \  If a client is configured by local policy to only accept a limited\n   set
    of INTERNAL_DNS_DOMAIN values, the client MUST ignore any other\n   INTERNAL_DNS_DOMAIN
    values.\n   For each INTERNAL_DNS_DOMAIN entry in a CFG_REPLY payload that is
    not\n   prohibited by local policy, the client MUST use the provided\n   INTERNAL_IP4_DNS
    or INTERNAL_IP6_DNS DNS servers as the only\n   resolvers for the listed domains
    and its subdomains, and it MUST NOT\n   attempt to resolve the provided DNS domains
    using its external DNS\n   servers.  Other domain names SHOULD be resolved using
    some other\n   external DNS resolver(s) that are configured independently from
    IKE.\n   Queries for these other domains MAY be sent to the internal DNS\n   resolver(s)
    listed in that CFG_REPLY message, but they have no\n   guarantee of being answered.
    \ For example, if the INTERNAL_DNS_DOMAIN\n   attribute specifies \"example.test\",
    then \"example.test\",\n   \"www.example.test\", and \"mail.eng.example.test\"
    MUST be resolved\n   using the internal DNS resolver(s), but \"otherexample.test\"
    and\n   \"ple.test\" MUST NOT be resolved using the internal resolver and MUST\n
    \  use the system's external DNS resolver(s).\n   The initiator SHOULD allow the
    DNS domains listed in the\n   INTERNAL_DNS_DOMAIN attributes to resolve to special
    IP address\n   ranges, such as those of [RFC1918], even if the initiator host
    is\n   otherwise configured to block a DNS answer containing these special\n   IP
    address ranges.\n   When an IKE Security Association (SA) is terminated, the DNS\n
    \  forwarding MUST be unconfigured.  This includes deleting the DNS\n   forwarding
    rules; flushing all cached data for DNS domains provided\n   by the INTERNAL_DNS_DOMAIN
    attribute, including negative cache\n   entries; removing any obtained DNSSEC
    trust anchors from the list of\n   trust anchors; and clearing the outstanding
    DNS request queue.\n   INTERNAL_DNS_DOMAIN attributes SHOULD only be used on split-tunnel\n
    \  configurations where only a subset of traffic is routed into a\n   private
    remote network using the IPsec connection.  If all traffic is\n   routed over
    the IPsec connection, the existing global\n   INTERNAL_IP4_DNS and INTERNAL_IP6_DNS
    can be used without creating\n   specific DNS or DNSSEC exemptions.\n"
  title: 5.  INTERNAL_DNS_DOMAIN Usage Guidelines
- contents:
  - "6.  INTERNAL_DNSSEC_TA Usage Guidelines\n   DNS records can be used to publish
    specific records containing trust\n   anchors for applications.  The most common
    record type is the TLSA\n   record specified in [RFC6698].  This DNS record type
    publishes which\n   Certification Authority (CA) certificate or End Entity (EE)\n
    \  certificate to expect for a certain host name.  These records are\n   protected
    by DNSSEC and thus are trustable by the application.\n   Whether to trust TLSA
    records instead of the traditional Web PKI\n   depends on the local policy of
    the client.  By accepting an\n   INTERNAL_DNSSEC_TA trust anchor via IKE from
    the remote IKE server,\n   the IPsec client might be allowing the remote IKE server
    to override\n   the trusted certificates for TLS.  Similar override concerns apply
    to\n   other public key or fingerprint-based DNS records, such as\n   OPENPGPKEY,
    SMIMEA, or IPSECKEY records.\n   Thus, installing an INTERNAL_DNSSEC_TA trust
    anchor can be seen as\n   the equivalent of installing an Enterprise CA certificate.
    \ It allows\n   the remote IKE/IPsec server to modify DNS answers, including DNSSEC\n
    \  cryptographic signatures, by overriding existing DNS information with\n   a
    trust anchor conveyed via IKE and (temporarily) installed on the\n   IKE client.
    \ Of specific concern is the overriding of TLSA records\n   based on [RFC6698],
    which represents a confirmation or override of an\n   existing Web PKI TLS certificate.
    \ Other DNS record types that convey\n   cryptographic materials (public keys
    or fingerprints) are OPENPGPKEY,\n   SMIMEA, SSHP, and IPSECKEY records.\n   IKE
    clients willing to accept INTERNAL_DNSSEC_TA attributes MUST use\n   a whitelist
    of one or more domains that can be updated out of band.\n   IKE clients with an
    empty whitelist MUST NOT use any\n   INTERNAL_DNSSEC_TA attributes received over
    IKE.  Such clients MAY\n   interpret receiving an INTERNAL_DNSSEC_TA attribute
    for a non-\n   whitelisted domain as an indication that their local configuration\n
    \  may need to be updated out of band.\n   IKE clients should take care to only
    whitelist domains that apply to\n   internal or managed domains rather than to
    generic Internet traffic.\n   The DNS root zone (\".\") MUST be ignored if it
    appears in a whitelist.\n   Other generic or public domains, such as Top-Level
    Domains (TLDs),\n   similarly MUST be ignored if they appear in a whitelist unless
    the\n   entity actually is the operator of the TLD.  To determine this, an\n   implementation
    MAY interactively ask the user when a VPN profile is\n   installed or activated
    to confirm this.  Alternatively, it MAY\n   provide a special override keyword
    in its provisioning configuration\n   to ensure non-interactive agreement can
    be achieved only by the party\n   provisioning the VPN client, who presumably
    is a trusted entity by\n   the end user.  Similarly, an entity might be using
    a special domain\n   name, such as \".internal\", for its internal-only view and
    might wish\n   to force its provisioning system to accept such a domain in a Split\n
    \  DNS configuration.\n   Any updates to this whitelist of domain names MUST happen
    via\n   explicit human interaction or by a trusted automated provision system\n
    \  to prevent malicious invisible installation of trust anchors in case\n   of
    an IKE server compromise.\n   IKE clients SHOULD accept any INTERNAL_DNSSEC_TA
    updates for\n   subdomain names of the whitelisted domain names.  For example,
    if\n   \"example.net\" is whitelisted, then INTERNAL_DNSSEC_TA received for\n
    \  \"antartica.example.net\" SHOULD be accepted.\n   IKE clients MUST ignore any
    received INTERNAL_DNSSEC_TA attributes\n   for a Fully Qualified Domain Name (FQDN)
    for which it did not receive\n   and accept an INTERNAL_DNS_DOMAIN Configuration
    Payload.\n   In most deployment scenarios, the IKE client has an expectation that\n
    \  it is connecting to a specific organization or enterprise using a\n   split-network
    setup.  A recommended policy would be to only accept\n   INTERNAL_DNSSEC_TA directives
    from that organization's DNS names.\n   However, this might not be possible in
    all deployment scenarios, such\n   as one where the IKE server is handing out
    a number of domains that\n   are not within one parent domain.\n"
  title: 6.  INTERNAL_DNSSEC_TA Usage Guidelines
- contents:
  - "7.  IANA Considerations\n   This document defines two new IKEv2 Configuration
    Payload Attribute\n   Types, which are allocated from the \"IKEv2 Configuration
    Payload\n   Attribute Types\" namespace.\n                                 Multi-\n
    \  Value    Attribute Type       Valued  Length      Reference\n   ------   -------------------
    \ ------  ----------  ---------------\n   25       INTERNAL_DNS_DOMAIN   YES     0
    or more  RFC 8598\n   26       INTERNAL_DNSSEC_TA    YES     0 or more  RFC 8598\n
    \                                Figure 1\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   As stated in Section 2, if the negotiated IPsec
    connection is not a\n   split-tunnel configuration, the INTERNAL_DNS_DOMAIN and\n
    \  INTERNAL_DNSSEC_TA Configuration Payloads MUST be ignored.\n   Otherwise, generic
    VPN service providers could maliciously override\n   DNSSEC-based trust anchors
    of public DNS domains.\n   An initiator MUST only accept INTERNAL_DNSSEC_TAs for
    which it has a\n   whitelist, since this mechanism allows the credential used
    to\n   authenticate an IKEv2 association to be leveraged into authenticating\n
    \  credentials for other connections.  Initiators should ensure that\n   they
    have sufficient trust in the responder when using this\n   mechanism.  An initiator
    MAY treat a received INTERNAL_DNSSEC_TA for\n   a non-whitelisted domain as a
    signal to update the whitelist via a\n   non-IKE provisioning mechanism.  See
    Section 6 for additional\n   security considerations for DNSSEC trust anchors.\n
    \  The use of Split DNS configurations assigned by an IKEv2 responder is\n   predicated
    on the trust established during IKE SA authentication.\n   However, if IKEv2 is
    being negotiated with an anonymous or unknown\n   endpoint (such as for Opportunistic
    Security [RFC7435]), the\n   initiator MUST ignore Split DNS configurations assigned
    by the\n   responder.\n   If a host connected to an authenticated IKE peer is
    connecting to\n   another IKE peer that attempts to claim the same domain via
    the\n   INTERNAL_DNS_DOMAIN attribute, the IKE connection SHOULD only process\n
    \  the DNS information if the two connections are part of the same\n   logical
    entity.  Otherwise, the client SHOULD refuse the DNS\n   information and potentially
    warn the end user.  For example, if a VPN\n   profile for \"Example Corporation\"
    is installed that provides two\n   IPsec connections, one covering 192.168.100.0/24
    and one covering\n   10.13.14.0/24, it could be that both connections negotiate
    the same\n   INTERNAL_DNS_DOMAIN and INTERNAL_DNSSEC_TA values.  Since these are\n
    \  part of the same remote organization (or provisioning profile), the\n   Configuration
    Payloads can be used.  However, if a user installs two\n   VPN profiles from two
    different unrelated independent entities, both\n   could be configured to use
    the same domain -- for example,\n   \".internal\".  These two connections MUST
    NOT be allowed to be active\n   at the same time.\n   If the initiator is using
    DNSSEC validation for a domain in its\n   public DNS view and it requests and
    receives an INTERNAL_DNS_DOMAIN\n   attribute without an INTERNAL_DNSSEC_TA, it
    will need to reconfigure\n   its DNS resolver to allow for an insecure delegation.
    \ It SHOULD NOT\n   accept insecure delegations for domains that are DNSSEC signed
    in the\n   public DNS view for which it has not explicitly requested such\n   delegation,
    i.e., for which it has not used an INTERNAL_DNS_DOMAIN\n   request to specify
    the domain.\n   Deployments that configure INTERNAL_DNS_DOMAIN domains should
    pay\n   close attention to their use of indirect reference RRtypes in their\n
    \  internal-only domain names.  Examples of such RRtypes are NS, CNAME,\n   DNAME,
    MX, or SRV records.  For example, if the MX record for\n   \"internal.example.com\"
    points to \"mx.internal.example.net\", then both\n   \"internal.example.com\"
    and \"internal.example.net\" should be sent\n   using an INTERNAL_DNS_DOMAIN Configuration
    Payload.\n   IKE clients MAY want to require whitelisted domains for Top-Level\n
    \  Domains (TLDs) and Second-Level Domains (SLDs) to further prevent\n   malicious
    DNS redirections for well-known domains.  This prevents\n   users from unknowingly
    giving DNS queries to third parties.  This is\n   even more important if those
    well-known domains are not deploying\n   DNSSEC, as the VPN service provider could
    then even modify the DNS\n   answers without detection.\n   The content of INTERNAL_DNS_DOMAIN
    and INTERNAL_DNSSEC_TA may be\n   passed to another (DNS) program for processing.
    \ As with any network\n   input, the content SHOULD be considered untrusted and
    handled\n   accordingly.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,
      D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private
      Internets\",\n              BCP 5, RFC 1918, DOI 10.17487/RFC1918, February
      1996,\n              <https://www.rfc-editor.org/info/rfc1918>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC4034]  Arends,
      R., Austein, R., Larson, M., Massey, D., and S.\n              Rose, \"Resource
      Records for the DNS Security Extensions\",\n              RFC 4034, DOI 10.17487/RFC4034,
      March 2005,\n              <https://www.rfc-editor.org/info/rfc4034>.\n   [RFC5890]
      \ Klensin, J., \"Internationalized Domain Names for\n              Applications
      (IDNA): Definitions and Document Framework\",\n              RFC 5890, DOI 10.17487/RFC5890,
      August 2010,\n              <https://www.rfc-editor.org/info/rfc5890>.\n   [RFC6698]
      \ Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n              of
      Named Entities (DANE) Transport Layer Security (TLS)\n              Protocol:
      TLSA\", RFC 6698, DOI 10.17487/RFC6698, August\n              2012, <https://www.rfc-editor.org/info/rfc6698>.\n
      \  [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n              Kivinen,
      \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\", STD 79,
      RFC 7296, DOI 10.17487/RFC7296, October\n              2014, <https://www.rfc-editor.org/info/rfc7296>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC2775]  Carpenter, B., \"Internet Transparency\",
      RFC 2775,\n              DOI 10.17487/RFC2775, February 2000,\n              <https://www.rfc-editor.org/info/rfc2775>.\n
      \  [RFC7435]  Dukhovni, V., \"Opportunistic Security: Some Protection\n              Most
      of the Time\", RFC 7435, DOI 10.17487/RFC7435,\n              December 2014,
      <https://www.rfc-editor.org/info/rfc7435>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Tommy Pauly\n   Apple Inc.\n   One Apple Park Way\n   Cupertino,
    California  95014\n   United States of America\n   Email: tpauly@apple.com\n   Paul
    Wouters\n   Red Hat\n   Email: pwouters@redhat.com\n"
  title: Authors' Addresses
