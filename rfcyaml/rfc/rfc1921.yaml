- title: __initial_text__
  contents:
  - '                             TNVIP Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The goal of this document specifies a Telnet profile to support\
    \ VIP\n   terminal emulation allowing the access to the BULL hosts applications\n\
    \   through a TCP/IP network.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.       Motivation . . . . . . . . . . . . . . . . .\
    \ . . . . . 2\n    2.       Background . . . . . . . . . . . . . . . . . . . .\
    \ . . 3\n    3.       Telnet Options and Commands Used . . . . . . . . . . . 3\n\
    \    3.1.      Terminal type option  . . . . . . . . . . . . . . . . 4\n    3.1.1.\
    \      Subnegotiation of the Terminal Type . . . . . . . . 4\n    3.1.2.     \
    \ Terminal-types supported by the TNVIP protocol  . . 4\n    3.1.3.      TNVIP\
    \ terminal models . . . . . . . . . . . . . . . 5\n    3.1.4.      Mailbox name\
    \  . . . . . . . . . . . . . . . . . . . 5\n    3.2.      End of Record Option\
    \  . . . . . . . . . . . . . . . . 6\n    3.3.      Binary Transmission option\
    \  . . . . . . . . . . . . . 6\n    3.4.      Suppress Go Ahead option  . . .\
    \ . . . . . . . . . . . 7\n    4.       TNVIP functions  . . . . . . . . . . .\
    \ . . . . . . . . 8\n    4.1.      TNVIP terminal station  . . . . . . . . . .\
    \ . . . . . 9\n    4.1.1.      Local and online states . . . . . . . . . . . .\
    \ . . 9\n    4.1.2.      Data receiving  . . . . . . . . . . . . . . . . .  10\n\
    \    4.1.3.      Data sending  . . . . . . . . . . . . . . . . . .  10\n    4.2.\
    \      TNVIP Server functions  . . . . . . . . . . . . . .  10\n    4.2.1.   \
    \   VIP Terminal Manager  . . . . . . . . . . . . . .  10\n    5.       TNVIP\
    \ Messages Format  . . . . . . . . . . . . . . .  12\n    5.1.      Address Field\
    \ . . . . . . . . . . . . . . . . . . .  12\n    5.2.      Command field . . .\
    \ . . . . . . . . . . . . . . . .  13\n    5.3.      Parameter field . . . . .\
    \ . . . . . . . . . . . . .  14\n    6.       The screen flow  . . . . . . . .\
    \ . . . . . . . . . .  14\n    6.1.      Screen data messages  . . . . . . . .\
    \ . . . . . . .  14\n    6.2.      Local state monitoring messages . . . . . .\
    \ . . . .  15\n    6.3.      Screen response messages  . . . . . . . . . . . .\
    \ .  16\n    6.3.1      Page overflow processing . . . . . . . . . . . . .  17\n\
    \    6.4.      Screen data purge indication message  . . . . . . .  17\n    7.\
    \       The printer flow . . . . . . . . . . . . . . . . . .  17\n    7.1.   \
    \   Printer data messages . . . . . . . . . . . . . . .  17\n    7.2.      Printer\
    \ response messages . . . . . . . . . . . . .  18\n    7.3.      7800 printer\
    \ status management  . . . . . . . . . .  19\n    7.4.      Printer state request\
    \ message   . . . . . . . . . .  20\n    7.5.      Printer state response messages\
    \ . . . . . . . . . .  20\n    7.6.      Printer purge indication message  . .\
    \ . . . . . . .  20\n    8.       The Screen Copy Printing flow  . . . . . . .\
    \ . . . .  21\n    8.1.      Screen copy request messages  . . . . . . . . . .\
    \ .  21\n    8.2.      Screen copy data message  . . . . . . . . . . . . .  21\n\
    \    8.3.      Screen copy response messages . . . . . . . . . . .  22\n    8.4.\
    \      Screen copy purge indication message  . . . . . . .  23\n    9.       The\
    \ TM attention . . . . . . . . . . . . . . . . . .  23\n    10.      The Break\
    \ Key  . . . . . . . . . . . . . . . . . . .  24\n    11.      The Logout Key\
    \ . . . . . . . . . . . . . . . . . . .  24\n    12.      TNVIP messages list\
    \  . . . . . . . . . . . . . . . .  24\n    12.1.     Screen Flow . . . . . .\
    \ . . . . . . . . . . . . . .  24\n    12.2.     Printer flow  . . . . . . . .\
    \ . . . . . . . . . . .  26\n    12.3.     Screen Copy Printing messages flow\
    \  . . . . . . . .  28\n    13.      Security Considerations  . . . . . . . .\
    \ . . . . . .  29\n    14.      References . . . . . . . . . . . . . . . . . .\
    \ . . .  30\n    15.      Author's Address . . . . . . . . . . . . . . . . . .\
    \  30\n"
- title: 1. Motivation
  contents:
  - "1. Motivation\n   P200 [7] and 7800 [8] VIP (Visual Information Projection) terminals\n\
    \   differ mainly from NVT terminals [1] in that they work in block mode\n   and\
    \ have the capability to manage an associated printer. Generally in\n   a DSA\
    \ (Distributed Systems Architecture) network they are managed\n   through the\
    \ VIP transmission line procedure (character oriented).\n   That is the reason\
    \ why they are generically referred as VIP\n   terminals.\n   This document specifies\
    \ the options to be modified successfully, to\n   pass from the NVT terminal emulation\
    \ supported on a Telnet\n   connection, to a VIP terminal emulation. It defines\
    \ also the format\n   of the messages exchanged between the server and the client\
    \ when the\n   TNVIP protocol is successfully negotiated.\n"
- title: 2. Background
  contents:
  - "2. Background\n   VIP terminal family includes a broad range of different terminal\n\
    \   types. They work in block mode with an ASCII or 8 binary bits set of\n   characters.\n\
    \   The Bull terminals in the DSA network environment use the services of\n  \
    \ a Terminal Manager (TM) [2]. It is generally installed in a\n   communication\
    \ processor (as a Datanet or Mainway system) where it\n   assures the connection\
    \ with the BULL host application generally\n   through a DSA session.\n   The\
    \ Terminal Manager is in charge to present the terminal station and\n   to manage\
    \ the session connection to the host computer. It offers\n   generally a possibility\
    \ of dialog with the terminal to allow the user\n   to modify the connection parameters,\
    \ to manage the session\n   (connection request, abort, etc ..). The set of commands\
    \ and\n   responses used is called \"TM Local Dialog\".\n"
- title: 3. Telnet Options and Commands Used
  contents:
  - "3. Telnet Options and Commands Used\n   The mandatory telnet parameters to be\
    \ negotiated successfully between\n   the \"TNVIP server\" and the \"TNVIP client\"\
    \ are :\n    - the Terminal-Type option [3] to define a VIP terminal model and\n\
    \      if necessary a Mailbox name to request a specific access point in\n   \
    \   the \"TNVIP server\",\n    - the End Of Record option [4] to delimit the TNVIP\
    \ message at the\n      Telnet level. As the End Of Record (EOR) code indicates\
    \ the end of\n      an effective data unit, Telnet should attempt to send the\
    \ data up\n      to and including the EOR code together to promote communication\n\
    \      efficiency.\n    Others Telnet parameters, can be optionally negotiated\
    \ as :\n    - the Binary Transmission option [5], when the terminal emulation\n\
    \      uses a 8 binary bits set of characters,\n    - the Suppress Go Ahead option\
    \ [6], when no synchronisation of the\n      data transmission from the \"TNVIP\
    \ client\" with the DSA session\n      turn or the ISO session token is needed.\n\
    \   When the two parties (the \"TNVIP server\" and the \"TNVIP client\") have\n\
    \   negotiated successfully a TNVIP terminal type and the EOR telnet\n   option,\
    \ that means they agree to respect the TNVIP protocol (the\n   TNVIP message format\
    \ and the exchange rules).\n"
- title: 3.1 Terminal type option
  contents:
  - "3.1 Terminal type option\n   IAC DO TERMINAL-TYPE\n      Sender (the \"TNVIP\
    \ server\" party) is willing to receive terminal\n      type information in a\
    \ subsequent sub-negotiation.\n   IAC WILL TERMINAL-TYPE\n      Sender (the terminal\
    \ \"TNVIP client\" party) is willing to send\n      terminal-type information\
    \ in a subsequent sub-negotiation.\n"
- title: 3.1.1 Subnegotiation of the Terminal Type
  contents:
  - "3.1.1 Subnegotiation of the Terminal Type\n   IAC SB TERMINAL-TYPE SEND IAC SE\n\
    \      Sender (the \"TNVIP server\" party) requests the receiver to\n      transmit\
    \ his next terminal-type, and switch emulation modes (if\n      more than one\
    \ terminal type is supported).\n   IAC SB TERMINAL-TYPE IS tnvip-terminal-model@MB-name\
    \ IAC SE\n      Sender (the terminal \"TNVIP client\" party) is stating the name\
    \ of\n      his current (or only) terminal-type. Optionally, a mailbox name\n\
    \      can be added to request a particular access point in the \"TNVIP\n    \
    \  server\". By default, the \"TNVIP server\" uses a generic access\n      point.\n"
- title: 3.1.2 Terminal-types supported by the TNVIP protocol
  contents:
  - "3.1.2 Terminal-types supported by the TNVIP protocol\n   The TNVIP terminal type\
    \ string given at the Telnet negotiation is\n   formatted as follows :\n     \
    \ <TNVIP-terminal-model> [ <@ character> <Mailbox-name> ]\n   The @ character\
    \ is used as separator between the VIP-terminal-model\n   and the Mailbox-name.\n"
- title: 3.1.3 TNVIP terminal models
  contents:
  - "3.1.3 TNVIP terminal models\n   The valid TNVIP terminal models are the following\
    \ ASCII character\n   strings. (The table gives for each terminal model string\
    \ the\n   hexadecimal number indicating the associated DSA model number defined\n\
    \   in the DSA terminal presentation protocols ).\n                 P200 family\
    \                      7800 family\n    -------------------------------- --------------------------------\n\
    \    !   TNVIP model  !    DSA code ! !   TNVIP model  !    DSA code !\n    --------------------------------\
    \ --------------------------------\n    !   VIP7700      !       33    ! !   VIP7804\
    \      !       3E    !\n    !   VIP7760      !       3A    ! !   VIP7804V    \
    \ !       4A    !\n    !   DKU7005      !       3D    ! !   VIP7814      !   \
    \    47    !\n    !   DKU7007D     !       40    ! !   HDS7         !       4D\
    \    !\n    !   DKU7105      !       41    ! !   VIP8800      !       4F    !\n\
    \    !   DKU7107D     !       42    ! --------------------------------\n    !\
    \   DKU7211      !       45    !\n    !   DKU7211D     !       4E    !\n    --------------------------------\n\
    \   The D character at the end of the string indicates that the terminal\n   supports\
    \ the Remote Forms function [9]. It is the capability to store\n   forms in the\
    \ terminal allowing the host application to display a form\n   stored in the terminal\
    \ sending a short length command without sending\n   all the data of the form.\
    \ This function is usually supported by the\n   terminal concentrators.\n"
- title: 3.1.4 Mailbox name
  contents:
  - "3.1.4 Mailbox name\n   The mailbox name allows the \"TNVIP client\" to request\
    \ a specialized\n   access point referenced by this name in the \"TNVIP server\"\
    . It is an\n   ASCII character string. Its presence in the Telnet terminal type\n\
    \   string is optional. When not present, a generic (default) access can\n   be\
    \ provided by the \"TNVIP server\".\n   When the \"TNVIP server\" is a gateway\
    \ to DSA hosts, the mailbox name\n   defines the DSA session access point of the\
    \ terminal in the server.\n   Its length is limited to 12 characters. Lower case\
    \ characters are\n   allowed but are processed as upper case. This string is generally\n\
    \   used to identify a specific terminal station (having a printer for\n   example)\
    \ or to use a particular declaration of this terminal in the\n   \"TNVIP server\"\
    .\n"
- title: 3.2 End of Record Option
  contents:
  - "3.2 End of Record Option\n   VIP device communications are block oriented. That\
    \ is, each partner\n   buffers data until an entire \"message\" has been built,\
    \ at which point\n   the data are sent to the other side. The end of a message\
    \ is\n   understood to be the last byte transmitted. The Telnet EOR command is\n\
    \   used to delimit these natural blocks of TNVIP data within the Telnet\n   data\
    \ stream. An <EOR> is sent at the end of each TNVIP message, in\n   both directions.\n\
    \   IAC WILL END-OF-RECORD\n      The sender of this command requests permission\
    \ to begin\n      transmission of the Telnet END-OF-RECORD (EOR) code when\n \
    \     transmitting data characters, or the sender of this command\n      confirms\
    \ it will now begin transmission of EORs with transmitted\n      data characters.\n\
    \   IAC DO END-OF-RECORD\n      The sender of this command requests that the sender\
    \ of data starts\n      transmitting the EOR code when transmitting data, or the\
    \ sender of\n      this command confirms that the sender of data is expected to\n\
    \      transmit EORs.\n"
- title: 3.3 Binary Transmission option
  contents:
  - "3.3 Binary Transmission option\n   According to the character set used by the\
    \ emulation, the \"TNVIP\n   client\" and the \"TNVIP server\" can be led to negotiate\
    \ the Telnet\n   binary transmission option.\n   If either side wishes to transmit\
    \ the decimal value 255 and have it\n   interpreted as data, it must \"double\"\
    \ this byte. In other words, a\n   single occurrence of decimal 255 will be interpreted\
    \ by the other\n   side as an IAC, while two successive bytes containing decimal\
    \ 255\n   will be treated as one data byte with a value of decimal 255.\n   IAC\
    \ DO TRANSMIT-BINARY\n      Sender requests that sender of the data starts transmitting\
    \ or\n      confirms that the sender of data is expected to transmit\n      characters\
    \ that are to be interpreted as 8 bits of binary data by\n      the receiver.\n\
    \   IAC WILL TRANSMIT-BINARY\n      Sender requests permission to begin transmitting,\
    \ or confirms it\n      will now begin transmitting binary data.\n   IAC WON'T\
    \ TRANSMIT-BINARY\n      If the connection is already being operated in binary\
    \ transmission\n      mode, the sender of this command demands to begin transmitting\n\
    \      data characters which are to be interpreted as standard NVT ASCII\n   \
    \   characters by the receiver of the data. If the connection is not\n      already\
    \ being operated in binary transmission mode, the sender of\n      this command\
    \ refuses to begin transmitting characters which are to\n      be interpreted\
    \ as binary characters by the receiver of the data\n      (i.e., the sender of\
    \ the data requests to continue transmitting\n      characters in its present\
    \ mode).\n   IAC DON'T TRANSMIT-BINARY\n      If the connection is already being\
    \ operated in binary transmission\n      mode, the sender of this command requests\
    \ that the sender of the\n      data start transmitting characters which are to\
    \ be interpreted as\n      standard NVT ASCII characters by the receiver of the\
    \ data\n      (i.e.,the party sending this command). If the connection is not\n\
    \      already being operated in binary transmission mode, the sender of\n   \
    \   this command requests that the sender of data continue\n      transmitting\
    \ characters which are to be interpreted in the present\n      mode.\n"
- title: 3.4 Suppress Go Ahead option
  contents:
  - "3.4 Suppress Go Ahead option\n   The \"TNVIP client\" can use the receiving of\
    \ the Telnet GoAhead\n   command as the signal allowing the terminal operator\
    \ to transmit\n   data. That can allow the synchronisation between the data transmitted\n\
    \   from the terminal and the DSA \"turn\".\n   When the Suppress Go Ahead option\
    \ is not negotiated, the \"TNVIP\n   server\" must send the Telnet Go Ahead command\
    \ (GA) when its input\n   message queue (from the \"TNVIP client\") is empty and\
    \ the DSA turn is\n   at the terminal side, to invite the terminal to transmit\
    \ some data.\n   To suppress this mechanism, the \"TNVIP client\" can request\
    \ the no\n   sending of the Telnet GoAhead commands by the \"TNVIP server\",\n\
    \   negotiating the Suppress GO Ahead option of the Telnet Protocol.\n   In this\
    \ case, the terminal transmission to the \"TNVIP server\" is\n   synchronised\
    \ on the transport credit.\n   Note: The Telnet GA command never need to be sent\
    \ by the \"TNVIP\n         client\" even if the telnet Suppress Go Ahead has not\
    \ been\n         negotiated.\n   IAC DO SUPPRESS-GO-AHEAD\n   The sender of this\
    \ command (the \"TNVIP client\" party) requests that\n   the sender of data starts\
    \ suppressing GA when transmitting data.\n   IAC WILL SUPPRESS-GO-AHEAD\n    \
    \  The sender of this command (the \"TNVIP server\" party) confirms it\n     \
    \ will now begin suppressing transmission of GAs with transmitted\n      data\
    \ characters.\n   IAC DON'T SUPPRESSS-GO-AHEAD\n      The sender of this command\
    \ (the \"TNVIP client\" party) requests\n      that the receiver of the command\
    \ start transmitting GAs when\n      transmitting data.\n   IAC WON'T SUPPRESS-GO-AHEAD\n\
    \      The sender of this command (the \"TNVIP server\" party) confirms it\n \
    \     will now begin transmitting the GA character when transmitting\n      data\
    \ characters.\n"
- title: 4. TNVIP functions
  contents:
  - "4. TNVIP functions\n   The TNVIP protocol allows the following functions :\n\
    \    - Support of a VIP terminal emulation addressing the screen and its\n   \
    \   associated printer .\n    - Selection of the terminal type model at the connection\
    \ time.\n    - Specific or generic access to the \"TNVIP server\" by referencing\
    \ or\n      not a Mailbox name.\n    - TNVIP protocol independent of the terminal\
    \ data presentation\n      protocol (7800 or P200).\n    - Support of the DSA\
    \ End To End Acknowledgement.\n    - Support of the DSA Terminal Manager local\
    \ attention.\n    - Support of the DSA turn to the terminal side.\n    - Support\
    \ of the DSA secret read.\n    - Control of the hard copy.\n"
- title: 4.1 TNVIP terminal station
  contents:
  - "4.1 TNVIP terminal station\n   The \"TNVIP client\" acts as the interface adapter\
    \ between the TNVIP\n   connection and an application program. The \"TNVIP client\"\
    \ is mainly\n   defined to support a VIP terminal emulation program but can be\
    \ used\n   by other else program using the TNVIP protocol.\n   A VIP terminal\
    \ emulation manages:\n    - a screen buffer,\n    - a printer buffer if it supports\
    \ the associated printer,\n    - the interface with the communication line\n \
    \  and runs using the following rules:\n   When the VIP terminal emulation exchanges\
    \ a message on the\n   communication line, it is in the BUSY state until the end\
    \ of the\n   message exchange. That means when the VIP terminal is sending a\n\
    \   message it can't receive and when it is receiving a message it can't\n   send.\n\
    \   Note: If a VIP terminal works in the half duplex mode, as the TNVIP\n    \
    \     protocol uses a Telnet connection it allows a full duplex\n         mode\
    \ processing.\n"
- title: 4.1.1 Local and online states
  contents:
  - "4.1.1 Local and online states\n   The VIP terminal has the capability to switch\
    \ between these two\n   states. The LOCAL state is generally used to process local\
    \ terminal\n   tests or to modify the configuration. In this state, the data coming\n\
    \   from the line are ignored.\n   The LOCAL state allows the \"TNVIP client\"\
    \ to request to the server\n   the screen and printer data flows to be suspended.\n\
    \   The ONLINE state indication allows the \"TNVIP server\" to resume the\n  \
    \ screen and printer flows.\n   For these reasons the TNVIP protocol differentiates\
    \ the screen and\n   printer flows from the screen copy printing flow and defines\
    \ to\n   report the two states to the \"TNVIP server\".\n"
- title: 4.1.2 Data receiving
  contents:
  - "4.1.2 Data receiving\n   When a VIP terminal emulation receives a data message\
    \ from the line,\n   according to the address given in the header message,it sends\
    \ data to\n   the screen buffer or to the printer buffer.\n   A message received\
    \ at the screen or printer address is deleted and\n   ignored if the terminal\
    \ emulation is in the LOCAL state and a BUSY\n   status is returned.\n   The printer\
    \ buffer is busy when the terminal is transmitting the data\n   from the printer\
    \ buffer to the printer device. A data message for the\n   printer is deleted\
    \ and ignored if the terminal is in the printing\n   state and a BUSY status is\
    \ returned.\n   When a BUSY state is encountered, the \"TNVIP client\" according\
    \ to the\n   type of message received (request or indication) reports or not the\n\
    \   BUSY acknowledgement to the \"TNVIP server\".\n"
- title: 4.1.3 Data sending
  contents:
  - "4.1.3 Data sending\n   A VIP terminal emulation can send message even if the\
    \ terminal is in\n   the LOCAL state.\n"
- title: 4.2 TNVIP Server functions
  contents:
  - '4.2 TNVIP Server functions

    '
- title: 4.2.1 VIP Terminal Manager
  contents:
  - "4.2.1 VIP Terminal Manager\n   Its function is to act as a gateway between the\
    \ VIP terminal and the\n   VIP application. Generally the application is a remote\
    \ DSA\n   application.\n   It manages the screen and printer devices of the VIP\
    \ terminal\n   station.\n   In the following example figure, the \"TNVIP server\"\
    \ is a DSA server\n   and manages three VIP terminal units TU1, TU2 and TU3.\n\
    \    Generic access\n    --------------\n              !----> LD 1S ----> DV 1S\
    \ (screen)  ---->!\n    MB 1 --> SN 1                                     TU 1\n\
    \              !----> LD 1P ----> DV 1P (printer) ---->!\n    Specific accesses\n\
    \    -----------------\n              !----> LD 2S ----> DV 2S (screen)  ---->TU\
    \ 2\n    MB 2 --> SN 2\n              !----> LD 2P ----> !\n                 \
    \                !\n              !----> LD 3P ----> DV 3S (printer) ---->!\n\
    \    MB 3 --> SN 3                                     TU 3\n              !---->\
    \ LD 3S ----> DV 3P (screen)  ---->!\n   Each Terminal Unit (TU object) is declared\
    \ as containing one or two\n   devices (DV objects). The Terminal Manager maps\
    \ this physical\n   representation to a logical representation where the station\
    \ (SN\n   object) is the logical representation of a terminal unit, and the\n\
    \   logical device (LD) object a logical representation of the real\n   device.\n\
    \    - TU1 will be chosen by default on generic request (without mailbox\n   \
    \   name) or by the MB1 name addressing on specific request. It can\n      manage\
    \ the associated printer device.\n    - MB2 will be addressed to access the TU2\
    \ terminal unit. TU2 is\n      defined in a specific way because it will be presented\
    \ to the host\n      application as a station composed of a screen (the TU2 one's)\
    \ and\n      a printer (the TU3 one's).\n    - MB3 will be addressed to access\
    \ TU3 terminal unit. TU3 is also\n      defined in a specific way because the\
    \ printer device is shared by\n      several logical stations (SN2 and SN3) and\
    \ must be well\n      identified.\n"
- title: 5. TNVIP Messages Format
  contents:
  - "5. TNVIP Messages Format\n   Each TNVIP message is delimited by the Telnet EOR\
    \ command.\n   Therefore, a TNVIP message has the following format:\n    <TNVIP\
    \ Header> <parameters> <IAC EOR>\n   The TNVIP header is mandatory and have a\
    \ fixed length of two bytes.\n   Some TNVIP messages need no parameter. In this\
    \ case, the TNVIP\n   message has the following construction:\n    <TNVIP Header>\
    \ <IAC EOR>\n   It is strongly recommended that Telnet commands (other than IAC\
    \ IAC)\n   should be sent between TNVIP messages, with no TNVIP header and no\n\
    \   trailing IAC EOR. If a TNVIP data message containing any other IAC-\n   command\
    \ sequence (other than IAC IAC) is received, it is\n   implementation dependent\
    \ when the IAC-command sequence will be\n   processed, but it must be processed.\
    \ The receiver may process it\n   immediately, which in effect causes it to be\
    \ processed as if it had\n   been received before the current TNVIP message, or\
    \ the processing may\n   be deferred until after the current TNVIP message has\
    \ been processed.\n   It is because of this ambiguity that the presence of Telnet\
    \ commands\n   within a TNVIP message is not recommended; neither \"TNVIP client\"\
    s\n   nor \"TNVIP server\"s should send such data.\n   The TNVIP header contains\
    \ 2 bytes. The first one indicates the\n   address <ADR> and the second the command\
    \ <CDE>.\n"
- title: 5.1 Address Field
  contents:
  - "5.1 Address Field\n   The <ADR> address field is mandatory and is defined on\
    \ one byte.\n   The TNVIP protocol defines 3 addresses:\n    - ADR = SCREEN  =\
    \ 96 (0x60) for the screen commands flow,\n    - ADR = PRINTER = 104 (0x68) for\
    \ the printer commands flow,\n    - ADR = SCPM    = 105 (0x69) for the screen\
    \ copy printing commands\n      flow.\n   A request message with an unknown or\
    \ unsupported address will be\n   discarded by the receiver which replies with\
    \ a NOT-AVAILABLE response\n   message.\n"
- title: 5.2 Command field
  contents:
  - "5.2 Command field\n   The <CDE> command field is mandatory and defined on one\
    \ byte.\n   The command byte <CDE> is structured as follows:\n    <Command-Type><Message-Type>\n\
    \    - The Command-Type fills the six most significant bits of the <CDE>\n   \
    \   byte. The most significant bit is always 0.\n      Its value is ranged from\
    \ 0 to 31 included. It defines the command\n      associated to the message for\
    \ the flow identified by the address\n      field.\n    - The Message-Type fills\
    \ the two less significant bits of the <CDE>\n      byte.\n      0 = Indication\
    \ message. No response message is expected. An\n      indication message with\
    \ an undefined command type or with an\n      unknown address is deleted and ignored.\n\
    \      1 = Request message. The sender of a request message is waiting\n     \
    \ for a response message having the same address value. When a\n      request\
    \ message is sent for a given address, it is not allowed to\n      send another\
    \ request to the same address before the receiving\n      response. If an end\
    \ point receives a request before having sent\n      the response of the previous\
    \ request, it deletes the second\n      request but have to send back a PROTOCOL-VIOLATION\
    \ response after\n      the response of the first request. A request message with\
    \ a not\n      defined address is replied to by a NOT-AVAILABLE response message.\n\
    \      A request message with an unknown or unsupported command <CDE> for\n  \
    \    this address will be deleted by the receiver and replied to by an\n     \
    \ UNKNOWN-COMMAND response message.\n      2 = Response message. This message\
    \ is the response to the current\n      request message. The receiver of this\
    \ message is allowed to send\n      another request message on the flow defined\
    \ by the ADR field.\n      3 = Response and request message. This message is a\
    \ positive\n      response to the current request message sent by the receiver,\
    \ but\n      is also a request message.\n   The following table gives the <CDE>\
    \ commands list with their\n   hexadecimal values\n    Command          Indication\
    \  Request  Response  Resp/Req\n    --------------------------------------------------------\n\
    \    DATA                00         01\n    PASSW               04         05\n\
    \    ACK                                      0A\n    ERROR                  \
    \                  0E\n    BUSY                                     12\n    ABORTED\
    \                                  16\n    PURGED                            \
    \       1A\n    NOT-AVAILABLE                            1E\n    PROTOCOL-VIOLATION\
    \                       22\n    UNKNOWN-COMMAND                          26\n\
    \    PURGE               28\n    LOCAL-STATE                    2D\n    ONLINE-STATE\
    \        30\n    STATE-REQ                      35\n    READY                \
    \                    3A\n    STANDBY                                  3E\n   \
    \ COPY-REQ                       41\n    LOCAL-COPY                          \
    \               47\n"
- title: 5.3 Parameter field
  contents:
  - "5.3 Parameter field\n   This field has a variable length and its content is depending\
    \ on the\n   two previous fields (address and command).\n"
- title: 6. The screen flow
  contents:
  - "6. The screen flow\n   All the following messages contain the value SCREEN =\
    \ 96 (0x60) in\n   the ADR field.\n"
- title: 6.1 Screen data messages
  contents:
  - "6.1 Screen data messages\n   These messages are defined to transport in the parameter\
    \ field of the\n   TNVIP message, the data in the terminal presentation negotiated\
    \ by\n   the \"Terminal Type\" telnet command.\n   The parameter has the following\
    \ format:\n    <FC1> <FC2> <STX> < screen data>\n    - The FC1, FC2 bytes are\
    \ the functions codes of the VIP procedure\n      transmission [9]. Their values\
    \ are comprised between 32 (0x20)\n      included and 127 (0x7F) included.\n \
    \   - The STX byte is defined by the value 2 and acts as the introducer\n    \
    \  of the screen data.\n   A screen data message can be sent in a request or in\
    \ an indication\n   message. The command values are defined as follows:\n    <CDE>\
    \ = DATA indication = 0\n    <CDE> = DATA request = 1\n    <CDE> = PASSWORD indication\
    \ = 4\n    <CDE> = PASSWORD request = 5\n   Generally, the \"TNVIP server\" only\
    \ sends indication messages to the\n   screen. The request message is used mainly\
    \ for the printer device.\n   But a DSA/TNVIP gateway server should use the screen\
    \ data request\n   message when it processes a DSA end to end acknowledgement\
    \ request\n   from the DSA application and synchronizes the response message\n\
    \   receipt with the DSA end to end acknowledgement.\n   The password request\
    \ and the password indication message are defined,\n   to be used by the programs\
    \ in the \"TNVIP client\" machine which don't\n   emulate terminal. In this way,\
    \ they have the indication that a secret\n   read (password acquisition) is requested\
    \ by the \"TNVIP server\". When\n   the program is a terminal emulation this information\
    \ is not necessary\n   because the data contains the terminal presentation command\
    \ to\n   request this secret read.\n"
- title: 6.2 Local state monitoring messages
  contents:
  - "6.2 Local state monitoring messages\n   Before to switch in the local state,\
    \ the \"TNVIP client\" sends a\n   LOCAL-STATE request message to the \"TNVIP\
    \ server\". This last one\n   sends back an acknowledgement message and suspends\
    \ the screen and\n   printer data flow until it receives a LINE-STATE indication\
    \ message.\n   Note: In the local state, only the messages from the \"TNVIP server\"\
    \n         to the screen or printer devices are deleted. The messages\n      \
    \   from the \"TNVIP client\" screen device or the messages\n         associated\
    \ to others addresses are allowed.\n   The following command values are defined\
    \ as:\n    <CDE> = LOCAL-STATE request = 45 (0x2D). It is sent by the \"TNVIP\n\
    \    client\". There is no parameter field.\n    <CDE> = ONLINE-STATE indication\
    \ = 48 (0x30). It is sent by the\n    \"TNVIP client\" to indicate the \"TNVIP\
    \ server\" is allowed to resume\n    the screen data flow. There is no parameter\
    \ field.\n"
- title: 6.3 Screen response messages
  contents:
  - "6.3 Screen response messages\n   These messages are indications used to respond\
    \ to the screen data\n   request previously received.\n   The command values are\
    \ defined as follows:\n    <CDE> = ACK response indication = 10 (0x0A). The screen\
    \ data\n    previously received has been well processed or the LOCAL STATE is\n\
    \    acknowledged by the \"TNVIP server\". There is no parameter field.\n    <CDE>\
    \ = ERR response indication = 14 (0x0E). The screen data\n    previously received\
    \ has not been correctly processed. There is no\n    parameter field.\n    <CDE>\
    \ = BUSY response indication = 18 (0x12). The screen data\n    previously received\
    \ has been deleted because the terminal is in the\n    local state. There is no\
    \ parameter field.\n    <CDE> = ABORTED response indication = 22 (0x16). The receipt\
    \ of the\n    screen data request has been aborted by a reset terminal command.\n\
    \    There is no parameter field.\n    <CDE> = PURGED response indication = 26\
    \ (0x1A). The processing of\n    the screen data request has been aborted by a\
    \ purge indication\n    message. There is no parameter field.\n    <CDE> = NOT-AVAILABLE\
    \ response indication = 30 (0x1E). The screen\n    device is not supported. Normally\
    \ this command has never to be\n    generated because the screen device should\
    \ always be present. There\n    is no parameter field.\n    <CDE> = PROTOCOL-VIOLATION\
    \ response indication = 34 (0x22). The\n    screen request received has been deleted\
    \ because an other screen\n    request is already in process. That means several\
    \ screen request\n    messages have been sent without waiting for the response.\
    \ It is a\n    consequence of the non-compliance of the protocol. There is no\n\
    \    parameter field.\n    <CDE> = UNKNOWN-COMMAND response indication = 38 (0x26).\
    \ The screen\n    request received has been deleted because the <CDE> field value\
    \ is\n    unknown. It is a consequence of the non-compliance of the protocol.\n\
    \    There is no parameter field.\n"
- title: 6.3.1 Page overflow processing
  contents:
  - "6.3.1 Page overflow processing\n   The page overflow processing is not supported\
    \ through the TNVIP\n   protocol to avoid the retransmission of the message. That\
    \ leads the\n   \"TNVIP client\" side to process it locally. When a data message\n\
    \   induces a page overflow, the terminal emulation alerts the user\n   possibly\
    \ requesting (in manual mode) an \"enter\" action before\n   clearing the screen\
    \ and reprocessing the data received.\n   Note: When the \"TNVIP client\" is processing\
    \ a page overflow , the\n         terminal emulation should be in the BUSY state\
    \ and should\n         stop getting message from the line (\"TNVIP server\") until\
    \ the\n         page overflow processing is complete.\n"
- title: 6.4 Screen data purge indication message
  contents:
  - "6.4 Screen data purge indication message\n   This message is used to purge the\
    \ current screen request message.\n   When the side which receive the message\
    \ has not already acknowledged\n   the screen request, it tries to abort the processing\
    \ of the request\n   and returns a screen purged response message. If it has already\n\
    \   replied, it ignores and deletes the message.\n   The following command value\
    \ is defined as:\n    <CDE> = PURGE indication = 40 (0x28). There is no parameter\
    \ field.\n"
- title: 7. The printer flow
  contents:
  - "7. The printer flow\n   All the following messages contain the PRINTER value\
    \ 104 (0x68) in\n   the ADR field. The support of this address is optional. If\
    \ the \"TNVIP\n   server\" doesn't address this device, no message with this address\n\
    \   will be exchanged. If the \"TNVIP client\" receives a request message\n  \
    \ with this address and does not support the printer, it replies with a\n   printer\
    \ NOT-AVAILABLE response message.\n"
- title: 7.1 Printer data messages
  contents:
  - "7.1 Printer data messages\n   These messages are defined to transport the printer\
    \ data in the\n   parameter field of the TNVIP message. These messages are only\
    \ sent\n   from the \"TNVIP server\" to the \"TNVIP client\".\n   The parameter\
    \ has the following format:\n    <FC1> <FC2> <STX> <printer data>\n    - The FC1,\
    \ FC2 bytes are the function codes of the VIP procedure\n      transmission. Their\
    \ values are ranged from  32 (0x20) to 127\n      (0x7F) included.\n    - The\
    \ STX byte is defined by the value 2 and acts as the introducer\n      of the\
    \ printer data.\n   To manage correctly the printer device, the protocol only\
    \ defines\n   request message. Whereas the \"TNVIP server\" is ensured than the\n\
    \   \"TNVIP client\" processes a screen data message only when the previous\n\
    \   one have been processed. When it receives a printer data message, the\n  \
    \ \"TNVIP client\" transfers it in the printer buffer. The terminal is\n   busy\
    \ only during this transfer. So, if the \"TNVIP client\" receives\n   another\
    \ printer data it deletes them because the previous printing\n   (transfer between\
    \ the printer buffer and the printer) is not ended.\n   The printer data structure\
    \ depends on the terminal presentation\n   family (P200 or 7800). The two presentations\
    \ define two modes of\n   printing. The first one needs the printer data are in\
    \ the\n   presentation of the screen (7800 or P200 commands) and data are\n  \
    \ converted by the terminal in the printer presentation (TTY, SDP,\n   copy. The\
    \ second mode allows to give the printer data in the real\n   presentation of\
    \ the printer. For this reason it is called\n   \"transparent print\".\n   In\
    \ the P200 terminal presentation, transparent print data are\n   introduced by\
    \ the sequence of the two ASCII characters ESC Z (0x1B\n   0x5A ). P200 formatted\
    \ print are introduced by the sequence of two\n   ASCII characters ESC X (0x1B\
    \ 0x58) or ESC Y (0x1B 0x59).\n   In the 7800 terminal presentation, transparent\
    \ print data are\n   introduced by the command PTD (Print Transparent Data). 7800\n\
    \   formatted print are introduced by the command PHD (Print Host Data).\n   \
    \ <CDE> = DATA request = 1 (0x01).\n"
- title: 7.2 Printer response messages
  contents:
  - "7.2 Printer response messages\n   These messages are used to report the printing\
    \ end status of the\n   printer data request previously received.\n   The following\
    \ command values are defined as:\n    <CDE> = ACK response indication = 10 (0x0A).\
    \ The printer data\n    previously received have been well processed.\n    <CDE>\
    \ = ERR response indication = 14 (0x0E). The printer data\n    previously received\
    \ have not been correctly processed (invalid\n    command, buffer overflow , printer\
    \ off...)\n    <CDE> = BUSY response indication = 18 (0x12). The printer data\n\
    \    received have been deleted because the previous printing request is\n   \
    \ not ended. Several printer data request messages have been sent\n    without\
    \ waiting for the response.\n    <CDE> = ABORTED  response indication = 22 (0x14).\
    \ The printing has\n    been aborted by the terminal operator.\n    <CDE> = PURGED\
    \ response indication = 26 (0x18). The printing request\n    has been aborted\
    \ by a printer data purge indication message.\n    <CDE> = NOT-AVAILABLE response\
    \ indication = 30 (0x1E). The printer\n    device is not supported.\n    <CDE>\
    \ = PROTOCOL-VIOLATION response indication = 34 (0x22). The\n    printer request\
    \ received has been deleted because an other printer\n    request is already in\
    \ process. That means several printer request\n    messages have been sent without\
    \ waiting for the response. It is a\n    consequence of the non-compliance of\
    \ the protocol. There is no\n    parameter field.\n    <CDE> = UNKNOWN-COMMAND\
    \ response indication = 38 (0x26). The\n    printer request received has been\
    \ deleted because of an unknown\n    <CDE> field value. It is a consequence of\
    \ the non-compliance of the\n    protocol. There is no parameter field.\n    For\
    \ all the above commands, the parameter field may contain\n    specific terminal\
    \ status if one was requested in the printer data\n    received (response to PDENQ\
    \ 7800 terminal presentation command).\n"
- title: 7.3 7800 printer status management
  contents:
  - "7.3 7800 printer status management\n   When emulating a 7800 terminal [8], the\
    \ \"TNVIP client\" takes charge\n   of adding to the printer data the printer\
    \ differed status request\n   (PDENQ 7800 command) to synchronize the printing\
    \ end with the sending\n   of the printer acknowledgement response.\n   Some DSA\
    \ applications are written to manage the 7800 printer status,\n   so they send\
    \ themselves the printer status request at the beginning\n   of the printer data.\
    \ That is the reason why when the \"TNVIP client\"\n   receives this command at\
    \ the beginning of the printer data, it must\n   send back the 7800 status response\
    \ in the parameter field of the\n   printer data response message.\n   The 7800\
    \ terminal presentation defines also immediate printer status\n   request and\
    \ response (PENQ which allows to get an immediate response\n   indicating the\
    \ current printer status). These commands have to be\n   exchanged in the TNVIP\
    \ screen data flow.\n"
- title: 7.4 Printer state request message
  contents:
  - "7.4 Printer state request message\n   This message is sent by the \"TNVIP server\"\
    \ to know the printer state\n   of the \"TNVIP client\" without sending printer\
    \ data.\n   The following command value is defined as:\n    <CDE> = STATE-REQ\
    \ request = 53 (0x35). There is no parameter field.\n"
- title: 7.5 Printer state response messages
  contents:
  - "7.5 Printer state response messages\n   These messages are sent by the \"TNVIP\
    \ client\" in order to report the\n   printer state to the \"TNVIP server\".\n\
    \   The following command values are defined as:\n    <CDE> = READY response indication\
    \ = 58 (0x3A). The printer state is\n    ready to print. There is no parameter\
    \ field.\n    <CDE> = STANDBY response indication = 62 (0x3E). The printer device\n\
    \    is in standby and is temporarily unavailable. There is no parameter\n   \
    \ field.\n    <CDE> = PURGED response indication = 26 (0x1A). The printer state\n\
    \    request has been aborted by a printer state purge indication\n    message.\
    \ There is no parameter field.\n    <CDE> = NOT-AVAILABLE response indication\
    \ = 30 (0x1E). The printer\n    device is not supported. There is no parameter\
    \ field.\n    <CDE> = PROTOCOL-VIOLATION response indication = 34 (0x22). The\n\
    \    printer state request received has been deleted because an other\n    printer\
    \ request is already in process. That means several printer\n    request messages\
    \ have been sent without waiting for the response. It\n    is a consequence of\
    \ the non-compliance of the protocol. There is no\n    parameter field.\n    <CDE>\
    \ = UNKNOWN-COMMAND response indication = 38 (0x26). The printer\n    state request\
    \ received has been deleted because the <CDE> field\n    value is unknown. It\
    \ is a consequence of the non-compliance of the\n    protocol. There is no parameter\
    \ field.\n"
- title: 7.6 Printer purge indication message
  contents:
  - "7.6 Printer purge indication message\n   This message is used by the \"TNVIP\
    \ server\" to purge the current\n   printer request message. When the \"TNVIP\
    \ client\" receives this\n   message, if it has not already acknowledged the printer\
    \ data, it\n   aborts the printing and returns a printer data purge acknowledgement\n\
    \   response message. If it has already replied, it ignores and deletes\n   the\
    \ message.\n   The printer purge command value is defined as:\n    <CDE> = PURGE\
    \ indication = 40 (0x28). There is no parameter field.\n"
- title: 8. The Screen Copy Printing flow
  contents:
  - "8. The Screen Copy Printing flow\n   All the following messages contain the SCPM\
    \ address value 105 (0x69)\n   in the ADR field. The support of this address is\
    \ mandatory.\n"
- title: 8.1 Screen copy request messages
  contents:
  - "8.1 Screen copy request messages\n   As the printer device can be used by the\
    \ \"TNVIP server\", if the\n   terminal user wishes a screen copy printing, the\
    \ \"TNVIP\" client has\n   to synchronize the user request with the \"TNVIP server\"\
    \ printing .\n   The TNVIP protocol defines that the \"TNVIP client\" has to inform\
    \ the\n   \"TNVIP server\" when it wants to print a screen copy and waits for\
    \ its\n   authorization before beginning\n   The following command values are\
    \ defined as:\n    <CDE> = COPY-REQ request = 65 (0x41). It is used from the \"\
    TNVIP\n    client\" to the \"TNVIP server\" to request a screen copy printing.\n\
    \    <CDE> = LOCAL-COPY response and request = 71 (0x47). It is sent by\n    the\
    \ \"TNVIP server\" to acknowledge the COPY-REQ message indicating\n    the screen\
    \ copy can be done locally. It is also a request message\n    because it is equivalent\
    \ to a screen copy data request message and\n    the \"TNVIP server\" is waiting\
    \ for a screen copy response message\n    from the \"TNVIP client\" but on the\
    \ SCPM flow. There is no parameter\n    field.\n"
- title: 8.2 Screen copy data message
  contents:
  - "8.2 Screen copy data message\n   They are defined in order to transport in the\
    \ parameter of the\n   message the screen copy data in the terminal presentation.\
    \ It is used\n   by the \"TNVIP client\" when it wants to send the screen copy\
    \ data\n   directly to the DSA application (a VIP terminal using a VIP\n   transmission\
    \ procedure indicates this special request by the STA byte\n   =PRT=0x1A).\n \
    \  The parameter field has the following format:\n    <FC1> <FC2> <STX> <screen-copy-data>\n\
    \    - The FC1, FC2 bytes are the functions codes of the VIP procedure\n     \
    \ transmission. Their values are ranged from 32 (0x20) to 127\n      (0x7F) included.\n\
    \    - The STX byte is defined by the value 2 and acts as the introducer\n   \
    \   of the screen data.\n   Screen copy data message can be sent in a request\
    \ or indication\n   message.\n   The command values are defined as follows:\n\
    \    <CDE> = DATA indication = 0\n    <CDE> = DATA request = 1\n"
- title: 8.3 Screen copy response messages
  contents:
  - "8.3 Screen copy response messages\n   These messages are sent by the \"TNVIP\
    \ client\" (local copy) to report\n   the end of printing status of the screen\
    \ copy.\n   The ACK response is also used by the \"TNVIP server\" to acknowledge\
    \ a\n   screen copy data request sent to the host application.\n   The ERR message\
    \ is also used by the server to refuse a COPY-REQ\n   message.\n   The following\
    \ command values are defined as:\n    <CDE> = ACK response indication = 10 (0x0A).\
    \ The \"TNVIP client\"\n    reports the screen copy has been well printed or the\
    \ \"TNVIP server\"\n    acknowledges the screen copy data request. There is no\
    \ parameter\n    field.\n    <CDE> = ERR response indication = 14 (0x0E). The\
    \ screen copy has not\n    been correctly printed (invalid command, buffer overflow\
    \ ...) or has\n    been refused by the \"TNVIP server\". It can optionally contain\
    \ a\n    reason code value defined on one byte.\n    - 1 : The printer is busy,\
    \ retry later.\n    <CDE> = BUSY response indication = 18 (0x12). The screen copy\
    \ has\n    not been correctly printed because the printer device is already\n\
    \    printing. There is no parameter field.\n    <CDE> = ABORTED  response indication\
    \ =22 (0x16). The screen copy has\n    been aborted by the terminal operator.\
    \ There is no parameter field.\n    <CDE> = PURGED response indication = 26 (0x1A).\
    \ The screen copy\n    request message has been aborted by a purge indication\
    \ message.\n    There is no parameter field.\n    <CDE> = NOT-AVAILABLE response\
    \ indication = 30 (0x1E). The screen\n    copy has not been correctly printed\
    \ because the printer device is\n    not supported. There is no parameter field.\n\
    \    <CDE> = PROTOCOL-VIOLATION response indication = 34 (0x22). The\n    screen\
    \ copy request received has been deleted because an other\n    screen copy request\
    \ is already in process. That means several screen\n    copy request messages\
    \ have been sent without waiting for the\n    response. It is a consequence of\
    \ the non-compliance of the protocol.\n    There is no parameter field.\n    <CDE>\
    \ = UNKNOWN-COMMAND response indication = 38 (0x26). The screen\n    copy request\
    \ received has been deleted because the <CDE> field value\n    is unknown. It\
    \ is a consequence of the non-compliance of the\n    protocol. There is no parameter\
    \ field.\n"
- title: 8.4 Screen copy purge indication message
  contents:
  - "8.4 Screen copy purge indication message\n   This message is used to purge the\
    \ current screen copy request\n   message. When the \"TNVIP server\" or the \"\
    TNVIP client\" receives this\n   message, if it has not already acknowledged the\
    \ request message, it\n   returns a screen copy purge acknowledgement message.\
    \ If it has\n   already replied, it ignores and deletes the message.\n   The following\
    \ command value is defined as:\n    <CDE> = PURGE indication = 40 (0x28).There\
    \ is no parameter field.\n"
- title: 9. The TM attention
  contents:
  - "9. The TM attention\n   The TM attention is the signal used to activate the local\
    \ dialog of\n   the DSA Terminal Manager.\n   The Telnet Abort Output (AO) command\
    \ [1] is the mechanism used to\n   implement the TM attention key support in TNVIP.\n\
    \   IAC AO (0xFF 0xF5)\n   In order to implement the TM attention key support,\
    \ \"TNVIP clients\"\n   should provide a key (or combination of keys) that is\
    \ identified as\n   mapping to the TM attention key. When the user presses this\
    \ key(s),\n   the \"TNVIP client\" should transmit a Telnet AO command to the\
    \ \"TNVIP\n   server\".\n   Upon receipt of the AO command, a \"TNVIP server\"\
    \ that implements the\n   DSA Terminal Manager should enter in what will be loosely\
    \ termed \"TM\n   Local Dialog\", suspending the eventual DSA host connection,\
    \ else it\n   should simply ignore it.\n"
- title: 10. The Break Key
  contents:
  - "10. The Break Key\n   Generally, there is no break key on the real VIP terminal.\
    \ The break\n   signal is transmitted to the host application through a TM local\n\
    \   dialog command ($*$BRK for example)\n   On \"TNVIP client\" emulating VIP\
    \ terminal, it is often possible to map\n   the break signal on a special key\
    \ combination or by other way (using\n   mouse ...).\n   The Telnet Break (BRK)\
    \ command [1] is used to map the Break signal of\n   the TNVIP.\n   IAC BRK (0xFF\
    \ 0xF3)\n"
- title: 11. The Logout Key
  contents:
  - "11. The Logout Key\n   The Telnet Interrupt Process (IP) command [1] can be used\
    \ to map the\n   logout command of the TM Local Dialog ($*$LO for example) if\
    \ it is\n   implemented on the \"TNVIP server\".\n   IAC IP (0xFF 0xF4)\n"
- title: 12. TNVIP messages list
  contents:
  - "12. TNVIP messages list\n   All the TNVIP commands are summarized here after\
    \ (and the values are\n   given in hexadecimal).\n"
- title: 12.1 Screen Flow
  contents:
  - "12.1 Screen Flow\n   Data request (allowed in the two ways)\n    SCREEN DATA-REQ\
    \ <FC1> <FC2> STX [<screen-data>]  IAC EOR\n    60     01       <FC1> <FC2> 02\
    \  [<screen-data>]  FF  EF\n    - Allowed responses to the screen Data request.\n\
    \      SCREEN ACK  IAC EOR\n      60     0A   FF  EF\n      SCREEN ERROR  IAC\
    \ EOR\n      60     0E     FF  EF\n      SCREEN BUSY  IAC EOR\n      60     12\
    \    FF  EF\n      SCREEN ABORTED  IAC EOR\n      60     16       FF  EF\n   \
    \   SCREEN PURGED  IAC EOR\n      60     1A      FF  EF\n   Password request (only\
    \ from the \"TNVIP server\" to the \"TNVIP client\")\n    SCREEN PASSW-REQ <FC1>\
    \ <FC2> STX [<screen-data>]  IAC EOR\n    60     05        <FC1> <FC2> 02  [<screen-data>]\
    \  FF  EF\n    - Allowed responses to the password request.\n      SCREEN ACK\
    \  IAC EOR\n      60     0A   FF  EF\n      SCREEN ERROR  IAC EOR\n      60  \
    \   0E     FF  EF\n      SCREEN BUSY  IAC EOR\n      60     12    FF   EF\n  \
    \    SCREEN ABORTED  IAC EOR\n      60     16       FF  EF\n      SCREEN PURGED\
    \  IAC EOR\n      60     1A      FF  EF\n   Local state request (only from the\
    \ \"TNVIP client\" to the \"TNVIP\n   server\").\n    SCREEN LOCAL-ST IAC EOR\n\
    \    60     2D       FF  EF\n    - Allowed responses to the Local state request.\n\
    \      SCREEN ACK  IAC EOR\n      60     0A   FF  EF\n      SCREEN PURGED  IAC\
    \ EOR\n      60 1A FF EF\n   Responses to request violating the TNVIP protocol\
    \ (allowed in the two\n   ways)\n    SCREEN NOT-AVAIL  IAC EOR\n    60     0E\
    \         FF  EF\n    SCREEN PROT-VIOL  IAC EOR\n    60     22         FF  EF\n\
    \    SCREEN UNKN-CDE  IAC EOR\n    60     26        FF  EF\n   Indications (allowed\
    \ in the two ways)\n    SCREEN DATA-IND <FC1> <FC2> STX [<screen-data>]  IAC EOR\n\
    \    60     00       <FC1> <FC2> 02  [<screen-data>]  FF  EF\n    SCREEN PURGE\
    \  IAC EOR\n    60     28     FF  EF\n   Password indication (only from the \"\
    TNVIP server\" to the \"TNVIP\n   client\").\n    SCREEN PASSW-IND <FC1> <FC2>\
    \ STX [<screen-data>]  IAC EOR\n    60     04        <FC1> <FC2> 02  [<screen-data>]\
    \  FF  EF\n   On line state indication (only from the \"TNVIP client\" to the\
    \ \"TNVIP\n   server\").\n    SCREEN ONLINE-ST  IAC EOR\n    60     30       \
    \  FF  EF\n"
- title: 12.2 Printer flow
  contents:
  - "12.2 Printer flow\n   Data request (only from the \"TNVIP server\" to the \"\
    TNVIP client\")\n    PRINTER DATA-REQ <FC1> <FC2> STX [<printer-data>]  IAC EOR\n\
    \    68 01 <FC1> <FC2> 02 [<printer-data>] FF EF\n    - Allowed responses to the\
    \ printer data request.\n      PRINTER ACK [<status>]  IAC EOR\n      68     \
    \ 0A  [<status>]  FF  EF\n      PRINTER ERROR  [<status>] IAC EOR\n      68  \
    \    0E     [<status>] FF  EF\n      PRINTER BUSY [<status>]  IAC EOR\n      68\
    \      12   [<status>]  FF  EF\n      PRINTER ABORTED  [<status>] IAC EOR\n  \
    \    68      16       [<status>] FF  EF\n      PRINTER PURGED  [<status>] IAC\
    \ EOR\n      68      1A      [<status>] FF  EF\n      PRINTER NOT-AVAIL  [<status>]\
    \ IAC EOR\n      68      1E         [<status>] FF  EF\n   State request (only\
    \ from the \"TNVIP server\" to the \"TNVIP client\")\n    PRINTER STATE-REQ  IAC\
    \ EOR\n    68      35         FF  EF\n    - Allowed responses to the state request.\n\
    \      PRINTER READY  IAC EOR\n      68      3A     FF  EF\n      PRINTER STANDBY\
    \  IAC EOR\n      68      3E       FF  EF\n      PRINTER PURGED  IAC EOR\n   \
    \   68      1A      FF  EF\n      PRINTER NOT-AVAIL  IAC EOR\n      68      1E\
    \         FF  EF\n   Responses to request violating the TNVIP protocol (allowed\
    \ in the two\n   ways)\n    PRINTER PROT-VIOL  IAC EOR\n    68      22       \
    \  FF  EF\n    PRINTER UNKN-CDE  IAC EOR\n    68      26        FF  EF\n   Indication\
    \ (only from the \"TNVIP server\" to the \"TNVIP client\")\n    PRINTER PURGE\
    \  IAC EOR\n    68 28 FF EF\n"
- title: 12.3 Screen Copy Printing messages flow
  contents:
  - "12.3 Screen Copy Printing messages flow\n   Copy request (only from the \"TNVIP\
    \ client\" to the \"TNVIP server\")\n    SCPM COPY-REQ  IAC EOR\n    69   41 \
    \       FF  EF\n    - Allowed responses to the copy request (from the \"TNVIP\
    \ server\" to\n      the \"TNVIP client\")\n      SCPM  ERROR  <reason> IAC EOR\n\
    \      69    0E     <reason> FF  EF\n      SCPM  PURGED  IAC EOR\n      69   \
    \ 1A      FF  EF\n      SCPM  NOT-AVAIL  IAC EOR\n      69    1E         FF  EF\n\
    \      SCPM  LOCAL-COPY-RQ   IAC EOR\n      69    47              FF  EF\n   Local\
    \ copy request (only from the \"TNVIP server\" to the \"TNVIP\n   client\" )\n\
    \    SCPM  LOCAL-COPY-RQ   IAC EOR\n    69    47              FF  EF\n    - Allowed\
    \ responses to the local copy request (from the \"TNVIP\n      client\" to the\
    \ \"TNVIP server\").\n      SCPM ACK  IAC EOR\n      69   0A   FF  EF\n      SCPM\
    \ ERROR  IAC EOR\n      69   0E     FF  EF\n      SCPM BUSY IAC EOR\n      69\
    \   12   FF  EF\n      SCPM ABORTED IAC EOR\n      69   16      FF  EF\n     \
    \ SCPM PURGED IAC EOR\n      69   1A     FF  EF\n      SCPM NOT-AVAIL IAC EOR\n\
    \      69   1E        FF  EF\n   Data request. (only from the \"TNVIP client\"\
    \ to the \"TNVIP server\")\n    SCPM DATA-REQ <FC1> <FC2> STX [<screen-data>]\
    \  IAC EOR\n    69   01       <FC1> <FC2> 02  [<screen-data>]  FF  EF\n   - Allowed\
    \ responses to the data request\n      SCPM ACK  IAC EOR\n      69   0A   FF \
    \ EF\n      SCPM PURGED IAC EOR\n      69   1A     FF  EF\n      SCPM NOT-AVAIL\
    \ IAC EOR\n      69   1E        FF  EF\n   Responses to request violating the\
    \ TNVIP protocol (allowed in the two\n   ways)\n    SCPM PROT-VIOL  IAC EOR\n\
    \    69   22         FF  EF\n    SCPM UNKN-CDE  IAC EOR\n    69   26        FF\
    \  EF\n    Indications (allowed in the two ways)\n    SCPM DATA-IND <FC1> <FC2>\
    \ STX [<screen-data>]  IAC EOR\n    69   00       <FC1> <FC2> 02  [<screen-data>]\
    \  FF  EF\n    SCPM PURGE  IAC EOR\n    69   28     FF  EF\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   Security issues are not addressed in this document.\
    \  It is\n   anticipated that once authentication mechanisms have become well\n\
    \   established, use of them can be made by TNVIP.  One of the important\n   uses\
    \ of authentication would be to answer the question of whether or\n   not a given\
    \ user should be allowed to \"use\" a specific terminal.\n"
- title: 14. References
  contents:
  - "14. References\n   [1] Postel, J., and J. Reynolds, \"Telnet Protocol Specification\"\
    , STD\n       8, RFC 854, USC/Information Sciences Institute, May 1983.\n   [2]\
    \ \"Communications. MainWay. Terminal Management. DNS-E\",\n       Ref : 39A213EB\
    \ Rev00, BULL S.A.\n   [3] VanBokkelen, J., \"Telnet Terminal-Type Option\", RFC\
    \ 1091, FTP\n       Software, Inc., February 1989.\n   [4] Postel, J., \"Telnet\
    \ End of Record Option\", RFC 885,\n       USC/Information Sciences Institute,\
    \ December 1983.\n   [5] Postel, J., and J. Reynolds, \"Telnet Binary Transmission\"\
    , STD\n       27, RFC 856, USC/Information Sciences Institute, May 1983.\n   [6]\
    \ Postel, J., and J. Reynolds, \"Telnet Suppress Go Ahead Option\",\n       STD\
    \ 29, RFC 858, USC/Information Sciences Institute, May 1983.\n   [7] \"Affinity\
    \ V2. DKU7107 Reference Manual\"\n       Ref : 40 A2 23 WA, BULL S.A.\n   [8]\
    \ \"Affinity V2. VIP7800 Reference Manual\"\n       Ref : 40 A2 24 WA,  BULL S.A.\n\
    \   [9] \"Bull Questar 200. TCS 7424 et TCS 7434. Transmission de donnees.\n \
    \      Manuel de  reference\"\n       Ref : 80 F2 41DC Rev0,  BULL S.A.\n"
- title: 15. Author's Address
  contents:
  - "15. Author's Address\n   Jean-Yves Dujonc\n   BULL S.A.\n   rue Jean Jaures\n\
    \   78340 Les Clayes-sous-Bois\n   France\n   Phone: 1 30 80 62 95\n   Fax:  \
    \ 1 30 80 65 40\n   EMail: J.Y.Dujonc@frcl.bull.fr\n"
