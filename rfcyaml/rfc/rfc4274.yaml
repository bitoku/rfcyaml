- title: __initial_text__
  contents:
  - '                        BGP-4 Protocol Analysis

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The purpose of this report is to document how the requirements for\n\
    \   publication of a routing protocol as an Internet Draft Standard have\n   been\
    \ satisfied by Border Gateway Protocol version 4 (BGP-4).\n   This report satisfies\
    \ the requirement for \"the second report\", as\n   described in Section 6.0 of\
    \ RFC 1264.  In order to fulfill the\n   requirement, this report augments RFC\
    \ 1774 and summarizes the key\n   features of BGP-4, as well as analyzes the protocol\
    \ with respect to\n   scaling and performance.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Key Features and Algorithms of BGP ..............................3\n  \
    \    2.1. Key Features ...............................................3\n    \
    \  2.2. BGP Algorithms .............................................4\n      2.3.\
    \ BGP Finite State Machine (FSM) .............................4\n   3. BGP Capabilities\
    \ ................................................5\n   4. BGP Persistent Peer\
    \ Oscillations ................................6\n   5. Implementation Guidelines\
    \ .......................................6\n   6. BGP Performance Characteristics\
    \ and Scalability .................6\n      6.1. Link Bandwidth and CPU Utilization\
    \ .........................7\n   7. BGP Policy Expressiveness and its Implications\
    \ ..................9\n      7.1. Existence of Unique Stable Routings .......................10\n\
    \      7.2. Existence of Stable Routings ..............................11\n  \
    \ 8. Applicability ..................................................12\n   9.\
    \ Acknowledgements ...............................................12\n   10. Security\
    \ Considerations .......................................12\n   11. References\
    \ ....................................................13\n       11.1. Normative\
    \ References ....................................13\n       11.2. Informative\
    \ References ..................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   BGP-4 is an inter-autonomous system routing protocol designed\
    \ for\n   TCP/IP internets.  Version 1 of BGP-4 was published in [RFC1105].\n\
    \   Since then, BGP versions 2, 3, and 4 have been developed.  Version 2\n   was\
    \ documented in [RFC1163].  Version 3 is documented in [RFC1267].\n   Version\
    \ 4 is documented in [BGP4] (version 4 of BGP will hereafter be\n   referred to\
    \ as BGP).  The changes between versions are explained in\n   Appendix A of [BGP4].\
    \  Possible applications of BGP in the Internet\n   are documented in [RFC1772].\n\
    \   BGP introduced support for Classless Inter-Domain Routing (CIDR)\n   [RFC1519].\
    \  Because earlier versions of BGP lacked the support for\n   CIDR, they are considered\
    \ obsolete and unusable in today's Internet.\n   The purpose of this report is\
    \ to document how the requirements for\n   publication of a routing protocol as\
    \ an Internet Draft Standard have\n   been satisfied by Border Gateway Protocol\
    \ version 4 (BGP-4).\n   This report satisfies the requirement for \"the second\
    \ report\", as\n   described in Section 6.0 of [RFC1264].  In order to fulfill\
    \ the\n   requirement, this report augments [RFC1774] and summarizes the key\n\
    \   features of BGP-4, as well as analyzes the protocol with respect to\n   scaling\
    \ and performance.\n"
- title: 2.  Key Features and Algorithms of BGP
  contents:
  - "2.  Key Features and Algorithms of BGP\n   This section summarizes the key features\
    \ and algorithms of BGP.  BGP\n   is an inter-autonomous system routing protocol;\
    \ it is designed to be\n   used between multiple autonomous systems.  BGP assumes\
    \ that routing\n   within an autonomous system is done by an intra-autonomous\
    \ system\n   routing protocol.  BGP also assumes that data packets are routed\
    \ from\n   source towards destination independent of the source.  BGP does not\n\
    \   make any assumptions about intra-autonomous system routing protocols\n   deployed\
    \ within the various autonomous systems.  Specifically, BGP\n   does not require\
    \ all autonomous systems to run the same intra-\n   autonomous system routing\
    \ protocol (i.e., interior gateway protocol\n   or IGP).\n   Finally, note that\
    \ BGP is a real inter-autonomous system routing\n   protocol; and, as such, it\
    \ imposes no constraints on the underlying\n   interconnect topology of the autonomous\
    \ systems.  The information\n   exchanged via BGP is sufficient to construct a\
    \ graph of autonomous\n   systems connectivity from which routing loops may be\
    \ pruned, and many\n   routing policy decisions at the autonomous system level\
    \ may be\n   enforced.\n"
- title: 2.1.  Key Features
  contents:
  - "2.1.  Key Features\n   The key features of the protocol are the notion of path\
    \ attributes\n   and aggregation of Network Layer Reachability Information (NLRI).\n\
    \   Path attributes provide BGP with flexibility and extensibility.  Path\n  \
    \ attributes are either well-known or optional.  The provision for\n   optional\
    \ attributes allows experimentation that may involve a group\n   of BGP routers\
    \ without affecting the rest of the Internet.  New\n   optional attributes can\
    \ be added to the protocol in much the same way\n   that new options are added\
    \ to, for example, the Telnet protocol\n   [RFC854].\n   One of the most important\
    \ path attributes is the Autonomous System\n   Path, or AS_PATH.  As the reachability\
    \ information traverses the\n   Internet, this (AS_PATH) information is augmented\
    \ by the list of\n   autonomous systems that have been traversed thus far, forming\
    \ the\n   AS_PATH.  The AS_PATH allows straightforward suppression of the\n  \
    \ looping of routing information.  In addition, the AS_PATH serves as a\n   powerful\
    \ and versatile mechanism for policy-based routing.\n   BGP enhances the AS_PATH\
    \ attribute to include sets of autonomous\n   systems as well as lists via the\
    \ AS_SET attribute.  This extended\n   format allows generated aggregate routes\
    \ to carry path information\n   from the more specific routes used to generate\
    \ the aggregate.  It\n   should be noted, however, that as of this writing, AS_SETs\
    \ are rarely\n   used in the Internet [ROUTEVIEWS].\n"
- title: 2.2.  BGP Algorithms
  contents:
  - "2.2.  BGP Algorithms\n   BGP uses an algorithm that is neither a pure distance\
    \ vector\n   algorithm or a pure link state algorithm.  Instead, it uses a\n \
    \  modified distance vector algorithm, referred to as a \"Path Vector\"\n   algorithm.\
    \  This algorithm uses path information to avoid traditional\n   distance vector\
    \ problems.  Each route within BGP pairs information\n   about the destination\
    \ with path information to that destination.\n   Path information (also known\
    \ as AS_PATH information) is stored within\n   the AS_PATH attribute in BGP. \
    \ The path information assists BGP in\n   detecting AS loops, thereby allowing\
    \ BGP speakers to select loop-free\n   routes.\n   BGP uses an incremental update\
    \ strategy to conserve bandwidth and\n   processing power.  That is, after initial\
    \ exchange of complete\n   routing information, a pair of BGP routers exchanges\
    \ only the changes\n   to that information.  Such an incremental update design\
    \ requires\n   reliable transport between a pair of BGP routers in order to function\n\
    \   correctly.  BGP solves this problem by using TCP for reliable\n   transport.\n\
    \   In addition to incremental updates, BGP has added the concept of\n   route\
    \ aggregation so that information about groups of destinations\n   that use hierarchical\
    \ address assignment (e.g., CIDR) may be\n   aggregated and sent as a single Network\
    \ Layer Reachability (NLRI).\n   Finally, note that BGP is a self-contained protocol.\
    \  That is, BGP\n   specifies how routing information is exchanged, both between\
    \ BGP\n   speakers in different autonomous systems, and between BGP speakers\n\
    \   within a single autonomous system.\n"
- title: 2.3.  BGP Finite State Machine (FSM)
  contents:
  - "2.3.  BGP Finite State Machine (FSM)\n   The BGP FSM is a set of rules that is\
    \ applied to a BGP speaker's set\n   of configured peers for the BGP operation.\
    \  A BGP implementation\n   requires that a BGP speaker must connect to and listen\
    \ on TCP port\n   179 for accepting any new BGP connections from its peers.  The\
    \ BGP\n   Finite State Machine, or FSM, must be initiated and maintained for\n\
    \   each new incoming and outgoing peer connection.  However, in steady\n   state\
    \ operation, there will be only one BGP FSM per connection per\n   peer.\n   There\
    \ may be a short period during which a BGP peer may have separate\n   incoming\
    \ and outgoing connections resulting in the creation of two\n   different BGP\
    \ FSMs relating to a peer (instead of one).  This can be\n   resolved by following\
    \ the BGP connection collision rules defined in\n   the [BGP4] specification.\n\
    \   The BGP FSM has the following states associated with each of its\n   peers:\n\
    \   IDLE:           State when BGP peer refuses any incoming connections.\n  \
    \ CONNECT:        State in which BGP peer is waiting for its TCP\n           \
    \        connection to be completed.\n   ACTIVE:         State in which BGP peer\
    \ is trying to acquire a peer\n                   by listening and accepting TCP\
    \ connection.\n   OPENSENT:       BGP peer is waiting for OPEN message from its\
    \ peer.\n   OPENCONFIRM:    BGP peer is waiting for KEEPALIVE or NOTIFICATION\n\
    \                   message from its peer.\n   ESTABLISHED:    BGP peer connection\
    \ is established and exchanges\n                   UPDATE, NOTIFICATION, and KEEPALIVE\
    \ messages with its\n                   peer.\n   There are a number of BGP events\
    \ that operate on the above mentioned\n   states of the BGP FSM for BGP peers.\
    \  Support of these BGP events is\n   either mandatory or optional.  These events\
    \ are triggered by the\n   protocol logic as part of the BGP or by using an operator\n\
    \   intervention via a configuration interface to the BGP protocol.\n   These\
    \ BGP events are of following types: Optional events linked to\n   Optional Session\
    \ attributes, Administrative Events, Timer Events, TCP\n   Connection-based Events,\
    \ and BGP Message-based Events.  Both the FSM\n   and the BGP events are explained\
    \ in detail in [BGP4].\n"
- title: 3.  BGP Capabilities
  contents:
  - "3.  BGP Capabilities\n   The BGP capability mechanism [RFC3392] provides an easy\
    \ and flexible\n   way to introduce new features within the protocol.  In particular,\n\
    \   the BGP capability mechanism allows a BGP speaker to advertise to its\n  \
    \ peers during startup various optional features supported by the\n   speaker\
    \ (and receive similar information from the peers).  This\n   allows the base\
    \ BGP to contain only essential functionality, while\n   providing a flexible\
    \ mechanism for signaling protocol extensions.\n"
- title: 4.  BGP Persistent Peer Oscillations
  contents:
  - "4.  BGP Persistent Peer Oscillations\n   Whenever a BGP speaker detects an error\
    \ in a peer connection, it\n   shuts down the peer and changes its FSM state to\
    \ IDLE.  BGP speaker\n   requires a Start event to re-initiate an idle peer connection.\
    \  If\n   the error remains persistent and BGP speaker generates a Start event\n\
    \   automatically, then it may result in persistent peer flapping.\n   Although\
    \ peer oscillation is found to be wide-spread in BGP\n   implementations, methods\
    \ for preventing persistent peer oscillations\n   are outside the scope of base\
    \ BGP specification.\n"
- title: 5.  Implementation Guidelines
  contents:
  - "5.  Implementation Guidelines\n   A robust BGP implementation is \"work conserving\"\
    .  This means that if\n   the number of prefixes is bounded, arbitrarily high\
    \ levels of route\n   change can be tolerated.  High levels can be tolerated with\
    \ bounded\n   impact on route convergence for occasional changes in generally\n\
    \   stable routes.\n   A robust implementation of BGP should have the following\n\
    \   characteristics:\n      1.  It is able to operate in almost arbitrarily high\
    \ levels of\n          route flap without losing peerings (failing to send\n \
    \         keepalives) or losing other protocol adjacencies as a result\n     \
    \     of BGP load.\n      2.  Instability of a subset of routes should not affect\
    \ the route\n          advertisements or forwarding associated with the set of\
    \ stable\n          routes.\n      3.  Instability should not be caused by peers\
    \ with high levels of\n          instability or with different CPU speed or load\
    \ that result in\n          faster or slower processing of routes.  These instable\
    \ peers\n          should have a bounded impact on the convergence time for\n\
    \          generally stable routes.\n   Numerous robust BGP implementations exist.\
    \  Producing a robust\n   implementation is not a trivial matter, but is clearly\
    \ achievable.\n"
- title: 6.  BGP Performance Characteristics and Scalability
  contents:
  - "6.  BGP Performance Characteristics and Scalability\n   In this section, we provide\
    \ \"order of magnitude\" answers to the\n   questions of how much link bandwidth,\
    \ router memory and router CPU\n   cycles BGP will consume under normal conditions.\
    \  In particular, we\n   will address the scalability of BGP and its limitations.\n"
- title: 6.1.  Link Bandwidth and CPU Utilization
  contents:
  - "6.1.  Link Bandwidth and CPU Utilization\n   Immediately after the initial BGP\
    \ connection setup, BGP peers\n   exchange complete sets of routing information.\
    \  If we denote the\n   total number of routes in the Internet as N, the total\
    \ path\n   attributes (for all N routes) received from a peer as A, and assume\n\
    \   that the networks are uniformly distributed among the autonomous\n   systems,\
    \ then the worst-case amount of bandwidth consumed during the\n   initial exchange\
    \ between a pair of BGP speakers (P) is\n           BW = O((N + A) * P)\n   BGP-4\
    \ was created specifically to reduce the size of the set of NLRI\n   entries,\
    \ which has to be carried and exchanged by border routers.\n   The aggregation\
    \ scheme, defined in [RFC1519], describes the\n   provider-based aggregation scheme\
    \ in use in today's Internet.\n   Due to the advantages of advertising a few large\
    \ aggregate blocks\n   (instead of many smaller class-based individual networks),\
    \ it is\n   difficult to estimate the actual reduction in bandwidth and\n   processing\
    \ that BGP-4 has provided over BGP-3.  If we simply\n   enumerate all aggregate\
    \ blocks into their individual, class-based\n   networks, we would not take into\
    \ account \"dead\" space that has been\n   reserved for future expansion.  The\
    \ best metric for determining the\n   success of BGP's aggregation is to sample\
    \ the number NLRI entries in\n   the globally-connected Internet today, and compare\
    \ it to growth rates\n   that were projected before BGP was deployed.\n   At the\
    \ time of this writing, the full set of exterior routes carried\n   by BGP is\
    \ approximately 134,000 network entries [ROUTEVIEWS].\n"
- title: 6.1.1.  CPU Utilization
  contents:
  - "6.1.1.  CPU Utilization\n   An important and fundamental feature of BGP is that\
    \ BGP's CPU\n   utilization depends only on the stability of its network which\n\
    \   relates to BGP in terms of BGP UPDATE message announcements.  If the\n   BGP\
    \ network is stable, all the BGP routers within its network are in\n   the steady\
    \ state.  Thus, the only link bandwidth and router CPU\n   cycles consumed by\
    \ BGP are due to the exchange of the BGP KEEPALIVE\n   messages.  The KEEPALIVE\
    \ messages are exchanged only between peers.\n   The suggested frequency of the\
    \ exchange is 30 seconds.  The KEEPALIVE\n   messages are quite short (19 octets)\
    \ and require virtually no\n   processing.  As a result, the bandwidth consumed\
    \ by the KEEPALIVE\n   messages is about 5 bits/sec.  Operational experience confirms\
    \ that\n   the overhead (in terms of bandwidth and CPU) associated with the\n\
    \   KEEPALIVE messages should be viewed as negligible.\n   During periods of network\
    \ instability, BGP routers within the network\n   are generating routing updates\
    \ that are exchanged using the BGP\n   UPDATE messages.  The greatest overhead\
    \ per UPDATE message occurs\n   when each UPDATE message contains only a single\
    \ network.  It should\n   be pointed out that, in practice, routing changes exhibit\
    \ strong\n   locality with respect to the route attributes.  That is, routes that\n\
    \   change are likely to have common route attributes.  In this case,\n   multiple\
    \ networks can be grouped into a single UPDATE message, thus\n   significantly\
    \ reducing the amount of bandwidth required (see also\n   Appendix F.1 of [BGP4]).\n"
- title: 6.1.2.  Memory Requirements
  contents:
  - "6.1.2.  Memory Requirements\n   To quantify the worst-case memory requirements\
    \ for BGP, we denote the\n   total number of networks in the Internet as N, the\
    \ mean AS distance\n   of the Internet as M (distance at the level of an autonomous\
    \ system,\n   expressed in terms of the number of autonomous systems), the total\n\
    \   number of unique AS paths as A.  Then the worst-case memory\n   requirements\
    \ (MR) can be expressed as\n           MR = O(N + (M * A))\n   Because a mean\
    \ AS distance M is a slow moving function of the\n   interconnectivity (\"meshiness\"\
    ) of the Internet, for all practical\n   purposes the worst-case router memory\
    \ requirements are on the order\n   of the total number of networks in the Internet\
    \ multiplied by the\n   number of peers that the local system is peering with.\
    \  We expect\n   that the total number of networks in the Internet will grow much\n\
    \   faster than the average number of peers per router.  As a result,\n   BGP's\
    \ memory-scaling properties are linearly related to the total\n   number of networks\
    \ in the Internet.\n   The following table illustrates typical memory requirements\
    \ of a\n   router running BGP.  We denote the average number of routes\n   advertised\
    \ by each peer as N, the total number of unique AS paths as\n   A, the mean AS\
    \ distance of the Internet as M (distance at the level\n   of an autonomous system,\
    \ expressed in terms of the number of\n   autonomous systems), the number of octets\
    \ required to store a network\n   as R, and the number of bytes required to store\
    \ one AS in an AS path\n   as P.  It is assumed that each network is encoded as\
    \ four bytes, each\n   AS is encoded as two bytes, and each networks is reachable\
    \ via some\n   fraction of all the peers (# BGP peers/per net).  For purposes\
    \ of the\n   estimates here, we will calculate MR = (((N * R) + (M * A) * P) *\
    \ S).\n   # Networks  Mean AS Distance # ASes # BGP peers/per net   Memory Req\n\
    \       (N)             (M)        (A)          (P)              (MR)\n   ----------\
    \  ---------------- ------ ------------------- -------------\n     100,000   \
    \        20         3,000         20           10,400,000\n     100,000      \
    \     20        15,000         20           20,000,000\n     120,000         \
    \  10        15,000        100           78,000,000\n     140,000           15\
    \        20,000        100          116,000,000\n   In analyzing BGP's memory\
    \ requirements, we focus on the size of the\n   BGP RIB table (ignoring implementation\
    \ details).  In particular, we\n   derive upper bounds for the size of the BGP\
    \ RIB table.  For example,\n   at the time of this writing, the BGP RIB tables\
    \ of a typical backbone\n   router carry on the order of 120,000 entries.  Given\
    \ this number, one\n   might ask whether it would be possible to have a functional\
    \ router\n   with a table containing 1,000,000 entries.  Clearly, the answer to\n\
    \   this question is more related to how BGP is implemented.  A robust\n   BGP\
    \ implementation with a reasonable CPU and memory should not have\n   issues scaling\
    \ to such limits.\n"
- title: 7.  BGP Policy Expressiveness and its Implications
  contents:
  - "7.  BGP Policy Expressiveness and its Implications\n   BGP is unique among deployed\
    \ IP routing protocols in that routing is\n   determined using semantically rich\
    \ routing policies.  Although\n   routing policies are usually the first BGP issue\
    \ that comes to a\n   network operator's mind, it is important to note that the\
    \ languages\n   and techniques for specifying BGP routing policies are not part\
    \ of\n   the protocol specification (see [RFC2622] for an example of such a\n\
    \   policy language).  In addition, the BGP specification contains few\n   restrictions,\
    \ explicit or implicit, on routing policy languages.\n   These languages have\
    \ typically been developed by vendors and have\n   evolved through interactions\
    \ with network engineers in an environment\n   lacking vendor-independent standards.\n\
    \   The complexity of typical BGP configurations, at least in provider\n   networks,\
    \ has been steadily increasing.  Router vendors typically\n   provide hundreds\
    \ of special commands for use in the configuration of\n   BGP, and this command\
    \ set is continually expanding.  For example, BGP\n   communities [RFC1997] allow\
    \ policy writers to selectively attach tags\n   to routes and to use these to\
    \ signal policy information to other\n   BGP-speaking routers.  Many providers\
    \ allow customers, and sometimes\n   peers, to send communities that determine\
    \ the scope and preference of\n   their routes.  Due to these developments, the\
    \ task of writing BGP\n   configurations has increasingly more aspects associated\
    \ with open-\n   ended programming.  This has allowed network operators to encode\n\
    \   complex policies in order to address many unforeseen situations, and\n   has\
    \ opened the door for a great deal of creativity and\n   experimentation in routing\
    \ policies.  This policy flexibility is one\n   of the main reasons why BGP is\
    \ so well suited to the commercial\n   environment of the current Internet.\n\
    \   However, this rich policy expressiveness has come with a cost that is\n  \
    \ often not recognized.  In particular, it is possible to construct\n   locally\
    \ defined routing policies that can lead to protocol divergence\n   and unexpected\
    \ global routing anomalies such as (unintended) non-\n   determinism.  If the\
    \ interacting policies causing such anomalies are\n   defined in different autonomous\
    \ systems, then these problems can be\n   very difficult to debug and correct.\
    \  In the following sections, we\n   describe two such cases relating to the existence\
    \ (or lack thereof)\n   of stable routings.\n"
- title: 7.1.  Existence of Unique Stable Routings
  contents:
  - "7.1.  Existence of Unique Stable Routings\n   One can easily construct sets of\
    \ policies for which BGP cannot\n   guarantee that stable routings are unique.\
    \  This is illustrated by\n   the following simple example.  Consider four Autonomous\
    \ Systems, AS1,\n   AS2, AS3, and AS4.  AS1 and AS2 are peers, and they provide\
    \ transit\n   for AS3 and AS4, respectively.  Suppose AS3 provides transit for\
    \ AS4\n   (in this case AS3 is a customer of AS1, and AS4 is a multihomed\n  \
    \ customer of both AS3 and AS2).  AS4 may want to use the link to AS3\n   as a\
    \ \"backup\" link, and sends AS3 a community value that AS3 has\n   configured\
    \ to lower the preference of AS4's routes to a level below\n   that of its upstream\
    \ provider, AS1.  The intended \"backup routing\" to\n   AS4 is illustrated here:\n\
    \              AS1 ------> AS2\n              /|\\          |\n              \
    \ |           |\n               |           |\n               |          \\|/\n\
    \              AS3 ------- AS4\n   That is, the AS3-AS4 link is intended to be\
    \ used only when the AS2-\n   AS4 link is down (for outbound traffic, AS4 simply\
    \ gives routes from\n   AS2 a higher local preference).  This is a common scenario\
    \ in today's\n   Internet.  But note that this configuration has another stable\n\
    \   solution:\n              AS1 ------- AS2\n               |           |\n \
    \              |           |\n               |           |\n              \\|/\
    \         \\|/\n              AS3 ------> AS4\n   In this case, AS3 does not translate\
    \ the \"depref my route\" community\n   received from AS4 into a \"depref my route\"\
    \ community for AS1.\n   Therefore, if AS1 hears the route to AS4 that transits\
    \ AS3, it will\n   prefer that route (because AS3 is a customer).  This state\
    \ could be\n   reached, for example, by starting in the \"correct\" backup routing\n\
    \   shown first, bringing down the AS2-AS4 BGP session, and then bringing\n  \
    \ it back up.  In general, BGP has no way to prefer the \"intended\"\n   solution\
    \ over the anomalous one.  The solution picked will depend on\n   the unpredictable\
    \ order of BGP messages.\n   While this example is relatively simple, many operators\
    \ may fail to\n   recognize that the true source of the problem is that the BGP\n\
    \   policies of ASes can interact in unexpected ways, and that these\n   interactions\
    \ can result in multiple stable routings.  One can imagine\n   that the interactions\
    \ could be much more complex in the real\n   Internet.  We suspect that such anomalies\
    \ will only become more\n   common as BGP continues to evolve with richer policy\
    \ expressiveness.\n   For example, extended communities provide an even more flexible\
    \ means\n   of signaling information within and between autonomous systems than\n\
    \   is possible with [RFC1997] communities.  At the same time,\n   applications\
    \ of communities by network operators are evolving to\n   address complex issues\
    \ of inter-domain traffic engineering.\n"
- title: 7.2.  Existence of Stable Routings
  contents:
  - "7.2.  Existence of Stable Routings\n   One can also construct a set of policies\
    \ for which BGP cannot\n   guarantee that a stable routing exists (or, worse,\
    \ that a stable\n   routing will ever be found).  For example, [RFC3345] documents\n\
    \   several scenarios that lead to route oscillations associated with the\n  \
    \ use of the Multi-Exit Discriminator (MED) attribute.  Route\n   oscillation\
    \ will happen in BGP when a set of policies has no\n   solution.  That is, when\
    \ there is no stable routing that satisfies\n   the constraints imposed by policy,\
    \ BGP has no choice but to keep\n   trying.  In addition, even if BGP configurations\
    \ can have a stable\n   routing, the protocol may not be able to find it; BGP\
    \ can \"get\n   trapped\" down a blind alley that has no solution.\n   Protocol\
    \ divergence is not, however, a problem associated solely with\n   use of the\
    \ MED attribute.  This potential exists in BGP even without\n   the use of the\
    \ MED attribute.  Hence, like the unintended\n   nondeterminism described in the\
    \ previous section, this type of\n   protocol divergence is an unintended consequence\
    \ of the unconstrained\n   nature of BGP policy languages.\n"
- title: 8.  Applicability
  contents:
  - "8.  Applicability\n   In this section we identify the environments for which\
    \ BGP is well\n   suited, and the environments for which it is not suitable. \
    \ This\n   question is partially answered in Section 2 of BGP [BGP4], which\n\
    \   states:\n      \"To characterize the set of policy decisions that can be enforced\n\
    \      using BGP, one must focus on the rule that an AS advertises to its\n  \
    \    neighbor ASes only those routes that it itself uses.  This rule\n      reflects\
    \ the \"hop-by-hop\" routing paradigm generally used\n      throughout the current\
    \ Internet.  Note that some policies cannot\n      be supported by the \"hop-by-hop\"\
    \ routing paradigm and thus require\n      techniques such as source routing to\
    \ enforce.  For example, BGP\n      does not enable one AS to send traffic to\
    \ a neighbor AS intending\n      that the traffic take a different route from\
    \ that taken by traffic\n      originating in the neighbor AS.  On the other hand,\
    \ BGP can\n      support any policy conforming to the \"hop-by-hop\" routing\n\
    \      paradigm.  Since the current Internet uses only the \"hop-by-hop\"\n  \
    \    routing paradigm and since BGP can support any policy that\n      conforms\
    \ to that paradigm, BGP is highly applicable as an inter-AS\n      routing protocol\
    \ for the current Internet.\"\n   One of the important points here is that BGP\
    \ contains only essential\n   functionality, while at the same time providing\
    \ a flexible mechanism\n   within the protocol that allows us to extend its functionality.\
    \  For\n   example, BGP capabilities provide an easy and flexible way to\n   introduce\
    \ new features within the protocol.  Finally, because BGP was\n   designed to\
    \ be flexible and extensible, new and/or evolving\n   requirements can be addressed\
    \ via existing mechanisms.\n   To summarize, BGP is well suited as an inter-autonomous\
    \ system\n   routing protocol for any internet that is based on IP [RFC791] as\
    \ the\n   internet protocol and the \"hop-by-hop\" routing paradigm.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   We would like to thank Paul Traina for authoring previous\
    \ versions of\n   this document.  Elwyn Davies, Tim Griffin, Randy Presuhn, Curtis\n\
    \   Villamizar and Atanu Ghosh also provided many insightful comments on\n   earlier\
    \ versions of this document.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   BGP provides flexible mechanisms with varying\
    \ levels of complexity\n   for security purposes.  BGP sessions are authenticated\
    \ using BGP\n   session addresses and the assigned AS number.  Because BGP sessions\n\
    \   use TCP (and IP) for reliable transport, BGP sessions are further\n   authenticated\
    \ and secured by any authentication and security\n   mechanisms used by TCP and\
    \ IP.\n   BGP uses TCP MD5 option for validating data and protecting against\n\
    \   spoofing of TCP segments exchanged between its sessions.  The usage\n   of\
    \ TCP MD5 option for BGP is described at length in [RFC2385].  The\n   TCP MD5\
    \ Key management is discussed in [RFC3562].  BGP data\n   encryption is provided\
    \ using the IPsec mechanism, which encrypts the\n   IP payload data (including\
    \ TCP and BGP data).  The IPsec mechanism\n   can be used in both the transport\
    \ mode and the tunnel mode.  The\n   IPsec mechanism is described in [RFC2406].\
    \  Both the TCP MD5 option\n   and the IPsec mechanism are not widely deployed\
    \ security mechanisms\n   for BGP in today's Internet.  Hence, it is difficult\
    \ to gauge their\n   real performance impact when using with BGP.  However, because\
    \ both\n   the mechanisms are TCP- and IP-based security mechanisms, the Link\n\
    \   Bandwidth, CPU utilization and router memory consumed by BGP would be\n  \
    \ the same as any other TCP- and IP-based protocols.\n   BGP uses the IP TTL value\
    \ to protect its External BGP (EBGP) sessions\n   from any TCP- or IP-based CPU-intensive\
    \ attacks.  It is a simple\n   mechanism that suggests the use of filtering BGP\
    \ (TCP) segments,\n   using the IP TTL value carried within the IP header of BGP\
    \ (TCP)\n   segments that are exchanged between the EBGP sessions.  The BGP TTL\n\
    \   mechanism is described in [RFC3682].  Usage of [RFC3682] impacts\n   performance\
    \ in a similar way as using any access control list (ACL)\n   policies for BGP.\n\
    \   Such flexible TCP- and IP-based security mechanisms, allow BGP to\n   prevent\
    \ insertion/deletion/modification of BGP data, any snooping of\n   the data, session\
    \ stealing, etc.  However, BGP is vulnerable to the\n   same security attacks\
    \ that are present in TCP.  The [BGP-VULN]\n   explains in depth about the BGP\
    \ security vulnerability.  At the time\n   of this writing, several efforts are\
    \ underway for creating and\n   defining an appropriate security infrastructure\
    \ within the BGP\n   protocol to provide authentication and security for its routing\n\
    \   information; these efforts include [SBGP] and [SOBGP].\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [BGP4]        Rekhter, Y., Li., T., and S. Hares,\
    \ Eds., \"A Border\n                 Gateway Protocol 4 (BGP-4)\", RFC 4271, January\
    \ 2006.\n   [RFC1519]     Fuller, V., Li, T., Yu, J., and K. Varadhan, \"Classless\n\
    \                 Inter-Domain Routing (CIDR): an Address Assignment and\n   \
    \              Aggregation Strategy\", RFC 1519, September 1993.\n   [RFC791]\
    \      Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n                 September\
    \ 1981.\n   [RFC1997]     Chandra, R., Traina, P., and T. Li, \"BGP Communities\n\
    \                 Attribute\", RFC 1997, August 1996.\n   [RFC2385]     Heffernan,\
    \ A., \"Protection of BGP Sessions via the TCP\n                 MD5 Signature\
    \ Option\", RFC 2385, August 1998.\n   [RFC3345]     McPherson, D., Gill, V.,\
    \ Walton, D., and A. Retana,\n                 \"Border Gateway Protocol (BGP)\
    \ Persistent Route\n                 Oscillation Condition\", RFC 3345, August\
    \ 2002.\n   [RFC3562]     Leech, M., \"Key Management Considerations for the TCP\n\
    \                 MD5 Signature Option\", RFC 3562, July 2003.\n   [RFC3682] \
    \    Gill, V., Heasley, J., and D. Meyer, \"The Generalized\n                \
    \ TTL Security Mechanism (GTSM)\", RFC 3682, February\n                 2004.\n\
    \   [RFC3392]     Chandra, R. and J. Scudder, \"Capabilities Advertisement\n \
    \                with BGP-4\", RFC 3392, November 2002.\n   [BGP-VULN]    Murphy,\
    \ S., \"BGP Security Vulnerabilities Analysis\",\n                 RFC 4272, January\
    \ 2006.\n   [SBGP]        Seo, K., S. Kent and C. Lynn, \"Secure Border Gateway\n\
    \                 Protocol (Secure-BGP)\", IEEE Journal on Selected Areas\n  \
    \               in Communications Vol. 18, No. 4, April 2000, pp. 582-\n     \
    \            592.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC854]      Postel, J. and J. Reynolds, \"\
    Telnet Protocol\n                 Specification\", STD 8, RFC 854, May 1983.\n\
    \   [RFC1105]     Lougheed, K. and Y. Rekhter, \"Border Gateway Protocol\n   \
    \              (BGP)\", RFC 1105, June 1989.\n   [RFC1163]     Lougheed, K. and\
    \ Y. Rekhter, \"Border Gateway Protocol\n                 (BGP)\", RFC 1163, June\
    \ 1990.\n   [RFC1264]     Hinden, R., \"Internet Routing Protocol Standardization\n\
    \                 Criteria\", RFC 1264, October 1991.\n   [RFC1267]     Lougheed,\
    \ K. and Y. Rekhter, \"Border Gateway Protocol 3\n                 (BGP-3)\",\
    \ RFC 1267, October 1991.\n   [RFC1772]     Rekhter, Y., and P. Gross, Editors,\
    \ \"Application\n                  of the Border Gateway Protocol in the Internet\"\
    , RFC\n                 1772, March 1995.\n   [RFC1774]     Traina, P., \"BGP-4\
    \ Protocol Analysis\", RFC 1774, March\n                 1995.\n   [RFC2622] \
    \    Alaettinoglu, C., Villamizar, C., Gerich, E., Kessens,\n                \
    \ D., Meyer, D., Bates, T., Karrenberg, D., and M.\n                 Terpstra,\
    \ \"Routing Policy Specification Language\n                 (RPSL)\", RFC 2622,\
    \ June 1999.\n   [RFC2406]     Kent, S. and R. Atkinson, \"IP Encapsulating Security\n\
    \                 Payload (ESP)\", RFC 2406, November 1998.\n   [ROUTEVIEWS] \
    \ Meyer, D., \"The Route Views Project\",\n                 http://www.routeviews.org.\n\
    \   [SOBGP]       White, R., \"Architecture and Deployment Considerations\n  \
    \               for Secure Origin BGP (soBGP)\", Work in Progress, May\n     \
    \            2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Meyer\n   EMail: dmm@1-4-5.net\n   Keyur Patel\n\
    \   Cisco Systems\n   EMail: keyupate@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
