- title: __initial_text__
  contents:
  - '                            INTERNET SUBNETS

    '
- title: Status Of This Memo
  contents:
  - "Status Of This Memo\n   This RFC suggests a proposed protocol for the ARPA-Internet\n\
    \   community, and requests discussion and suggestions for improvements.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Overview
  contents:
  - "Overview\n   We discuss the utility of \"subnets\" of Internet networks, which\
    \ are\n   logically visible sub-sections of a single Internet network.  For\n\
    \   administrative or technical reasons, many organizations have chosen\n   to\
    \ divide one Internet network into several subnets, instead of\n   acquiring a\
    \ set of Internet network numbers.\n   We propose procedures for the use of subnets,\
    \ and discuss approaches\n   to solving the problems that arise, particularly\
    \ that of routing.\n"
- title: Acknowledgment
  contents:
  - "Acknowledgment\n   This proposal is the result of discussion with several other\
    \ people.\n   J. Noel Chiappa, Chris Kent, and Tim Mann, in particular, provided\n\
    \   important suggestions.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The original view of the Internet universe was a two-level\
    \ hierarchy:\n   the top level the catenet as a whole, and the level below it\
    \ a\n   collection of \"Internet Networks\", each with its own Network Number.\n\
    \   (We do not mean that the Internet has a hierarchical topology, but\n   that\
    \ the interpretation of addresses is hierarchical.)\n   While this view has proved\
    \ simple and powerful, a number of\n   organizations have found it inadequate\
    \ and have added a third level\n   to the interpretation of Internet addresses.\
    \  In this view, a given\n   Internet Network might (or might not) be divided\
    \ into a collection of\n   subnets.\n   The original, two-level, view carries\
    \ a strong presumption that, to a\n   host on an Internet network, that network\
    \ may be viewed as a single\n   edge; to put it another way, the network may be\
    \ treated as a \"black\n   box\" to which a set of hosts is connected.  This is\
    \ true of the\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n   ARPANET, because the IMPs mask the use of specific links\
    \ in that\n   network.  It is also true of most local area network (LAN)\n   technologies,\
    \ such as Ethernet or ring networks.\n   However, this presumption fails in many\
    \ practical cases, because in\n   moderately large organizations (e.g., Universities\
    \ or companies with\n   more than one building) it is often necessary to use more\
    \ than one\n   LAN cable to cover a \"local area\".  For example, at this writing\n\
    \   there are eighteen such cables in use at Stanford University, with\n   more\
    \ planned.\n   There are several reasons why an organization might use more than\
    \ one\n   cable to cover a campus:\n      - Different technologies: Especially\
    \ in a research environment,\n        there may be more than one kind of LAN in\
    \ use; e.g., an\n        organization may have some equipment that supports Ethernet,\
    \ and\n        some that supports a ring network.\n      - Limits of technologies:\
    \ Most LAN technologies impose limits,\n        based electrical parameters, on\
    \ the number of hosts connected,\n        and on the total length of the cable.\
    \  It is easy to exceed\n        these limits, especially those on cable length.\n\
    \      - Network congestion: It is possible for a small subset of the\n      \
    \  hosts on a LAN to monopolize most of the bandwidth.  A common\n        solution\
    \ to this problem is to divide the hosts into cliques of\n        high mutual\
    \ communication, and put these cliques on separate\n        cables.\n      - Point-to-Point\
    \ links: Sometimes a \"local area\", such as a\n        university campus, is\
    \ split into two locations too far apart to\n        connect using the preferred\
    \ LAN technology.  In this case,\n        high-speed point-to-point links might\
    \ connect several LANs.\n   An organization that has been forced to use more than\
    \ one LAN has\n   three choices for assigning Internet addresses:\n      1. Acquire\
    \ a distinct Internet network number for each cable.\n      2. Use a single network\
    \ number for the entire organization, but\n         assign host numbers without\
    \ regard to which LAN a host is on.\n         (We will call this choice \"transparent\
    \ subnets\".)\n      3. Use a single network number, and partition the host address\n\
    \         space by assigning subnet numbers to the LANs. (\"Explicit\n       \
    \  subnets\".)\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n   Each of these approaches has disadvantages.  The first,\
    \ although not\n   requiring any new or modified protocols, does result in an\
    \ explosion\n   in the size of Internet routing tables.  Information about the\n\
    \   internal details of local connectivity is propagated everywhere,\n   although\
    \ it is of little or no use outside the local organization.\n   Especially as\
    \ some current gateway implementations do not have much\n   space for routing\
    \ tables, it would be nice to avoid this problem.\n   The second approach requires\
    \ some convention or protocol that makes\n   the collection of LANs appear to\
    \ be a single Internet network.  For\n   example, this can be done on LANs where\
    \ each Internet address is\n   translated to a hardware address using an Address\
    \ Resolution Protocol\n   (ARP), by having the bridges between the LANs intercept\
    \ ARP requests\n   for non-local targets.  However, it is not possible to do this\
    \ for\n   all LAN technologies, especially those where ARP protocols are not\n\
    \   currently used, or if the LAN does not support broadcasts.  A more\n   fundamental\
    \ problem is that bridges must discover which LAN a host is\n   on, perhaps by\
    \ using a broadcast algorithm.  As the number of LANs\n   grows, the cost of broadcasting\
    \ grows as well; also, the size of\n   translation caches required in the bridges\
    \ grows with the total\n   number of hosts in the network.\n   The third approach\
    \ addresses the key problem: existing standards\n   assume that all hosts on an\
    \ Internet local network are on a single\n   cable.  The solution is to explicitly\
    \ support subnets.  This does\n   have a disadvantage, in that it is a modification\
    \ of the Internet\n   Protocol, and thus requires changes to IP implementations\
    \ already in\n   use (if these implementations are to be used on a subnetted network.)\n\
    \   However, we believe that these changes are relatively minor, and once\n  \
    \ made, yield a simple and efficient solution to the problem.  Also,\n   the approach\
    \ we take in this document is to avoid any changes that\n   would be incompatible\
    \ with existing hosts on non-subnetted networks.\n   Further, when appropriate\
    \ design choices are made, it is possible for\n   hosts which believe they are\
    \ on a non-subnetted network to be used on\n   a subnetted one, as will be explained\
    \ later.  This is useful when it\n   is not possible to modify some of the hosts\
    \ to support subnets\n   explicitly, or when a gradual transition is preferred.\
    \  Because of\n   this, there seems little reason to use the second approach listed\n\
    \   above.\n   The rest of this document describes approaches to subnets of Internet\n\
    \   Networks.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n   1.1. Terminology\n      To avoid either ambiguity or prolixity,\
    \ we will define a few\n      terms, which will be used in the following sections:\n\
    \      Catenet\n         The collection of connected Internet Networks\n     \
    \ Network\n         A single Internet network (that may or may not be divided\
    \ into\n         subnets.)\n      Subnet\n         A subnet of an Internet network.\n\
    \      Network Number\n         As in [8].\n      Local Address\n         The\
    \ bits in an Internet address not used for the network\n         number; also\
    \ known as \"rest field\".\n      Subnet Number\n         A number identifying\
    \ a subnet within a network.\n      Subnet Field\n         The bit field in an\
    \ Internet address used for the subnet\n         number.\n      Host Field\n \
    \        The bit field in an Internet address used for denoting a\n         specific\
    \ host.\n      Gateway\n         A node connected to two or more administratively\
    \ distinct\n         networks and/or subnets, to which hosts send datagrams to\
    \ be\n         forwarded.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      Bridge\n         A node connected to two or more administratively\n\
    \         indistinguishable but physically distinct subnets, that\n         automatically\
    \ forwards datagrams when necessary, but whose\n         existence is not know\
    \ to other hosts.  Also called a \"software\n         repeater\".\n"
- title: 2. Standards for Subnet Addressing
  contents:
  - "2. Standards for Subnet Addressing\n   Following the division presented in [2],\
    \ we observe that subnets are\n   fundamentally an issue of addressing.  In this\
    \ section, we first\n   describe a proposal for interpretation of Internet Addressing\
    \ to\n   support subnets.  We then discuss the interaction between this\n   address\
    \ format and broadcasting; finally, we present a protocol for\n   discovering\
    \ what address interpretation is in use on a given network.\n   2.1. Interpretation\
    \ of Internet Addresses\n      Suppose that an organization has been assigned\
    \ an Internet network\n      number, has further divided that network into a set\
    \ of subnets,\n      and wants to assign host addresses: how should this be done?\n\
    \      Since there are minimal restrictions on the assignment of the\n      \"\
    local address\" part of the Internet address, several approaches\n      have been\
    \ proposed for representing the subnet number:\n         1. Variable-width field:\
    \ Any number of the bits of the local\n            address part are used for the\
    \ subnet number; the size of\n            this field, although constant for a\
    \ given network, varies\n            from network to network.  If the field width\
    \ is zero, then\n            subnets are not in use.\n         2. Fixed-width\
    \ field: A specific number of bits (e.g., eight)\n            is used for the\
    \ subnet number, if subnets are in use.\n         3. Self-encoding variable-width\
    \ field: Just as the width (i.e.,\n            class) of the network number field\
    \ is encoded by its\n            high-order bits, the width of the subnet field\
    \ is similarly\n            encoded.\n         4. Self-encoding fixed-width field:\
    \ A specific number of bits\n            is is used for the subnet number.  Subnets\
    \ are in use if the\n            high-order bit of this field is one; otherwise,\
    \ the entire\n            local address part is used for host number.\n      Since\
    \ there seems to be no advantage in doing otherwise, all these\n      schemes\
    \ place the subnet field as the most significant field in\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      the local address part.  Also, since the local address\
    \ part of a\n      Class C address is so small, there is little reason to support\n\
    \      subnets of other than Class A and Class B networks.\n      What criteria\
    \ can we use to choose one of these four schemes?\n      First, do we want to\
    \ use a self-encoding scheme; that is, should\n      it be possible to tell from\
    \ examining an Internet address if it\n      refers to a subnetted network, without\
    \ reference to any other\n      information?\n      One advantage to self-encoding\
    \ is that it allows one to determine\n      if a non-local network has been divided\
    \ into subnets.  It is not\n      clear that this would be of any use.  The principle\
    \ advantage,\n      however, is that no additional information is needed for an\n\
    \      implementation to determine if two addresses are on the same\n      subnet.\
    \  However, this can also be viewed as a disadvantage: it\n      may cause problems\
    \ for non-subnetted networks which have existing\n      host numbers that use\
    \ arbitrary bits in the local address part\n      <1>.  In other words, it is\
    \ useful to be able control whether a\n      network is subnetted independently\
    \ from the assignment of host\n      addresses.  Another disadvantage of any self-encoding\
    \ scheme is\n      that it reduces the local address space by at least a factor\
    \ of\n      two.\n      If a self-encoding scheme is not used, it is clear that\
    \ a\n      variable-width subnet field is appropriate.  Since there must in\n\
    \      any case be some per-network \"flag\" to indicate if subnets are in\n \
    \     use, the additional cost of using an integer (the subnet field\n      width)\
    \ instead of a boolean is negligible.  The advantage of using\n      a variable-width\
    \ subnet field is that it allows each organization\n      to choose the best way\
    \ to allocate relatively scarce bits of local\n      address to subnet and host\
    \ numbers.\n      Our proposal, therefore, is that the Internet address be\n \
    \     interpreted as:\n         <network-number><subnet-number><host-number>\n\
    \      where the <network-number> field is as in [8], the <host-number>\n    \
    \  field is at least one bit wide, and the width of the\n      <subnet-number>\
    \ field is constant for a given network. No further\n      structure is required\
    \ for the <subnet-number> or <host-number>\n      fields.  If the width of the\
    \ <subnet-number> field is zero, then\n      the network is not subnetted (i.e.,\
    \ the interpretation of [8] is\n      used.)\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      For example, on a Class A network with an eight bit wide\
    \ subnet\n      field, an address is broken down like this:\n                \
    \           1                   2                   3\n       0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |0|    NETWORK    |     SUBNET    |         Host number         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      We\
    \ expect that, for reasons of simplicity and efficient\n      implementation,\
    \ that most organizations will choose a subnet field\n      width that is a multiple\
    \ of eight bits.  However, an\n      implementation must be prepared to handle\
    \ other possible widths.\n      We reject the use of \"recursive subnets\", the\
    \ division of the host\n      field into \"sub-subnet\" and host parts, because:\n\
    \         - There is no obvious need for a four-level hierarchy.\n         - The\
    \ number of bits available in an IP address is not large\n           enough to\
    \ make this useful in general.\n         - The extra mechanism required is complex.\n\
    \   2.2. Changes to Host Software to Support Subnets\n      In most implementations\
    \ of IP, there is  code in the module that\n      handles outgoing packet that\
    \ does something like:\n         IF ip_net_number(packet.ip_dest) = ip_net_number(my_ip_addr)\n\
    \             THEN\n                 send_packet_locally(packet, packet.ip_dest)\n\
    \             ELSE\n                 send_packet_locally(packet,\n           \
    \         gateway_to(ip_net_number(packet.ip_dest)))\n      (If the code supports\
    \ multiple connected networks, it will be more\n      complicated, but this is\
    \ irrelevant to the current discussion.)\n      To support subnets, it is necessary\
    \ to store one more 32-bit\n      quantity, called my_ip_mask.  This is a bit-mask\
    \ with bits set in\n      the fields corresponding to the IP network number, and\
    \ additional\n      bits set corresponding to the subnet number field.  For example,\n\
    \      on a Class A network using an eight-bit wide subnet field, the\n      mask\
    \ would be 255.255.0.0.\n      The code then becomes:\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n         IF bitwise_and(packet.ip_dest, my_ip_mask)\n     \
    \                     = bitwise_and(my_ip_addr, my_ip_mask)\n             THEN\n\
    \                 send_packet_locally(packet, packet.ip_dest)\n             ELSE\n\
    \                 send_packet_locally(packet,\n                    gateway_to(bitwise_and(packet.ip_dest,\
    \ my_ip_mask)))\n      Of course, part of the expression in the conditionally\
    \ can be\n      pre-computed.\n      It may or may not be necessary to modify\
    \ the \"gateway_to\"\n      function, so that it performs comparisons in the same\
    \ way.\n      To support multiply-connected hosts, the code can be changed to\n\
    \      keep  the \"my_ip_addr\" and \"my_ip_mask\" quantities on a\n      per-interface\
    \ basis; the expression in the conditional must then\n      be evaluated for each\
    \ interface.\n   2.3. Subnets and Broadcasting\n      In the absence of subnets,\
    \ there are only two kinds of broadcast\n      possible within the Internet Protocol\
    \ <2>: broadcast to all hosts\n      on a specific network, or broadcast to all\
    \ hosts on \"this\n      network\"; the latter is useful when a host does not\
    \ know what\n      network it is on.\n      When subnets are used, the situation\
    \ becomes slightly more\n      complicated.  First, the possibility now exists\
    \ of broadcasting to\n      a specific subnet.  Second, broadcasting to all the\
    \ hosts on a\n      subnetted network requires additional mechanism; in [6] the\
    \ use of\n      \"Reverse Path Forwarding\" [3] is proposed.  Finally, the\n \
    \     interpretation of a broadcast to \"this network\" is that it should\n  \
    \    not be forwarded outside of the original subnet.\n      Implementations must\
    \ therefore recognize three kinds of broadcast\n      addresses, in addition to\
    \ their own host addresses:\n      This physical network\n         A destination\
    \ address of all ones (255.255.255.255) causes the\n         a datagram to be\
    \ sent as a broadcast on the local physical\n         network; it must not be\
    \ forwarded by any gateway.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      Specific network\n         The destination address contains\
    \ a valid network number; the\n         local address part is all ones (e.g.,\
    \ 36.255.255.255).\n      Specific subnet\n         The destination address contains\
    \ a valid network number and a\n         valid subnet number; the host field is\
    \ all ones (e.g.,\n         36.40.255.255).\n      For further discussion of Internet\
    \ broadcasting, see [6].\n      One factor that may aid in deciding whether to\
    \ use subnets is that\n      it is possible to broadcast to all hosts of a subnetted\
    \ network\n      with a single operation at the originating host.  It is not\n\
    \      possible to broadcast, in one step, to the same set of hosts if\n     \
    \ they are on distinct networks.\n   2.4. Determining the Width of the Subnet\
    \ Field\n      How can a host (or gateway) determine what subnet field width is\n\
    \      in use on a network to which it is connected?  The problem is\n      analogous\
    \ to several other \"bootstrapping\" problems for Internet\n      hosts: how a\
    \ host determines its own address, and how it locates a\n      gateway on its\
    \ local network.  In all three cases, there are two\n      basic solutions: \"\
    hardwired\" information, and broadcast-based\n      protocols.\n      \"Hardwired\"\
    \ information is that available to a host in isolation\n      from a network.\
    \  It may be compiled-in, or (preferably) stored in\n      a disk file.  However,\
    \ for the increasingly common case of a\n      diskless workstation that is bootloaded\
    \ over a LAN, neither\n      hard-wired solution is satisfactory.  Instead, since\
    \ most LAN\n      technology supports broadcasting, a better method is for the\n\
    \      newly-booted host to broadcast a request for the necessary\n      information.\
    \  For example, for the purpose of determining its\n      Internet address, a\
    \ host may use the \"Reverse Address Resolution\n      Protocol\" [4].\n     \
    \ We propose to extend the ICMP protocol [9] by adding a new pair of\n      ICMP\
    \ message types, \"Address Format Request\" and \"Address Format\n      Reply\"\
    , analogous to the \"Information Request\" and \"Information\n      Reply\" ICMP\
    \ messages.  These are described in detail in\n      Appendix I.\n      The intended\
    \ use of these new ICMPs is that a host, when booting,\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      broadcast an \"Address Format Request\" message <3>.\
    \  A gateway (or\n      a host acting in lieu of a gateway) that receives this\
    \ message\n      responds with an \"Address Format Reply\".  If there is no\n\
    \      indication in the request which host sent it (i.e., the IP Source\n   \
    \   Address is zero), the reply is broadcast as well.  The requesting\n      host\
    \ will hear the response, and from it determine the width of\n      the subnet\
    \ field.\n      Since there is only one possible value that can be sent in an\n\
    \      \"Address Format Reply\" on any given LAN, there is no need for the\n \
    \     requesting host to match the responses it hears against the\n      request\
    \ it sent; similarly, there is no problem if more than one\n      gateway responds.\
    \  We assume that hosts reboot infrequently, so\n      the broadcast load on a\
    \ network from use of this protocol should\n      be small.\n      If a host is\
    \ connected to more than one LAN, it must use this\n      protocol on each, unless\
    \ it can determine (from a response on one\n      of the LANs) that several of\
    \ the LANs are part of the same\n      network, and thus must have the same subnet\
    \ field width.\n      One potential problem is what a host should do if it receives\
    \ no\n      response to its \"Address Format Request\", even after a reasonable\n\
    \      number of tries.  Three interpretations can be placed on the\n      situation:\n\
    \         1. The local net exists in (permanent) isolation from all other\n  \
    \          nets.\n         2. Subnets are not in use, and no host supports this\
    \ ICMP\n            request.\n         3. All gateways on the local net are (temporarily)\
    \ down.\n      The first and second situations imply that the subnet field width\n\
    \      is zero.  In the third situation, there is no way to determine\n      what\
    \ the proper value is; the safest choice is thus zero.\n      Although this might\
    \ later turn out to be wrong, it will not\n      prevent transmissions that would\
    \ otherwise succeed.  It is\n      possible for a host to recover from a wrong\
    \ choice: when a gateway\n      comes up, it should broadcast an \"Address Format\
    \ Reply\"; when a\n      host receives such a message that disagrees with its\
    \ guess, it\n      should adjust its data structures to conform to the received\n\
    \      value.  No host or gateway should send an \"Address Format Reply\"\n  \
    \    based on a \"guessed\" value.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      Finally, note that no host is required to use this ICMP\
    \ protocol\n      to discover the subnet field width; it is perfectly reasonable\
    \ for\n      a host with non-volatile storage to use stored information.\n"
- title: 3. Subnet Routing Methods
  contents:
  - "3. Subnet Routing Methods\n   One problem that faces all Internet hosts is how\
    \ to determine a route\n   to another host.  In the presence of subnets, this\
    \ problem is only\n   slightly modified.\n   The use of subnets means that there\
    \ are two levels to the routing\n   process, instead of one.  If the destination\
    \ host is on the same\n   network as the source host, the routing decision involves\
    \ only the\n   subnet gateways between the hosts.  If the destination is on a\n\
    \   different network, then the routing decision requires the choice both\n  \
    \ of a gateway out of the source host's network, and of a route within\n   the\
    \ network to that gateway.\n   Fortunately, many hosts can ignore this distinction\
    \ (and, in fact,\n   ignore all routing choices) by using a \"default\" gateway\
    \ as the\n   initial route to all destinations, and relying on ICMP Host Redirect\n\
    \   messages to define more appropriate routes.  However, this is not an\n   efficient\
    \ method for a gateway or for a multi-homed host, since a\n   redirect may not\
    \ make up for a poor initial choice of route.  Such\n   hosts should use a routing\
    \ information exchange protocol, but that is\n   beyond the scope of this document;\
    \ in any case, the problem arises\n   even when subnets are not used.\n   The\
    \ problem for a singly-connected host is thus to find at least one\n   neighbor\
    \ gateway.  Again, there are basic two solutions to this: use\n   hard-wired information,\
    \ or use broadcasts.  We believe that the\n   neighbor-gateway acquisition problem\
    \ is the same with or without\n   subnets, and thus the choice of solution is\
    \ not affected by the use\n   of subnets.\n   However, one problem remains: a\
    \ source host must determine if\n   datagram to a given destination address must\
    \ be sent via a gateway,\n   or sent directly to the destination host.  In other\
    \ words, is the\n   destination host on the same physical network as the source?\
    \  This\n   particular phase of the routing process is the only one that requires\n\
    \   an implementation to be explicitly aware of subnets; in fact, if\n   broadcasts\
    \ are not used, it is the only place where an Internet\n   implementation must\
    \ be modified to support subnets.\n   Because of this, it is possible to use some\
    \ existing implementations\n   without modification in the presence of subnets\
    \ <4>.  For this to\n   work, such implementations must:\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      - Be used only on singly-homed hosts, and not as a gateway.\n\
    \      - Be used on a broadcast LAN.\n      - Use an Address Resolution Protocol\
    \ (ARP), such [7].\n      - Not be required to maintain connections in the case\
    \ of gateway\n        crashes.\n   In this case, one can modify the ARP server\
    \ module in a subnet\n   gateway so that when it receives an ARP request, it checks\
    \ the target\n   Internet address to see if it is along the best route to the\
    \ target.\n   If it is, it sends to the requesting host an ARP response indicating\n\
    \   its own hardware address.  The requesting host thus believes that it\n   knows\
    \ the hardware address of the destination host, and sends packets\n   to that\
    \ address.  In fact, the packets are received by the gateway,\n   and forwarded\
    \ to the destination host by the usual means.\n   This method requires some blurring\
    \ of the layers in the gateways,\n   since the ARP server and the Internet routing\
    \ table would normally\n   not have any contact.  In this respect, it is somewhat\n\
    \   unsatisfactory.  Still, it is fairly easy to implement, and does not\n   have\
    \ significant performance costs.  One problem is that if the\n   original gateway\
    \ crashes, there is no way for the source host to\n   choose an alternate route\
    \ even if one exists; thus, a connection that\n   might otherwise have been maintained\
    \ will be broken.\n   One should not confuse this method of \"ARP-based subnetting\"\
    \ with the\n   superficially similar use of ARP-based bridges.  ARP-based subnetting\n\
    \   is based on the ability of a gateway to examine an IP address and\n   deduce\
    \ a route to the destination, based on explicit subnet topology.\n   In other\
    \ words, a small part of the routing decision has been moved\n   from the source\
    \ host into the gateway.  An ARP-based bridge, in\n   contrast, must somehow locate\
    \ each host without any assistance from a\n   mapping between host address and\
    \ topology.  Systems built out of\n   ARP-based bridges should not be referred\
    \ to as \"subnetted\".\n   N.B.: the use of ARP-based subnetting is complicated\
    \ by the use of\n   broadcasts.  An ARP server [7] should never respond to a request\n\
    \   whose target is a broadcast address.  Such a request can only come\n   from\
    \ a host that does not recognize the broadcast address as such,\n   and so honoring\
    \ it would almost certainly lead to a forwarding loop.\n   If there are N such\
    \ hosts on the physical network that do not\n   recognize this address as a broadcast,\
    \ then a packet sent with a\n   Time-To-Live of T could potentially give rise\
    \ to T**N spurious\n   re-broadcasts.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - 'Internet Subnets

    '
- title: 4. Case Studies
  contents:
  - "4. Case Studies\n   In this section, we briefly sketch how subnets have been\
    \ used by\n   several organizations.\n   4.1. Stanford University\n      At Stanford,\
    \ subnets were introduced initially for historical\n      reasons.  Stanford had\
    \ been using the Pup protocols [1] on a\n      collection of several Experimental\
    \ Ethernets [5] since 1979,\n      several years before Internet protocols came\
    \ into use.  There were\n      a number of Pup gateways in service, and all hosts\
    \ and gateways\n      acquired and exchanged routing table information using a\
    \ simple\n      broadcast protocol.\n      When the Internet Protocol was introduced,\
    \ the decision was made\n      to use an eight-bit wide subnet number; Internet\
    \ subnet numbers\n      were chosen to match the Pup network number of a given\
    \ Ethernet,\n      and the Pup host numbers (also eight bits) were used as the\
    \ host\n      field of the Internet address.\n      The Pup-only gateways were\
    \ then modified to forward Internet\n      datagrams according to their Pup routing\
    \ tables; they otherwise\n      had no understanding of Internet packets and in\
    \ fact did not\n      adjust the Time-to-live field in the Internet header.  This\
    \ seems\n      to be acceptable, since bugs that caused forwarding loops have\
    \ not\n      appeared.  The Internet hosts that are multi-homed and thus can\n\
    \      serve as gateways do adjust the Time-to-live field; since all of\n    \
    \  the currently also serve as Pup gateways, no additional routing\n      information\
    \ exchange protocol was needed.\n      Internet host implementations were modified\
    \ to understand subnets\n      (in several different ways, but with identical\
    \ effects).  Since\n      all already had Pup implementations, the Internet routing\
    \ tables\n      were maintained by the same process that maintained the Pup\n\
    \      routing tables, simply translating the Pup network numbers into\n     \
    \ Internet subnet numbers.\n      When 10Mbit Ethernets were added, the gateways\
    \ were modified to\n      use the ARP-based scheme described in an earlier section;\
    \ this\n      allowed unmodified hosts to be used on the 10Mbit Ethernets.\n \
    \     IP subnets have been in use since early 1982; currently, there are\n   \
    \   about 330 hosts, 18 subnets, and a similar number of subnet\n      gateways\
    \ in service.  Once the Pup-only gateways are converted to\n      be true Internet\
    \ gateways, an Internet-based routing exchange\n      protocol will be introduced,\
    \ and Pup will be phased out.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n   4.2. MIT\n      MIT was the first IP site to accumulate\
    \ a large collection of\n      local network links.  Since this happened before\
    \ network numbers\n      were divided into classes, to have assigned each link\
    \ at MIT its\n      own IP network number would have used up a good portion of\
    \ the\n      available address space.  MIT decided to use one IP network\n   \
    \   number, and to manage the 24-bit \"rest\" field itself, by dividing\n    \
    \  it into three 8-bit fields; \"subnet\", \"reserved, must be zero\",\n     \
    \ and \"host\".   Since the CHAOS protocol already in use at MIT used\n      an\
    \ 8-bit subnet number field, it was possible to assign each link\n      the same\
    \ subnet number in both protocols.  The IP host field was\n      set to 8 bits\
    \ since most available local net hardware at that\n      point used 8 bit addresses,\
    \ as did the CHAOS protocol; it was felt\n      that reserving some bits for the\
    \ future was wise.\n      The initial plan was to use a dynamic routing protocol\
    \ between the\n      IP subnet gateways; several such protocols have been mooted\
    \ but\n      nobody has bothered to implement one; static routing tables are\n\
    \      still used.  It is likely that this change will finally be made\n     \
    \ soon.\n      To solve the problem that imported IP software always needed\n\
    \      modification to work in the subnetted environment, MIT searched\n     \
    \ for a model of operation that led to the least change in host IP\n      software.\
    \  This led to a model where IP gateways send ICMP Host\n      Redirects rather\
    \ than Network Redirects.  All internal MIT IP\n      gateways now do so.  With\
    \ hosts that can maintain IP routing\n      tables for non-local communication\
    \ on a per host basis, this hides\n      most of the subnet structure.  The \"\
    minimum adjustment\" for host\n      software to work correctly in both subnetted\
    \ and non-subnetted\n      environments is the bit-mask algorithm mentioned earlier.\n\
    \      MIT has no immediate plans to move toward a single \"approved\"\n     \
    \ protocol; this is due partly to the degree of local autonomy and\n      the\
    \ amount of installed software, and partly to the lack of a\n      single prominent\
    \ industry standard.  Rather, the approach taken\n      has been to provide a\
    \ single set of physical links and packet\n      switches, and to layer several\
    \ \"virtual\" protocol nets atop the\n      single set of links.  MIT has had\
    \ some bad experiences with trying\n      to exchange routing information between\
    \ protocols and wrap one\n      protocol in another; the general approach is to\
    \ keep the protocols\n      strictly separated except for sharing the basic hardware.\
    \  Using\n      ARP to hide the subnet structure is not much in favor; it is felt\n\
    \      that this overloads the address resolution operation.  In a\n      complicated\
    \ system (i.e. one with loops, and variant link speeds),\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      a more sophisticated information interchange will be\
    \ needed\n      between gateways; making this an explicit mechanism (but one\n\
    \      insulated from the hosts) was felt to be best.\n   4.3. Carnegie-Mellon\
    \ University\n      CMU uses a Class B network currently divided into 11 physical\n\
    \      subnets (two 3Mbit Experimental Ethernets, seven 10Mbit Ethernets,\n  \
    \    and two ProNet rings.) Although host numbers are assigned so that\n     \
    \ all addresses with a given third octet will be on the same subnet\n      (but\
    \ not necessarily vice versa), this is essentially an\n      administrative convenience.\
    \  No software currently knows the\n      specifics of this allocation mechanism\
    \ or depends on it to route\n      between cables.\n      Instead, an ARP-based\
    \ bridge scheme is used.  When a host\n      broadcasts an ARP request, all bridges\
    \ which receive it cache the\n      original protocol address mapping and then\
    \ forward the request\n      (after the appropriate adjustments) as an ARP broadcast\
    \ request\n      onto each of their other connected cables.  When a bridge receives\n\
    \      a non-broadcast ARP reply with a target protocol address not its\n    \
    \  own, it consults its ARP cache to determine the cable onto which\n      the\
    \ reply should be forwarded.  The bridges thus attempt to\n      transparently\
    \ extend the ARP protocol into a heterogenous\n      multi-cable environment.\
    \  They are therefore required to turn ARP\n      broadcasts on a single cable\
    \ into ARP broadcasts on all other\n      connected cables even when they \"know\
    \ better\".  This algorithm\n      works only in the absence of cycles in the\
    \ network connectivity\n      graph (which is currently the case).  Work is underway\
    \ to replace\n      this simple-minded algorithm with a protocol implemented among\
    \ the\n      bridges, in support of redundant paths and to reduce the\n      collective\
    \ broadcast load.  The intent is to retain the ARP base\n      and host transparency,\
    \ if possible.\n      Implementations supporting the 3Mbit Ethernet and 10Mb proNET\
    \ ring\n      at CMU use RFC-826 ARP (instead of some wired-in mapping such as\n\
    \      simply using the 8-bit hardware address as the the fourth octet of\n  \
    \    the IP address).\n      Since there are currently no redundant paths between\
    \ cables, the\n      issue of maintaining connections across bridge crashes is\
    \ moot.\n      With about 150 IP-capable hosts on the net, the bridge caches are\n\
    \      still of reasonable size, and little bandwidth is devoted to ARP\n    \
    \  broadcast forwarding.\n      CMU's network is likely to grow from its relatively\
    \ small,\n      singly-connected configuration centered within their CS/RI\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      facility to a campus-wide intra-departmental configuration\
    \ with\n      5000-10000 hosts and redundant connections between cables.  It is\n\
    \      possible that the ARP-based bridge scheme will not scale to this\n    \
    \  size, and a system of explicit subnets may be required.  The\n      medium-term\
    \ goal, however, is an environment into which unmodified\n      extant (especially\
    \ 10Mb ethernet based) IP implementations can be\n      imported; the intent is\
    \ to stay with a host-transparent (thus\n      ARP-based) routing mechanism as\
    \ long as possible.  CMU is\n      concerned that even if subnets become part\
    \ of the IP standard they\n      will not be widely implemented; this is the major\
    \ obstacle to\n      their use at CMU.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - 'Internet Subnets

    '
- title: I. Address Format ICMP
  contents:
  - "I. Address Format ICMP\n   Address Format Request or Address Format Reply\n \
    \      0                   1                   2                   3\n       0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |      Code     |          Checksum             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |       Sequence Number         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      IP Fields:\n         Addresses\n            The address of the source in\
    \ an address format request\n            message will be the destination of the\
    \ address format reply\n            message.  To form an address format reply\
    \ message, the\n            source address of the request becomes the destination\n\
    \            address of the reply, the source address of the reply is set\n  \
    \          to the replier's address, the type code changed to A2, the\n      \
    \      subnet field width inserted into the Code field, and the\n            checksum\
    \ recomputed.  However, if the source address in the\n            request message\
    \ is zero, then the destination address for\n            the reply message should\
    \ denote a broadcast.\n      ICMP Fields:\n         Type\n            A1 for address\
    \ format request message\n            A2 for address format reply message\n  \
    \       Code\n            0 for address format request message\n            Width\
    \ of subnet field, in bits, for address format reply\n            message\n  \
    \       Checksum\n            The checksum is the 16-bit one's complement of the\
    \ one's\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n            complement sum of the ICMP message starting with\
    \ the ICMP\n            Type.  For computing the checksum, the checksum field\
    \ should\n            be zero.  This checksum may be replaced in the future.\n\
    \         Identifier\n            An identifier to aid in matching request and\
    \ replies, may be\n            zero.\n         Sequence Number\n            A\
    \ sequence number to aid in matching request and replies,\n            may be\
    \ zero.\n      Description\n         A gateway receiving an address format request\
    \ should return it\n         with the Code field set to the number of bits of\
    \ Subnet number\n         in IP addresses for the network to which the datagram\
    \ was\n         addressed.  If the request was broadcast, the destination\n  \
    \       network is \"this network\".  The Subnet field width may be from\n   \
    \      0 to (31 - N), where N is the width in bits of the IP net\n         number\
    \ field (i.e., 8, 16, or 24).\n         If the requesting host does not know its\
    \ own IP address, it may\n         leave the source field zero; the reply should\
    \ then be\n         broadcast.  Since there is only one possible address format\
    \ for\n         a network, there is no need to match requests with replies.\n\
    \         However, this approach should be avoided if at all possible,\n     \
    \    since it increases the superfluous broadcast load on the\n         network.\n\
    \            Type A1 may be received from a gateway or a host.\n            Type\
    \ A2 may be received from a gateway, or a host acting in\n            lieu of\
    \ a gateway.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - 'Internet Subnets

    '
- title: II. Examples
  contents:
  - "II. Examples\n   For these examples, we assume that the requesting host has \
    \ address\n   36.40.0.123, that there is a gateway at 36.40.0.62, and that on\n\
    \   network 36.0.0.0, an 8-bit wide subnet field is in use.\n   First, suppose\
    \ that broadcasting is allowed, and that 36.40.0.123\n   knows  its own address.\
    \  It sends the following datagram:\n      Source address:          36.40.0.123\n\
    \      Destination address:     36.255.255.255\n      Protocol:              \
    \  ICMP = 1\n      Type:                    Address Format Request = A1\n    \
    \  Code:                    0\n   36.40.0.62 will hear the datagram, and should\
    \ respond with this\n   datagram:\n      Source address:          36.40.0.62\n\
    \      Destination address:     36.40.0.123\n      Protocol:                ICMP\
    \ = 1\n      Type:                    Address Format Reply = A2\n      Code: \
    \                   8\n   For the following examples, assume that address 255.255.255.255\n\
    \   denotes \"broadcast to this physical network\", as described in [6].\n   The\
    \ previous example is inefficient, because it potentially\n   broadcasts  the\
    \ request on many subnets.  The most efficient method,\n   and the one we recommend,\
    \ is for a host to first discover its own\n   address (perhaps  using the \"Reverse\
    \ ARP\" protocol described in [4]),\n   and then to send  the ICMP request to\
    \ 255.255.255.255:\n      Source address:          36.40.0.123\n      Destination\
    \ address:     255.255.255.255\n      Protocol:                ICMP = 1\n    \
    \  Type:                    Address Format Request = A1\n      Code:         \
    \           0\n   The gateway can then respond directly to the requesting host.\n\
    \   Suppose that 36.40.0.123 is a diskless workstation, and does not know\n  \
    \ even its own host number.  It could send the following datagram:\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - "Internet Subnets\n      Source address:          0.0.0.0\n      Destination address:\
    \     255.255.255.255\n      Protocol:                ICMP = 1\n      Type:  \
    \                  Address Format Request = A1\n      Code:                  \
    \  0\n   36.40.0.62 will hear the datagram, and should respond with this\n   datagram:\n\
    \      Source address:          36.40.0.62\n      Destination address:     36.40.255.255\n\
    \      Protocol:                ICMP = 1\n      Type:                    Address\
    \ Format Reply = A2\n      Code:                    8\n   Note that the gateway\
    \ uses the narrowest possible broadcast to reply\n   (i.e., sending the reply\
    \ to 36.255.255.255 would mean that it is\n   transmitted on many subnets, not\
    \ just the one on which it is needed.)\n   Even so, the overuse of broadcasts\
    \ presents an unnecessary load to\n   all hosts on the subnet, and so we recommend\
    \ that use of the\n   \"anonymous\" (0.0.0.0) source address be kept to a minimum.\n\
    \   If  broadcasting is not allowed, we assume that hosts have wired-in\n   information\
    \ about neighbor gateways; thus, 36.40.0.123 might send\n   this datagram:\n \
    \     Source address:          36.40.0.123\n      Destination address:     36.40.0.62\n\
    \      Protocol:                ICMP = 1\n      Type:                    Address\
    \ Format Request = A1\n      Code:                    0\n   36.40.0.62 should\
    \ respond exactly as in the previous case.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - 'Internet Subnets

    '
- title: Notes
  contents:
  - "Notes\n   <1>  For example, some host have addresses assigned by concatenating\n\
    \        their Class A network number with the low-order 24 bits of a\n      \
    \  48-bit Ethernet hardware address.\n   <2>  Our discussion of Internet broadcasting\
    \ is based on [6].\n   <3>  If broadcasting is not supported, them presumably\
    \ a host \"knows\"\n        the address of a neighbor gateway, and should send\
    \ the ICMP to\n        that gateway.\n   <4>  This is what was referred to earlier\
    \ as the coexistence of\n        transparent and explicit subnets on a single\
    \ network.\n"
- title: RFC 917                                                     October 1984
  contents:
  - 'RFC 917                                                     October 1984

    '
- title: Internet Subnets
  contents:
  - 'Internet Subnets

    '
- title: References
  contents:
  - "References\n   1.  D.R. Boggs, J.F. Shoch, E.A. Taft, and R.M. Metcalfe. \"Pup:\
    \ An\n       Internetwork Architecture.\"  IEEE Transactions on Communications\n\
    \       COM-28, 4, pp612-624, April 1980.\n   2.  David D. Clark.  Names, Addresses,\
    \ Ports, and Routes.  RFC-814,\n       MIT-LCS, July 1982.\n   3.  Yogan K. Dalal\
    \ and Robert M. Metcalfe. \"Reverse Path Forwarding\n       of Broadcast Packets.\"\
    \  Comm. ACM 21, 12, pp1040-1048, December\n       1978.\n   4.  Ross Finlayson,\
    \ Timothy Mann, Jeffrey Mogul, Marvin Theimer. A\n       Reverse Address Resolution\
    \ Protocol. RFC-903, Stanford\n       University, June 1984.\n   5.  R.M. Metcalfe\
    \ and D.R. Boggs. \"Ethernet: Distributed Packet\n       Switching for Local Computer\
    \ Networks.\"  Comm. ACM 19, 7,\n       pp395-404, July 1976.  Also CSL-75-7,\
    \ Xerox Palo Alto Research\n       Center, reprinted in CSL-80-2.\n   6.  Jeffrey\
    \ Mogul. Broadcasting Internet Datagrams. RFC-919, Stanford\n       University,\
    \ October 1984.\n   7.  David Plummer. An Ethernet Address Resolution Protocol.\
    \ RFC-826,\n       Symbolics, September 1982.\n   8.  Jon Postel. Internet Protocol.\
    \ RFC-791, USC-ISI, September 1981.\n   9.  Jon Postel. Internet Control Message\
    \ Protocol. RFC-792, USC-ISI,\n       September 1981.\n"
