- title: __initial_text__
  contents:
  - "       Threats Introduced by Reliable Server Pooling (RSerPool)\n          and\
    \ Requirements for Security in Response to Threats\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   Reliable Server Pooling (RSerPool) is an architecture and set of\n\
    \   protocols for the management and access to server pools supporting\n   highly\
    \ reliable applications and for client access mechanisms to a\n   server pool.\
    \  This document describes security threats to the\n   RSerPool architecture and\
    \ presents requirements for security to\n   thwart these threats.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Definitions ................................................3\n  \
    \    1.2. Conventions ................................................4\n   2.\
    \ Threats .........................................................4\n      2.1.\
    \ PE Registration/De-Registration Flooding --\n           Non-Existent PE ............................................4\n\
    \      2.2. PE Registration/De-Registration Flooding --\n           Unauthorized\
    \ PE ............................................5\n      2.3. PE Registration/De-Registration\
    \ Spoofing ...................6\n      2.4. PE Registration/De-Registration Unauthorized\
    \ ...............6\n      2.5. Malicious ENRP Server Joins the Group of Legitimate\n\
    \           ENRP Servers ...............................................7\n  \
    \    2.6. Registration/De-Registration with Malicious ENRP Server ....7\n    \
    \  2.7. Malicious ENRP Handlespace Resolution ......................8\n      2.8.\
    \ Malicious Node Performs a Replay Attack ....................9\n      2.9. Re-Establishing\
    \ PU-PE Security during Failover .............9\n      2.10. Integrity ................................................10\n\
    \      2.11. Data Confidentiality .....................................10\n  \
    \    2.12. ENRP Server Discovery ....................................11\n    \
    \  2.13. Flood of Endpoint-Unreachable Messages from the\n            PU to the\
    \ ENRP Server ....................................12\n      2.14. Flood of Endpoint\
    \ Keep-Alive Messages from the\n            ENRP Server to a PE ......................................12\n\
    \      2.15. Security of the ENRP Database ............................13\n  \
    \    2.16. Cookie Mechanism Security ................................13\n    \
    \  2.17. Potential Insider Attacks from Legitimate ENRP Servers ...14\n   3. Security\
    \ Considerations ........................................15\n   4. Normative References\
    \ ...........................................17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The RSerPool architecture [RFC5351] supports high-availability\
    \ and\n   load balancing by enabling a pool user to identify the most\n   appropriate\
    \ server from the server pool at a given time.  The\n   architecture is defined\
    \ to support a set of basic goals.  These\n   include application-independent\
    \ protocol mechanisms, separation of\n   server naming from IP addressing, the\
    \ use of the end-to-end principle\n   to avoid dependencies on intermediate equipment,\
    \ separation of\n   session availability/failover functionality from the application\n\
    \   itself, the ability to facilitate different server selection\n   policies,\
    \ the ability to facilitate a set of application-independent\n   failover capabilities,\
    \ and a peer-to-peer structure.\n   RSerPool provides a session layer for robustness.\
    \  The session layer\n   function may redirect communication transparently to\
    \ upper layers.\n   This alters the direct one-to-one association between communicating\n\
    \   endpoints that typically exists between clients and servers.  In\n   particular,\
    \ secure operation of protocols often relies on assumptions\n   at different layers\
    \ regarding the identity of the communicating party\n   and the continuity of\
    \ the communication between endpoints.  Further,\n   the operation of RSerPool\
    \ itself has security implications and risks.\n   The session layer operates dynamically,\
    \ which imposes additional\n   concerns for the overall security of the end-to-end\
    \ application.\n   This document explores the security implications of RSerPool,\
    \ both\n   due to its own functions and due to its being interposed between\n\
    \   applications and transport interfaces.\n   This document is related to the\
    \ RSerPool Aggregate Server Access\n   Protocol (ASAP) [RFC5352] and Endpoint\
    \ Name Resolution Protocol\n   (ENRP) [RFC5353] documents, which describe, in\
    \ their Security\n   Consideration sections, the mechanisms for meeting the security\n\
    \   requirements in this document.  TLS [RFC5246] is the security\n   mechanism\
    \ for RSerPool that was selected to meet all the requirements\n   described in\
    \ this document.  The Security Considerations sections of\n   ASAP and ENRP describe\
    \ how TLS is actually used to provide the\n   security that is discussed in this\
    \ document.\n"
- title: 1.1.  Definitions
  contents:
  - "1.1.  Definitions\n   This document uses the following terms:\n   Endpoint Name\
    \ Resolution Protocol (ENRP):\n      Within the operational scope of RSerPool,\
    \ ENRP[RFC5353] defines\n      the procedures and message formats of a distributed\
    \ fault-tolerant\n      registry service for storing, bookkeeping, retrieving,\
    \ and\n      distributing pool operation and membership information.\n   Aggregate\
    \ Server Access Protocol (ASAP):\n      ASAP [RFC5352] is a session layer protocol\
    \ that uses ENRP to\n      provide a high-availability handlespace.  ASAP is responsible\
    \ for\n      the abstraction of the underlying transport technologies, load\n\
    \      distribution management, fault management, as well as the\n      presentation\
    \ to the upper layer (i.e., the ASAP User) of a unified\n      primitive interface.\n\
    \   Operational scope:\n      The part of the network visible to pool users by\
    \ a specific\n      instance of the Reliable Server Pooling protocols.\n   Pool\
    \ (or server pool):\n      A collection of servers providing the same application\n\
    \      functionality.\n   Pool handle:\n      A logical pointer to a pool.  Each\
    \ server pool will be\n      identifiable in the operational scope of the system\
    \ by a unique\n      pool handle.\n   ENRP handlespace (or handlespace):\n   \
    \   A cohesive structure of pool names and relations that may be\n      queried\
    \ by a client.  A client in this context is an application\n      that accesses\
    \ another remote application running on a server using\n      a network.\n   Pool\
    \ element (PE):  A server entity having registered to a pool.\n   Pool user (PU):\
    \  A server pool user.\n"
- title: 1.2.  Conventions
  contents:
  - "1.2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n"
- title: 2.  Threats
  contents:
  - '2.  Threats

    '
- title: 2.1.  PE Registration/De-Registration Flooding -- Non-Existent PE
  contents:
  - '2.1.  PE Registration/De-Registration Flooding -- Non-Existent PE

    '
- title: 2.1.1.  Threat
  contents:
  - "2.1.1.  Threat\n   A malicious node could send a stream of false registrations/de-\n\
    \   registrations on behalf of non-existent PEs to ENRP servers at a very\n  \
    \ rapid rate and thereby create unnecessary state in an ENRP server.\n"
- title: 2.1.2.  Effect
  contents:
  - "2.1.2.  Effect\n   The malicious node will corrupt the pool registrar database\
    \ and/or\n   disable the RSerPool discovery and database function.  This\n   represents\
    \ a denial-of-service attack, as the PU would potentially\n   get an IP address\
    \ of a non-existent PE in response to an ENRP query.\n"
- title: 2.1.3.  Requirement
  contents:
  - "2.1.3.  Requirement\n   An ENRP server that receives a registration/de-registration\
    \ MUST NOT\n   create or update state information until it has authenticated the\
    \ PE.\n   TLS with a pre-shared-key (PSK) is mandatory to implement as the\n \
    \  authentication mechanism.  For PSK, having a pre-shared-key\n   constitutes\
    \ authorization.  The network administrators of a pool need\n   to decide which\
    \ nodes are authorized to participate in the pool.  The\n   justification for\
    \ PSK is that we assume that one administrative\n   domain will control and manage\
    \ the server pool.  This allows for PSK\n   to be implemented and managed by a\
    \ central security administrator.\n"
- title: 2.2.  PE Registration/De-Registration Flooding -- Unauthorized PE
  contents:
  - '2.2.  PE Registration/De-Registration Flooding -- Unauthorized PE

    '
- title: 2.2.1.  Threat
  contents:
  - "2.2.1.  Threat\n   A malicious node or PE could send a stream of registrations/de-\n\
    \   registrations that are unauthorized to register/de-register to ENRP\n   servers\
    \ at a very rapid rate and thereby create unnecessary state in\n   an ENRP server.\n"
- title: 2.2.2.  Effect
  contents:
  - "2.2.2.  Effect\n   This attack will corrupt the pool registrar database and/or\
    \ disable\n   the RSerPool discovery and database function.  There is the potential\n\
    \   for two types of attacks: denial of service and data interception.\n   In\
    \ the denial-of-service attack, the PU gets an IP address of a rogue\n   PE in\
    \ response to an ENRP query, which might not provide the actual\n   service. \
    \ In addition, a flood of message could prevent legitimate\n   PEs from registering.\
    \  In the data interception attack, the rogue PE\n   does provide the service\
    \ as a man in the middle (MITM), which allows\n   the attacker to collect data.\n"
- title: 2.2.3.  Requirement
  contents:
  - "2.2.3.  Requirement\n   An ENRP server that receives a registration/de-registration\
    \ MUST NOT\n   create or update state information until the authentication\n \
    \  information of the registering/de-registering entity is verified.\n   TLS is\
    \ used as the authentication mechanism between the ENRP server\n   and PE.  TLS\
    \ with PSK is mandatory to implement as the authentication\n   mechanism.  For\
    \ PSK, having a pre-shared-key constitutes\n   authorization.  The network administrators\
    \ of a pool need to decide\n   which nodes are authorized to participate in the\
    \ pool.\n"
- title: 2.3.  PE Registration/De-Registration Spoofing
  contents:
  - '2.3.  PE Registration/De-Registration Spoofing

    '
- title: 2.3.1.  Threat
  contents:
  - "2.3.1.  Threat\n   A malicious node could send false registrations/de-registrations\
    \ to\n   ENRP servers concerning a legitimate PE, thereby creating false state\n\
    \   information in the ENRP servers.\n"
- title: 2.3.2.  Effect
  contents:
  - "2.3.2.  Effect\n   This would generate misinformation in the ENRP server concerning\
    \ a PE\n   and would be propagated to other ENRP servers, thereby corrupting the\n\
    \   ENRP database.  Distributed Denial of Service (DDoS) could result: if\n  \
    \ a PE that is a target for a DDoS attack for some popular high-volume\n   service,\
    \ then the attacker can register a PE to which a lot of PUs\n   will try to connect.\
    \  This allows man-in-the-middle or masquerade\n   attacks on the service provided\
    \ by the legitimate PEs.  If an\n   attacker registers its server address as a\
    \ PE and handles the\n   requests, he can eavesdrop on service data.\n"
- title: 2.3.3.  Requirement
  contents:
  - "2.3.3.  Requirement\n   An ENRP server that receives a registration/de-registration\
    \ MUST NOT\n   create or update state information until it has authenticated the\
    \ PE.\n   TLS is used as the authentication mechanism between the ENRP server\n\
    \   and the PE.  TLS with PSK is mandatory to implement as the\n   authentication\
    \ mechanism.  For PSK, having a pre-shared-key\n   constitutes authorization.\
    \  The network administrators of a pool need\n   to decide which nodes are authorized\
    \ to participate in the pool.  A\n   PE can register only for itself and cannot\
    \ register on behalf of\n   other PEs.\n"
- title: 2.4.  PE Registration/De-Registration Unauthorized
  contents:
  - '2.4.  PE Registration/De-Registration Unauthorized

    '
- title: 2.4.1.  Threat
  contents:
  - "2.4.1.  Threat\n   A PE that is not authorized to join a pool could send registrations/\n\
    \   de-registrations to ENRP servers, thereby creating false state\n   information\
    \ in the ENRP servers.\n"
- title: 2.4.2.  Effect
  contents:
  - "2.4.2.  Effect\n   This attack would generate misinformation in the ENRP server\n\
    \   concerning a PE and would be propagated to other ENRP servers thereby\n  \
    \ corrupting the ENRP database.  This allows man-in-the-middle or\n   masquerade\
    \ attacks on the service provided by the legitimate PEs.  If\n   an attacker registers\
    \ its server address as a PE and handles the\n   requests, he can eavesdrop on\
    \ service data.\n"
- title: 2.4.3.  Requirement
  contents:
  - "2.4.3.  Requirement\n   An ENRP server that receives a registration/de-registration\
    \ MUST NOT\n   create or update state information until it has authorized the\n\
    \   requesting entity.  TLS is used as the authentication mechanism.  TLS\n  \
    \ with PSK is mandatory to implement as the authentication mechanism.\n   For\
    \ PSK, having a pre-shared-key constitutes authorization.  The\n   network administrators\
    \ of a pool need to decide which nodes are\n   authorized to participate in the\
    \ pool.\n"
- title: 2.5.  Malicious ENRP Server Joins the Group of Legitimate ENRP Servers
  contents:
  - '2.5.  Malicious ENRP Server Joins the Group of Legitimate ENRP Servers

    '
- title: 2.5.1.  Threat
  contents:
  - "2.5.1.  Threat\n   A malicious ENRP server joins the group of legitimate ENRP\
    \ servers\n   with the intent of propagating inaccurate updates to corrupt the\
    \ ENRP\n   database.  The attacker sets up an ENRP server and attempts to\n  \
    \ communicate with other ENRP servers.\n"
- title: 2.5.2.  Effect
  contents:
  - "2.5.2.  Effect\n   The result would be Inconsistent ENRP database state.\n"
- title: 2.5.3.  Requirement
  contents:
  - "2.5.3.  Requirement\n   ENRP servers MUST perform mutual authentication.  This\
    \ would prevent\n   the attacker from joining its ENRP server to the pool.  TLS\
    \ is used\n   as the mutual authentication mechanism.  TLS with PSK is mandatory\
    \ to\n   implement as the authentication mechanism.  For PSK, having a\n   pre-shared-key\
    \ constitutes authorization.  The network administrators\n   of a pool need to\
    \ decide which nodes are authorized to participate in\n   the pool.\n"
- title: 2.6.  Registration/De-Registration with Malicious ENRP Server
  contents:
  - '2.6.  Registration/De-Registration with Malicious ENRP Server

    '
- title: 2.6.1.  Threat
  contents:
  - "2.6.1.  Threat\n   A PE unknowingly registers/de-registers with a malicious ENRP\
    \ server.\n"
- title: 2.6.2.  Effect
  contents:
  - "2.6.2.  Effect\n   The registration might not be properly processed or it might\
    \ be\n   ignored.  A rogue ENRP server has the ability to return any address\n\
    \   to a user requesting service; this ability could result in denial of\n   service\
    \ or connection to a rogue PE that is the attacker's choice for\n   service.\n"
- title: 2.6.3.  Requirement
  contents:
  - "2.6.3.  Requirement\n   The PE MUST authenticate the ENRP server.  TLS is the\
    \ mechanism used\n   for the authentication.  TLS with PSK is mandatory to implement\
    \ as\n   the authentication mechanism.  For PSK, having a pre-shared-key\n   constitutes\
    \ authorization.  The network administrators of a pool need\n   to decide which\
    \ nodes are authorized to participate in the pool.\n   This requirement prevents\
    \ malicious outsiders and insiders from\n   adding their own ENRP server to the\
    \ pool.\n"
- title: 2.7.  Malicious ENRP Handlespace Resolution
  contents:
  - '2.7.  Malicious ENRP Handlespace Resolution

    '
- title: 2.7.1.  Threat
  contents:
  - "2.7.1.  Threat\n   The ASAP protocol receives a handlespace resolution response\
    \ from an\n   ENRP server, but the ENRP server is malicious and returns random\
    \ IP\n   addresses or an inaccurate list in response to the pool handle.\n"
- title: 2.7.2.  Effect
  contents:
  - "2.7.2.  Effect\n   The PU application communicates with the wrong PE or is unable\
    \ to\n   locate the PE since the response is incorrect in saying that a PE\n \
    \  with that handle did not exist.  A rogue ENRP server has the ability\n   to\
    \ return any address to ASAP requesting an address list that could\n   result\
    \ in denial of service or connection to a rogue PE of the\n   attacker's choice\
    \ for service.  From the PE, the attacker could\n   eavesdrop or tamper with the\
    \ application.\n"
- title: 2.7.3.  Requirement
  contents:
  - "2.7.3.  Requirement\n   ASAP SHOULD authenticate the ENRP server.  TLS with certificates\
    \ is\n   the mandatory-to-implement mechanism used for authentication.  The\n\
    \   administrator uses a centralized Certificate Authority (CA) to\n   generate\
    \ and sign certificates.  The certificate is stored on the\n   ENRP server.  A\
    \ CA trusted root certification authority certificate\n   is sent to the client\
    \ out of band, and the certificate signature on\n   the ENRP server certificate\
    \ is checked for validity during the TLS\n   handshake.  This authentication prevents\
    \ malicious outsiders and\n   insiders from adding an ENRP server to the pool\
    \ that may be accessed\n   by ASAP.\n"
- title: 2.8.  Malicious Node Performs a Replay Attack
  contents:
  - '2.8.  Malicious Node Performs a Replay Attack

    '
- title: 2.8.1.  Threat
  contents:
  - "2.8.1.  Threat\n   A malicious node could replay the entire message previously\
    \ sent by a\n   legitimate entity.  This could create false/unnecessary state\
    \ in the\n   ENRP servers when the replay is for registration/de-registration\
    \ or\n   update.\n"
- title: 2.8.2.  Effect
  contents:
  - "2.8.2.  Effect\n   The result is that false/extra state is maintained by ENRP\
    \ servers.\n   This would most likely be used as a denial-of-service attack if\
    \ the\n   replay is used to de-register all PEs.\n"
- title: 2.8.3.  Requirement
  contents:
  - "2.8.3.  Requirement\n   The protocol MUST prevent replay attacks.  The replay\
    \ attack\n   prevention mechanism in TLS meets this requirement.\n"
- title: 2.9.  Re-Establishing PU-PE Security during Failover
  contents:
  - '2.9.  Re-Establishing PU-PE Security during Failover

    '
- title: 2.9.1.  Threat
  contents:
  - "2.9.1.  Threat\n   The PU fails over from PE A to PE B.  In the case that the\
    \ PU had a\n   trusted relationship with PE A, the PU will likely not have the\
    \ same\n   relationship established with PE B.\n"
- title: 2.9.2.  Effect
  contents:
  - "2.9.2.  Effect\n   If there was a trust relationship involving security context\
    \ between\n   PU and PE A, the equivalent trust relationship will not exist between\n\
    \   PU and PE B.  This will violate security policy.  For example, if the\n  \
    \ security context with A involves encryption and the security context\n   with\
    \ B does not, then an attacker could take advantage of the change\n   in security.\n"
- title: 2.9.3.  Requirement
  contents:
  - "2.9.3.  Requirement\n   The application SHOULD be notified when failover occurs\
    \ so the\n   application can take appropriate action to establish a trusted\n\
    \   relationship with PE B.  ENRP has a mechanism to perform this\n   function.\n"
- title: 2.10.  Integrity
  contents:
  - '2.10.  Integrity

    '
- title: 2.10.1.  Threat
  contents:
  - "2.10.1.  Threat\n   The following are all instances of the same class of threats,\
    \ and all\n   have similar effects.\n   a.  ENRP response to pool handle resolution\
    \ is corrupted during\n       transmission.\n   b.  ENRP peer messages are corrupted\
    \ during transmission.\n   c.  PE sends an update for values, and that information\
    \ is corrupted\n       during transmission.\n"
- title: 2.10.2.  Effect
  contents:
  - "2.10.2.  Effect\n   The result is that ASAP receives corrupt information for\
    \ pool handle\n   resolution, which the PU believes to be accurate.  This corrupt\n\
    \   information could be an IP address that does not resolve to a PE so\n   the\
    \ PU would not be able to contact the server.\n"
- title: 2.10.3.  Requirement
  contents:
  - "2.10.3.  Requirement\n   An integrity mechanism MUST be present.  Corruption\
    \ of data that is\n   passed to the PU means that the PU can't rely on it.  The\
    \ consequence\n   of corrupted information is that the IP addresses passed to\
    \ the PU\n   might be wrong, in which case, it will not be able to reach the PE.\n\
    \   The interfaces that MUST implement integrity are PE to ENRP server\n   and\
    \ ENRP to ENRP server.  The integrity mechanism in TLS is used for\n   this.\n"
- title: 2.11.  Data Confidentiality
  contents:
  - '2.11.  Data Confidentiality

    '
- title: 2.11.1.  Threat
  contents:
  - "2.11.1.  Threat\n   An eavesdropper capable of snooping on fields within messages\
    \ in\n   transit may be able to gather information, such as\n   topology/location/IP\
    \ addresses, etc., which may not be desirable to\n   divulge.\n"
- title: 2.11.2.  Effect
  contents:
  - "2.11.2.  Effect\n   Information that an administrator does not wish to divulge\
    \ is\n   divulged.  The attacker gains valuable information that can be used\n\
    \   for financial gain or attacks on hosts.\n"
- title: 2.11.3.  Requirement
  contents:
  - "2.11.3.  Requirement\n   A provision for data confidentiality service SHOULD\
    \ be available.\n   TLS provides data confidentiality in support of this mechanism.\n"
- title: 2.12.  ENRP Server Discovery
  contents:
  - '2.12.  ENRP Server Discovery

    '
- title: 2.12.1.  Threats
  contents:
  - "2.12.1.  Threats\n   a.  Thwarting successful discovery: When a PE wishes to\
    \ register with\n       an ENRP server, it needs to discover an ENRP server. \
    \ An attacker\n       could thwart the successful discovery of ENRP server(s),\
    \ thereby\n       inducing the PE to believe that no ENRP server is available.\
    \  For\n       instance, the attacker could reduce the returned set of ENRP\n\
    \       servers to null or a small set of inactive ENRP servers.  The\n      \
    \ attacker performs a MITM attack to do this.\n   b.  A similar thwarting scenario\
    \ also applies when an ENRP server or\n       ASAP on behalf of a PU needs to\
    \ discover ENRP servers.\n   c.  Spoofing successful discovery: An attacker could\
    \ spoof the\n       discovery by claiming to be a legitimate ENRP server.  When\
    \ a PE\n       wishes to register, it finds the spoofed ENRP server.  An\n   \
    \    attacker can only make such a claim if no security mechanisms are\n     \
    \  used.\n   d.  A similar spoofing scenario also applies when an ENRP server\
    \ or\n       ASAP on behalf of a PU needs to discover ENRP servers.\n"
- title: 2.12.2.  Effects (Letters Correlate with Threats above)
  contents:
  - "2.12.2.  Effects (Letters Correlate with Threats above)\n   a.  A PE that could\
    \ have been in an application server pool does not\n       become part of a pool.\
    \  The PE does not complete discovery\n       operation.  This is a DoS attack.\n\
    \   b.  An ENRP server that could have been in an ENRP server pool does\n    \
    \   not become part of a pool.  A PU is unable to utilize services of\n      \
    \ ENRP servers.\n   c.  This malicious ENRP would either misrepresent, ignore,\
    \ or\n       otherwise hide or distort information about the PE to subvert\n \
    \      RSerPool operation.\n   d.  Same as above.\n"
- title: 2.12.3.  Requirement
  contents:
  - "2.12.3.  Requirement\n   A provision for authentication MUST be present and a\
    \ provision for\n   data confidentiality service SHOULD be present.  TLS has a\
    \ mechanism\n   for confidentiality.\n"
- title: 2.13.  Flood of Endpoint-Unreachable Messages from the PU to the ENRP
  contents:
  - "2.13.  Flood of Endpoint-Unreachable Messages from the PU to the ENRP\n     \
    \  Server\n"
- title: 2.13.1.  Threat
  contents:
  - "2.13.1.  Threat\n   Endpoint-unreachable messages are sent by ASAP to the ENRP\
    \ server\n   when it is unable to contact a PE.  There is the potential that a\
    \ PU\n   could flood the ENRP server intentionally or unintentionally with\n \
    \  these messages.  The non-malicious case would require an incorrect\n   implementation.\
    \  The malicious case would be caused by writing code\n   to flood the ENRP server\
    \ with endpoint unreachable messages.\n"
- title: 2.13.2.  Effect
  contents:
  - "2.13.2.  Effect\n   The result is a DoS attack on the ENRP server.  The ENRP\
    \ server would\n   not be able to service other PUs effectively and would not\
    \ be able to\n   take registrations from PEs in a timely manner.  Further, it\
    \ would\n   not be able to communicate with other ENRP servers in the pool to\n\
    \   update the database in a timely fashion.\n"
- title: 2.13.3.  Requirement
  contents:
  - "2.13.3.  Requirement\n   The number of endpoint unreachable messages sent to\
    \ the ENRP server\n   from the PU SHOULD be limited.  This mechanism is described\
    \ in the\n   ASAP [RFC5352] protocol document.\n"
- title: 2.14.  Flood of Endpoint Keep-Alive Messages from the ENRP Server to a
  contents:
  - "2.14.  Flood of Endpoint Keep-Alive Messages from the ENRP Server to a\n    \
    \   PE\n"
- title: 2.14.1.  Threat
  contents:
  - "2.14.1.  Threat\n   Endpoint Keep-Alive messages would be sent from the ENRP\
    \ server to\n   the PEs during the process of changing the Home ENRP server for\
    \ this\n   PE.\n"
- title: 2.14.2.  Effect
  contents:
  - "2.14.2.  Effect\n   If the ENRP server maliciously sent a flood of endpoint Keep-Alive\n\
    \   messages to the PE, the PE would not be able to service clients.  The\n  \
    \ result is a DoS attack on the PE.\n"
- title: 2.14.3.  Requirement
  contents:
  - "2.14.3.  Requirement\n   ENRP MUST limit the frequency of Keep-Alive messages\
    \ to a given PE to\n   prevent overwhelming the PE.  This mechanism is described\
    \ in the ENRP\n   [RFC5353] protocol document.\n"
- title: 2.15.  Security of the ENRP Database
  contents:
  - '2.15.  Security of the ENRP Database

    '
- title: 2.15.1.  Threat
  contents:
  - "2.15.1.  Threat\n   Another consideration involves the security characteristics\
    \ of the\n   ENRP database.  Suppose that some of the PEs register with an ENRP\n\
    \   server using security and some do not.  In this case, when a client\n   requests\
    \ handlespace resolution information from ENRP, it would have\n   to be informed\
    \ which entries are \"secure\" and which are not.\n"
- title: 2.15.2.  Effect
  contents:
  - "2.15.2.  Effect\n   This would not only complicate the protocol, but actually\
    \ bring into\n   question the security and integrity of such a database.  What\
    \ can be\n   asserted about the security of such a database is a very thorny\n\
    \   question.\n"
- title: 2.15.3.  Requirement
  contents:
  - "2.15.3.  Requirement\n   The requirement is that either the entire ENRP server\
    \ database MUST\n   be secure; that is, it has registrations exclusively from\
    \ PEs that\n   have used security mechanisms, or the entire database MUST be\n\
    \   insecure; that is, registrations are from PEs that have used no\n   security\
    \ mechanisms.  ENRP servers that support security MUST reject\n   any PE server\
    \ registration that does not use the security mechanisms.\n   Likewise, ENRP servers\
    \ that support security MUST NOT accept updates\n   from other ENRP servers that\
    \ do not use security mechanisms.  TLS is\n   used as the security mechanism so\
    \ any information not sent using TLS\n   to a secure ENRP server MUST be rejected.\n"
- title: 2.16.  Cookie Mechanism Security
  contents:
  - "2.16.  Cookie Mechanism Security\n   The application layer is out of scope for\
    \ RSerPool.  However, some\n   questions have been raised about the security of\
    \ the cookie\n   mechanism, which will be addressed.\n   Cookies are passed via\
    \ the ASAP control channel.  If TCP is selected\n   as the transport, then the\
    \ data and control channel MUST be\n   multiplexed.  Therefore, the cases:\n \
    \  a.  control channel is secured; data channel is not\n   b.  data channel is\
    \ secured; control channel is not\n   are not possible, as the multiplexing onto\
    \ one TCP port results in\n   security for both data and control channels or neither.\n\
    \   The multiplexing requirement results in the following cases:\n   1.  the multiplexed\
    \ control channel-data channel is secure; *or*\n   2.  the multiplexed control\
    \ channel-data channel is not secured.\n   This applies to cookies in the sense\
    \ that, if you choose to secure\n   your control-data channel, then the cookies\
    \ are secured.\n   A second issue is that the PE could choose to sign and/or encrypt\
    \ the\n   cookie.  In this case, it must share keys and other information with\n\
    \   other PEs.  This application-level state sharing is out of scope of\n   RSerPool.\n"
- title: 2.17.  Potential Insider Attacks from Legitimate ENRP Servers
  contents:
  - "2.17.  Potential Insider Attacks from Legitimate ENRP Servers\n   The previous\
    \ text does not address all byzantine attacks that could\n   arise from legitimate\
    \ ENRP servers.  True protection against\n   misbehavior by authentic (but rogue)\
    \ servers is beyond the capability\n   of TLS security mechanisms.  Authentication\
    \ using TLS does not\n   protect against byzantine attacks, as authenticated ENRP\
    \ servers\n   might have been maliciously hacked.  Protections against insider\n\
    \   attacks are generally specific to the attack, so more experimentation\n  \
    \ is needed.  For example, the following discusses two insider attacks\n   and\
    \ potential mitigations.\n   One issue is that legitimate users may choose not\
    \ to follow the\n   proposed policies regarding the choice of servers (namely,\
    \ members in\n   the pool).  If the \"choose a member at random\" policy is employed,\n\
    \   then a pool user can always set its \"random choices\" so that it picks\n\
    \   a particular pool member.  This bypasses the \"load sharing\" idea\n   behind\
    \ the policy.  Another issue is that a pool member (or server)\n   may report\
    \ a wrong policy to a user.\n   To mitigate the first attack, the protocol may\
    \ require the pool user\n   to \"prove\" to the pool member that the pool member\
    \ was chosen\n   \"randomly\", say by demonstrating that the random choice was\
    \ the\n   result of applying some hash function to a public nonce.  Different\n\
    \   methods may be appropriate for other member scheduling policies.\n   To mitigate\
    \ the second attack, the protocol might require the PE to\n   sign the policy\
    \ sent to the ENRP server.  During pool handle\n   resolution, the signed policy\
    \ needs to be sent from an ENRP server to\n   an ASAP endpoint in a way that will\
    \ allow the user to later hold the\n   server accountable to the policy.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   This informational document characterizes potential\
    \ security threats\n   targeting the RSerPool architecture.  The security mechanisms\n\
    \   required to mitigate these threats are summarized for each\n   architectural\
    \ component.  It will be noted which mechanisms are\n   required and which are\
    \ optional.\n   From the threats described in this document, the security services\n\
    \   required for the RSerPool protocol suite are given in the following\n   table.\n\
    \   +--------------+----------------------------------------------------+\n  \
    \ |    Threat    |           Security mechanism in response           |\n   +--------------+----------------------------------------------------+\n\
    \   |  Section 2.1 |          ENRP server authenticates the PE.         |\n  \
    \ |  Section 2.2 |          ENRP server authenticates the PE.         |\n   |\
    \  Section 2.3 |          ENRP server authenticates the PE.         |\n   |  Section\
    \ 2.4 |          ENRP server authenticates the PE.         |\n   |  Section 2.5\
    \ |         ENRP servers mutually authenticate.        |\n   |  Section 2.6 |\
    \          PE authenticates the ENRP server.         |\n   |  Section 2.7 |  \
    \  The PU authenticates the ENRP server.  If the   |\n   |              |   authentication\
    \ fails, it looks for another ENRP  |\n   |              |                   \
    \    server.                      |\n   |  Section 2.8 | Security protocol that\
    \ has protection from replay  |\n   |              |                      attacks.\
    \                      |\n   |  Section 2.9 |    Either notify the application\
    \ when failover     |\n   |              |   occurs so the application can take\
    \ appropriate   |\n   |              | action to establish a trusted relationship\
    \ with PE |\n   |              |        B *or* re-establish the security context\
    \    |\n   |              |                   transparently.                 \
    \  |\n   | Section 2.10 |     Security protocol that supports integrity      |\n\
    \   |              |                     protection.                    |\n  \
    \ | Section 2.12 |        Security protocol that supports data        |\n   |\
    \              |                  confidentiality.                  |\n   | Section\
    \ 2.11 |    The PU authenticates the ENRP server.  If the   |\n   |          \
    \    |   authentication fails, it looks for another ENRP  |\n   |            \
    \  |                       server.                      |\n   | Section 2.13 |\
    \      ASAP must control the number of endpoint      |\n   |              |  \
    \ unreachable messages transmitted from the PU to  |\n   |              |    \
    \              the ENRP server.                  |\n   | Section 2.14 |      \
    \ ENRP server must control the number of       |\n   |              |       Endpoint_KeepAlive\
    \ messages to the PE.       |\n   +--------------+----------------------------------------------------+\n\
    \   The first four threats, combined with the sixth threat, result in a\n   requirement\
    \ for mutual authentication of the ENRP server and the PE.\n   To summarize, the\
    \ first twelve threats require security mechanisms\n   that support authentication,\
    \ integrity, data confidentiality, and\n   protection from replay attacks.  For\
    \ RSerPool, we need to\n   authenticate the following:\n   o  PU -----> ENRP Server\
    \ (PU authenticates the ENRP server)\n   o  PE <----> ENRP Server (mutual authentication)\n\
    \   o  ENRP server <-----> ENRP Server (mutual authentication)\n   Summary by\
    \ component:\n   RSerPool client --  mandatory-to-implement authentication of\
    \ the ENRP\n      server is required for accurate pool handle resolution.  This\
    \ is\n      to protect against threats from rogue ENRP servers.  In addition,\n\
    \      confidentiality, integrity, and preventing replay attack are also\n   \
    \   mandatory to implement to protect from eavesdropping and data\n      corruption\
    \ or false data transmission.  Confidentiality is\n      mandatory to implement\
    \ and is used when privacy is required.\n   PE to ENRP communications --  mandatory-to-implement\
    \ mutual\n      authentication, integrity, and protection from replay attack is\n\
    \      required for PE to ENRP communications.  This is to protect the\n     \
    \ integrity of the ENRP handlespace database.  Confidentiality is\n      mandatory\
    \ to implement and is used when privacy is required.\n   ENRP to ENRP communications\
    \ --  mandatory-to-implement mutual\n      authentication, integrity, and protection\
    \ from replay attack is\n      required for ENRP to ENRP communications.  This\
    \ is to protect the\n      integrity of the ENRP handlespace database.  Confidentiality\
    \ is\n      mandatory to implement and is used when privacy is required.\n"
- title: 4.  Normative References
  contents:
  - "4.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5352]\
    \   Stewart, R., Xie, Q., Stillman, M., and M. Tuexen,\n              \"Aggregate\
    \ Server Access Protocol (ASAP)\", RFC 5352,\n              September 2008.\n\
    \   [RFC5353]  Xie, Q., Stewart, R., Stillman, M., Tuexen, M., and A.\n      \
    \        Silverton, \"Endpoint Handlespace Redundancy Protocol\n             \
    \ (ENRP)\", RFC 5353, September 2008.\n   [RFC5351]  Lei, P., Ong, L., Tuexen,\
    \ M., and T. Dreibholz, \"An\n              Overview of Reliable Server Pooling\
    \ Protocols\", RFC 5351,\n              September 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Maureen Stillman, Ed.\n   Nokia\n   1167 Peachtree Court\n\
    \   Naperville, IL  60540\n   USA\n   EMail: maureen.stillman@nokia.com\n   Ram\
    \ Gopal\n   Nokia Siemens Networks\n   12278 Scripps Summit Drive\n   San Diego,\
    \ CA  92131\n   USA\n   EMail: ram.gopal@nsn.com\n   Erik Guttman\n   Sun Microsystems\n\
    \   Eichhoelzelstrasse 7\n   74915 Waibstadt\n   DE\n   EMail: Erik.Guttman@sun.com\n\
    \   Senthil Sengodan\n   Nokia Siemens Networks\n   6000 Connection Drive\n  \
    \ Irving, TX  75039\n   USA\n   EMail: Senthil.sengodan@nsn.com\n   Matt Holdrege\n\
    \   EMail: Holdrege@gmail.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
