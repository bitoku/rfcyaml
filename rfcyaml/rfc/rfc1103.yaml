- title: __initial_text__
  contents:
  - "              A Proposed Standard for the Transmission of\n                 \
    \   IP Datagrams over FDDI Networks\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies a method of encapsulating the Internet\
    \ Protocol\n   (IP) [1] datagrams and Address Resolution Protocol (ARP) [2] requests\n\
    \   and replies on Fiber Distributed Data Interface (FDDI) Networks.\n   This\
    \ RFC specifies a proposed protocol standard for the Internet\n   community. \
    \ Comments are welcome.  Distribution of this memo is\n   unlimited.\n"
- title: Acknowledgment
  contents:
  - "Acknowledgment\n   This memo draws heavily in both concept and text from RFC\
    \ 1042 [3],\n   written by Jon Postel and Joyce K. Reynolds of USC/Information\n\
    \   Sciences Institute.\n"
- title: Conventions
  contents:
  - "Conventions\n   The following language conventions are used in the items of\n\
    \   specification in this document:\n      \"Must\" or \"Mandatory\"--the item\
    \ is an absolute requirement of the\n      specification.\n      \"Should\" or\
    \ \"Recommended\"--the item should generally be followed\n      for all but exceptional\
    \ circumstances.\n      \"May\" or \"Optional\"--the item is truly optional and\
    \ may be\n      followed or ignored according to the needs of the implementor.\n"
- title: Introduction
  contents:
  - "Introduction\n   The goal of this specification is to allow compatible and\n\
    \   interoperable implementations for transmitting IP datagrams and ARP\n   requests\
    \ and replies.\n   The Fiber Distributed Data Interface (FDDI) specifications\
    \ define a\n   family of standards for Local Area Networks (LANs) that provides\
    \ the\n   Physical Layer and Media Access Control Sublayer of the Data Link\n\
    \   Layer as defined by the ISO Open System Interconnection Reference\n   Model\
    \ (ISO/OSI).  Documents are in various stages of progression\n   toward International\
    \ Standardization for Media Access Control (MAC)\n   [4], Physical Layer Protocol\
    \ (PHY) [5], Physical Layer Medium\n   Dependent (PMD) [6], and Station Management\
    \ (SMT) [7].  The family of\n   FDDI standards corresponds to the IEEE 802 MAC\
    \ layer standards [8, 9,\n   10].\n   The remainder of the Data Link Service is\
    \ provided by the IEEE 802.2\n   Logical Link Control (LLC) service [11].  The\
    \ resulting stack of\n   services appears as follows:\n           +-------------+\n\
    \           |   IP/ARP    |\n           +-------------+\n           |  802.2 LLC\
    \  |\n           +-------------+\n           |  FDDI MAC   |\n           +-------------+\n\
    \           |  FDDI PHY   |\n           +-------------+\n           |  FDDI PMD\
    \   |\n           +-------------+\n   This memo describes the use of IP and ARP\
    \ in this environment.  At\n   this time, it is not necessary that the use of\
    \ IP and ARP be\n   consistent between FDDI and IEEE 802 networks, but it is the\
    \ intent\n   of this memo not to preclude Data Link Layer interoperability at\
    \ such\n   time as the standards define it.\n"
- title: Packet Format
  contents:
  - "Packet Format\n   IP datagrams and ARP requests and replies sent on FDDI networks\
    \ must\n   be encapsulated within the 802.2 LLC and Sub-Network Access Protocol\n\
    \   (SNAP) data link layers and the FDDI MAC and physical layers.  The\n   SNAP\
    \ must be used with an Organization Code indicating that the SNAP\n   header contains\
    \ the EtherType code (as listed in Assigned Numbers\n   [12]).\n   802.2 LLC Type\
    \ 1 communication (which must be implemented by all\n   conforming 802.2 stations)\
    \ is used exclusively.  All frames must be\n   transmitted in standard 802.2 LLC\
    \ Type 1 Unnumbered Information\n   format, with the DSAP and the SSAP fields\
    \ of the 802.2 header set to\n   the assigned global SAP value for SNAP [11].\
    \  The 24-bit Organization\n   Code in the SNAP must be zero, and the remaining\
    \ 16 bits are the\n   EtherType from Assigned Numbers [12] (IP = 2048, ARP = 2054).\n\
    \     ...--------+--------+--------+\n                MAC Header        |    \
    \                       FDDI MAC\n     ...--------+--------+--------+\n     +--------+--------+--------+\n\
    \     | DSAP=K1| SSAP=K1| Control|                            802.2 LLC\n    \
    \ +--------+--------+--------+\n     +--------+--------+---------+--------+--------+\n\
    \     |Protocol Id or Org Code =K2|    EtherType    |        802.2 SNAP\n    \
    \ +--------+--------+---------+--------+--------+\n     The total length of the\
    \ LLC Header and the SNAP header is 8\n     octets.\n     The K1 value is 170\
    \ (decimal).\n     The K2 value is 0 (zero).\n     The control value is 3 (Unnumbered\
    \ Information).\n"
- title: Address Resolution
  contents:
  - "Address Resolution\n   The mapping of 32-bit Internet addresses to 16-bit or\
    \ 48-bit FDDI\n   addresses must be done via the dynamic discovery procedure of\
    \ the\n   Address Resolution Protocol (ARP) [2].\n   Internet addresses are assigned\
    \ arbitrarily on Internet networks.\n   Each host's implementation must know its\
    \ own Internet address and\n   respond to Address Resolution requests appropriately.\
    \  It must also\n   use ARP to translate Internet addresses to FDDI addresses\
    \ when\n   needed.\n   The ARP protocol has several fields that parameterize its\
    \ use in any\n   specific context [2].  These fields are:\n         hrd   16 -\
    \ bits     The Hardware Type Code\n         pro   16 - bits     The Protocol Type\
    \ Code\n         hln    8 - bits     Octets in each hardware address\n       \
    \  pln    8 - bits     Octets in each protocol address\n         op    16 - bits\
    \     Operation Code\n   The hardware type code assigned for IEEE 802 networks\
    \ is 6 [12].\n   FDDI networks, although not IEEE 802 networks per se, are\n \
    \  semantically equivalent and use the same type code.\n   The protocol type code\
    \ for IP is 2048 [12].\n   The hardware address length is 2 for 16-bit FDDI addresses,\
    \ or 6 for\n   48-bit FDDI addresses.\n   The protocol address length (for IP)\
    \ is 4.\n   The operation code is 1 for request and 2 for reply.\n"
- title: Broadcast Address
  contents:
  - "Broadcast Address\n   The broadcast Internet address (the address on that network\
    \ with a\n   host part of all binary ones) must be mapped to the broadcast FDDI\n\
    \   address (of all binary ones) (see [13]).\n"
- title: Trailer Formats
  contents:
  - "Trailer Formats\n   Some versions of Unix 4.x bsd use a different encapsulation\
    \ method in\n   order to get better network performance with the VAX virtual memory\n\
    \   architecture.  Consenting systems on the same FDDI network may use\n   this\
    \ format between themselves.  Details of the trailer encapsulation\n   method\
    \ may be found in [14].  However, all hosts must be able to\n   communicate using\
    \ the standard (non-trailer) method.\n"
- title: Byte Order
  contents:
  - "Byte Order\n   As described in Appendix B of the Internet Protocol specification\n\
    \   [1], the IP datagram is transmitted over FDDI networks as a series of\n  \
    \ 8-bit bytes.  This byte transmission order has been called \"big-\n   endian\"\
    \ [15].\n"
- title: MAC Layer Details
  contents:
  - "MAC Layer Details\n   Packet Size\n      The FDDI MAC specification [4] defines\
    \ a maximum frame size of\n      9000 symbols (4500 octets) for all frame fields,\
    \ including four\n      symbols (two octets) of preamble.  This gives the following\
    \ MAC\n      layer overhead:\n                Field                    Size in\
    \ Octets\n                Preamble                     2\n                Start\
    \ Delimiter              1\n                Frame Control                1\n \
    \               Destination Address          6 (2)\n                Source Address\
    \               6 (2)\n                FCS                          4\n      \
    \          End Delimiter/Frame Status   2\n                Total             \
    \           22 (14)\n                Remaining for Data           4478 (4486)\n\
    \      Subtracting the 8 byte LLC/SNAP header, this gives a maximum\n      packet\
    \ size (MTU) of 4470 (4478) octets.  For compatibility\n      purposes, the maximum\
    \ packet size used with IP datagrams or ARP\n      requests and replies must be\
    \ consistent on a particular network.\n      The overhead calculations (above)\
    \ assume a standard Frame Status\n      field consisting of three symbols.  Additional\
    \ Implementor Defined\n      frame status information, although permitted by the\
    \ FDDI MAC\n      specification, must not be used with IP datagrams because it\n\
    \      affects the maximum packet size.\n      Gateway implementations must be\
    \ prepared to accept full-length\n      packets and fragment them when necessary.\n\
    \      Host implementations should be prepared to accept full-length\n      packets;\
    \ however, hosts must not send datagrams longer than 576\n      octets unless\
    \ they have explicit knowledge that the destination is\n      prepared to accept\
    \ them.  A host may communicate its size\n      preference in TCP-based applications\
    \ via the TCP Maximum Segment\n      Size option [16].\n      Datagrams on FDDI\
    \ networks may be longer than the general Internet\n      default maximum packet\
    \ size of 576 octets.  Hosts connected to an\n      FDDI network should keep this\
    \ in mind when sending datagrams to\n      hosts that are not on the same local\
    \ network.  It may be\n      appropriate to send smaller datagrams to avoid unnecessary\n\
    \      fragmentation at intermediate gateways.  Please see [16] for\n      further\
    \ information.\n      There is no minimum packet size restriction on FDDI networks.\n"
- title: Other MAC Layer Issues
  contents:
  - "Other MAC Layer Issues\n   The FDDI MAC specification does not require that 16-bit\
    \ and 48-bit\n   address stations be able to interwork fully.  It does, however,\n\
    \   require that 16-bit stations have full 48-bit functionality, and that\n  \
    \ both types of stations be able to receive frames sent to either size\n   broadcast\
    \ address.  For use with IP and ARP, all communicating\n   stations on a LAN must\
    \ use a consistent address size.\n   Implementations must discard any IP or ARP\
    \ packets received with an\n   unimplemented or inactive address size.  16-bit\
    \ and 48-bit\n   implementations may coexist on the same FDDI network; however,\
    \ if\n   they wish to interwork they must be considered separate IP networks\n\
    \   and linked with an IP router capable of supporting 16-and 48-bit\n   addresses\
    \ simultaneously.\n   Group (multicast) addresses are defined by the FDDI MAC\
    \ specification\n   but are not necessarily supported by existing hardware.  Therefore,\n\
    \   this feature must not be used by IP and ARP.\n   The FDDI MAC specification\
    \ defines two classes of frames,\n   Asynchronous and Synchronous.  Asynchronous\
    \ frames are further\n   controlled by a priority mechanism and two classes of\
    \ token,\n   Restricted and Unrestricted.  Only the use of Unrestricted tokens\
    \ and\n   Asynchronous frames are required by the standard for FDDI\n   interoperability.\
    \  The priority mechanism is currently implemented\n   locally by the transmitting\
    \ station and the Priority field in\n   Asynchronous frames is ignored by other\
    \ stations.  This field will\n   likely be interpreted by Transparent Bridges\
    \ once they are defined.\n   There is no default value for priority called out\
    \ in the MAC\n   standard.\n   Therefore, all IP and ARP frames must be transmitted\
    \ as Asynchronous\n   frames using Unrestricted tokens, and the Priority value\
    \ is a matter\n   of local convention.  Implementations should make the priority\
    \ a\n   tunable parameter for future use.  It is recommended that\n   implementations\
    \ provide for the reception of IP and ARP packets in\n   Synchronous frames.\n\
    \   After packet transmission, FDDI provides Frame Copied (C) and Address\n  \
    \ Recognized (A) indicators.  There are four possible combinations of\n   the\
    \ indicators with the following semantics:\n            (C)      (A)\n       \
    \     Reset    Reset   The frame was not received by any station.\n          \
    \  Reset    Set     The addressed station is congested.\n            Set     \
    \ Reset   Reserved.\n            Set      Set     The addressed station received\
    \ the frame.\n   Implementations may use these indicators to provide some amount\
    \ of\n   error detection and correction:\n      If the Frame Copied bit is reset\
    \ but the Address Recognized bit is\n      set, receiver congestion has occurred.\
    \  It is recommended, though\n      not mandatory, that hosts retransmit the offending\
    \ packet a small\n      number of times (4) or until congestion no longer occurs.\n\
    \      If the both the Address Recognized indicator and the Frame Copied\n   \
    \   indicator are reset, an implementation has three options: (1)\n      ignore\
    \ the error and throw the packet away, (2) return an ICMP\n      destination unreachable\
    \ message to the source, or (3) delete the\n      ARP entry which was used to\
    \ send this packet and send a new ARP\n      request to the destination address.\
    \  The latter option is the\n      preferred approach since it will allow graceful\
    \ recovery from\n      first hop bridge and router failures and changed hardware\n\
    \      addresses.\n      As of this writing there is a proposal within ANSI to\
    \ set the\n      Frame Copied indicator and reset the Address Recognized indicator\n\
    \      when a frame is forwarded by a Transparent Bridge.  For future\n      compatibility,\
    \ implementations should interpret this combination\n      of indicators as if\
    \ the frame were successfully delivered to the\n      destination (i.e., do nothing).\n"
- title: IEEE 802.2 Details
  contents:
  - "IEEE 802.2 Details\n   While not necessary for supporting IP and ARP, all implementations\n\
    \   must support IEEE 802.2 standard Class I service in order to be\n   compliant\
    \ with 802.2.  This requires supporting Unnumbered\n   Information (UI) Commands,\
    \ eXchange IDentification (XID) Commands and\n   Responses, and TEST link (TEST)\
    \ Commands and Responses.\n   When an XID or TEST command is received, a response\
    \ must be returned\n   with Destination and Source addresses, and DSAP and SSAP,\
    \ swapped.\n   When responding to an XID or a TEST command, the value of the Final\n\
    \   bit in the response must be copied from the value of the Poll bit in\n   the\
    \ command.\n   The XID command or response has an LLC control field value of 175\n\
    \   (decimal) if the Poll/Final bit is off or 191 (decimal) if the\n   Poll/Final\
    \ bit is on.\n   The TEST command or response has an LLC control field value of\
    \ 227\n   (decimal) if the Poll/Final bit is off or 243 (decimal) if the\n   Poll/Final\
    \ bit is on.\n   Command frames are identified by having the high order bit of\
    \ the\n   SSAP address reset to zero.  Response frames have the high order bit\n\
    \   of the SSAP address set to one.\n   XID response frames must include an 802.2\
    \ XID Information field of\n   129.1.0 indicating Class I (connectionless) service.\n\
    \   TEST response frames must echo the information field received in the\n   corresponding\
    \ TEST command frame.\n"
- title: Appendix on Numbers
  contents:
  - "Appendix on Numbers\n   The IEEE specifies numbers in bit transmission order,\
    \ or bit-wise\n   little-endian order.  The Internet protocols are documented\
    \ in byte-\n   wise big-endian order.  This may cause some confusion about the\n\
    \   proper values to use for numbers.  Here are the conversions for some\n   numbers\
    \ of interest.\n       Number        IEEE    IEEE        Internet    Internet\n\
    \                     HEX     Binary      Binary      Decimal\n       UI Op Code\
    \    C0      11000000    00000011    3\n       SAP for SNAP  55      01010101\
    \    10101010    170\n       XID           F5      11110101    10101111    175\n\
    \       XID           FD      11111101    10111111    191\n       TEST       \
    \   C7      11000111    11100011    227\n       TEST          CF      11001111\
    \    11110011    243\n       Info          818000                          129.1.0\n"
- title: References
  contents:
  - "References\n  [1]  Postel, J., \"Internet Protocol\", RFC-791, USC/Information\n\
    \       Sciences Institute, September 1981.\n  [2]  Plummer, D., \"An Ethernet\
    \ Address Resolution Protocol - or -\n       Converting Network Protocol Addresses\
    \ to 48.bit Ethernet Address\n       for Transmission on Ethernet Hardware\",\
    \ RFC-826, MIT, November\n       1982.\n  [3]  Postel J., and J. Reynolds, \"\
    A Standard for the Transmission of\n       IP Datagrams over IEEE 802 Networks\"\
    , RFC1042, USC/Information\n       Sciences Institute, February, 1988.\n  [4]\
    \  ISO, \"Fiber Distributed Data Interface (FDDI) - Media Access\n       Control\"\
    , ISO 9314-2, 1988.  See also ANSI X3.139-1987.\n  [5]  ISO, \"Fiber Distributed\
    \ Data Interface (FDDI) - Token Ring\n       Physical Layer Protocol\", ISO 9314-1,\
    \ 1988.  See also ANSI\n       X3.148-1988.\n  [6]  ISO, \"Fiber Distributed Data\
    \ Interface (FDDI) - Physical Layer\n       Medium Dependent\", ISO DIS 9314-3,\
    \ 1988.  See also ANSI X3.166-\n       198x.\n  [7]  ANSI, \"FDDI Station Management\"\
    , ANSI X3T9.5/84-49 Rev 4.0, 1988.\n  [8]  IEEE, \"IEEE Standards for Local Area\
    \ Networks: Carrier Sense\n       Multiple Access with Collision Detection (CSMA/CD)\
    \ Access Method\n       and Physical Layer Specifications\", IEEE, New York, New\
    \ York,\n       1985.\n  [9]  IEEE, \"IEEE Standards for Local Area Networks:\
    \ Token-Passing Bus\n       Access Method and Physical Layer Specification\",\
    \ IEEE, New York,\n       New York, 1985.\n  [10] IEEE, \"IEEE Standards for Local\
    \ Area Networks: Token Ring Access\n       Method and Physical Layer Specifications\"\
    , IEEE, New York, New\n       York, 1985.\n  [11] IEEE, \"IEEE Standards for Local\
    \ Area Networks: Logical Link\n       Control\", IEEE, New York, New York, 1985.\n\
    \  [12] Reynolds, J.K., and J. Postel, \"Assigned Numbers\", RFC-1010,\n     \
    \  USC/Information Sciences Institute, May 1987.\n  [13] Braden, R., and J. Postel,\
    \ \"Requirements for Internet Gateways\",\n       RFC-1009, USC/Information Sciences\
    \ Institute, June 1987.\n  [14] Leffler, S., and M. Karels, \"Trailer Encapsulations\"\
    , RFC-893,\n       University of California at Berkeley, April 1984.\n  [15] Cohen,\
    \ D., \"On Holy Wars and a Plea for Peace\", Computer, IEEE,\n       October 1981.\n\
    \  [16] Postel, J., \"The TCP Maximum Segment Size Option and Related\n      \
    \ Topics\", RFC-879, USC/Information Sciences Institute, November\n       1983.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Dave Katz Merit/NSFNET 1075 Beal Ann Arbor, MI 48109-2112\n\
    \   Phone: 1-800-66-MERIT\n   Email: Dave_Katz@um.cc.umich.edu\n"
