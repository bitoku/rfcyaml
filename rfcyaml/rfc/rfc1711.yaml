- title: __initial_text__
  contents:
  - '                   Classifications in E-mail Routing

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This paper presents a classification for e-mail routing issues.\
    \ It\n   clearly defines commonly used terminology such as static routing,\n \
    \  store-and-forward routing, source routing and others. Real life\n   examples\
    \ show which routing options are used in existing projects.\n   The goal is to\
    \ define all terminology in one reference paper. This\n   will also help relatively\
    \ new mail system managers to understand the\n   issues and make the right choices.\
    \ The reader is expected to already\n   have a solid understanding of general\
    \ networking terminology.\n   In this paper, the word Message Transfer Agent (MTA)\
    \ is used to\n   describe a routing entity, which can be an X.400 MTA, a UNIX\
    \ mailer,\n   or any other piece of software performing mail routing functions.\
    \ An\n   MTA processes the so called envelope information of a message. The\n\
    \   term User Agent (UA) is used to describe a piece of software\n   performing\
    \ user related mail functions. It processes the contents of\n   a message's envelope,\
    \ i.e., the header fields and body parts.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Naming, addressing and routing                   \
    \            2\n   2.   Static versus dynamic                                \
    \        4\n   3.   Direct versus indirect                                   \
    \    5\n   3.1.       Firewalls                                              5\n\
    \   3.2.       Default versus rule based                              6\n   4.\
    \   Routing at user level                                        7\n   4.1.  \
    \     Distributed domains                                    7\n   4.2.      \
    \ Shared MTA                                             8\n   5.   Routing control\
    \                                              9\n   6.   Bulk routing       \
    \                                          9\n   7.   Source routing         \
    \                                     11\n   8.   Poor man's routing         \
    \                                 12\n   9.   Routing communities            \
    \                             12\n   10.  Realisations                       \
    \                         14\n   10.1.      Internet mail                    \
    \                     14\n   10.2.      UUCP                                 \
    \                 15\n   10.3.      EARN                                     \
    \             15\n   10.4.      GO-MHS                                       \
    \         15\n   10.5.      ADMD infrastructure                              \
    \     15\n   10.6.      Long Bud                                             \
    \ 16\n   10.7.      X42D                                                  16\n\
    \   11.  Conclusion                                                  16\n   12.\
    \  Abbreviations                                               17\n   13.  References\
    \                                                  17\n   14.  Security Considerations\
    \                                     19\n   15.  Author's Address           \
    \                                 19\n"
- title: 1.    Naming, addressing and routing
  contents:
  - "1.    Naming, addressing and routing\n   A name uniquely identifies a network\
    \ object (without loss of\n   generality, we will assume the 'object' is a person).\n\
    \   Once a person's name is known, it can be used as a key to determine\n   his\
    \ address.\n   An address uniquely defines where the person is located. It can\n\
    \   normally be divided into a domain related part (e.g., the RFC 822\n   domainpart\
    \ or in X.400 an ADMD or OU attribute) and a local or user\n   related part (e.g.,\
    \ the RFC 822 localpart or in X.400 a DDA or\n   Surname attribute). The domain\
    \ related part of an address typically\n   consists of several components, which\
    \ normally have a certain\n   hierarchical order. These domain levels can be used\
    \ for routing\n   purposes, as we will see later.\n   Once a person's address\
    \ is known, it can be used as a key to\n   determine a route to that person's\
    \ location.\n   We will use the following definition of an e-mail route:\n   \
    \    e-mail route           a path between two leaves in a\n                 \
    \             directed Message Transfer System\n                             \
    \ (MTS) graph that a message travels\n                              for one originator/recipient\
    \ pair.\n                              (see Figure 1)\n   Note that, in this definition,\
    \ the User Agents (UAs) are not part of\n   the route themselves. Thus if a message\
    \ is redirected at the UA\n   level, a new route is established from the redirecting\
    \ UA to the UA\n   the message is redirected to.\n   The first and last leaves\
    \ in a mail route are not always UAs. A route\n   may start from a UA, but stop\
    \ at a certain point because one of the\n   MTAs is unable to take any further\
    \ routing decisions. If this\n   happens, a warning is generated by the MTA (not\
    \ by a UA), and sent\n   back to the originator of the undeliverable message.\
    \ It may even\n   happen that none of the leaves is a UA, for instance if a warning\n\
    \   message as discussed above turns out to be undeliverable itself. The\n   cautious\
    \ reader may have noticed that this is a dangerous situation.\n   Special precautions\
    \ are needed to avoid loops in such cases (see\n   [1]).\n           user    \
    \                    user\n            |                           ^\n       \
    \     v                           |\n     +-----------------------------------------+\n\
    \     |      |                           ^      |\n     |      v             \
    \              |      |\n     |   +-----+                     +-----+   |\n  \
    \   |   | UA  |                     | UA  |   |\n     |   +-----+            \
    \         +-----+   |\n     |      |                           ^      |\n    \
    \ |      v                           |      |\n     | +-------------------------------------+\
    \ |\n     | |    v                           ^    | |\n     | |    v         \
    \                  ^    | |\n     | |    v                           ^    | |\n\
    \     | | +-----+                     +-----+ | |\n     | | | MTA |.....................|\
    \ MTA | | |\n     | | +-----+                     +-----+ | |\n     | |    v \
    \  \\                       ^    | |\n     | |    v    \\................    \
    \  ^    | |\n     | |    v                     \\     ^    | | NB The actual route\n\
    \     | | +-----+                   \\ +-----+ | |    is drawn as\n     | | |\
    \ MTA |>>>>>>>>>>>>>>>>>>>>>| MTA | | |    v            ^\n     | | +-----+  \
    \                   +-----+ | |    v            ^\n     | | Message Transfer System\
    \             | |    v  >>>>>>>>  ^\n     | +-------------------------------------+\
    \ |\n     | Message Handling System                 |\n     +-----------------------------------------+\n\
    \                Figure 1. A mail route\n   It is important that the graph is\
    \ directed, because routes are not\n   necessarily symmetric. A reply to a message\
    \ may be sent over a\n   completely different mail route for reasons such as cost,\
    \ non-\n   symmetric network connectivity, network load, etc.\n   According to\
    \ the definition, if a message has two different\n   recipients, there will also\
    \ be two mail routes. Since the delivery to\n   a UA (not the UA itself) is a\
    \ part of the route, this definition is\n   still valid if two UAs are connected\
    \ to the same MTA.\n   The words '.. for one originator-recipient pair.' in the\
    \ definition\n   do not imply that this pair provides the MTA with all necessary\n\
    \   information to choose one specific route. One originator-recipient\n   pair\
    \ may give an MTA the possibility to choose from a number of\n   possible routes,\
    \ the so-called routing indicators (see chapter 2).\n   Other information (e.g.,\
    \ line load, cost, availability) can then be\n   used to choose one route from\
    \ the routing indicators.\n   Routing is defined as the process of establishing\
    \ routes. Note that\n   this is a distributed process; every intermediate MTA\
    \ takes its own\n   routing decisions, thus contributing to the establishment\
    \ of the\n   complete route.\n   Taking a routing decision is not a purely algorithmic\
    \ process,\n   otherwise there would hardly be any difference between an address\
    \ and\n   a route. The address is used as a key to find a route, typically in\n\
    \   some sort of rule-based routing database. The possible options for\n   realising\
    \ this database and algorithms for using it are the subject\n   of the rest of\
    \ this paper.\n"
- title: 2.    Static versus dynamic
  contents:
  - "2.    Static versus dynamic\n   Dynamic (mail) routing allows a routing decision\
    \ to be influenced by\n   external factors, such as system availability, network\
    \ load, etc. In\n   contrast, static (mail) routing is not able to adapt to environmental\n\
    \   constraints. Static routing can be viewed as an extremely simple form\n  \
    \ of dynamic routing, namely where there is only one choice for every\n   routing\
    \ decision.\n   Dynamic routing algorithms normally use some kind of distributed\n\
    \   databases to store and retrieve routing information, whereas static\n   routing\
    \ is typically implemented in routing tables.\n   Note that dynamic routing can\
    \ occur at different layers: at the mail\n   level, dynamic routing might allow\
    \ a message to be relayed to a\n   choice of MTAs (the routing indicators). As\
    \ an example, consider the\n   Internet mechanism of using multiple Mail eXchanger\
    \ (MX) records,\n   describing MTAs that can serve a domain. If the primary choice\
    \ MTA is\n   not available, a second choice MTA can be tried. If this second\n\
    \   choice MTA is busy, a third one will be tried, etc. On lower layers,\n   there\
    \ may be more than one presentation address for one MTA, each of\n   which can\
    \ again have an associated priority and other attributes.\n   These choices may\
    \ represent that an MTA prefers to be connected to\n   using one certain stack,\
    \ e.g., RFC1006/TCP/IP, but is also able to\n   accept incoming calls over another\
    \ stack, such as TP0/CONS/X.25. We\n   will call this dynamic stack routing. Theoretically,\
    \ dynamic stack\n   routing should be transparent to the mail routing application,\
    \ and is\n   thus not a part of dynamic mail routing. It is mentioned here because\n\
    \   in existing products, dynamic stack routing is often very well\n   visible\
    \ at the mail configuration level, so MTA managers should at\n   least be aware\
    \ of it.\n   Although static routing is often table based, not all table based\n\
    \   routing algorithms are necessarily static in nature. As a counter\n   example,\
    \ X.400 routing according to RFC 1465 [2] is clearly table\n   based, but at the\
    \ same time allows a fairly dynamic kind of mail\n   routing (as well as dynamic\
    \ stack routing, which in this approach is\n   cleanly separated from the dynamic\
    \ mail routing part). A mail domain\n   can specify a choice of so-called RELAY-MTAs\
    \ (formerly called WEPs)\n   that will serve it, each with a priority and maximum\
    \ number of\n   retries.\n   For reasons of flexibility and reliability, dynamic\
    \ routing is almost\n   always the preferred method.\n"
- title: 3.    Direct versus indirect
  contents:
  - "3.    Direct versus indirect\n   Direct routing allows the originator's MTA to\
    \ contact the recipient's\n   MTA directly, whereas indirect routing (also known\
    \ as store-and-\n   forward routing) uses intermediate MTAs to relay the message\
    \ towards\n   the recipient. It is difficult to clearly distinguish between direct\n\
    \   and indirect routing: direct routing assumes the existence of a fully\n  \
    \ meshed routing topology, whereas indirect routing assumes the\n   existence\
    \ of a more tree-like hierarchical topology. Mail routing in\n   most existing\
    \ networks is upto some degree indirect. Networks can be\n   classified as being\
    \ more or less direct according for the following\n   rule of thumb: larger fan\
    \ out of the routing tree means more direct\n   routing, greater depth of the\
    \ tree means less direct routing. Two\n   kinds of indirect routing are presented\
    \ here: firewalls (downstream)\n   and default routes (upstream).\n"
- title: 3.1.  Firewalls
  contents:
  - "3.1.  Firewalls\n   A firewall 'attracts' all messages for a certain set of addresses\n\
    \   (the address sub space behind the firewall) from the outside e-mail\n   world\
    \ to a central relaying MTA (the firewall). This is done by\n   publishing routes\
    \ to all other MTAs that must relay their messages\n   over this firewall (the\
    \ attracted community). Note that local\n   knowledge should be used to route\
    \ messages within the address space\n   behind the firewall. An example for this\
    \ is presented later on. There\n   exist many reasons for using firewalls, e.g.,\
    \ security considerations\n   or to concentrate the management for a given domain\
    \ onto one well\n   managed system.\n   The Internet mail system would allow all\
    \ mail hosts connected to the\n   Internet to directly accept mail from any other\
    \ host, but not all\n   hosts use this possibility. Many domains are hidden behind\
    \ one or\n   more 'Mail eXchanger' (MX), which offer to relay all incoming mail\n\
    \   for those domains. The RELAY-MTAs mentioned earlier can also be\n   considered\
    \ firewall systems.\n         +-----------------------------------+\n        \
    \ |                                   |\n         | The rest of the e-mail world\
    \      |\n         |                                   |\n         +-----------------------------------+\n\
    \                     \\  |  |   /\n                      \\ |  |  /\n       \
    \                \\|  | /\n                        v  vv\n                  +--------------+\n\
    \                  |Firewall MTA A|\n                  +--------------+\n    \
    \                ^  /  ^  \\  ^\n                   /  /   |   \\  \\\n      \
    \            /  /    |    \\  \\\n  Default route--o  /     |     \\  o---Default\
    \ route\n                /  /      |      \\  \\\n               /  /       |\
    \       \\  \\\n              /  v        v        v  \\\n           +-----+ \
    \    +-----+   +-------+\n           |MTA B|<----|MTA C|   |MTA D  |\n       \
    \    +-----+     +-----+   +-------+\n            /  |         |         |   \\\
    \n           /   |         |         |    \\\n          /    |         |     \
    \    |     \\\n       +----+ +----+  +----+   +----+ +----+\n       | UA | | UA\
    \ |  | UA |   | UA | | UA |\n       +----+ +----+  +----+   +----+ +----+\n  \
    \      Figure 2. Firewall and default route\n"
- title: 3.2.  Default versus rule based
  contents:
  - "3.2.  Default versus rule based\n   Default routing is to outgoing mail what\
    \ a firewall is for incoming\n   mail, and is thus often used in conjunction with\
    \ firewalls. It is\n   about the simplest routing algorithm one can think of:\
    \ route every\n   message to one and the same MTA, which is trusted to take further\n\
    \   care of routing the message towards its destination. Pure default\n   routing\
    \ is rather useless; it is normally used as a fall back\n   mechanism accompanying\
    \ a rule based algorithm.\n   For example, the simplest usable default algorithm\
    \ is the following:\n   first check if a mail should be delivered to a local UA.\
    \ If not,\n   perform default routing.\n   In order to avoid loops, it is not\
    \ acceptable for all MTAs within a\n   certain routing community (see chapter\
    \ 9) to use default routing. At\n   least one MTA should be able to access all\
    \ routing rules for that\n   community. Consider the following example: An X.400\
    \ MTA A, which\n   serves the organisation organisational unit OU=orgunA within\
    \ the\n   organisation O=org, receives a message for the domain O=org;\n   OU=orgunB;.\
    \ Since MTA B in the same organisation serves all other\n   OUs, A will default\
    \ route the message to B. Suppose that B would use\n   the same mechanism: first\
    \ check if the OU is local and if not,\n   default route to A. If OU=orgunC is\
    \ not served by either A or B, this\n   routing set-up will lead to a loop. The\
    \ decision that a certain OU\n   does not exist can only be made if at least one\
    \ of the MTAs has\n   knowledge of all existing OUs under O.\n   An example of\
    \ a firewall and two default routes is shown in figure 2.\n   It visualises that\
    \ a firewall is a downstream and a default route is\n   an upstream indirection.\
    \ MTA B and D use default routing; they can\n   only route to one other MTA, MTA\
    \ A.\n   For more detailed information, please refer to [3], which lists most\n\
    \   pros and cons of both approaches. Your choice will depend on many\n   factors\
    \ that are specific for your messaging environment.\n"
- title: 4.    Routing at user level
  contents:
  - "4.    Routing at user level\n   Normally a message is routed down to the deepest\
    \ level domain, and\n   then delivered to the recipient per default routing. I.e.,\
    \ every user\n   in this domain is considered to have his mailbox uniquely defined\n\
    \   within this domain on the same MTA, and every user on that MTA can be\n  \
    \ distinguished within this domain. Exceptions can occur when the users\n   within\
    \ a domain have their mailboxes on different MTAs (distributed\n   domain), or\
    \ when several domains exist on the same MTA (shared MTA).\n"
- title: 4.1.  Distributed domains
  contents:
  - "4.1.  Distributed domains\n   Routing is normally performed down to a certain\
    \ domain level. Mail to\n   all users that are directly registered under this\
    \ domain is then\n   delivered per default routing, i.e., delivered locally. Explicit\
    \ user\n   routing (i.e., rule-based routing on user level attributes according\n\
    \   to a fixed table listing all users) may be necessary when not all\n   users\
    \ have their UAs connected to the same MTA.\n   Note that the whole issue of distributed\
    \ domains is nothing more than\n   a special case of the problems discussed in\
    \ chapter 3.2: 'Default\n   versus rule-based'. The only reason for mentioning\
    \ this in a separate\n   chapter is that there are many software products that\
    \ don't deal with\n   routing based on local address parts in the same way as\
    \ with routing\n   based on domain related address parts.\n   As an example, consider\
    \ an organisation where two mail platforms are\n   available. Some users prefer\
    \ using platform A, others prefer platform\n   B. Of course, the easiest solution\
    \ would be to create a subdomain A\n   and a subdomain B, and then route domain\
    \ A to system A and B to B.\n   Default user routing on both platforms would then\
    \ do the rest.\n   However, when an organisation wants to present itself to the\
    \ outside\n   world using only one domain, this scheme cannot be used, at least\
    \ not\n   without special precautions (see the paragraph about avoiding loops\n\
    \   in chapter 3.2).\n     +----------+      +---------------------------+\n \
    \    |   MTA A  |      |        Shared MTA B       |\n     +----------+      +---------------------------+\n\
    \        |     |         /        |     |        |\n     +-----------------/----+\
    \ +-----------+  +----------+\n     |  |     |       /     | |  |     |  |  |\
    \  |       |\n     | +--+ +--+ +--+/      | | +--+ +--+ |  | +--+     |\n    \
    \ | |UA| |UA| |UA|       | | |UA| |UA| |  | |UA|     |\n     | +--+ +--+ +--+\
    \       | | +--+ +--+ |  | +--+     |\n     | Distributed Domain A | | Domain\
    \ B  |  | Domain C |\n     +----------------------+ +-----------+  +----------+\n\
    \   Figure 3. Distributed domains and shared MTAs\n   Another possibility to have\
    \ uniform addresses in outgoing e-mail,\n   despite the fact that a domain is\
    \ distributed, is to make routing\n   decisions on information in the local part\
    \ of the address, e.g., in\n   X.400 the Surname in exactly the same manner as\
    \ making routing\n   decisions on any other attributes. Thus products and routing\n\
    \   algorithms that are able to route on user related address parts are\n   said\
    \ to support distributed domains.\n"
- title: 4.2.  Shared MTA
  contents:
  - "4.2.  Shared MTA\n   The opposite of a distributed domain is a shared MTA: several\
    \ domains\n   are routed locally on the same MTA. These domains sharing one MTA\
    \ may\n   cause problems when two or more domains have a local user with the\n\
    \   same name.\n   Theoretically, this problem doesn't exist: the address is being\n\
    \   routed down to the deepest domain level, and within that level, there\n  \
    \ will only be one user with that name (let's at least assume this for\n   simplicity).\
    \ Some products however use only one database of all users\n   locally connected\
    \ to this MTA instead of one database per domain, so\n   that default user routing\
    \ at the deepest level can lead to conflicts.\n   It is beyond the scope of this\
    \ document to describe the tricks needed\n   to avoid these conflicts when using\
    \ such products.\n"
- title: 5.    Routing control
  contents:
  - "5.    Routing control\n   Routing control means that routing decisions can be\
    \ affected by the\n   originator of a message. This normally takes the form of\
    \ either\n   granting or denying access for a certain user or group of users.\n\
    \   Routing control is often useful in an X.400 ADMD/PRMD environment,\n   where\
    \ it is either used to grant access only to users who are known\n   to be chargeable,\
    \ or where ADMDs can refuse messages that were\n   relayed to them over international\
    \ PRMD connections; a policy that is\n   not allowed in the CCITT version of the\
    \ standards (as opposed to the\n   ISO version). Of course, the PRMDs can also\
    \ perform routing control\n   themselves in order to circumvent such problems.\n\
    \   Although there may be good reasons for using routing control, one\n   must\
    \ be aware that it can make the messaging environment\n   unpredictable for end-users.\
    \ Where using routing control is\n   unavoidable, the originator whose message\
    \ has been rejected is likely\n   to appreciate receiving a message, clearly telling\
    \ him where and why\n   routing of his message was refused, whom to contact, and\
    \ what options\n   are available to avoid such rejections in the future.\n"
- title: 6.    Bulk routing
  contents:
  - "6.    Bulk routing\n   In order to reduce network traffic, intelligent mailers\
    \ may prefer a\n   message addressed to a group of remote users to be transferred\
    \ to a\n   remote domain only once, thus postponing the 'explosion' into several\n\
    \   copies. This technique, called bulk routing, is especially useful\n   when\
    \ an MTA hosts large mailing lists.\n   Several possibilities exist. In a typical\
    \ hierarchical firewall mail\n   system, bulk routing can be done almost automatically\
    \ by intelligent\n   MTAs. For instance, in an X.400 community, a large international\n\
    \   distribution list can create a message with an envelope containing\n   1000\
    \ recipient addresses, some of which can probably be grouped by\n   the MTA depending\
    \ on whether they can be routed further to the same\n   remote MTA, according\
    \ to the normal routing implementation at this\n   MTA. The size and number of\
    \ these groups will largely depend on how\n   indirect this routing implementation\
    \ is. In the GO-MHS community, the\n   number of groups will almost always be\
    \ less than 50, which provides a\n   rather fair distribution of traffic load\
    \ over the involved MTAs (that\n   is, fair according to the author's taste, who\
    \ is not aware of any\n   existing fair mail load distribution formula).\n   As\
    \ an extreme example, the simplest way to automatically (i.e.,\n   without using\
    \ special optimisation tools) bulk route mail is to use\n   one default route.\
    \ Any outgoing message, regardless of the number of\n   recipients, will be routed\
    \ over the default route only once. The\n   default remote MTA will then have\
    \ to break up the message (envelope)\n   into several copies and is thus responsible\
    \ for the actual explosion\n   and distribution. NB. This mechanism can be exploited\
    \ to shift the\n   cost and overhead of exploding a message towards another domain/MTA.\n\
    \   If you ever get a request for a bilateral default route agreement;\n   i.e.,\
    \ the requesting party wants to default route over your MTA, it\n   may be worth\
    \ to check first if the requesting party is running or\n   planning to run large\
    \ mailing lists.\n   In more direct routing environments, such as BITNET, bulk\
    \ routing\n   will not function as automatically as described above. Without\n\
    \   special precautions, an MTA would open a direct connection to every\n   single\
    \ host that occurs in the message's envelope, regardless of\n   whether some of\
    \ these hosts are far away from this MTA, but close to\n   each other, measured\
    \ by underlying network topology. This can clearly\n   lead to a waste of expensive\
    \ bandwidth. In order to be able to detect\n   such cases, and to act upon it\
    \ by sending one single copy over an\n   expensive link and have it distributed\
    \ at some remote hosts, an MTA\n   must have additional knowledge of the relation\
    \ between mail domains\n   and the underlying network topology.\n   BITNET uses\
    \ the distribute protocol [4] for this purpose. A selected\n   set of hosts is\
    \ published to have the required topology knowledge and\n   to be able to efficiently\
    \ distribute the mail on behalf of other\n   MTAs, who can explicitly route all\
    \ bulk mail to one of those hosts.\n   The complete message, including the envelope,\
    \ is encoded in a message\n   body, which starts with a distribution request to\
    \ the distribute\n   server. This server will break up the rest of the body into\
    \ the\n   original envelope and contents and then use it's topology knowledge\n\
    \   to efficiently distribute the original message. Note that this\n   protocol\
    \ violates the conceptual model of the layering of MTA and UA\n   functionality,\
    \ but it is about the only trick that will work in a\n   very direct routing environment.\
    \ It is only needed to overrule a non-\n   efficient (for large mailing lists)\
    \ routing topology.\n   Bulk routing is an area where mail routing issues start\
    \ to overlap\n   with the area of distributing netnews (bulletin board services).\n\
    \   Several organisations, such as ISO, RARE and the IETF have started\n   initiatives\
    \ in the direction of harmonising the two worlds. The first\n   results, be it\
    \ standards or products, are not expected before 1995\n   though.\n"
- title: 7.    Source routing
  contents:
  - "7.    Source routing\n   Source routing was originally intended to allow a user\
    \ to force a\n   message to take a certain route. The mechanism works as follows:\
    \ the\n   MTA that the user wants the message to be routed through is\n   integrated\
    \ into the address. Once the message has arrived at the\n   specified MTA, that\
    \ MTA strips itself from the source-routed address\n   and routes the remaining\
    \ address in the usual way. This mechanism is\n   called explicit source routing\
    \ and can be useful if a user wants to\n   test a routing path or force a message\
    \ to be routed over a faster,\n   cheaper, more reliable, or otherwise preferred\
    \ path.\n   For instance, if the Internet user user@uni-a.edu wants to test the\n\
    \   mail connections to and from a remote domain uni-b.edu, he might\n   source\
    \ route a message to himself over the MTA at uni-b.edu by\n   addressing the mail\
    \ to:  @uni-b.edu:user@uni-a.edu\n   Source routing need not always be explicit.\
    \ Source routes can also be\n   generated automatically by a gateway, in which\
    \ case we speak of\n   address rooting (to that gateway). The gateway will root\
    \ itself to\n   the message by putting its own domain in the source route mapped\n\
    \   address, thus ensuring that any replies to the gatewayed message will\n  \
    \ be routed back through the same gateway.\n   Example 1: RFC 1327 left hand side\
    \ encoding (see [5]) performed by\n   the gateway 'gw.ch':\n        C=zz;A=a;P=p;O=oo;S=plork\
    \ ->\n        \"/C=zz/A=a/P=p/O=oo/S=plork/\"@gw.ch\n   Example 2: RFC 1327 DDA\
    \ mapping (see [5]) performed by the gateway\n   C=zz;A=a;\n        bush@dole.us\
    \ ->\n        DD.RFC-822=bush(a)dole.us;C=zz;A=a;\n   Example 3: the so-called\
    \ %-hack:\n        user%final.domain@1st.relay\n   When the relaying host '1st.relay'\
    \ receives the message, it strips\n   its own domain part and interprets the localpart\
    \ 'user%final.domain':\n   it changes the % to an @ sign and relays the message\
    \ to the address\n        user@final.domain\n   Example 4: Another example of\
    \ the already mentioned explicit source\n   routing, this time through two relays:\n\
    \        @1st.relay,@2nd.relay:user@final.domain\n   In the Internet, use of explicit\
    \ source routing is strongly\n   discouraged (see [6]), one reason being that\
    \ not all mail relays will\n   handle such addresses in a consistent manner. Apart\
    \ from that, the\n   need to use explicit source routing has disappeared over\
    \ the last\n   decennia. In earlier days, when the RFC 822 world consisted of\
    \ many\n   sparsely connected 'mail islands', source routing was sometimes\n \
    \  needed to make sure that a message was routed through a gateway that\n   was\
    \ known to be connected to a remote island. Nowadays, the RFC 822\n   world is\
    \ almost fully interconnected through the Internet, so the\n   need for end-users\
    \ to have knowledge of the mail network's topology\n   has become superfluous.\n"
- title: 8.    Poor man's routing
  contents:
  - "8.    Poor man's routing\n   If we combine static, indirect and source routing,\
    \ we get what is\n   commonly known as \"poor man's routing\". The user thus specifies\
    \ the\n   complete route in the address. A classic example is the old UUCP bang\n\
    \   style addressing:\n        host1!host2!host3!host4!user\n   Poor man's routing\
    \ is presented here for historical reasons only.\n   Since, for reasons discussed\
    \ earlier, most present networks\n   discourage source routing and prefer dynamic\
    \ over static routing,\n   poor man's routing is not widely deployed anymore.\n"
- title: 9.    Routing communities
  contents:
  - "9.    Routing communities\n   A routing community can be defined as follows:\n\
    \       Routing community:     a set of MTAs X, with the property\n          \
    \                    that for any address a, every MTA\n                     \
    \         in X except a subset Ya will have\n                              the\
    \ option, according to an agreed\n                              upon set of routing\
    \ rules, to\n                              directly route that address to at\n\
    \                              least one MTA in Ya.\n   Which is a rather formal\
    \ way of describing that a routing community\n   consists of a set of MTAs (and\
    \ human operators) that agreed on a\n   common set of rules on how to route messages\
    \ among each other.\n   An example of a routing community is the large Internet\
    \ routing\n   community, in which the agreed rules are implemented in the Domain\n\
    \   Name System (DNS). For details, refer to [7]. The subset Ya is in\n   this\
    \ case the set of MTAs that have an MX record in the DNS for a.\n   MTAs that\
    \ hide behind fire walls or behind default routes are thus\n   not considered\
    \ direct members of this community, but normally form\n   their own smaller routing\
    \ community, with one host (the mail\n   exchanger/default route) belonging to\
    \ both communities.\n   Another example is the GO-MHS community, consisting of\
    \ a set of\n   documented RELAY-MTAs (formerly called WEPs, Well-known Entry\n\
    \   Points). Routing communities can be further classified depending on\n   the\
    \ openness and topology of their routing rules. [3] defines four\n   classes of\
    \ routing communities:\n       Local community:       The scope of a single MTA.\
    \ Contains\n                              the MTAs view of the set of\n      \
    \                        bilateral routing agreements, and\n                 \
    \             routing information local to the\n                             \
    \ MTA. Example: any local MTA.\n       Closed community:      This is like a local\
    \ community, but\n                              involves more than one MTA. The\n\
    \                              idea is to route messages only\n              \
    \                within this closed community. A\n                           \
    \   small subset of the involved MTAs\n                              can be in\
    \ another community as\n                              well, in order to get the\n\
    \                              connectivity to the outside world,\n          \
    \                    as described earlier. Example: A\n                      \
    \        set of Private Management Domains\n                              (PRMDs)\
    \ representing the same\n                              organisation in multiple\
    \ countries.\n       Open community:        All routing information is public\n\
    \                              and any MTA is invited to use it.\n           \
    \                   Example: the Internet.\n       Hierarchical community:A subtree\
    \ of the O/R address tree.\n                              Note that the subtree\
    \ will in\n                              practice often be pruned; sub-sub-\n\
    \                              trees may form their own routing\n            \
    \                  community. Example: GO-MHS.\n   This classification cannot\
    \ always be followed too strictly. For\n   example, completely closed communities\
    \ are relatively rare. In order\n   for e-mail to be an effective communication\
    \ tool, an organisation\n   will typically designate at least one of its MTAs\
    \ as a gateway to\n   another routing community, for instance to the Internet.\
    \ The\n   organisation will register an Internet domain, say 'org.net', which\n\
    \   points to this gateway, and thus acts as a firewall from the Internet\n  \
    \ to the domain 'org.net', and as a default route from the closed\n   community\
    \ to the rest of the Internet. At this stage, the gateway MTA\n   can be regarded\
    \ as being a member of any of the four types of routing\n   communities. The reader\
    \ is invited to check this himself.\n   Especially the distinction between open\
    \ and closed communities is not\n   always easy. To some extent, most routing\
    \ communities are open, at\n   least among their own participants. It is just\
    \ that some routing\n   communities are more open than others. Also, even the\
    \ most open\n   routing community is not just open to anyone. It is not enough\
    \ for a\n   community participant to use the community's routing rules and\n \
    \  connect to any other MTA in the community. The participant will\n   typically\
    \ also have to fulfil an agreed upon set of operational\n   requirements, for\
    \ example the Internet host requirements [6] or the\n   GO-MHS domain requirements\
    \ [8].\n   The most open routing community known today is certainly the Internet\n\
    \   mail community. As for X.400 routing communities, some problems occur\n  \
    \ when trying to open a community, the main one being that most X.400\n   software\
    \ does not support the so called 'anonymous' connection mode,\n   which allows\
    \ any remote MTA to connect to it. Most software was\n   designed or configured\
    \ to use passwords for setting up MTA\n   connections. This, together with the\
    \ fact that X.400 routing was\n   originally designed to be hierarchical, is one\
    \ of the main reasons\n   why most X.400 communities today are either closed or\
    \ hierarchical.\n"
- title: 10.   Realisations
  contents:
  - "10.   Realisations\n   In this chapter some of the routing classifications described\
    \ above\n   are assigned to existing mail services and projects.\n"
- title: 10.1. Internet mail
  contents:
  - "10.1. Internet mail\n   RFC 822 mail. An operational service. Co-ordination:\
    \ distributed.\n   Mostly dynamic routing, although static routing is also possible.\
    \ DNS\n   based routing rules(*). Mostly direct routing, although indirect is\n\
    \   also possible. No dynamic stack routing. Distributed domains\n   possible.\
    \ Shared MTAs possible, but rare. Routing control not\n   normally used. Bulk\
    \ routing via SMTP envelope grouping; also\n   possible, but not widely deployed,\
    \ using the 'distribute protocol'\n   [4]. Source routing supported, but strongly\
    \ discouraged. No poor\n   man's routing. Open (and hierarchical) routing community.\n\
    \   (*) Sub-communities don't use DNS based routing: The MX records in\n   the\
    \ DNS are used to \"attract\" messages from the Internet to the\n   \"border\"\
    \ between the Internet and the sub-community. Thus from the\n   Internet we have\
    \ dynamic, directory based routing but once the\n   \"border\" is reached, it\
    \ is no longer possible to use MX records for\n   mail routing, and thus some\
    \ form of static routing is generally\n   needed.\n"
- title: 10.2. UUCP
  contents:
  - "10.2. UUCP\n   RFC 822 style mail. An operational service. Co-ordination:\n \
    \  distributed. Mostly static routing, although dynamic routing is also\n   possible.\
    \ Table based routing rules. Mostly indirect routing. No\n   dynamic stack routing.\
    \ No distributed domains. Shared MTAs possible,\n   but rare. Routing control\
    \ not normally used. No bulk routing\n   possible. Source routing (poor man's\
    \ routing) still widely used by\n   means of 'bang' addressing, but strongly discouraged.\
    \ Open (and\n   hierarchical) routing community.\n"
- title: 10.3. EARN
  contents:
  - "10.3. EARN\n   BITNET mail. An operational service. Co-ordination: The EARN Office,\n\
    \   France. Static routing. Table based routing rules, although an X.500\n   based\
    \ experiment is running. Mostly direct routing, although indirect\n   is also\
    \ possible. No dynamic stack routing. No distributed domains.\n   No shared MTAs.\
    \ Routing control not normally used. Bulk routing\n   possible using the 'distribute\
    \ protocol' [4]. Source routing not\n   supported. No poor man's routing. Open\
    \ routing community.\n"
- title: 10.4. GO-MHS
  contents:
  - "10.4. GO-MHS\n   X.400 mail. An operational service. Co-ordination: GO-MHS Project\n\
    \   Team, Switzerland. Mostly static routing, although dynamic routing is\n  \
    \ getting more and more deployed since the introduction of RFC 1465\n   [2]. Table\
    \ based community-wide routing rules. Indirect routing.\n   Dynamic stack routing.\
    \ Distributed domains possible. Shared MTAs.\n   Routing control not normally\
    \ used, only to avoid routing control\n   problems when routing international\
    \ traffic to ADMDs. Bulk routing\n   using X.400 'responsibility' envelope flags.\
    \ Source routing supported\n   for gatewaying to the Internet. No poor man's routing.\
    \ Hierarchical,\n   but open, routing community.\n"
- title: 10.5. ADMD infrastructure
  contents:
  - "10.5. ADMD infrastructure\n   X.400 mail. An operational service. Co-ordination:\
    \ The joint\n   Administrative Management Domains (ADMDs), typically operated\
    \ by\n   PTTs. Mostly static routing. Indirect routing. Table based bilateral\n\
    \   routing rules. No dynamic stack routing. Distributed domains not\n   supported.\
    \ Shared MTAs. Routing control used to prohibit routing of\n   international traffic\
    \ through PRMDs and to limit access to certain\n   gateways. Bulk routing using\
    \ X.400 'responsibility' envelope flags.\n   Source routing possible for gatewaying\
    \ to the Internet. No poor man's\n   routing. Closed hierarchical routing community.\n"
- title: 10.6. Long Bud
  contents:
  - "10.6. Long Bud\n   X.400 mail. A pilot project. Co-ordination: The IETF MHS-DS\
    \ working\n   group. Dynamic routing. X.500 based routing rules. Mostly indirect\n\
    \   routing, although direct is also possible. Dynamic stack routing.\n   Distributed\
    \ domains. Shared MTAs. No routing control. Bulk routing\n   using X.400 'responsibility'\
    \ envelope flags. Source routing supported\n   for gatewaying to the Internet.\
    \ No poor man's routing. Open\n   hierarchical routing community.\n"
- title: 10.7. X42D
  contents:
  - "10.7. X42D\n   X.400 mail. An experiment. Co-ordination: INFN, Italy. Dynamic\n\
    \   routing. DNS based routing rules as defined in [9]. Mostly indirect\n   routing,\
    \ although direct is also possible. Dynamic stack routing. No\n   distributed\
    \ domains. Shared MTAs. No routing control. Bulk routing\n   using X.400 'responsibility'\
    \ envelope flags. Source routing supported\n   for gatewaying to the Internet.\
    \ No poor man's routing. Open\n   hierarchical routing community.\n"
- title: 11.   Conclusion
  contents:
  - "11.   Conclusion\n   We have seen several dimensions in which mail routing can\
    \ be\n   classified. There are many more issues that were not discussed here,\n\
    \   such as how exactly the routing databases are implemented, which\n   algorithms\
    \ to use for making the actual choices in dynamic routing,\n   etc. A follow-up\
    \ paper is planned to discuss such aspects in more\n   detail.\n   So far, the\
    \ author has tried to keep this paper free of opinion, but\n   he would like to\
    \ conclude by listing his own favourite routing\n   options (without any further\
    \ explanation or justification; please\n   feel free to disagree):\n       Static/dynamic:\
    \        Dynamic\n       Direct/indirect:       Every routing community has its\
    \ own\n                              optimum level of indirection\n       User\
    \ routing:          Support\n       Routing control:       Avoid\n       Bulk\
    \ routing:          Efficient distribution should be\n                       \
    \       transparent at mail level, but we\n                              may need\
    \ better e-mail models\n                              before this becomes possible\n\
    \       Source routing:        Avoid where possible\n       Poor man's routing:\
    \    Avoid\n"
- title: 12.   Abbreviations
  contents:
  - "12.   Abbreviations\n    ADMD              Administration Management Domain\n\
    \    CCITT             Comite Consultatif International de\n                 \
    \      Telegraphique et Telephonique\n    CONS              Connection Oriented\
    \ Network Service\n    DDA               Domain Defined Attribute\n    DNS   \
    \            Domain Name System\n    GO-MHS            Global Open MHS\n    IP\
    \                Internet Protocol\n    ISO               International Organisation\
    \ for Standardisation\n    Long Bud          Not an abbreviation\n    MHS    \
    \           Message Handling System\n    MHS-DS            MHS and Directory Services\n\
    \    MTA               Message Transfer Agent\n    MTS               Message Transfer\
    \ System\n    MX                Mail eXchanger\n    O/R address       Originator/Recipient\
    \ address\n    PP                Not an abbreviation\n    PRMD              Private\
    \ Management Domain\n    RARE              Reseaux Associes pour la Recherche\
    \ Europeenne\n    RFC               Internet Request for Comments\n    RTR   \
    \            RARE Technical Report\n    SMTP              Simple Mail Transfer\
    \ Protocol\n    STD               Internet Standard RFC\n    TCP             \
    \  Transfer Control Protocol\n    TP0               Transport Protocol Class 0\n\
    \    UA                User Agent\n    UUCP              UNIX to UNIX CoPy\n \
    \   WEP               Well-known Entry Point\n"
- title: 13.   References
  contents:
  - "13.   References\n      [1]         Houttuin, J., \"C-BoMBS : A Classification\
    \ of Breeds\n                  Of Mail Based Servers\", RARE WG-MSG Work in Progress,\n\
    \                  April 1994.\n      [2]         Eppenberger, E., \"Routing Coordination\
    \ for X.400 MHS\n                  Services Within a Multi Protocol / Multi Network\n\
    \                  Environment Table Format V3 for Static Routing\",\n       \
    \           RFC 1465, SWITCH, May 1993.\n      [3]         Kille, S., \"MHS use\
    \ of the Directory to support MHS\n                  routing\", Work in Progress,\
    \ July 1993.\n      [4]         Thomas, E., \"Listserv Distribute Protocol\",\n\
    \                  RFC 1429, Swedish University Network, February 1993.\n    \
    \  [5]         Kille, S., \"Mapping between X.400(1988) / ISO 10021\n        \
    \          and RFC 822\", RFC 1327, RARE RTR 2, University\n                 \
    \ College London, May 1992.\n      [6]         Braden, R., Editor, \"Requirements\
    \ for Internet Hosts\n                  - Application and Support\", STD 3, RFC\
    \ 1123, USC/\n                  Information Sciences Institute,  October 1989.\n\
    \      [7]         Partridge, C., \"Mail Routing and the Domain System\",\n  \
    \                STD 14, RFC 974, BBN, January 1986.\n      [8]         Hansen,\
    \ A. and R. Hagens, \"Operational Requirements\n                  for X.400 Management\
    \ Domains in the GO-MHS\n                  Community\", Work in Progress, March\
    \ 1993.\n      [9]         Allocchio, C., Bonito, A., Cole, B., Giordano, S.,\n\
    \                  and R. Hagens \"Using the Internet DNS to Distribute\n    \
    \              RFC1327 Mail Address Mapping Tables\", RFC 1664,\n            \
    \      GARR-Italy, Cisco Systems Inc, Centro Svizzero\n                  Calcolo\
    \ Scientific, Advanced Network & Services,\n                  February 1993.\n\
    \      [10]        Houttuin, J., \"A Tutorial on Gatewaying between X.400\n  \
    \                and Internet Mail\", RFC 1506, RTR 6, RARE Secretariat,\n   \
    \               August 1993.\n      [11]        Postel, J., \"Simple Mail Transfer\
    \ Protocol\", STD 10,\n                  RFC 821, USC/Information Sciences Institute,\
    \ August\n                  1982.\n      [12]        Crocker, D., \"Standard for\
    \ the Format of ARPA\n                  Internet Text Messages\", STD 11, RFC\
    \ 822, UDEL,\n                  August 1982.\n      [13]        Alvestrand, H.T.,\
    \ et al, \"Introducing Project Long\n                  Bud Internet Pilot Project\
    \ for the Deployment of\n                  X.500 Directory Information in Support\
    \ of X.400\n                  Routing\", Work in Progress, June 1993.\n      [14]\
    \        Kille, S., \"A Simple Profile for MHS use of\n                  Directory\"\
    , Work in Progress, July 1993.\n      [15]        Kille, S., \"MHS use of the\
    \ Directory to Support\n                  Distribution Lists\", Work in Progress,\
    \ November 1992.\n      [16]        Eppenberger, U., \"X.500 directory service\
    \ usage for\n                  X.400 e-mail\", Computer Networks for Research\
    \ in\n                  Europe No.1: Computer Networks and ISDN Systems 25,\n\
    \                  Suppl.1 (1993) S3-8, September 1993.\n      [17]        CCITT\
    \ Recommendations X.400 - X.430. Data\n                  Communication Networks:\
    \ Message Handling Systems.\n                  CCITT Red Book, Vol. VIII - Fasc.\
    \ VIII.7, Malaga-\n                  Torremolinos 1984.\n      [18]        CCITT\
    \ Recommendations X.400 - X.420. Data\n                  Communication Networks:\
    \ Message Handling Systems.\n                  CCITT Blue Book, Vol. VIII - Fasc.\
    \ VIII.7, Melbourne\n                  1988.\n"
- title: 14.   Security Considerations
  contents:
  - "14.   Security Considerations\n   Security issues are discussed in section 3.1.\n"
- title: 15.   Author's Address
  contents:
  - "15.   Author's Address\n   Jeroen Houttuin\n   RARE Secretariat\n   Singel 466-468\n\
    \   NL-1017 AW Amsterdam\n   The Netherlands\n   Phone: +31 20 639 11 31\n   Fax:\
    \  +31 20 639 32 89\n   EMail: houttuin@rare.nl\n"
