- title: __initial_text__
  contents:
  - "                 Universal Resource Identifiers in WWW\n                A Unifying\
    \ Syntax for the Expression of\n             Names and Addresses of Objects on\
    \ the Network\n                     as used in the World-Wide Web\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n   Note that the work contained in this memo\
    \ does not describe an\n   Internet standard.  An Internet standard for general\
    \ Resource\n   Identifiers is under development within the IETF.\n"
- title: Introduction
  contents:
  - "Introduction\n   This document defines the syntax used by the World-Wide Web\n\
    \   initiative to encode the names and addresses of objects on the\n   Internet.\
    \  The web is considered to include objects accessed using an\n   extendable number\
    \ of protocols, existing, invented for the web\n   itself, or to be invented in\
    \ the future.  Access instructions for an\n   individual object under a given\
    \ protocol are encoded into forms of\n   address string.  Other protocols allow\
    \ the use of object names of\n   various forms.  In order to abstract the idea\
    \ of a generic object,\n   the web needs the concepts of the universal set of\
    \ objects, and of\n   the universal set of names or addresses of objects.\n  \
    \ A Universal Resource Identifier (URI) is a member of this universal\n   set\
    \ of names in registered name spaces and addresses referring to\n   registered\
    \ protocols or name spaces.  A Uniform Resource Locator\n   (URL), defined elsewhere,\
    \ is a form of URI which expresses an address\n   which maps onto an access algorithm\
    \ using network protocols. Existing\n   URI schemes which correspond to the (still\
    \ mutating) concept of IETF\n   URLs are listed here. The Uniform Resource Name\
    \ (URN) debate attempts\n   to define a name space (and presumably resolution\
    \ protocols) for\n   persistent object names. This area is not addressed by this\
    \ document,\n   which is written in order to document existing practice and provide\
    \ a\n   reference point for URL and URN discussions.\n   The world-wide web protocols\
    \ are discussed on the mailing list www-\n   talk-request@info.cern.ch and the\
    \ newsgroup comp.infosystems.www is\n   preferable for beginner's questions. The\
    \ mailing list uri-\n   request@bunyip.com has discussion related particularly\
    \ to the URI\n   issue.  The author may be contacted as timbl@info.cern.ch.\n\
    \   This document is available in hypertext form at:\n   http://info.cern.ch/hypertext/WWW/Addressing/URL/URI_Overview.html\n"
- title: The Need For a Universal Syntax
  contents:
  - "The Need For a Universal Syntax\n   This section describes the concept of the\
    \ URI and does not form part\n   of the specification.\n   Many protocols and\
    \ systems for document search and retrieval are\n   currently in use, and many\
    \ more protocols or refinements of existing\n   protocols are to be expected in\
    \ a field whose expansion is explosive.\n   These systems are aiming to achieve\
    \ global search and readership of\n   documents across differing computing platforms,\
    \ and despite a\n   plethora of protocols and data formats.  As protocols evolve,\n\
    \   gateways can allow global access to remain possible. As data formats\n   evolve,\
    \ format conversion programs can preserve global access.  There\n   is one area,\
    \ however, in which it is impractical to make conversions,\n   and that is in\
    \ the names and addresses used to identify objects.\n   This is because names\
    \ and addresses of objects are passed on in so\n   many ways, from the backs of\
    \ envelopes to hypertext objects, and may\n   have a long life.\n   A common feature\
    \ of almost all the data models of past and proposed\n   systems is something\
    \ which can be mapped onto a concept of \"object\"\n   and some kind of name,\
    \ address, or identifier for that object.  One\n   can therefore define a set\
    \ of name spaces in which these objects can\n   be said to exist.\n   Practical\
    \ systems need to access and mix objects which are part of\n   different existing\
    \ and proposed systems.  Therefore, the concept of\n   the universal set of all\
    \ objects, and hence the universal set of\n   names and addresses, in all name\
    \ spaces, becomes important.  This\n   allows names in different spaces to be\
    \ treated in a common way, even\n   though names in different spaces have differing\
    \ characteristics, as\n   do the objects to which they refer.\n   URIs\n     \
    \ This document defines a way to encapsulate a name in any\n      registered name\
    \ space, and label it with the the name space,\n      producing a member of the\
    \ universal set.  Such an encoded and\n      labelled member of this set is known\
    \ as a Universal Resource\n      Identifier, or URI.\n      The universal syntax\
    \ allows access of objects available using\n      existing protocols, and may\
    \ be extended with technology.\n      The specification of the URI syntax does\
    \ not imply anything about\n      the properties of names and addresses in the\
    \ various name spaces\n      which are mapped onto the set of URI strings.  The\
    \ properties\n      follow from the specifications of the protocols and the associated\n\
    \      usage conventions for each scheme.\n   URLs\n      For existing Internet\
    \ access protocols, it is necessary in most\n      cases to define the encoding\
    \ of the access algorithm into\n      something concise enough to be termed address.\
    \  URIs which refer\n      to objects accessed with existing protocols are known\
    \ as \"Uniform\n      Resource Locators\" (URLs) and are listed here as used in\
    \ WWW, but\n      to be formally defined in a separate document.\n   URNs\n  \
    \    There is currently a drive to define a space of more persistent\n      names\
    \ than any URLs.  These \"Uniform Resource Names\" are the\n      subject of an\
    \ IETF working group's discussions.  (See Sollins and\n      Masinter, Functional\
    \ Specifications for URNs, circulated\n      informally.)\n      The URI syntax\
    \ and URL forms have been in widespread use by\n      World-Wide Web software\
    \ since 1990.\n"
- title: Design Criteria and Choices
  contents:
  - "Design Criteria and Choices\n   This section is not part of the specification:\
    \ it is simply an\n   explanation of the way in which the specification was derived.\n\
    \   Design criteria\n      The syntax was designed to be:\n      Extensible  \
    \            New naming schemes may be added later.\n      Complete          \
    \      It is possible to encode any naming\n                              scheme.\n\
    \      Printable               It is possible to express any URI using\n     \
    \                         7-bit ASCII characters so that URIs may,\n         \
    \                     if necessary, be passed using pen and ink.\n   Choices for\
    \ a universal syntax\n      For the syntax itself there is little choice except\
    \ for the order\n      and punctuation of the elements, and the acceptable characters\
    \ and\n      escaping rules.\n      The extensibility requirement is met by allowing\
    \ an arbitrary (but\n      registered) string to be used as a prefix.  A prefix\
    \ is chosen as\n      left to right parsing is more common than right to left.\
    \  The\n      choice of a colon as separator of the prefix from the rest of the\n\
    \      URI was arbitrary.\n      The decoding of the rest of the string is defined\
    \ as a function of\n      the prefix.  New prefixed are introduced for new schemes\
    \ as\n      necessary, in agreement with the registration authority.  The\n  \
    \    registration of a new scheme clearly requires the definition of\n      the\
    \ decoding of the URI into a given name space, and a definition\n      of the\
    \ properties and, where applicable, resolution protocols, for\n      the name\
    \ space.\n      The completeness requirement is easily met by allowing\n     \
    \ particularly strange or plain binary names to be encoded in base\n      16 or\
    \ 64 using the acceptable characters.\n      The printability requirement could\
    \ have been met by requiring all\n      schemes to encode characters not part\
    \ of a basic set.  This led to\n      many discussions of what the basic set should\
    \ be.  A difficult\n      case, for example, is when an ISO latin 1 string appears\
    \ in a URL,\n      and within an application with ISO Latin-1 capability, it can\
    \ be\n      handled intact.  However, for transport in general, the non-ASCII\n\
    \      characters need to be escaped.\n      The solution to this was to specify\
    \ a safe set of characters, and\n      a general escaping scheme which may be\
    \ used for encoding \"unsafe\"\n      characters.  This \"safe\" set is suitable,\
    \ for example, for use in\n      electronic mail.  This is the canonical form\
    \ of a URI.\n      The choice of escape character for introducing representations\
    \ of\n      non-allowed characters also tends to be a matter of taste.  An\n \
    \     ANSI standard exists in the C language, using the back-slash\n      character\
    \ \"\\\".  The use of this character on unix command lines,\n      however, can\
    \ be a problem as it is interpreted by many shell\n      programs, and would have\
    \ itself to be escaped.  It is also a\n      character which is not available\
    \ on certain keyboards.  The equals\n      sign is commonly used in the encoding\
    \ of names having\n      attribute=value pairs.  The percent sign was eventually\
    \ chosen as\n      a suitable escape character.\n      There is a conflict between\
    \ the need to be able to represent many\n      characters including spaces within\
    \ a URI directly, and the need to\n      be able to use a URI in environments\
    \ which have limited character\n      sets or in which certain characters are\
    \ prone to corruption.  This\n      conflict has been resolved by use of an hexadecimal\
    \ escaping\n      method which may be applied to any characters forbidden in a\
    \ given\n      context.  When URLs are moved between contexts, the set of\n  \
    \    characters escaped may be enlarged or reduced unambiguously.\n      The use\
    \ of white space characters is risky in URIs to be printed\n      or sent by electronic\
    \ mail, and the use of multiple white space\n      characters is very risky. \
    \ This is because of the frequent\n      introduction of extraneous white space\
    \ when lines are wrapped by\n      systems such as mail, or sheer necessity of\
    \ narrow column width,\n      and because of the inter-conversion of various forms\
    \ of white\n      space which occurs during character code conversion and the\n\
    \      transfer of text between applications.  This is why the canonical\n   \
    \   form for URIs has all white spaces encoded.\n"
- title: Reommendations
  contents:
  - "Reommendations\n   This section describes the syntax for URIs as used in the\
    \ WorldWide\n   Web initiative.  The generic syntax provides a framework for new\n\
    \   schemes for names to be resolved using as yet undefined protocols.\n"
- title: URI syntax
  contents:
  - "URI syntax\n   A complete URI consists of a naming scheme specifier followed\
    \ by a\n   string whose format is a function of the naming scheme.  For locators\n\
    \   of information on the Internet, a common syntax is used for the IP\n   address\
    \ part. A BNF description of the URL syntax is given in an a\n   later section.\
    \ The components are as follows.  Fragment identifiers\n   and relative URIs are\
    \ not involved in the basic URL definition.\n   SCHEME\n      Within the URI of\
    \ a object, the first element is the name of the\n      scheme, separated from\
    \ the rest of the object by a colon.\n   PATH\n      The rest of the URI follows\
    \ the colon in a format depending on the\n      scheme. The path is interpreted\
    \ in a manner dependent on the\n      protocol being used.  However, when it contains\
    \ slashes, these\n      must imply a hierarchical structure.\n"
- title: Reserved characters
  contents:
  - "Reserved characters\n   The path in the URI has a significance defined by the\
    \ particular\n   scheme.  Typically, it is used to encode a name in a given name\n\
    \   space, or an algorithm for accessing an object.  In either case, the\n   encoding\
    \ may use those characters allowed by the BNF syntax, or\n   hexadecimal encoding\
    \ of other characters.\n   Some of the reserved characters have special uses as\
    \ defined here.\n   THE PERCENT SIGN\n      The percent sign (\"%\", ASCII 25\
    \ hex) is used as the escape\n      character in the encoding scheme and is never\
    \ allowed for anything\n      else.\n   HIERARCHICAL FORMS\n      The slash (\"\
    /\", ASCII 2F hex) character is reserved for the\n      delimiting of substrings\
    \ whose relationship is hierarchical.  This\n      enables partial forms of the\
    \ URI.  Substrings consisting of single\n      or double dots (\".\" or \"..\"\
    ) are similarly reserved.\n      The significance of the slash between two segments\
    \ is that the\n      segment of the path to the left is more significant than\
    \ the\n      segment of the path to the right.  (\"Significance\" in this case\n\
    \      refers solely to closeness to the root of the hierarchical\n      structure\
    \ and makes no value judgement!)\n      Note\n         The similarity to unix\
    \ and other disk operating system filename\n         conventions should be taken\
    \ as purely coincidental, and should\n         not be taken to indicate that URIs\
    \ should be interpreted as\n         file names.\n   HASH FOR FRAGMENT IDENTIFIERS\n\
    \      The hash (\"#\", ASCII 23 hex) character is reserved as a delimiter\n \
    \     to separate the URI of an object from a fragment identifier .\n   QUERY\
    \ STRINGS\n      The question mark (\"?\", ASCII 3F hex) is used to delimit the\n\
    \      boundary between the URI of a queryable object, and a set of words\n  \
    \    used to express a query on that object.  When this form is used,\n      the\
    \ combined URI stands for the object which results from the\n      query being\
    \ applied to the original object.\n      Within the query string, the plus sign\
    \ is reserved as shorthand\n      notation for a space.  Therefore, real plus\
    \ signs must be encoded.\n      This method was used to make query URIs easier\
    \ to pass in systems\n      which did not allow spaces.\n      The query string\
    \ represents some operation applied to the object,\n      but this specification\
    \ gives no common syntax or semantics for it.\n      In practice the syntax and\
    \ sematics may depend on the scheme and\n      may even on the base URI.\n   OTHER\
    \ RESERVED CHARACTERS\n      The astersik (\"*\", ASCII 2A hex) and exclamation\
    \ mark (\"!\" , ASCII\n      21 hex) are reserved for use as having special signifiance\
    \ within\n      specific schemes.\n"
- title: Unsafe characters
  contents:
  - "Unsafe characters\n   In canonical form, certain characters such as spaces, control\n\
    \   characters, some characters whose ASCII code is used differently in\n   different\
    \ national character variant 7 bit sets, and all 8bit\n   characters beyond DEL\
    \ (7F hex) of the ISO Latin-1 set, shall not be\n   used unencoded. This is a\
    \ recommendation for trouble-free\n   interchange, and as indicated below, the\
    \ encoded set may be extended\n   or reduced.\n"
- title: Encoding reserved characters
  contents:
  - "Encoding reserved characters\n   When a system uses a local addressing scheme,\
    \ it is useful to provide\n   a mapping from local addresses into URIs so that\
    \ references to\n   objects within the addressing scheme may be referred to globally,\
    \ and\n   possibly accessed through gateway servers.\n   For a new naming scheme,\
    \ any mapping scheme may be defined provided\n   it is unambiguous, reversible,\
    \ and provides valid URIs.  It is\n   recommended that where hierarchical aspects\
    \ to the local naming\n   scheme exist, they be mapped onto the hierarchical URL\
    \ path syntax in\n   order to allow the partial form to be used.\n   It is also\
    \ recommended that the conventional scheme below be used in\n   all cases except\
    \ for any scheme which encodes binary data as opposed\n   to text, in which case\
    \ a more compact encoding such as pure\n   hexadecimal or base 64 might be more\
    \ appropriate.  For example, the\n   conventional URI encoding method is used\
    \ for mapping WAIS, FTP,\n   Prospero and Gopher addresses in the URI specification.\n\
    \   CONVENTIONAL URI ENCODING SCHEME\n      Where the local naming scheme uses\
    \ ASCII characters which are not\n      allowed in the URI, these may be represented\
    \ in the URL by a\n      percent sign \"%\" immediately followed by two hexadecimal\
    \ digits\n      (0-9, A-F) giving the ISO Latin 1 code for that character.\n \
    \     Character codes other than those allowed by the syntax shall not\n     \
    \ be used unencoded in a URI.\n   REDUCED OR INCREASED SAFE CHARACTER SETS\n \
    \     The same encoding method may be used for encoding characters whose\n   \
    \   use, although technically allowed in a URI, would be unwise due to\n     \
    \ problems of corruption by imperfect gateways or misrepresentation\n      due\
    \ to the use of variant character sets, or which would simply be\n      awkward\
    \ in a given environment.  Because a % sign always indicates\n      an encoded\
    \ character, a URI may be made \"safer\" simply by encoding\n      any characters\
    \ considered unsafe, while leaving already encoded\n      characters still encoded.\
    \  Similarly, in cases where a larger set\n      of characters is acceptable,\
    \ % signs can be selectively and\n      reversibly expanded.\n      Before two\
    \ URIs can be compared, it is therefore necessary to\n      bring them to the\
    \ same encoding level.\n      However, the reserved characters mentioned above\
    \ have a quite\n      different significance when encoded, and so may NEVER be\
    \ encoded\n      and unencoded in this way.\n      The percent sign intended as\
    \ such must always be encoded, as its\n      presence otherwise always indicates\
    \ an encoding.  Sequences which\n      start with a percent sign but are not followed\
    \ by two hexadecimal\n      characters are reserved for future extension.  (See\
    \ Example 3.)\n   Example 1\n   The URIs\n                http://info.cern.ch/albert/bertram/marie-claude\n\
    \   and\n                http://info.cern.ch/albert/bertram/marie%2Dclaude\n \
    \  are identical, as the %2D encodes a hyphen character.\n   Example 2\n   The\
    \ URIs\n                http://info.cern.ch/albert/bertram/marie-claude\n   and\n\
    \                http://info.cern.ch/albert/bertram%2Fmarie-claude\n   are NOT\
    \ identical, as in the second case the encoded slash does not\n   have hierarchical\
    \ significance.\n   Example 3\n   The URIs\n                fxqn:/us/va/reston/cnri/ietf/24/asdf%*.fred\n\
    \   and\n                news:12345667123%asdghfh@info.cern.ch\n   are illegal,\
    \ as all % characters imply encodings, and there is no\n   decoding defined for\
    \ \"%*\"  or \"%as\" in this recommendation.\n"
- title: Partial (relative) form
  contents:
  - "Partial (relative) form\n   Within a object whose URI is well defined, the URI\
    \ of another object\n   may be given in abbreviated form, where parts of the two\
    \ URIs are the\n   same. This allows objects within a group to refer to each other\n\
    \   without requiring the space for a complete reference, and it\n   incidentally\
    \ allows the group of objects to be moved without changing\n   any references.\
    \  It must be emphasized that when a reference is\n   passed in anything other\
    \ than a well controlled context, the full\n   form must always be used.\n   In\
    \ the World-Wide Web applications, the context URI is that of the\n   document\
    \ or object containing a reference. In this case partial URIs\n   can be generated\
    \ in virtual objects or stored in real objects,\n   without the need for dramatic\
    \ change if the higher-order parts of a\n   hierarchical naming system are modified.\
    \  Apart from terseness, this\n   gives greater robustness to practical systems,\
    \ by enabling\n   information hiding between system components.\n   The partial\
    \ form relies on a property of the URI syntax that certain\n   characters (\"\
    /\") and certain path elements (\"..\", \".\") have a\n   significance reserved\
    \ for representing a hierarchical space, and must\n   be recognized as such by\
    \ both clients and servers.\n   A partial form can be distinguished from an absolute\
    \ form in that the\n   latter must have a colon and that colon must occur before\
    \ any slash\n   characters. Systems not requiring partial forms should not use\
    \ any\n   unencoded slashes in their naming schemes.  If they do, absolute URIs\n\
    \   will still work, but confusion may result. (See note on Gopher\n   below.)\n\
    \   The rules for the use of a partial name relative to the URI of the\n   context\
    \ are:\n      If the scheme parts are different, the whole absolute URI must\n\
    \      be given.  Otherwise, the scheme is omitted, and:\n      If the partial\
    \ URI starts with a non-zero number of consecutive\n      slashes, then everything\
    \ from the context URI up to (but not\n      including) the first occurrence of\
    \ exactly the same number of\n      consecutive slashes which has no greater number\
    \ of consecutive\n      slashes anywhere to the right of it is taken to be the\
    \ same and\n      so prepended to the partial URL to form the full URL. Otherwise:\n\
    \      The last part of the path of the context URI (anything following\n    \
    \  the rightmost slash) is removed, and the given partial URI\n      appended\
    \ in its place, and then:\n      Within the result, all occurrences of \"xxx/../\"\
    \ or \"/.\" are\n      recursively removed, where xxx, \"..\" and \".\" are complete\
    \ path\n      elements.\n      Note: Trailing slashes\n   If a path of the context\
    \ locator ends in slash, partial URIs are\n   treated differently to the URI with\
    \ the same path but without a\n   trailing slash. The trailing slash indicates\
    \ a void segment of the\n   path.\n      Note: Gopher\n   The gopher system does\
    \ not have the concept of relative URIs, and the\n   gopher community currently\
    \ allows / as data characters in gopher URIs\n   without escaping them to %2F.\
    \  Relative forms may not in general be\n   used for documents served by gopher\
    \ servers.  If they are used, then\n   WWW software assumes, normally correctly,\
    \ that in fact they do have\n   hierarchical significance despite the specifications.\
    \ The use of HTTP\n   rather than gopher protocol is however recommended.\n  \
    \ Examples\n   In the context of URI\n                        magic://a/b/c//d/e/f\n\
    \   the partial URIs would expand as follows:\n   g                       magic://a/b/c//d/e/g\n\
    \   /g                      magic://a/g\n   //g                     magic://g\n\
    \   ../g                    magic://a/b/c//d/g\n   g:h                     g:h\n\
    \   and in the context of the URI\n                           magic://a/b/c//d/e/\n\
    \   the results would be exactly the same.\n"
- title: Fragment-id
  contents:
  - "Fragment-id\n   This represents a part of, fragment of, or a sub-function within,\
    \ an\n   object.  Its syntax and semantics are defined by the application\n  \
    \ responsible for the object, or the specification of the content type\n   of\
    \ the object.  The only definition here is of the allowed characters\n   by which\
    \ it may be represented in a URL.\n   Specific syntaxes for representing fragments\
    \ in text documents by\n   line and character range, or in graphics by coordinates,\
    \ or in\n   structured documents using ladders, are suitable for standardization\n\
    \   but not defined here.\n   The fragment-id follows the URL of the whole object\
    \ from which it is\n   separated by a hash sign (#).  If the fragment-id is void,\
    \ the hash\n   sign may be omitted: A void fragment-id with or without the hash\
    \ sign\n   means that the URL refers to the whole object.\n   While this hook\
    \ is allowed for identification of fragments, the\n   question of addressing of\
    \ parts of objects, or of the grouping of\n   objects and relationship between\
    \ continued and containing objects, is\n   not addressed by this document.\n \
    \  Fragment identifiers do NOT address the question of objects which are\n   different\
    \ versions of a \"living\" object, nor of expressing the\n   relationships between\
    \ different versions and the living object.\n   There is no implication that a\
    \ fragment identifier refers to anything\n   which can be extracted as an object\
    \ in its own right.  It may, for\n   example, refer to an indivisible point within\
    \ an object.\n"
- title: Specific Schemes
  contents:
  - "Specific Schemes\n   The mapping for URIs onto some existing standard and experimental\n\
    \   protocols is outlined in the BNF syntax definition.  Notes on\n   particular\
    \ protocols follow.  These URIs are frequently referred to\n   as URLs, though\
    \ the exact definition of the term URL is still under\n   discussion (March 1993).\
    \  The schemes covered are:\n   http                    Hypertext Transfer Protocol\
    \ (examples)\n   ftp                     File Transfer protocol\n   gopher   \
    \               Gopher protocol\n   mailto                  Electronic mail address\n\
    \   news                    Usenet news\n   telnet, rlogin and tn3270\n      \
    \                     Reference to interactive sessions\n   wais             \
    \       Wide Area Information Servers\n   file                    Local file access\n\
    \   The following schemes are proposed as essential to the unification of\n  \
    \ the web with electronic mail, but not currently (to the author's\n   knowledge)\
    \ implemented:\n   mid                     Message identifiers for electronic\
    \ mail\n   cid                     Content identifiers for MIME body part\n  \
    \ The schemes for X.500, network management database, and Whois++ have\n   not\
    \ been specified and may be the subject of further study.  Schemes\n   for Prospero,\
    \ and restricted NNTP use are not currently implemented\n   as far as the author\
    \ is aware.\n   The \"urn\" prefix is reserved for use in encoding a Uniform Resource\n\
    \   Name when that has been developed by the IETF working group.\n   New schemes\
    \ may be registered at a later time.\n"
- title: HTTP
  contents:
  - "HTTP\n   The HTTP protocol specifies that the path is handled transparently by\n\
    \   those who handle URLs, except for the servers which de-reference\n   them.\
    \  The path is passed by the client to the server with any\n   request, but is\
    \ not otherwise understood by the client.\n   The host details are not passed\
    \ on to the client when the URL is an\n   HTTP URL which refers to the server\
    \ in question.  In this case the\n   string sent starts with the slash which follows\
    \ the host details.\n   However, when an HTTP server is being used as a gateway\
    \ (or \"proxy\")\n   then the entire URI, whether HTTP or some other scheme, is\
    \ passed on\n   the HTTP command line.  The search part, if present, is sent as\
    \ part\n   of the HTTP command, and may in this respect be treated as part of\n\
    \   the path.  No fragmentid part of a WWW URI (the hash sign and\n   following)\
    \ is sent with the request.  Spaces and control characters\n   in URLs must be\
    \ escaped for transmission in HTTP, as must other\n   disallowed characters.\n\
    \   EXAMPLES\n      These examples are not part of the specification: they are\n\
    \      provided as illustations only.  The URI of the \"welcome\" page to a\n\
    \      server is conventionally\n         http://www.my.work.com/\n         As\
    \ the rest of the URL (after the hostname an port) is opaque\n         to the\
    \ client, it shows great variety but the following are all\n         fairly typical.\n"
- title: http://www.my.uni.edu/info/matriculation/enroling.html
  contents:
  - 'http://www.my.uni.edu/info/matriculation/enroling.html

    '
- title: http://info.my.org/AboutUs/Phonebook
  contents:
  - 'http://info.my.org/AboutUs/Phonebook

    '
- title: http://www.library.my.town.va.us/Catalogue/76523471236%2Fwen44--4.98
  contents:
  - 'http://www.library.my.town.va.us/Catalogue/76523471236%2Fwen44--4.98

    '
- title: http://www.my.org/462F4F2D4241522A314159265358979323846
  contents:
  - "http://www.my.org/462F4F2D4241522A314159265358979323846\n   A URL for a server\
    \ on a different port to 80 looks like\n        http://info.cern.ch:8000/imaginary/test\n\
    \   A reference to a particular part of a document may, including the\n   fragment\
    \ identifier, look like\n        http://www.myu.edu/org/admin/people#andy\n  \
    \ in which case the string \"#andy\" is not sent to the server, but is\n   retained\
    \ by the client and used when the whole object had been\n   retrieved.\n    A\
    \ search on a text database might look like\n        http://info.my.org/AboutUs/Index/Phonebook?dobbins\n\
    \   and on another database\n        http://info.cern.ch/RDB/EMP?*%20where%20name%%3Ddobbins\n\
    \   In all cases the client passes the path string to the server\n   uninterpreted,\
    \ and for the client to deduce anything from\n"
- title: FTP
  contents:
  - "FTP\n   The ftp: prefix indicates that the FTP protocol is used, as defined\n\
    \   in STD 9, RFC 959 or any successor.  The port number, if present,\n   gives\
    \ the port of the FTP server if not the FTP default.\n   User name and password\n\
    \      The syntax allows for the inclusion of a user name and even a\n      password\
    \ for those systems which do not use the anonymous FTP\n      convention. The\
    \ default, however, if no user or password is\n      supplied, will be to use\
    \ that convention, viz. that the user name\n      is \"anonymous\" and the password\
    \ the user's Internet-style mail\n      address.\n      Where possible, this mail\
    \ address should correspond to a usable\n      mail address for the user, and\
    \ preferably give a DNS host name\n      which resolves to the IP address of the\
    \ client.  Note that servers\n      currently vary in their treatment of the anonymous\
    \ password.\n   Path\n      The FTP protocol allows for a sequence of CWD commands\
    \ (change\n      working directory) and a TYPE command prior to service commands\n\
    \      such as RETR (retrieve) or NLIST (etc.) which actually access a\n     \
    \ file.\n      The arguments of any CWD commands are successive segment parts\
    \ of\n      the URL delimited by slash, and the final segment is suitable as\n\
    \      the filename argument to the RETR command for retrieval or the\n      directory\
    \ argument to NLIST.\n      For some file systems (Unix in particular), the \"\
    /\" used to denote\n      the hierarchical structure of the URL corresponds to\
    \ the delimiter\n      used to construct a file name hierarchy, and thus, the\
    \ filename\n      will look the same as the URL path.  This does NOT mean that\
    \ the\n      URL is a Unix filename.\n         Note: Retrieving subsequent URLs\
    \ from the same host\n      There is no common hierarchical model to the FTP protocol,\
    \ so if a\n      directory change command has been given, it is impossible in\n\
    \      general to deduce what sequence should be given to navigate to\n      another\
    \ directory for a second retrieval, if the paths are\n      different.  The only\
    \ reliable algorithm is to disconnect and\n      reestablish the control connection.\n\
    \   Data type\n      The data content type of a file can only, in the general\
    \ FTP case,\n      be deduced from the name, normally the suffix of the name.\
    \  This\n      is not standardized. An alternative is for it to be transferred\
    \ in\n      information outside the URL.  A suitable FTP transfer type (for\n\
    \      example binary \"I\" or text \"A\") must in turn be deduced from the\n\
    \      data content type.  It is recommended that conventions for\n      suffixes\
    \ of public archives be established, but it is outside the\n      scope of this\
    \ standard.\n      An FTP URL may optionally specify the FTP data transfer type\
    \ by\n      which an object is to be retrieved. Most of the methods correspond\n\
    \      to the FTP \"Data Types\" ASCII and IMAGE for the retrieval of a\n    \
    \  document, as specified in FTP by the TYPE command.  One method\n      indicates\
    \ directory access.\n      The data type is specified by a suffix to the URL.\
    \  Possible\n      suffixes are:\n       ;type = <type-code>     Use FTP type\
    \ as given to perform data\n                               transfer.\n       /\
    \                       Use FTP directory list commands to read\n            \
    \                   directory\n      The type code is in the format defined in\
    \ RFC 959 except that THE\n      SPACE IS OMITTED FROM THE URL.\n   Transfer Mode\n\
    \      Stream Mode is always used.\n"
- title: Gopher
  contents:
  - "Gopher\n   The gopher URL specifies the host and optionally the port to which\n\
    \   the client should connect. This is followed by a slash and a single\n   gopher\
    \ type code. This type code is used by the client to determine\n   how to interpret\
    \ the server's reply and is is not for sending to\n   server.  The command string\
    \ to be sent to the server immediately\n   follows the gopher type character.\
    \  It consists of the gopher\n   selector string followed by any \"Gopher plus\"\
    \ syntax, but always\n   omitting the trainling CR LF pair.\n   When the gopher\
    \ command string contains characters (such a embedded\n   CR LF and HT characters)\
    \ not allowed in a URL, these are encoded\n   using the conventional encoding.\n\
    \   Note that some gopher selector strings begin with a copy of the\n   gopher\
    \ type character, in which case that character will occur twice\n   consecutively.\
    \  Also note that the gopher selector string may be an\n   empty string since\
    \ this is how gopher clients refer to the top-level\n   directory on a gopher\
    \ server.\n   If the encoded command string (with trailing CR LF stripped) would\
    \ be\n   void then the gopher type character may be omiited and \"1\" (ASCII 31\n\
    \   hex) is assumed.\n   Note that slash \"/\" in gopher selector strings may\
    \ not correspond to\n   a level in a hierarchical structure.\n"
- title: Mailto
  contents:
  - "Mailto\n   This allows a URL to specify an RFC822 addr-spec mail address.  Note\n\
    \   that use of % , for example as used in forming a gatewayed mail\n   address,\
    \ requires conversion to %25 in a URL.\n"
- title: News
  contents:
  - "News\n   The news locators refer to either news group names or article message\n\
    \   identifiers which must conform to the rules for a Message-Id of RFC\n   1036\
    \ (Horton 1987).  A message identifier may be distinguished from a\n   news group\
    \ name by the presence of the commercial at \"@\" character.\n   These rules imply\
    \ that within an article, a reference to a news group\n   or to another article\
    \ will be a valid URL (in the partial form).\n   A news URL may be dereferenced\
    \ using NNTP (RFC 977, Kantor 1986)\n   (The ARTICLE by message-id command ) or\
    \ using any other protocol for\n   the conveyance of usenet news articles, or\
    \ by reference to a body of\n   news articles already received.\n   Note 1:\n\
    \      Among URLs the \"news\" URLs are anomalous in that they are\n      location-independent.\
    \ They are unsuitable as URN candidates\n      because the NNTP architecture relies\
    \ on the expiry of articles and\n      therefore a small number of articles being\
    \ available at any time.\n      When a news: URL is quoted, the assumption is\
    \ that the reader will\n      fetch the article or group from his or her local\
    \ news host.  News\n      host names are NOT part of news URLs.\n   Note 2:\n\
    \      An outstanding problem is that the message identifier is\n      insufficient\
    \ to allow the retrieval of an expired article, as no\n      algorithm exists\
    \ for deriving an archive site and file name.  The\n      addition of the date\
    \ and news group set to the article's URL would\n      allow this if a directory\
    \ existed of archive sites by news group.\n      Suggested subject of study in\
    \ conjunction with NNTP working group.\n      Further extension possible may be\
    \ to allow the naming of subject\n      threads as addressable objects.\n"
- title: Telnet, rlogin, tn3270
  contents:
  - "Telnet, rlogin, tn3270\n   The use of URLs to represent interactive sessions\
    \ is a convenient\n   extension to their uses for objects.  This allows access\
    \ to\n   information systems which only provide an interactive service, and no\n\
    \   information server.  As information within the service cannot be\n   addressed\
    \ individually or, in general, automatically retrieved, this\n   is a less desirable,\
    \ though currently common, solution.\n"
- title: URN
  contents:
  - "URN\n   The \"Universal Resource Name\" is currently (March 1993) under\n   development\
    \ in the IETF.  A requirements specification is in\n   preparation. It currently\
    \ looks as though it will be a short string\n   suitable for encoding in URI syntax,\
    \ for which case the \"urn:\" prefix\n   is reserved.  The URN shall be encoded\
    \ precisely as defined in the\n   (future) URN standard, except in that:\n   \
    \   If the official description of the URN syntax includes any\n      constant\
    \ wrapper characters, then they shall not be omitted from\n      the URI encoding\
    \ of the URN;\n      If the URN has a hierarchical nature, then the slash delimiter\n\
    \      shall be used in the URI encoding;\n      If the URN has a hierarchical\
    \ nature, the most significant part\n      shall be encoded on the left in the\
    \ URI encoding;\n      Any characters with reserved meanings in the URI syntax\
    \ shall be\n      escape encoded\n   These rules of course apply to any URI scheme.\
    \  It is of course\n   possible that the URN syntax will be chosen such that the\
    \ URI\n   encoding will be a 1-1 transcription.\n   An example might be a name\
    \ such as\n         urn:/iana/dns/ch/cern/cn/techdoc/94/1642-3\n   but the reader\
    \ should refer to the latest URN drafts or\n   specifications.\n"
- title: WAIS
  contents:
  - "WAIS\n   The current WAIS implementation public domain requires that a client\n\
    \   know the \"type\" of a object prior to retrieval. This value is\n   returned\
    \ along with the internal object identifier in the search\n   response. It has\
    \ been encoded into the path part of the URL in order\n   to make the URL sufficient\
    \ for the retrieval of the object.\n   Within the WAIS world, names do not of\
    \ course need to be prefixed by\n   \"wais:\" (by the partial form rules).\n \
    \  The wpath of a WAIS URL consists of encoded fields of the WAIS\n   identifier,\
    \ in the same order as inthe WAIS identifier. For each\n   field, the identifier\
    \ field number is the digits before the equals\n   sign, and the field contents\
    \ follow, encoded in the conventional\n   encoding, terminated by \";\".\n"
- title: file
  contents:
  - "file\n   The other URI schemes (except nntp) share the property that they are\n\
    \   equally valid at any geographical place.\n   There is however a real practical\
    \ requirement to be able to generate\n   a URL for an object in a machine's local\
    \ file system.\n   The syntax is similar to the ftp syntax, but in this case the\
    \ slash\n   is used to donate boundaries between directory levels of a\n   hierarchical\
    \ file system is used.  The \"client\" software converts the\n   file URL into\
    \ a file name in the local file name conventions.  This\n   allows local files\
    \ to be treated just as network objects without any\n   necessity to use a network\
    \ server for access.  This may be used for\n   example for defining a user's \"\
    home\" document in WWW.\n   There is clearly a danger of confusion that a link\
    \ made to a local\n   file should be followed by someone on a different system,\
    \ with\n   unexpected and possibly harmful results.  Therefore, the convention\n\
    \   is that even a \"file\" URL is provided with a host part.  This allows\n \
    \  a client on another system to know that it cannot access the file\n   system,\
    \ or perhaps to use some other local mecahnism to access the\n   file.\n   The\
    \ special value \"localhost\" is used in the host field to indicate\n   that the\
    \ filename should really be used on whatever host one is.\n   This for example\
    \ allows links to be made to files which are\n   distribted on many machines,\
    \ or to \"your unix local password file\"\n   subject of course to consistency\
    \ across the users of the data.\n   A void host field is equivalent to \"localhost\"\
    .\n"
- title: Message-Id
  contents:
  - "Message-Id\n   For systems which include information transferred using mail\n\
    \   protocols, there is a need to be able to make cross-references\n   between\
    \ different items of information, even though, by the nature of\n   mail, those\
    \ items are only available to a restricted set of people.\n   Two schemes are\
    \ defined.  The first, \"mid:\", refers to the STD 11,\n   RFC 822 Message-Id\
    \ of a mail message.  This Identifier is already\n   used in RFC 822 in for example\
    \ the References and In-Reply-to field.\n   The rest of the URL after the \"mid:\"\
    \ is the RFC822 msg-id with the\n   constant <> wrapper removed, leaving an identifier\
    \ whose format in\n   fact happens to be the same as addr-spec format for mailboxes\
    \ (though\n   the semantics are different).\n   The use of a \"mid\" URL implies\
    \ access to a body of mail already\n   received. If a message has been distributed\
    \ using NNTP or other\n   usenet protocols over the news system, then the \"news:\"\
    \ form should\n   be used.\n"
- title: Content-Id
  contents:
  - "Content-Id\n   The second scheme, \"cid:\", is similar to \"mid:\", but makes\
    \ reference\n   to a body part of a MIME message by the value of its content-id\n\
    \   field.  This allows, for example, a master document being the first\n   part\
    \ of a multipart/related MIME message to refer to component parts\n   which are\
    \ transferred in the same message.\n   Note\n      Beware however, that content\
    \ identifiers are only required to be\n      unique within the context of a given\
    \ MIME message, and so the cid:\n      URL is only meaningful with the context\
    \ the same MIME message. For\n      a reference outside the message, it would\
    \ need to be appended to\n      the message-id of the whole message.  A syntax\
    \ for this has not\n      been defined.\n"
- title: Schemes for Further Study
  contents:
  - "Schemes for Further Study\n   X500\n      The mapping of x500 names onto URLs\
    \ is not defined here.  A\n      decision is required as to whether \"distinguished\
    \ names\" or \"user\n      friendly names\" (ufn), or both, should be allowed.\
    \  If any\n      punctuation conversions are needed from the adopted x500\n  \
    \    representation (such as the use of slashes between parts of a ufn)\n    \
    \  they must be defined.  This is a subject for study.\n   WHOIS\n      This prefix\
    \ describes the access using the \"whois++\" scheme in the\n      process of definition.\
    \  The host name part is the same as for\n      other IP based schemes.  The path\
    \ part can be either a whois\n      handle for a whois object, or it can be a\
    \ valid whois query\n      string. This is a subject for further study.\n   NETWORK\
    \ MANAGEMENT DATABASE\n      This is a subject for study.\n   NNTP\n      This\
    \ is an alternative form of reference for news articles,\n      specifically to\
    \ be used with NNTP servers, and particularly those\n      incomplete server implementations\
    \ which do not allow retrieval by\n      message identifier.  In all other cases\
    \ the \"news\" scheme should\n      be used.\n      The news server name, newsgroup\
    \ name, and index number of an\n      article within the newsgroup on that particular\
    \ server are given.\n      The NNTP protocol must be used.\n      Note 1.\n  \
    \       This form of URL is not of global accessability, as typically\n      \
    \   NNTP servers only allow access from local clients.   Note that\n         the\
    \ article numbers within groups vary from server to server.\n         This form\
    \ or URL should not be quoted outside this local area.\n         It should not\
    \ be used within news articles for wider\n         circulation than the one server.\
    \  This is a local identifier\n         for a resource which is often available\
    \ globally, and so is not\n         recommended except in the case in which incomplete\
    \ NNTP\n         implementations on the local server force its adoption.\n"
- title: Prospero
  contents:
  - "Prospero\n   The Prospero (Neuman, 1991) directory service is used to resolve\
    \ the\n   URL yielding an access method for the object (which can then itself\n\
    \   be represented as a URL if translated).  The host part contains a\n   host\
    \ name or internet address.  The port part is optional.\n   The path part contains\
    \ a host specific object name and an optional\n   version number. If present,\
    \ the version number is separated from the\n   host specific object name by the\
    \ characters \"%00\" (percent zero\n   zero), this being an escaped string terminator\
    \ (null).  External\n   Prospero links are represented as URLs of the underlying\
    \ access\n   method and are not represented as Prospero URLs.\n"
- title: Registration of naming schemes
  contents:
  - "Registration of naming schemes\n   A new naming scheme may be introduced by defining\
    \ a mapping onto a\n   conforming URL syntax, using a new prefix.  Experimental\
    \ prefixes may\n   be used by mutual agreement between parties, and must start\
    \ with the\n   characters \"x-\".  The scheme name \"urn:\" is reserved for the\
    \ work in\n   progress on a scheme for more persistent names.\n   It is proposed\
    \ that the Internet Assigned Numbers Authority (IANA)\n   perform the function\
    \ of registration of new schemes. Any submission\n   of a new URI scheme must\
    \ include a definition of an algorithm for the\n   retrieval of any object within\
    \ that scheme. The algorithm must take\n   the URI and produce either a set of\
    \ URL(s) which will lead to the\n   desired object, or the object itself, in a\
    \ well-defined or\n   determinable format.\n   It is recommended that those proposing\
    \ a new scheme demonstrate its\n   utility and operability by the provision of\
    \ a gateway which will\n   provide images of objects in the new scheme for clients\
    \ using an\n   existing protocol. If the new scheme is not a locator scheme, then\n\
    \   the properties of names in the new space should be clearly defined.\n   It\
    \ is likewise recommended that, where a protocol allows for\n   retrieval by URL,\
    \ that the client software have provision for being\n   configured to use specific\
    \ gateway locators for indirect access\n   through new naming schemes.\n"
- title: BNF of Generic URI Syntax
  contents:
  - "BNF of Generic URI Syntax\n   This is a BNF-like description of the URI syntax.\
    \ at the level at\n   which specific schemes are not considered.\n   A vertical\
    \ line \"|\" indicates alternatives, and [brackets] indicate\n   optional parts.\
    \  Spaces are represented by the word \"space\", and the\n   vertical line character\
    \ by \"vline\".  Single letters stand for single\n   letters.  All words of more\
    \ than one letter below are entities\n   described somewhere in this description.\n\
    \   The \"generic\" production gives a higher level parsing of the same\n   URIs\
    \ as the other productions.  The \"national\" and \"punctuation\"\n   characters\
    \ do not appear in any productions and therefore may not\n   appear in URIs.\n\
    \     fragmentaddress        uri [ # fragmentid ]\n     uri                  \
    \  scheme :  path [ ? search ]\n     scheme                 ialpha\n     path\
    \                   void |  xpalphas  [  / path ]\n     search               \
    \  xalphas [ + search ]\n     fragmentid             xalphas\n     xalpha    \
    \             alpha | digit | safe | extra | escape\n     xalphas            \
    \    xalpha [ xalphas ]\n     xpalpha                xalpha | +\n     xpalphas\
    \               xpalpha [ xpalpha ]\n     ialpha                 alpha [ xalphas\
    \ ]\n     alpha                  a | b | c | d | e | f | g | h | i | j | k |\n\
    \                            l | m | n | o  | p | q | r | s | t | u | v |\n  \
    \                          w | x | y | z | A | B | C  | D | E | F | G |\n    \
    \                        H | I | J | K | L | M | N | O | P |  Q | R |\n      \
    \                      S | T | U | V | W | X | Y | Z\n     digit             \
    \     0 |1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n     safe                   $ | -\
    \ | _ | @ | . | &\n     extra                  ! | * | \" |  ' | ( | ) | ,\n \
    \    reserved               = | ; | / | # | ? | : | space\n     escape       \
    \          % hex hex\n     hex                    digit | a | b | c | d | e |\
    \ f | A | B | C |\n                            D | E | F\n     national      \
    \         { | } | vline | [ | ] | \\ | ^ | ~\n     punctuation            < |\
    \ >\n     void\n      (end of URI BNF)\n"
- title: BNF for specific URL schemes
  contents:
  - "BNF for specific URL schemes\n   This is a BNF-like description of the Uniform\
    \ Resource Locator\n   syntax.  A vertical line \"|\" indicates alternatives,\
    \ and [brackets]\n   indicate optional parts.  Spaces are represented by the word\
    \ \"space\",\n   and the vertical line character by \"vline\".  Single letters\
    \ stand for\n   single letters.  All words of more than one letter below are entities\n\
    \   described somewhere in this description.\n   The current IETF URI Working\
    \ Group preference is for the prefixedurl\n   production. (Nov 1993. July 93:\
    \ url).\n   The \"national\" and \"punctuation\" characters do not appear in any\n\
    \   productions and therefore may not appear in URLs.\n   The \"afsaddress\" is\
    \ left in as historical note, but is not a url\n   production.\n  prefixedurl\
    \            u r l : url\n  url                    httpaddress | ftpaddress |\
    \ newsaddress |\n                         nntpaddress | prosperoaddress | telnetaddress\n\
    \                         | gopheraddress | waisaddress |\n                  \
    \       mailtoaddress  | midaddress | cidaddress\n  scheme                 ialpha\n\
    \  httpaddress            h t t p :   / / hostport [  / path ] [ ?\n         \
    \                search ]\n  ftpaddress             f t p : / / login / path [\
    \  ftptype ]\n  afsaddress             a f s : / / cellname / path\n  newsaddress\
    \            n e w s : groupart\n  nntpaddress            n n t p : group /  digits\n\
    \  midaddress             m i d  :  addr-spec\n  cidaddress             c i d\
    \ : content-identifier\n  mailtoaddress          m a i l t o : xalphas @ hostname\n\
    \  waisaddress            waisindex | waisdoc\n  waisindex              w a i\
    \ s : / / hostport / database [ ? search\n                         ]\n  waisdoc\
    \                w a i s : / / hostport / database / wtype  /\n              \
    \           wpath\n  wpath                  digits = path ;  [ wpath ]\n  groupart\
    \               * | group | article\n  group                  ialpha [ . group\
    \ ]\n  article                xalphas @ host\n  database               xalphas\n\
    \  wtype                  xalphas\n  prosperoaddress        prosperolink\n  prosperolink\
    \           p r o s p e r o : / / hostport / hsoname [ %\n                   \
    \      0 0 version [ attributes ] ]\n  hsoname                path\n  version\
    \                digits\n  attributes             attribute [ attributes ]\n \
    \ attribute              alphanums\n  telnetaddress          t e l n e t : / /\
    \ login\n  gopheraddress          g o p h e r : / / hostport [/ gtype  [\n   \
    \                      gcommand ] ]\n  login                  [ user [ : password\
    \ ] @ ] hostport\n  hostport               host [ : port ]\n  host           \
    \        hostname | hostnumber\n  ftptype                A formcode | E formcode\
    \ | I | L digits\n  formcode               N | T | C\n  cellname             \
    \  hostname\n  hostname               ialpha [  .  hostname ]\n  hostnumber  \
    \           digits . digits . digits . digits\n  port                   digits\n\
    \  gcommand               path\n  path                   void |  segment  [  /\
    \ path ]\n  segment                xpalphas\n  search                 xalphas\
    \ [ + search ]\n  user                   alphanum2 [ user ]\n  password      \
    \         alphanum2 [ password ]\n  fragmentid             xalphas\n  gtype  \
    \                xalpha\n  alphanum2              alpha | digit | - | _ | . |\
    \ +\n  xalpha                 alpha | digit | safe | extra | escape\n  xalphas\
    \                xalpha [ xalphas ]\n  xpalpha                xalpha | +\n  xpalphas\
    \               xpalpha [ xpalphas ]\n  ialpha                 alpha [ xalphas\
    \ ]\n  alpha                  a | b | c | d | e | f | g | h | i | j | k |\n  \
    \                       l | m | n | o  | p | q | r | s | t | u | v |\n       \
    \                  w | x | y | z | A | B | C  | D | E | F | G |\n            \
    \             H | I | J | K | L | M | N | O | P |  Q | R |\n                 \
    \        S | T | U | V | W | X | Y | Z\n  digit                  0 |1 | 2 | 3\
    \ | 4 | 5 | 6 | 7 | 8 | 9\n  safe                   $ | - | _ | @ | . | &  | +\
    \ | -\n  extra                  ! | * |  \" |  ' | ( | )  | ,\n  reserved    \
    \           =  |  ;  |  /  |  #  | ? |  : | space\n  escape                 %\
    \ hex hex\n  hex                    digit | a | b | c | d | e | f | A | B | C\
    \ |\n                         D | E | F\n  national               { | } | vline\
    \ | [ | ] | \\ | ^ | ~\n  punctuation            < | >\n  digits             \
    \    digit [ digits ]\n  alphanum               alpha | digit\n  alphanums   \
    \           alphanum [ alphanums ]\n  void\n   (end of URL BNF)\n"
- title: References
  contents:
  - "References\n  Alberti, R., et.al., \"Notes on the Internet Gopher Protocol\"\
    ,\n     University of Minnesota, December 1991,\n     <ftp://boombox.micro.umn.edu/pub/gopher/\
    \ gopher_protocol>. See also\n     <gopher://gopher.micro.umn.edu/00/Information\
    \ About Gopher/About\n     Gopher>\n  Berners-Lee, T., \"Hypertext Transfer Protocol\
    \ (HTTP)\", CERN, December\n     1991, as updated from time to time,\n     <ftp://info.cern.ch/pub/www/doc/http-spec.txt>\n\
    \  Crocker, D., \"Standard for ARPA Internet Text Messages\" STD 11, RFC\n   \
    \  822, UDel, August 1982.\n  Davis, F, et  al., \"WAIS Interface Protocol: Prototype\
    \ Functional\n     Specification\", Thinking Machines Corporation, April 23, 1990.\n\
    \     <ftp://quake.think.com/pub/wa is/doc/protspec.txt>\n  International Standards\
    \ Organization, Information and Documentation -\n     Search and Retrieve Application\
    \ Protocol Specification for open\n     Systems Interconnection, ISO-10163.\n\
    \  Horton, M., and R. Adams, \"Standard for Interchange of USENET\n     messages\"\
    , RFC 1036, AT&T Bell Laboratories, Center for Seismic\n     Studies, December\
    \ 1987.\n  Huitema, C., \"Naming: strategies and techniques\", Computer Networks\n\
    \     and ISDN Systems 23 (1991) 107-110.\n  Kahle, B., \"Document Identifiers,\
    \ or International Standard Book\n     Numbers for the Electronic Age\", <ftp:\n\
    \     //quake.think.com/pub/wais/doc/doc-ids.txt>\n  Kantor, B., and P. Lapsley,\
    \ Kantor, B., and P. Lapsley, \"Network News\n     Transfer Protocol\", RFC 977,\
    \ UC San Diego & UC Berkeley, February\n     1986.  <ftp://ds.internic.net/rfc/rfc977.txt>\n\
    \  Kunze, J., \"Requirements for URLs\", Work in Progress.\n  Lynch, C., Coalition\
    \ for Networked Information: \"Workshop on ID and\n     Reference Structures for\
    \ Networked Information\", November 1991. See\n     <wais://quake.think.com/wais-discussion-archives?lynch>\n\
    \  Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD 13, RFC\n\
    \     1034, USC/Information Sciences Institute, November 1987,\n     <ftp://ds.internic.net/rfc/rfc1034.txt>\n\
    \  Neuman, B. Clifford, \"Prospero: A Tool for Organizing Internet\n     Resources\"\
    , Electronic Networking: Research, Applications and\n     Policy, Vol 1 No 2,\
    \ Meckler Westport CT USA, 1992.  See also\n     <ftp://prospero.isi.edu/pub/prospero/oir.ps>\n\
    \  Postel, J., and J. Reynolds, \"File Transfer Protocol (FTP)\", STD 9,\n   \
    \  RFC 959, USC/Information Sciences Institute, October 1985.\n     <ftp://ds.internic.net/rfc/rfc959.txt>\n\
    \  Sollins, K., and L. Masinter, \"Requiremnets for URNs\", Work in\n     Progress.\n\
    \  Yeong, W., \"Towards Networked Information Retrieval\", Technical report\n\
    \     91-06-25-01, June 1991, Performance Systems International, Inc.\n     <ftp://uu.psi.com/wp/nir.txt>\n\
    \  Yeong, W., \"Representing Public Archives in the Directory\", Work in\n   \
    \  Progress, November 1991, now expired.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Tim Berners-Lee\n   World-Wide Web project\n   CERN\n  \
    \ 1211 Geneva 23,\n   Switzerland\n   Phone: +41 (22)767 3755\n   Fax:   +41 (22)767\
    \ 7155\n   EMail: timbl@info.cern.ch\n"
