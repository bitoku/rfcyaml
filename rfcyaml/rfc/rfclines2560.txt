This document specifies a protocol useful in determining the current status of a digital certificate without requiring CRLs.
Additional mechanisms addressing PKIX operational requirements are specified in separate documents.
An overview of the protocol is provided in section 2.
Functional requirements are specified in section 4.
Details of the protocol are in section 5.
We cover security issues with the protocol in section 6.
Appendix A defines OCSP over HTTP, appendix B accumulates ASN.1
syntactic elements and appendix C specifies the mime types for the messages.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document (in uppercase, as shown) are to be interpreted as described in [RFC2119].
In lieu of or as a supplement to checking against a periodic CRL, it may be necessary to obtain timely information regarding the revocation status of a certificate (cf.
Examples include high value funds transfer or large stock trades.
The Online Certificate Status Protocol (OCSP) enables applications to determine the (revocation) state of an identified certificate.
OCSP may be used to satisfy some of the operational requirements of providing more timely revocation information than is possible with CRLs and may also be used to obtain additional status information.
An OCSP client issues a status request to an OCSP responder and suspends acceptance of the certificate in question until the responder provides a response.
This protocol specifies the data that needs to be exchanged between an application checking the status of a certificate and the server providing that status.
An OCSP request contains the following data:   protocol version
service request   target certificate identifier   optional extensions which MAY be processed by the OCSP Responder Upon receipt of a request, an OCSP Responder determines if: 1.
the message is well formed 2.
the responder is configured to provide the requested service and 3.
the request contains the information needed by the responder
If any one of the prior conditions are not met, the OCSP responder produces an error message; otherwise, it returns a definitive response.
2.2  Response OCSP responses can be of various types.
An OCSP response consists of a response type and the bytes of the actual response.
There is one basic type of OCSP response that MUST be supported by all OCSP servers and clients.
The rest of this section pertains only to this basic response type.
All definitive response messages SHALL be digitally signed.
The key used to sign the response MUST belong to one of the following:
the CA who issued the certificate in question   a Trusted Responder whose public key is trusted by the requester   a CA Designated Responder (Authorized Responder) who holds a specially marked certificate issued directly by the CA, indicating that the responder may issue OCSP responses for that CA A definitive response message is composed of:   version of the response syntax   name of the responder   responses for each of the certificates in a request
signature computed across hash of the response
The response for each of the certificates in a request consists of   target certificate identifier   certificate status value
This specification defines the following definitive response indicators for use in the certificate status value:
unknown The "good" state indicates a positive response to the status inquiry.
At a minimum, this positive response indicates that the certificate is not revoked, but does not necessarily mean that the certificate was ever issued or that the time at which the response was produced is within the certificate's validity interval.
Response extensions may be used to convey additional information on assertions made by the responder regarding the status of the certificate such as positive statement about issuance, validity, etc.
The "revoked" state indicates that the certificate has been revoked (either permanantly or temporarily (on hold)).
The "unknown" state indicates that the responder doesn't know about the certificate being requested.
In case of errors, the OCSP Responder may return an error message.
These messages are not signed.
Errors can be of the following types:   malformedRequest
A server produces the "malformedRequest" response if the request received does not conform to the OCSP syntax.
The response "internalError" indicates that the OCSP responder reached an inconsistent internal state.
The query should be retried, potentially with another responder.
In the event that the OCSP responder is operational, but unable to return a status for the requested certificate, the "tryLater" response can be used to indicate that the service exists, but is temporarily unable to respond.
The response "sigRequired" is returned in cases where the server requires the client sign the request in order to construct a response.
The response "unauthorized" is returned in cases where the client is not authorized to make this query to this server.
2.4  Semantics of thisUpdate, nextUpdate and producedAt Responses can contain three times in them thisUpdate, nextUpdate and producedAt.
The semantics of these fields are: thisUpdate:
The time at which the status being indicated is known to be correct nextUpdate: The time at or before which newer information will be available about the status of the certificate producedAt: The time at which the OCSP responder signed this response.
If nextUpdate is not set, the responder is indicating that newer revocation information is available all the time.
Response Pre production OCSP responders MAY pre produce signed responses specifying the status of certificates at a specified time.
The time at which the status was known to be correct SHALL be reflected in the thisUpdate field of the response.
The time at or before which newer information will be available is reflected in the nextUpdate field, while the time at which the response was produced will appear in the producedAt field of the response.
2.6  OCSP Signature Authority Delegation
The key that signs a certificate's status information need not be the same key that signed the certificate.
A certificate's issuer explicitly delegates OCSP signing authority by issuing a certificate containing a unique value for extendedKeyUsage in the OCSP signer's certificate.
This certificate MUST be issued directly to the responder by the cognizant CA.
If an OCSP responder knows that a particular CA's private key has been compromised, it MAY return the revoked state for all certificates issued by that CA.
Functional Requirements 3.1  Certificate Content
In order to convey to OCSP clients a well known point of information access, CAs SHALL provide the capability to include the AuthorityInfoAccess extension (defined in [RFC2459], section 4.2.2.1) in certificates that can be checked using OCSP.
Alternatively, the accessLocation for the OCSP provider may be configured locally at the OCSP client.
CAs that support an OCSP service, either hosted locally or provided by an Authorized Responder, MUST provide for the inclusion of a value for a uniformResourceIndicator (URI) accessLocation and the OID value id ad ocsp for the accessMethod in the AccessDescription SEQUENCE.
The value of the accessLocation field in the subject certificate defines the transport (e.g. HTTP) used to access the OCSP responder and may contain other transport dependent information (e.g. a URL).
3.2  Signed Response Acceptance Requirements
Prior to accepting a signed response as valid, OCSP clients SHALL confirm that: 1.
The certificate identified in a received response corresponds to that which was identified in the corresponding request; 2.
The signature on the response is valid; 3.
The identity of the signer matches the intended recipient of the request.
The signer is currently authorized to sign the response.
The time at which the status being indicated is known to be correct (thisUpdate) is sufficiently recent.
When available, the time at or before which newer information will be available about the status of the certificate (nextUpdate) is greater than the current time.
The ASN.1 syntax imports terms defined in [RFC2459].
For signature calculation, the data to be signed is encoded using the ASN.1 distinguished encoding rules (DER) [X.690].
ASN.1 EXPLICIT tagging is used as a default unless specified otherwise.
The terms imported from elsewhere are: Extensions, CertificateSerialNumber, SubjectPublicKeyInfo, Name, AlgorithmIdentifier, CRLReason 4.1  Requests
This section specifies the ASN.1 specification for a confirmation request.
The actual formatting of the message could vary depending on the transport mechanism used (HTTP, SMTP, LDAP, etc.).
[0] EXPLICIT SEQUENCE OF Certificate OPTIONAL}
OCTET STRING,   Hash of Issuer's DN
The hash shall be calculated over the DER encoding of the issuer's name field in the certificate being checked.
issuerKeyHash is the hash of the Issuer's public key.
The hash shall be calculated over the value (excluding tag and length) of the subject public key field in the issuer's certificate.
The hash algorithm used for both these hashes, is identified in hashAlgorithm.
serialNumber is the serial number of the certificate for which status is being requested.
4.1.2  Notes on the Request Syntax
The primary reason to use the hash of the CA's public key in addition to the hash of the CA's name, to identify the issuer, is that it is possible that two CAs may choose to use the same Name
(uniqueness in the Name is a recommendation that cannot be enforced).
Two CAs will never, however, have the same public key unless the CAs either explicitly decided to share their private key, or the key of one of the CAs was compromised.
Support for any specific extension is OPTIONAL.
The critical flag SHOULD NOT be set for any of them.
Section 4.4 suggests several useful extensions.
Additional extensions MAY be defined in additional RFCs.
Unrecognized extensions MUST be ignored (unless they have the critical flag set and are not understood).
The requestor MAY choose to sign the OCSP request.
In that case, the signature is computed over the tbsRequest structure.
If the request is signed, the requestor SHALL specify its name in the requestorName field.
Also, for signed requests, the requestor MAY include certificates that help the OCSP responder verify the requestor's signature in the certs field of Signature.
This section specifies the ASN.1 specification for a confirmation response.
The actual formatting of the message could vary depending on the transport mechanism used (HTTP, SMTP, LDAP, etc.).
4.2.1  ASN.1 Specification of the OCSP Response
An OCSP response at a minimum consists of a responseStatus field indicating the processing status of the prior request.
If the value of responseStatus is one of the error conditions, responseBytes are not set.
OCSP responders SHALL be capable of producing responses of the id  pkix ocsp basic response type.
Correspondingly, OCSP clients SHALL be capable of receiving and processing responses of the id pkix ocsp  basic response type.
The value for response SHALL be the DER encoding of BasicOCSPResponse.
EXPLICIT SEQUENCE OF Certificate OPTIONAL }
The value for signature SHALL be computed on the hash of the DER encoding ResponseData.
[1] EXPLICIT Extensions OPTIONAL } ResponderID ::
this can be replaced with an enumeration 4.2.2
The thisUpdate and nextUpdate fields define a recommended validity interval.
This interval corresponds to the {thisUpdate, nextUpdate} interval in CRLs.
Responses whose nextUpdate value is earlier than the local system time value SHOULD be considered unreliable.
Responses whose thisUpdate time is later than the local system time SHOULD be considered unreliable.
Responses where the nextUpdate value is not set are equivalent to a CRL with no time for nextUpdate (see Section 2.4).
The producedAt time is the time at which this response was signed.
The key that signs a certificate's status information need not be the same key that signed the certificate.
It is necessary however to ensure that the entity signing this information is authorized to do so.
Therefore, a certificate's issuer MUST either sign the OCSP responses itself or it MUST explicitly designate this authority to another entity.
OCSP signing delegation SHALL be designated by the inclusion of id kp OCSPSigning in an extendedKeyUsage certificate extension included in the OCSP response signer's certificate.
This certificate MUST be issued directly by the CA that issued the certificate in question.
They MAY provide a means of locally configuring one or more OCSP signing authorities, and specifying the set of CAs for which each signing authority is trusted.
They MUST reject the response if the certificate required to validate the signature on the response fails to meet at least one of the following criteria: 1.
Matches a local configuration of OCSP signing authority for the certificate in question; or 2.
Is the certificate of the CA that issued the certificate in question; or 3.
Includes a value of i
d ad ocspSigning in an ExtendedKeyUsage extension and is issued by the CA that issued the certificate in question.
" Additional acceptance or rejection criteria may apply to either the response itself or to the certificate used to validate the signature on the response.
4.2.2.2.1  Revocation Checking of an Authorized Responder
Since an Authorized OCSP responder provides status information for one or more CAs, OCSP clients need to know how to check that an authorized responder's certificate has not been revoked.
CAs may choose to deal with this problem in one of three ways: A CA may specify that an OCSP client can trust a responder for the lifetime of the responder's certificate.
The CA does so by including the extension id pkix ocsp nocheck.
This SHOULD be a non critical extension.
The value of the extension should be NULL.
CAs issuing such a certificate should realized that a compromise of the responder's key, is as serious as the compromise of a CA key used to sign CRLs, at least for the validity period of this certificate.
CA's may choose to issue this type of certificate with a very short lifetime and renew it frequently.
pkix ocsp nocheck OBJECT IDENTIFIER ::
{ id pkix ocsp 5
} A CA may specify how the responder's certificate be checked for revocation.
This can be done using CRL Distribution Points if the check should be done using CRLs or CRL Distribution Points, or Authority Information Access if the check should be done in some other way.
Details for specifying either of these two mechanisms are available in [RFC2459].
A CA may choose not to specify any method of revocation checking for the responder's certificate, in which case, it would be up to the OCSP client's local security policy to decide whether that certificate should be checked for revocation or not.
Mandatory and Optional Cryptographic Algorithms Clients that request OCSP services SHALL be capable of processing responses signed
used DSA keys identified by the DSA sig alg oid specified in section 7.2.2 of [RFC2459].
Clients SHOULD also be capable of processing RSA signatures as specified in section 7.2.1 of [RFC2459].
OCSP responders SHALL support the SHA1 hashing algorithm.
This section defines some standard extensions, based on the extension model employed in X.509 version 3 certificates see [RFC2459].
Support for all extensions is optional for both clients and responders.
For each extension, the definition indicates its syntax, processing performed by the OCSP Responder, and any extensions which are included in the corresponding response.
The nonce cryptographically binds a request and a response to prevent replay attacks.
The nonce is included as one of the requestExtensions in requests, while in responses it would be included as one of the responseExtensions.
In both the request and the response, the nonce will be identified by
the object identifier id pkix ocsp nonce, while the extnValue is the value of the nonce.
{ id pkix ocsp 2 } 4.4.3
An OCSP client MAY wish to specify the kinds of response types it understands.
To do so, it SHOULD use an extension with the OID id  pkix ocsp response, and the value AcceptableResponses.
This extension is included as one of the requestExtensions in requests.
The OIDs included in AcceptableResponses are the OIDs of the various response types this client can accept (
e.g., id pkix ocsp basic).
As noted in section 4.2.1, OCSP responders SHALL be capable of responding with responses of the id pkix ocsp basic response type.
Correspondingly, OCSP clients SHALL be capable of receiving and processing responses of the id pkix ocsp basic response type.
An OCSP responder MAY choose to retain revocation information beyond a certificate's expiration.
The date obtained by subtracting this retention interval value from the producedAt time in a response is defined as the certificate's "archive cutoff" date.
OCSP enabled applications would use an OCSP archive cutoff date to contribute to a proof that a digital signature was (or was not) reliable on the date it was produced even if the certificate needed to validate the signature has long since expired.
OCSP servers that provide support for such historical reference SHOULD include an archive cutoff date extension in responses.
If included, this value SHALL be provided as an OCSP singleExtensions extension identified by id pkix ocsp archive cutoff and of syntax GeneralizedTime.
id pkix ocsp archive cutoff
, if a server is operated with a 7 year retention interval policy and status was produced at time t1 then the value for ArchiveCutoff in the response would be (t1 7 years).
All the extensions specified as CRL Entry Extensions in Section 5.3 of [RFC2459] are also supported as singleExtensions.
An OCSP server may be operated in a mode whereby the server receives a request and routes it to the OCSP server which is known to be authoritative for the identified certificate.
The serviceLocator request extension is defined for this purpose.
This extension is included as one of the singleRequestExtensions in requests.
pkix ocsp service locator OBJECT IDENTIFIER ::
AuthorityInfoAccessSyntax OPTIONAL } Values for these fields are obtained from the corresponding fields in the subject certificate.
Security Considerations For this service to be effective, certificate using systems must connect to the certificate status service provider.
In the event such a connection cannot be obtained, certificate using systems could implement CRL processing logic as a fall back position.
A denial of service vulnerability is evident with respect to a flood of queries.
The production of a cryptographic signature significantly affects response generation cycle time, thereby exacerbating the situation.
Unsigned error responses open up the protocol to another denial of service attack, where the attacker sends false error responses.
The use of precomputed responses allows replay attacks in which an old (good) response is replayed prior to its expiration date but after the certificate has been revoked.
Deployments of OCSP should carefully evaluate the benefit of precomputed responses against the probability of a replay attack and the costs associated with its successful execution.
Requests do not contain the responder they are directed to.
This allows an attacker to replay a request to any number of OCSP responders.
The reliance of HTTP caching in some deployment scenarios may result in unexpected results if intermediate servers are incorrectly configured or are known to possess cache management faults.
Implementors are advised to take the reliability of HTTP cache mechanisms into account when deploying OCSP over HTTP.
Appendix A. A.1 OCSP over HTTP This section describes the formatting that will be done to the request and response to support HTTP.
Request HTTP based OCSP requests can use either the GET or the POST method to submit their requests.
To enable HTTP caching, small requests (that after encoding are less than 255 bytes), MAY be submitted using GET.
If HTTP caching is not important, or the request is greater than 255 bytes, the request SHOULD be submitted using POST.
Where privacy is a requirement, OCSP transactions exchanged using HTTP MAY be protected using either TLS/SSL or some other lower layer protocol.
An OCSP request using the GET method is constructed as follows: GET {url}/{url encoding of base 64 encoding of the DER encoding of the OCSPRequest} where {url} may be derived from the value of AuthorityInfoAccess or other local configuration of the OCSP client.
An OCSP request using the POST method is constructed as follows:
The Content Type header has the value "application/ocsp request" while the body of the message is the binary value of the DER encoding of the OCSPRequest.
An HTTP based OCSP response is composed of the appropriate HTTP headers, followed by the binary value of the DER encoding of the OCSPResponse.
The Content Type header has the value "application/ocsp response".
The Content Length header SHOULD specify the length of the response.
Other HTTP headers MAY be present and MAY be ignored if not understood by the requestor.
Appendix B.  OCSP in ASN.1
Directory Authentication Framework (X.509) Certificate, AlgorithmIdentifier, CRLReason FROM AuthenticationFramework { joint iso itu t ds(5)
} Name, GeneralName, CertificateSerialNumber, Extensions
, id kp, id ad ocsp FROM PKIX1Explicit88 {iso(1) identified organization(3) dod(6)
Extensions OPTIONAL } CertID ::
Hash of Issuer's DN issuerKeyHash
[1] EXPLICIT Extensions OPTIONAL } ResponderID ::
hash of responder's public key  (excluding the tag and length fields)
this can be replaced with an enumeration ArchiveCutoff ::
SEQUENCE { issuer    Name, locator
{ id pkix ocsp 2 }
{ id pkix ocsp 3 }
{ id pkix ocsp 4 }
{ id pkix ocsp 5 }
id pkix ocsp archive cutoff
{ id pkix ocsp 6 }
id pkix ocsp service locator OBJECT IDENTIFIER ::
{ id pkix ocsp 7 } END Appendix C. MIME registrations C.1 application
Subject: Registration of MIME media type application/ocsp request MIME media type name: application MIME subtype name:
None Encoding considerations: binary Security considerations: Carries a  request for information.
This request may optionally be cryptographically signed.
None Published specification: IETF PKIX Working Group Draft on Online Certificate Status Protocol OCSP Applications which use this media type:
OCSP clients Additional information: Magic number(s)
: none Person & email address to contact for further information:
C.2 application/ocsp response To: ietf
Subject: Registration of MIME media type application/ocsp response MIME media type name: application MIME subtype name:
None Encoding considerations: binary Security considerations: Carries a cryptographically signed response Interoperability considerations:
None Published specification: IETF PKIX Working Group Draft on Online Certificate Status Protocol OCSP Applications which use this media type:
OCSP servers Additional information: Magic number(s):
: none Person & email address to contact for further information:
