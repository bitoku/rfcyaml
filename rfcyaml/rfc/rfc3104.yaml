- title: __initial_text__
  contents:
  - '                   RSIP Support for End-to-end IPsec

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The IESG notes that the set of documents describing the RSIP\n\
    \   technology imply significant host and gateway changes for a complete\n   implementation.\
    \  In addition, the floating of port numbers can cause\n   problems for some applications,\
    \ preventing an RSIP-enabled host from\n   interoperating transparently with existing\
    \ applications in some cases\n   (e.g., IPsec).  Finally, there may be significant\
    \ operational\n   complexities associated with using RSIP.  Some of these and\
    \ other\n   complications are outlined in section 6 of the RFC 3102, as well as\n\
    \   in the Appendices of RFC 3104.  Accordingly, the costs and benefits\n   of\
    \ using RSIP should be carefully weighed against other means of\n   relieving\
    \ address shortage.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes mechanisms that enable Realm Specific IP\n\
    \   (RSIP) to handle end-to-end IPsec (IP Security).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ..................................................\
    \  2\n   2. Model .........................................................  2\n\
    \   3. Implementation Notes ..........................................  3\n  \
    \ 4. IKE Handling and Demultiplexing ...............................  4\n   5.\
    \ IPsec Handling and Demultiplexing .............................  5\n   6. RSIP\
    \ Protocol Extensions ......................................  6\n      6.1 IKE\
    \ Support in RSIP .......................................  6\n      6.2 IPsec\
    \ Support in RSIP .....................................  7\n   7. IANA Considerations\
    \ ........................................... 10\n   8. Security Considerations\
    \ ....................................... 10\n   9. Acknowledgements ..............................................\
    \ 10\n   References ....................................................... 11\n\
    \   Authors' Addresses ............................................... 12\n  \
    \ Appendix A: On Optional Port Allocation to RSIP Clients .......... 13\n   Appendix\
    \ B: RSIP Error Numbers for IKE and IPsec Support ......... 14\n   Appendix C:\
    \ Message Type Values for IPsec Support ................ 14\n   Appendix D: A\
    \ Note on Flow Policy Enforcement .................... 14\n   Appendix E: Remote\
    \ Host Rekeying ................................. 14\n   Appendix F: Example Application\
    \ Scenarios ........................ 15\n   Appendix G: Thoughts on Supporting\
    \ Incoming Connections .......... 17\n   Full Copyright Statement .........................................\
    \ 19\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document specifies RSIP extensions to enable end-to-end\
    \ IPsec.\n   It assumes the RSIP framework as presented in [RSIP-FW], and\n  \
    \ specifies extensions to the RSIP protocol defined in [RSIP-P].  Other\n   terminology\
    \ follows [NAT-TERMS].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119.\n"
- title: 2. Model
  contents:
  - "2. Model\n   For clarity, the discussion below assumes this model:\n   RSIP client\
    \              RSIP server                   Host\n      Xa                  \
    \  Na   Nb                       Yb\n            +------------+       Nb1  +------------+\n\
    \   [X]------| Addr space |----[N]-----| Addr space |-------[Y]\n            |\
    \  A         |       Nb2  |  B         |\n            +------------+       ...\
    \  +------------+\n   Hosts X and Y belong to different address spaces A and B,\n\
    \   respectively, and N is an RSIP server.  N has two addresses:  Na on\n   address\
    \ space A, and Nb on address space B.  For example, A could be\n   a private address\
    \ space, and B the public address space of the\n   general Internet.  Additionally,\
    \ N may have a pool of addresses in\n   address space B which it can assign to\
    \ or lend to X.\n   This document proposes RSIP extensions and mechanisms to enable\
    \ an\n   RSIP client X to initiate IKE and IPsec sessions to a legacy IKE and\n\
    \   IPsec node Y.  In order to do so, X exchanges RSIP protocol messages\n   with\
    \ the RSIP server N.  This document does not yet address IKE/IPsec\n   session\
    \ initiation from Y to an RSIP client X.  For some thoughts on\n   this matter\
    \ see Appendix G.\n   The discussion below assumes that the RSIP server N is examining\
    \ a\n   packet sent by Y, destined for X.  This implies that \"source\" refers\n\
    \   to Y and \"destination\" refers to Y's peer, namely, X's presence at N.\n\
    \   This document assumes the use of the RSAP-IP flavor of RSIP (except\n   that\
    \ port number assignments are optional), on top of which SPI\n   values are used\
    \ for demultiplexing.  Because of this, more than one\n   RSIP client may share\
    \ the same global IP address.\n"
- title: 3. Implementation Notes
  contents:
  - "3. Implementation Notes\n   The RSIP server N is not required to have more than\
    \ one address on\n   address space B.  RSIP allows X (and any other hosts on address\
    \ space\n   A) to reuse Nb.  Because of this, Y's SPD SHOULD NOT be configured\
    \ to\n   support address-based keying.  Address-based keying implies that only\n\
    \   one RSIP client may, at any given point in time, use address Nb when\n   exchanging\
    \ IPsec packets with Y.  Instead, Y's SPD SHOULD be\n   configured to support\
    \ session-oriented keying, or user-oriented\n   keying [Kent98c].  In addition\
    \ to user-oriented keying, other types\n   of identifications within the IKE Identification\
    \ Payload are equally\n   effective at disambiguating who is the real client behind\
    \ the single\n   address Nb [Piper98].\n   Because it cannot rely on address-based\
    \ keying, RSIP support for\n   IPsec is similar to the application of IPsec for\
    \ remote access using\n   dynamically assigned addresses.  Both cases impose additional\n\
    \   requirements which are not met by minimally compliant IPsec\n   implementations\
    \ [Gupta]:\n      Note that a minimally-compliant IKE implementation (which only\n\
    \      implements Main mode with Pre-shared keys for Phase I\n      authentication)\
    \ cannot be used on a remote host with a dynamically\n      assigned address.\
    \  The IKE responder (gateway) needs to look up\n      the initiator's (mobile\
    \ node's) pre-shared key before it can\n      decrypt the latter's third main\
    \ mode message (fifth overall in\n      Phase I).  Since the initiator's identity\
    \ is contained in the\n      encrypted message, only its IP address is available\
    \ for lookup and\n      must be predictable.  Other options, such as Main mode\
    \ with\n      digital signatures/RSA encryption and Aggressive mode, can\n   \
    \   accommodate IKE peers with dynamically assigned addresses.\n   IKE packets\
    \ are typically carried on UDP port 500 for both source and\n   destination, although\
    \ the use of ephemeral source ports is not\n   precluded [ISAKMP].  IKE implementations\
    \ for use with RSIP SHOULD\n   employ ephemeral ports, and should handle them\
    \ as follows [IPSEC-\n   MSG]:\n      IKE implementations MUST support UDP port\
    \ 500 for both source and\n      destination, but other port numbers are also\
    \ allowed.  If an\n      implementation allows other-than-port-500 for IKE, it\
    \ sets the\n      value of the port numbers as reported in the ID payload to 0\n\
    \      (meaning \"any port\"), instead of 500.  UDP port numbers (500 or\n   \
    \   not) are handled by the common \"swap src/dst port and reply\"\n      method.\n\
    \   It is important to note that IPsec implementations MUST be aware of\n   RSIP,\
    \ at least in some peripheral sense, in order to receive assigned\n   SPIs and\
    \ perhaps other parameters from an RSIP client.  Therefore,\n   bump-in-the-stack\
    \ (BITS) implementations of IPsec are not expected to\n   work \"out of the box\"\
    \ with RSIP.\n"
- title: 4. IKE Handling and Demultiplexing
  contents:
  - "4. IKE Handling and Demultiplexing\n   If an RSIP client requires the use of\
    \ port 500 as its IKE source,\n   this prevents that field being used for demultiplexing.\
    \  Instead, the\n   \"Initiator Cookie\" field in the IKE header fields must be\
    \ used for\n   this purpose.  This field is appropriate as it is guaranteed to\
    \ be\n   present in every IKE exchange (Phase 1 and Phase 2), and is\n   guaranteed\
    \ to be in the clear (even if subsequent IKE payloads are\n   encrypted).  However,\
    \ it is protected by the Hash payload in IKE\n   [IKE].  Because of this, an RSIP\
    \ client and server must agree upon a\n   valid value for the Initiator Cookie.\n\
    \   Once X and N arrive at a mutually agreeable value for the Initiator\n   Cookie,\
    \ X uses it to create an IKE packet and tunnels it the RSIP\n   server N.  N decapsulates\
    \ the IKE packet and sends it on address\n   space B.\n   The minimum tuple negotiated\
    \ via RSIP, and used for demultiplexing\n   incoming IKE responses from Y at the\
    \ RSIP server N, is:\n      -  IKE destination port number\n      -  Initiator\
    \ Cookie\n      -  Destination IP address\n   One problem still remains: how does\
    \ Y know that it is supposed to\n   send packets to X via Nb? Y is not RSIP-aware,\
    \ but it is definitely\n   IKE-aware.  Y sees IKE packets coming from address\
    \ Nb.  To prevent Y\n   from mistakenly deriving the identity of its IKE peer\
    \ based on the\n   source address of the packets (Nb), X MUST exchange client\n\
    \   identifiers with Y:\n      -  IDii, IDir if in Phase 1, and\n      -  IDci,\
    \ IDcr if in Phase 2.\n   The proper use of identifiers allows the clear separation\
    \ between\n   those identities and the source IP address of the packets.\n"
- title: 5. IPsec Handling and Demultiplexing
  contents:
  - "5. IPsec Handling and Demultiplexing\n   The RSIP client X and server N must\
    \ arrive at an SPI value to denote\n   the incoming IPsec security association\
    \ from Y to X.  Once N and X\n   make sure that the SPI is unique within both\
    \ of their SPI spaces, X\n   communicates its value to Y as part of the IPsec\
    \ security association\n   establishment process, namely, Quick Mode in IKE [IKE]\
    \ or manual\n   assignment.\n   This ensures that Y sends IPsec packets (protocols\
    \ 51 and 50 for AH\n   and ESP, respectively) [Kent98a,Kent98b] to X via address\
    \ Nb using\n   the negotiated SPI.\n   IPsec packets from Y destined for X arrive\
    \ at RSIP server N.  They\n   are demultiplexed based on the following minimum\
    \ tuple of\n   demultiplexing fields:\n      -  protocol (50 or 51)\n      - \
    \ SPI\n      -  destination IP address\n   If N is able to find a matching mapping,\
    \ it tunnels the packet to X\n   according to the tunneling mode in effect.  If\
    \ N cannot find an\n   appropriate mapping, it MUST discard the packet.\n"
- title: 6. RSIP Protocol Extensions
  contents:
  - "6. RSIP Protocol Extensions\n   The next two sections specify how the RSIP protocol\
    \ [RSIP-P] is\n   extended to support both IKE (a UDP application) and the IPsec-\n\
    \   defined AH and ESP headers (layered directly over IP with their own\n   protocol\
    \ numbers).\n   If a server implements RSIP support for IKE and IPsec as defined\
    \ in\n   this document, it MAY include the RSIP Method parameter for RSIP with\n\
    \   IPsec in the REGISTER_RESPONSE method sent to the client.  This\n   method\
    \ is assigned a value of 3:\n      3   RSIP with IPsec (RSIPSEC)\n   Unless otherwise\
    \ specified, requirements of micro and macro flow-\n   based policy are handled\
    \ according to [RSIP-P].\n"
- title: 6.1 IKE Support in RSIP
  contents:
  - "6.1 IKE Support in RSIP\n   As discussed above, if X's IPsec implementation allows\
    \ use of an\n   ephemeral source port for IKE, then incoming IKE traffic can be\n\
    \   demultiplexed by N based on the destination address and port tuple.\n   This\
    \ is the simplest and most desirable way of supporting IKE, and\n   IPsec implementations\
    \ that interact with RSIP SHOULD allow it.\n   However, if X must use source port\
    \ 500 for IKE, there are two\n   techniques with which X and N can arrive at a\
    \ mutually unique\n   Initiator Cookie.\n      -  Trial and error.\n      -  Negotiation\
    \ via an extension of the RSIP protocol.\n   The trial and error technique consists\
    \ of X first obtaining resources\n   with which to use IPsec (via ASSIGN_REQUEST_RSIPSEC,\
    \ defined below),\n   and then randomly choosing an Initiator Cookie and transmitting\
    \ the\n   first packet to Y.  Upon arrival at N, the RSIP server examines the\n\
    \   Initiator Cookie for uniqueness per X's assigned address (Nb).  If\n   the\
    \ cookie is unique, N allows the use of this cookie for this an all\n   subsequent\
    \ packets between X and Y on this RSIP binding.  If the\n   cookie is not unique,\
    \ N drops the packet.\n   When an IKE packet is determined to be lost, the IKE\
    \ client will\n   attempt to retransmit at least three times [IKE].  An RSIP-aware\
    \ IKE\n   client SHOULD use different Initiator Cookies for each of these\n  \
    \ retransmissions.\n   The probability of an Initiator Cookie collision at N and\
    \ subsequent\n   retransmissions by X, is infinitesimal given the 64-bit cookie\
    \ space.\n   According to the birthday paradox, in a population of 640 million\n\
    \   RSIP clients going through the same RSIP server, the chances of a\n   first\
    \ collision is just 1%.  Thus, it is desirable to use the trial\n   and error\
    \ method over negotiation, for these reasons:\n      -  Simpler implementation\
    \ requirements\n      -  It is highly unlikely that more than one round trip between\
    \ X\n         and N will be necessary.\n"
- title: 6.2 IPsec Support in RSIP
  contents:
  - "6.2 IPsec Support in RSIP\n   This section defines the protocol extensions required\
    \ for RSIP to\n   support AH and ESP.  The required message types are\n   ASSIGN_REQUEST_RSIPSEC\
    \ and ASSIGN_RESPONSE_RSIPSEC:\n   ASSIGN_REQUEST_RSIPSEC\n      The ASSIGN_REQUEST_RSIPSEC\
    \ message is used by an RSIP client to\n      request IPsec parameter assignments.\
    \  An RSIP client MUST request\n      an IP address and SPIs in one message.\n\
    \      If the RSIP client wishes to use IPsec to protect a TCP or UDP\n      application,\
    \ it MUST use the port range parameter (see Appendix\n      A).  Otherwise, it\
    \ MUST set the port parameters to the \"don't\n      need\" value.  This is accomplished\
    \ by setting the length field to\n      0, and by omitting both the number field\
    \ and the port field.  This\n      informs the server that the client does not\
    \ actually need any port\n      assignments.\n      The client may initialize\
    \ the SPI parameter to the \"don't care\"\n      value (see below).  In this case,\
    \ it is requesting the server to\n      assign it a valid SPI value to use.\n\
    \      Alternatively, the client may initialize the SPI parameter to a\n     \
    \ value it considers valid.  In this case, it is suggesting that\n      value\
    \ to the server.  Of course, the server may choose to reject\n      that suggestion\
    \ and return an appropriate error message.\n      The format of this message is:\n\
    \      <ASSIGN_REQUEST_RSIPSEC> ::= <Version>\n                              \
    \     <Message Type>\n                                   <Overall Length>\n  \
    \                                 <Client ID>\n                              \
    \     <Address (local)>\n                                   <Ports (local)>\n\
    \                                   <Address (remote)>\n                     \
    \              <Ports (remote)>\n                                   <SPI>\n  \
    \                                 [Message Counter]\n                        \
    \           [Lease Time]\n                                   [Tunnel Type]\n \
    \     The following message-specific error conditions exist.  The error\n    \
    \  behavior of ASSIGN_REQUEST_RSIP_IPSEC follows that of\n      ASSIGN_REQUEST_RSAP-IP\
    \ for all non-IPsec errors.\n      -  If the client is not allowed to use IPsec\
    \ through the server,\n         the server MUST respond with an ERROR_RESPONSE\
    \ containing the\n         IPSEC_UNALLOWED parameter.\n      -  If the SPI parameter\
    \ is a \"don't care\" value and the RSIP\n         server cannot allocate ANY\
    \ SPIs, the RSIP server MUST respond\n         with an ERROR_RESPONSE containing\
    \ the IPSEC_SPI_UNAVAILABLE\n         error.\n      -  If an SPI parameter is\
    \ not a \"don't care\" value and the RSIP\n         server cannot allocate it\
    \ because the requested address and SPI\n         tuple is in use, the RSIP server\
    \ MUST respond with an\n         ERROR_RESPONSE containing the IPSEC_SPI_INUSE\
    \ error.\n   ASSIGN_RESPONSE_RSIPSEC\n      The ASSIGN_RESPONSE_RSIPSEC message\
    \ is used by an RSIP server to\n      assign parameters to an IPsec-enabled RSIP\
    \ client.\n      The format of this message is:\n      <ASSIGN_RESPONSE_RSIPSEC>\
    \ ::= <Version>\n                                    <Message Type>\n        \
    \                            <Overall Length>\n                              \
    \      <Client ID>\n                                    <Bind ID>\n          \
    \                          <Address (local)>\n                               \
    \     <Ports (local)>\n                                    <Address (remote)>\n\
    \                                    <Ports (remote)>\n                      \
    \              <SPI>\n                                    <Lease Time>\n     \
    \                               <Tunnel Type>\n                              \
    \      [Address (tunnel endpoint)]\n                                    [Message\
    \ Counter]\n      If the port parameters were set to the \"don't need\" value\
    \ in the\n      request (see above), the RSIP server must do the same in the\n\
    \      response.\n   Additionally, RSIP support for IPsec requires the following\
    \ new\n   parameter:\n   SPI\n        Code   Length    Number    SPI         \
    \    SPI\n      +------+--------+---------+---------+     +---------+\n      |\
    \  22  |    2   | 2 bytes | 4 bytes | ... | 4 bytes |\n      +------+--------+---------+---------+\
    \     +---------+\n   Sent by the RSIP client in ASSIGN_REQUEST_RSIPSEC messages\
    \ to ask for\n   a particular number of SPIs to be assigned.  Also sent by the\
    \ RSIP\n   server to the client in ASSIGN_RESPONSE_RSIPSEC messages.\n   The \"\
    SPI\" fields encode one or more SPIs.  When a single SPI is\n   specified, the\
    \ value of the number field is 1 and there is one SPI\n   field following the\
    \ number field.  When more than one SPI is\n   specified, the value of the number\
    \ field will indicate the total\n   number of SPIs contained, and the parameter\
    \ may take one of two\n   forms.  If there is one SPI field, the SPIs specified\
    \ are considered\n   to be contiguous starting at the SPI number specified in\
    \ the SPI\n   field.  Alternatively, there may be a number of SPI fields equal\
    \ to\n   the value of the number field.  The number of SPI fields can be\n   extrapolated\
    \ from the value of the length field.\n   In some cases, it is necessary to specify\
    \ a \"don't care\" value for\n   one or more SPIs.  This is accomplished by setting\
    \ the length field\n   to 2 (to account for the 2 bytes in the Number field),\
    \ setting the\n   number field to the number of SPIs necessary, and omitting all\
    \ SPI\n   fields.  The value of the number field MUST be greater than or equal\n\
    \   to one.\n"
- title: 7. IANA Considerations
  contents:
  - "7. IANA Considerations\n   All of the designations below are tentative.\n   \
    \   -  RSIP IPsec error codes (see below).\n      -  ASSIGN_REQUEST_RSIP_IPSEC\
    \ message type code.\n      -  SPI parameter code.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   This document does not add any security issues\
    \ to those already posed\n   by NAT, or normal routing operations.  Current routing\
    \ decisions\n   typically are based on a tuple with only one element:  destination\
    \ IP\n   address.  This document just adds more elements to the tuple.\n   Furthermore,\
    \ by allowing an end-to-end mode of operation and by\n   introducing a negotiation\
    \ phase to address reuse, the mechanisms\n   described here are more secure and\
    \ less arbitrary than NAT.\n   A word of caution is in order: SPI values are meant\
    \ to be semi-\n   random, and, thus serve also as anti-clogging tokens to reduce\
    \ off-\n   the-path denial-of-service attacks.  However, RSIP support for IPsec,\n\
    \   renders SPI's a negotiated item: in addition to being unique values\n   at\
    \ the receiver X, they must also be unique at the RSIP server, N.\n   Limiting\
    \ the range of the SPI values available to the RSIP clients\n   reduces their\
    \ entropy slightly.\n"
- title: 9. Acknowledgements
  contents:
  - "9. Acknowledgements\n   Many thanks to Bernard Aboba, Vipul Gupta, Jeffrey Lo,\
    \ Dan Nessett,\n   Gary Jaszewski and Prakash Iyer for helpful discussions.\n"
- title: References
  contents:
  - "References\n   [Gupta]     Gupta, V., \"Secure Remote Access over the Internet\
    \ using\n               IPSec\", Work in Progress.\n   [IKE]       Harkins, D.\
    \ and D. Carrel, \"The Internet Key Exchange\n               (IKE)\", RFC 2409,\
    \ November 1998.\n   [ISAKMP]    Maughan, D., Schertler, M., Schneider, M. and\
    \ J. Turner,\n               \"Internet Security Association and Key Management\n\
    \               Protocol (ISAKMP)\", RFC 2408, November 1998.\n   [IPSEC-MSG]\
    \ Ted Ts'o, message to the IETF's IPsec mailing list,\n               Message-Id:<199911232216.RAA01932@trampoline.thunk.org>,\n\
    \               November 23, 1999.\n   [Jenkins]   Jenkins, T., \"IPsec Rekeying\
    \ Issues\", Work in Progress.\n   [Kent98a]   Kent, S. and R. Atkinson, \"IP Encapsulating\
    \ Payload\", RFC\n               2406, November 1998.\n   [Kent98b]   Kent, S.\
    \ and R. Atkinson, \"IP Authentication Header\", RFC\n               2402, November\
    \ 1998.\n   [Kent98c]   Kent, S. and R. Atkinson, \"Security Architecture for\
    \ the\n               Internet Protocol\", RFC 2401, November 1998.\n   [Piper98]\
    \   Piper, D., \"The Internet IP Security Domain of\n               Interpretation\
    \ for ISAKMP\", RFC 2407, November 1998.\n   [NAPT]      Srisuresh, P. and K.\
    \ Egevang, \"Traditional IP Network\n               Address Translator (Traditional\
    \ NAT)\", RFC 3022, January\n               2001.\n   [NAT-TERMS] Srisuresh, P.\
    \ and M. Holdredge, \"IP Network Address\n               Translator (NAT) Terminology\
    \ and Considerations\", RFC\n               2663, August 1999.\n   [RSIP-FW] \
    \  Borella, M., Lo, J., Grabelsky, D. and G. Montenegro,\n               \"Realm\
    \ Specific IP: A Framework\", RFC 3102, October 2001.\n   [RSIP-P]    Borella,\
    \ M., Grabelsky, D., Lo, J. and K. Taniguchi,\n               \"Realm Specific\
    \ IP: Protocol Specification\", RFC 3103,\n               October 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Gabriel E. Montenegro\n   Sun Microsystems\n   Laboratories,\
    \ Europe\n   29, chemin du Vieux Chene\n   38240 Meylan\n   FRANCE\n   Phone:\
    \ +33 476 18 80 45\n   EMail: gab@sun.com\n   Michael Borella\n   CommWorks\n\
    \   3800 Golf Rd.\n   Rolling Meadows IL 60008\n   Phone: (847) 262-3083\n   EMail:\
    \ mike_borella@commworks.com\n"
- title: 'Appendix A: On Optional Port Allocation to RSIP Clients'
  contents:
  - "Appendix A: On Optional Port Allocation to RSIP Clients\n   Despite the fact\
    \ that SPIs rather than ports are used to\n   demultiplex packets at the RSIP\
    \ server, the RSIP server may\n   still allocate mutually exclusive port numbers\
    \ to the RSIP\n   clients.  If this does not happen, there is the possibility\
    \ that\n   two RSIP clients using the same IP address attempt an IPsec\n   session\
    \ with the same server using the same source port\n   numbers.\n   +-------------+\n\
    \   | RSIP client |\n   |      X1     +--+\n   |             |  |         +-------------+\n\
    \   +-------------+  |         |             |Nb\n                    +---------+\
    \ RSIP server +----------------\n   +-------------+  |         |      N      |\n\
    \   | RSIP client |  |         +-------------+\n   |      X2     +--+ private\
    \                     public\n   |             |  | network                  \
    \   network\n   +-------------+  |\n                    |\n                  \
    \  |\n   For example, consider hosts X1 and X2 depicted above.  Assume that\n\
    \   they both are using public address Nb, and both are contacting an\n   external\
    \ server Y at port 80.  If they are using IPsec but are not\n   allocated mutually\
    \ exclusive port numbers, they may both choose the\n   same ephemeral port number\
    \ to use when contacting Y at port 80.\n   Assume client X1 does so first, and\
    \ after engaging in an IKE\n   negotiation begins communicating with the public\
    \ server using IPsec.\n   When Client X2 starts its IKE session, it sends its\
    \ identification to\n   the public server.  The latter's SPD requires that different\n\
    \   identities use different flows (port numbers).  Because of this, the\n   IKE\
    \ negotiation will fail.  Client X2 will be forced to try another\n   ephemeral\
    \ port until it succeeds in obtaining one which is currently\n   not in use by\
    \ any other security association between the public\n   server and any of the\
    \ RSIP clients in the private network.\n   Each such iteration is costly in terms\
    \ of round-trip times and CPU\n   usage.  Hence --and as a convenience to its\
    \ RSIP clients--, an RSIP\n   server may also assign mutually exclusive port numbers\
    \ to its IPsec\n   RSIP clients.\n   Despite proper allocation of port numbers,\
    \ an RSIP server cannot\n   prevent their misuse because it cannot examine the\
    \ port fields in\n   packets that have been encrypted by the RSIP clients.  Presumably,\
    \ if\n   the RSIP clients have gone through the trouble of negotiating ports\n\
    \   numbers, it is in their best interest to adhere to these assignments.\n"
- title: 'Appendix B: RSIP Error Numbers for IKE and IPsec Support'
  contents:
  - "Appendix B: RSIP Error Numbers for IKE and IPsec Support\n   This section provides\
    \ descriptions for the error values in the RSIP\n   error parameter beyond those\
    \ defined in [RSIP-P].\n   401: IPSEC_UNALLOWED.  The server will not allow the\
    \ client\n        to use end-to-end IPsec.\n   402: IPSEC_SPI_UNAVAILABLE.  The\
    \ server does not have an SPI\n        available for client use.\n   403: IPSEC_SPI_INUSE.\
    \  The client has requested an SPI that\n        another client is currently using.\n"
- title: 'Appendix C: Message Type Values for IPsec Support'
  contents:
  - "Appendix C: Message Type Values for IPsec Support\n   This section defines the\
    \ values assigned to RSIP message types beyond\n   those defined in [RSIP-P].\n\
    \   22  ASSIGN_REQUEST_RSIPSEC\n   23  ASSIGN_RESPONSE_RSIPSEC\n"
- title: 'Appendix D: A Note on Flow Policy Enforcement'
  contents:
  - "Appendix D: A Note on Flow Policy Enforcement\n   An RSIP server may not be able\
    \ to enforce local or remote micro-flow\n   policy when a client uses ESP for\
    \ end-to-end encryption, since all\n   TCP/UDP port numbers will be encrypted.\
    \  However, if AH without ESP\n   is used, micro-flow policy is enforceable. \
    \ Macro-flow policy will\n   always be enforceable.\n"
- title: 'Appendix E: Remote Host Rekeying'
  contents:
  - "Appendix E: Remote Host Rekeying\n   Occasionally, a remote host with which an\
    \ RSIP client has established\n   an IPsec security association (SA) will rekey\
    \ [Jenkins].  SA rekeying\n   is only an issue for RSIP when IKE port 500 is used\
    \ by the client and\n   the rekey is of ISAKMP phase 1 (the ISAKMP SA).  The problem\
    \ is that\n   the remote host will transmit IKE packets to port 500 with a new\n\
    \   initiator cookie.  The RSIP server will not have a mapping for the\n   cookie,\
    \ and SHOULD drop the the packets.  This will cause the ISAKMP\n   SA between\
    \ the RSIP client and remote host to be deleted, and may\n   lead to undefined\
    \ behavior given that current implementations handle\n   rekeying in a number\
    \ of different ways.\n   If the RSIP client uses an ephemeral source port, rekeying\
    \ will not\n   be an issue for RSIP.  If this cannot be done, there are a number\
    \ of\n   RSIP client behaviors that may reduce the number of occurrences of\n\
    \   this problem, but are not guaranteed to eliminate it.\n      -  The RSIP client's\
    \ IKE implementation is given a smaller ISAKMP\n         SA lifetime than is typically\
    \ implemented.  This would likely\n         cause the RSIP client to rekey the\
    \ ISAKMP SA before the remote\n         host.  Since the RSIP client chooses the\
    \ Initiator Cookie,\n         there will be no problem routing incoming traffic\
    \ at the RSIP\n         server.\n      -  The RSIP client terminates the ISAKMP\
    \ SA as soon as the first\n         IPsec SA is established.  This may alleviate\
    \ the situation to\n         some degree if the SA is coarse-grained.  On the\
    \ other hand,\n         this exacerbates the problem if the SA is fine-grained\
    \ (such\n         that it cannot be reused by other application-level\n      \
    \   connections), and the remote host needs to initialize sockets\n         back\
    \ to the RSIP client.\n   Note that the unreliability of UDP essentially makes\
    \ the ephemeral\n   source approach the only robust solution.\n"
- title: 'Appendix F: Example Application Scenarios'
  contents:
  - "Appendix F: Example Application Scenarios\n   This section briefly describes\
    \ some examples of how RSIP may be used\n   to enable applications of IPsec that\
    \ are otherwise not possible.\n   The SOHO (small office, home office) scenario\n\
    \   ---------------------------------------------\n   +----------+\n   |RSIP \
    \     |\n   |client X1 +--+\n   |          |  |  +-------------+            +-------+\n\
    \   +----------+  |  |NAPT gateway |            |public |\n                 +--+\
    \ and         +--.......---+IPsec  |\n   +----------+  |  |RSIP server  |    \
    \        |peer Y |\n   |RSIP      |  |  +-------------+            +-------+\n\
    \   |client X2 +--+ private             public\n   |          |  | \"home\"  \
    \           Internet\n   +----------+  | network\n                 |\n       \
    \          |\n   Suppose the private \"home\" network is a small installation\
    \ in\n   somebody's home, and that the RSIP clients X1 and X2 must use the\n \
    \  RSIP server N as a gateway to the outside world.  N is connected via\n   an\
    \ ISP and obtains a single address which must be shared by its\n   clients.  Because\
    \ of this, N has NAPT, functionality.  Now, X1 wishes\n   to establish an IPsec\
    \ SA with peer Y.  This is possible because N is\n   also an RSIP server augmented\
    \ with the IPsec support defined in this\n   document.  Y is IPsec-capable, but\
    \ is not RSIP aware.  This is\n   perhaps the most typical application scenario.\n\
    \   The above is equally applicable in the ROBO (remote office, branch\n   office)\
    \ scenario.\n   The Roadwarrior scenario\n   ------------------------\n   +---------+\
    \              +------------+   +----------+\n   |RSIP     |              |Corporate\
    \   |   | IPsec    |\n   |client X +--..........--+Firewall    +---+ peer Y  \
    \ |\n   |         |    public    | and        |   | (user's  |\n   +---------+\
    \   Internet   |RSIP server |   | desktop) |\n                            | N\
    \          |   |          |\n                            +------------+   +----------+\n\
    \                                  private corporate\n                       \
    \           network\n   In this example, a remote user with a laptop gains access\
    \ to the\n   Internet, perhaps by using PPP or DHCP.  The user wants to access\
    \ its\n   corporation private network.  Using mechanisms not specified in this\n\
    \   document, the RSIP client in the laptop engages in an RSIP\n   authentication\
    \ and authorization phase with the RSIP server at the\n   firewall.  After that\
    \ phase is completed, the IPsec extensions to\n   RSIP defined here are used to\
    \ establish an IPsec session with a peer,\n   Y, that resides within the corporation's\
    \ network.  Y could be, for\n   example, the remote user's usual desktop when\
    \ at the office.  The\n   corporate firewall complex would use RSIP to selectively\
    \ enable IPsec\n   traffic between internal and external systems.\n   Note that\
    \ this scenario could also be reversed in order to allow an\n   internal system\
    \ (Y) to initiate and establish an IPsec session with\n   an external IPsec peer\
    \ (X).\n"
- title: 'Appendix G: Thoughts on Supporting Incoming Connections'
  contents:
  - "Appendix G: Thoughts on Supporting Incoming Connections\n   Incoming IKE connections\
    \ are much easier to support if the peer Y can\n   initiate IKE exchanges to a\
    \ port other than 500.  In this case, the\n   RSIP client would allocate that\
    \ port at the RSIP server via\n   ASSIGN_REQUEST_RSAP-IP.  Alternatively, if the\
    \ RSIP client is able to\n   allocate an IP address at the RSIP server via ASSIGN_REQUEST_RSA-IP,\n\
    \   Y could simply initiate the IKE exchange to port 500 at that address.\n  \
    \ If there is only one address Nb that must be shared by the RSIP\n   server and\
    \ all its clients, and if Y can only send to port 500, the\n   problem is much\
    \ more difficult.  At any given time, the combination\n   of address Nb and UDP\
    \ port 500 may be registered and used by only one\n   RSIP system (including clients\
    \ and server).\n   Solving this issue would require demultiplexing the incoming\
    \ IKE\n   connection request based on something other than the port and address\n\
    \   combination.  It may be possible to do so by first registering an\n   identity\
    \ with a new RSIP command of LISTEN_RSIP_IKE.  Note that the\n   identity could\
    \ not be that of the IKE responder (the RSIP client),\n   but that of the initiator\
    \ (Y).  The reason is that IKE Phase 1 only\n   allows the sender to include its\
    \ own identity, not that of the\n   intended recipient (both, by the way, are\
    \ allowed in Phase 2).\n   Furthermore, the identity must be in the clear in the\
    \ first incoming\n   packet for the RSIP server to be able to use it as a demultiplexor.\n\
    \   This rules out all variants of Main Mode and Aggressive Mode with\n   Public\
    \ Key Encryption (and Revised Mode of Public Key Encryption),\n   since these\
    \ encrypt the ID payload.\n   The only Phase 1 variants which enable incoming\
    \ IKE sessions are\n   Aggressive Mode with signatures or with pre-shared keys.\
    \  Because\n   this scheme involves the RSIP server demultiplexing based on the\n\
    \   identity of the IKE initiator, it is conceivable that only one RSIP\n   client\
    \ at a time may register interest in fielding requests from any\n   given peer\
    \ Y.  Furthermore, this precludes more than one RSIP client'\n   s being available\
    \ to any unspecified peer Y.\n   Once the IKE session is in place, IPsec is set\
    \ up as discussed in\n   this document, namely, by the RSIP client and the RSIP\
    \ server\n   agreeing on an incoming SPI value, which is then communicated to\
    \ the\n   peer Y as part of Quick Mode.\n   The alternate address and port combination\
    \ must be discovered by the\n   remote peer using methods such as manual configuration,\
    \ or the use of\n   KX (RFC2230) or SRV (RFC2052) records.  It may even be possible\
    \ for\n   the DNS query to trigger the above mechanisms to prepare for the\n \
    \  incoming and impending IKE session initiation.  Such a mechanism\n   would\
    \ allow more than one RSIP client to be available at any given\n   time, and would\
    \ also enable each of them to respond to IKE\n   initiations from unspecified\
    \ peers.  Such a DNS query, however, is\n   not guaranteed to occur.  For example,\
    \ the result of the query could\n   be cached and reused after the RSIP server\
    \ is no longer listening for\n   a given IKE peer's identity.\n   Because of the\
    \ limitations implied by having to rely on the identity\n   of the IKE initiator,\
    \ the only practical way of supporting incoming\n   connections is for the peer\
    \ Y to initiate the IKE session at a port\n   other than 500.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
