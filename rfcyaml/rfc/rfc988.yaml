- title: __initial_text__
  contents:
  - '                  Host Extensions for IP Multicasting

    '
- title: 1.  STATUS OF THIS MEMO
  contents:
  - "1.  STATUS OF THIS MEMO\n   This memo specifies the extensions required of a\
    \ host implementation\n   of the Internet Protocol (IP) to support internetwork\
    \ multicasting.\n   This specification supersedes that given in RFC-966, and constitutes\n\
    \   a proposed protocol standard for IP multicasting in the\n   ARPA-Internet.\
    \  The reader is directed to RFC-966 for a discussion of\n   the motivation and\
    \ rationale behind the multicasting extension\n   specified here.  Distribution\
    \ of this memo is unlimited.\n"
- title: 2.  INTRODUCTION
  contents:
  - "2.  INTRODUCTION\n   IP multicasting is defined as the transmission of an IP\
    \ datagram to a\n   \"host group\", a set of zero or more hosts identified by\
    \ a single IP\n   destination address.  A multicast datagram is delivered to all\n\
    \   members of its destination host group with the same \"best-efforts\"\n   reliability\
    \ as regular unicast IP datagrams, i.e. the datagram is not\n   guaranteed to\
    \ arrive at all members of the destination group or in\n   the same order relative\
    \ to other datagrams.\n   The membership of a host group is dynamic; that is,\
    \ hosts may join\n   and leave groups at any time.  There is no restriction on\
    \ the\n   location or number of members in a host group, but membership in a\n\
    \   group may be restricted to only those hosts possessing a private\n   access\
    \ key.  A host may be a member of more than one group at a time.\n   A host need\
    \ not be a member of a group to send datagrams to it.\n   A host group may be\
    \ permanent or transient.  A permanent group has a\n   well-known, administratively\
    \ assigned IP address.  It is the address,\n   not the membership of the group,\
    \ that is permanent; at any time a\n   permanent group may have any number of\
    \ members, even zero.  A\n   transient group, on the other hand, is assigned an\
    \ address\n   dynamically when the group is created, at the request of a host.\
    \  A\n   transient group ceases to exist, and its address becomes eligible for\n\
    \   reassignment, when its membership drops to zero.\n   The creation of transient\
    \ groups and the maintenance of group\n   membership information is the responsibility\
    \ of \"multicast agents\",\n   entities that reside in internet gateways or other\
    \ special-purpose\n   hosts.  There is at least one multicast agent directly attached\
    \ to\n   every IP network or subnetwork that supports IP multicasting.  A host\n\
    \   requests the creation of new groups, and joins or leaves existing\n   groups,\
    \ by exchanging messages with a neighboring agent.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   Multicast agents are also responsible\
    \ for internetwork delivery of\n   multicast IP datagrams.  When sending a multicast\
    \ IP datagram, a host\n   transmits it to a local network multicast address which\
    \ identifies\n   all neighboring members of the destination host group.  If the\
    \ group\n   has members on other networks, a multicast agent becomes an\n   additional\
    \ recipient of the local multicast and relays the datagram\n   to agents on each\
    \ of those other networks, via the internet gateway\n   system.  Finally, the\
    \ agents on the other networks each transmit the\n   datagram as a local multicast\
    \ to their own neighboring members of the\n   destination group.\n   This memo\
    \ specifies the extensions required of a host IP\n   implementation to support\
    \ IP multicasting, where a \"host\" is any\n   internet host or gateway other\
    \ than those serving as multicast\n   agents.  The algorithms and protocols used\
    \ within and between\n   multicast agents are transparent to non-agent hosts and\
    \ will be\n   specified in a separate document.  This memo also does not specify\n\
    \   how local network multicasting is accomplished for all types of\n   network,\
    \ although it does specify the required service interface to\n   an arbitrary\
    \ local network and gives an Ethernet specification as an\n   example.  Specifications\
    \ for other types of network will be the\n   subject of future memos.\n"
- title: 3.  LEVELS OF CONFORMANCE
  contents:
  - "3.  LEVELS OF CONFORMANCE\n   There are three levels of conformance to this specification:\n\
    \   Level 0: no support for IP multicasting.\n      There is, at this time, no\
    \ requirement that all IP implementations\n      support IP multicasting.  Level\
    \ 0 hosts will, in general, be\n      unaffected by multicast activity.  The only\
    \ exception arises on\n      some types of local network, where the presence of\
    \ level 1 or 2\n      hosts may cause misdelivery of multicast IP datagrams to\
    \ level 0\n      hosts.  Such datagrams can easily be identified by the presence\
    \ of\n      a class D IP address in their destination address field; they\n  \
    \    should be quietly discarded by hosts that do not support IP\n      multicasting.\
    \  Class D addresses are defined in section 4 of this\n      memo.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   Level 1: support for sending but not\
    \ receiving multicast IP\n   datagrams.\n      Level 1 allows a host to partake\
    \ of some multicast-based services,\n      such as resource location or status\
    \ reporting, but it does not\n      allow a host to create or join any host groups.\
    \  An IP\n      implementation may be upgraded from level 0 to level 1 very easily\n\
    \      and with little new code.  Only sections 4, 5, and 6 of this memo\n   \
    \   are applicable to level 1 implementations.\n   Level 2: full support for IP\
    \ multicasting.\n      Level 2 allows a host to create, join and leave host groups,\
    \ as\n      well as send IP datagrams to host groups.  It requires\n      implementation\
    \ of the Internet Group Management Protocol (IGMP)\n      and extension of the\
    \ IP and local network service interfaces\n      within the host.  All of the\
    \ following sections of this memo are\n      applicable to level 2 implementations.\n"
- title: 4.  HOST GROUP ADDRESSES
  contents:
  - "4.  HOST GROUP ADDRESSES\n   Host groups are identified by class D IP addresses,\
    \ i.e. those with\n   \"1110\" as their high-order four bits.  The remaining 28\
    \ bits are\n   unstructured as far as hosts are concerned.  The addresses of\n\
    \   well-known, permanent groups are to be published in \"Assigned\n   Numbers\"\
    . Class E IP addresses, i.e. those with \"1111\" as their\n   high-order four\
    \ bits, are reserved for future addressing modes.\n   Appendix II contains some\
    \ background discussion of several issues\n   related to host group addresses.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - 'Host Extensions for IP Multicasting

    '
- title: 5.  MODEL OF A HOST IP IMPLEMENTATION
  contents:
  - "5.  MODEL OF A HOST IP IMPLEMENTATION\n   The multicast extensions to a host\
    \ IP implementation are specified in\n   terms of the layered model illustrated\
    \ below.  In this model, ICMP\n   and (for level 2 hosts) IGMP are considered\
    \ to be implemented within\n   the IP module, and the mapping of IP addresses\
    \ to local network\n   addresses is considered to be the responsibility of local\
    \ network\n   modules.  This model is for expository purposes only, and should\
    \ not\n   be construed as constraining an actual implementation.\n      |    \
    \                                                      |    \n      |        \
    \      Upper-Layer Protocol Modules                |    \n      |__________________________________________________________|\
    \    \n   --------------------- IP Service Interface ----------------------- \n\
    \       __________________________________________________________     \n    \
    \  |                            |              |              |    \n      | \
    \                           |     ICMP     |     IGMP     |    \n      |     \
    \        IP             |______________|______________|    \n      |         \
    \  Module                                         |    \n      |             \
    \                                             |    \n      |__________________________________________________________|\
    \    \n   ---------------- Local Network Service Interface ----------------- \n\
    \       __________________________________________________________     \n    \
    \  |                            |                             |    \n      | \
    \          Local            | IP-to-local address mapping |    \n      |     \
    \     Network           |         (e.g. ARP)          |    \n      |         \
    \ Modules           |_____________________________|    \n      |      (e.g. Ethernet)\
    \                                     |    \n      |                         \
    \                                 |    \n   To support level 2 IP multicasting,\
    \ a host IP implementation must\n   provide three new services:  (1) sending multicast\
    \ IP datagrams, (2)\n   receiving multicast IP datagrams, and (3) managing group\
    \ membership.\n   Only the first service need be provided in level 1 hosts.  Each\
    \ of\n   these services is described in a separate section, below.  For each\n\
    \   service, extensions are specified for the IP service interface, the\n   IP\
    \ module, the local network service interface, and an Ethernet local\n   network\
    \ module.  Extensions to local network modules other than\n   Ethernet are mentioned\
    \ briefly, but are not specified in detail.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - 'Host Extensions for IP Multicasting

    '
- title: 6.  SENDING MULTICAST IP DATAGRAMS
  contents:
  - "6.  SENDING MULTICAST IP DATAGRAMS\n   6.1. Extensions to the IP Service Interface\n\
    \      No change to the IP service interface is required to support the\n    \
    \  sending of multicast IP datagrams.  An upper-layer protocol module\n      merely\
    \ specifies an IP host group destination, rather than an\n      individual IP\
    \ destination, when it invokes the existing \"Send IP\"\n      operation.\n  \
    \ 6.2. Extensions to the IP Module\n      To support the sending of multicast\
    \ IP datagrams, the IP module\n      must be extended to recognize IP host group\
    \ addresses when routing\n      outgoing datagrams.  Most IP implementations include\
    \ the following\n      logic:\n         if IP-destination is on the same local\
    \ network,\n            send datagram locally to IP-destination\n         else\n\
    \            send datagram locally to GatewayTo(IP-destination)\n      To allow\
    \ multicast transmissions, the routing logic must be\n      changed to:\n    \
    \     if IP-destination is on the same local network\n         or IP-destination\
    \ is a host group,\n            send datagram locally to IP-destination\n    \
    \     else\n            send datagram locally to GatewayTo(IP-destination)\n \
    \     If the sending host is itself a member of the destination group, a\n   \
    \   copy of the outgoing datagram must be looped-back for local\n      delivery\
    \ if and only if loopback was requested when the host\n      joined the group\
    \ (see section 8.1).  (This issue does not arise in\n      level 1 implementations.)\n\
    \      On hosts attached to more than one network, each multicast IP\n      datagram\
    \ must be transmitted via one network interface only,\n      leaving it to the\
    \ multicast agents to effect delivery to any other\n      required networks.\n\
    \      A host group address should not be placed in the source address\n     \
    \ field of an outgoing IP datagram.  A host group address may be\n      used in\
    \ a source routing option as the last element only.\n      It should be noted\
    \ that a small IP time-to-live (TTL) value can\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      prevent delivery to some members of\
    \ a destination group.  Thus, a\n      large TTL value should be used to reach\
    \ all members.  Conversely,\n      a small TTL value can be used to advantage\
    \ to reach only \"nearby\"\n      members of a widely-dispersed group.  In clusters\
    \ of low-delay\n      local area networks, the TTL field acts as a hop limit;\
    \ thus, one\n      can perform expanding-ring searches by starting with a TTL\
    \ of 1\n      and incrementing on each retransmission, up to some limit defined\n\
    \      by the diameter of the cluster.\n   6.3. Extensions to the Local Network\
    \ Service Interface\n      No change to the local network service interface is\
    \ required to\n      support the sending of multicast IP datagrams.  The IP module\n\
    \      merely specifies an IP host group destination, rather than an\n      individual\
    \ IP destination, when it invokes the existing \"Send\n      Local\" operation.\n\
    \   6.4. Extensions to an Ethernet Local Network Module\n      The Ethernet directly\
    \ supports the sending of local multicast\n      packets by allowing multicast\
    \ addresses in the destination field\n      of Ethernet packets.  All that is\
    \ needed to support the sending of\n      multicast IP datagrams is a procedure\
    \ for mapping IP host group\n      addresses to Ethernet multicast addresses.\n\
    \      An IP host group address is mapped to an Ethernet multicast\n      address\
    \ by placing the low-order 28-bits of the IP address into\n      the low-order\
    \ 28 bits of an Ethernet address.  The high-order 20\n      bits of the Ethernet\
    \ address are set to a well-known value, to be\n      published in \"Assigned\
    \ Numbers\".\n      [At time of publication of this memo, a block of Ethernet\n\
    \      multicast addresses with 28 unspecified bits had not yet been\n      obtained\
    \ from the allocating authority.  If such a block of\n      addresses cannot be\
    \ obtained, an alternative mapping scheme will\n      be specified.]\n   6.5.\
    \ Extensions to Local Network Modules other than Ethernet\n      Other networks\
    \ that directly support multicasting, such as rings\n      or buses conforming\
    \ to the IEEE 802.2 standard, can be handled the\n      same way as Ethernet for\
    \ the purpose of sending multicast IP\n      datagrams.  For a network that supports\
    \ broadcast but not\n      multicast, such as the Experimental Ethernet, all IP\
    \ host group\n      addresses can be mapped to a single local broadcast address\
    \ (at\n      the cost of increased overhead on all local hosts).  For a\n    \
    \  point-to-point networks like the ARPANET or a public data network\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      (X.25), all IP host group addresses\
    \ might be mapped to the\n      well-known local address of an IP multicast agent;\
    \ an agent on\n      such a network would take responsibility for completing multicast\n\
    \      delivery within the network as well as among networks.\n"
- title: 7.  RECEIVING MULTICAST IP DATAGRAMS
  contents:
  - "7.  RECEIVING MULTICAST IP DATAGRAMS\n   7.1. Extensions to the IP Service Interface\n\
    \      No change to the IP service interface is required to support the\n    \
    \  reception of multicast IP datagrams.  Incoming multicast IP\n      datagrams\
    \ are delivered to upper-layer protocol modules using the\n      same \"Receive\
    \ IP\" operation as normal, unicast datagrams.\n   7.2. Extensions to the IP Module\n\
    \      To support the reception of multicast IP datagrams, the IP module\n   \
    \   must be extended to recognize the addresses of IP host groups to\n      which\
    \ the host currently belongs, in addition to the host's\n      individual IP address(es).\
    \  An incoming datagram destined to one\n      of those group addresses is processed\
    \ exactly the same way as\n      datagrams destined to one of the host's individual\
    \ addresses.\n      Incoming datagrams destined to groups to which the host does\
    \ not\n      belong are discarded without generating any error report.\n     \
    \ On hosts attached to more than one network, if a datagram arrives\n      via\
    \ one network interface, destined for a group to which the host\n      belongs\
    \ only on a different interface, the datagram is quietly\n      discarded.  (This\
    \ should occur only as a result of inadequate\n      multicast address filtering\
    \ in the local network module.)\n      An incoming datagram is not rejected for\
    \ having an IP host group\n      address in its source address field or anywhere\
    \ in a source\n      routing option.\n      An ICMP error message (Destination\
    \ Unreachable, Time Exceeded,\n      Parameter Problem, Source Quench, or Redirect)\
    \ is never generated\n      in response to a datagram destined to an IP host group.\n\
    \   7.3. Extensions to the Local Network Service Interface\n      No change to\
    \ the local network service interface is required to\n      support the reception\
    \ of multicast IP datagrams.  Incoming local\n      network packets, whether multicast\
    \ or unicast, are delivered to\n      the IP module using the same \"Receive Local\"\
    \ operation.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   7.4. Extensions to an Ethernet Local\
    \ Network Module\n      To support the reception of multicast IP datagrams, an\
    \ Ethernet\n      module must be able to receive packets addressed to the Ethernet\n\
    \      multicast addresses that correspond to the host's IP host group\n     \
    \ addresses.  It is highly desirable to take advantage of any\n      address filtering\
    \ capabilities that the Ethernet hardware\n      interface may have, so that the\
    \ host only receives packets that\n      are destined to it.\n      Unfortunately,\
    \ many current Ethernet interfaces have a small limit\n      on the number of\
    \ addresses that the hardware can be configured to\n      recognize.  However,\
    \ an implementation must be capable of\n      listening on an arbitrary number\
    \ of Ethernet multicast addresses,\n      which may mean \"opening up\" the address\
    \ filter to accept all\n      multicast packets during those periods when the\
    \ number of\n      addresses exceeds the limit of the filter.\n      For interfaces\
    \ with inadequate hardware address filtering, it may\n      be desirable (for\
    \ performance reasons) to perform Ethernet address\n      filtering within the\
    \ software of the Ethernet module.  This is not\n      mandatory, however, because\
    \ the IP module performs its own\n      filtering based on IP destination addresses.\n\
    \   7.5. Extensions to Local Network Modules other than Ethernet\n      Other\
    \ multicast networks, such as IEEE 802.2 networks, can be\n      handled the same\
    \ way as Ethernet for the purpose of receiving\n      multicast IP datagrams.\
    \  For pure broadcast networks, such as the\n      Experimental Ethernet, all\
    \ incoming broadcast packets can be\n      accepted and passed to the IP module\
    \ for IP-level filtering.  On a\n      point-to-point network, multicast IP datagrams\
    \ will arrive as\n      local network unicasts, so no change to the local network\
    \ module\n      should be necessary.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - 'Host Extensions for IP Multicasting

    '
- title: 8.  MANAGING GROUP MEMBERSHIP
  contents:
  - "8.  MANAGING GROUP MEMBERSHIP\n   8.1. Extensions to the IP Service Interface\n\
    \      To allow upper-layer protocol modules to request that their host\n    \
    \  create, join, or leave a host group, the IP service interface must\n      be\
    \ extended to offer the following three new operations:\n         CreateGroup\
    \ ( private, loopback )\n                                  --> outcome, group-address,\
    \ access-key\n      The CreateGroup operation requests the creation of a new,\n\
    \      transient host group, with this host as its only member.  The\n      \"\
    private\" argument specifies if the group is to be private or\n      public. \
    \ The \"loopback\" argument specifies whether or not\n      datagrams sent from\
    \ this host to the group should be delivered\n      locally as well as to other\
    \ member hosts.  The \"outcome\" result\n      indicates whether the request is\
    \ granted or denied.  If it is\n      granted, a new 32-bit IP host group address\
    \ is returned, along\n      with a 64-bit access key which is zero for public\
    \ groups and\n      non-zero for private groups.  The request may be denied due\
    \ to\n      lack of response from a multicast agent, or lack of resources.\n \
    \        JoinGroup ( group-address, access-key, loopback ) --> outcome\n     \
    \ The JoinGroup operation requests that this host become a member of\n      the\
    \ host group identified by \"group-address\", with the specified\n      access\
    \ key. The \"loopback\" argument specifies whether or not\n      datagrams sent\
    \ from this host to the group should be delivered\n      locally as well as to\
    \ other member hosts.  The \"outcome\" result\n      indicates whether the request\
    \ is granted or denied.  The request\n      may be denied due to lack of response\
    \ from a multicast agent, lack\n      of resources, an invalid group address,\
    \ an incorrect access key,\n      or already being a member.\n         LeaveGroup\
    \ ( group-address, access-key ) --> outcome\n      The LeaveGroup operation requests\
    \ that this host give up its\n      membership in the host group identified by\
    \ \"group-address\", with\n      the specified access key.  The \"outcome\" result\
    \ indicates whether\n      the request is granted or denied.  The request may\
    \ be denied due\n      to an invalid group address, an incorrect access key, or\
    \ not\n      currently being a member.\n      Each of these operations may take\
    \ up to a minute or more to\n      complete, depending on the number of IGMP retransmissions\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      performed within the IP module, and\
    \ time required for a multicast\n      agent to generate a reply. However, typical\
    \ delays should be on\n      the order of a few seconds.\n      Besides the LeaveGroup\
    \ operation, a host loses its membership in a\n      group whenever the host or\
    \ its IP module crashes, or, in rare\n      circumstances, when a multicast agent\
    \ revokes its membership.  The\n      IP service interface should provide some\
    \ means of informing an\n      upper-layer module when its membership has been\
    \ revoked.\n      Membership may be revoked due to lack of resources, deallocation\n\
    \      of the group address, or the discovery of another host group using\n  \
    \    the same group address with a different access key.  (See Appendix\n    \
    \  II for discussion of address recycling issues.)\n      It is important to observe\
    \ that IP group membership is per-host,\n      rather than per-process.  An IP\
    \ service interface should not allow\n      multiple processes to invoke JoinGroup\
    \ operations for the same\n      group as a way of achieving delivery to more\
    \ than process.  The IP\n      module delivers each incoming datagram, whether\
    \ multicast or\n      unicast, to the single upper-layer protocol module identified\
    \ by\n      the protocol field in the datagram's IP header; it is an\n      upper-layer\
    \ issue whether or not to deliver incoming datagrams to\n      more than one process,\
    \ perhaps using the concept of \"process\n      groups\" or \"shared ports\".\n\
    \   8.2. Extensions to the IP Module\n      Within the IP module, the membership\
    \ management operations are\n      supported by the Internet Group Management\
    \ Protocol (IGMP),\n      specified in Appendix I. As well as having messages\
    \ corresponding\n      to each of the operations specified above, IGMP also specifies\
    \ a\n      \"deadman timer\" procedure whereby hosts periodically confirm their\n\
    \      memberships with the multicast agents.\n      The IP module must maintain\
    \ a data structure listing the IP\n      addresses of all host groups to which\
    \ the host currently belongs,\n      along with each group's loopback policy,\
    \ access key, and timer\n      variables.  This data structure is used by the\
    \ IP multicast\n      transmission service to know which outgoing datagrams to\
    \ loop\n      back, and by the reception service to know which incoming\n    \
    \  datagrams to accept.  The purpose of IGMP and the management\n      interface\
    \ operations is to maintain this data structure.\n      On hosts attached to more\
    \ than one network, each membership is\n      associated with a particular network\
    \ interface.  On such a host\n      the management interface operations above\
    \ may each require an\n      additional parameter specifying to which interface\
    \ the create,\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      join, or leave request applies.  The\
    \ group membership data\n      structure must also be extended to associate an\
    \ interface with\n      each membership.  If a host joins the same host group\
    \ on more than\n      one network interface, it can expect to receive multiple\
    \ copies of\n      each datagram sent to that group.\n   8.3. Extensions to the\
    \ Local Network Service Interface\n      To allow an IP module to control what\
    \ packets should be accepted\n      by the local network module, it is necessary\
    \ to extend the local\n      network service interface with the following two\
    \ new operations:\n         AcceptAddress ( group-address )\n         RejectAddress\
    \ ( group-address )\n      where \"group-address\" is an IP host group address.\
    \  The\n      AcceptAddress operation requests the local network module to\n \
    \     accept and deliver up subsequently arriving packets destined to\n      the\
    \ local network address corresponding to \"group-address\".  The\n      RejectAddress\
    \ operation requests the local network module to stop\n      delivering up packets\
    \ destined to the local network address\n      corresponding to \"group-address\"\
    .\n      Any local network module is free to ignore RejectAddress requests,\n\
    \      and may deliver up packets destined to more addresses than just\n     \
    \ those specified in AcceptAddress requests, if it is unable to\n      filter\
    \ incoming packets adequately.\n   8.4. Extensions to an Ethernet Local Network\
    \ Module\n      An Ethernet module responds to AcceptAddress operations by adding\n\
    \      the corresponding Ethernet multicast address to its acceptance\n      filter\
    \ for incoming packets.  A RejectAddress operation causes the\n      corresponding\
    \ Ethernet address to be dropped from the filter.  For\n      Ethernet interfaces\
    \ with a limit on the number of addresses that\n      can be added to the filter,\
    \ the Ethernet software module must\n      detect when that threshold is exceeded\
    \ and open up the filter to\n      accept all multicast packets.  It should also\
    \ detect when the\n      number of addresses drops below the threshold and revert\
    \ to\n      individual address filtering.\n   8.5. Extensions to Local Network\
    \ Modules other than Ethernet\n      Other multicast networks, such as IEEE 802.2\
    \ networks, can be\n      handled the same way as Ethernet for the purpose of\
    \ controlling\n      address filtering.  For a pure broadcast network or a\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      point-to-point network, the AcceptAddress\
    \ and RejectAddress\n      operations may have no effect; all incoming packets\
    \ could be\n      passed to the IP module for IP-level filtering.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - 'Host Extensions for IP Multicasting

    '
- title: APPENDIX I.  INTERNET GROUP MANAGEMENT PROTOCOL (IGMP)
  contents:
  - "APPENDIX I.  INTERNET GROUP MANAGEMENT PROTOCOL (IGMP)\n   The Internet Group\
    \ Management Protocol (IGMP) is used between IP\n   hosts and their immediate\
    \ neighbor multicast agents to support the\n   creation of transient groups, the\
    \ addition and deletion of members of\n   a group, and the periodic confirmation\
    \ of group membership.  IGMP is\n   an asymmetric protocol and is specified here\
    \ from the point of view\n   of a host, rather than a multicast agent.\n   Like\
    \ ICMP, IGMP is a integral part of IP.  It is required to be\n   implemented in\
    \ full by all hosts conforming to level 2 of the IP\n   multicasting specification.\
    \  IGMP messages are encapsulated in IP\n   datagrams, with an IP protocol number\
    \ of 2.  All IGMP messages have\n   the following format:\n    0             \
    \      1                   2                   3    \n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  \n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ \n   |     Type      |     Code      |           Checksum            | \n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ \n   |   \
    \                       Identifier                           | \n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ \n   |                         Group Address                         | \n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ \n   |   \
    \                                                            | \n   +        \
    \                 Access Key                            + \n   |             \
    \                                                  | \n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ \n   Type\n      There are eight types of IGMP message:\n         1 = Create\
    \ Group Request\n         2 = Create Group Reply\n         3 = Join Group Request\n\
    \         4 = Join Group Reply\n         5 = Leave Group Request\n         6 =\
    \ Leave Group Reply\n         7 = Confirm Group Request\n         8 = Confirm\
    \ Group Reply\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   Code\n      In a Create Group Request\
    \ message, the code field indicates if the\n      new host group is to be public\
    \ or private:\n         0 = public\n         1 = private\n      In all other Request\
    \ messages, the code field contains zero.\n      In a Reply message, the Code\
    \ field specifies the outcome of the\n      request:\n         0       = request\
    \ granted\n         1       = request denied,  no resources\n         2      \
    \ = request denied,  invalid code\n         3       = request denied,  invalid\
    \ group address\n         4       = request denied,  invalid access key\n    \
    \     5 - 255 = request pending, retry in this many seconds\n   Checksum\n   \
    \   The checksum is the 16-bit one's complement of the one's\n      complement\
    \ sum of the IGMP message starting with the IGMP Type.\n      For computing the\
    \ checksum, the checksum field should be zero.\n   Identifier\n      In a Confirm\
    \ Group Request message, the identifier field contains\n      zero.\n      In\
    \ all other Request messages, the identifier field contains a\n      value to\
    \ distinguish the request from other requests by the same\n      host.\n     \
    \ In a Reply message, the identifier field contains the same value\n      as in\
    \ the corresponding Request message.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   Group Address\n      In a Create Group\
    \ Request message, the group address field\n      contains zero.\n      In all\
    \ other Request messages, the group address field contains a\n      host group\
    \ address.\n      In a Create Group Reply message, the group address field contains\n\
    \      either a newly allocated host group address (if the request is\n      granted)\
    \ or zero (if denied).\n      In all other Reply messages, the group address field\
    \ contains the\n      same host group address as in the corresponding Request\
    \ message.\n   Access Key\n      In a Create Group Request message, the access\
    \ key field contains\n      zero.\n      In all other Request messages, the access\
    \ key field contains the\n      access key assigned to the host group identified\
    \ in the Group\n      Address field (zero for public groups).\n      In a Create\
    \ Group Reply message, the access key field contains\n      either a non-zero\
    \ 64-bit number (if the request for a private\n      group is granted) or zero.\n\
    \      In all other Reply messages, the access key field contains the\n      same\
    \ access key as in the corresponding Request.\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n   Protocol Rules\n      Request messages\
    \ are sent only by hosts.  Reply messages are sent\n      only by multicast agents.\
    \  If a host receives an IGMP message of a\n      type other than the four Reply\
    \ types specified above, the message\n      is discarded.\n      A Request message\
    \ is sent with its IP destination field containing\n      the well-known address\
    \ of the Multicast Agent Group.  The IP\n      time-to-live field is initialized\
    \ by the sender to 1, in order to\n      limit the scope of the request to immediate\
    \ neighbor multicast\n      agents only.  The IP source address field contains\
    \ the individual\n      IP address of the sending host.\n      A Reply message\
    \ is sent only in response to a Request message.\n      Its IP destination address\
    \ field contains the individual address\n      of the host that sent the corresponding\
    \ Request.  (A Confirm Group\n      Reply may also be sent to the host group address\
    \ specified in its\n      corresponding Confirm Group Request.)  The IP source\
    \ address field\n      contains the individual IP address of the replying multicast\n\
    \      agent.\n      When a host sends a new Create Group, Join Group, or Leave\
    \ Group\n      Request message, it supplies an arbitrary identifier that it has\n\
    \      not used within the last T0 seconds.  (It is usually sufficient\n     \
    \ just to increment the identifier for each new request.)  The host\n      initializes\
    \ a timer to T1 seconds and a retransmission counter to\n      zero.  If a Reply\
    \ message with a matching identifier is not\n      received before the timer expires,\
    \ it is reset to T1 seconds and\n      the retransmission counter is incremented.\
    \  If the counter is less\n      than N1, the host retransmits the Request message\
    \ with the same\n      identifier.  If the counter equals N1, the host gives up;\
    \ if the\n      request was to create or join a group, it is deemed to have\n\
    \      failed; if the request was to leave a group, it is deemed to have\n   \
    \   succeeded.\n      If a \"request pending\" code is received in a matching\
    \ reply to a\n      Create Group, Join Group, or Leave Group Request, the timer\
    \ is\n      reset to the number of seconds specified by the code and the\n   \
    \   retransmission counter is reset to zero.  The new timer value\n      applies\
    \ to one timeout interval only -- if the timer expires, it\n      is reset to\
    \ T1 seconds, the counter is incremented, and the\n      request is retransmitted.\n\
    \      The first matching Reply to a Create Group, Join Group, or Leave\n    \
    \  Group Request containing a \"request granted\" or \"request denied\"\n    \
    \  code determines the outcome of the request.  Any subsequent or\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      non-matching Replies are discarded\
    \ by the host.  However, if a\n      host receives an affirmative Create Group\
    \ Reply or Join Group\n      Reply that neither matches an outstanding Request\
    \ nor contains the\n      address of a group to which the host belongs, the host\
    \ should\n      immediately send a Leave Group Request for the unexpected group\n\
    \      address.\n      A \"request granted\" reply to a Create Group Request implies\
    \ that,\n      as well as the group being created, the requesting host is granted\n\
    \      membership in the group, i.e. there is no need to send a separate\n   \
    \   Join Group Request.\n      Confirm Group Request messages must be sent periodically\
    \ by hosts\n      to inform the neighboring multicast agent(s) of the hosts'\n\
    \      continuing membership in the specified groups.  If an agent does\n    \
    \  not receive a Confirm Group Request message for a particular group\n      within\
    \ an agent-defined interval, it stops delivering datagrams\n      destined to\
    \ that group.\n      For each group to which it belongs, a host maintains a\n\
    \      confirmation timer and a variable t.  The variable t is\n      initialized\
    \ to T2 seconds. Whenever the host's request to create\n      or join a group\
    \ is granted, and whenever the host either sends a\n      Confirm Group Request\
    \ or receives a Confirm Group Reply with a\n      \"request granted\" code for\
    \ the group, the host sets the group's\n      timer to a random number uniformly\
    \ distributed between t and t +\n      T3 seconds.  If the host receives a a Confirm\
    \ Group Reply with a\n      \"request pending\" code, t is changed to the value\
    \ of the code and\n      the timer is reset to a random number between the new\
    \ t and t +\n      T3.  The variable t retains its value until another \"request\n\
    \      pending\" code is received.  Whenever the timer expires, the host\n   \
    \   sends a Confirm Group Request.\n      Even if a host fails to receive Confirm\
    \ Group Replies to its\n      Requests, it continues to consider itself a member\
    \ of the group,\n      because it may still be able to receive multicast datagrams\
    \ from\n      other hosts on the same local network.  Only if a host receives\
    \ a\n      \"request denied\" code in a Confirm Group Reply does it stop\n   \
    \   sending Confirm Group Requests and consider its membership to be\n      revoked.\n\
    \      Multicast agents respond to Confirm Group Request messages by\n      sending\
    \ Confirm Group Reply messages either to the individual\n      sender of the Request\
    \ or to the host group address specified in\n      the Request.  By sending back\
    \ a Confirm Group Reply to all\n      neighboring members of a group, a multicast\
    \ agent is able to reset\n      every member's timer with a single packet.  The\
    \ randomization of\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      the timers is intended to cause only\
    \ the one member whose timer\n      expires first to send a Confirm Group Request,\
    \ stimulating a Reply\n      to reset all the timers.  The use of the \"request\
    \ pending\" codes\n      allows the multicast agent to control the rate at which\
    \ it\n      receives Confirm Group Requests.\n   Protocol Timing Constants\n \
    \     The following timing constants are specified for IGMP.  They are\n     \
    \ subject to change as a result of operational experience.\n      T0 = 300 seconds\
    \  minimum recycle time for identifiers\n      T1 = 2 seconds    retrans. interval\
    \ for Create/Join/Leave Requests\n      N1 = 5 tries      retrans. limit for Create/Join/Leave\
    \ Requests\n      T2 = 15 seconds   initial value for Confirm Request variable\
    \ t\n      T3 = 15 seconds   random range for Confirm Request variable t\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - 'Host Extensions for IP Multicasting

    '
- title: APPENDIX II.  HOST GROUP ADDRESS ISSUES
  contents:
  - "APPENDIX II.  HOST GROUP ADDRESS ISSUES\n   This appendix is not part of the\
    \ IP multicasting specification, but\n   provides background discussion of several\
    \ issues related to IP host\n   group addresses.\n   Group Address Binding\n \
    \     The binding of IP host group addresses to physical hosts may be\n      considered\
    \ a generalization of the binding of IP unicast\n      addresses.  An IP unicast\
    \ address is statically bound to a single\n      local network interface on a\
    \ single IP network.  An IP host group\n      address is dynamically bound to\
    \ a set of local network interfaces\n      on a set of IP networks.\n      It\
    \ is important to understand that an IP host group address is NOT\n      bound\
    \ to a set of IP unicast addresses.  The multicast agents do\n      not need to\
    \ maintain a list of individual members of each host\n      group.  For example,\
    \ a multicast agent attached to an Ethernet\n      need associate only a single\
    \ Ethernet multicast address with each\n      host group having local members,\
    \ rather than a list of the\n      members' individual IP or Ethernet addresses.\n\
    \   Group Addresses as Logical Addresses\n      Host group addresses have been\
    \ defined specifically for use in the\n      destination address field of multicast\
    \ IP datagrams.  However, the\n      fact that group addresses are location-independent\
    \ (they are not\n      statically bound to a single network interface) suggests\
    \ possible\n      uses as more general \"logical addresses\", both in the source\
    \ as\n      well as the destination address field of datagrams.  For example,\n\
    \      a mobile IP host might have a host group address as its only\n      identity,\
    \ used as the source of datagrams it sends.  Whenever the\n      mobile host moved\
    \ from one network to another, it would join its\n      own group on the new network\
    \ and depart from the group on the old\n      network.  Other hosts communicating\
    \ with the mobile one would deal\n      only with the group address and would\
    \ be unaware of, and\n      unaffected by, the changing network location of the\
    \ mobile host.\n      Host group addresses cannot, however, be used to solve all\n\
    \      problems of internetwork logical addressing, such as delivery to\n    \
    \  the \"nearest\" or the \"least loaded\" network interface of a\n      multi-homed\
    \ host. Furthermore, there are hazards in using group\n      addresses in the\
    \ source address field of datagrams when the group\n      actually contains more\
    \ than one host.  For instance, the IP\n      datagram reassembly algorithm relies\
    \ on every host using a\n      different source address.  Also, errors in a datagram\
    \ sent with a\n"
- title: RFC 988                                                        July 1986
  contents:
  - 'RFC 988                                                        July 1986

    '
- title: Host Extensions for IP Multicasting
  contents:
  - "Host Extensions for IP Multicasting\n      group source address may result in\
    \ error reports being returned to\n      all members of the group, not just the\
    \ sender.  In view of these\n      hazards, this memo specifies the use of host\
    \ group addresses only\n      as destinations of datagrams, either in the destination\
    \ address\n      field or as the last element of a source routing option.  However,\n\
    \      it is recommended that datagrams with a group source address be\n     \
    \ accepted without complaint, thereby allowing other implementations\n      to\
    \ experiment with logical addressing applications of host group\n      addresses.\n\
    \   Recycling of Transient Host Group Addresses\n      Since host group addresses\
    \ are of fixed, relatively small size,\n      transient group addresses must be\
    \ recycled to satisfy continuing\n      requests for creation of new groups. \
    \ The multicast agents make an\n      effort to ensure that a group has no members\
    \ anywhere in the\n      internet before allocating its address to a new group.\
    \  However,\n      under certain conditions of internetwork partitioning and\n\
    \      membership migration, it is impossible to guarantee unique\n      allocation\
    \ of an address without seriously compromising the\n      availability and robustness\
    \ of host groups. Furthermore, hosts\n      that are unaware that a particular\
    \ group has ceased to exist may\n      send datagrams to it long after its address\
    \ has been assigned to a\n      new group.  Therefore, hosts should be prepared\
    \ for the\n      possibility of misdelivery of multicast IP datagrams to unintended\n\
    \      hosts, even in private groups.  Such misdelivery can only be\n      detected\
    \ at a level above IP, using higher-level identifiers or\n      authentication\
    \ tokens.  (The access key of a private group might\n      be used in some applications\
    \ as such an identifier.)  Of course,\n      there are other threats to privacy\
    \ of communication in the\n      internet, besides group address collision, such\
    \ as untrustworthy\n      gateways or unsecured networks. End-to-end encryption\
    \ is an\n      effective defense against such threats.\n"
