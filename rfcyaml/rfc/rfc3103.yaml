- title: __initial_text__
  contents:
  - '               Realm Specific IP: Protocol Specification

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The IESG notes that the set of documents describing the RSIP\n\
    \   technology imply significant host and gateway changes for a complete\n   implementation.\
    \  In addition, the floating of port numbers can cause\n   problems for some applications,\
    \ preventing an RSIP-enabled host from\n   interoperating transparently with existing\
    \ applications in some cases\n   (e.g., IPsec).  Finally, there may be significant\
    \ operational\n   complexities associated with using RSIP.  Some of these and\
    \ other\n   complications are outlined in section 6 of the RFC 3102, as well as\n\
    \   in the Appendices of RFC 3104.  Accordingly, the costs and benefits\n   of\
    \ using RSIP should be carefully weighed against other means of\n   relieving\
    \ address shortage.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document presents a protocol with which to implement Realm\n\
    \   Specific IP (RSIP).  The protocol defined herein allows negotiation\n   of\
    \ resources between an RSIP host and gateway, so that the host can\n   lease some\
    \ of the gateway's addressing parameters in order to\n   establish a global network\
    \ presence.  This protocol is designed to\n   operate on the application layer\
    \ and to use its own TCP or UDP port.\n   In particular, the protocol allows a\
    \ gateway to allocate addressing\n   and control parameters to a host such that\
    \ a flow policy can be\n   enforced at the gateway.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   2. Specification of Requirements . . . . . . . . . . . . .\
    \ . . .  4\n   3. Terminology . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n   4. Architecture  . . . . . . . . . . . . . . . . . . . . . . . .  5\n\
    \   5. Transport Protocol  . . . . . . . . . . . . . . . . . . . . .  7\n   6.\
    \ Host / Gateway Relationships  . . . . . . . . . . . . . . . .  7\n   7. Gateway\
    \ Flow Policy and State . . . . . . . . . . . . . . . .  8\n   7.1. Local Flow\
    \ Policy . . . . . . . . . . . . . . . . . . . . .  9\n   7.2. Remote Flow Policy\
    \  . . . . . . . . . . . . . . . . . . . .  9\n   7.3. Gateway State . . . . .\
    \ . . . . . . . . . . . . . . . . . . 10\n   8. Parameter Specification and Formats\
    \ . . . . . . . . . . . . . 11\n   8.1. Address . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 11\n   8.2. Ports . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 12\n   8.3. Lease Time  . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 13\n   8.4. Client ID . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 13\n   8.5. Bind ID . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 13\n   8.6. Tunnel Type . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 14\n   8.7. RSIP Method . . . . . . . . . . . . . . . . . . . . . . . . 14\n\
    \   8.8. 8.8.  Error . . . . . . . . . . . . . . . . . . . . . . . . 14\n   8.9.\
    \ Flow Policy . . . . . . . . . . . . . . . . . . . . . . . . 15\n   8.10. Indicator\
    \  . . . . . . . . . . . . . . . . . . . . . . . . 15\n   8.11. Message Counter\
    \  . . . . . . . . . . . . . . . . . . . . . 16\n   8.12. Vendor Specific Parameter\
    \  . . . . . . . . . . . . . . . . 16\n   9. Message Types . . . . . . . . . .\
    \ . . . . . . . . . . . . . . 16\n   9.1. ERROR_RESPONSE  . . . . . . . . . .\
    \ . . . . . . . . . . . . 17\n   9.2. REGISTER_REQUEST  . . . . . . . . . . .\
    \ . . . . . . . . . . 18\n   9.3. REGISTER_RESPONSE . . . . . . . . . . . . .\
    \ . . . . . . . . 19\n   9.4. DE-REGISTER_REQUEST . . . . . . . . . . . . . .\
    \ . . . . . . 19\n   9.5. DE-REGISTER_RESPONSE  . . . . . . . . . . . . . . .\
    \ . . . . 20\n   9.6. ASSIGN_REQUEST_RSA-IP . . . . . . . . . . . . . . . . .\
    \ . . 21\n   9.7. ASSIGN_RESPONSE_RSA-IP  . . . . . . . . . . . . . . . . . .\
    \ 22\n   9.8. ASSIGN_REQUEST_RSAP-IP  . . . . . . . . . . . . . . . . . . 23\n\
    \   9.9. ASSIGN_RESPONSE_RSAP-IP . . . . . . . . . . . . . . . . . . 26\n   9.10.\
    \ EXTEND_REQUEST . . . . . . . . . . . . . . . . . . . . . . 27\n   9.11. EXTEND_RESPONSE\
    \  . . . . . . . . . . . . . . . . . . . . . 28\n   9.12. FREE_REQUEST . . . .\
    \ . . . . . . . . . . . . . . . . . . . 28\n   9.13. FREE_RESPONSE  . . . . .\
    \ . . . . . . . . . . . . . . . . . 29\n   9.14. QUERY_REQUEST  . . . . . . .\
    \ . . . . . . . . . . . . . . . 30\n   9.15. QUERY_RESPONSE . . . . . . . . .\
    \ . . . . . . . . . . . . . 31\n   9.16. LISTEN_REQUEST . . . . . . . . . . .\
    \ . . . . . . . . . . . 32\n   9.17. LISTEN_RESPONSE  . . . . . . . . . . . .\
    \ . . . . . . . . . 35\n   10. Discussion . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 36\n   10.1. Use of Message Counters  . . . . . . . . . . . .\
    \ . . . . . 36\n   10.2. RSIP Host and Gateway Failure Scenarios  . . . . . .\
    \ . . . 37\n   10.3. General Gateway Policy . . . . . . . . . . . . . . . . .\
    \ . 38\n   10.4. Errors Not From the RSIP Protocol  . . . . . . . . . . . . 39\n\
    \   10.5. Address and Port Requests and Allocation . . . . . . . . . 40\n   10.6.\
    \ Local Gateways and Flow Policy Interaction . . . . . . . . 40\n   11. Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . 40\n   12. IANA Considerations\
    \  . . . . . . . . . . . . . . . . . . . . 41\n   13. Acknowledgements . . . .\
    \ . . . . . . . . . . . . . . . . . . 41\n   14. Appendix A: RSIP Error Numbers\
    \ . . . . . . . . . . . . . . . 42\n   15. Appendix B: Message Types  . . . .\
    \ . . . . . . . . . . . . . 44\n   16. Appendix C: Example RSIP host/gateway transactions\
    \ . . . . . 45\n   17. Appendix D: Example RSIP host state diagram  . . . . .\
    \ . . . 50\n   18. References . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 52\n   19. Authors' Addresses . . . . . . . . . . . . . . . . . . . . . 53\n\
    \   20. Full Copyright Statement . . . . . . . . . . . . . . . . . . 54\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network Address Translation (NAT) has gained popularity\
    \ as a method\n   of separating public and private address spaces, and alleviating\n\
    \   network address shortages.  A NAT translates the addresses of packets\n  \
    \ leaving a first routing realm to an address from a second routing\n   realm,\
    \ and performs the reverse function for packets entering the\n   first routing\
    \ realm from the second routing realm.  This translation\n   is performed transparently\
    \ to the hosts in either space, and may\n   include modification of TCP/UDP port\
    \ numbers and IP addresses in\n   packets that traverse the NAT.\n   While a NAT\
    \ does not require hosts to be aware of the translation, it\n   will require an\
    \ application layer gateway (ALG) for any protocol that\n   transmits IP addresses\
    \ or port numbers in packet payloads (such as\n   FTP).  Additionally, a NAT will\
    \ not work with protocols that require\n   IP addresses and ports to remain unmodified\
    \ between the source and\n   destination hosts, or protocols that prevent such\
    \ modifications from\n   occurring (such as some IPsec modes, or application-layer\
    \ end-to-end\n   encryption).\n   An alternative to a NAT is an architecture that\
    \ allows the hosts\n   within the first (e.g., private) routing realm to directly\
    \ use\n   addresses and other routing parameters from the second (e.g., public)\n\
    \   routing realm.  Thus, RSIP [RSIP-FRAME] has been defined as a method\n   for\
    \ address sharing that exhibits more transparency than NAT.  In\n   particular,\
    \ RSIP requires that an RSIP gateway (a router or gateway\n   between the two\
    \ realms) assign at least one address from the second\n   routing realm, and perhaps\
    \ some other resources, to each RSIP host.\n   An RSIP host is a host in the first\
    \ routing realm that needs to\n   establish end-to-end connectivity to a host,\
    \ entity or device in the\n   second routing realm.  Thus, the second routing\
    \ realm is not directly\n   accessible from the RSIP host, but this system allows\
    \ packets to\n   maintain their integrity from the RSIP host to their destination.\n\
    \   ALGs are not required in the RSIP gateway.\n   RSIP requires that hosts be\
    \ modified so that they place some number\n   of layer three, layer four or other\
    \ values from those assigned by the\n   RSIP gateway in each packet bound for\
    \ the second routing realm.\n   This document discusses a method for assigning\
    \ parameters to an RSIP\n   host from an RSIP gateway.  The requirements, scope,\
    \ and\n   applicability of RSIP, as well as its interaction with other layer 3\n\
    \   protocols, are discussed in a companion framework document [RSIP-\n   FRAME].\
    \  Extensions to this protocol that enable end-to-end IPsec are\n   discussed\
    \ in [RSIP-IPSEC].\n"
- title: 2.  Specification of Requirements
  contents:
  - "2.  Specification of Requirements\n   The keywords \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHOULD\", \"SHOULD NOT\",\n   \"SHALL\", \"SHALL NOT\", \"MAY\"\
    \ and \"MAY NOT\" that appear in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   Private Realm\n      A routing realm that uses private IP\
    \ addresses from the ranges\n      (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16)\
    \ specified in\n      [RFC1918], or addresses that are non-routable from the Internet.\n\
    \   Public Realm\n      A routing realm with unique network addresses assigned\
    \ by the\n      Internet Assigned Number Authority (IANA) or an equivalent address\n\
    \      registry.\n   RSIP Host\n      A host within the private realm that acquires\
    \ publicly unique\n      parameters from an RSIP gateway through the use of the\
    \ RSIP\n      client/server protocol.\n   RSIP Gateway\n      A router situated\
    \ on the boundary between a private realm and a\n      public realm and owns one\
    \ or more public IP addresses.  An RSIP\n      gateway is responsible for public\
    \ parameter management and\n      assignment to RSIP hosts.  An RSIP gateway may\
    \ act as a NAT router\n      for hosts within the private realm that are not RSIP\
    \ enabled.\n   RSIP Client\n      An application program that performs the client\
    \ portion of the\n      RSIP client/server protocol.  An RSIP client application\
    \ MUST\n      exist on all RSIP hosts, and MAY exist on RSIP gateways.\n   RSIP\
    \ Server\n      An application program that performs the server portion of the\n\
    \      RSIP client/server protocol.  An RSIP server application MUST\n      exist\
    \ on all RSIP gateways.\n   RSA-IP: Realm Specific Address IP\n      An RSIP method\
    \ in which each RSIP host is allocated a unique IP\n      address from the public\
    \ realm.  Discussed in detail in [RSIP-\n      FRAME]\n   RSAP-IP: Realm Specific\
    \ Address and Port IP\n      An RSIP method in which each RSIP host is allocated\
    \ an IP address\n      (possibly shared with other RSIP hosts) and some number\
    \ of per-\n      address unique ports from the public realm.  Discussed in detail\n\
    \      in [RSIP-FRAME]\n   Binding\n      An association of some combination of\
    \ a local address, one or more\n      local ports, a remote address, and a remote\
    \ port with an RSIP\n      host.\n   Resource\n      A general way to refer to\
    \ an item that an RSIP host leases from an\n      RSIP gateway; e.g., an address\
    \ or port.\n   All other terminology found in this document is consistent with\
    \ that\n   of [RFC2663] and [RSIP-FRAME].\n"
- title: 4.  Architecture
  contents:
  - "4.  Architecture\n   For simplicity, in the remainder of this document we will\
    \ assume that\n   the RSIP hosts in the first routing realm (network) use private\n\
    \   (e.g., see [RFC1918]) IP addresses, and that the second routing realm\n  \
    \ (network) uses public IP addresses.  (This assumption is made without\n   loss\
    \ of generality and the ensuing discussion applies to more general\n   cases.)\
    \  The RSIP gateway connects the public and private realms and\n   contains interfaces\
    \ to both.  Other NAT terminology found in this\n   document is defined in [RFC2663].\n\
    \   The diagram below describes an exemplary reference architecture for\n   RSIP.\n\
    \      RSIP Host             RSIP Gateway                    Host\n         Xa\
    \                    Na   Nb                      Yb\n      [X]------( Addr sp.\
    \ A )----[N]-----( Addr sp. B )-------[Y]\n               (  Network   )     \
    \       (  Network   )\n   Hosts X and Y belong to different addressing realms\
    \ A and B,\n   respectively, and N is an RSIP gateway (which may also perform\
    \ NAT\n   functions).  N has two interfaces: Na on address space A, and Nb on\n\
    \   address space B.  N may have a pool of addresses in address space B\n   which\
    \ it can assign to or lend to X and other hosts in address space\n   A.  These\
    \ addresses are not shown above, but they can be denoted as\n   Nb1, Nb2, Nb3\
    \ and so on.\n   Host X, needing to establish an end-to-end connection to a network\n\
    \   entity Y situated within address space B, first negotiates and\n   obtains\
    \ assignment of the resources from the RSIP gateway.  Upon\n   assignment of these\
    \ parameters, the RSIP gateway creates a mapping,\n   of X's addressing information\
    \ and the assigned resources.  This\n   binding enables the RSIP gateway to correctly\
    \ de-multiplex and\n   forward inbound traffic generated by Y for X.  A lease\
    \ time is\n   associated with each bind.\n   Using the public parameters assigned\
    \ by the RSIP gateway, RSIP hosts\n   tunnel data packets across address space\
    \ A to the RSIP gateway.  The\n   RSIP gateway acts as the end point of such tunnels,\
    \ stripping off the\n   outer headers and routing the inner packets onto the public\
    \ realm.\n   As mentioned above, an RSIP gateway maintains a mapping of the\n\
    \   assigned public parameters as demultiplexing fields for uniquely\n   mapping\
    \ them to RSIP host private addresses.  When a packet from the\n   public realm\
    \ arrives at the RSIP gateway and it matches a given set\n   of demultiplexing\
    \ fields, then the RSIP gateway will tunnel it to the\n   appropriate RSIP host.\
    \  The tunnel headers of outbound packets from X\n   to Y, given that X has been\
    \ assigned Nb, are as follows:\n            +---------+---------+---------+\n\
    \            | X -> Na | Nb -> Y | payload |\n            +---------+---------+---------+\n\
    \   There are two basic flavors of RSIP: RSA-IP and RSAP-IP.  RSIP hosts\n   and\
    \ gateways MUST support RSAP-IP and MAY support RSA-IP.  Details of\n   RSA-IP\
    \ and RSAP-IP are found in [RSIP-FRAME].\n"
- title: 5.  Transport Protocol
  contents:
  - "5.  Transport Protocol\n   RSIP is an application layer protocol that requires\
    \ the use of a\n   transport layer protocol for end-to-end delivery of packets.\n\
    \   RSIP gateways MUST support TCP, and SHOULD support UDP.  Due to the\n   fact\
    \ that RSIP may be deployed across a wide variety of network\n   links, RSIP hosts\
    \ SHOULD support TCP, because of TCP's robustness\n   across said variety of links.\
    \  However, RSIP hosts MAY support UDP\n   instead of TCP, or both UDP and TCP.\n\
    \   For RSIP hosts and gateways using UDP, timeout and retransmissions\n   MUST\
    \ occur.  We recommend a binary exponential backoff scheme with an\n   initial\
    \ duration of 12.5 ms, and a maximum of six retries (seven\n   total attempts\
    \ before failure).  However, these parameters MAY be\n   adjusted or tuned for\
    \ specific link types or scenarios.\n   Once a host and gateway have established\
    \ a registration using either\n   TCP or UDP, they may not switch between the\
    \ two protocols for the\n   duration of the registration.  The decision of whether\
    \ to use TCP or\n   UDP is made by the client, and is determined by the transport\n\
    \   protocol of the first packet sent by a client in a successful\n   registration\
    \ procedure.\n"
- title: 6.  Host / Gateway Relationships
  contents:
  - "6.  Host / Gateway Relationships\n   An RSIP host can be in exactly one of three\
    \ fundamental relationships\n   with respect to an RSIP gateway:\n   Unregistered:\
    \ The RSIP gateway does not know of the RSIP host's\n      existence, and it will\
    \ not forward or deliver globally addressed\n      packets on behalf of the host.\
    \  The only valid RSIP-related action\n      for an RSIP host to perform in this\
    \ state is to request\n      registration with an RSIP gateway.\n   Registered:\
    \ The RSIP gateway knows of the RSIP host and has assigned\n      it a client\
    \ ID and has specified the flow policies that it\n      requires of the host.\
    \  However, no resources, such as addresses or\n      ports, have been allocated\
    \ to the host, and the gateway will not\n      forward or deliver globally addressed\
    \ packets on behalf of the\n      host.  All registrations have an associated\
    \ lease time.  If this\n      lease time expires, the RSIP host automatically\
    \ reverts to the\n      unregistered state.\n   Assigned: The RSIP gateway has\
    \ granted one or more bindings of\n      resources to the host.  The gateway will\
    \ forward and deliver\n      globally addressed packets on behalf of the host.\
    \  Each binding\n      has an associated lease time.  If this lease time expires,\
    \ the\n      binding is automatically revoked.\n   Architectures in which an RSIP\
    \ host is simultaneously registered with\n   more than one RSIP gateway are possible.\
    \  In such cases, an RSIP host\n   may be in different relationships with different\
    \ RSIP gateways at the\n   same time.\n   An RSIP gateway MAY redirect an RSIP\
    \ host to use a tunnel endpoint\n   for data traffic that is not the RSIP gateway\
    \ itself, or perhaps is a\n   different interface on the RSIP gateway.  This is\
    \ done by specifying\n   the tunnel endpoint's address as part of an assignment.\
    \  In such an\n   architecture, it is desirable (though not necessary) for the\
    \ RSIP\n   gateway to have a method with which to notify the tunnel endpoint of\n\
    \   assignments, and the expiration status of these assignments.\n   Lease times\
    \ for bindings and registrations are managed as follows.\n   All lease times are\
    \ given in units of seconds from the current time,\n   indicating a time in the\
    \ future at which the lease will expire.\n   These expiration times are used in\
    \ the ensuing discussion.\n   An initial expiration time (R) is given to a registration.\
    \  Under\n   this registration, multiple bindings may be established, each with\n\
    \   their own expiration times (B1, B2, ...).  When each binding is\n   established\
    \ or extended, the registration expiration time is adjusted\n   so that the registration\
    \ will last at least as long as the longest\n   lease.  In other words, when binding\
    \ Bi is established or extended,\n   the following calculation is performed: R\
    \ = max(R, Bi).\n   Under this scheme, a registration will never expire while\
    \ any\n   binding's lease is still valid.  However, a registration may expire\n\
    \   when the last binding's lease expires, or at some point thereafter.\n"
- title: 7.  Gateway Flow Policy and State
  contents:
  - "7.  Gateway Flow Policy and State\n   Since an RSIP gateway is likely to reside\
    \ on the boundary between two\n   or more different administrative domains, it\
    \ is desirable to enable\n   an RSIP gateway to be able to enforce flow-based\
    \ policy.  In other\n   words, an RSIP gateway should have the ability to explicitly\
    \ control\n   which local addresses and ports are used to communicate with remote\n\
    \   addresses and ports.\n   In the following, macro-flow policy refers to controlling\
    \ flow policy\n   at the granularity level of IP addresses, while micro-flow policy\n\
    \   refers to controlling flow policy at the granularity of IP address\n   and\
    \ port tuples.  Of course there may be no policy at all, which\n   indicates that\
    \ the RSIP gateway does not care about the flow\n   parameters used by RSIP hosts.\
    \  We consider two levels of local flow\n   policy and three levels of remote\
    \ flow policy.\n"
- title: 7.1.  Local Flow Policy
  contents:
  - "7.1.  Local Flow Policy\n   Local flow policy determines the granularity of control\
    \ that an RSIP\n   gateway has over the local addressing parameters that an RSIP\
    \ host\n   uses for particular sessions.\n   Since an RSIP host must use at least\
    \ an IP address allocated by the\n   gateway, the loosest level of local flow\
    \ policy is macro-flow based.\n   Under local macro-flow policy, an RSIP host\
    \ is allocated an IP\n   address (RSA-IP) or an IP address and one or more ports\
    \ to use with\n   it (RSAP-IP).  However, the host may use the ports as it desires\
    \ for\n   establishing sessions with public hosts.\n   Under micro-flow policy,\
    \ a host is allocated exactly one port at a\n   time.  The host may request more\
    \ ports, also one at a time.  This\n   policy gives the gateway very tight control\
    \ over local port use,\n   although it affords the host less flexibility.\n  \
    \ Note that only local macro-flow policy can be used with RSA-IP, while\n   either\
    \ local macro-flow or local micro-flow policy may be used with\n   RSAP-IP.\n\
    \   Examples of how RSIP flow policy operates are given in Appendix C.\n"
- title: 7.2.  Remote Flow Policy
  contents:
  - "7.2.  Remote Flow Policy\n   Remote flow policy determines the granularity of\
    \ control that an RSIP\n   gateway has over the remote (public) hosts with which\
    \ an RSIP host\n   communicates.  In particular, remote flow policy dictates what\
    \ level\n   of detail that a host must specify addressing parameters of a remote\n\
    \   host or application before the RSIP gateway allows the host to\n   communicate\
    \ with that host or application.\n   The simplest and loosest form of flow policy\
    \ is no policy at all.  In\n   other words, the RSIP gateway allocates addressing\
    \ parameters to the\n   host, and the host may use these parameters to communicate\
    \ with any\n   remote host, without explicitly notifying the gateway.\n   Macro-flow\
    \ policy requires that the host identify the remote address\n   of the host that\
    \ it wishes to communicate with as part of its request\n   for local addressing\
    \ parameters.  If the request is granted, the host\n   MUST use the specified\
    \ local parameters only with the remote address\n   specified, and MUST NOT communicate\
    \ with the remote address using any\n   local parameters but the ones allocated.\
    \  However, the host may\n   contact any port number at the remote host without\
    \ explicitly\n   notifying the gateway.\n   Micro-flow policy requires that the\
    \ host identify the remote address\n   and port of the host that it wishes to\
    \ communicate with as part of\n   its request for local addressing parameters.\
    \  If the request is\n   granted, the host MUST use the specified local parameters\
    \ only with\n   the remote address and port specified, and MUST NOT communicate\
    \ with\n   the remote address and port using any local parameters but the ones\n\
    \   allocated.\n   Remote flow policy is implemented in both the ingress and egress\n\
    \   directions, with respect to the location of the RSIP gateway.\n"
- title: 7.3.  Gateway State
  contents:
  - "7.3.  Gateway State\n   An RSIP gateway must maintain state for all RSIP hosts\
    \ and their\n   assigned resources.  The amount and type of state maintained depends\n\
    \   on the local and remote flow policy.  The required RSIP gateway state\n  \
    \ will vary based on the RSIP method, but will always include the\n   chosen method's\
    \ demultiplexing parameters.\n"
- title: 7.3.1.  RSA-IP State
  contents:
  - "7.3.1.  RSA-IP State\n   An RSIP gateway serving an RSIP host using the RSA-IP\
    \ method MUST\n   maintain the following minimum state to ensure proper mapping\
    \ of\n   incoming packets to RSIP hosts:\n      -  Host's private address\n  \
    \    -  Host's assigned public address(es)\n"
- title: 7.3.2.  RSAP-IP State
  contents:
  - "7.3.2.  RSAP-IP State\n   An RSIP gateway serving an RSIP host using the RSAP-IP\
    \ method MUST\n   maintain the following minimum state to ensure proper mapping\
    \ of\n   incoming packets to RSIP hosts:\n      -  Host's private address\n  \
    \    -  Host's assigned public address(es)\n      -  Host's assigned port(s) per\
    \ address\n"
- title: 7.3.3.  Flow State
  contents:
  - "7.3.3.  Flow State\n   Regardless of whether the gateway is using RSA-IP or RSAP-IP,\n\
    \   additional state is necessary if either micro-flow based or macro-\n   flow\
    \ based remote policy is used.\n   If the gateway is using macro-flow based remote\
    \ policy, the following\n   state must be maintained:\n      -  Remote host's\
    \ address\n   If the gateway is using micro-flow based remote policy, the following\n\
    \   state must be maintained:\n      -  Remote host's address\n      -  Remote\
    \ host's port\n   More state MAY be used by an RSIP gateway if desired.  For example,\n\
    \   ToS/DS bytes may be recorded in order to facilitate quality of\n   service\
    \ support.\n"
- title: 8.  Parameter Specification and Formats
  contents:
  - "8.  Parameter Specification and Formats\n   In this section we define the formats\
    \ for RSIP parameters.  Each RSIP\n   message contains one or more parameters\
    \ that encode the information\n   passed between the host and gateway.  The general\
    \ format of all\n   parameters is TLV (type-length-value) consisting of a 1-byte\
    \ type\n   followed by a 2-byte length followed by a 'length' byte value as\n\
    \   shown below.\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \   Type      |            Length             |     Value     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Value ...\n   +-+-+-+-+-+-+-+-+-+-+-+\n   The value field may be divided\
    \ into a number of other fields as per\n   the type of the parameter.  Note that\
    \ the length field encodes the\n   number of bytes in the value field, NOT the\
    \ overall number of bytes\n   in the parameter.\n"
- title: 8.1.  Address
  contents:
  - "8.1.  Address\n    0                   1                   2                \
    \   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   \
    \ Type = 1   |            Length             |    Addrtype   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Address...\n   +-+-+-+-+-+-+-+-+-+-+-+\n   The address parameter contains\
    \ addressing information, either an IPv4\n   address or netmask, an IPv6 address\
    \ or netmask, or a fully qualified\n   domain name (FQDN).  The Addrtype field\
    \ is 1 byte in length,\n   indicating the type of address.\n             Addrtype\
    \       Length of address field (in bytes)\n             ----           --------------------------------\n\
    \      0      Reserved       0\n      1      IPv4           4\n      2      IPv4\
    \ netmask   4\n      3      IPv6           16\n      4      FQDN           varies\n\
    \   For FQDN (Fully qualified domain name), the length of the address\n   field\
    \ will be one less than the value of the length field, and the\n   name will be\
    \ represented as an ASCII string (no terminating\n   character).\n   In some cases,\
    \ it is necessary to specify a \"don't care\" value for an\n   address.  This\
    \ is signified by a setting the length field to 1 and\n   omitting the value field.\n\
    \   It is not valid for a host to request an address with an FQDN type as\n  \
    \ its local address (See specification of ASSIGN_REQUEST_RSA-IP and\n   ASSIGN_REQUEST_RSAP-IP,\
    \ below).\n"
- title: 8.2.  Ports
  contents:
  - "8.2.  Ports\n    0                   1                   2                  \
    \ 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type = 2   |            Length             |     Number    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Port number         |  ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The ports parameter encodes zero or more TCP or UDP ports.  When a\n   single\
    \ port is specified, the value of the number field is 1 and\n   there is one port\
    \ field following the number field.  When more than\n   one port is specified,\
    \ the value of the number field will indicate\n   the total number of ports contained,\
    \ and the parameter may take one\n   of two forms.  If there is one port field,\
    \ the ports specified are\n   considered to be contiguous starting at the port\
    \ number specified in\n   the port field.  Alternatively, there may be a number\
    \ of port fields\n   equal to the value of the number field.  The number of port\
    \ fields\n   can be extrapolated from the length field.\n   In some cases, it\
    \ is necessary to specify a don't care value for one\n   or more ports (e.g.,\
    \ when a client application is using ephemeral\n   source ports).  This is accomplished\
    \ by setting the length field to\n   1, setting the number field to the number\
    \ of ports necessary, and\n   omitting all port fields.  The value of the number\
    \ field MUST be\n   greater than or equal to one.\n   If micro-flow based policy\
    \ applies to a given ports parameter, it\n   MUST contain exactly one port field.\n"
- title: 8.3.  Lease Time
  contents:
  - "8.3.  Lease Time\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 3   |          Length = 4           |   Lease time  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   Lease time                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The lease time parameter specifies the length, in seconds, of an\n   RSIP\
    \ host registration or parameter binding.\n"
- title: 8.4.  Client ID
  contents:
  - "8.4.  Client ID\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 4   |          Length = 4           |   Client ID   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Client ID                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The client ID parameter specifies an RSIP client ID.  Client ID's\n   by an\
    \ RSIP gateway to differentiate RSIP hosts.\n"
- title: 8.5.  Bind ID
  contents:
  - "8.5.  Bind ID\n    0                   1                   2                \
    \   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |   \
    \ Type = 5   |          Length = 4           |    Bind ID    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Bind ID                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The bind ID parameter specifies an RSIP bind ID.  Bind ID's are used\n   by\
    \ RSIP hosts and gateways to differentiate an RSIP host's bindings.\n"
- title: 8.6.  Tunnel Type
  contents:
  - "8.6.  Tunnel Type\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 6   |          Length = 1           |  Tunnel type  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The tunnel type parameter specifies the type of tunnel used between\n   an\
    \ RSIP host and an RSIP gateway.  Defined tunnel types are:\n             Tunnel\
    \ Type\n             -----------\n      0      Reserved\n      1      IP-IP\n\
    \      2      GRE\n      3      L2TP\n"
- title: 8.7.  RSIP Method
  contents:
  - "8.7.  RSIP Method\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 7   |          Length = 1           |  RSIP method  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The RSIP method parameter specifies an RSIP method.  Defined RSIP\n   methods\
    \ are:\n             RSIP method\n             -----------\n      0      Reserved\n\
    \      1      RSA-IP\n      2      RSAP-IP\n"
- title: 8.8.  Error
  contents:
  - "8.8.  Error\n    0                   1                   2                  \
    \ 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type = 8   |          Length = 2           |     Error     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Error     |\n   +-+-+-+-+-+-+-+-+\n   The error parameter specifies\
    \ an error.  The currently defined error\n   values are presented in Appendix\
    \ A.\n"
- title: 8.9.  Flow Policy
  contents:
  - "8.9.  Flow Policy\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 9   |          Length = 2           |     Local     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Remote     |\n   +-+-+-+-+-+-+-+-+\n   The flow policy parameter specifies\
    \ both the local and remote flow\n   policy.\n   Defined local flow policies are:\n\
    \             Local Flow Policy\n             -----------------\n      0     \
    \ Reserved\n      1      Macro flows\n      2      Micro flows\n   Defined remote\
    \ flow policies are:\n             Remote Flow Policy\n             ------------------\n\
    \      0      Reserved\n      1      Macro flows\n      2      Micro flows\n \
    \     3      No policy\n"
- title: 8.10.  Indicator
  contents:
  - "8.10.  Indicator\n    0                   1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \  Type = 10  |          Length = 2           |     Value     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Value     |\n   +-+-+-+-+-+-+-+-+\n   An indicator parameter is a general-purpose\
    \ parameter, the use of\n   which is defined by the message that it appears in.\
    \  An RSIP message\n   that uses an indicator parameter MUST define the meaning\
    \ and\n   interpretation of all of the indicator's possible values.\n"
- title: 8.11.  Message Counter
  contents:
  - "8.11.  Message Counter\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type = 11  |          Length = 4           |     Counter   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Counter                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   A message counter parameter is used to mark RSIP messages with\n   sequentially-increasing\
    \ values.  Message counters MUST be used with\n   UDP, in order to facilitate\
    \ reliability.\n"
- title: 8.12.  Vendor Specific Parameter
  contents:
  - "8.12.  Vendor Specific Parameter\n    0                   1                 \
    \  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type = 12  |            Length             |    Vendor ID  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Vendor ID  |            Subtype            |    Value...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The vendor specific parameter is used to encode parameters that are\n   defined\
    \ by a particular vendor.  The vendor ID field is the vendor-\n   specific ID\
    \ assigned by IANA.  Subtypes are defined and used by each\n   vendor as necessary.\
    \  An RSIP host or gateway SHOULD silently ignore\n   vendor-specific messages\
    \ that it does not understand.\n"
- title: 9.  Message Types
  contents:
  - "9.  Message Types\n   RSIP messages consist of three mandatory fields, version,\
    \ message\n   type, and overall length, followed by one or more required\n   parameters,\
    \ followed in turn by zero or more optional parameters.  In\n   an RSIP message,\
    \ all required parameters MUST appear in the exact\n   order specified below.\
    \  Optional parameters MAY appear in any order.\n   Message format is shown below:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Version    |  Message type |         Overall length        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Parameters...\n   +-+-+-+-+-+-+-+-+-+-+\n   The version number field\
    \ is a single byte and specifies the RSIP\n   version number that is being used.\
    \  The current RSIP version number\n   is 1.\n   The message type field is a single\
    \ byte and specifies the message\n   contained in the current packet.  There may\
    \ be only one message per\n   packet.  Message types are given numerical assignments\
    \ in Appendix B.\n   The overall length field is two bytes and contains the number\
    \ of\n   bytes in the RSIP message, including the three mandatory fields.\n  \
    \ Most parameters are only allowed to appear once in each message.  The\n   exceptions\
    \ are as follows:\n      -  Multiple address parameters MUST appear in ASSIGN_REQUEST_RSA-\n\
    \         IP, ASSIGN_RESPONSE_RSA-IP, ASSIGN_REQUEST_RSAP-IP,\n         ASSIGN_RESPONSE_RSAP-IP,\
    \ LISTEN_REQUEST and LISTEN_RESPONSE.\n      -  Multiple ports parameters MUST\
    \ appear in ASSIGN_REQUEST_RSAP-\n         IP, ASSIGN_RESPONSE_RSAP-IP, LISTEN_REQUEST\
    \ and\n         LISTEN_RESPONSE.\n      -  Multiple RSIP method and tunnel type\
    \ parameters MAY appear in\n         RESISTER_RESPONSE.\n      -  Multiple address\
    \ parameters and multiple indicator parameters\n         MAY appear in QUERY_REQUEST\
    \ and QUERY_RESPONSE.\n   The following message types are defined in BNF.  Required\
    \ parameters\n   are enclosed in <> and MUST appear.  Optional parameters are\
    \ enclosed\n   in [] and MAY appear.  Not all message types need to be implemented\n\
    \   in order to be RSIP compliant.  For example, an RSIP host and/or\n   gateway\
    \ may not support LISTEN_REQUEST and LISTEN_RESPONSE, or may\n   only support\
    \ RSAP-IP and not RSA-IP.\n"
- title: 9.1.  ERROR_RESPONSE
  contents:
  - '9.1.  ERROR_RESPONSE

    '
- title: 9.1.1.  Description
  contents:
  - "9.1.1.  Description\n   An ERROR_RESPONSE is used to provide error messages from\
    \ an RSIP\n   gateway to an RSIP host.  Usually, errors indicate that the RSIP\n\
    \   gateway cannot or will not perform an action or allocate resources on\n  \
    \ behalf of the host.  If the error is related to a particular client\n   ID or\
    \ bind ID, these associated parameters MUST be included.\n   Multiple errors MAY\
    \ NOT be reported in the same ERROR_RESPONSE.  In\n   situations where more than\
    \ one error has occurred, the RSIP gateway\n   MUST choose only one error to report.\n"
- title: 9.1.2.  Format
  contents:
  - "9.1.2.  Format\n   <ERROR_RESPONSE> ::= <Version>\n                        <Message\
    \ Type>\n                        <Overall Length>\n                        <Error>\n\
    \                        [Message Counter]\n                        [Client ID]\n\
    \                        [Bind ID]\n"
- title: 9.1.3.  Behavior
  contents:
  - "9.1.3.  Behavior\n   An ERROR_RESPONSE message MUST only be transmitted by an\
    \ RSIP\n   gateway.  An RSIP host that detects an error in a message received\n\
    \   from an RSIP gateway MUST silently discard the message.  There are no\n  \
    \ error conditions that can be caused by an ERROR_RESPONSE.  An\n   ERROR_RESPONSE\
    \ is typically transmitted in response to a request from\n   an RSIP host, but\
    \ also may be transmitted asynchronously by an RSIP\n   gateway.\n"
- title: 9.2.  REGISTER_REQUEST
  contents:
  - '9.2.  REGISTER_REQUEST

    '
- title: 9.2.1.  Description
  contents:
  - "9.2.1.  Description\n   The REGISTER_REQUEST message is used by an RSIP host\
    \ to establish\n   registration with an RSIP gateway.  An RSIP host MUST register\
    \ before\n   it requests resources or services from an RSIP gateway.  Once an\
    \ RSIP\n   host has registered with an RSIP gateway, it may not register again\n\
    \   until it has de-registered from that gateway.\n"
- title: 9.2.2.  Format
  contents:
  - "9.2.2.  Format\n   <REGISTER_REQUEST> ::= <Version>\n                       \
    \   <Message Type>\n                          <Overall Length>\n             \
    \             [Message Counter]\n"
- title: 9.2.3.  Behavior
  contents:
  - "9.2.3.  Behavior\n   The following message-specific error conditions exist:\n\
    \      -  If the host is already registered with the gateway, the gateway\n  \
    \       MUST respond with an ERROR_RESPONSE containing the\n         ALREADY_REGISTERED\
    \ error and the RSIP host's client ID.\n      -  If the gateway's policy will\
    \ not allow the host to register,\n         the gateway MUST respond with an ERROR_RESPONSE\
    \ containing the\n         REGISTRATION_DENIED error.\n"
- title: 9.3.  REGISTER_RESPONSE
  contents:
  - '9.3.  REGISTER_RESPONSE

    '
- title: 9.3.1.  Description
  contents:
  - "9.3.1.  Description\n   The REGISTER_RESPONSE message is used by an RSIP gateway\
    \ to confirm\n   the registration of an RSIP host, and to provide a client ID,\
    \ flow\n   policy, and possibly a message counter and one or more RSIP methods\n\
    \   and/or tunnel types.\n"
- title: 9.3.2.  Format
  contents:
  - "9.3.2.  Format\n   <REGISTER_RESPONSE> ::= <Version>\n                      \
    \     <Message Type>\n                           <Overall Length>\n          \
    \                 <Client ID>\n                           <Lease time>\n     \
    \                      <Flow Policy>\n                           [Message Counter]\n\
    \                           [RSIP Method]...\n                           [Tunnel\
    \ Type]...\n"
- title: 9.3.3.  Behavior
  contents:
  - "9.3.3.  Behavior\n   An RSIP gateway MUST assign a different client ID to each\
    \ host that\n   is simultaneously registered with it.  The RSIP gateway MAY respond\n\
    \   with one or more RSIP methods and tunnel types that it supports.  If\n   an\
    \ RSIP method is not specified, RSAP-IP MUST be assumed.  If a\n   tunnel type\
    \ is not specified, IP-IP MUST be assumed.\n"
- title: 9.4.  DE-REGISTER_REQUEST
  contents:
  - '9.4.  DE-REGISTER_REQUEST

    '
- title: 9.4.1.  Description
  contents:
  - "9.4.1.  Description\n   The DE-REGISTER_REQUEST message is used by an RSIP host\
    \ to de-\n   register with an RSIP gateway.  If a host de-registers from the\n\
    \   assigned state, all of the host's bindings are revoked.  The host\n   SHOULD\
    \ NOT de-register from the unregistered state.\n"
- title: 9.4.2.  Format
  contents:
  - "9.4.2.  Format\n   <DE-REGISTER_REQUEST> ::= <Version>\n                    \
    \         <Message Type>\n                             <Overall Length>\n    \
    \                         <Client ID>\n                             [Message Counter]\n"
- title: 9.4.3.  Behavior
  contents:
  - "9.4.3.  Behavior\n   The following message-specific error conditions exist:\n\
    \      -  If the host is not registered with the gateway, the gateway\n      \
    \   MUST respond with an ERROR_RESPONSE containing the\n         REGISTER_FIRST\
    \ error.\n      -  If the message contains an incorrect client ID, the gateway\n\
    \         MUST respond with an ERROR_RESPONSE containing the\n         BAD_CLIENT_ID\
    \ error.\n   If there are no errors that result from this message, the gateway\n\
    \   MUST respond with an appropriate DE-REGISTER_RESPONSE.  Upon de-\n   registering\
    \ a host, an RSIP gateway must delete all binds associated\n   with that host\
    \ and return their resources to the pool of free\n   resources.  Once a host has\
    \ de-registered, it may not use any of the\n   RSIP gateway's resources without\
    \ registering again.\n"
- title: 9.5.  DE-REGISTER_RESPONSE
  contents:
  - '9.5.  DE-REGISTER_RESPONSE

    '
- title: 9.5.1.  Description
  contents:
  - "9.5.1.  Description\n   The DE-REGISTER_RESPONSE message is used by an RSIP gateway\
    \ to\n   confirm the de-registration of an RSIP host or to force an RSIP host\n\
    \   to relinquish all of its bindings and terminate its relationship with\n  \
    \ the RSIP gateway.  Upon receiving a DE-REGISTER_RESPONSE message, an\n   RSIP\
    \ host MUST stop all use of the resources that have been allocated\n   to it by\
    \ the gateway.\n"
- title: 9.5.2.  Format
  contents:
  - "9.5.2.  Format\n   <DE-REGISTER_RESPONSE> ::= <Version>\n                   \
    \           <Message Type>\n                              <Overall Length>\n \
    \                             <Client ID>\n                              [Message\
    \ Counter]\n"
- title: 9.5.3.  Behavior
  contents:
  - "9.5.3.  Behavior\n   An RSIP gateway MUST send a DE-REGISTER_RESPONSE in response\
    \ to a\n   valid DE-REGISTER_REQUEST.  An RSIP gateway MUST send a DE-\n   REGISTER_RESPONSE\
    \ to an RSIP host when that host's registration lease\n   time times out.  An\
    \ RSIP gateway SHOULD send a DE-REGISTER_RESPONSE\n   if it detects that it will\
    \ no longer be able to perform RSIP\n   functionality for a given host.  An RSIP\
    \ host MUST be ready to accept\n   a DE-REGISTER_RESPONSE at any moment.\n"
- title: 9.6.  ASSIGN_REQUEST_RSA-IP
  contents:
  - '9.6.  ASSIGN_REQUEST_RSA-IP

    '
- title: 9.6.1.  Description
  contents:
  - "9.6.1.  Description\n   The ASSIGN_REQUEST_RSA-IP message is used by an RSIP\
    \ host to request\n   resources to use with RSA-IP.  Note that RSA-IP cannot be\
    \ used in\n   combination with micro-flow based local policy.\n"
- title: 9.6.2.  Format
  contents:
  - "9.6.2.  Format\n   <ASSIGN_REQUEST_RSA-IP> ::= <Version>\n                  \
    \             <Message Type>\n                               <Overall Length>\n\
    \                               <Client ID>\n                               <Address\
    \ (local)>\n                               <Address (remote)>\n              \
    \                 <Ports (remote)>\n                               [Message Counter]\n\
    \                               [Lease Time]\n                               [Tunnel\
    \ Type]\n"
- title: 9.6.3.  Behavior
  contents:
  - "9.6.3.  Behavior\n   The RSIP host specifies two address parameters.  The RSIP\
    \ host may\n   request a particular local address by placing that address in the\n\
    \   first address parameter.  To indicate that it has no preference for\n   local\
    \ address, the RSIP host may place a \"don't care\" value in the\n   address parameter.\n\
    \   If macro-flow based remote policy is used, the host MUST specify the\n   remote\
    \ address that it will use this binding (if granted) to contact;\n   however,\
    \ the remote port number MAY remain unspecified.  If micro-\n   flow based remote\
    \ policy is used, the host MUST specify the remote\n   address and port number\
    \ that it will use this binding (if granted) to\n   contact.  If no flow policy\
    \ is used, the RSIP host may place a \"don't\n   care\" value in the value fields\
    \ of the respective address and ports\n   parameters.\n   The following message-specific\
    \ error conditions exist:\n      -  If the host is not registered with the gateway,\
    \ the gateway\n         MUST respond with an ERROR_RESPONSE containing the\n \
    \        REGISTER_FIRST error.\n      -  If the message contains an incorrect\
    \ client ID, the gateway\n         MUST respond with an ERROR_RESPONSE containing\
    \ the\n         BAD_CLIENT_ID error.\n      -  If the local address parameter\
    \ is a don't care value and the\n         RSIP gateway cannot allocate ANY addresses,\
    \ the RSIP gateway\n         MUST respond with an ERROR_RESPONSE containing the\n\
    \         LOCAL_ADDR_UNAVAILABLE error.\n      -  If the local address parameter\
    \ is not a don't care value there\n         are three possible error conditions:\n\
    \         o  If the RSIP gateway cannot allocate ANY addresses, it MUST\n    \
    \        respond with an ERROR_RESPONSE containing the\n            LOCAL_ADDR_UNAVAILABLE\
    \ error.\n         o  If the RSIP gateway cannot allocate the requested address\n\
    \            because it is in use, the RSIP gateway MUST respond with an\n   \
    \         ERROR_RESPONSE containing the LOCAL_ADDR_INUSE error.\n         o  If\
    \ the RSIP gateway cannot allocate the requested address\n            because\
    \ it is not allowed by policy, the RSIP gateway MUST\n            respond with\
    \ an ERROR_RESPONSE containing the\n            LOCAL_ADDR_UNALLOWED error.\n\
    \      -  If macro-flow based remote policy is used and the requested\n      \
    \   remote address is not allowed by the RSIP gateway's policy, the\n        \
    \ RSIP gateway MUST respond with an ERROR_RESPONSE containing the\n         REMOTE_ADDR_UNALLOWED\
    \ error.\n      -  If micro-flow based remote policy is used and the requested\n\
    \         remote address / port pair is not allowed by the RSIP gateway's\n  \
    \       policy, the RSIP gateway MUST respond with an ERROR_RESPONSE\n       \
    \  containing the REMOTE_ADDRPORT_UNALLOWED error.\n      -  If an unsupported\
    \ or unallowed tunnel type is specified, the\n         RSIP gateway MUST respond\
    \ with an ERROR_RESPONSE containing the\n         BAD_TUNNEL_TYPE error.\n   \
    \   -  If the host has not specified local or remote address or port\n       \
    \  information in enough detail, the RSIP gateway MUST respond\n         with\
    \ an ERROR_RESPONSE containing the FLOW_POLICY_VIOLATION\n         error.\n"
- title: 9.7.  ASSIGN_RESPONSE_RSA-IP
  contents:
  - '9.7.  ASSIGN_RESPONSE_RSA-IP

    '
- title: 9.7.1.  Description
  contents:
  - "9.7.1.  Description\n   The ASSIGN_RESPONSE_RSA-IP message is used by an RSIP\
    \ gateway to\n   deliver parameter assignments to an RSIP host using RSA-IP. \
    \ A host-\n   wise unique bind ID, lease time, and tunnel type must be provided\
    \ for\n   every assignment.\n"
- title: 9.7.2.  Format
  contents:
  - "9.7.2.  Format\n   <ASSIGN_RESPONSE_RSA-IP> ::= <Version>\n                 \
    \               <Message Type>\n                                <Overall Length>\n\
    \                                <Client ID>\n                               \
    \ <Bind ID>\n                                <Address (local)>\n             \
    \                   <Address (remote)>\n                                <Ports\
    \ (remote)>\n                                <Lease Time>\n                  \
    \              <Tunnel Type>\n                                [Address (tunnel\
    \ endpoint)]\n                                [Message Counter]\n"
- title: 9.7.3.  Behavior
  contents:
  - "9.7.3.  Behavior\n   If no remote flow policy is used, the RSIP gateway MUST\
    \ use \"don't\n   care\" values for the remote address and ports parameters. \
    \ If macro-\n   flow based remote policy is used, the remote address parameter\
    \ MUST\n   contain the address specified in the associated request, and the\n\
    \   remote ports parameter MUST contain a \"don't care\" value.  If micro-\n \
    \  flow based remote policy is used, the remote address and remote ports\n   parameters\
    \ MUST contain the address and port information specified in\n   the associated\
    \ request.\n   If the host detects an error or otherwise does not \"understand\"\
    \ the\n   gateway's response, it SHOULD send a FREE_REQUEST with the bind ID\n\
    \   from the said ASSIGN_RESPONSE_RSA-IP.  This will serve to help\n   synchronize\
    \ the states of the host and gateway.\n   The address of a tunnel endpoint that\
    \ is not the RSIP gateway MAY be\n   specified.  If this parameter is not specified,\
    \ the RSIP gateway MUST\n   be assumed to be the tunnel endpoint.\n"
- title: 9.8.  ASSIGN_REQUEST_RSAP-IP
  contents:
  - '9.8.  ASSIGN_REQUEST_RSAP-IP

    '
- title: 9.8.1.  Description
  contents:
  - "9.8.1.  Description\n   The ASSIGN_REQUEST_RSAP-IP message is used by an RSIP\
    \ host to request\n   resources to use with RSAP-IP.  The RSIP host specifies\
    \ two address\n   and two port parameters, the first of each, respectively, refer\
    \ to\n   the local address and port(s) that will be used, and the second of\n\
    \   each, respectively, refer to the remote address and port(s) that will\n  \
    \ be contacted.\n"
- title: 9.8.2.  Format
  contents:
  - "9.8.2.  Format\n   <ASSIGN_REQUEST_RSAP-IP> ::= <Version>\n                 \
    \               <Message Type>\n                                <Overall Length>\n\
    \                                <Client ID>\n                               \
    \ <Address (local)>\n                                <Ports (local)>\n       \
    \                         <Address (remote)>\n                               \
    \ <Ports (remote)>\n                                [Message Counter]\n      \
    \                          [Lease Time]\n                                [Tunnel\
    \ Type]\n"
- title: 9.8.3.  Behavior
  contents:
  - "9.8.3.  Behavior\n   An RSIP host may request a particular local address by placing\
    \ that\n   address in the value field of the first address parameter.  The RSIP\n\
    \   host may request particular local ports by placing them in the first\n   port\
    \ parameter.  To indicate that it has no preference for local\n   address or ports,\
    \ the RSIP host may place a \"don't care\" value in the\n   respective address\
    \ or ports parameters.\n   If macro-flow based remote policy is used, the host\
    \ MUST specify the\n   remote address that it will use this binding (if granted)\
    \ to contact;\n   however, the remote port number(s) MAY remain unspecified. \
    \ If\n   micro-flow based remote policy is used, the host MUST specify the\n \
    \  remote address and port number(s) that it will use this binding (if\n   granted)\
    \ to contact.  If no flow policy is used, the RSIP host may\n   place a value\
    \ of all 0's in the value fields of the respective\n   address or port parameters.\n\
    \   The following message-specific error conditions exist:\n      -  If the host\
    \ is not registered with the gateway, the gateway\n         MUST respond with\
    \ an ERROR_RESPONSE containing the\n         REGISTER_FIRST error.\n      -  If\
    \ the message contains an incorrect client ID, the gateway\n         MUST respond\
    \ with an ERROR_RESPONSE containing the\n         BAD_CLIENT_ID error.\n     \
    \ -  If the local address parameter is a don't care value and the\n         RSIP\
    \ gateway cannot allocate ANY addresses, the RSIP gateway\n         MUST respond\
    \ with an ERROR_RESPONSE containing the\n         LOCAL_ADDR_UNAVAILABLE error.\n\
    \      -  If the local address parameter is not a don't care value there\n   \
    \      are five possible error conditions:\n         o  If the RSIP gateway cannot\
    \ allocate ANY addresses, it MUST\n            respond with an ERROR_RESPONSE\
    \ containing the\n            LOCAL_ADDR_UNAVAILABLE error.\n         o  If the\
    \ RSIP gateway cannot allocate the requested address\n            because it is\
    \ in use, the RSIP gateway MUST respond with an\n            ERROR_RESPONSE containing\
    \ the LOCAL_ADDR_INUSE error.\n         o  If the RSIP gateway cannot allocate\
    \ the requested address\n            because it is not allowed by policy, the\
    \ RSIP gateway MUST\n            respond with an ERROR_RESPONSE containing the\n\
    \            LOCAL_ADDR_UNALLOWED error.\n         o  If the RSIP gateway cannot\
    \ allocate a requested address /\n            port tuple because it is in use,\
    \ the RSIP gateway MUST\n            respond with an ERROR_RESPONSE containing\
    \ the\n            LOCAL_ADDRPORT_INUSE error.\n         o  If the RSIP gateway\
    \ cannot allocate a requested address /\n            port tuple because it is\
    \ not allowed by policy, the RSIP\n            gateway MUST respond with an ERROR_RESPONSE\
    \ containing the\n            LOCAL_ADDRPORT_UNALLOWED error.\n      -  If the\
    \ RSIP host requests a number of ports (greater that one),\n         but does\
    \ not specify particular port numbers (i.e., uses \"don't\n         care\" values)\
    \ the RSIP gateway cannot grant the entire request,\n         the RSIP gateway\
    \ MUST return an ERROR_RESPONSE containing the\n         LOCAL_ADDRPORT_UNAVAILABLE\
    \ error.\n      -  If macro-flow based remote policy is used and the requested\n\
    \         remote address is not allowed by the RSIP gateway's policy, the\n  \
    \       RSIP gateway MUST respond with an ERROR_RESPONSE containing the\n    \
    \     REMOTE_ADDR_UNALLOWED error.\n      -  If micro-flow based remote policy\
    \ is used and the requested\n         remote address / port pair is not allowed\
    \ by the RSIP gateway's\n         policy, the RSIP gateway MUST respond with an\
    \ ERROR_RESPONSE\n         containing the REMOTE_ADDRPORT_UNALLOWED error.\n \
    \     -  If an unsupported or unallowed tunnel type is specified, the\n      \
    \   RSIP gateway MUST respond with an ERROR_RESPONSE containing the\n        \
    \ BAD_TUNNEL_TYPE error.\n      -  If the host has not specified local or remote\
    \ address or port\n         information in enough detail, the RSIP gateway MUST\
    \ respond\n         with an ERROR_RESPONSE containing the FLOW_POLICY_VIOLATION\n\
    \         error.\n"
- title: 9.9.  ASSIGN_RESPONSE_RSAP-IP
  contents:
  - '9.9.  ASSIGN_RESPONSE_RSAP-IP

    '
- title: 9.9.1.  Description
  contents:
  - "9.9.1.  Description\n   The ASSIGN_RESPONSE_RSAP-IP message is used by an RSIP\
    \ gateway to\n   deliver parameter assignments to an RSIP host.  A host-wise unique\n\
    \   bind ID, lease time, and tunnel type must be provided for every\n   assignment.\n"
- title: 9.9.2.  Format
  contents:
  - "9.9.2.  Format\n   <ASSIGN_RESPONSE_RSAP-IP> ::= <Version>\n                \
    \                 <Message Type>\n                                 <Overall Length>\n\
    \                                 <Client ID>\n                              \
    \   <Bind ID>\n                                 <Address (local)>\n          \
    \                       <Ports (local)>\n                                 <Address\
    \ (remote)>\n                                 <Ports (remote)>\n             \
    \                    <Lease Time>\n                                 <Tunnel Type>\n\
    \                                 [Address (tunnel endpoint)]\n              \
    \                   [Message Counter]\n"
- title: 9.9.3.  Behavior
  contents:
  - "9.9.3.  Behavior\n   Regardless of local flow policy, a local address and port(s)\
    \ MUST be\n   assigned to the host.  If macro-flow based local policy is used,\
    \ the\n   host is assigned an address and one or more ports.  If micro-flow\n\
    \   based local policy is used, the host is assigned an address and\n   exactly\
    \ one port.\n   If no remote flow policy is used, the RSIP gateway MUST use \"\
    don't\n   care\" values for the remote address and ports parameters.  If macro-\n\
    \   flow based remote policy is used, the remote address parameter MUST\n   contain\
    \ the address specified in the associated request, and the\n   remote ports parameter\
    \ must contain a \"don't care\" value.  If micro-\n   flow based remote policy\
    \ is used, the remote address and remote ports\n   parameters MUST contain the\
    \ address and port information specified in\n   the associated request.\n   If\
    \ the host detects an error or otherwise does not \"understand\" the\n   gateway's\
    \ response, it SHOULD send a FREE_REQUEST with the bind ID\n   from the said ASSIGN_RESPONSE_RSAP-IP.\
    \  This will serve to help\n   synchronize the states of the host and gateway.\n\
    \   The address of a tunnel endpoint that is not the RSIP gateway MAY be\n   specified.\
    \  If this parameter is not specified, the RSIP gateway MUST\n   be assumed to\
    \ be the tunnel endpoint.\n"
- title: 9.10.  EXTEND_REQUEST
  contents:
  - '9.10.  EXTEND_REQUEST

    '
- title: 9.10.1.  Description
  contents:
  - "9.10.1.  Description\n   The EXTEND_REQUEST message is used to request a lease\
    \ extension to a\n   current bind.  It may be used with both RSA-IP and RSAP-IP.\
    \  The host\n   MUST specify its client ID and the bind ID in question, and it\
    \ MAY\n   suggest a lease time to the gateway.\n"
- title: 9.10.2.  Format
  contents:
  - "9.10.2.  Format\n   <EXTEND_REQUEST> ::= <Version>\n                        <Message\
    \ Type>\n                        <Overall Length>\n                        <Client\
    \ ID>\n                        <Bind ID>\n                        [Lease Time]\n\
    \                        [Message Counter]\n"
- title: 9.10.3.  Behavior
  contents:
  - "9.10.3.  Behavior\n   The following message-specific error conditions exist:\n\
    \      -  If the host is not registered with the gateway, the gateway\n      \
    \   MUST respond with an ERROR_RESPONSE containing the\n         REGISTER_FIRST\
    \ error.\n      -  If the message contains an incorrect client ID, the gateway\n\
    \         MUST respond with an ERROR_RESPONSE containing the\n         BAD_CLIENT_ID\
    \ error.\n      -  If the message contains an incorrect bind ID, the gateway MUST\n\
    \         respond with an ERROR_RESPONSE containing the BAD_BIND_ID\n        \
    \ error.\n   If the RSIP gateway grants an extension to the host's lease, it MUST\n\
    \   RESPOND with an appropriate EXTEND_RESPONSE message.  If the lease is\n  \
    \ not renewed, the RSIP gateway MAY let it implicitly expire by doing\n   nothing\
    \ or make it explicitly expire by sending an appropriate\n   FREE_RESPONSE message.\n"
- title: 9.11.  EXTEND_RESPONSE
  contents:
  - '9.11.  EXTEND_RESPONSE

    '
- title: 9.11.1.  Description
  contents:
  - "9.11.1.  Description\n   The EXTEND_RESPONSE message is used by an RSIP gateway\
    \ to grant a\n   requested lease extension.  The gateway MUST specify the client\
    \ ID of\n   the host, the bind ID in question, and the new assigned lease time.\n"
- title: 9.11.2.  Format
  contents:
  - "9.11.2.  Format\n   <EXTEND_RESPONSE> ::= <Version>\n                       \
    \  <Message Type>\n                         <Overall Length>\n               \
    \          <Client ID>\n                         <Bind ID>\n                 \
    \        <Lease Time>\n                         [Message Counter]\n"
- title: 9.11.3.  Behavior
  contents:
  - "9.11.3.  Behavior\n   The RSIP gateway will determine lease time as per its local\
    \ policy.\n   The returned time is to be interpreted as the number of seconds\n\
    \   before the lease expires, counting from the time at which the message\n  \
    \ is sent/received.\n"
- title: 9.12.  FREE_REQUEST
  contents:
  - '9.12.  FREE_REQUEST

    '
- title: 9.12.1.  Description
  contents:
  - "9.12.1.  Description\n   The FREE_REQUEST message is used by an RSIP host to\
    \ free a binding.\n   The given bind ID identifies the bind to be freed.  Resources\
    \ may\n   only be freed using the granularity of a bind ID.\n"
- title: 9.12.2.  Format
  contents:
  - "9.12.2.  Format\n   <FREE_REQUEST> ::= <Version>\n                      <Message\
    \ Type>\n                      <Overall Length>\n                      <Client\
    \ ID>\n                      <Bind ID>\n                      [Message Counter]\n"
- title: 9.12.3.  Behavior
  contents:
  - "9.12.3.  Behavior\n   The following message-specific error conditions exist:\n\
    \      -  If the host is not registered with the gateway, the gateway\n      \
    \   MUST respond with an ERROR_RESPONSE containing the\n         REGISTER_FIRST\
    \ error.\n      -  If the message contains an incorrect client ID, the gateway\n\
    \         MUST respond with an ERROR_RESPONSE containing the\n         BAD_CLIENT_ID\
    \ error.\n      -  If the message contains an incorrect bind ID, the gateway MUST\n\
    \         respond with an ERROR_RESPONSE containing the BAD_BIND_ID\n        \
    \ error.\n   If a host receives an error in response to a FREE_REQUEST, this may\n\
    \   indicate that the host and gateway's states have become\n   unsynchronized.\
    \  Therefore, the host SHOULD make an effort to\n   resynchronize, such as freeing\
    \ resources then re-requesting them, or\n   de-registering then re-registering.\n"
- title: 9.13.  FREE_RESPONSE
  contents:
  - '9.13.  FREE_RESPONSE

    '
- title: 9.13.1.  Description
  contents:
  - "9.13.1.  Description\n   The FREE_RESPONSE message is used by an RSIP gateway\
    \ to acknowledge a\n   FREE_REQUEST sent by an RSIP host, and to asynchronously\
    \ deallocate\n   resources granted to an RSIP host.\n"
- title: 9.13.2.  Format
  contents:
  - "9.13.2.  Format\n   <FREE_RESPONSE> ::= <Version>\n                       <Message\
    \ Type>\n                       <Overall Length>\n                       <Client\
    \ ID>\n                       <Bind ID>\n                       [Message Counter]\n"
- title: 9.13.3.  Behavior
  contents:
  - "9.13.3.  Behavior\n   An RSIP host must always be ready to accept a FREE_RESPONSE,\
    \ even if\n   its lease on the specified bind ID is not yet expired.\n"
- title: 9.14.  QUERY_REQUEST
  contents:
  - '9.14.  QUERY_REQUEST

    '
- title: 9.14.1.  Description
  contents:
  - "9.14.1.  Description\n   A QUERY_REQUEST message is used by an RSIP host to ask\
    \ an RSIP\n   gateway whether or not a particular address or network is local\
    \ or\n   remote.  The host uses this information to determine whether to\n   contact\
    \ the host(s) directly (in the local case), or via RSIP (in the\n   remote case).\n\
    \   This message defines an indicator parameter with a 1-byte value field\n  \
    \ and 2 defined values:\n      -  1 address\n      -  2 network\n"
- title: 9.14.2.  Format
  contents:
  - "9.14.2.  Format\n   <QUERY_REQUEST> ::= <Version>\n                       <Message\
    \ Type>\n                       <Overall Length>\n                       <Client\
    \ ID>\n                       [Message Counter]\n                       [Address\
    \ Tuple]...\n                       [Network Tuple]...\n   where\n   <Address\
    \ Tuple> ::= <Indicator (address)>\n                       <Address>\n   <Network\
    \ Tuple> ::= <Indicator (network)>\n                       <Address (network)>\n\
    \                       <Address (netmask)>\n"
- title: 9.14.3.  Behavior
  contents:
  - "9.14.3.  Behavior\n   One or more address or network tuples may be specified.\
    \  Each tuple\n   encodes a request regarding the locality (local or remote) of\
    \ the\n   encoded address or network.  If no tuple is specified, the RSIP\n  \
    \ gateway should interpret the message as a request for all tuples that\n   it\
    \ is willing to provide.  Note that the FQDN form of the address\n   parameter\
    \ cannot be used to specify the address of a network, and\n   only the netmask\
    \ form of the address parameter can be used to specify\n   the netmask of a network.\n\
    \   If an RSIP gateway cannot determine whether a queried host or network\n  \
    \ is local or remote, it SHOULD transmit a QUERY_RESPONSE with no\n   response\
    \ specified for the said host or network.\n   The following message-specific error\
    \ conditions exist:\n      -  If the host is not registered with the gateway,\
    \ the gateway\n         MUST respond with an ERROR_RESPONSE containing the\n \
    \        REGISTER_FIRST error.\n      -  If the message contains an incorrect\
    \ client ID, the gateway\n         MUST respond with an ERROR_RESPONSE containing\
    \ the\n         BAD_CLIENT_ID error.\n"
- title: 9.15.  QUERY_RESPONSE
  contents:
  - '9.15.  QUERY_RESPONSE

    '
- title: 9.15.1.  Description
  contents:
  - "9.15.1.  Description\n   A QUERY_RESPONSE message is used by an RSIP gateway\
    \ to answer a\n   QUERY_REQUEST from an RSIP host.\n   This message defines an\
    \ indicator parameter with a 1-byte value field\n   and 4 defined values:\n  \
    \    -  1 local address\n      -  2 local network\n      -  3 remote address\n\
    \      -  4 remote network\n"
- title: 9.15.2.  Format
  contents:
  - "9.15.2.  Format\n   <QUERY_RESPONSE> ::= <Version>\n                        <Message\
    \ Type>\n                        <Overall Length>\n                        <Client\
    \ ID>\n                        [Message Counter]\n                        [Local\
    \ Address Tuple]...\n                        [Local Network Tuple]...\n      \
    \                  [Remote Address Tuple]...\n                        [Remote\
    \ Network Tuple]...\n   where\n   <Local Address Tuple> ::= <Indicator (local\
    \ address)>\n                             <Address>\n   <Local Network Tuple>\
    \ ::= <Indicator (local network)>\n                             <Address (network)>\n\
    \                             <Address (netmask)>\n   <Remote Address Tuple> ::=\
    \ <Indicator (remote address)>\n                              <Address>\n   <Remote\
    \ Network Tuple> ::= <Indicator (remote network)>\n                          \
    \    <Address (network)>\n                              <Address (netmask)>\n"
- title: 9.15.3.  Behavior
  contents:
  - "9.15.3.  Behavior\n   An RSIP gateway has some leeway in how it responds to a\n\
    \   QUERY_REQUEST.  It may just provide the information requested, if it\n   can\
    \ provide such information.  It may provide its complete list of\n   address and\
    \ networks, in order to minimize the number of requests\n   that the host needs\
    \ to perform in the future.  How an RSIP gateway\n   responds may depend on network\
    \ traffic considerations as well.\n   If an RSIP gateway sends a QUERY_RESPONSE\
    \ that does not contain any\n   tuples, or a QUERY_RESPONSE that does not contain\
    \ a tuple that\n   applies to an associated tuple in the associated QUERY_REQUEST,\
    \ this\n   should be interpreted that the RSIP gateway does not know whether the\n\
    \   queried host or network is local or remote.  Appropriate host\n   behavior\
    \ upon receipt of such a message is to assume that the queried\n   host or network\
    \ is remote.\n   Note that an RSIP gateway is not expected to maintain a complete\
    \ list\n   of all remote hosts and networks.  In fact, a typical RSIP gateway\n\
    \   will only maintain a list of the networks and hosts that it knows are\n  \
    \ local (private with respect to the RSIP host).\n"
- title: 9.16.  LISTEN_REQUEST
  contents:
  - '9.16.  LISTEN_REQUEST

    '
- title: 9.16.1.  Description
  contents:
  - "9.16.1.  Description\n   A LISTEN_REQUEST message is sent by an RSIP host that\
    \ wants to\n   register a service on a particular address and port number.  The\
    \ host\n   must include its client ID, local address parameter and ports\n   parameters,\
    \ and remote address and ports parameters.  The client MAY\n   suggest a lease\
    \ time and one or more tunnel types.\n"
- title: 9.16.2.  Format
  contents:
  - "9.16.2.  Format\n   <LISTEN_REQUEST> ::= <Version>\n                        <Message\
    \ Type>\n                        <Overall Length>\n                        <Client\
    \ ID>\n                        <Address (local)>\n                        <Ports\
    \ (local)>\n                        <Address (remote)>\n                     \
    \   <Ports (remote)>\n                        [Message Counter]\n            \
    \            [Lease Time]\n                        [Tunnel Type]...\n"
- title: 9.16.3.  Behavior
  contents:
  - "9.16.3.  Behavior\n   If the host wants to listen on a particular address or\
    \ port, it may\n   specify these in the address and ports parameters.  Otherwise\
    \ it may\n   leave one or both of these parameters with \"don't care\" values.\n\
    \   If no remote flow policy is being used, the host MUST fill both the\n   remote\
    \ address and ports parameters with \"don't care\" values.  If\n   macro-flow\
    \ based remote policy is used, the host MUST specify the\n   remote address, but\
    \ MAY or MAY NOT specify the remote port(s).  If\n   micro-flow based remote policy\
    \ is used, the host MUST specify the\n   remote address and ports parameter.\n\
    \   Once a LISTEN_REQUEST has been granted, the RSIP gateway MUST forward\n  \
    \ all packets destined to the address and port in question to the host,\n   even\
    \ if the remote host address and port tuple has not been\n   previously contacted\
    \ by the host.\n   LISTEN_REQUEST is not necessary for RSA-IP.\n   The following\
    \ message-specific error conditions exist:\n      -  If the host is not registered\
    \ with the gateway, the gateway\n         MUST respond with an ERROR_RESPONSE\
    \ containing the\n         REGISTER_FIRST error.\n      -  If the message contains\
    \ an incorrect client ID, the gateway\n         MUST respond with an ERROR_RESPONSE\
    \ containing the\n         BAD_CLIENT_ID error.\n      -  If the local address\
    \ parameter is a don't care value and the\n         RSIP gateway cannot allocate\
    \ ANY addresses, the RSIP gateway\n         MUST respond with an ERROR_RESPONSE\
    \ containing the\n         LOCAL_ADDR_UNAVAILABLE error.\n      -  If the local\
    \ address parameter is not a don't care value there\n         are five possible\
    \ error conditions:\n         o  If the RSIP gateway cannot allocate ANY addresses,\
    \ it MUST\n            respond with an ERROR_RESPONSE containing the\n       \
    \     LOCAL_ADDR_UNAVAILABLE error.\n         o  If the RSIP gateway cannot allocate\
    \ the requested address\n            because it is in use, the RSIP gateway MUST\
    \ respond with an\n            ERROR_RESPONSE containing the LOCAL_ADDR_INUSE\
    \ error.\n         o  If the RSIP gateway cannot allocate the requested address\n\
    \            because it is not allowed by policy, the RSIP gateway MUST\n    \
    \        respond with an ERROR_RESPONSE containing the\n            LOCAL_ADDR_UNALLOWED\
    \ error.\n         o  If the RSIP gateway cannot allocate the requested address\
    \ /\n            port tuple because it is in use, the RSIP gateway MUST\n    \
    \        respond with an ERROR_RESPONSE containing the\n            LOCAL_ADDRPORT_INUSE\
    \ error.\n         o  If the RSIP gateway cannot allocate the requested address\
    \ /\n            port tuple because it is not allowed by policy, the RSIP\n  \
    \          gateway MUST respond with an ERROR_RESPONSE containing the\n      \
    \      LOCAL_ADDRPORT_UNALLOWED error.\n      -  If macro-flow based remote policy\
    \ is used and the requested\n         remote address is not allowed by the RSIP\
    \ gateway's policy, the\n         RSIP gateway MUST respond with an ERROR_RESPONSE\
    \ containing the\n         REMOTE_ADDR_UNALLOWED error.\n      -  If micro-flow\
    \ based remote policy is used and the requested\n         remote address / port\
    \ pair is not allowed by the RSIP gateway's\n         policy, the RSIP gateway\
    \ MUST respond with an ERROR_RESPONSE\n         containing the REMOTE_ADDRPORT_UNALLOWED\
    \ error.\n      -  If an unsupported or unallowed tunnel type is specified, the\n\
    \         RSIP gateway MUST respond with an ERROR_RESPONSE containing the\n  \
    \       BAD_TUNNEL_TYPE error.\n      -  If the host has not specified local or\
    \ remote address or port\n         information in enough detail, the RSIP gateway\
    \ MUST respond\n         with an ERROR_RESPONSE containing the FLOW_POLICY_VIOLATION\n\
    \         error.\n"
- title: 9.17.  LISTEN_RESPONSE
  contents:
  - '9.17.  LISTEN_RESPONSE

    '
- title: 9.17.1.  Description
  contents:
  - "9.17.1.  Description\n   A LISTEN_RESPONSE message is used by an RSIP gateway\
    \ to respond to a\n   LISTEN_REQUEST message from an RSIP host.  The RSIP gateway\
    \ MUST\n   issue a bind ID, and specify the address and port which have been\n\
    \   granted to the host.  The gateway must also specify a tunnel type and\n  \
    \ lease time.\n   If no remote flow policy is being used, the gateway MUST fill\
    \ both\n   the remote address and ports parameters with \"don't care\" values.\
    \  If\n   macro-flow based remote policy is used, the gateway MUST specify the\n\
    \   remote address, but MAY or MAY NOT specify the remote port(s).  If\n   micro-flow\
    \ based remote policy is used, the gateway MUST specify the\n   remote address\
    \ and ports parameter.\n"
- title: 9.17.2.  Format
  contents:
  - "9.17.2.  Format\n   <LISTEN_RESPONSE> ::= <Version>\n                       \
    \  <Message Type>\n                         <Overall Length>\n               \
    \          <Client ID>\n                         <Bind ID>\n                 \
    \        <Address (local)>\n                         <Ports (local)>\n       \
    \                  <Address (remote)>\n                         <Ports (remote)>\n\
    \                         <Tunnel Type>\n                         <Lease Time>\n\
    \                         [Address (tunnel endpoint)]\n                      \
    \   [Message Counter]\n"
- title: 9.17.3.  Behavior
  contents:
  - "9.17.3.  Behavior\n   If no remote flow policy is being used, the gateway MUST\
    \ fill both\n   the remote address and ports parameters with \"don't care\" values.\
    \  If\n   macro-flow based remote policy is used, the gateway MUST specify the\n\
    \   remote address, but MAY or MAY NOT specify the remote port(s).  If\n   micro-flow\
    \ based remote policy is used, the gateway MUST specify the\n   remote address\
    \ and ports parameter.\n   The address of a tunnel endpoint that is not the RSIP\
    \ gateway MAY be\n   specified.  If this parameter is not specified, the RSIP\
    \ gateway MUST\n   be assumed to be the tunnel endpoint.\n"
- title: 10.  Discussion
  contents:
  - '10.  Discussion

    '
- title: 10.1.  Use of Message Counters, Timeouts, and Retransmissions
  contents:
  - "10.1.  Use of Message Counters, Timeouts, and Retransmissions\n   Message counters\
    \ are conceptually similar to sequence numbers.  They\n   are necessary to facilitate\
    \ reliability when UDP is the transport\n   protocol.  Each UDP message is marked\
    \ with a message counter.  When\n   such a message is transmitted, the message\
    \ is stored in a \"last\n   message\" buffer.  For RSIP hosts, a timer is set\
    \ to expire at the\n   appropriate timeout value.\n   General rules:\n      -\
    \  When an RSIP host transmits a message with a message counter\n         value\
    \ of n, the RSIP gateway's response will contain a message\n         counter value\
    \ of n.\n      -  An RSIP host will not increment its message counter value to\n\
    \         n+1 until it receives a message from the RSIP gateway with a\n     \
    \    message counter value of n.\n      -  An RSIP gateway begins all sessions\
    \ with a message counter\n         value of 1.\n      -  If the message counter\
    \ value reaches the maximum possible 32-\n         bit value, it will wrap around\
    \ to 1, not 0.\n      -  If a message with a message counter value of n is transmitted\n\
    \         by an RSIP host, but a timer expires before a response to that\n   \
    \      message is received, the copy of the message (from the \"last\n       \
    \  message\" buffer) is retransmitted.\n      -  When an RSIP gateway receives\
    \ a duplicate copy of a message\n         with a message counter value of n, it\
    \ transmits the contents of\n         its \"last message\" buffer.\n      -  When\
    \ the RSIP gateway transmits an asynchronous RSIP message\n         (an RSIP message\
    \ for which there was no request by the RSIP\n         host), a message counter\
    \ value of 0 MUST be used.  Note that\n         only three RSIP messages can be\
    \ transmitted asynchronously:\n         ERROR_RESPONSE, DE-REGISTER_RESPONSE,\
    \ and FREE_RESPONSE.  These\n         messages may also be transmitted in response\
    \ to an RSIP host\n         request, so their message counter values MAY be non-zero.\n\
    \      -  If a message counter is not present in a message from an RSIP\n    \
    \     host, but is required, the RSIP gateway MUST respond with an\n         ERROR_RESPONSE\
    \ containing the MESSAGE_COUNTER_REQUIRED error.\n"
- title: 10.2.  RSIP Host and Gateway Failure Scenarios
  contents:
  - "10.2.  RSIP Host and Gateway Failure Scenarios\n   When either the RSIP host\
    \ or gateway suffers from an unrecoverable\n   failure, such as a crash, all RSIP-related\
    \ state will be lost.  In\n   this section, we describe the sequence of events\
    \ that will occur in\n   both host and gateway failures, and how the host and\
    \ gateway re-\n   synchronize.\n"
- title: 10.2.1.  Host Failure
  contents:
  - "10.2.1.  Host Failure\n   After a host failure, the host will reboot and be unaware\
    \ of any RSIP\n   state held on its behalf at the gateway.\n   If the host does\
    \ not immediately attempt to re-establish a session,\n   it may receive RSIP packets\
    \ on the RSIP client application port that\n   it was using before it rebooted.\
    \  If an RSIP client application is\n   not active on this port, these packets\
    \ will be responded to with ICMP\n   port unreachable messages.  If TCP is the\
    \ transport protocol, it is\n   likely that the connection will be terminated\
    \ with a TCP RST.  If an\n   RSIP client is active on this port, it will not recognize\
    \ the session\n   that these packets belong to, and it SHOULD silently ignore\
    \ them.\n   The RSIP host may also receive packets from a remote host with which\n\
    \   it was communicating before it rebooted.  These packets will be\n   destined\
    \ to the RSIP tunnel interface, which should not exist.  Thus\n   they SHOULD\
    \ be silently discarded by the RSIP host's stack, or the\n   RSIP host will transmit\
    \ appropriate ICMP messages to the tunnel\n   endpoint (e.g., the RSIP gateway).\
    \  The behavior of the system with\n   respect to sessions that were active before\
    \ the reboot should be\n   similar to that of a publically addressable non-RSIP\
    \ host that\n   reboots.\n   Upon rebooting, an RSIP host may attempt to establish\
    \ a new RSIP\n   session with the RSIP gateway.  Upon receiving the REGISTER_REQUEST\n\
    \   message, the RSIP gateway will be able to determine that, as far as\n   it\
    \ is concerned, the RSIP host is already registered.  Thus, it will\n   transmit\
    \ an ERROR_RESPONSE with the ALREADY_REGISTERED message.  Upon\n   receipt of\
    \ this message, the RSIP host will know the client ID of its\n   old registration,\
    \ and SHOULD immediately transmit a DE-\n   REGISTER_REQUEST using this client\
    \ ID.  After this is accomplished,\n   the states of the RSIP host and gateway\
    \ have been synchronized, and a\n   new RSIP session may be established.\n   If\
    \ the RSIP host does not de-register itself from the RSIP gateway,\n   it will\
    \ eventually receive a DE-REGISTER_RESPONSE from the gateway,\n   when the gateway\
    \ times out the host's session.  Since the DE-\n   REGISTER_RESPONSE will refer\
    \ to a client ID that has no meaning to\n   the host, the host SHOULD silently\
    \ ignore such a message.  At this\n   point, the states of the RSIP host and gateway\
    \ have been\n   synchronized, and a new RSIP session may be established.\n"
- title: 10.2.2.  Gateway Failure
  contents:
  - "10.2.2.  Gateway Failure\n   After a gateway failure, the gateway will reboot\
    \ and be unaware of\n   any RSIP state held by an RSIP host.\n   Since the gateway\
    \ will not attempt to contact any of its RSIP hosts,\n   a problem will first\
    \ be detected when either an RSIP host sends an\n   RSIP message to the gateway,\
    \ an RSIP host sends tunneled data to the\n   gateway, or data from a remote host\
    \ intended for an RSIP host\n   arrives.\n   In the first case, the RSIP gateway\
    \ SHOULD immediately response to\n   all messages (except for a REGISTER_REQUEST)\
    \ with an ERROR_RESPONSE\n   with a REGISTER_FIRST error.  Upon receipt of such\
    \ a message, an RSIP\n   host MUST interpret the message as an indication of a\
    \ loss of\n   synchronization between itself and the RSIP gateway.  The RSIP host\n\
    \   SHOULD immediately transmit a DE-REGISTRATION_REQUEST with its old\n   client\
    \ ID (which will generate another error, but this error SHOULD\n   be ignored\
    \ by the host).  At this point, the states of the RSIP host\n   and gateway have\
    \ been synchronized, and a new RSIP session may be\n   established.\n   In the\
    \ second case, all data that an RSIP host sends to the tunneled\n   interface\
    \ of an RSIP server will either (1) be discarded silently,\n   (2) responded to\
    \ with an ICMP Destination Unreachable message, such\n   as \"Communication Administratively\
    \ Prohibited\", or (3) blindly routed\n   to the intended destination.  In all\
    \ of the above cases, the RSIP\n   gateway will not have an explicit method to\
    \ notify the RSIP host of\n   the problem.  To prevent a long term communications\
    \ outage, small\n   lease times of several minutes can be set by the RSIP gateway.\n\
    \   In the third case, the RSIP gateway SHOULD discard all incoming\n   packets\
    \ and/or respond with ICMP Port Unreachable messages.\n"
- title: 10.3.  General Gateway Policy
  contents:
  - "10.3.  General Gateway Policy\n   There is a significant amount of RSIP gateway\
    \ policy that may be\n   implemented, but is beyond the scope of this document.\
    \  We expect\n   that most of this policy will be site-specific or implementation-\n\
    \   specific and therefore do not make any recommendations.  Examples of\n   general\
    \ gateway policy include:\n      -  How ports are allocated to RSIP hosts.\n \
    \     -  Preferred length of lease times.\n      -  How flow policy is applied\
    \ to which hosts.\n      -  How an RSIP gateway with multiple public IP addresses\
    \ that may\n         be leased by RSIP clients determines how to partition\n \
    \        and/or lease these addresses.\n"
- title: 10.4.  Errors Not From the RSIP Protocol
  contents:
  - "10.4.  Errors Not From the RSIP Protocol\n   Once an RSIP host and gateway have\
    \ established a relationship and the\n   host is assigned resources to use, error\
    \ may occur due to the host's\n   misuse of the resources or its attempting to\
    \ use unassigned\n   resources.  The following error behavior is defined:\n  \
    \    -  If a host attempts to use a local address which it has not been\n    \
    \     allocated, the RSIP gateway MUST drop the associated packet(s)\n       \
    \  and send the host an ERROR_RESPONSE containing the\n         LOCAL_ADDR_UNALLOWED\
    \ error.\n      -  If a host attempts to use a local address / port tuple which\
    \ it\n         has not been allocated, the RSIP gateway MUST drop the\n      \
    \   associated packet(s) and send the host an ERROR_RESPONSE\n         containing\
    \ the LOCAL_ADDRPORT_UNALLOWED error.\n      -  If a host attempts to contact\
    \ a remote address which has not\n         been properly specified or otherwise\
    \ approved (e.g., via an\n         ASSIGN_RESPONSE_RSAP-IP and macro or micro\
    \ based remote flow\n         policy), the RSIP gateway MUST drop the associated\
    \ packet(s)\n         and send the host an ERROR_RESPONSE containing the\n   \
    \      REMOTE_ADDR_UNALLOWED error.\n      -  If a host attempts to contact a\
    \ remote address / port tuple\n         which has not been properly specified\
    \ or otherwise approved\n         (e.g., via an ASSIGN_RESPONSE_RSAP-IP and micro\
    \ based remote\n         flow policy), the RSIP gateway MUST drop the associated\n\
    \         packet(s) and send the host an ERROR_RESPONSE containing the\n     \
    \    REMOTE_ADDRPORT_UNALLOWED error.\n      -  If a host attempts to establish\
    \ or use an improper tunnel type,\n         the RSIP gateway MUST respond with\
    \ an ERROR_RESPONSE containing\n         the BAD_TUNNEL_TYPE error.\n      - \
    \ If the RSIP gateway's detects a local fault which prevents its\n         RSIP\
    \ server module from continuing operation, the RSIP gateway\n         MUST respond\
    \ with an ERROR_RESPONSE containing the\n         INTERNAL_SERVER_ERROR error.\n"
- title: 10.5.  Address and Port Requests and Allocation
  contents:
  - "10.5.  Address and Port Requests and Allocation\n   Regardless of local flow\
    \ policy, an RSIP host may \"suggest\" that it\n   would like to use a particular\
    \ local address and/or port number in a\n   particular binding.  An RSIP gateway\
    \ that cannot grant such a\n   request, because the specified resources are already\
    \ in use, MUST\n   respond with an ERROR_RESPONSE containing the LOCAL_ADDR_INUSE\
    \ or\n   LOCAL_ADDRPORT_INUSE values.\n"
- title: 10.6.  Local Gateways and Flow Policy Interaction
  contents:
  - "10.6.  Local Gateways and Flow Policy Interaction\n   An RSIP host may initialize\
    \ a publically accessible gateway (such as\n   an FTP or HTTP gateway) by transmitting\
    \ a LISTEN_REQUEST message to\n   an RSIP gateway and receiving a LISTEN_RESPONSE.\
    \  However, unless no\n   remote flow policy is used, the gateway will have to\
    \ specify the\n   address or address and port of a single remote host that will\
    \ be\n   allowed to contact it.  Obviously, such as restriction is not very\n\
    \   useful for hosts that require their gateways to be accessible by any\n   remote\
    \ host.\n   This indicates that there is a conflict between flow-based policy\
    \ and\n   support for gateways.  The main purpose of enforcing flow-based\n  \
    \ policy for LISTEN_REQUESTs is that it allows an RSIP gateway tight\n   control\
    \ over how an RSIP host uses ports and the associated\n   accounting.  For example,\
    \ an RSIP host, operating under remote\n   micro-flow based policy and using a\
    \ protocol such as FTP, will have\n   to specify the address and port that it\
    \ will receive FTP data on, as\n   well as the address and port that the gateway\
    \ will transmit data\n   from, in a LISTEN_REQUEST.\n   In general, an RSIP gateway\
    \ may not allow arbitrary hosts to start\n   public gateways because of the traffic\
    \ and security concerns.  Thus,\n   we recommend that if remote micro-flow based\
    \ policy is used, that an\n   RSIP gateway only allow public gateways on RSIP\
    \ hosts via\n   administrative override.\n   Currently, RSIP hosts can only be\
    \ identified by their local IP\n   address or MAC address.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   RSIP, in and of itself, does not provide security.\
    \  It may provide\n   the illusion of security or privacy by hiding a private\
    \ address\n   space, but security can only be ensured by the proper use of security\n\
    \   protocols and cryptographic techniques.\n   An RSIP gateway should take all\
    \ measures deemed necessary to prevent\n   its hosts from performing intentional\
    \ or unintentional denial-of-\n   service attacks by request large sets of resources.\n\
    \   Currently, RSIP hosts can only be identified by their local IP\n   address\
    \ or, in some cases, MAC address.  It is desirable to allow\n   RSIP messages\
    \ sent between a host and gateway to be authenticated.\n   Further discussion\
    \ of such authentication can be found in [RSIP-\n   FRAME].\n   Discussion of\
    \ RSIP support for end-to-end IPsec can be found in\n   [RSIP-IPSEC].\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   All of the designations below have been registered\
    \ by the IANA.\n      -  RSIP port number: 4555\n      -  RSIP error codes (see\
    \ Appendix A).\n      -  RSIP message type codes (see Appendix B).\n      -  RSIP\
    \ tunnel types, methods, and flow policies.\n   RSIP parameter values are designated\
    \ as follows:\n      -  0       Reserved\n      -  1-240   Assigned by IANA\n\
    \      -  241-255 Reserved for private use\n   New registrations for the above\
    \ namespaces are recommended to be\n   allocated via the Specification Required\
    \ method documented in\n   [RFC2434].\n"
- title: 13.  Acknowledgements
  contents:
  - "13.  Acknowledgements\n   The authors would like to specifically thank Gabriel\
    \ Montenegro, Pyda\n   Srisuresh, Brian Carpenter, Eliot Lear, Dan Nessett, Gary\
    \ Jaszewski,\n   Naveen Rajanikantha, Sudhakar Ramakrishna, Jim March, and Rick\
    \ Cobb\n   for their input.  The IETF NAT working group as a whole has been\n\
    \   extremely helpful in the ongoing development of RSIP.\n"
- title: '14.  Appendix A: RSIP Error Numbers'
  contents:
  - "14.  Appendix A: RSIP Error Numbers\n   This section provides descriptions for\
    \ the error values in the RSIP\n   error parameter.\n   All errors are grouped\
    \ into the following categories:\n   100's: General errors.\n      101: UNKNOWN_ERROR.\
    \  An error that cannot be identified has\n         occurred.  This error should\
    \ be used when all other error\n         messages are inappropriate.\n      102:\
    \ USE_TCP.  A host has attempted to use UDP on a server that\n         only supports\
    \ TCP.\n      103: FLOW_POLICY_VIOLATION: A host has not specified address or\n\
    \         port information in enough detail for its assigned flow policy.\n  \
    \    104: INTERNAL_SERVER_ERROR: An RSIP server application has\n         detected\
    \ an unrecoverable error within itself or the RSIP\n         gateway.\n      105:\
    \ MESSAGE_COUNTER_REQUIRED: An RSIP host did not use a message\n         counter\
    \ parameter in a situation in which it should have.\n      106: UNSUPPORTED_RSIP_VERSION:\
    \ An RSIP host sent a message with a\n         version number that is not supported\
    \ by the RSIP gateway.\n   200's: Parameter and message errors.  The gateway uses\
    \ these errors\n      when it detects that a parameter or message is malformed,\
    \ as well\n      as when it does not understand a parameter or message.\n    \
    \  201: MISSING_PARAM.  The request does not contain a required\n         parameter.\n\
    \      202: DUPLICATE_PARAM.  The request contains an illegal duplicate\n    \
    \     parameter.\n      203: EXTRA_PARAM.  The request contains a parameter that\
    \ it should\n         not.\n      204: ILLEGAL_PARAM.  The gateway does not understand\
    \ a parameter\n         type.\n      205: BAD_PARAM.  A parameter is malformed.\n\
    \      206: ILLEGAL_MESSAGE.  The gateway does not understand the message\n  \
    \       type.  The message type is neither mandatory nor optional.\n      207:\
    \ BAD_MESSAGE.  A message is malformed and gateway parsing\n         failed.\n\
    \      208: UNSUPPORTED_MESSAGE: The host has transmitted an optional\n      \
    \   message that the gateway does not support.\n   300's: Permission, resource,\
    \ and policy errors.  The gateway uses\n      these errors when a host has attempted\
    \ to do something that it is\n      not permitted to do, or something that violated\
    \ gateway policy.\n      301: REGISTER_FIRST.  The RSIP host has attempted to\
    \ request or\n         use resources without registering.\n      302: ALREADY_REGISTERED.\
    \  The host has attempted to register again\n         without first de-registering.\n\
    \      303: ALREADY_UNREGISTERED.  The host has attempted to de-register\n   \
    \      but it is already in the unregistered state.\n      304: REGISTRATION_DENIED.\
    \  The gateway will not allow the host to\n         register.\n      305: BAD_CLIENT_ID.\
    \  The host has referred to itself with the\n         wrong client ID.\n     \
    \ 306: BAD_BIND_ID.  The request refers to a bind ID that is not\n         valid\
    \ for the host.\n      307: BAD_TUNNEL_TYPE.  The request refers to a tunnel type\
    \ that is\n         not valid for the host.\n      308: LOCAL_ADDR_UNAVAILABLE.\
    \  The gateway is currently not able to\n         allocate ANY local address,\
    \ but the host may try again later.\n      309: LOCAL_ADDRPORT_UNAVAILABLE.  The\
    \ gateway is currently not\n         able to allocate ANY local IP address / port\
    \ tuple of the\n         requested magnitude (i.e., number of ports), but the\
    \ host may\n         try again later.\n      310: LOCAL_ADDR_INUSE.  The gateway\
    \ was not able to allocate the\n         requested local address because it is\
    \ currently used by another\n         entity.\n      311: LOCAL_ADDRPORT_INUSE.\
    \  The gateway was not able to allocate\n         the requested local address\
    \ / port tuple because it is\n         currently used by another entity.\n   \
    \   312: LOCAL_ADDR_UNALLOWED.  The gateway will not let the host use\n      \
    \   the specified local IP address due to policy.\n      313: LOCAL_ADDRPORT_UNALLOWED.\
    \  The gateway will not let the host\n         use the specified local address\
    \ / port pair due to policy.\n      314: REMOTE_ADDR_UNALLOWED.  The gateway will\
    \ not allow the host\n         to establish a session to the specified remote\
    \ address.\n      315: REMOTE_ADDRPORT_UNALLOWED.  The gateway will not allow\
    \ the\n         host to establish a session to the specified remote address /\n\
    \         port tuple.\n   400's: IPsec errors.  All errors specific to RSIP /\
    \ IPsec operation.\n      See [RSIP-IPSEC].\n"
- title: '15.  Appendix B: Message Types'
  contents:
  - "15.  Appendix B: Message Types\n   This section defines the values assigned to\
    \ RSIP message types.  We\n   also indicate which RSIP entity, host or gateway,\
    \ produces each\n   messages, and whether it is mandatory or optional.  All *_REQUEST\n\
    \   messages are only to be implemented on hosts, while all *_RESPONSE\n   messages\
    \ are only to be implemented on gateways.  RSIP\n   implementations (both host\
    \ and gateway) MUST support all mandatory\n   messages in order to be considered\
    \ \"RSIP compliant\".\n   Value    Message                 Implementation    \
    \ Status\n   ------------------------------------------------------------\n  \
    \  1     ERROR_RESPONSE                gateway        mandatory\n    2     REGISTER_REQUEST\
    \              host           mandatory\n    3     REGISTER_RESPONSE         \
    \    gateway        mandatory\n    4     DE-REGISTER_REQUEST           host  \
    \         mandatory\n    5     DE-REGISTER_RESPONSE          gateway        mandatory\n\
    \    6     ASSIGN_REQUEST_RSA-IP         host           optional\n    7     ASSIGN_RESPONSE_RSA-IP\
    \        gateway        optional\n    8     ASSIGN_REQUEST_RSAP-IP        host\
    \           mandatory\n    9     ASSIGN_RESPONSE_RSAP-IP       gateway       \
    \ mandatory\n   10     EXTEND_REQUEST                host           mandatory\n\
    \   11     EXTEND_RESPONSE               gateway        mandatory\n   12     FREE_REQUEST\
    \                  host           mandatory\n   13     FREE_RESPONSE         \
    \        gateway        mandatory\n   14     QUERY_REQUEST                 host\
    \           optional\n   15     QUERY_RESPONSE                gateway        mandatory\n\
    \   16     LISTEN_REQUEST                host           optional\n   17     LISTEN_RESPONSE\
    \               gateway        optional\n"
- title: '16.  Appendix C: Example RSIP host/gateway transactions'
  contents:
  - "16.  Appendix C: Example RSIP host/gateway transactions\n   In this appendix,\
    \ we present an exemplary series of annotated\n   transactions between an RSIP\
    \ host and an RSIP gateway.  All host to\n   gateway traffic is denote by `C -->\
    \ S' and all gateway to host\n   traffic is denoted by `S --> C'.  Parameter values\
    \ are denoted inside\n   of parentheses.  Versions, message types, and overall\
    \ lengths are not\n   included in order to save space.  \"Don't care\" values\
    \ are indicated\n   by 0's.\n   A ports parameter is represented by the number\
    \ of ports followed by\n   the port numbers, separated by dashes.  For example,\
    \ 2-1012-1013\n   indicates two ports, namely 1012 and 1013, while 16-10000 indicates\n\
    \   16 ports, namely 10000-10015, and 4-0 indicates four ports, but the\n   sender\
    \ doesn't care where they are.\n   IPv4 addresses are assumed.\n"
- title: 16.1.  RSAP-IP with Local Macro-flow Based Policy and No Remote Flow
  contents:
  - "16.1.  RSAP-IP with Local Macro-flow Based Policy and No Remote Flow\n      \
    \ Policy\n   This example exhibits the loosest policy framework for RSAP-IP.\n\
    \   C --> S: REGISTER_REQUEST ()\n      The host attempts to register with the\
    \ gateway.\n   S --> C: REGISTER_RESPONSE (Client ID = 1, Local Flow Policy =\n\
    \      Macro, Remote Flow policy = None, Lease Time = 600)\n      The gateway\
    \ responds, assigning a Client ID of 1, local macro-\n      flow based policy\
    \ and no remote flow policy.  No RSIP method is\n      indicated, so RSAP-IP is\
    \ assumed.  No tunnel type is indicated,\n      so IP-IP is assumed.  A lease\
    \ time of 600 seconds is assigned.\n   C --> S: ASSIGN_REQUEST_RSAP-IP: (Client\
    \ ID = 1, Address (local) =\n      0, Ports (local) = 4-0, Address (remote) =\
    \ 0, Ports (remote) =\n      0, Lease Time = 3600)\n      The host requests an\
    \ address and four ports to use with it, but\n      doesn't care which address\
    \ or ports are assigned.  The host\n      does not specify the remote address\
    \ or ports either.  The host\n      suggests a lease time of 3600 seconds.\n \
    \  S --> C: ASSIGN_RESPONSE_RSAP-IP: (Client ID = 1, Bind ID = 1,\n      Address\
    \ (local) = 149.112.240.156, Ports (local) = 4-1234,\n      Address (remote) =\
    \ 0, Ports (remote) = 0, Lease Time = 1800,\n      Tunnel Type = IP-IP)\n    \
    \  The gateway responds by indicating that a bind ID of 1 has been\n      assigned\
    \ to IP address 149.112.240.156 with ports 1234-1237.\n      Any remote host may\
    \ be communicated with, using any remote port\n      number.  The lease time has\
    \ been assigned to be 1800 seconds,\n      and the tunnel type is confirmed to\
    \ be IP-IP.\n      The host is now able to communicate with any host on the public\n\
    \      network using these resources.\n   C --> S: QUERY_REQUEST: (Client ID =\
    \ 1, Indicator = network,\n      Address (network) = 10.20.60.0, Address (netmask)\n\
    \      255.255.255.0)\n      The host asks the gateway if the network 10.20.60.0/24\
    \ is\n      local.\n   S --> C: QUERY_RESPONSE: (Client ID = 1, Indicator = network,\n\
    \      Address (network) = 10.20.60.0, Address (netmask) =\n      255.255.255.0)\n\
    \      The gateway responds indicating that the network in question is\n     \
    \ local.\n   C --> S: ASSIGN_REQUEST_RSAP-IP: (Client ID = 1, Address (local)\
    \ =\n      149.112.240.156, Ports (local) = 8-1238, Address (remote) = 0,\n  \
    \    Ports (remote) = 0, Lease Time = 1800)\n      The host requests eight more\
    \ particular ports for use with\n      RSAP-IP with the same address.  A lease\
    \ of 1800 seconds is\n      requested.  IP-IP tunneling is implied by default.\n\
    \   S --> C: ASSIGN_RESPONSE_RSAP-IP: (Client ID = 1, Bind ID = 2,\n      Address\
    \ (local) = 149.112.240.156, Ports (local) = 8-1305,\n      Address (remote) =\
    \ 0, Ports (remote) = 0, Lease Time = 1800)\n      The gateway grants the request\
    \ with the same address, but with\n      a different set of ports.  IP-IP tunneling\
    \ is implied by\n      default.\n   C --> S: FREE_REQUEST (Client ID = 1, Bind\
    \ ID = 1)\n      The host frees bind ID 1; i.e., ports 1234-1237 from IP address\n\
    \      149.112.240.156.  Note that the address itself is still\n      assigned\
    \ to the host because the host is still assigned ports\n      1305-1314.\n   S\
    \ --> C: FREE_RESPONSE (Client ID = 1, Bind ID = 1)\n      The gateway acknowledges\
    \ that Bind ID 1 has been freed.\n   C --> S: EXTEND_REQUEST (Client ID = 1, Bind\
    \ ID = 2, Lease Time =\n      1800)\n      The host request that the lease on\
    \ bind ID 1 be extended for\n      1800 seconds.\n   S --> C: EXTEND_RESPONSE\
    \ (Client ID = 1, Bind ID = 2, Lease Time =\n      1800)\n      The gateway confirms\
    \ the request.\n   S --> C: FREE_RESPONSE (Client ID = 1, Bind ID = 2)\n     \
    \ The gateway forces the host to free the resources of bind ID 2.\n   C --> S:\
    \ DE-REGISTER_REQUEST (Client ID = 1)\n      The host de-registers with the sever.\n\
    \   S --> C: DE-REGISTER_RESPONSE (Client ID = 1)\n      The gateway acknowledges\
    \ that the host has de-registered.\n"
- title: 16.2.  RSAP-IP with Local Micro-flow Based Policy and Remote Micro-
  contents:
  - "16.2.  RSAP-IP with Local Micro-flow Based Policy and Remote Micro-\n       flow\
    \ Based Policy\n   This example exhibits the strictest policy framework for RSAP-IP.\n\
    \   C --> S: REGISTER_REQUEST ()\n      The host attempts to register with the\
    \ gateway.\n   S --> C: REGISTER_RESPONSE (Client ID = 5, Local Flow Policy =\n\
    \      Micro, Remote Flow policy = Micro, RSIP Method = RSAP-IP, RSIP\n      Method\
    \ = RSA-IP, Tunnel Type = IP-IP, Tunnel Type = GRE, Lease\n      Time = 600)\n\
    \      The gateway responds, assigning a Client ID of 5, local micro-\n      flow\
    \ based policy and remote micro-flow based policy.  Both\n      RSAP-IP and RSA-IP\
    \ are supported.  Both IP-IP and GRE tunnel\n      types are supported.  A lease\
    \ time of 600 seconds is assigned.\n   C --> S: ASSIGN_REQUEST_RSAP-IP: (Client\
    \ ID = 5, Address (local) =\n      0, Ports (local) = 0, Address (remote) = 38.196.73.6,\
    \ Ports\n      (remote) = 21, Lease Time = 600, Tunnel Type = IP-IP)\n      The\
    \ host requests a local address and a port assignment to use\n      with it. \
    \ The host indicates that it wants to contact host\n      38.196.73.6 at port\
    \ 21 (FTP control).  The host requests a\n      lease time of 600 seconds and\
    \ a tunnel type of IP-IP.\n   S --> C: ASSIGN_RESPONSE_RSAP-IP: (Client ID = 5,\
    \ Bind ID = 1,\n      Address (local) = 149.112.240.156, Ports (local) = 2049,\n\
    \      Address (remote) = 38.196.73.6, Ports (remote) = 21, Lease Time\n     \
    \ = 600, Tunnel Type = IP-IP)\n      The gateway responds by indicating that a\
    \ bind ID of 1 has been\n      assigned to IP address 149.112.240.156 with port\
    \ 2049.  Only\n      host 38.196.73.6 at port 21 may be contacted.  The lease\
    \ time\n      has been assigned to be 600 seconds, and the tunnel type is\n  \
    \    confirmed to be IP-IP.\n   C --> S: LISTEN_REQUEST: (Client ID = 5, Address\
    \ (local) =\n      149.112.240.156, Ports (local) = 2050, Address (remote) =\n\
    \      38.196.73.6, Ports (remote) = 20)\n      The host requests a listen port\
    \ 2050 at the same address that\n      it has been assigned.  Only host 38.196.73.6\
    \ from ports 20 (FTP\n      data) will be able to contact it.\n   S --> C: LISTEN_RESPONSE:\
    \ (Client ID = 5, Address (local) =\n      149.112.240.156, Ports (local) = 2050,\
    \ Address (remote) =\n      38.196.73.6, Ports (remote) = 20, Lease Time = 600,\
    \ Tunnel Type\n      = IP-IP)\n      The gateway confirms the request and assigns\
    \ a lease time of\n      600 seconds and a tunnel type of IP-IP.\n   C --> S:\
    \ DE-REGISTER_REQUEST (Client ID = 5)\n      The host de-registers with the sever.\n\
    \   S --> C: DE-REGISTER_RESPONSE (Client ID = 5)\n      The gateway acknowledges\
    \ that the host has de-registered.  All\n      of the host's bindings have been\
    \ implicitly revoked.\n"
- title: 16.3.  RSA-IP with Local Macro-flow Based Policy and Remote Macro-
  contents:
  - "16.3.  RSA-IP with Local Macro-flow Based Policy and Remote Macro-\n       flow\
    \ based Policy\n   This example exhibits a medium level of control for RSA-IP.\n\
    \   C --> S: REGISTER_REQUEST ()\n      The host attempts to register with the\
    \ gateway.\n   S --> C: REGISTER_RESPONSE (Client ID = 3, Local Flow Policy =\n\
    \      Macro, Remote Flow policy = Macro, RSIP Method = RSAP-IP, RSIP\n      Method\
    \ = RSA-IP, Tunnel Type = IP-IP, Tunnel Type = L2TP, Lease\n      Time = 600)\n\
    \      The gateway responds, assigning a Client ID of 3, local macro-\n      flow\
    \ based policy and remote macro-flow based policy.  Both\n      RSAP-IP and RSA-IP\
    \ are supported.  Both IP-IP and L2TP tunnel\n      types are supported.  A lease\
    \ time of 600 seconds is assigned.\n   C --> S: ASSIGN_REQUEST_RSA-IP: (Client\
    \ ID = 3, Address (local) =\n      0, Address (remote) = www.foo.com, Ports (remote)\
    \ = 0, Lease\n      Time = 3600, Tunnel Type = IP-IP)\n      The host requests\
    \ a local address and indicates that it wants\n      to contact host www.foo.com.\n\
    \   S --> C: ERROR_RESPONSE: (Error = REMOTE_ADDR_UNALLOWED, Client ID\n     \
    \ = 3)\n      The gateway indicates that the host is not permitted to\n      establish\
    \ communication with www.foo.com.\n   C --> S: ASSIGN_REQUEST_RSA-IP: (Client\
    \ ID = 3, Address (local) =\n      0, Address (remote) = www.bar.com, Ports (remote)\
    \ = 0, Lease\n      Time = 3600, Tunnel Type = IP-IP)\n      The host requests\
    \ a local address and indicates that it wants\n      to contact host www.bar.com.\n\
    \   S --> C: ASSIGN_RESPONSE_RSA-IP: (Client ID = 3, Bind ID = 1,\n      Address\
    \ (local) = 149.112.240.17, Address (remote) =\n      www.bar.com, Ports (remote)\
    \ = 0, Lease Time = 3600, Tunnel Type\n      = IP-IP)\n      The gateway responds\
    \ by granting local IP address\n      149.112.240.17 to the host, and permitting\
    \ it to communicate\n      with www.bar.com, at any port.  Requested lease time\
    \ and tunnel\n      type are also granted.\n   C --> S: DE-REGISTER_REQUEST (Client\
    \ ID = 3)\n      The host de-registers with the sever.\n   S --> C: DE-REGISTER_RESPONSE\
    \ (Client ID = 3)\n      The gateway acknowledges that the host has de-registered.\
    \  All\n      of the host's bindings have been implicitly revoked.\n"
- title: '17.  Appendix D: Example RSIP host state diagram'
  contents:
  - "17.  Appendix D: Example RSIP host state diagram\n   This appendix provides an\
    \ exemplary diagram of RSIP host state.  The\n   host begins in the unregistered\
    \ state.  We assume that for UDP, if a\n   message is lost, the host will timeout\
    \ and retransmit another copy of\n   it.  We recommend a 7-fold binary exponential\
    \ backoff timer for\n   retransmissions, with the first timeout occurring after\
    \ 12.5 ms.\n   This diagram does not include transitions for the LISTEN_REQUEST\n\
    \   message.\n                        send\n                  REGISTER_REQUEST\n\
    \     +------------+              +------------+\n     |            |------------->|Registration|<--\
    \ timeout/send\n"
- title: +--->|Unregistered|<-------------|  Pending   |--- REGISTER_REQUEST
  contents:
  - '+--->|Unregistered|<-------------|  Pending   |--- REGISTER_REQUEST

    '
- title: '|    |            |              +------------+'
  contents:
  - '|    |            |              +------------+

    '
- title: '|    +------------+ 7th timeout/recv    |'
  contents:
  - '|    +------------+ 7th timeout/recv    |

    '
- title: '|          ^         ERROR_RESPONSE     |'
  contents:
  - '|          ^         ERROR_RESPONSE     |

    '
- title: '|          |                            |'
  contents:
  - '|          |                            |

    '
- title: '|          |                            |'
  contents:
  - '|          |                            |

    '
- title: '|          |7th timeout/recv            |recv              timeout/send'
  contents:
  - '|          |7th timeout/recv            |recv              timeout/send

    '
- title: '|          |DE-REGISTER_RESPONSE        |REGISTER_RESPONSE QUERY_REQUEST'
  contents:
  - '|          |DE-REGISTER_RESPONSE        |REGISTER_RESPONSE QUERY_REQUEST

    '
- title: '|          |                            |                        ^  |'
  contents:
  - '|          |                            |                        ^  |

    '
- title: '|          |                            |                        |  |'
  contents:
  - '|          |                            |                        |  |

    '
- title: '|          |                            |            send        |  |'
  contents:
  - '|          |                            |            send        |  |

    '
- title: '|          |            send DE-        v        QUERY_REQUEST   |  |'
  contents:
  - '|          |            send DE-        v        QUERY_REQUEST   |  |

    '
- title: '| +----------------+ REGISTER_REQUEST+----------+          +----------+'
  contents:
  - '| +----------------+ REGISTER_REQUEST+----------+          +----------+

    '
- title: '| |   Registered   |<----------------|          |--------->|Registered|'
  contents:
  - '| |   Registered   |<----------------|          |--------->|Registered|

    '
- title: '| | De-registration|                 |Registered|          |   Query  |'
  contents:
  - '| | De-registration|                 |Registered|          |   Query  |

    '
- title: '| |    Pending     |---------------->|          |<---------|  Pending |'
  contents:
  - '| |    Pending     |---------------->|          |<---------|  Pending |

    '
- title: '| +----------------+      recv       +----------+          +----------+'
  contents:
  - '| +----------------+      recv       +----------+          +----------+

    '
- title: '|         | ^        ERROR_RESPONSE        ^  |   7th timeout/recv'
  contents:
  - '|         | ^        ERROR_RESPONSE        ^  |   7th timeout/recv

    '
- title: '|         | |                              |  |  QUERY_RESPONSE or'
  contents:
  - '|         | |                              |  |  QUERY_RESPONSE or

    '
- title: '|    timeout/send                          |  |    ERROR_RESPONSE'
  contents:
  - '|    timeout/send                          |  |    ERROR_RESPONSE

    '
- title: '| DE-REGISTER_REQUEST      7th timeout/recv|  |'
  contents:
  - '| DE-REGISTER_REQUEST      7th timeout/recv|  |

    '
- title: '|                           ERROR_RESPONSE |  |'
  contents:
  - '|                           ERROR_RESPONSE |  |

    '
- title: '|                                          |  |'
  contents:
  - '|                                          |  |

    '
- title: '| +----------------+                       |  |'
  contents:
  - '| +----------------+                       |  |

    '
- title: '| |Go to Registered|                       |  |send'
  contents:
  - '| |Go to Registered|                       |  |send

    '
- title: '| +----------------+                       |  |ASSIGN_REQUEST'
  contents:
  - '| +----------------+                       |  |ASSIGN_REQUEST

    '
- title: '|         ^                   timeout/send |  |'
  contents:
  - '|         ^                   timeout/send |  |

    '
- title: '|         |Yes                FREE_REQUEST |  |'
  contents:
  - '|         |Yes                FREE_REQUEST |  |

    '
- title: '|         +                       |  |     |  |'
  contents:
  - '|         +                       |  |     |  |

    '
- title: '|       +   +                     v  |     |  v'
  contents:
  - '|       +   +                     v  |     |  v

    '
- title: '|     +       +   7th timeout/ +--------+ +----------+'
  contents:
  - '|     +       +   7th timeout/ +--------+ +----------+

    '
- title: '|   +  Are all  +      recv    |  Free  | |Assignment|<--timeout/send'
  contents:
  - '|   +  Are all  +      recv    |  Free  | |Assignment|<--timeout/send

    '
- title: '| +   resources   +<-----------|Pending | |  Pending |---ASSIGN_REQUEST'
  contents:
  - '| +   resources   +<-----------|Pending | |  Pending |---ASSIGN_REQUEST

    '
- title: '|   +   freed?  + FREE_RESPONSE+--------+ +----------+'
  contents:
  - '|   +   freed?  + FREE_RESPONSE+--------+ +----------+

    '
- title: '|     +       +                    ^ |         |'
  contents:
  - '|     +       +                    ^ |         |

    '
- title: '|       +   +                      | |         |'
  contents:
  - '|       +   +                      | |         |

    '
- title: '|         +                        | |         |recv'
  contents:
  - '|         +                        | |         |recv

    '
- title: '|         |No                 send | |recv     |ASSIGN_RESPONSE'
  contents:
  - '|         |No                 send | |recv     |ASSIGN_RESPONSE

    '
- title: '|         v           ERROR_REQUEST| |ERROR_   |'
  contents:
  - '|         v           ERROR_REQUEST| |ERROR_   |

    '
- title: '| +---------------+                | |RESPONSE |'
  contents:
  - '| +---------------+                | |RESPONSE |

    '
- title: '| | Go to Assigned|                | |         | 7th timeout/recv'
  contents:
  - '| | Go to Assigned|                | |         | 7th timeout/recv

    '
- title: '| +---------------+                | |         | QUERY_RESPONSE or'
  contents:
  - '| +---------------+                | |         | QUERY_RESPONSE or

    '
- title: '|                       recv       | |         | ERROR_RESPONSE'
  contents:
  - '|                       recv       | |         | ERROR_RESPONSE

    '
- title: '| +---------------+ERROR_RESPONSE  | v         v          +-----------+'
  contents:
  - '| +---------------+ERROR_RESPONSE  | v         v          +-----------+

    '
- title: '| |    Assigned   |-------------->+-------------+-------->|  Assigned |'
  contents:
  - '| |    Assigned   |-------------->+-------------+-------->|  Assigned |

    '
- title: +>|De-registration|               |   Assigned  |         |   Query   |
  contents:
  - "+>|De-registration|               |   Assigned  |         |   Query   |\n  |\
    \    Pending    |<--------------+-------------+<--------|  Pending  |\n  +---------------+\
    \      send            ^  |             +-----------+\n        ^  |       DE-REGISTER_REQUEST\
    \   |  |         send         ^ |\n        |  |                             |\
    \  |     QUERY_REQUEST    | |\n        |  |                             |  | \
    \                     | |\n    timeout/send        7th/timeout/recv |  |send \
    \                 | |\n    DE-REGISTER_         ASSIGN_RESPONSE |  |ASSIGN_REQUEST\
    \ timeout/send\n      REQUEST           or ERROR_RESPONSE|  |              QUERY_REQUEST\n\
    \                                         |  |\n                             \
    \            |  v\n                                     +----------+\n       \
    \                              | Assigned |\n                                \
    \     |Assignment|\n                                     | Pending  |\n      \
    \                               +----------+\n                               \
    \          ^  |\n                                         |  |\n             \
    \                        timeout/send\n                                    ASSIGN_REQUEST\n"
- title: 18.  References
  contents:
  - "18.  References\n   [RFC1918]    Rekhter, Y., Moskowitz, B., Karrenberg, D.,\
    \ de Groot,\n                G.J. and E. Lear, \"Address Allocation for Private\n\
    \                Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC2119]  \
    \  Bradner, S., \"Key words for use in RFCs to indicate\n                requirement\
    \ levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2434]    Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n                IANA Considerations Section in\
    \ RFCs\", BCP 26, RFC 2434,\n                October 1998.\n   [RFC2663]    Srisuresh,\
    \ P. and M. Holdrege, \"IP Network Address\n                Translator (NAT) Terminology\
    \ and Considerations\", RFC\n                2663, August 1999.\n   [RSIP-FRAME]\
    \ Borella, M. Lo, J., Grabelsky, D. and G. Montenegro,\n                \"Realm\
    \ Specific IP: Framework\", RFC 3102, October 2001.\n   [RSIP-IPSEC] Montenegro,\
    \ G. and M. Borella, \"RSIP Support for End-\n                to-end IPSEC\",\
    \ RFC 3104, October 2001.\n"
- title: 19.  Authors' Addresses
  contents:
  - "19.  Authors' Addresses\n   Michael Borella\n   CommWorks\n   3800 Golf Rd.\n\
    \   Rolling Meadows IL 60008\n   Phone: (847) 262-3083\n   EMail: mike_borella@commworks.com\n\
    \   David Grabelsky\n   CommWorks\n   3800 Golf Rd.\n   Rolling Meadows IL 60008\n\
    \   Phone: (847) 222-2483\n   EMail: david_grabelsky@commworks.com\n   Jeffrey\
    \ Lo\n   Candlestick Networks, Inc\n   70 Las Colinas Lane,\n   San Jose, CA 95119\n\
    \   Phone: (408) 284 4132\n   EMail: yidarlo@yahoo.com\n   Kunihiro Taniguchi\n\
    \   NEC USA\n   C&C Research Labs.\n   110 Rio Robles\n   San Jose, CA 95134\n\
    \   Phone: (408) 943-3031\n   EMail: taniguti@ccrl.sj.nec.com\n"
- title: 20.  Full Copyright Statement
  contents:
  - "20.  Full Copyright Statement\n   Copyright (C) The Internet Society (2001).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
