- contents:
  - '                            Entity State MIB

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes extensions to the Entity MIB to provide\n   information
    about the state of physical entities.\n   In addition, this memo defines a set
    of Textual Conventions to\n   represent various states of an entity.  The intent
    is that these\n   Textual Conventions will be imported and used in MIB modules
    that\n   would otherwise define their own representations.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. The Internet-Standard Management Framework ......................2\n
    \  2. Entity State ....................................................2\n      2.1.
    Hierarchical State Management ..............................3\n      2.2. Entity
    Redundancy ..........................................3\n      2.3. Physical Entity
    Users ......................................3\n      2.4. Physical Class Behavior
    ....................................4\n   3. Relation to Other MIBs ..........................................4\n
    \     3.1. Relation to the Interfaces MIB .............................4\n      3.2.
    Relation to Alarm MIB ......................................5\n      3.3. Relation
    to Bridge MIB .....................................5\n      3.4. Relation to the
    Host Resources MIB .........................5\n   4. Textual Conventions .............................................6\n
    \  5. Definitions .................................................... 9\n   6.
    Security Considerations ........................................16\n   7. Acknowledgements
    ...............................................17\n   8. References .....................................................17\n
    \     8.1. Normative References ......................................17\n      8.2.
    Informative References ....................................18\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Entity State\n   The goal in adding state objects to the Entity MIB [RFC4133]
    is to\n   define a useful subset of the possible state attributes that could be\n
    \  tracked for a given entity and that both fit into the state models\n   such
    as those used in the Interfaces MIB [RFC2863] as well as\n   leverage existing
    well-deployed models.  The entStateTable contains\n   state objects that are a
    subset of the popular ISO/OSI states that\n   are also defined in ITU's X.731
    specification [X.731].  Objects are\n   defined to capture administrative, operational,
    and usage states.  In\n   addition, there are further state objects defined to
    provide more\n   information for these three basic states.\n   Administrative
    state indicates permission to use or prohibition\n   against using the entity
    and is imposed through the management\n   services.\n   Operational state indicates
    whether or not the entity is physically\n   installed and working.  Note that
    unlike the ifOperStatus [RFC2863],\n   this operational state is independent of
    the administrative state.\n   Usage state indicates whether or not the entity
    is in use at a\n   specific instance, and if so, whether or not it currently has
    spare\n   capacity to serve additional users.  In the context of this MIB, the\n
    \  usage state refers to the ability of an entity to service other\n   entities
    within its containment hierarchy.\n   Alarm state indicates whether or not there
    are any alarms active\n   against the entity.  In addition to those alarm states
    defined in\n   X.731 [X.731], warning and indeterminate status are also defined
    to\n   provide a more complete mapping to the Alarm MIB [RFC3877].\n   Standby
    state indicates whether the entity is currently running as\n   hot standby or
    cold standby or is currently providing service.\n   The terms \"state\" and \"status\"
    are used interchangeably in this memo.\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119].\n"
  - contents:
    - "2.1.  Hierarchical State Management\n   Physical entities exist within a containment
      hierarchy.  Physical\n   containment is defined by the entPhysicalContainedIn
      object[RFC4133].\n   This raises some interesting issues not addressed in existing
      work on\n   state management.\n   There are two types of state for an entity:\n
      \  1) The state of the entity independent of the states of its parents\n   and
      children in its containment hierarchy.  This is often referred to\n   as raw
      state.\n   2) The state of the entity, as it may be influenced by the state
      of\n   its parents and children.  This is often referred to as computed\n   state.\n
      \  All state objects in this memo are raw state.\n"
    title: 2.1.  Hierarchical State Management
  - contents:
    - "2.2.  Entity Redundancy\n   While this memo is not attempting to address the
      entire problem space\n   around redundancy, the entStateStandby object provides
      an important\n   piece of state information for entities, which helps identify
      which\n   pieces of redundant equipment are currently providing service, and\n
      \  which are waiting in either hot or cold standby mode.\n"
    title: 2.2.  Entity Redundancy
  - contents:
    - "2.3.  Physical Entity Users\n   There are three ways to define the 'user' of
      a physical entity\n   1. Direct containment in physical hierarchy\n   2. Anywhere
      in physical hierarchy\n   3. As defined by a means outside the scope of this
      MIB.  This could\n   include logical interfaces that could run on a port, software
      that\n   could run on a module, etc.\n   Administrative, operational, alarm,
      and standby state use all three\n   definitions of 'user'.  Usage state supports
      only the concept of\n   direct containment to simplify implementations of this
      object.\n"
    title: 2.3.  Physical Entity Users
  - contents:
    - "2.4.  Physical Class Behavior\n   This MIB makes no effort to standardize the
      behaviors and\n   characteristics of the various physical classes [RFC4133],
      but rather\n   how this information is reported.  In looking at real-world products,\n
      \  items within the same physical class vary substantially.  The MIB has\n   therefore
      provided guidance on how to support objects where a\n   particular instance
      of a physical class cannot support part or all of\n   a particular state.\n"
    title: 2.4.  Physical Class Behavior
  title: 2.  Entity State
- contents:
  - '3.  Relation to Other MIBs

    '
  - contents:
    - "3.1.  Relation to the Interfaces MIB\n   The Interfaces MIB [RFC2863] defines
      the ifAdminStatus object, which\n   has states of up, down, and testing, and
      the ifOperStatus object,\n   which has states of up, down, testing, unknown,
      dormant, notPresent,\n   and lowerLayerDown.\n   An ifAdminStatus of 'up' is
      equivalent to setting the entStateAdmin\n   object to 'unlocked'.  An ifAdminStatus
      of 'down' is equivalent to\n   setting the entStateAdmin object to either 'locked'
      or\n   'shuttingDown', depending on a system's interpretation of 'down'.\n   An
      ifOperStatus of 'up' is equivalent to an entStateOper value of\n   'enabled'.
      \ An ifOperStatus of 'down' due to operational failure is\n   equivalent to
      an entStateOper value of 'disabled'.  An ifOperStatus\n   of 'down' due to being
      administratively disabled is equivalent to an\n   entStateAdmin value of 'locked'
      and an entStateOper value of either\n   'enabled' or 'disabled' depending on
      whether there are any known\n   issues that would prevent the entity from becoming
      operational when\n   its entStateAdmin is set to 'unlocked'.  An ifOperStatus
      of 'unknown'\n   is equivalent to an entStateOper value of 'unknown'.  The\n
      \  ifOperStatus values of 'testing' and 'dormant' are not explicitly\n   supported
      by this MIB, but the state objects will be able to reflect\n   other aspects
      of the entities' administrative and operational state.\n   The ifOperStatus
      values of 'notPresent' and 'lowerLayerDown' are in\n   some ways computed states
      and so are therefore not supported in this\n   MIB.  They can, though, be computed
      by examining the states of\n   entities within this object's containment hierarchy
      and other\n   available related states.\n"
    title: 3.1.  Relation to the Interfaces MIB
  - contents:
    - "3.2.  Relation to Alarm MIB\n   The entStateAlarm object indicates whether
      or not there are any\n   active alarms against this entity.  If there are active
      alarms, then\n   the alarmActiveTable in the Alarm MIB [RFC3877] should be searched\n
      \  for rows whose alarmActiveResourceId matches this entPhysicalIndex.\n   Alternatively,
      if the alarmActiveTable is queried first and an active\n   alarm with a value
      of alarmActiveResourceId that matches this\n   entPhysicalIndex is found, then
      entStateAlarm can be used to quickly\n   determine if there are additional active
      alarms with a different\n   severity against this physical entity.\n"
    title: 3.2.  Relation to Alarm MIB
  - contents:
    - "3.3 Relation to Bridge MIB\n   For entities of physical type of 'port' that
      support the\n   dot1dStpPortEnable object in the Bridge MIB [RFC4188], a value
      of\n   'enabled' is equivalent to setting the entStateAdmin object to\n   'unlocked'.
      \ Setting dot1dStpPortEnable to 'disabled' is equivalent\n   to setting the
      entStateAdmin object to 'locked'.\n"
    title: 3.3 Relation to Bridge MIB
  - contents:
    - "3.4 Relation to the Host Resources MIB\n   The hrDeviceStatus object in the
      Host Resources MIB [RFC2790]\n   provides an operational state for devices.
      \ For entities that\n   logically correspond to the concept of a device, a value
      of 'unknown'\n   for hrDeviceStatus corresponds to an entStateOper value of
      'unknown'.\n   A value of 'running' corresponds to an entStateOper value of\n
      \  'enabled'.  A value of 'warning' also corresponds to an entStateOper\n   value
      of 'enabled', but with appropriate bits set in the\n   entStateAlarm object
      to indicate the alarms corresponding to the\n   unusual error condition detected.
      \ A value of 'testing' or 'down' is\n   equivalent to an entStateOper value
      of 'disabled'.\n"
    title: 3.4 Relation to the Host Resources MIB
  title: 3.  Relation to Other MIBs
- contents:
  - "4.  Textual Conventions\n   ENTITY-STATE-TC-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n
    \     MODULE-IDENTITY, mib-2       FROM SNMPv2-SMI\n      TEXTUAL-CONVENTION           FROM
    SNMPv2-TC;\n    entityStateTc MODULE-IDENTITY\n        LAST-UPDATED \"200511220000Z\"\n
    \       ORGANIZATION \"IETF Entity MIB Working Group\"\n        CONTACT-INFO\n
    \               \"General Discussion: entmib@ietf.org\n                 To Subscribe:\n
    \                http://www.ietf.org/mailman/listinfo/entmib\n                 http://www.ietf.org/html.charters/entmib-charter.html\n
    \                Sharon Chisholm\n                 Nortel Networks\n                 PO
    Box 3511 Station C\n                 Ottawa, Ont.  K1Y 4H7\n                 Canada\n
    \                schishol@nortel.com\n                 David T. Perkins\n                 548
    Qualbrook Ct\n                 San Jose, CA 95110\n                 USA\n                 Phone:
    408 394-8702\n                 dperkins@snmpinfo.com\"\n         DESCRIPTION\n
    \               \"This MIB defines state textual conventions.\n                 Copyright
    (C) The Internet Society 2005.  This version\n                 of this MIB module
    is part of RFC 4268;  see the RFC\n                 itself for full legal notices.\"\n
    \        REVISION    \"200511220000Z\"\n         DESCRIPTION\n             \"Initial
    version, published as RFC 4268.\"\n        ::= { mib-2 130 }\n     EntityAdminState
    \ ::=  TEXTUAL-CONVENTION\n       STATUS         current\n       DESCRIPTION\n
    \           \" Represents the various possible administrative states.\n              A
    value of 'locked' means the resource is administratively\n              prohibited
    from use.  A value of 'shuttingDown' means that\n              usage is administratively
    limited to current instances of\n              use.  A value of 'unlocked' means
    the resource is not\n              administratively prohibited from use.  A value
    of\n              'unknown' means that this resource is unable to\n              report
    administrative state.\"\n       SYNTAX         INTEGER\n                 {\n                 unknown
    (1),\n                 locked (2),\n                 shuttingDown (3),\n                 unlocked
    (4)\n                 }\n     EntityOperState  ::=  TEXTUAL-CONVENTION\n       STATUS
    \        current\n       DESCRIPTION\n            \" Represents the possible values
    of operational states.\n              A value of 'disabled' means the resource
    is totally\n              inoperable.  A value of 'enabled' means the resource\n
    \             is partially or fully operable.  A value of 'testing'\n              means
    the resource is currently being tested\n              and cannot therefore report
    whether it is operational\n              or not.  A value of 'unknown' means that
    this\n              resource is unable to report operational state.\"\n       SYNTAX
    \        INTEGER\n                 {\n                 unknown (1),\n                 disabled
    (2),\n                 enabled (3),\n                 testing (4)\n                 }\n
    \    EntityUsageState  ::=  TEXTUAL-CONVENTION\n       STATUS         current\n
    \      DESCRIPTION\n            \" Represents the possible values of usage states.\n
    \             A value of 'idle' means the resource is servicing no\n              users.
    \ A value of 'active' means the resource is\n              currently in use and
    it has sufficient spare capacity\n              to provide for additional users.
    \ A value of 'busy'\n              means the resource is currently in use, but
    it\n              currently has no spare capacity to provide for\n              additional
    users.  A value of 'unknown' means\n              that this resource is unable
    to report usage state.\"\n       SYNTAX         INTEGER\n                 {\n
    \                unknown (1),\n                 idle (2),\n                 active
    (3),\n                 busy (4)\n                 }\n    EntityAlarmStatus  ::=
    \ TEXTUAL-CONVENTION\n       STATUS         current\n       DESCRIPTION\n          \"
    Represents the possible values of alarm status.\n            An Alarm [RFC3877]
    is a persistent indication\n            of an error or warning condition.\n            When
    no bits of this attribute are set, then no active\n            alarms are known
    against this entity and it is not under\n            repair.\n            When
    the 'value of underRepair' is set, the resource is\n            currently being
    repaired, which, depending on the\n            implementation, may make the other
    values in this bit\n            string not meaningful.\n            When the value
    of 'critical' is set, one or more critical\n            alarms are active against
    the resource.  When the value\n            of 'major' is set, one or more major
    alarms are active\n            against the resource.  When the value of 'minor'
    is set,\n            one or more minor alarms are active against the resource.\n
    \           When the value of 'warning' is set, one or more warning\n            alarms
    are active against the resource.  When the value\n            of 'indeterminate'
    is set, one or more alarms of whose\n            perceived severity cannot be
    determined are active\n            against this resource.\n            A value
    of 'unknown' means that this resource is\n            unable to report alarm state.\"\n
    \            SYNTAX         BITS\n                {\n                unknown (0),\n
    \               underRepair (1),\n                critical(2),\n                major(3),\n
    \               minor(4),\n                -- The following are not defined in
    X.733\n                warning (5),\n                indeterminate (6)\n                              }\n
    \    EntityStandbyStatus  ::=  TEXTUAL-CONVENTION\n       STATUS         current\n
    \      DESCRIPTION\n            \" Represents the possible values of standby status.\n
    \             A value of 'hotStandby' means the resource is not\n              providing
    service, but it will be immediately able to\n              take over the role
    of the resource to be backed up,\n              without the need for initialization
    activity, and will\n              contain the same information as the resource
    to be\n              backed up.  A value of 'coldStandy' means that the\n              resource
    is to back up another resource, but will not\n              be immediately able
    to take over the role of a resource\n              to be backed up, and will require
    some initialization\n              activity.  A value of 'providingService' means
    the\n              resource is providing service.  A value of\n              'unknown'
    means that this resource is unable to\n              report standby state.\"\n
    \            SYNTAX         INTEGER\n               {\n               unknown
    (1),\n               hotStandby (2),\n               coldStandby (3),\n               providingService
    (4)\n               }\n   END\n"
  title: 4.  Textual Conventions
- contents:
  - "5.  Definitions\n   ENTITY-STATE-MIB DEFINITIONS ::= BEGIN\n     IMPORTS\n         MODULE-IDENTITY,
    OBJECT-TYPE, NOTIFICATION-TYPE, mib-2\n             FROM SNMPv2-SMI\n         DateAndTime\n
    \            FROM SNMPv2-TC\n         MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP\n
    \             FROM SNMPv2-CONF\n         entPhysicalIndex\n              FROM
    ENTITY-MIB\n         EntityAdminState, EntityOperState, EntityUsageState,\n         EntityAlarmStatus,
    EntityStandbyStatus\n              FROM ENTITY-STATE-TC-MIB;\n     entityStateMIB
    MODULE-IDENTITY\n         LAST-UPDATED \"200511220000Z\"\n         ORGANIZATION
    \"IETF Entity MIB Working Group\"\n         CONTACT-INFO\n                 \"
    General Discussion: entmib@ietf.org\n                   To Subscribe:\n                   http://www.ietf.org/mailman/listinfo/entmib\n
    \                  http://www.ietf.org/html.charters/entmib-charter.html\n                   Sharon
    Chisholm\n                   Nortel Networks\n                   PO Box 3511 Station
    C\n                   Ottawa, Ont.  K1Y 4H7\n                   Canada\n                   schishol@nortel.com\n
    \                  David T. Perkins\n                   548 Qualbrook Ct\n                   San
    Jose, CA 95110\n                   USA\n                   Phone: 408 394-8702\n
    \                  dperkins@snmpinfo.com\n                  \"\n         DESCRIPTION\n
    \            \"This MIB defines a state extension to the Entity MIB.\n              Copyright
    (C) The Internet Society 2005.  This version\n              of this MIB module
    is part of RFC 4268; see the RFC\n              itself for full legal notices.\"\n
    \        REVISION    \"200511220000Z\"\n         DESCRIPTION\n             \"Initial
    version, published as RFC 4268.\"\n         ::= { mib-2 131 }\n     -- Entity
    State Objects\n     entStateObjects OBJECT IDENTIFIER ::= { entityStateMIB 1 }\n
    \    entStateTable OBJECT-TYPE\n      SYNTAX      SEQUENCE OF EntStateEntry\n
    \     MAX-ACCESS  not-accessible\n      STATUS      current\n      DESCRIPTION\n
    \         \"A table of information about state/status of entities.\n           This
    is a sparse augment of the entPhysicalTable.  Entries\n           appear in this
    table for values of\n           entPhysicalClass [RFC4133] that in this implementation\n
    \          are able to report any of the state or status stored in\n           this
    table.\n           \"\n      ::= { entStateObjects 1 }\n       entStateEntry OBJECT-TYPE\n
    \         SYNTAX      EntStateEntry\n          MAX-ACCESS  not-accessible\n          STATUS
    \     current\n          DESCRIPTION\n              \"State information about
    this physical entity.\"\n          INDEX       { entPhysicalIndex }\n          ::=
    { entStateTable 1 }\n       EntStateEntry ::= SEQUENCE {\n           entStateLastChanged
    DateAndTime,\n           entStateAdmin       EntityAdminState,\n           entStateOper
    \       EntityOperState,\n           entStateUsage       EntityUsageState,\n           entStateAlarm
    \      EntityAlarmStatus,\n           entStateStandby     EntityStandbyStatus\n
    \         }\n     entStateLastChanged OBJECT-TYPE\n      SYNTAX      DateAndTime\n
    \     MAX-ACCESS  read-only\n      STATUS      current\n      DESCRIPTION\n        \"The
    value of this object is the date and\n         time when the value of any of entStateAdmin,\n
    \        entStateOper, entStateUsage, entStateAlarm,\n         or entStateStandby
    changed for this entity.\n         If there has been no change since\n         the
    last re-initialization of the local system,\n         this object contains the
    date and time of\n         local system initialization.  If there has been\n         no
    change since the entity was added to the\n         local system, this object contains
    the date and\n         time of the insertion.\"\n      ::= { entStateEntry 1 }\n
    \  entStateAdmin OBJECT-TYPE\n          SYNTAX      EntityAdminState\n          MAX-ACCESS
    \ read-write\n          STATUS      current\n          DESCRIPTION\n               \"The
    administrative state for this entity.\n                This object refers to an
    entities administrative\n                permission to service both other entities
    within\n                its containment hierarchy as well other users of\n                its
    services defined by means outside the scope\n                of this MIB.\n                Setting
    this object to 'notSupported' will result\n                in an 'inconsistentValue'
    error.  For entities that\n                do not support administrative state,
    all set\n                operations will result in an 'inconsistentValue'\n                error.\n
    \               Some physical entities exhibit only a subset of the\n                remaining
    administrative state values.  Some entities\n                cannot be locked,
    and hence this object exhibits only\n                the 'unlocked' state.  Other
    entities cannot be shutdown\n                gracefully, and hence this object
    does not exhibit the\n                'shuttingDown' state.  A value of 'inconsistentValue'\n
    \               will be returned if attempts are made to set this\n                object
    to values not supported by its administrative\n                model.\"\n          ::=
    { entStateEntry 2 }\n    entStateOper OBJECT-TYPE\n          SYNTAX      EntityOperState\n
    \         MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\n
    \             \"The operational state for this entity.\n               Note that
    unlike the state model used within the\n               Interfaces MIB [RFC2863],
    this object does not follow\n               the administrative state.  An administrative
    state of\n               down does not predict an operational state\n               of
    disabled.\n               A value of 'testing' means that entity currently being\n
    \              tested and cannot therefore report whether it is\n               operational
    or not.\n               A value of 'disabled' means that an entity is totally\n
    \              inoperable and unable to provide service both to entities\n               within
    its containment hierarchy, or to other receivers\n               of its service
    as defined in ways outside the scope of\n               this MIB.\n               A
    value of 'enabled' means that an entity is fully or\n               partially
    operable and able to provide service both to\n               entities within its
    containment hierarchy, or to other\n               receivers of its service as
    defined in ways outside the\n               scope of this MIB.\n               Note
    that some implementations may not be able to\n               accurately report
    entStateOper while the\n               entStateAdmin object has a value other
    than 'unlocked'.\n               In these cases, this object MUST have a value\n
    \              of 'unknown'.\"\n          ::= { entStateEntry 3 }\n    entStateUsage
    OBJECT-TYPE\n          SYNTAX      EntityUsageState\n          MAX-ACCESS  read-only\n
    \         STATUS      current\n          DESCRIPTION\n              \"The usage
    state for this entity.\n               This object refers to an entity's ability
    to service more\n               physical entities in a containment hierarchy.
    \ A value\n               of 'idle' means this entity is able to contain other\n
    \              entities but that no other entity is currently\n               contained
    within this entity.\n               A value of 'active' means that at least one
    entity is\n               contained within this entity, but that it could handle\n
    \              more.  A value of 'busy' means that the entity is unable\n               to
    handle any additional entities being contained in it.\n               Some entities
    will exhibit only a subset of the\n               usage state values.  Entities
    that are unable to ever\n               service any entities within a containment
    hierarchy will\n               always have a usage state of 'busy'.  Some entities
    will\n               only ever be able to support one entity within its\n               containment
    hierarchy and will therefore only exhibit\n               values of 'idle' and
    'busy'.\"\n             ::= { entStateEntry 4 }\n    entStateAlarm OBJECT-TYPE\n
    \         SYNTAX      EntityAlarmStatus\n          MAX-ACCESS  read-only\n          STATUS
    \     current\n          DESCRIPTION\n              \"The alarm status for this
    entity.  It does not include\n               the alarms raised on child components
    within its\n               containment hierarchy.\n               A value of 'unknown'
    means that this entity is\n               unable to report alarm state.  Note
    that this differs\n               from 'indeterminate', which means that alarm
    state\n               is supported and there are alarms against this entity,\n
    \              but the severity of some of the alarms is not known.\n               If
    no bits are set, then this entity supports reporting\n               of alarms,
    but there are currently no active alarms\n               against this entity.\"\n
    \         ::= { entStateEntry 5 }\n   entStateStandby OBJECT-TYPE\n          SYNTAX
    EntityStandbyStatus\n          MAX-ACCESS read-only\n          STATUS current\n
    \         DESCRIPTION\n               \"The standby status for this entity.\n
    \              Some entities will exhibit only a subset of the\n               remaining
    standby state values.  If this entity\n               cannot operate in a standby
    role, the value of this\n               object will always be 'providingService'.\"\n
    \    ::= { entStateEntry 6 }\n   -- Notifications\n    entStateNotifications OBJECT
    IDENTIFIER ::= { entityStateMIB 0 }\n   entStateOperEnabled NOTIFICATION-TYPE\n
    \     OBJECTS { entStateAdmin,\n                entStateAlarm\n              }\n
    \     STATUS             current\n      DESCRIPTION\n              \"An entStateOperEnabled
    notification signifies that the\n               SNMP entity, acting in an agent
    role, has detected that\n               the entStateOper object for one of its
    entities has\n               transitioned into the 'enabled' state.\n               The
    entity this notification refers can be identified by\n               extracting
    the entPhysicalIndex from one of the\n               variable bindings.  The entStateAdmin
    and entStateAlarm\n               varbinds may be examined to find out additional\n
    \              information on the administrative state at the time of\n               the
    operation state change as well as to find out whether\n               there were
    any known alarms against the entity at that\n               time that may explain
    why the physical entity has become\n               operationally disabled.\"\n
    \    ::= { entStateNotifications 1 }\n   entStateOperDisabled NOTIFICATION-TYPE\n
    \     OBJECTS { entStateAdmin,\n                entStateAlarm }\n      STATUS
    \            current\n      DESCRIPTION\n              \"An entStateOperDisabled
    notification signifies that the\n               SNMP entity, acting in an agent
    role, has detected that\n               the entStateOper object for one of its
    entities has\n               transitioned into the 'disabled' state.\n               The
    entity this notification refers can be identified by\n               extracting
    the entPhysicalIndex from one of the\n               variable bindings.  The entStateAdmin
    and entStateAlarm\n               varbinds may be examined to find out additional\n
    \              information on the administrative state at the time of\n               the
    operation state change as well as to find out whether\n               there were
    any known alarms against the entity at that\n               time that may affect
    the physical entity's\n               ability to stay operationally enabled.\"\n
    \    ::= { entStateNotifications 2 }\n   -- Conformance and Compliance\n   entStateConformance
    OBJECT IDENTIFIER ::= { entityStateMIB 2 }\n   entStateCompliances OBJECT IDENTIFIER\n
    \                    ::= { entStateConformance 1 }\n   entStateCompliance MODULE-COMPLIANCE\n
    \        STATUS  current\n         DESCRIPTION\n             \"The compliance
    statement for systems supporting\n             the Entity State MIB.\"\n         MODULE
    -- this module\n             MANDATORY-GROUPS {\n              entStateGroup\n
    \            }\n         GROUP       entStateNotificationsGroup\n            DESCRIPTION\n
    \               \"This group is optional.\"\n         OBJECT entStateAdmin\n          MIN-ACCESS
    \ read-only\n          DESCRIPTION\n              \"Write access is not required.\"\n
    \     ::= { entStateCompliances 1 }\n   entStateGroups OBJECT IDENTIFIER ::= {
    entStateConformance 2 }\n   entStateGroup OBJECT-GROUP\n      OBJECTS {\n              entStateLastChanged,\n
    \             entStateAdmin,\n              entStateOper,\n              entStateUsage,\n
    \             entStateAlarm,\n              entStateStandby\n              }\n
    \      STATUS   current\n       DESCRIPTION\n            \"Standard Entity State
    group.\"\n       ::= { entStateGroups 1}\n   entStateNotificationsGroup NOTIFICATION-GROUP\n
    \     NOTIFICATIONS {\n              entStateOperEnabled,\n              entStateOperDisabled\n
    \             }\n       STATUS   current\n       DESCRIPTION\n            \"Standard
    Entity State Notification group.\"\n       ::= { entStateGroups 2}\n   END\n"
  title: 5.  Definitions
- contents:
  - "6.  Security Considerations\n   The ENTITY-STATE-TC-MIB defined in section 4
    does not define any\n   management objects.  Instead, it defines a set of textual
    conventions\n   that may be used by other MIB modules to define management objects.\n
    \  Meaningful security considerations can only be written in the MIB\n   modules
    that define management objects.  The ENTITY-STATE-TC-MIB has\n   therefore no
    impact on the security of the Internet.\n   The ENTITY-STATE-MIB defined in section
    5 defines one management\n   object -- entStateAdmin -- that has a MAX-ACCESS
    clause of read-\n   write.  The object may be considered sensitive or vulnerable
    in some\n   network environments.  The support for SET operations in a non-secure\n
    \  environment without proper protection can have a negative effect on\n   network
    operations.\n   Note that setting the entStateAdmin to 'locked' or 'shuttingDown'
    can\n   cause disruption of services ranging from those running on a port to\n
    \  those on an entire device, depending on the type of entity.  Access\n   to
    this object should be properly protected.\n   Access to the objects defined in
    this MIB allows one to figure out\n   what the active and standby resources in
    a network are.  This\n   information can be used to optimize attacks on networks
    so even\n   read-only access to this MIB should be properly protected.\n   SNMP
    versions prior to SNMPv3 did not include adequate security.\n   Even if the network
    itself is secure (for example by using IPsec),\n   even then, there is no control
    as to who on the secure network is\n   allowed to access and GET/SET (read/change/create/delete)
    the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers consider
    the security features as\n   provided by the SNMPv3 framework (see [RFC3410],
    section 8),\n   including full support for the SNMPv3 cryptographic mechanisms
    (for\n   authentication and privacy).\n   Further, deployment of SNMP versions
    prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy
    SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module is properly configured to give access to\n   the objects only
    to those principals (entities) that have legitimate\n   rights to indeed GET or
    SET (change/create/delete) them.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Acknowledgements\n   This document is a product of the Entity MIB Working
    Group.\n"
  title: 7.  Acknowledgements
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2578]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n
      \             Rose, M., and S. Waldbusser, \"Structure of Management\n              Information
      Version 2 (SMIv2)\", STD 58, RFC 2578, April\n              1999.\n   [RFC2579]
      \ McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n              Rose,
      M., and S. Waldbusser, \"Textual Conventions for\n              SMIv2\", STD
      58, RFC 2579, April 1999.\n   [RFC2580]  McCloghrie, K., Perkins, D., Schoenwaelder,
      J., Case, J.,\n              Rose, M., and S. Waldbusser, \"Conformance Statements
      for\n              SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC4133]  Bierman,
      A. and K. McCloghrie, \"Entity MIB (Version 3)\",\n              RFC 4133, August
      2005.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC2790]  Waldbusser, S. and P. Grillo, \"Host
      Resources MIB\", RFC\n              2790, March 2000.\n   [RFC2863]  McCloghrie,
      K. and F. Kastenholz, \"The Interfaces Group\n              MIB using SMIv2\",
      RFC 2863, June 2000.\n   [RFC3410]  Case, J., Mundy, R., Partain, D., and B.
      Stewart,\n              \"Introduction and Applicability Statements for Internet-\n
      \             Standard Management Framework\", RFC 3410, December 2002.\n   [RFC3877]
      \ Chisholm, S. and D. Romascanu, \"Alarm Management\n              Information
      Base (MIB)\", RFC 3877, September 2004.\n   [RFC4188]  Norseth, K. and E. Bell,
      \"Definitions of Managed Objects\n              for Bridges\", RFC 4188, September
      2005.\n   [X.731]    ITU Recommendation X.731, \"Information Technology - Open\n
      \             Systems Interconnection - System Management: State\n              Management
      Function\", 1992.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Authors' Addresses\n   Sharon Chisholm\n   Nortel Networks\n   PO Box 3511, Station
    C\n   Ottawa, Ontario, K1Y 4H7\n   Canada\n   EMail: schishol@nortel.com\n   David
    T. Perkins\n   548 Qualbrook Ct\n   San Jose, CA 95110\n   USA\n   Phone: 408
    394-8702\n   EMail: dperkins@snmpinfo.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
