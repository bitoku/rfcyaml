- title: __initial_text__
  contents:
  - "   Real-Time Transport Protocol (RTP) Payload Format and File Storage\n    Format\
    \ for the Adaptive Multi-Rate (AMR) and Adaptive Multi-Rate\n                \
    \     Wideband (AMR-WB) Audio Codecs\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a real-time transport protocol (RTP) payload\n\
    \   format to be used for Adaptive Multi-Rate (AMR) and Adaptive Multi-\n   Rate\
    \ Wideband (AMR-WB) encoded speech signals.  The payload format is\n   designed\
    \ to be able to interoperate with existing AMR and AMR-WB\n   transport formats\
    \ on non-IP networks.  In addition, a file format is\n   specified for transport\
    \ of AMR and AMR-WB speech data in storage mode\n   applications such as email.\
    \  Two separate MIME type registrations are\n   included, one for AMR and one\
    \ for AMR-WB, specifying use of both the\n   RTP payload format and the storage\
    \ format.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction....................................................\
    \ 3\n   2. Conventions and Acronyms........................................ 3\n\
    \   3. Background on AMR/AMR-WB and Design Principles.................. 4\n  \
    \   3.1. The Adaptive Multi-Rate (AMR) Speech Codec.................. 4\n    \
    \ 3.2. The Adaptive Multi-Rate Wideband (AMR-WB) Speech Codec...... 5\n     3.3.\
    \ Multi-rate Encoding and Mode Adaptation..................... 5\n     3.4. Voice\
    \ Activity Detection and Discontinuous Transmission..... 6\n     3.5. Support\
    \ for Multi-Channel Session........................... 6\n     3.6. Unequal Bit-error\
    \ Detection and Protection.................. 7\n       3.6.1. Applying UEP and\
    \ UED in an IP Network................... 7\n     3.7. Robustness against Packet\
    \ Loss.............................. 9\n       3.7.1. Use of Forward Error Correction\
    \ (FEC)................... 9\n       3.7.2. Use of Frame Interleaving...............................11\n\
    \     3.8. Bandwidth Efficient or Octet-aligned Mode...................11\n  \
    \   3.9. AMR or AMR-WB Speech over IP scenarios......................12\n   4.\
    \ AMR and AMR-WB RTP Payload Formats..............................14\n     4.1.\
    \ RTP Header Usage............................................14\n     4.2. Payload\
    \ Structure...........................................16\n     4.3. Bandwidth-Efficient\
    \ Mode....................................16\n       4.3.1. The Payload Header......................................16\n\
    \       4.3.2. The Payload Table of Contents...........................17\n  \
    \     4.3.3. Speech Data.............................................19\n    \
    \   4.3.4. Algorithm for Forming the Payload.......................20\n      \
    \ 4.3.5 Payload Examples.........................................21\n        \
    \    4.3.5.1. Single Channel Payload Carrying a Single Frame...21\n          \
    \  4.3.5.2. Single Channel Payload Carrying Multiple Frames..22\n            4.3.5.3.\
    \ Multi-Channel Payload Carrying Multiple Frames...23\n     4.4. Octet-aligned\
    \ Mode..........................................25\n       4.4.1. The Payload\
    \ Header......................................25\n       4.4.2. The Payload Table\
    \ of Contents and Frame CRCs............26\n         4.4.2.1. Use of Frame CRC\
    \ for UED over IP....................28\n       4.4.3. Speech Data.............................................30\n\
    \       4.4.4. Methods for Forming the Payload.........................30\n  \
    \     4.4.5. Payload Examples........................................32\n    \
    \        4.4.5.1. Basic Single Channel Payload Carrying\n                    \
    \ Multiple Frames..................................32\n         4.4.5.2. Two Channel\
    \ Payload with CRC, Interleaving,\n                     and Robust-sorting...............................32\n\
    \     4.5. Implementation Considerations...............................33\n  \
    \ 5. AMR and AMR-WB Storage Format...................................34\n    \
    \ 5.1. Single Channel Header.......................................34\n     5.2.\
    \ Multi-channel Header........................................35\n     5.3. Speech\
    \ Frames...............................................36\n   6. Congestion Control..............................................37\n\
    \   7. Security Considerations.........................................37\n  \
    \   7.1. Confidentiality.............................................37\n    \
    \ 7.2. Authentication..............................................38\n     7.3.\
    \ Decoding Validation.........................................38\n   8. Payload\
    \ Format Parameters.......................................38\n     8.1. AMR MIME\
    \ Registration.......................................39\n     8.2. AMR-WB MIME\
    \ Registration....................................41\n     8.3. Mapping MIME Parameters\
    \ into SDP............................44\n   9. IANA Considerations.............................................45\n\
    \   10. Acknowledgements...............................................45\n  \
    \ 11. References.....................................................45\n    \
    \ 11.1 Informative References......................................46\n   12.\
    \ Authors' Addresses.............................................48\n   13. Full\
    \ Copyright Statement.......................................49\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document specifies the payload format for packetization\
    \ of AMR\n   and AMR-WB encoded speech signals into the Real-time Transport\n\
    \   Protocol (RTP) [8].  The payload format supports transmission of\n   multiple\
    \ channels, multiple frames per payload, the use of fast codec\n   mode adaptation,\
    \ robustness against packet loss and bit errors, and\n   interoperation with existing\
    \ AMR and AMR-WB transport formats on\n   non-IP networks, as described in Section\
    \ 3.\n   The payload format itself is specified in Section 4.  A related file\n\
    \   format is specified in Section 5 for transport of AMR and AMR-WB\n   speech\
    \ data in storage mode applications such as email.  In Section\n   8, two separate\
    \ MIME type registrations are provided, one for AMR and\n   one for AMR-WB.\n\
    \   Even though this RTP payload format definition supports the transport\n  \
    \ of both AMR and AMR-WB speech, it is important to remember that AMR\n   and\
    \ AMR-WB are two different codecs and they are always handled as\n   different\
    \ payload types in RTP.\n"
- title: 2. Conventions and Acronyms
  contents:
  - "2. Conventions and Acronyms\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC2119 [5].\n   The following acronyms are used in this document:\n    \
    \  3GPP   - the Third Generation Partnership Project\n      AMR    - Adaptive\
    \ Multi-Rate Codec\n      AMR-WB - Adaptive Multi-Rate Wideband Codec\n      CMR\
    \    - Codec Mode Request\n      CN     - Comfort Noise\n      DTX    - Discontinuous\
    \ Transmission\n      ETSI   - European Telecommunications Standards Institute\n\
    \      FEC    - Forward Error Correction\n      SCR    - Source Controlled Rate\
    \ Operation\n      SID    - Silence Indicator (the frames containing only CN\n\
    \               parameters)\n      VAD    - Voice Activity Detection\n      UED\
    \    - Unequal Error Detection\n      UEP    - Unequal Error Protection\n   The\
    \ term \"frame-block\" is used in this document to describe the\n   time-synchronized\
    \ set of speech frames in a multi-channel AMR or\n   AMR-WB session.  In particular,\
    \ in an N-channel session, a frame-\n   block will contain N speech frames, one\
    \ from each of the channels,\n   and all N speech frames represents exactly the\
    \ same time period.\n"
- title: 3. Background on AMR/AMR-WB and Design Principles
  contents:
  - "3. Background on AMR/AMR-WB and Design Principles\n   AMR and AMR-WB were originally\
    \ designed for circuit-switched mobile\n   radio systems.  Due to their flexibility\
    \ and robustness, they are\n   also suitable for other real-time speech communication\
    \ services over\n   packet-switched networks such as the Internet.\n   Because\
    \ of the flexibility of these codecs, the behavior in a\n   particular application\
    \ is controlled by several parameters that\n   select options or specify the acceptable\
    \ values for a variable.\n   These options and variables are described in general\
    \ terms at\n   appropriate points in the text of this specification as parameters\
    \ to\n   be established through out-of-band means.  In Section 8, all of the\n\
    \   parameters are specified in the form of MIME subtype registrations\n   for\
    \ the AMR and AMR-WB encodings.  The method used to signal these\n   parameters\
    \ at session setup or to arrange prior agreement of the\n   participants is beyond\
    \ the scope of this document; however, Section\n   8.3 provides a mapping of the\
    \ parameters into the Session Description\n   Protocol (SDP) [11] for those applications\
    \ that use SDP.\n"
- title: 3.1. The Adaptive Multi-Rate (AMR) Speech Codec
  contents:
  - "3.1. The Adaptive Multi-Rate (AMR) Speech Codec\n   The AMR codecs was originally\
    \ developed and standardized by the\n   European Telecommunications Standards\
    \ Institute (ETSI) for GSM\n   cellular systems.  It is now chosen by the Third\
    \ Generation\n   Partnership Project (3GPP) as the mandatory codec for third\n\
    \   generation (3G) cellular systems [1].\n   The AMR codec is a multi-mode codec\
    \ that supports 8 narrow band\n   speech encoding modes with bit rates between\
    \ 4.75 and 12.2 kbps.  The\n   sampling frequency used in AMR is 8000 Hz and the\
    \ speech encoding is\n   performed on 20 ms speech frames.  Therefore, each encoded\
    \ AMR speech\n   frame represents 160 samples of the original speech.\n   Among\
    \ the 8 AMR encoding modes, three are already separately adopted\n   as standards\
    \ of their own.  Particularly, the 6.7 kbps mode is\n   adopted as PDC-EFR [14],\
    \ the 7.4 kbps mode as IS-641 codec in TDMA\n   [13], and the 12.2 kbps mode as\
    \ GSM-EFR [12].\n"
- title: 3.2. The Adaptive Multi-Rate Wideband (AMR-WB) Speech Codec
  contents:
  - "3.2. The Adaptive Multi-Rate Wideband (AMR-WB) Speech Codec\n   The Adaptive\
    \ Multi-Rate Wideband (AMR-WB) speech codec [3] was\n   originally developed by\
    \ 3GPP to be used in GSM and 3G cellular\n   systems.\n   Similar to AMR, the\
    \ AMR-WB codec is also a multi-mode speech codec.\n   AMR-WB supports 9 wide band\
    \ speech coding modes with respective bit\n   rates ranging from 6.6 to 23.85\
    \ kbps.  The sampling frequency used in\n   AMR-WB is 16000 Hz and the speech\
    \ processing is performed on 20 ms\n   frames.  This means that each AMR-WB encoded\
    \ frame represents 320\n   speech samples.\n"
- title: 3.3. Multi-rate Encoding and Mode Adaptation
  contents:
  - "3.3. Multi-rate Encoding and Mode Adaptation\n   The multi-rate encoding (i.e.,\
    \ multi-mode) capability of AMR and\n   AMR-WB is designed for preserving high\
    \ speech quality under a wide\n   range of transmission conditions.\n   With AMR\
    \ or AMR-WB, mobile radio systems are able to use available\n   bandwidth as effectively\
    \ as possible.  E.g., in GSM it is possible to\n   dynamically adjust the speech\
    \ encoding rate during a session so as to\n   continuously adapt to the varying\
    \ transmission conditions by dividing\n   the fixed overall bandwidth between\
    \ speech data and error protective\n   coding to enable best possible trade-off\
    \ between speech compression\n   rate and error tolerance.  To perform mode adaptation,\
    \ the decoder\n   (speech receiver) needs to signal the encoder (speech sender)\
    \ the new\n   mode it prefers.  This mode change signal is called Codec Mode\n\
    \   Request or CMR.\n   Since in most sessions speech is sent in both directions\
    \ between the\n   two ends, the mode requests from the decoder at one end to the\n\
    \   encoder at the other end are piggy-backed over the speech frames in\n   the\
    \ reverse direction.  In other words, there is no out-of-band\n   signaling needed\
    \ for sending CMRs.\n   Every AMR or AMR-WB codec implementation is required to\
    \ support all\n   the respective speech coding modes defined by the codec and\
    \ must be\n   able to handle mode switching to any of the modes at any time.\n\
    \   However, some transport systems may impose limitations in the number\n   of\
    \ modes supported and how often the mode can change due to bandwidth\n   limitations\
    \ or other constraints.  For this reason, the decoder is\n   allowed to indicate\
    \ its acceptance of a particular mode or a subset\n   of the defined modes for\
    \ the session using out-of-band means.\n   For example, the GSM radio link can\
    \ only use a subset of at most four\n   different modes in a given session.  This\
    \ subset can be any\n   combination of the 8 AMR modes for an AMR session or any\
    \ combination\n   of the 9 AMR-WB modes for an AMR-WB session.\n   Moreover, for\
    \ better interoperability with GSM through a gateway, the\n   decoder is allowed\
    \ to use out-of-band means to set the minimum number\n   of frames between two\
    \ mode changes and to limit the mode change among\n   neighboring modes only.\n\
    \   Section 8 specifies a set of MIME parameters that may be used to\n   signal\
    \ these mode adaptation controls at session setup.\n"
- title: 3.4. Voice Activity Detection and Discontinuous Transmission
  contents:
  - "3.4. Voice Activity Detection and Discontinuous Transmission\n   Both codecs\
    \ support voice activity detection (VAD) and generation of\n   comfort noise (CN)\
    \ parameters during silence periods.  Hence, the\n   codecs have the option to\
    \ reduce the number of transmitted bits and\n   packets during silence periods\
    \ to a minimum.  The operation of\n   sending CN parameters at regular intervals\
    \ during silence periods is\n   usually called discontinuous transmission (DTX)\
    \ or source controlled\n   rate (SCR) operation.  The AMR or AMR-WB frames containing\
    \ CN\n   parameters are called Silence Indicator (SID) frames.  See more\n   details\
    \ about VAD and DTX functionality in [9] and [10].\n"
- title: 3.5. Support for Multi-Channel Session
  contents:
  - "3.5. Support for Multi-Channel Session\n   Both the RTP payload format and the\
    \ storage format defined in this\n   document support multi-channel audio content\
    \ (e.g., a stereophonic\n   speech session).\n   Although AMR and AMR-WB codecs\
    \ themselves do not support encoding of\n   multi-channel audio content into a\
    \ single bit stream, they can be\n   used to separately encode and decode each\
    \ of the individual channels.\n   To transport (or store) the separately encoded\
    \ multi-channel content,\n   the speech frames for all channels that are framed\
    \ and encoded for\n   the same 20 ms periods are logically collected in a frame-block.\n\
    \   At the session setup, out-of-band signaling must be used to indicate\n   the\
    \ number of channels in the session and the order of the speech\n   frames from\
    \ different channels in each frame-block.  When using SDP\n   for signaling, the\
    \ number of channels is specified in the rtpmap\n   attribute and the order of\
    \ channels carried in each frame-block is\n   implied by the number of channels\
    \ as specified in Section 4.1 in\n   [24].\n"
- title: 3.6. Unequal Bit-error Detection and Protection
  contents:
  - "3.6. Unequal Bit-error Detection and Protection\n   The speech bits encoded in\
    \ each AMR or AMR-WB frame have different\n   perceptual sensitivity to bit errors.\
    \  This property has been\n   exploited in cellular systems to achieve better\
    \ voice quality by\n   using unequal error protection and detection (UEP and UED)\n\
    \   mechanisms.\n   The UEP/UED mechanisms focus the protection and detection\
    \ of\n   corrupted bits to the perceptually most sensitive bits in an AMR or\n\
    \   AMR-WB frame.  In particular, speech bits in an AMR or AMR-WB frame\n   are\
    \ divided into class A, B, and C, where bits in class A are most\n   sensitive\
    \ and bits in class C least sensitive (see Table 1 below for\n   AMR and [4] for\
    \ AMR-WB).  A frame is only declared damaged if there\n   are bit errors found\
    \ in the most sensitive bits, i.e., the class A\n   bits.  On the other hand,\
    \ it is acceptable to have some bit errors in\n   the other bits, i.e., class\
    \ B and C bits.\n                                    Class A   total speech\n\
    \                  Index   Mode       bits       bits\n                  ----------------------------------------\n\
    \                    0     AMR 4.75   42         95\n                    1   \
    \  AMR 5.15   49        103\n                    2     AMR 5.9    55        118\n\
    \                    3     AMR 6.7    58        134\n                    4   \
    \  AMR 7.4    61        148\n                    5     AMR 7.95   75        159\n\
    \                    6     AMR 10.2   65        204\n                    7   \
    \  AMR 12.2   81        244\n                    8     AMR SID    39         39\n\
    \          Table 1.  The number of class A bits for the AMR codec.\n   Moreover,\
    \ a damaged frame is still useful for error concealment at\n   the decoder since\
    \ some of the less sensitive bits can still be used.\n   This approach can improve\
    \ the speech quality compared to discarding\n   the damaged frame.\n"
- title: 3.6.1. Applying UEP and UED in an IP Network
  contents:
  - "3.6.1. Applying UEP and UED in an IP Network\n   To take full advantage of the\
    \ bit-error robustness of the AMR and\n   AMR-WB codec, the RTP payload format\
    \ is designed to facilitate\n   UEP/UED in an IP network.  It should be noted\
    \ however that the\n   utilization of UEP and UED discussed below is OPTIONAL.\n\
    \   UEP/UED in an IP network can be achieved by detecting bit errors in\n   class\
    \ A bits and tolerating bit errors in class B/C bits of the AMR\n   or AMR-WB\
    \ frame(s) in each RTP payload.\n   Today there exist some link layers that do\
    \ not discard packets with\n   bit errors, e.g., SLIP and some wireless links.\
    \  With the Internet\n   traffic pattern shifting towards a more multimedia-centric\
    \ one, more\n   link layers of such nature may emerge in the future.  With transport\n\
    \   layer support for partial checksums, for example those supported by\n   UDP-Lite\
    \ [15], bit error tolerant AMR and AMR-WB traffic could\n   achieve better performance\
    \ over these types of links.\n   There are at least two basic approaches for carrying\
    \ AMR and AMR-WB\n   traffic over bit error tolerant IP networks:\n   1) Utilizing\
    \ a partial checksum to cover headers and the most\n      important speech bits\
    \ of the payload.  It is recommended that at\n      least all class A bits are\
    \ covered by the checksum.\n   2) Utilizing a partial checksum to only cover headers,\
    \ but a frame\n      CRC to cover the class A bits of each speech frame in the\
    \ RTP\n      payload.\n   In either approach, at least part of the class B/C bits\
    \ are left\n   without error-check and thus bit error tolerance is achieved.\n\
    \      Note, it is still important that the network designer pay\n      attention\
    \ to the class B and C residual bit error rate.  Though\n      less sensitive\
    \ to errors than class A bits, class B and C bits are\n      not insignificant\
    \ and undetected errors in these bits cause\n      degradation in speech quality.\
    \  An example of residual error rates\n      considered acceptable for AMR in\
    \ UMTS can be found in [20] and for\n      AMR-WB in [21].\n   The application\
    \ interface to the UEP/UED transport protocol (e.g.,\n   UDP-Lite) may not provide\
    \ any control over the link error rate,\n   especially in a gateway scenario.\
    \  Therefore, it is incumbent upon\n   the designer of a node with a link interface\
    \ of this type to choose a\n   residual bit error rate that is low enough to support\
    \ applications\n   such as AMR encoding when transmitting packets of a UEP/UED\
    \ transport\n   protocol.\n   Approach 1 is a bit efficient, flexible and simple\
    \ way, but comes\n   with two disadvantages, namely, a) bit errors in protected\
    \ speech\n   bits will cause the payload to be discarded, and b) when transporting\n\
    \   multiple frames in a payload there is the possibility that a single\n   bit\
    \ error in protected bits will cause all the frames to be\n   discarded.\n   These\
    \ disadvantages can be avoided, if needed, with some overhead in\n   the form\
    \ of a frame-wise CRC (Approach 2).  In problem a), the CRC\n   makes it possible\
    \ to detect bit errors in class A bits and use the\n   frame for error concealment,\
    \ which gives a small improvement in\n   speech quality.  For b), when transporting\
    \ multiple frames in a\n   payload, the CRCs remove the possibility that a single\
    \ bit error in a\n   class A bit will cause all the frames to be discarded.  Avoiding\
    \ that\n   gives an improvement in speech quality when transporting multiple\n\
    \   frames over links subject to bit errors.\n   The choice between the above\
    \ two approaches must be made based on the\n   available bandwidth, and desired\
    \ tolerance to bit errors.  Neither\n   solution is appropriate to all cases.\
    \  Section 8 defines parameters\n   that may be used at session setup to select\
    \ between these approaches.\n"
- title: 3.7. Robustness against Packet Loss
  contents:
  - "3.7. Robustness against Packet Loss\n   The payload format supports several means,\
    \ including forward error\n   correction (FEC) and frame interleaving, to increase\
    \ robustness\n   against packet loss.\n"
- title: 3.7.1. Use of Forward Error Correction (FEC)
  contents:
  - "3.7.1. Use of Forward Error Correction (FEC)\n   The simple scheme of repetition\
    \ of previously sent data is one way of\n   achieving FEC.  Another possible scheme\
    \ which is more bandwidth\n   efficient is to use payload external FEC, e.g.,\
    \ RFC2733 [19], which\n   generates extra packets containing repair data.  The\
    \ whole payload\n   can also be sorted in sensitivity order to support external\
    \ FEC\n   schemes using UEP.  There is also a work in progress on a generic\n\
    \   version of such a scheme [18] that can be applied to AMR or AMR-WB\n   payload\
    \ transport.\n   With AMR or AMR-WB, it is possible to use the multi-rate capability\n\
    \   of the codec to send redundant copies of the same mode or of another\n   mode,\
    \ e.g., one with lower-bandwidth.  We describe such a scheme\n   next.\n   This\
    \ involves the simple retransmission of previously transmitted\n   frame-blocks\
    \ together with the current frame-block(s).  This is done\n   by using a sliding\
    \ window to group the speech frame-blocks to send in\n   each payload.  Figure\
    \ 1 below shows us an example.\n   --+--------+--------+--------+--------+--------+--------+--------+--\n\
    \     | f(n-2) | f(n-1) |  f(n)  | f(n+1) | f(n+2) | f(n+3) | f(n+4) |\n   --+--------+--------+--------+--------+--------+--------+--------+--\n\
    \     <---- p(n-1) ---->\n              <----- p(n) ----->\n                 \
    \      <---- p(n+1) ---->\n                                <---- p(n+2) ---->\n\
    \                                         <---- p(n+3) ---->\n               \
    \                                   <---- p(n+4) ---->\n              Figure 1:\
    \ An example of redundant transmission.\n   In this example each frame-block is\
    \ retransmitted one time in the\n   following RTP payload packet.  Here, f(n-2)..f(n+4)\
    \ denotes a\n   sequence of speech frame-blocks and p(n-1)..p(n+4) a sequence\
    \ of\n   payload packets.\n   The use of this approach does not require signaling\
    \ at the session\n   setup.  In other words, the speech sender can choose to use\
    \ this\n   scheme without consulting the receiver.  This is because a packet\n\
    \   containing redundant frames will not look different from a packet\n   with\
    \ only new frames.  The receiver may receive multiple copies or\n   versions (encoded\
    \ with different modes) of a frame for a certain\n   timestamp if no packet is\
    \ lost.  If multiple versions of the same\n   speech frame are received, it is\
    \ recommended that the mode with the\n   highest rate be used by the speech decoder.\n\
    \   This redundancy scheme provides the same functionality as the one\n   described\
    \ in RFC 2198 \"RTP Payload for Redundant Audio Data\" [24].\n   In most cases\
    \ the mechanism in this payload format is more efficient\n   and simpler than\
    \ requiring both endpoints to support RFC 2198 in\n   addition.  There are two\
    \ situations in which use of RFC 2198 is\n   indicated: if the spread in time\
    \ required between the primary and\n   redundant encodings is larger than 5 frame\
    \ times, the bandwidth\n   overhead of RFC 2198 will be lower; or, if a non-AMR\
    \ codec is desired\n   for the redundant encoding, the AMR payload format won't\
    \ be able to\n   carry it.\n   The sender is responsible for selecting an appropriate\
    \ amount of\n   redundancy based on feedback about the channel, e.g., in RTCP\n\
    \   receiver reports.  A sender should not base selection of FEC on the\n   CMR,\
    \ as this parameter most probably was set based on none-IP\n   information, e.g.,\
    \ radio link performance measures.  The sender is\n   also responsible for avoiding\
    \ congestion, which may be exacerbated by\n   redundancy (see Section 6 for more\
    \ details).\n"
- title: 3.7.2. Use of Frame Interleaving
  contents:
  - "3.7.2. Use of Frame Interleaving\n   To decrease protocol overhead, the payload\
    \ design allows several\n   speech frame-blocks be encapsulated into a single\
    \ RTP packet.  One of\n   the drawbacks of such an approach is that in case of\
    \ packet loss this\n   means loss of several consecutive speech frame-blocks,\
    \ which usually\n   causes clearly audible distortion in the reconstructed speech.\n\
    \   Interleaving of frame-blocks can improve the speech quality in such\n   cases\
    \ by distributing the consecutive losses into a series of single\n   frame-block\
    \ losses.  However, interleaving and bundling several\n   frame-blocks per payload\
    \ will also increase end-to-end delay and is\n   therefore not appropriate for\
    \ all types of applications.  Streaming\n   applications will most likely be able\
    \ to exploit interleaving to\n   improve speech quality in lossy transmission\
    \ conditions.\n   This payload design supports the use of frame interleaving as\
    \ an\n   option.  For the encoder (speech sender) to use frame interleaving in\n\
    \   its outbound RTP packets for a given session, the decoder (speech\n   receiver)\
    \ needs to indicate its support via out-of-band means (see\n   Section 8).\n"
- title: 3.8. Bandwidth Efficient or Octet-aligned Mode
  contents:
  - "3.8. Bandwidth Efficient or Octet-aligned Mode\n   For a given session, the payload\
    \ format can be either bandwidth\n   efficient or octet aligned, depending on\
    \ the mode of operation that\n   is established for the session via out-of-band\
    \ means.\n   In the octet-aligned format, all the fields in a payload, including\n\
    \   payload header, table of contents entries, and speech frames\n   themselves,\
    \ are individually aligned to octet boundaries to make\n   implementations efficient.\
    \  In the bandwidth efficient format only\n   the full payload is octet aligned,\
    \ so fewer padding bits are added.\n      Note, octet alignment of a field or\
    \ payload means that the last\n      octet is padded with zeroes in the least\
    \ significant bits to fill\n      the octet.  Also note that this padding is separate\
    \ from padding\n      indicated by the P bit in the RTP header.\n   Between the\
    \ two operation modes, only the octet-aligned mode has the\n   capability to use\
    \ the robust sorting, interleaving, and frame CRC to\n   make the speech transport\
    \ robust to packet loss and bit errors.\n"
- title: 3.9. AMR or AMR-WB Speech over IP scenarios
  contents:
  - "3.9. AMR or AMR-WB Speech over IP scenarios\n   The primary scenario for this\
    \ payload format is IP end-to-end between\n   two terminals, as shown in Figure\
    \ 2.  This payload format is expected\n   to be useful for both conversational\
    \ and streaming services.\n                +----------+                      \
    \   +----------+\n                |          |    IP/UDP/RTP/AMR or    |     \
    \     |\n                | TERMINAL |<----------------------->| TERMINAL |\n \
    \               |          |    IP/UDP/RTP/AMR-WB    |          |\n          \
    \      +----------+                         +----------+\n                   Figure\
    \ 2: IP terminal to IP terminal scenario\n   A conversational service puts requirements\
    \ on the payload format.\n   Low delay is one very important factor, i.e., few\
    \ speech frame-blocks\n   per payload packet.  Low overhead is also required when\
    \ the payload\n   format traverses low bandwidth links, especially as the frequency\
    \ of\n   packets will be high.  For low bandwidth links it also an advantage\n\
    \   to support UED which allows a link provider to reduce delay and\n   packet\
    \ loss or to reduce the utilization of link resources.\n   Streaming service has\
    \ less strict real-time requirements and\n   therefore can use a larger number\
    \ of frame-blocks per packet than\n   conversational service.  This reduces the\
    \ overhead from IP, UDP, and\n   RTP headers.  However, including several frame-blocks\
    \ per packet\n   makes the transmission more vulnerable to packet loss, so\n \
    \  interleaving may be used to reduce the effect packet loss will have\n   on\
    \ speech quality.  A streaming server handling a large number of\n   clients also\
    \ needs a payload format that requires as few resources as\n   possible when doing\
    \ packetization.  The octet-aligned and\n   interleaving modes require the least\
    \ amount of resources, while CRC,\n   robust sorting, and bandwidth efficient\
    \ modes have higher demands.\n   Another scenario occurs when AMR or AMR-WB encoded\
    \ speech will be\n   transmitted from a non-IP system (e.g., a GSM or 3GPP network)\
    \ to an\n   IP/UDP/RTP VoIP terminal, and/or vice versa, as depicted in Figure\
    \ 3.\n          AMR or AMR-WB\n          over\n          I.366.{2,3} or +------+\
    \                        +----------+\n          3G Iu or       |      |   IP/UDP/RTP/AMR\
    \ or    |          |\n          <------------->|  GW  |<---------------------->|\
    \ TERMINAL |\n          GSM Abis       |      |   IP/UDP/RTP/AMR-WB    |     \
    \     |\n          etc.           +------+                        +----------+\n\
    \                             |\n           GSM/3GPP network  |           IP network\n\
    \                             |\n                     Figure 3: GW to VoIP terminal\
    \ scenario\n   In such a case, it is likely that the AMR or AMR-WB frame is\n\
    \   packetized in a different way in the non-IP network and will need to\n   be\
    \ re-packetized into RTP at the gateway.  Also, speech frames from\n   the non-IP\
    \ network may come with some UEP/UED information (e.g., a\n   frame quality indicator)\
    \ that will need to be preserved and forwarded\n   on to the decoder along with\
    \ the speech bits.  This is specified in\n   Section 4.3.2.\n   AMR's capability\
    \ to do fast mode switching is exploited in some non-\n   IP networks to optimize\
    \ speech quality.  To preserve this\n   functionality in scenarios including a\
    \ gateway to an IP network, a\n   codec mode request (CMR) field is needed.  The\
    \ gateway will be\n   responsible for forwarding the CMR between the non-IP and\
    \ IP parts in\n   both directions.  The IP terminal should follow the CMR forwarded\
    \ by\n   the gateway to optimize speech quality going to the non-IP decoder.\n\
    \   The mode control algorithm in the gateway must accommodate the delay\n   imposed\
    \ by the IP network on the response to CMR by the IP terminal.\n   The IP terminal\
    \ should not set the CMR (see Section 4.3.1), but the\n   gateway can set the\
    \ CMR value on frames going toward the encoder in\n   the non-IP part to optimize\
    \ speech quality from that encoder to the\n   gateway.  The gateway can alternatively\
    \ set a lower CMR value, if\n   desired, as one means to control congestion on\
    \ the IP network.\n   A third likely scenario is that IP/UDP/RTP is used as transport\n\
    \   between two non-IP systems, i.e., IP is originated and terminated in\n   gateways\
    \ on both sides of the IP transport, as illustrated in Figure\n   4 below.\n \
    \  AMR or AMR-WB                                        AMR or AMR-WB\n   over\
    \                                                 over\n   I.366.{2,3} or +------+\
    \                     +------+ I.366.{2,3} or\n   3G Iu or       |      |  IP/UDP/RTP/AMR\
    \ or  |      | 3G Iu or\n   <------------->|  GW  |<------------------->|  GW\
    \  |<------------->\n   GSM Abis       |      |  IP/UDP/RTP/AMR-WB  |      | GSM\
    \ Abis\n   etc.           +------+                     +------+ etc.\n       \
    \               |                           |\n    GSM/3GPP network  |       \
    \   IP network       |  GSM/3GPP network\n                      |            \
    \               |\n                        Figure 4: GW to GW scenario\n   This\
    \ scenario requires the same mechanisms for preserving UED/UEP and\n   CMR information\
    \ as in the single gateway scenario.  In addition, the\n   CMR value may be set\
    \ in packets received by the gateways on the IP\n   network side.  The gateway\
    \ should forward to the non-IP side a CMR\n   value that is the minimum of three\
    \ values:\n      -  the CMR value it receives on the IP side;\n      -  the CMR\
    \ value it calculates based on its reception quality on\n         the non-IP side;\
    \ and\n      - a CMR value it may choose for congestion control of transmission\n\
    \         on the IP side.\n   The details of the control algorithm are left to\
    \ the implementation.\n"
- title: 4. AMR and AMR-WB RTP Payload Formats
  contents:
  - "4. AMR and AMR-WB RTP Payload Formats\n   The AMR and AMR-WB payload formats\
    \ have identical structure, so they\n   are specified together.  The only differences\
    \ are in the types of\n   codec frames contained in the payload.  The payload\
    \ format consists\n   of the RTP header, payload header and payload data.\n"
- title: 4.1. RTP Header Usage
  contents:
  - "4.1. RTP Header Usage\n   The format of the RTP header is specified in [8]. \
    \ This payload\n   format uses the fields of the header in a manner consistent\
    \ with that\n   specification.\n   The RTP timestamp corresponds to the sampling\
    \ instant of the first\n   sample encoded for the first frame-block in the packet.\
    \  The\n   timestamp clock frequency is the same as the sampling frequency, so\n\
    \   the timestamp unit is in samples.\n   The duration of one speech frame-block\
    \ is 20 ms for both AMR and\n   AMR-WB.  For AMR, the sampling frequency is 8\
    \ kHz, corresponding to\n   160 encoded speech samples per frame from each channel.\
    \  For AMR-WB,\n   the sampling frequency is 16 kHz, corresponding to 320 samples\
    \ per\n   frame from each channel.  Thus, the timestamp is increased by 160 for\n\
    \   AMR and 320 for AMR-WB for each consecutive frame-block.\n   A packet may\
    \ contain multiple frame-blocks of encoded speech or\n   comfort noise parameters.\
    \  If interleaving is employed, the frame-\n   blocks encapsulated into a payload\
    \ are picked according to the\n   interleaving rules as defined in Section 4.4.1.\
    \  Otherwise, each\n   packet covers a period of one or more contiguous 20 ms\
    \ frame-block\n   intervals.  In case the data from all the channels for a particular\n\
    \   frame-block in the period is missing, for example at a gateway from\n   some\
    \ other transport format, it is possible to indicate that no data\n   is present\
    \ for that frame-block rather than breaking a multi-frame-\n   block packet into\
    \ two, as explained in Section 4.3.2.\n   To allow for error resiliency through\
    \ redundant transmission, the\n   periods covered by multiple packets MAY overlap\
    \ in time.  A receiver\n   MUST be prepared to receive any speech frame multiple\
    \ times, either\n   in exact duplicates, or in different AMR rate modes, or with\
    \ data\n   present in one packet and not present in another.  If multiple\n  \
    \ versions of the same speech frame are received, it is RECOMMENDED\n   that the\
    \ mode with the highest rate be used by the speech decoder.  A\n   given frame\
    \ MUST NOT be encoded as speech in one packet and comfort\n   noise parameters\
    \ in another.\n   The payload is always made an integral number of octets long\
    \ by\n   padding with zero bits if necessary.  If additional padding is\n   required\
    \ to bring the payload length to a larger multiple of octets\n   or for some other\
    \ purpose, then the P bit in the RTP in the header\n   may be set and padding\
    \ appended as specified in [8].\n   The RTP header marker bit (M) SHALL be set\
    \ to 1 if the first frame-\n   block carried in the packet contains a speech frame\
    \ which is the\n   first in a talkspurt.  For all other packets the marker bit\
    \ SHALL be\n   set to zero (M=0).\n   The assignment of an RTP payload type for\
    \ this new packet format is\n   outside the scope of this document, and will not\
    \ be specified here.\n   It is expected that the RTP profile under which this\
    \ payload format\n   is being used will assign a payload type for this encoding\
    \ or specify\n   that the payload type is to be bound dynamically.\n"
- title: 4.2. Payload Structure
  contents:
  - "4.2. Payload Structure\n   The complete payload consists of a payload header,\
    \ a payload table of\n   contents, and speech data representing one or more speech\
    \ frame-\n   blocks.  The following diagram shows the general payload format\n\
    \   layout:\n   +----------------+-------------------+----------------\n   | payload\
    \ header | table of contents | speech data ...\n   +----------------+-------------------+----------------\n\
    \   Payloads containing more than one speech frame-block are called\n   compound\
    \ payloads.\n   The following sections describe the variations taken by the payload\n\
    \   format depending on whether the AMR session is set up to use the\n   bandwidth-efficient\
    \ mode or octet-aligned mode and any of the\n   OPTIONAL functions for robust\
    \ sorting, interleaving, and frame CRCs.\n   Implementations SHOULD support both\
    \ bandwidth-efficient and octet-\n   aligned operation to increase interoperability.\n"
- title: 4.3. Bandwidth-Efficient Mode
  contents:
  - '4.3. Bandwidth-Efficient Mode

    '
- title: 4.3.1. The Payload Header
  contents:
  - "4.3.1. The Payload Header\n   In bandwidth-efficient mode, the payload header\
    \ simply consists of a\n   4 bit codec mode request:\n    0 1 2 3\n   +-+-+-+-+\n\
    \   |  CMR  |\n   +-+-+-+-+\n   CMR (4 bits): Indicates a codec mode request sent\
    \ to the speech\n      encoder at the site of the receiver of this payload.  The\
    \ value of\n      the CMR field is set to the frame type index of the corresponding\n\
    \      speech mode being requested.  The frame type index may be 0-7 for\n   \
    \   AMR, as defined in Table 1a in [2], or 0-8 for AMR-WB, as defined\n      in\
    \ Table 1a in [4].  CMR value 15 indicates that no mode request\n      is present,\
    \ and other values are for future use.\n   The mode request received in the CMR\
    \ field is valid until the next\n   CMR is received, i.e., a newly received CMR\
    \ value overrides the\n   previous one.  Therefore, if a terminal continuously\
    \ wishes to\n   receive frames in the same mode X, it needs to set CMR=X for all\
    \ its\n   outbound payloads, and if a terminal has no preference in which mode\n\
    \   to receive, it SHOULD set CMR=15 in all its outbound payloads.\n   If receiving\
    \ a payload with a CMR value which is not a speech mode or\n   NO_DATA, the CMR\
    \ MUST be ignored by the receiver.\n   In a multi-channel session, CMR SHOULD\
    \ be interpreted by the receiver\n   of the payload as the desired encoding mode\
    \ for all the channels in\n   the session.\n   An IP end-point SHOULD NOT set\
    \ the CMR based on packet losses or\n   other congestion indications, for several\
    \ reasons:\n      -  The other end of the IP path may be a gateway to a non-IP\n\
    \         network (such as a radio link) that needs to set the CMR field\n   \
    \      to optimize performance on that network.\n      -  Congestion on the IP\
    \ network is managed by the IP sender, in\n         this case at the other end\
    \ of the IP path.  Feedback about\n         congestion SHOULD be provided to that\
    \ IP sender through RTCP or\n         other means, and then the sender can choose\
    \ to avoid congestion\n         using the most appropriate mechanism.  That may\
    \ include\n         adjusting the codec mode, but also includes adjusting the\
    \ level\n         of redundancy or number of frames per packet.\n   The encoder\
    \ SHOULD follow a received mode request, but MAY change to\n   a lower-numbered\
    \ mode if it so chooses, for example to control\n   congestion.\n   The CMR field\
    \ MUST be set to 15 for packets sent to a multicast\n   group.  The encoder in\
    \ the speech sender SHOULD ignore mode requests\n   when sending speech to a multicast\
    \ session but MAY use RTCP feedback\n   information as a hint that a mode change\
    \ is needed.\n   The codec mode selection MAY be restricted by a session parameter\
    \ to\n   a subset of the available modes.  If so, the requested mode MUST be\n\
    \   among the signalled subset (see Section 8).\n"
- title: 4.3.2. The Payload Table of Contents
  contents:
  - "4.3.2. The Payload Table of Contents\n   The table of contents (ToC) consists\
    \ of a list of ToC entries, each\n   representing a speech frame.\n   In bandwidth-efficient\
    \ mode, a ToC entry takes the following format:\n    0 1 2 3 4 5\n   +-+-+-+-+-+-+\n\
    \   |F|  FT   |Q|\n   +-+-+-+-+-+-+\n   F (1 bit): If set to 1, indicates that\
    \ this frame is followed by\n      another speech frame in this payload; if set\
    \ to 0, indicates that\n      this frame is the last frame in this payload.\n\
    \   FT (4 bits): Frame type index, indicating either the AMR or AMR-WB\n     \
    \ speech coding mode or comfort noise (SID) mode of the\n      corresponding frame\
    \ carried in this payload.\n   The value of FT is defined in Table 1a in [2] for\
    \ AMR and in Table 1a\n   in [4] for AMR-WB.  FT=14 (SPEECH_LOST, only available\
    \ for AMR-WB)\n   and FT=15 (NO_DATA) are used to indicate frames that are either\
    \ lost\n   or not being transmitted in this payload, respectively.\n   NO_DATA\
    \ (FT=15) frame could mean either that there is no data\n   produced by the speech\
    \ encoder for that frame or that no data for\n   that frame is transmitted in\
    \ the current payload (i.e., valid data\n   for that frame could be sent in either\
    \ an earlier or later packet).\n   If receiving a ToC entry with a FT value in\
    \ the range 9-14 for AMR or\n   10-13 for AMR-WB the whole packet SHOULD be discarded.\
    \  This is to\n   avoid the loss of data synchronization in the depacketization\n\
    \   process, which can result in a huge degradation in speech quality.\n   Note\
    \ that packets containing only NO_DATA frames SHOULD NOT be\n   transmitted. \
    \ Also, frame-blocks containing only NO_DATA frames at\n   the end of a packet\
    \ SHOULD NOT be transmitted, except in the case of\n   interleaving.  The AMR\
    \ SCR/DTX is described in [6] and AMR-WB SCR/DTX\n   in [7].\n   The extra comfort\
    \ noise frame types specified in table 1a in [2]\n   (i.e., GSM-EFR CN, IS-641\
    \ CN, and PDC-EFR CN) MUST NOT be used in\n   this payload format because the\
    \ standardized AMR codec is only\n   required to implement the general AMR SID\
    \ frame type and not those\n   that are native to the incorporated encodings.\n\
    \   Q (1 bit): Frame quality indicator.  If set to 0, indicates the\n      corresponding\
    \ frame is severely damaged and the receiver should\n      set the RX_TYPE (see\
    \ [6]) to either SPEECH_BAD or SID_BAD\n      depending on the frame type (FT).\n\
    \   The frame quality indicator is included for interoperability with the\n  \
    \ ATM payload format described in ITU-T I.366.2, the UMTS Iu interface\n   [16],\
    \ as well as other transport formats.  The frame quality\n   indicator enables\
    \ damaged frames to be forwarded to the speech\n   decoder for error concealment.\
    \  This can improve the speech quality\n   comparing to dropping the damaged frames.\
    \  See Section 4.4.2.1 for\n   more details.\n   For multi-channel sessions, the\
    \ ToC entries of all frames from a\n   frame-block are placed in the ToC in consecutive\
    \ order as defined in\n   Section 4.1 in [24].  When multiple frame-blocks are\
    \ present in a\n   packet in bandwidth-efficient mode, they will be placed in\
    \ the packet\n   in order of their creation time.\n   Therefore, with N channels\
    \ and K speech frame-blocks in a packet,\n   there MUST be N*K entries in the\
    \ ToC, and the first N entries will be\n   from the first frame-block, the second\
    \ N entries will be from the\n   second frame-block, and so on.\n   The following\
    \ figure shows an example of a ToC of three entries in a\n   single channel session\
    \ using bandwidth efficient mode.\n    0                   1\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |1|  FT\
    \   |Q|1|  FT   |Q|0|  FT   |Q|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \ Below is an example of how the ToC entries will appear in the ToC of\n   a packet\
    \ carrying 3 consecutive frame-blocks in a session with two\n   channels (L and\
    \ R).\n   +----+----+----+----+----+----+\n   | 1L | 1R | 2L | 2R | 3L | 3R |\n\
    \   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n    \
    \ Frame-    Frame-    Frame-\n     Block 1   Block 2   Block 3\n"
- title: 4.3.3. Speech Data
  contents:
  - "4.3.3. Speech Data\n   Speech data of a payload contains one or more speech frames\
    \ or\n   comfort noise frames, as described in the ToC of the payload.\n     \
    \ Note, for ToC entries with FT=14 or 15, there will be no\n      corresponding\
    \ speech frame present in the speech data.\n   Each speech frame represents 20\
    \ ms of speech encoded with the mode\n   indicated in the FT field of the corresponding\
    \ ToC entry.  The length\n   of the speech frame is implicitly defined by the\
    \ mode indicated in\n   the FT field.  The order and numbering notation of the\
    \ bits are as\n   specified for Interface Format 1 (IF1) in [2] for AMR and [4]\
    \ for\n   AMR-WB.  As specified there, the bits of speech frames have been\n \
    \  rearranged in order of decreasing sensitivity, while the bits of\n   comfort\
    \ noise frames are in the order produced by the encoder.  The\n   resulting bit\
    \ sequence for a frame of length K bits is denoted d(0),\n   d(1), ..., d(K-1).\n"
- title: 4.3.4. Algorithm for Forming the Payload
  contents:
  - "4.3.4. Algorithm for Forming the Payload\n   The complete RTP payload in bandwidth-efficient\
    \ mode is formed by\n   packing bits from the payload header, table of contents,\
    \ and speech\n   frames, in order as defined by their corresponding ToC entries\
    \ in the\n   ToC list, contiguously into octets beginning with the most\n   significant\
    \ bits of the fields and the octets.\n   To be precise, the four-bit payload header\
    \ is packed into the first\n   octet of the payload with bit 0 of the payload\
    \ header in the most\n   significant bit of the octet.  The four most significant\
    \ bits\n   (numbered 0-3) of the first ToC entry are packed into the least\n \
    \  significant bits of the octet, ending with bit 3 in the least\n   significant\
    \ bit.  Packing continues in the second octet with bit 4 of\n   the first ToC\
    \ entry in the most significant bit of the octet.  If\n   more than one frame\
    \ is contained in the payload, then packing\n   continues with the second and\
    \ successive ToC entries.  Bit 0 of the\n   first data frame follows immediately\
    \ after the last ToC bit,\n   proceeding through all the bits of the frame in\
    \ numerical order.\n   Bits from any successive frames follow contiguously in\
    \ numerical\n   order for each frame and in consecutive order of the frames.\n\
    \   If speech data is missing for one or more speech frame within the\n   sequence,\
    \ because of, for example, DTX, a ToC entry with FT set to\n   NO_DATA SHALL be\
    \ included in the ToC for each of the missing frames,\n   but no data bits are\
    \ included in the payload for the missing frame\n   (see Section 4.3.5.2 for an\
    \ example).\n"
- title: 4.3.5 Payload Examples
  contents:
  - '4.3.5 Payload Examples

    '
- title: 4.3.5.1. Single Channel Payload Carrying a Single Frame
  contents:
  - "4.3.5.1. Single Channel Payload Carrying a Single Frame\n   The following diagram\
    \ shows a bandwidth-efficient AMR payload from a\n   single channel session carrying\
    \ a single speech frame-block.\n   In the payload, no specific mode is requested\
    \ (CMR=15), the speech\n   frame is not damaged at the IP origin (Q=1), and the\
    \ coding mode is\n   AMR 7.4 kbps (FT=4).  The encoded speech bits, d(0) to d(147),\
    \ are\n   arranged in descending sensitivity order according to [2].  Finally,\n\
    \   two zero bits are added to the end as padding to make the payload\n   octet\
    \ aligned.\n    0                   1                   2                   3\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CMR=15|0| FT=4  |1|d(0)                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                     d(147)|P|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.3.5.2. Single Channel Payload Carrying Multiple Frames
  contents:
  - "4.3.5.2. Single Channel Payload Carrying Multiple Frames\n   The following diagram\
    \ shows a single channel, bandwidth efficient\n   compound AMR-WB payload that\
    \ contains four frames, of which one has\n   no speech data.  The first frame\
    \ is a speech frame at 6.6 kbps mode\n   (FT=0) that is composed of speech bits\
    \ d(0) to d(131).  The second\n   frame is an AMR-WB SID frame (FT=9), consisting\
    \ of bits g(0) to\n   g(39).  The third frame is NO_DATA frame and does not carry\
    \ any\n   speech information, it is represented in the payload by its ToC\n  \
    \ entry.  The fourth frame in the payload is a speech frame at 8.85\n   kpbs mode\
    \ (FT=1), it consists of speech bits h(0) to h(176).\n   As shown below, the payload\
    \ carries a mode request for the encoder on\n   the receiver's side to change\
    \ its future coding mode to AMR-WB 8.85\n   kbps (CMR=1).  None of the frames\
    \ is damaged at IP origin (Q=1).  The\n   encoded speech and SID bits, d(0) to\
    \ d(131), g(0) to g(39) and h(0)\n   to h(176), are arranged in the payload in\
    \ descending sensitivity\n   order according to [4]. (Note, no speech bits are\
    \ present for the\n   third frame).  Finally, seven 0s are padded to the end to\
    \ make the\n   payload octet aligned.\n    0                   1             \
    \      2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CMR=1 |1| FT=0  |1|1| FT=9  |1|1| FT=15 |1|0| FT=1  |1|d(0)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                         d(131)|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |g(0)                                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          g(39)|h(0)                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                           h(176)|P|P|P|P|P|P|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.3.5.3. Multi-Channel Payload Carrying Multiple Frames
  contents:
  - "4.3.5.3. Multi-Channel Payload Carrying Multiple Frames\n   The following diagram\
    \ shows a two channel payload carrying 3 frame-\n   blocks, i.e., the payload\
    \ will contain 6 speech frames.\n   In the payload all speech frames contain the\
    \ same mode 7.4 kbit/s\n   (FT=4) and are not damaged at IP origin.  The CMR is\
    \ set to 15, i.e.,\n   no specific mode is requested.  The two channels are defined\
    \ as left\n   (L) and right (R) in that order.  The encoded speech bits is\n \
    \  designated dXY(0).. dXY(K-1), where X = block number, Y = channel,\n   and\
    \ K is the number of speech bits for that mode.  Exemplifying this,\n   for frame-block\
    \ 1 of the left channel the encoded bits are designated\n   as d1L(0) to d1L(147).\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CMR=15|1|1L FT=4|1|1|1R FT=4|1|1|2L FT=4|1|1|2R FT=4|1|1|3L FT|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |4|1|0|3R FT=4|1|d1L(0)                                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                               d1L(147)|d1R(0) |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       d1R(147)|d2L(0)                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |d2L(147|d2R(0)                                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                       d2R(147)|d3L(0)         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               d3L(147)|d3R(0)                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                       d3R(147)|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 4.4. Octet-aligned Mode
  contents:
  - '4.4. Octet-aligned Mode

    '
- title: 4.4.1. The Payload Header
  contents:
  - "4.4.1. The Payload Header\n   In octet-aligned mode, the payload header consists\
    \ of a 4 bit CMR, 4\n   reserved bits, and optionally, an 8 bit interleaving header,\
    \ as shown\n   below:\n    0                   1\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5\n   +-+-+-+-+-+-+-+-+- - - - - - - -\n   |  CMR  |R|R|R|R|  ILL  | \
    \ ILP  |\n   +-+-+-+-+-+-+-+-+- - - - - - - -\n   CMR (4 bits): same as defined\
    \ in section 4.3.1.\n   R: is a reserved bit that MUST be set to zero.  All R\
    \ bits MUST be\n      ignored by the receiver.\n   ILL (4 bits, unsigned integer):\
    \ This is an OPTIONAL field that is\n      present only if interleaving is signalled\
    \ out-of-band for the\n      session.  ILL=L indicates to the receiver that the\
    \ interleaving\n      length is L+1, in number of frame-blocks.\n   ILP (4 bits,\
    \ unsigned integer): This is an OPTIONAL field that is\n      present only if\
    \ interleaving is signalled.  ILP MUST take a value\n      between 0 and ILL,\
    \ inclusive, indicating the interleaving index\n      for frame-blocks in this\
    \ payload in the interleave group.  If the\n      value of ILP is found greater\
    \ than ILL, the payload SHOULD be\n      discarded.\n   ILL and ILP fields MUST\
    \ be present in each packet in a session if\n   interleaving is signalled for\
    \ the session.  Interleaving MUST be\n   performed on a frame-block basis (i.e.,\
    \ NOT on a frame basis) in a\n   multi-channel session.\n   The following example\
    \ illustrates the arrangement of speech frame-\n   blocks in an interleave group\
    \ during an interleave session.  Here we\n   assume ILL=L for the interleave group\
    \ that starts at speech frame-\n   block n.  We also assume that the first payload\
    \ packet of the\n   interleave group is s and the number of speech frame-blocks\
    \ carried\n   in each payload is N. Then we will have:\n   Payload s (the first\
    \ packet of this interleave group):\n     ILL=L, ILP=0,\n     Carry frame-blocks:\
    \ n, n+(L+1), n+2*(L+1), ..., n+(N-1)*(L+1)\n      Payload s+1 (the second packet\
    \ of this interleave group):\n     ILL=L, ILP=1,\n     frame-blocks: n+1, n+1+(L+1),\
    \ n+1+2*(L+1), ..., n+1+(N-1)*(L+1)\n       ...\n   Payload s+L (the last packet\
    \ of this interleave group):\n     ILL=L, ILP=L,\n     frame-blocks: n+L, n+L+(L+1),\
    \ n+L+2*(L+1), ..., n+L+(N-1)*(L+1)\n   The next interleave group will start at\
    \ frame-block n+N*(L+1).\n   There will be no interleaving effect unless the number\
    \ of frame-\n   blocks per packet (N) is at least 2.  Moreover, the number of\
    \ frame-\n   blocks per payload (N) and the value of ILL MUST NOT be changed\n\
    \   inside an interleave group.  In other words, all payloads in an\n   interleave\
    \ group MUST have the same ILL and MUST contain the same\n   number of speech\
    \ frame-blocks.\n   The sender of the payload MUST only apply interleaving if\
    \ the\n   receiver has signalled its use through out-of-band means.  Since\n \
    \  interleaving will increase buffering requirements at the receiver,\n   the\
    \ receiver uses MIME parameter \"interleaving=I\" to set the maximum\n   number\
    \ of frame-blocks allowed in an interleaving group to I.\n   When performing interleaving\
    \ the sender MUST use a proper number of\n   frame-blocks per payload (N) and\
    \ ILL so that the resulting size of an\n   interleave group is less or equal to\
    \ I, i.e., N*(L+1)<=I.\n"
- title: 4.4.2. The Payload Table of Contents and Frame CRCs
  contents:
  - "4.4.2. The Payload Table of Contents and Frame CRCs\n   The table of contents\
    \ (ToC) in octet-aligned mode consists of a list\n   of ToC entries where each\
    \ entry corresponds to a speech frame carried\n   in the payload and, optionally,\
    \ a list of speech frame CRCs, i.e.,\n   +---------------------+\n   | list of\
    \ ToC entries |\n   +---------------------+\n   | list of frame CRCs  | (optional)\n\
    \    - - - - - - - - - - -\n      Note, for ToC entries with FT=14 or 15, there\
    \ will be no\n      corresponding speech frame or frame CRC present in the payload.\n\
    \   The list of ToC entries is organized in the same way as described for\n  \
    \ bandwidth-efficient mode in 4.3.2, with the following exception; when\n   interleaving\
    \ is used the frame-blocks in the ToC will almost never be\n   placed consecutive\
    \ in time.  Instead, the presence and order of the\n   frame-blocks in a packet\
    \ will follow the pattern described in 4.4.1.\n   The following example shows\
    \ the ToC of three consecutive packets,\n   each carrying 3 frame-blocks, in an\
    \ interleaved two-channel session.\n   Here, the two channels are left (L) and\
    \ right (R) with L coming\n   before R, and the interleaving length is 3 (i.e.,\
    \ ILL=2).  This makes\n   the interleave group 9 frame-blocks large.\n   Packet\
    \ #1\n   ---------\n   ILL=2, ILP=0:\n   +----+----+----+----+----+----+\n   |\
    \ 1L | 1R | 4L | 4R | 7L | 7R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n\
    \     Frame-    Frame-    Frame-\n     Block 1   Block 4   Block 7\n   Packet\
    \ #2\n   ---------\n   ILL=2, ILP=1:\n   +----+----+----+----+----+----+\n   |\
    \ 2L | 2R | 5L | 5R | 8L | 8R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n\
    \     Frame-    Frame-    Frame-\n     Block 2   Block 5   Block 8\n   Packet\
    \ #3\n   ---------\n   ILL=2, ILP=2:\n   +----+----+----+----+----+----+\n   |\
    \ 3L | 3R | 6L | 6R | 9L | 9R |\n   +----+----+----+----+----+----+\n   |<------->|<------->|<------->|\n\
    \     Frame-    Frame-    Frame-\n     Block 3   Block 6   Block 9\n   A ToC entry\
    \ takes the following format in octet-aligned mode:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n\
    \   |F|  FT   |Q|P|P|\n   +-+-+-+-+-+-+-+-+\n   F (1 bit): see definition in Section\
    \ 4.3.2.\n   FT (4 bits unsigned integer): see definition in Section 4.3.2.\n\
    \   Q (1 bit): see definition in Section 4.3.2.\n   P bits: padding bits, MUST\
    \ be set to zero.\n   The list of CRCs is OPTIONAL.  It only exists if the use\
    \ of CRC is\n   signalled out-of-band for the session.  When present, each CRC\
    \ in the\n   list is 8 bit long and corresponds to a speech frame (NOT a frame-\n\
    \   block) carried in the payload.  Calculation and use of the CRC is\n   specified\
    \ in the next section.\n"
- title: 4.4.2.1. Use of Frame CRC for UED over IP
  contents:
  - "4.4.2.1. Use of Frame CRC for UED over IP\n   The general concept of UED/UEP\
    \ over IP is discussed in Section 3.6.\n   This section provides more details\
    \ on how to use the frame CRC in the\n   octet-aligned payload header together\
    \ with a partial transport layer\n   checksum to achieve UED.\n   To achieve UED,\
    \ one SHOULD use a transport layer checksum, for\n   example, the one defined\
    \ in UDP-Lite [15], to protect the RTP header,\n   payload header, and table of\
    \ contents bits in a payload.  The frame\n   CRC, when used, MUST be calculated\
    \ only over all class A bits in the\n   frame.  Class B and C bits in the frame\
    \ MUST NOT be included in the\n   CRC calculation and SHOULD NOT be covered by\
    \ the transport checksum.\n      Note, the number of class A bits for various\
    \ coding modes in AMR\n      codec is specified as informative in [2] and is therefore\
    \ copied\n      into Table 1 in Section 3.6 to make it normative for this payload\n\
    \      format.  The number of class A bits for various coding modes in\n     \
    \ AMR-WB codec is specified as normative in table 2 in [4], and the\n      SID\
    \ frame (FT=9) has 40 class A bits.  These definitions of class\n      A bits\
    \ MUST be used for this payload format.\n   Packets SHOULD be discarded if the\
    \ transport layer checksum detects\n   errors.\n   The receiver of the payload\
    \ SHOULD examine the data integrity of the\n   received class A bits by re-calculating\
    \ the CRC over the received\n   class A bits and comparing the result to the value\
    \ found in the\n   received payload header.  If the two values mismatch, the receiver\n\
    \   SHALL consider the class A bits in the receiver frame damaged and\n   MUST\
    \ clear the Q flag of the frame (i.e., set it to 0).  This will\n   subsequently\
    \ cause the frame to be marked as SPEECH_BAD, if the FT of\n   the frame is 0..7\
    \ for AMR or 0..8 for AMR-WB, or SID_BAD if the FT of\n   the frame is 8 for AMR\
    \ or 9 for AMR-WB, before it is passed to the\n   speech decoder.  See [6] and\
    \ [7] more details.\n   The following example shows an octet-aligned ToC with\
    \ a CRC list for\n   a payload containing 3 speech frames from a single channel\
    \ session\n   (assuming none of the FTs is equal to 14 or 15):\n    0        \
    \           1                   2                   3\n    0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|  FT#1 |Q|P|P|1|  FT#2 |Q|P|P|0|  FT#3 |Q|P|P|     CRC#1     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     CRC#2     |     CRC#3     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Each of the CRC's takes 8 bits\n     0   1   2   3   4   5   6   7\n   +---+---+---+---+---+---+---+---+\n\
    \   | c0| c1| c2| c3| c4| c5| c6| c7|\n   +---+---+---+---+---+---+---+---+\n\
    \   and is calculated by the cyclic generator polynomial,\n     C(x) = 1 + x^2\
    \ + x^3 + x^4 + x^8\n   where ^ is the exponentiation operator.\n   In binary\
    \ form the polynomial has the following form: 101110001\n   (MSB..LSB).\n   The\
    \ actual calculation of the CRC is made as follows:  First, an 8-\n   bit CRC\
    \ register is reset to zero: 00000000.  For each bit over which\n   the CRC shall\
    \ be calculated, an XOR operation is made between the\n   rightmost bit of the\
    \ CRC register and the bit.  The CRC register is\n   then right shifted one step\
    \ (inputting a \"0\" as the leftmost bit).\n   If the result of the XOR operation\
    \ mentioned above is a \"1\"\n   \"10111000\" is then bit-wise XOR-ed into the\
    \ CRC register.  This\n   operation is repeated for each bit that the CRC should\
    \ cover.  In\n   this case, the first bit would be d(0) for the speech frame for\
    \ which\n   the CRC should cover.  When the last bit (e.g., d(54) for AMR 5.9\n\
    \   according to Table 1 in Section 3.6) have been used in this CRC\n   calculation,\
    \ the contents in CRC register should simply be copied to\n   the corresponding\
    \ field in the list of CRC's.\n   Fast calculation of the CRC on a general-purpose\
    \ CPU is possible\n   using a table-driven algorithm.\n"
- title: 4.4.3. Speech Data
  contents:
  - "4.4.3. Speech Data\n   In octet-aligned mode, speech data is carried in a similar\
    \ way to\n   that in the bandwidth-efficient mode as discussed in Section 4.3.3,\n\
    \   with the following exceptions:\n      -  The last octet of each speech frame\
    \ MUST be padded with zeroes\n         at the end if not all bits in the octet\
    \ are used.  In other\n         words, each speech frame MUST be octet-aligned.\n\
    \      -  When multiple speech frames are present in the speech data\n       \
    \  (i.e., compound payload), the speech frames can be arranged\n         either\
    \ one whole frame after another as usual, or with the\n         octets of all\
    \ frames interleaved together at the octet level.\n         Since the bits within\
    \ each frame are ordered with the most\n         error-sensitive bits first, interleaving\
    \ the octets collects\n         those sensitive bits from all frames to be nearer\
    \ the beginning\n         of the packet.  This is called \"robust sorting order\"\
    \ which\n         allows the application of UED (such as UDP-Lite [15]) or UEP\n\
    \         (such as the ULP [18]) mechanisms to the payload data.  The\n      \
    \   details of assembling the payload are given in the next\n         section.\n\
    \   The use of robust sorting order for a session MUST be agreed via\n   out-of-band\
    \ means.  Section 8 specifies a MIME parameter for this\n   purpose.\n   Note,\
    \ robust sorting order MUST only be performed on the frame level\n   and thus\
    \ is independent of interleaving which is at the frame-block\n   level, as described\
    \ in Section 4.4.1. In other words, robust sorting\n   can be applied to either\
    \ non-interleaved or interleaved sessions.\n"
- title: 4.4.4. Methods for Forming the Payload
  contents:
  - "4.4.4. Methods for Forming the Payload\n   Two different packetization methods,\
    \ namely normal order and robust\n   sorting order, exist for forming a payload\
    \ in octet-aligned mode.  In\n   both cases, the payload header and table of contents\
    \ are packed into\n   the payload the same way; the difference is in the packing\
    \ of the\n   speech frames.\n   The payload begins with the payload header of\
    \ one octet or two if\n   frame interleaving is selected.  The payload header\
    \ is followed by\n   the table of contents consisting of a list of one-octet ToC\
    \ entries.\n   If frame CRCs are to be included, they follow the table of contents\n\
    \   with one 8-bit CRC filling each octet.  Note that if a given frame\n   has\
    \ a ToC entry with FT=14 or 15, there will be no CRC present.\n   The speech data\
    \ follows the table of contents, or the CRCs if\n   present.  For packetization\
    \ in the normal order, all of the octets\n   comprising a speech frame are appended\
    \ to the payload as a unit. The\n   speech frames are packed in the same order\
    \ as their corresponding ToC\n   entries are arranged in the ToC list, with the\
    \ exception that if a\n   given frame has a ToC entry with FT=14 or 15, there\
    \ will be no data\n   octets present for that frame.\n   For packetization in\
    \ robust sorting order, the octets of all speech\n   frames are interleaved together\
    \ at the octet level.  That is, the\n   data portion of the payload begins with\
    \ the first octet of the first\n   frame, followed by the first octet of the second\
    \ frame, then the\n   first octet of the third frame, and so on.  After the first\
    \ octet of\n   the last frame has been appended, the cycle repeats with the second\n\
    \   octet of each frame.  The process continues for as many octets as are\n  \
    \ present in the longest frame.  If the frames are not all the same\n   octet\
    \ length, a shorter frame is skipped once all octets in it have\n   been appended.\
    \  The order of the frames in the cycle will be\n   sequential if frame interleaving\
    \ is not in use, or according to the\n   interleave pattern specified in the payload\
    \ header if frame\n   interleaving is in use.  Note that if a given frame has\
    \ a ToC entry\n   with FT=14 or 15, there will be no data octets present for that\
    \ frame\n   so that frame is skipped in the robust sorting cycle.\n   The UED\
    \ and/or UEP is RECOMMENDED to cover at least the RTP header,\n   payload header,\
    \ table of contents, and class A bits of a sorted\n   payload.  Exactly how many\
    \ octets need to be covered depends on the\n   network and application.  If CRCs\
    \ are used together with robust\n   sorting, only the RTP header, the payload\
    \ header, and the ToC SHOULD\n   be covered by UED/UEP.  The means to communicate\
    \ to other layers\n   performing UED/UEP the number of octets to be covered is\
    \ beyond the\n   scope of this specification.\n"
- title: 4.4.5. Payload Examples
  contents:
  - '4.4.5. Payload Examples

    '
- title: 4.4.5.1. Basic Single Channel Payload Carrying Multiple Frames
  contents:
  - "4.4.5.1. Basic Single Channel Payload Carrying Multiple Frames\n   The following\
    \ diagram shows an octet aligned payload from a single\n   channel session that\
    \ carries two AMR frames of 7.95 kbps coding mode\n   (FT=5).  In the payload,\
    \ a codec mode request is sent (CMR=6),\n   requesting the encoder at the receiver's\
    \ side to use AMR 10.2 kbps\n   coding mode.  No frame CRC, interleaving, or robust-sorting\
    \ is in\n   use.\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | CMR=6\
    \ |R|R|R|R|1|FT#1=5 |Q|P|P|0|FT#2=5 |Q|P|P|   f1(0..7)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   f1(8..15)   |  f1(16..23)   |  ....                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         ...   |f1(152..158) |P|   f2(0..7)    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   f2(8..15)   |  f2(16..23)   |  ....                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         ...   |f2(152..158) |P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Note, in above example the last octet in both speech frames is padded\n  \
    \ with one 0 to make it octet-aligned.\n"
- title: 4.4.5.2. Two Channel Payload with CRC, Interleaving, and Robust-sorting
  contents:
  - "4.4.5.2. Two Channel Payload with CRC, Interleaving, and Robust-sorting\n   This\
    \ example shows an octet aligned payload from a two channel\n   session.  Two\
    \ frame-blocks, each containing 2 speech frames of 7.95\n   kbps coding mode (FT=5),\
    \ are carried in this payload,\n   The two channels are left (L) and right (R)\
    \ with L coming before R.\n   In the payload, a codec mode request is also sent\
    \ (CMR=6), requesting\n   the encoder at the receiver's side to use AMR 10.2 kbps\
    \ coding mode.\n   Moreover, frame CRC and frame-block interleaving are both enabled\
    \ for\n   the session.  The interleaving length is 2 (ILL=1) and this payload\n\
    \   is the first one in an interleave group (ILP=0).\n   The first two frames\
    \ in the payload are the L and R channel speech\n   frames of frame-block #1,\
    \ consisting of bits f1L(0..158) and\n   f1R(0..158), respectively.  The next\
    \ two frames are the L and R\n   channel frames of frame-block #3, consisting\
    \ of bits f3L(0..158) and\n   f3R(0..158), respectively, due to interleaving.\
    \  For each of the four\n   speech frames a CRC is calculated as CRC1L(0..7),\
    \ CRC1R(0..7),\n   CRC3L(0..7), and CRC3R(0..7), respectively.  Finally, the payload\
    \ is\n   robust sorted.\n    0                   1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CMR=6 |R|R|R|R| ILL=1 | ILP=0 |1|FT#1L=5|Q|P|P|1|FT#1R=5|Q|P|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|FT#3L=5|Q|P|P|0|FT#3R=5|Q|P|P|      CRC1L    |      CRC1R    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      CRC3L    |      CRC3R    |   f1L(0..7)   |   f1R(0..7)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   f3L(0..7)   |   f3R(0..7)   |  f1L(8..15)   |  f1R(8..15)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  f3L(8..15)   |  f3R(8..15)   |  f1L(16..23)  |  f1R(16..23)  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   : ...                                                           :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | f3L(144..151) | f3R(144..151) |f1L(152..158)|P|f1R(152..158)|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |f3L(152..158)|P|f3R(152..158)|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Note, in above example the last octet in all the four speech frames\n   is\
    \ padded with one zero bit to make it octet-aligned.\n"
- title: 4.5. Implementation Considerations
  contents:
  - "4.5. Implementation Considerations\n   An application implementing this payload\
    \ format MUST understand all\n   the payload parameters in the out-of-band signaling\
    \ used.  For\n   example, if an application uses SDP, all the SDP and MIME parameters\n\
    \   in this document MUST be understood.  This requirement ensures that\n   an\
    \ implementation always can decide if it is capable or not of\n   communicating.\n\
    \   No operation mode of the payload format is mandatory to implement.\n   The\
    \ requirements of the application using the payload format should\n   be used\
    \ to determine what to implement.  To achieve basic\n   interoperability an implementation\
    \ SHOULD at least implement both\n   bandwidth-efficient and octet-aligned mode\
    \ for single channel.  The\n   other operations mode: interleaving, robust sorting,\
    \ frame-wise CRC\n   in both single and multi-channel is OPTIONAL to implement.\n"
- title: 5. AMR and AMR-WB Storage Format
  contents:
  - "5. AMR and AMR-WB Storage Format\n   The storage format is used for storing AMR\
    \ or AMR-WB speech frames in\n   a file or as an e-mail attachment.  Multiple\
    \ channel content is\n   supported.\n   In general, an AMR or AMR-WB file has\
    \ the following structure:\n   +------------------+\n   | Header           |\n\
    \   +------------------+\n   | Speech frame 1   |\n   +------------------+\n \
    \  : ...              :\n   +------------------+\n   | Speech frame n   |\n  \
    \ +------------------+\n   Note, to preserve interoperability with already deployed\n\
    \   implementations, single channel content uses a file header format\n   different\
    \ from that of multi-channel content.\n"
- title: 5.1. Single channel Header
  contents:
  - "5.1. Single channel Header\n   A single channel AMR or AMR-WB file header contains\
    \ only a magic\n   number and different magic numbers are defined to distinguish\
    \ AMR\n   from AMR-WB.\n   The magic number for single channel AMR files MUST\
    \ consist of ASCII\n   character string:\n      \"#!AMR\\n\"\n      (or 0x2321414d520a\
    \ in hexadecimal).\n   The magic number for single channel AMR-WB files MUST consist\
    \ of\n   ASCII character string:\n      \"#!AMR-WB\\n\"\n      (or 0x2321414d522d57420a\
    \ in hexadecimal).\n   Note, the \"\\n\" is an important part of the magic numbers\
    \ and MUST be\n   included in the comparison, since, otherwise, the single channel\n\
    \   magic numbers above will become indistinguishable from those of the\n   multi-channel\
    \ files defined in the next section.\n"
- title: 5.2. Multi-channel Header
  contents:
  - "5.2. Multi-channel Header\n   The multi-channel header consists of a magic number\
    \ followed by a 32\n   bit channel description field, giving the multi-channel\
    \ header the\n   following structure:\n   +------------------+\n   | magic number\
    \     |\n   +------------------+\n   | chan-desc field  |\n   +------------------+\n\
    \   The magic number for multi-channel AMR files MUST consist of the\n   ASCII\
    \ character string:\n      \"#!AMR_MC1.0\\n\"\n      (or 0x2321414d525F4D43312E300a\
    \ in hexadecimal).\n   The magic number for multi-channel AMR-WB files MUST consist\
    \ of the\n   ASCII character string:\n      \"#!AMR-WB_MC1.0\\n\"\n      (or 0x2321414d522d57425F4D43312E300a\
    \ in hexadecimal).\n   The version number in the magic numbers refers to the version\
    \ of the\n   file format.\n   The 32 bit channel description field is defined\
    \ as:\n    0                   1                   2                   3\n   \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Reserved bits                                    | CHAN  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Reserved bits: MUST be set to 0 when written, and a reader MUST\n        \
    \          ignore them.\n   CHAN (4 bit unsigned integer): Indicates the number\
    \ of audio channels\n      contained in this storage file.  The valid values and\
    \ the order of\n      the channels within a frame block are specified in Section\
    \ 4.1 in\n      [24].\n"
- title: 5.3. Speech Frames
  contents:
  - "5.3. Speech Frames\n   After the file header, speech frame-blocks consecutive\
    \ in time are\n   stored in the file.  Each frame-block contains a number of octet-\n\
    \   aligned speech frames equal to the number of channels, and stored in\n   increasing\
    \ order, starting with channel 1.\n   Each stored speech frame starts with a one\
    \ octet frame header with\n   the following format:\n    0 1 2 3 4 5 6 7\n   +-+-+-+-+-+-+-+-+\n\
    \   |P|  FT   |Q|P|P|\n   +-+-+-+-+-+-+-+-+\n   The FT field and the Q bit are\
    \ defined in the same way as in Section\n   4.1.2. The P bits are padding and\
    \ MUST be set to 0.\n   Following this one octet header come the speech bits as\
    \ defined in\n   4.3.3.  The last octet of each frame is padded with zeroes, if\n\
    \   needed, to achieve octet alignment.\n   The following example shows an AMR\
    \ frame in 5.9 kbit coding mode\n   (with 118 speech bits) in the storage format.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |P| FT=2  |Q|P|P|                                               |\n   +-+-+-+-+-+-+-+-+\
    \                                               +\n   |                      \
    \                                         |\n   +          Speech bits for frame-block\
    \ n, channel k             +\n   |                                           \
    \                    |\n   +                                                 \
    \          +-+-+\n   |                                                       \
    \    |P|P|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Frame-blocks or speech frames lost in transmission and non-received\n   frame-blocks\
    \ between SID updates during non-speech periods MUST be\n   stored as NO_DATA\
    \ frames (frame type 15, as defined in [2] and [4])\n   or SPEECH_LOST (frame\
    \ type 14, only available for AMR-WB) in complete\n   frame-blocks to keep synchronization\
    \ with the original media.\n"
- title: 6. Congestion Control
  contents:
  - "6. Congestion Control\n   The general congestion control considerations for transporting\
    \ RTP\n   data apply to AMR or AMR-WB speech over RTP as well.  However, the\n\
    \   multi-rate capability of AMR and AMR-WB speech coding may provide an\n   advantage\
    \ over other payload formats for controlling congestion since\n   the bandwidth\
    \ demand can be adjusted by selecting a different coding\n   mode.\n   Another\
    \ parameter that may impact the bandwidth demand for AMR and\n   AMR-WB is the\
    \ number of frame-blocks that are encapsulated in each\n   RTP payload.  Packing\
    \ more frame-blocks in each RTP payload can\n   reduce the number of packets sent\
    \ and hence the overhead from\n   IP/UDP/RTP headers, at the expense of increased\
    \ delay.\n   If forward error correction (FEC) is used to combat packet loss,\
    \ the\n   amount of redundancy added by FEC will need to be regulated so that\n\
    \   the use of FEC itself does not cause a congestion problem.\n   It is RECOMMENDED\
    \ that AMR or AMR-WB applications using this payload\n   format employ congestion\
    \ control.  The actual mechanism for\n   congestion control is not specified but\
    \ should be suitable for real-\n   time flows, e.g., \"Equation-Based Congestion\
    \ Control for Unicast\n   Applications\" [17].\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   RTP packets using the payload format defined in\
    \ this specification\n   are subject to the general security considerations discussed\
    \ in [8].\n   As this format transports encoded speech, the main security issues\n\
    \   include confidentiality and authentication of the speech itself.  The\n  \
    \ payload format itself does not have any built-in security mechanisms.\n   External\
    \ mechanisms, such as SRTP [22], MAY be used.\n   This payload format does not\
    \ exhibit any significant non-uniformity\n   in the receiver side computational\
    \ complexity for packet processing\n   and thus is unlikely to pose a denial-of-service\
    \ threat due to the\n   receipt of pathological data.\n"
- title: 7.1. Confidentiality
  contents:
  - "7.1. Confidentiality\n   To achieve confidentiality of the encoded AMR or AMR-WB\
    \ speech, all\n   speech data bits will need to be encrypted.  There is less a\
    \ need to\n   encrypt the payload header or the table of contents due to 1) that\n\
    \   they only carry information about the requested speech mode, frame\n   type,\
    \ and frame quality, and 2) that this information could be useful\n   to some\
    \ third party, e.g., quality monitoring.\n   As long as the AMR or AMR-WB payload\
    \ is only packed and unpacked at\n   either end, encryption may be performed after\
    \ packet encapsulation so\n   that there is no conflict between the two operations.\n\
    \   Interleaving may affect encryption.  Depending on the encryption\n   scheme\
    \ used, there may be restrictions on, for example, the time when\n   keys can\
    \ be changed.  Specifically, the key change may need to occur\n   at the boundary\
    \ between interleave groups.\n   The type of encryption method used may impact\
    \ the error robustness of\n   the payload data.  The error robustness may be severely\
    \ reduced when\n   the data is encrypted unless an encryption method without error-\n\
    \   propagation is used, e.g., a stream cipher.  Therefore, UED/UEP based\n  \
    \ on robust sorting may be difficult to apply when the payload data is\n   encrypted.\n"
- title: 7.2. Authentication
  contents:
  - "7.2. Authentication\n   To authenticate the sender of the speech, an external\
    \ mechanism has\n   to be used.  It is RECOMMENDED that such a mechanism protect\
    \ all the\n   speech data bits.  Note that the use of UED/UEP may be difficult\
    \ to\n   combine with authentication because any bit errors will cause\n   authentication\
    \ to fail.\n   Data tampering by a man-in-the-middle attacker could result in\n\
    \   erroneous depacketization/decoding that could lower the speech\n   quality.\
    \  Tampering with the CMR field may result in speech in a\n   different quality\
    \ than desired.\n   To prevent a man-in-the-middle attacker from tampering with\
    \ the\n   payload packets, some additional information besides the speech bits\n\
    \   SHOULD be protected.  This may include the payload header, ToC, frame\n  \
    \ CRCs, RTP timestamp, RTP sequence number, and the RTP marker bit.\n"
- title: 7.3. Decoding Validation
  contents:
  - "7.3. Decoding Validation\n   When processing a received payload packet, if the\
    \ receiver finds that\n   the calculated payload length, based on the information\
    \ of the\n   session and the values found in the payload header fields, does not\n\
    \   match the size of the received packet, the receiver SHOULD discard\n   the\
    \ packet.  This is because decoding a packet that has errors in its\n   length\
    \ field could severely degrade the speech quality.\n"
- title: 8. Payload Format Parameters
  contents:
  - "8. Payload Format Parameters\n   This section defines the parameters that may\
    \ be used to select\n   optional features of the AMR and AMR-WB payload formats.\
    \  The\n   parameters are defined here as part of the MIME subtype registrations\n\
    \   for the AMR and AMR-WB speech codecs.  A mapping of the parameters\n   into\
    \ the Session Description Protocol (SDP) [11] is also provided for\n   those applications\
    \ that use SDP.  Equivalent parameters could be\n   defined elsewhere for use\
    \ with control protocols that do not use MIME\n   or SDP.\n   Two separate MIME\
    \ registrations are made, one for AMR and one for\n   AMR-WB, because they are\
    \ distinct encodings that must be\n   distinguished by the MIME subtype.\n   The\
    \ data format and parameters are specified for both real-time\n   transport in\
    \ RTP and for storage type applications such as e-mail\n   attachments.\n"
- title: 8.1. AMR MIME Registration
  contents:
  - "8.1. AMR MIME Registration\n   The MIME subtype for the Adaptive Multi-Rate (AMR)\
    \ codec is allocated\n   from the IETF tree since AMR is expected to be a widely\
    \ used speech\n   codec in general VoIP applications.  This MIME registration\
    \ covers\n   both real-time transfer via RTP and non-real-time transfers via\n\
    \   stored files.\n   Note, any unspecified parameter MUST be ignored by the receiver.\n\
    \   Media Type name:     audio\n   Media subtype name:  AMR\n   Required parameters:\
    \ none\n   Optional parameters:\n      These parameters apply to RTP transfer\
    \ only.\n      octet-align: Permissible values are 0 and 1.  If 1, octet-aligned\n\
    \               operation SHALL be used.  If 0 or if not present,\n          \
    \     bandwidth efficient operation is employed.\n      mode-set:  Requested AMR\
    \ mode set.  Restricts the active codec\n               mode set to a subset of\
    \ all modes.  Possible values are a\n               comma separated list of modes\
    \ from the set: 0,...,7 (see\n               Table 1a [2]).  If such mode set\
    \ is specified by the\n               decoder, the encoder MUST abide by the request\
    \ and MUST\n               NOT use modes outside of the subset.  If not present,\
    \ all\n               codec modes are allowed for the session.\n      mode-change-period:\
    \ Specifies a number of frame-blocks, N, that is\n               the interval\
    \ at which codec mode changes are allowed.\n               The initial phase of\
    \ the interval is arbitrary, but\n               changes must be separated by\
    \ multiples of N frame-blocks.\n               If this parameter is not present,\
    \ mode changes are\n               allowed at any time during the session.\n \
    \     mode-change-neighbor: Permissible values are 0 and 1.  If 1, mode\n    \
    \           changes SHALL only be made to the neighboring modes in\n         \
    \      the active codec mode set.  Neighboring modes are the\n               ones\
    \ closest in bit rate to the current mode, either the\n               next higher\
    \ or next lower rate.  If 0 or if not present,\n               change between\
    \ any two modes in the active codec mode set\n               is allowed.\n   \
    \   maxptime:  The maximum amount of media which can be encapsulated\n       \
    \        in a payload packet, expressed as time in milliseconds.\n           \
    \    The time is calculated as the sum of the time the media\n               present\
    \ in the packet represents.  The time SHOULD be a\n               multiple of\
    \ the frame size.  If this parameter is not\n               present, the sender\
    \ MAY encapsulate any number of speech\n               frames into one RTP packet.\n\
    \      crc:  Permissible values are 0 and 1.  If 1, frame CRCs SHALL be\n    \
    \           included in the payload, otherwise not.  If crc=1, this\n        \
    \       also implies automatically that octet-aligned operation\n            \
    \   SHALL be used for the session.\n      robust-sorting: Permissible values are\
    \ 0 and 1.  If 1, the payload\n               SHALL employ robust payload sorting.\
    \  If 0 or if not\n               present, simple payload sorting SHALL be used.\
    \  If\n               robust-sorting=1, this also implies automatically that\n\
    \               octet-aligned operation SHALL be used for the session.\n     \
    \ interleaving: Indicates that frame-block level interleaving SHALL\n        \
    \       be used for the session and its value defines the maximum\n          \
    \     number of frame-blocks allowed in an interleaving group\n              \
    \ (see Section 4.4.1).  If this parameter is not present,\n               interleaving\
    \ SHALL not be used.  The presence of this\n               parameter also implies\
    \ automatically that octet-aligned\n               operation SHALL be used.\n\
    \      ptime:     see RFC2327 [11].\n      channels: The number of audio channels.\
    \  The possible values and\n               their respective channel order is specified\
    \ in section\n               4.1 in [24].  If omitted it has the default value\
    \ of 1.\n   Encoding considerations:\n               This type is defined for\
    \ transfer via both RTP (RFC 1889)\n               and stored-file methods as\
    \ described in Sections 4 and 5,\n               respectively, of RFC 3267.  Audio\
    \ data is binary data,\n               and must be encoded for non-binary transport;\
    \ the Base64\n               encoding is suitable for Email.\n   Security considerations:\n\
    \               See Section 7 of RFC 3267.\n   Public specification:\n       \
    \        Please refer to Section 11 of RFC 3267.\n   Additional information:\n\
    \               The following applies to stored-file transfer methods:\n     \
    \          Magic numbers:\n                 single channel:\n                \
    \ ASCII character string \"#!AMR\\n\"\n                 (or 0x2321414d520a in\
    \ hexadecimal)\n                 multi-channel:\n                 ASCII character\
    \ string \"#!AMR_MC1.0\\n\"\n                 (or 0x2321414d525F4D43312E300a in\
    \ hexadecimal)\n   File extensions: amr, AMR\n   Macintosh file type code: none\n\
    \   Object identifier or OID: none\n   Person & email address to contact for further\
    \ information:\n               johan.sjoberg@ericsson.com\n               ari.lakaniemi@nokia.com\n\
    \   Intended usage: COMMON.\n               It is expected that many VoIP applications\
    \ (as well as\n               mobile applications) will use this type.\n   Author/Change\
    \ controller:\n               johan.sjoberg@ericsson.com\n               ari.lakaniemi@nokia.com\n\
    \               IETF Audio/Video transport working group\n"
- title: 8.2. AMR-WB MIME Registration
  contents:
  - "8.2. AMR-WB MIME Registration\n   The MIME subtype for the Adaptive Multi-Rate\
    \ Wideband (AMR-WB) codec\n   is allocated from the IETF tree since AMR-WB is\
    \ expected to be a\n   widely used speech codec in general VoIP applications.\
    \  This MIME\n   registration covers both real-time transfer via RTP and non-real-time\n\
    \   transfers via stored files.\n   Note, any unspecified parameter MUST be ignored\
    \ by the receiver.\n   Media Type name:     audio\n   Media subtype name:  AMR-WB\n\
    \   Required parameters: none\n   Optional parameters:\n      These parameters\
    \ apply to RTP transfer only.\n      octet-align: Permissible values are 0 and\
    \ 1.  If 1, octet-aligned\n               operation SHALL be used.  If 0 or if\
    \ not present,\n               bandwidth efficient operation is employed.\n  \
    \    mode-set:  Requested AMR-WB mode set.  Restricts the active codec\n     \
    \          mode set to a subset of all modes.  Possible values are a\n       \
    \        comma separated list of modes from the set: 0,...,8 (see\n          \
    \     Table 1a [4]).  If such mode set is specified by the\n               decoder,\
    \ the encoder MUST abide by the request and MUST\n               NOT use modes\
    \ outside of the subset.  If not present, all\n               codec modes are\
    \ allowed for the session.\n      mode-change-period: Specifies a number of frame-blocks,\
    \ N, that is\n               the interval at which codec mode changes are allowed.\n\
    \               The initial phase of the interval is arbitrary, but\n        \
    \       changes must be separated by multiples of N frame-blocks.\n          \
    \     If this parameter is not present, mode changes are\n               allowed\
    \ at any time during the session.\n      mode-change-neighbor: Permissible values\
    \ are 0 and 1.  If 1, mode\n               changes SHALL only be made to the neighboring\
    \ modes in\n               the active codec mode set.  Neighboring modes are the\n\
    \               ones closest in bit rate to the current mode, either the\n   \
    \            next higher or next lower rate.  If 0 or if not present,\n      \
    \         change between any two modes in the active codec mode set\n        \
    \       is allowed.\n      maxptime:  The maximum amount of media which can be\
    \ encapsulated\n               in a payload packet, expressed as time in milliseconds.\n\
    \               The time is calculated as the sum of the time the media\n    \
    \           present in the packet represents.  The time SHOULD be a\n        \
    \       multiple of the frame size.  If this parameter is not\n              \
    \ present, the sender MAY encapsulate any number of speech\n               frames\
    \ into one RTP packet.\n      crc:  Permissible values are 0 and 1.  If 1, frame\
    \ CRCs SHALL be\n               included in the payload, otherwise not.  If crc=1,\
    \ this\n               also implies automatically that octet-aligned operation\n\
    \               SHALL be used for the session.\n      robust-sorting: Permissible\
    \ values are 0 and 1.  If 1, the payload\n               SHALL employ robust payload\
    \ sorting.  If 0 or if not\n               present, simple payload sorting SHALL\
    \ be used.  If\n               robust-sorting=1, this also implies automatically\
    \ that\n               octet-aligned operation SHALL be used for the session.\n\
    \      interleaving: Indicates that frame-block level interleaving SHALL\n   \
    \            be used for the session and its value defines the maximum\n     \
    \          number of frame-blocks allowed in an interleaving group\n         \
    \      (see Section 4.4.1).  If this parameter is not present,\n             \
    \  interleaving SHALL not be used.  The presence of this\n               parameter\
    \ also implies automatically that octet-aligned\n               operation SHALL\
    \ be used.\n      ptime:     see RFC2327 [11].\n      channels: The number of\
    \ audio channels.  The possible values and\n               their respective channel\
    \ order is specified in section\n               4.1 in [24].  If omitted it has\
    \ the default value of 1.\n   Encoding considerations:\n               This type\
    \ is defined for transfer via both RTP (RFC 1889)\n               and stored-file\
    \ methods as described in Sections 4 and 5,\n               respectively, of RFC\
    \ 3267.  Audio data is binary data,\n               and must be encoded for non-binary\
    \ transport; the Base64\n               encoding is suitable for Email.\n   Security\
    \ considerations:\n               See Section 7 of RFC 3267.\n   Public specification:\n\
    \               Please refer to Section 11 of RFC 3267.\n   Additional information:\n\
    \               The following applies to stored-file transfer methods:\n     \
    \          Magic numbers:\n                 single channel:\n                \
    \ ASCII character string \"#!AMR-WB\\n\"\n                 (or 0x2321414d522d57420a\
    \ in hexadecimal)\n                 multi-channel:\n                 ASCII character\
    \ string \"#!AMR-WB_MC1.0\\n\"\n                 (or 0x2321414d522d57425F4D43312E300a\
    \ in hexadecimal)\n               File extensions: awb, AWB\n               Macintosh\
    \ file type code: none\n               Object identifier or OID: none\n   Person\
    \ & email address to contact for further information:\n               johan.sjoberg@ericsson.com\n\
    \               ari.lakaniemi@nokia.com\n   Intended usage: COMMON.\n        \
    \       It is expected that many VoIP applications (as well as\n             \
    \  mobile applications) will use this type.\n   Author/Change controller:\n  \
    \             johan.sjoberg@ericsson.com\n               ari.lakaniemi@nokia.com\n\
    \               IETF Audio/Video transport working group\n"
- title: 8.3. Mapping MIME Parameters into SDP
  contents:
  - "8.3. Mapping MIME Parameters into SDP\n   The information carried in the MIME\
    \ media type specification has a\n   specific mapping to fields in the Session\
    \ Description Protocol (SDP)\n   [11], which is commonly used to describe RTP\
    \ sessions.  When SDP is\n   used to specify sessions employing the AMR or AMR-WB\
    \ codec, the\n   mapping is as follows:\n      -  The MIME type (\"audio\") goes\
    \ in SDP \"m=\" as the media name.\n      -  The MIME subtype (payload format\
    \ name) goes in SDP \"a=rtpmap\"\n         as the encoding name.  The RTP clock\
    \ rate in \"a=rtpmap\" MUST be\n         8000 for AMR and 16000 for AMR-WB, and\
    \ the encoding parameters\n         (number of channels) MUST either be explicitly\
    \ set to N or\n         omitted, implying a default value of 1.  The values of\
    \ N that\n         are allowed is specified in Section 4.1 in [24].\n      - \
    \ The parameters \"ptime\" and \"maxptime\" go in the SDP \"a=ptime\"\n      \
    \   and \"a=maxptime\" attributes, respectively.\n      -  Any remaining parameters\
    \ go in the SDP \"a=fmtp\" attribute by\n         copying them directly from the\
    \ MIME media type string as a\n         semicolon separated list of parameter=value\
    \ pairs.\n   Some example SDP session descriptions utilizing AMR and AMR-WB\n\
    \   encodings follow.  In these examples, long a=fmtp lines are folded to\n  \
    \ meet the column width constraints of this document; the backslash\n   (\"\\\"\
    ) at the end of a line and the carriage return that follows it\n   should be ignored.\n\
    \   Example of usage of AMR in a possible GSM gateway scenario:\n    m=audio 49120\
    \ RTP/AVP 97\n    a=rtpmap:97 AMR/8000/1\n    a=fmtp:97 mode-set=0,2,5,7; mode-change-period=2;\
    \ \\\n      mode-change-neighbor=1\n    a=maxptime:20\n   Example of usage of\
    \ AMR-WB in a possible VoIP scenario:\n    m=audio 49120 RTP/AVP 98\n    a=rtpmap:98\
    \ AMR-WB/16000\n    a=fmtp:98 octet-align=1\n   Example of usage of AMR-WB in\
    \ a possible streaming scenario (two\n   channel stereo):\n    m=audio 49120 RTP/AVP\
    \ 99\n    a=rtpmap:99 AMR-WB/16000/2\n    a=fmtp:99 interleaving=30\n    a=maxptime:100\n\
    \   Note that the payload format (encoding) names are commonly shown in\n   upper\
    \ case.  MIME subtypes are commonly shown in lower case.  These\n   names are\
    \ case-insensitive in both places.  Similarly, parameter\n   names are case-insensitive\
    \ both in MIME types and in the default\n   mapping to the SDP a=fmtp attribute.\n"
- title: 9. IANA Considerations
  contents:
  - "9. IANA Considerations\n   Two new MIME subtypes have been registered, see Section\
    \ 8.  A new SDP\n   attribute \"maxptime\", defined in Section 8, has also been\
    \ registered.\n   The \"maxptime\" attribute is expected to be defined in the\
    \ revision of\n   RFC 2327 [11] and is added here with a consistent definition.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The authors would like to thank Petri Koskelainen,\
    \ Bernhard Wimmer,\n   Tim Fingscheidt, Sanjay Gupta, Stephen Casner, and Colin\
    \ Perkins for\n   their significant contributions made throughout the writing\
    \ and\n   reviewing of this document.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [1]   3GPP TS 26.090, \"Adaptive Multi-Rate (AMR) speech\
    \ transcoding\",\n         version 4.0.0 (2001-03), 3rd Generation Partnership\
    \ Project\n         (3GPP).\n   [2]   3GPP TS 26.101, \"AMR Speech Codec Frame\
    \ Structure\", version\n         4.1.0 (2001-06), 3rd Generation Partnership Project\
    \ (3GPP).\n   [3]   3GPP TS 26.190 \"AMR Wideband speech codec; Transcoding\n\
    \         functions\", version 5.0.0 (2001-03), 3rd Generation Partnership\n \
    \        Project (3GPP).\n   [4]   3GPP TS 26.201 \"AMR Wideband speech codec;\
    \ Frame Structure\",\n         version 5.0.0 (2001-03), 3rd Generation Partnership\
    \ Project\n         (3GPP).\n   [5]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [6]   3GPP TS 26.093, \"AMR Speech Codec; Source Controlled Rate\n       \
    \  operation\", version 4.0.0 (2000-12), 3rd Generation Partnership\n        \
    \ Project (3GPP).\n   [7]   3GPP TS 26.193 \"AMR Wideband Speech Codec; Source\
    \ Controlled\n         Rate operation\", version 5.0.0 (2001-03), 3rd Generation\n\
    \         Partnership Project (3GPP).\n   [8]   Schulzrinne, H, Casner, S., Frederick,\
    \ R. and V. Jacobson,\n         \"RTP: A Transport Protocol for Real-Time Applications\"\
    , RFC\n         1889, January 1996.\n   [9]   3GPP TS 26.092, \"AMR Speech Codec;\
    \ Comfort noise aspects\",\n         version 4.0.0 (2001-03), 3rd Generation Partnership\
    \ Project\n         (3GPP).\n   [10]  3GPP TS 26.192 \"AMR Wideband speech codec;\
    \ Comfort Noise\n         aspects\", version 5.0.0 (2001-03), 3rd Generation Partnership\n\
    \         Project (3GPP).\n   [11]  Handley, M. and V. Jacobson, \"SDP: Session\
    \ Description\n         Protocol\", RFC 2327, April 1998.\n   [24]  Schulzrinne,\
    \ H., \"RTP Profile for Audio and Video Conferences\n         with Minimal Control\"\
    \ RFC 1890, January 1996.\n"
- title: 11.1 Informative References
  contents:
  - "11.1 Informative References\n   [12]  GSM 06.60, \"Enhanced Full Rate (EFR) speech\
    \ transcoding\",\n         version 8.0.1 (2000-11), European Telecommunications\
    \ Standards\n         Institute (ETSI).\n   [13]  ANSI/TIA/EIA-136-Rev.C, part\
    \ 410 - \"TDMA Cellular/PCS - Radio\n         Interface, Enhanced Full Rate Voice\
    \ Codec (ACELP).\" Formerly\n         IS-641.  TIA published standard, June 1\
    \ 2001.\n   [14]  ARIB, RCR STD-27H, \"Personal Digital Cellular Telecommunication\n\
    \         System RCR Standard\", Association of Radio Industries and\n       \
    \  Businesses (ARIB).\n   [15]  Larzon, L., Degermark, M. and S. Pink, \"The UDP\
    \ Lite Protocol\",\n         Work in Progress.\n   [16]  3GPP TS 25.415 \"UTRAN\
    \ Iu Interface User Plane Protocols\",\n         version 4.2.0 (2001-09), 3rd\
    \ Generation Partnership Project\n         (3GPP).\n   [17]  S. Floyd, M. Handley,\
    \ J. Padhye, J. Widmer, \"Equation-Based\n         Congestion Control for Unicast\
    \ Applications\", ACM SIGCOMM 2000,\n         Stockholm, Sweden .\n   [18]  Li,\
    \ A., et. al., \"An RTP Payload Format for Generic FEC with\n         Uneven Level\
    \ Protection\", Work in Progress.\n   [19]  Rosenberg, J. and H. Schulzrinne,\
    \ \"An RTP Payload Format for\n         Generic Forward Error Correction\", RFC\
    \ 2733, December 1999.\n   [20]  3GPP TS 26.102, \"AMR speech codec interface\
    \ to Iu and Uu\",\n         version 4.0.0 (2001-03), 3rd Generation Partnership\
    \ Project\n         (3GPP).\n   [21]  3GPP TS 26.202 \"AMR Wideband speech codec;\
    \ Interface to Iu and\n         Uu\", version 5.0.0 (2001-03), 3rd Generation\
    \ Partnership\n         Project (3GPP).\n   [22]  Baugher, et. al., \"The Secure\
    \ Real Time Transport Protocol\",\n         Work in Progress.\n   [23]  Perkins,\
    \ C., Kouvelas, I., Hodson, O., Hardman, V., Handley,\n         M., Bolot, J.,\
    \ Vega-Garcia, A. and S. Fosse-Parisis, \"RTP\n         Payload for Redundant\
    \ Audio Data\", RFC 2198, September 1997.\n   ETSI documents can be downloaded\
    \ from the ETSI web server,\n   \"http://www.etsi.org/\".  Any 3GPP document can\
    \ be downloaded from the\n   3GPP webserver, \"http://www.3gpp.org/\", see specifications.\
    \  TIA\n   documents can be obtained from \"www.tiaonline.org\".\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Johan Sjoberg\n   Ericsson Research\n   Ericsson\
    \ AB\n   SE-164 80 Stockholm, SWEDEN\n   Phone:   +46 8 50878230\n   EMail: Johan.Sjoberg@ericsson.com\n\
    \   Magnus Westerlund\n   Ericsson Research\n   Ericsson AB\n   SE-164 80 Stockholm,\
    \ SWEDEN\n   Phone:   +46 8 4048287\n   EMail: Magnus.Westerlund@ericsson.com\n\
    \   Ari Lakaniemi\n   Nokia Research Center\n   P.O.Box 407\n   FIN-00045 Nokia\
    \ Group, FINLAND\n   Phone:   +358-71-8008000\n   EMail: ari.lakaniemi@nokia.com\n\
    \   Qiaobing Xie\n   Motorola, Inc.\n   1501 W. Shure Drive, 2-B8\n   Arlington\
    \ Heights, IL 60004, USA\n   Phone:   +1-847-632-3028\n   EMail: qxie1@email.mot.com\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
