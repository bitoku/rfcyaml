- title: __initial_text__
  contents:
  - "     IAB Considerations for UNilateral Self-Address Fixing (UNSAF)\n        \
    \           Across Network Address Translation\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   As a result of the nature of Network Address Translation (NAT)\n\
    \   Middleboxes, communicating endpoints that are separated by one or\n   more\
    \ NATs do not know how to refer to themselves using addresses that\n   are valid\
    \ in the addressing realms of their (current and future)\n   peers.  Various proposals\
    \ have been made for \"UNilateral Self-Address\n   Fixing (UNSAF)\" processes.\
    \  These are processes whereby some\n   originating endpoint attempts to determine\
    \ or fix the address (and\n   port) by which it is known to another endpoint -\
    \ e.g. to be able to\n   use address data in the protocol exchange, or to advertise\
    \ a public\n   address from which it will receive connections.\n   This document\
    \ outlines the reasons for which these proposals can be\n   considered at best\
    \ as short term fixes to specific problems and the\n   specific issues to be carefully\
    \ evaluated before creating an UNSAF\n   proposal.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   As a result of the nature of Network Address (and port) Translation\n\
    \   (NAT) Middleboxes, communicating endpoints that are separated by one\n   or\
    \ more NATs do not know how to refer to themselves using addresses\n   that are\
    \ valid in the addressing realms of their (current and future)\n   peers - the\
    \ address translation is locked within the NAT box.  For\n   some purposes, endpoints\
    \ need to know the addresses (and/or ports) by\n   which they are known to their\
    \ peers.  There are two cases: 1) when\n   the client initiates communication,\
    \ starting the communication has\n   the side effect of creating an address binding\
    \ in the NAT device and\n   allocating an address in the realm that is external\
    \ to the NAT box;\n   and 2) a server will be accepting connections from outside,\
    \ but\n   because it does not initiate communication, no NAT binding is\n   created.\
    \  In such cases, a mechanism is needed to fix such a binding\n   before communication\
    \ can take place.\n   \"UNilateral Self-Address Fixing (UNSAF)\" is a process\
    \ whereby some\n   originating process attempts to determine or fix the address\
    \ (and\n   port) by which it is known - e.g. to be able to use address data in\n\
    \   the protocol exchange, or to advertise a public address from which it\n  \
    \ will receive connections.\n   There are only heuristics and workarounds to attempt\
    \ to achieve this\n   effect; there is no 100% solution.  Since NATs may also\
    \ dynamically\n   reclaim or readjust translations, \"keep-alive\" and periodic\
    \ re-\n   polling may be required.  Use of these workarounds MUST be considered\n\
    \   transitional in IETF protocols, and a better architectural solution\n   is\
    \ being sought.  The explicit intention is to deprecate any such\n   workarounds\
    \ when sound technical approaches are available.\n"
- title: 2. Architectural issues affecting UNSAF Systems
  contents:
  - "2. Architectural issues affecting UNSAF Systems\n   Generally speaking, the proposed\
    \ workarounds are for cases where a\n   standard protocol communication is to\
    \ take place between two\n   endpoints,  but in order for this to occur, a separate\
    \ step of\n   determining (or fixing) the perceived address of an endpoint in\
    \ the\n   other endpoint's addressing realm is required.  Proposals require\n\
    \   that an endpoint seeking to \"fix\" its address contact a participating\n\
    \   service (in a different address realm) to determine (reflect) its\n   address.\
    \  Thus, there is an \"UNSAF client\" partnering with some form\n   of \"UNSAF\
    \ service\" that may or may not be associated with the target\n   endpoint of\
    \ the actual desired communication session.  Throughout\n   this memo, the terms\
    \ \"UNSAF server\" and \"UNSAF service\" should be\n   understood to generically\
    \ refer to whatever process is participating\n   in the UNSAF address determination\
    \ for the originating process (the\n   UNSAF client).\n   Any users of these workarounds\
    \ should be aware that specific\n   technical issues that impede the creation\
    \ of a general solution\n   include:\n   o  there *is* no unique \"outside\" to\
    \ a NAT - it may be impossible to\n      tell where the target endpoint is with\
    \ respect to the initiator;\n      how does an UNSAF client find an appropriate\
    \ UNSAF server to\n      reflect its address?  (See Appendix C).\n   o  specifically\
    \ because it is impossible to tell where address realms\n      are bounded (\"\
    inside\" or \"outside\", \"private\" or \"public\", or\n      several \"private\"\
    \ realms routing traffic), an address can only be\n      determined relative to\
    \ one specific point in the network.  If the\n      UNSAF service that reflected\
    \ an UNSAF client's address is in a\n      different NAT-masqueraded subnet from\
    \ some other service X that\n      the client wishes to use, there is _no_ guarantee\
    \ that the\n      client's \"perceived\" address from the UNSAF partner would\
    \ be the\n      same as the address viewed from the perspective of X.  (See\n\
    \      Appendix C).\n   o  absent \"middlebox communication (midcom)\", there\
    \ is no usable way\n      to let incoming communications make their way through\
    \ a middlebox\n      (NAT, firewall) under proper supervision.  By circumventing\
    \ the\n      NAT, UNSAF mechanisms may also (inadvertently) circumvent security\n\
    \      mechanisms.  The particular danger is that internal machines are\n    \
    \  unwittingly exposed to all the malicious communications from the\n      external\
    \ side that the firewall is intended to block.  This is\n      particularly unacceptable\
    \ if the UNSAF process is running on one\n      machine which is acting on behalf\
    \ of several.\n   o  proposed workarounds include the use of \"ping\"-like address\n\
    \      discovery requests sent from the UNSAF client (initiator) to the\n    \
    \  UNSAF server (listener), to which the listener responds with the\n      transport\
    \ address of the initiator - in the address realm of the\n      listener.  However,\
    \ with connection-less transports, e.g. UDP,\n      IPsec ESP, etc., an UNSAF\
    \ process must take care to react to\n      changes in NAT bindings for a given\
    \ application flow, since it may\n      change unpredictably.\n   o  if the UNSAF\
    \ client uses periodic retries to refresh/reevaluate\n      the address translation\
    \ state, both the UNSAF client and the UNSAF\n      server are required to maintain\
    \ information about the presumed\n      state of the communication in order to\
    \ manage the address\n      illusion.\n   o  since the UNSAF server is not integrated\
    \ with the middlebox, it\n      can only operate on the assumption that past behavior\
    \ is a\n      predictor of future behavior.  It has no special knowledge of the\n\
    \      address translation heuristic or affecting factors.\n   o  the communication\
    \ exchange is made more \"brittle\" by the\n      introduction of other servers\
    \ (UNSAF servers) that need to be\n      reachable in order for the communication\
    \ to succeed - more boxes\n      that are \"fate sharing\" in the communication.\n\
    \   Workarounds may mitigate some of these problems through tight scoping\n  \
    \ of applicability and specific fixes.  For example:\n   o  rather than finding\
    \ the address from \"the\" outside of the NAT, the\n      applicability of the\
    \ approach may be limited to finding the\n      \"self-address\" from a specific\
    \ service, for use exclusively with\n      that service.\n   o  limiting the scope\
    \ to outbound requests for service (or service\n      initiation) in order to\
    \ prevent unacceptable security exposures.\n"
- title: 3. Practical Issues
  contents:
  - "3. Practical Issues\n   From observations of deployed networks, it is clear that\
    \ different\n   NAT box implementations vary widely in terms of how they handle\n\
    \   different traffic and addressing cases.\n   Some of the specific types of\
    \ observed behaviors have included:\n   o  NATs may drop fragments in either direction:\
    \ without complete\n      TCP/UDP headers, the NAT may not make the address translation\n\
    \      mapping, simply dropping the packet.\n   o  Shipping NATs often contain\
    \ Application Layer Gateways (ALGs)\n      which attempt to be context-sensitive,\
    \ depending on the source or\n      destination port number.  The behavior of\
    \ the ALGs can be hard to\n      anticipate and these behaviors have not always\
    \ been documented.\n   o  Most NAT implementations with ALGs that attempt to translate\
    \ TCP\n      application protocols do not perform their functions correctly\n\
    \      when the substrings they must translate span across multiple TCP\n    \
    \  segments; some of them are also known to fail on flows that use\n      TCP\
    \ option headers, e.g. timestamps.\n   o  NAT implementations differ markedly\
    \ in their handling of packets.\n      Quite a few only really work reliably with\
    \ TCP packets, not UDP.\n      Of the ones that do make any attempt to handle\
    \ UDP packets, the\n      timers aging out flows can vary widely making it challenging\
    \ to\n      predict behavior.\n   o  Variation in address and port assignments\
    \ can be quite frequent -\n      on NATs, port numbers always change, and change\
    \ unpredictably;\n      there may be multiple NATs in parallel for load-sharing,\
    \ making IP\n      address variations quite likely as well.\n"
- title: 4. Architectural Considerations
  contents:
  - "4. Architectural Considerations\n   By distinguishing these approaches as short\
    \ term fixes, the IAB\n   believes the following considerations must be explicitly\
    \ addressed in\n   any proposal:\n   1.  Precise definition of a specific, limited-scope\
    \ problem that is\n       to be solved with the UNSAF proposal.   A short term\
    \ fix should\n       not be generalized to solve other problems.  Such generalizations\n\
    \       lead to the the prolonged dependence on and usage of the supposed\n  \
    \     short term fix -- meaning that it is no longer accurate to call\n      \
    \ it \"short term\".\n   2.  Description of an exit strategy/transition plan.\
    \  The better\n       short term fixes are the ones that will naturally see less\
    \ and\n       less use as the appropriate technology is deployed.\n   3.  Discussion\
    \ of specific issues that may render systems more\n       \"brittle\".  For example,\
    \ approaches that involve using data at\n       multiple network layers create\
    \ more dependencies, increase\n       debugging challenges, and make it harder\
    \ to transition.\n   4.  Identify requirements for longer term, sound technical\
    \ solutions;\n       contribute to the process of finding the right longer term\n\
    \       solution.\n   5.  Discussion of the impact of the noted practical issues\
    \ with\n       existing deployed NATs and experience reports.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   As a general class of workarounds, UNSAF proposals\
    \ may introduce\n   security holes because, in the absence of \"middlebox communication\n\
    \   (midcom)\", there is no feasible way to let incoming communications\n   make\
    \ their way through a firewall under proper supervision:\n   respecting the firewall\
    \ policies as opposed to circumventing security\n   mechanisms.\n"
- title: 'Appendix A. IAB Members at the time of this writing:'
  contents:
  - "Appendix A. IAB Members at the time of this writing:\n   Harald Alvestrand\n\
    \   Ran Atkinson\n   Rob Austein\n   Fred Baker\n   Leslie Daigle\n   Steve Deering\n\
    \   Sally Floyd\n   Ted Hardie\n   Geoff Huston\n   Charlie Kaufman\n   James\
    \ Kempf\n   Eric Rescorla\n   Mike St. Johns\n"
- title: Appendix B. Acknowledgements
  contents:
  - "Appendix B. Acknowledgements\n   This document has benefited greatly from detailed\
    \ comments and\n   suggestions from Thomas Narten, Bernard Aboba, Keith Moore,\
    \ and James\n   Woodyatt.\n   This document was originally drafted when the following\
    \ people were\n   part of the IAB: Steve Bellovin, Brian Carpenter, Jon Crowcroft,\
    \ John\n   Klensin and Henning Schulzrinne; it has benefited considerably from\n\
    \   their contributions and review.\n"
- title: Appendix C. Example NAT Configuration Scenario
  contents:
  - 'Appendix C. Example NAT Configuration Scenario

    '
- title: C.1 Generic NATed Network Configuration
  contents:
  - "C.1 Generic NATed Network Configuration\n   Here is one sample scenario wherein\
    \ it is difficult to describe a\n   single \"outside\" to a given address realm\
    \ (bridged by NAPTs).  This\n   sort of configuration might arise in an enterprise\
    \ environment where\n   different divisions have their own subnets (each using\
    \ the same\n   private address space); the divisions are connected so that they\
    \ can\n   pass traffic on each others' networks, but to access the global\n  \
    \ Internet, each uses a different NAPT/firewall:\n                           \
    \         +---------+\n                                    | Box C   | (192.168.4.5)\n\
    \                                    +---+-----+\n                           \
    \             |\n       ---------------------------------+-------\n          \
    \                              |\n                                        | 192.168.3.0/24\n\
    \                                   +----+----+\n                            \
    \       | NAT 2   |\n                                   +----+----+\n        \
    \                                | 10.1.0.0/32\n                             \
    \           |\n         -----+-------------------------+------------+----\n  \
    \            |                                      |\n              |       \
    \                          +----+----+\n              |                      \
    \           | Box B   | (10.1.1.100)\n              |                        \
    \         +---------+\n              |\n         +----+----+\n         | NAPT\
    \ 1  | (10.1.2.27)\n         +----+----+\n              | 10.1.0.0/32\n      \
    \        |\n          ----+-----+--\n                    |\n                 \
    \   |\n               +----+----+\n               | Box A   | (10.1.1.100)\n \
    \              +---------+\n   From the perspective of Box B, Box A's address\
    \ is (some port on)\n   10.1.2.27.  From the perspective of Box C, however, Box\
    \ A's address\n   is some address in the space 192.168.3.0/24.\n"
- title: C.2 Real World Home Network Example
  contents:
  - "C.2 Real World Home Network Example\n   James Woodyatt provided the following\
    \ scenario, based on current\n   examples of home networking products:\n   o \
    \ the customer has existing Internet service from some broadband\n      service\
    \ provider, using e.g. a DSL line connected to an appliance\n      that integrates\
    \ a DSL modem with a NAT router/firewall.\n   o  these devices are sometimes packaged\
    \ with automated provisioning\n      firmware, so the customer may view them as\
    \ part of what their ISP\n      provides them.\n   o  later, the customer wants\
    \ to use a host with only a wireless LAN\n      interface, so they install a wireless\
    \ access point that ships in\n      its default configuration with NAT and a DHCP\
    \ server enabled.\n   o  after this, the customer has a wired LAN in one private\
    \ address\n      realm and a wireless LAN in another private address realm.\n\
    \   Furthermore, most customers probably have no idea what the phrase\n   \"address\
    \ realm\" means and shouldn't have to learn it.  All they often\n   know is that\
    \ the printer server is inaccessible to the wireless\n   laptop computer.  (Why?\
    \  Because the discovery protocol uses UDP\n   multicast with TTL=1, but that's\
    \ okay because any response would just\n   be dropped by the NAT anyway, because\
    \ there's no ALG.)\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Leslie Daigle\n   Editor\n   Internet Architecture Board\n\
    \   IAB\n   EMail: iab@iab.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
