- contents:
  - '        IPv6 over Non-Broadcast Multiple Access (NBMA) networks

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes a general architecture for IPv6 over NBMA\n
    \  networks. It forms the basis for subsidiary companion documents that\n   describe
    details for various specific NBMA technologies (such as ATM\n   or Frame Relay).
    The IPv6 over NBMA architecture allows conventional\n   host-side operation of
    the IPv6 Neighbor Discovery protocol, while\n   also supporting the establishment
    of 'shortcut' NBMA forwarding paths\n   when dynamically signaled NBMA links are
    available. Operations over\n   administratively configured Point to Point NBMA
    links are also\n   described.\n   Dynamic NBMA shortcuts are achieved through
    the use of IPv6 Neighbor\n   Discovery protocol operation within Logical Links,
    and inter-router\n   NHRP for the discovery of off-Link NBMA destinations. Both
    flow-\n   triggered and explicitly source-triggered shortcuts are supported.\n"
  title: Abstract
- contents:
  - "1. Introduction.\n   Non Broadcast Multiple Access (NBMA) networks may be utilized
    in a\n   variety of ways. At one extreme, they can be used to simply provide\n
    \  administratively configurable point to point service, sufficient to\n   interconnect
    IPv6 routers (and even IPv6 hosts, in certain\n   situations). At the other extreme,
    NBMA networks that support dynamic\n   establishment and teardown of Virtual Circuits
    (or functional\n   equivalents) may be used to emulate the service provided to
    the IPv6\n   layer by conventional broadcast media such as Ethernet.  Typically\n
    \  this emulation requires complex convergence protocols, particularly\n   to
    support IPv6 multicast.\n   This document describes a general architecture for
    IPv6 over NBMA\n   networks. It forms the basis for companion documents that provide\n
    \  details specific to various NBMA technologies (for example, ATM [17]\n   or
    Frame Relay). The IPv6 over NBMA architecture allows conventional\n   host-side
    operation of the IPv6 Neighbor Discovery protocol, while\n   also supporting the
    establishment of 'shortcut' NBMA forwarding paths\n   (when dynamically signaled
    NBMA links are available).\n   The majority of this document focuses on the use
    of dynamically\n   managed point to point and point to multipoint calls between\n
    \  interfaces on an NBMA network. These will be generically referred to\n   as
    \"SVCs\" in the rest of the document. The use of administratively\n   configured
    point to point calls will also be discussed. Such calls\n   will be generically
    referred to as \"PVCs\". Depending on context,\n   either may be shortened to
    \"VC\".\n   Certain NBMA networks may provide a form of connectionless service\n
    \  (e.g. SMDS). In these cases, a \"call\" or \"VC\" shall be considered to\n
    \  implicitly exist if the sender has an NBMA destination address to\n   which
    it can transmit packets whenever it desires.\n"
  - contents:
    - "1.1 Neighbor Discovery.\n   A key difference between this architecture and
      previous IP over NBMA\n   protocols is its mechanism for supporting IPv6 Neighbor
      Discovery.\n   The IPv4 world evolved an approach to address resolution that\n
      \  depended on the operation of an auxiliary protocol operating at the\n   'link
      layer' - starting with Ethernet ARP (RFC 826 [14]). In the\n   world of NBMA
      (Non Broadcast, Multiple Access) networks ARP has been\n   applied to IPv4 over
      SMDS (RFC 1209 [13]) and IPv4 over ATM (RFC 1577\n   [3]). More recently the
      ION working group has developed NHRP (Next\n   Hop Resolution Protocol [8]),
      a general protocol for performing\n   intra-subnet and inter-subnet address
      resolution applicable to a\n   range of NBMA network technologies.\n   IPv6
      developers opted to migrate away from a link layer specific\n   approach, chosing
      to combine a number of tasks into a protocol known\n   as Neighbor Discovery
      [7], intended to be non-specific across a\n   number of link layer technologies.
      \ A key assumption made by Neighbor\n   Discovery's actual protocol is that
      the link technology underlying a\n   given IP interface is capable of native
      multicasting.  This is not\n   particularly true of most NBMA network services,
      and usually requires\n   convergence protocols to emulate the desired service.
      \ (The MARS\n   protocol, RFC 2022 [5], is an example of such a convergence\n
      \  protocol.) This document augments and optimizes the MARS protocol for\n   use
      in support of IPv6 Neighbor Discovery, generalizing the\n   applicability of
      RFC 2022 beyond ATM networks.\n"
    title: 1.1 Neighbor Discovery.
  - contents:
    - "1.2 NBMA Shortcuts.\n   A shortcut is an NBMA level call (VC) directly connecting
      two IP\n   endpoints that are logically separated by one or more routers at
      the\n   IP level. IPv6 packets traversing this VC are said to 'shortcut' the\n
      \  routers that are in the logical IPv6 path between the VC's endpoints.\n   NBMA
      shortcuts are a mechanism for minimizing the consumption of\n   resources within
      an IP over NBMA cloud (e.g. router hops and NBMA\n   VCs).\n   It is important
      that NBMA shortcuts are supported whenever IP is\n   deployed across NBMA networks
      capable of supporting dynamic\n   establishment of calls (SVCs or functional
      equivalent).  For IPv6\n   over NBMA, shortcut discovery and management is achieved
      through a\n   mixture of Neighbor Discovery and NHRP.\n"
    title: 1.2 NBMA Shortcuts.
  - contents:
    - '1.3 Key components of the IPv6 over NBMA architecture.

      '
    - contents:
      - "1.3.1 NBMA networks providing PVC support.\n   When the NBMA network is used
        in PVC mode, each PVC will connect\n   exactly two nodes and the use of Neighbor
        Discovery and other IPv6\n   features is limited.  IPv6/NBMA interfaces have
        only one neighbor on\n   each Link. The MARS and NHRP protocols are NOT necessary,
        since\n   multicast and broadcast operations collapse down to an NBMA level\n
        \  unicast operation. Dynamically discovered shortcuts are not\n   supported.\n
        \  The actual details of encapsulations and link token generation SHALL\n
        \  be covered by companion documents covering specific NBMA technology.\n
        \  They SHALL conform to the following guidelines:\n      Both unicast and
        multicast IPv6 packets SHALL be transmitted over\n      PVC links using the
        encapsulation described in section 4.4.1.\n      Interface tokens for PVC
        links SHALL be constructed as described\n      in section 5. Interface tokens
        need only be unique between the two\n      nodes on the PVC link.\n      This
        use of PVC links does not mandate, nor does it prohibit the\n      use of
        extensions to the Neighbor Discovery protocol which may be\n      developed
        for either general use of for use in PVC connections\n      (for example,
        Inverse Neighbor Discovery).\n   NBMA-specific companion documents MAY additionally
        specify the\n   concatenation of IPv6 over PPP and PPP over NBMA mechanisms
        as an\n   OPTIONAL approach to point to point IPv6.\n   Except where noted
        above, the remainder of this document focuses on\n   the SVC case.\n"
      title: 1.3.1 NBMA networks providing PVC support.
    - contents:
      - "1.3.2 NBMA networks providing SVC support.\n   When the NBMA network is used
        in SVC mode, the key components are:\n      - The IPv6 Neighbor model, where
        neighbors are discovered through\n        the use of messages multicast to
        members of an IPv6 interface's\n        local IPv6 Link.\n      - The MARS
        model, allowing emulation of general multicast using\n        multipoint calls
        provided by the underlying NBMA network.\n      - The NHRP service for seeking
        out the NBMA identities of IP\n        interfaces who are logically distant
        in an IP topological sense.\n      - The modeling of IP traffic as 'flows',
        and optionally using the\n        existence of a flow as the basis for attempting
        to set up a\n        shortcut link level connection.\n   In summary:\n      The
        IPv6 \"Link\" is generalized to \"Logical Link\" (LL) in NBMA\n      environments
        (analogous to the generalization of IPv4 IP Subnet to\n      Logical IP Subnet
        in RFC 1209 and subsequently RFC 1577).\n      IPv6/NBMA interfaces utilize
        RFC 2022 (MARS) for general intra-\n      Logical Link multicasting. The MARS
        itself is used to optimally\n      distribute discovery messages within the
        Logical Link.\n      For destinations not currently considered to be Neighbors,
        a host\n      sends the packets to one of its default routers.\n      When
        appropriately configured, the egress router from a Logical\n      Link is
        responsible for detecting the existence of an IP packet\n      flow through
        it that might benefit from a shortcut connection.\n         While continuing
        to conventionally forward the flow's packets,\n         the router initiates
        an NHRP query for the flow's destination\n         IP address.\n         The
        last router/NHS before the target of the NHRP query\n         ascertains the
        target interface's preferred NBMA address.\n         The originally querying
        router then issues a Redirect to the IP\n         source, identifying the
        flow's destination as a transient\n         Neighbor.\n      Host-initiated
        triggering of shortcut discovery, regardless of the\n      existence of a
        packet flow, is also supported through specific\n      Neighbor Solicitations
        sent to a source host's default router.\n   A number of key advantages are
        claimed for this approach. These are:\n      The IPv6 stacks on hosts do not
        implement separate ND protocols\n      for each link layer technology.\n      When
        the destination of a flow is solicited as a transient\n      neighbor, the
        returned NBMA address will be the one chosen by the\n      destination when
        the flow was originally established through hop-\n      by-hop processing.
        This supports the existing ND ability for IPv6\n      destinations to perform
        their own dynamic interface load sharing.\n"
      title: 1.3.2 NBMA networks providing SVC support.
    title: 1.3 Key components of the IPv6 over NBMA architecture.
  - contents:
    - "1.4 Terminology.\n   The bit-pattern or numeric value used to identify a particular
      NBMA\n   interface at the NBMA level will be referred to as an \"NBMA address\".\n
      \  (An example would be an ATM End System Address, AESA, when applying\n   this
      architecture to ATM networks, or an E.164 number when applying\n   this architecture
      to SMDS networks.)\n   The call that, once established, is used to transfer
      IP packets from\n   one NBMA interface to another will be referred to as an
      SVC or PVC\n   depending on whether the call is dynamically established through
      some\n   signaling mechanism, or administratively established. The specific\n
      \  signaling mechanisms used to establish or tear down an SVC will be\n   defined
      in the NBMA-specific companion specifications.  Certain NBMA\n   networks may
      provide a form of connectionless service (e.g. SMDS). In\n   these cases, a
      \"call\" or \"SVC\" shall be considered to implicitly\n   exist if the sender
      has an NBMA destination address to which it can\n   transmit packets whenever
      it desires.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
      2119 [16].\n"
    title: 1.4 Terminology.
  - contents:
    - "1.5 Document Structure.\n   The remainder of this document is structured as
      follows: Section 2\n   explains the generalization of IPv6 Link to \"Logical
      Link\" when used\n   over NBMA networks, and introduces the notion of the Transient\n
      \  Neighbor.  Section 3 describes the modifications to the MARS protocol\n   for
      efficient distribution of ND messages within a Logical Link, and\n   the rules
      and mechanisms for discovering Transient Neighbors.\n   Section 4 covers the
      basic rules governing IPv6/NBMA interface\n   initialization, packet and control
      message encapsulations, and rules\n   for SVC management. Section 5 describes
      the general rules for\n   constructing Interface Tokens, the Link Layer Address
      Option, and\n   Link Local addresses.  Section 6 concludes the normative sections
      of\n   the document.  Appendix A provides some non-normative descriptive\n   text
      regarding the operation of Ipv6 Neighbor Discovery.  Appendix B\n   describes
      some sub-optimal solutions for emulating the multicasting\n   of Neighbor Discovery
      messages around a Logical Link.  Appendix C\n   discusses shortcut suppression
      and briefly reviews the future\n   relationships between flow detection and
      mapping of flows onto SVCs\n   of differing qualities of service.\n"
    title: 1.5 Document Structure.
  title: 1. Introduction.
- contents:
  - "2. Logical Links, and Transient Neighbors.\n   IPv6 contains a concept of on-link
    and off-link. Neighbors are those\n   nodes that are considered on-link and whose
    link-layer addresses may\n   therefore be located using Neighbor Discovery.  Borrowing
    from the\n   terminology definitions in the ND text:\n   on-link   - an address
    that is assigned to a neighbor's interface on\n               a shared link.  A
    host considers an address to be on-\n               link if:\n                 -
    it is covered by one of the link's prefixes, or\n                 - a neighboring
    router specifies the address as the\n                   target of a Redirect message,
    or\n                 - a Neighbor Advertisement message is received for the\n
    \                  target address, or\n                 - a Neighbor Discovery
    message is received from the\n                   address.\n   off-link  - the
    opposite of \"on-link\"; an address that is not\n               assigned to any
    interfaces attached to a shared link.\n   Off-link nodes are considered to only
    be accessible through one of\n   the routers directly attached to the link.\n
    \  The NBMA environment complicates the sense of the word 'link' in much\n   the
    same way as it complicated the sense of 'subnet' in the IPv4\n   case. For IPv4
    this required the definition of the Logical IP Subnet\n   (LIS) - an administratively
    constructed set of hosts that would share\n   the same routing prefixes (network
    and subnetwork masks).\n   This document considers the IPv6 analog to be a Logical
    Link (LL).\n      An LL consists of nodes administratively configured to be 'on\n
    \     link' with respect to each other.\n      The members of an LL are an IPv6
    interface's initial set of\n      neighbors, and each interface's Link Local address
    only needs to\n      be unique amongst this set.\n   It should be noted that whilst
    members of an LL are IPv6 Neighbors,\n   it is possible for Neighbors to exist
    that are not, administratively,\n   members of the same LL.\n   Neighbor Discovery
    events can result in the expansion of an IPv6\n   interface's set of Neighbors.
    However, this does not change the set\n   of interfaces that make up its LL. This
    leads to three possible\n   relationships between any two IPv6 interfaces:\n      -
    On LL, Neighbor.\n      - Off LL, Neighbor.\n      - Off LL, not Neighbor.\n   Off
    LL Neighbors represent the 'shortcut' connections, where it has\n   been ascertained
    that direct connectivity at the NBMA level is\n   possible to a target that is
    not a member of the source's LL.\n   Neighbors discovered through the operation
    of unsolicited messages,\n   such as Redirects, are termed 'Transient Neighbors'.\n"
  title: 2. Logical Links, and Transient Neighbors.
- contents:
  - "3. Intra-LL and Inter-LL Discovery.\n   This document makes a distinction between
    the discovery of neighbors\n   within a Logical Link (intra-LL) and neighbors
    beyond the LL (inter-\n   LL). The goal is to allow both inter- and intra-LL neighbor
    discovery\n   to involve no changes to the host-side IPv6 stack for NBMA\n   interfaces.\n
    \  Note that section 1.3.1 applies when the NBMA network is being used\n   to
    provide only configured point to point (PVC) service.\n"
  - contents:
    - "3.1 Intra-LL - ND over emulated multicast.\n   The basic model of ND assumes
      that a link layer interface will do\n   something meaningful with an ICMPv6
      packet sent to a multicast IP\n   destination address. (IPv6 assumes that multicasting
      is an integral\n   part of the Internet service.) This document assumes multicast\n
      \  support will be provided using the RFC 2022 (MARS) [5] service\n   (generalized
      for use over other NBMA technologies in addition to\n   ATM).  An IPv6 LL maps
      directly onto an IPv6 MARS Cluster in the same\n   way an IPv4 LIS maps directly
      onto an IPv4 MARS Cluster.\n   The goal of intra-LL operation is that the IPv6
      layer must be able to\n   simply pass multicast ICMPv6 packets down to the IPv6/NBMA
      driver\n   without any special, NBMA specific processing. The underlying\n   mechanism
      for distributing Neighbor Discovery and Router Discovery\n   messages then works
      as expected.\n   Sections 3.1.1 describes the additional functionality that
      SHALL be\n   required of any MARS used in conformance with this document.\n
      \  Background discussion of these additions is provided in Appendix B.\n"
    - contents:
      - "3.1.1 Mandatory augmented MARS and MARS Client behavior.\n   IPv6/NBMA interfaces
        SHALL register as MARS Cluster members as\n   described in section 4.1, and
        SHALL send certain classes of outgoing\n   IPv6 packets directly to their
        local MARS as described in section\n   4.4.2.\n   The MARS itself SHALL then
        re-transmit these packets according to the\n   following rules:\n      - When
        the MARS receives an IPv6 packet, it scans the group\n        membership database
        to find the NBMA addresses of the IPv6\n        destination group's members.\n
        \     - The MARS then checks to see if every group member currently has\n
        \       its pt-pt control VC open to the MARS. If so, the MARS sends a\n        copy
        of the data packet directly to each group member over the\n        existing
        pt-pt VCs.\n      - If one or more of the discovered group members do not
        have an\n        open pt-pt VC to the MARS, or if there are no group members\n
        \       listed, the packet is sent out ClusterControlVC instead. No\n        copies
        of the packet are sent over the existing (if any) pt-pt\n        VCs.\n"
      title: 3.1.1 Mandatory augmented MARS and MARS Client behavior.
    title: 3.1 Intra-LL - ND over emulated multicast.
  - contents:
    - "3.2 Inter-LL - Redirects, and their generation.\n   Shortcut connections are
      justified on the grounds that demanding\n   flows of IP packets may exist between
      source/destination pairs that\n   are separated by IP routing boundaries. Shortcuts
      are created between\n   Transient Neighbors.\n   The key to creating transient
      neighbors is the Redirect message\n   (section 8 [7]).  IPv6 allows a router
      to inform the members of an LL\n   that there is a better 'first hop' to a given
      destination (section\n   8.2 [7]).  The advertisement itself is achieved through
      a Router\n   Redirect message, which may carry the link layer address of this\n
      \  better hop.\n   A transmitting host only listens to Router Redirects from
      the router\n   that is currently acting as the default router for the IP destination\n
      \  that the Redirect refers to. If a Redirect arrives that indicates a\n   better
      first hop for a given destination, and supplies a link layer\n   (NBMA) address
      to use as the better first hop, the associated\n   Neighbor Cache entry in the
      source host is updated and its\n   reachability set to STALE. Updating the cache
      in this context\n   involves building a new VC to the new NBMA address. If this
      is\n   successful, the old VC is torn down only if it no longer required\n   (since
      the old VC was to the router, it may still be required by\n   other packets
      from the host that are heading to the router).\n   Two mechanisms are provided
      for triggering the discovery of a better\n   first hop:\n      Router-based
      flow identification/detection.\n      Host-initiated shortcut request.\n   Section
      3.2.1 discusses flow-based triggers, section 3.2.2 discusses\n   the host initiated
      trigger, and section 3.2.3 discusses the use of\n   NHRP to discover mappings
      for IPv6 targets in remote LLs.\n"
    - contents:
      - "3.2.1 Flow Triggered Redirection.\n   The modification of forwarding paths
        based on the dynamic detection\n   of IP packet flows is at the core of models
        such as the Cell Switch\n   Router [11] and the IP Switch [12]. Responsibility
        for detecting\n   flows is placed into the routers, where packets cross the
        edges of IP\n   routing boundaries.\n   For the purpose of conformance with
        this document, a router MAY\n   choose to initiate the discovery of a better
        first-hop when it\n   determines that an identifiable flow of IP packets are
        passing\n   through it.\n      Such a router:\n         SHALL only track flows
        that originate from a directly attached\n         host (a host that is within
        the LL-local scope of one of the\n         router's interfaces).\n         SHALL
        NOT use IP packets arriving from another router to\n         trigger the generation
        of a Router Redirect.\n         SHALL only consider IPv6 packets with FlowID
        of zero for the\n         purposes of flow detection as defined in this section.\n
        \        SHALL utilize NHRP as described in section 3.2.3 to ascertain a\n
        \        better first-hop when a suitable flow is detected, and\n         advertise
        the information in a Router Redirect.\n   IPv6 routers that support the OPTIONAL
        flow detection behavior\n   described above SHALL support administrative mechanisms
        to switch off\n   flow-detection. They MAY provide mechanisms for adding additional\n
        \  constraints to the categories of IPv6 packets that constitute a\n   'flow'.\n
        \  The actual algorithm(s) for determining what sequence of IPv6 packets\n
        \  constitute a 'flow' are outside the scope of this document.  Appendix\n
        \  C discusses the rationale behind the use of non-zero FlowID to\n   suppress
        flow detection.\n"
      title: 3.2.1 Flow Triggered Redirection.
    - contents:
      - "3.2.2 Host Triggered Redirection\n   A source host MAY also trigger a redirection
        to a transient neighbor.\n   To support host-triggered redirects, routers
        conforming to this\n   document SHALL recognize specific Neighbor Solicitation
        messages sent\n   by hosts as requests for the resolution of off-link addresses.\n
        \  To perform a host-triggered redirect, a source host SHALL:\n      Create
        a Neighbor Solicitation message referring to the off-LL\n      destination
        (target) for which a shortcut is desired\n      Address the NS message to
        the router that would be the next hop\n      for traffic sent towards the
        off-LL target (rather than the\n      target's solicited node multicast address).\n
        \     Use the standard ND hop limit of 255 to ensure the NS won't be\n      discarded
        by the router.\n      Include the shortcut limit option defined in appendix
        D. The value\n      of this option should be equal to the hop limit of the
        data flow\n      for which this trigger is being sent. This ensures that the
        router\n      is able to restrict the shortcut attempt to not exceed the reach\n
        \     of the data flow.\n      Forward the NS packet to the router that would
        be the next hop for\n      traffic sent towards the off-LL target.\n   Routers
        SHALL consider a unicast NS with shortcut limit option as a\n   request for
        a host-triggered redirect. However, actual shortcut\n   discovery is OPTIONAL
        for IPv6 routers.\n   When shortcut discovery is not supported, the router
        SHALL construct\n   a Redirect message identifying the router itself as the
        best\n   'shortcut', and return it to the soliciting host.\n   If shortcut
        discovery is to be supported, the router's response SHALL\n   be:\n      A
        suitable NHRP Request is constructed and sent as described in\n      section
        3.2.3.  The original NS message SHOULD be discarded.\n      Once the NHRP
        Reply is received by the originating router, the\n      router SHALL construct
        a Redirect message containing the IPv6\n      address of the transient neighbor,
        and the NBMA link layer address\n      returned by the NHRP resolution process.\n
        \     The resulting Redirect message SHALL then be transmitted back to\n      the
        source host. When the Redirect message is received, the source\n      host
        SHALL update its Neighbor and Destination caches.\n      The off-LL target
        is now considered a Transient Neighbor.  The\n      next packet sent to the
        Transient Neighbor will result in the\n      creation of the direct, shortcut
        VC (to the off-LL target itself,\n      or to the best egress router towards
        that neighbor as determined\n      by NHRP).\n      If a NHRP NAK or error
        indication is received for a host-triggered\n      shortcut attempt, the requesting
        router SHALL construct a Redirect\n      message identifying the router itself
        as the best 'shortcut', and\n      return it to the soliciting host.\n"
      title: 3.2.2 Host Triggered Redirection
    - contents:
      - "3.2.3 Use of NHRP between routers.\n   Once flow detection has occurred,
        or a host trigger has been\n   detected, routers SHALL use NHRP in an NHS
        to NHS mode to establish\n   the IPv6 to link level address mapping of a better
        first hop.\n   IPv6/NBMA routers supporting shortcut discovery will need to
        perform\n   some or all of the following functions:\n      - Construct NHRP
        Requests and Replies.\n   - Parse incoming NHRP Requests and Replies from
        other NHSes\n        (routers).\n      - Forward NHRP Requests towards an
        NHS that is topologically\n        closer to the IPv6 target.\n      - Forward
        NHRP Replies towards an NHS that is topologically closer\n        to the requester.\n
        \     - Perform syntax translation between Neighbor Solicitations and\n        outbound
        NHRP Requests.\n      - Perform syntax translation between inbound NHRP Replies
        and\n        Redirects.\n   The destination of the flow that caused the trigger
        (or the target of\n   the host initiated trigger) is used as the target for
        resolution in a\n   NHRP Request. The router then forwards this NHRP Request
        to the next\n   closest NHS. The process continues (as it would for normal
        NHRP)\n   until the Request reaches an NHS that believes the IP target is\n
        \  within link-local scope of one of its interfaces.  (This may\n   potentially
        occur within a single router.)\n   As NHRP resolution requests always follow
        the routed path for a given\n   target protocol address, the scope of a shortcut
        request will be\n   automatically bounded to the scope of the IPv6 target
        address.  (e.g.\n   resolution requests for site-local addresses will not
        be forwarded\n   across site boundaries.)\n   The last hop router SHALL resolve
        the NHRP Request from mapping\n   information contained in its neighbor cache
        for the interface on\n   which the specified target is reachable. If there
        is no appropriate\n   entry in the Neighbor cache, or the destination is currently\n
        \  considered unreachable, the last hop router SHALL perform Neighbor\n   Discovery
        on the local interface, and build the NHRP Reply from the\n   resulting answer.
        (Note, in the case where the NHRP Request\n   originated due to flow detection,
        there must already be a hop-by-hop\n   flow of packets going through the last
        hop router towards the target.\n   In this typical case the Neighbor cache
        will already have the desired\n   information.)\n   The NHRP Reply is propagated
        back to the source of the NHRP Request,\n   using a hop-by-hop path as it
        would for normal NHRP.\n   If the discovery process was triggered through
        flow detection at the\n   originating router, the return of the NHRP Reply
        results in the\n   following events:\n      A Redirect is constructed using
        the IPv6/NBMA mapping carried in\n      the NHRP Reply.\n      The Redirect
        is unicast to the IP packet flow's source (using the\n      VC on which the
        flow is arriving at the router, if it is a bi-\n      directional pt-pt VC).\n
        \     Any Redirect message sent by a router MUST conform to all the\n      rules
        described in [7] so that the packet is properly validated by\n      the receiving
        host.  Specifically, if the target of the resulting\n      short-cut is the
        destination host then the ICMP Target Address\n      MUST be the same as the
        ICMP Destination Address in the original\n      message.  If the target of
        the short-cut is an egress router then\n      the ICMP Target Address MUST
        be a Link Local address of the egress\n      router that is unique to the
        NBMA cloud to which the router's NBMA\n      interface is attached.\n      Also
        note that egress routers may subsequently redirect the source\n      host.
        To do so, the Link Local ICMP Source Address of the Redirect\n      message
        MUST be the same as the Link Local ICMP Target Address of\n      the original
        Redirect message.\n   Note that the router constructing the NHRP Reply does
        so using the\n   NBMA address returned by the target host when the target
        host first\n   accepted the flow of IP traffic. This retains a useful feature
        of\n   Neighbor Discovery - destination interface load sharing.\n   Upon receipt
        of a NHRP NAK reply or error indication for a flow-\n   triggered shortcut
        attempt, no indication is sent to the source of\n   the flow.\n"
      - contents:
        - "3.2.3.1  NHRP/ND packet translation rules.\n   The following translation
          rules are meant to augment the packet\n   format specification in section
          5 of the NHRP specification [8],\n   covering those packet fields specifically
          utilized by the IPv6/NBMA\n   architecture.\n   NHRP messages are constructed
          and sent according to the rules in [8].\n   The value of the NBMA technology
          specific fields such as ar$afn,\n   ar$pro.type, ar$pro.snap and link layer
          address format are defined in\n   NBMA-specific companion documents. Source,
          destination or client\n   protocol addresses in the common header or CIE
          of a NHRP message are\n   always IPv6 addresses of length 16.\n   When constructing
          an host-triggered NHRP resolution request in\n   response to a Neighbor
          Solicitation:\n      The ar$hopcnt field MUST be smaller than the shortcut
          limit value\n      specified in the shortcut limit option included in the
          triggering\n      NS message. This ensures that hosts have control over
          the reach of\n      their shortcut request. Note that the shortcut limit
          given in the\n      option is relative to the requesting host, thus the
          requirement of\n      ar$hopcnt being smaller than the given shortcut limit.\n
          \     The Flags field in the common header of the NHRP resolution\n      request
          SHOULD have the Q and S bits set.\n      The U bit SHOULD be set.  NBMA
          and protocol source addresses are\n      those of the router constructing
          the request.\n      The target address from the NS message is used as the
          NHRP\n      destination protocol address.  A CIE SHALL NOT be specified.\n
          \  When constructing a NHRP resolution request as a result of flow\n   detection,
          the choice of values is configuration dependent.\n   A NHRP resolution reply
          is build according to the rules in [8].\n      For each CIE returned, the
          holding time is 10 minutes.\n      The MTU may be 0 or a value specified
          in the NBMA-specific\n      companion document.\n   A successful NHRP resolution
          reply for a host-triggered shortcut\n   attempt is translated into an IPv6
          Redirect message as follows:\n   IP Fields:\n      Source Address\n            The
          link-local address assigned to the router's interface\n            from
          which this message is sent.\n      Destination Address\n            IPv6
          Source Address of the triggering NS\n      Hop Limit\n            255\n
          \  ICMP Fields:\n      Target Address\n            NHRP Client Protocol
          Address\n      Destination Address\n            Target of triggering NS
          (this is equivalent to the NHRP\n            Destination Protocol Address)\n
          \     Target link-layer address\n            NHRP Client NBMA Address\n
          \  All NHRP extensions currently defined in [8] have no effect on\n   NHRP/ND
          translation and MAY be used in NHRP messages for IPv6.\n"
        title: 3.2.3.1  NHRP/ND packet translation rules.
      - contents:
        - "3.2.3.2  NHRP Purge rules.\n   Purges are generated by NHRP when changes
          are detected that\n   invalidate a previously issued NHRP Reply (this may
          include topology\n   changes, or a target host going down or changing identity).
          Any IPv6\n   shortcut previously established on the basis of newly purged\n
          \  information SHOULD be torn down.\n   Routers SHALL keep track of NHRP
          cache entries for which they have\n   issued Neighbor Advertisements or
          Router Redirects. If a NHRP Purge\n   is received that invalidates information
          previously issued to local\n   host, the router SHALL issue a Router Redirect
          specifying the router\n   itself as the new best next-hop for the affected
          IPv6 target.\n   Routers SHALL keep track of Neighbor cache entries that
          have\n   previously been used to generate an NHRP Reply. The expiry of any\n
          \  such Neighbor cache entry SHALL result in a NHRP Purge being sent\n   towards
          the router that originally requested the NHRP Reply.\n"
        title: 3.2.3.2  NHRP Purge rules.
      title: 3.2.3 Use of NHRP between routers.
    title: 3.2 Inter-LL - Redirects, and their generation.
  - contents:
    - "3.3. Neighbor Unreachability Detection.\n   Neighbor Solicitations sent for
      the purposes of Neighbor\n   Unreachability Detection (NUD) are unicast to the
      Neighbor in\n   question, using the VC that is already open to that Neighbor.
      This\n   suggests that as far as NUD is concerned, the Transient Neighbor is\n
      \  indistinguishable from an On-LL Neighbor.\n"
    title: 3.3. Neighbor Unreachability Detection.
  - contents:
    - "3.4. Duplicate Address Detection.\n   Duplicate Address Detection is only required
      within the link-local\n   scope, which in this case is the LL-local scope. Transient
      Neighbors\n   are outside the scope of the LL. No particular interaction is\n
      \  required between the mechanism for establishing shortcuts and the\n   mechanism
      for detection of duplicate link local addresses.\n"
    title: 3.4. Duplicate Address Detection.
  title: 3. Intra-LL and Inter-LL Discovery.
- contents:
  - "4 Node Operation Concepts.\n   This section describes node operations for performing
    basic functions\n   (such as sending and receiving data) on a Logical Link.  The\n
    \  application of these basic functions to the operation of the various\n   IPv6
    protocols such as Neighbor Discovery is described in Appendix A.\n   The majority
    of this section applies only to NBMA networks when used\n   to provide point to
    point and point to multipoint SVCs.  Section 7\n   discusses the case where the
    NBMA network is being used to supply\n   only point to point PVCs.\n"
  - contents:
    - "4.1.Connecting to a Logical Link.\n   Before a node can send or receive IPv6
      datagrams its underlying\n   IPv6/NBMA interface(s) must first join a Logical
      Link.\n   An IPv6/NBMA driver SHALL establish a pt-pt VC to the MARS associated\n
      \  with its Logical Link, and register as a Cluster Member [5].  The\n   node's
      IPv6/NBMA interface will then be a member of the LL, have a\n   Cluster Member
      ID (CMI) assigned, and can begin supporting IPv6 and\n   IPv6 ND operations.\n
      \  If the node is a host or router starting up it SHALL issue a single\n   group
      MARS_JOIN for the following groups:\n      - Its derived Solicited-node address(es)
      with link-local scope.\n      - The All-nodes address with link-local scope.\n
      \     - Other configured multicast groups with at least link-local\n        scope.\n
      \  If the node is a router it SHALL additionally issue:\n      - A single group
      MARS_JOIN for the All-routers address with\n        link-local scope.\n      -
      A block MARS_JOIN for the range(s) of IPv6 multicast addresses\n        (with
      greater than link-local scope) for which promiscuous\n        reception is required.\n
      \  The encapsulation mechanism for, and key field values of, MARS\n   control
      messages SHALL be defined in companion documents specific to\n   particular
      NBMA network technologies.\n"
    title: 4.1.Connecting to a Logical Link.
  - contents:
    - "4.2 Joining a Multicast Group.\n   This section describes the node's behavior
      when it gets a\n   JoinLocalGroup request from the IPv6 Layer. The details of
      how this\n   behavior is achieved are going to be implementation specific.\n
      \  If a JoinLocalGroup for a node-local address is received, the\n   IPv6/NBMA
      driver SHALL return success indication to the caller and\n   take no additional
      action. (Packets sent to node-local addresses\n   never reach the IPv6/NBMA
      driver.)\n   If a JoinLocalGroup is received for an address with greater than\n
      \  node-local scope, the IPv6/NBMA driver SHALL send an appropriate\n   single
      group MARS_JOIN request to register this address with the\n   MARS.\n"
    title: 4.2 Joining a Multicast Group.
  - contents:
    - "4.3. Leaving a Multicast Group.\n   This section describes the node's behavior
      when it gets a\n   LeaveLocalGroup request from the IPv6 Layer. The details
      of how this\n   behavior is achieved are going to be implementation specific.\n
      \  If a LeaveLocalGroup for a node-local address is received, the\n   IPv6/NBMA
      driver SHALL return success indication to the caller and\n   take no additional
      action. (Packets sent to node-local addresses\n   never reach the IPv6/NBMA
      driver.)\n   If a LeaveLocalGroup is received for an address with greater than\n
      \  node-local scope, the IPv6/NBMA driver SHALL send an appropriate\n   single
      group MARS_LEAVE request to deregister this address with the\n   MARS.\n"
    title: 4.3. Leaving a Multicast Group.
  - contents:
    - "4.4.  Sending Data.\n   Separate processing and encapsulation rules apply for
      outbound\n   unicast and multicast packets.\n"
    - contents:
      - "4.4.1. Sending Unicast Data.\n   The IP level 'next hop' for each outbound
        unicast IPv6 packet is used\n   to identify a pt-pt VC on which to forward
        the packet.\n      For NBMA networks where LLC/SNAP encapsulation is typically
        used\n      (e.g. ATM or SMDS), the IPv6 packet SHALL be encapsulated with
        the\n      following LLC/SNAP header and sent over the VC.\n         [0xAA-AA-03][0x00-00-00][0x86-DD][IPv6
        packet]\n             (LLC)       (OUI)     (PID)\n      For NBMA networks
        that do not use LLC/SNAP encapsulation, an\n      alternative rule SHALL be
        specified in the NBMA-specific companion\n      document.\n   If no pt-pt
        VC exists for the next hop address for the packet, the\n   node SHALL place
        a call to set up a VC to the next hop destination.\n   Any time the IPv6/NBMA
        driver receives a unicast packet for\n   transmission the IPv6 layer will
        already have determined the link-\n   layer (NBMA) address of the next hop.
        \ Thus, the information needed\n   to place the NBMA call to the next hop
        will be available.\n   The sending node SHOULD queue the packet that triggered
        the call\n   request, and send it when the call is established.\n   If the
        call to the next hop destination node fails the sending node\n   SHALL discard
        the packet that triggered the call setup.  Persistent\n   failure to create
        a VC to the next hop destination will be detected\n   and handled at the IPv6
        Network Layer through NUD.\n   At this time no rules are specified for mapping
        outbound packets to\n   VCs using anything more than the packet's destination
        address.\n"
      title: 4.4.1. Sending Unicast Data.
    - contents:
      - "4.4.2. Sending Multicast Data.\n   The IP level 'next hop' for each outbound
        multicast IPv6 packet is\n   used to identify a pt-pt or pt-mpt VC on which
        to forward the packet.\n      For NBMA networks where LLC/SNAP encapsulation
        is typically used\n      (e.g. ATM or SMDS), multicast packets SHALL be encapsulated
        in the\n      following manner:\n         [0xAA-AA-03][0x00-00-5E][0x00-01][pkt$cmi][0x86DD][IPv6\n
        \        packet]\n             (LLC)       (OUI)     (PID)    (mars encaps)\n
        \        The IPv6/NBMA driver's Cluster Member ID SHALL be copied into\n         the
        2 octet pkt$cmi field prior to transmission.\n      For NBMA networks that
        do not use LLC/SNAP encapsulation, an\n      alternative rule SHALL be specified
        in the NBMA-specific companion\n      document. Some mechanism for carrying
        the IPv6/NBMA driver's\n      Cluster Member ID SHALL be provided.\n   If
        the packet's destination is one of the following multicast\n   addresses,
        it SHALL be sent over the IPv6/NBMA driver's direct pt-pt\n   VC to the MARS:\n
        \     - A Solicited-node address with link-local scope.\n      - The All-nodes
        address with link-local scope.\n      - The All-routers address with link-local
        scope.\n      - A DHCP-v6 relay or server multicast address.\n   The MARS
        SHALL then redistribute the IPv6 packet as described in\n   section 3.1.1.
        \ (If the VC to the MARS has been idle timed out for\n   some reason, it MUST
        be re-established before forwarding the packet\n   to the MARS.)\n   If packet's
        destination is any other address, then the usual MARS\n   client mechanisms
        are used by the IPv6/NBMA driver to select and/or\n   establish a pt-mpt VC
        on which the packet is to be sent.\n   At this time no rules are specified
        for mapping outbound packets to\n   VCs using anything more than the packet's
        destination address.\n"
      title: 4.4.2. Sending Multicast Data.
    title: 4.4.  Sending Data.
  - contents:
    - "4.5. Receiving Data.\n   Packets received using the encapsulation shown in
      section 4.4.1 SHALL\n   be de-encapsulated and passed up to the IPv6 layer.
      \ The IPv6 layer\n   then determines how the incoming packet is to be handled.\n
      \  Packets received using the encapsulation specified in section 4.4.2\n   SHALL
      have their pkt$cmi field compared to the local IPv6/NBMA\n   driver's own CMI.
      \ If the pkt$cmi in the header matches the local CMI\n   the packet SHALL be
      silently dropped.  Otherwise, the packet SHALL be\n   de-encapsulated and passed
      to the IPv6 layer.  The IPv6 layer then\n   determines how the incoming packet
      is to be handled.\n   For NBMA networks that do not use LLC/SNAP encapsulation,
      alternative\n   rules SHALL be specified in the NBMA-specific companion document.\n
      \  The IPv6/NBMA driver SHALL NOT attempt to filter out multicast IPv6\n   packets
      arriving with encapsulation defined for unicast packets, nor\n   attempt to
      filter out unicast IPv6 packets arriving with\n   encapsulation defined for
      multicast packets.\n"
    title: 4.5. Receiving Data.
  - contents:
    - "4.6. VC Setup and release for unicast data.\n   Unicast VCs are maintained
      separately from multicast VCs.  The setup\n   and maintenance of multicast VCs
      are handled by the MARS client in\n   each IPv6/NBMA driver [5]. Only the setup
      and maintenance of pt-pt\n   VCs for unicast IPv6 traffic will be described
      here.  Only best\n   effort unicast VCs are considered.  The creation of VCs
      for other\n   classes of service is outside the scope of this document.\n   Before
      sending a packet to a new destination within the same LL a\n   node will first
      perform a Neighbor Discovery on the intra-LL target.\n   This is done to resolve
      the IPv6 destination address into a link-\n   layer address which the sender
      can then use to send unicast packets.\n   Appendix A.1.1 contains non-normative,
      descriptive text covering the\n   Neighbor Solicitation/Advertisement exchange
      and eventual\n   establishment of a new SVC.\n   A Redirect message (either
      a redirect to a node on the same LL, or a\n   shortcut redirect to a node outside
      the LL) results in the sending\n   (redirected) node creating a new pt-pt VC
      to a new receiving node.\n   the Redirect message SHALL contain the link layer
      (NBMA) address of\n   the new receiving IPv6/NBMA interface.  The redirected
      node does not\n   concern itself where the new receiving node is located on
      the NBMA\n   network.  The redirected node will set up a pt-pt VC to the new
      node\n   if one does not previously exist.  The redirected node will then use\n
      \  the new VC to send data rather than whatever VC it had previously\n   been
      using.\n   Redirects are unidirectional.  Even after the source has reacted
      to a\n   redirect, the destination will continue to send IPv6 packets back to\n
      \  the redirected node on the old path.  This happens because the\n   destination
      node has no way of determining the IPv6 address of the\n   other end of a new
      VC in the absence of Neighbor Discovery. Thus,\n   redirects will not result
      in both ends of a connection using the new\n   VC. IPv6 redirects are not intended
      to provide symmetrical\n   redirection.  If the non-redirected node eventually
      receives a\n   redirect it MAY discover the existing VC to the target node and
      use\n   that rather than creating a new VC.\n   It is desirable that VCs are
      released when no longer needed.\n      An IPv6/NBMA driver SHALL release any
      VC that has been idle for 20\n      minutes.\n   This time limit MAY be reduced
      through configuration or as specified\n   in companion documents for specific
      NBMA networks.\n   If a Neighbor or Destination cache entry is purged then any
      VCs\n   associated with the purged entry SHOULD be released.\n   If the state
      of an entry in the Neighbor cache is set to STALE, then\n   any VCs associated
      with the stale entry SHOULD be released.\n"
    title: 4.6. VC Setup and release for unicast data.
  - contents:
    - "4.7 NBMA SVC Signaling Support and MTU issues.\n   Mechanisms for signaling
      the establishment and teardown of pt-pt and\n   pt-mpt SVCs for different NBMA
      networks SHALL be specified in\n   companion documents.\n   Since any given
      IPv6/NBMA driver will not know if the remote end of a\n   VC is in the same
      LL, drivers SHALL implement NBMA-specific\n   mechanisms to negotiate acceptable
      MTUs at the VC level. These\n   mechanisms SHALL be specified in companion documents.\n
      \  However, IPv6/NBMA drivers can assume that they will always be\n   talking
      to another driver attached to the same type of NBMA network.\n   (For example,
      an IPv6/NBMA driver does not need to consider the\n   possibility of establishing
      a shortcut VC directly to an IPv6/FR\n   driver.)\n"
    title: 4.7 NBMA SVC Signaling Support and MTU issues.
  title: 4 Node Operation Concepts.
- contents:
  - '5. Interface Tokens, Link Layer Address Options, Link-Local Addresses

    '
  - contents:
    - "5.1 Interface Tokens\n   Each IPv6 interface must have an interface token from
      which to form\n   IPv6 autoconfigured addresses. This interface token must be
      unique\n   within a Logical Link to prevent the creation of duplicate addresses\n
      \  when stateless address configuration is used.\n   In cases where two nodes
      on the same LL produce the same interface\n   token then one interface MUST
      choose another host-token.  All\n   implementations MUST support manual configuration
      of interface tokens\n   to allow operators to manually change a interface token
      on a per-LL\n   basis.  Operators may choose to manually set interface tokens
      for\n   reasons other than eliminating duplicate addresses.\n   All interface
      tokens MUST be 64 bits in length and formatted as\n   described in the following
      sections.  The hosts tokens will be based\n   on the format of an EUI-64 identifier
      [10]. Refer to [19 - Appendix\n   A] for a description of creating IPv6 EUI-64
      based interface\n   identifiers.\n"
    - contents:
      - "5.1.1 Single Logical Links on a Single NBMA Interface\n   Physical NBMA interfaces
        will generally have some local identifier\n   that may be used to generate
        a unique IPv6/NBMA interface token. The\n   exact mechanism for generating
        interface tokens SHALL be specified in\n   companion documents specific to
        each NBMA network.\n"
      title: 5.1.1 Single Logical Links on a Single NBMA Interface
    - contents:
      - "5.1.2 Multiple Logical Links on a Single NBMA Interface\n   Physical NBMA
        interfaces MAY be used to provide multiple logical NBMA\n   interfaces. Since
        each logical NBMA interface MAY support an\n   independent IPv6 interface,
        two separate scenarios are possible:\n      - A single host with separate
        IPv6/NBMA interfaces onto a number\n        of independent Logical Links.\n
        \     - A set of 2 or more 'virtual hosts' (vhosts) sharing a common\n        NBMA
        driver. Each vhost is free to establish IPv6/NBMA\n        interfaces associated
        with different or common LLs. However,\n        vhosts are bound by the same
        requirement as normal hosts - no\n        two interfaces to the same LL can
        share the same interface\n        token.\n   In the first scenario, since
        each IPv6/NBMA interface is associated\n   with a different LL, each interface's
        external identity can be\n   differentiated by the LL's routing prefix.  Thus,
        the host can re-use\n   a single unique interface token across all its IPv6/NBMA
        interfaces.\n   (Internally the host will tag received packets in some locally\n
        \  specific manner to identify what IPv6/NBMA interface they arrived on.\n
        \  However, this is an issue generic to IPv6, and does not required\n   clarification
        in this document.)\n   The second scenario is more complex, but likely to
        be rarer.\n   When supporting multiple logical NBMA interfaces over a single\n
        \  physical NBMA interface, independent and unique identifiers SHALL be\n
        \  generated for each virtual NBMA interface to enable the construction\n
        \  of unique IPv6/NBMA interface tokens.  The exact mechanism for\n   generating
        interface tokens SHALL be specified in companion documents\n   specific to
        each NBMA network.\n"
      title: 5.1.2 Multiple Logical Links on a Single NBMA Interface
    title: 5.1 Interface Tokens
  - contents:
    - "5.2 Link Layer Address Options\n   Neighbor Discovery defines two option fields
      for carrying link-layer\n   specific source and target addresses.\n   Between
      IPv6/NBMA interfaces, the format for these two options is\n   adapted from the
      MARS [5] and NHRP [8] specs. It SHALL be:\n          [Type][Length][NTL][STL][..NBMA
      Number..][..NBMA\n          Subaddress..]\n          |   Fixed    ||            Link
      layer address\n          |\n   [Type] is a one octet field.\n          1 for
      Source link-layer address.\n          2 for Target link-layer address.\n   [Length]
      is a one octet field.\n   The total length of the option in multiples of 8 octets.
      Zeroed bytes\n   are added to the end of the option to ensure its length is
      a multiple\n   of 8 octets.\n   [NTL] is a one octet 'Number Type & Length'
      field.\n   [STL] is a one octet 'SubAddress Type & Length' field.\n   [NBMA
      Number] is a variable length field. It is always present. This\n   contains
      the primary NBMA address.\n   [NBMA Subaddress] is a variable length field.
      It may or may not be\n   present. This contains any NBMA subaddress that may
      be required.\n   If the [NBMA Subaddress] is not present, the option ends after
      the\n   [NBMA Number] ( and any additional padding for 8 byte alignment).\n
      \  The contents and interpretation of the [NTL], [STL], [NBMA Number],\n   and
      [NBMA Subaddress] fields are specific to each NBMA network, and\n   SHALL be
      specified in companion documents.\n"
    title: 5.2 Link Layer Address Options
  - contents:
    - "5.3 Link-Local Addresses\n   The IPv6 link-local address is formed by appending
      the interface\n   token, as defined above, to the prefix FE80::/64.\n          10
      bits            54 bits                  64 bits\n      +----------+-----------------------+----------------------------+\n
      \     |1111111010|         (zeros)       |      Interface Token       |\n      +----------+-----------------------+----------------------------+\n"
    title: 5.3 Link-Local Addresses
  title: 5. Interface Tokens, Link Layer Address Options, Link-Local Addresses
- contents:
  - "6. Conclusion and Open Issues\n   This document describes a general architecture
    for IPv6 over NBMA\n   networks. It forms the basis for subsidiary companion documents
    that\n   provide details for various specific NBMA technologies (such as ATM\n
    \  or Frame Relay). The IPv6 over NBMA architecture allows conventional\n   host-side
    operation of the IPv6 Neighbor Discovery protocol, while\n   also supporting the
    establishment of 'shortcut' NBMA forwarding paths\n   (when dynamically signaled
    NBMA links are available).\n   The IPv6 \"Link\" is generalized to \"Logical Link\"
    in an analagous\n   manner to the IPv4 \"Logical IP Subnet\".  The MARS protocol
    is\n   augmented and used to provide relatively efficient intra Logical Link\n
    \  multicasting of IPv6 packets, and distribution of Discovery messages.\n   Shortcut
    NBMA level paths are supported either through router based\n   flow detection,
    or host originated explicit requests.  Neighbor\n   Discovery is used without
    modification for all intra-LL control\n   (including the initiation of NBMA shortcut
    discovery).  Router to\n   router NHRP is used to obtain the IPv6/NBMA address
    mappings for\n   shortcut targets outside a source's Logical Link.\n"
  title: 6. Conclusion and Open Issues
- contents:
  - "7. Security Considerations\n   This architecture introduces no new protocols,
    but depends on\n   existing protocols (NHRP, IPv6, ND, MARS) and is therefore
    subject to\n   all the security threats inherent in these protocols. This\n   architecture
    should not be used in a domain where any of the base\n   protocols are considered
    unacceptably insecure. However, this\n   protocol itself does not introduce additional
    security threats.\n   While this proposal does not introduce any new security
    mechanisms\n   all current IPv6 security mechanisms will work without modification\n
    \  for NBMA.  This includes both authentication and encryption for both\n   Neighbor
    Discovery protocols as well as the exchange of IPv6 data\n   packets. The MARS
    protocol is modified in a manner that does not\n   affect or augment the security
    offered by RFC 2022.\n"
  - "Acknowledgments\n   Eric Nordmark confirmed the usefulness of ND Redirect messages
    in\n   private email during the March 1996 IETF. The discussions with\n   various
    ION WG members during the June and December 1996 IETF helped\n   solidify the
    architecture described here. Grenville Armitage's\n   original work on IPv6/NBMA
    occurred while employed at Bellcore.\n   Elements of section 5 were borrowed from
    Matt Crawford's memo on IPv6\n   over Ethernet.\n"
  - "Authors' Addresses\n   Grenville Armitage\n   Bell Laboratories, Lucent Technologies\n
    \  101 Crawfords Corner Road\n   Holmdel, NJ 07733\n   USA\n   EMail: gja@lucent.com\n
    \  Peter Schulter\n   Bright Tiger Technologies\n   125 Nagog Park\n   Acton,
    MA 01720\n   EMail: paschulter@acm.org\n   Markus Jork\n   European Applied Research
    Center\n   Digital Equipment GmbH\n   CEC Karlsruhe\n   Vincenz-Priessnitz-Str.
    1\n   D-76131 Karlsruhe\n   Germany\n   EMail: jork@kar.dec.com\n   Geraldine
    Harter\n   Digital UNIX Networking\n   Compaq Computer Corporation\n   110 Spit
    Brook Road\n   Nashua, NH 03062\n   EMail: harter@zk3.dec.com\n"
  - "References\n   [1] Deering, S. and R. Hinden, \"Internet Protocol, Version 6
    (IPv6)\n       Specification\", RFC 2460, December 1998.\n   [2] ATM Forum, \"ATM
    User Network Interface (UNI) Specification\n       Version 3.1\", ISBN 0-13-393828-X,
    Prentice Hall, Englewood\n       Cliffs, NJ, June 1995.\n   [3] Crawford, M.,
    \"A Method for the Transmission of IPv6 Packets over\n       Ethernet Networks\",
    RFC 1972, August 1996.\n   [4] Heinanen, J., \"Multiprotocol Encapsulation over
    ATM Adaptation\n       Layer 5\", RFC 1483, July 1993.\n   [5] Armitage, G., \"Support
    for Multicast over UNI 3.1 based ATM\n       Networks\", RFC 2022, November 1996.\n
    \  [6] Hinden, R. and S. Deering, \"IP Version 6 Addressing\n       Architecture\",
    RFC 2373, July 1998.\n   [7] Narten, T., Nordmark, E. and W. Simpson, \"Neighbor
    Discovery for\n       IP Version 6 (IPv6)\", RFC 2461, December 1998.\n   [8]
    Luciani, J., Katz, D., Piscitello, D. Cole B and N. Doraswamy,\n       \"NBMA
    Next Hop Resolution Protocol (NHRP)\", RFC 2332, April 1998.\n   [9] Thomson,
    S. and T. Narten, \"IPv6 Stateless Address\n       Autoconfiguration\", RFC 2462,
    December 1998.\n   [10] \"64-Bit Global Identifier Format Tutorial\",\n        http://standards.ieee.org/db/oui/tutorials/EUI64.html.\n
    \  [11] Katsube, Y., Nagami, K. and H. Esaki, \"Toshiba's Router\n        Architecture
    Extensions for ATM : Overview\", RFC 2098, February\n        1997.\n   [12] P.
    Newman, T. Lyon, G. Minshall, \"Flow Labeled IP: ATM under\n        IP\", Proceedings
    of INFOCOM'96, San Francisco, March 1996,\n        pp.1251-1260\n   [13] Piscitello,
    D. and J. Lawrence, \"The Transmission of IP\n        Datagrams over the SMDS
    Service\", RFC 1209, March 1991.\n   [14] Plummer, D., \"An Ethernet Address Resolution
    Protocol - or -\n        Converting Network Protocol Addresses to 48.bit Ethernet
    Address\n        for Transmission on Ethernet Hardware\", STD 37, RFC 826,\n        November
    1982.\n   [15] McCann, J., Deering, S. and J. Mogul, \"Path MTU Discovery for
    IP\n        version 6\", RFC 1981, August 1996.\n   [16] Bradner, S., \"Key words
    for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March
    1997.\n   [17] Armitage, G., Schulter, P. and M. Jork, \"IPv6 over ATM\n        Networks\",
    RFC 2492, January 1999.\n   [18] C. Perkins, J. Bound, \"Dynamic Host Configuration
    Protocol for\n        IPv6 (DHCPv6)\", Work in Progress.\n   [19] Hinden, R. and
    S. Deering, \"IP Version 6 Addressing\n        Architecture\", RFC 2373, July
    1998.\n"
  title: 7. Security Considerations
- contents:
  - "Appendix A.  IPv6 Protocol Operation Description\n   The IPv6 over NBMA model
    described in this document maintains the\n   complete semantics of the IPv6 protocols.
    No changes need to be made\n   to the IPv6 Network Layer. Since the concept of
    the security\n   association is not being changed for NBMA, this framework maintains\n
    \  complete IPv6 security semantics and features. This allows IPv6 nodes\n   to
    choose their responses to solicitations based on security\n   information as is
    done with other datalinks, thereby maintaining the\n   semantics of Neighbor Discovery
    since it is always the solicited node\n   that chooses what (and even if) to reply
    to the solicitation. Thus,\n   NBMA will be transparent to the network layer except
    in cases where\n   extra services (such as QoS VCs) are offered.\n   The remainder
    of this Appendix describes how the core IPv6 protocols\n   will operate within
    the model described here.\n"
  - contents:
    - "A.1 Neighbor Discovery Operations\n   Before performing any sort of Neighbor
      discover operation, each node\n   must first join the all-node multicast group,
      and it's solicited node\n   multicast address (the use of this address in relation
      to DAD is\n   described in A.1.4).  The IPv6 network layer will join these\n
      \  multicast groups as described in 4.2.\n"
    - contents:
      - "A.1.1 Performing Address Resolution\n   An IPv6 host performs address resolution
        by sending a Neighbor\n   Solicitation to the solicited-node multicast address
        of the target\n   host, as described in [7]. The Neighbor Solicitation message
        will\n   contain a Source Link-Layer Address Option set to the soliciting\n
        \  node's NBMA address on the LL.\n   When the local node's IPv6/NBMA driver
        is passed the Neighbor\n   Solicitation message from the IPv6 network layer,
        it follows the\n   steps described in section 4.4.2 Sending Multicast Data.\n
        \  One or more nodes will receive the Neighbor Solicitation message.\n   The
        nodes will process the data as described in section 4.5 and pass\n   the de-encapsulated
        packets to the IPv6 network layer.\n   If the receiving node is the target
        of the Neighbor Solicitation it\n   will update its Neighbor cache with the
        soliciting node's NBMA\n   address, contained in the Neighbor Solicitation
        message's Source\n   Link-Layer Address Option as described in [7].\n   The
        solicited IPv6 host will respond to the Neighbor Solicitation\n   with a Neighbor
        Advertisement message sent to the IPv6 unicast\n   address of the soliciting
        node.  The Neighbor Advertisement message\n   will contain a Target Link-Layer
        Address Option set to the solicited\n   node's NBMA address on the LL.\n   The
        solicited node's IPv6/NBMA driver will be passed the Neighbor\n   Advertisement
        and the soliciting node's link-layer address from the\n   IPv6 network layer.
        \ It will then follow the steps described in\n   section section 4.4.1 to
        send the NA message to the soliciting node.\n   This will create a pt-pt VC
        between the solicited node and soliciting\n   node if one did not already
        exist.\n   The soliciting node will then receive the Neighbor Advertisement\n
        \  message over the new PtP VC, de-encapsulate the message, and pass it\n
        \  to the IPv6 Network layer for processing as described in section 4.5.\n
        \  The soliciting node will then make the appropriate entries in it's\n   Neighbor
        cache, including caching the NBMA link-layer address of the\n   solicited
        node as described in [7].\n   At this point each system has a complete Neighbor
        cache entry for the\n   other system. They can exchange data over the pt-pt
        VC newly created\n   by the solicited node when it returned the Neighbor Advertisement,
        or\n   create a new VC.\n   An IPv6 host can also send an Unsolicited Neighbor
        Advertisemnent to\n   the all-nodes multicast address. When the local node
        IPv6/NBMA driver\n   is passed the Neighbor Advertisement from the IPv6 network
        layer, it\n   follows the steps described in section 4.4.2 to send the NA
        message\n   to the all-nodes multicast address.  Each node will process the\n
        \  incoming packet as described in section 4.5 and then pass the packet\n
        \  to the IPv6 network layer where it will be processed as described in\n
        \  [7].\n"
      title: A.1.1 Performing Address Resolution
    - contents:
      - "A.1.2 Performing Router Discovery\n   Router Discovery is described in [7].
        To support Router Discovery an\n   IPv6 router will join the IPv6 all-routers
        multicast group address.\n   When the IPv6/NBMA driver gets the JoinLocalGroup
        request from the\n   IPv6 Network Layer, it follows the process described
        in section 4.2.\n   IPv6 routers periodically send unsolicited Router Advertisements\n
        \  announcing their availability on the LL.  When an IPv6 router sends\n   an
        unsolicited Router Advertisement, it sends a data packet addressed\n   to
        the IPv6 all-nodes multicast address. When the local node\n   IPv6/NBMA driver
        gets the Router Advertisement message from the IPv6\n   network layer, it
        transmits the message by following steps described\n   in section 4.4.2.  The
        MARS will transmit the packet on the LL's\n   ClusterControlVC, which sends
        the packets to all nodes on the LL.\n   Each node on the LL will then process
        the incoming packet as\n   described in section 4.5 and pass the received
        packet to the IPv6\n   Network layer for processing as appropriate.\n   To
        perform Router Discovery, an IPv6 host sends a Router Solicitation\n   message
        to the all-routers multicast address. When the local node\n   IPv6/NBMA driver
        gets the request from the IPv6 Network Layer to send\n   the packet, it follows
        the steps described in section 4.4.2.  The RS\n   message will be sent to
        either those nodes which have joined the\n   all-routers multicast group or
        to all nodes.  The nodes which receive\n   the RA message will process the
        message as described in section 4.5\n   and pass the RA message up to the
        IPv6 layer for processing.  Only\n   those nodes which are routers will process
        the message and respond to\n   it.\n   An IPv6 router responds to a Router
        Solicitation by sending a Router\n   Advertisement addressed to the IPv6 all-nodes
        multicast address if\n   the source address of the Router Solicitation was
        the unspecified\n   address.  If the source address in the Router Solicitation
        is not the\n   unspecified address, the the router will unicast the Router\n
        \  Advertisement to the soliciting node.  If the router sends the Router\n
        \  Advertisement to the all-nodes multicast address then it follows the\n
        \  steps described above for unsolicited Router Advertisements.\n   If the
        Router Advertisement is to be unicast to the soliciting node,\n   the IPv6
        network layer will give the node's IPv6/NBMA driver the\n   Router Advertisement
        and link-layer address of the soliciting node\n   (obtained through Address
        Resolution if necessary) which will send\n   the packet according to the steps
        described in section 4.4.1 This\n   will result in a new pt-pt VC being created
        between the router and\n   the soliciting node if one did not already exist.\n
        \  The soliciting node will receive and process the Router Advertisement\n
        \  as described in section 4.5 and will pass the RA message to the IPv6\n
        \  network layer.  The IPv6 network layer may, depending on the state of\n
        \  the Neighbor cache entry, update the Neighbor cache with the router's\n
        \  NBMA address, contained in the Router Advertisement message's Source\n
        \  Link-Layer Address Option.\n   If a pt-pt VC is set up during Router Discovery,
        subsequent IPv6 best\n   effort unicast data between the soliciting node and
        the router will\n   be transmitted over the new PtP VC.\n"
      title: A.1.2 Performing Router Discovery
    - contents:
      - "A.1.3 Performing Neighbor Unreachability Detection (NUD)\n   Neighbor Unreachability
        Detection (NUD) is the process by which an\n   IPv6 host determines that a
        neighbor is no longer reachable, as\n   described in [7]. Each Neighbor cache
        entry contains information used\n   by the NUD algorithm to detect reachability
        failures.  Confirmation\n   of a neighbor's reachability comes either from
        upper-layer protocol\n   indications that data recently sent to the neighbor
        was received, or\n   from the receipt of a Neighbor Advertisement message
        in response to a\n   Neighbor Solicitation probe.\n   Connectivity failures
        at the node's IPv6/NBMA driver, such as\n   released VCs (see section 4.6)
        and the inability to create a VC to a\n   neighbor (see section 4.4.1), are
        detected and handled at the IPv6\n   network layer, through Neighbor Unreachability
        Detection.  The node's\n   IPv6/NBMA driver does not attempt to detect or
        recover from these\n   conditions.\n   A persistent failure to create a VC
        from the IPv6 host to one of its\n   IPv6 neighbors will be detected and handled
        through NUD. On each\n   attempt to send data from the IPv6 host to its neighbor,
        the node's\n   IPv6/NBMA driver will attempt to set up a VC to the neighbor,
        and\n   failing to do so, will drop the packet. IPv6 reachability\n   confirmation
        timers will eventually expire, and the neighbor's\n   Neighbor cache entry
        will enter the PROBE state. The PROBE state will\n   cause the IPv6 host to
        unicast Neighbor Solicitations to the\n   neighbor, which will be dropped
        by the local node's IPv6/NBMA driver\n   after again failing to setup the
        VC. The IPv6 host will therefore\n   never receive the solicited Neighbor
        Advertisements needed for\n   reachability confirmation, causing the neighbor's
        entry to be deleted\n   from the Neighbor cache. The next time the IPv6 host
        tries to send\n   data to that neighbor, address resolution will be performed.\n
        \  Depending on the reason for the previous failure, connectivity to the\n
        \  neighbor could be re-established (for example, if the previous VC\n   setup
        failure was caused by an obsolete link-layer address in the\n   Neighbor cache).\n
        \  In the event that a VC from an IPv6 neighbor is released, the next\n   time
        a packet is sent from the IPv6 host to the neighbor, the node's\n   IPv6/NBMA
        driver will recognize that it no longer has a VC to that\n   neighbor and
        attempt to setup a new VC to the neighbor.  If, on the\n   first and on subsequent
        transmissions, the node is unable to create a\n   VC to the neighbor, NUD
        will detect and handle the failure as\n   described earlier (handling the
        persistent failure to create a VC\n   from the IPv6 host to one of its IPv6
        neighbors). Depending on the\n   reason for the previous failure, connectivity
        to the neighbor may or\n   may not be re-established.\n"
      title: A.1.3 Performing Neighbor Unreachability Detection (NUD)
    - contents:
      - "A.1.4 Performing Duplicate Address Detection (DAD)\n   An IPv6 host performs
        Duplicate Address Detection (DAD) to determine\n   that the address it wishes
        to use on the LL (i.e. a tentative\n   address) is not already in use, as
        described in [9] and [7].\n   Duplicate Address Detection is performed on
        all addresses the host\n   wishes to use, regardless of the configuration
        mechanism used to\n   obtain the address.\n   Prior to performing Duplicate
        Address Detection, a host will join the\n   all-nodes multicast address and
        the solicited-node multicast address\n   corresponding to the host's tentative
        address (see 4.2.  Joining a\n   Multicast Group). The IPv6 host initiates
        Duplicate Address Detection\n   by sending a Neighbor Solicitation to solicited-node
        multicast\n   address corresponding to the host's tentative address, with
        the\n   tentative address as the target.  When the local node's IPv6/NBMA\n
        \  driver gets the Neighbor Solicitation message from the IPv6 network\n   layer,
        it follows the steps outlined in section 4.4.2.  The NS\n   message will be
        sent to those nodes which joined the target\n   solicited-node multicast group
        or to all nodes.  The DAD NS message\n   will be received by one or more nodes
        on the LL and processed by each\n   as described in section 4.5.  Note that
        the MARS client of the\n   sending node will filter out the message so that
        the sending node's\n   IPv6 network layer will not see the message.  The IPv6
        network layer\n   of any node which is not a member of the target solicited-node\n
        \  multicast group will discard the Neighbor Solicitation message.\n   If
        no other hosts have joined the solicited-node multicast address\n   corresponding
        to the tentative address, then the host will not\n   receive a Neighbor Advertisement
        containing its tentative address as\n   the target.  The host will perform
        the retransmission logic described\n   in [9], terminate Duplicate Address
        Detection, and assign the\n   tentative address to the NBMA interface.\n   Otherwise,
        other hosts on the LL that have joined the solicited-node\n   multicast address
        corresponding to the tentative address will process\n   the Neighbor Solicitation.
        The processing will depend on whether or\n   not receiving IPv6 host considers
        the target address to be tentative.\n   If the receiving IPv6 host's address
        is not tentative, the host will\n   respond with a Neighbor Advertisement
        containing the target address.\n   Because the source of the Neighbor Solicitation
        is the unspecified\n   address, the host sends the Neighbor Advertisement
        to the all-nodes\n   multicast address following the steps outlined in section
        4.4.2.  The\n   DAD NA message will be received and processed by the MARS
        clients on\n   all nodes in the LL as described in section 4.5.  Note that
        the\n   sending node will filter the incoming message since the CMI in the\n
        \  message header will match that of the receiving node.  All other\n   nodes
        will de-encapsulate the message and pass it to the IPv6 network\n   layer.
        \ The host performing DAD will detect that its tentative\n   address is the
        target of the Neighbor Advertisement, and determine\n   that the tentative
        address is not unique and cannot be assigned to\n   its NBMA interface.\n
        \  If the receiving IPv6 host's address is tentative, then both hosts\n   are
        performing DAD using the same tentative address. The receiving\n   host will
        determine that the tentative address is not unique and\n   cannot be assigned
        to its NBMA interface.\n"
      title: A.1.4 Performing Duplicate Address Detection (DAD)
    - contents:
      - "A.1.5 Processing Redirects\n   An IPv6 router uses a Redirect Message to
        inform an IPv6 host of a\n   better first-hop for reaching a particular destination,
        as described\n   in [7].  This can be used to direct hosts to a better first
        hop\n   router, another host on the same LL, or to a transient neighbor on\n
        \  another LL.  The IPv6 router will unicast the Redirect to the IPv6\n   source
        address that triggered the Redirect. The router's IPv6/NBMA\n   driver will
        transmit the Redirect message using the procedure\n   described in section
        4.4.1.  This will create a VC between the router\n   and the redirected host
        if one did not previously exist.\n   The IPv6/NBMA driver of the IPv6 host
        that triggered the Redirect\n   will receive the encapsulated Redirect over
        one of it's pt-pt VCs.\n   It will the de-encapsulate the packet, and pass
        the Redirect message\n   to the IPv6 Network Layer, as described section 4.5.\n
        \  Subsequent data sent from the IPv6 host to the destination will be\n   sent
        to the next-hop address specified in the Redirect Message.  For\n   NBMA networks,
        the Redirect Message should contain the link-layer\n   address option as described
        in [7] and section 5.2, thus the\n   redirected node will not have to perform
        a Neighbor Solicitation to\n   learn the link-layer address of the node to
        which it has been\n   redirected.  Thus, the redirect can be to any node on
        the NBMA\n   network, regardless of the LL membership of the new target node.\n
        \  This allows NBMA hosts to be redirected off their LL to achieve\n   shortcut
        by using standard IPv6 protocols.\n   Once redirected, the IPv6 network layer
        will give the node's\n   IPv6/NBMA driver the IPv6 packet and the link-layer
        address of the\n   next-hop node when it sends data to the redirected destination.
        The\n   node's IPv6/NBMA driver will determine if a VC to the next-hop\n   destination
        exists.  If a pt-pt VC does not exist, then the IPv6/NBMA\n   driver will
        queue the data packet and initiate a setup of a VC to the\n   destination.
        \ When the VC is created, or if one already exists, then\n   the node will
        encapsulate the outgoing data packet and send it on the\n   VC.\n   Note that
        Redirects are unidirectional.  The redirected host will\n   create a VC to
        the next-hop destination as specified in the Redirect\n   message, but the
        next-hop will not be redirected to the source host.\n   Because no Neighbor
        Discovery takes place, the next-hop destination\n   has no way of determining
        the identity of the caller when it receives\n   the new VC.  Also, since ND
        does not take place on redirects, the\n   next-hop receives no event that
        would cause it to update it's\n   neighbor or destination caches.  However,
        it will continue to\n   transmit data back to the redirected host on the former
        path to the\n   redirected host.  The next-hop node should be able to use
        the new VC\n   from the redirected destination if it too receives a redirect\n
        \  redirecting it to the redirected node.  This behavior is consistent\n   with
        [7].\n"
      title: A.1.5 Processing Redirects
    title: A.1 Neighbor Discovery Operations
  - contents:
    - "A.2 Address Configuration\n   IPv6 addresses are auto-configured using the
      stateless or stateful\n   address auto-configuration mechanisms, as described
      in [9] and [18].\n   The IPv6 auto-configuration process involves creating and
      verifying\n   the uniqueness of a link-local address on an LL, determining whether\n
      \  to use stateless and/or stateful configurationmechanisms to obtain\n   addresses,
      and determining if other (non- address) information is to\n   be autoconfigured.
      IPv6 addresses can also be manually configured, if\n   for example, auto-configuration
      fails because the autoconfigured\n   link-local address is not unique.  An LL
      administrator specifies the\n   type of autoconfiguration to use; the hosts
      on an LL receive this\n   autoconfiguration information through Router Advertisement
      messages.\n   The following sections describe how stateless, stateful and manual\n
      \  address configuration will work in an IPv6/NBMA environment.\n"
    - contents:
      - "A.2.1 Stateless Address Configuration\n   IPv6 stateless address configuration
        is the process by which an IPv6\n   host autoconfigures its interfaces, as
        described in [IPV6-ADDRCONF].\n   When an IPv6 host first starts up, it generates
        a link-local address\n   for the interface attached to the Logical Link.  It
        then verifies the\n   uniqueness of the link-local address using Duplicate
        Address\n   Detection (DAD).  If the IPv6 host detects that the link-local\n
        \  address is not unique, the autoconfiguration process terminates.  The\n
        \  IPv6 host must then be manually configured.\n   After the IPv6 host determines
        that the link-local address is unique\n   and has assigned it to the interface
        on the Logical Link, the IPv6\n   host will perform Router Discovery to obtain
        auto-configuration\n   information.  The IPv6 host will send out a Router
        Solicitation and\n   will receive a Router Advertisement, or it will wait
        for an\n   unsolicited Router Advertisement.  The IPv6 host will process the
        M\n   and O bits of the Router Advertisement, as described in [9] and as a\n
        \  result may invoke stateful address auto- configuration.\n   If there are
        no routers on the Logical Link, the IPv6 host will be\n   able to communicate
        with other IPv6 hosts on the Logical Link using\n   link-local addresses.
        The IPv6 host will obtain a neighbor's link-\n   layer address using Address
        Resolution. The IPv6 host will also\n   attempt to invoke stateful auto-configuration,
        unless it has been\n   explicitly configured not to do so.\n"
      title: A.2.1 Stateless Address Configuration
    - contents:
      - "A.2.2 Stateful  Address Configuration (DHCP)\n   IPv6 hosts use the Dynamic
        Host Configuration Protocol (DHCPv6) to\n   perform stateful address auto-configuration,
        as described in [18].\n   A DHCPv6 server or relay agent is present on a Logical
        Link that has\n   been configured with manual or stateful auto-configuration.
        The\n   DHCPv6 server or relay agent will join the IPv6 DHCPv6 Server/Relay-\n
        \  Agent multicast group on the Logical Link. When the node's IPv6/NBMA\n
        \  driver gets the JoinLocalGroup request from the IPv6 network layer,\n   it
        follows the process described in section 4.2.\n   An IPv6 host will invoke
        stateful auto-configuration if M and O bits\n   of Router Advertisements indicate
        it should do so, and may invoke\n   stateful auto-configuration if it detects
        that no routers are present\n   on the Logical Link. An IPv6 host that is
        obtaining configuration\n   information through the stateful mechanism will
        hereafter be referred\n   to as a DHCPv6 client.\n   A DHCPv6 client will
        send a DHCPv6 Solicit message to the DHCPv6\n   Server/Relay-Agent multicast
        address to locate a DHCPv6 Agent. When\n   the soliciting node's IPv6/NBMA
        driver gets the request from the IPv6\n   Network Layer to send the packet,
        it follows the steps described in\n   section 4.4.2.  This will result in
        one or more nodes on the LL\n   receiving the message.  Each node that receives
        the solicitation\n   packet will process it as described in section section
        4.5. Only the\n   IPv6 network layer of the DHCPv6 server/relay-agent will
        accept the\n   packet and process it.\n   A DHCPv6 Server or Relay Agent on
        the Logical Link will unicast a\n   DHCPv6 Advertisement to the DHCPv6 client.
        The IPv6 network layer\n   will give the node's IPv6/NBMA driver the packet
        and link-layer\n   address of the DHCPv6 client (obtained through Neighbor
        Discovery if\n   necessary).  The node IPv6/NBMA driver will then transmit
        the packet\n   as described in section 4.4.1.  This will result in a new pt-pt
        VC\n   being created between the server and the client if one did not\n   previously
        exist.\n   The DHCP client's IPv6/NBMA driver will receive the encapsulated\n
        \  packet from the DHCP Server or Relay Agent, as described in section\n   4.5.
        The node will de-encapsulate the multicast packet and then pass\n   it up
        to the IPv6 Network Layer for processing. The IPv6 network\n   layer will
        deliver the DHCPv6 Advertise message to the DHCPv6 client.\n   Other DHCPv6
        messages (Request, Reply, Release and Reconfigure) are\n   unicast between
        the DHCPv6 client and the DHCPv6 Server.  Depending\n   on the reachability
        of the DHCPv6 client's address, messages\n   exchanged between a DHCPv6 client
        and a DHCPv6 Server on another LL\n   are sent either via a router or DHCPv6
        Relay-Agent.  Prior to sending\n   the DHCPv6 message, the IPv6 network layer
        will perform Neighbor\n   Discovery (if necessary) to obtain the link-layer
        address\n   corresponding to the packet's next-hop. A pt-pt VC will be set
        up\n   between the sender and the next hop, and the encapsulated packet\n
        \  transmitted over it, as described in 4.4. Sending Data.\n"
      title: A.2.2 Stateful  Address Configuration (DHCP)
    - contents:
      - "A.2.3 Manual Address Configuration\n   An IPv6 host will be manually configured
        if it discovers through DAD\n   that its link-local address is not unique.
        Once the IPv6 host is\n   configured with a unique interface token, the auto-configuration\n
        \  mechanisms can then be invoked.\n"
      title: A.2.3 Manual Address Configuration
    title: A.2 Address Configuration
  - contents:
    - "A.3 Internet Group Management Protocol (IGMP)\n   IPv6 multicast routers will
      use the IGMPv6 protocol to periodically\n   determine group memberships of local
      hosts.  In the framework\n   described here, the IGMPv6 protocols can be used
      without any special\n   modifications for NBMA.  While these protocols might
      not be the most\n   efficient in this environment, they will still work as described\n
      \  below.  However, IPv6 multicast routers connected to an NBMA LL could\n   optionally
      optimize the IGMP functions by sending\n   MARS_GROUPLIST_REQUEST messages to
      the MARS serving the LL and\n   determining group memberships by the MARS_GROUPLIST_REPLY
      messages.\n   Querying the MARS for multicast group membership is an optional\n
      \  enchancement and is not required for routers to determine IPv6\n   multicast
      group membership on a LL.\n   There are three ICMPv6 message types that carry
      multicast group\n   membership information: the Group Membership Query, Group
      Membership\n   Report and Group Membership Reduction messages.  IGMPv6 will
      continue\n   to work unmodified over the IPv6/NBMA architecture described in
      this\n   document.\n   An IPv6 multicast router receives all IPv6 multicast
      packets on the\n   LL by joining all multicast groups in promiscuous mode [5].
      \ The MARS\n   server will then cause the multicast router to be added to all\n
      \  existing and future multicast VCs.  The IPv6 multicast router will\n   thereafter
      be the recipient of all IPv6 multicast packets sent within\n   the Logical Link.\n
      \  An IPv6 multicast router discovers which multicast groups have\n   members
      in the Logical Link by periodically sending Group Membership\n   Query messages
      to the IPv6 all-nodes multicast address.  When the\n   local node's IPv6/NBMA
      driver gets the request from the IPv6 network\n   layer to send the Group Membership
      Query packet, it follows the steps\n   described in 4.4.2. The node determines
      that the destination address\n   of the packet is the all-nodes multicast address
      and passes the\n   packet to the node's MARS client where the packet is encapsulated
      and\n   directly transmitted to the MARS. The MARS then relays the packet to\n
      \  all nodes in the LL. Each node's IPv6/NBMA drivers will receive the\n   packet,
      de-encapsulate it, and passed it up to the IPv6 Network\n   layer.  If the originating
      node receives the encapsulated packet, the\n   packet will be filtered out by
      the MARS client since the Cluster\n   Member ID of the receiving node will match
      the CMI in the packet's\n   MARS encapsulation header.\n   IPv6 hosts in the
      Logical Link will respond to a Group Membership\n   Query with a Group Membership
      Report for each IPv6 multicast group\n   joined by the host.  IPv6 hosts can
      also transmit a Group Membership\n   Report when the host joins a new IPv6 multicast
      group.  The Group\n   Membership Report is sent to the multicast group whose
      address is\n   being reported. When the local node IPv6/NBMA driver gets the
      request\n   from the IPv6 network layer to send the packet, it follows the steps\n
      \  described in 4.4.2.  The node determines that the packet is being\n   sent
      to a multicast address so forwards it to the node's MARS client\n   for sending
      on the appropriate VC.\n   The Group Membership Report packets will arrive at
      every node which\n   is a member of the group being reported through one of
      the VC\n   attached to each node's MARS client.  The MARS client will de-\n
      \  encapsulate the incoming packet and the packet will be passed to the\n   IPv6
      network layer for processing.  The MARS client of the sending\n   node will
      filter out the packet when it receives it.\n   An IPv6 host sends a Group Membership
      Reduction message when the host\n   leaves an IPv6 multicast group.  The Group
      Membership Reduction is\n   sent to the multicast group the IPv6 host is leaving.
      \ The\n   transmission and receipt of Group Membership Reduction messages are\n
      \  handled in the same manner as Group Membership Reports.\n"
    title: A.3 Internet Group Management Protocol (IGMP)
  title: Appendix A.  IPv6 Protocol Operation Description
- contents:
  - 'Appendix B. Alternative models of MARS support for Intra-LL ND

    '
  - contents:
    - "B.1 Simplistic approach - Use MARS 'as is'.\n   The IPv6/NBMA driver utilizes
      the standard MARS protocol to establish\n   a VC forwarding path out of the
      interface on which it can transmit\n   all multicast IPv6 packets, including
      ICMPv6 packets. The IPv6\n   packets are then transmitted, and received by the
      intended\n   destination set, using separate pt-mpt VCs per destination group.\n
      \  In this approach all the protocol elements in [5] are used 'as is'.\n   However,
      SVC resource consumption must be taken into consideration.\n   Unfortunately,
      ND assumes that link level multicast resources are\n   best conserved by generating
      a sparsely distributed set of Solicited\n   Node multicast addresses (to which
      discovery queries are initially\n   sent).  The original goal was to minimize
      the number of innocent\n   nodes that simultaneously received discovery messages
      really intended\n   for someone else.\n   However, in connection oriented NBMA
      environments it becomes equally\n   (or more) important to minimize the number
      of independent VCs that a\n   given NBMA interface is required to originate
      or terminate. If we\n   treat the MARS service as a 'black box' the sparse Solicited
      Node\n   address space can lead to a large number of short-use, but longer\n
      \  lived, pt-mpt VCs (generated whenever the node is transmitting\n   Neighbor
      Solicitations). Even more annoying, these VCs are only\n   useful for additional
      packets being sent to their associated\n   Solicited Node multicast address.
      \ A new pt-pt VC is required to\n   actually carry the unicast IPv6 traffic
      that prompted the Neighbor\n   Solicitation.\n   The axis of inefficiency brought
      about by the sparse Solicited Nodes\n   address space is orthogonal to the VC
      mesh vs Multicast Server\n   tradeoff. Typically a multicast server aggregates
      traffic flow to a\n   common multicast group onto a single VC. To reduce the
      VC consumption\n   for ND, we need to aggregate across the Solicited Node address
      space\n   - performing aggregation on the basis of a packet's function rather\n
      \  than its explicit IPv6 destination.  The trade-off here is that the\n   aggregation
      removes the original value of scattering nodes sparsely\n   across the Solicited
      Nodes space. This is a price of the mismatch\n   between ND and connection oriented
      networks.\n"
    title: B.1 Simplistic approach - Use MARS 'as is'.
  - contents:
    - "B.2 MARS as a Link (Multicast) Server.\n   One possible aggregation mechanism
      is for every node's IPv6/NBMA\n   driver to trap multicast ICMPv6 packets carrying
      multicast ND or RD\n   messages, and logically remap their destinations to the
      All Nodes\n   group (link local scope). By ensuring that the All Nodes group
      is\n   supported by an MCS, the resultant VC load within the LL will be\n   significantly
      reduced.\n   A further optimization is for every node's IPv6/NBMA driver to
      trap\n   multicast ICMPv6 packets carrying multicast ND or RD messages, and\n
      \  send them to the MARS itself for retransmission on ClusterControlVC\n   (involving
      a trivial extension to the MARS itself.) This approach\n   recognizes that in
      any LL where IPv6 multicasting is supported:\n      - Nodes already have a pt-pt
      VC to their MARS.\n      - The MARS has a pt-mpt VC (ClusterControlVC) out to
      all Cluster\n        members (LL members registered for multicast support).\n
      \  Because the VCs between a MARS and its MARS clients carry LLC/SNAP\n   encapsulated
      packets, ICMP packets can be multiplexed along with\n   normal MARS control
      messages. In essence the MARS behaves as a\n   multicast server for non-MARS
      packets that it receives from around\n   the LL.\n   As there is no requirement
      that a MARS client accepts only MARS\n   control messages on ClusterControlVC,
      ICMP packets received in this\n   fashion may be passed to every node's IP layer
      without further\n   comment.  Within the IP layer, filtering will occur based
      on the\n   packet's actual destination IP address, and only the targeted node\n
      \  will end up responding.\n   Regrettably this approach does result in the
      entire Cluster's\n   membership having to receive a variety of ICMPv6 messages
      that they\n   will always throw away.\n"
    title: B.2 MARS as a Link (Multicast) Server.
  title: Appendix B. Alternative models of MARS support for Intra-LL ND
- contents:
  - "Appendix C. Flow detection\n   The relationship between IPv6 packet flows, Quality
    of Service\n   guarantees, and optimal use of underlying IP and NBMA network\n
    \  resources are still subjects of ongoing research in the IETF\n   (specifically
    the ISSLL, RSVP, IPNG, and ION working groups). This\n   document currently only
    describes the use of flow detection as a\n   means to optimize the use of NBMA
    network resources through the\n   establishment of inter-LL shortcuts.\n"
  - contents:
    - "C.1. The use of non-zero FlowID to suppress flow detection\n   For the purposes
      of this IPv6/NBMA architecture, a flow is:\n      A related sequence of IPv6
      packets that the first hop router is\n      allowed to perform flow-detection
      on for the purposes of\n      triggering shortcut discovery.\n   How these packets
      are considered to be related to each other (e.g.\n   through common header fields
      such as IPv6 destination addresses) is a\n   local configuration issue.\n   The
      flow-detection rule specifies that only packets with a zero\n   FlowID can be
      considered as flows for which shortcut discovery may be\n   triggered. The rationale
      behind this decision is:\n      NBMA shortcuts are for the benefit of 'the network'
      optimizing its\n      forwarding of IPv6 packets in the absence of any other
      guidance\n      from the host.\n      It is desirable for an IPv6/NBMA host
      to have some mechanism for\n      overriding attempts by 'the network' to optimize
      its internal\n      forwarding path.\n      A zero FlowID has IPv6 semantics
      of \"the source allows the network\n      to utilize its own discretion in providing
      best-effort forwarding\n      service for packets with zero FlowID\"\n      The
      IPv6 semantics of zero FlowID are consistent with the flow-\n      detection
      rule in this document of \"if the FlowID is zero, we are\n      free to optimize
      the forwarding path using shortcuts\"\n      A non-zero FlowID has IPv6 semantics
      of \"the source has previously\n      established some preferred, end to end
      hop by hop forwarding\n      behaviour for packets with this FlowID\"\n      The
      IPv6 semantics of non-zero FlowID are consistent with the\n      flow-detection
      rule in this document of \"if the FlowID is non-\n      zero, do not attempt
      to impose a shortcut\".\n   A non-zero FlowID might be assigned by the source
      host after\n   negotiating a preferred forwarding mechanism with 'the network'
      (e.g.\n   through dynamic means such as RSVP, or administrative means).\n   Alternatively
      it can simply be assigned randomly by the source host,\n   and the network will
      provide default best effort forwarding (an IPv6\n   router defaults to providing
      best-effort forwarding for packets whose\n   FlowID/source-address pair is not
      recognized).\n   Thus, the modes of operation supported by this document becomes:\n
      \     Zero FlowID\n        Best effort forwarding, with optional shortcut discovery\n
      \       triggered through flow-detection.\n      Non-zero FlowID\n        Best
      effort forwarding if the routers along the path have not\n        been otherwise
      configured with alternative processing rules for\n        this FlowID/source-address
      pair. Flow detection relating to\n        shortcut discovery is suspended.\n
      \       If the routers along the path have been configured with\n        particular
      processing rules for this FlowID/source-address pair,\n        the flow is handled
      according to those rules. Flow detection\n        relating to shortcut discovery
      is suspended.\n   Mechanisms for establishing particular per-hop processing
      rules for\n   packets with non-zero FlowID are neither constrained by, nor implied\n
      \  by, this document.\n"
    title: C.1. The use of non-zero FlowID to suppress flow detection
  - contents:
    - "C.2. Future directions for Flow Detection\n   In the future, accurate mapping
      of IPv6 flows onto NBMA VCs may\n   require more information to be exchanged
      during the Neighbor\n   Discovery process than is currently available in Neighbor
      Discovery\n   packets. In these cases, the IPv6 Neighbor Discover protocols
      can be\n   extended to include new TLV options (see section 4.6 of RFC 1970\n
      \  [7]). However, if new options are required, the specification of\n   these
      options must be co-ordinated with the IPNG working group.\n   Since RFC 1970
      specifies that nodes must silently ignore options they\n   do not understand,
      new options can be added at any time without\n   breaking backward compatibility
      with existing implementations.\n   NHRP also provides mechanisms for adding
      optional TLVs to NHRP\n   Requests and NHRP Replies. Future developments of
      this document's\n   architecture will require consistent QoS extensions to both
      ND and\n   NHRP in order to ensure they are semantically equivalent (syntactic\n
      \  differences are undesirable, but can be tolerated).\n   Support for QoS on
      IPv6 unicast flows will not require further\n   extensions to the existing MARS
      protocol. However, future support for\n   QoS on IPv6 multicast flows may require
      extensions. MARS control\n   messages share the same TLV extension mechanism
      as NHRP, allowing QoS\n   extensions to be developed as needed.\n"
    title: C.2. Future directions for Flow Detection
  title: Appendix C. Flow detection
- contents:
  - "Appendix D. Shortcut Limit Option\n   For NS messages sent as a shortcut trigger,
    a new type of ND option\n   is needed to pass on the information about the data
    flow hop limit\n   from the host to the router. The use of this ND option is defined
    in\n   section 3.2.2 of this specification. Its binary representation\n   follows
    the rules of section 4.6 of RFC 1970:\n        0                   1                   2
    \                  3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
    4 5 6 7 8 9 0 1\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \       |     Type      |    Length     | Shortcut Limit|   Reserved1   |\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \       |                           Reserved2                           |\n        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  Fields:\n         Type            6\n         Length          1\n         Shortcut
    Limit  8-bit unsigned integer. Hop limit for shortcut\n                         attempt.\n
    \        Reserved1       This field is unused. It MUST be initialized to\n                         zero
    by the sender and MUST be ignored by the\n                         receiver.\n
    \        Reserved2       This field is unused. It MUST be initialized to\n                         zero
    by the sender and MUST be ignored by the\n                         receiver.\n
    \     Description\n         The shortcut limit option is used by a host in a Neighbor\n
    \        Solicitation message sent as a shortcut trigger to a default\n         router.
    It restricts the router's shortcut query to targets\n         reachable via the
    specified number of hops. The shortcut limit is\n         given relative to the
    host requesting the shortcut. NS messages\n         with shortcut limit values
    of 0 or 1 MUST be silently ignored.\n"
  title: Appendix D. Shortcut Limit Option
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
