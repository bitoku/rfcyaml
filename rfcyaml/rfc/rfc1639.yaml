- title: __initial_text__
  contents:
  - '            FTP Operation Over Big Address Records (FOOBAR)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  This memo does not specify an Internet standard of any\n   kind.\
    \  Discussion and suggestions for improvement are requested.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This paper describes a convention for specifying address families\n\
    \   other than the default Internet address family in FTP commands and\n   replies.\n"
- title: Introduction
  contents:
  - "Introduction\n   In the File Transfer Protocol (STD 9, RFC 959), the PORT command\n\
    \   argument <host-port> specifies the data port to be used to establish\n   a\
    \ data connection for FTP (STD 9, RFC 959).  This argument is also\n   used in\
    \ the PASV reply to request the server-DTP to listen on a data\n   port other\
    \ than its default data port.  This RFC specifies a method\n   for assigning addresses\
    \ other than 32-bit IPv4 addresses to data\n   ports through the specification\
    \ of a \"long Port (LPRT)\" command and\n   \"Long Passive (LPSV)\" reply, each\
    \ having as its argument a <long-\n   host-port>, which allows for additional\
    \ address families, variable\n   length network addresses and variable length\
    \ port numbers.\n   This is a general solution, applicable for all \"next generation\"\
    \ IP\n   alternatives, as well as for other network protocols than IP.  This\n\
    \   revision also extends FTP to allow for its operation over transport\n   interfaces\
    \ other than TCP.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Many thanks to all the folks in the IETF who casually mentioned\
    \ how\n   to do this, but who left it to me to write this RFC.  Special thanks\n\
    \   to Rich Colella, Bob Ullmann, Steve Lunt, Jay Israel, Jon Postel,\n   Shawn\
    \ Ostermann, and Tae Kyong Song, who contributed to this work.\n"
- title: 1.  Background
  contents:
  - "1.  Background\n   The PORT command of File Transfer Protocol allows users to\
    \ specify an\n   address other than the default data port for the transport connection\n\
    \   over which data are transferred. The PORT command syntax is:\n      PORT <SP>\
    \ <host-port> <CRLF>\n   The <host-port> argument is the concatenation of a 32-bit\
    \ internet\n   <host-address> and a 16-bit TCP <port-address>. This address\n\
    \   information is broken into 8-bit fields and the value of each field\n   is\
    \ transmitted as a decimal number (in character string\n   representation).  The\
    \ fields are separated by commas.  A PORT command\n   is thus of the general form\
    \ \"PORT h1,h2,h3,h4,p1,p2\", where h1 is the\n   high order 8 bits of the internet\
    \ host address.\n   The <host-port> argument is also used by the PASV reply, and\
    \ in\n   certain negative completion replies.\n   To accommodate larger network\
    \ addresses anticipated for all IP \"next\n   generation\" alternatives, and to\
    \ accommodate FTP operation over\n   network and transport protocols other than\
    \ IP, new commands and reply\n   codes are needed for FTP.\n"
- title: 2.  The LPRT Command
  contents:
  - "2.  The LPRT Command\n   The LPRT command allows users to specify a \"long\"\
    \ address for the\n   transport connection over which data are transferred. The\
    \ LPRT\n   command syntax is:\n      LPRT <SP> <long-host-port> <CRLF>\n   The\
    \ <long-host-port> argument is the concatenation of the following\n   fields;\n\
    \   o  an 8-bit <address-family> argument (af)\n   o  an 8-bit <host-address-length>\
    \ argument (hal)\n   o  a <host-address> of <host-address-length> (h1, h2, ...)\n\
    \   o  an 8-bit <port-address-length> (pal)\n   o  a <port-address> of <port-address-length>\
    \ (p1, p2, ...)\n   The initial values assigned to the <address-family> argument\
    \ take the\n   value of the version number of IP (see Assigned Numbers, STD 2,\
    \ RFC\n   1340); values in the range of 0-15 decimal are thus reserved for IP\n\
    \   and assigned by IANA.  Values in the range 16-255 are available for\n   the\
    \ IANA to assign to all other network layer protocols over which\n   FTP may be\
    \ operated.\n   Relevant assigned <address-family> numbers for FOOBAR are:\n \
    \    Decimal         Keyword\n     ------          -------\n     0           \
    \    reserved\n     1-3             unassigned\n     4               Internet\
    \ Protocol (IP)\n     5               ST Datagram Mode\n     6               SIP\n\
    \     7               TP/IX\n     8               PIP\n     9               TUBA\n\
    \     10-14           unassigned\n     15              reserved\n     16     \
    \         Novell IPX\n   The value of each field is broken into 8-bit fields and\
    \ the value of\n   each field is transmitted as an unsigned decimal number (in\
    \ character\n   string representation, note that negative numbers are explicitly\
    \ not\n   permitted). The fields are separated by commas.\n   A LPRT command is\
    \ thus of the general form\n      LPRT af,hal,h1,h2,h3,h4...,pal,p1,p2...\n  \
    \ where h1 is the high order 8 bits of the internet host address, and\n   p1 is\
    \ the high order 8 bits of the port number (transport address).\n"
- title: 3.  The LPSV Command
  contents:
  - "3.  The LPSV Command\n   The L(ONG) PASSIVE command requests the server-DTP to\
    \ listen on a\n   data port other than its default data port and to wait for a\n\
    \   connection rather than initiate one upon receipt of a transfer\n   command.\
    \ The response to this command includes the address family,\n   host address length\
    \ indicator, host address, port address length, and\n   port address of the listener\
    \ process at the server. The reply code\n   and text for entering the passive\
    \ mode using a long address is 228\n   (Interpretation according to FTP is: positive\
    \ completion reply 2yz,\n   connections x2z, passive mode entered using long address\
    \ xy8).\n   The suggested text message to accompany this reply code is:\n    228\
    \ Entering Long Passive Mode\n        (af, hal, h1, h2, h3,..., pal, p1, p2...)\n"
- title: 4.  Permanent Negative Completion Reply Codes
  contents:
  - "4.  Permanent Negative Completion Reply Codes\n   The negative completion reply\
    \ codes that are associated with syntax\n   errors in the PORT and PASV commands\
    \ are appropriate for the LPRT and\n   LPSV commands (500, 501). An additional\
    \ negative completion reply\n   code is needed to distinguish the case where a\
    \ host supports the LPRT\n   or LPSV command, but does not support the address\
    \ family specified.\n   Of the FTP function groupings defined for reply codes\
    \ (syntax,\n   information, connections, authentication and accounting, and file\n\
    \   system), \"connections\" seems the most logical choice; thus, an\n   additional\
    \ negative command completion reply code, 521 is added, with\n   the following\
    \ suggested textual message:\n      521 Supported address families are (af1, af2,\
    \ ..., afn)\n   Where (af1, af2, ..., afn) are the values of the version numbers\
    \ of\n   the \"next generation\" or other protocol families supported. (Note:\
    \ it\n   has been suggested that the families could also be represented by\n \
    \  ASCII strings.)\n"
- title: 5.  Rationale
  contents:
  - "5.  Rationale\n   An explicit address family argument in the LPRT command and\
    \ LPSV\n   reply allows the Internet community to experiment with a variety of\n\
    \   \"next generation IP\" and other network layer protocol alternatives\n   within\
    \ a common FTP implementation framework. (It also allows the use\n   of a different\
    \ address family on the command and data connections.)\n   An explicit length\
    \ indicator for the host address is necessary\n   because some of the IPNG alternatives\
    \ make use of variable length\n   addresses. An explicit host address is necessary\
    \ because FTP says\n   it's necessary.\n   The decision to provide a length indicator\
    \ for the port number is not\n   as obvious, and certainly goes beyond the necessary\
    \ condition of\n   having to support TCP port numbers.\n   Currently, at least\
    \ one IPng alternative (TP/IX) supports longer port\n   addresses. And given the\
    \ increasingly \"multi-protocol\" nature of the\n   Internet, it seems reasonable\
    \ that someone, somewhere, might wish to\n   operate FTP operate over Appletalk,\
    \ IPX, and OSI networks as well as\n   TCP/IP networks.  (In theory, FTP should\
    \ operate over *any* transport\n   protocol that offers the same service as TCP.)\
    \  Since some of these\n   transport protocols may offer transport selectors or\
    \ port numbers\n   that exceed 16 bits, a length indicator may be desirable. If\
    \ FTP must\n   indeed be changed to accommodate larger network addresses, it may\
    \ be\n   prudent to determine at this time whether the same flexibility is\n \
    \  useful or necessary with respect to transport addresses.\n"
- title: 6.  Conclusions
  contents:
  - "6.  Conclusions\n   The mechanism defined here is simple, extensible, and meets\
    \ both IPNG\n   and multi-protocol internet needs.\n"
- title: 7.  References
  contents:
  - "7.  References\n   STD 9, RFC 959  Postel, J., and J. Reynolds, \"File Transfer\
    \ Protocol\",\n                   STD 9, RFC 959, USC/Information Sciences Institute,\n\
    \                   October 1985.\n   STD 2, RFC 1340 Reynolds, J., and J. Postel,\
    \ \"Assigned Numbers\",\n                   STD 2, RFC 1340, USC/Information Sciences\
    \ Institute,\n                   July 1992.  (Does not include recently assigned\
    \ IPv7\n                   numbers).\n   STD 3, RFC 1123 Braden, R., Editor, \"\
    Requirements for Internet\n                   Hosts - Application and Support\"\
    , STD 3, RFC 1123,\n                   USC/Information Sciences Institute, October\
    \ 1989.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   David M. Piscitello\n   Core Competence, Inc.\n   1620\
    \ Tuckerstown Road\n   Dresher, PA 19025\n   EMail: dave@corecom.com\n"
