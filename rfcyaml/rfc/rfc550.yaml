- title: __initial_text__
  contents:
  - "                           NIC NCP EXPERIMENT\nFor the past couple of weeks,\
    \ the NIC NCP has been keeping statistics on\ntotal incoming messages, incoming\
    \ host-host control opcodes, and size of\noutgoing messages. The results have\
    \ been rather enlightening and, I\nthink, should be carefully considered by future\
    \ implementors of NCPs for\nservers. The statistics will be presented in a rather\
    \ qualitative\nfashion, since they were reset each time the system came up, but\
    \ they\nrepresent a total of about 100 hours of uptime, most of it during the\n\
    working day.\nThe total numbers of incoming and outgoing messages were almost\n\
    identical. There were about 5% more outgoing. There were slightly over\nhalf as\
    \ many incoming control opcodes processed as incoming messages; on\nthe assumption\
    \ that no incoming control message had more than one\nopcode, slightly over half\
    \ the incoming messages were control messages.\nThe Opcode statistics were somewhat\
    \ variable. In all cases the ALL\nopcode accounted for the great majority, from\
    \ a low of about 50% on\nweekends to a high of 98% on a busy weekday.  Almost\
    \ all of the\nremainder were NOPs. No other opcode ever accounted for more than\
    \ 5%.\nThe output message statistics were taken as log2(message size): this\n\
    included 1 word of buffer header, 1 word of IMP header, and l word of\nhost header.\
    \ As might be expected, 95% of all outgoing messages had l to\n4 PDP-10 words\
    \ (36-bit) of data. However, if one multiplies the count\nfor each bucket by the\
    \ average message site for the bucket, the result\nis that only 75% of all outgoing\
    \ data was in the smallest message size:\nthe remaining data was spread out fairly\
    \ evenly between the other\nbuckets.\nI would draw the following conclusions from\
    \ these statistics. First,\nhalf the messages on the network appear to be ALLs.\
    \ This suggests that\nNCPs should give some thought to processing control messages\n\
    efficiently. Second, 95% of the messages are very short. This suggests\nthat elaborate\
    \ buffering and queuing schemes are not likely to be\nvaluable, since the hypothetical\
    \ gain in efficient use of the IMP is\nprobably swamped by the overhead within\
    \ the host. Third, a sufficiently\nlarge fraction of all data is in large messages\
    \ (presumably file\ntransfers) that it is also necessary to deal with this situation\n\
    efficiently, e.g. a NCP which always sent l-character messages would not\nbe satisfactory.\n\
    The ARPANET has been in vigorous operation for a year or two, and many\nNCPs have\
    \ been written during this time (including a rewrite of the\nTENEX NCP, which\
    \ probably handles more traffic than all other NCPs\ncombined); to my knowledge,\
    \ no one has bothered to gather these\nstatistics before.  The total time invested\
    \ in putting these\nmeasurements into the NIC system was about half an hour (10\n\
    instructions).  I find it regrettable that even those of us presumably\nengaged\
    \ in \"computer science\" have not found it necessary to confirm our\nhypotheses\
    \ about network operation by experiment an to improve our\ntheories on the basis\
    \ of evidence.\n       [ This RFC was put into machine readable form for entry\
    \ ]\n       [ into the online RFC archives by Alex McKenzie with    ]\n      \
    \ [ support from GTE, formerly BBN Corp.            10/99 ]\n"
