Writing I Ds and RFCs
Using Pandoc and a Bit of XML Abstract
This document presents a technique for using a Markdown syntax variant, called Pandoc, and a bit of XML (as defined in RFC 2629) as a source format for documents that are Internet Drafts (I Ds) or RFCs.
The goal of this technique (which is called Pandoc2rfc) is to let an author of an I D focus on the main body of text without being distracted too much by XML tags; however, it does not alleviate the need to typeset some files in XML.
This document presents a technique for using a Markdown [Markdown] syntax variant, called Pandoc [Pandoc], and a bit of XML [RFC2629] as a source format for documents that are Internet Drafts (I Ds) or RFCs.
The goal of this technique is to let an author of an I D focus on the main body of text without being distracted too much by XML tags; however, it does not alleviate the need to typeset some files in XML.
Pandoc is a format that is almost plain text and therefore particularly well suited for editing RFC like documents.
The syntax itself is a superset of the syntax championed by Markdown.
Pandoc to RFC Pandoc's syntax is easy to learn and write, and it can be translated to numerous output formats, including, but not limited to: HTML, EPUB, (plain) Markdown, and DocBook XML.
Pandoc2rfc allows authors to write in Pandoc syntax that is then transformed to XML and given to xml2rfc.
The conversions are, in a way, amusing, as we start off with (almost) plain text, use elaborate XML, and end up with plain text again.
The output of step 2 in Figure 1 is XML that is suitable for inclusion in either the "middle" or "back" section of an RFC.
Even though Pandoc2rfc abstracts away a lot of XML details, there are still places left where XML files needs to be edited   most notably in the "front" section of an RFC.
The simplest way to start using Pandoc2rfc is to create a template XML file and include the appropriate XML for the "front", "middle", and "back" section: <?
' docName 'draft string example'> <front> <title>Writing
I Ds and RFCs using Pandoc</title> <author> <organization/
> <date/> <abstract> &pandocAbstract; </abstract> </front
> <middle> &pandocMiddle; </middle> <back> <references title "Normative References"> &rfc.2629; </references> &pandocBack; </back> </rfc
In this case, you will need to edit four documents: 1.
"abstract.mkd" contains the abstract; 2.
"middle.mkd" contains the main body of text; 3.
"back.mkd" holds the appendices (if any); 4.
and this "template.xml"   probably a fairly static file
; among other things, it holds the author(s) and the references.
Up to date source code for Pandoc2rfc can be found at [Pandoc2rfc]; this includes the style sheet "transform.xsl", which is used for the XML transformation (also see Section 3).
Dependencies Pandoc2rfc needs "xsltproc" [XSLT] and "pandoc" [Pandoc] to be installed.
The conversion to xml2rfc XML is done with a style sheet based on XSLT version 1.0 [W3C.REC xslt 19991116].
When using the template from Figure 2, xml2rfc version 2 (or higher) must be used.
Assuming the setup from Section 2, we can build an I D as follows (in a Unix like environment): for i in abstract middle back; do pandoc  st docbook
html # or create HTML output
Building an I D Note that the output file names (abstract.xml, middle.xml, and back.xml) must match the names used as the XML entities in "template.xml".
ENTITY" lines in Figure 2.)
The Pandoc2rfc source repository includes a shell script that incorporates the above transformations.
Creating a "draft.txt" or a "draft.xml" can be done with "pandoc2rfc  .mkd" and "pandoc2rfc
The full description of Pandoc's syntax can be found in [PandocGuide].
Definition 1  Spanx style "verb", style "emph", and style "strong", respectively, use: "
Index, by using footnotes and superscript text (Section 6.4);  Citations, by using cross references;  Processing Instructions (PIs), which appear as "<?
>", may be used after a section header.
They are carried over to the generated XML.
The "<vspace>" tag is supported and carried over to the generated XML.
Unsupported Features and Limitations With Pandoc2rfc, an author of an I D can get a long way without needing to input XML, but it is not a 100% solution.
The initial setup and the reference library still force the author to edit XML files.
The metadata feature (Pandoc's "Title Block" extension) is not used in Pandoc2rfc.
This information (authors, date, keyword, and URLs) should be put in the "template.xml".
Comments are supported via HTML comments in the Pandoc source files.
Citations are supported via cross references; the citation syntax of Pandoc is not used.
Authors still need to know how to deal with possible errors from xml2rfc.
The following sections detail how to use the Pandoc syntax for figures, tables, and references to get the desired output.
Figures Indent the paragraph with 4 spaces as mandated by Pandoc.
If you add an inline footnote  directly  after the figure, the artwork gets a title attribute with the text of that footnote (and a possible anchor).
A table can be entered by using Pandoc's table syntax.
You can choose multiple styles as input, but they all are converted to the same style table (plain "<texttable>") in xml2rfc.
If you add an inline footnote  directly  after the table, it will get a title attribute with the text of that footnote (and a possible anchor).
The built in syntax of Pandoc to create a caption with "Table:" should not be used.
This document raises no security issues.
Table 1: The most important textual constructs that can be used in Pandoc2rfc
