- title: __initial_text__
  contents:
  - ' Guidelines for Using IPv6 Transition Mechanisms during IPv6 Deployment

    '
- title: Abstract
  contents:
  - "Abstract\n   The Internet continues to grow beyond the capabilities of IPv4.\
    \  An\n   expansion in the address space is clearly required.  With its\n   increase\
    \ in the number of available prefixes and addresses in a\n   subnet, and improvements\
    \ in address management, IPv6 is the only real\n   option on the table.  Yet,\
    \ IPv6 deployment requires some effort,\n   resources, and expertise.  The availability\
    \ of many different\n   deployment models is one reason why expertise is required.\
    \  This\n   document discusses the IPv6 deployment models and migration tools,\n\
    \   and it recommends ones that have been found to work well in\n   operational\
    \ networks in many common situations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6180.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n   3.  Principles . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n     3.1.  Goals  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n     3.2.  Choosing a Deployment Model  . . . . . . . . . . . . .\
    \ . .  6\n   4.  Guidelines for IPv6 Deployment . . . . . . . . . . . . . . .\
    \ .  7\n     4.1.  Native Dual Stack  . . . . . . . . . . . . . . . . . . . .\
    \  8\n     4.2.  Crossing IPv4 Islands  . . . . . . . . . . . . . . . . . . 10\n\
    \     4.3.  IPv6-Only Core Network . . . . . . . . . . . . . . . . . . 11\n  \
    \   4.4.  IPv6-Only Deployment . . . . . . . . . . . . . . . . . . . 11\n   5.\
    \  Conclusions  . . . . . . . . . . . . . . . . . . . . . . . . . 14\n   6.  Further\
    \ Reading  . . . . . . . . . . . . . . . . . . . . . . . 15\n   7.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 15\n   8.  References . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . 16\n     8.1.  Normative References . .\
    \ . . . . . . . . . . . . . . . . . 16\n     8.2.  Informative References . .\
    \ . . . . . . . . . . . . . . . . 16\n   Appendix A.  Acknowledgments . . . .\
    \ . . . . . . . . . . . . . . . 20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet continues to grow beyond the capabilities of\
    \ IPv4.  The\n   tremendous success of the Internet has strained the IPv4 address\n\
    \   space, which is no longer sufficient to fuel future growth.  At the\n   time\
    \ of this writing, August 2010, the IANA \"free pool\" contains only\n   14 unallocated\
    \ unicast IPv4 /8 prefixes.  Credible estimates based on\n   past behavior suggest\
    \ that the Regional Internet Registries (RIRs)\n   will exhaust their remaining\
    \ address space by early 2012, apart from\n   the development of a market in IPv4\
    \ address space.  An expansion in\n   the address space is clearly required. \
    \ With its increase in the\n   number of available prefixes and addresses in a\
    \ subnet, and\n   improvements in address management, IPv6 is the only real option\
    \ on\n   the table.\n   John Curran, in \"An Internet Transition Plan\" [RFC5211],\
    \ gives\n   estimated dates for significant points in the transition; while the\n\
    \   tail of the process will likely be long, it is clear that deployment\n   is\
    \ a present reality and requirement.\n   Accordingly, many organizations have\
    \ employed or are planning to\n   employ IPv6 in their networks.  Yet, IPv6 deployment\
    \ requires some\n   effort, resources, and expertise.  This is largely a natural\
    \ part of\n   maintaining and evolving a network: changing requirements are taken\n\
    \   into account in normal planning, procurement, and update cycles.\n   Very\
    \ large networks have successfully adopted IPv6 alongside IPv4,\n   with surprisingly\
    \ little effort.\n   However, in order to successfully make this transition, some\
    \ amount\n   of new expertise is required.  Different types of experience will\
    \ be\n   required: basic understanding of IPv6 mechanisms, debugging tools,\n\
    \   product capabilities and caveats when used with IPv6, and so on.  The\n  \
    \ availability of many different IPv6 deployment models and tools is an\n   additional\
    \ reason why expertise is required.  These models and tools\n   have been developed\
    \ over the years at the IETF, some for specific\n   circumstances and others for\
    \ more general use.  They differ greatly\n   in their principles of operation.\
    \  Over time, views about the best\n   ways to employ the tools have evolved.\
    \  Given the number of options,\n   network managers are understandably confused.\
    \  They need guidance on\n   recommended approaches to IPv6 deployment.\n   The\
    \ rest of this document is organized as follows.  Section 2\n   introduces some\
    \ terminology, Section 3 discusses some of the general\n   principles behind choosing\
    \ particular deployment models and tools,\n   Section 4 goes through the recommended\
    \ deployment models for common\n   situations, and Section 5 provides some concluding\
    \ remarks about the\n   choice between these models.\n   Many networks can follow\
    \ one of the four scenarios described in this\n   document.  However, variations\
    \ will certainly occur in the details,\n   and there will be questions, such as\
    \ the particular choice of\n   tunneling solution, for which there is no \"one\
    \ size fits all\" answer.\n   Network managers must each take the responsibility\
    \ of choosing the\n   best solution for their own case.  This document does not\
    \ attempt to\n   provide guidance for all possible networking situations.  Also,\
    \ a\n   systematic operational plan for the transition is required, but the\n\
    \   details depend entirely on the individual network.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   In this document, the following terms are used.\n   IPv4/IPv4\
    \ NAT:  refers to any IPv4-to-IPv4 network address\n      translation algorithm,\
    \ both \"Basic NAT\" and \"Network Address/Port\n      Translator (NAPT)\", as\
    \ defined by [RFC2663].\n   Dual Stack:  refers to a technique for providing complete\
    \ support for\n      both Internet protocols -- IPv4 and IPv6 -- in hosts and\
    \ routers\n      [RFC4213].\n   Dual Stack Lite:  also called \"DS-Lite\", refers\
    \ to a technique that\n      employs tunneling and IPv4/IPv4 NAT to provide IPv4\
    \ connectivity\n      over IPv6 networks [DS-lite].\n   IPv4-only domain:  as\
    \ defined in [RFC6144], a routing domain in which\n      applications can only\
    \ use IPv4 to communicate, whether due to host\n      limitations, application\
    \ limitations, or network limitations.\n   IPv6-only domain:  as defined in [RFC6144],\
    \ a routing domain in which\n      applications can only use IPv6 to communicate,\
    \ whether due to host\n      limitations, application limitations, or network\
    \ limitations.\n   NAT-PT:  refers to a specific, old design of a Network Address\n\
    \      Translator - Protocol Translator defined in [RFC2766] and\n      deprecated\
    \ due to the reasons stated in [RFC4966].\n"
- title: 3.  Principles
  contents:
  - "3.  Principles\n   The primary goal is to facilitate the continued growth of\
    \ the\n   networking industry and deployment of Internet technology at\n   relatively\
    \ low capital and operational expense without destabilizing\n   deployed services\
    \ or degrading customer experience.  This is at risk\n   with IPv4 due to the\
    \ address runout; economics teaches us that a\n   finite resource, when stressed,\
    \ becomes expensive, either in the\n   actual cost of the resource or in the complexity\
    \ of the technology\n   and processes required to manage it.  It is also at risk\
    \ while both\n   IPv4 and IPv6 are deployed in parallel, as it costs more to run\
    \ two\n   technologies than one.  To this end, since IPv4 clearly will not\n \
    \  scale to meet our insatiable requirements, the primary technical\n   goals\
    \ are the global deployment of IPv6 both in the network, in its\n   service infrastructure,\
    \ and by applications, resulting in the end of\n   the requirement to deploy two\
    \ IP versions and the obsolescence of\n   transitional mechanisms.  Temporary\
    \ goals in support of this focus on\n   enabling parts of the Internet to employ\
    \ IPv6 and disable IPv4 before\n   the entire Internet has done so.\n"
- title: 3.1.  Goals
  contents:
  - "3.1.  Goals\n   The end goal is network-wide native IPv6 deployment, resulting\
    \ in the\n   obsolescence of transitional mechanisms based on encapsulation,\n\
    \   tunnels, or translation, and also resulting in the obsolescence of\n   IPv4.\
    \  Transition mechanisms, taken as a class, are a means to an\n   end, to simplify\
    \ the process for the network administration.\n   However, the goals, constraints,\
    \ and opportunities for IPv6\n   deployment differ from one case to another. \
    \ There is no single right\n   model for IPv6 deployment, just like there is no\
    \ one and only model\n   for IPv4 network design.  Some guidelines can be given,\
    \ however.\n   Common deployment models that have been found to work well are\n\
    \   discussed in Section 4, and the small set of standardized IETF\n   migration\
    \ tools support these models.  But first it may be useful to\n   discuss some\
    \ general principles that guide our thinking about what is\n   a good deployment\
    \ model.\n   It is important to start the deployment process in a timely manner.\n\
    \   Most of the effort is practical -- network audit, network component\n   choices,\
    \ network management, planning, implementation -- and at the\n   time of this\
    \ writing, reasonably easily achievable.  There is no\n   particular advantage\
    \ to avoiding dealing with IPv6 as part of the\n   normal network planning cycle.\
    \  The migration tools already exist,\n   and while additional features continue\
    \ to be developed, it is not\n   expected that they radically change what networks\
    \ have to do.  In\n   other words, there is no point in waiting for an improved\
    \ design.\n   There are only a few exceptional networks where coexistence with\
    \ IPv4\n   is not a consideration at all.  These networks are typically new\n\
    \   deployments, strictly controlled by a central authority, and have no\n   need\
    \ to deal with legacy devices.  For example, specialized machine-\n   to-machine\
    \ networks that communicate only to designated servers, such\n   as Smart Grids,\
    \ can easily be deployed as IPv6-only networks.  Mobile\n   telephone network\
    \ operators, especially those using 3GPP (Third\n   Generation Partnership Project),\
    \ have seriously considered IPv6-only\n   operation, and some have deployed it.\
    \  Research networks that can be\n   separated from the IPv4 Internet to find\
    \ out what happens are also a\n   candidate.  In most other networks, IPv4 has\
    \ to be considered.  A\n   typical requirement is that older, IPv4-only applications,\
    \ systems,\n   or services must be accommodated.  Most networks that cross\n \
    \  administrative boundaries or allow end-user equipment have such\n   requirements.\
    \  Even in situations where the network consists of only\n   new, IPv6-capable\
    \ devices, it is typically required that the devices\n   be able to communicate\
    \ with the IPv4 Internet.\n   It is expected that after a period of supporting\
    \ both IPv4 and IPv6,\n   IPv4 can eventually be turned off.  This should happen\
    \ gradually.\n   For instance, a service provider network might stop providing\
    \ IPv4\n   service within its own network, while still allowing its IPv6\n   customers\
    \ to access the rest of the IPv4 Internet through overlay,\n   proxy, or translation\
    \ services.  Regardless of progress in supporting\n   IPv6, it is widely expected\
    \ that some legacy applications and some\n   networks will continue to run only\
    \ over IPv4 for many years.  All\n   deployment scenarios need to deal with this\
    \ situation.\n"
- title: 3.2.  Choosing a Deployment Model
  contents:
  - "3.2.  Choosing a Deployment Model\n   The first requirement is that the model\
    \ or tool actually allow\n   communications to flow and services to appropriately\
    \ be delivered to\n   customers without perceived degradation.  While this sounds\
    \ too\n   obvious to even state, it is sometimes not easy to ensure that a\n \
    \  proposed model does not have failure modes related to supporting\n   older\
    \ devices, for instance.  A network that is not serving all of\n   its users is\
    \ not fulfilling its task.\n   The ability to communicate is far more important\
    \ than fine-grained\n   performance differences.  In general, it is not productive\
    \ to focus\n   on the optimization of a design that is intended to be temporary,\n\
    \   such as a migration solution necessarily is.  Consequently, existing\n   tools\
    \ are often preferred over new ones, even if for some specific\n   circumstance\
    \ it would be possible to construct a slightly more\n   efficient design.\n  \
    \ Similarly, migration tools that can be disposed after a period of co-\n   existence\
    \ are preferred over tools that require more permanent\n   changes.  Such permanent\
    \ changes may incur costs even after the\n   transition to IPv6 has been completed.\n\
    \   Looking back on the deployment of Internet technology, some of the\n   factors,\
    \ as described in [RFC5218] and [Baker.Shanghai], that have\n   been important\
    \ for success include:\n   o  The ability to offer a valuable service.  In the\
    \ case of the\n      Internet, connectivity has been this service.\n   o  The\
    \ ability to deploy the solution in an incremental fashion.\n   o  Simplicity.\
    \  This has been a key factor in making it possible for\n      all types of devices\
    \ to support the Internet protocols.\n   o  Openly available implementations.\
    \  These make it easier for\n      researchers, start-ups, and others to build\
    \ on or improve existing\n      components.\n   o  The ability to scale.  The\
    \ IPv4 Internet grew far larger than its\n      original designers had anticipated,\
    \ and scaling limits only became\n      apparent 20-30 years later.\n   o  The\
    \ design supports robust interoperability rather than mere\n      correctness.\
    \  This is important in order to ensure that the\n      solution works in different\
    \ circumstances and in an imperfectly\n      controlled world.\n   Similar factors\
    \ are also important when choosing IPv6 migration\n   tools.  Success factors\
    \ should be evaluated in the context of a\n   migration solution.  For instance,\
    \ incremental deployability and lack\n   of dependencies to components that are\
    \ under someone else's control\n   are key factors.\n   It is also essential that\
    \ any chosen designs allow the network to be\n   maintained, serviced, diagnosed,\
    \ and measured.  The ability of the\n   network to operate under many different\
    \ circumstances and surprising\n   conditions is a key.  Any large network that\
    \ employs brittle\n   components will incur significant support costs.\n   Properly\
    \ executed IPv6 deployment normally involves a step-wise\n   approach where individual\
    \ functions or parts of the network are\n   updated at different times.  For instance,\
    \ IPv6 connectivity has to\n   be established and tested before DNS entries with\
    \ IPv6 addresses can\n   be provisioned.  Or, specific services can be moved to\
    \ support IPv6\n   earlier than others.  In general, most deployment models employ\
    \ a\n   very similar network architecture for both IPv4 and IPv6.  The\n   principle\
    \ of changing only the minimum amount necessary is applied\n   here.  As a result,\
    \ some features of IPv6, such as the ability to\n   have an effectively unlimited\
    \ number of hosts on a subnet, may not be\n   available in the short term.\n"
- title: 4.  Guidelines for IPv6 Deployment
  contents:
  - "4.  Guidelines for IPv6 Deployment\n   This section presents a number of common\
    \ scenarios along with\n   recommended deployment tools for them.  We start from\
    \ the most\n   obvious deployment situation where native connectivity is available\n\
    \   and both IP versions are used.  Since native IPv6 connectivity is not\n  \
    \ available in all networks, our second scenario looks at ways of\n   arranging\
    \ such connectivity over the IPv4 Internet.  The third\n   scenario is more advanced\
    \ and looks at a service provider network\n   that runs only on IPv6 but that\
    \ is still capable of providing both\n   IPv6 and IPv4 services.  The fourth and\
    \ most advanced scenario\n   focuses on translation, at the application or the\
    \ network layer.\n   Note that there are many other possible deployment models\
    \ and\n   existing specifications to support such models.  These other models\n\
    \   are not necessarily frowned upon.  However, they are not expected to\n   be\
    \ the mainstream deployment models, and consequently, the associated\n   specifications\
    \ are typically not IETF Standards Track RFCs.  Network\n   managers should not\
    \ adopt these non-mainstream models lightly,\n   however, as there is little guarantee\
    \ that they work well.  There are\n   also models that are believed to be problematic.\
    \  An older model of\n   IPv6-IPv4 translation (NAT-PT) [RFC2766] suffers from\
    \ a number of\n   drawbacks arising from, for example, its attempt to capture\
    \ DNS\n   queries on path [RFC4966].  Another example regarding the preference\n\
    \   to employ tunneling instead of double translation will be discussed\n   later\
    \ in this document.\n"
- title: 4.1.  Native Dual Stack
  contents:
  - "4.1.  Native Dual Stack\n   The simplest deployment model is dual stack: one\
    \ turns on IPv6\n   throughout one's existing IPv4 network and allows applications\
    \ using\n   the two protocols to operate as ships in the night.  This model is\n\
    \   applicable to most networks -- home, enterprise, service provider, or\n  \
    \ content provider network.\n   The purpose of this model is to support any type\
    \ of device and\n   communication, and to make it an end-to-end choice which IP\
    \ version\n   is used between the peers.  There are minimal assumptions about\
    \ the\n   capabilities and configuration of hosts in these networks.  Native\n\
    \   connectivity avoids problems associated with the configuration of\n   tunnels\
    \ and Maximum Transmission Unit (MTU) settings.  As a result,\n   these networks\
    \ are robust and reliable.  Accordingly, this is the\n   recommended deployment\
    \ model for most networks and is supported by\n   IETF standards such as dual\
    \ stack [RFC4213] and address selection\n   [RFC3484].  Similarly, while there\
    \ are some remaining challenges,\n   this model is also preferred by many service\
    \ providers and network\n   managers [RFC6036] [IPv6-only-experience].\n   The\
    \ challenges associated with this model are twofold.  First, while\n   dual stack\
    \ allows each individual network to deploy IPv6 on their\n   own, actual use still\
    \ requires participation from all parties between\n   the peers.  For instance,\
    \ the peer must be reachable over IPv6, have\n   an IPv6 address to itself, and\
    \ advertise such an address in the\n   relevant naming service (such as the DNS).\
    \  This can create a\n   situation where IPv6 has been turned on in a network,\
    \ but there is\n   little actual traffic.  One direct way to affect this situation\
    \ is to\n   ensure that major destinations of traffic are prepared to receive\n\
    \   IPv6 traffic.  Current Internet traffic is highly concentrated on\n   selected\
    \ content provider networks, and making a change in even a\n   small number of\
    \ these networks can have significant effects.  This\n   was recently observed\
    \ when YouTube started supporting IPv6\n   [networkworld.youtube].  There are\
    \ scenarios where these means are\n   insufficient.  The following sections discuss\
    \ deployment models that\n   enable parts of the network to deploy IPv6 faster\
    \ than other parts.\n   The second challenge is that not all applications deal\
    \ gracefully\n   with situations where one of the alternative destination addresses\n\
    \   works unreliably.  For instance, if IPv6 connectivity is unreliable,\n   it\
    \ may take a long time for some applications to switch over to IPv4.\n   As a\
    \ result, many content providers are shying away from advertising\n   IPv6 addresses\
    \ in DNS.  This in turn exacerbates the first challenge.\n   Long term, the use\
    \ of modern application toolkits and APIs solves\n   this problem.  In the short\
    \ term, some content providers and user\n   network managers have made a mutual\
    \ agreement to resolve names to\n   IPv6 addresses.  Such agreements are similar\
    \ to peering agreements\n   and have been seen as necessary by many content providers.\
    \  These\n   \"whitelisting\" practices have some downsides as well, however.\
    \  In\n   particular, they create a dependency on an external party for moving\n\
    \   traffic to IPv6.  Nevertheless, there are many types of traffic in\n   the\
    \ Internet, and only some of it requires such careful coordination.\n   Popular\
    \ peer-to-peer systems can automatically and reliably employ\n   IPv6 connectivity\
    \ where it is available, for instance.\n   Despite these challenges, the native\
    \ dual-stack connectivity model\n   remains the recommended approach.  It is responsible\
    \ for a large part\n   of the progress on worldwide IPv6 deployment to date. \
    \ The largest\n   IPv6 networks -- notably, national research and education networks,\n\
    \   Internet II, RENATER, and others -- employ this approach.\n   The original\
    \ intent of dual stack was to deploy both IP versions\n   alongside each other\
    \ before IPv4 addresses were to run out.  As we\n   know, this never happened\
    \ and deployment now has to take place with\n   limited IPv4 addresses.  Employing\
    \ dual stack together with a\n   traditional IPv4 address translator (IPv4/IPv4\
    \ NAT) is a very common\n   configuration.  If the address translator is acceptable\
    \ for the\n   network from a pure IPv4 perspective, this model can be recommended\n\
    \   from a dual-stack perspective as well.  The advantage of IPv6 in this\n  \
    \ model is that it allows direct addressing of specific nodes in the\n   network,\
    \ creating a contrast to the translated IPv4 service, as noted\n   in [RFC2993]\
    \ and [shared-addressing-issues].  As a result, it allows\n   the construction\
    \ of IPv6-based applications that offer more\n   functionality.\n   There may\
    \ also be situations where a traditional IPv4 address\n   translator is no longer\
    \ sufficient.  For instance, in typical\n   residential networks, each subscriber\
    \ is given one global IPv4\n   address, and the subscriber's IPv4/IPv4 NAT device\
    \ may use this\n   address with as many devices as it can handle.  As IPv4 address\
    \ space\n   becomes more constrained and without substantial movement to IPv6,\
    \ it\n   is expected that service providers will be pressured to assign a\n  \
    \ single global IPv4 address to multiple subscribers.  Indeed, in some\n   deployments\
    \ this is already the case.  The dual-stack model is still\n   applicable even\
    \ in these networks, but the IPv4/IPv4 Network Address\n   Transition (NAT) functionality\
    \ may need to be relocated and enhanced.\n   On some networks it is possible to\
    \ employ overlapping private address\n   space [L2-NAT] [DS-extra-lite].  Other\
    \ networks may require a\n   combination of IPv4/IPv4 NAT enhancements and tunneling.\
    \  These\n   scenarios are discussed further in Section 4.3.\n"
- title: 4.2.  Crossing IPv4 Islands
  contents:
  - "4.2.  Crossing IPv4 Islands\n   Native IPv6 connectivity is not always available,\
    \ but fortunately it\n   can be established using tunnels.  Tunneling introduces\
    \ some\n   additional complexity.  It also increases the probability that the\n\
    \   Path MTU algorithm will be used, as many implementations derive their\n  \
    \ default MTU from the Ethernet frame size; ICMP filtering interacts\n   poorly\
    \ with the Path MTU algorithm in [RFC1981].  However, its\n   benefit is that\
    \ it decouples addressing inside and outside the\n   tunnel, making it easy to\
    \ deploy IPv6 without having to modify\n   routers along the path.  Tunneling\
    \ should be used when native\n   connectivity cannot be established, such as when\
    \ crossing another\n   administrative domain or a router that cannot be easily\
    \ reconfigured.\n   There are several types of tunneling mechanisms, including\
    \ manually\n   configured IPv6-over-IPv4 tunnels [RFC4213], 6to4 [RFC3056],\n\
    \   automatic host-based tunnels [RFC4380], tunnel brokers [RFC3053],\n   running\
    \ IPv6 over MPLS with IPv6 Provider Edge Routers (6PE)\n   [RFC4798], the use\
    \ of Virtual Private Networks (VPNs) or mobility\n   tunnels to carry both IPv4\
    \ and IPv6 [RFC4301] [RFC5454] [RFC5555]\n   [RFC5844], and many others.  More\
    \ advanced solutions provide a mesh-\n   based framework of tunnels [RFC5565].\n\
    \   On a managed network, there are no major challenges with tunneling\n   beyond\
    \ the possible configuration and MTU problems.  Tunneling is\n   very widely deployed\
    \ both for IPv6 connectivity and other reasons,\n   and is well understood.  In\
    \ general, the IETF recommends that\n   tunneling be used if it is necessary to\
    \ cross a segment of IP version\n   X when communicating from IP version Y to\
    \ Y.  An alternative design\n   would be to employ protocol translation twice.\
    \  However, this design\n   involves problems similar to those created by IPv4\
    \ address\n   translation and is largely untried technology in any larger scale.\n\
    \   On an unmanaged network, however, there have been a number of\n   problems.\
    \  In general, solutions aimed at early adopters (such as\n   6to4) have at times\
    \ caused IPv6 connectivity to appear to be\n   available on a network when in\
    \ fact there is no connectivity.  In\n   turn, this has lead to the content providers\
    \ needing to serve IPv6\n   results for DNS queries only for trusted peers with\
    \ known high-\n   quality connectivity.\n   The IPv6 Rapid Deployment (6RD) [RFC5969]\
    \ approach is a newer version\n   of the 6to4 tunneling solution without the above\
    \ drawbacks.  It\n   offers systematic IPv6 tunneling over IPv4 across an ISP,\n\
    \   correspondence between IPv4 and IPv6 routing, and can be deployed\n   within\
    \ an ISP without the need to rely on other parties.\n"
- title: 4.3.  IPv6-Only Core Network
  contents:
  - "4.3.  IPv6-Only Core Network\n   An emerging deployment model uses IPv6 as the\
    \ dominant protocol at a\n   service provider network, and tunnels IPv4 through\
    \ this network in a\n   manner converse to the one described in the previous section.\
    \  There\n   are several motivations for choosing this deployment model:\n   o\
    \  There may not be enough public or private IPv4 addresses to\n      support\
    \ network management functions in an end-to-end fashion,\n      without segmenting\
    \ the network into small parts with overlapping\n      address space.\n   o  IPv4\
    \ address sharing among subscribers may involve new address\n      translation\
    \ nodes within the service provider's network.  IPv6 can\n      be used to reach\
    \ these nodes.  Normal IPv4 routing is insufficient\n      for this purpose, as\
    \ the same addresses would be used in several\n      parts of the network.\n \
    \  o  It may be simpler for the service provider to employ a single-\n      version\
    \ network.\n   The recommended tool for this model is Dual Stack Lite [DS-lite].\n\
    \   Dual Stack Lite both provides relief for IPv4 address shortage and\n   makes\
    \ forward progress on IPv6 deployment, by moving service provider\n   networks\
    \ and IPv4 traffic over IPv6.  Given the IPv6 connectivity\n   that Dual Stack\
    \ Lite runs over, it becomes easy to provide IPv6\n   connectivity all the way\
    \ to the end users as well.\n"
- title: 4.4.  IPv6-Only Deployment
  contents:
  - "4.4.  IPv6-Only Deployment\n   Our final deployment model breaks the requirement\
    \ that all parties\n   must upgrade to IPv6 before any end-to-end communications\
    \ use IPv6.\n   This model makes sense when the following conditions are met:\n\
    \   o  There is a fact or requirement that there be an IPv4-only domain\n    \
    \  and an IPv6-only domain.\n   o  There is a requirement that hosts in the IPv4-only\
    \ domain access\n      servers or peers in the IPv6-only domain and vice versa.\n\
    \   This deployment model would fit well, for instance, a corporate or\n   mobile\
    \ network that offers IPv6-only networking but where users still\n   wish to access\
    \ content from the IPv4 Internet.\n   When we say \"IPv4-only\" or \"IPv6-only\"\
    , we mean that the applications\n   can communicate only using IPv4 or IPv6; this\
    \ might be due to lack of\n   capabilities in the applications, host stacks, or\
    \ the network; the\n   effect is the same.  The reason to switch to an IPv6-only\
    \ network may\n   be a desire to test such a configuration or to simplify the\
    \ network.\n   It is expected that as IPv6 deployment progresses, the second reason\n\
    \   will become more prevalent.  One particular reason for considering an\n  \
    \ IPv6-only domain is the effect of overlapping private address space\n   to applications.\
    \  This is important in networks that have exhausted\n   both public and private\
    \ IPv4 address space and where arranging an\n   IPv6-only network is easier than\
    \ dealing with the overlapping address\n   space in applications.\n   Note that\
    \ the existence of an IPv6-only domain requires that all\n   devices are indeed\
    \ IPv6 capable.  In today's mixed networking\n   environments with legacy devices,\
    \ this cannot always be guaranteed.\n   But, it can be arranged in networks where\
    \ all devices are controlled\n   by a central authority.  For instance, newly\
    \ built corporate networks\n   can ensure that the latest device versions are\
    \ in use.  Some networks\n   can also be engineered to support different services\
    \ over an\n   underlying network and, as such, can support IPv6-only networking\n\
    \   more easily.  For instance, a cellular network may support IPv4-only\n   connectivity\
    \ for the installed base of existing devices and IPv6-only\n   connectivity for\
    \ incremental growth with newer IPv6-capable handsets.\n   Similarly, a broadband\
    \ ISP may support dual-stack connectivity for\n   customers that require both\
    \ IPv4 and IPv6, and offer IPv6-only and\n   NAT64 service for others.  In the\
    \ case of 3GPP and DOCSIS 3.0 access\n   networks, the underlying access network\
    \ architecture allows the\n   flexibility to run different services in parallel\
    \ to suit the various\n   needs of the customer and the network operator.\n  \
    \ It is also necessary for the network operator to have some level of\n   understanding\
    \ of what applications are used in the network, enabling\n   him to ensure that\
    \ any communication exchange is in fact predictable,\n   capable of using IPv6,\
    \ and translatable.  In such a case, full\n   interoperability can be expected.\
    \  This has been demonstrated with\n   some mobile devices, for instance.  Note\
    \ that the requirements on\n   applications are similar to those in networks employing\
    \ IPv4 NAT\n   technology.\n   One obvious IPv6-only deployment approach applies\
    \ to applications\n   that include proxies or relays.  One might position a web\
    \ proxy, a\n   mail server, or a SIP (Session Initiation Protocol) and media stream\n\
    \   back-to-back user agent across the boundary between IPv4 and IPv6\n   domains,\
    \ so that the application terminates IPv4 sessions on one side\n   and IPv6 sessions\
    \ on the other.  Doing this preserves the end-to-end\n   nature of communications\
    \ from the gateway to the communicating peer.\n   For obvious reasons, this solution\
    \ is preferable to the\n   implementation of Application Layer Gateways in network-layer\n\
    \   translators.\n   The other approach is network-layer IPv4/IPv6 translation\
    \ as\n   described in \"IPv4/IPv6 Translation\" [RFC6144] [RFC6145] [RFC6146]\n\
    \   [RFC6052] [RFC6147] [FTP64].  IPv4/IPv6 translation at the network\n   layer\
    \ is similar to IPv4/IPv4 translation in its advantages and\n   disadvantages.\
    \  It allows a network to provide two types of services\n   to IPv6-only hosts:\n\
    \   o  a relatively small set of systems may be configured with IPv4-\n      mapped\
    \ addresses, enabling stateless interoperation between IPv4-\n      only and IPv6-only\
    \ domains, each of which can use the other as\n      peers or servers, and\n \
    \  o  a larger set of systems with global IPv6 addresses, which can\n      access\
    \ IPv4 servers using stateful translation but which are\n      inaccessible as\
    \ peers or servers from the IPv4-only domain.\n   The former service is used today\
    \ in some university networks, and the\n   latter in some corporate and mobile\
    \ networks.  The stateless service\n   is naturally better suited for servers,\
    \ and the stateful service for\n   large numbers of client devices.  The latter\
    \ case occurs typically in\n   a public network access setting.  The two services\
    \ can of course also\n   be used together.  In this scenario, network-layer translation\n\
    \   provides for straightforward services for most applications crossing\n   the\
    \ IPv4-only/IPv6-only boundary.\n   One challenge in this model is that as long\
    \ as IPv4 addresses are\n   still shared, issues similar to those caused by IPv4\
    \ NATs will still\n   appear [shared-addressing-issues].  Another challenge relates\
    \ to\n   communications involving IPv4 referrals.  IPv4-literals within\n   certain\
    \ protocols and formats, such as HTML, will fail when passed to\n   IPv6-only\
    \ hosts since the host does not have an IPv4 address to\n   source the IPv4 communications\
    \ or an IPv4 route.  Measurements on the\n   public Internet show that literals\
    \ appear in a tiny but measurable\n   part of web pages [IPv6-only-experience],\
    \ though whether this poses a\n   practical problem is debatable.  If this poses\
    \ a particular problem\n   for the types of applications in use, proxy configurations\
    \ could be\n   modified to use a proxy for the traffic in question, hosts could\
    \ be\n   modified to understand how they can map IPv4-literals to IPv6\n   addresses,\
    \ or native dual stack could be employed instead.\n"
- title: 5.  Conclusions
  contents:
  - "5.  Conclusions\n   The fundamental recommendation is to turn on IPv6.  Section\
    \ 4\n   described four deployment models to do that, presented in rough order\n\
    \   of occurrence in the world at the time of this writing.  The first\n   two\
    \ models are the most widely deployed today.  All four models are\n   recommended\
    \ by the IETF, though, again, the first two models should\n   take priority where\
    \ they are applicable.\n   As noted in Section 1, variations occur in details,\
    \ and network\n   managers are ultimately in charge of choosing the best solution\
    \ for\n   their own case.  Benefits and challenges discussed in the previous\n\
    \   sections should be considered when weighing deployment alternatives.\n   The\
    \ transition mechanisms that operators have deployed have been a\n   mixed blessing;\
    \ native dual-stack deployments are not used to their\n   full extent if peers\
    \ have not upgraded, tunnel mechanisms that don't\n   follow the routing of the\
    \ underlying network have been problematic,\n   and translation has its faults\
    \ as well.  Nevertheless, operators have\n   successfully deployed very large\
    \ networks with these models.\n   Some additional considerations are discussed\
    \ below.\n   o  There is a tradeoff between ability to connect as many different\n\
    \      types of devices as possible and the ability to move forward with\n   \
    \   deployment as independently as possible.  As an example, native\n      dual\
    \ stack ensures the best connectivity but requires updates in\n      peer systems\
    \ before actual traffic flows over IPv6.  Conversely,\n      IPv6-only networks\
    \ are very sensitive to what kind of devices they\n      can support, but can\
    \ be deployed without any expectation of\n      updates on peer systems.\n   o\
    \  \"Greenfield\" networks and networks with existing IPv4 devices and\n     \
    \ users need to be treated differently.  In the latter case, turning\n      on\
    \ IPv6 in addition to IPv4 seems the rational choice.  In the\n      former case,\
    \ an IPv6-only model may make sense.\n   o  The right deployment model choices\
    \ also vary as time goes by.  For\n      instance, a tunneling solution that makes\
    \ sense today may become a\n      native dual-stack solution as the network and\
    \ devices in the\n      network evolve.  Or, an IPv6-only network becomes feasible\
    \ when a\n      sufficient fraction of client devices become IPv6-enabled.\n \
    \  No matter which deployment model is chosen, many of the important\n   implications\
    \ of IPv6 deployment are elsewhere within the network:\n   IPv6 needs to be taken\
    \ into account in network management systems and\n   operations, address assignments,\
    \ service agreements, firewalls,\n   intrusion detection systems, and so on.\n"
- title: 6.  Further Reading
  contents:
  - "6.  Further Reading\n   Various aspects of IPv6 deployment have been covered\
    \ in several\n   documents.  Of particular interest may be the basic dual-stack\n\
    \   definition [RFC4213], application aspects [RFC4038], deployment in\n   Internet\
    \ service provider networks [RFC4029] [RFC6036], deployment in\n   enterprise\
    \ networks [RFC4057] [RFC4852], IPv6-only deployment\n   [IPv6-only-experience],\
    \ and considerations in specific access\n   networks such as cellular networks\
    \ [RFC3314] [RFC3574] [RFC4215]\n   [v6-in-mobile] or 802.16 networks [RFC5181].\n\
    \   This document provides general guidance on IPv6 deployment models\n   that\
    \ have been found suitable for most organizations.  The purpose of\n   this document\
    \ is not to enumerate all special circumstances that may\n   warrant other types\
    \ of deployment models or the details of the\n   necessary transition tools. \
    \ Many of the special cases and details\n   have been discussed in the above documents.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   While there are detailed differences between\
    \ the security properties\n   and vulnerabilities between IPv4 and IPv6, in general\
    \ they provide a\n   very similar level of security and are subject to the same\
    \ threats.\n   With both protocols, specific security issues are more likely to\
    \ be\n   found at the practical level than in the specifications.  The\n   practical\
    \ issues include, for instance, bugs or available security\n   mechanisms on a\
    \ given product.  When deploying IPv6, it is important\n   to ensure that the\
    \ necessary security capabilities exist on the\n   network components even when\
    \ dealing with IPv6 traffic.  For\n   instance, firewall capabilities have often\
    \ been a challenge in IPv6\n   deployments.\n   This document has no impact on\
    \ the security properties of specific\n   IPv6 transition tools.  The security\
    \ considerations relating to the\n   transition tools are described in the relevant\
    \ documents, for\n   instance, [RFC4213], [RFC6147], [DS-lite], and [RFC6169].\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2663]  Srisuresh, P. and M. Holdrege, \"IP\
    \ Network Address\n              Translator (NAT) Terminology and Considerations\"\
    ,\n              RFC 2663, August 1999.\n   [RFC3484]  Draves, R., \"Default Address\
    \ Selection for Internet\n              Protocol version 6 (IPv6)\", RFC 3484,\
    \ February 2003.\n   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition\
    \ Mechanisms\n              for IPv6 Hosts and Routers\", RFC 4213, October 2005.\n\
    \   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n        \
    \      Internet Protocol\", RFC 4301, December 2005.\n   [RFC4380]  Huitema, C.,\
    \ \"Teredo: Tunneling IPv6 over UDP through\n              Network Address Translations\
    \ (NATs)\", RFC 4380,\n              February 2006.\n   [RFC5454]  Tsirtsis, G.,\
    \ Park, V., and H. Soliman, \"Dual-Stack Mobile\n              IPv4\", RFC 5454,\
    \ March 2009.\n   [RFC5555]  Soliman, H., \"Mobile IPv6 Support for Dual Stack\
    \ Hosts and\n              Routers\", RFC 5555, June 2009.\n   [RFC5565]  Wu,\
    \ J., Cui, Y., Metz, C., and E. Rosen, \"Softwire Mesh\n              Framework\"\
    , RFC 5565, June 2009.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [Baker.Shanghai]\n              Baker, F., \"\
    The view from IPv6 Operations WG (and we'll\n              talk about translation)\"\
    , Presentation in the China Mobile\n              Workshop on IPv6 Deployment\
    \ in Cellular Networks,\n              Shanghai, China, November 2009, <http://ipv6ws.arkko.com/\n\
    \              presentations/3GPP-IETF-V6OPS-Discussion.pdf>.\n   [DS-extra-lite]\n\
    \              Arkko, J., Eggert, L., and M. Townsley, \"Scalable\n          \
    \    Operation of Address Translators with Per-Interface\n              Bindings\"\
    , Work in Progress, February 2011.\n   [DS-lite]  Durand, A., Droms, R., Woodyatt,\
    \ J., and Y. Lee, \"Dual-\n              Stack Lite Broadband Deployments Following\
    \ IPv4\n              Exhaustion\", Work in Progress, August 2010.\n   [FTP64]\
    \    Beijnum, I., \"An FTP ALG for IPv6-to-IPv4 translation\",\n             \
    \ Work in Progress, March 2011.\n   [IPv6-only-experience]\n              Arkko,\
    \ J. and A. Keranen, \"Experiences from an IPv6-Only\n              Network\"\
    , Work in Progress, April 2011.\n   [L2-NAT]   Miles, D. and M. Townsley, \"Layer2-Aware\
    \ NAT\", Work\n              in Progress, March 2009.\n   [RFC1981]  McCann, J.,\
    \ Deering, S., and J. Mogul, \"Path MTU Discovery\n              for IP version\
    \ 6\", RFC 1981, August 1996.\n   [RFC2766]  Tsirtsis, G. and P. Srisuresh, \"\
    Network Address\n              Translation - Protocol Translation (NAT-PT)\",\
    \ RFC 2766,\n              February 2000.\n   [RFC2993]  Hain, T., \"Architectural\
    \ Implications of NAT\", RFC 2993,\n              November 2000.\n   [RFC3053]\
    \  Durand, A., Fasano, P., Guardini, I., and D. Lento, \"IPv6\n              Tunnel\
    \ Broker\", RFC 3053, January 2001.\n   [RFC3056]  Carpenter, B. and K. Moore,\
    \ \"Connection of IPv6 Domains\n              via IPv4 Clouds\", RFC 3056, February\
    \ 2001.\n   [RFC3314]  Wasserman, M., \"Recommendations for IPv6 in Third\n  \
    \            Generation Partnership Project (3GPP) Standards\",\n            \
    \  RFC 3314, September 2002.\n   [RFC3574]  Soininen, J., \"Transition Scenarios\
    \ for 3GPP Networks\",\n              RFC 3574, August 2003.\n   [RFC4029]  Lind,\
    \ M., Ksinant, V., Park, S., Baudot, A., and P.\n              Savola, \"Scenarios\
    \ and Analysis for Introducing IPv6 into\n              ISP Networks\", RFC 4029,\
    \ March 2005.\n   [RFC4038]  Shin, M-K., Hong, Y-G., Hagino, J., Savola, P., and\
    \ E.\n              Castro, \"Application Aspects of IPv6 Transition\",\n    \
    \          RFC 4038, March 2005.\n   [RFC4057]  Bound, J., \"IPv6 Enterprise Network\
    \ Scenarios\", RFC 4057,\n              June 2005.\n   [RFC4215]  Wiljakka, J.,\
    \ \"Analysis on IPv6 Transition in Third\n              Generation Partnership\
    \ Project (3GPP) Networks\", RFC 4215,\n              October 2005.\n   [RFC4798]\
    \  De Clercq, J., Ooms, D., Prevost, S., and F. Le Faucheur,\n              \"\
    Connecting IPv6 Islands over IPv4 MPLS Using IPv6\n              Provider Edge\
    \ Routers (6PE)\", RFC 4798, February 2007.\n   [RFC4852]  Bound, J., Pouffary,\
    \ Y., Klynsma, S., Chown, T., and D.\n              Green, \"IPv6 Enterprise Network\
    \ Analysis - IP Layer 3\n              Focus\", RFC 4852, April 2007.\n   [RFC4966]\
    \  Aoun, C. and E. Davies, \"Reasons to Move the Network\n              Address\
    \ Translator - Protocol Translator (NAT-PT) to\n              Historic Status\"\
    , RFC 4966, July 2007.\n   [RFC5181]  Shin, M-K., Han, Y-H., Kim, S-E., and D.\
    \ Premec, \"IPv6\n              Deployment Scenarios in 802.16 Networks\", RFC\
    \ 5181,\n              May 2008.\n   [RFC5211]  Curran, J., \"An Internet Transition\
    \ Plan\", RFC 5211,\n              July 2008.\n   [RFC5218]  Thaler, D. and B.\
    \ Aboba, \"What Makes For a Successful\n              Protocol?\", RFC 5218, July\
    \ 2008.\n   [RFC5844]  Wakikawa, R. and S. Gundavelli, \"IPv4 Support for Proxy\n\
    \              Mobile IPv6\", RFC 5844, May 2010.\n   [RFC5969]  Townsley, W.\
    \ and O. Troan, \"IPv6 Rapid Deployment on IPv4\n              Infrastructures\
    \ (6rd) -- Protocol Specification\",\n              RFC 5969, August 2010.\n \
    \  [RFC6036]  Carpenter, B. and S. Jiang, \"Emerging Service Provider\n      \
    \        Scenarios for IPv6 Deployment\", RFC 6036, October 2010.\n   [RFC6052]\
    \  Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n              Li,\
    \ \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052,\n              October\
    \ 2010.\n   [RFC6127]  Arkko, J. and M. Townsley, \"IPv4 Run-Out and IPv4-IPv6\n\
    \              Co-Existence Scenarios\", RFC 6127, May 2011.\n   [RFC6144]  Baker,\
    \ F., Li, X., Bao, C., and K. Yin, \"Framework for\n              IPv4/IPv6 Translation\"\
    , RFC 6144, April 2011.\n   [RFC6145]  Li, X., Bao, C., and F. Baker, \"IP/ICMP\
    \ Translation\n              Algorithm\", RFC 6145, April 2011.\n   [RFC6146]\
    \  Bagnulo, M., Matthews, P., and I. Beijnum, \"Stateful\n              NAT64:\
    \ Network Address and Protocol Translation from IPv6\n              Clients to\
    \ IPv4 Servers\", RFC 6146, April 2011.\n   [RFC6147]  Bagnulo, M., Sullivan,\
    \ A., Matthews, P., and I. Beijnum,\n              \"DNS64: DNS extensions for\
    \ Network Address Translation\n              from IPv6 Clients to IPv4 Servers\"\
    , RFC 6147, April 2011.\n   [RFC6169]  Krishnan, S., Thaler, D., and J. Hoagland,\
    \ \"Security\n              Concerns with IP Tunneling\", RFC 6169, April 2011.\n\
    \   [networkworld.youtube]\n              Marsan, C., \"YouTube support of IPv6\
    \ seen in dramatic\n              traffic spike\", Network World article, February\
    \ 2010,\n              <http://www.networkworld.com/news/2010/\n             \
    \ 020110-youtube-ipv6.html>.\n   [shared-addressing-issues]\n              Ford,\
    \ M., Boucadair, M., Durand, A., Levis, P., and P.\n              Roberts, \"\
    Issues with IP Address Sharing\", Work in\n              Progress, March 2011.\n\
    \   [v6-in-mobile]\n              Koodli, R., \"Mobile Networks Considerations\
    \ for IPv6\n              Deployment\", Work in Progress, May 2011.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   The authors would like to thank the many people\
    \ who have engaged in\n   discussions around this topic over the years.  Some\
    \ of the material\n   in this document comes originally from Fred Baker's presentation\
    \ in a\n   workshop in Shanghai [Baker.Shanghai].  In addition, the authors\n\
    \   would like to thank Mark Townsley with whom Jari Arkko wrote an\n   earlier\
    \ document [RFC6127].  Brian Carpenter submitted an in-depth\n   review and provided\
    \ significant new text.  Cameron Byrne provided\n   significant feedback on the\
    \ key recommendations in this memo.  The\n   authors would also like thank Dave\
    \ Thaler, Alain Durand, Randy Bush,\n   and Dan Wing, who have always provided\
    \ valuable guidance in this\n   field.  Finally, the authors would like to thank\
    \ Suresh Krishnan,\n   Fredrik Garneij, Mohamed Boucadair, Remi Despres, Kurtis\
    \ Lindqvist,\n   Shawn Emery, Dan Romascanu, Tim Polk, Ralph Droms, Sean Turner,\
    \ Tina\n   Tsou, Nevil Brownlee, and Joel Jaeggli, who have commented on early\n\
    \   versions of this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jari Arkko\n   Ericsson\n   Jorvas  02420\n   Finland\n\
    \   EMail: jari.arkko@piuha.net\n   Fred Baker\n   Cisco Systems\n   Santa Barbara,\
    \ California  93117\n   USA\n   EMail: fred@cisco.com\n"
