- title: __initial_text__
  contents:
  - "                         Source Demand Routing:\n        Packet Format and Forwarding\
    \ Specification (Version 1).\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   The purpose of SDRP is to support source-initiated selection\
    \ of\n   routes to complement the route selection provided by existing routing\n\
    \   protocols for both inter-domain and intra-domain routes. This\n   document\
    \ refers to such source-initiated routes as \"SDRP routes\".\n   This document\
    \ describes the packet format and forwarding procedure\n   for SDRP.  It also\
    \ describes procedures for ascertaining feasibility\n   of SDRP routes.  Other\
    \ components not described here are routing\n   information distribution and route\
    \ computation.  This portion of the\n   protocol may initially be used with manually\
    \ configured routes. The\n   same packet format and processing will be usable\
    \ with dynamic route\n   information distribution and computation methods under\
    \ development.\n   The packet forwarding protocol specified here makes minimal\n\
    \   assumptions about the distribution and acquisition of routing\n   information\
    \ needed to construct the SDRP routes.  These minimal\n   assumptions are believed\
    \ to be sufficient for the existing Internet.\n   Future components of the SDRP\
    \ protocol will extend capabilities in\n   this area and others in a largely backward-compatible\
    \ manner.\n   This version of the packet forwarding protocol sends all packets\
    \ with\n   the complete SDRP route in the SDRP header. Future versions will\n\
    \   address route setup and other enhancements and optimizations.\n"
- title: 2.  Model of operations
  contents:
  - "2.  Model of operations\n   An Internet can be viewed as a collection of routing\
    \ domains\n   interconnected by means of common subnetworks, and Border Routers\n\
    \   (BRs) attached to these subnetworks.  A routing domain itself may be\n   composed\
    \ of further subnetworks, routers interconnecting these\n   subnetworks, and hosts.\
    \  This document assumes that there is some\n   type of routing present within\
    \ the routing domain, but it does not\n   assume that this intra-domain routing\
    \ is coordinated or even\n   consistent.\n   For the purposes of this discussion,\
    \ a BR belongs to only one domain.\n   A pair of BRs, each belonging to a different\
    \ domain, but attached to\n   a common subnetwork, form an inter-domain connection.\
    \ By definition,\n   packets that traverse multiple domains must traverse BRs\
    \ of these\n   domains.  Note that a single physical router may act as multiple\
    \ BRs\n   for the purposes of this model.\n   A pair of domains is said to be\
    \ adjacent if there is at least one\n   pair of BRs, one in each domain, that\
    \ form an inter-domain\n   connection.\n   Each domain has a globally unique identifier,\
    \ called a Domain\n   Identifier (DI). All the BRs within a domain need to know\
    \ the DI\n   assigned to the domain.  Management of the DI space is outside the\n\
    \   scope of this document.  This document assumes that Autonomous System\n  \
    \ (AS) numbers are used as DIs.  A domain path (or simply path) refers\n   to\
    \ a list of DIs such as might be taken from a BGP AS path [1, 2, 3]\n   or an\
    \ IDRP RD path [4].  We refer to a route as the combination of a\n   network address\
    \ and domain paths. The network addresses are\n   represented by NLRI (Network\
    \ Layer Reachability Information) as\n   described in [3].\n   This document assumes\
    \ that the routing domains are congruent to the\n   autonomous systems. Thus,\
    \ within the content of this document, the\n   terms autonomous system and routing\
    \ domain can be used\n   interchangeably.\n   An application residing at a source\
    \ host inside a domain,\n   communicates with a destination host at another domain.\
    \  An\n   intermediate router in the path from the source host to the\n   destination\
    \ host may decide to forward the packet using SDRP.  It can\n   do this by encapsulating\
    \ the entire IP packet from the source host in\n   an SDRP packet.  The router\
    \ that does this encapsulation is called\n   the \"encapsulating router.\"\n \
    \  2.1 SDRP routes\n      A component in an SDRP route is either a DI (AS number)\
    \ or an IP\n      address.  Thus, an SDRP route is defined as a sequence of domains\n\
    \      and routers, syntactically expressed as a sequence of DIs and IP\n    \
    \  addresses.  Thus an SDRP route is a collection of source routed\n      hops.\n\
    \      Each component of the SDRP route is called a \"hop.\"  The packet\n   \
    \   traverses each component of the SDRP route exactly once.  When a\n      router\
    \ corresponding to one of the components of the SDRP route\n      receives the\
    \ packet from a router corresponding to the previous\n      component of the SDRP\
    \ route, the router will process the packet\n      according to the SDRP forwarding\
    \ rules in this packet.  The next\n      component of the SDRP route that this\
    \ router will forward the\n      packet to, is called the \"next hop,\" with respect\
    \ to this router\n      and component of the SDRP route.\n      An SDRP hop can\
    \ either be a \"strict\" source routed hop, or a\n      \"loose\" source routed\
    \ hop.  A strict source route hop is one in\n      which, if the next hop specified\
    \ is a DI, refers to an immediately\n      adjacent domain, and the packet will\
    \ be forwarded directly to a\n      route within the domain; if the next hop specified\
    \ is an IP\n      address, refers to an immediately adjacent router on a common\n\
    \      subnetwork.  Any other kind of a source route hop is a loose\n      source\
    \ route hop.\n      A route is a \"strict source route\" if the current hop being\n\
    \      executed is processed as a strict source route hop.  Likewise, a\n    \
    \  route is a \"loose source route\" if the current hop being executed\n     \
    \ is processed as a loose source route hop.\n      It is assumed that each BR\
    \ participates in the intra-domain\n      routing protocol(s) (IGPs) of the domain\
    \ to which the BR belongs.\n      Thus, a BR may forward a packet to any other\
    \ BR in its own domain\n      using intra-domain routing procedures.  Forwarding\
    \ a packet\n      between two BRs that form an inter-domain connection requires\n\
    \      neither intra-domain nor the inter-domain routing procedures (an\n    \
    \  inter-domain connection is a common Layer 2 subnetwork).\n      It is also\
    \ assumed that all routers participate in the intra-\n      domain routing protocol(s)\
    \ (IGPs) of the domain to which they\n      belong.\n      While SDRP does not\
    \ require that all domains have a common network\n      layer protocol, all the\
    \ BRs in the domains along a given SDRP\n      route are required to support a\
    \ common network layer.  This\n      document specifies SDRP operations when that\
    \ common network layer\n      protocol is IP ([5]).\n      While this document\
    \ requires all the BRs to support IP, the\n      document does not preclude a\
    \ BR from additionally supporting other\n      network layer protocols as well\
    \ (e.g., CLNP, IPX, AppleTalk).  If\n      a BR supports multiple network layers,\
    \ then for the purposes of\n      this model, the BR must maintain multiple Forwarding\
    \ Information\n      Bases (FIBs), one per network layer.\n   2.2 SDRP encapsulation\n\
    \      Forwarding an IP packet along an SDRP route is accomplished by\n      encapsulating\
    \ the entire packet in an SDRP packet.  An SDRP packet\n      consists of the\
    \ SDRP header followed by the SDRP data.  The SDRP\n      header carries the SDRP\
    \ route constructed by the domain that\n      originated the SDRP packet.  The\
    \ SDRP data carries the original\n      packet that the source domain decided\
    \ to forward via SDRP.\n      An SDRP packet is carried across domains as the\
    \ data portion of an\n      IP packet with protocol number 42.\n      This document\
    \ refers to the IP header of a packet that carries an\n      SDRP packet as the\
    \ delivery IP header (or just the delivery\n      header).  This document refers\
    \ to the packet carried as SDRP data\n      s the payload packet, and the IP header\
    \ of the payload packet is\n      the payload header.\n      Thus, an SDRP Packet\
    \ can be represented as follows:\n                +-------------------+--------------+-------------------\n\
    \                | Delivery header   |  SDRP header |  SDRP data\n           \
    \     |    (IP header)    |              | (Payload packet)\n                +-------------------+--------------+--------------------\n\
    \      Each SDRP route may have an MTU associated with it. An MTU of an\n    \
    \  SDRP route is defined as the maximum length of the payload packet\n      that\
    \ can be carried without fragmentation of an SDRP packet.  This\n      means that\
    \ the SDRP MTU as seen by the transport layer and\n      applications above the\
    \ transport layer is the actual link MTU less\n      the length of the Delivery\
    \ and SDRP headers.  Procedures for MTU\n      discovery are specified in Section\
    \ 9.\n   2.3 D-FIB\n      It is assumed that a BR participates in either BGP or\
    \ IDRP.  A BR\n      participating in SDRP augments its FIBs with a D-FIB that\
    \ contains\n      routes to domains.  A route to a domain is a triplet <DI, Next-\n\
    \      Hop, NLRI>, where DI depicts a destination domain, Next-Hop\n      depicts\
    \ the IP address of the next-hop BR, and NLRI depicts the\n      set of reachable\
    \ destinations within the destination domain.  D-\n      FIBs are constructed\
    \ based on the information obtained from either\n      BGP, IDRP, or configuration\
    \ information.\n      An SDRP packet is forwarded across multiple domains by utilizing\n\
    \      the forwarding databases (both FIBs and D-FIBs) maintained by the\n   \
    \   BRs.\n      The operational status of SDRP routes is monitored via passive\n\
    \      (Error Reporting) and active (Route Probing) mechanisms. The Error\n  \
    \    Reporting mechanism provides the originator of the SDRP route with\n    \
    \  a failure notification.  The Probing mechanism provides the\n      originator\
    \ of the SDRP route with confirmation of a route's\n      feasibility.\n"
- title: 3.  SDRP Packet format
  contents:
  - "3.  SDRP Packet format\n   The total length of an SDRP packet (header plus data)\
    \ can be\n   determined from the information carried in the delivery IP header.\n\
    \   The length of the payload packet can be determined from the total\n   length\
    \ of an SDRP packet and the length of its SDRP Header.\n   The following describes\
    \ the format of an SDRP packet.\n       0                   1                \
    \   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      | Ver |D|S|P|   |   Hop Count   |SourceProtoType|  Payload Type |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                   Source Route Identifier                     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Target Router                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                            Prefix                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |  PrefixLength |  Notification |SrcRouteLength |   NextHopPtr  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                Source Route ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                Payload ....\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Version and Flags  (1 octet)\n      The SDRP version number and control\
    \ flags are coded in the first\n      octet.  Bit 0 is the most significant bit,\
    \ bit 7 is the least\n      significant bit.\n         Version (bits 0 through\
    \ 2)\n            The first three bits  contain the Version field indicating\n\
    \            the version number of the protocol.  The value of this field\n  \
    \          is set to 1.\n         Flags (bits 3 through 7)\n            Data packet/Control\
    \ packet (bit 3)\n               If the bit is set to 1, then the packet carries\
    \ data.\n               Otherwise, the packet carries control information.\n \
    \           Loose/Strict Source Route (bit 4)\n               The Loose/Strict\
    \ Source Route indicator is used when\n               making a forwarding decision\
    \ (see Section 5.2).  If this\n               bit is set to 1, it indicates that\
    \ the next hop is a\n               Strict Source Route Hop.  If this bit is set\
    \ to 0, it\n               indicates that the next hop is a Loose Source Route.\n\
    \            Probe Indicator (bit 5)\n               The Probe Indicator is used\
    \ by the originator of the\n               route to request verification of the\
    \ route's feasibility\n               (see Sections 4 and 7.1).  If this bit is\
    \ set to 1, it\n               indicates that the originator is probing the route.\
    \  This\n               bit should always be set to 0 for control packets.\n \
    \     Hop Count (1 octet)\n         The Hop Count field carries the maximum number\
    \ of routers an\n         SDRP data packet may traverse. It is decremented by\
    \ 1 as an\n         SDRP data packet traverses a router which forwards the packet\n\
    \         using SDRP forwarding. Once the Hop Count field reaches the\n      \
    \   value of 0, the router should discard the data packet and\n         generate\
    \ a control packet (see Section 5.2.6).  A router that\n         receives a packet\
    \ with a Hop Count value of 0 should discard\n         the data packet, and generate\
    \ a control packet (see Section\n         5.2.6).\n      Source Route Protocol\
    \ Type (1 octet)\n         The Source Route Protocol Type fields indicates the\
    \ type of\n         information that appears in the source route.  The value 1\
    \ in\n         this field indicates that the contents of the source route are\n\
    \         as described in this document and indicates an Explicit Source\n   \
    \      Route.  The value 2 in this field indicates a Route Setup.  The\n     \
    \    syntax of the source route for this value is identical to a\n         value\
    \ of 1, but also has additional semantics which are defined\n         in other\
    \ documents.\n      Payload Protocol Type (1 octet)\n         The Payload Protocol\
    \ Type field indicates the protocol type of\n         the payload.  If the payload\
    \ is an IP datagram, then this field\n         should contain the value 1.\n \
    \        Note that this Payload Protocol Type is not the same as the IP\n    \
    \     protocol type[5,7].\n      Source Route Identifier (4 octets)\n        \
    \ The BR  that originates the SDRP packet should insert a 32 bit\n         value\
    \ in this field which will serve as an identifier for the\n         source route.\
    \  This value needs to be  unique  only in the\n         context of the originating\
    \ BR.\n      Target Router (4 octets)\n         This field is meaningful only\
    \ in control packets.\n         The Target Router field contains one of the IP\
    \ addresses of the\n         router that originated the SDRP packet that triggered\
    \ the\n         control packet to be returned.\n      Prefix (4 octets)\n    \
    \     The Prefix field contains an IP address prefix.  Only the\n         number\
    \ of bits specified in the Prefix Length are significant.\n         The Prefix\
    \ field is used to prevent routing loops when using\n         BGP or IDRP to route\
    \ to the next AS in a loose source route\n         (see Section 4).\n      Prefix\
    \ Length (1 octet)\n         The Prefix Length field indicates the length in bits\
    \ of the IP\n         address prefix.  A length of zero indicates a prefix that\n\
    \         matches all IP addresses.\n            Notification Code (1 octet)\n\
    \               This field is only meaningful in control packets.  In\n      \
    \         data packets, this field is transmitted as zero, and\n             \
    \  should be ignored on receipt.\n               This document defines the following\
    \ values for the\n               Notification Code:\n               1 - No Route\
    \ Available\n               2 - Strict Source Route Failed\n               3 -\
    \ Transit Policy Violation\n               4 - Hop Count Exceeded\n          \
    \     5 - Probe Completed\n               6 - Unimplemented SDRP version\n   \
    \            7 - Unimplemented Source Route Protocol Type\n               8 -\
    \ Setup Request Rejected\n      Source Route Length (1 octet)\n         The Source\
    \ Route Length field indicates the length in 32 bit\n         words of the domain\
    \ level source route carried in the SDRP\n         Header.\n      Next Hop Pointer\
    \ (1 octet)\n         The Next Hop Pointer field indicates the offset of the high-\n\
    \         order byte of the next hop along the route that the packet has\n   \
    \      to be forwarded.  This offset is relative to the start of the\n       \
    \  Source Route field; so if the value of the Next Hop Pointer\n         field\
    \ equals the value of the Source Route Length field, then\n         the entire\
    \ source route has been completely traversed.  All\n         other source routes\
    \ are said to be incompletely traversed.\n      Source Route (variable)\n    \
    \     The components of the source route are syntactically IP\n         addresses.\n\
    \         An IP address from network 128.0.0.0 is used to encode a next\n    \
    \     hop that is a domain.  The least significant two octets contain\n      \
    \   the DI, which is an Internet Autonomous System number.\n       0         \
    \          1                   2                   3\n       0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      128      .       0       |             D. I.             |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \   An IP address from the network 127.0.0.0 is used to encode\n         characteristics\
    \ of the source route.  The least significant\n         three octets are used\
    \ as a Source Route Change field.\n       0                   1              \
    \     2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |      127      |          Source     Route     Change          |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \   Source Route Change (3 octets)\n            Loose/Strict Source Route Change\
    \ (bit 1)\n               The Loose/Strict Source Route Change bit reflects a\
    \ new\n               value of the Loose/Strict Source Route bit in the SDRP\n\
    \               header.  The value of the Loose/Strict Source Route\n        \
    \       Change bit is copied into the Loose/Strict Source Route\n            \
    \   bit in the SDRP header when a Source Route Change field\n               is\
    \ encountered in processing an SDRP packet.\n            The rest of the Source\
    \ Route Change field is transmitted as\n            zero, and should be ignored\
    \ on receipt.\n      Payload (variable)\n         The Payload field carries the\
    \ datagram originated by the end-\n         system within the domain that constructed\
    \ the SDRP packet. The\n         Payload field forms the data portion of the SDRP\
    \ packet.  In a\n         control packet this field may be empty or may carry\
    \ the payload\n         header of the packet that triggered the control message\
    \ (see\n         5.2.5).  Note that there is no padding between the Source Route\n\
    \         and the Payload, and that the Payload may start at any\n         arbitrary\
    \ octet boundary.\n"
- title: 4.  Originating SDRP Data packets
  contents:
  - "4.  Originating SDRP Data packets\n   This document assumes that a router that\
    \ originates SDRP packets is\n   preconfigured with a set of SDRP routes.  Procedures\
    \ for constructing\n   these routes are outside the scope of this document.  SDRP\
    \ packet\n   forwarding may be deployed initially without additional routing\n\
    \   protocol support.\n   An application on a source host generates packets that\
    \ must be\n   delivered to a given destination.  The packet traverses the Internet\n\
    \   by following normal hop-by-hop routing information.  An intermediate\n   router\
    \ in the path between the source host and the destination host\n   may decide\
    \ to forward some of these packets via SDRP.\n   When this router receives an\
    \ IP datagram, the router uses the\n   information in the datagram and the local\
    \ criteria to determine\n   whether the datagram should be forwarded along a particular\
    \ SDRP\n   route.  Associated with each set of criteria is a set of one or more\n\
    \   SDRP routes that should be used to route matching packets.  The exact\n  \
    \ nature of the criteria is a local matter.  The only restrictions this\n   document\
    \ places on the applicability of SDRP routes is that an IP\n   datagram that contains\
    \ a strict source route should not be forwarded\n   along an SDRP route, that\
    \ SDRP encapsulation should never be applied\n   to an SDRP packet, and that if\
    \ SDRP is used with inter-domain routes,\n   the destination domain must also\
    \ run SDRP.\n   If the router decides to forward a datagram along a particular\
    \ SDRP\n   route, the router constructs the SDRP packet by placing the original\n\
    \   datagram into the Payload field of the SDRP packet and constructing\n   the\
    \ SDRP header based on the selected SDRP route.  The Next Hop\n   pointer is set\
    \ to 0 (the first entry in the Source Route field of the\n   SDRP packet).  The\
    \ value of the Time To Live field in the payload\n   header should be copied into\
    \ the Hop Count field of the SDRP header.\n   Even if we assume that interior\
    \ routing is loop free, it is possible,\n   either due to the state of inter-domain\
    \ routing or due to other SDRP\n   routers, that a domain level source route that\
    \ does not terminate\n   with the intended destination domain may lead a packet\
    \ into a routing\n   loop.  Originating SDRP routers that wish to insure that\
    \ this does\n   not occur should include a final domain level hop of the\n   destination's\
    \ domain, i.e. specify the SDRP route as <DI1, DI2, DI3>\n   instead of <DI1,\
    \ DI2>, if the destination host is in domain DI3.  The\n   means for determining\
    \ the DI of the destination domain is outside of\n   the scope of this document.\n\
    \   Similarly, when using SDRP for interior routing, it is possible that\n   the\
    \ source route does not coincide with IGP routing.  In this case,\n   one means\
    \ of preventing a loop is to specify the last hop router's IP\n   address as the\
    \ last address within the source route.  The\n   encapsulating router can do this\
    \ by specifying the source route to\n   reach destination host IP3 as <IP1, IP2,\
    \ IP3> instead of <IP1, IP2>.\n   The source address field in the delivery header\
    \ should contain an IP\n   address of the router. The value of the Don't Fragment\
    \ flag of the\n   delivery header is copied from the Don't Fragment flag of the\
    \ payload\n   header.  The value of the Type Of Service field in the delivery\n\
    \   header is copied from the Type Of Service field in the payload\n   header.\
    \  If the payload header contains an IP security option, that\n   option is replicated\
    \ as an option in the delivery header.  All other\n   IP options in the payload\
    \ header must be ignored.\n   If the SDRP route that is used is learned from IDRP,\
    \ then the TOS\n   corresponding to this route is copied into the TOS field in\
    \ the\n   delivery header.\n   The resulting SDRP packet is then forwarded as\
    \ described in Section\n   5.2.2.\n   If the encapsulating router decides to forward\
    \ a datagram along a\n   particular SDRP route that has an MTU smaller than the\
    \ length of the\n   datagram, then if the payload header has the Don't Fragment\
    \ flag set\n   to 1, the router should generate an ICMP Destination Unreachable\n\
    \   message with a code meaning \"fragmentation needed and DF set\" in\n   accordance\
    \ with [6].  The ICMP message must be sent to the original\n   source host.  The\
    \ router should then discard the original datagram.\n   If a router has learned\
    \ an MTU for a particular SDRP route, either\n   via ICMP messages or via configuration\
    \ information, and it determines\n   that an SDRP packet must be fragmented before\
    \ transmission, then it\n   first calculates the the effective MTU seen by the\
    \ payload packet.\n   If the effective MTU is greater than or equal to 512 bytes,\
    \ the\n   router SHOULD first fragment the payload packet using normal IP\n  \
    \ fragmentation.  SDRP packets are then constructed for each fragment,\n   as\
    \ describe above.  Otherwise, the router should first form the SDRP\n   packet,\
    \ and then fragment it.\n   A router may use locally originated  SDRP packets\
    \ to verify the\n   feasibility of its SDRP routes. To do this the router sets\
    \ the value\n   of the Probe Indicator field in the SDRP packet to 1.  Receipt\
    \ of an\n   SDRP control packet by the originating router with the \"Probe\n \
    \  Completed\" Notification Code (see Section 7.1) indicates feasibility\n   of\
    \ the SDRP route.  Persistent lack of SDRP control packets with the\n   \"Probe\
    \ Completed\" Notification Code should be used as an indication\n   that the associated\
    \ SDRP route is not feasible.\n"
- title: 5.  Processing SDRP packets
  contents:
  - "5.  Processing SDRP packets\n   We say that a router receives an SDRP packet\
    \ if the destination\n   address field in the delivery header of the packet arriving\
    \ at the\n   router contains one of the IP addresses of the router.\n   When a\
    \ router receives an SDRP packet, the router extracts the Source\n   Route Protocol\
    \ field from the SDRP header.\n"
- title: 5.1 Supporting Transit Policies
  contents:
  - "5.1 Supporting Transit Policies\n   A router may be able to verify that a packet\
    \ that it is given to\n   forward does not violate any of the transit policies\
    \ that may exist,\n   of the domain to which the router belongs.  Specific verification\n\
    \   mechanisms are a matter that is local to the router and are outside\n   the\
    \ scope of this document.\n   The restriction on the verification mechanisms is\
    \ that they may take\n   into account only the contents of the SDRP header, the\
    \ payload\n   header, and transport protocol header of the payload packet.\n \
    \  With SDRP a domain may enforce its transit policies by applying\n   filters\
    \ based on the information present in the IP Header. For\n   example a router\
    \ may initially carefully filter all SDRP traffic from\n   all possible sources.\
    \ A filter that allows certain SDRP traffic from\n   selected sources to pass\
    \ through the router could then be installed\n   dynamically to pass similar types\
    \ of traffic.  Thus, by caching\n   appropriate filtering information, a transit\
    \ domain can efficiently\n   support transit policies.  Other mechanisms for supporting\
    \ transit\n   policy and implementation techniques are not precluded by this\n\
    \   document.\n   If the router detects that the SDRP packet violates a domain's\n\
    \   transit policy it sends back an SDRP control packet to the\n   encapsulating\
    \ router and discards the violating packet.\n   SDRP control packets are not subject\
    \ to transit policies.\n   If a router does not discard an SDRP packet due to\
    \ a transit policy\n   violation, then the router attempts to forward it as specified\
    \ in\n   Section 5.2.\n"
- title: 5.2 Forwarding SDRP packets
  contents:
  - "5.2 Forwarding SDRP packets\n   Procedures for forwarding of an SDRP packet depend\
    \ on\n      a) whether the router has the routing information needed to\n    \
    \     forward the packet;\n      b) whether the SDRP route has been completely\
    \ traversed;\n      c) whether the SDRP route is strict or loose, and\n      d)\
    \ whether the packet is a data or control packet.\n   When forwarding an SDRP\
    \ packet (either data or control) a router\n   should not modify the following\
    \ fields in the delivery header:\n      a) Source Address\n      b) Don't Fragment\
    \ flag\n   If the Source Route Protocol Type of a packet indicates a Route Setup\n\
    \   and the router does not or cannot support setup, the router MAY send\n   the\
    \ encapsulating router a control packet with a Notification Code of\n   Setup\
    \ Request Rejected.  It MAY then modify the data packet so that\n   the Source\
    \ Route Protocol Type is Explicit Source Route and the Probe\n   Indicator bit\
    \ is 0, then forwards the packet as described below.  The\n   router MAY send\
    \ notification of a failed setup request only\n   periodically.  Alternately,\
    \ a router MAY silently drop the Route\n   Setup packet.\n"
- title: 5.2.1 Forwarding algorithm pseudo-code
  contents:
  - "5.2.1 Forwarding algorithm pseudo-code\n   The following pseudo-code gives an\
    \ overview of the SDRP forwarding\n   algorithm.  Please consult the text below\
    \ for more details.\n   Let LOCAL_DI be the DI of the domain of the local system,\
    \ let\n   NEXT_HOP be the next hop in the source route if the source route has\n\
    \   not been completely traversed, let NEXT_DI be the DI portion of\n   NEXT_HOP\
    \ if NEXT_HOP is from network 128.0.0.0, and let NEXT_ROUTER\n   be the IP address\
    \ of the next router if the packet is to be forwarded\n   using SDRP.  We say\
    \ that NEXT_DI is adjacent if the local domain is\n   adjacent to the domain that\
    \ has NEXT_DI as its DI, and we say that\n   NEXT_ROUTER is adjacent if it represents\
    \ an IP address of a router\n   that shares a link with the current router.  Normal\
    \ IP forwarding\n   refers to forwarding that can be accomplished using FIBs constructed\n\
    \   via BGP, IDRP or one or more IGPs.\n   The pseudo code requires sending control\
    \ messages in a number of\n   places.  All such control messages must be sent\
    \ to the encapsulating\n   router, which is indicated in the source address of\
    \ the delivery\n   header.  Note too that all intermediate SDRP routers that process\
    \ an\n   SDRP packet must ensure that the source address of the delivery\n   header\
    \ is left untouched, since this source address is the address of\n   the encapsulating\
    \ router to which any control messages must be sent.\n     if the packet is a\
    \ control packet begin\n       if the Target Router equals an address assigned\
    \ to the\n         local router begin\n         remove the delivery header\n \
    \        process information carried in the control packet\n         return\n\
    \       end if\n       if the packet can be forwarded using normal IP forwarding\
    \ begin\n         set Next Hop Pointer to Source Route Length\n         forward\
    \ the packet using normal IP forwarding\n         return\n       end if\n    \
    \ end if\n     if the version field is not 1 begin\n       if the packet is a\
    \ data packet begin\n         generate a control packet with \"Unimplemented SDRP\
    \ version\"\n       end if\n       discard the packet\n       return\n     end\
    \ if\n     if the source route protocol type is not 1 begin\n       if the packet\
    \ is a data packet begin\n         generate a control packet with \"Unimplemented\
    \ source route\n           protocol type\"\n       end if\n       discard the\
    \ packet\n       return\n     end if\n     if the Hop Count field is greater than\
    \ 0 begin\n       decrement the Hop Count field\n     end if\n     if the Hop\
    \ Count field is 0 begin\n       if the packet is a data packet begin\n      \
    \   generate a control packet with \"Hop Count Exceeded\"\n      end if\n    \
    \   discard the packet\n       return\n     end if\n     if the packet is a data\
    \ packet begin\n       if the packet violates transit policy begin\n         generate\
    \ a control packet with \"Transit Policy Violation\"\n         discard the data\
    \ packet\n         return\n       end if\n     end if\n     set mode to NONE\n\
    \     set advanced to FALSE\n     if Next Hop Ptr does not equal Source Route\
    \ Length begin\n       set NEXT_HOP to the next hop in the source route\n    \
    \   while mode equals NONE begin\n         if NEXT_HOP is from network 127.0.0.0\
    \ begin\n           set the Loose/Strict Source Route bit equal to\n         \
    \      the Loose/Strict Source Route Change bit\n         else if NEXT_HOP is\
    \ from network 128.0.0.0 begin\n           set NEXT_DI to the least significant\
    \ two octets of NEXT_HOP\n           if NEXT_DI is not equal to LOCAL_DI begin\n\
    \             set mode to DOMAIN\n           end if\n         else if NEXT_HOP\
    \ does not equal an address assigned to the\n           local router begin\n \
    \          set mode to LOCAL\n         end if\n         if mode equals NONE begin\n\
    \           set advanced to TRUE\n           increment the Next Hop Pointer field\n\
    \           if Next Hop Pointer equals Source Route Length begin\n           \
    \  set mode to COMPLETE\n           else\n             set NEXT_HOP to the next\
    \ hop in the source route\n           end if\n         end if\n       end while\n\
    \     end if\n     if mode equals DOMAIN begin\n       set route to NONE\n   \
    \    if the source route is loose begin\n         if not advanced begin\n    \
    \       find the route, if any, based on Prefix and Prefix Length\n          \
    \ if the route is an aggregate formed at the local router begin\n            \
    \ set route to NONE\n           end if\n         end if\n         if route equals\
    \ NONE begin\n           select a BGP or IDRP route, if any, with a path that\
    \ includes\n             NEXT_DI and is not an aggregate formed at the local router\n\
    \           if route equals NONE begin\n             if the packet is a data packet\
    \ begin\n              generate a control packet with \"No Route Available\"\n\
    \             end if\n             discard the packet\n             return\n \
    \          end if\n           copy the NLRI from the route to the Prefix and Prefix\
    \ Length\n         end if\n         if the route is an IDRP route begin\n    \
    \       set appropriate TOS in delivery header\n         end if\n         set\
    \ NEXT_ROUTER from the route\n       else\n         set NEXT_ROUTER from the routing\
    \ information for NEXT_DI\n           using the D-FIB\n         if route equals\
    \ NONE begin\n           if the packet is a data packet begin\n             generate\
    \ a control packet with \"No Route Available\"\n           end if\n          \
    \ discard the packet\n           return\n         end if\n         if NEXT_DI\
    \ is not adjacent begin\n           if the packet is a data packet begin\n   \
    \          generate a control packet with \"Strict Source Route Failed\"\n   \
    \        end if\n           discard the packet\n           return\n         end\
    \ if\n       end if\n       end if\n     end if\n     if mode equals LOCAL begin\n\
    \       set NEXT_ROUTER equal to NEXT_HOP\n       if the source route is strict\
    \ and NEXT_ROUTER is not\n         adjacent begin\n         if the packet is a\
    \ data packet begin\n           generate a control packet with \"Strict Source\
    \ Route Failed\"\n         end if\n         discard the packet\n         return\n\
    \       end if\n     end if\n     if mode equals LOCAL or mode equals DOMAIN begin\n\
    \       set the destination address of the delivery header equal\n         to\
    \ NEXT_ROUTER\n       checksum the delivery header\n       route packet to NEXT_ROUTER\
    \ using normal IP forwarding\n       return\n     end if\n     if the packet is\
    \ a control packet begin\n       discard the packet\n     end if\n     remove\
    \ the delivery header and the SDRP Header\n     if there is no normal IP route\
    \ to the payload destination begin\n       generate a control packet with \"No\
    \ Route Available\"\n       discard the data packet\n       return\n     end if\n\
    \     forward the payload using normal IP forwarding\n     if the probe bit is\
    \ set begin\n       generate a control packet with \"Probe Completed\"\n     end\
    \ if\n"
- title: 5.2.2 Handling an SDRP control packet.
  contents:
  - "5.2.2 Handling an SDRP control packet.\n   An SDRP control packet is indicated\
    \ by 0 in the Data packet/Control\n   packet bit in the Flags field in the SDRP\
    \ Header.\n   If the Target Router field of the received SDRP packet contains\
    \ an IP\n   address that is assigned to the router that received this SDRP\n \
    \  packet, then the router should use the information carried in the\n   Notification\
    \ Code field, the Source Route Identifier field and the\n   information carried\
    \ in the Payload field to update the status of its\n   SDRP routes. Details of\
    \ such procedures are described in Section 7.\n   Otherwise, the router checks\
    \ whether it can forward the packet to the\n   router specified in the Target\
    \ Router field by using the routing\n   information present in its local FIB.\
    \ If forwarding is possible then\n   the local system sets the destination address\
    \ of the delivery header\n   to the address specified in the Target Router field,\
    \ and hands the\n   packet off for normal IP forwarding.  If normal IP forwarding\
    \ is\n   impossible then the packet may be forwarded in the same manner as an\n\
    \   SDRP data packet (described below) but with the following exceptions.\n  \
    \    - Control packets are not subject to transit policies.\n      - In no case\
    \ should a control packet be generated in response to\n        an error caused\
    \ by a control packet.\n      - If the source route is completely traversed and\
    \ the packet still\n        cannot be forwarded via normal IP routing, the packet\
    \ should be\n        silently dropped.\n"
- title: 5.2.3 Handling an SDRP data packet.
  contents:
  - "5.2.3 Handling an SDRP data packet.\n   An SDRP data packet is indicated by a\
    \ one in the Data packet/Control\n   packet bit in the Flags field in the SDRP\
    \ Header.\n   An SDRP data packet is forwarded by sending the packet along the\n\
    \   source route in the SDRP Header.  When the source route is completely\n  \
    \ traversed and the packet has reached the destination domain, the\n   payload\
    \ may be removed from the data packet and forwarded normally.\n   Further details\
    \ are described below.\n"
- title: 5.2.4 Checking the SDRP version number
  contents:
  - "5.2.4 Checking the SDRP version number\n   An SDRP packet that has a version\
    \ number other than 1 should be\n   discarded.  If the SDRP packet was a data\
    \ packet, then a control\n   packet with the Notification Code \"Unimplemented\
    \ SDRP version\" should\n   be generated as specified in section 6.\n"
- title: 5.2.5 Checking the Source Route Protocol Type
  contents:
  - "5.2.5 Checking the Source Route Protocol Type\n   This document describes Source\
    \ Route Protocol Type 1.  An SDRP router\n   may support multiple Source Route\
    \ Protocol Types; however an SDRP\n   router is NOT required to support all defined\
    \ Source Route Types.\n   Any packet that has a Source Route Protocol Type which\
    \ is not\n   supported should be discarded.  If the SDRP packet was a data packet,\n\
    \   then a control packet with the Notification Code \"Unimplemented\n   Source\
    \ Route Protocol Type\" should be generated as specified in\n   section 6.\n"
- title: 5.2.6 Decrementing and checking Hop Count
  contents:
  - "5.2.6 Decrementing and checking Hop Count\n   If an SDRP packet is to be forwarded\
    \ and the Hop Count field is non-\n   zero, the Hop Count field should be decremented.\
    \  If the resulting\n   value is zero and the packet was a data packet, then a\
    \ control packet\n   with the Notification Code \"Hop Count Exceeded\" should\
    \ be generated\n   and sent to the encapsulating router as specified in section\
    \ 6, and\n   the packet should be discarded.  If the resulting value is zero and\n\
    \   the packet was a control packet, the packet should be discarded.  The\n  \
    \ payload of the control packet should carry the payload header\n   followed by\
    \ 64 bits of the payload data of the data packet.\n"
- title: 5.2.7 Upholding transit policies
  contents:
  - "5.2.7 Upholding transit policies\n   It is not a goal of SDRP to create a security\
    \ routing system.\n   Therefore, we need to qualify our use of the term \"upholding\
    \ transit\n   policy\".  It is assumed that transit policies have the nature of\
    \ a\n   \"gentleperson's agreement\", and are upheld by all the participants.\n\
    \   In other words, it is assumed that there will be no malicious\n   attempts\
    \ to violate transit policies and that parties will rely on\n   auditing and post\
    \ facto detection of violations. When a security\n   architecture is developed\
    \ for IP or other network protocols then it\n   may be applied to increase the\
    \ assurance of transit policy\n   enforcement. These issues are beyond the scope\
    \ of this document.\n   A router may examine any data packet to verify if it complies\
    \ with\n   local transit policies, as described in section 5.1.  If the\n   verification\
    \ fails, the router generates a control packet.  If the\n   verification referred\
    \ to only the contents of the SDRP header, then\n   the payload field of the control\
    \ packet should be empty. If the\n   verification referred to both the contents\
    \ of the SDRP header and the\n   payload header, then the payload field of the\
    \ control packet should\n   carry the payload header.  If the verification referred\
    \ to the\n   transport protocol header, then the payload field of the control\n\
    \   packet should carry the payload header and the transport header.\n   The Notification\
    \ Code field of the SDRP header in the control packet\n   is set to Transit Policy\
    \ Violation.  The procedures for constructing\n   the rest of the SDRP Header\
    \ of the control packet are specified in\n   Section 6.\n"
- title: 5.2.8 Partially traversed source routes
  contents:
  - "5.2.8 Partially traversed source routes\n   If a router receives an SDRP packet\
    \ with a partially traversed source\n   route, it extracts the next hop of the\
    \ source route from the Source\n   Route field. The router locates the high-order\
    \ byte of the\n   appropriate hop by using the Next Hop Pointer field as a 32\
    \ bit word\n   offset relative to the start of the Source Route field.  The next\
    \ hop\n   is always four octets long.  The following procedure is used to\n  \
    \ interpret the next hop.\n   Syntactically, each element in the source route\
    \ appears as an IP\n   address.  There are three encodings for the next hop:\n\
    \   a) The next hop is an address in network 127.0.0.0.  In this case,\n   the\
    \ Loose/Strict Source Route field is set equal to the Loose/Strict\n   Source\
    \ Route Change bit.  Then the Next Hop Pointer is incremented,\n   the next hop\
    \ is read from the Source Route field, and these three\n   cases are examined\
    \ again.\n   b) The next hop is an address in network 128.0.0.0.  In this case,\n\
    \   the DI of the next domain is extracted from the least significant two\n  \
    \ octets of the next hop.  If the extracted DI is the same as the DI of\n   the\
    \ local domain, then the Next Hop Pointer is incremented, the next\n   hop is\
    \ read from the Source Route field, and these three cases are\n   examined again.\
    \  Otherwise, if the extracted DI is different from the\n   DI of the local domain,\
    \ the next hop is the extracted DI, and the\n   forwarding process may proceed.\n\
    \   c) The next hop is any other IP address.  If the next hop is equal to\n  \
    \ any IP address assigned to the local router, the Next Hop Pointer is\n   incremented,\
    \ the next hop is read from the Source Route field, and\n   these three cases\
    \ examined again.  Otherwise, the next hop is the IP\n   address of the next router\
    \ in the source route and the forwarding\n   process may proceed.\n   The above\
    \ procedure for interpreting the next hop in the source route\n   finishes when\
    \ the next hop is either a router other than the local\n   router or an encoded\
    \ DI that is not the local DI or a completed\n   source route.\n   If upon termination\
    \ of this procedure the source route is completely\n   traversed, see section\
    \ 5.2.9.\n"
- title: 5.2.8.1 Finding a route to the next hop
  contents:
  - "5.2.8.1 Finding a route to the next hop\n   If the next hop is not a DI, then\
    \ the destination address in the\n   delivery header is replaced by the next hop\
    \ address and the resulting\n   packet can then be forwarded using normal IP forwarding.\
    \  Otherwise,\n   a DI was extracted from the next hop in the source route, and\
    \ the\n   following procedure is used to find a route to the next domain.\n  \
    \ Given the DI of the next domain, the router next consults its D-FIB.\n   If\
    \ no entry exists in the D-FIB for the next domain, then the packet\n   should\
    \ be discarded.  If the packet was a data packet, a control\n   message with Notification\
    \ Code \"No Route Available\" should be\n   generated as specified in Section\
    \ 6. No other actions are necessary.\n   If there is a D-FIB entry, the router\
    \ next examines the SDRP header\n   to determine if the packet specified a strict\
    \ source route.  If so,\n   and the next domain is not adjacent to the local domain,\
    \ then a\n   control packet with the Notification Code \"Strict Source Route\n\
    \   Failed\" should be generated, as specified in section 6, and the\n   original\
    \ packet should be discarded.  No other actions are necessary.\n   If source route\
    \ is loose, then BGP or IDRP information must be used\n   to insure that there\
    \ is no loop in reaching the next hop.  If the\n   Next Hop Pointer was incremented\
    \ when determining the next hop, then\n   the router must select a BGP or IDRP\
    \ route with a path that includes\n   the extracted DI, and the NLRI for this\
    \ route is copied into the\n   Prefix Length and Prefix fields.\n   Otherwise,\
    \ the Next Hop Pointer was not incremented, and the router\n   should use the\
    \ information carried in the Prefix and Prefix Length as\n   an index into its\
    \ BGP or IDRP routing table.  If it finds a matching\n   route then it must select\
    \ the corresponding D-FIB entry.  If the\n   route was formed locally by aggregation,\
    \ then the router must consult\n   its D-FIB and select any route with a path\
    \ that includes the\n   extracted DI.  The NLRI for this route should be copied\
    \ into the\n   Prefix Length and Prefix fields.\n   In either case, the D-FIB\
    \ entry includes the IP address of the next\n   SDRP-speaking router to which\
    \ the SDRP packet should be routed.  The\n   destination address in the delivery\
    \ header is replaced by this\n   address.  The resulting packet can then be forwarded\
    \ using normal IP\n   forwarding.\n"
- title: 5.2.8.2 Last Hop Optimization
  contents:
  - "5.2.8.2 Last Hop Optimization\n   A small optimization can be performed if there\
    \ is only a single DI or\n   IP address in the source route that has not been\
    \ traversed.\n   In this case, if the next hop in the SDRP route is a DI, that\
    \ DI is\n   adjacent to the router processing this packet, the route has a route\n\
    \   to the destination address in the payload header in its FIB, and this\n  \
    \ FIB route passes through the adjacent domain, then the source route\n   may\
    \ be considered completely traversed and processing may proceed as\n   in section\
    \ 5.2.9.\n   If the next hop in the SDRP route is an IP address, that IP address\n\
    \   is adjacent to the router processing this packet, the router has a\n   route\
    \ to the destination address in the payload header in its FIB,\n   and this FIB\
    \ route passes through the adjacent IP address, then the\n   source route may\
    \ be considered completely traversed and processing\n   may proceed as in section\
    \ 5.2.9.\n   Since the last hop optimization may only be done if the last hop\
    \ is\n   directly adjacent, and reachable, it is irrelevant whether the SDRP\n\
    \   route specifies that this is a strict source route or a loose source\n   route\
    \ hop.\n"
- title: 5.2.9 Completely Traversed source routes
  contents:
  - "5.2.9 Completely Traversed source routes\n   If the SDRP packet received by a\
    \ router with a completely-traversed\n   source route is a control packet and\
    \ if the Target Router field\n   carries an IP address assigned to the router,\
    \ then the packet should\n   be processed as specified in Section 7.  Otherwise,\
    \ if the SDRP\n   packet is a control packet, and the packet cannot be forwarded\
    \ via\n   either SDRP or normal IP forwarding, the packet should be silently\n\
    \   dropped.\n   The Hop Count field has already been decremented when processing\
    \ the\n   SDRP header.  The Hop Count field should now be copied from the SDRP\n\
    \   header into the IP TTL field in the payload header.  The resulting\n   payload\
    \ packet is then forwarded using normal IP forwarding.  If\n   there is no FIB\
    \ entry for the destination, then the packet should be\n   discarded and a control\
    \ message with Notification Code \"No Route\n   Available\" should be generated\
    \ as specified in Section 6.  If the\n   packet can be forwarded and if the Probe\
    \ Indication bit is set to one\n   in the SDRP header, then a control message\
    \ with Notification Code\n   \"Probe Completed\" should be generated as specified\
    \ in section 6. If a\n   control packet is generated, then it must be sent to\
    \ the\n   encapsulating router.  The payload of the control packet should carry\n\
    \   the first 64 bits of the SDRP header and the payload header.\n"
- title: 6.  Originating SDRP control packets
  contents:
  - "6.  Originating SDRP control packets\n   A router sends a control packet in response\
    \ to either error\n   conditions, or to successful completion of a probe request\
    \ (indicated\n   via Probe Indication in the Flags field).\n   The Data Packet/Control\
    \ Packet field is set to indicate Control\n   Packet.  The following fields are\
    \ copied from the SDRP header of the\n   Data packet that caused the generation\
    \ of the Control packet:\n      - Loose/Strict Source Route\n      - Source Route\
    \ Protocol Type\n      - Source Route Identifier\n      - Source Route Length\
    \ field\n      - Payload Protocol Type\n   A Control packet should not carry a\
    \ Probe Indication field.\n   A router should never originate a Control packet\
    \ as the result of an\n   error caused by a control packet.\n   The Target Router\
    \ is copied from the source IP address of the\n   delivery header of the SDRP\
    \ Data packet.  This causes the control\n   packet to be returned to the encapsulating\
    \ router.\n   The router generating a control packet checks its FIB for a route\
    \ to\n   the destination depicted by the Target Router field.  If such a route\n\
    \   is present, then the value of the Destination Address field in the\n   delivery\
    \ header is set to the Target Router, the Source Address field\n   in the delivery\
    \ header is set to the IP address of one of the\n   interfaces attached to the\
    \ local system, and the packet is forwarded\n   via normal IP forwarding.\n  \
    \ If the FIB does not have a route to the destination depicted by the\n   Target\
    \ Router field, the local system constructs the Source Route\n   field of the\
    \ Control packet by reversing the SDRP route carried in\n   the Source Route field\
    \ of the Data packet, sets the value of the Next\n   Hop Pointer to the value\
    \ of the Source Route Length field minus the\n   value of the Next Hop Pointer\
    \ field of the SDRP data packet that\n   caused generation of the Control Packet.\
    \  All Loose/Strict Source\n   Route change bits in the new source route should\
    \ be set to 0 (loose\n   source route).\n   The contents of the Payload field\
    \ depends on the reason for\n   generating a control packet.\n   The resulting\
    \ packet is then handled via SDRP Forwarding procedures\n   described in Section\
    \ 5.2.\n"
- title: 7.  Processing control information
  contents:
  - "7.  Processing control information\n   A router participating in SDRP may receive\
    \ control information in two\n   forms, SDRP control packets from other routers\
    \ and ICMP messages from\n   routers that do not participate in SDRP, but are\
    \ involved in\n   forwarding SDRP packets.\n"
- title: 7.1 Processing SDRP control packets
  contents:
  - "7.1 Processing SDRP control packets\n   Most control packets carry information\
    \ about some SDRP routes used by\n   the router.  To correlate information carried\
    \ in the SDRP control\n   packet with the SDRP routes used by the router, the\
    \ router uses\n   information carried in the SDRP header of the control packet,\
    \ and\n   optionally in the SDRP payload of the control packet (if present).\n\
    \   In general, receipt of any SDRP control packet that carries one of\n   the\
    \ following Notification codes\n        -    No Route Available\n        -   \
    \ Strict Source Route Failed\n        -    Unimplemented SDRP Version\n      \
    \  -    Unimplemented Source Route Probe Type\n   indicates that the corresponding\
    \ SDRP route is presently not\n   feasible, and thus should not be used for packet\
    \ forwarding.  The\n   router must mark the affected routes as not feasible, and\
    \ may use\n   alternate routes if available.\n   The router may at some later\
    \ point attempt to use an SDRP route that\n   was marked as infeasible.  The criteria\
    \ used for retrying routes is\n   outside the scope of this document and a subject\
    \ of further study.\n   It need not be standardizes and can be a matter of local\
    \ control.\n   Receipt of an SDRP control packet that carries \"Probe Completed\"\
    \n   Notification code indicates that the corresponding SDRP route is\n   feasible.\n\
    \   Receipt of an SDRP control packet that carries the \"Transit Policy\n   Violation\"\
    \ Notification Code shall be interpreted as follows:\n      - If the control packet\
    \ carries no payload data then the\n        corresponding SDRP route violates\
    \ transit policy regardless of\n        the content of the payload packet carried\
    \ along that route.\n      - If the control packet carries only the payload header,\
    \ then\n        the corresponding SDRP route violates transit policy due to\n\
    \        the content of the payload header.\n      - If the control packet carries\
    \ the payload header and the\n        transport header, then the corresponding\
    \ SDRP route violates\n        transit policy for the particular combination of\
    \ payload and\n        transport header contents.\n   If a router receives an\
    \ SDRP control packet that carries \"Hop Count\n   Exceeded\" Notification Code,\
    \ the router should use the information in\n   the payload of the Control packet\
    \ to construct an ICMP Time Exceeded\n   Message with code \"time to live exceeded\
    \ in transit\" and send the\n   message to the host indicated by the source address\
    \ in the Payload\n   Header.\n"
- title: 7.2 Processing ICMP messages
  contents:
  - "7.2 Processing ICMP messages\n   To correlate information carried in the ICMP\
    \ messages with the SDRP\n   routes used by the router, the router uses the portion\
    \ of the SDRP\n   datagram returned by ICMP.  This must contain the Source Route\n\
    \   Identifier of the SDRP route used by the router.\n   ICMP Destination Unreachable\
    \ messages with a code meaning\n   \"fragmentation needed and DF set\" should\
    \ be used for SDRP MTU\n   discovery as described in Section 9.\n   All other\
    \ ICMP Unreachable messages indicate that the associated\n   route is not feasible.\n"
- title: 8.  Constructing D-FIBs.
  contents:
  - "8.  Constructing D-FIBs.\n   A BR constructs its D-FIB as a result of participating\
    \ in either BGP\n   or IDRP. A BR must advertise a route to destinations within\
    \ its\n   domain to all of its external peers (BRs in adjacent domains), via\n\
    \   BGP or IDRP.  In BGP and IDRP, a BR must advertise a route to\n   destinations\
    \ within its domain to all of its external peers (BRs in\n   adjacent domains).\n\
    \   If a BR receives a route to an adjacent domain from a BR in that\n   domain\
    \ and selects that route as part of its BGP or IDRP Decision\n   Process, then\
    \ it must propagate this route (via BGP or IDRP) to all\n   other BRs within its\
    \ domain.  A BR may also propagate such a route if\n   it depicts an autonomous\
    \ system other than the adjacent domain.\n   Since AS numbers are encoded as network\
    \ numbers in network 128.0.0.0,\n   it is possible to also advertise a route to\
    \ a domain in BGP or IDRP.\n"
- title: 9.  SDRP MTU Discovery
  contents:
  - "9.  SDRP MTU Discovery\n   To participate in Path MTU Discovery ([6]) a router\
    \ may maintain\n   information about the maximum length of the payload packet\
    \ that can\n   be carried without fragmentation along a particular SDRP route.\n\
    \   SDRP provides two complimentary techniques to support MTU Discovery.\n   The\
    \ first one is passive and is based on the receipt of the ICMP\n   Destination\
    \ Unreachable messages (as described in Section 7.2).  By\n   combining information\
    \ provided in the ICMP message with local\n   information about the SDRP route\
    \ the local system can determine the\n   length of a payload packet that would\
    \ require fragmentation.\n   The second one is active and employs the Probe Indicator\
    \ bit.  If an\n   SDRP data packet that carries the Probe Indicator bit in the\
    \ SDRP\n   header and Don't Fragment flag in the delivery header triggers the\n\
    \   last router on the SDRP route to return an SDRP Control packet (with\n   the\
    \ Notification Code \"Probe Completed\"), then the information\n   carried in\
    \ the payload header of the control packet can be used to\n   determine the length\
    \ of the payload packet that went through the SDRP\n   route without fragmentation.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   The authors would like to thank Scott Bradner (Harvard\
    \ University),\n   Noel Chiappa (Consultant), Joel Halpern (Newbridge Networks),\n\
    \   Christian Huitema (INRIA), and Curtis Villamizar (ANS) for their\n   comments\
    \ on various aspects of this document.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Deborah Estrin\n   USC/Information Sciences Institute\n\
    \   4676 Admiralty Way\n   Marina Del Rey, Ca 90292-6695.\n   Phone: +1 310 822\
    \ 1511 x 253\n   EMail: estrin@isi.edu\n   Tony Li\n   cisco Systems, Inc.\n \
    \  1525 O'Brien Drive\n   Menlo Park, CA 94025\n   Phone: +1 415 526 8186\n  \
    \ EMail: tli@cisco.com\n   Yakov Rekhter\n   Cisco systems\n   170 West Tasman\
    \ Drive\n   San Jose, CA, USA\n   Phone: +1 914 528 0090\n   Fax: +1 408 526-4952\n\
    \   EMail: yakov@cisco.com\n   Kannan Varadhan\n   USC/Information Sciences Institute\n\
    \   4676 Admiralty Way\n   Marina Del Rey, Ca 90292-6695.\n   Phone: +1 310 822\
    \ 1511 x 402\n   EMail: kannan@isi.edu\n   Daniel Zappala\n   USC/Information\
    \ Sciences Institute\n   4676 Admiralty Way\n   Marina Del Rey, Ca 90292-6695.\n\
    \   Phone: +1 310 822 1511 x 352\n   EMail: daniel@isi.edu\n"
- title: References
  contents:
  - "References\n   [1] Lougheed, K., and Y. Rekhter, \"A Border Gateway Protocol\
    \ 3\n       (BGP-3), RFC 1267, October 1991.\n   [2] Rekhter, Y., and P. Gross,\
    \ \"Application of the Border Gateway\n       Protocol in the Internet\", RFC\
    \ 1268, October 1991.\n   [3] Rekhter, Y., and T. Li, \"A Border Gateway Protocol\
    \ 4 (BGP-4)\",\n       RFC 1654, July 1994.\n   [4] Hares, S., \"IDRP for IP\"\
    , IDR Working Group, 1994.\n       Work in Progress.\n   [5] Postel, J., \"Internet\
    \ Protocol - DARPA Internet Program\n       Protocol Specification\", STD 5, RFC\
    \ 791, September 1981.\n   [6] Mogul, J., and S. Deering, \"Path MTU Discovery\"\
    , RFC 1191,\n       November 1990.\n   [7] Reynolds, J., and J. Postel, \"ASSIGNED\
    \ NUMBERS\", STD 2,\n       RFC 1700, October 1994.\n"
