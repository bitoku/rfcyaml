- title: __initial_text__
  contents:
  - "      Control And Provisioning of Wireless Access Points (CAPWAP)\n         \
    \     Threat Analysis for IEEE 802.11 Deployments\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   Early Wireless Local Area Network (WLAN) deployments feature a \"\
    fat\"\n   Access Point (AP), which serves as a stand-alone interface between\n\
    \   the wired and wireless network segments.  However, this model raises\n   scaling,\
    \ mobility, and manageability issues, and the Control and\n   Provisioning of\
    \ Wireless Access Points (CAPWAP) protocol is meant to\n   address these issues.\
    \  CAPWAP effectively splits the fat AP\n   functionality into two network elements,\
    \ and the communication\n   channel between these components may traverse potentially\
    \ hostile\n   hops.  This document analyzes the security exposure resulting from\n\
    \   the introduction of CAPWAP and summarizes the associated security\n   considerations\
    \ for IEEE 802.11-based CAPWAP implementations and\n   deployments.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Rationale for Limiting Analysis Scope to IEEE 802.11 .......5\n  \
    \    1.2. Notations ..................................................6\n   2.\
    \ Abbreviations and Definitions ...................................7\n   3. CAPWAP\
    \ Security Goals for IEEE 802.11 Deployments ...............8\n   4. Overview\
    \ of IEEE 802.11 and AAA Security ........................8\n      4.1. IEEE 802.11\
    \ Authentication and AAA .........................9\n      4.2. IEEE 802.11 Link\
    \ Security .................................11\n      4.3. AAA Security ..............................................11\n\
    \      4.4. Cryptographic Bindings ....................................12\n  \
    \ 5. Structure of the Analysis ......................................13\n   6.\
    \ Representative CAPWAP Deployment Scenarios .....................14\n      6.1.\
    \ Preliminary Definitions ...................................14\n           6.1.1.\
    \ Split MAC ..........................................15\n           6.1.2. Local\
    \ MAC ..........................................15\n           6.1.3. Remote MAC\
    \ .........................................15\n           6.1.4. Data Tunneling\
    \ .....................................16\n      6.2. Example Scenarios .........................................16\n\
    \           6.2.1. Localized Modular Deployment .......................16\n  \
    \         6.2.2. Internet Hotspot or Temporary Network ..............17\n    \
    \       6.2.3. Distributed Deployments ............................18\n      \
    \            6.2.3.1. Large Physically Contained Organization ...18\n        \
    \          6.2.3.2. Campus Deployments ........................18\n          \
    \        6.2.3.3. Branch Offices ............................18\n            \
    \      6.2.3.4. Telecommuter or Remote Office .............19\n   7. General Adversary\
    \ Capabilities .................................19\n      7.1. Passive versus\
    \ Active Adversaries .........................20\n   8. Vulnerabilities Introduced\
    \ by CAPWAP ...........................22\n      8.1. The Session Establishment\
    \ Phase ...........................22\n           8.1.1. The Discovery Phase ................................22\n\
    \           8.1.2. Forming an Association (Joining) ...................23\n  \
    \    8.2. The Connected Phase .......................................23\n   9.\
    \ Adversary Goals in CAPWAP ......................................24\n      9.1.\
    \ Eavesdrop on AC-WTP Traffic ...............................24\n      9.2. WTP\
    \ Impersonation and/or Rootkit Installation .............25\n      9.3. AC Impersonation\
    \ and/or Rootkit Installation ..............26\n      9.4. Other Goals or Sub-Goals\
    \ ..................................26\n   10. Countermeasures and Their Effects\
    \ .............................27\n      10.1. Communications Security Elements\
    \ .........................27\n           10.1.1. Mutual Authentication .............................27\n\
    \                  10.1.1.1. Authorization ............................27\n  \
    \         10.1.2. Data Origin Authentication ........................29\n    \
    \       10.1.3. Data Integrity Verification .......................29\n      \
    \     10.1.4. Anti-Replay .......................................29\n        \
    \   10.1.5. Confidentiality ...................................29\n      10.2.\
    \ Putting the Elements Together ............................30\n           10.2.1.\
    \ Control Channel Security ..........................30\n           10.2.2. Data\
    \ Channel Security .............................30\n   11. Countermeasures Provided\
    \ by DTLS ..............................30\n   12. Issues Not Addressed By DTLS\
    \ ..................................31\n      12.1. DoS Attacks ..............................................31\n\
    \      12.2. Passive Monitoring (Sniffing) ............................32\n  \
    \    12.3. Traffic Analysis .........................................32\n    \
    \  12.4. Active MitM Interference .................................32\n      12.5.\
    \ Other Active Attacks .....................................32\n   13. Security\
    \ Considerations .......................................32\n   14. Acknowledgements\
    \ ..............................................32\n   15. References ....................................................33\n\
    \      15.1. Normative References .....................................33\n  \
    \    15.2. Informative References ...................................33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Wireless Local Area Network (WLAN) deployments are increasingly\n\
    \   common as the technology matures and wireless interface chips become\n   standard\
    \ equipment in laptops and various hand-held computing\n   devices.  In the simplest\
    \ deployments, WLAN access is entirely\n   provided by a wireless Access Point\
    \ (AP), which bridges the client\n   system (station or \"STA\") and the Distribution\
    \ System (DS) or wired\n   network.\n        +------+\n        |client|      \
    \   +--------+     |\n        |(STA) |         | Access |     |    +------+\n\
    \        +------+ ) ) ) ) | Point  |-----|   /optional\\    +-------+\n      \
    \ /      /          +--------+     |--(    L3    )---|  AAA  |\n      +------+\
    \                          |   \\ cloud  /    +-------+\n                    \
    \                    |    +------+\n                  Figure 1: IEEE 802.11 Deployment\
    \ Using RSN\n   In this architecture, the AP serves as a gatekeeper, facilitating\n\
    \   client access to the network.  Typically, the client must somehow\n   authenticate\
    \ prior to being granted access, and in enterprise\n   deployments, this is frequently\
    \ accomplished using [8021X].  When\n   using IEEE 802.11, this mode is called\
    \ a Robust Security Network\n   (RSN) [80211I].  Here, the client is called the\
    \ \"supplicant\", the AP\n   is the \"authenticator\", and either the AP or an\
    \ external\n   Authentication, Authorization, and Accounting (AAA) server fulfill\n\
    \   the role of \"authentication server\", depending on the authentication\n \
    \  mechanism used.\n   From the perspective of the network administrator, the\
    \ wired LAN to\n   which the AP is attached is typically considered to be more\
    \ trusted\n   than the wireless LAN, either because there is some physical boundary\n\
    \   around the wired segment (i.e., the building walls), or because it is\n  \
    \ otherwise secured somehow (perhaps cryptographically).  The AAA\n   server may\
    \ reside within this same physical administrative domain, or\n   it may be remote.\
    \  Common AAA protocols are RADIUS [RFC3579] and\n   Diameter [RFC4072].\n   The\
    \ CAPWAP protocol [RFC5415] modifies this architecture by splitting\n   the AP\
    \ into two pieces, the Wireless Termination Point (WTP), and the\n   Access Controller\
    \ (AC), and creating a communications link between\n   the two new components.\
    \  In this model, the WTP implements the WLAN\n   edge functions with respect\
    \ to the user (wireless transmit/receive),\n   while the AC implements the wired-side\
    \ edge functions.  For a\n   complete description of CAPWAP architecture, see\
    \ [RFC4118].\n     +------+    +==========================+\n     |client|   \
    \ |           +---+          |   |    +------+\n     |(STA) |    | +-----+  /\
    \  L3 \\  +----+ |   |   /optional\\   +-----+\n     +------+ ) )|)| WTP |-( cloud\
    \ )-| AC |-|---|--(    L3    )--| AAA |\n    /      /     | +-----+  \\     /\
    \  +----+ |   |   \\ cloud  /   +-----+\n   +------+      |           +---+  \
    \        |   |    +------+\n                 +==========================+\n  \
    \                  AP equivalence boundary\n               Figure 2: WLAN Deployment\
    \ utilizing CAPWAP\n   For our purposes, it is useful to think of the entire CAPWAP\
    \ system\n   as a sort of \"AP equivalent\", and the figure above illustrates\
    \ this\n   concept.  With this model in mind, our ideal is to ensure that CAPWAP\n\
    \   introduces no vulnerabilities that aren't present in the original fat\n  \
    \ AP scenario.  As we will see, this is not entirely possible, but from\n   a\
    \ security perspective, we should nonetheless strive to achieve this\n   equivalence\
    \ as nearly as we can.\n"
- title: 1.1.  Rationale for Limiting Analysis Scope to IEEE 802.11
  contents:
  - "1.1.  Rationale for Limiting Analysis Scope to IEEE 802.11\n   Although CAPWAP\
    \ derives from protocols that were designed explicitly\n   for management of IEEE\
    \ 802.11 wireless LANs, it may also turn out to\n   be useful for managing other\
    \ types of network device deployments,\n   wireless and otherwise.  This might\
    \ lead one to conclude that a\n   single security analysis, except for minor per-binding\
    \ variations,\n   might be sufficient.  However, based on a limited number of\n\
    \   additional related scenarios that have been described as likely\n   candidates\
    \ for CAPWAP thus far, e.g., use with Radio Frequency\n   Identification (RFID)\
    \ sensors, this does not seem to be a simple,\n   binary decision.\n   Contrasting\
    \ RFID and IEEE 802.11 deployment scenarios, IEEE 802.11\n   users typically authenticate\
    \ to some a back-end AAA server, and as a\n   result of that exchange, derive\
    \ cryptographic keys that are used by\n   the STA and WTP to encrypt and authenticate\
    \ over-air communications.\n   That is, the threat environment is such that the\
    \ following typically\n   holds:\n   o  The user is not immediately trusted, and\
    \ therefore must\n      authenticate.\n   o  The WTP is not immediately trusted,\
    \ and therefore must indirectly\n      authenticate to the user via the AAA server.\n\
    \   o  The AAA server is not necessarily trusted, and therefore must\n      authenticate.\n\
    \   o  The medium is not trusted, and therefore communications must be\n     \
    \ secured.\n   RFID tags, on the other hand, typically do not have the same\n\
    \   authentication, confidentiality, and integrity requirements as the\n   principals\
    \ in a WLAN deployment, and are not, generally speaking,\n   well suited to environments\
    \ in which similar threats exist.  As a\n   result of the combination of WLAN\
    \ security requirements and the\n   Medium Access Control (MAC)-splitting behavior\
    \ that epitomizes the\n   IEEE 802.11 binding for CAPWAP, there are definite security-related\n\
    \   considerations in the WLAN case that simply do not exist for an RFID-\n  \
    \ based adaptation of CAPWAP.\n   Now, there certainly are similarities and overlapping\
    \ security\n   considerations that will apply to any CAPWAP deployment scenario.\n\
    \   For example, authentication of the AC for purposes of WTP device\n   management\
    \ operations is probably always important.  Even so, the\n   threats to RFID are\
    \ different enough to suggest the need for a\n   separate security analysis in\
    \ that case.  For example, since RFID\n   tags commonly deployed today implement\
    \ no over-air authentication,\n   integrity, or confidentiality mechanisms, the\
    \ need for similar\n   mechanisms between the WTP and AC for RFID tag data communications\
    \ is\n   not clearly indicated -- that is, the threats are different.\n   We have\
    \ limited visibility into the varied ways in which CAPWAP might\n   be adapted\
    \ in the future, although we may observe that it seems to\n   provide the basis\
    \ for a generalized scalable provisioning protocol.\n   Given our currently limited\
    \ view of the technologies for which it\n   might be used, it seems prudent to\
    \ recognize that our current view is\n   colored by the IEEE 802.11 roots of the\
    \ protocol, and make that\n   recognition explicit in our analysis.  If newly\
    \ added bindings turn\n   out to be substantially similar to IEEE 802.11, then\
    \ the associated\n   binding documents can simply reference this document in their\n\
    \   security considerations, while calling out any substantive\n   differences.\
    \  However, it does appear, based on our current limited\n   visibility, that\
    \ per-binding threat analyses will be required.\n"
- title: 1.2.  Notations
  contents:
  - "1.2.  Notations\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 2.  Abbreviations and Definitions
  contents:
  - "2.  Abbreviations and Definitions\n   o    AAA - Authentication Authorization\
    \ and Accounting\n   o    AC - Access Controller\n   o    AES-CCMP - Advanced\
    \ Encryption Standard - Counter-mode CBC MAC\n        Protocol\n   o    AP - (wireless)\
    \ Access Point\n   o    CAPWAP - Control And Provisioning of Wireless Access Points\n\
    \   o    Cert - X509v3 Certificate\n   o    DIAMETER - proposed successor to RADIUS\
    \ protocol (see below)\n   o    DoS - Denial of Service (attack)\n   o    DTLS\
    \ - Datagram Transport Layer Security\n   o    EAP - Extensible Authentication\
    \ Protocol\n   o    MitM - Man in the Middle\n   o    PMK - Pairwise Master Key\n\
    \   o    PSK - Pre-Shared Key\n   o    RADIUS - Remote Authentication Dial-In\
    \ User Service\n   o    STA - (wireless) STAtion\n   o    TK - Transient Key\n\
    \   o    TKIP - Temporal Key Integrity Protocol\n   o    WEP - Wired Equivalent\
    \ Privacy\n   o    WLAN - Wireless Local Area Network\n   o    WTP - Wireless\
    \ Termination Point\n"
- title: 3.  CAPWAP Security Goals for IEEE 802.11 Deployments
  contents:
  - "3.  CAPWAP Security Goals for IEEE 802.11 Deployments\n   When deployed for use\
    \ with IEEE 802.11, CAPWAP should avoid\n   introducing any system security degradation\
    \ as compared to the fat AP\n   scenario.  However, by splitting the AP functions\
    \ between the WTP and\n   AC, CAPWAP places potentially sensitive protocol interactions\
    \ that\n   were previously internal to the AP onto the Layer 3 (L3) network\n\
    \   between the AC and WTP.  Therefore, the security properties of this\n   new\
    \ system are dependent on the security properties of the\n   intervening network,\
    \ as well as on the details of the split.\n   Since CAPWAP does not directly interact\
    \ with over-air or AAA\n   protocols, these are mostly out of scope for this analysis.\
    \  That is,\n   we do not analyze the basic AAA or IEEE 802.11 security protocols\n\
    \   directly here, as CAPWAP does not modify these protocols in any way,\n   nor\
    \ do they directly interact with CAPWAP.  However, by splitting AP\n   functionality,\
    \ CAPWAP may expose security elements of these protocols\n   that would not otherwise\
    \ be exposed.  In such cases, CAPWAP should\n   explicitly avoid degrading the\
    \ security of these protocols in any way\n   when compared to the fat AP scenario.\n"
- title: 4.  Overview of IEEE 802.11 and AAA Security
  contents:
  - "4.  Overview of IEEE 802.11 and AAA Security\n   While this document is not directly\
    \ concerned with IEEE 802.11 or AAA\n   security, there are some subtle interactions\
    \ introduced by CAPWAP,\n   and there will be related terminology we must touch\
    \ on in discussing\n   these.  The following figure illustrates some of the complex\n\
    \   relationships between the various protocols, and illustrates where\n   CAPWAP\
    \ sits:\n                             +-----+  RADIUS/Diameter\n             \
    \                | AAA |<==============\\\\\n                             +-----+\
    \               ||\n                                |                  ||\n  \
    \                  +-----------+------------+     ||\n                    |  \
    \                      |     ||\n                 +-----+                  +----+\
    \   ||\n                 | AC  |                  | AC |<==//\n              \
    \   +-----+                  +----+\n              +---|  |---+             +---|\
    \  |---+\n              |          |             |          |\n              |\
    \          |             |  CAPWAP  |\n           +-----+    +-----+       +-----+\
    \    +-----+\n           | WTP |    | WTP |       | WTP |    | WTP |\n       \
    \    +-----+    +-----+       +-----+    +-----+\n           ^               \
    \        ^^^\n          ^^                      ^^^  802.11i,\n          ^^  \
    \                    ^^  802.1X, WPA,\n      +-----+              +-----+    \
    \ WEP\n      | STA |              | STA |\n      +-----+              +-----+\n\
    \     /     /              /     /\n    +-----+              +-----+\n       \
    \        Figure 3: CAPWAP Protocol Hierarchy\n   CAPWAP is being inserted between\
    \ the 802.ll link security mechanism\n   and the authentication server communication,\
    \ so to provide supporting\n   context, we give a very brief overview of IEEE\
    \ 802.11 and AAA\n   security below.  It is very important to note that we only\
    \ cover\n   those topics that are relevant to our discussion, so what follows\
    \ is\n   not by any means exhaustive.  For more detailed coverage of IEEE\n  \
    \ 802.11-related security topics, see e.g., [80211SEC].\n"
- title: 4.1.  IEEE 802.11 Authentication and AAA
  contents:
  - "4.1.  IEEE 802.11 Authentication and AAA\n   IEEE 802.11 provides for multiple\
    \ methods of authentication prior to\n   granting access to the network.  In the\
    \ simplest case, open\n   authentication is used, and this is equivalent to no\
    \ authentication.\n   However, if IEEE 802.11 link security is to be provided,\
    \ then some\n   sort of authentication is required in order to bootstrap the trust\n\
    \   relationship that underlies the associated key establishment process.\n  \
    \ This authentication can be implemented through use of a shared\n   secret. \
    \ In such cases, the authentication may be implicitly tied to\n   the link security\
    \ mechanism, (e.g., when Wired Equivalent Privacy\n   (WEP) is used with open\
    \ authentication), or it may be explicit, e.g.,\n   when Wi-fi Protected Access\
    \ is used with a Pre-Shared Key (WPA-PSK).\n   In other cases, authentication\
    \ requires an explicit cryptographic\n   exchange, and this operation bootstraps\
    \ link security.  In most such\n   cases, IEEE 802.1X is used in conjunction with\
    \ the Extensible\n   Authentication Protocol [RFC3748] to authenticate either\
    \ the client\n   or both the client and the authentication server.  This exchange\n\
    \   produces cryptographic keying material for use with IEEE 802.11\n   security\
    \ mechanisms.\n   The resulting trust relationships are complex, as can be seen\
    \ from\n   the following (simplified) figure:\n         /--------------------------------------------\\\
    \n         |                       TK (6)               | EAP Credentials,\n \
    \        V                  /--------------\\          | PMK (3)\n      +------+\
    \              |  PSK/Cert(1) |          |\n      |client|              V    \
    \          |          V\n      |(STA) |         +--------+     |    v     |  +-----+\n\
    \      +------+ ) ) ) ) |  WTP   |-----|  +----+  |--| AAA |\n     /      /  \
    \        +--------+     |--| AC |--|  +-----+\n    +------+              ^   \
    \        |  +----+  |      ^\n      ^  ^                |               ^  ^ (2,4)\
    \    |\n      |  |    PTK (7)     |               |  \\----------/\n      |  \\\
    ----------------/               |   Radius PSK,\n      \\-----------------------------------/\
    \       PMK\n              4-Way Handshake (w/PMK) (5)\n                   Figure\
    \ 4: Trust Relationships\n   The following describes each of the relationships:\n\
    \   1.  WTP and AC establish secure link\n   2.  AC establishes secure link with\
    \ AAA server\n   3.  STA and AAA server conduct EAP, produce PMK\n   4.  AAA server\
    \ pushes PMK to AC\n   5.  AC and STA conduct 4-way handshake (producing TK, among\
    \ other\n       keys)\n   6.  AC pushes TK to WTP (if decentralized encryption\
    \ is used)\n   7.  WTP/STA use TK for IEEE 802.11 link security\n"
- title: 4.2.  IEEE 802.11 Link Security
  contents:
  - "4.2.  IEEE 802.11 Link Security\n   The current CAPWAP binding for IEEE 802.11\
    \ primarily supports the use\n   of IEEE 802.11i [80211I] security on the wireless\
    \ link.  However,\n   since IEEE 802.11i does not prohibit the use of WEP for\
    \ link\n   security, neither does CAPWAP.  Nonetheless, use of WEP with CAPWAP\n\
    \   is NOT RECOMMENDED.\n   If WEP is used with CAPWAP, the CAPWAP system will\
    \ inherit all the\n   security problems associated with the use of WEP in any\
    \ wireless\n   network.  In particular, 40-bit keys can be subject to brute-force\n\
    \   attacks, and statistical attacks can be used to crack session keys of\n  \
    \ any length after enough packets have been collected [WEPSEC].  As of\n   late\
    \ 2008, such attacks are trivial, and take mere seconds to\n   accomplish.\n \
    \  Newer link security mechanisms described in IEEE 802.11i, including\n   TKIP\
    \ and AES-CCMP, significantly improve the security of wireless\n   networks. \
    \ It is strongly RECOMMENDED that CAPWAP only be used with\n   these newer techniques.\n\
    \   The only slight insecurity introduced by CAPWAP when using it with\n   IEEE\
    \ 802.11i is the handling of the KeyRSC counter.  When performing\n   decentralized\
    \ encryption, this value is maintained by the WTP, but\n   needed by the AC to\
    \ perform the 4-way handshake.  The value used\n   during the handshake initializes\
    \ the counter on the client.  In\n   CAPWAP, this value is initialized to zero,\
    \ allowing the possibility\n   for replay attacks of broadcast traffic in the\
    \ window between initial\n   authentication and the client receiving the first\
    \ valid broadcast\n   packet from the WTP.  This slight window of attack has been\n\
    \   documented in [RFC5416].\n"
- title: 4.3.  AAA Security
  contents:
  - "4.3.  AAA Security\n   CAPWAP has very little control over how AAA security is\
    \ deployed, as\n   it's not directly bound to AAA as it is to IEEE 802.11.  As\
    \ a result,\n   CAPWAP can only provide guidance on how to best secure the AAA\n\
    \   portions of a CAPWAP-enabled wireless network.\n   The AAA protocol is a term\
    \ that refers to use of either RADIUS\n   [RFC3579] or Diameter [RFC4072] to transport\
    \ EAP communications\n   between the authenticator and the AAA server.  Here the\
    \ authenticator\n   is the AC, thus the AAA protocol secures the link between\
    \ the AC and\n   AAA server.  Use of non-unique or low-entropy long-term credentials\n\
    \   to secure the AC-AAA link can severely impact the overall security of\n  \
    \ a CAPWAP deployment, and consequently is NOT RECOMMENDED.  Each AC\n   should\
    \ have a mutually authenticated link that provides robust data\n   confidentiality\
    \ and integrity.  The AAA protocols and keys used\n   SHOULD be consistent with\
    \ the guidance in [RFC4962].\n   Since CAPWAP does not directly interact with\
    \ AAA, it does not affect\n   the overall security of a AAA network.  In fact,\
    \ by decreasing the\n   number of devices that communicate with the AAA server,\
    \ we can\n   actually decrease its exposure and risk of attack.\n"
- title: 4.4.  Cryptographic Bindings
  contents:
  - "4.4.  Cryptographic Bindings\n   One key shortcoming of both the EAP and AAA\
    \ models is that they are\n   inherently two-party models.  In CAPWAP deployments,\
    \ we rely on a\n   variety of security associations when an IEEE 802.11 WLAN client\n\
    \   session is established.  These include:\n   o  WTP-AC (CAPWAP Authentication)\n\
    \   o  AC-AAA (AAA Authentication)\n   o  STA-AAA (EAP Method Execution)\n   o\
    \  STA-AC (AAA pushes keys to AC)\n   o  STA-WTP (AC pushes keys to WTP)\n   Each\
    \ of these security associations involve a pairwise trust\n   relationship, and\
    \ none result from a multi-party key agreement\n   protocol such as Kerberos.\
    \  In particular, just because an STA trusts\n   a AAA server who trusts an AC\
    \ who trusts a WTP doesn't necessarily\n   mean that the STA should trust the\
    \ WTP.  The WTP may be compromised\n   and using his credentials to maintain a\
    \ trust relationship with an\n   AC, while advertising false information about\
    \ the network to an STA.\n   Protection against attacks like these can be very\
    \ difficult, while\n   maintaining scalable trust relationships with other entities\
    \ in the\n   network.  Since multiple protocols are being used, multi-party keying\n\
    \   to derive end-to-end trust relationships is infeasible.\n   Since CAPWAP is\
    \ a collection of pairwise trust relationships, in\n   order to claim CAPWAP is\
    \ secure, we must believe in the transitivity\n   of these trust relationships.\
    \  Its hierarchal nature mitigates the\n   domino effect, but any compromised\
    \ device in the hierarchy can affect\n   those below it in the hierarchy.\n"
- title: 5.  Structure of the Analysis
  contents:
  - "5.  Structure of the Analysis\n   In order to conduct a comprehensive threat\
    \ analysis, there are some\n   basic questions we must answer:\n   o  Exactly\
    \ what are we trying to protect?\n   o  What are the risks?\n      *  What are\
    \ the capabilities of would-be attackers?\n      *  What might be goals of would-be\
    \ attackers?\n      *  What are the vulnerabilities or conditions they might attempt\n\
    \         to exploit?\n      *  For various attackers, what is the likelihood\
    \ of attempting to\n         exploit a given vulnerability given the cost of the\
    \ exploit\n         versus the value of attack?\n   o  What potential mitigation\
    \ strategies are available to us?\n   o  What kinds of trade-offs do these mitigation\
    \ strategies offer, and\n      do they introduce any new risks?\n   This is a\
    \ very simplistic overview of what we must accomplish below,\n   but it should\
    \ give some insight into the manner in which the\n   discussion proceeds.\n  \
    \ As a preliminary, we describe some representative CAPWAP deployment\n   scenarios.\
    \  This helps to frame subsequent discussion, so that we\n   better understand\
    \ what we are trying to protect.  Following this, we\n   describe a threat model\
    \ in terms of adversary capabilities,\n   vulnerabilities introduced by the CAPWAP\
    \ functionality split, and a\n   representative sampling of adversary goals. \
    \ Note that we do not\n   spend a lot of time speculating about specific attackers\
    \ here, as\n   this is a very general analysis, and there are many different\n\
    \   circumstances under which a WLAN might be deployed.\n   Following the development\
    \ of the general threat model, we describe\n   appropriate countermeasures, and\
    \ discuss how these are implemented\n   through various means within the CAPWAP\
    \ protocol.  Finally, we\n   discuss those issues that are not (or cannot be)\
    \ completely\n   addressed, and we give recommendations for mitigating the resulting\n\
    \   exposure.\n"
- title: 6.  Representative CAPWAP Deployment Scenarios
  contents:
  - "6.  Representative CAPWAP Deployment Scenarios\n   In this section, we describe\
    \ some representative CAPWAP deployment\n   scenarios, and in particular, those\
    \ scenarios that have been taken\n   into consideration for the current CAPWAP\
    \ protocol security design.\n   For clarity, we first provide some preliminary\
    \ definitions, along\n   with descriptions of common deployment configurations\
    \ that span\n   multiple scenarios.  Following this is a sampling of individual\n\
    \   deployment scenarios.\n"
- title: 6.1.  Preliminary Definitions
  contents:
  - "6.1.  Preliminary Definitions\n   The IEEE 802.11 standard describes several\
    \ frame types, and\n   variations in WLAN architectures dictate where these frame\
    \ types\n   originate and/or terminate (i.e., at the WTP or AC).  There are three\n\
    \   basic IEEE 802.11 frame types currently defined:\n   o  Control: These are\
    \ for managing the transmission medium (i.e., the\n      airwaves).  Examples\
    \ include RTS, CTS, ACK, PS-POLL, CF-POLL, CF-\n      END, and CF-ACK.\n   o \
    \ Management: These are for managing access to the logical network,\n      as\
    \ opposed to the physical medium.  Example functions include\n      association/disassociation,\
    \ reassociation, deauthentication,\n      Beacons, and Probes.\n   o  Data: Transit\
    \ data (network packets).\n   There are a number of other services provided by\
    \ the WLAN\n   infrastructure, including these:\n   o  Packet distribution\n \
    \  o  Synchronization\n   o  Retransmissions\n   o  Transmission Rate Adaptation\n\
    \   o  Privacy/Confidentiality/Integrity (e.g., IEEE 802.11i)\n   The manner in\
    \ which these (and other) services are divided among the\n   AC and WTP is collectively\
    \ referred to in terms of \"MAC-splitting\"\n   characteristics.  We briefly describe\
    \ various forms of MAC-splitting\n   below.  For further detail, see [RFC5415]\
    \ and [RFC5416].\n"
- title: 6.1.1.  Split MAC
  contents:
  - "6.1.1.  Split MAC\n   Split MAC scenarios are characterized by the fact that\
    \ some IEEE\n   802.11 MAC messages are processed by the WTP, while some are\n\
    \   processed by the AC.  For example, a Split MAC implementation might\n   divide\
    \ IEEE 802.11 frame processing as follows:\n   WTP\n      *  Beacons\n      *\
    \  Probes\n      *  RTS, CTS, ACK, PS-POLL, CF-POLL,CF-END, CF-ACK\n   AC\n  \
    \    *  Association/Reassociation/Disassociation\n      *  Authentication/Deauthentication\n\
    \      *  Key Management\n      *  IEEE 802.11 Link Security (WEP, TKIP, IEEE\
    \ 802.11i)\n   The Split MAC model is not confined to any one particular deployment\n\
    \   scenario, as we'll see below, and vendors have considerable leeway in\n  \
    \ choosing how to distribute the IEEE 802.11 functionality.\n"
- title: 6.1.2.  Local MAC
  contents:
  - "6.1.2.  Local MAC\n   Local MAC scenarios are characterized by the fact that\
    \ most IEEE\n   802.11 MAC messages are processed by the WTP.  Some IEE 802.11\
    \ MAC\n   frames must be forwarded to the AC (i.e., IEEE 802.11 Association\n\
    \   Request frames), but in general, the WTP manages the MAC\n   interactions.\
    \  Data frames may also be forwarded to the AC, but are\n   generally bridged\
    \ locally.\n"
- title: 6.1.3.  Remote MAC
  contents:
  - "6.1.3.  Remote MAC\n   Remote MAC scenarios are characterized by the fact that\
    \ all IEEE\n   802.11 MAC messages are forwarded to the AC.  The WTP does not\n\
    \   process any of these locally.  This model supports very lightweight\n   WTPs\
    \ that need be little more than smart antennas.  While Remote MAC\n   scenarios\
    \ are not addressed by the current IEEE 802.11 protocol\n   binding for CAPWAP,\
    \ the description is included here for\n   completeness.\n"
- title: 6.1.4.  Data Tunneling
  contents:
  - "6.1.4.  Data Tunneling\n   Regardless of the approach to MAC splitting, there\
    \ is also the matter\n   of where user data packets are translated between wired\
    \ and wireless\n   frame formats, i.e., where the bridging function occurs.  In\
    \ some\n   cases, user data frames are tunneled back to the AC, and in others,\n\
    \   they are locally bridged by the WTP.  While one might expect Remote\n   MAC\
    \ implementations to always tunnel data packets back to the AC, for\n   Local\
    \ and Split MAC modes the decision is not so clear.  Also, it's\n   important\
    \ to note that there are no rules or standards in place that\n   rigidly define\
    \ these terms and associated handling.  Data tunneling\n   is further discussed\
    \ for each scenario below.\n"
- title: 6.2.  Example Scenarios
  contents:
  - "6.2.  Example Scenarios\n   In this section, we describe a number of example\
    \ deployment\n   scenarios.  This is not meant to be an exhaustive enumeration;\n\
    \   rather, it is intended to give a general sense of how WLANs currently\n  \
    \ are or may be deployed.  This will provide important context when we\n   discuss\
    \ adversaries and threats in subsequent sections below.\n"
- title: 6.2.1.  Localized Modular Deployment
  contents:
  - "6.2.1.  Localized Modular Deployment\n   The localized modular model describes\
    \ a WLAN that is deployed within\n   a single domain of control, typically within\
    \ either a single building\n   or some otherwise physically contained area.  This\
    \ would be typical\n   of a small to medium-sized organization.  In general, the\
    \ LAN enjoys\n   some sort of physical security (e.g., it's within the confines\
    \ of a\n   building for which access is somehow limited), although the actual\n\
    \   level of physical security is often far less than is assumed.\n   In such\
    \ deployments, the WLAN is typically an extension of a wired\n   LAN.  However,\
    \ its interface to the wired LAN can vary.  For example,\n   the interconnection\
    \ between the WTPs and ACs can have its own wiring,\n   and its only connection\
    \ to the LAN is via the AC's Distribution\n   System (DS) port(s).  In such cases,\
    \ the WLAN frequently occupies its\n   own distinct addressing partition(s) in\
    \ order to facilitate routing,\n   and the AC often acts as a forwarding element.\n\
    \   In other cases, the WTPs may be mingled with the existing LAN\n   elements,\
    \ perhaps sharing address space, or perhaps somehow logically\n   isolated from\
    \ other wired elements (e.g., by Virtual LAN).  Under\n   these circumstances,\
    \ it is possible that traffic destined to/from the\n   WLAN is mixed with traffic\
    \ to/from the LAN.\n   Localized deployments such as these could potentially choose\
    \ any one\n   of the MAC-splitting scenarios, depending on the size of the\n \
    \  deployment, mobility requirements, and other considerations.  In many\n   cases,\
    \ any one of the various MAC-splitting approaches would be\n   sufficient.  This\
    \ implies that user data may be bridged by either the\n   WTP or the AC.\n"
- title: 6.2.2.  Internet Hotspot or Temporary Network
  contents:
  - "6.2.2.  Internet Hotspot or Temporary Network\n   The Internet hotspot scenario\
    \ is representative of a more general\n   deployment model one might find at cafes,\
    \ hotels, or airports.  It is\n   also quite similar to temporary WLANs, which\
    \ are created for\n   conferences, conventions, and the like.  Some common characteristics\n\
    \   of these networks include the following:\n   o  Primary function is to provide\
    \ Internet access\n   o  Authentication may be very weak\n   o  There frequently\
    \ is no IEEE 802.11 link security\n   Sometimes, the Local MAC model is used.\
    \  In such cases, the AC may be\n   \"in the clouds\" (out on the Internet somewhere),\
    \ and user data\n   traffic will typically be locally bridged, rather than tunneled\
    \ back\n   to the AC.  Some IEEE 802.11 management traffic may be tunneled back\n\
    \   to the AC, but frequently the authentication consists in simply\n   knowing\
    \ the Service Set Identifier (SSID) and perhaps a shared key\n   for use with\
    \ WEP or WPA-PSK.\n   In other cases, a Split MAC model may be used.  This is\
    \ more common\n   in airport and hotel scenarios, where users may have an account\
    \ that\n   requires verification with some back-end infrastructure prior to\n\
    \   access.  In these cases, IEEE 802.11 management frames are tunneled\n   back\
    \ to the AC (e.g., user authentication), and stronger IEEE 802.11\n   link security\
    \ may be provided (e.g., RSN), but user data is still\n   typically locally bridged,\
    \ as the primary goal is to provide Internet\n   access.\n   A third variation\
    \ on this scenario entails tunneling user data\n   through a local AC in order\
    \ to apply centralized policy.  For\n   example, in a hotel or airport scenario,\
    \ there is no reason to\n   provide direct access between WLAN users (who typically\
    \ are within a\n   private address space), and in fact, allowing such access might\n\
    \   invite various sorts of malicious behavior.  In such cases, tunneling\n  \
    \ all user data back to the (local) AC provides a security choke point\n   at\
    \ which policy may be applied to the traffic.\n"
- title: 6.2.3.  Distributed Deployments
  contents:
  - "6.2.3.  Distributed Deployments\n   The distributed deployment model describes\
    \ a more complex WLAN\n   topology that features network segments that are typically\
    \ somehow\n   spatially separated, although not necessarily so.  These segments\n\
    \   might be connected in a physically secure manner, or (if they are\n   widely\
    \ separated) they might be connected across potentially hostile\n   hops.  Below\
    \ we discuss several subgroups of this model.\n"
- title: 6.2.3.1.  Large Physically Contained Organization
  contents:
  - "6.2.3.1.  Large Physically Contained Organization\n   One distributed deployment\
    \ example involves a single large\n   organization that is physically contained,\
    \ typically within one large\n   building.  The network might feature logically\
    \ distinct (e.g., per-\n   department or per-floor) network segments, and in some\
    \ cases, there\n   might be firewalls between the segments for access control.\
    \  In such\n   deployments, the AC is typically in a centralized datacenter, but\n\
    \   there might also be a hierarchy of ACs, with a master in the\n   datacenter,\
    \ and subordinate ACs distributed among the network\n   segments.  Such deployments\
    \ typically assume some level of physical\n   security for the network infrastructure.\n"
- title: 6.2.3.2.  Campus Deployments
  contents:
  - "6.2.3.2.  Campus Deployments\n   Some large organizations have networks that\
    \ span multiple buildings.\n   The interconnections between these buildings might\
    \ be wired (e.g.,\n   underground cables), or might be wireless (e.g., a point-to-point\n\
    \   Metropolitan Area Network (MAN) link).  The interconnections may be\n   secured,\
    \ but sometimes they are not.  The organization may be\n   providing outdoor wireless\
    \ access to users, in which case some WTPs\n   will typically be located outdoors,\
    \ and these may or may not be\n   within physically secure space.  For example,\
    \ college campuses\n   frequently provide outdoor wireless access, and the associated\
    \ WTPs\n   may simply be mounted on a light post.\n   For such deployments, ACs\
    \ may be centrally located in a datacenter,\n   or they may be distributed.  User\
    \ data traffic may be locally\n   bridged, but more frequently it is tunneled\
    \ back to the AC, as this\n   facilitates mobility and centralized policy enforcement.\n"
- title: 6.2.3.3.  Branch Offices
  contents:
  - "6.2.3.3.  Branch Offices\n   A common deployment model entails an enterprise\
    \ consisting of a\n   headquarters and one or more branch offices, with the branches\n\
    \   connected to the central HQ.  In some cases, the site-to-site\n   connection\
    \ is via a private WAN link, and in others it is across the\n   Internet.  For\
    \ connections crossing potentially hostile hops (e.g.,\n   the Internet), some\
    \ sort of Virtual Private Network (VPN) is\n   typically employed as a protective\
    \ measure.\n   In some simple branch office scenarios, there are only WTPs at\
    \ the\n   remote site, and these are managed by a controller residing at the\n\
    \   central site.  In other cases, a branch site may have its own\n   subordinate\
    \ controller, with the master controller again residing at\n   the central site.\
    \  In the first case, local bridging is often the\n   best choice for user data,\
    \ due to latency and link capacity issues.\n   In the second case, traffic may\
    \ be locally bridged by the WTPs, or it\n   may be forwarded to the local subordinate\
    \ controller for centralized\n   policy enforcement.  The choice depends on many\
    \ factors, including\n   local topology and security policy.\n"
- title: 6.2.3.4.  Telecommuter or Remote Office
  contents:
  - "6.2.3.4.  Telecommuter or Remote Office\n   It is becoming increasingly common\
    \ to send WTPs home with employees\n   for use as a telecommuting solution.  While\
    \ there are not yet any\n   standards or hard rules for how these work, a fairly\
    \ typical\n   configuration provides Split MAC with all user data tunneled back\
    \ to\n   the controller in the organization's datacenter so that the WTP is\n\
    \   essentially providing wireless VPN services.  These devices may in\n   some\
    \ cases provide their own channel security (e.g., IPsec), but\n   alternative\
    \ approaches are possible.  For example, there may be a\n   stand-alone VPN gateway\
    \ between the WTP and the Internet, which\n   forwards all organization-bound\
    \ traffic to the VPN gateway.\n   Similarly, it is becoming increasingly common\
    \ for travelers to plug a\n   WTP into a hotel broadband connection.  While in\
    \ many cases, these\n   WTPs are stand-alone fat APs, in some cases they are configured\
    \ to\n   create a secure connection to a centralized controller back at\n   headquarters,\
    \ essentially forming a VPN connection.  In such\n   scenarios, a Split MAC approach\
    \ is typical, but split-tunneling may\n   also be supported (i.e., only data traffic\
    \ destined for the\n   headquarters is tunneled back to the controller, with Internet-bound\n\
    \   traffic locally bridged).\n"
- title: 7.  General Adversary Capabilities
  contents:
  - "7.  General Adversary Capabilities\n   This section describes general capabilities\
    \ we might expect an\n   adversary to have in various CAPWAP scenarios.  Obviously,\
    \ it is\n   possible to limit what an adversary can do through various deployment\n\
    \   restrictions (e.g., provide strict physical security for the AC-WTP\n   link),\
    \ but such restrictions are simply not always feasible.  For\n   example, it is\
    \ not possible to provide strict physical security for\n   various aspects of\
    \ the telecommuter scenario.  Thus, we must consider\n   what capabilities an\
    \ adversary might have in the worst case, and plan\n   accordingly.\n"
- title: 7.1.  Passive versus Active Adversaries
  contents:
  - "7.1.  Passive versus Active Adversaries\n   One way to classify adversaries is\
    \ in terms of their ability to\n   interact with AC/WTP communications.  For example,\
    \ a passive\n   adversary is one who can observe and perhaps record traffic, but\n\
    \   cannot interact with it.  They can \"see\" the traffic as it goes by,\n  \
    \ but they cannot interfere in any way, and they cannot inject traffic\n   of\
    \ their own.  Note that such an adversary does not necessarily see\n   all traffic\
    \ -- they may miss portions of a communication, e.g.,\n   because some packets\
    \ traverse a different path, or because the\n   network is so busy that the adversary\
    \ can't keep up (and drops\n   packets as a result).\n   An active adversary,\
    \ on the other hand, can directly interact with\n   the traffic in real-time.\
    \  There are two modes in which an active\n   adversary might operate:\n   Pass-by\
    \ (or sniffer)\n      *  Can observe/record traffic\n      *  Can inject packets\n\
    \      *  Can replay packets\n      *  Can reflect packets (i.e., send duplicate\
    \ packets to a\n         different destination, including the to the packet source)\n\
    \      *  Can cause redirection (e.g., via Address Resolution Protocol\n     \
    \    (ARP)/DNS poisoning)\n   Inline (Man-in-the-Middle, or MitM)\n      *  Can\
    \ observe/record traffic\n      *  Can inject packets\n      *  Can replay packets\n\
    \      *  Can reflect packets (with or without duplication)\n      *  Can delete\
    \ packets\n      *  Can modify packets\n      *  Can delay packets\n   A passive\
    \ adversary could be located anywhere along the path between\n   the AC and WTP,\
    \ and is characterized by the fact that it only\n   listens:\n        +------+\n\
    \        |client|         +--------+     |\n        |(STA) |         |   WTP \
    \ |     |     +------+\n        +------+ ) ) ) ) |        |-----|    /       \
    \ \\    +------+\n       /      /          +--------+     |-x-( optional )---|\
    \  AC  |\n      +------+                          | |  \\ cloud  /    +------+\n\
    \                                        | |   +------+\n                    \
    \                      |\n                                          |  +-----------+\n\
    \                                          +--|  pass-by  |\n                \
    \                             |  listener |\n                                \
    \             +-----------+\n                     Figure 5: Passive Attacker\n\
    \   An active adversary may attach in the same manner as the passive\n   adversary\
    \ (in which case it is in pass-by mode), or it may be lodged\n   directly in the\
    \ path between the AC and WTP (inline mode):\n        +------+\n        |client|\
    \       +--------+   |\n        |(STA) |       |   WTP  |   | +------+    +------+\n\
    \        +------+ ) ) ) |        |---| |active|   /        \\    +------+\n  \
    \     /      /        +--------+   |-| MitM |--( optional )---|  AC  |\n     \
    \ +------+                      | +------+   \\ cloud  /    +------+\n       \
    \                             |             +------+\n               Figure 6:\
    \ Active Man-in-the-Middle Attacker\n   If it is not inline, it can only observe\
    \ and create traffic; if it is\n   inline, it can do whatever it wishes with the\
    \ traffic it sees.\n   It is important to recognize that becoming a MitM does\
    \ not\n   necessarily require physical insertion directly into the transmission\n\
    \   path.  Alternatively, the adversary can cause traffic to be diverted\n   to\
    \ the MitM system, e.g., via ARP or DNS poisoning.  Hence, launching\n   an MitM\
    \ attack is not so difficult as it might first appear.\n"
- title: 8.  Vulnerabilities Introduced by CAPWAP
  contents:
  - "8.  Vulnerabilities Introduced by CAPWAP\n   In this section, we discuss vulnerabilities\
    \ that arise as a result of\n   splitting the AP function across potentially hostile\
    \ hops.  We\n   primarily consider network-based vulnerabilities, and while in\n\
    \   particular we do not address how an adversary might affect a physical\n  \
    \ compromise of the WTP or AC, we do consider the potential effects of\n   such\
    \ compromises with respect to CAPWAP and the operational changes\n   it introduces\
    \ when compared to stand-alone AP deployments.\n   Functionally, we are interested\
    \ in two general \"states of being\" with\n   respect to AC-WTP communications:\
    \ the session establishment phase or\n   state, and the \"connected\" (or session\
    \ established) state.  We\n   discuss each of these further below.  Also, it is\
    \ important to note\n   that we first describe vulnerabilities assuming that the\
    \ CAPWAP\n   communications lack security of any kind.  Later, we will evaluate\n\
    \   the protocol given the security mechanisms currently planned for\n   CAPWAP.\n"
- title: 8.1.  The Session Establishment Phase
  contents:
  - "8.1.  The Session Establishment Phase\n   The session establishment phase consists\
    \ of two subordinate phases:\n   discovery, and association or joining.  These\
    \ are treated\n   individually in the following sections.\n"
- title: 8.1.1.  The Discovery Phase
  contents:
  - "8.1.1.  The Discovery Phase\n   Discovery consists of an information exchange\
    \ between the AC and WTP.\n   There are several potential areas of exposure:\n\
    \   Information Leakage:  During Discovery, information about the WTP and\n  \
    \    AC hardware and software are exchanged, as well as information\n      about\
    \ the AC's current operational state.  This could provide an\n      adversary\
    \ with valuable insights.\n   DoS Potential:  During Discovery, there are several\
    \ opportunities for\n      Denial of Service (DoS), beyond those inherently available\
    \ to an\n      inline adversary.  For example, an adversary might respond to a\n\
    \      WTP more quickly than a valid AC, causing the WTP to attempt to\n     \
    \ join with a non-existent AC, or one which is currently at maximum\n      load.\n\
    \   Redirection Potential:  There are multiple ways in which an adversary\n  \
    \    might redirect a WTP during Discovery.  For example, the adversary\n    \
    \  might pretend to be a valid AC, and entice the WTP to connect to\n      it.\
    \  Or, the adversary might instead cause the WTP to associate\n      with the\
    \ AC of the adversary's choosing, by posing as a DNS or\n      DHCP server, injecting\
    \ a spoofed Discovery Response, or by\n      modifying valid AC responses.\n \
    \  Misdirection:  An adversary might mislead either the WTP or AC by\n      modifying\
    \ the Discovery Request or Response in flight.  In this\n      way, the AC and/or\
    \ WTP will have a false view of the other's\n      capabilities, and this might\
    \ cause a change in the way they\n      interact (e.g., they might not use important\
    \ features not\n      supported by earlier versions).\n"
- title: 8.1.2.  Forming an Association (Joining)
  contents:
  - "8.1.2.  Forming an Association (Joining)\n   The association phase begins once\
    \ the WTP has determined with which\n   AC it wishes to join.  There are several\
    \ potential areas of exposure\n   during this phase:\n   Information Leakage:\
    \  During association, the adversary could glean\n      useful information about\
    \ hardware, software, current\n      configuration, etc. that could be used in\
    \ various ways.\n   DoS Potential:  During formation of a WTP-AC association,\
    \ there are\n      several opportunities for Denial of Service (DoS), beyond those\n\
    \      inherently available to an inline adversary.  For example, the\n      adversary\
    \ could flood the AC with connection setup requests.  Or,\n      it could respond\
    \ to the WTP with invalid connection setup\n      responses, causing a connection\
    \ reset.  An adversary with MitM\n      capability could delete critical session\
    \ establishment packets.\n   Misdirection:  An adversary might mislead either\
    \ the WTP or AC by\n      modifying the association request(s) or response(s)\
    \ in flight.  In\n      this way, the AC and/or WTP will have an inaccurate view\
    \ of the\n      other's capabilities, and this might cause a change in the way\n\
    \      they interact.\n   Some of these types of exposure are extremely difficult\
    \ to prevent.\n   However, there are things we can do to mitigate the effects,\
    \ as we\n   will see below.\n"
- title: 8.2.  The Connected Phase
  contents:
  - "8.2.  The Connected Phase\n   Once the WTP and AC have established an association,\
    \ the adversary's\n   attention will turn to the network connection.  If we assume\
    \ a\n   passive adversary, the primary concern for established connections is\n\
    \   eavesdropping.  If we assume an active adversary, there are several\n   other\
    \ potential areas of exposure:\n   Connection Hijacking:  An adversary may assume\
    \ the identity of one\n      end of the connection and take over the conversation.\
    \  There are\n      numerous ways in which the true owner of the identity may\
    \ be taken\n      off-line, including DoS or MitM attacks.\n   Eavesdropping:\
    \  An adversary may glean useful information from\n      knowledge of the contents\
    \ of CAPWAP control and/or data traffic.\n   Modification of User Data:  An adversary\
    \ with MitM capabilities could\n      modify, delete, or insert user data frames.\n\
    \   Modification of Control/Monitoring Messages:  An adversary with MitM\n   \
    \   capability could modify control traffic such as statistics, status\n     \
    \ information, etc. to create a false impression at the recipient.\n   Modification/Control\
    \ of Configuration:  An adversary with MitM\n      capability could modify configuration\
    \ messages to create\n      unexpected conditions at the recipient.  Likewise,\
    \ if a WTP is\n      redirected during Discovery (or joining) and connects to\
    \ an\n      adversary rather than an authorized AC, the adversary may exert\n\
    \      complete control over the WTPs configuration, including\n      potentially\
    \ loading tainted WTP firmware.\n"
- title: 9.  Adversary Goals in CAPWAP
  contents:
  - "9.  Adversary Goals in CAPWAP\n   This section gives an sampling of potential\
    \ adversary goals.  It is\n   not exhaustive, and makes no judgment as to the\
    \ relative likelihood\n   or value of each individual goal.  Rather, it is meant\
    \ to give some\n   idea of what is possible.  It is important to remember that\
    \ clever\n   attacks often result when seemingly innocuous flaws or\n   vulnerabilities\
    \ are combined in some non-intuitive way.  Hence, we\n   don't rule out some goal\
    \ that, taken alone, might not seem to make\n   sense from an adversarial perspective.\n"
- title: 9.1.  Eavesdrop on AC-WTP Traffic
  contents:
  - "9.1.  Eavesdrop on AC-WTP Traffic\n   There are numerous reasons why an adversary\
    \ might want to eavesdrop\n   on AC-WTP traffic.  For example, it allows for reconnaissance,\n\
    \   providing answers to the following questions:\n   o  Where are the ACs?\n\
    \   o  Where are the WTPs?\n   o  Who owns them?\n   o  Who manufactured them?\n\
    \   o  What version of firmware do they run?\n   o  What cryptographic capabilities\
    \ do they have?\n   Similarly, snooping on tunneled data traffic might potentially\
    \ reveal\n   a great deal about the network, including answers to the following:\n\
    \   o  Who's using the WLAN?\n   o  When, and for how long?\n   o  What addresses\
    \ are they using?\n   o  What protocols are they using?\n   o  What over-the-air\
    \ security are they using?\n   o  Who/What are they talking to?\n   Additionally,\
    \ access to tunneled user data could allow the attacker\n   to see confidential\
    \ information being exchanged by applications\n   (e.g., financial transactions).\
    \  An eavesdropper may gain access to\n   valuable information that either provides\
    \ the basis for another\n   perhaps more sophisticated attack, or which has its\
    \ own intrinsic\n   value.\n"
- title: 9.2.  WTP Impersonation and/or Rootkit Installation
  contents:
  - "9.2.  WTP Impersonation and/or Rootkit Installation\n   An adversary might want\
    \ to impersonate or control an authorized WTP\n   for many reasons, some of which\
    \ we might realistically imagine today,\n   and perhaps others about which we\
    \ have no clue at this point.\n   Examples we might reasonably imagine include\
    \ the following:\n   o  to facilitate MitM attacks against WLAN users\n   o  to\
    \ leak/inject or otherwise compromise WLAN data\n   o  to give an inaccurate view\
    \ of the state of the WLAN\n   o  to gain access to a trusted channel to an AC,\
    \ through which\n      various protocol attacks might be launched (e.g., hijack\
    \ client\n      sessions from other WTPs)\n   o  to facilitate Denial-of-Service\
    \ attacks against WLAN users or the\n      network\n"
- title: 9.3.  AC Impersonation and/or Rootkit Installation
  contents:
  - "9.3.  AC Impersonation and/or Rootkit Installation\n   For reasons similar to\
    \ the WTP impersonation discussed above, an\n   adversary might want to impersonate\
    \ an authorized AC for many\n   reasons.  Examples we might reasonably imagine\
    \ include the following:\n   o  to facilitate DoS attacks against WLANs\n   o\
    \  to facilitate MitM attacks against WLAN users\n   o  to intercept user mobility\
    \ context from another AC (possibly\n      including security-sensitive information\
    \ such as cryptographic\n      keys)\n   o  to facilitate selective control of\
    \ one or more WTPs\n      *  modify WTP configuration\n      *  load tainted firmware\
    \ onto WTP\n   o  to assist in controlling which AC associates with which WTP\n\
    \   o  to facilitate IEEE 802.11 association of unauthorized WLAN user(s)\n  \
    \ o  to exploit inter-AC trust in order facilitate attacks on other ACs\n   In\
    \ general, AC impersonation opens the door to a large measure of\n   control over\
    \ the WLAN, and could be used as the foundation to many\n   other attacks.\n"
- title: 9.4.  Other Goals or Sub-Goals
  contents:
  - "9.4.  Other Goals or Sub-Goals\n   There are many less concrete goals an adversary\
    \ might have which,\n   taken alone, might not seem to have any purpose, but when\
    \ combined\n   with other goals/attacks, might have very definite and undesirable\n\
    \   consequences.  Here are some examples:\n   o  cause CAPWAP de-association\
    \ of WTP/AC\n   o  cause IEEE 802.11 de-association of authorized user\n   o \
    \ inject/modify/delete tunneled IEEE 802.11 user traffic\n      *  to interact\
    \ with a specific application\n      *  to launch various attacks on WLAN user\
    \ systems\n      *  to launch protocol fuzzing or other attacks on the AC that\n\
    \         bridges between IEEE 802.11 and 802.3 frame formats\n   o  control DNS\
    \ responses\n   o  control DHCP/BOOTP responses\n   Anticipating all of the things\
    \ an adversary might want to do is a\n   daunting task.  Part of the difficulty\
    \ stems from the fact that we\n   are analyzing CAPWAP in a very general sense,\
    \ rather than in a\n   specific deployment scenario with specific assets and very\
    \ specific\n   adversary goals.  However, we have no choice but to take this\n\
    \   approach if we are to provide reasonably good security across the\n   board.\n"
- title: 10.  Countermeasures and Their Effects
  contents:
  - "10.  Countermeasures and Their Effects\n   In the previous sections, we described\
    \ numerous vulnerabilities that\n   result from splitting the AP function in two,\
    \ and also discussed a\n   number of adversary goals that could be realized by\
    \ exploiting one or\n   more of those vulnerabilities.  In this section, we describe\n\
    \   countermeasures we can apply to mitigate the risks that come with the\n  \
    \ introduction of CAPWAP into WLAN deployment scenarios.\n"
- title: 10.1.  Communications Security Elements
  contents:
  - '10.1.  Communications Security Elements

    '
- title: 10.1.1.  Mutual Authentication
  contents:
  - "10.1.1.  Mutual Authentication\n   Mutual authentication consists in each side\
    \ proving its identity to\n   the other.  There are numerous authentication protocols\
    \ that\n   accomplish this, typically using either a shared secret (e.g., a pre-\n\
    \   shared key) or by relying on a trusted third party (e.g., with\n   digital\
    \ credentials such as X.509 certificates).\n   Strong mutual authentication accomplishes\
    \ the following:\n   o  helps prevent AC/WTP impersonation\n   o  helps prevent\
    \ MitM attacks\n   o  can be used to limit DoS attacks.\n"
- title: 10.1.1.1.  Authorization
  contents:
  - "10.1.1.1.  Authorization\n   While authentication consists in proving the identity\
    \ of an entity,\n   authorization consists in determining whether that entity\
    \ should have\n   access to some resource.  The current IEEE 802.11i CAPWAP protocol\n\
    \   binding takes a rather simplistic approach to authorization,\n   depending\
    \ on the authentication method chosen.  If pre-shared keys\n   are used, authorization\
    \ is broad and coarse: if the device knows the\n   pre-shared key, the device\
    \ is \"trusted\", meaning the that it is\n   believed to be what it claims to\
    \ be ( AC versus WTP), and it is\n   granted all privilege/access associated with\
    \ that device class.\n   When using pre-shared keys, some granularity may be achieved\
    \ by\n   creating classes, each with their own pre-shared key, but this still\n\
    \   has drawbacks.  For example, while possession of the key may suffice\n   to\
    \ identify the device as a member of a given group or class, it\n   cannot be\
    \ used to prove a device is either a WTP or an AC.  This\n   means the key can\
    \ be abused, and those possessing the key can claim\n   to be either type of device.\n\
    \   When X.509v3 certificates are used for authentication, much more\n   granular\
    \ authorization policies are possible.  Nonetheless, the\n   current IEEE 802.11i\
    \ protocol binding remains simplistic in its\n   approach (though this may be\
    \ addressed in future revisions).  As\n   currently defined, the X.509v3 certificates\
    \ facilitate the following\n   authorization checks:\n   o  CommonName (CN): the\
    \ CN contains the MAC address of the device; if\n      the relying party (AC or\
    \ WTP) has a method for determining\n      \"acceptability\" of a given MAC address,\
    \ this helps prevent AC/WTP\n      impersonation, MitM attacks, and may help in\
    \ limiting DoS attacks\n   o  Extended Key Usage (EKU) key purpose ID bits: CAPWAP\
    \ uses specific\n      key purpose ID bits (see [RFC5415] for more information)\
    \ to\n      explicitly differentiate between an AC and a WTP.  If use of these\n\
    \      bits is strictly enforced, this segregates devices into AC versus\n   \
    \   WTP classes, and assists in preventing AC/WTP impersonation, MitM\n      attacks,\
    \ and may also help in limiting DoS attacks.  However, if\n      the id-kp-anyExtendedKeyUsage\
    \ keyPurposeID is supported, this\n      mechanism may be on a par with pre-shared\
    \ keys, as a rogue device\n      has the ability to claim it is either a WTP or\
    \ AC, unless CN-based\n      access controls are employed in tandem.\n   It should\
    \ be noted that certificate-based authorization and zero\n   configuration are\
    \ not fully compatible.  Even if the WTPs and the ACs\n   are shipped with manufacturer-provided\
    \ certificates, the WTPs need a\n   way to identify the correct AC is in this\
    \ deployment (as opposed to\n   other ACs from the same vendor, purchased and\
    \ controlled by an\n   adversary), and the AC needs to know which WTPs are part\
    \ of this\n   deployment (as opposed to WTPs purchased and controlled by an\n\
    \   adversary).\n   The threat analysis in this document assumes that WTPs can\
    \ identify\n   the correct AC, and the AC can identify the correct WTPs.  Analysis\n\
    \   of situations where either of these do not hold is beyond the scope\n   of\
    \ this document.\n"
- title: 10.1.2.  Data Origin Authentication
  contents:
  - "10.1.2.  Data Origin Authentication\n   Data origin authentication typically\
    \ depends on first authenticating\n   the party at the other end of the channel,\
    \ and then binding the\n   identity derived from that authentication process to\
    \ the data origin\n   authentication process.  Data origin authentication primarily\n\
    \   prevents an attacker from injecting data into the communication\n   channel\
    \ and pretending it was originated by a valid endpoint.  This\n   mitigates risk\
    \ by preventing the following:\n   o  packet injection\n   o  connection hijacking\n\
    \   o  modification of control and/or user data\n   o  impersonation\n"
- title: 10.1.3.  Data Integrity Verification
  contents:
  - "10.1.3.  Data Integrity Verification\n   Data integrity verification provides\
    \ assurance that data has not been\n   altered in transit, and is another link\
    \ in the trust chain beginning\n   from mutual authentication, extending to data\
    \ origin authentication,\n   and ending with integrity verification.  This prevents\
    \ the adversary\n   from undetectably modifying otherwise valid data while in\
    \ transit.\n   It effectively prevents reflection and modification, and in some\n\
    \   cases may help to prevent re-ordering.\n"
- title: 10.1.4.  Anti-Replay
  contents:
  - "10.1.4.  Anti-Replay\n   Anti-replay is somewhat self-explanatory: it prevents\
    \ replay of valid\n   packets at a later time, or to a different recipient.  It\
    \ may also\n   prevent limited re-ordering of packets.  It is typically accomplished\n\
    \   by assigning monotonically increasing sequence numbers to packets.\n"
- title: 10.1.5.  Confidentiality
  contents:
  - "10.1.5.  Confidentiality\n   Data confidentiality prevents eavesdropping by protecting\
    \ data as it\n   passes over the network.  This is typically accomplished using\n\
    \   encryption.\n"
- title: 10.2.  Putting the Elements Together
  contents:
  - "10.2.  Putting the Elements Together\n   Above we described various security\
    \ elements and their properties.\n   Below, we discuss combinations of these elements\
    \ in terms of CAPWAP.\n"
- title: 10.2.1.  Control Channel Security
  contents:
  - "10.2.1.  Control Channel Security\n   The CAPWAP control channel is used for\
    \ forming an association between\n   a WTP and AC, and subsequently it allows\
    \ the AC to provision and\n   monitor the WTP.  This channel is critical for the\
    \ control,\n   management, and monitoring of the WLAN, and thus requires all of\
    \ the\n   security elements described above.  With these elements in place, we\n\
    \   can effectively create a secure channel that mitigates almost all of\n   the\
    \ vulnerabilities described above.\n"
- title: 10.2.2.  Data Channel Security
  contents:
  - "10.2.2.  Data Channel Security\n   The CAPWAP data channel contains some IEEE\
    \ 802.11 management traffic\n   including association/disassociation, reassociation,\
    \ and\n   deauthentication.  It also may contain potentially sensitive user\n\
    \   data.  If we assume that threats to this channel exist (i.e., it\n   traverses\
    \ potentially hostile hops), then providing strong mutual\n   authentication coupled\
    \ with data origin/integrity verification would\n   prevent an adversary from\
    \ injecting and/or modifying transit data, or\n   impersonating a valid AC or\
    \ WTP.  Adding confidentiality would\n   prevent eavesdropping.\n"
- title: 11.  Countermeasures Provided by DTLS
  contents:
  - "11.  Countermeasures Provided by DTLS\n   Datagram TLS (DTLS) is the currently\
    \ proposed security solution for\n   CAPWAP.  DTLS supports the following security\
    \ functionality:\n   o  Mutual Authentication (pre-shared secrets or X.509 Certificates)\n\
    \   o  Mutual Authorization (pre-shared secrets or X.509 Certificates)\n   o \
    \ Data Origin Authentication\n   o  Data Integrity Verification\n   o  Anti-replay\n\
    \   o  Confidentiality (supports strong cryptographic algorithms)\n   Using DTLS\
    \ for both the control and data channels mitigates nearly\n   all risks resulting\
    \ from splitting the AP function in two.\n"
- title: 12.  Issues Not Addressed By DTLS
  contents:
  - "12.  Issues Not Addressed By DTLS\n   Unfortunately, DTLS does not solve all\
    \ of our CAPWAP security\n   concerns.  There are some things it just cannot prevent.\
    \  These are\n   enumerated below.\n"
- title: 12.1.  DoS Attacks
  contents:
  - "12.1.  DoS Attacks\n   Even with the security provided by DTLS, CAPWAP is still\
    \ susceptible\n   to various types of DoS attack:\n   o  Session Initialization:\
    \ an adversary could initiate thousands of\n      DTLS handshakes simultaneously\
    \ in order to exhaust memory\n      resources on the AC; DTLS provides a mitigation\
    \ tool via the\n      HelloVerifyRequest, which ensures that the initiator can\
    \ receive\n      packets at the claimed source address prior to allocating\n \
    \     resources.  However, this would not thwart a botnet-style attack.\n   o\
    \  Cryptographic DoS: an adversary could flood either the AC or WTP\n      with\
    \ properly formed DTLS records containing garbage, causing the\n      recipient\
    \ to waste compute cycles decrypting and authenticating\n      the traffic.\n\
    \   o  Session interference: a MitM could either drop important session\n    \
    \  establishment packets or inject bogus connection resets during\n      session\
    \ establishment phase.  It could also interfere with other\n      traffic in an\
    \ established session.\n   These attacks can be mitigated through various mechanisms,\
    \ but not\n   entirely avoided.  For example, session initialization can be rate-\n\
    \   limited, and in case of resource exhaustion, some number of\n   incompletely\
    \ initialized sessions could be discarded.  Also, such\n   events should be strictly\
    \ audited.\n   Likewise, cryptographic DoS attacks are detectable if appropriate\n\
    \   auditing and monitoring controls are implemented.  When detected,\n   these\
    \ events should (at minimum) trigger an alert.  Additional\n   mitigation might\
    \ be realized by randomly discarding packets.\n   Session interference is probably\
    \ the most difficult of DoS attacks.\n   It is very difficult to detect in real-time,\
    \ although it may be\n   detected if exceeding a lost packet threshold triggers\
    \ an alert.\n   However, this depends on the MitM not being in a position to delete\n\
    \   the alert before it reaches its appropriate destination.\n"
- title: 12.2.  Passive Monitoring (Sniffing)
  contents:
  - "12.2.  Passive Monitoring (Sniffing)\n   CAPWAP protocol security cannot prevent\
    \ (or detect) passive\n   monitoring.  The best we can do is provide a confidentiality\n\
    \   mechanism.\n"
- title: 12.3.  Traffic Analysis
  contents:
  - "12.3.  Traffic Analysis\n   DTLS provides no defense for traffic analysis.  If\
    \ this is a concern,\n   there are traffic generation and padding techniques designed\
    \ to\n   mitigate this threat, but none of these are currently specified for\n\
    \   CAPWAP.\n"
- title: 12.4.  Active MitM Interference
  contents:
  - "12.4.  Active MitM Interference\n   This was discussed in more limited scope\
    \ in the section above on DoS\n   attacks.  An active MitM can delete or re-order\
    \ packets in a manner\n   that is very difficult to detect, and there is little\
    \ the CAPWAP\n   protocol can do in such cases.  If packet loss is reported upon\n\
    \   exceeding some threshold, then perhaps detection might be possible,\n   but\
    \ this is not guaranteed.\n"
- title: 12.5.  Other Active Attacks
  contents:
  - "12.5.  Other Active Attacks\n   In addition to the issues raised above, there\
    \ are other active\n   attacks that can be mounted if the adversary has access\
    \ to the wired\n   medium.  For example, the adversary may be able to impersonate\
    \ a DNS\n   or DHCP server, or to poison either a DNS or ARP cache.  Such attacks\n\
    \   are beyond the scope of CAPWAP, and point to an underlying LAN\n   security\
    \ problem.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   This document outlines a threat analysis for\
    \ CAPWAP in the context of\n   IEEE 802.11 deployments, and as such, no additional\
    \ CAPWAP-related\n   security considerations are described here.  However, in\
    \ some cases\n   additional management channels (e.g., Simple Network Management\n\
    \   Protocol (SNMP)) may be introduced into CAPWAP deployments.  Whenever\n  \
    \ this occurs, related security considerations MUST be described in\n   detail\
    \ in those documents.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The authors gratefully acknowledge the reviews and\
    \ helpful comments\n   of Dan Romascanu, Joe Salowey, Sam Hartman, Mahalingham\
    \ Mani, and\n   Pasi Eronen.\n"
- title: 15.  References
  contents:
  - '15.  References

    '
- title: 15.1.  Normative References
  contents:
  - "15.1.  Normative References\n   [80211I]    \"IEEE Std 802.11i: WLAN Specification\
    \ for Enhanced\n               Security\", April 2004.\n   [80211SEC]  Edney,\
    \ J. and W. Arbaugh, \"Real 802.11 Security - Wi-Fi\n               protected\
    \ Access and 802.11i\", 2004.\n   [8021X]     \"IEEE Std 802.1X-2004: Port-based\
    \ Network Access\n               Control\", December 2004.\n   [RFC2119]   Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC4118]   Yang, L., Zerfos, P., and E. Sadot,\
    \ \"Architecture\n               Taxonomy for Control and Provisioning of Wireless\
    \ Access\n               Points (CAPWAP)\", RFC 4118, June 2005.\n   [RFC5415]\
    \   Calhoun, P., Ed., Montemurro, M., Ed., and D. Stanley,\n               Ed.,\
    \ \"Control And Provisioning of Wireless Access Points\n               (CAPWAP)\
    \ Protocol Specification\", RFC 5415, March 2009.\n   [RFC5416]   Calhoun, P.,\
    \ Ed., Montemurro, M., Ed., and D. Stanley,\n               Ed., \"Control And\
    \ Provisioning of Wireless Access Points\n               (CAPWAP) Protocol Binding\
    \ for IEEE 802.11\", RFC 5416,\n               March 2009.\n"
- title: 15.2.  Informative References
  contents:
  - "15.2.  Informative References\n   [RFC3579]   Aboba, B. and P. Calhoun, \"RADIUS\
    \ (Remote Authentication\n               Dial In User Service) Support For Extensible\n\
    \               Authentication Protocol (EAP)\", RFC 3579, September 2003.\n \
    \  [RFC3748]   Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n   \
    \            Levkowetz, \"Extensible Authentication Protocol (EAP)\",\n      \
    \         RFC 3748, June 2004.\n   [RFC4072]   Eronen, P., Hiller, T., and G.\
    \ Zorn, \"Diameter Extensible\n               Authentication Protocol (EAP) Application\"\
    , RFC 4072,\n               August 2005.\n   [RFC4962]   Housley, R. and B. Aboba,\
    \ \"Guidance for Authentication,\n               Authorization, and Accounting\
    \ (AAA) Key Management\",\n               BCP 132, RFC 4962, July 2007.\n   [WEPSEC]\
    \    Petroni, N. and W. Arbaugh, \"The Dangers of Mitigating\n               Security\
    \ Design Flaws: A Wireless Case Study\",\n               January 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Scott G. Kelly\n   Aruba Networks\n   1322 Crossman Ave\n\
    \   Sunnyvale, CA  94089\n   US\n   EMail: scott@hyperthought.com\n   T. Charles\
    \ Clancy\n   DoD Laboratory for Telecommunications Sciences\n   8080 Greenmead\
    \ Drive\n   College Park, MD  20740\n   US\n   EMail: clancy@LTSnet.net\n"
