- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n               for Parallel-printer-like\
    \ Hardware Devices\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an IAB standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"IAB\n   Official\
    \ Protocol Standards\" for the standardization state and status\n   of this protocol.\
    \  Distribution of this memo is unlimited.\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in TCP/IP based internets.\n\
    \   In particular, it defines objects for the management of\n   parallel-printer-like\
    \ devices.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists\n   of three components.  They are:\n   RFC 1155 which defines\
    \ the SMI, the mechanisms used for\n   describing and naming objects for the purpose\
    \ of management.\n   RFC 1212 defines a more concise description mechanism, which\n\
    \   is wholly consistent with the SMI.\n   RFC 1156 which defines MIB-I, the core\
    \ set of managed\n   objects for the Internet suite of protocols.  RFC 1213,\n\
    \   defines MIB-II, an evolution of MIB-I based on\n   implementation experience\
    \ and new operational requirements.\n   RFC 1157 which defines the SNMP, the protocol\
    \ used for\n   network access to managed objects.\n   The Framework permits new\
    \ objects to be defined for the\n   purpose of experimentation and evaluation.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information\n   store,\
    \ termed the Management Information Base or MIB.\n   Objects in the MIB are defined\
    \ using the subset of Abstract\n   Syntax Notation One (ASN.1) [7] defined in\
    \ the SMI.  In\n   particular, each object has a name, a syntax, and an\n   encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object\n   type.\n   The object type together with an object instance\
    \ serves to\n   uniquely identify a specific instantiation of the object.\n  \
    \ For human convenience, we often use a textual string, termed\n   the OBJECT\
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data\n   structure corresponding to that object type. \
    \ The ASN.1\n   language is used for this purpose.  However, the SMI [3]\n   purposely\
    \ restricts the ASN.1 constructs which may be used.\n   These restrictions are\
    \ explicitly made for simplicity.\n   The encoding of an object type is simply\
    \ how that object\n   type is represented using the object type's syntax.\n  \
    \ Implicitly tied to the notion of an object type's syntax and\n   encoding is\
    \ how the object type is represented when being\n   transmitted on the network.\n\
    \   The SMI specifies the use of the basic encoding rules of\n   ASN.1 [8], subject\
    \ to the additional requirements imposed by\n   the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains the specification of all object\
    \ types\n   contained in this MIB module.  The object types are defined\n   using\
    \ the conventions defined in the SMI, as amended by the\n   extensions specified\
    \ in [9,10].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   The Parallel-printer-like Hardware Device MIB applies to\n \
    \  interface ports that might logically support the Interface\n   MIB, a Transmission\
    \ MIB, or the Character MIB (most likely\n   the latter).  The most common example\
    \ is a Centronics or\n   Data Products type parallel printer port.\n   The Parallel-printer-like\
    \ MIB is one of a set of MIBs\n   designed for complementary use.  At this writing,\
    \ the set\n   comprises:\n        Character MIB\n        PPP MIB\n        RS-232-like\
    \ MIB\n        Parallel-printer-like MIB\n   The RS-232-like MIB and the Parallel-printer-like\
    \ MIB\n   represent the physical layer, providing service to higher\n   layers\
    \ such as the Character MIB or PPP MIB.  Further MIBs\n   may appear above these.\n\
    \   The following diagram shows two possible \"MIB stacks\", each\n   using the\
    \ RS-232-like MIB.\n                                    .-----------------.\n\
    \         .-----------------.        |  Standard MIB   |\n         |   Telnet\
    \ MIB    |        | Interface Group |\n         |-----------------|        |-----------------|\n\
    \         |  Character MIB  |        |     PPP MIB     |\n         |-----------------|\
    \        |-----------------|\n         | RS-232-like MIB |        | RS-232-like\
    \ MIB |\n         `-----------------'        `-----------------'\n   The intent\
    \ of the model is for the physical-level MIBs to\n   represent the lowest level,\
    \ regardless of the higher level\n   that may be using it.  In turn, separate\
    \ higher level MIBs\n   represent specific applications, such as a terminal (the\n\
    \   Character MIB) or a network connection (the PPP MIB).\n   The Parallel-printer-like\
    \ MIB is mandatory for all systems\n   that have such a hardware port supporting\
    \ services managed\n   through some other MIB, for example, the Character MIB.\n\
    \   The Parallel-printer-like MIB includes multiple similar\n   types of hardware,\
    \ and as a result contains objects not\n   applicable to all of those types. \
    \ Such objects are in a\n   separate branch of the MIB, which is required when\n\
    \   applicable and otherwise absent.\n   The Parallel-printer-like MIB includes\
    \ Centronics, Data\n   Products, and other parallel physical links with a similar\n\
    \   set of control signals.\n   The MIB contains objects that relate to physical\
    \ layer\n   connections.  Such connections may provide interesting\n   hardware\
    \ signals (other than for basic data transfer), such\n   as Power and PaperOut.\n\
    \   The MIB comprises one base object and three tables, detailed\n   in the following\
    \ sections.  The tables contain objects for\n   ports and input and output control\
    \ signals.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n                    RFC1318-MIB DEFINITIONS ::= BEGIN\n    \
    \                IMPORTS\n                            Counter\n              \
    \                      FROM RFC1155-SMI\n                            transmission\n\
    \                                    FROM RFC1213-MIB\n                      \
    \      OBJECT-TYPE\n                                    FROM RFC-1212;\n     \
    \       -- this is the MIB module for Parallel-printer-like\n            -- hardware\
    \ devices\n            para    OBJECT IDENTIFIER ::= { transmission 34 }\n   \
    \         -- the generic Parallel-printer-like group\n            -- Implementation\
    \ of this group is mandatory for all\n            -- systems that have Parallel-printer-like\
    \ hardware\n            -- ports supporting higher level services such as\n  \
    \          -- character streams\n            paraNumber OBJECT-TYPE\n        \
    \        SYNTAX INTEGER\n                ACCESS read-only\n                STATUS\
    \ mandatory\n                DESCRIPTION\n                    \"The number of\
    \ ports (regardless of their current\n                    state) in the Parallel-printer-like\
    \ port table.\"\n                ::= { para 1 }\n            -- the Parallel-printer-like\
    \ Port table\n            paraPortTable OBJECT-TYPE\n                SYNTAX SEQUENCE\
    \ OF ParaPortEntry\n                ACCESS not-accessible\n                STATUS\
    \ mandatory\n                DESCRIPTION\n                    \"A list of port\
    \ entries.  The number of entries is\n                    given by the value of\
    \ paraNumber.\"\n                ::= { para 2 }\n            paraPortEntry OBJECT-TYPE\n\
    \                SYNTAX ParaPortEntry\n                ACCESS not-accessible\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"Status and parameter values for a port.\"\n                INDEX { paraPortIndex\
    \ }\n                ::= { paraPortTable 1 }\n            ParaPortEntry ::=\n\
    \                SEQUENCE {\n                    paraPortIndex\n             \
    \           INTEGER,\n                    paraPortType\n                     \
    \   INTEGER,\n                    paraPortInSigNumber\n                      \
    \  INTEGER,\n                    paraPortOutSigNumber\n                      \
    \  INTEGER\n                }\n            paraPortIndex OBJECT-TYPE\n       \
    \         SYNTAX INTEGER\n                ACCESS read-only\n                STATUS\
    \ mandatory\n                DESCRIPTION\n                    \"A unique value\
    \ for each port.  Its value ranges\n                    between 1 and the value\
    \ of paraNumber.  By\n                    convention and if possible, hardware\
    \ port numbers\n                    map directly to external connectors.  The\
    \ value for\n                    each port must remain constant at least from\
    \ one\n                    re-initialization of the network management agent to\n\
    \                    the next.\"\n                ::= { paraPortEntry 1 }\n  \
    \          paraPortType OBJECT-TYPE\n                SYNTAX INTEGER {\n      \
    \              other(1),\n                    centronics(2),\n               \
    \     dataproducts(3)\n                }\n                ACCESS read-only\n \
    \               STATUS mandatory\n                DESCRIPTION\n              \
    \      \"The port's hardware type.\"\n                ::= { paraPortEntry 2 }\n\
    \            paraPortInSigNumber OBJECT-TYPE\n                SYNTAX INTEGER\n\
    \                ACCESS read-only\n                STATUS mandatory\n        \
    \        DESCRIPTION\n                    \"The number of input signals for the\
    \ port in the\n                    input signal table (paraPortInSigTable).  The\
    \ table\n                    contains entries only for those signals the software\n\
    \                    can detect.\"\n                ::= { paraPortEntry 3 }\n\
    \            paraPortOutSigNumber OBJECT-TYPE\n                SYNTAX INTEGER\n\
    \                ACCESS read-only\n                STATUS mandatory\n        \
    \        DESCRIPTION\n                    \"The number of output signals for the\
    \ port in the\n                    output signal table (paraPortOutSigTable).\
    \  The\n                    table contains entries only for those signals the\n\
    \                    software can assert.\"\n                ::= { paraPortEntry\
    \ 4 }\n            -- the Input Signal table\n            paraInSigTable OBJECT-TYPE\n\
    \                SYNTAX SEQUENCE OF ParaInSigEntry\n                ACCESS not-accessible\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"A list of port input control signal entries.\"\n                ::=\
    \ { para 3 }\n            paraInSigEntry OBJECT-TYPE\n                SYNTAX ParaInSigEntry\n\
    \                ACCESS not-accessible\n                STATUS mandatory\n   \
    \             DESCRIPTION\n                    \"Input control signal status for\
    \ a hardware port.\"\n                INDEX { paraInSigPortIndex, paraInSigName\
    \ }\n                ::= { paraInSigTable 1 }\n            ParaInSigEntry ::=\n\
    \                SEQUENCE {\n                    paraInSigPortIndex\n        \
    \                INTEGER,\n                    paraInSigName\n               \
    \         INTEGER,\n                    paraInSigState\n                     \
    \   INTEGER,\n                    paraInSigChanges\n                        Counter\n\
    \                }\n            paraInSigPortIndex OBJECT-TYPE\n             \
    \   SYNTAX INTEGER\n                ACCESS read-only\n                STATUS mandatory\n\
    \                DESCRIPTION\n                    \"The value of paraPortIndex\
    \ for the port to which\n                    this entry belongs.\"\n         \
    \       ::= { paraInSigEntry 1 }\n            paraInSigName OBJECT-TYPE\n    \
    \            SYNTAX INTEGER { power(1), online(2), busy(3),\n                \
    \                 paperout(4), fault(5) }\n                ACCESS read-only\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"Identification of a hardware signal.\"\n                ::= { paraInSigEntry\
    \ 2 }\n            paraInSigState OBJECT-TYPE\n                SYNTAX INTEGER\
    \ { none(1), on(2), off(3) }\n                ACCESS read-only\n             \
    \   STATUS mandatory\n                DESCRIPTION\n                    \"The current\
    \ signal state.\"\n                ::= { paraInSigEntry 3 }\n            paraInSigChanges\
    \ OBJECT-TYPE\n                SYNTAX Counter\n                ACCESS read-only\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"The number of times the signal has changed from\n                  \
    \  'on' to 'off' or from 'off' to 'on'.\"\n                ::= { paraInSigEntry\
    \ 4 }\n            -- the Output Signal table\n            paraOutSigTable OBJECT-TYPE\n\
    \                SYNTAX SEQUENCE OF ParaOutSigEntry\n                ACCESS not-accessible\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"A list of port output control signal entries.\"\n                ::=\
    \ { para 4 }\n            paraOutSigEntry OBJECT-TYPE\n                SYNTAX\
    \ ParaOutSigEntry\n                ACCESS not-accessible\n                STATUS\
    \ mandatory\n                DESCRIPTION\n                    \"Output control\
    \ signal status for a hardware port.\"\n                INDEX { paraOutSigPortIndex,\
    \ paraOutSigName }\n                ::= { paraOutSigTable 1 }\n            ParaOutSigEntry\
    \ ::=\n                SEQUENCE {\n                    paraOutSigPortIndex\n \
    \                       INTEGER,\n                    paraOutSigName\n       \
    \                 INTEGER,\n                    paraOutSigState\n            \
    \            INTEGER,\n                    paraOutSigChanges\n               \
    \         Counter\n                }\n            paraOutSigPortIndex OBJECT-TYPE\n\
    \                SYNTAX INTEGER\n                ACCESS read-only\n          \
    \      STATUS mandatory\n                DESCRIPTION\n                    \"The\
    \ value of paraPortIndex for the port to which\n                    this entry\
    \ belongs.\"\n                ::= { paraOutSigEntry 1 }\n            paraOutSigName\
    \ OBJECT-TYPE\n                SYNTAX INTEGER { power(1), online(2), busy(3),\n\
    \                                 paperout(4), fault(5) }\n                ACCESS\
    \ read-only\n                STATUS mandatory\n                DESCRIPTION\n \
    \                   \"Identification of a hardware signal.\"\n               \
    \ ::= { paraOutSigEntry 2 }\n            paraOutSigState OBJECT-TYPE\n       \
    \         SYNTAX INTEGER { none(1), on(2), off(3) }\n                ACCESS read-only\n\
    \                STATUS mandatory\n                DESCRIPTION\n             \
    \       \"The current signal state.\"\n                ::= { paraOutSigEntry 3\
    \ }\n            paraOutSigChanges OBJECT-TYPE\n                SYNTAX Counter\n\
    \                ACCESS read-only\n                STATUS mandatory\n        \
    \        DESCRIPTION\n                    \"The number of times the signal has\
    \ changed from\n                    'on' to 'off' or from 'off' to 'on'.\"\n \
    \               ::= { paraOutSigEntry 4 }\n            END\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Based on several private MIBs, this document was produced\
    \ by the\n   Character MIB Working Group:\n      Anne Ambler, Spider\n      Charles\
    \ Bazaar, Emulex\n      Christopher Bucci, Datability\n      Anthony Chung, Hughes\
    \ LAN Systems\n      George Conant, Xyplex\n      John Cook, Chipcom\n      James\
    \ Davin, MIT-LCS\n      Shawn Gallagher, DEC\n      Tom Grant, Xylogics\n    \
    \  Frank Huang, Emulex\n      David Jordan, Emulex\n      Satish Joshi, SynOptics\n\
    \      Frank Kastenholz, Clearpoint\n      Ken Key, University of Tennessee\n\
    \      Jim Kinder, Fibercom\n      Rajeev Kochhar, 3Com\n      John LoVerso, Xylogics\n\
    \      Keith McCloghrie, Hughes LAN Systems\n      Donald Merritt, BRL\n     \
    \ David Perkins, 3Com\n      Jim Reinstedler, Ungerman-Bass\n      Marshall Rose,\
    \ PSI\n      Ron Strich, SSDS\n      Dean Throop, DG\n      Bill Townsend, Xylogics\n\
    \      Jesse Walker, DEC\n      David Waitzman, BBN\n      Bill Westfield, cisco\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2] Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n       Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4] McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n\
    \       LAN Systems, Performance Systems International, May 1990.\n   [5] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [6] McCloghrie K., and M. Rose, Editors, \"Management Information\
    \ Base\n       for Network Management of TCP/IP-based internets\", RFC 1213,\n\
    \       Performance Systems International, March 1991.\n   [7] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Abstract Syntax\
    \ Notation One (ASN.1),\n       International Organization for Standardization,\
    \ International\n       Standard 8824, December 1987.\n   [8] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Basic Encoding\
    \ Rules for Abstract Notation One\n       (ASN.1), International Organization\
    \ for Standardization,\n       International Standard 8825, December 1987.\n \
    \  [9] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n  \
    \     RFC 1212, Performance Systems International, Hughes LAN Systems,\n     \
    \  March 1991.\n  [10] Rose, M., Editor, \"A Convention for Defining Traps for\
    \ use with\n       the SNMP\", RFC 1215, Performance Systems International, March\n\
    \       1991.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Bob Stewart\n   Xyplex, Inc.\n   330 Codman Hill Road\n\
    \   Boxborough, MA 01719\n   Phone: (508) 264-9900\n   EMail: rlstewart@eng.xyplex.com\n"
