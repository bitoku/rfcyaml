- title: __initial_text__
  contents:
  - '                       YANG Module Classification

    '
- title: Abstract
  contents:
  - "Abstract\n   The YANG data modeling language is currently being considered for\
    \ a\n   wide variety of applications throughout the networking industry at\n \
    \  large.  Many standards development organizations (SDOs), open-source\n   software\
    \ projects, vendors, and users are using YANG to develop and\n   publish YANG\
    \ modules for a wide variety of applications.  At the same\n   time, there is\
    \ currently no well-known terminology to categorize\n   various types of YANG\
    \ modules.\n   A consistent terminology would help with the categorization of\
    \ YANG\n   modules, assist in the analysis of the YANG data modeling efforts in\n\
    \   the IETF and other organizations, and bring clarity to the YANG-\n   related\
    \ discussions between the different groups.\n   This document describes a set\
    \ of concepts and associated terms to\n   support consistent classification of\
    \ YANG modules.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8199.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  First Dimension: YANG Module Abstraction Layers . . . .\
    \ . . .   4\n     2.1.  Network Service YANG Modules  . . . . . . . . . . . .\
    \ . .   6\n     2.2.  Network Element YANG Modules  . . . . . . . . . . . . .\
    \ .   7\n   3.  Second Dimension: YANG Module Origin Types  . . . . . . . . .\
    \   7\n     3.1.  Standard YANG Modules . . . . . . . . . . . . . . . . . .  \
    \ 8\n     3.2.  Vendor-Specific YANG Modules and Extensions . . . . . . .   8\n\
    \     3.3.  User-Specific YANG Modules and Extensions . . . . . . . .   9\n  \
    \ 4.  Security Considerations . . . . . . . . . . . . . . . . . . .   9\n   5.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   6.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     6.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  10\n     6.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  10\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  11\n   Authors' Addresses  . .\
    \ . . . . . . . . . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet Engineering Steering Group (IESG) has been\
    \ actively\n   encouraging IETF working groups to use the YANG data modeling\n\
    \   language [RFC7950] and the Network Configuration Protocol (NETCONF)\n   [RFC6241]\
    \ for configuration management purposes, especially in new\n   working group charters\
    \ [IESG-Statement].\n   YANG is also gaining wide acceptance as the de facto standard\
    \ data\n   modeling language in the broader industry.  This extends beyond the\n\
    \   IETF to include many SDOs, industry consortia, ad hoc groups, open-\n   source\
    \ projects, vendors, and end users.\n   There are currently no clear guidelines\
    \ on how to classify the\n   layering of YANG modules according to abstraction\
    \ or how to classify\n   modules along the continuum spanning formal standards\
    \ publications,\n   vendor-specific modules, and modules provided by end users.\n\
    \   This document presents a set of concepts and terms to form a useful\n   taxonomy\
    \ for consistent classification of YANG modules in two\n   dimensions:\n   o \
    \ The layering of modules based on their abstraction levels\n   o  The module\
    \ origin type based on the nature and intent of the\n      content\n   The intent\
    \ of this document is to provide a taxonomy to simplify\n   human communication\
    \ around YANG modules.  While the classification\n   boundaries are at times blurry,\
    \ this document should provide a robust\n   starting point as the YANG community\
    \ gains further experience with\n   designing and deploying modules.  To be more\
    \ explicit, it is expected\n   that the classification criteria will change over\
    \ time.\n   A number of modules, for example, modules concerned with topologies,\n\
    \   created substantial discussion during the development of this\n   document.\
    \  Topology modules are useful both on the network element\n   level (e.g., link-state\
    \ database content) and on the network service\n   level (e.g., network-wide,\
    \ configured topologies).  In the end, it is\n   the module developer that classifies\
    \ the module according to the\n   initial intent of the module content.\n   This\
    \ document should provide benefits to multiple audiences:\n   o  First, a common\
    \ taxonomy helps with discussions among SDOs and\n      industry consortia; the\
    \ goals of such discussions are determined\n      by the respective areas of work.\n\
    \   o  Second, operators might look at the YANG module abstraction layers\n  \
    \    to understand which Network Service YANG Modules and Network\n      Element\
    \ YANG Modules are available for their service composition.\n      It is difficult\
    \ to determine the module type without inspecting\n      the YANG module itself.\
    \  The YANG module name might provide some\n      useful information but is not\
    \ a definite answer.  For example, a\n      Layer 2 Virtual Private Network (L2VPN)\
    \ YANG module might be a\n      Network Service YANG Module, ready to be used\
    \ as a service model\n      by a network operator.  Alternatively, it might be\
    \ a Network\n      Element YANG Module that contains the L2VPN data definitions\n\
    \      required to be configured on a single device.\n   o  Third, this taxonomy\
    \ will help equipment vendors (whether physical\n      or virtual), controller\
    \ vendors, and orchestrator vendors to\n      explain to their customers the relationship\
    \ between the different\n      YANG modules they support in their products.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   [RFC7950] specifies:\n   o  data model: A data model describes\
    \ how data is represented and\n      accessed.\n   o  module: A YANG module defines\
    \ hierarchies of schema nodes.  With\n      its definitions and the definitions\
    \ it imports or includes from\n      elsewhere, a module is self-contained and\
    \ \"compilable\".\n"
- title: '2.  First Dimension: YANG Module Abstraction Layers'
  contents:
  - "2.  First Dimension: YANG Module Abstraction Layers\n   Module developers have\
    \ taken two approaches to developing YANG\n   modules: top-down and bottom-up.\
    \  The top-down approach starts with\n   high-level abstractions modeling business\
    \ or customer requirements\n   and maps them to specific networking technologies.\
    \  The bottom-up\n   approach starts with fundamental networking technologies\
    \ and maps\n   them into more abstract constructs.\n   There are currently no\
    \ specific requirements or well-defined best\n   practices for the development\
    \ of YANG modules.  This document\n   considers both bottom-up and top-down approaches\
    \ as they are both\n   used and they each provide benefits that appeal to different\
    \ groups.\n   For layering purposes, this document suggests the classification\
    \ of\n   YANG modules into two distinct abstraction layers:\n   o  Network Element\
    \ YANG Modules describe the configuration, state\n      data, operations, and\
    \ notifications of specific device-centric\n      technologies or features.\n\
    \   o  Network Service YANG Modules describe the configuration, state\n      data,\
    \ operations, and notifications of abstract representations of\n      services\
    \ implemented on one or multiple network elements.\n                        +--------------------------+\n\
    \                        |  Operations and Business |\n                      \
    \  |      Support Systems     |\n                        |      (OSSs and BSSs)\
    \     |\n                        +--------------------------+\n        - - - -\
    \ - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n        Network Service\
    \ YANG Modules\n             +------------+      +-------------+      +-------------+\n\
    \             |            |      |             |      |             |\n     \
    \        |  - L2VPN   |      |   - L2VPN   |      |    L3VPN    |\n          \
    \   |  - VPWS    |      |   - VPLS    |      |             |\n             | \
    \           |      |             |      |             |\n             +------------+\
    \      +-------------+      +-------------+\n        - - - - - - - - - - - - -\
    \ - - - - - - - - - - - - - - - - - - -\n        Network Element YANG Modules\n\
    \        +------------+  +------------+  +-------------+  +------------+\n   \
    \     |            |  |            |  |             |  |            |\n      \
    \  |    MPLS    |  |    BGP     |  | IPv4 / IPv6 |  |  Ethernet  |\n        |\
    \            |  |            |  |             |  |            |\n        +------------+\
    \  +------------+  +-------------+  +------------+\n          L2VPN: Layer 2 Virtual\
    \ Private Network\n          L3VPN: Layer 3 Virtual Private Network\n        \
    \  VPWS: Virtual Private Wire Service\n          VPLS: Virtual Private LAN Service\n\
    \                 Figure 1: YANG Module Abstraction Layers\n   Figure 1 illustrates\
    \ the application of YANG modules at different\n   layers of abstraction.  Layering\
    \ of modules allows for reusability of\n   existing lower-layer modules by higher-level\
    \ modules while limiting\n   duplication of features across layers.\n   For module\
    \ developers, per-layer modeling allows for separation of\n   concern across editing\
    \ teams focusing on specific areas.\n   As an example, experience from the IETF\
    \ shows that creating useful\n   Network Element YANG Modules (e.g., for routing\
    \ or switching\n   protocols) requires teams that include developers with experience\n\
    \   implementing those protocols.\n   On the other hand, Network Service YANG\
    \ Modules are best developed by\n   network operators experienced in defining\
    \ network services for\n   consumption by programmers, e.g., those developing\
    \ flow-through\n   provisioning systems or self-service portals.\n"
- title: 2.1.  Network Service YANG Modules
  contents:
  - "2.1.  Network Service YANG Modules\n   Network Service YANG Modules describe\
    \ the characteristics of a\n   service, as agreed upon with consumers of that\
    \ service.  That is, a\n   service module does not expose the detailed configuration\
    \ parameters\n   of all participating network elements and features but describes\
    \ an\n   abstract model that allows instances of the service to be decomposed\n\
    \   into instance data according to the Network Element YANG Modules of\n   the\
    \ participating network elements.  The service-to-element\n   decomposition is\
    \ a separate process; the details depend on how the\n   network operator chooses\
    \ to realize the service.  For the purpose of\n   this document, the term \"orchestrator\"\
    \ is used to describe a system\n   implementing such a process.\n   External systems\
    \ can be provisioning systems, service orchestrators,\n   Operations Support Systems,\
    \ Business Support Systems, and\n   applications exposed to network service consumers\
    \ (either internal\n   network operations people or external customers).  These\
    \ modules are\n   commonly designed, developed, and deployed by network infrastructure\n\
    \   teams.\n   YANG allows for different design patterns to describe network\n\
    \   services, ranging from monolithic to component-based approaches.\n   The monolithic\
    \ approach captures the entire service in a single\n   module and does not put\
    \ focus on reusability of internal data\n   definitions and groupings.  The monolithic\
    \ approach has the\n   advantages of single-purpose development, including development\
    \ speed\n   at the expense of reusability.\n   The component-based approach captures\
    \ device-centric features (e.g.,\n   VPN Routing and Forwarding (VRF), routing\
    \ protocols, or packet\n   filtering) in a vendor-independent manner.  The components\
    \ are\n   designed for reuse across many service modules.  The set of\n   components\
    \ required for a specific service is then composed into the\n   higher-level service.\
    \  The component-based approach has the\n   advantages of modular development,\
    \ including a higher degree of\n   reusability at the expense of initial development\
    \ speed.\n   As an example, an L2VPN service can be built on many different types\n\
    \   of transport network technologies, including, e.g., MPLS or Carrier\n   Ethernet.\
    \  A component-based approach would allow for reuse of User-\n   Network Interface\
    \ (UNI) definitions, such as the MEF UNI interface or\n   MPLS interface, independent\
    \ of the underlying transport network.  The\n   monolithic approach would assume\
    \ a specific set of transport\n   technologies and interface definitions.\n  \
    \ An example of a Network Service YANG Module is in [RFC8049].  It\n   provides\
    \ an abstract model for Layer 3 IP VPN service configuration.\n   This module\
    \ includes the concept of a 'site-network-access' to\n   represent bearer and\
    \ connection parameters.  An orchestrator receives\n   operations on service instances\
    \ according to the service module and\n   decomposes the data into configuration\
    \ data according to specific\n   Network Element YANG Modules to configure the\
    \ participating network\n   elements to the service.  In the case of the L3VPN\
    \ module, this would\n   include translating the 'site-network-access' parameters\
    \ to the\n   appropriate parameters in the Network Element YANG Module implemented\n\
    \   on the constituent elements.\n"
- title: 2.2.  Network Element YANG Modules
  contents:
  - "2.2.  Network Element YANG Modules\n   Network Element YANG Modules describe\
    \ the characteristics of a\n   network device as defined by the vendor of that\
    \ device.  The modules\n   are commonly structured around features of the device,\
    \ e.g.,\n   interface configuration [RFC7223], OSPF configuration [OSPF-YANG],\n\
    \   and access control list (ACL) configuration [ACL-YANG].\n   The Network Element\
    \ YANG Module provides a coherent data model\n   representation of the software\
    \ environment consisting of the\n   operating system and applications running\
    \ on the device.  The\n   decomposition, ordering, and execution of changes to\
    \ the operating\n   system and application configuration is the task of the agent\
    \ that\n   implements the module.\n"
- title: '3.  Second Dimension: YANG Module Origin Types'
  contents:
  - "3.  Second Dimension: YANG Module Origin Types\n   This document suggests classifying\
    \ YANG module origin types as\n   Standard YANG Modules, Vendor-Specific YANG\
    \ Modules and Extensions,\n   or User-Specific YANG Modules and Extensions.\n\
    \   The suggested classification applies to both Network Element YANG\n   Modules\
    \ and Network Service YANG Modules.\n   It is to be expected that real-world implementations\
    \ of both Network\n   Service YANG Modules and Network Element YANG Modules will\
    \ include a\n   mix of all three module origin types.\n   Figure 2 illustrates\
    \ the relationship between the three types of\n   modules.\n  +--------------+\n\
    \  |     User     |\n  |   Extensions |\n  +------+-------+\n      Augments\n\
    \  +------+-------+  +--------------+  +--------------+\n  |   Vendor     |  |\
    \     User     |  |     User     |\n  |  Extensions  |  |  Extensions  |  |  Extensions\
    \  |\n  +------+-------+  +------+-------+  +------+-------+\n      Augments \
    \         Augments          Augments\n  +------+-----------------+-------+  +------+-------+\
    \  +--------------+\n  |            Standard            |  |    Vendor    |  |\
    \    User      |\n  |            Modules             |  |    Modules   |  |  \
    \ Modules    |\n  +--------------------------------+  +--------------+  +--------------+\n\
    \                    Figure 2: YANG Module Origin Types\n"
- title: 3.1.  Standard YANG Modules
  contents:
  - "3.1.  Standard YANG Modules\n   Standard YANG Modules are published by SDOs.\
    \  Most SDOs create\n   specifications according to a formal process in order\
    \ to produce a\n   standard that is useful for their constituencies.\n   The lifecycles\
    \ of these modules are driven by the editing cycles of\n   the specifications\
    \ and not tied to a specific implementation.\n   Examples of SDOs in the networking\
    \ industry are the IETF and the\n   IEEE.\n"
- title: 3.2.  Vendor-Specific YANG Modules and Extensions
  contents:
  - "3.2.  Vendor-Specific YANG Modules and Extensions\n   Vendor-Specific YANG Modules\
    \ are developed by organizations with the\n   intent to support a specific set\
    \ of implementations under control of\n   that organization, for example, vendors\
    \ of virtual or physical\n   equipment, industry consortia, and open-source projects.\
    \  The intent\n   of these modules ranges from providing openly published YANG\
    \ modules\n   that may eventually be contributed back to or adopted by an SDO\
    \ to\n   strictly internal YANG modules not intended for external consumption.\n\
    \   The lifecycles of these modules are generally aligned with the\n   release\
    \ cycles of the product or open-source software project\n   deliverables.\n  \
    \ It is worth noting that there is an increasing amount of interaction\n   between\
    \ open-source projects and SDOs in the networking industry.\n   This includes\
    \ open-source projects implementing published standards\n   as well as open-source\
    \ projects contributing content to SDO\n   processes.\n   Vendors also develop\
    \ vendor-specific extensions to standard modules\n   using YANG constructs for\
    \ extending data definitions of previously\n   published modules.  This is done\
    \ using the 'augment' statement that\n   allows locally defined data trees to\
    \ be added into locations in\n   externally defined data trees.\n   Vendors use\
    \ this to extend standard modules to cover the full scope\n   of features in implementations,\
    \ which commonly is broader than that\n   covered by the standard module.\n"
- title: 3.3.  User-Specific YANG Modules and Extensions
  contents:
  - "3.3.  User-Specific YANG Modules and Extensions\n   User-Specific YANG Modules\
    \ are developed by organizations that\n   operate YANG-based infrastructure including\
    \ devices and\n   orchestrators, for example, network administrators in enterprises\
    \ or\n   at service providers.  The intent of these modules is to express the\n\
    \   specific needs for a certain implementation, above and beyond what is\n  \
    \ provided by vendors.\n   This module type obviously requires the infrastructure\
    \ to support the\n   introduction of user-provided modules and extensions.  This\
    \ would\n   include the ability to describe the service-to-network decomposition\n\
    \   in orchestrators and the module-to-configuration decomposition in\n   devices.\n\
    \   The lifecycles of these modules are generally aligned with the change\n  \
    \ cadence of the infrastructure.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document doesn't have any Security Considerations.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed.,\
    \ Schoenwaelder, J., Ed.,\n              and A. Bierman, Ed., \"Network Configuration\
    \ Protocol\n              (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n\
    \              <http://www.rfc-editor.org/info/rfc6241>.\n   [RFC7223]  Bjorklund,\
    \ M., \"A YANG Data Model for Interface\n              Management\", RFC 7223,\
    \ DOI 10.17487/RFC7223, May 2014,\n              <http://www.rfc-editor.org/info/rfc7223>.\n\
    \   [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n\
    \              RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <http://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8049]  Litkowski, S., Tomotaki, L., and K. Ogaki, \"YANG Data\n      \
    \        Model for L3VPN Service Delivery\", RFC 8049,\n              DOI 10.17487/RFC8049,\
    \ February 2017,\n              <http://www.rfc-editor.org/info/rfc8049>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [ACL-YANG]\n              Bogdanovic, D., Jethanandani,\
    \ M., Huang, L., Agarwal, S.,\n              and D. Blair, \"Network Access Control\
    \ List (ACL) YANG Data\n              Model\", Work in Progress, draft-ietf-netmod-acl-model-11,\n\
    \              June 2017.\n   [IESG-Statement]\n              \"Writable MIB Module\
    \ IESG Statement\",\n              <https://www.ietf.org/iesg/statement/\n   \
    \           writable-mib-module.html>.\n   [OSPF-YANG]\n              Yeung, D.,\
    \ Qu, Y., Zhang, Z., Chen, I., and A. Lindem,\n              \"Yang Data Model\
    \ for OSPF Protocol\", Work in Progress,\n              draft-ietf-ospf-yang-08,\
    \ July 2017.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to David Ball and Jonathan Hansford for feedback\
    \ and\n   suggestions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dean Bogdanovic\n   Volta Networks, Inc.\n   Email: dean@voltanet.io\n\
    \   Benoit Claise\n   Cisco Systems, Inc.\n   De Kleetlaan 6a b1\n   1831 Diegem\n\
    \   Belgium\n   Phone: +32 2 704 5622\n   Email: bclaise@cisco.com\n   Carl Moberg\n\
    \   Cisco Systems, Inc.\n   Email: camoberg@cisco.com\n"
