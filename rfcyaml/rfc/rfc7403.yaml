- contents:
  - "                   A Media-Based Traceroute Function\n               for the
    Session Initiation Protocol (SIP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   SIP already provides the ability to perform hop-by-hop traceroute
    for\n   SIP messages using the Max-Forwards header field to determine the\n   reachability
    path of requests to a target.  A mechanism for media-\n   loopback calls has also
    been defined separately, which enables test\n   calls to be generated that result
    in media being looped back to the\n   originator.  This document describes a means
    of performing hop-by-hop\n   traceroute-style test calls using the media-loopback
    mechanism to\n   test the media path when SIP sessions go through media-relaying
    back-\n   to-back user agents (B2BUAs).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7403.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Terminology .....................................................3\n   3.
    The SIP Traceroute Mechanism ....................................4\n      3.1.
    Processing a Received Max-Forwards Header Field ............4\n      3.2. Answering
    the INVITE .......................................5\n   4. Security Considerations
    .........................................5\n   5. Normative References ............................................6\n
    \  Acknowledgments ....................................................7\n   Author's
    Address....................................................7\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In many deployments, the media for SIP-created sessions
    does not flow\n   directly from the originating User Agent Client (UAC) to the\n
    \  answering User Agent Server (UAS).  Often, SIP B2BUAs in the SIP\n   signaling
    path also insert themselves in the media plane path by\n   manipulating Session
    Description Protocol (SDP), either for injecting\n   media such as rich ringtones
    or music-on-hold or for relaying media\n   in order to provide functions such
    as transcoding, IPv4-IPv6\n   conversion, NAT traversal, Secure Realtime Transport
    Protocol (SRTP)\n   termination, media steering, etc.\n   As more SIP domains
    get deployed and interconnected, the odds of a\n   SIP session crossing such media-plane
    B2BUAs increases as well as the\n   number of such B2BUAs any given SIP session
    may go through.  In other\n   words, any given SIP session may cross any number
    of B2BUAs both in\n   the SIP signaling plane as well as the media plane.\n   When
    a failure or degradation occurs in the media plane, it is\n   difficult to determine
    where in the media path it occurred.  In order\n   to aid managing and troubleshooting
    SIP-based sessions and media\n   traversing such B2BUAs, it would be useful to
    progressively test the\n   media path as it reaches successive B2BUAs with a test
    controlled\n   solely by the source User Agent (UA).  A mechanism to perform media-\n
    \  loopback test sessions has been defined in [RFC6849], but it cannot\n   be
    used directly to test B2BUAs because, typically, the B2BUAs do not\n   have an
    Address of Record (AOR) to be targeted, nor is it known a\n   priori which B2BUAs
    will be traversed for any given session.\n   For example, suppose calls from Alice
    to Bob have media problems.\n   Alice would like to test the media path to each
    B2BUA in the path to\n   Bob separately, to determine which segment has the issues.
    \ Alice\n   cannot target the B2BUAs directly for each test call; she doesn't\n
    \  know which URIs to use to target them, nor would using such URIs\n   guarantee
    the same media path be used as a call to Bob.  A better\n   solution would be
    to make a test call targeted to Bob, but with a SIP\n   traceroute-type mechanism
    that makes the call terminate at the\n   B2BUAs, such that she can perform test
    sessions to test the media\n   path to each downstream B2BUA.\n   This document
    defines how such a mechanism can be employed, using the\n   mechanism in [RFC6849]
    along with the Max-Forwards SIP header field\n   such that a SIP UA can make multiple
    test calls, each reaching a\n   B2BUA further downstream.  Each B2BUA in the path
    that supports the\n   mechanism in [RFC6849] would answer the media-loopback call;
    thus,\n   the originating SIP UA can test the media path up to that B2BUA.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n   B2BUA:
    \     a SIP Back-to-Back User Agent, which is the logical\n               combination
    of a User Agent Server (UAS) and User Agent\n               Client (UAC).\n   UAS:
    \       a SIP User Agent Server\n   UAC:        a SIP User Agent Client\n   Traceroute:
    a mechanism to trace a path of hops from an originator to\n               a destination.
    \ For IP, this is typically done using the\n               Time To Live (TTL)
    field of the IP header, starting at\n               the value 1 and incrementing
    by 1 as each IP hop responds\n               with an ICMP error.  For SIP, this
    can be done using Max-\n               Forwards header field starting with the
    value 0, in a\n               similar fashion to the TTL field.\n   It is assumed
    the reader is already familiar with media-loopback\n   [RFC6849].\n"
  title: 2.  Terminology
- contents:
  - "3.  The SIP Traceroute Mechanism\n   The Max-Forwards header field can already
    be used to generate a\n   simple SIP-request traceroute by generating a SIP request
    initially\n   using a Max-Forwards value of 0, receiving a 483 Too Many Hops\n
    \  response from the next-hop, and then incrementing the value for\n   subsequent
    SIP requests; one would thereby reach SIP devices further\n   and further downstream,
    receiving 483 from each of them.\n   The mechanism described in this document
    uses such a traceroute of a\n   Max-Forwards style to perform media-loopback testing.
    \ To perform a\n   SIP media-plane traceroute, the originating UAC (Alice) generates
    a\n   SIP INVITE to a target AOR (Bob), with a Max-Forwards header field\n   value
    of 0 and with SDP based on [RFC6849].  The SIP next-hop will\n   either reject
    the request with a 483 Too Many Hops response or, if\n   the next-hop is a B2BUA
    that supports this mechanism and if the B2BUA\n   allows such testing from the
    requesting UAC, the B2BUA will answer\n   the INVITE to establish the dialog and
    create a media-loopback\n   session.\n   The originating UAC can then end the
    media-loopback session, generate\n   another INVITE to the same target AOR with
    a Max-Forwards header\n   field value of 1, which will reach the second SIP next-hop,
    and so\n   on.\n   A SIP Reason header field cause value of '483' (as defined
    in\n   [RFC3326]) will be in the 200 answer from each B2BUA answering the\n   INVITE,
    until the INVITE reaches the final UAS (Bob), which does not\n   use the Reason
    cause value (see Section 3.2 for details).\n   Using this mechanism, a SIP UAC
    can test the path from itself to each\n   successive B2BUA on the path to a target.
    \ Such a mechanism could\n   also be useful for establishing a permanent test
    call between an\n   Enterprise and a Service Provider across a SIP Trunk, for
    example, or\n   for automated measurement systems to test the media path between\n
    \  domains, etc.\n"
  - contents:
    - "3.1.  Processing a Received Max-Forwards Header Field\n   As currently defined
      in [RFC3261], the UAS half of a B2BUA does not\n   technically need to inspect
      the Max-Forwards header field value for\n   received requests: only Proxies
      do.  This behavior was updated by\n   [RFC7332], such that a compliant B2BUA
      needs to both inspect the\n   value in order to prevent loops, as well as copy
      and decrement the\n   value as if it were a Proxy.  This document also requires
      such\n   behavior in order for the mechanism to succeed; therefore, a B2BUA\n
      \  supporting the traceroute mechanism defined in this document MUST\n   also
      comply with [RFC7332].\n"
    title: 3.1.  Processing a Received Max-Forwards Header Field
  - contents:
    - "3.2.  Answering the INVITE\n   If a SIP B2BUA receives a dialog-creating INVITE
      request with a Max-\n   Forwards header value of 0, with SDP for media-loopback
      based on\n   [RFC6849], and the policies of the B2BUA allow it to answer such
      a\n   request, then it is answered as if the original target of the request\n
      \  were the local SIP B2BUA.  The normal procedures of SIP apply, as\n   well
      as [RFC6849], as if the request had been targeted at the local\n   B2BUA device
      as the intended destination all along.\n   In the 200 response for the INVITE,
      the B2BUA MUST also add a Reason\n   header, per [RFC3326], with a protocol
      field value of \"SIP\", a cause\n   field value of \"483\", and a reason-text
      value of \"Traceroute\n   Response\".  The purpose of the Reason header is to
      indicate to the\n   UAC that the request is being answered due to reaching a
      Max-\n   Forwards of 0, rather than being answered due to reaching the final\n
      \  UAS.  When the ultimate target UAS answers a loopback-based INVITE\n   with
      a Max-Forwards greater than or equal to 0, the Reason header\n   would not be
      added to the response and the UAC will know the\n   traceroute is complete.\n
      \  If a B2BUA receives an INVITE with media-loopback SDP and a Max-\n   Forwards
      header field value of 0, as defined in this document, and it\n   does not accept
      the session (e.g., due to local policy), then it\n   SHOULD respond with a 483
      Too Many Hops response, per the normal\n   rules of [RFC3261], as it would previously.
      \ In other words, in such\n   a case, it behaves no differently than it would
      have if it did not\n   support this document's new behavior.\n"
    title: 3.2.  Answering the INVITE
  title: 3.  The SIP Traceroute Mechanism
- contents:
  - "4.  Security Considerations\n   There are security implications for the mechanism
    defined in this\n   document.  Answering media-loopback calls in a B2BUA consumes\n
    \  resources on the B2BUA, and network bandwidth in between and, thus,\n   exposes
    a vector for denial-of-service (DoS) attacks; therefore,\n   B2BUAs should provide
    configuration options to control who can make\n   such test calls, how many concurrent
    calls can be established and\n   maintained, and how long calls can continue.
    \ Entities that deploy\n   B2BUAs should set these options to values that reduce
    the DoS risk to\n   an acceptable level.  For example, a B2BUA might perform digest-\n
    \  challenge authentication with specific credentials for such calls or\n   it
    might only allow specific sources to make such calls, at a\n   specific time.
    \ Such policies are typically vendor specific based on\n   local policies and
    deployment usage scenarios and cannot be\n   explicitly defined in this document.\n
    \  The security considerations of [RFC6849] also apply to this document.\n   Since
    B2BUAs are not end-user devices, there is no human user to\n   monitor the loopback
    session activity on the B2BUA as recommended in\n   [RFC6849]; instead, B2BUAs
    should log such events or provide some\n   form of administrative notification.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in
    RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March
    1997,\n               <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3261]
    \  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n               A.,
    Peterson, J., Sparks, R., Handley, M., and E.\n               Schooler, \"SIP:
    Session Initiation Protocol\", RFC 3261,\n               June 2002, <http://www.rfc-editor.org/info/rfc3261>.\n
    \  [RFC3326]   Schulzrinne, H., Oran, D., and G. Camarillo, \"The Reason\n               Header
    Field for the Session Initiation Protocol (SIP)\",\n               RFC 3326, December
    2002,\n               <http://www.rfc-editor.org/info/rfc3326>.\n   [RFC6849]
    \  Kaplan, H., Ed., Hedayat, K., Venna, N., Jones, P., and\n               N.
    Stratton, \"An Extension to the Session Description\n               Protocol (SDP)
    and Real-time Transport Protocol (RTP) for\n               Media Loopback\", RFC
    6849, February 2013,\n               <http://www.rfc-editor.org/info/rfc6849>.\n
    \  [RFC7332]   Kaplan, H. and V. Pascual, \"Loop Detection Mechanisms for\n               Session
    Initiation Protocol (SIP) Back-to-Back User\n               Agents (B2BUAs)\",
    RFC 7332, August 2014,\n               <http://www.rfc-editor.org/info/rfc7332>.\n"
  title: 5.  Normative References
- contents:
  - "Acknowledgments\n   The general concept of performing media-loopback on a hop-by-hop\n
    \  basis using a decrementing header traceroute-style approach came out\n   of
    discussions several years ago, between the author, Kaynam Hedayat,\n   Nagarjuna
    Venna, and Patrick MeLampy.  Other people that have\n   contributed to the topic
    over the years since then: Brett Tate, Paul\n   Kyzivat, Peter Dawes, Zaid Ally,
    Dianna Stiller, Jon Boone, and\n   several others whom I have lost the names of
    since.\n"
  title: Acknowledgments
- contents:
  - "Author's Address\n   Hadriel Kaplan\n   Oracle\n   EMail: hadrielk@yahoo.com\n"
  title: Author's Address
