- title: __initial_text__
  contents:
  - '                    Reverse Tunneling for Mobile IP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Mobile IP uses tunneling from the home agent to the mobile node's\n\
    \   care-of address, but rarely in the reverse direction.  Usually, a\n   mobile\
    \ node sends its packets through a router on the foreign\n   network, and assumes\
    \ that routing is independent of source address.\n   When this assumption is not\
    \ true, it is convenient to establish a\n   topologically correct reverse tunnel\
    \ from the care-of address to the\n   home agent.\n   This document proposes backwards-compatible\
    \ extensions to Mobile IP\n   in order to support topologically correct reverse\
    \ tunnels.  This\n   document does not attempt to solve the problems posed by\
    \ firewalls\n   located between the home agent and the mobile node's care-of address.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \   2\n   1.1. Terminology ...............................................   3\n\
    \   1.2. Assumptions ...............................................   4\n   1.3.\
    \ Justification .............................................   4\n   2. Overview\
    \ ....................................................   4\n   3. New Packet Formats\
    \ ..........................................   5\n   3.1. Mobility Agent Advertisement\
    \ Extension ....................   5\n   3.2. Registration Request ......................................\
    \   5\n   3.3. Encapsulating Delivery Style Extension ....................   6\n\
    \   3.4. New Registration Reply Codes ..............................   7\n   4.\
    \ Changes in Protocol Behavior ................................   8\n   4.1. Mobile\
    \ Node Considerations ................................   8\n   4.1.1. Sending\
    \ Registration Requests to the Foreign Agent ......   8\n   4.1.2. Receiving Registration\
    \ Replies from the Foreign Agent ...   9\n   4.2. Foreign Agent Considerations\
    \ ..............................   9\n   4.2.1. Receiving Registration Requests\
    \ from the Mobile Node ...   10\n   4.2.2. Relaying Registration Requests to the\
    \ Home Agent .......   10\n   4.3. Home Agent Considerations ................................\
    \   10\n   4.3.1. Receiving Registration Requests from the Foreign Agent .   11\n\
    \   4.3.2. Sending Registration Replies to the Foreign Agent ......   11\n   5.\
    \ Mobile Node to Foreign Agent Delivery Styles ...............   12\n   5.1. Direct\
    \ Delivery Style ....................................   12\n   5.1.1. Packet Processing\
    \ ......................................   12\n   5.1.2. Packet Header Format\
    \ and Fields ........................   12\n   5.2. Encapsulating Delivery Style\
    \ .............................   13\n   5.2.1 Packet Processing .......................................\
    \   13\n   5.2.2. Packet Header Format and Fields ........................   14\n\
    \   5.3. Support for Broadcast and Multicast Datagrams ............   15\n   5.4.\
    \ Selective Reverse Tunneling ..............................   15\n   6. Security\
    \ Considerations ....................................   16\n   6.1. Reverse-tunnel\
    \ Hijacking and Denial-of-Service Attacks ...   16\n   6.2. Ingress Filtering\
    \ ........................................   17\n   7. Acknowledgements ...........................................\
    \   17\n   References ....................................................   17\n\
    \   Editor and Chair Addresses ....................................   18\n   Full\
    \ Copyright Statement ......................................   19\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Section 1.3 of the Mobile IP specification [1] lists the\
    \ following\n   assumption:\n      It is assumed that IP unicast datagrams are\
    \ routed based on the\n      destination address in the datagram header (i.e.,\
    \ not by source\n      address).\n   Because of security concerns (for example,\
    \ IP spoofing attacks), and\n   in accordance with RFC 2267 [8] and CERT [3] advisories\
    \ to this\n   effect, routers that break this assumption are increasingly more\n\
    \   common.\n   In the presence of such routers, the source and destination IP\n\
    \   address in a packet must be topologically correct. The forward tunnel\n  \
    \ complies with this, as its endpoints (home agent address and care-of\n   address)\
    \ are properly assigned addresses for their respective\n   locations. On the other\
    \ hand, the source IP address of a packet\n   transmitted by the mobile node does\
    \ not correspond to the network\n   prefix from where it emanates.\n   This document\
    \ discusses topologically correct reverse tunnels.\n   Mobile IP does dictate\
    \ the use of reverse tunnels in the context of\n   multicast datagram routing\
    \ and mobile routers. However, the source IP\n   address is set to the mobile\
    \ node's home address, so these tunnels\n   are not topologically correct.\n \
    \  Notice that there are several uses for reverse tunnels regardless of\n   their\
    \ topological correctness:\n      - Mobile routers: reverse tunnels obviate the\
    \ need for recursive\n        tunneling [1].\n      - Multicast: reverse tunnels\
    \ enable a mobile node away from home\n        to (1) join multicast groups in\
    \ its home network, and (2)\n        transmit multicast packets such that they\
    \ emanate from its home\n        network [1].\n      - The TTL of packets sent\
    \ by the mobile node (for example, when\n        sending packets to other hosts\
    \ in its home network) may be so\n        low that they might expire before reaching\
    \ their destination.  A\n        reverse tunnel solves the problem as it represents\
    \ a TTL\n        decrement of one [5].\n"
- title: 1.1. Terminology
  contents:
  - "1.1. Terminology\n   The discussion below uses terms defined in the Mobile IP\n\
    \   specification.  Additionally, it uses the following terms:\n      Forward\
    \ Tunnel\n         A tunnel that shuttles packets towards the mobile node. It\n\
    \         starts at the home agent, and ends at the mobile node's care-of\n  \
    \       address.\n      Reverse Tunnel\n         A tunnel that starts at the mobile\
    \ node's care-of address and\n         terminates at the home agent.\n   The key\
    \ words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"\
    SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n\
    \   document are to be interpreted as described in RFC 2119 [9].\n"
- title: 1.2. Assumptions
  contents:
  - "1.2. Assumptions\n   Mobility is constrained to a common IP address space (that\
    \ is, the\n   routing fabric between, say, the mobile node and the home agent\
    \ is\n   not partitioned into a \"private\" and a \"public\" network).\n   This\
    \ document does not attempt to solve the firewall traversal\n   problem. Rather,\
    \ it assumes one of the following is true:\n      - There are no intervening firewalls\
    \ along the path of the\n        tunneled packets.\n      - Any intervening firewalls\
    \ share the security association\n        necessary to process any authentication\
    \ [6] or encryption [7]\n        headers which may have been added to the tunneled\
    \ packets.\n   The reverse tunnels considered here are symmetric, that is, they\
    \ use\n   the same configuration (encapsulation method, IP address endpoints)\n\
    \   as the forward tunnel. IP in IP encapsulation [2] is assumed unless\n   stated\
    \ otherwise.\n   Route optimization [4] introduces forward tunnels initiated at\
    \ a\n   correspondent host.  Since a mobile node may not know if the\n   correspondent\
    \ host can decapsulate packets, reverse tunnels in that\n   context are not discussed\
    \ here.\n"
- title: 1.3. Justification
  contents:
  - "1.3. Justification\n   Why not let the mobile node itself initiate the tunnel\
    \ to the home\n   agent?  This is indeed what it should do if it is already operating\n\
    \   with a topologically correct co-located care-of address.\n   However, one\
    \ of the primary objectives of the Mobile IP specification\n   is not to require\
    \ this mode of operation.\n   The mechanisms outlined in this document are primarily\
    \ intended for\n   use by mobile nodes that rely on the foreign agent for forward\
    \ tunnel\n   support. It is desirable to continue supporting these mobile nodes,\n\
    \   even in the presence of filtering routers.\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   A mobile node arrives at a foreign network, listens for agent\n\
    \   advertisements and selects a foreign agent that supports reverse\n   tunnels.\
    \  It requests this service when it registers through the\n   selected foreign\
    \ agent.  At this time, and depending on how the\n   mobile node wishes to deliver\
    \ packets to the foreign agent, it also\n   requests either the Direct or the\
    \ Encapsulating Delivery Style\n   (section 5).\n   In the Direct Delivery Style,\
    \ the mobile node designates the foreign\n   agent as its default router and proceeds\
    \ to send packets directly to\n   the foreign agent, that is, without encapsulation.\
    \  The foreign agent\n   intercepts them, and tunnels them to the home agent.\n\
    \   In the Encapsulating Delivery Style, the mobile node encapsulates all\n  \
    \ its outgoing packets to the foreign agent.  The foreign agent\n   decapsulates\
    \ and re-tunnels them to the home agent, using the foreign\n   agent's care-of\
    \ address as the entry-point of this new tunnel.\n"
- title: 3. New Packet Formats
  contents:
  - '3. New Packet Formats

    '
- title: 3.1. Mobility Agent Advertisement Extension
  contents:
  - "3.1. Mobility Agent Advertisement Extension\n    0                   1      \
    \             2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           Lifetime            |R|B|H|F|M|G|V|T|  reserved     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  zero or more Care-of Addresses               |\n   |  \
    \                            ...                              |\n   The only change\
    \ to the Mobility Agent Advertisement Extension [1] is\n   the additional 'T'\
    \ bit:\n      T        Agent offers reverse tunneling service.\n   A foreign agent\
    \ that sets the 'T' bit MUST support the two delivery\n   styles currently supported:\
    \ Direct and Encapsulating Delivery Style\n   (section 5).\n   Using this information,\
    \ a mobile node is able to choose a foreign\n   agent that supports reverse tunnels.\
    \ Notice that if a mobile node\n   does not understand this bit, it simply ignores\
    \ it as per [1].\n"
- title: 3.2. Registration Request
  contents:
  - "3.2. Registration Request\n   Reverse tunneling support is added directly into\
    \ the Registration\n   Request by using one of the \"rsvd\" bits.  If a foreign\
    \ or home agent\n   that does not support reverse tunnels receives a request with\
    \ the 'T'\n   bit set, the Registration Request fails. This results in a\n   registration\
    \ denial (failure codes are specified in section 3.4).\n   Most home agents would\
    \ not object to providing reverse tunnel\n   support, because they \"SHOULD be\
    \ able to decapsulate and further\n   deliver packets addressed to themselves,\
    \ sent by a mobile node\" [1].\n   In the case of topologically correct reverse\
    \ tunnels, the packets are\n   not sent by the mobile node as distinguished by\
    \ its home address.\n   Rather, the outermost (encapsulating) IP source address\
    \ on such\n   datagrams is the care-of address of the mobile node.  Nevertheless,\n\
    \   home agents  probably already support the required decapsulation and\n   further\
    \ forwarding.\n   In Registration Requests sent by a mobile node, the Time to\
    \ Live\n   field in the IP header MUST be set to 255.  This limits a denial of\n\
    \   service attack in which malicious hosts send false Registration\n   Requests\
    \ (see Section 6).\n    0                   1                   2            \
    \       3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |  \
    \   Type      |S|B|D|M|G|V|T|-|          Lifetime             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Home Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Home Agent                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Care-of Address                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Identification                        |\n   |  \
    \                                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Extensions ...\n   +-+-+-+-+-+-+-+-\n   The only change to the Registration\
    \ Request packet is the additional\n   'T' bit:\n      T        If the 'T' bit\
    \ is set, the mobile node asks its home\n               agent to accept a reverse\
    \ tunnel from the care-of\n               address. Mobile nodes using a foreign\
    \ agent care-of\n               address ask the foreign agent to reverse-tunnel\
    \ its\n               packets.\n"
- title: 3.3. Encapsulating Delivery Style Extension
  contents:
  - "3.3. Encapsulating Delivery Style Extension\n   The Encapsulating Delivery Style\
    \ Extension MAY be included by the\n   mobile node in registration requests to\
    \ further specify reverse\n   tunneling behavior. It is expected to be used only\
    \ by the foreign\n   agent.  Accordingly, the foreign agent MUST consume this\
    \ extension\n   (that is, it must not relay it to the home agent or include it\
    \ in\n   replies to the mobile node).  As per Section 3.6.1.3 of [1], the\n  \
    \ mobile node MUST include the Encapsulating Delivery Style Extension\n   after\
    \ the Mobile-Home Authentication Extension, and before the\n   Mobile-Foreign\
    \ Authentication Extension, if present.\n   The Encapsulating Delivery Style Extension\
    \ MUST NOT be included if\n   the 'T' bit is not set in the Registration Request.\n\
    \   If this extension is absent, Direct Delivery is assumed.\n   Encapsulation\
    \ is done according to what was negotiated for the\n   forward tunnel (that is,\
    \ IP in IP is assumed unless specified\n   otherwise). For more details on the\
    \ delivery styles, please refer to\n   section 5.\n    0                   1\n\
    \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  |     Type      |     Length    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \     Type\n        130\n      Length\n        0\n"
- title: 3.4. New Registration Reply Codes
  contents:
  - "3.4. New Registration Reply Codes\n   Foreign and home agent registration replies\
    \ MUST convey if the\n   reverse tunnel request failed.  These new reply codes\
    \ are defined:\n      Service denied by the foreign agent:\n      74 requested\
    \ reverse tunnel unavailable\n      75 reverse tunnel is mandatory and 'T' bit\
    \ not set\n      76 mobile node too distant\n   and\n      Service denied by the\
    \ home agent:\n      137 requested reverse tunnel unavailable\n      138 reverse\
    \ tunnel is mandatory and 'T' bit not set\n      139 requested encapsulation unavailable\n\
    \   In response to a Registration Request with the 'T' bit set, mobile\n   nodes\
    \ may receive (and MUST accept) code 70 (poorly formed request)\n   from foreign\
    \ agents and code 134 (poorly formed request) from home\n   agents. However, foreign\
    \ and home agents that support reverse\n   tunneling MUST use codes 74 and 137,\
    \ respectively.\n   Absence of the 'T' bit in a Registration Request MAY elicit\
    \ denials\n   with codes 75 and 138 at the foreign agent and the home agent,\n\
    \   respectively.\n   Forward and reverse tunnels are symmetric, that is, both\
    \ are able to\n   use the same tunneling options negotiated at registration. \
    \ This\n   implies that the home agent MUST deny registrations if an unsupported\n\
    \   form of tunneling is requested (code 139).  Notice that Mobile IP [1]\n  \
    \ already defines the analogous failure code 72 for use by the foreign\n   agent.\n"
- title: 4. Changes in Protocol Behavior
  contents:
  - "4. Changes in Protocol Behavior\n   Unless otherwise specified, behavior specified\
    \ by Mobile IP [1] is\n   assumed. In particular, if any two entities share a\
    \ mobility security\n   association, they MUST use the appropriate Authentication\
    \ Extension\n   (Mobile-Foreign, Foreign-Home or Mobile-Home Authentication\n\
    \   Extension) when exchanging registration protocol datagrams. The\n   Mobile-Home\
    \ Authentication Extension MUST always be present.\n   Reverse tunneling imposes\
    \ additional protocol processing requirements\n   on mobile entities.  Differences\
    \ in protocol behavior with respect to\n   Mobile IP [1] are specified in the\
    \ subsequent sections.\n"
- title: 4.1. Mobile Node Considerations
  contents:
  - "4.1. Mobile Node Considerations\n   This section describes how the mobile node\
    \ handles registrations that\n   request a reverse tunnel.\n"
- title: 4.1.1. Sending Registration Requests to the Foreign Agent
  contents:
  - "4.1.1. Sending Registration Requests to the Foreign Agent\n   In addition to\
    \ the considerations in [1], a mobile node sets the 'T'\n   bit in its Registration\
    \ Request to petition a reverse tunnel.\n   The mobile node MUST set the TTL field\
    \ of the IP header to 255. This\n   is meant to limit the reverse tunnel hijacking\
    \ attack (Section 6).\n   The mobile node MAY optionally include an Encapsulating\
    \ Delivery\n   Style Extension.\n"
- title: 4.1.2. Receiving Registration Replies from the Foreign Agent
  contents:
  - "4.1.2. Receiving Registration Replies from the Foreign Agent\n   Possible valid\
    \ responses are:\n      - A registration denial issued by either the home agent\
    \ or the\n        foreign agent:\n         a. The mobile node follows the error\
    \ checking guidelines in\n            [1], and depending on the reply code, MAY\
    \ try modifying the\n            registration request (for example, by eliminating\
    \ the\n            request for alternate forms of encapsulation), and issuing\
    \ a\n            new registration.\n         b. Depending on the reply code, the\
    \ mobile node MAY try\n            zeroing the 'T' bit, eliminating the Encapsulating\
    \ Delivery\n            Style Extension (if one was present), and issuing a new\n\
    \            registration. Notice that after doing so the registration\n     \
    \       may succeed, but due to the lack of a reverse tunnel data\n          \
    \  transfer may not be possible.\n      - The home agent returns a Registration\
    \ Reply indicating that the\n        service will be provided.\n   In this last\
    \ case, the mobile node has succeeded in establishing a\n   reverse tunnel between\
    \ its care-of address and its home agent.  If\n   the mobile node is operating\
    \ with a co-located care-of address, it\n   MAY encapsulate outgoing data such\
    \ that the destination address of\n   the outer header is the home agent. This\
    \ ability to selectively\n   reverse-tunnel packets is discussed further in section\
    \ 5.4.\n   If the care-of address belongs to a separate foreign agent, the\n \
    \  mobile node MUST employ whatever delivery style was requested (Direct\n   or\
    \ Encapsulating) and proceed as specified in section 5.\n   A successful registration\
    \ reply is an assurance that both the foreign\n   agent and the home agent support\
    \ whatever alternate forms of\n   encapsulation (other than IP in IP) were requested.\
    \ Accordingly, the\n   mobile node MAY use them at its discretion.\n"
- title: 4.2. Foreign Agent Considerations
  contents:
  - "4.2. Foreign Agent Considerations\n   This section describes how the foreign\
    \ agent handles registrations\n   that request a reverse tunnel.\n"
- title: 4.2.1. Receiving Registration Requests from the Mobile Node
  contents:
  - "4.2.1. Receiving Registration Requests from the Mobile Node\n   A foreign agent\
    \ that receives a Registration Request with the 'T' bit\n   set processes the\
    \ packet as specified in the Mobile IP specification\n   [1], and determines whether\
    \ it can accomodate the forward tunnel\n   request. If it cannot, it returns an\
    \ appropriate code. In particular,\n   if the foreign agent is unable to support\
    \ the requested form of\n   encapsulation it MUST return code 72.\n   The foreign\
    \ agent MAY reject Registration Requests without the 'T'\n   bit set by denying\
    \ them with code 75 (reverse tunnel is mandatory and\n   'T' bit not set).\n \
    \  The foreign agent MUST verify that the TTL field of the IP header is\n   set\
    \ to 255. Otherwise, it MUST reject the registration with code 76\n   (mobile\
    \ node too distant). The foreign agent MUST limit the rate at\n   which it sends\
    \ these registration replies to a maximum of one per\n   second.\n   As a last\
    \ check, the foreign agent verifies that it can support a\n   reverse tunnel with\
    \ the same configuration. If it cannot, it MUST\n   return a Registration Reply\
    \ denying the request with code 74\n   (requested reverse tunnel unavailable).\n"
- title: 4.2.2. Relaying Registration Requests to the Home Agent
  contents:
  - "4.2.2. Relaying Registration Requests to the Home Agent\n   Otherwise, the foreign\
    \ agent MUST relay the Registration Request to\n   the home agent.\n   Upon receipt\
    \ of a Registration Reply that satisfies validity checks,\n   the foreign agent\
    \ MUST update its visitor list, including indication\n   that this mobile node\
    \ has been granted a reverse tunnel and the\n   delivery style expected (section\
    \ 5).\n   While this visitor list entry is in effect, the foreign agent MUST\n\
    \   process incoming traffic according to the delivery style, encapsulate\n  \
    \ it and tunnel it from the care-of address to the home agent's\n   address.\n"
- title: 4.3. Home Agent Considerations
  contents:
  - "4.3. Home Agent Considerations\n   This section describes how the home agent\
    \ handles registrations that\n   request a reverse tunnel.\n"
- title: 4.3.1. Receiving Registration Requests from the Foreign Agent
  contents:
  - "4.3.1. Receiving Registration Requests from the Foreign Agent\n   A home agent\
    \ that receives a Registration Request with the 'T' bit\n   set processes the\
    \ packet as specified in the Mobile IP specification\n   [1] and determines whether\
    \ it can accomodate the forward tunnel\n   request.  If it cannot, it returns\
    \ an appropriate code. In\n   particular, if the home agent is unable to support\
    \ the requested form\n   of encapsulation it MUST return code 139 (requested encapsulation\n\
    \   unavailable).\n   The home agent MAY reject registration requests without\
    \ the 'T' bit\n   set by denying them with code 138 (reverse tunnel is mandatory\
    \ and '\n   T' bit not set).\n   As a last check, the home agent determines whether\
    \ it can support a\n   reverse tunnel with the same configuration as the forward\
    \ tunnel. If\n   it cannot, it MUST send back a registration denial with code\
    \ 137\n   (requested reverse tunnel unavailable).\n   Upon receipt of a Registration\
    \ Reply that satisfies validity checks,\n   the home agent MUST update its mobility\
    \ bindings list to indicate\n   that this mobile node has been granted a reverse\
    \ tunnel and the type\n   of encapsulation expected.\n"
- title: 4.3.2. Sending Registration Replies to the Foreign Agent
  contents:
  - "4.3.2. Sending Registration Replies to the Foreign Agent\n   In response to a\
    \ valid Registration Request, a home agent MUST issue\n   a Registration Reply\
    \ to the mobile node.\n   After a successful registration, the home agent may\
    \ receive\n   encapsulated packets addressed to itself. Decapsulating such packets\n\
    \   and blindly injecting them into the network is a potential security\n   weakness\
    \ (section 6.1). Accordingly, the home agent MUST implement,\n   and, by default,\
    \ SHOULD enable the following check for encapsulated\n   packets addressed to\
    \ itself:\n      The home agent searches for a mobility binding whose care-of\n\
    \      address is the source of the outer header, and whose mobile node\n    \
    \  address is the source of the inner header.\n   If no such binding is found,\
    \ or if the packet uses an encapsulation\n   mechanism that was not negotiated\
    \ at registration the home agent MUST\n   silently discard the packet and SHOULD\
    \ log the event as a security\n   exception.\n   Home agents that terminate tunnels\
    \ unrelated to Mobile IP (for\n   example, multicast tunnels) MAY turn off the\
    \ above check, but this\n   practice is discouraged for the aforementioned reasons.\n\
    \   While the registration is in effect, a home agent MUST process each\n   valid\
    \ reverse tunneled packet (as determined by checks like the\n   above) by decapsulating\
    \ it, recovering the original packet, and then\n   forwarding it on behalf of\
    \ its sender (the mobile node) to the\n   destination address (the correspondent\
    \ host).\n"
- title: 5. Mobile Node to Foreign Agent Delivery Styles
  contents:
  - "5. Mobile Node to Foreign Agent Delivery Styles\n   This section specifies how\
    \ the mobile node sends its data traffic via\n   the foreign agent. In all cases,\
    \ the mobile node learns the foreign\n   agent's link-layer address from the link-layer\
    \ header in the agent\n   advertisement.\n"
- title: 5.1. Direct Delivery Style
  contents:
  - "5.1. Direct Delivery Style\n   This delivery mechanism is very simple to implement\
    \ at the mobile\n   node, and uses small (non-encapsulated) packets on the link\
    \ between\n   the mobile node and the foreign agent (potentially a very slow link).\n\
    \   However, it only supports reverse-tunneling of unicast packets, and\n   does\
    \ not allow selective reverse tunneling (section 5.4).\n"
- title: 5.1.1. Packet Processing
  contents:
  - "5.1.1. Packet Processing\n   The mobile node MUST designate the foreign agent\
    \ as its default\n   router. Not doing so will not guarantee encapsulation of\
    \ all the\n   mobile node's outgoing traffic, and defeats the purpose of the\n\
    \   reverse tunnel. The foreign agent MUST:\n      - detect packets sent by the\
    \ mobile node, and\n      - modify its forwarding function to encapsulate them\
    \ before\n        forwarding.\n"
- title: 5.1.2. Packet Header Format and Fields
  contents:
  - "5.1.2. Packet Header Format and Fields\n   This section shows the format of the\
    \ packet headers used by the\n   Direct Delivery style. The formats shown assume\
    \ IP in IP\n   encapsulation [2].\n   Packet format received by the foreign agent\
    \ (Direct Delivery Style):\n       IP fields:\n         Source Address = mobile\
    \ node's home address Destination Address\n         = correspondent host's address\n\
    \       Upper Layer Protocol\n   Packet format forwarded by the foreign agent\
    \ (Direct Delivery Style):\n       IP fields (encapsulating header):\n       \
    \  Source Address = foreign agent's care-of address\n         Destination Address\
    \ = home agent's address\n         Protocol field: 4 (IP in IP)\n       IP fields\
    \ (original header):\n         Source Address = mobile node's home address\n \
    \        Destination Address = correspondent host's address\n       Upper Layer\
    \ Protocol\n   These fields of the encapsulating header MUST be chosen as follows:\n\
    \      IP Source Address\n         Copied from the Care-of Address field within\
    \ the Registration\n         Request.\n      IP Destination Address\n        \
    \ Copied from the Home Agent field within the Registration\n         Request.\n\
    \      IP Protocol Field\n         Default is 4 (IP in IP [2]), but other methods\
    \ of encapsulation\n         MAY be used as negotiated at registration time.\n"
- title: 5.2. Encapsulating Delivery Style
  contents:
  - "5.2. Encapsulating Delivery Style\n   This mechanism requires that the mobile\
    \ node implement encapsulation,\n   and explicitly directs packets at the foreign\
    \ agent by designating it\n   as the destination address in a new outermost header.\
    \  Mobile nodes\n   that wish to send either broadcast or multicast packets MUST\
    \ use the\n   Encapsulating Delivery Style.\n"
- title: 5.2.1 Packet Processing
  contents:
  - "5.2.1 Packet Processing\n   The foreign agent does not modify its forwarding\
    \ function.  Rather,\n   it receives an encapsulated packet and after verifying\
    \ that it was\n   sent by the mobile node, it:\n      - decapsulates to recover\
    \ the inner packet,\n      - re-encapsulates, and sends it to the home agent.\n\
    \   If a foreign agent receives an un-encapsulated packet from a mobile\n   node\
    \ which had explicitly requested the Encapsulated Delivery Style,\n   then the\
    \ foreign agent MUST NOT reverse tunnel such a packet and\n   rather MUST forward\
    \ it using standard, IP routing mechanisms.\n"
- title: 5.2.2. Packet Header Format and Fields
  contents:
  - "5.2.2. Packet Header Format and Fields\n   This section shows the format of the\
    \ packet headers used by the\n   Encapsulating Delivery style. The formats shown\
    \ assume IP in IP\n   encapsulation [2].\n   Packet format received by the foreign\
    \ agent (Encapsulating Delivery\n   Style):\n       IP fields (encapsulating header):\n\
    \         Source Address = mobile node's home address\n         Destination Address\
    \ = foreign agent's address\n         Protocol field: 4 (IP in IP)\n       IP\
    \ fields (original header):\n         Source Address = mobile node's home address\n\
    \         Destination Address = correspondent host's address\n       Upper Layer\
    \ Protocol\n   The fields of the encapsulating IP header MUST be chosen as follows:\n\
    \      IP Source Address\n         The mobile node's home address.\n      IP Destination\
    \ Address\n         The address of the agent as learned from the IP source address\n\
    \         of the agent's most recent registration reply.\n      IP Protocol Field\n\
    \         Default is 4 (IP in IP [2]), but other methods of encapsulation\n  \
    \       MAY be used as negotiated at registration time.\n   Packet format forwarded\
    \ by the foreign agent (Encapsulating Delivery\n   Style):\n       IP fields (encapsulating\
    \ header):\n         Source Address = foreign agent's care-of address\n      \
    \   Destination Address = home agent's address\n         Protocol field: 4 (IP\
    \ in IP)\n       IP fields (original header):\n         Source Address = mobile\
    \ node's home address\n         Destination Address = correspondent host's address\n\
    \       Upper Layer Protocol\n   These fields of the encapsulating IP header MUST\
    \ be chosen as\n   follows:\n      IP Source Address\n         Copied from the\
    \ Care-of Address field within the Registration\n         Request.\n      IP Destination\
    \ Address\n         Copied from the Home Agent field within the Registration\n\
    \         Request.\n      IP Protocol Field\n         Default is 4 (IP in IP [2]),\
    \ but other methods of encapsulation\n         MAY be used as negotiated at registration\
    \ time.\n"
- title: 5.3. Support for Broadcast and Multicast Datagrams
  contents:
  - "5.3. Support for Broadcast and Multicast Datagrams\n   If a mobile node is operating\
    \ with a co-located care-of address,\n   broadcast and multicast datagrams are\
    \ handled according to Sections\n   4.3 and 4.4 of the Mobile IP specification\
    \ [1]. Mobile nodes using a\n   foreign agent care-of address MAY have their broadcast\
    \ and multicast\n   datagrams reverse-tunneled by the foreign agent.  However,\
    \ any mobile\n   nodes doing so MUST use the encapsulating delivery style.\n \
    \  This delivers the datagram only to the foreign agent.  The latter\n   decapsulates\
    \ it and then processes it as any other packet from the\n   mobile node, namely,\
    \ by reverse tunneling it to the home agent.\n"
- title: 5.4. Selective Reverse Tunneling
  contents:
  - "5.4. Selective Reverse Tunneling\n   Packets destined to local resources (for\
    \ example, a nearby printer)\n   might be unaffected by ingress filtering. A mobile\
    \ node with a co-\n   located care-of address MAY optimize delivery of these packets\
    \ by not\n   reverse tunneling them.  On the other hand, a mobile node using a\n\
    \   foreign agent care-of address MAY use this selective reverse\n   tunneling\
    \ capability by requesting the Encapsulating Delivery Style,\n   and following\
    \ these guidelines:\n      Packets NOT meant to be reversed tunneled:\n      \
    \   Sent using the Direct Delivery style. The foreign agent MUST\n         process\
    \ these packets as regular traffic:  they MAY be\n         forwarded but MUST\
    \ NOT be reverse tunneled to the home agent.\n      Packets meant to be reverse\
    \ tunneled:\n         Sent using the Encapsulating Delivery style. The foreign\
    \ agent\n         MUST process these packets as specified in section 5.2: they\n\
    \         MUST be reverse tunneled to the home agent.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The extensions outlined in this document are subject\
    \ to the security\n   considerations outlined in the Mobile IP specification [1].\n\
    \   Essentially, creation of both forward and reverse tunnels involves an\n  \
    \ authentication procedure, which reduces the risk for attack.\n"
- title: 6.1. Reverse-tunnel Hijacking and Denial-of-Service Attacks
  contents:
  - "6.1. Reverse-tunnel Hijacking and Denial-of-Service Attacks\n   Once the tunnel\
    \ is set up, a malicious node could hijack it to inject\n   packets into the network.\
    \ Reverse tunnels might exacerbate this\n   problem, because upon reaching the\
    \ tunnel exit point packets are\n   forwarded beyond the local network. This concern\
    \ is also present in\n   the Mobile IP specification, as it already dictates the\
    \ use of\n   reverse tunnels for certain applications.\n   Unauthenticated exchanges\
    \ involving the foreign agent allow a\n   malicious node to pose as a valid mobile\
    \ node and re-direct an\n   existing reverse tunnel to another home agent, perhaps\
    \ another\n   malicious node. The best way to protect against these attacks is\
    \ by\n   employing the Mobile-Foreign and Foreign-Home Authentication\n   Extensions\
    \ defined in [1].\n   If the necessary mobility security associations are not\
    \ available,\n   this document introduces a mechanism to reduce the range and\n\
    \   effectiveness of the attacks. The mobile node MUST set to 255 the TTL\n  \
    \ value in the IP headers of Registration Requests sent to the foreign\n   agent.\
    \  This prevents malicious nodes more than one hop away from\n   posing as valid\
    \ mobile nodes. Additional codes for use in\n   registration denials make those\
    \ attacks that do occur easier to\n   track.\n   With the goal of further reducing\
    \ the attacks the Mobile IP Working\n   Group considered other mechanisms involving\
    \ the use of\n   unauthenticated state. However, these introduce the possibilities\
    \ of\n   denial-of-service attacks.  The consensus was that this was too much\n\
    \   of a trade-off for mechanisms that guarantee no more than weak (non-\n   cryptographic)\
    \ protection against attacks.\n"
- title: 6.2. Ingress Filtering
  contents:
  - "6.2. Ingress Filtering\n   There has been some concern regarding the long-term\
    \ effectiveness of\n   reverse-tunneling in the presence of ingress filtering.\
    \ The\n   conjecture is that network administrators will target reverse-\n   tunneled\
    \ packets (IP in IP encapsulated packets) for filtering. The\n   ingress filtering\
    \ recommendation spells out why this is not the case\n   [8]:\n      Tracking\
    \ the source of an attack is simplified when the source is\n      more likely\
    \ to be \"valid.\"\n"
- title: 7. Acknowledgements
  contents:
  - "7. Acknowledgements\n   The encapsulating style of delivery was proposed by Charlie\
    \ Perkins.\n   Jim Solomon has been instrumental in shaping this document into\
    \ its\n   present form.\n"
- title: References
  contents:
  - "References\n   [1] Perkins, C., \"IP Mobility Support\", RFC 2002, October 1996.\n\
    \   [2] Perkins, C., \"IP Encapsulation within IP\", RFC 2003, October\n     \
    \  1996.\n   [3] Computer Emergency Response Team (CERT), \"IP Spoofing Attacks\n\
    \       and Hijacked Terminal Connections\", CA-95:01, January 1995.\n       Available\
    \ via anonymous ftp from info.cert.org\n       in/pub/cert_advisories.\n   [4]\
    \ Johnson, D., and C. Perkins, \"Route Optimization in Mobile IP\",\n       Work\
    \ in Progress.\n   [5] Manuel Rodriguez, private communication, August 1995.\n\
    \   [6] Atkinson, R., \"IP Authentication Header\", RFC 1826, August 1995.\n \
    \  [7] Atkinson, R., \"IP Encapsulating Security Payload\", RFC 1827,\n      \
    \ August 1995.\n   [8] Ferguson, P., and D. Senie, \"Network Ingress Filtering:\
    \ Defeating\n       Denial of Service Attacks which employ IP Source Address\n\
    \       Spoofing\", RFC 2267, January 1998.\n   [9] Bradner, S., \"Key words for\
    \ use in RFCs to Indicate Requirement\n       Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n"
- title: Editor and Chair Addresses
  contents:
  - "Editor and Chair Addresses\n   Questions about this document may be directed\
    \ at:\n   Gabriel E. Montenegro\n   Sun Microsystems, Inc.\n   901 San Antonio\
    \ Road\n   Mailstop UMPK 15-214\n   Mountain View, California 94303\n   Voice:\
    \  +1-415-786-6288\n   Fax:    +1-415-786-6445\n   EMail: gabriel.montenegro@eng.sun.com\n\
    \   The working group can be contacted via the current chairs:\n   Jim Solomon\n\
    \   Motorola, Inc.\n   1301 E. Algonquin Rd. - Rm 2240\n   Schaumburg, IL  60196\n\
    \   Voice:  +1-847-576-2753\n   Fax:    +1-847-576-3240\n   EMail: solomon@comm.mot.com\n\
    \   Erik Nordmark\n   Sun Microsystems, Inc.\n   901 San Antonio Road\n   Mailstop\
    \ UMPK17-202\n   Mountain View, California 94303\n   Voice:  +1-415-786-5166\n\
    \   EMail: erik.nordmark@eng.sun.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
