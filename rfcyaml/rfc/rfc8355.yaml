- title: __initial_text__
  contents:
  - "                          Resiliency Use Cases\n        in Source Packet Routing\
    \ in Networking (SPRING) Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document identifies and describes the requirements for a set\
    \ of\n   use cases related to Segment Routing network resiliency on Source\n \
    \  Packet Routing in Networking (SPRING) networks.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8355.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Path Protection . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   3.  Management-Free Local Protection  . . . . . . . . . . . .\
    \ . .   6\n     3.1.  Management-Free Bypass Protection . . . . . . . . . . .\
    \ .   7\n     3.2.  Management-Free Shortest-Path-Based Protection  . . . . .\
    \   8\n   4.  Managed Local Protection  . . . . . . . . . . . . . . . . . .  \
    \ 8\n     4.1.  Managed Bypass Protection . . . . . . . . . . . . . . . .   9\n\
    \     4.2.  Managed Shortest Path Protection  . . . . . . . . . . . .   9\n  \
    \ 5.  Loop Avoidance  . . . . . . . . . . . . . . . . . . . . . . .  10\n   6.\
    \  Coexistence of Multiple Resilience Techniques in the Same\n       Infrastructure\
    \  . . . . . . . . . . . . . . . . . . . . . . .  10\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  11\n   8.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  11\n   9.  Manageability Considerations\
    \  . . . . . . . . . . . . . . . .  11\n   10. References  . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  12\n     10.1.  Normative References . . . .\
    \ . . . . . . . . . . . . . .  12\n     10.2.  Informative References . . . .\
    \ . . . . . . . . . . . . .  12\n   Acknowledgements  . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  12\n   Contributors  . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  12\n   Authors' Addresses  . . . . . . . . . . . . .\
    \ . . . . . . . . . .  13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document reviews various use cases for the protection\
    \ of\n   services in a SPRING network.  The terminology used hereafter is in\n\
    \   line with [RFC5286] and [RFC5714].\n   The resiliency use cases described\
    \ in this document can be applied\n   not only to traffic that is forwarded according\
    \ to the SPRING\n   architecture, but also to traffic that originally is forwarded\
    \ using\n   other paradigms such as LDP signaling or pure IP traffic (IP-routed\n\
    \   traffic).\n   Three key alternatives are described: path protection, local\n\
    \   protection without operator management, and local protection with\n   operator\
    \ management.\n   Path protection lets the ingress node be in charge of the failure\n\
    \   recovery, as discussed in Section 2.\n   The rest of the document focuses\
    \ on approaches where protection is\n   performed by the node adjacent to the\
    \ failed component, commonly\n   referred to as local protection techniques or\
    \ fast-reroute techniques\n   [RFC5286] [RFC5714].\n   In Section 3, we discuss\
    \ two different approaches providing unmanaged\n   local protection, namely link/node\
    \ bypass protection and shortest-\n   path-based protection.\n   Section 4 illustrates\
    \ a case allowing the operator to manage the\n   local protection behavior in\
    \ order to accommodate specific policies.\n   In Section 5, we discuss the opportunity\
    \ for the SPRING architecture\n   to provide loop-avoidance mechanisms such that\
    \ transient forwarding\n   state inconsistencies during routing convergence do\
    \ not lead into\n   traffic loss.\n   The purpose of this document is to illustrate\
    \ the different use cases\n   and explain how an operator could combine them in\
    \ the same network\n   (see Section 6).  Solutions are not defined in this document.\n\
    \                          B------C------D------E\n                         /|\
    \      | \\  / | \\  / |\\\n                        / |      |  \\/  |  \\/  |\
    \ \\\n                       A  |      |  /\\  |  /\\  |  Z\n                \
    \        \\ |      | /  \\ | /  \\ | /\n                         \\|      |/ \
    \   \\|/    \\|/\n                          F------G------H------I\n         \
    \              Figure 1: Reference Topology\n   We use Figure 1 as a reference\
    \ topology throughout the document.  The\n   following link metrics are applied:\n\
    \   o  Links from/to A and Z are configured with a metric of 100.\n   o  CH, GD,\
    \ DI, and HE links are configured with a metric of 6.\n   o  All other links are\
    \ configured with a metric of 5.\n   Note: Link metrics are bidirectional; in\
    \ other words, the same metric\n   value is configured at both sides of each link.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Path Protection
  contents:
  - "2.  Path Protection\n   As a reminder, one of the major network operator requirements\
    \ is path\n   disjointness capability.  Network operators have deployed\n   infrastructures\
    \ with topologies that allow paths to be computed in a\n   complete disjoint fashion\
    \ where two paths wouldn't share any\n   component (link or router), hence allowing\
    \ an optimal protection\n   strategy.\n   A first protection strategy consists\
    \ of excluding any local repair\n   and instead uses end-to-end path protection\
    \ where each SPRING path is\n   protected by a second disjoint SPRING path.  In\
    \ this case, local\n   protection is not used along the path.\n   For example,\
    \ a pseudowire (PW) from A to Z can be \"path protected\" in\n   the direction\
    \ A to Z in the following manner: the operator configures\n   two SPRING paths,\
    \ T1 (primary) and T2 (backup), from A to Z.\n   The two paths may be used:\n\
    \   o  concurrently, where the ingress router sends the same traffic over\n  \
    \    the primary and secondary path (this is usually known as 1+1\n      protection);\n\
    \   o  concurrently, where the ingress router splits the traffic over the\n  \
    \    primary and secondary path (this is usually known as Equal-Cost\n      Multipath\
    \ (ECMP) or Unequal-Cost Multipath (UCMP)); or\n   o  as a primary and backup\
    \ path, where the secondary path is used\n      only when the primary failed (this\
    \ is usually known as 1:1\n      protection).\n   T1 is established over path\
    \ {AB, BC, CD, DE, EZ} as the primary path,\n   and T2 is established over path\
    \ {AF, FG, GH, HI, IZ} as the backup\n   path.  The two paths MUST be disjoint\
    \ in their links, nodes, and\n   Shared Risk Link Groups (SRLGs) to satisfy the\
    \ requirement of\n   disjointness.\n   In the case of primary/backup paths, when\
    \ the primary path T1 is up,\n   the packets of the PW are sent on T1.  When T1\
    \ fails, the packets of\n   the PW are sent on the backup path T2.  When T1 comes\
    \ back up, the\n   operator either allows for an automated reversion of the traffic\
    \ onto\n   T1 or selects an operator-driven reversion.  Typically, the\n   switchover\
    \ from path T1 to path T2 is done in a fast-reroute fashion\n   (e.g., sub-50\
    \ milliseconds) but, depending on the service that needs\n   to be delivered,\
    \ other restoration times may be used.\n   It is essential that any path, primary\
    \ or backup, benefit from an\n   end-to-end liveness monitoring/verification.\
    \  The method and\n   mechanisms that provide such a liveness check are outside\
    \ the scope\n   of this document.  An example is given by [RFC5880].\n   There\
    \ are multiple options for a liveness check, e.g., path liveness,\n   where the\
    \ path is monitored at the network level (either by the head-\n   end node or\
    \ by a network controller/monitoring system).  Another\n   possible approach consists\
    \ of a service-based path monitored by the\n   service instance (verifying reachability\
    \ of the endpoint).  All these\n   options are given here as examples.  While\
    \ this document does express\n   the requirement for a liveness mechanism, it\
    \ does not mandate, nor\n   define, any specific one.\n   From a SPRING viewpoint,\
    \ we would like to highlight the following\n   requirements:\n   o  SPRING architecture\
    \ MUST provide a way to compute paths that are\n      not protected by local repair\
    \ techniques (as illustrated in the\n      example of paths T1 and T2).\n   o\
    \  SPRING architecture MUST provide a way to instantiate pairs of\n      disjoint\
    \ paths on a topology based on a protection strategy (link,\n      node, or SRLG\
    \ protection) and allow the validation or\n      recomputation of these paths\
    \ upon network events.\n   o  The SPRING architecture MUST provide an end-to-end\
    \ liveness check\n      of SPRING-based paths.\n"
- title: 3.  Management-Free Local Protection
  contents:
  - "3.  Management-Free Local Protection\n   This section describes two alternatives\
    \ that provide local protection\n   without requiring operator management, namely\
    \ bypass protection and\n   shortest-path-based protection.\n   For example, traffic\
    \ from A to Z, transported over the shortest paths\n   provided by the SPRING\
    \ architecture, benefits from management-free\n   local protection by having each\
    \ node along the path automatically\n   precompute and preinstall a backup path\
    \ for the destination Z.  Upon\n   local detection of the failure, the traffic\
    \ is repaired over the\n   backup path in sub-50 milliseconds.  When the primary\
    \ path comes back\n   up, the operator either allows for an automated reversion\
    \ of the\n   traffic onto it or selects an operator-driven reversion.\n   The\
    \ backup path computation SHOULD support the following\n   requirements:\n   o\
    \  100% link, node, and SRLG protection in any topology;\n   o  automated computation\
    \ by the IGP; and\n   o  selection of the backup path such as to minimize the\
    \ chance for\n      transient congestion and/or delay during the protection period,\
    \ as\n      reflected by the IGP metric configuration in the network.\n"
- title: 3.1.  Management-Free Bypass Protection
  contents:
  - "3.1.  Management-Free Bypass Protection\n   One way to provide local repair is\
    \ to enforce a failover along the\n   shortest path around the failed component.\n\
    \   In case of link protection, the point of local repair will create a\n   repair\
    \ path avoiding the protected link and merging back to the\n   primary path at\
    \ the next hop.\n   In case of node protection, the repair path will avoid the\
    \ protected\n   node and merge back to the primary path at the next-next hop.\n\
    \   In case of SRLG protection, the repair path will avoid members of the\n  \
    \ same group and merge back to the primary path just after.\n   In our example,\
    \ C protects destination Z against a failure of the CD\n   link by enforcing the\
    \ traffic over the bypass {CH, HD}.  The\n   resulting end-to-end path between\
    \ A and Z, upon recovery from the\n   failure of CD, is depicted in Figure 2.\n\
    \                          B * * *C------D * * *E\n                         *|\
    \      | *  / * \\  / |*\n                        * |      |  */  *  \\/  | *\n\
    \                       A  |      |  /*  *  /\\  |  Z\n                      \
    \  \\ |      | /  * * /  \\ | /\n                         \\|      |/    **/ \
    \   \\|/\n                          F------G------H------I\n                Figure\
    \ 2: Bypass Protection around Link CD\n   When the primary path comes back up,\
    \ the operator either allows for\n   an automated reversion of the traffic onto\
    \ the primary path or\n   selects an operator-driven reversion.\n"
- title: 3.2.  Management-Free Shortest-Path-Based Protection
  contents:
  - "3.2.  Management-Free Shortest-Path-Based Protection\n   An alternative protection\
    \ strategy consists in management-free local\n   protection that is aimed at providing\
    \ a repair for the destination\n   based on the shortest path to the destination.\n\
    \   In our example, C protects Z (which the traffic initially reaches via\n  \
    \ CD) by enforcing the traffic over its shortest path to Z and\n   considering\
    \ the failure of the protected component.  The resulting\n   end-to-end path between\
    \ A and Z, upon recovery from the failure of\n   CD, is depicted in Figure 3.\n\
    \                          B * * *C------D------E\n                         *|\
    \      | *  / | \\  / |\\\n                        * |      |  */  |  \\/  | \\\
    \n                       A  |      |  /*  |  /\\  |  Z\n                     \
    \   \\ |      | /  * | /  \\ | *\n                         \\|      |/    *|/\
    \    \\|*\n                          F------G------H * * *I\n             Figure\
    \ 3: Shortest Path Protection around Link CD\n   When the primary path comes back\
    \ up, the operator either allows for\n   an automated reversion of the traffic\
    \ onto the primary path or\n   selects an operator-driven reversion.\n"
- title: 4.  Managed Local Protection
  contents:
  - "4.  Managed Local Protection\n   There may be cases where a management-free repair\
    \ does not fit the\n   policy of the operator.  For example, in our illustration,\
    \ the\n   operator may not want to have CD and CH used to protect each other\n\
    \   due to the bandwidth (BW) availability in each link that could not\n   suffice\
    \ to absorb the other link traffic.\n   In this context, the protection mechanism\
    \ MUST support the explicit\n   configuration of the backup path either under\
    \ the form of high-level\n   constraints (end at the next hop, end at the next-next\
    \ hop, minimize\n   this metric, avoid this SRLG, etc.) or under the form of an\
    \ explicit\n   path.  Upon local detection of the failure, the traffic is repaired\n\
    \   over the backup path in sub-50 milliseconds.  When the primary path\n   comes\
    \ back up, the operator either allows for an automated reversion\n   of the traffic\
    \ onto it or selects an operator-driven reversion.\n   We discuss such aspects\
    \ for both bypass and shortest-path-based\n   protection schemes.\n"
- title: 4.1.  Managed Bypass Protection
  contents:
  - "4.1.  Managed Bypass Protection\n   Let us illustrate the case using our reference\
    \ example.  For the\n   demand from A to Z, the operator does not want to use\
    \ the shortest\n   failover path to the next hop, {CH, HD}, but rather the path\
    \ {CG, GH,\n   HD}, as illustrated in Figure 4.\n                          B *\
    \ * *C------D * * *E\n                         *|      * \\  / * \\  / |*\n  \
    \                      * |      *  \\/  *  \\/  | *\n                       A\
    \  |      *  /\\  *  /\\  |  Z\n                        \\ |      * /  \\ * /\
    \  \\ | /\n                         \\|      */    \\*/    \\|/\n            \
    \              F------G * * *H------I\n                    Figure 4: Managed Bypass\
    \ Protection\n   The computation of the repair path SHOULD be possible in an automated\n\
    \   fashion as well as statically expressed in the point of local repair.\n"
- title: 4.2.  Managed Shortest Path Protection
  contents:
  - "4.2.  Managed Shortest Path Protection\n   In the case of shortest path protection,\
    \ the operator does not want\n   to use the shortest failover via link CH, but\
    \ rather the traffic\n   should reach H via {CG, GH} due to constraints such as\
    \ delay, BW, or\n   SRLG.\n   The resulting end-to-end path upon activation of\
    \ the protection is\n   illustrated in Figure 5.\n                          B\
    \ * * *C------D------E\n                         *|      * \\  / | \\  / |\\\n\
    \                        * |      *  \\/  |  \\/  | \\\n                     \
    \  A  |      *  /\\  |  /\\  |  Z\n                        \\ |      * /  \\ |\
    \ /  \\ | *\n                         \\|      */    \\|/    \\|*\n          \
    \                F------G * * *H * * *I\n                Figure 5: Managed Shortest\
    \ Path Protection\n   The computation of the repair path SHOULD be possible in\
    \ an automated\n   fashion as well as statically expressed in the point of local\
    \ repair.\n   The computation of the repair path based on a specific constraint\n\
    \   SHOULD be possible on a per-destination prefix base.\n"
- title: 5.  Loop Avoidance
  contents:
  - "5.  Loop Avoidance\n   It is part of routing protocols' behavior to have what\
    \ are called\n   \"transient routing inconsistencies\".  This is due to the routing\n\
    \   convergence that happens in each node at different times and during a\n  \
    \ different lapse of time.\n   These inconsistencies may cause routing loops that\
    \ last the time that\n   it takes for the node impacted by a network event to\
    \ converge.  These\n   loops are called \"micro-loops\".\n   Usually, in normal\
    \ routing protocol operations, micro-loops do not\n   last long and are only noticed\
    \ during the time it takes the network\n   to converge.  However, with the emergence\
    \ of fast-convergence and\n   fast-reroute technologies, micro-loops can be an\
    \ issue in networks\n   where sub-50 millisecond convergence/reroute is required.\
    \  Therefore,\n   the micro-loop problem needs to be addressed.\n   Networks may\
    \ be affected by micro-loops during convergence depending\n   of their topologies.\
    \  Detecting micro-loops can be done during\n   topology computation (e.g., Shortest\
    \ Path First (SPF) computation),\n   and therefore techniques to avoid micro-loops\
    \ may be applied.  An\n   example of such technique is to compute a path free\
    \ of micro-loops\n   that would be used during network convergence.\n   The SPRING\
    \ architecture SHOULD provide solutions to prevent the\n   occurrence of micro-loops\
    \ during convergence following a change in\n   the network state.  Traditionally,\
    \ the lack of packet steering\n   capability made it difficult to apply efficient\
    \ solutions to micro-\n   loops.  A SPRING-enabled router could take advantage\
    \ of the increased\n   packet steering capabilities offered by SPRING in order\
    \ to steer\n   packets in a way that packets do not enter such loops.\n"
- title: 6.  Coexistence of Multiple Resilience Techniques in the Same
  contents:
  - "6.  Coexistence of Multiple Resilience Techniques in the Same\n    Infrastructure\n\
    \   The operator may want to support several very different services on\n   the\
    \ same packet-switching infrastructure.  As a result, the SPRING\n   architecture\
    \ SHOULD allow for the coexistence of the different use\n   cases listed in this\
    \ document, in the same network.\n   Let us illustrate this with the following\
    \ example:\n   o  Flow F1 is supported over path {C, CD, E}\n   o  Flow F2 is\
    \ supported over path {C, CD, I}\n   o  Flow F3 is supported over path {C, CD,\
    \ Z}\n   o  Flow F4 is supported over path {C, CD, Z}\n   It should be possible\
    \ for the operator to configure the network to\n   achieve path protection for\
    \ F1, management-free shortest path local\n   protection for F2, managed protection\
    \ over path {CG, GH, Z} for F3,\n   and management-free bypass protection for\
    \ F4.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document describes requirements for the\
    \ SPRING architecture to\n   provide resiliency in SPRING networks.  As such,\
    \ it does not\n   introduce any new security considerations beyond those discussed\
    \ in\n   [RFC7855].\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  Manageability Considerations
  contents:
  - "9.  Manageability Considerations\n   This document provides use cases.  Solutions\
    \ aimed at supporting\n   these use cases should provide the necessary mechanisms\
    \ in order to\n   allow for manageability as described in [RFC7855].\n   Manageability\
    \ concerns the computation, installation, and\n   troubleshooting of the repair\
    \ path.  Also, necessary mechanisms\n   SHOULD be provided in order for the operator\
    \ to control when a repair\n   path is computed, how it has been computed, and\
    \ if it's installed and\n   used.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7855]  Previdi, S., Ed., Filsfils, C., Ed., Decraene, B.,\n          \
    \    Litkowski, S., Horneffer, M., and R. Shakir, \"Source\n              Packet\
    \ Routing in Networking (SPRING) Problem Statement\n              and Requirements\"\
    , RFC 7855, DOI 10.17487/RFC7855,\n              May 2016, <https://www.rfc-editor.org/info/rfc7855>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC5286]  Atlas, A., Ed. and A. Zinin, Ed.,\
    \ \"Basic Specification for\n              IP Fast Reroute: Loop-Free Alternates\"\
    , RFC 5286,\n              DOI 10.17487/RFC5286, September 2008,\n           \
    \   <https://www.rfc-editor.org/info/rfc5286>.\n   [RFC5714]  Shand, M. and S.\
    \ Bryant, \"IP Fast Reroute Framework\",\n              RFC 5714, DOI 10.17487/RFC5714,\
    \ January 2010,\n              <https://www.rfc-editor.org/info/rfc5714>.\n  \
    \ [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n    \
    \          (BFD)\", RFC 5880, DOI 10.17487/RFC5880, June 2010,\n             \
    \ <https://www.rfc-editor.org/info/rfc5880>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Stephane Litkowski and Alexander\n\
    \   Vainshtein for the comments and review of this document.\n"
- title: Contributors
  contents:
  - "Contributors\n   Pierre Francois contributed to the writing of the first draft\
    \ version\n   of this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Clarence Filsfils (editor)\n   Cisco Systems, Inc.\n \
    \  Brussels\n   Belgium\n   Email: cfilsfil@cisco.com\n   Stefano Previdi (editor)\n\
    \   Cisco Systems, Inc.\n   Via Del Serafico, 200\n   Rome  00142\n   Italy\n\
    \   Email: stefano@previdi.net\n   Bruno Decraene\n   Orange\n   France\n   Email:\
    \ bruno.decraene@orange.com\n   Rob Shakir\n   Google, Inc.\n   1600 Amphitheatre\
    \ Parkway\n   Mountain View, CA  94043\n   United States of America\n   Email:\
    \ robjs@google.com\n"
