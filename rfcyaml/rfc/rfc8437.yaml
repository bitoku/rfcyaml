- contents:
  - '           IMAP UNAUTHENTICATE Extension for Connection Reuse

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This specification extends the Internet Message Access Protocol\n
    \  (IMAP) to allow an administrative client to reuse the same IMAP\n   connection
    on behalf of multiple IMAP user identities.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8437.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   2\n   3.  UNAUTHENTICATE Command  . . . . . . . . . . . . . . . . . .
    .   3\n   4.  Interactions  . . . . . . . . . . . . . . . . . . . . . . . .   4\n
    \    4.1.  Stateful Extensions . . . . . . . . . . . . . . . . . . .   4\n     4.2.
    \ Client Certificates, SASL EXTERNAL, and imaps . . . . . .   5\n   5.  Revised
    State Machine . . . . . . . . . . . . . . . . . . . .   6\n   6.  Formal Syntax
    . . . . . . . . . . . . . . . . . . . . . . . .   7\n   7.  IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .   7\n   8.  Security Considerations
    . . . . . . . . . . . . . . . . . . .   7\n   9.  Privacy Considerations  . .
    . . . . . . . . . . . . . . . . .   8\n   10. References  . . . . . . . . . .
    . . . . . . . . . . . . . . .   8\n     10.1.  Normative References . . . . .
    . . . . . . . . . . . . .   8\n     10.2.  Informative References . . . . . .
    . . . . . . . . . . .   9\n   Appendix A.  Design Considerations  . . . . . .
    . . . . . . . . .  11\n   Acknowledgements  . . . . . . . . . . . . . . . . .
    . . . . . . .  11\n   Author's Address  . . . . . . . . . . . . . . . . . . .
    . . . . .  11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Modern IMAP [RFC3501] server deployments often have peer
    systems with\n   administrative privilege that perform actions on behalf of IMAP
    end\n   users.  For example, a voicemail gateway can use IMAP to store a\n   user's
    voicemail and mark that voicemail as \\Seen when the user\n   listens to it via
    the phone interface.  These systems can issue the\n   IMAP AUTHENTICATE command
    with administrative credentials to act on\n   behalf of other users.  However,
    with the IMAP base specification,\n   these specialized IMAP clients must close
    the connection and create a\n   new connection for each user.  For efficiency
    reasons, it is\n   desirable for these clients to reuse the same connection,\n
    \  particularly if SSL has been negotiated.  This specification proposes\n   the
    UNAUTHENTICATE command to achieve this goal.\n   The IMAP state machine described
    in Section 3 of RFC 3501 does not\n   have a transition from authenticated or
    selected state to not\n   authenticated state.  The UNAUTHENTICATE command adds
    this\n   transition.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  UNAUTHENTICATE Command\n   Arguments:  None\n   Responses:  No specific response
    for this command\n   Result:     OK - Completed, now in not authenticated state\n
    \              BAD - Command unknown or arguments invalid\n   This command directs
    the server to reset all connection state except\n   for the state of the TLS [RFC8446]
    layer.  Upon completion, the\n   server connection is placed in not authenticated
    state.  This\n   represents Transition 7 in the State Machine Diagram (Section
    5).\n   If a mailbox was selected, the mailbox ceases to be selected, but no\n
    \  expunge event is generated.  If a Simple Authentication and Security\n   Layer
    (SASL) [RFC4422] was active, the server terminates its outgoing\n   security layer
    immediately after sending the CRLF following the OK\n   response.  The client's
    outgoing security layer terminates\n   immediately after the CRLF following the
    UNAUTHENTICATE command.\n   Note that a BAD response only occurs if UNAUTHENTICATE
    is issued in\n   an invalid state, is not advertised by the server, or does not
    follow\n   the command syntax in the specification.  A NO response is not\n   permitted.
    \ As a result, specification-compliant implementations will\n   interoperate across
    security layer termination.\n   After sending this command, the client is free
    to issue a new\n   AUTHENTICATE or LOGIN command as permitted based on the server's\n
    \  capabilities.  If no SASL security layer was active, the client is\n   permitted
    to pipeline the UNAUTHENTICATE command with a subsequent\n   AUTHENTICATE command.
    \ If the IMAP server also advertises SASL-IR\n   [RFC4959], this permits an administrative
    client to re-authenticate\n   in one round trip.  Because of this pipelining optimization,
    a server\n   advertising UNAUTHENTICATE is not permitted to respond to the\n   UNAUTHENTICATE
    command with a NO response if it is unable to reset\n   the state associated with
    the connection.  Servers MAY close the\n   connection with an untagged BYE response
    if this preferably rare\n   situation occurs.\n   Servers MAY choose to advertise
    the UNAUTHENTICATE capability only\n   after authentication has completed.  As
    a result, clients may need to\n   issue an IMAP CAPABILITY command after authentication
    in order to\n   determine the availability of UNAUTHENTICATE.\n   The IMAP ID
    [RFC2971] command provides properties about the client\n   primarily for use in
    server log or audit files.  Because IMAP ID is\n   not related to application
    authentication or user identity in any\n   way, and caching it for the duration
    of the client connection can be\n   useful, the interaction between IMAP ID and
    the UNAUTHENTICATE\n   command is defined by the implementation.\n"
  title: 3.  UNAUTHENTICATE Command
- contents:
  - "4.  Interactions\n   This section describes interactions between this extension
    and other\n   IMAP extensions or usage models.\n"
  - contents:
    - "4.1.  Stateful Extensions\n   The connection state for the following list of
      IMAP extensions MUST\n   be reset if both a) the specified extension is advertised
      and b) the\n   UNAUTHENTICATE command is advertised and used.  This list may
      not be\n   complete; the requirement to reset the connection state applies to\n
      \  all current and future extensions except STARTTLS and ID.  Additional\n   requirements
      apply to specific stateful extensions as follows:\n   o  Cached identity information,
      such as group memberships, that are\n      used to evaluate access control lists
      [RFC4314] MUST be reset.\n   o  After an UNAUTHENTICATE command is issued, CONDSTORE
      servers\n      [RFC7162] MUST behave as if no CONDSTORE-enabling command was\n
      \     issued.\n   o  If IMAP COMPRESS [RFC4978] is active, the server terminates
      its\n      outgoing compression layer after it sends the CRLF following the\n
      \     OK response.  The client terminates its outgoing compression layer\n      after
      the CRLF following the UNAUTHENTICATE command.  When it\n      matters, the
      compression layer terminates before a SASL layer\n      terminates.\n   o  Any
      extensions enabled by the IMAP ENABLE [RFC5161] command cease\n      to be enabled
      when the UNAUTHENTICATE command is issued.  This\n      includes, but is not
      limited to, CONDSTORE [RFC7162], QRESYNC\n      [RFC7162], METADATA [RFC5464],
      METADATA-SERVER [RFC5464], and\n      UTF8=ACCEPT [RFC6855].\n   o  A server
      advertising SEARCHRES [RFC5182] discards any saved search\n      results so
      that '$' subsequently represents the empty set.\n   o  A server advertising
      LANGUAGE [RFC5255] will revert to the\n      \"i-default\" language.\n   o  When
      a server advertises CONTEXT=SEARCH or CONTEXT=SORT [RFC5267],\n      the UNAUTHENTICATE
      command includes an implicit CANCELUPDATE for\n      all server contexts.\n
      \  o  When a server advertises NOTIFY [RFC5465], the UNAUTHENTICATE\n      command
      cancels the server state related to the NOTIFY command and\n      reverts to
      default IMAP base-specification behavior for\n      notifications.\n"
    title: 4.1.  Stateful Extensions
  - contents:
    - "4.2.  Client Certificates, SASL EXTERNAL, and imaps\n   When a TLS [RFC8446]
      security layer is negotiated using either the\n   STARTTLS command or the imaps
      port [RFC8314], IMAP servers may be\n   configured to request a client certificate,
      and IMAP clients may\n   provide one.  Client credentials at the TLS layer do
      not normally\n   impact the application layer; however, they do have an impact
      when\n   the SASL EXTERNAL mechanism [RFC4422] in an IMAP AUTHENTICATE command\n
      \  is used to direct the server to use the provided client certificate\n   to
      authenticate as the specified IMAP user.  The UNAUTHENTICATE\n   command breaks
      any application-level binding of the TLS client\n   credentials but does not
      discard the client credentials.  As a\n   result, an administrative client may
      use a client certificate with\n   administrative privilege to act on behalf
      of multiple IMAP users in\n   the same connection via the EXTERNAL mechanism
      and the UNAUTHENTICATE\n   command.\n   Some server implementations using the
      imaps port will request and use\n   a TLS client certificate to authenticate
      immediately as the default\n   IMAP identity associated with that certificate.
      \ These\n   implementations indicate this behavior by using the PREAUTH greeting,\n
      \  as indicated by Transition 2 in the State Machine Diagram\n   (Section 5).
      \ As a result, TLS client certificates cannot be used for\n   administrative
      proxy authentication with the imaps port unless the\n   UNAUTHENTICATE command
      is also advertised.  In that case, an\n   administrative client can respond
      to the PREAUTH greeting with an\n   UNAUTHENTICATE command and then issue an
      AUTHENTICATE EXTERNAL\n   command.\n"
    title: 4.2.  Client Certificates, SASL EXTERNAL, and imaps
  title: 4.  Interactions
- contents:
  - "5.  Revised State Machine\n                      +----------------------+\n                      |connection
    established|\n                      +----------------------+\n                                 ||\n
    \                                \\/\n               +--------------------------------------+\n
    \              |          server greeting             |\n               +--------------------------------------+\n
    \                        || (1)       || (2)        || (3)\n                         \\/
    \          ||            ||\n               +-----------------+    ||            ||\n
    \              |Not Authenticated|<===||=========++ ||\n               +-----------------+
    \   ||     (7) || ||\n                || (8)   || (4)       ||         || ||\n
    \               ||       \\/           \\/         || ||\n                ||     +----------------+
    \       || ||\n                ||     |                |========++ ||\n                ||
    \    | Authenticated  |<=++    || ||\n                ||     +----------------+
    \ ||    || ||\n                ||       || (8)   || (5)   ||(6) || ||\n                ||
    \      ||       \\/       ||    || ||\n                ||       ||    +--------+
    \ ||    || ||\n                ||       ||    |Selected|==++    || ||\n                ||
    \      ||    |        |========++ ||\n                ||       ||    +--------+
    \          ||\n                ||       ||       || (8)            ||\n                \\/
    \      \\/       \\/                \\/\n               +--------------------------------------+\n
    \              |               Logout                 |\n               +--------------------------------------+\n
    \                                ||\n                                 \\/\n                   +-------------------------------+\n
    \                  |both sides close the connection|\n                   +-------------------------------+\n
    \  Revised IMAP state machine transitions:\n   1.  Connection without pre-authentication
    (OK greeting)\n   2.  Pre-authenticated connection (PREAUTH greeting)\n   3.  Rejected
    connection (BYE greeting)\n   4.  Successful LOGIN or AUTHENTICATE command\n   5.
    \ Successful SELECT or EXAMINE command\n   6.  CLOSE, UNSELECT [RFC3691], or failed
    SELECT or EXAMINE command\n   7.  UNAUTHENTICATE command\n   8.  LOGOUT command,
    server shutdown, or connection closed\n"
  title: 5.  Revised State Machine
- contents:
  - "6.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n
    \  Form (ABNF), as described in [RFC5234].  Amended terms are defined in\n   [RFC3501].\n
    \    capability     =/ \"UNAUTHENTICATE\"\n     command-auth   =/ \"UNAUTHENTICATE\"\n
    \    command-select =/ \"UNAUTHENTICATE\"\n"
  title: 6.  Formal Syntax
- contents:
  - "7.  IANA Considerations\n   IANA has added the UNAUTHENTICATE capability to the
    \"IMAP\n   Capabilities\" registry.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   The original IMAP state machine was designed
    to allow a server-\n   implementation approach in which each IMAP authentication
    identity\n   matches an operating system identity and the server revokes all\n
    \  administrative privilege once authentication completes.  This\n   extension
    is not compatible with that implementation approach.\n   However, that approach
    has significant performance costs on Unix\n   systems, and this extension is designed
    for environments where\n   efficiency is a relatively high-priority deployment
    goal.  This\n   extension is therefore appropriate for some deployments but may
    not\n   be appropriate for the most security-sensitive environments.\n   IMAP
    server implementations are complicated and can retain a lot of\n   state related
    to an authenticated user.  Server implementers need to\n   take care to reset
    all server state such that authentication as a\n   subsequent user does not inherit
    any data or privileges from the\n   previous user.  State data associated with
    a user can include cached\n   identity information such as group membership used
    to evaluate access\n   control lists [RFC4314], active notifications [RFC5465],
    access to\n   per-user data such as flags, etc.\n   IMAP server systems are often
    deployed in a two-tier model where a\n   server-side IMAP proxy routes to an IMAP
    backend that handles all\n   connections for a subset of possible users.  Some
    IMAP proxies enter\n   a pass-through mode after authentication.  If enabled,
    the\n   UNAUTHENTICATE command would allow a client, on a subsequent\n   authentication,
    to bypass any security restrictions present in the\n   proxy layer but not in
    the backend server layer.  As a result, IMAP\n   server implementations of this
    extension MUST provide a way to\n   disable it when it is not needed.  Use of
    an IMAP proxy that\n   processes the UNAUTHENTICATE command at the proxy layer
    eliminates\n   this concern.  Another option to mitigate this concern is for servers\n
    \  to only enable the UNAUTHENTICATE extension if the supplied\n   authentication
    credentials are associated with an administrative\n   identity.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Privacy Considerations\n   For the most part, this extension will have no
    impact on the privacy\n   considerations already present in an IMAP implementation.
    \ However,\n   if this extension were used between data centers, it could improve\n
    \  end-user privacy by increasing the difficultly of traffic analysis\n   due
    to connection reuse.\n"
  title: 9.  Privacy Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\",
      RFC 3501, DOI 10.17487/RFC3501, March 2003,\n              <https://www.rfc-editor.org/info/rfc3501>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC2971]  Showalter, T., \"IMAP4 ID extension\",
      RFC 2971,\n              DOI 10.17487/RFC2971, October 2000,\n              <https://www.rfc-editor.org/info/rfc2971>.\n
      \  [RFC3691]  Melnikov, A., \"Internet Message Access Protocol (IMAP)\n              UNSELECT
      command\", RFC 3691, DOI 10.17487/RFC3691,\n              February 2004, <https://www.rfc-editor.org/info/rfc3691>.\n
      \  [RFC4314]  Melnikov, A., \"IMAP4 Access Control List (ACL) Extension\",\n
      \             RFC 4314, DOI 10.17487/RFC4314, December 2005,\n              <https://www.rfc-editor.org/info/rfc4314>.\n
      \  [RFC4422]  Melnikov, A., Ed. and K. Zeilenga, Ed., \"Simple\n              Authentication
      and Security Layer (SASL)\", RFC 4422,\n              DOI 10.17487/RFC4422,
      June 2006,\n              <https://www.rfc-editor.org/info/rfc4422>.\n   [RFC4959]
      \ Siemborski, R. and A. Gulbrandsen, \"IMAP Extension for\n              Simple
      Authentication and Security Layer (SASL) Initial\n              Client Response\",
      RFC 4959, DOI 10.17487/RFC4959,\n              September 2007, <https://www.rfc-editor.org/info/rfc4959>.\n
      \  [RFC4978]  Gulbrandsen, A., \"The IMAP COMPRESS Extension\", RFC 4978,\n
      \             DOI 10.17487/RFC4978, August 2007,\n              <https://www.rfc-editor.org/info/rfc4978>.\n
      \  [RFC5161]  Gulbrandsen, A., Ed. and A. Melnikov, Ed., \"The IMAP\n              ENABLE
      Extension\", RFC 5161, DOI 10.17487/RFC5161, March\n              2008, <https://www.rfc-editor.org/info/rfc5161>.\n
      \  [RFC5182]  Melnikov, A., \"IMAP Extension for Referencing the Last\n              SEARCH
      Result\", RFC 5182, DOI 10.17487/RFC5182, March\n              2008, <https://www.rfc-editor.org/info/rfc5182>.\n
      \  [RFC5255]  Newman, C., Gulbrandsen, A., and A. Melnikov, \"Internet\n              Message
      Access Protocol Internationalization\", RFC 5255,\n              DOI 10.17487/RFC5255,
      June 2008,\n              <https://www.rfc-editor.org/info/rfc5255>.\n   [RFC5267]
      \ Cridland, D. and C. King, \"Contexts for IMAP4\", RFC 5267,\n              DOI
      10.17487/RFC5267, July 2008,\n              <https://www.rfc-editor.org/info/rfc5267>.\n
      \  [RFC5464]  Daboo, C., \"The IMAP METADATA Extension\", RFC 5464,\n              DOI
      10.17487/RFC5464, February 2009,\n              <https://www.rfc-editor.org/info/rfc5464>.\n
      \  [RFC5465]  Gulbrandsen, A., King, C., and A. Melnikov, \"The IMAP\n              NOTIFY
      Extension\", RFC 5465, DOI 10.17487/RFC5465,\n              February 2009, <https://www.rfc-editor.org/info/rfc5465>.\n
      \  [RFC6855]  Resnick, P., Ed., Newman, C., Ed., and S. Shen, Ed., \"IMAP\n
      \             Support for UTF-8\", RFC 6855, DOI 10.17487/RFC6855, March\n              2013,
      <https://www.rfc-editor.org/info/rfc6855>.\n   [RFC7162]  Melnikov, A. and D.
      Cridland, \"IMAP Extensions: Quick Flag\n              Changes Resynchronization
      (CONDSTORE) and Quick Mailbox\n              Resynchronization (QRESYNC)\",
      RFC 7162,\n              DOI 10.17487/RFC7162, May 2014,\n              <https://www.rfc-editor.org/info/rfc7162>.\n
      \  [RFC8314]  Moore, K. and C. Newman, \"Cleartext Considered Obsolete:\n              Use
      of Transport Layer Security (TLS) for Email Submission\n              and Access\",
      RFC 8314, DOI 10.17487/RFC8314, January 2018,\n              <https://www.rfc-editor.org/info/rfc8314>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Design Considerations\n   The author deliberately chose to add a
    separate UNAUTHENTICATE\n   command instead of allowing the LOGIN or AUTHENTICATE
    commands to be\n   issued when the connection is in a state other than unauthenticated.\n
    \  The primary reason for this choice is that the code that transitions\n   from
    not authenticated state to authenticated state in a server is\n   often the most
    security-sensitive code, because it needs to assume\n   and handle unconditionally
    hostile attackers.  That sensitive code is\n   simpler if it only handles a single
    server state (unauthenticated)\n   and the state transition is as simple as possible.
    \ Smaller and\n   simpler code is easier to audit and write in a secure way.\n
    \  A secondary reason to have a separate command is that it is simpler\n   to
    enable or disable the feature with that design.  See the\n   discussion in the
    Security Considerations section recommending that\n   implementations provide
    a way to disable this extension.\n"
  title: Appendix A.  Design Considerations
- contents:
  - "Acknowledgements\n   Thanks to Fred Batty for implementing UNAUTHENTICATE and
    to Cyrus\n   Daboo for constructive suggestions to improve this document.\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Chris Newman\n   Oracle\n   440 E. Huntington Dr., Suite
    400\n   Arcadia, CA  91006\n   United States of America\n   Email: chris.newman@oracle.com\n"
  title: Author's Address
