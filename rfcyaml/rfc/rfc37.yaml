- title: __initial_text__
  contents:
  - '                     Network Meeting Epilogue, etc.

    '
- title: The Meeting
  contents:
  - 'The Meeting

    '
- title: '-----------'
  contents:
  - "-----------\n  On Tuesday, March 17, 1970, I hosted a Network meeting at UCLA.\n\
    \  About 25 people attended, including representatives from MIT, LL,\n  BBN, Harvard,\
    \ SRI, Utah, UCSB, SDC, RAND and UCLA.  I presented a\n  modification of the protocol\
    \ in NWG/RFC #33; the modifications are\n  sketchily documented in NWG/RFC #36.\
    \  The main modification is the\n  facility for dynamic reconnection.\n  The protocol\
    \ based on sockets and undistinguished simplex\n  connections is quite different\
    \ from the previous protocol as\n  documented in NWG/RFC #11.  The impetus for\
    \ making such changes came\n  out of the network meeting on December 8, 1969,\
    \ at Utah, at which\n  time the limitations of a log-in requirement and the inability\
    \ to\n  connect arbitrary processes was seriously challenged.  Accordingly,\n\
    \  the primary reason for the recent meeting was to sample opinion on\n  the new\
    \ protocol.\n  Recollections may vary, but it is my opinion that the protocol\
    \ was\n  widely accepted and that the criticism and discussion fell into two\n\
    \  categories:\n  1.  Questioning the complexity and usefulness of the full protocol,\n\
    \      especially the need for dynamic reconnection.\n  2.  Other topics, particularly\
    \ character set translation, higher\n      level languages, incompatible equipment,\
    \ etc.\n  Notably lacking was any criticism of the basic concepts of sockets\n\
    \  and connections.  (Some have since surfaced.)  The following\n  agreements\
    \ were made:\n  1.  By April 30, I would be responsible for publishing an\n  \
    \    implementable specification along lines presented.\n  2.  Any interested\
    \ party would communicate with me (at least)\n      immediately if he wished to\
    \ modify the protocol.\n  3.  If major modifications come under consideration,\
    \ interested\n      parties would meet again.  This would happen in two to three\n\
    \      weeks.\n  4.  Jim Forgie of Lincoln Labs tentatively agreed to host a meeting\n\
    \      on higher level network languages, probably near Spring Joint\n      time.\n"
- title: Mailing List Changes
  contents:
  - 'Mailing List Changes

    '
- title: '--------------------'
  contents:
  - "--------------------\n  Paul Rovner of LL is replaced by\n                  \
    \ James Forgie\n                   Mass. Institute of Technology\n           \
    \        Lincoln Laboratory C158\n                   P.O. Box 73\n           \
    \        Lexington, Mass. 02173\n                   telephone at (617) 862-5500\
    \ ext. 7173\n  Professor George MEaly is added\n                   George Mealy\n\
    \                   Rm. 220\n                   Aitken Computation Lab.\n    \
    \               Harvard University\n                   Cambridge, Massachusetts\
    \ 02138\n                   telephone at (617) 868-1020 ext. 4355\n"
- title: Process
  contents:
  - 'Process

    '
- title: '-------'
  contents:
  - "-------\n  In all of our writing we have used the term process, to mean a\n \
    \ program which has an assigned location counter and an address space.\n  A program\
    \ is merely a pattern of bits stored in some file.  A new\n  process is created\
    \ only by an already existing process.  The\n  previous process must execute an\
    \ atomic operation (forc, attach,\n  etc.) to cause such a creation.  Processes\
    \ may either cause their\n  own demise or be terminated by another (usually superior)\
    \ process.\n  The above definition corresponds to the definition given by\n  Vyssotsky,\
    \ et al on pp.  206, 207 of \"Structure of the Multics\n  Supervisor\" in the\
    \ FJCC proceedings, 1965.\n  Because a process may create another process, and\
    \ because in general\n  the two processes are indistinguishable when viewed externally,\
    \ I\n  know of no reasonable way for two processes to request connection\n  directly\
    \ with each other.  The function of sockets is to provide a\n  standard interface\
    \ between processes.\n"
- title: The Days After
  contents:
  - 'The Days After

    '
- title: '--------------'
  contents:
  - "--------------\n  In the time since the meeting I have had conversations with\
    \ Steve\n  Wolfe (UCLA-CCN), Bill Crowther (BBN), and John Heafner and Erick\n\
    \  Harslem (RAND).  Wolf's comments will appear as NWG/RFC #38 and fall\n  into\
    \ a class I will comment on below.\n  Crowther submitted the following:\n  \"\
    A brief description of two ideas for simplifying the host protocol\n  described\
    \ at the March meeting.  These ideas have not been carefully\n  worked out.\n\
    \  Idea 1. To Reconnect.\n  --------------------\n  \"A NCP wanting to Reconnect\
    \ tells each of his neighbors \"I want to\n  reconnect\".  They wait until there\
    \ are no messages in transit and\n  respond \"OK\".  He then says \"Reconnect\
    \ as follows\" and they do it.\n  In the Rare condition, the NCP gets back an\
    \ \"I want to reconnect\n  instead of an \"OK\", then one must go and one must\
    \ stop.  So treat a\n  \"reconnect\" from a higher Host user etc. as an ok and\
    \ from a lower\n  as a \"No-wait until I reconnect you\" and do the connection.\n\
    \  Idea 2\n  ------\n  \"Decouple connections and links.  Still establish connections,\
    \ but\n  use any handy link for the messages.  Don't send another message on\n\
    \  a connection until a FRNM comes back.  Include source and\n  destination socket\
    \ numbers in the packet.\n  \"To reconnect, say to each of neighbors \"please\
    \ reconnect me as\n  follows...\".  Hold onto the connect for a short time (seconds)\
    \ and\n  send both packets and connection messages along toward their\n  destinations.\
    \  I haven't worked out how to keep the in-transit\n  messages in order, but probably\
    \ everything works if you don't send\n  out a reconnect when RFNM's are pending.\"\
    \n  Bill's first idea does not seem to me to be either decisively better\n  or\
    \ (after some thought) very different, and I am considering it.  I\n  have no\
    \ strong feelings about it yet, but I am trying to develop\n  some.\n  Bill's\
    \ second idea seems contrary to my conception of the role of\n  links.  An argument\
    \ in favor of decoupling connections and links\n  that the number of connections\
    \ between two hosts might want to\n  exceed 255, and that even if not, it is sounder\
    \ practice to isolate\n  dependancies in design.  On the other hand, the newly\
    \ provided Cease\n  on Link facility* (page 22 of the soon to be released BBN\
    \ report\n  #1822 revised Febuary 1970) becomes useless.  (Bill, who just put\n\
    \  the feature in, doesn't care.)  Another objection is that it seems\n  intuitively\
    \ bad to waste the possibility of using the link field to\n  carry information.\
    \  (Note the conflict of gut level feelings).\n  In a conversation with John Haefner\
    \ and Eric Harslem of RAND, the\n  pointed out that the current protocol makes\
    \ no provision for error\n  detection and reporting, status testing and reporting,\
    \ and expansion\n  and experimentation.  Error detection and status testing will\n\
    \  require some extended discussion to see what is useful, and I expect\n  that\
    \ such discussion will take place while implementation proceeds.\n  Leaving room\
    \ for protocol expansion and experimentation, however, is\n  best done now.\n\
    \  I suggest that two areas for expansion be reserved.  One is that\n  only a\
    \ fraction of the 256 links be used, say the first 32.  The\n  other area is to\
    \ use command codes from 255 downward, with permanent\n  codes assigned from the\
    \ number of links in use to 32, I feel that it\n  is quite unlikely that we would\
    \ need more than 32 for quite some\n  time, and moreover, the network probably\
    \ wouldn't handle traffic\n  implied by heavy link assignment.  (These two things\
    \ aren't\n  necessarily strongly coupled:  one can have many links assigned but\n\
    \  only a few carrying traffic at any given time.)\n  Some of Heafner's and Harslen's\
    \ other ideas may appear in NWG/RFC\n  form.\n  Immediate Interaction\n  ---------------------\n\
    \  During the next several days, I will still be interested in those\n  editicisms\
    \ of current protocol which might lead to rejection or\n  serious modification\
    \ of it.  Thereafter, the focus will be a\n  refinement, implementation, extension,\
    \ and utilization.  I may be\n  reached at UCLA through my secretary Mrs. Benita\
    \ Kristel at (213)\n  825-2368.  Also, everyone is invited to contribuet to the\
    \ NWG/RFC\n  series.  Unique numbers are assigned by Benita.\n  * The Cease on\
    \ Link facility is a way a receiving host modifies\n    RFNM's so as to carry\
    \ a flow-quenching meaning.  An alternative\n    proceedure is to use a host-to-host\
    \ control command.\n       [ This RFC was put into machine readable form for entry\
    \ ]\n        [ into the online RFC archives by Ron Fitzherbert 1/97 ]\n"
