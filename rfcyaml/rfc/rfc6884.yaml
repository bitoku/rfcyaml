- contents:
  - "                           RTP Payload Format\n   for the Enhanced Variable Rate
    Narrowband-Wideband Codec (EVRC-NW)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies Real-time Transport Protocol (RTP) payload\n
    \  formats to be used for the Enhanced Variable Rate Narrowband-Wideband\n   Codec
    (EVRC-NW).  Three media type registrations are included for\n   EVRC-NW RTP payload
    formats.  In addition, a file format is specified\n   for transport of EVRC-NW
    speech data in storage mode applications\n   such as email.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6884.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions .....................................................2\n   3.
    Background ......................................................3\n   4. EVRC-NW
    Codec ...................................................3\n   5. RTP Header Usage
    ................................................4\n   6. Payload Format ..................................................4\n
    \     6.1. Encoding Capability Identification in EVRC-NW\n           Interleaved/Bundled
    Format .................................5\n   7. Congestion Control Considerations
    ...............................6\n   8. Storage Format for the EVRC-NW Codec ............................6\n
    \  9. IANA Considerations .............................................7\n      9.1.
    Media Type Registrations ...................................7\n           9.1.1.
    Registration of Media Type audio/EVRCNW .............7\n           9.1.2. Registration
    of Media Type audio/EVRCNW0 ............9\n           9.1.3. Registration of Media
    Type audio/EVRCNW1 ...........10\n   10. SDP Mode Attributes for EVRC-NW ...............................12\n
    \  11. Mode Change Request/Response Considerations ...................13\n   12.
    Mapping EVRC-NW Media Type Parameters into SDP ................14\n   13. Offer-Answer
    Model Considerations for EVRC-NW .................14\n   14. Declarative SDP Considerations
    ................................16\n   15. Examples ......................................................16\n
    \  16. Security Considerations .......................................19\n   17.
    References ....................................................19\n      17.1.
    Normative References .....................................19\n      17.2. Informative
    References ...................................20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the payload formats for packetization
    of\n   EVRC-NW encoded speech signals into the Real-time Transport Protocol\n
    \  (RTP).  It defines support for the header-free, interleaved/bundled,\n   and
    compact bundle packet formats for the EVRC-NW codec as well as\n   discontinuous
    transmission (DTX) support for EVRC-NW encoded speech\n   transported via RTP.
    \ The EVRC-NW codec offers better speech quality\n   than the EVRC and EVRC-B
    codecs and better capacity than the Enhanced\n   Variable Rate Wideband Codec
    (EVRC-WB).  EVRC-NW belongs to the EVRC\n   family of codecs.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [1].\n"
  title: 2.  Conventions
- contents:
  - "3.  Background\n   EVRC-NW is an extension of both the EVRC-B [2] and EVRC-WB
    [3] speech\n   codecs developed in the Third Generation Partnership Project 2\n
    \  (3GPP2) with support for DTX.  It provides enhanced voice quality and\n   high
    spectral efficiency.\n   The EVRC-NW codec operates on 20 ms frames, and the default
    sampling\n   rate is 16 kHz (wideband).  Input and output at the 8 kHz sampling\n
    \  rate (narrowband) is also supported.  The EVRC-NW codec can operate\n   in
    eight modes (0 to 7) as defined in 3GPP2 C.S0014-D [4].  EVRC-NW\n   modes 0,
    1, and 7 are interoperable with EVRC-WB.  EVRC-NW modes 1 to\n   7 are interoperable
    with EVRC-B.  EVRC-NW modes 0 to 6 use the full\n   set or a subset of full rate,
    1/2 rate, 1/4 rate, and 1/8 rate\n   frames.  EVRC-NW mode 7 uses only 1/2 rate
    and 1/8 rate frames.  By\n   default, EVRC-NW supports all narrowband modes (modes
    1 to 7).  The\n   support of wideband mode (mode 0) is optional.  Mode change
    among\n   modes 1 to 7 (or among modes 0 to 7 if the receiver supports wideband\n
    \  mode) results in codec output bit-rate change but does not cause any\n   decoding
    problems at the receiver.  EVRC-NW provides a standardized\n   solution for packetized
    voice applications that allow transitions\n   between enhanced quality and increased
    capacity.  The most important\n   service addressed is IP telephony.  Target devices
    can be IP phones\n   or VoIP handsets, media gateways, voice messaging servers,
    etc.\n"
  title: 3.  Background
- contents:
  - "4.  EVRC-NW Codec\n   The EVRC-NW codec operates on 20 ms frames.  It produces
    output\n   frames of one of the four different sizes: 171 bits (Rate 1), 80 bits\n
    \  (Rate 1/2), 40 bits (Rate 1/4), or 16 bits (Rate 1/8).  In addition,\n   there
    are two zero-bit codec frame types: blank (null) frames and\n   erasure frames.
    \ The default sampling rate is 16 kHz.  Input and\n   output at the 8 kHz sampling
    rate is also supported.\n   The frame type values and sizes of the associated
    codec data frames\n   are listed in the table below:\n   Value  Rate        Total
    codec data frame size in bytes (and in bits)\n   --------------------------------------------------------------------\n
    \    0    Blank (Null)   0    (0 bits)\n     1    1/8            2    (16 bits)\n
    \    2    1/4            5    (40 bits)\n     3    1/2           10    (80 bits)\n
    \    4    1             22    (171 bits; 5 bits padded at the end)\n     5    Erasure
    \       0    (SHOULD NOT be transmitted by sender)\n"
  title: 4.  EVRC-NW Codec
- contents:
  - "5.  RTP Header Usage\n   The format of the RTP header is specified in RFC 3550
    [5].  The\n   EVRC-NW payload formats (Section 6) use the fields of the RTP header\n
    \  as specified in RFC 3550 [5].\n   EVRC-NW also has the capability to operate
    with 8 kHz sampled input/\n   output signals.  The decoder does not require a
    priori knowledge\n   about the sampling rate of the original signal at the input
    of the\n   encoder.  The decoder output can be at 8 kHz or 16 kHz regardless of\n
    \  the sampling rate used at the encoder.  Therefore, depending on the\n   implementation
    and the electroacoustic audio capabilities of the\n   devices, the input of the
    encoder and/or the output of the decoder\n   can be configured at 8 kHz; however,
    a 16 kHz RTP clock rate MUST\n   always be used.  The RTP timestamp is increased
    by 320 for each\n   20 milliseconds.\n   The RTP header marker bit (M) SHALL be
    set to 1 if the first frame\n   carried in the packet contains a speech frame
    that is the first in a\n   talkspurt.  For all other packets, the marker bit SHALL
    be set to\n   zero (M=0).\n"
  title: 5.  RTP Header Usage
- contents:
  - "6.  Payload Format\n   Three RTP packet formats are supported for the EVRC-NW
    codec -- the\n   interleaved/bundled packet format, the header-free packet format,
    and\n   the compact bundled packet format.  For all these formats, the\n   operational
    details and capabilities of EVRC-NW, such as TOC,\n   interleaving, DTX, and bundling,
    are exactly the same as those\n   defined in EVRC [6], EVRC-B [2], and EVRC-WB
    [3], except that\n   1.  the mode change request field in the interleaved/bundled
    packet\n       format MUST be interpreted according to the definition of the\n
    \      RATE_REDUC parameter as described for EVRC-NW in\n       3GPP2 C.S0014-D
    [4].\n   2.  the mode change request field in the interleaved/bundled packet\n
    \      format SHOULD be honored by an EVRC-NW encoding endpoint in a\n       one-to-one
    session with a dedicated EVRC-NW decoding endpoint,\n       such as in a two-party
    call or in a conference leg.\n   3.  the reserved bit field in the first octet
    of the interleaved/\n       bundled format has only one bit.  Bit 1 of the first
    octet is an\n       EVRC-NW wideband/narrowband encoding capability identification\n
    \      flag.\n   The media type audio/EVRCNW maps to the interleaved/bundled packet\n
    \  format, audio/EVRCNW0 maps to the header-free packet format, and\n   audio/EVRCNW1
    maps to the compact bundled packet format.\n"
  - contents:
    - "6.1.  Encoding Capability Identification in EVRC-NW Interleaved/Bundled\n      Format\n
      \  The EVRC-NW interleaved/bundled format defines an encoding capability\n   identification
      flag, which is used to signal the local EVRC-NW\n   wideband/narrowband encoding
      capability at the time of construction\n   of an RTP packet to the far end of
      a communication session.  This\n   capability identification flag allows the
      far end to use the MMM\n   field in its outgoing (returning) EVRC-NW interleaved/bundled
      format\n   packets to request the desired EVRC-NW wideband or narrowband\n   encoding
      mode in accordance with the dynamic/instantaneous encoding\n   capability information.
      \ See RFC 3558 [6] for the definition of the\n   MMM field.  The following examples
      illustrate a few scenarios where\n   the encoding capability information is
      used:\n   o  An end-to-end wideband communication is established first between\n
      \     two communication endpoints using the EVRC-NW interleaved/bundled\n      format.
      \ The called endpoint becomes wideband encoding incapable\n      during the
      call and makes the other end aware of this change by\n      using the encoding
      capability identification flag.  Based on the\n      new information, the calling
      endpoint could change the MMM value\n      in its outgoing EVRC-NW packets from
      mode 0 to mode 4 to request\n      narrowband encoded traffic for bandwidth
      efficiency or from mode 0\n      to mode 1 for best perceptual quality.\n   o
      \ An end-to-end narrowband communication is established between a\n      calling
      endpoint that is EVRC-NW wideband encoding capable and a\n      called endpoint
      that is EVRC-NW wideband encoding incapable.  The\n      called endpoint becomes
      EVRC-NW wideband encoding capable during\n      the call and makes the other
      end aware of this change using the\n      encoding capability identification
      flag.  Based on the new\n      information, the calling endpoint could change
      the MMM value in\n      its outgoing EVRC-NW packets from non-mode-0 to mode
      0 to request\n      wideband traffic.\n   The EVRC-NW interleaved/bundled format
      defines the encoding\n   capability identification flag in bit 1 of the first
      octet, as\n   illustrated in the figure below.  The flag shall be set to zero
      (C=0)\n   when the local EVRC-NW encoder is capable of mode 0 wideband\n   encoding.
      \ The flag shall be set to one (C=1) when the local EVRC-NW\n   encoder is capable
      of non-mode-0 narrowband encoding only.  See\n   RFC 3558 [6] for original definitions
      of other fields in the\n   interleaved/bundled format.\n     0                   1
      \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                        RTP Header                             |\n    +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n
      \   |R|C| LLL | NNN | MMM |  Count  |  TOC  |  ...  |  TOC  |padding|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |        one or more codec data frames, one per TOC entry       |\n    |
      \                            ....                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Reserved (R): 1 bit\n      Reserved bit.  MUST be set to zero by sender;
      SHOULD be ignored by\n      receiver.\n   Encoding capability identification
      (C): 1 bit\n      Must be set to zero by sender to indicate wideband encoding\n
      \     capable or set to one to indicate narrowband encoding capable\n      only.\n
      \     C = 0 :  mode 0 wideband encoding capable\n        = 1 :  mode 0 wideband
      encoding incapable, i.e., narrowband\n               encoding only.\n"
    title: 6.1.  Encoding Capability Identification in EVRC-NW Interleaved/Bundled
  title: 6.  Payload Format
- contents:
  - "7.  Congestion Control Considerations\n   Congestion control for RTP is discussed
    in RFC 3550 [5] and in\n   applicable RTP profiles, e.g., RFC3551 [7].  This document
    does not\n   change those considerations.\n   Due to the header overhead, the
    number of frames encapsulated in each\n   RTP packet influences the overall bandwidth
    of the RTP stream.\n   Packing more frames in each RTP packet can reduce the number
    of\n   packets sent and hence the header overhead, at the expense of\n   increased
    delay and reduced error robustness.\n"
  title: 7.  Congestion Control Considerations
- contents:
  - "8.  Storage Format for the EVRC-NW Codec\n   The storage format is used for storing
    EVRC-NW encoded speech frames,\n   e.g., as a file or email attachment.\n   The
    file begins with a magic number to identify the vocoder that is\n   used.  The
    magic number for EVRC-NW corresponds to the ASCII\n   character string \"#!EVRCNW\\n\",
    i.e., \"0x23 0x21 0x45 0x56 0x52 0x43\n   0x4E 0x57 0x0A\".\n   The codec data
    frames are stored in consecutive order, with a single\n   TOC entry field, extended
    to one octet, prefixing each codec data\n   frame.  The TOC field is extended
    to one octet by setting the four\n   most significant bits of the octet to zero.
    \ For example, a TOC value\n   of 4 (a full-rate frame) is stored as 0x04.  The
    Value column in the\n   table in Section 4 provides the TOC values for corresponding
    frame\n   types.\n   Speech frames lost in transmission and non-received frames
    MUST be\n   stored as erasure frames (TOC value of 5) to maintain synchronization\n
    \  with the original media.\n"
  title: 8.  Storage Format for the EVRC-NW Codec
- contents:
  - "9.  IANA Considerations\n   This document introduces a new EVRC-NW 'audio' media
    subtype.\n"
  - contents:
    - "9.1.  Media Type Registrations\n   Following the guidelines in RFC 4855 [8]
      and RFC 6838 [9], this\n   section registers new 'audio' media subtypes for
      EVRC-NW.\n"
    - contents:
      - "9.1.1.  Registration of Media Type audio/EVRCNW\n   Type name: audio\n   Subtype
        name: EVRCNW\n   Required parameters: None\n   Optional parameters:  These
        parameters apply to RTP transfer only.\n      mode-set-recv:  A subset of
        EVRC-NW modes.  Possible values are a\n         comma-separated list of modes
        from the set {0,1,2,3,4,5,6,7}\n         (see Table 2.6.1.2-1 in 3GPP2 C.S0014-D
        [4]).  A decoder can\n         use this attribute to inform an encoder of
        its preference to\n         operate in a specified subset of modes.  Absence
        of this\n         parameter signals the mode set {1,2,3,4,5,6,7}.\n      ptime:
        \ See RFC 4566 [10].\n      maxptime:  See RFC 4566.\n      maxinterleave:
        \ Maximum number for interleaving length (field LLL\n         in the Interleaving
        Octet) [0..7].  The interleaving lengths\n         used in the entire session
        MUST NOT exceed this maximum value.\n         If not signaled, the maxinterleave
        length MUST be 5.\n      silencesupp:  See Section 6.1 in RFC 4788.\n      dtxmax:
        \ See Section 6.1 in RFC 4788.\n      dtxmin:  See Section 6.1 in RFC 4788.\n
        \     hangover:  See Section 6.1 in RFC 4788.\n   Encoding considerations:\n
        \     This media type is framed binary data (see RFC 6838, Section 4.8)\n
        \     and is defined for transfer of EVRC-NW encoded data via RTP using\n
        \     the interleaved/bundled packet format specified in RFC 3558 [6].\n   Security
        considerations:  See Section 16.\n   Interoperability considerations:  None\n
        \  Published specification:\n      The EVRC-NW vocoder is specified in 3GPP2
        C.S0014-D [4].  The\n      transfer method with the interleaved/bundled packet
        format via RTP\n      is specified in RFC 3558 [6].  See Section 6 of RFC
        6884 for\n      details for EVRC-NW.\n   Applications that use this media
        type:\n      It is expected that many VoIP applications (as well as mobile\n
        \     applications) will use this type.\n   Additional information:\n      The
        following applies to stored-file transfer methods:\n         Magic number:
        #!EVRCNW\\n (see Section 8)\n         File extensions: enw, ENW\n         Macintosh
        file type code: None\n         Object identifier or OID: None\n   EVRC-NW
        speech frames may also be stored in the file format \"3g2\" as\n   defined
        in 3GPP2 C.S0050-B [14], which is identified using the media\n   types \"audio/3gpp2\"
        or \"video/3gpp2\" registered by RFC 4393 [11].\n   Person & email address
        to contact for further information:\n      Zheng Fang <zfang@qualcomm.com>\n
        \  Intended usage:  COMMON\n   Restrictions on usage:\n      This media type
        can be used with the file format defined in\n      Section 8 of RFC 6884 in
        contexts other than RTP.  In the context\n      of transfers over RTP, the
        RTP payload format specified in\n      Section 4.1 of RFC 3558 [6] is used
        for this media type.\n   Author:  Zheng Fang <zfang@qualcomm.com>\n   Change
        controller:\n      IETF Payload working group delegated from the IESG.\n"
      title: 9.1.1.  Registration of Media Type audio/EVRCNW
    - contents:
      - "9.1.2.  Registration of Media Type audio/EVRCNW0\n   Type name: audio\n   Subtype
        name: EVRCNW0\n   Required parameters: None\n   Optional parameters:  These
        parameters apply to RTP transfer only.\n      mode-set-recv:  A subset of
        EVRC-NW modes.  Possible values are a\n         comma-separated list of modes
        from the set {0,1,2,3,4,5,6,7}\n         (see Table 2.6.1.2-1 in 3GPP2 C.S0014-D
        [4]).  A decoder can\n         use this attribute to inform an encoder of
        its preference to\n         operate in a specified subset of modes.  Absence
        of this\n         parameter signals the mode set {1,2,3,4,5,6,7}.\n      ptime:
        \ See RFC 4566.\n      silencesupp:  See Section 6.1 in RFC 4788.\n      dtxmax:
        \ See Section 6.1 in RFC 4788.\n      dtxmin:  See Section 6.1 in RFC 4788.\n
        \     hangover:  See Section 6.1 in RFC 4788.\n   Encoding considerations:\n
        \     This media type is framed binary data (see RFC 6838, Section 4.8)\n
        \     and is defined for transfer of EVRC-NW encoded data via RTP using\n
        \     the header-free packet format specified in RFC 3558 [6].\n   Security
        considerations:  See Section 16.\n   Interoperability considerations:  None\n
        \  Published specification:\n      The EVRC-NW vocoder is specified in 3GPP2
        C.S0014-D [4].  The\n      transfer method with the header-free packet format
        via RTP is\n      specified in RFC 3558 [6].\n   Applications that use this
        media type:\n      It is expected that many VoIP applications (as well as
        mobile\n      applications) will use this type.\n   Additional information:
        None\n   Person & email address to contact for further information:\n      Zheng
        Fang <zfang@qualcomm.com>\n   Intended usage:  COMMON\n   Restrictions on
        usage:\n      This media type depends on RTP framing and hence is only defined\n
        \     for transfer via RTP [5].  The RTP payload format specified in\n      Section
        4.2 of RFC 3558 [6] SHALL be used.  This media type SHALL\n      NOT be used
        for storage or file transfer; instead, audio/EVRCNW\n      SHALL be used.\n
        \  Author:  Zheng Fang <zfang@qualcomm.com>\n   Change controller:\n      IETF
        Payload working group delegated from the IESG.\n"
      title: 9.1.2.  Registration of Media Type audio/EVRCNW0
    - contents:
      - "9.1.3.  Registration of Media Type audio/EVRCNW1\n   Type name: audio\n   Subtype
        name: EVRCNW1\n   Required parameters: None\n   Optional parameters:  These
        parameters apply to RTP transfer only.\n      mode-set-recv:  A subset of
        EVRC-NW modes.  Possible values are a\n         comma-separated list of modes
        from the set {0,1} (see Table\n         2.6.1.2-1 in 3GPP2 C.S0014-D [4]).
        \ A decoder can use this\n         attribute to inform an encoder of its preference
        to operate in\n         a specified subset of modes.  A value of 0 signals
        support for\n         wideband fixed rate (full or half rate, depending on
        the value\n         of the 'fixedrate' parameter).  A value of 1 signals narrowband\n
        \        fixed rate (full or half rate, depending on the value of the\n         'fixedrate'
        parameter).  Absence of this parameter signals\n         mode 1.\n      ptime:
        \ See RFC 4566.\n      maxptime:  See RFC 4566.\n      fixedrate:  Indicates
        the EVRC-NW rate of the session while in\n         single rate operation.
        \ Valid values include 0.5 and 1, where a\n         value of 0.5 indicates
        the 1/2 rate while a value of 1\n         indicates the full rate.  If this
        parameter is not present, 1/2\n         rate is assumed.\n      silencesupp:
        \ See Section 6.1 in RFC 4788.\n      dtxmax:  See Section 6.1 in RFC 4788.\n
        \     dtxmin:  See Section 6.1 in RFC 4788.\n      hangover:  See Section
        6.1 in RFC 4788.\n   Encoding considerations:\n      This media type is framed
        binary data (see RFC 6838, Section 4.8)\n      and is defined for transfer
        of EVRC-NW encoded data via RTP using\n      the compact bundled packet format
        specified in RFC 4788.\n   Security considerations:  See Section 16.\n   Interoperability
        considerations:  None\n   Published specification:\n      The EVRC-NW vocoder
        is specified in 3GPP2 C.S0014-D [4].  The\n      transfer method with the
        compact bundled packet format via RTP is\n      specified in RFC 4788.\n   Applications
        that use this media type:\n      It is expected that many VoIP applications
        (as well as mobile\n      applications) will use this type.\n   Additional
        information: None\n   Person & email address to contact for further information:\n
        \     Zheng Fang <zfang@qualcomm.com>\n   Intended usage:  COMMON\n   Restrictions
        on usage:\n      This media type depends on RTP framing and hence is only
        defined\n      for transfer via RTP [5].  The RTP payload format specified
        in\n      Section 4 of RFC 4788 SHALL be used.  This media type SHALL NOT
        be\n      used for storage or file transfer; instead, audio/EVRCNW SHALL be\n
        \     used.\n   Author:  Zheng Fang <zfang@qualcomm.com>\n   Change controller:\n
        \     IETF Payload working group delegated from the IESG.\n"
      title: 9.1.3.  Registration of Media Type audio/EVRCNW1
    title: 9.1.  Media Type Registrations
  title: 9.  IANA Considerations
- contents:
  - "10.  SDP Mode Attributes for EVRC-NW\n   'mode-set-recv' can be used by a decoder
    to inform an encoder of its\n   preference to operate in a specified subset of
    modes.  Note that\n   indicating a preference implicitly indicates support for
    that\n   capability.  If mode 0 is not preferred for media type EVRCNW0 or\n   EVRCNW1,
    then there is no indication that mode 0 is supported.\n   However, absence of
    this parameter or absence of mode 0 in this\n   parameter for media type EVRCNW
    shall not preclude mode 0 support\n   during a call where mode 0 may be requested
    via the MMM field.\n   1.  To inform other nodes of its capability for wideband
    mode\n       support: a decoder can always decode all the narrowband modes\n       (modes
    1 to 7).  Unless the decoder indicates support of mode 0\n       (i.e., preference)
    in this parameter or in the MMM mode request\n       field in the interleaved/bundled
    payload format, an encoder at\n       the other side shall not operate in mode
    0.\n   2.  To indicate a preference to operate in a subset of modes: a set\n       has
    been defined so that several modes can be expressed as a\n       preference in
    one attempt.  For instance, the set {4,5,6,7}\n       signals that the receiver
    prefers that the sender operate in\n       bandwidth-efficient narrowband modes
    of EVRC-NW.\n   Note that during an active call session using the interleaved/bundled\n
    \  packet format, the MMM mode request received from a communication\n   partner
    can contain a mode request different than the values in the\n   last mode-set-recv
    attribute.  The partner's EVRC-NW wideband\n   decoding capability is determined
    by the latest mode-set-recv\n   attribute or MMM mode request field.  For example,
    a mode request\n   with MMM=0 from a communication partner is an implicit indication
    of\n   the partner's EVRC-NW wideband decoding capability and preference.\n   An
    EVRC-NW wideband-capable node receiving the request can operate in\n   wideband
    mode.  A mode request with MMM=1, 2, ..., or 7 from a\n   communication partner
    is an implicit indication of the partner's\n   EVRC-NW narrowband decoding preference.
    \ The encoder of an EVRC-NW\n   node receiving the request shall honor the request
    and operate in\n   narrowband mode.\n   'sendmode' is used as a Session Description
    Protocol (SDP) mode\n   attribute in EVRC [6], EVRC-B [2], and EVRC-WB [3].  However,
    it is\n   deprecated in EVRC-NW.\n"
  title: 10.  SDP Mode Attributes for EVRC-NW
- contents:
  - "11.  Mode Change Request/Response Considerations\n   The interleaved/bundled
    packet format for the EVRC family of vocoders\n   supports a 3-bit field (MMM)
    that a communication node can use to\n   indicate its preferred compression mode
    to an opposite node.  The\n   concept of the compression mode (also known as Capacity
    Operating\n   Point) was introduced to allow a controlled trade-off between voice\n
    \  quality and channel capacity.  The notion makes it possible to\n   exercise
    vocoders at the highest possible (average) bit-rate (hence,\n   highest voice
    quality) when the network is lightly loaded.\n   Conversely, once the network
    load increases, the vocoders can be\n   requested to operate at lower average
    bit-rates so as to absorb the\n   additional network load without causing an undue
    increase in the\n   frame-erasure rates; the underlying premise is that while
    a higher\n   bit-rate improves vocoder performance, it also increases the network\n
    \  load, risking a sharp decline in voice quality should the frame-\n   erasure
    rate be too high.  By contrast, a lower bit-rate mode of\n   operation can result
    in accommodation of the additional network load\n   without causing unduly high
    frame-erasure rates, resulting in better\n   overall quality despite the inherently
    lower voice quality of the\n   lower bit-rate mode of the vocoder.\n   Accordingly,
    the MMM field should be used to request the far end to\n   transmit compressed
    speech using a mode that provides the best\n   balance between voice quality and
    capacity.  However, in the case of\n   mobile-mobile calls, for example, there
    are two wireless sides\n   involved, each with a potentially different network
    load level and\n   hence a different preferred mode.  In such cases, achieving
    optimal\n   end-to-end performance depends on coherent management of the\n   operative
    mode by the two sides.  This requires that even if the\n   local node prefers
    a higher bit-rate vocoder mode, it should adjust\n   to a lower bit-rate mode
    if requested by the far end, in order to\n   avoid potentially high frame-erasure
    rates due to heavy load at the\n   far-end network.  For similar reasons, in cases
    where a mode\n   requested by the far end should not be supported, it might still
    be\n   beneficial to consider switching to a supported vocoder mode\n   corresponding
    to a lower average bit-rate than requested.  It is\n   recommended that the next
    lower average bit-rate supported vocoder\n   mode be used for encoding when a
    mode requested by the far end is not\n   supported.\n   A wideband-capable endpoint
    can use the information conveyed by the\n   C-bit of the RTP payload header to
    determine the optimal mode to\n   request of the far end.  If the far end cannot
    provide mode 0 packets\n   (C-bit=1), then the choice of MMM can be based strictly
    on the local\n   network load.  If the C-bit indicates the remote end's mode 0\n
    \  encoding capability (C-bit=0), then even if the local network load is\n   not
    light, mode 0 can be requested knowing definitively that it will\n   be supported.
    \ This will permit operators to treat wideband-capable\n   mobiles preferentially,
    should they wish to adopt such policy.\n"
  title: 11.  Mode Change Request/Response Considerations
- contents:
  - "12.  Mapping EVRC-NW Media Type Parameters into SDP\n   Information carried in
    the media type specification has a specific\n   mapping to fields in the Session
    Description Protocol (SDP) [10],\n   which is commonly used to describe RTP sessions.
    \ When SDP is used to\n   specify sessions employing EVRC-NW encoded speech, the
    mapping is as\n   follows.\n   o  The media type (\"audio\") goes in SDP \"m=\"
    as the media name.\n   o  The media subtype (\"EVRCNW\", \"EVRCNW0\", or \"EVRCNW1\")
    goes in SDP\n      \"a=rtpmap\" as the encoding name.\n   o  The optional parameters
    'ptime and 'maxptime' (for subtypes EVRCNW\n      and EVRCNW1) go in the SDP \"a=ptime\"
    and \"a=maxptime\" attributes,\n      respectively.\n   o  Any remaining parameters
    (for subtypes EVRCNW, EVRCNW0, and\n      EVRCNW1) go in the SDP \"a=fmtp\" attribute
    by copying them from the\n      media type string as a semicolon-separated list
    of parameter=value\n      pairs.\n"
  title: 12.  Mapping EVRC-NW Media Type Parameters into SDP
- contents:
  - "13.  Offer-Answer Model Considerations for EVRC-NW\n   The following considerations
    apply when using the SDP offer-answer\n   procedures of RFC 3264 [12] to negotiate
    the use of EVRC-NW payload\n   in RTP:\n   o  Since EVRC-NW is an extension of
    both EVRC-B and EVRC-WB, the\n      offerer SHOULD also announce EVRC-B and EVRC-WB
    support in its\n      \"m=audio\" lines, with EVRC-NW as the preferred codec.
    \ This will\n      allow interoperability with an answerer that supports only
    EVRC-B\n      and/or EVRC-WB.\n   Below is an example of such an offer:\n          m=audio
    55954 RTP/AVP 98 99 100\n          a=rtpmap:98 EVRCNW0/16000\n          a=rtpmap:99
    EVRCWB0/16000\n          a=rtpmap:100 EVRCB0/8000\n          a=fmtp:98 mode-set-recv=0,1,2,3,4,5,6\n
    \         a=fmtp:99 mode-set-recv=0,4\n          a=fmtp:100 recvmode=0\n   If
    the answerer supports EVRC-NW, then the answerer can keep the\n   payload type
    98 in its answer and the conversation can be done using\n   EVRC-NW.  Otherwise,
    if the answerer supports only EVRC-WB and/or\n   EVRC-B, then the answerer will
    leave only the payload type 99 and/or\n   100, respectively, in its answer and
    the conversation will be done\n   using EVRC-WB and/or EVRC-B, respectively.\n
    \  An example answer for the above offer:\n          m=audio 55954 RTP/AVP 98\n
    \         a=rtpmap:98 EVRCNW0/16000\n          a=fmtp:98 mode-set-recv=4\n   o
    \ 'mode-set-recv' is a unidirectional receive-only parameter.\n   o  An offerer
    can use 'mode-set-recv' to request that the remote\n      sender's encoder be
    limited to the list of modes signaled in\n      'mode-set-recv'.  A remote sender
    MAY ignore 'mode-set-recv'\n      requests.  However, a remote sender shall not
    assume the other\n      side can support mode 0, unless the offer includes mode
    0\n      explicitly in 'mode-set-recv' or the remote sender receives mode\n      requests
    with MMM=0 from the communication partner during an\n      active call using the
    EVRC-NW interleaved/bundled format.\n   o  The parameters 'maxptime' and 'ptime'
    will in most cases not\n      affect interoperability; however, the setting of
    the parameters\n      can affect the performance of the application.  The SDP
    offer-\n      answer handling of the 'ptime' parameter is described in RFC 3264\n
    \     [12].  The 'maxptime' parameter MUST be handled in the same way.\n   o  For
    a sendonly stream, the 'mode-set-recv' parameter is not useful\n      and SHOULD
    NOT be used.\n   o  When using EVRCNW1, the entire session MUST use the same fixed\n
    \     rate and mode (0-Wideband or 1-Narrowband).\n   o  For additional rules
    that MUST be followed while negotiating DTX\n      parameters, see Section 6.8
    in RFC 4788 [2].\n   o  Any unknown parameter in an SDP offer MUST be ignored
    by the\n      receiver and MUST NOT be included in the SDP answer.\n"
  title: 13.  Offer-Answer Model Considerations for EVRC-NW
- contents:
  - "14.  Declarative SDP Considerations\n   For declarative use of SDP in the Session
    Announcement Protocol (SAP)\n   [15] and the Real Time Streaming Protocol (RTSP)
    [16], the following\n   considerations apply:\n   o  Any 'maxptime' and 'ptime'
    values should be selected with care to\n      ensure that the session's participants
    can achieve reasonable\n      performance.\n   o  The payload format configuration
    parameters are all declarative,\n      and a participant MUST use the configuration(s)
    that is provided\n      for the session.  More than one configuration MAY be provided
    if\n      necessary by declaring multiple RTP payload types; however, the\n      number
    of types SHOULD be kept small.  For declarative examples,\n      see Section 15.\n
    \  o  The usage of unidirectional receive-only parameters, such as\n      'mode-set-recv',
    should be excluded in any declarations, since\n      these parameters are meaningless
    in one-way streaming\n      applications.\n"
  title: 14.  Declarative SDP Considerations
- contents:
  - "15.  Examples\n   Some example SDP session descriptions utilizing EVRC-NW encodings\n
    \  follow.  In these examples, long a=fmtp lines are folded to meet the\n   column
    width constraints of this document.  The backslash (\"\\\") at\n   the end of
    a line and the carriage return that follows it should be\n   ignored.  Note that
    media subtype names are case-insensitive.\n   Parameter names are case-insensitive
    both in media types and in the\n   mapping to the SDP a=fmtp attribute.\n   Example
    usage of EVRCNW if wideband mode is supported:\n          m=audio 49120 RTP/AVP
    97 98 99\n          a=rtpmap:97 EVRCNW/16000\n          a=rtpmap:98 EVRCWB/16000\n
    \         a=rtpmap:99 EVRCB/8000\n          a=fmtp:97 mode-set-recv=0,1,2,3,4,5,6\n
    \         a=fmtp:98 mode-set-recv=0,4\n          a=fmtp:99 recvmode=0\n          a=maxptime:120\n
    \  Example usage of EVRCNW if wideband mode is not supported:\n          m=audio
    49120 RTP/AVP 97 98 99\n          a=rtpmap:97 EVRCNW/16000\n          a=rtpmap:98
    EVRCWB/16000\n          a=rtpmap:99 EVRCB/8000\n          a=fmtp:97 mode-set-recv=1,2,3,4,5,6\n
    \         a=fmtp:98 mode-set-recv=4\n          a=fmtp:99 recvmode=0\n          a=maxptime:120\n
    \  Example usage of EVRCNW0:\n          m=audio 49120 RTP/AVP 97 98 99\n          a=rtpmap:97
    EVRCNW0/16000\n          a=rtpmap:98 EVRCWB0/16000\n          a=rtpmap:99 EVRCB0/8000\n
    \         a=fmtp:97 mode-set-recv=0,1,2,3,4,5,6\n          a=fmtp:98 mode-set-recv=0,4\n
    \         a=fmtp:99 recvmode=0\n   Example SDP answer from a media gateway requesting
    a terminal to\n   limit its encoder operation to EVRC-NW mode 4.\n          m=audio
    49120 RTP/AVP 97\n          a=rtpmap:97 EVRCNW0/16000\n          a=fmtp:97 mode-set-recv=4\n
    \  Example usage of EVRCNW1:\n          m=audio 49120 RTP/AVP 97 98 99\n          a=rtpmap:97
    EVRCNW1/16000\n          a=rtpmap:98 EVRCWB1/16000\n          a=rtpmap:99 EVRCB1/8000\n
    \         a=fmtp:97 fixedrate=0.5\n          a=fmtp:98 fixedrate=0.5\n          a=fmtp:99
    fixedrate=0.5\n          a=maxptime:100\n   Example usage of EVRCNW with DTX with
    silencesupp=1:\n          m=audio 49120 RTP/AVP 97 98 99\n          a=rtpmap:97
    EVRCNW/16000\n          a=rtpmap:98 EVRCWB/16000\n          a=rtpmap:99 EVRCB/8000\n
    \         a=fmtp:97 silencesupp=1;dtxmax=32;dtxmin=12;hangover=1; \\\n          mode-set-recv=0,1,2,3,4,5,6\n
    \         a=fmtp:98 silencesupp=1;dtxmax=32;dtxmin=12;hangover=1; \\\n          mode-set-recv=0,4\n
    \         a=fmtp:99 recvmode=0\n          a=maxptime:120\n   Example usage of
    EVRCNW with DTX with silencesupp=0:\n          m=audio 49120 RTP/AVP 97 98 99\n
    \         a=rtpmap:97 EVRCNW/16000\n          a=rtpmap:98 EVRCWB/16000\n          a=rtpmap:99
    EVRCB/8000\n          a=fmtp:97 silencesupp=0;dtxmax=32;dtxmin=12;hangover=1;
    \\\n          mode-set-recv=0,1,2,3,4,5,6\n          a=fmtp:98 silencesupp=0;dtxmax=32;dtxmin=12;hangover=1;
    \\\n          mode-set-recv=0,4\n          a=fmtp:99 recvmode=0\n          a=maxptime:120\n
    \  Example offer-answer exchange between EVRC-NW and legacy EVRC-B\n   (RFC 4788):\n
    \        Offer:\n           m=audio 55954 RTP/AVP 97 98 99\n           a=rtpmap:97
    EVRCNW0/16000\n           a=rtpmap:98 EVRCWB0/16000\n           a=rtpmap:99 EVRCB0/8000\n
    \          a=rtpmap:97 mode-set-recv=0,1,2,3,4,5,6\n           a=fmtp:98 mode-set-recv=0,4\n
    \          a=fmtp:99 recvmode=0\n         Answer:\n           m=audio 55954 RTP/AVP
    99\n           a=rtpmap:99 EVRCB0/8000\n   Example offer-answer exchange between
    EVRC-NW and legacy EVRC-WB\n   (RFC 5188):\n         Offer:\n           m=audio
    55954 RTP/AVP 97 98 99\n           a=rtpmap:97 EVRCNW0/16000\n           a=rtpmap:98
    EVRCWB0/16000\n           a=rtpmap:99 EVRCB0/8000\n           a=rtpmap:97 mode-set-recv=0,1,2,3,4,5,6\n
    \          a=fmtp:98 mode-set-recv=0,4\n           a=fmtp:99 recvmode=0\n         Answer:\n
    \          m=audio 55954 RTP/AVP 98 99\n           a=rtpmap:98 EVRCWB0/16000\n"
  title: 15.  Examples
- contents:
  - "16.  Security Considerations\n   Since compression is applied to the payload
    formats end-to-end, and\n   the encodings do not exhibit significant non-uniformity,\n
    \  implementations of this specification are subject to all the security\n   considerations
    specified in RFC 3558 [6].  Implementations using the\n   payload defined in this
    specification are subject to the security\n   considerations discussed in RFC
    3558 [6], RFC 3550 [5], and any\n   appropriate profile (for example, RFC 3551
    [7]).  Additional security\n   considerations are described in RFC 6562 [13].\n"
  title: 16.  Security Considerations
- contents:
  - '17.  References

    '
  - contents:
    - "17.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [2]   Xie, Q. and R. Kapoor, \"Enhancements to RTP Payload Formats for\n
      \        EVRC Family Codecs\", RFC 4788, January 2007.\n   [3]   Desineni, H.
      and Q. Xie, \"RTP Payload Format for the Enhanced\n         Variable Rate Wideband
      Codec (EVRC-WB) and the Media Subtype\n         Updates for EVRC-B Codec\",
      RFC 5188, February 2008.\n   [4]   \"Enhanced Variable Rate Codec, Speech Service
      Options 3, 68,\n         70, and 73 for Wideband Spread Spectrum Digital Systems\",\n
      \        3GPP2 C.S0014-D v3.0, October 2010, <http://www.3gpp2.org/\n         public_html/specs/C.S0014-D_v3.0_EVRC.pdf>.\n
      \  [5]   Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson,\n         \"RTP:
      A Transport Protocol for Real-Time Applications\", STD 64,\n         RFC 3550,
      July 2003.\n   [6]   Li, A., \"RTP Payload Format for Enhanced Variable Rate
      Codecs\n         (EVRC) and Selectable Mode Vocoders (SMV)\", RFC 3558,\n         July
      2003.\n   [7]   Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and Video\n
      \        Conferences with Minimal Control\", STD 65, RFC 3551, July 2003.\n
      \  [8]   Casner, S., \"Media Type Registration of RTP Payload Formats\",\n         RFC
      4855, February 2007.\n   [9]   Freed, N., Klensin, J., and T. Hansen, \"Media
      Type\n         Specifications and Registration Procedures\", BCP 13, RFC 6838,\n
      \        January 2013.\n   [10]  Handley, M., Jacobson, V., and C. Perkins,
      \"SDP: Session\n         Description Protocol\", RFC 4566, July 2006.\n   [11]
      \ Garudadri, H., \"MIME Type Registrations for 3GPP2 Multimedia\n         Files\",
      RFC 4393, March 2006.\n   [12]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer
      Model with\n         Session Description Protocol (SDP)\", RFC 3264, June 2002.\n
      \  [13]  Perkins, C. and JM. Valin, \"Guidelines for the Use of Variable\n         Bit
      Rate Audio with Secure RTP\", RFC 6562, March 2012.\n"
    title: 17.1.  Normative References
  - contents:
    - "17.2.  Informative References\n   [14]  \"3GPP2 File Formats for Multimedia
      Services\", 3GPP2 C.S0050-B\n         v1.0, May 2007, <http://www.3gpp2.org/public_html/specs/\n
      \        C.S0050-B_v1.0_070521.pdf>.\n   [15]  Handley, M., Perkins, C., and
      E. Whelan, \"Session Announcement\n         Protocol\", RFC 2974, October 2000.\n
      \  [16]  Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time Streaming\n
      \        Protocol (RTSP)\", RFC 2326, April 1998.\n"
    title: 17.2.  Informative References
  title: 17.  References
- contents:
  - "Author's Address\n   Zheng Fang\n   Qualcomm Incorporated\n   5775 Morehouse
    Drive\n   San Diego, CA  92126\n   USA\n   Phone: +1 858 651 9484\n   EMail: zfang@qualcomm.com\n
    \  URI:   http://www.qualcomm.com\n"
  title: Author's Address
