- title: __initial_text__
  contents:
  - '           A Framework for QoS-based Routing in the Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: ABSTRACT
  contents:
  - "ABSTRACT\n   QoS-based routing has been recognized as a missing piece in the\n\
    \   evolution of QoS-based service offerings in the Internet. This\n   document\
    \ describes some of the QoS-based routing issues and\n   requirements, and proposes\
    \ a framework for QoS-based routing in the\n   Internet. This framework is based\
    \ on extending the current Internet\n   routing model of intra and interdomain\
    \ routing to support QoS.\n"
- title: 1. SCOPE OF  DOCUMENT & PHILOSOPHY
  contents:
  - "1. SCOPE OF  DOCUMENT & PHILOSOPHY\n   This document proposes a framework for\
    \ QoS-based routing, with the\n   objective of fostering the development of an\
    \ Internet-wide solution\n   while encouraging innovations in solving the many\
    \ problems that\n   arise.  QoS-based routing has many complex facets and it is\n\
    \   recommended that the following two-pronged approach be employed\n   towards\
    \ its development:\n    1. Encourage the growth and evolution of novel intradomain\
    \ QoS-based\n       routing architectures. This is to allow the development of\n\
    \       independent, innovative solutions that address the many QoS-based\n  \
    \     routing issues. Such solutions may be deployed in autonomous\n       systems\
    \ (ASs), large and small, based on their specific needs.\n    2. Encourage simple,\
    \ consistent and stable interactions between ASs\n       implementing routing\
    \ solutions developed as above.\n   This approach follows the traditional separation\
    \ between intra and\n   interdomain routing. It allows solutions like QOSPF [GKOP98,\
    \ ZSSC97],\n   Integrated PNNI [IPNNI] or other schemes to be deployed for\n \
    \  intradomain routing without any restriction, other than their ability\n   to\
    \ interact with a common, and perhaps simple, interdomain routing\n   protocol.\
    \ The need to develop a single, all encompassing solution to\n   the complex problem\
    \ of QoS-based routing is therefore obviated. As a\n   practical matter, there\
    \ are many different views on how QoS-based\n   routing should be done. Much overall\
    \ progress can be made if an\n   opportunity exists for various ideas to be developed\
    \ and deployed\n   concurrently, while some consensus on the interdomain routing\n\
    \   architecture is being developed.  Finally, this routing model is\n   perhaps\
    \ the most practical from an evolution point of view. It is\n   superfluous to\
    \ say that the eventual success of a QoS-based Internet\n   routing architecture\
    \ would depend on the ease of evolution.\n   The aim of this document is to describe\
    \ the QoS-based routing issues,\n   identify basic requirements on intra and interdomain\
    \ routing, and\n   describe an extension of the current interdomain routing model\
    \ to\n   support QoS. It is not an objective of this document to specify the\n\
    \   details of intradomain QoS-based routing architectures.  This is left\n  \
    \ up to the various intradomain routing efforts that might follow.  Nor\n   is\
    \ it an objective to specify the details of the interface between\n   reservation\
    \ protocols such as RSVP and QoS-based routing. The\n   specific interface functionality\
    \ needed, however, would be clear from\n   the intra and interdomain routing solutions\
    \ devised.  In the\n   intradomain area, the goal is to develop the basic routing\n\
    \   requirements while allowing maximum freedom for the development of\n   solutions.\
    \ In the interdomain area, the objectives are to identify\n   the QoS-based routing\
    \ functions, and facilitate the development or\n   enhancement of a routing protocol\
    \ that allows relatively simple\n   interaction between domains.\n   In the next\
    \ section, a glossary of relevant terminology is given. In\n   Section 3, the\
    \ objectives of QoS-based routing are described and the\n   issues that must be\
    \ dealt with by QoS-based Internet routing efforts\n   are outlined. In Section\
    \ 4, some requirements on intradomain routing\n   are defined. These requirements\
    \ are purposely broad, putting few\n   constraints on solution approaches. The\
    \ interdomain routing model and\n   issues are described in Section 5 and QoS-based\
    \ multicast routing is\n   discussed in Section 6.  The interaction between QoS-based\
    \ routing\n   and resource reservation protocols is briefly considered in Section\n\
    \   7. Security considerations are listed in Section 8 and related work\n   is\
    \ described in Section 9. Finally, summary and conclusions are\n   presented in\
    \ Section 10.\n"
- title: 2.  GLOSSARY
  contents:
  - "2.  GLOSSARY\n   The following glossary lists the terminology used in this document\n\
    \   and an explanation of what is meant. Some of these terms may have\n   different\
    \ connotations, but when used in this document, their meaning\n   is as given.\n\
    \   Alternate Path Routing : A routing technique where multiple paths,\n   rather\
    \ than just the shortest path, between a source and a\n   destination are utilized\
    \ to route traffic. One of the objectives of\n   alternate path routing is to\
    \ distribute load among multiple paths in\n   the network.\n   Autonomous System\
    \ (AS): A routing domain which has a common\n   administrative authority and consistent\
    \ internal routing policy. An\n   AS may employ multiple intradomain routing protocols\
    \ internally and\n   interfaces to other ASs via a common interdomain routing\
    \ protocol.\n   Source: A host or router that can be identified by a unique unicast\n\
    \   IP address.\n   Unicast destination: A host or router that can be identified\
    \ by a\n   unique unicast IP address.\n   Multicast destination: A multicast IP\
    \ address indicating all hosts\n   and routers that are members of the corresponding\
    \ group.\n   IP flow (or simply \"flow\"): An IP packet stream from a source to\
    \ a\n   destination (unicast or multicast) with an associated Quality of\n   Service\
    \ (QoS) (see below) and higher level demultiplexing\n   information. The associated\
    \ QoS could be \"best-effort\".\n   Quality-of-Service (QoS): A set of service\
    \ requirements to be met by\n   the network while transporting a flow.\n   Service\
    \ class: The definitions of the semantics and parameters of a\n   specific type\
    \ of QoS.\n   Integrated services:  The Integrated Services model for the Internet\n\
    \   defined in RFC 1633 allows for integration of QoS services with the\n   best\
    \ effort services of the Internet.  The Integrated Services\n   (IntServ) working\
    \ group in the IETF has defined two service classes,\n   Controlled Load Service\
    \ [W97] and Guaranteed Service [SPG97].\n   RSVP:  The ReSerVation Protocol [BZBH97].\
    \  A QoS signaling protocol\n   for the Internet.\n   Path: A unicast or multicast\
    \ path.\n   Unicast path: A sequence of links from an IP source to a unicast IP\n\
    \   destination, determined by the routing scheme for forwarding packets.\n  \
    \ Multicast path (or Multicast Tree): A subtree of the network topology\n   in\
    \ which all the leaves and zero or more interior nodes are members\n   of the\
    \ same multicast group. A multicast path may be per-source, in\n   which case\
    \ the subtree is rooted at the source.\n   Flow set-up: The act of establishing\
    \ state in routers along a path to\n   satisfy the QoS requirement of a flow.\n\
    \   Crankback: A technique where a flow setup is recursively backtracked\n   along\
    \ the partial flow path up to the first node that can determine\n   an alternative\
    \ path to the destination.\n   QoS-based routing: A routing mechanism under which\
    \ paths for flows\n   are determined based on some knowledge of resource availability\
    \ in\n   the network as well as the QoS requirement of flows.\n   Route pinning:\
    \ A mechanism to keep a flow path fixed for a duration\n   of time.\n   Flow Admission\
    \ Control (FAC): A process by which it is determined\n   whether a link or a node\
    \ has sufficient resources to satisfy the QoS\n   required for a flow. FAC is\
    \ typically applied by each node in the\n   path of a flow during flow set-up\
    \ to check local resource\n   availability.\n   Higher-level admission control:\
    \ A process by which it is determined\n   whether or not a flow set-up should\
    \ proceed, based on estimates and\n   policy requirements of the overall resource\
    \ usage by the flow.\n   Higher-level admission control may result in the failure\
    \ of a flow\n   set-up even when FAC at each node along the flow path indicates\n\
    \   resource availability.\n"
- title: '3.  QOS-BASED ROUTING: BACKGROUND AND ISSUES'
  contents:
  - '3.  QOS-BASED ROUTING: BACKGROUND AND ISSUES

    '
- title: 3.1  Best-Effort and QoS-Based Routing
  contents:
  - "3.1  Best-Effort and QoS-Based Routing\n   Routing deployed in today's Internet\
    \ is focused on connectivity and\n   typically supports only one type of datagram\
    \ service called \"best\n   effort\" [WC96]. Current Internet routing protocols,\
    \ e.g. OSPF, RIP,\n   use \"shortest path routing\", i.e. routing that is optimized\
    \ for a\n   single arbitrary metric, administrative weight or hop count. These\n\
    \   routing protocols are also \"opportunistic,\" using the current\n   shortest\
    \ path or route to a destination. Alternate paths with\n   acceptable but non-optimal\
    \ cost can not be used to route traffic\n   (shortest path routing protocols do\
    \ allow a router to alternate among\n   several equal cost paths to a destination).\n\
    \   QoS-based routing must extend the current routing paradigm in three\n   basic\
    \ ways.  First, to support traffic using integrated-services\n   class of services,\
    \ multiple paths between node pairs will have to be\n   calculated. Some of these\
    \ new classes of service will require the\n   distribution of additional routing\
    \ metrics, e.g. delay, and available\n   bandwidth. If any of these metrics change\
    \ frequently, routing updates\n   can become more frequent thereby consuming network\
    \ bandwidth and\n   router CPU cycles.\n   Second, today's opportunistic routing\
    \ will shift traffic from one\n   path to another as soon as a \"better\" path\
    \ is found.  The traffic\n   will be shifted even if the existing path can meet\
    \ the service\n   requirements of the existing traffic.  If routing calculation\
    \ is tied\n   to frequently changing consumable resources (e.g. available\n  \
    \ bandwidth) this change will happen more often and can introduce\n   routing\
    \ oscillations as traffic shifts back and forth between\n   alternate paths. Furthermore,\
    \ frequently changing routes can increase\n   the variation in the delay and jitter\
    \ experienced by the end users.\n   Third, as mentioned earlier, today's optimal\
    \ path routing algorithms\n   do not support alternate routing.   If the best\
    \ existing path cannot\n   admit a new flow, the associated traffic cannot be\
    \ forwarded even if\n   an adequate alternate path exists.\n"
- title: 3.2 QoS-Based Routing and Resource Reservation
  contents:
  - "3.2 QoS-Based Routing and Resource Reservation\n   It is important to understand\
    \ the difference between QoS-based\n   routing and resource reservation.  While\
    \ resource reservation\n   protocols such as RSVP [BZBH97] provide a method for\
    \ requesting and\n   reserving network resources, they do not provide a mechanism\
    \ for\n   determining a network path that has adequate resources to accommodate\n\
    \   the requested QoS.  Conversely, QoS-based routing allows the\n   determination\
    \ of a path that has a good chance of accommodating the\n   requested QoS, but\
    \ it does not include a mechanism to reserve the\n   required resources.\n   Consequently,\
    \ QoS-based routing is usually used in conjunction with\n   some form of resource\
    \ reservation or resource allocation mechanism.\n   Simple forms of QoS-based\
    \ routing have been used in the past for Type\n   of Service (TOS) routing [M98].\
    \  In the case of OSPF, a different\n   shortest-path tree can be computed for\
    \ each of the 8 TOS values in\n   the IP header [ISI81]. Such mechanisms can be\
    \ used to select\n   specially provisioned paths but do not completely assure\
    \ that\n   resources are not overbooked along the path.  As long as strict\n \
    \  resource management and control are not needed, mechanisms such as\n   TOS-based\
    \ routing are useful for separating whole classes of traffic\n   over multiple\
    \ routes.  Such mechanisms might work well with the\n   emerging Differential\
    \ Services efforts [BBCD98].\n   Combining a resource reservation protocol with\
    \ QoS-based routing\n   allows fine control over the route and resources at the\
    \ cost of\n   additional state and setup time. For example, a protocol such as\
    \ RSVP\n   may be used to trigger QoS-based routing calculations to meet the\n\
    \   needs of a specific flow.\n"
- title: '3.3  QoS-Based Routing: Objectives'
  contents:
  - "3.3  QoS-Based Routing: Objectives\n   Under QoS-based routing,  paths for flows\
    \ would be determined based\n   on some knowledge of resource availability in\
    \ the network, as well as\n   the QoS requirement of flows. The main objectives\
    \ of QoS-based\n   routing are:\n   1.  Dynamic determination of feasible paths:\
    \  QoS-based routing can\n       determine a path, from among possibly many choices,\
    \ that has a\n       good chance of accommodating the QoS of the given flow. Feasible\n\
    \       path selection may be subject to policy constraints, such as path\n  \
    \     cost, provider selection, etc.\n   2.  Optimization of resource usage: A\
    \ network state-dependent QoS-\n       based routing scheme can aid in the efficient\
    \ utilization of\n       network resources by improving the total network throughput.\
    \ Such\n       a routing scheme can be the basis for efficient network\n     \
    \  engineering.\n   3.  Graceful performance degradation: State-dependent routing\
    \ can\n       compensate for transient inadequacies in network engineering\n \
    \      (e.g., during focused overload conditions), giving better\n       throughput\
    \ and a more graceful performance degradation as\n       compared to a state-insensitive\
    \ routing scheme [A84].\n   QoS-based routing in the Internet, however, raises\
    \ many issues:\n   -  How do routers determine the QoS capability of each outgoing\
    \ link\n      and reserve link resources? Note that some of these links may be\n\
    \      virtual, over ATM networks and others may be broadcast multi-\n      access\
    \ links.\n   -  What is the granularity of routing decision (i.e., destination-\n\
    \      based, source and destination-based, or flow-based)?\n   -  What routing\
    \ metrics are used and how are QoS-accommodating paths\n      computed for unicast\
    \ flows?\n   -  How are QoS-accommodating paths computed for multicast flows with\n\
    \      different reservation styles and receiver heterogeneity?\n   -  What are\
    \ the performance objectives while computing QoS-based\n      paths?\n   -  What\
    \ are the administrative control issues?\n   -  What factors affect the routing\
    \ overheads?, and\n   -  How is scalability achieved?\n   Some of these issues\
    \ are discussed briefly next. Interdomain routing\n   is discussed in Section\
    \ 5.\n"
- title: 3.4  QoS Determination and Resource Reservation
  contents:
  - "3.4  QoS Determination and Resource Reservation\n   To determine whether the\
    \ QoS requirements of a flow can be\n   accommodated on a link, a router must\
    \ be able to determine the QoS\n   available on the link. It is still an open\
    \ issue as to how the QoS\n   availability is determined for broadcast multiple\
    \ access links (e.g.,\n   Ethernet). A related problem is the reservation of resources\
    \ over\n   such links.  Solutions to these problems are just emerging [GPSS98].\n\
    \   Similar problems arise when a router is connected to a large non-\n   broadcast\
    \ multiple access network, such as ATM. In this case, if the\n   destination of\
    \ a flow is outside the ATM network, the router may have\n   multiple egress choices.\
    \ Furthermore, the QoS availability on the ATM\n   paths to each egress point\
    \ may be different. The issues then are,\n      o   how does a router determine\
    \ all the egress choices across the\n          ATM network?\n      o   how  does\
    \ it determine what QoS is available over the path to\n          each egress point?,\
    \ and\n      o   what QoS value does the router advertise for the ATM link.\n\
    \   Typically, IP routing over ATM (e.g., NHRP) allows the selection of a\n  \
    \ single egress point in the ATM network, and the procedure does not\n   incorporate\
    \ any knowledge of the QoS required over the path. An\n   approach like I-PNNI\
    \ [IPNNI] would be helpful here, although it\n   introduces some complexity.\n\
    \   An additional problem with resource reservation is how to determine\n   what\
    \ resources have already been allocated to a multicast flow. The\n   availability\
    \ of this information during path computation improves the\n   chances of finding\
    \ a path to add a new receiver to a multicast flow.\n   QOSPF [ZSSC97] handles\
    \ this problem by letting routers broadcast\n   reserved resource information\
    \ to other routers in their area.\n   Alternate path routing [ZES97] deals with\
    \ this issue by using probe\n   messages to find a path with sufficient resources.\
    \ Path QoS\n   Computation (PQC) method, proposed in [GOA97], propagates bandwidth\n\
    \   allocation information in RSVP PATH messages. A router receiving the\n   PATH\
    \ message gets an indication of the resource allocation only on\n   those links\
    \ in the path to itself from the source.  Allocation for\n   the same flow on\
    \ other remote branches of the multicast tree is not\n   available. Thus, the\
    \ PQC method may not be sufficient to find\n   feasible QoS-accommodating paths\
    \ to all receivers.\n"
- title: 3.5  Granularity of Routing Decision
  contents:
  - "3.5  Granularity of Routing Decision\n   Routing in the Internet is currently\
    \ based only on the destination\n   address of a packet.  Many multicast routing\
    \ protocols require\n   routing based on the source AND destination of a packet.\
    \ The\n   Integrated Services architecture and RSVP allow QoS determination for\n\
    \   an individual flow between a source and a destination. This set of\n   routing\
    \ granularities presents a problem for QoS routing solutions.\n   If routing based\
    \ only on destination address is considered, then an\n   intermediate router will\
    \ route all flows between different sources\n   and a given destination along\
    \ the same path. This is acceptable if\n   the path has adequate capacity but\
    \ a problem arises if there are\n   multiple flows to a destination that exceed\
    \ the capacity of the link.\n   One version of QOSPF [ZSSC97] determines QoS routes\
    \ based on source\n   and destination address.  This implies that all traffic\
    \ between a\n   given source and destination, regardless of the flow, will travel\n\
    \   down the same route.  Again, the route must have capacity for all the\n  \
    \ QoS traffic for the source/destination pair.  The amount of routing\n   state\
    \ also increases since the routing tables must include\n   source/destination\
    \ pairs instead of just the destination.\n   The best granularity is found when\
    \ routing is based on individual\n   flows but this incurs a tremendous cost in\
    \ terms of the routing\n   state.  Each QoS flow can be routed separately between\
    \ any source and\n   destination. PQC [GOA97] and alternate path routing [ZES97],\
    \ are\n   examples of solutions which operate at the flow level.\n   Both source/destination\
    \ and flow-based routing may be susceptible to\n   packet looping under hop-by-hop\
    \ forwarding. Suppose a node along a\n   flow or source/destination-based path\
    \ loses the state information for\n   the flow.  Also suppose that the flow-based\
    \ route is different from\n   the regular destination-based route. The potential\
    \ then exists for a\n   routing loop to form when the node forwards a packet belonging\
    \ to the\n   flow using its destination-based routing table to a node that occurs\n\
    \   earlier on the flow-based path. This is because the latter node may\n   use\
    \ its flow-based routing table to forward the packet again to the\n   former and\
    \ this can go on indefinitely.\n"
- title: 3.6   Metrics and Path Computation
  contents:
  - '3.6   Metrics and Path Computation

    '
- title: 3.6.1 Metric Selection and Representation
  contents:
  - "3.6.1 Metric Selection and Representation\n   There are some considerations in\
    \ defining suitable link and node\n   metrics [WC96]. First, the metrics must\
    \ represent the basic network\n   properties of interest. Such metrics include\
    \ residual bandwidth,\n   delay and jitter.  Since the flow QoS requirements have\
    \ to be mapped\n   onto path metrics, the metrics define the types of QoS guarantees\
    \ the\n   network can support.  Alternatively, QoS-based routing cannot support\n\
    \   QoS requirements that cannot be meaningfully mapped onto a reasonable\n  \
    \ combination of path metrics.  Second, path computation based on a\n   metric\
    \ or a combination of metrics must not be too complex as to\n   render them impractical.\
    \ In this regard, it is worthwhile to note\n   that path computation based on\
    \ certain combinations of metrics (e.g.,\n   delay and jitter) is theoretically\
    \ hard. Thus, the allowable\n   combinations of metrics must be determined while\
    \ taking into account\n   the complexity of computing paths based on these metrics\
    \ and the QoS\n   needs of flows. A common strategy to allow flexible combinations\
    \ of\n   metrics while at the same time reduce the path computation complexity\n\
    \   is to utilize \"sequential filtering\". Under this approach, a\n   combination\
    \ of metrics is ordered in some fashion, reflecting the\n   importance of different\
    \ metrics (e.g., cost followed by delay, etc.).\n   Paths based on the primary\
    \ metric are computed first (using a simple\n   algorithm, e.g., shortest path)\
    \ and a subset of them are eliminated\n   based on the secondary metric and so\
    \ forth until a single path is\n   found. This is an approximation technique and\
    \ it trades off global\n   optimality for path computation simplicity (The filtering\
    \ technique\n   may be simpler, depending on the set of metrics used. For example,\n\
    \   with bandwidth and cost as metrics, it is possible to first eliminate\n  \
    \ the set of links that do not have the requested bandwidth and then\n   compute\
    \ the least cost path using the remaining links.)\n   Now, once suitable link\
    \ and node metrics are defined, a uniform\n   representation of them is required\
    \ across independent domains -\n   employing possibly different routing schemes\
    \ - in order to derive\n   path metrics consistently (path metrics are obtained\
    \ by the\n   composition of link and node metrics). Encoding of the maximum,\n\
    \   minimum, range, and granularity of the metrics are needed. Also, the\n   definitions\
    \ of comparison and accumulation operators are required. In\n   addition, suitable\
    \ triggers must be defined for indicating a\n   significant change from a minor\
    \ change.  The former will cause a\n   routing update to be generated. The stability\
    \ of the QoS routes would\n   depend on the ability to control the generation\
    \ of updates. With\n   interdomain routing, it is essential to obtain a fairly\
    \ stable view\n   of the interconnection among the ASs.\n"
- title: 3.6.2  Metric Hierarchy
  contents:
  - "3.6.2  Metric Hierarchy\n   A hierarchy can be defined among various classes\
    \ of service based on\n   the degree to which traffic from one class can potentially\
    \ degrade\n   service of traffic from lower classes that traverse the same link.\
    \ In\n   this hierarchy, guaranteed constant bit rate traffic is at the top\n\
    \   and \"best-effort\" datagram traffic at the bottom.  Classes providing\n \
    \  service higher in the hierarchy impact classes providing service in\n   lower\
    \ levels. The same situation is not true in the other direction.\n   For example,\
    \ a datagram flow cannot affect a real-time service. Thus,\n   it may be necessary\
    \ to distribute and update different metrics for\n   each type of service in the\
    \ worst case.  But, several advantages\n   result by identifying a single default\
    \ metric.  For example, one\n   could derive a single metric combining the availability\
    \ of datagram\n   and real-time service over a common substrate.\n"
- title: 3.6.3  Datagram Flows
  contents:
  - "3.6.3  Datagram Flows\n   A delay-sensitive metric is probably the most obvious\
    \ type of metric\n   suitable for datagram flows. However, it requires careful\
    \ analysis to\n   avoid instabilities and to reduce storage and bandwidth requirements.\n\
    \   For example, a recursive filtering technique based on a simple and\n   efficient\
    \ weighted averaging algorithm [NC94] could be used. This\n   filter is used to\
    \ stabilize the metric. While it is adequate for\n   smoothing most loading patterns,\
    \ it will not distinguish between\n   patterns consisting of regular bursts of\
    \ traffic and random loading.\n   Among other stabilizing tools, is a minimum\
    \ time between updates that\n   can help filter out high-frequency oscillations.\n"
- title: 3.6.4 Real-time Flows
  contents:
  - "3.6.4 Real-time Flows\n   In real-time quality-of-service, delay variation is\
    \ generally more\n   critical than delay as long as the delay is not too high.\
    \  Clearly,\n   voice-based applications cannot tolerate more than a certain level\
    \ of\n   delay. The condition of varying delays may be expected to a greater\n\
    \   degree in a shared medium environment with datagrams, than in a\n   network\
    \ implemented over a switched substrate.  Routing a real-time\n   flow therefore\
    \ reduces to an exercise in allocating the required\n   network resources while\
    \ minimizing fragmentation of bandwidth. The\n   resulting situation is a bandwidth-limited\
    \ minimum hop path from a\n   source to the destination.  In other words, the\
    \ router performs an\n   ordered search through paths of increasing hop count\
    \ until it finds\n   one that meets all the bandwidth needs of the flow. To reduce\n\
    \   contention and the probability of false probes (due to inaccuracy in\n   route\
    \ tables), the router could select a path randomly from a\n   \"window\" of paths\
    \ which meet the needs of the flow and satisfy one of\n   three additional criteria:\
    \ best-fit, first-fit or worst-fit. Note\n   that there is a similarity between\
    \ the allocation of bandwidth and\n   the allocation of memory in a multiprocessing\
    \ system. First-fit seems\n   to be appropriate for a system with a high real-time\
    \ flow arrival\n   rates; and worst-fit is ideal for real-time flows with high\
    \ holding\n   times.  This rather nonintuitive result was shown in [NC94].\n"
- title: 3.6.5  Path Properties
  contents:
  - "3.6.5  Path Properties\n   Path computation by itself is merely a search technique,\
    \ e.g.,\n   Shortest Path First (SPF) is a search technique based on dynamic\n\
    \   programming. The usefulness of the paths computed depends to a large\n   extent\
    \ on the metrics used in evaluating the cost of a path with\n   respect to a flow.\n\
    \   Each link considered by the path computation engine must be evaluated\n  \
    \ against the requirements of the flow, i.e., the cost of providing the\n   services\
    \ required by the flow must be estimated with respect to the\n   capabilities\
    \ of the link. This requires a uniform method of combining\n   features such as\
    \ delay, bandwidth, priority and other service\n   features.  Furthermore, the\
    \ costs must reflect the lost opportunity\n   of using each link after routing\
    \ the flow.\n"
- title: 3.6.6  Performance Objectives
  contents:
  - "3.6.6  Performance Objectives\n   One common objective during path computation\
    \ is to improve the total\n   network throughput.  In this regard, merely routing\
    \ a flow on any\n   path that accommodates its QoS requirement is not a good strategy.\
    \ In\n   fact, this corresponds to uncontrolled alternate routing [SD95] and\n\
    \   may adversely impact performance at higher traffic loads.  It is\n   therefore\
    \ necessary to consider the total resource allocation for a\n   flow along a path,\
    \ in relation to available resources, to determine\n   whether or not the flow\
    \ should be routed on the path.  Such a\n   mechanism is referred to in this document\
    \ as \"higher level admission\n   control\". The goal of this is to ensure that\
    \ the \"cost\" incurred by\n   the network in routing a flow with a given QoS\
    \ is never more than the\n   revenue gained.  The routing cost in this regard\
    \ may be the lost\n   revenue in potentially blocking other flows that contend\
    \ for the same\n   resources. The formulation of the higher level admission control\n\
    \   strategy, with suitable administrative hooks and with fairness to all\n  \
    \ flows desiring entry to the network, is an issue.  The fairness\n   problem\
    \ arises because flows with smaller reservations tend to be\n   more successfully\
    \ routed than flows with large reservations, for a\n   given engineered capacity.\
    \  To guarantee a certain level of\n   acceptance rate for \"larger\" flows, without\
    \ over-engineering the\n   network, requires a fair higher level admission control\
    \ mechanism.\n   The application of higher level admission control to multicast\n\
    \   routing is discussed later.\n"
- title: 3.7   Administrative Control
  contents:
  - "3.7   Administrative Control\n   There are several administrative control issues.\
    \ First, within an AS\n   employing state-dependent routing, administrative control\
    \ of routing\n   behavior may be necessary. One example discussed earlier was\
    \ higher\n   level admission control. Some others are described in this section.\n\
    \   Second, the control of interdomain routing based on policy is an\n   issue.\
    \  The discussion of interdomain routing is defered to Section\n   5.\n   Two\
    \ areas that need administrative control, in addition to\n   appropriate routing\
    \ mechanisms, are handling flow priority with\n   preemption, and resource allocation\
    \ for multiple service classes.\n"
- title: 3.7.1  Flow Priorities and Preemption
  contents:
  - "3.7.1  Flow Priorities and Preemption\n   If there are critical flows that must\
    \ be accorded higher priority\n   than other types of flows, a mechanism must\
    \ be implemented in the\n   network to recognize flow priorities. There are two\
    \ aspects to\n   prioritizing flows.  First, there must be a policy to decide\
    \ how\n   different users are allowed to set priorities for flows they\n   originate.\
    \ The network must be able to verify that a given flow is\n   allowed to claim\
    \ a priority level signaled for it. Second, the\n   routing scheme must ensure\
    \ that a path with the requested QoS will be\n   found for a flow with a probability\
    \ that increases with the priority\n   of the flow. In other words, for a given\
    \ network load, a high\n   priority flow should be more likely to get a certain\
    \ QoS from the\n   network than a lower priority flow requesting the same QoS.\
    \ Routing\n   procedures for flow prioritization can be complex.  Identification\n\
    \   and evaluation of different procedures are areas that require\n   investigation.\n"
- title: 3.7.2 Resource Control
  contents:
  - "3.7.2 Resource Control\n   If there are multiple service classes, it is necessary\
    \ to engineer a\n   network to carry the forecasted traffic demands of each class.\
    \ To do\n   this, router and link resources may be logically partitioned among\n\
    \   various service classes. It is desirable to have dynamic partitioning\n  \
    \ whereby unused resources in various partitions are dynamically\n   shifted to\
    \ other partitions on demand [ACFH92]. Dynamic sharing,\n   however, must be done\
    \ in a controlled  fashion in order to prevent\n   traffic under some service\
    \ class from taking up more resources than\n   what was engineered for it for\
    \ prolonged periods of time. The design\n   of such a resource sharing scheme,\
    \ and its incorporation into the\n   QoS-based routing scheme are significant\
    \ issues.\n"
- title: 3.8   QoS-Based Routing for Multicast Flows
  contents:
  - "3.8   QoS-Based Routing for Multicast Flows\n   QoS-based multicast routing is\
    \ an important problem, especially if\n   the notion of higher level admission\
    \ control is included. The\n   dynamism in the receiver set allowed by IP multicast,\
    \ and receiver\n   heterogeneity add to the problem. With straightforward implementation\n\
    \   of distributed heuristic algorithms for multicast path computation\n   [W88,\
    \ C91], the difficulty is essentially one of scalability. To\n   accommodate QoS,\
    \ multicast path computation at a router must have\n   knowledge of not only the\
    \ id of subnets where group members are\n   present, but also the identity of\
    \ branches in the existing tree. In\n   other words, routers must keep flow-specific\
    \ state information. Also,\n   computing optimal shared trees based on the shared\
    \ reservation style\n   [BZBH97], may require new algorithms.  Multicast routing\
    \ is discussed\n   in some detail in Section 6.\n"
- title: 3.9    Routing Overheads
  contents:
  - "3.9    Routing Overheads\n   The overheads incurred by a routing scheme depend\
    \ on the type of the\n   routing scheme, as well as the implementation. There\
    \ are three types\n   of overheads to be considered: computation, storage and\n\
    \   communication. It is necessary to understand the implications of\n   choosing\
    \ a routing mechanism in terms of these overheads.\n   For example, considering\
    \ link state routing, the choice of the update\n   propagation mechanism is important\
    \ since network state is dynamic and\n   changes relatively frequently. Specifically,\
    \ a flooding mechanism\n   would result in many unnecessary message transmissions\
    \ and\n   processing.  Alternative techniques, such as tree-based forwarding\n\
    \   [R96], have to be considered. A related issue is the quantization of\n   state\
    \ information to prevent frequent updating of dynamic state.\n   While coarse\
    \ quantization reduces updating overheads, it may affect\n   the performance of\
    \ the routing scheme.  The tradeoff has to be\n   carefully evaluated.  QoS-based\
    \ routing incurs certain overheads\n   during flow establishment, for example,\
    \ computing a source route.\n   Whether this overhead is disproportionate compared\
    \ to the length of\n   the sessions is an issue. In general, techniques for the\
    \ minimization\n   of routing-related overheads during flow establishment must\
    \ be\n   investigated. Approaches that are useful include pre-computation of\n\
    \   routes, caching recently used routes, and TOS routing based on hints\n   in\
    \ packets (e.g., the TOS field).\n"
- title: 3.10   Scaling by Hierarchical Aggregation
  contents:
  - "3.10   Scaling by Hierarchical Aggregation\n   QoS-based routing should be scalable,\
    \ and hierarchical aggregation is\n   a common technique for scaling (e.g., [PNNI96]).\
    \ But this introduces\n   problems with regard to the accuracy of the aggregated\
    \ state\n   information [L95]. Also, the aggregation of paths under multiple\n\
    \   constraints is difficult. One of the difficulties is the risk of\n   accepting\
    \ a flow based on inaccurate information, but not being able\n   to support the\
    \ QoS requirements of flow because the capabilities of\n   the actual paths that\
    \ are aggregated are not known during route\n   computation.  Performance impacts\
    \ of aggregating path metric\n   information must therefore be understood. A way\
    \ to compensate for\n   inaccuracies is to use crankback, i.e., dynamic search\
    \ for alternate\n   paths as a flow is being routed. But crankback increases the\
    \ time to\n   set up a flow, and may adversely affect the performance of the\n\
    \   routing scheme under some circumstances. Thus, crankback must be used\n  \
    \ judiciously, if at all, along with a higher level admission control\n   mechanism.\n"
- title: 4. INTRADOMAIN ROUTING REQUIREMENTS
  contents:
  - "4. INTRADOMAIN ROUTING REQUIREMENTS\n   At the intradomain level, the objective\
    \ is to allow as much latitude\n   as possible in addressing the QoS-based routing\
    \ issues. Indeed, there\n   are many ideas about how QoS-based routing services\
    \ can be\n   provisioned within ASs. These range from on-demand path computation\n\
    \   based on current state information, to statically provisioned paths\n   supporting\
    \ a few service classes.\n   Another aspect that might invite differing solutions\
    \ is performance\n   optimization. Based on the technique used for this, intradomain\n\
    \   routing could be very sophisticated or rather simple. Finally, the\n   service\
    \ classes supported, as well as the specific QoS engineered for\n   a service\
    \ class, could differ from AS to AS. For instance, some ASs\n   may not support\
    \ guaranteed service, while others may. Also, some ASs\n   supporting the service\
    \ may be engineered for a better delay bound\n   than others. Thus, it requires\
    \ considerable thought to determine the\n   high level requirements for intradomain\
    \ routing that both supports\n   the overall view of QoS-based routing in the\
    \ Internet and allows\n   maximum autonomy in developing solutions.\n   Our view\
    \ is that certain minimum requirements must be satisfied by\n   intradomain routing\
    \ in order to be qualified as \"QoS-based\" routing.\n   These are:\n   - The\
    \ routing scheme must route a flow along a path that can\n     accommodate its\
    \ QoS requirements, or indicate that the flow cannot\n     be admitted with the\
    \ QoS currently being requested.\n   - The routing scheme must indicate disruptions\
    \ to the current route\n     of a flow due to topological changes.\n   - The routing\
    \ scheme must accommodate best-effort flows without any\n     resource reservation\
    \ requirements. That is, present best effort\n     applications and protocol stacks\
    \ need not have to change to run in\n     a domain employing QoS-based routing.\n\
    \   - The routing scheme may optionally support QoS-based multicasting\n     with\
    \ receiver heterogeneity and shared reservation styles.\n   In addition, the following\
    \ capabilities are also recommended:\n   - Capabilities to optimize resource usage.\n\
    \   - Implementation of higher level admission control procedures to\n     limit\
    \ the overall resource utilization by individual flows.\n   Further requirements\
    \ along these lines may be specified. The\n   requirements should capture the\
    \ consensus view of QoS-based routing,\n   but should not preclude particular\
    \ approaches (e.g., TOS-based\n   routing) from being implemented. Thus, the intradomain\
    \ requirements\n   are expected to be rather broad.\n"
- title: 5. INTERDOMAIN ROUTING
  contents:
  - "5. INTERDOMAIN ROUTING\n   The fundamental requirement on interdomain QoS-based\
    \ routing is\n   scalability.  This implies that interdomain routing cannot be\
    \ based\n   on highly dynamic network state information. Rather, such routing\n\
    \   must be aided by sound network engineering and relatively sparse\n   information\
    \ exchange between independent routing domains. This\n   approach has the advantage\
    \ that it can be realized by straightforward\n   extensions of the present Internet\
    \ interdomain routing model. A\n   number of issues, however, need to be addressed\
    \ to achieve this, as\n   discussed below.\n"
- title: 5.1 Interdomain QoS-Based Routing Model
  contents:
  - "5.1 Interdomain QoS-Based Routing Model\n   The interdomain QoS-based routing\
    \ model is depicted below:\n          AS1                   AS2             AS3\n\
    \      ___________        _____________      ____________\n     |           |\
    \      |             |    |            |\n     |           B------B          \
    \   B----B            |\n     |           |      |             |    |        \
    \    |\n      -----B-----       B-------------      --B---------\n           \
    \ \\         /                      /\n             \\       /               \
    \       /\n          ____B_____B____         _________B______\n         |    \
    \           |       |                |\n         |               B-------B   \
    \             |\n         |               |       |                |\n       \
    \  |               B-------B                |\n          ---------------     \
    \    ----------------\n               AS4                           AS5\n   Here,\
    \ ASs exchange standardized routing information via border nodes\n   B.  Under\
    \ this model, each AS can itself consist of a set of\n   interconnected ASs, with\
    \ standardized routing interaction. Thus, the\n   interdomain routing model is\
    \ hierarchical.  Also, each lowest level\n   AS employs an intradomain QoS-based\
    \ routing scheme (proprietary or\n   standardized by intradomain routing efforts\
    \ such as QOSPF). Given\n   this structure, some questions that arise are:\n \
    \  - What information is exchanged between ASs?\n   - What routing capabilities\
    \ does the information exchange lead to?\n     (E.g., source routing, on-demand\
    \ path computation, etc.)\n   - How is the external routing information represented\
    \ within an AS?\n   - How are interdomain paths computed?\n   - What sort of policy\
    \ controls may be exerted on interdomain path\n     computation and flow routing?,\
    \ and\n   - How is interdomain QoS-based multicast routing accomplished?\n   At\
    \ a high level, the answers to these questions depend on the routing\n   paradigm.\
    \ Specifically, considering link state routing, the\n   information exchanged\
    \ between domains would consist of an abstract\n   representation of the domains\
    \ in the form of logical nodes and links,\n   along with metrics that quantify\
    \ their properties and resource\n   availability.  The hierarchical structure\
    \ of the ASs may be handled\n   by a hierarchical link state representation, with\
    \ appropriate metric\n   aggregation.\n   Link state routing may not necessarily\
    \ be advantageous for\n   interdomain routing for the following reasons:\n   -\
    \ One advantage of intradomain link state routing is that it would\n     allow\
    \ fairly detailed link state information be used to compute\n     paths on demand\
    \ for flows requiring QoS. The state and metric\n     aggregation used in interdomain\
    \ routing, on the other hand, erodes\n     this property to a great degree.\n\
    \   - The usefulness of keeping track of the abstract topology and\n     metrics\
    \ of a remote domain, or the interconnection between remote\n     domains is not\
    \ obvious. This is especially the case when the remote\n     topology and metric\
    \ encoding are lossy.\n   - ASs may not want to advertise any details of their\
    \ internal\n     topology or resource availability.\n   - Scalability in interdomain\
    \ routing can be achieved only if\n     information exchange between domains is\
    \ relatively infrequent.\n     Thus, it seems practical to limit information flow\
    \ between domains\n     as much as possible.\n   Compact information flow allows\
    \ the implementation QoS-enhanced\n   versions of existing interdomain protocols\
    \ such as BGP-4. We look at\n   the interdomain routing issues in this context.\n"
- title: 5.2  Interdomain Information Flow
  contents:
  - "5.2  Interdomain Information Flow\n   The information flow between routing domains\
    \ must enable certain\n   basic functions:\n   1.  Determination of reachability\
    \ to various destinations\n   2.  Loop-free flow routes\n   3.  Address aggregation\
    \ whenever possible\n   4.  Determination of the QoS that will be supported on\
    \ the path to a\n       destination. The QoS information should be relatively\
    \ static,\n       determined from the engineered topology and capacity of an AS\n\
    \       rather than ephemeral fluctuations in traffic load through the\n     \
    \  AS. Ideally, the QoS supported in a transit AS should be allowed\n       to\
    \ vary significantly only under exceptional circumstances, such\n       as failures\
    \ or focused overload.\n   5.  Determination, optionally, of multiple paths for\
    \ a given\n       destination, based on service classes.\n   6.  Expression of\
    \ routing policies, including monetary cost, as a\n       function of flow parameters,\
    \ usage and administrative factors.\n   Items 1-3 are already part of existing\
    \ interdomain routing. Item 5 is\n   also a straightfoward extension of the current\
    \ model. The main\n   problem areas are therefore items 4 and 6.\n   The QoS of\
    \ an end-to-end path is obtained by composing the QoS\n   available in each transit\
    \ AS.  Thus, border routers must first\n   determine what the locally available\
    \ QoS is in order to advertise\n   routes to both internal and external destinations.\
    \ The determination\n   of local \"AS metrics\" (corresponding to link metrics\
    \ in the\n   intradomain case) should not be subject to too much dynamism. Thus,\n\
    \   the issue is how to define such metrics and what triggers an\n   occasional\
    \ change that results in re-advertisements of routes.\n   The approach suggested\
    \ in this document is not to compute paths based\n   on residual or instantaneous\
    \ values of AS metics (which can be\n   dynamic), but utilize only the QoS capabilities\
    \ engineered for\n   aggregate transit flows.  Such engineering may be based on\
    \ the\n   knowledge of traffic to be expected from each neighboring ASs and the\n\
    \   corresponding QOS needs.  This information may be obtained based on\n   contracts\
    \ agreed upon prior to the provisioning of services. The AS\n   metric then corresponds\
    \ to the QoS capabilities of the \"virtual path\"\n   engineered through the AS\
    \ (for transit traffic) and a different\n   metric may be used for different neighbors.\
    \ This is illustrated in\n   the following figure.\n          AS1            \
    \       AS2             AS3\n      ___________        _____________      ____________\n\
    \     |           |      |             |    |            |\n     |           B------B1\
    \           B2----B            |\n     |           |      |             |    |\
    \            |\n      -----B-----       B3------------      --B---------\n   \
    \         \\         /\n             \\       /\n          ____B_____B____\n \
    \        |               |\n         |               |\n         |           \
    \    |\n         |               |\n          ---------------\n              \
    \ AS4\n   Here, B1 may utilize an AS metric specific for AS1 when computing\n\
    \   path metrics to be  advertised to AS1. This metric is based on the\n   resources\
    \ engineered in AS2 for transit traffic from AS1. Similarly,\n   B3 may utilize\
    \ a different metric when computing path metrics to be\n   advertised to AS4.\
    \  Now, it is assumed that as long as traffic flow\n   into AS2 from AS1 or AS4\
    \ does not exceed the engineered values, these\n   path metrics would hold.  Excess\
    \ traffic due to transient\n   fluctuations, however, may be handled as best effort\
    \ or marked with a\n   discard bit.\n   Thus, this model is different from the\
    \ intradomain model, where end\n   nodes pick a path dynamically based on the\
    \ QoS needs of the flow to\n   be routed.  Here, paths within ASs are engineered\
    \ based on presumed,\n   measured or declared traffic and QoS requirements. Under\
    \ this model,\n   an AS can contract for routes via multiple transit ASs with\
    \ different\n   QoS requirements. For instance, AS4 above can use both AS1 and\
    \ AS2 as\n   transits for same or different destinations. Also, a QoS contract\n\
    \   between one AS and another may generate another contract between the\n   second\
    \ and a third AS and so forth.\n   An issue is what triggers the recomputation\
    \ of path metrics within an\n   AS.  Failures or other events that prevent engineered\
    \ resource\n   allocation should certainly trigger recomputation. Recomputation\n\
    \   should not be triggered in response to arrival of flows within the\n   engineered\
    \ limit.\n"
- title: 5.3   Path Computation
  contents:
  - "5.3   Path Computation\n   Path computation for an external destination at a\
    \ border node is\n   based on reachability, path metrics and local policies of\
    \ selection.\n   If there are multiple selection criteria (e.g., delay, bandwidth,\n\
    \   cost, etc.), mutiple alternaives may have to be maintained as well as\n  \
    \ propagated by border nodes. Selection of a path from among many\n   alternatives\
    \ would depend on the QoS requests of flows, as well as\n   policies. Path computation\
    \ may also utilze any heuristics for\n   optimizing resource usage.\n"
- title: 5.4  Flow Aggregation
  contents:
  - "5.4  Flow Aggregation\n   An important issue in interdomain routing is the amount\
    \ of flow state\n   to be processed by transit ASs. Reducing the flow state by\n\
    \   aggregation techniques must therefore be seriously considered. Flow\n   aggregation\
    \ means that transit traffic through an AS is classified\n   into a few aggregated\
    \ streams rather than being routed at the\n   individual flow level. For example,\
    \ an entry border router may\n   classify various transit flows entering an AS\
    \ into a few coarse\n   categories, based on the egress node and QoS requirements\
    \ of the\n   flows.  Then, the aggregated stream for a given traffic class may\
    \ be\n   routed as a single flow inside the AS to the exit border router. This\n\
    \   router may then present individual flows to different neighboring ASs\n  \
    \ and the process repeats at each entry border router. Under this\n   scenario,\
    \ it is essential that entry border routers keep track of the\n   resource requirements\
    \ for each transit flow and apply admission\n   control to determine whether the\
    \ aggregate requirement from any\n   neighbor exceeds the engineered limit. If\
    \ so, some policy must be\n   invoked to deal with the excess traffic. Otherwise,\
    \ it may be assumed\n   that aggregated flows are routed over paths that have\
    \ adequate\n   resources to guarantee QoS for the member flows. Finally, it is\n\
    \   possible that entry border routers at a transit AS may prefer not to\n   aggregate\
    \ flows if finer grain routing within the AS may be more\n   efficient (e.g.,\
    \ to aid load balancing within the AS).\n"
- title: 5.5   Path Cost Determination
  contents:
  - "5.5   Path Cost Determination\n   It is hoped that the integrated services Internet\
    \ architecture would\n   allow providers to charge for IP flows based on their\
    \ QoS\n   requirements.  A QoS-based routing architecture can aid in\n   distributing\
    \ information on expected costs of routing flows to\n   various destinations via\
    \ different domains. Clearly, from a\n   provider's point of view, there is a\
    \ cost incurred in guaranteeing\n   QoS to flows.  This cost could be a function\
    \ of several parameters,\n   some related to flow parameters, others based on\
    \ policy. From a\n   user's point of view, the consequence of requesting a particular\
    \ QoS\n   for a flow is the cost incurred, and hence the selection of providers\n\
    \   may be based on cost. A routing scheme can aid a provider in\n   distributing\
    \ the costs in routing to various destinations, as a\n   function of several parameters,\
    \ to other providers or to end users.\n   In the interdomain routing model described\
    \ earlier, the costs to a\n   destination will change as routing updates are passed\
    \ through a\n   transit domain. One of the goals of the routing scheme should\
    \ be to\n   maintain a uniform semantics for cost values (or functions) as they\n\
    \   are handled by intermediate domains. As an example, consider the cost\n  \
    \ function generated by border node B1 in domain A and passed to node\n   B2 in\
    \ domain B below.  The routing update may be injected into domain\n   B by B2\
    \ and finally passed to B4 in domain C by router B3. Domain B\n   may interpret\
    \ the cost value received from domain A in any way it\n   wants, for instance,\
    \ adding a locally significant component to it.\n   But when this cost value is\
    \ passed to domain C, the meaning of it\n   must be what domain A intended, plus\
    \ the incremental cost of\n   transiting domain B, but not what domain B uses\
    \ internally.\n    Domain A                    Domain B           Domain C\n \
    \    ____________          ___________      ____________\n    |            | \
    \       |           |    |            |\n    |            B1------B2         \
    \ B3---B4            |\n    |            |        |           |    |         \
    \   |\n     ------------          -----------      ------------\n   A problem\
    \ with charging for a flow is the determination of the cost\n   when the QoS promised\
    \ for the flow was not actually delivered.\n   Clearly, when a flow is routed\
    \ via multiple domains, it must be\n   determined whether each domain delivers\
    \ the QoS it declares possible\n   for traffic through it.\n"
- title: 6. QOS-BASED MULTICAST ROUTING
  contents:
  - "6. QOS-BASED MULTICAST ROUTING\n   The goals of QoS-based multicast routing are\
    \ as follows:\n   - Scalability to large groups with dynamic membership\n   -\
    \ Robustness in the presence of topological changes\n   - Support for receiver-initiated,\
    \ heterogeneous reservations\n   - Support for shared reservation styles, and\n\
    \   - Support for \"global\" admission control, i.e., administrative\n     control\
    \ of resource consumption by the multicast flow.\n   The RSVP multicast flow model\
    \ is as follows. The sender of a\n   multicast flow advertises the traffic characteristics\
    \ periodically to\n   the receivers.  On receipt of an advertisement, a receiver\
    \ may\n   generate a message to reserve resources along the flow path from the\n\
    \   sender. Receiver reservations may be heterogeneous. Other multicast\n   models\
    \ may be considered.\n   The multicast routing scheme attempts to determine a\
    \ path from the\n   sender to each receiver that can accommodate the requested\n\
    \   reservation.  The routing scheme may attempt to maximize network\n   resource\
    \ utilization by minimizing the total bandwidth allocated to\n   the multicast\
    \ flow, or by optimizing some other measure.\n"
- title: 6.1   Scalability, Robustness and Heterogeneity
  contents:
  - "6.1   Scalability, Robustness and Heterogeneity\n   When addressing scalability,\
    \ two aspects must be considered:\n     1.  The overheads associated with receiver\
    \ discovery. This overhead\n         is incurred when determining the multicast\
    \ tree for forwarding\n         best-effort sender traffic characterization to\
    \ receivers.\n     2.  The overheads associated with QoS-based multicast path\n\
    \         computation.  This overhead is incurred when flow-specific\n       \
    \  state information has to be collected by a router to determine\n         QoS-accommodating\
    \ paths to a receiver.\n   Depending on the multicast routing scheme, one or both\
    \ of these\n   aspects become important. For instance, under the present RSVP\
    \ model,\n   reservations are established on the same path over which sender\n\
    \   traffic characterizations are sent, and hence there is no path\n   computation\
    \ overhead. On the other hand, under the proposed QOSPF\n   model [ZSSC97] of\
    \ multicast source routing, receiver discovery\n   overheads are incurred by MOSPF\
    \ [M94] receiver location broadcasts,\n   and additional path computation overheads\
    \ are incurred due to the\n   need to keep track of existing flow paths. Scaling\
    \ of QoS-based\n   multicast depends on both these scaling issues. However, scalable\n\
    \   best-effort multicasting is really not in the domain of QoS-based\n   routing\
    \ work (solutions for this are being devised by the IDMR WG\n   [BCF94, DEFV94]).\
    \ QoS-based multicast routing may build on these\n   solutions to achieve overall\
    \ scalability.\n   There are several options for QoS-based multicast routing.\
    \ Multicast\n   source routing is one under which multicast trees are computed\
    \ by the\n   first-hop router from the source, based on sender traffic\n   advertisements.\
    \  The advantage of this is that it blends nicely with\n   the present RSVP signaling\
    \ model. Also, this scheme works well when\n   receiver reservations are homogeneous\
    \ and the same as the maximum\n   reservation derived from sender advertisement.\
    \  The disadvantages of\n   this scheme are the extra effort needed to accommodate\
    \ heterogeneous\n   reservations and the difficulties in optimizing resource allocation\n\
    \   based on shared reservations.\n   In these regards, a receiver-oriented multicast\
    \ routing model seems\n   to have some advantage over multicast source routing.\
    \ Under this\n   model:\n     1.  Sender traffic advertisements are multicast\
    \ over a best-effort\n         tree which can be different from the QoS-accommodating\
    \ tree for\n         sender data.\n     2.  Receiver discovery overheads are minimized\
    \ by utilizing a\n         scalable scheme (e.g., PIM, CBT), to multicast sender\
    \ traffic\n         characterization.\n     3.  Each receiver-side router independently\
    \ computes a QoS-\n         accommodating path from the source, based on the receiver\n\
    \         reservation. This path can be computed based on unicast routing\n  \
    \       information only, or with additional multicast flow-specific\n       \
    \  state information. In any case, multicast path computation is\n         broken\
    \ up into multiple, concurrent nunicast path computations.\n     4.  Routers processing\
    \ unicast reserve messages from receivers\n         aggregate resource reservations\
    \ from multiple receivers.\n   Flow-specific state information may be limited\
    \ in Step 3 to achieve\n   scalability [RN98]. In general, limiting flow-specific\
    \ information in\n   making multicast routing decisions is important in any routing\
    \ model.\n   The advantages of this model are the ease with which heterogeneous\n\
    \   reservations can be accommodated, and the ability to handle shared\n   reservations.\
    \ The disadvantages are the incompatibility with the\n   present RSVP signaling\
    \ model, and the need to rely on reverse paths\n   when link state routing is\
    \ not used. Both multicast source routing\n   and the receiver-oriented routing\
    \ model described above utilize per-\n   source trees to route multicast flows.\
    \ Another possibility is the\n   utilization of shared, per-group trees for routing\
    \ flows. The\n   computation and usage of such trees require further work.\n \
    \  Finally, scalability at the interdomain level may be achieved if\n   QoS-based\
    \ multicast paths are computed independently in each domain.\n   This principle\
    \ is illustrated by the QOSPF multicast source routing\n   scheme which allows\
    \ independent path computation in different OSPF\n   areas. It is easy to incorporate\
    \ this idea in the receiver-oriented\n   model also. An evaluation of multicast\
    \ routing strategies must take\n   into account the relative advantages and disadvantages\
    \ of various\n   approaches, in terms of scalability features and functionality\n\
    \   supported.\n"
- title: 6.2    Multicast Admission Control
  contents:
  - "6.2    Multicast Admission Control\n   Higher level admission control, as defined\
    \ for unicast, prevents\n   excessive resource consumption by flows when traffic\
    \ load is high.\n   Such an admission control strategy must be applied to multicast\
    \ flows\n   when the flow path computation is receiver-oriented or sender-\n \
    \  oriented. In essence, a router computing a path for a receiver must\n   determine\
    \ whether the incremental resource allocation for the\n   receiver is excessive\
    \ under some administratively determined\n   admission control policy. Other admission\
    \ control criteria, based on\n   the total resource consumption of a tree may\
    \ be defined.\n"
- title: 7.    QOS-BASED ROUTING AND RESOURCE RESERVATION PROTOCOLS
  contents:
  - "7.    QOS-BASED ROUTING AND RESOURCE RESERVATION PROTOCOLS\n   There must clearly\
    \ be a well-defined interface between routing and\n   resource reservation protocols.\
    \ The nature of this interface, and the\n   interaction between routing and resource\
    \ reservation has to be\n   determined carefully to avoid incompatibilities. The\
    \ importance of\n   this can be readily illustrated in the case of RSVP.\n   RSVP\
    \ has been designed to operate independent of the underlying\n   routing scheme.\
    \ Under this model, RSVP PATH messages establish the\n   reverse path for RESV\
    \ messages.  In essence, this model is not\n   compatible with QoS-based routing\
    \ schemes that compute paths after\n   receiver reservations are received. While\
    \ this incompatibility can be\n   resolved in a simple manner for unicast flows,\
    \ multicast with\n   heterogeneous receiver requirements is a more difficult case.\
    \  For\n   this, reconciliation between RSVP and QoS-based routing models is\n\
    \   necessary. Such a reconciliation, however, may require some changes\n   to\
    \ the RSVP model depending on the QoS-based routing model [ZES97,\n   ZSSC97,\
    \ GOA97]. On the other hand, QoS-based routing schemes may be\n   designed with\
    \ RSVP compatibility as a necessary goal. How this\n   affects scalability and\
    \ other performance measures must be\n   considered.\n"
- title: 8. SECURITY CONSIDERATIONS
  contents:
  - "8. SECURITY CONSIDERATIONS\n   Security issues that arise with routing in general\
    \ are about\n   maintaining the integrity of the routing protocol in the presence\
    \ of\n   unintentional or malicious introduction of information that may lead\n\
    \   to protocol failure [P88]. QoS-based routing requires additional\n   security\
    \ measures both to validate QoS requests for flows and to\n   prevent resource-depletion\
    \ type of threats that can arise when flows\n   are allowed to make arbitratry\
    \ resource requests along various paths\n   in the network. Excessive resource\
    \ consumption by an errant flow\n   results in denial of resources to legitimate\
    \ flows. While these\n   situations may be prevented by setting up proper policy\
    \ constraints,\n   charging models and policing at various points in the network,\
    \ the\n   formalization of such protection requires work [BCCH94].\n"
- title: 9. RELATED WORK
  contents:
  - "9. RELATED WORK\n   \"Adaptive\" routing, based on network state, has a long\
    \ history,\n   especially in circuit-switched networks. Such routing has also\
    \ been\n   implemented in early datagram and virtual circuit packet networks.\n\
    \   More recently, this type of routing has been the subject of study in\n   the\
    \ context of ATM networks, where the traffic characteristics and\n   topology\
    \ are substantially different from those of circuit-switched\n   networks [MMR96].\
    \ It is instructive to review the adaptive routing\n   methodologies, both to\
    \ understand the problems encountered and\n   possible solutions.\n   Fundamentally,\
    \ there are two aspects to adaptive, network state-\n   dependent routing:\n \
    \    1.  Measuring and gathering network state information, and\n     2.  Computing\
    \ routes based on the available information.\n   Depending on how these two steps\
    \ are implemented, a variety of\n   routing techniques are possible. These differ\
    \ in the following\n   respects:\n   -  what state information is used\n   - \
    \ whether local or global state is used\n   -  what triggers the propagation of\
    \ state information\n   -  whether routes are computed in a distributed or centralized\
    \ manner\n   -  whether routes are computed on-demand, pre-computed, or in a\n\
    \      hybrid manner\n   -  what optimization criteria, if any, are used in computing\
    \ routes\n   -  whether source routing or hop by hop routing is used, and\n  \
    \ -  how alternate route choices are explored\n   It should be noted that most\
    \ of the adaptive routing work has focused\n   on unicast routing. Multicast routing\
    \ is one of the areas that would\n   be prominent with Internet QoS-based routing.\
    \ We treat this\n   separately, and the following review considers only unicast\
    \ routing.\n   This review is not exhaustive, but gives a brief overview of some\
    \ of\n   the approaches.\n"
- title: 9.1 Optimization Criteria
  contents:
  - "9.1 Optimization Criteria\n   The most common optimization criteria used in adaptive\
    \ routing is\n   throughput maximization or delay minimization. A general formulation\n\
    \   of the optimization problem is the one in which the network revenue\n   is\
    \ maximized, given that there is a cost associated with routing a\n   flow over\
    \ a given path [MMR96, K88]. In general, global optimization\n   solutions are\
    \ difficult to implement, and they rely on a number of\n   assumptions on the\
    \ characteristics of the traffic being routed\n   [MMR96]. Thus, the practical\
    \ approach has been to treat the routing\n   of each flow (VC, circuit or packet\
    \ stream to a given destination)\n   independently of the routing of other flows.\
    \ Many such routing\n   schemes have been implemented.\n"
- title: 9.2  Circuit Switched Networks
  contents:
  - "9.2  Circuit Switched Networks\n   Many adaptive routing concepts have been proposed\
    \ for circuit-\n   switched networks. An example of a simple adaptive routing\
    \ scheme is\n   sequential alternate routing [T88]. This is a hop-by-hop\n   destination-based\
    \ routing scheme where only local state information\n   is utilized.  Under this\
    \ scheme, a routing table is computed for each\n   node, which lists multiple\
    \ output link choices for each destination.\n   When a call set-up request is\
    \ received by a node, it tries each\n   output link choice in sequence, until\
    \ it finds one that can\n   accommodate the call. Resources are reserved on this\
    \ link, and the\n   call set-up is forwarded to the next node. The set-up either\
    \ reaches\n   the destination, or is blocked at some node. In the latter case,\
    \ the\n   set-up can be cranked back to the previous node or a failure\n   declared.\
    \ Crankback allows the previous node to try an alternate\n   path.  The routing\
    \ table under this scheme can be computed in a\n   centralized or distributed\
    \ manner, based only on the topology of the\n   network. For instance, a k-shortest-path\
    \ algorithm can be used to\n   determine k alternate paths from a node with distinct\
    \ initial links\n   [T88]. Some mechanism must be implemented during path computation\
    \ or\n   call set-up to prevent looping.\n   Performance studies of this scheme\
    \ illustrate some of the pitfalls of\n   alternate routing in general, and crankback\
    \ in particular [A84, M86,\n   YS87]. Specifically, alternate routing improves\
    \ the throughput when\n   traffic load is relatively light, but adversely affects\
    \ the\n   performance when traffic load is heavy. Crankback could further\n  \
    \ degrade the performance under these conditions. In general,\n   uncontrolled\
    \ alternate routing (with or without crankback) can be\n   harmful in a heavily\
    \ utilized network, since circuits tend to be\n   routed along longer paths thereby\
    \ utilizing more capacity. This is an\n   obvious, but important result that applies\
    \ to QoS-based Internet\n   routing also.\n   The problem with alternate routing\
    \ is that both direct routed (i.e.,\n   over shortest paths) and alternate routed\
    \ calls compete for the same\n   resource.  At higher loads, allocating these\
    \ resources to alternate\n   routed calls result in the displacement of direct\
    \ routed calls and\n   hence the alternate routing of these calls. Therefore,\
    \ many\n   approaches have been proposed to limit the flow of alternate routed\n\
    \   calls under high traffic loads. These schemes are designed for the\n   fully-connected\
    \ logical topology of long distance telephone networks\n   (i.e., there is a logical\
    \ link between every pair of nodes). In this\n   topology, direct routed calls\
    \ always traverse a 1-hop path to the\n   destination and alternate routed calls\
    \ traverse at most a 2-hop path.\n   \"Trunk reservation\" is a scheme whereby\
    \ on each link a certain\n   bandwidth is reserved for direct routed calls [MS91].\
    \ Alternate\n   routed calls are allowed on a trunk as long as the remaining trunk\n\
    \   bandwidth is greater than the reserved capacity. Thus, alternate\n   routed\
    \ calls cannot totally displace direct routed calls on a trunk.\n   This strategy\
    \ has been shown to be very effective in preventing the\n   adverse effects of\
    \ alternate routing.\n   \"Dynamic alternate routing\" (DAR) is a strategy whereby\
    \ alternate\n   routing is controlled by limiting the number of choices, in addition\n\
    \   to trunk reservation [MS91]. Under DAR, the source first attempts to\n   use\
    \ the direct link to the destination. When blocked, the source\n   attempts to\
    \ alternate route the call via a pre-selected neighbor. If\n   the call is still\
    \ blocked, a different neighbor is selected for\n   alternate routing to this\
    \ destination in the future. The present call\n   is dropped. DAR thus requires\
    \ only local state information. Also, it\n   \"learns\" of good alternate paths\
    \ by random sampling and sticks to\n   them as long as possible.\n   More recent\
    \ circuit-switched routing schemes utilize global state to\n   select routes for\
    \ calls. An example is AT&T's Real-Time Network\n   Routing (RTNR) scheme [ACFH92].\
    \ Unlike schemes like DAR, RTNR handles\n   multiple classes of service, including\
    \ voice and data at fixed rates.\n   RTNR utilizes a sophisticated per-class trunk\
    \ reservation mechanism\n   with dynamic bandwidth sharing between classes. Also,\
    \ when alternate\n   routing a call, RTNR utilizes the loading on all trunks in\
    \ the\n   network to select a path. Because of the fully-connected topology,\n\
    \   disseminating status information is simple under RTNR; each node\n   simply\
    \ exchanges status information directly with all others.\n   From the point of\
    \ view of designing QoS-based Internet routing\n   schemes, there is much to be\
    \ learned from circuit-switched routing.\n   For example, alternate routing and\
    \ its control, and dynamic resource\n   sharing among different classes of traffic.\
    \ It is, however, not\n   simple to apply some of the results to a general topology\
    \ network\n   with heterogeneous multirate traffic. Work in the area of ATM network\n\
    \   routing described next illustrates this.\n"
- title: 9.3 ATM Networks
  contents:
  - "9.3 ATM Networks\n   The VC routing problem in ATM networks presents issues similar\
    \ to\n   that encountered in circuit-switched networks. Not surprisingly, some\n\
    \   extensions of circuit-switched routing have been proposed. The goal\n   of\
    \ these routing schemes is to achieve higher throughput as compared\n   to traditional\
    \ shortest-path routing. The flows considered usually\n   have a single QoS requirement,\
    \ i.e., bandwidth.\n   The first idea is to extend alternate routing with trunk\
    \ reservation\n   to general topologies [SD95].  Under this scheme, a distance\
    \ vector\n   routing protocol is used to build routing tables at each node with\n\
    \   multiple choices of increasing hop count to each destination. A VC\n   set-up\
    \ is first routed along the primary (\"direct\") path. If\n   sufficient resources\
    \ are not available along this path, alternate\n   paths are tried in the order\
    \ of increasing hop count. A flag in the\n   VC set-up message indicates primary\
    \ or alternate routing, and\n   bandwidth on links along an alternate path is\
    \ allocated subject to\n   trunk reservation. The trunk reservation values are\
    \ determined based\n   on some assumptions on traffic characteristics. Because\
    \ the scheme\n   works only for a single data rate, the practical utility of it\
    \ is\n   limited.\n   The next idea is to import the notion of controlled alternate\
    \ routing\n   into traditional link state QoS-based routing [GKR96]. To do this,\n\
    \   first each VC is associated with a maximum permissible routing cost.\n   This\
    \ cost can be set based on expected revenues in carrying the VC or\n   simply\
    \ based on the length of the shortest path to the destination.\n   Each link is\
    \ associated with a metric that increases exponentially\n   with its utilization.\
    \ A switch computing a path for a VC simply\n   determines a least-cost feasible\
    \ path based on the link metric and\n   the VC's QoS requirement.  The VC is admitted\
    \ if the cost of the path\n   is less than or equal to the maximum permissible\
    \ routing cost. This\n   routing scheme thus limits the extent of \"detour\" a\
    \ VC experiences,\n   thus preventing excessive resource consumption. This is\
    \ a practical\n   scheme and the basic idea can be extended to hierarchical routing.\n\
    \   But the performance of this scheme has not been analyzed thoroughly.\n   A\
    \ similar notion of admission control based on the connection route\n   was also\
    \ incorporated in a routing scheme presented in [ACG92].\n   Considering the ATM\
    \ Forum PNNI protocol [PNNI96], a partial list of\n   its stated characteristics\
    \ are as follows:\n            o   Scales to very large networks\n           \
    \ o   Supports hierarchical routing\n            o   Supports QoS\n          \
    \  o   Uses source routed connection setup\n            o   Supports multiple\
    \ metrics and attributes\n            o   Provides dynamic routing\n   The PNNI\
    \ specification is sub-divided into two protocols: a signaling\n   and a routing\
    \ protocol. The PNNI signaling protocol is used to\n   establish point-to-point\
    \ and point to multipoint connections and\n   supports source routing, crankback\
    \ and alternate routing. PNNI source\n   routing allows loop free paths.  Also,\
    \ it allows each implementation\n   to use its own path computation algorithm.\
    \ Furthermore, source\n   routing is expected to support incremental deployment\
    \ of future\n   enhancements such as policy routing.\n   The PNNI routing protocol\
    \ is a dynamic, hierarchical link state\n   protocol that propagates topology\
    \ information by flooding it through\n   the network.  The topology information\
    \ is the set of resources (e.g.,\n   nodes, links and addresses) which define\
    \ the network. Resources are\n   qualified by defined sets of metrics and attributes\
    \ (delay, available\n   bandwidth, jitter, etc.) which are grouped by supported\
    \ traffic\n   class.  Since some of the metrics used will change frequently, e.g.,\n\
    \   available bandwidth, threshold algorithms are used to determine if\n   the\
    \ change in a metric or attribute is significant enough to require\n   propagation\
    \ of updated information.  Other features include, auto\n   configuration of the\
    \ routing hierarchy, connection admission control\n   (as part of path calculation)\
    \ and aggregation and summarization of\n   topology and reachability information.\n\
    \   Despite its functionality, the PNNI routing protocol does not address\n  \
    \ the issues of multicast routing, policy routing and control of\n   alternate\
    \ routing. A problem in general with link state QoS-based\n   routing is that\
    \ of efficient broadcasting of state information. While\n   flooding is a reasonable\
    \ choice with static link metrics it may\n   impact the performance adversely\
    \ with dynamic metrics.\n   Finally, Integrated PNNI [I-PNNI] has been designed\
    \ from the start to\n   take advantage of the QoS Routing capabilities that are\
    \ available in\n   PNNI and integrate them with routing for layer 3.  This would\
    \ provide\n   an integrated layer 2 and layer 3 routing protocol for networks\
    \ that\n   include PNNI in the ATM core.  The I-PNNI specification has been\n\
    \   under development in the ATM Forum and, at this time, has not yet\n   incorporated\
    \ QoS routing mechanisms for layer 3.\n"
- title: 9.4   Packet Networks
  contents:
  - "9.4   Packet Networks\n   Early attempts at adaptive routing in packet networks\
    \ had the\n   objective of delay minimization by dynamically adapting to network\n\
    \   congestion.  Alternate routing based on k-shortest path tables, with\n   route\
    \ selection based on some local measure (e.g., shortest output\n   queue) has\
    \ been described [R76, YS81]. The original ARPAnet routing\n   scheme was a distance\
    \ vector protocol with delay-based cost metric\n   [MW77]. Such a scheme was shown\
    \ to be prone to route oscillations\n   [B82]. For this and other reasons, a link\
    \ state delay-based routing\n   scheme was later developed for the ARPAnet [MRR80].\
    \ This scheme\n   demonstrated a number of techniques such as triggered updates,\n\
    \   flooding, etc., which are being used in OSPF and PNNI routing today.\n   Although\
    \ none of these schemes can be called QoS-based routing\n   schemes, they had\
    \ features that are relevant to QoS-based routing.\n   IBM's System Network Architecture\
    \ (SNA) introduced the concept of\n   Class of Service (COS)-based routing [A79,\
    \ GM79].  There were several\n   classes of service:  interactive, batch, and\
    \ network control.  In\n   addition, users could define other classes. When starting\
    \ a data\n   session an application or device would request a COS.  Routing would\n\
    \   then map the COS into a statically configured route which marked a\n   path\
    \ across the physical network.  Since SNA is connection oriented,\n   a session\
    \ was set up along this path and the application's or\n   device's data would\
    \ traverse this path for the life of the session.\n   Initially, the service delivered\
    \ to a session was based on the\n   network engineering and current state of network\
    \ congestion. Later,\n   transmission priority was added to subarea SNA.  Transmission\n\
    \   priority allowed more important traffic (e.g. interactive) to proceed\n  \
    \ before less time-critical traffic (e.g. batch) and improved link and\n   network\
    \ utilization. Transmission priority of a session was based on\n   its COS.\n\
    \   SNA later evolved to support multiple or alternate paths between\n   nodes.\
    \  But, although assisted by network design tools, the network\n   administrator\
    \ still had to statically configure routes. IBM later\n   introduced SNA's Advanced\
    \ Peer to Peer Networking (APPN) [B85]. APPN\n   added new features to SNA including\
    \ dynamic routing based on a link\n   state database. An application would use\
    \ COS to indicate it traffic\n   requirements and APPN would calculate a path\
    \ capable of meeting these\n   requirements.  Each COS was mapped to a table of\
    \ acceptable metrics\n   and parameters that qualified the nodes and links contained\
    \ in the\n   APPN topology Database.  Metrics and parameters used as part of the\n\
    \   APPN route calculation include, but are not limited to:  delay, cost\n   per\
    \ minute, node congestion and security.  The dynamic nature of APPN\n   allowed\
    \ it to route around failures and reduce network configuration.\n   The service\
    \ delivered by APPN was still based on the network\n   engineering, transmission\
    \ priority and network congestion.  IBM later\n   introduced an extension to APPN,\
    \ High Performance Routing\n   (HPR)[IBM97]. HPR uses a congestion avoidance algorithm\
    \ called\n   adaptive rate based (ARB) congestion control.  Using predictive\n\
    \   feedback methods, the ARB algorithm prevents congestion and improves\n   network\
    \ utilization.  Most recently, an extension to the COS table\n   has been defined\
    \ so that HPR routing could recognize and take\n   advantage of ATM QoS capabilities.\n\
    \   Considering IP routing, both IDRP [R92] and OSPF support  type of\n   service\
    \ (TOS)-based routing. While the IP header has a TOS field,\n   there is no standardized\
    \ way of utilizing it for TOS specification\n   and routing. It seems possible\
    \ to make use of the IP TOS feature,\n   along with TOS-based routing and proper\
    \ network engineering, to do\n   QoS-based routing. The emerging differentiated\
    \ services model is\n   generating renewed interest in TOS support. Among the\
    \ newer schemes,\n   Source Demand Routing (SDR) [ELRV96] allows  on-demand path\n\
    \   computation by routers and the implementation of strict and loose\n   source\
    \ routing. The Nimrod architecture [CCM96] has a number of\n   concepts built\
    \ in to handle scalability and specialized path\n   computation. Recently, some\
    \ work has been done on QoS-based routing\n   schemes for the integrated services\
    \ Internet. For example, in [M98],\n   heuristic schemes for efficient routing\
    \ of flows with bandwidth\n   and/or delay constraints is described and evaluated.\n"
- title: 9. SUMMARY AND CONCLUSIONS
  contents:
  - "9. SUMMARY AND CONCLUSIONS\n   In this document, a framework for QoS-based Internet\
    \ routing was\n   defined.  This framework adopts the traditional separation between\n\
    \   intra and interdomain routing. This approach is especially meaningful\n  \
    \ in the case of QoS-based routing, since there are many views on how\n   QoS-based\
    \ routing should be accomplished and many different needs.\n   The objective of\
    \ this document was to encourage the development of\n   different solution approaches\
    \ for intradomain routing, subject to\n   some broad requirements, while consensus\
    \ on interdomain routing is\n   achieved. To this end, the QoS-based routing issues\
    \ were described,\n   and some broad intradomain routing requirements and an interdomain\n\
    \   routing model were defined. In addition, QoS-based multicast routing\n   was\
    \ discussed and a detailed review of related work was presented.\n   The deployment\
    \ of QoS-based routing across multiple administrative\n   domains requires both\
    \ the development of intradomain routing schemes\n   and a standard way for them\
    \ to interact via a well-defined\n   interdomain routing mechanism. This document,\
    \ while outlining the\n   issues that must be addressed, did not engage in the\
    \ specification of\n   the actual features of the interdomain routing scheme.\
    \ This would be\n   the next step in the evolution of wide-area, multidomain QoS-based\n\
    \   routing.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [A79]    V. Ahuja, \"Routing and Flow Control in SNA\", IBM Systems\n\
    \            Journal, 18 No. 2, pp.  298-314, 1979.\n   [A84]    J. M. Akinpelu,\
    \ \"The Overload Performance of Engineered\n            Networks with Non-Hierarchical\
    \ Routing\", AT&T Technical\n            Journal, Vol. 63, pp. 1261-1281, 1984.\n\
    \   [ACFH92] G. R. Ash, J. S. Chen, A. E. Frey and B. D. Huang, \"RealTime\n \
    \           Network Routing in a Dynamic Class-of-Service Network\",\n       \
    \     Proceedings of ITC 13, 1992.\n   [ACG92]  H. Ahmadi, J. Chen, and R. Guerin,\
    \ \"Dynamic Routing and Call\n            Control in High-Speed Integrated Networks\"\
    , Proceedings of\n            ITC-13, pp. 397-403, 1992.\n   [B82]    D. P. Bertsekas,\
    \ \"Dynamic Behavior of Shortest Path Routing\n            Algorithms for Communication\
    \ Networks\", IEEE Trans. Auto.\n            Control, pp. 60-74, 1982.\n   [B85]\
    \    A. E. Baratz, \"SNA Networks of Small Systems\", IEEE JSAC,\n           \
    \ May, 1985.\n   [BBCD98] Black, D., Blake, S., Carlson, M., Davies, E., Wang,\
    \ Z., and\n            W. Weiss, \"An Architecture for Differentiated Services\"\
    ,\n            Work in Progress.\n   [BCCH94] Braden, R., Clark, D., Crocker,\
    \ D., and C. Huitema, \"Report\n            of IAB Workshop on Security in the\
    \ Internet Architecture\",\n            RFC 1636, June 1994.\n   [BCF94]  A. Ballardie,\
    \ J. Crowcroft and P. Francis, \"Core-Based\n            Trees: A Scalable Multicast\
    \ Routing Protocol\", Proceedings\n            of SIGCOMM `94.\n   [BCS94]  Braden,\
    \ R., Clark, D., and S. Shenker, \"Integrated Services\n            in the Internet\
    \ Architecture: An Overview\", RFC 1633, July\n            1994.\n   [BZ92]  \
    \ S. Bahk and M. El Zarki, \"Dynamic Multi-Path Routing and How\n            it\
    \ Compares with Other Dynamic Routing Algorithms for High\n            Speed Wide\
    \ Area Networks\", Proc. SIGCOMM `92, pp. 53-64,\n            1992.\n   [BZBH97]\
    \ Braden, R., Zhang, L., Berson, S., Herzog, S., and S. Jamin,\n            \"\
    Resource ReSerVation Protocol (RSVP) -- Version 1\n            Functional Spec\"\
    , RFC 2205, September 1997.\n   [C91]    C-H. Chow, \"On Multicast Path Finding\
    \ Algorithms\",\n            Proceedings of the IEEE INFOCOM `91, pp. 1274-1283,\
    \ 1991.\n   [CCM96]  Castineyra, I., Chiappa, J., and M. Steenstrup, \"The Nimrod\n\
    \            Routing Architecture\", RFC 1992, August 1996.\n   [DEFV94] S. E.\
    \ Deering, D. Estrin, D. Farinnacci, V. Jacobson, C-G.\n            Liu, and L.\
    \ Wei, \"An Architecture for Wide-Area Multicast\n            Routing\", Technical\
    \ Report, 94-565, ISI, University of\n            Southern California, 1994.\n\
    \   [ELRV96] Estrin, D., Li, T., Rekhter, Y., Varadhan, K., and D.\n         \
    \   Zappala, \"Source Demand Routing: Packet Format and\n            Forwarding\
    \ Specification (Version 1)\", RFC 1940, May 1996.\n   [GKR96]  R. Gawlick, C.\
    \ R. Kalmanek, and K. G. Ramakrishnan, \"On-Line\n            Routing of Permanent\
    \ Virtual Circuits\", Computer\n            Communications, March, 1996.\n   [GPSS98]\
    \ A. Ghanwani, J. W. Pace, V. Srinivasan, A. Smith and M.\n            Seaman,\
    \ \"A Framework for Providing Integrated Services over\n            Shared and\
    \ Switched IEEE 802 LAN Technologies\", Work in\n            Progress.\n   [GM79]\
    \   J. P. Gray, T. B. McNeil, \"SNA Multi-System Networking\", IBM\n         \
    \   Systems Journal, 18 No. 2, pp.  263-297, 1979.\n   [GOA97]  Y. Goto, M. Ohta\
    \ and K. Araki, \"Path QoS Collection for\n            Stable Hop-by-Hop QoS Routing\"\
    , Proc. INET '97, June, 1997.\n   [GKOP98] R. Guerin, S. Kamat, A. Orda, T. Przygienda,\
    \ and D.\n            Williams, \"QoS Routing Mechanisms and OSPF extensions\"\
    , work\n            in progress, March, 1998.\n   [IBM97]  IBM Corp, SNA APPN\
    \ - High Performance Routing Architecture\n            Reference, Version 2.0,\
    \ SV40-1018, February 1997.\n   [IPNNI]  ATM Forum Technical Committee. Integrated\
    \ PNNI (I-PNNI) v1.0\n            Specification. af-96-0987r1, September 1996.\n\
    \   [ISI81]  Postel, J., \"Internet Protocol\", STD 5, RFC 791, September\n  \
    \          1981.\n   [JMW83]  J. M. Jaffe, F. H. Moss, R. A. Weingarten, \"SNA\
    \ Routing:\n            Past, Present, and Possible Future\", IBM Systems Journal,\n\
    \            pp.  417-435, 1983.\n   [K88]    F.P. Kelly, \"Routing in Circuit-Switched\
    \ Networks:\n            Optimization, Shadow Prices and Decentralization\", Adv.\n\
    \            Applied Prob., pp. 112-144, March, 1988.\n   [L95]    W. C. Lee,\
    \ \"Topology Aggregation for Hierarchical Routing in\n            ATM Networks\"\
    , ACM SIGCOMM Computer Communication Review,\n            1995.\n   [M86]    L.\
    \ G. Mason, \"On the Stability of Circuit-Switched Networks\n            with\
    \ Non-hierarchical Routing\", Proc. 25th Conf. On Decision\n            and Control,\
    \ pp. 1345-1347, 1986.\n   [M98]    Moy, J., \"OSPF Version 2\", STD 54, RFC 2328,\
    \ April 1998.\n   [M94]    Moy, J., \"MOSPF: Analysis and Experience\", RFC 1585,\
    \  March\n            1994.\n   [M98]    Q. Ma, \"Quality-of-Service Routing in\
    \ Integrated Services\n            Networks\", PhD thesis, Computer Science Department,\
    \ Carnegie\n            Mellon University, 1998.\n   [MMR96]  D. Mitra, J. Morrison,\
    \ and K. G. Ramakrishnan, \"ATM Network\n            Design and Optimization:\
    \ A Multirate Loss Network\n            Framework\", Proceedings of IEEE INFOCOM\
    \ `96, 1996.\n   [MRR80]  J. M. McQuillan, I. Richer and E. C. Rosen, \"The New\
    \ Routing\n            Algorithm for the ARPANET\", IEEE Trans.  Communications,\
    \ pp.\n            711-719, May, 1980.\n   [MS91]   D. Mitra and J. B. Seery,\
    \ \"Comparative Evaluations of\n            Randomized and Dynamic Routing Strategies\
    \ for Circuit\n            Switched Networks\", IEEE Trans. on Communications,\
    \ pp. 102-\n            116, January, 1991.\n   [MW77]   J. M. McQuillan and D.\
    \ C. Walden, \"The ARPANET Design\n            Decisions\", Computer Networks,\
    \ August, 1977.\n   [NC94]   Nair, R. and Clemmensen, D. : \"Routing in Integrated\n\
    \            Services Networks\", Proc. 2nd International Conference on\n    \
    \        Telecom.  Systems  Modeling and Analysis, March 1994.\n   [P88]    R.\
    \ Perlman, \"Network Layer Protocol with Byzantine\n            Robustness\",\
    \ Ph.D. Thesis, Dept. of EE and CS, MIT, August,\n            1988.\n   [PNNI96]\
    \ ATM Forum PNNI subworking group, \"Private Network-Network\n            Interface\
    \ Spec.  v1.0 (PNNI 1.0)\", afpnni-0055.00, March\n            1996.\n   [R76]\
    \    H. Rudin, \"On Routing and \"Delta Routing\": A Taxonomy and\n          \
    \  Performance Comparison of Techniques for Packet-Switched\n            Networks\"\
    , IEEE Trans. Communications, pp. 43-59, January,\n            1996.\n   [R92]\
    \    Y. Rekhter, \"IDRP Protocol Analysis: Storage Overhead\", ACM\n         \
    \   Comp.  Comm.  Review, April, 1992.\n   [R96]    B. Rajagopalan, \"Efficient\
    \ Link State Routing\", Work in\n            Progress, available from braja@ccrl.nj.nec.com.\n\
    \   [RN98]   B. Rajagopalan and R. Nair, \"Multicast Routing with Resource\n \
    \           Reservation\", to appear in J. of High Speed Networks, 1998.\n   [SD95]\
    \   S. Sibal and A. Desimone, \"Controlling Alternate Routing in\n           \
    \ General-Mesh Packet Flow Networks\", Proceedings of ACM\n            SIGCOMM,\
    \ 1995.\n   [SPG97]  Shenker, S., Partridge, C., and R. Guerin, \"Specification\
    \ of\n            Guaranteed Quality of Service\", RFC 2212, September 1997.\n\
    \   [T88]    D. M. Topkis, \"A k-Shortest-Path Algorithm for Adaptive\n      \
    \      Routing in Communications Networks\", IEEE Trans.\n            Communications,\
    \ pp.  855-859, July, 1988.\n   [W88]    B. M. Waxman, \"Routing of Multipoint\
    \ Connections\", IEEE\n            JSAC, pp. 1617-1622, December, 1988.\n   [W97]\
    \   Wroclawski, J., \"Specification of the Controlled-Load Network\n         \
    \   Element Service\", RFC 2211, September 1997.\n   [WC96]   Z. Wang and J. Crowcroft,\
    \ \"QoS Routing for Supporting\n            Resource Reservation\", IEEE JSAC,\
    \ September, 1996.\n   [YS81]   T. P. Yum and M. Schwartz, \"The Join-Based Queue\
    \ Rule and\n            its Application to Routing in Computer Communications\n\
    \            Networks\", IEEE Trans. Communications, pp. 505-511, 1981.\n   [YS87]\
    \   T. G. Yum and M. Schwartz, \"Comparison of Routing Procedures\n          \
    \  for Circuit-Switched Traffic in Nonhierarchical Networks\",\n            IEEE\
    \ Trans. Communications, pp. 535-544, May, 1987.\n   [ZES97]  Zappala, D., Estrin,\
    \ D., and S. Shenker, \"Alternate Path\n            Routing and Pinning for Interdomain\
    \ Multicast Routing\", USC\n            Computer Science Technical Report #97-655,\
    \ USC, 1997.\n   [ZSSC97] Zhang, Z., Sanchez, C., Salkewicz, B., and E. Crawley,\
    \ \"QoS\n            Extensions to OSPF\", Work in Progress.\n"
- title: AUTHORS' ADDRESSES
  contents:
  - "AUTHORS' ADDRESSES\n   Bala Rajagopalan\n   NEC USA, C&C Research Labs\n   4\
    \ Independence Way\n   Princeton, NJ 08540\n   U.S.A\n   Phone: +1-609-951-2969\n\
    \   EMail: braja@ccrl.nj.nec.com\n   Raj Nair\n   Arrowpoint\n   235 Littleton\
    \ Rd.\n   Westford, MA 01886\n   U.S.A\n   Phone: +1-508-692-5875, x29\n   EMail:\
    \ nair@arrowpoint.com\n   Hal Sandick\n   Bay Networks, Inc.\n   1009 Slater Rd.,\
    \ Suite 220\n   Durham, NC 27703\n   U.S.A\n   Phone: +1-919-941-1739\n   EMail:\
    \ Hsandick@baynetworks.com\n   Eric S. Crawley\n   Argon Networks, Inc.\n   25\
    \ Porter Rd.\n   Littelton, MA 01460\n   U.S.A\n   Phone: +1-508-486-0665\n  \
    \ EMail: esc@argon.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
