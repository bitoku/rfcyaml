- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n                       for\
    \ the SIP Interface Type\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing SIP (SMDS Interface\n   Protocol)\
    \ objects.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. The Network Management Framework ............................\
    \    2\n   2. Objects .....................................................  \
    \  2\n   2.1 Format of Definitions ......................................    3\n\
    \   3. Overview ....................................................    3\n  \
    \ 4. Object Definitions ..........................................    4\n   4.1\
    \ The SIP Level 3 group ......................................    4\n   4.2 The\
    \ SIP Level 2 group ......................................    8\n   4.3 The SIP\
    \ PLCP group .........................................   11\n   4.3.1 The SIP\
    \ DS1 PLCP group ...................................   12\n   4.3.2 The SIP DS3\
    \ PLCP group ...................................   14\n   4.4 The SMDS Applications\
    \ group ................................   16\n   4.5 The SMDS Carrier Selection\
    \ group ...........................   18\n   4.6 The SIP Error Log group ....................................\
    \   18\n   5. Acknowledgments .............................................  \
    \ 23\n   6. References ..................................................   23\n\
    \   7. Security Considerations......................................   25\n  \
    \ 8. Authors' Addresses...........................................   25\n"
- title: 1.  The Network Management Framework
  contents:
  - "1.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      RFC 1155 [3] which\
    \ defines the SMI, the mechanisms used for\n      describing and naming objects\
    \ for the purpose of management.  RFC\n      1212 [9] defines a more concise description\
    \ mechanism, which is\n      wholly consistent with the SMI.\n      RFC 1156 [4]\
    \ which defines MIB-I, the core set of managed objects\n      for the Internet\
    \ suite of protocols.  RFC 1213 [6], defines MIB-\n      II, an evolution of MIB-I\
    \ based on implementation experience and\n      new operational requirements.\n\
    \      RFC 1157 [5] which defines the SNMP, the protocol used for network\n  \
    \    access to managed objects.\n   The Framework permits new objects to be defined\
    \ for the purpose of\n   experimentation and evaluation.\n"
- title: 2.  Objects
  contents:
  - "2.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1)\n   International\
    \ Standard 8824 [7] defined in the SMI.  In particular,\n   each object has a\
    \ name, a syntax, and an encoding.  The name is an\n   object identifier, an administratively\
    \ assigned name, which specifies\n   an object type.  The object type together\
    \ with an object instance\n   serves to uniquely identify a specific instantiation\
    \ of the object.\n   For human convenience, we often use a textual string, termed\
    \ the\n   OBJECT DESCRIPTOR, to also refer to the object type.\n   The syntax\
    \ of an object type defines the abstract data structure\n   corresponding to that\
    \ object type.  The ASN.1 language is used for\n   this purpose.  However, the\
    \ SMI RFC 1155 [3] purposely restricts the\n   ASN.1 constructs which may be used.\
    \  These restrictions are\n   explicitly made for simplicity.\n   The encoding\
    \ of an object type is simply how that object type is\n   represented using the\
    \ object type's syntax.  Implicitly tied to the\n   notion of an object type's\
    \ syntax and encoding is how the object type\n   is represented when being transmitted\
    \ on the network.  The SMI\n   specifies the use of the basic encoding rules of\
    \ ASN.1 International\n   Standard 8825 [8], subject to the additional requirements\
    \ imposed by\n   the SNMP.\n"
- title: 2.1.  Format of Definitions
  contents:
  - "2.1.  Format of Definitions\n   Section 4 contains contains the specification\
    \ of all object types\n   contained in this MIB module.  The object types are\
    \ defined using the\n   conventions defined in the SMI, as amended by the extensions\n\
    \   specified in RFC 1212 [9].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   These objects are used when the particular media being used\
    \ to\n   realize an interface is a SIP interface.  At present, this applies to\n\
    \   these values of the ifType variable in the Internet-standard MIB:\n      \
    \            sip (31)\n   For these interfaces, the value of the ifSpecific variable\
    \ in the\n   MIB-II [6] has the OBJECT IDENTIFIER value:\n               sip \
    \   OBJECT IDENTIFIER ::= { transmission 31 }\n   The definitions contained herein\
    \ are based on the SIP specifications\n   in Bellcore TR-TSV-000772 and TR-TSV-000773\
    \ [11,12].\n   The SIP (SMDS Interface Protocol) protocol stack is defined as\n\
    \   follows in TR-TSV-000772 [11]:\n                               ___________________\n\
    \                              |                   |\n                       \
    \       | SIP Level 3 [11]  |\n                              |___________________|\n\
    \                              |                   |\n                       \
    \       | SIP Level 2 [11]  |\n                              |___________________|\n\
    \                              |                   |\n                       \
    \       | PLCP [12]         |\n                              |___________________|\n\
    \                              |                   |\n                       \
    \       | DS1 or DS3 [12]   |\n                              |___________________|\n\
    \   The PLCP (Physical Layer Convergence Procedure) adapts the\n   capabilities\
    \ of the transmission system (DS1 or DS3 formats) to the\n   service expected\
    \ by SIP Level 2.  Managed objects for DS1 and DS3\n   Interface Types are defined\
    \ in RFC 1232 [13] and RFC 1233 [14]\n   respectively (and amended in RFC 1239\
    \ [17]), and can be utilized for\n   management of SIP interfaces. This document\
    \ defines managed objects\n   for the remaining protocol levels of the SIP Interface\
    \ Type.  This\n   document does not specify objects for the management of subscription\n\
    \   or configuration of Subscriber-Network Interfaces (SNIs). Those\n   objects\
    \ are defined in Definitions of Managed Objects for SMDS\n   Subscription [18].\
    \ Bellcore requirements on these objects are\n   specified in TA-TSV-001062 [16].\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n               RFC1304-MIB DEFINITIONS ::= BEGIN\n  \
    \             IMPORTS\n                       Counter, TimeTicks, IpAddress\n\
    \                               FROM RFC1155-SMI\n                       transmission\n\
    \                               FROM RFC1213-MIB\n                       OBJECT-TYPE\n\
    \                               FROM RFC-1212;\n               --  This MIB module\
    \ uses the extended OBJECT-TYPE macro\n               --  as defined in RFC-1212.\n\
    \               --  This is the MIB module for the SIP objects.\n            \
    \   sip     OBJECT IDENTIFIER ::= { transmission 31 }\n               -- All representations\
    \ of SMDS addresses in this MIB\n               -- module use, as a textual convention\
    \ (i.e., this\n               -- convention does not affect their encoding), the\n\
    \               -- data type:\n               SMDSAddress ::= OCTET STRING (SIZE\
    \ (8))\n               -- the 60-bit SMDS address, preceded by 4 bits with the\n\
    \               -- following values:\n               -- \"1100\" when representing\
    \ an individual address\n               -- \"1110\" when representing a group\
    \ address\n               -- The SIP Level 3 group\n               -- Implementation\
    \ of the SIP Level 3 group is mandatory\n               -- for all systems implementing\
    \ SIP Level 3.\n               sipL3Table  OBJECT-TYPE\n                   SYNTAX\
    \  SEQUENCE OF SipL3Entry\n                   ACCESS  not-accessible\n       \
    \            STATUS  mandatory\n                   DESCRIPTION\n             \
    \              \"This table contains SIP L3 parameters and\n                 \
    \          state variables, one entry per SIP port.\"\n                  ::= {\
    \ sip 1 }\n              sipL3Entry  OBJECT-TYPE\n                  SYNTAX  SipL3Entry\n\
    \                  ACCESS  not-accessible\n                  STATUS  mandatory\n\
    \                  DESCRIPTION\n                          \"This list contains\
    \ SIP L3 parameters and\n                          state variables.\"\n      \
    \           INDEX   { sipL3Index }\n                 ::= { sipL3Table 1 }\n  \
    \           SipL3Entry  ::= SEQUENCE {\n                 sipL3Index\n        \
    \             INTEGER,\n                 sipL3ReceivedIndividualDAs\n        \
    \             Counter,\n                 sipL3ReceivedGAs\n                  \
    \   Counter,\n                 sipL3UnrecognizedIndividualDAs\n              \
    \       Counter,\n                 sipL3UnrecognizedGAs\n                    \
    \ Counter,\n                 sipL3SentIndividualDAs\n                     Counter,\n\
    \                 sipL3SentGAs\n                     Counter,\n              \
    \   sipL3Errors\n                     Counter,\n                 sipL3InvalidSMDSAddressTypes\n\
    \                     Counter,\n                 sipL3VersionSupport\n       \
    \              INTEGER\n                 }\n             sipL3Index  OBJECT-TYPE\n\
    \                 SYNTAX  INTEGER (1..65535)\n                 ACCESS  read-only\n\
    \                 STATUS  mandatory\n                 DESCRIPTION\n          \
    \               \"The value of this object identifies the SIP\n              \
    \           port interface for which this entry contains\n                   \
    \      management information.  The value of this\n                         object\
    \ for a particular interface has the same\n                         value as the\
    \ ifIndex object, defined in RFC\n                         1156 and RFC 1213,\
    \ for the same interface.\"\n                ::= { sipL3Entry 1 }\n          \
    \  sipL3ReceivedIndividualDAs OBJECT-TYPE\n                SYNTAX  Counter\n \
    \               ACCESS  read-only\n                STATUS  mandatory\n       \
    \         DESCRIPTION\n                        \"The total number of individually\
    \ addressed SIP\n                        Level 3 PDUs received from the remote\
    \ system\n                        across the SNI.  The total includes only\n \
    \                       unerrored L3PDUs.\"\n               ::= { sipL3Entry 2\
    \ }\n           sipL3ReceivedGAs OBJECT-TYPE\n               SYNTAX  Counter\n\
    \               ACCESS  read-only\n               STATUS  mandatory\n        \
    \       DESCRIPTION\n                       \"The total number of group addressed\
    \ SIP Level 3\n                       PDUs received from the remote system across\
    \ the\n                       SNI.  The total includes only unerrored L3PDUs.\"\
    \n              ::= { sipL3Entry 3 }\n          sipL3UnrecognizedIndividualDAs\
    \ OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of SIP Level 3 PDUs received from the\n                  \
    \    remote system with invalid or unknown individual\n                      destination\
    \ addresses (Destination Address\n                      Screening violations are\
    \ not included).  See SMDS\n                      Subscription MIB module.\"\n\
    \              ::= { sipL3Entry 4 }\n          sipL3UnrecognizedGAs OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of SIP Level 3 PDUs received from the\n                      remote system with\
    \ invalid or unknown group\n                      addresses.  (Destination Address\
    \ Screening\n                      violations are not included).  See SMDS\n \
    \                     Subscription MIB module.\"\n              ::= { sipL3Entry\
    \ 5 }\n          sipL3SentIndividualDAs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of individually addressed\
    \ SIP Level 3\n                      PDUs that have been sent by this system across\
    \ the\n                      SNI.\"\n              ::= { sipL3Entry 6 }\n    \
    \      sipL3SentGAs OBJECT-TYPE\n              SYNTAX  Counter\n             \
    \ ACCESS  read-only\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"The number of group addressed SIP L3PDUs that\n     \
    \                 have been sent by this system across the SNI.\"\n          \
    \    ::= { sipL3Entry 7 }\n          -- The total number of SIP L3PDU errors can\
    \ be calculated as\n          -- (Syntactic errors + Semantic Service errors )\n\
    \          -- Syntactic errors include:\n          --    sipL3Errors\n       \
    \   -- Latest occurrences of syntactic error types are logged in\n          --\
    \    sipL3PDUErrorTable.\n          -- Semantic Service errors include:\n    \
    \      --    sipL3UnrecognizedIndividualDAs\n          --    sipL3UnrecognizedGAs\n\
    \          --    sipL3InvalidSMDSAddressTypes\n          -- Note that public networks\
    \ supporting SMDS may discard\n          -- SIP L3PDUs due to subscription violations.\
    \  Related\n          -- managed objects are defined in Definitions of Managed\n\
    \          -- Objects for SMDS Subscription.\n          sipL3Errors OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The total\
    \ number of SIP Level 3 PDUs received\n                      from the remote system\
    \ that were discovered to\n                      have errors (including protocol\
    \ processing and bit\n                      errors but excluding addressing-related\
    \ errors)\n                      and were discarded.  Includes both group addressed\n\
    \                      L3PDUs and L3PDUs containing an individual\n          \
    \            destination address.\"\n              ::= { sipL3Entry 8 }\n    \
    \      sipL3InvalidSMDSAddressTypes OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of SIP Level 3 PDUs received\
    \ from the\n                      remote system that had the Source or Destination\n\
    \                      Address_Type subfields, (the four most significant\n  \
    \                    bits of the 64 bit address field), not equal to\n       \
    \               the value 1100 or 1110.  Also, an error is\n                 \
    \     considered to have occurred if the Address_Type\n                      field\
    \ for a Source Address, the four most\n                      significant bits\
    \ of the 64 bits, is equal to 1110\n                      (a group address).\"\
    \n              ::= { sipL3Entry 9 }\n          sipL3VersionSupport  OBJECT-TYPE\n\
    \              SYNTAX  INTEGER (1..65535)\n              ACCESS  read-only\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"A value which indicates the version(s) of SIP\n                      that\
    \ this interface supports.  The value is a sum.\n                      This sum\
    \ initially takes the value zero.  For each\n                      version, V,\
    \ that this interface supports, 2 raised\n                      to (V - 1) is\
    \ added to the sum. For example, a\n                      port supporting versions\
    \ 1 and 2 would have a\n                      value of (2^(1-1)+2^(2-1))=3.  The\n\
    \                      sipL3VersionSupport is effectively a bit mask with\n  \
    \                    Version 1 equal to the least significant bit\n          \
    \            (LSB).\"\n              ::= { sipL3Entry 10 }\n          -- The SIP\
    \ Level 2 group\n          -- Implementation of the SIP Level 2 group is mandatory\n\
    \          -- for all systems implementing SIP Level 2.\n          sipL2Table\
    \  OBJECT-TYPE\n              SYNTAX  SEQUENCE OF SipL2Entry\n              ACCESS\
    \  not-accessible\n              STATUS  mandatory\n              DESCRIPTION\n\
    \                      \"This table contains SIP L2PDU parameters and\n      \
    \                state variables, one entry per SIP port.\"\n              ::=\
    \ { sip 2 }\n          sipL2Entry  OBJECT-TYPE\n              SYNTAX  SipL2Entry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"This list contains SIP L2 parameters\
    \ and state\n                      variables.\"\n              INDEX   { sipL2Index\
    \ }\n              ::= { sipL2Table 1 }\n          SipL2Entry  ::= SEQUENCE {\n\
    \              sipL2Index\n                  INTEGER,\n              sipL2ReceivedCounts\n\
    \                  Counter,\n              sipL2SentCounts\n                 \
    \ Counter,\n              sipL2HcsOrCRCErrors\n                  Counter,\n  \
    \            sipL2PayloadLengthErrors\n                  Counter,\n          \
    \    sipL2SequenceNumberErrors\n                  Counter,\n              sipL2MidCurrentlyActiveErrors\n\
    \                  Counter,\n              sipL2BomOrSSMsMIDErrors\n         \
    \         Counter,\n              sipL2EomsMIDErrors\n                  Counter\n\
    \              }\n          sipL2Index  OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (1..65535)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The value of this object identifies\
    \ the SIP port\n                      interface for which this entry contains\
    \ management\n                      information.  The value of this object for\
    \ a\n                      particular interface has the same value as the\n  \
    \                    ifIndex object, defined in RFC 1156 and RFC 1213,\n     \
    \                 for the same interface.\"\n              ::= { sipL2Entry 1\
    \ }\n          sipL2ReceivedCounts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of SIP Level 2 PDUs received\
    \ from the\n                      remote system across the SNI. The total includes\n\
    \                      only unerrored L2PDUs.\"\n              ::= { sipL2Entry\
    \ 2 }\n          sipL2SentCounts OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The number of SIP Level 2 PDUs that\
    \ have been\n                      sent by this system across the SNI.\"\n   \
    \           ::= { sipL2Entry 3 }\n          -- The total number of SIP L2PDU errors\
    \ can be calculated as\n          -- the sum of:\n          --    sipL2HcsOrCRCErrors\n\
    \          --    sipL2PayloadLengthErrors\n          --    sipL2SequenceNumberErrors\n\
    \          --    sipL2MidCurrentlyActiveErrors\n          --    sipL2BomOrSSMsMIDErrors\n\
    \          --    sipL2EomsMIDErrors\n          sipL2HcsOrCRCErrors  OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of received SIP Level 2 PDUs that were\n                      discovered to\
    \ have either a Header Check Sequence\n                      error or a Payload\
    \ CRC violation.\"\n              ::= { sipL2Entry 4 }\n          sipL2PayloadLengthErrors\
    \  OBJECT-TYPE\n              SYNTAX  Counter\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The number of received SIP Level 2 PDUs that had\n                  \
    \    Payload Length errors that fall in the following\n                      specifications:\n\
    \                      - SSM L2_PDU payload length field value less\n        \
    \              - than 28 octets or greater than 44 octets,\n                 \
    \     - BOM or COM L2_PDU payload length field not\n                      - equal\
    \ to 44 octets,\n                      - EOM L2_PDU payload length field value\
    \ less\n                      - than 4 octets or greater than 44 octets.\"\n \
    \             ::= { sipL2Entry 5 }\n          sipL2SequenceNumberErrors  OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of received SIP Level 2 PDUs that had\n                      a sequence number\
    \ within the L2PDU not equal to\n                      the expected sequence number\
    \ of the SMDS SS\n                      receive process.\"\n              ::=\
    \ { sipL2Entry 6 }\n          sipL2MidCurrentlyActiveErrors  OBJECT-TYPE\n   \
    \           SYNTAX Counter\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"The number of\
    \ received SIP Level 2 PDUs that are\n                      BOMs for which an\
    \ active receive process is\n                      already started.\"\n      \
    \        ::= { sipL2Entry 7 }\n          sipL2BomOrSSMsMIDErrors  OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of received SIP Level 2 PDUs that are\n                      SSMs with a MID\
    \ not equal to zero or are BOMs with\n                      MIDs equal to zero.\"\
    \n              ::= { sipL2Entry 8 }\n          sipL2EomsMIDErrors  OBJECT-TYPE\n\
    \              SYNTAX  Counter\n              ACCESS  read-only\n            \
    \  STATUS  mandatory\n              DESCRIPTION\n                      \"The number\
    \ of received SIP Level 2 PDUs that are\n                      EOMs for which\
    \ there is no active receive process\n                      for the MID (i.e.,\
    \ the receipt of an EOM which\n                      does not correspond to a\
    \ BOM) OR the EOM has a MID\n                      equal to zero.\"\n        \
    \      ::= { sipL2Entry 9 }\n          -- The SIP PLCP group\n          -- Implementation\
    \ of one of these groups is mandatory\n          -- if the PLCP is implemented.\n\
    \          sipPLCP OBJECT IDENTIFIER ::= { sip 3 }\n          -- The SIP DS1 PLCP\
    \ group\n          -- Implementation of this group is mandatory\n          --\
    \ if the DS1 PLCP is implemented.\n          sipDS1PLCPTable  OBJECT-TYPE\n  \
    \            SYNTAX  SEQUENCE OF SipDS1PLCPEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"This table contains SIP DS1 PLCP parameters and\n                   \
    \   state variables, one entry per SIP port.\"\n              ::= { sipPLCP 1\
    \ }\n          sipDS1PLCPEntry  OBJECT-TYPE\n              SYNTAX  SipDS1PLCPEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"This list contains SIP DS1 PLCP\
    \ parameters and\n                      state variables.\"\n              INDEX\
    \   { sipDS1PLCPIndex }\n              ::= { sipDS1PLCPTable 1 }\n          SipDS1PLCPEntry\
    \  ::= SEQUENCE {\n              sipDS1PLCPIndex\n                  INTEGER,\n\
    \              sipDS1PLCPSEFSs\n                  Counter,\n              sipDS1PLCPAlarmState\n\
    \                  INTEGER,\n              sipDS1PLCPUASs\n                  Counter\n\
    \              }\n          sipDS1PLCPIndex  OBJECT-TYPE\n              SYNTAX\
    \  INTEGER (1..65535)\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The value of this\
    \ object identifies the SIP port\n                      interface for which this\
    \ entry contains management\n                      information.  The value of\
    \ this object for a\n                      particular interface has the same value\
    \ as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n\
    \                      for the same interface.\"\n              ::= { sipDS1PLCPEntry\
    \ 1 }\n          sipDS1PLCPSEFSs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A DS1 Severely Errored Framing Second\
    \ (SEFS) is a\n                      count of one-second intervals containing\
    \ one or\n                      more SEF events.  A Severely Errored Framing (SEF)\n\
    \                      event is declared when an error in the A1 octet\n     \
    \                 and an error in the A2 octet of a framing octet\n          \
    \            pair (i.e., errors in both framing octets), or two\n            \
    \          consecutive invalid and/or nonsequential Path\n                   \
    \   Overhead Identifier octets are detected.\"\n              ::= { sipDS1PLCPEntry\
    \ 2 }\n          sipDS1PLCPAlarmState OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                          noAlarm (1),\n                          receivedFarEndAlarm\
    \ (2),\n                          incomingLOF (3)\n                      }\n \
    \             ACCESS  read-only\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"This variable indicates if there is an\
    \ alarm\n                      present for the DS1 PLCP.  The value\n        \
    \              receivedFarEndAlarm means that the DS1 PLCP has\n             \
    \         received an incoming Yellow Signal, the value\n                    \
    \  incomingLOF means that the DS1 PLCP has declared a\n                      loss\
    \ of frame (LOF) failure condition, and the\n                      value noAlarm\
    \ means that there are no alarms\n                      present.  See TR-TSV-000773\
    \ for a description of\n                      alarm states.\"\n              ::=\
    \ { sipDS1PLCPEntry 3 }\n          sipDS1PLCPUASs OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The counter associated with\
    \ the number of\n                      Unavailable Seconds, as defined by TR-TSV-000773,\n\
    \                      encountered by the PLCP.\"\n              ::= { sipDS1PLCPEntry\
    \ 4 }\n          -- The SIP DS3 PLCP group\n          -- Implementation of this\
    \ group is mandatory\n          -- if the DS3 PLCP is implemented.\n         \
    \ sipDS3PLCPTable  OBJECT-TYPE\n              SYNTAX  SEQUENCE OF SipDS3PLCPEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"This table contains SIP DS3 PLCP\
    \ parameters and\n                      state variables, one entry per SIP port.\"\
    \n              ::= { sipPLCP 2 }\n          sipDS3PLCPEntry  OBJECT-TYPE\n  \
    \            SYNTAX  SipDS3PLCPEntry\n              ACCESS  not-accessible\n \
    \             STATUS  mandatory\n              DESCRIPTION\n                 \
    \     \"This list contains SIP DS3 PLCP parameters and\n                     \
    \ state variables.\"\n              INDEX   { sipDS3PLCPIndex }\n            \
    \  ::= { sipDS3PLCPTable 1 }\n          SipDS3PLCPEntry  ::= SEQUENCE {\n    \
    \          sipDS3PLCPIndex\n                  INTEGER,\n              sipDS3PLCPSEFSs\n\
    \                  Counter,\n              sipDS3PLCPAlarmState\n            \
    \      INTEGER,\n              sipDS3PLCPUASs\n                  Counter\n   \
    \           }\n          sipDS3PLCPIndex  OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ (1..65535)\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The value of this object identifies\
    \ the SIP port\n                      interface for which this entry contains\
    \ management\n                      information.  The value of this object for\
    \ a\n                      particular interface has the same value as the\n  \
    \                    ifIndex object, defined in RFC 1156 and RFC 1213,\n     \
    \                 for the same interface.\"\n              ::= { sipDS3PLCPEntry\
    \ 1 }\n          sipDS3PLCPSEFSs OBJECT-TYPE\n              SYNTAX  Counter\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"A DS3 Severely Errored Framing Second\
    \ (SEFS) is a\n                      count of one-second intervals containing\
    \ one or\n                      more SEF events.  A Severely Errored Framing (SEF)\n\
    \                      event is declared when an error in the A1 octet\n     \
    \                 and an error in the A2 octet of a framing octet\n          \
    \            pair (i.e., errors in both framing octets), or two\n            \
    \          consecutive invalid and/or nonsequential Path\n                   \
    \   Overhead Identifier octets are detected.\"\n              ::= { sipDS3PLCPEntry\
    \ 2 }\n          sipDS3PLCPAlarmState OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                          noAlarm (1),\n                          receivedFarEndAlarm\
    \ (2),\n                          incomingLOF (3)\n                      }\n \
    \             ACCESS  read-only\n              STATUS  mandatory\n           \
    \   DESCRIPTION\n                      \"This variable indicates if there is an\
    \ alarm\n                      present for the DS3 PLCP.  The value\n        \
    \              receivedFarEndAlarm means that the DS3 PLCP has\n             \
    \         received an incoming Yellow Signal, the value\n                    \
    \  incomingLOF means that the DS3 PLCP has declared a\n                      loss\
    \ of frame (LOF) failure condition, and the\n                      value noAlarm\
    \ means that there are no alarms\n                      present.  See TR-TSV-000773\
    \ for a description of\n                      alarm states.\"\n              ::=\
    \ { sipDS3PLCPEntry 3 }\n          sipDS3PLCPUASs OBJECT-TYPE\n              SYNTAX\
    \  Counter\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The counter associated with\
    \ the number of\n                      Unavailable Seconds, as defined by TR-TSV-000773,\n\
    \                      encountered by the PLCP.\"\n              ::= { sipDS3PLCPEntry\
    \ 4 }\n          -- The SMDS Applications group\n          -- Applications that\
    \ have been identified for this group are:\n          --          * IP-over-SMDS\
    \ (details are specified in RFC 1209)\n          -- Implementation of this group\
    \ is mandatory for systems\n          -- that implement IP-over-SMDS Interface\
    \ Protocol.\n          smdsApplications OBJECT IDENTIFIER ::= { sip 4 }\n    \
    \      ipOverSMDS OBJECT IDENTIFIER ::= { smdsApplications 1 }\n          -- Although\
    \ the objects in this group are read-only, at the\n          -- agent's discretion\
    \ they may be made read-write so that the\n          -- management station, when\
    \ appropriately authorized, may\n          -- change the addressing information\
    \ related to the\n          -- configuration of a logical IP subnetwork implemented\
    \ on\n          -- top of SMDS.\n          -- This table is necessary to support\
    \ RFC1209 (IP-over-SMDS)\n          -- and gives information on the Group Addresses\
    \ and ARP\n          -- Addresses used in the Logical IP subnetwork.\n       \
    \   -- One SMDS address may be associated with multiple IP\n          -- addresses.\
    \  One SNI may be associated with multiple LISs.\n          ipOverSMDSTable OBJECT-TYPE\n\
    \              SYNTAX  SEQUENCE OF IpOverSMDSEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The table of addressing information relevant to\n                   \
    \   this entity's IP addresses.\"\n              ::= { ipOverSMDS 1 }\n      \
    \    ipOverSMDSEntry OBJECT-TYPE\n              SYNTAX  IpOverSMDSEntry\n    \
    \          ACCESS  not-accessible\n              STATUS  mandatory\n         \
    \     DESCRIPTION\n                      \"The addressing information for one\
    \ of this\n                      entity's IP addresses.\"\n              INDEX\
    \   { ipOverSMDSIndex, ipOverSMDSAddress }\n              ::= { ipOverSMDSTable\
    \ 1 }\n          IpOverSMDSEntry ::=\n              SEQUENCE {\n             \
    \    ipOverSMDSIndex\n                     INTEGER,\n                 ipOverSMDSAddress\n\
    \                     IpAddress,\n                 ipOverSMDSHA\n            \
    \         SMDSAddress,\n                 ipOverSMDSLISGA\n                   \
    \  SMDSAddress,\n                 ipOverSMDSARPReq\n                     SMDSAddress\n\
    \                 }\n          ipOverSMDSIndex OBJECT-TYPE\n              SYNTAX\
    \  INTEGER (1..65535)\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The value of this\
    \ object identifies the SIP port\n                      interface for which this\
    \ entry contains management\n                      information.  The value of\
    \ this object for a\n                      particular interface has the same value\
    \ as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n\
    \                      for the same interface.\"\n              ::= { ipOverSMDSEntry\
    \ 1 }\n          ipOverSMDSAddress OBJECT-TYPE\n               SYNTAX  IpAddress\n\
    \               ACCESS  read-only\n               STATUS  mandatory\n        \
    \       DESCRIPTION\n                      \"The IP address to which this entry's\
    \ addressing\n                      information pertains.\"\n              ::=\
    \ { ipOverSMDSEntry 2 }\n          ipOverSMDSHA OBJECT-TYPE\n              SYNTAX\
    \  SMDSAddress\n              ACCESS  read-only\n              STATUS  mandatory\n\
    \              DESCRIPTION\n                      \"The SMDS Individual address\
    \ of the IP station.\"\n              ::= { ipOverSMDSEntry 3 }\n          ipOverSMDSLISGA\
    \ OBJECT-TYPE\n              SYNTAX  SMDSAddress\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"The SMDS Group Address that has been configured\n                   \
    \   to identify the SMDS Subscriber-Network Interfaces\n                     \
    \ (SNIs) of all members of the Logical IP Subnetwork\n                      (LIS)\
    \ connected to the network supporting SMDS.\"\n              ::= { ipOverSMDSEntry\
    \ 4 }\n          ipOverSMDSARPReq OBJECT-TYPE\n              SYNTAX  SMDSAddress\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The SMDS address (individual or group)\
    \ to which\n                      ARP Requests are to be sent.\"\n           \
    \   ::= { ipOverSMDSEntry 5 }\n          -- The SMDS Carrier Selection group\n\
    \          -- This group is used as a place holder\n          -- for carrier selection\
    \ objects.\n          smdsCarrierSelection OBJECT IDENTIFIER ::= { sip 5}\n  \
    \        -- The SIP Error Log\n          -- Implementation of this group is mandatory\n\
    \          -- for all systems that implement SIP Level 3.\n          sipErrorLog\
    \ OBJECT IDENTIFIER ::= { sip 6 }\n          sipL3PDUErrorTable OBJECT-TYPE\n\
    \              SYNTAX  SEQUENCE OF SipL3PDUErrorEntry\n              ACCESS  not-accessible\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A table that contains the latest occurrence of\n                    \
    \  the following syntactical SIP L3PDU errors:\n                      - Destination\
    \ Address Field Format Error,\n                      The following pertains to\
    \ the 60 least significant\n                      bits of the 64 bit address field.\
    \  The 60 bits\n                      contained in the address subfield can be\
    \ used to\n                      represent addresses up to 15 decimal digits.\
    \  Each\n                      decimal digit shall be encoded into four bits\n\
    \                      using Binary Coded Decimal (BCD), with the most\n     \
    \                 significant digit occurring left-most.  If not all\n       \
    \               15 digits are required, then the remainder of this\n         \
    \             field shall be padded on the right with bits set\n             \
    \         to one.  An error is considered to have occurred:\n                \
    \      a).  if the first four bits of the address\n                      subfield\
    \ are not BCD, OR b).  if the first four\n                      bits of the address\
    \ subfield are populated with\n                      the country code value 0001,\
    \ AND the 40 bits which\n                      follow are not Binary Coded Decimal\
    \ (BCD) encoded\n                      values of the 10 digit addresses, OR the\
    \ remaining\n                      16 least significant bits are not populated\
    \ with\n                      1's, OR c).  if the address subfield is not\n  \
    \                    correct according to another numbering plan which\n     \
    \                 is dependent upon the carrier assigning the\n              \
    \        numbers and offering SMDS.\n                      - Source Address Field\
    \ Format Error,\n                      The description of this parameter is the\
    \ same as\n                      the description of the Destination Address Field\n\
    \                      Format Error.\n                      - Invalid BAsize Field\
    \ Value,\n                      An error is considered to have occurred when the\n\
    \                      BAsize field of an SIP L3PDU contains a value less\n  \
    \                    that 32, greater than 9220 octets without the\n         \
    \             CRC32 field present, greater than 9224 octets with\n           \
    \           the CRC32 field present, or not equal to a\n                     \
    \ multiple of 4 octets,\n                      - Invalid Header Extension Length\
    \ Field Value,\n                      An error is considered to have occurred\
    \ when the\n                      Header Extension Length field value is not equal\n\
    \                      3.\n                      - Invalid Header Extension -\
    \ Element Length,\n                      An error is considered to have occurred\
    \ when the\n                      Header Extension - Element Length is greater\
    \ than\n                      12.\n                      - Invalid Header Extension\
    \ - Version Element\n                      Position, Length, or Value,\n     \
    \                 An error is considered to have occurred when a\n           \
    \           Version element with Length=3, Type=0, and Value=1\n             \
    \         does not appear first within the Header Extension,\n               \
    \       or an element Type=0 appears somewhere other than\n                  \
    \    within the first three octets in the Header\n                      Extension.\n\
    \                      - Invalid Header Extension - Carrier Selection\n      \
    \                Element Position, Length, Value or Format,\n                \
    \      An error is considered to have occurred when a\n                      Carrier\
    \ Selection element does not appear second\n                      within the Header\
    \ Extension, if the Element Type\n                      does not equal 1, the\
    \ Element Length does not\n                      equal 4, 6, or 8, the Element\
    \ Value field is not\n                      four BCD encoded decimal digits used\
    \ in specifying\n                      the Carrier Identification Code (CIC),\
    \ or the\n                      identified CIC code is invalid.\n            \
    \          - Header Extension PAD Error\n                      An error is considered\
    \ to have occurred when the\n                      Header Extension PAD is 9 octets\
    \ in length, or if\n                      the Header Extension PAD is greater\
    \ than zero\n                      octets in length and the Header Extension PAD\
    \ does\n                      not follow all Header Extension elements or does\n\
    \                      not begin with at least one octet of all zeros.\n     \
    \                 - BEtag Mismatch Error,\n                      An error is considered\
    \ to have occurred when the\n                      Beginning-End Tags in the SIP\
    \ L3PDU header and\n                      trailer are not equal.\n           \
    \           - BAsize Field not equal to Length Field Error,\n                \
    \      An error is considered to have occurred when the\n                    \
    \  value of the BAsize Field does not equal the value\n                      of\
    \ the Length Field.\n                      - Incorrect Length Error, and\n   \
    \                   An error is considered to have occurred when the\n       \
    \               the Length field value is not equal to the portion\n         \
    \             of the SIP L3PDU which extends from the\n                      Destination\
    \ Address field up to and including the\n                      CRC32 field (if\
    \ present) or up to and including\n                      the PAD field (if the\
    \ CRC32 field is not present).\n                      As an optional check, an\
    \ error is considered to\n                      have occurred when the length\
    \ of a partially\n                      received SIP L3PDU exceeds the BAsize\
    \ value.\n                      - MRI Timeout Error.\n                      An\
    \ error is considered to have occurred when the\n                      elapsed\
    \ time between receipt of BOM and\n                      corresponding EOM exceeds\
    \ the value of the MRI\n                      (Message Receive Interval) for a\
    \ particular\n                      transport signal format.\n               \
    \       An entry is indexed by interface number and error\n                  \
    \    type, and contains Source Address, Destination\n                      Address\
    \ and a timestamp. All these errors are\n                      counted in the\
    \ sipL3Errors counter.  When\n                      sipL3PDUErrorTimeStamp is\
    \ equal to zero, the\n                      SipL3PDUErrorEntry does not contain\
    \ any valid\n                      information.\"\n              ::= { sipErrorLog\
    \ 1 }\n          sipL3PDUErrorEntry  OBJECT-TYPE\n              SYNTAX SipL3PDUErrorEntry\n\
    \              ACCESS  not-accessible\n              STATUS  mandatory\n     \
    \         DESCRIPTION\n                      \"An entry in the service disagreement\
    \ table.\"\n              INDEX   { sipL3PDUErrorIndex, sipL3PDUErrorType }\n\
    \              ::= { sipL3PDUErrorTable 1 }\n          SipL3PDUErrorEntry ::=\
    \ SEQUENCE {\n              sipL3PDUErrorIndex\n                  INTEGER,\n \
    \             sipL3PDUErrorType\n                  INTEGER,\n              sipL3PDUErrorSA\n\
    \                  SMDSAddress,\n              sipL3PDUErrorDA\n             \
    \     SMDSAddress,\n              sipL3PDUErrorTimeStamp\n                  TimeTicks\n\
    \              }\n          sipL3PDUErrorIndex OBJECT-TYPE\n              SYNTAX\
    \  INTEGER (1..65535)\n              ACCESS  read-only\n              STATUS \
    \ mandatory\n              DESCRIPTION\n                      \"The value of this\
    \ object identifies the SIP port\n                      interface for which this\
    \ entry contains management\n                      information.   The value of\
    \ this object for a\n                      particular interface has the same value\
    \ as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n\
    \                      for the same interface.\"\n              ::= { sipL3PDUErrorEntry\
    \ 1 }\n          sipL3PDUErrorType OBJECT-TYPE\n              SYNTAX  INTEGER\
    \ {\n                   erroredDAFieldFormat (1),\n                   erroredSAFieldFormat\
    \ (2),\n                   invalidBAsizeFieldValue (3),\n                   invalidHdrExtLength\
    \ (4),\n                   invalidHdrExtElementLength (5),\n                 \
    \  invalidHdrExtVersionElementPositionLenthOrValue (6),\n           invalidHdrExtCarSelectElementPositionLenghtValueOrFormat\
    \ (7),\n                   hePADError (8),\n                   beTagMismatch (9),\n\
    \                   baSizeFieldNotEqualToLengthField (10),\n                 \
    \  incorrectLength (11),\n                   mriTimeout (12)\n              }\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The type of error.\"\n             \
    \ ::= { sipL3PDUErrorEntry 2 }\n          sipL3PDUErrorSA OBJECT-TYPE\n      \
    \        SYNTAX  SMDSAddress\n              ACCESS  read-only\n              STATUS\
    \  mandatory\n              DESCRIPTION\n                      \"A rejected SMDS\
    \ source address.\"\n              ::= { sipL3PDUErrorEntry 3 }\n          sipL3PDUErrorDA\
    \ OBJECT-TYPE\n              SYNTAX  SMDSAddress\n              ACCESS  read-only\n\
    \              STATUS  mandatory\n              DESCRIPTION\n                \
    \      \"A rejected SMDS destination address.\"\n              ::= { sipL3PDUErrorEntry\
    \ 4 }\n          sipL3PDUErrorTimeStamp OBJECT-TYPE\n              SYNTAX  TimeTicks\n\
    \              ACCESS  read-only\n              STATUS  mandatory\n          \
    \    DESCRIPTION\n                      \"The timestamp for the service disagreement.\
    \  The\n                      timestamp contains the value of sysUpTime at the\n\
    \                      latest occurrence of this type of service\n           \
    \           disagreement.  See textual description under\n                   \
    \   sipL3PDUErrorTable for boundary conditions.\"\n              ::= { sipL3PDUErrorEntry\
    \ 5 }\n          END\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   This document was produced by the SNMP Working Group.\
    \  In addition,\n   the comments of the following individuals are also acknowledged:\
    \ Ted\n   Brunner, Jeff Case, Tracy Cox, Sherri Hiller, Steve Jaffe, Deirdre\n\
    \   Kostick, Dave Piscitello, and Ron Reuss.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1]  Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n        Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2]  Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n \
    \       Group\", RFC 1109, NRI, August 1989.\n   [3]  Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n        Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n        Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4]  McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n        Network Management of TCP/IP-based internets\", RFC 1156,\
    \ Hughes\n        LAN Systems, Performance Systems International, May 1990.\n\
    \   [5]  Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n      \
    \  Network Management Protocol\", RFC 1157, SNMP Research,\n        Performance\
    \ Systems International, Performance Systems\n        International, MIT Laboratory\
    \ for Computer Science, May 1990.\n   [6]  McCloghrie K., and M. Rose, Editors,\
    \ \"Management Information\n        Base for Network Management of TCP/IP-based\
    \ internets\", RFC\n        1213, Performance Systems International, March 1991.\n\
    \   [7]  Information processing systems - Open Systems Interconnection -\n   \
    \     Specification of Abstract Syntax Notation One (ASN.1),\n        International\
    \ Organization for Standardization, International\n        Standard 8824, December\
    \ 1987.\n   [8]  Information processing systems - Open Systems Interconnection\
    \ -\n        Specification of Basic Encoding Rules for Abstract Notation One\n\
    \        (ASN.1), International Organization for Standardization,\n        International\
    \ Standard 8825, December 1987.\n   [9]  Rose, M., and K. McCloghrie, Editors,\
    \ \"Concise MIB Definitions\",\n        RFC 1212, Performance Systems International,\
    \ Hughes LAN Systems,\n        March 1991.\n  [10]  Rose, M., Editor, \"A Convention\
    \ for Defining Traps for use with\n        the SNMP\", RFC 1215, Performance Systems\
    \ International, March\n        1991.\n  [11]  \"Generic System Requirements in\
    \ Support of Switched Multi-\n        megabit Data Service\", Bellcore Technical\
    \ Reference, TR-TSV-\n        000772, Issue 1, May 1991.\n  [12]  \"Local Access\
    \ System Generic Requirements, Objectives, and\n        Interfaces in Support\
    \ of Switched Multi-megabit Data Service\",\n        Bellcore Technical Reference,\
    \ TR-TSV-000773, Issue 1, June 1990.\n  [13]  Baker F., and C. Kolb, Editors,\
    \ \"Definitions of Managed Objects\n        for the DS1 Interface Type\", RFC\
    \ 1232, ACC, Performance Systems\n        International, Inc., May 1991.\n  [14]\
    \  Cox, T., and K. Tesink, Editors, \"Definitions of Managed Objects\n       \
    \ for the DS3 Interface Type\", RFC 1233, Bell Communications\n        Research,\
    \ May 1991.\n  [15]  Piscitello, D., and J. Lawrence, Editors, The Transmission\
    \ of IP\n        Datagrams over the SMDS Service\", RFC 1209, Bell Communications\n\
    \        Research, March 1991.\n  [16]  \"Generic Requirements For SMDS Customer\
    \ Network Management\n        Service\", TA-TSV-001062, Issue 1, February 1991,\
    \ and Supplement\n        1, April 1991.\n  [17]  Reynolds, J., \"Reassignment\
    \ of Experimental MIBs to Standard\n        MIBs\", RFC 1239, USC/Information\
    \ Sciences Institute, June 1991.\n  [18]  Tesink, K., \"Definitions of Managed\
    \ Objects for SMDS\n        Subscription\", Version 1.0, Bellcore, March 1991.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Tracy A. Cox\n   Bell Communications Research\n  \
    \ 331 Newman Springs Road\n   Red Bank, NJ  07701\n   Phone: (908) 758-2107\n\
    \   EMail: tacox@sabre.bellcore.com\n   Kaj Tesink\n   Bell Communications Research\n\
    \   331 Newman Springs Road\n   Red Bank, NJ  07701\n   Phone: (908) 758-5254\n\
    \   EMail: kaj@nvuxr.cc.bellcore.com\n"
