- title: __initial_text__
  contents:
  - "             Framework for Generalized Multi-Protocol Label\n         Switching\
    \ (GMPLS)-based Control of Synchronous Digital\n     Hierarchy/Synchronous Optical\
    \ Networking (SDH/SONET) Networks\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   Generalized Multi-Protocol Label Switching (GMPLS) is a suite of\n\
    \   protocol extensions to MPLS to make it generally applicable, to\n   include,\
    \ for example, control of non packet-based switching, and\n   particularly, optical\
    \ switching.  One consideration is to use GMPLS\n   protocols to upgrade the control\
    \ plane of optical transport networks.\n   This document illustrates this process\
    \ by describing those extensions\n   to GMPLS protocols that are aimed at controlling\
    \ Synchronous Digital\n   Hierarchy (SDH) or Synchronous Optical Networking (SONET)\
    \ networks.\n   SDH/SONET networks make good examples of this process for a variety\n\
    \   of reasons.  This document highlights extensions to GMPLS-related\n   routing\
    \ protocols to disseminate information needed in transport path\n   computation\
    \ and network operations, together with (G)MPLS protocol\n   extensions required\
    \ for the provisioning of transport circuits.  New\n   capabilities that an GMPLS\
    \ control plane would bring to SDH/SONET\n   networks, such as new restoration\
    \ methods and multi-layer circuit\n   establishment, are also discussed.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. MPLS Overview ..............................................3\n  \
    \    1.2. SDH/SONET Overview .........................................5\n    \
    \  1.3. The Current State of Circuit Establishment in\n           SDH/SONET Networks\
    \ .........................................7\n           1.3.1. Administrative\
    \ Tasks ................................8\n           1.3.2. Manual Operations\
    \ ...................................8\n           1.3.3. Planning Tool Operation\
    \ .............................8\n           1.3.4. Circuit Provisioning ................................8\n\
    \      1.4. Centralized Approach versus Distributed Approach ...........9\n  \
    \         1.4.1. Topology Discovery and Resource Dissemination ......10\n    \
    \       1.4.2. Path Computation (Route Determination) .............10\n      \
    \     1.4.3. Connection Establishment (Provisioning) ............10\n      1.5.\
    \ Why SDH/SONET Will Not Disappear Tomorrow .................12\n   2. GMPLS Applied\
    \ to SDH/SONET .....................................13\n      2.1. Controlling\
    \ the SDH/SONET Multiplex .......................13\n      2.2. SDH/SONET LSR\
    \ and LSP Terminology .........................14\n   3. Decomposition of the\
    \ GMPLS Circuit-Switching Problem Space .....14\n   4. GMPLS Routing for SDH/SONET\
    \ ....................................15\n      4.1. Switching Capabilities ....................................16\n\
    \           4.1.1. Switching Granularity ..............................16\n  \
    \         4.1.2. Signal Concatenation Capabilities ..................17\n    \
    \       4.1.3. SDH/SONET Transparency .............................19\n      4.2.\
    \ Protection ................................................20\n      4.3. Available\
    \ Capacity Advertisement ..........................23\n      4.4. Path Computation\
    \ ..........................................24\n   5. LSP Provisioning/Signaling\
    \ for SDH/SONET .......................25\n      5.1. What Do We Label in SDH/SONET?\
    \  Frames or Circuits? .......25\n      5.2. Label Structure in SDH/SONET ..............................26\n\
    \      5.3. Signaling Elements ........................................27\n  \
    \ 6. Summary and Conclusions ........................................29\n   7.\
    \ Security Considerations ........................................29\n   8. Acknowledgements\
    \ ...............................................30\n   9. Informative References\
    \ .........................................31\n   10. Acronyms ......................................................33\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The CCAMP Working Group of the IETF has the goal of extending\
    \ MPLS\n   [1] protocols to support multiple network layers and new services.\n\
    \   This extended MPLS, which was initially known as Multi-Protocol\n   Lambda\
    \ Switching, is now better referred to as Generalized MPLS (or\n   GMPLS).\n \
    \  The GMPLS effort is, in effect, extending IP/MPLS technology to\n   control\
    \ and manage lower layers.  Using the same framework and\n   similar signaling\
    \ and routing protocols to control multiple layers\n   can not only reduce the\
    \ overall complexity of designing, deploying,\n   and maintaining networks, but\
    \ can also make it possible to operate\n   two contiguous layers by using either\
    \ an overlay model, a peer model,\n   or an integrated model.  The benefits of\
    \ using a peer or an overlay\n   model between the IP layer and its underlying\
    \ layer(s) will have to\n   be clarified and evaluated in the future.  In the\
    \ mean time, GMPLS\n   could be used for controlling each layer independently.\n\
    \   The goal of this work is to highlight how GMPLS could be used to\n   dynamically\
    \ establish, maintain, and tear down SDH/SONET circuits.\n   The objective of\
    \ using these extended IP/MPLS protocols is to provide\n   at least the same kinds\
    \ of SDH/SONET services as are provided today,\n   but using signaling instead\
    \ of provisioning via centralized\n   management to establish those services.\
    \  This will allow operators to\n   propose new services, and will allow clients\
    \ to create SDH/SONET\n   paths on-demand, in real-time, through the provider\
    \ network.  We\n   first review the essential properties of SDH/SONET networks\
    \ and their\n   operations, and we show how the label concept in GMPLS can be\n\
    \   extended to the SDH/SONET case.  We then look at important\n   information\
    \ to be disseminated by a link state routing protocol and\n   look at the important\
    \ signal attributes that need to be conveyed by a\n   label distribution protocol.\
    \  Finally, we look at some outstanding\n   issues and future possibilities.\n"
- title: 1.1.  MPLS Overview
  contents:
  - "1.1.  MPLS Overview\n   A major advantage of the MPLS architecture [1] for use\
    \ as a general\n   network control plane is its clear separation between the forwarding\n\
    \   (or data) plane, the signaling (or connection control) plane, and the\n  \
    \ routing (or topology discovery/resource status) plane.  This allows\n   the\
    \ work on MPLS extensions to focus on the forwarding and signaling\n   planes,\
    \ while allowing well-known IP routing protocols to be reused\n   in the routing\
    \ plane.  This clear separation also allows for MPLS to\n   be used to control\
    \ networks that do not have a packet-based\n   forwarding plane.\n   An MPLS network\
    \ consists of MPLS nodes called Label Switch Routers\n   (LSRs) connected via\
    \ Label Switched Paths (LSPs).  An LSP is uni-\n   directional and could be of\
    \ several different types such as point-\n   to-point, point-to-multipoint, and\
    \ multipoint-to-point.  Border LSRs\n   in an MPLS network act as either ingress\
    \ or egress LSRs, depending on\n   the direction of the traffic being forwarded.\n\
    \   Each LSP is associated with a Forwarding Equivalence Class (FEC),\n   which\
    \ may be thought of as a set of packets that receive identical\n   forwarding\
    \ treatment at an LSR.  The simplest example of an FEC might\n   be the set of\
    \ destination addresses lying in a given address range.\n   All packets that have\
    \ a destination address lying within this address\n   range are forwarded identically\
    \ at each LSR configured with that FEC.\n   To establish an LSP, a signaling protocol\
    \ (or label distribution\n   protocol) such as LDP or RSVP-TE is required.  Between\
    \ two adjacent\n   LSRs, an LSP is locally identified by a fixed length identifier\n\
    \   called a label, which is only significant between those two LSRs.  A\n   signaling\
    \ protocol is used for inter-node communication to assign and\n   maintain these\
    \ labels.\n   When a packet enters an MPLS-based packet network, it is classified\n\
    \   according to its FEC and, possibly, additional rules, which together\n   determine\
    \ the LSP along which the packet must be sent.  For this\n   purpose, the ingress\
    \ LSR attaches an appropriate label to the packet,\n   and forwards the packet\
    \ to the next hop.  The label may be attached\n   to a packet in different ways.\
    \  For example, it may be in the form of\n   a header encapsulating the packet\
    \ (the \"shim\" header) or it may be\n   written in the VPI/VCI field (or DLCI\
    \ field) of the layer 2\n   encapsulation of the packet.  In case of SDH/SONET\
    \ networks, we will\n   see that a label is simply associated with a segment of\
    \ a circuit,\n   and is mainly used in the signaling plane to identify this segment\n\
    \   (e.g., a time-slot) between two adjacent nodes.\n   When a packet reaches\
    \ a packet LSR, this LSR uses the label as an\n   index into a forwarding table\
    \ to determine the next hop and the\n   corresponding outgoing label (and, possibly,\
    \ the QoS treatment to be\n   given to the packet), writes the new label into\
    \ the packet, and\n   forwards the packet to the next hop.  When the packet reaches\
    \ the\n   egress LSR, the label is removed and the packet is forwarded using\n\
    \   appropriate forwarding, such as normal IP forwarding.  We will see\n   that\
    \ for an SDH/SONET network these operations do not occur in quite\n   the same\
    \ way.\n"
- title: 1.2.  SDH/SONET Overview
  contents:
  - "1.2.  SDH/SONET Overview\n   There are currently two different multiplexing technologies\
    \ in use in\n   optical networks: wavelength-division multiplexing (WDM) and time\n\
    \   division multiplexing (TDM).  This work focuses on TDM technology.\n   SDH\
    \ and SONET are two TDM standards widely used by operators to\n   transport and\
    \ multiplex different tributary signals over optical\n   links, thus creating\
    \ a multiplexing structure, which we call the\n   SDH/SONET multiplex.\n   ITU-T\
    \ (G.707) [2] includes both the European Telecommunications\n   Standards Institute\
    \ (ETSI) SDH hierarchy and the USA ANSI SONET\n   hierarchy [3].  The ETSI SDH\
    \ and SONET standards regarding frame\n   structures and higher-order multiplexing\
    \ are the same.  There are\n   some regional differences in terminology, on the\
    \ use of some overhead\n   bytes, and lower-order multiplexing.  Interworking\
    \ between the two\n   lower-order hierarchies is possible using gateways.\n  \
    \ The fundamental signal in SDH is the STM-1 that operates at a rate of\n   about\
    \ 155 Mbps, while the fundamental signal in SONET is the STS-1\n   that operates\
    \ at a rate of about 51 Mbps.  These two signals are made\n   of contiguous frames\
    \ that consist of transport overhead (header) and\n   payload.  To solve synchronization\
    \ issues, the actual data is not\n   transported directly in the payload, but\
    \ rather in another internal\n   frame that is allowed to float over two successive\
    \ SDH/SONET\n   payloads.  This internal frame is named a Virtual Container (VC)\
    \ in\n   SDH and a SONET Payload Envelope (SPE) in SONET.\n   The SDH/SONET architecture\
    \ identifies three different layers, each of\n   which corresponds to one level\
    \ of communication between SDH/SONET\n   equipment.  These are, starting with\
    \ the lowest, the regenerator\n   section/section layer, the multiplex section/line\
    \ layer, and (at the\n   top) the path layer.  Each of these layers, in turn,\
    \ has its own\n   overhead (header).  The transport overhead of an SDH/SONET frame\
    \ is\n   mainly sub-divided in two parts that contain the regenerator\n   section/section\
    \ overhead and the multiplex section/line overhead.  In\n   addition, a pointer\
    \ (in the form of the H1, H2, and H3 bytes)\n   indicates the beginning of the\
    \ VC/SPE in the payload of the overall\n   STM/STS frame.\n   The VC/SPE itself\
    \ is made up of a header (the path overhead) and a\n   payload.  This payload\
    \ can be further subdivided into sub-elements\n   (signals) in a fairly complex\
    \ way.  In the case of SDH, the STM-1\n   frame may contain either one VC-4 or\
    \ three multiplexed VC-3s.  The\n   SONET multiplex is a pure tree, while the\
    \ SDH multiplex is not a pure\n   tree, since it contains a node that can be attached\
    \ to two parent\n   nodes.  The structure of the SDH/SONET multiplex is shown\
    \ in Figure\n   1.  In addition, we show reference points in this figure that\
    \ are\n   explained in later sections.\n   The leaves of these multiplex structures\
    \ are time slots (positions)\n   of different sizes that can contain tributary\
    \ signals.  These\n   tributary signals (e.g., E1, E3, etc) are mapped into the\
    \ leaves\n   using standardized mapping rules.  In general, a tributary signal\n\
    \   does not fill a time slot completely, and the mapping rules define\n   precisely\
    \ how to fill it.\n   What is important for the GMPLS-based control of SDH/SONET\
    \ circuits\n   is to identify the elements that can be switched from an input\n\
    \   multiplex on one interface to an output multiplex on another\n   interface.\
    \  The only elements that can be switched are those that can\n   be re-aligned\
    \ via a pointer, i.e., a VC-x in the case of SDH and a\n   SPE in the case of\
    \ SONET.\n             xN       x1\n   STM-N<----AUG<----AU-4<--VC4<------------------------------C-4\
    \  E4\n              ^              ^\n              Ix3            Ix3\n    \
    \          I              I           x1\n              I              -----TUG-3<----TU-3<---VC-3<---I\n\
    \              I                      ^                       C-3 DS3/E3\n   STM-0<------------AU-3<---VC-3<--\
    \ I ---------------------I\n                              ^      I\n         \
    \                     Ix7    Ix7\n                              I      I    x1\n\
    \                              -----TUG-2<---TU-2<---VC-2<---C-2 DS2/T2\n    \
    \                               ^  ^\n                                   I  I\
    \   x3\n                                   I  I----TU-12<---VC-12<--C-12 E1\n\
    \                                   I\n                                   I  \
    \    x4\n                                   I-------TU-11<---VC-11<--C-11 DS1/T1\n\
    \               xN\n      STS-N<-------------------SPE<------------------------------DS3/T3\n\
    \                                ^\n                                Ix7\n    \
    \                            I            x1\n                               \
    \ I---VT-Group<---VT-6<----SPE DS2/T2\n                                    ^ \
    \ ^  ^\n                                    I  I  I  x2\n                    \
    \                I  I  I-----VT-3<----SPE DS1C\n                             \
    \       I  I\n                                    I  I     x3\n              \
    \                      I  I--------VT-2<----SPE E1\n                         \
    \           I\n                                    I        x4\n             \
    \                       I-----------VT-1.5<--SPE DS1/T1\n   Figure 1.  SDH and\
    \ SONET multiplexing structure and typical\n   Plesiochronous Digital Hierarchy\
    \ (PDH) payload signals.\n   An STM-N/STS-N signal is formed from N x STM-1/STS-1\
    \ signals via byte\n   interleaving.  The VCs/SPEs in the N interleaved frames\
    \ are\n   independent and float according to their own clocking.  To transport\n\
    \   tributary signals in excess of the basic STM-1/STS-1 signal rates,\n   the\
    \ VCs/SPEs can be concatenated, i.e., glued together.  In this\n   case, their\
    \ relationship with respect to each other is fixed in time;\n   hence, this relieves,\
    \ when possible, an end system of any inverse\n   multiplexing bonding processes.\
    \  Different types of concatenations\n   are defined in SDH/SONET.\n   For example,\
    \ standard SONET concatenation allows the concatenation of\n   M x STS-1 signals\
    \ within an STS-N signal with M <= N, and M = 3, 12,\n   48, 192, .... The SPEs\
    \ of these M x STS-1s can be concatenated to\n   form an STS-Mc.  The STS-Mc notation\
    \ is short hand for describing an\n   STS-M signal whose SPEs have been concatenated.\n"
- title: 1.3.  The Current State of Circuit Establishment in SDH/SONET Networks
  contents:
  - "1.3.  The Current State of Circuit Establishment in SDH/SONET Networks\n   In\
    \ present day SDH and SONET networks, the networks are primarily\n   statically\
    \ configured.  When a client of an operator requests a\n   point-to-point circuit,\
    \ the request sets in motion a process that can\n   last for several weeks or\
    \ more.  This process is composed of a chain\n   of shorter administrative and\
    \ technical tasks, some of which can be\n   fully automated, resulting in significant\
    \ improvements in\n   provisioning time and in operational savings.  In the best\
    \ case, the\n   entire process can be fully automated allowing, for example, customer\n\
    \   premise equipment (CPE) to contact an SDH/SONET switch to request a\n   circuit.\
    \  Currently, the provisioning process involves the following\n   tasks.\n"
- title: 1.3.1.  Administrative Tasks
  contents:
  - "1.3.1.  Administrative Tasks\n   The administrative tasks represent a significant\
    \ part of the\n   provisioning time.  Most of them can be automated using IT\n\
    \   applications, e.g., a client still has to fill a form to request a\n   circuit.\
    \  This form can be filled via a Web-based application and can\n   be automatically\
    \ processed by the operator.  A further enhancement is\n   to allow the client's\
    \ equipment to coordinate with the operator's\n   network directly and request\
    \ the desired circuit.  This could be\n   achieved through a signaling protocol\
    \ at the interface between the\n   client equipment and an operator switch, i.e.,\
    \ at the UNI, where\n   GMPLS signaling [4], [5] can be used.\n"
- title: 1.3.2.  Manual Operations
  contents:
  - "1.3.2.  Manual Operations\n   Another significant part of the time may be consumed\
    \ by manual\n   operations that involve installing the right interface in the\
    \ CPE and\n   installing the right cable or fiber between the CPE and the operator\n\
    \   switch.  This time can be especially significant when a client is in\n   a\
    \ different time zone than the operator's main office.  This first-\n   time connection\
    \ time is frequently accounted for in the overall\n   establishment time.\n"
- title: 1.3.3.  Planning Tool Operation
  contents:
  - "1.3.3.  Planning Tool Operation\n   Another portion of the time is consumed by\
    \ planning tools that run\n   simulations using heuristic algorithms to find an\
    \ optimized placement\n   for the required circuits.  These planning tools can\
    \ require a\n   significant running time, sometimes on the order of days.\n  \
    \ These simulations are, in general, executed for a set of demands for\n   circuits,\
    \ i.e., a batch mode, to improve the optimality of network\n   resource usage\
    \ and other parameters.  Today, we do not really have a\n   means to reduce this\
    \ simulation time.  On the contrary, to support\n   fast, on-line, circuit establishment,\
    \ this phase may be invoked more\n   frequently, i.e., we will not \"batch up\"\
    \ as many connection requests\n   before we plan out the corresponding circuits.\
    \  This means that the\n   network may need to be re-optimized periodically, implying\
    \ that the\n   signaling should support re-optimization with minimum impact to\n\
    \   existing services.\n"
- title: 1.3.4.  Circuit Provisioning
  contents:
  - "1.3.4.  Circuit Provisioning\n   Once the first three steps discussed above have\
    \ been completed, the\n   operator must provision the circuits using the outputs\
    \ of the\n   planning process.  The time required for provisioning varies greatly.\n\
    \   It can be fairly short, on the order of a few minutes, if the\n   operators\
    \ already have tools that help them to do the provisioning\n   over heterogeneous\
    \ equipment.  Otherwise, the process can take days.\n   Developing these tools\
    \ for each new piece of equipment and each\n   vendor is a significant burden\
    \ on the service provider.  A\n   standardized interface for provisioning, such\
    \ as GMPLS signaling,\n   could significantly reduce or eliminate this development\
    \ burden.  In\n   general, provisioning is a batched activity, i.e., a few times\
    \ per\n   week an operator provisions a set of circuits.  GMPLS will reduce\n\
    \   this provisioning time from a few minutes to a few seconds and could\n   help\
    \ to transform this periodic process into a real-time process.\n   When a circuit\
    \ is provisioned, it is not delivered directly to a\n   client.  Rather, the operator\
    \ first tests its performance and\n   behavior and, if successful, delivers the\
    \ circuit to the client.\n   This testing phase lasts, in general, up to 24 hours.\
    \  The operator\n   installs test equipment at each end and uses pre-defined test\
    \ streams\n   to verify performance.  If successful, the circuit is officially\n\
    \   accepted by the client.  To speed up the verification (sometimes\n   known\
    \ as \"proving\") process, it would be necessary to support some\n   form of automated\
    \ performance testing.\n"
- title: 1.4.  Centralized Approach versus Distributed Approach
  contents:
  - "1.4.  Centralized Approach versus Distributed Approach\n   Whether a centralized\
    \ approach or a distributed approach will be used\n   to control SDH/SONET networks\
    \ is an open question, since each\n   approach has its merits.  The application\
    \ of GMPLS to SDH/SONET\n   networks does not preclude either model, although\
    \ GMPLS is itself a\n   distributed technology.\n   The basic tradeoff between\
    \ the centralized and distributed approaches\n   is that of complexity of the\
    \ network elements versus that of the\n   network management system (NMS).  Since\
    \ adding functionality to\n   existing SDH/SONET network elements may not be possible,\
    \ a\n   centralized approach may be needed in some cases.  The main issue\n  \
    \ facing centralized control via an NMS is one of scalability.  For\n   instance,\
    \ this approach may be limited in the number of network\n   elements that can\
    \ be managed (e.g., one thousand).  It is, therefore,\n   quite common for operators\
    \ to deploy several NMS in parallel at the\n   Network Management Layer, each\
    \ managing a different zone.  In that\n   case, however, a Service Management\
    \ Layer must be built on the top of\n   several individual NMS to take care of\
    \ end-to-end on-demand services.\n   On the other hand, in a complex and/or dense\
    \ network, restoration\n   could be faster with a distributed approach than with\
    \ a centralized\n   approach.\n   Let's now look at how the major control plane\
    \ functional components\n   are handled via the centralized and distributed approaches:\n"
- title: 1.4.1.  Topology Discovery and Resource Dissemination
  contents:
  - "1.4.1.  Topology Discovery and Resource Dissemination\n   Currently, an NMS maintains\
    \ a consistent view of all the networking\n   layers under its purview.  This\
    \ can include the physical topology,\n   such as information about fibers and\
    \ ducts.  Since most of this\n   information is entered manually, it remains error\
    \ prone.\n   A link state GMPLS routing protocol, on the other hand, could perform\n\
    \   automatic topology discovery and disseminate the topology as well as\n   resource\
    \ status.  This information would be available to all nodes in\n   the network,\
    \ and hence also the NMS.  Hence, one can look at a\n   continuum of functionality\
    \ between manually provisioned topology\n   information (of which there will always\
    \ be some) and fully automated\n   discovery and dissemination (as in a link state\
    \ protocol).  Note\n   that, unlike the IP datagram case, a link state routing\
    \ protocol\n   applied to the SDH/SONET network does not have any service impacting\n\
    \   implications.  This is because in the SDH/SONET case, the circuit is\n   source-routed\
    \ (so there can be no loops), and no traffic is\n   transmitted until a circuit\
    \ has been established and an\n   acknowledgement received at the source.\n"
- title: 1.4.2.  Path Computation (Route Determination)
  contents:
  - "1.4.2.  Path Computation (Route Determination)\n   In the SDH/SONET case, unlike\
    \ the IP datagram case, there is no need\n   for network elements to all perform\
    \ the same path calculation [6].\n   In addition, path determination is an area\
    \ for vendors to provide a\n   potentially significant value addition in terms\
    \ of network\n   efficiency, reliability, and service differentiation.  In this\
    \ sense,\n   a centralized approach to path computation may be easier to operate\n\
    \   and upgrade.  For example, new features such as new types of path\n   diversity\
    \ or new optimization algorithms can be introduced with a\n   simple NMS software\
    \ upgrade.  On the other hand, updating switches\n   with new path computation\
    \ software is a more complicated task.  In\n   addition, many of the algorithms\
    \ can be fairly computationally\n   intensive and may be completely unsuitable\
    \ for the embedded\n   processing environment available on most switches.  In\
    \ restoration\n   scenarios, the ability to perform a reasonably sophisticated\
    \ level of\n   path computation on the network element can be particularly useful\n\
    \   for restoring traffic during major network faults.\n"
- title: 1.4.3.  Connection Establishment (Provisioning)
  contents:
  - "1.4.3.  Connection Establishment (Provisioning)\n   The actual setting up of\
    \ circuits, i.e., a coupled collection of\n   cross connects across a network,\
    \ can be done either via the NMS\n   setting up individual cross connects or via\
    \ a \"soft permanent LSP\"\n   (SPLSP) type approach.  In the SPLSP approach,\
    \ the NMS may just kick\n   off the connection at the \"ingress\" switch with\
    \ GMPLS signaling\n   setting up the connection from that point onward.  Connection\n\
    \   establishment is the trickiest part to distribute, however, since\n   errors\
    \ in the connection setup/tear down process are service\n   impacting.\n   The\
    \ table below compares the two approaches to connection\n   establishment.\n \
    \  Table 1.  Qualitative comparison between centralized and distributed\n   approaches.\n\
    \       Distributed approach              Centralized approach\n       Packet-based\
    \ control plane        Management plane like TMN or\n       (like GMPLS or PNNI)\
    \ useful?      SNMP\n       Do we really need it?  Being      Always needed! \
    \ Already there,\n       added/specified by several        proven and understood.\n\
    \       standardization bodies\n       High survivability (e.g., in      Potential\
    \ single point(s) of\n       case of partition)                failure\n     \
    \  Distributed load                  Bottleneck: #requests and\n             \
    \                            actions to/from NMS\n       Individual local routing\
    \          Centralized routing decision,\n       decision                    \
    \      can be done per block of\n                                         requests\n\
    \       Routing scalable as for the       Assumes a few big\n       Internet \
    \                         administrative domains\n       Complex to change routing\
    \         Very easy local upgrade (non-\n       protocol/algorithm           \
    \     intrusive)\n       Requires enhanced routing         Better consistency\n\
    \       protocol (traffic\n       engineering)\n       Ideal for inter-domain\
    \            Not inter-domain friendly\n       Suitable for very dynamic     \
    \    For less dynamic demands\n       demands                           (longer\
    \ lived)\n       Probably faster to restore,       Probably slower to restore,but\n\
    \       but more difficult to have        could effect reliable\n       reliable\
    \ restoration.             restoration.\n       High scalability             \
    \     Limited scalability: #nodes,\n       (hierarchical)                    links,\
    \ circuits, messages\n       Planning (optimization)           Planning is a background\n\
    \       harder to achieve                 centralized activity\n       Easier\
    \ future integration\n       with other control plane\n       layers\n"
- title: 1.5.  Why SDH/SONET Will Not Disappear Tomorrow
  contents:
  - "1.5.  Why SDH/SONET Will Not Disappear Tomorrow\n   As IP traffic becomes the\
    \ dominant traffic transported over the\n   transport infrastructure, it is useful\
    \ to compare the statistical\n   multiplexing of IP with the time division multiplexing\
    \ of SDH and\n   SONET.\n   Consider, for instance, a scenario where IP over WDM\
    \ is used\n   everywhere and lambdas are optically switched.  In such a case,\
    \ a\n   carrier's carrier would sell dynamically controlled lambdas with each\n\
    \   customers building their own IP backbones over these lambdas.\n   This simple\
    \ model implies that a carrier would sell lambdas instead\n   of bandwidth.  The\
    \ carrier's goal will be to maximize the number of\n   wavelengths/lambdas per\
    \ fiber, with each customer having to fully\n   support the cost for each end-to-end\
    \ lambda whether or not the\n   wavelength is fully utilized.  Although, in the\
    \ near future, we may\n   have technology to support up to several hundred lambdas\
    \ per fiber, a\n   world where lambdas are so cheap and abundant that every individual\n\
    \   customer buys them, from one point to any other point, appears an\n   unlikely\
    \ scenario today.\n   More realistically, there is still room for a multiplexing\
    \ technology\n   that provides circuits with a lower granularity than a wavelength.\n\
    \   (Not everyone needs a minimum of 10 Gbps or 40 Gbps per circuit, and\n   IP\
    \ does not yet support all telecom applications in bulk\n   efficiently.)\n  \
    \ SDH and SONET possess a rich multiplexing hierarchy that permits\n   fairly\
    \ fine granularity and that provides a very cheap and simple\n   physical separation\
    \ of the transported traffic between circuits,\n   i.e., QoS.  Moreover, even\
    \ IP datagrams cannot be transported\n   directly over a wavelength.  A framing\
    \ or encapsulation is always\n   required to delimit IP datagrams.  The Total\
    \ Length field of an IP\n   header cannot be trusted to find the start of a new\
    \ datagram, since\n   it could be corrupted and would result in a loss of synchronization.\n\
    \   The typical framing used today for IP over Dense WDM (DWDM) is\n   defined\
    \ in RFC1619/RFC2615 and is known as POS (Packet Over\n   SDH/SONET), i.e., IP\
    \ over PPP (in High-Level Data Link Control\n   (HDLC)-like format) over SDH/SONET.\
    \  SDH and SONET are actually\n   efficient encapsulations for IP.  For instance,\
    \ with an average IP\n   datagram length of 350 octets, an IP over Gigabit Ethernet\
    \ (GbE)\n   encapsulation using an 8B/10B encoding results in 28% overhead, an\n\
    \   IP/ATM/SDH encapsulation results in 22% overhead, and an IP/PPP/SDH\n   encapsulation\
    \ results in only 6% overhead.\n   Any encapsulation of IP over WDM should, in\
    \ the data plane, at least\n   provide the following: error monitoring capabilities\
    \ (to detect\n   signal degradation); error correction capabilities, such as FEC\n\
    \   (Forward Error Correction) that are particularly needed for ultra\n   long\
    \ haul transmission; and sufficient timing information, to allow\n   robust synchronization\
    \ (that is, to detect the beginning of a\n   packet).  In the case where associated\
    \ signaling is used (that is,\n   where the control and data plane topologies\
    \ are congruent), the\n   encapsulation should also provide the capacity to transport\n\
    \   signaling, routing, and management messages, in order to control the\n   optical\
    \ switches.  Rather, SDH and SONET cover all these aspects\n   natively, except\
    \ FEC, which tends to be supported in a proprietary\n   way.  (We note, however,\
    \ that associated signaling is not a\n   requirement for the GMPLS-based control\
    \ of SDH/SONET networks.\n   Rather, it is just one option.  Non associated signaling,\
    \ as would\n   happen with an out-of-band control plane network is another equally\n\
    \   valid option.)\n   Since IP encapsulated in SDH/SONET is efficient and widely\
    \ used, the\n   only real difference between an IP over WDM network and an IP\
    \ over\n   SDH over WDM network is the layers at which the switching or\n   forwarding\
    \ can take place.  In the first case, it can take place at\n   the IP and optical\
    \ layers.  In the second case, it can take place at\n   the IP, SDH/SONET, and\
    \ optical layers.\n   Almost all transmission networks today are based on SDH\
    \ or SONET.  A\n   client is connected either directly through an SDH or SONET\
    \ interface\n   or through a PDH interface, the PDH signal being transported between\n\
    \   the ingress and the egress interfaces over SDH or SONET.  What we are\n  \
    \ arguing here is that it makes sense to do switching or forwarding at\n   all\
    \ these layers.\n"
- title: 2.  GMPLS Applied to SDH/SONET
  contents:
  - '2.  GMPLS Applied to SDH/SONET

    '
- title: 2.1.  Controlling the SDH/SONET Multiplex
  contents:
  - "2.1.  Controlling the SDH/SONET Multiplex\n   Controlling the SDH/SONET multiplex\
    \ implies deciding which of the\n   different switchable components of the SDH/SONET\
    \ multiplex we wish to\n   control using GMPLS.  Essentially, every SDH/SONET\
    \ element that is\n   referenced by a pointer can be switched.  These component\
    \ signals are\n   the VC-4, VC-3, VC-2, VC-12, and VC-11 in the SDH case; and\
    \ the VT\n   and STS SPEs in the SONET case.  The SPEs in SONET do not have\n\
    \   individual names, although they can be referred to simply as VT-N\n   SPEs.\
    \  We will refer to them by identifying the structure that\n   contains them,\
    \ namely STS-1, VT-6, VT-3, VT-2, and VT-1.5.\n   The STS-1 SPE corresponds to\
    \ a VC-3, a VT-6 SPE corresponds to a VC-\n   2, a VT-2 SPE corresponds to a VC-12,\
    \ and a VT-1.5 SPE corresponds to\n   a VC-11.  The SONET VT-3 SPE has no correspondence\
    \ in SDH, however\n   SDH's VC-4 corresponds to SONET's STS-3c SPE.\n   In addition,\
    \ it is possible to concatenate some of the structures\n   that contain these\
    \ elements to build larger elements.  For instance,\n   SDH allows the concatenation\
    \ of X contiguous AU-4s to build a VC-4-Xc\n   and of m contiguous TU-2s to build\
    \ a VC-2-mc.  In that case, a VC-4-\n   Xc or a VC-2-mc can be switched and controlled\
    \ by GMPLS.  SDH also\n   defines virtual (non-contiguous) concatenation of TU-2s;\
    \ however, in\n   that case, each constituent VC-2 is switched individually.\n"
- title: 2.2.  SDH/SONET LSR and LSP Terminology
  contents:
  - "2.2.  SDH/SONET LSR and LSP Terminology\n   Let an SDH or SONET Terminal Multiplexer\
    \ (TM), Add-Drop Multiplexer\n   (ADM), or cross-connect (i.e., a switch) be called\
    \ an SDH/SONET LSR.\n   An SDH/SONET path or circuit between two SDH/SONET LSRs\
    \ now becomes a\n   GMPLS LSP.  An SDH/SONET LSP is a logical connection between\
    \ the\n   point at which a tributary signal (client layer) is adapted into its\n\
    \   virtual container, and the point at which it is extracted from its\n   virtual\
    \ container.\n   To establish such an LSP, a signaling protocol is required to\n\
    \   configure the input interface, switch fabric, and output interface of\n  \
    \ each SDH/SONET LSR along the path.  An SDH/SONET LSP can be point-\n   to-point\
    \ or point-to-multipoint, but not multipoint-to-point, since\n   no merging is\
    \ possible with SDH/SONET signals.\n   To facilitate the signaling and setup of\
    \ SDH/SONET circuits, an\n   SDH/SONET LSR must, therefore, identify each possible\
    \ signal\n   individually per interface, since each signal corresponds to a\n\
    \   potential LSP that can be established through the SDH/SONET LSR.  It\n   turns\
    \ out, however, that not all SDH signals correspond to an LSP and\n   therefore\
    \ not all of them need be identified.  In fact, only those\n   signals that can\
    \ be switched need identification.\n"
- title: 3.  Decomposition of the GMPLS Circuit-Switching Problem Space
  contents:
  - "3.  Decomposition of the GMPLS Circuit-Switching Problem Space\n   Although those\
    \ familiar with GMPLS may be familiar with its\n   application in a variety of\
    \ application areas (e.g., ATM, Frame\n   Relay, and so on), here we quickly review\
    \ its decomposition when\n   applied to the optical switching problem space.\n\
    \   (i) Information needed to compute paths must be made globally\n   available\
    \ throughout the network.  Since this is done via the link\n   state routing protocol,\
    \ any information of this nature must either be\n   in the existing link state\
    \ advertisements (LSAs) or the LSAs must be\n   supplemented to convey this information.\
    \  For example, if it is\n   desirable to offer different levels of service in\
    \ a network, based on\n   whether a circuit is routed over SDH/SONET lines that\
    \ are ring\n   protected versus being routed over those that are not ring protected\n\
    \   (differentiation based on reliability), the type of protection on a\n   SDH/SONET\
    \ line would be an important topological parameter that would\n   have to be distributed\
    \ via the link state routing protocol.\n   (ii) Information that is only needed\
    \ between two \"adjacent\" switches\n   for the purposes of connection establishment\
    \ is appropriate for\n   distribution via one of the label distribution protocols.\
    \  In fact,\n   this information can be thought of as the \"virtual\" label. \
    \ For\n   example, in SONET networks, when distributing information to switches\n\
    \   concerning an end-to-end STS-1 path traversing a network, it is\n   critical\
    \ that adjacent switches agree on the multiplex entry used by\n   this STS-1 (but\
    \ this information is only of local significance\n   between those two switches).\
    \  Hence, the multiplex entry number in\n   this case can be used as a virtual\
    \ label.  Note that the label is\n   virtual, in that it is not appended to the\
    \ payload in any way, but it\n   is still a label in the sense that it uniquely\
    \ identifies the signal\n   locally on the link between the two switches.\n  \
    \ (iii) Information that all switches in the path need to know about a\n   circuit\
    \ will also be distributed via the label distribution protocol.\n   Examples of\
    \ such information include bandwidth, priority, and\n   preemption.\n   (iv) Information\
    \ intended only for end systems of the connection.\n   Some of the payload type\
    \ information may fall into this category.\n"
- title: 4.  GMPLS Routing for SDH/SONET
  contents:
  - "4.  GMPLS Routing for SDH/SONET\n   Modern SDH/SONET transport networks excel\
    \ at interoperability in the\n   performance monitoring (PM) and fault management\
    \ (FM) areas [7], [8].\n   They do not, however, interoperate in the areas of\
    \ topology discovery\n   or resource status.  Although link state routing protocols,\
    \ such as\n   IS-IS and OSPF, have been used for some time in the IP world to\n\
    \   compute destination-based next hops for routes (without routing\n   loops),\
    \ they are particularly valuable for providing timely topology\n   and network\
    \ status information in a distributed manner, i.e., at any\n   network node. \
    \ If resource utilization information is disseminated\n   along with the link\
    \ status (as done in ATM's PNNI routing protocol),\n   then a very complete picture\
    \ of network status is available to a\n   network operator for use in planning,\
    \ provisioning, and operations.\n   The information needed to compute the path\
    \ a connection will take\n   through a network is important to distribute via\
    \ the routing\n   protocol.  In the TDM case, this information includes, but is\
    \ not\n   limited to: the available capacity of the network links, the\n   switching\
    \ and termination capabilities of the nodes and interfaces,\n   and the protection\
    \ properties of the link.  This is what is being\n   proposed in the GMPLS extensions\
    \ to IP routing protocols [9], [10],\n   [11].\n   When applying routing to circuit\
    \ switched networks, it is useful to\n   compare and contrast this situation with\
    \ the datagram routing case\n   [12].  In the case of routing datagrams, all routes\
    \ on all nodes must\n   be calculated exactly the same to avoid loops and \"black\
    \ holes\".  In\n   circuit switching, this is not the case since routes are established\n\
    \   per circuit and are fixed for that circuit.  Hence, unlike the\n   datagram\
    \ case, routing is not service impacting in the circuit\n   switched case.  This\
    \ is helpful because, to accommodate the optical\n   layer, routing protocols\
    \ need to be supplemented with new\n   information, as compared to the datagram\
    \ case.  This information is\n   also likely to be used in different ways for\
    \ implementing different\n   user services.  Due to the increase in information\
    \ transferred in the\n   routing protocol, it may be useful to separate the relatively\
    \ static\n   parameters concerning a link from those that may be subject to\n\
    \   frequent changes.  However, the current GMPLS routing extensions [9],\n  \
    \ [10], [11] do not make such a separation.\n   Indeed, from the carriers' perspective,\
    \ the up-to-date dissemination\n   of all link properties is essential and desired,\
    \ and the use of a\n   link-state routing protocol to distribute this information\
    \ provides\n   timely and efficient delivery.  If GMPLS-based networks got to\
    \ the\n   point that bandwidth updates happen very frequently, it makes sense,\n\
    \   from an efficiency point of view, to separate them out for update.\n   This\
    \ situation is not yet seen in actual networks; however, if GMPLS\n   signaling\
    \ is put into widespread use then the need could arise.\n"
- title: 4.1.  Switching Capabilities
  contents:
  - "4.1.  Switching Capabilities\n   The main switching capabilities that characterize\
    \ an SDH/SONET end\n   system and thus need to be advertised via the link state\
    \ routing\n   protocol are: the switching granularity, supported forms of\n  \
    \ concatenation, and the level of transparency.\n"
- title: 4.1.1.  Switching Granularity
  contents:
  - "4.1.1.  Switching Granularity\n   From references [2], [3], and the overview\
    \ section on SDH/SONET we\n   see that there are a number of different signals\
    \ that compose the\n   SDH/SONET hierarchies.  Those signals that are referenced\
    \ via a\n   pointer (i.e., the VCs in SDH and the SPEs in SONET) will actually\
    \ be\n   switched within an SDH/SONET network.  These signals are subdivided\n\
    \   into lower order signals and higher order signals as shown in Table\n   2.\n\
    \   Table 2.  SDH/SONET switched signal groupings.\n         Signal Type    SDH\
    \                       SONET\n         Lower Order    VC-11, VC-12, VC-2    \
    \    VT-1.5 SPE, VT-2 SPE,\n                                                 \
    \ VT-3 SPE, VT-6 SPE\n         Higher         VC-3, VC-4                STS-1\
    \ SPE, STS-3c SPE\n         Order\n   Manufacturers today differ in the types\
    \ of switching capabilities\n   their systems support.  Many manufacturers today\
    \ switch signals\n   starting at VC-4 for SDH or STS-1 for SONET (i.e., down the\
    \ basic\n   frame) and above (see Section 5.1.2 on concatenation), but they do\n\
    \   not switch lower order signals.  Some of them only allow the\n   switching\
    \ of entire aggregates (concatenated or not) of signals such\n   as 16 VC-4s,\
    \ i.e., a complete STM-16, and nothing finer.  Some go\n   down to the VC-3 level\
    \ for SDH.  Finally, some offer highly\n   integrated switches that switch at\
    \ the VC-3/STS-1 level down to lower\n   order signals such as VC-12s.  In order\
    \ to cover the needs of all\n   manufacturers and operators, GMPLS signaling ([4],\
    \ [5]) covers both\n   higher order and lower order signals.\n"
- title: 4.1.2.  Signal Concatenation Capabilities
  contents:
  - "4.1.2.  Signal Concatenation Capabilities\n   As stated in the SDH/SONET overview,\
    \ to transport tributary signals\n   with rates in excess of the basic STM-1/STS-1\
    \ signal, the VCs/SPEs\n   can be concatenated, i.e., glued together.  Different\
    \ types of\n   concatenations are defined: contiguous standard concatenation,\n\
    \   arbitrary concatenation, and virtual concatenation with different\n   rules\
    \ concerning their size, placement, and binding.\n   Standard SONET concatenation\
    \ allows the concatenation of M x STS-1\n   signals within an STS-N signal with\
    \ M <= N, and M = 3, 12, 48, 192,\n   STS-Mc.  The STS-Mc notation is shorthand\
    \ for describing an STS-M\n   signal whose SPEs have been concatenated.  The multiplexing\n\
    \   procedures for SDH and SONET are given in references [2] and [3],\n   respectively.\
    \  Constraints are imposed on the size of STS-Mc signals,\n   i.e., they must\
    \ be a multiple of 3, and on their starting location\n   and interleaving.\n \
    \  This has the following advantages: (a) restriction to multiples of 3\n   helps\
    \ with SDH compatibility (there is no STS-1 equivalent signal in\n   SDH); (b)\
    \ the restriction to multiples of 3 reduces the number of\n   connection types;\
    \ (c) the restriction on the placement and\n   interleaving could allow more compact\
    \ representation of the \"label\";\n   The major disadvantages of these restrictions\
    \ are:  (a) Limited\n   flexibility in bandwidth assignment (somewhat inhibits\
    \ finer grained\n   traffic engineering).  (b) The lack of flexibility in starting\
    \ time\n   slots for STS-Mc signals and in their interleaving (where the rest\
    \ of\n   the signal gets put in terms of STS-1 slot numbers) leads to the\n  \
    \ requirement for re-grooming (due to bandwidth fragmentation).\n   Due to these\
    \ disadvantages, some SONET framer manufacturers now\n   support \"flexible\"\
    \ or arbitrary concatenation.  That is, they support\n   concatenation with no\
    \ restrictions on the size of an STS-Mc (as long\n   as M <= N) and no constraints\
    \ on the STS-1 timeslots used to convey\n   it, i.e., the signals can use any\
    \ combination of available time\n   slots.\n   Standard and flexible concatenations\
    \ are network services, while\n   virtual concatenation is an SDH/SONET end-system\
    \ service approved by\n   the Committee T1 of ANSI [3] and the ITU-T [2].  The\
    \ essence of this\n   service is to have SDH/SONET end systems \"glue\" together\
    \ the VCs or\n   SPEs of separate signals, rather than requiring that the signals\
    \ be\n   carried through the network as a single unit.  In one example of\n  \
    \ virtual concatenation, two end systems supporting this feature could\n   essentially\
    \ \"inverse multiplex\" two STS-1s into an STS-1-2v for the\n   efficient transport\
    \ of 100 Mbps Ethernet traffic.  Note that this\n   inverse multiplexing process\
    \ (or virtual concatenation) can be\n   significantly easier to implement with\
    \ SDH/SONET than packet switched\n   circuits, because ensuring that timing and\
    \ in-order frame delivery is\n   preserved may be simpler to establish using SDH/SONET,\
    \ rather than\n   packet switched circuits, where more sophisticated techniques\
    \ may be\n   needed.\n   Since virtual concatenation is provided by end systems,\
    \ it is\n   compatible with existing SDH/SONET networks.  Virtual concatenation\n\
    \   is defined for both higher order signals and low order signals.\n   Table\
    \ 3 shows the nomenclature and capacity for several lower-order\n   virtually\
    \ concatenated signals contained within different higher-\n   order signals.\n\
    \      Table 3.  Capacity of Virtually Concatenated VTn-Xv (9/G.707)\n       \
    \           Carried In      X           Capacity       In steps\n            \
    \                                                  of\n     VT1.5/       STS-1/VC-3\
    \      1 to 28     1600kbit/s to  1600kbit/s\n     VC-11-Xv                  \
    \               44800kbit/s\n     VT2/         STS-1/VC-3      1 to 21     2176kbit/s\
    \ to  2176kbit/s\n     VC-12-Xv                                 45696kbit/s\n\
    \     VT1.5/       STS-3c/VC-4     1 to 64     1600kbit/s to  1600kbit/s\n   \
    \  VC-11-Xv                                 102400kbit/s\n     VT2/         STS-3c/VC-4\
    \     1 to 63     2176kbit/s to  2176kbit/s\n     VC-12-Xv                   \
    \              137088kbit/s\n"
- title: 4.1.3.  SDH/SONET Transparency
  contents:
  - "4.1.3.  SDH/SONET Transparency\n   The purposed of SDH/SONET is to carry its\
    \ payload signals in a\n   transparent manner.  This can include some of the layers\
    \ of SONET\n   itself.  An example of this is a situation where the path overhead\n\
    \   can never be touched, since it actually belongs to the client.  This\n   was\
    \ another reason for not coding an explicit label in the SDH/SONET\n   path overhead.\
    \  It may be useful to transport, multiplex and/or\n   switch lower layers of\
    \ the SONET signal transparently.\n   As mentioned in the introduction, SONET\
    \ overhead is broken into three\n   layers: Section, Line, and Path.  Each of\
    \ these layers is concerned\n   with fault and performance monitoring.  The Section\
    \ overhead is\n   primarily concerned with framing, while the Line overhead is\n\
    \   primarily concerned with multiplexing and protection.  To perform\n   pipe\
    \ multiplexing (that is, multiplexing of 50 Mbps or 150 Mbps\n   chunks), a SONET\
    \ network element should be line terminating.\n   However, not all SONET multiplexers/switches\
    \ perform SONET pointer\n   adjustments on all the STS-1s contained within a higher\
    \ order SONET\n   signal passing through them.  Alternatively, if they perform\
    \ pointer\n   adjustments, they do not terminate the line overhead.  For example,\
    \ a\n   multiplexer may take four SONET STS-48 signals and multiplex them\n  \
    \ onto an STS-192 without performing standard line pointer adjustments\n   on\
    \ the individual STS-1s.  This can be looked at as a service since\n   it may\
    \ be desirable to pass SONET signals, like an STS-12 or STS-48,\n   with some\
    \ level of transparency through a network and still take\n   advantage of TDM\
    \ technology.  Transparent multiplexing and switching\n   can also be viewed as\
    \ a constraint, since some multiplexers and\n   switches may not switch with as\
    \ fine a granularity as others.  Table\n   4 summarizes the levels of SDH/SONET\
    \ transparency.\n      Table 4.  SDH/SONET transparency types and their properties.\n\
    \      Transparency Type         Comments\n      Path Layer (or Line       Standard\
    \ higher order SONET path\n      Terminating)              switching.  Line overhead\
    \ is terminated\n                                or modified.\n      Line Level\
    \ (or Section    Preserves line overhead and switches\n      Terminating)    \
    \          the entire line multiplex as a whole.\n                           \
    \     Section overhead is terminated or\n                                modified.\n\
    \      Section layer             Preserves all section overhead,\n           \
    \                     Basically does not modify/terminate any\n              \
    \                  of the SDH/SONET overhead bits.\n"
- title: 4.2.  Protection
  contents:
  - "4.2.  Protection\n   SONET and SDH networks offer a variety of protection options\
    \ at both\n   the SONET line (SDH multiplex section) and SDH/SONET path level\
    \ [7],\n   [8].  Standardized SONET line level protection techniques include:\n\
    \   Linear 1+1 and linear 1:N automatic protection switching (APS) and\n   both\
    \ two-fiber and four-fiber bi-directional line switched rings\n   (BLSRs).  At\
    \ the path layer, SONET offers uni-directional path\n   switched ring protection.\
    \  Likewise, standardized SDH multiplex\n   section protection techniques include\
    \ linear 1+1 and 1:N automatic p\n   protection switching and both two-fiber and\
    \ four-fiber bi-directional\n   MS-SPRings (Multiplex Section-Shared Protection\
    \ Rings).\n   At the path layer, SDH offers SNCP (sub-network connection\n   protection)\
    \ ring protection.\n   Both ring and 1:N line protection also allow for \"extra\
    \ traffic\" to\n   be carried over the protection line when that line is not being\
    \ used,\n   i.e., when it is not carrying traffic for a failed working line.\n\
    \   These protection methods are summarized in Table 5.  It should be\n   noted\
    \ that these protection methods are completely separate from any\n   GMPLS layer\
    \ protection or restoration mechanisms.\n      Table 5.  Common SDH/SONET protection\
    \ mechanisms.\n       Protection Type     Extra          Comments\n          \
    \                 Traffic\n                           Optionally\n           \
    \                Supported\n       1+1                 No             Requires\
    \ no coordination\n       Unidirectional                     between the two ends\
    \ of the\n                                          circuit.  Dedicated\n    \
    \                                      protection line.\n       1+1 Bi-      \
    \       No             Coordination via K byte\n       directional           \
    \             protocol.  Lines must be\n                                     \
    \     consistently configured.\n                                          Dedicated\
    \ protection line.\n       1:1                 Yes            Dedicated protection.\n\
    \       1:N                 Yes            One Protection line shared\n      \
    \                                    by N working lines\n       4F-BLSR (4   \
    \       Yes            Dedicated protection, with\n       fiber bi-          \
    \                alternative ring path.\n       directional\n       line switched\n\
    \       ring)\n       2F-BLSR (2          Yes            Dedicated protection,\
    \ with\n       fiber bi-                          alternative ring path\n    \
    \   directional\n       line switched\n       ring)\n       UPSR (uni-       \
    \   No             Dedicated protection via\n       directional              \
    \          alternative ring path.\n       path switched                      Typically\
    \ used in access\n       ring)                              networks.\n   It may\
    \ be desirable to route some connections over lines that support\n   protection\
    \ of a given type, while others may be routed over\n   unprotected lines, or as\
    \ \"extra traffic\" over protection lines.\n   Also, to assist in the configuration\
    \ of these various protection\n   methods, it can be extremely valuable to advertise\
    \ the link\n   protection attributes in the routing protocol, as is done in the\n\
    \   current GMPLS routing protocols.  For example, suppose that a 1:N\n   protection\
    \ group is being configured via two nodes.  One must make\n   sure that the lines\
    \ are \"numbered the same\" with respect to both ends\n   of the connection, or\
    \ else the APS (K1/K2 byte) protocol will not\n   correctly operate.\n      Table\
    \ 6.  Parameters defining protection mechanisms.\n       Protection          Comments\n\
    \       Related Link\n       Information\n       Protection Type     Indicates\
    \ which of the protection types\n                           delineated in Table\
    \ 5.\n       Protection          Indicates which of several protection\n     \
    \  Group Id            groups (linear or ring) that a node belongs\n         \
    \                  to.  Must be unique for all groups that a\n               \
    \            node participates in\n       Working line        Important in 1:N\
    \ case and to differentiate\n       number              between working and protection\
    \ lines\n       Protection line     Used to indicate if the line is a\n      \
    \ number              protection line.\n       Extra Traffic       Yes or No\n\
    \       Supported\n       Layer               If this protection parameter is\
    \ specific to\n                           SONET then this parameter is unneeded,\n\
    \                           otherwise it would indicate the signal\n         \
    \                  layer that the protection is applied.\n   An open issue concerning\
    \ protection is the extent of information\n   regarding protection that must be\
    \ disseminated.  The contents of\n   Table 6 represent one extreme, while a simple\
    \ enumerated list\n   (Extra-Traffic/Protection line, Unprotected, Shared (1:N)/Working\n\
    \   line, Dedicated (1:1, 1+1)/Working Line, Enhanced (Ring) /Working\n   Line)\
    \ represents the other.\n   There is also a potential implication for link bundling\
    \ [13], [15]\n   that is, for each link, the routing protocol could advertise\
    \ whether\n   that link is a working or protection link and possibly some\n  \
    \ parameters from Table 6.  A possible drawback of this scheme is that\n   the\
    \ routing protocol would be burdened with advertising properties\n   even for\
    \ those protection links in the network that could not, in\n   fact, be used for\
    \ routing working traffic, e.g., dedicated protection\n   links.  An alternative\
    \ method would be to bundle the working and\n   protection links together, and\
    \ advertise the bundle instead.  Now,\n   for each bundled link, the protocol\
    \ would have to advertise the\n   amount of bandwidth available on its working\
    \ links, as well as the\n   amount of bandwidth available on those protection\
    \ links within the\n   bundle that were capable of carrying \"extra traffic\"\
    .  This would\n   reduce the amount of information to be advertised.  An issue\
    \ here\n   would be to decide which types of working and protection links to\n\
    \   bundle together.  For instance, it might be preferable to bundle\n   working\
    \ links (and their corresponding protection links) that are\n   \"shared\" protected\
    \ separately from working links that are \"dedicated\"\n   protected.\n"
- title: 4.3.  Available Capacity Advertisement
  contents:
  - "4.3.  Available Capacity Advertisement\n   Each SDH/SONET LSR must maintain an\
    \ internal table per interface that\n   indicates each signal in the multiplex\
    \ structure that is allocated at\n   that interface.  This internal table is the\
    \ most complete and\n   accurate view of the link usage and available capacity.\n\
    \   For use in path computation, this information needs to be advertised\n   in\
    \ some way to all other SDH/SONET LSRs in the same domain.  There is\n   a trade\
    \ off to be reached concerning: the amount of detail in the\n   available capacity\
    \ information to be reported via a link state\n   routing protocol, the frequency\
    \ or conditions under which this\n   information is updated, the percentage of\
    \ connection establishments\n   that are unsuccessful on their first attempt due\
    \ to the granularity\n   of the advertised information, and the extent to which\
    \ network\n   resources can be optimized.  There are different levels of\n   summarization\
    \ that are being considered today for the available\n   capacity information.\
    \  At one extreme, all signals that are allocated\n   on an interface could be\
    \ advertised; while at the other extreme, a\n   single aggregated value of the\
    \ available bandwidth per link could be\n   advertised.\n   Consider first the\
    \ relatively simple structure of SONET and its most\n   common current and planned\
    \ usage.  DS1s and DS3s are the signals most\n   often carried within a SONET\
    \ STS-1.  Either a single DS3 occupies the\n   STS-1 or up to 28 DS1s (4 each\
    \ within the 7 VT groups) are carried\n   within the STS-1.  With a reasonable\
    \ VT1.5 placement algorithm within\n   each node, it may be possible to just report\
    \ on aggregate bandwidth\n   usage in terms of number of whole STS-1s (dedicated\
    \ to DS3s) used and\n   the number of STS-1s dedicated to carrying DS1s allocated\
    \ for this\n   purpose.  This way, a network optimization program could try to\n\
    \   determine the optimal placement of DS3s and DS1s to minimize wasted\n   bandwidth\
    \ due to half-empty STS-1s at various places within the\n   transport network.\
    \  Similarly consider the set of super rate SONET\n   signals (STS-Nc).  If the\
    \ links between the two switches support\n   flexible concatenation, then the\
    \ reporting is particularly\n   straightforward since any of the STS-1s within\
    \ an STS-M can be used\n   to comprise the transported STS-Nc.  However, if only\
    \ standard\n   concatenation is supported, then reporting gets trickier since\
    \ there\n   are constraints on where the STS-1s can be placed.  SDH has still\n\
    \   more options and constraints, hence it is not yet clear which is the\n   best\
    \ way to advertise bandwidth resource availability/usage in\n   SDH/SONET.  At\
    \ present, the GMPLS routing protocol extensions define\n   minimum and maximum\
    \ values for available bandwidth, which allows a\n   remote node to make some\
    \ deductions about the amount of capacity\n   available at a remote link and the\
    \ types of signals it can\n   accommodate.  However, due to the multiplexed nature\
    \ of the signals,\n   reporting of bandwidth particular to signal types, rather\
    \ than as a\n   single aggregate bit rate, may be desirable.  For details on why\
    \ this\n   may be the case, we refer the reader to ITU-T publications G.7715.1\n\
    \   [16] and to Chapter 12 of [17].\n"
- title: 4.4.  Path Computation
  contents:
  - "4.4.  Path Computation\n   Although a link state routing protocol can be used\
    \ to obtain network\n   topology and resource information, this does not imply\
    \ the use of an\n   \"open shortest path first\" route [6].  The path must be\
    \ open in the\n   sense that the links must be capable of supporting the desired\
    \ signal\n   type and that capacity must be available to carry the signal.  Other\n\
    \   constraints may include hop count, total delay (mostly propagation),\n   and\
    \ underlying protection.  In addition, it may be desirable to route\n   traffic\
    \ in order to optimize overall network capacity, or\n   reliability, or some combination\
    \ of the two.  Dikstra's algorithm\n   computes the shortest path with respect\
    \ to link weights for a single\n   connection at a time.  This can be much different\
    \ than the paths that\n   would be selected in response to a request to set up\
    \ a batch of\n   connections between a set of endpoints in order to optimize network\n\
    \   link utilization.  One can think of this along the lines of global or\n  \
    \ local optimization of the network in time.\n   Due to the complexity of some\
    \ of the connection routing algorithms\n   (high dimensionality, non-linear integer\
    \ programming problems) and\n   various criteria by which one may optimize a network,\
    \ it may not be\n   possible or desirable to run these algorithms on network nodes.\n\
    \   However, it may still be desirable to have some basic path\n   computation\
    \ ability running on the network nodes, particularly for\n   use during restoration\
    \ situations.  Such an approach is in line with\n   the use of GMPLS for traffic\
    \ engineering, but is much different than\n   typical OSPF or IS-IS usage where\
    \ all nodes must run the same routing\n   algorithm.\n"
- title: 5.  LSP Provisioning/Signaling for SDH/SONET
  contents:
  - "5.  LSP Provisioning/Signaling for SDH/SONET\n  Traditionally, end-to-end circuit\
    \ connections in SDH/SONET networks\n  have been set up via network management\
    \ systems (NMSs), which issue\n  commands (usually under the control of a human\
    \ operator) to the\n  various network elements involved in the circuit, via an\
    \ equipment\n  vendor's element management system (EMS).  Very little multi-vendor\n\
    \  interoperability has been achieved via management systems.  Hence,\n  end-to-end\
    \ circuits in a multi-vendor environment typically require\n  the use of multiple\
    \ management systems and the infamous configuration\n  via \"yellow sticky notes\"\
    .  As discussed in Section 3, a common\n  signaling protocol -- such as RSVP with\
    \ TE extensions or CR-LDP --\n  appropriately extended for circuit switching applications,\
    \ could\n  therefore help to solve these interoperability problems.  In this\n\
    \  section, we examine the various components involved in the automated\n  provisioning\
    \ of SDH/SONET LSPs.\n"
- title: 5.1. What Do We Label in SDH/SONET?  Frames or Circuits?
  contents:
  - "5.1. What Do We Label in SDH/SONET?  Frames or Circuits?\n   GMPLS was initially\
    \ introduced to control asynchronous technologies\n   like IP, where a label was\
    \ attached to each individual block of data,\n   such as an IP packet or a Frame\
    \ Relay frame.  SONET and SDH, however,\n   are synchronous technologies that\
    \ define a multiplexing structure\n   (see Section 3), which we referred to as\
    \ the SDH (or SONET)\n   multiplex.  This multiplex involves a hierarchy of signals,\
    \ lower\n   order signals embedded within successive higher order ones (see Fig.\n\
    \   1).  Thus, depending on its level in the hierarchy, each signal\n   consists\
    \ of frames that repeat periodically, with a certain number of\n   byte time slots\
    \ per frame.\n   The question then arises: is it these frames that we label in\
    \ GMPLS?\n   It will be seen in what follows that each SONET or SDH \"frame\"\
    \ need\n   not have its own label, nor is it necessary to switch frames\n   individually.\
    \  Rather, the unit that is switched is a \"flow\"\n   comprised of a continuous\
    \ sequence of time slots that appear at a\n   given position in a frame.  That\
    \ is, we switch an individual SONET or\n   SDH signal, and a label associated\
    \ with each given signal.\n   For instance, the payload of an SDH STM-1 frame\
    \ does not fully\n   contain a complete unit of user data.  In fact, the user\
    \ data is\n   contained in a virtual container (VC) that is allowed to float over\n\
    \   two contiguous frames for synchronization purposes.  The H1-H2-H3\n   Au-n\
    \ pointer bytes in the SDH overhead indicates the beginning of the\n   VC in the\
    \ payload.  Thus, frames are now inter-related, since each\n   consecutive pair\
    \ may share a common virtual container.  From the\n   point of view of GMPLS,\
    \ therefore, it is not the successive frames\n   that are treated independently\
    \ or labeled, but rather the entire user\n   signal.  An identical argument applies\
    \ to SONET.\n   Observe also that the GMPLS signaling used to control the SDH/SONET\n\
    \   multiplex must honor its hierarchy.  In other words, the SDH/SONET\n   layer\
    \ should not be viewed as homogeneous and flat, because this\n   would limit the\
    \ scope of the services that SDH/SONET can provide.\n   Instead, GMPLS tunnels\
    \ should be used to dynamically and\n   hierarchically control the SDH/SONET multiplex.\
    \  For example, one\n   unstructured VC-4 LSP may be established between two nodes,\
    \ and later\n   lower order LSPs (e.g., VC-12) may be created within that higher\n\
    \   order LSP.  This VC-4 LSP can, in fact, be established between two\n   non-adjacent\
    \ internal nodes in an SDH network, and later advertised\n   by a routing protocol\
    \ as a new (virtual) link called a Forwarding\n   Adjacency (FA) [14].\n   An\
    \ SDH/SONET-LSR will have to identify each possible signal\n   individually per\
    \ interface to fulfill the GMPLS operations.  In order\n   to stay transparent,\
    \ the LSR obviously should not touch the SDH/SONET\n   overheads; this is why\
    \ an explicit label is not encoded in the\n   SDH/SONET overheads.  Rather, a\
    \ label is associated with each\n   individual signal.  This approach is similar\
    \ to the one considered\n   for lambda switching, except that it is more complex,\
    \ since SONET and\n   SDH define a richer multiplexing structure.  Therefore,\
    \ a label is\n   associated with each signal, and is locally unique for each signal\
    \ at\n   each interface.  This signal could, and will most probably, occupy\n\
    \   different time-slots at different interfaces.\n"
- title: 5.2.  Label Structure in SDH/SONET
  contents:
  - "5.2.  Label Structure in SDH/SONET\n   The signaling protocol used to establish\
    \ an SDH/SONET LSP must have\n   specific information elements in it to map a\
    \ label to the particular\n   signal type that it represents, and to the position\
    \ of that signal in\n   the SDH/SONET multiplex.  As we will see shortly, with\
    \ a carefully\n   chosen label structure, the label itself can be made to function\
    \ as\n   this information element.\n   In general, there are two ways to assign\
    \ labels for signals between\n   neighboring SDH/SONET LSRs.  One way is for the\
    \ labels to be\n   allocated completely independently of any SDH/SONET semantics;\
    \ e.g.,\n   labels could just be unstructured 16 or 32 bit numbers.  In that\n\
    \   case, in the absence of appropriate binding information, a label\n   gives\
    \ no visible information about the flow that it represents.  From\n   a management\
    \ and debugging point of view, therefore, it becomes\n   difficult to match a\
    \ label with the corresponding signal, since , as\n   we saw in Section 6.1, the\
    \ label is not coded in the SDH/SONET\n   overhead of the signal.\n   Another\
    \ way is to use the well-defined and finite structure of the\n   SDH/SONET multiplexing\
    \ tree to devise a signal numbering scheme that\n   makes use of the multiplex\
    \ as a naming tree, and assigns each\n   multiplex entry a unique associated value.\
    \  This allows the unique\n   identification of each multiplex entry (signal)\
    \ in terms of its type\n   and position in the multiplex tree.  By using this\
    \ multiplex entry\n   value itself as the label, we automatically add SDH/SONET\
    \ semantics\n   to the label! Thus, simply by examining the label, one can now\n\
    \   directly deduce the signal that it represents, as well as its\n   position\
    \ in the SDH/SONET multiplex.  We refer to this as multiplex-\n   based labeling.\
    \  This is the idea that was incorporated in the GMPLS\n   signaling specifications\
    \ for SDH/SONET [15].\n"
- title: 5.3.  Signaling Elements
  contents:
  - "5.3.  Signaling Elements\n   In the preceding sections, we defined the meaning\
    \ of an SDH/SONET\n   label and specified its structure.  A question that arises\
    \ naturally\n   at this point is the following.  In an LSP or connection setup\n\
    \   request, how do we specify the signal for which we want to establish\n   a\
    \ path (and for which we desire a label)?\n   Clearly, information that is required\
    \ to completely specify the\n   desired signal and its characteristics must be\
    \ transferred via the\n   label distribution protocol, so that the switches along\
    \ the path can\n   be configured to correctly handle and switch the signal.  This\n\
    \   information is specified in three parts [15], each of which refers to\n  \
    \ a different network layer.\n   1. GENERALIZED_LABEL REQUEST (as in [4], [5]),\
    \ which contains three\n      parts: LSP Encoding Type, Switching Type, and G-PID.\n\
    \   The first specifies the nature/type of the LSP or the desired\n   SDH/SONET\
    \ channel, in terms of the particular signal (or collection\n   of signals) within\
    \ the SDH/SONET multiplex that the LSP represents,\n   and is used by all the\
    \ nodes along the path of the LSP.\n   The second specifies certain link selection\
    \ constraints, which\n   control, at each hop, the selection of the underlying\
    \ link that is\n   used to transport this LSP.\n   The third specifies the payload\
    \ carried by the LSP or SDH/SONET\n   channel, in terms of the termination and\
    \ adaptation functions\n   required at the end points, and is used by the source\
    \ and destination\n   nodes of the LSP.\n   2. SONET/SDH TRAFFIC_PARAMETERS (as\
    \ in [15], Section 2.1) used as a\n      SENDER_TSPEC/FLOWSPEC, which contains\
    \ 7 parts: Signal Type,\n      (Requested Contiguous Concatenation (RCC), Number\
    \ of Contiguous\n      Components (NCC), Number of Virtual Components (NVC)),\
    \ Multiplier\n      (MT), Transparency, and Profile.\n   The Signal Type indicates\
    \ the type of elementary signal comprising\n   the LSP, while the remaining fields\
    \ indicate transforms that can be\n   applied to the basic signal to build the\
    \ final signal that\n   corresponds to the LSP actually being requested.  For\
    \ instance (see\n   [15] for details):\n      - Contiguous concatenation (by using\
    \ the RCC and NCC fields) can\n        be optionally applied on the Elementary\
    \ Signal, resulting in a\n        contiguously concatenated signal.\n      - Then,\
    \ virtual concatenation (by using the NVC field) can be\n        optionally applied\
    \ on the Elementary Signal, resulting in a\n        virtually concatenated signal.\n\
    \      - Third, some transparency (by using the Transparency field) can\n    \
    \    be optionally specified when requesting a frame as a signal\n        rather\
    \ than an SPE- or VC-based signal.\n      - Fourth, a multiplication (by using\
    \ the Multiplier field) can be\n        optionally applied either directly on\
    \ the Elementary Signal or\n        on the contiguously concatenated signal obtained\
    \ from the first\n        phase, or on the virtually concatenated signal obtained\
    \ from the\n        second phase, or on these signals combined with some\n   \
    \     transparency.\n   Transparency indicates precisely which fields in these\
    \ overheads must\n   be delivered unmodified at the other end of the LSP.  An\
    \ ingress LSR\n   requesting transparency will pass these overhead fields that\
    \ must be\n   delivered to the egress LSR without any change.  From the ingress\
    \ and\n   egress LSRs point of views, these fields must be seen as unmodified.\n\
    \   Transparency is not applied at the interfaces with the initiating and\n  \
    \ terminating LSRs, but is only applied between intermediate LSRs.\n   The transparency\
    \ field is used to request an LSP that supports the\n   requested transparency\
    \ type; it may also be used to setup the\n   transparency process to be applied\
    \ at each intermediate LSR.\n   Finally, the profile field is intended to specify\
    \ particular\n   capabilities that must be supported for the LSP, for example\n\
    \   monitoring capabilities.  However, no standard profile is currently\n   defined.\n\
    \   3. UPSTREAM_LABEL for Bi-directional LSP's (as in [4], [5]).\n   4. Local\
    \ Link Selection, e.g., IF_ID_RSVP_HOP Object (as in [5]).\n"
- title: 6.  Summary and Conclusions
  contents:
  - "6.  Summary and Conclusions\n   We provided a detailed account of the issues\
    \ involved in applying\n   generalized GMPLS-based control (GMPLS) to TDM networks.\n\
    \   We began with a brief overview of GMPLS and SDH/SONET networks,\n   discussing\
    \ current circuit establishment in TDM networks, and arguing\n   why SDH/SONET\
    \ technologies will not be \"outdated\" in the foreseeable\n   future.  Next,\
    \ we looked at IP/MPLS applied to SDH/SONET networks,\n   where we considered\
    \ why such an application makes sense, and reviewed\n   some GMPLS terminology\
    \ as applied to TDM networks.\n   We considered the two main areas of application\
    \ of IP/MPLS methods to\n   TDM networks, namely routing and signaling, and discussed\
    \ how\n   Generalized MPLS routing and signaling are used in the context of TDM\n\
    \   networks.  We reviewed in detail the switching capabilities of TDM\n   equipment,\
    \ and the requirement to learn about the protection\n   capabilities of underlying\
    \ links, and how these influence the\n   available capacity advertisement in TDM\
    \ networks.\n   We focused briefly on path computation methods, pointing out that\n\
    \   these were not subject to standardization.  We then examined optical\n   path\
    \ provisioning or signaling, considering the issue of what\n   constitutes an\
    \ appropriate label for TDM circuits and how this label\n   should be structured;\
    \ and we focused on the importance of\n   hierarchical label allocation in a TDM\
    \ network.  Finally, we reviewed\n   the signaling elements involved when setting\
    \ up a TDM circuit,\n   focusing on the nature of the LSP, the type of payload\
    \ it carries,\n   and the characteristics of the links that the LSP wishes to\
    \ use at\n   each hop along its path for achieving a certain reliability.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The use of a control plane to provision connectivity\
    \ through a\n   SONET/SDH network shifts the security burden significantly from\
    \ the\n   management plane to the control plane.  Before the introduction of a\n\
    \   control plane, the communications that had to be secured were between\n  \
    \ the management stations (Element Management Systems or Network\n   Management\
    \ Systems) and each network element that participated in the\n   network connection.\
    \  After the introduction of the control plane, the\n   only management plane\
    \ communication that needs to be secured is that\n   to the head-end (ingress)\
    \ network node as the end-to-end service is\n   requested.  On the other hand,\
    \ the control plane introduces a new\n   requirement to secure signaling and routing\
    \ communications between\n   adjacent nodes in the network plane.\n   The security\
    \ risk from impersonated management stations is\n   significantly reduced by the\
    \ use of a control plane.  In particular,\n   where unsecure versions of network\
    \ management protocols such as SNMP\n   versions 1 and 2 were popular configuration\
    \ tools in transport\n   networks, the use of a control plane may significantly\
    \ reduce the\n   security risk of malicious and false assignment of network resources\n\
    \   that could cause the interception or disruption of data traffic.\n   On the\
    \ other hand, the control plane may increase the number of\n   security relationships\
    \ that each network node must maintain.  Instead\n   of a single security relationship\
    \ with its management element, each\n   network node must now maintain a security\
    \ relationship with each of\n   its signaling and routing neighbors in the control\
    \ plane.\n   There is a strong requirement for signaling and control plane\n \
    \  exchanges to be secured, and any protocols proposed for this purpose\n   must\
    \ be capable of secure message exchanges.  This is already the\n   case for the\
    \ existing GMPLS routing and signaling protocols.\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   We acknowledge all the participants of the MPLS and CCAMP\
    \ WGs, whose\n   constant enquiry about GMPLS issues in TDM networks motivated\
    \ the\n   writing of this document, and whose questions helped shape its\n   contents.\
    \  Also, thanks to Kireeti Kompella for his careful reading\n   of the last version\
    \ of this document, and for his helpful comments\n   and feedback, and to Dimitri\
    \ Papadimitriou for his review on behalf\n   of the Routing Area Directorate,\
    \ which provided many useful inputs to\n   help update the document to conform\
    \ to the standards evolutions since\n   this document passed last call.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   In the ITU references below, please see http://www.itu.int\
    \ for\n   availability of ITU documents.  For ANSI references, please see the\n\
    \   Library available through http://www.ansi.org.\n   [1]  Rosen, E., Viswanathan,\
    \ A., and R. Callon, \"Multiprotocol Label\n        Switching Architecture\",\
    \ RFC 3031, January 2001.\n   [2]  G.707, Network Node Interface for the Synchronous\
    \ Digital\n        Hierarchy (SDH), International Telecommunication Union, March\n\
    \        1996.\n   [3]  ANSI T1.105-1995, Synchronous Optical Network (SONET)\
    \ Basic\n        Description including Multiplex Structure, Rates, and Formats,\n\
    \        American National Standards Institute.\n   [4]  Berger, L., \"Generalized\
    \ Multi-Protocol Label Switching (GMPLS)\n        Signaling Functional Description\"\
    , RFC 3471, January 2003.\n   [5]  Berger, L., \"Generalized Multi-Protocol Label\
    \ Switching (GMPLS)\n        Signaling Resource ReserVation Protocol-Traffic Engineering\n\
    \        (RSVP-TE) Extensions\", RFC 3473, January 2003.\n   [6]  Bernstein, G.,\
    \ Yates, J., Saha, D.,  \"IP-Centric Control and\n        Management of Optical\
    \ Transport Networks,\" IEEE Communications\n        Mag., Vol. 40, Issue 10,\
    \ October 2000.\n   [7]  ANSI T1.105.01-1995, Synchronous Optical Network (SONET)\n\
    \        Automatic Protection Switching, American National Standards\n       \
    \ Institute.\n   [8]  G.841, Types and Characteristics of SDH Network Protection\n\
    \        Architectures, ITU-T, July 1995.\n   [9]  Kompella, K., Ed. and Y. Rekhter,\
    \ Ed., \"Routing Extensions in\n        Support of Generalized Multi-Protocol\
    \ Label Switching (GMPLS)\",\n        RFC 4202, October 2005.\n   [10] Kompella,\
    \ K., Ed. and Y. Rekhter, Ed., \"OSPF Extensions in\n        Support of Generalized\
    \ Multi-Protocol Label Switching (GMPLS)\",\n        RFC 4203, October 2005.\n\
    \   [11] Kompella, K., Ed. and Y. Rekhter, Ed., \"Intermediate System to\n   \
    \     Intermediate System (IS-IS) Extensions in Support of Generalized\n     \
    \   Multi-Protocol Label Switching (GMPLS)\", RFC 4205, October 2005.\n   [12]\
    \ Bernstein, G., Sharma, V., Ong, L., \"Inter-domain Optical\n        Routing,\"\
    \ OSA J. of Optical Networking, vol. 1, no. 2, pp.  80-\n        92.\n   [13]\
    \ Kompella, K., Rekhter, Y. and L. Berger, \"Link Bundling in MPLS\n        Traffic\
    \ Engineering (TE)\", RFC 4201, October 2005.\n   [14] Kompella, K. and Y. Rekhter,\
    \ \"Label Switched Paths (LSP)\n        Hierarchy with Generalized Multi-Protocol\
    \ Label Switching\n        (GMPLS) Traffic Engineering (TE)\", RFC 4206, October\
    \ 2005.\n   [15] Mannie, E. and D. Papadimitriou, \"Generalized Multi-Protocol\n\
    \        Label Switching (GMPLS) Extensions for Synchronous Optical\n        Network\
    \ (SONET) and Synchronous Digital Hierarchy (SDH)\n        Control\", RFC 3946,\
    \ October 2004.\n   [16] G.7715.1, ASON Routing Architecture and Requirements\
    \ for Link-\n        State Protocols, International Telecommunications Union,\n\
    \        February 2004.\n   [17] Bernstein, G., Rajagopalan, R., and Saha, D.,\
    \ \"Optical Network\n        Control: Protocols, Architectures, and Standards,\"\
    \ Addison-\n        Wesley, July 2003.\n"
- title: 10.  Acronyms
  contents:
  - "10.  Acronyms\n   ANSI     - American National Standards Institute\n   APS  \
    \    - Automatic Protection Switching\n   ATM      - Asynchronous Transfer Mode\n\
    \   BLSR     - Bi-directional Line Switch Ring\n   CPE      - Customer Premise\
    \ Equipment\n   DLCI     - Data Link Connection Identifier\n   ETSI     - European\
    \ Telecommunication Standards Institute\n   FEC      - Forwarding Equivalency\
    \ Class\n   GMPLS    - Generalized MPLS\n   IP       - Internet Protocol\n   IS-IS\
    \    - Intermediate System to Intermediate System (RP)\n   LDP      - Label Distribution\
    \ Protocol\n   LSP      - Label Switched Path\n   LSR      - Label Switching Router\n\
    \   MPLS     - Multi-Protocol Label Switching\n   NMS      - Network Management\
    \ System\n   OSPF     - Open Shortest Path First (RP)\n   PNNI     - Private Network\
    \ Node Interface\n   PPP      - Point to Point Protocol\n   QoS      - Quality\
    \ of Service\n   RP       - Routing Protocol\n   RSVP     - ReSerVation Protocol\n\
    \   SDH      - Synchronous Digital Hierarchy\n   SNMP     - Simple Network Management\
    \ Protocol\n   SONET    - Synchronous Optical NETworking\n   SPE      - SONET\
    \ Payload Envelope\n   STM      - Synchronous Transport Module (or Terminal Multiplexer)\n\
    \   STS      - Synchronous Transport Signal\n   TDM      - Time Division Multiplexer\n\
    \   TE       - Traffic Engineering\n   TMN      - Telecommunication Management\
    \ Network\n   UPSR     - Uni-directional Path Switch Ring\n   VC       - Virtual\
    \ Container (SDH) or Virtual Circuit\n   VCI      - Virtual Circuit Identifier\
    \ (ATM)\n   VPI      - Virtual Path Identifier (ATM)\n   VT       - Virtual Tributary\n\
    \   WDM      - Wavelength-Division Multiplexing\n"
- title: Author's Addresses
  contents:
  - "Author's Addresses\n   Greg Bernstein\n   Grotto Networking\n   Phone: +1 510\
    \ 573-2237\n   EMail: gregb@grotto-networking.com\n   Eric Mannie\n   Perceval\n\
    \   Rue Tenbosch, 9\n   1000 Brussels\n   Belgium\n   Phone: +32-2-6409194\n \
    \  EMail: eric.mannie@perceval.net\n   Vishal Sharma\n   Metanoia, Inc.\n   888\
    \ Villa Street, Suite 500\n   Mountain View, CA 94041\n   Phone: +1 650 641 0082\n\
    \   Email: v.sharma@ieee.org\n   Eric Gray\n   Marconi Corporation, plc\n   900\
    \ Chelmsford Street\n   Lowell, MA  01851\n   USA\n   Phone: +1 978 275 7470\n\
    \   EMail: Eric.Gray@Marconi.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
