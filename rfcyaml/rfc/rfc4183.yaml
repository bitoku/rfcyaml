- title: __initial_text__
  contents:
  - '     A Suggested Scheme for DNS Resolution of Networks and Gateways

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC is not a candidate for any level of Internet Standard.\
    \  The\n   IETF disclaims any knowledge of the fitness of this RFC for any\n \
    \  purpose and notes that the decision to publish is not based on IETF\n   review\
    \ apart from IESG review for conflict with IETF work.  The RFC\n   Editor has\
    \ chosen to publish this document at its discretion.  See\n   RFC 3932 [6] for\
    \ more information.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document suggests a method of using DNS to determine the network\n\
    \   that contains a specified IP address, the netmask of that network,\n   and\
    \ the address(es) of first-hop routers(s) on that network.  This\n   method supports\
    \ variable-length subnet masks, delegation of subnets\n   on non-octet boundaries,\
    \ and multiple routers per subnet.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As a variety of new devices are introduced to the network,\
    \ many of\n   them not traditional workstations or routers, there are requirements\n\
    \   that the first-hop router provide some network service for a host.\n   It\
    \ may be necessary for a third-party server in the network to\n   request some\
    \ service related to the host from the first-hop router(s)\n   for that host.\
    \  It would be useful to have a standard mechanism for\n   such a third-party\
    \ device to find the first-hop router(s) for that\n   host.\n   DNS-based mechanisms\
    \ have been defined for the resolution of router\n   addresses for classful networks\
    \ (RFC 1035 [1]) and of subnets (RFC\n   1101 [2]).  RFC 1101 suffers from a number\
    \ of defects, chief among\n   which are that it does not support variable-length\
    \ subnet masks,\n   which are commonly deployed in the Internet.  The present\
    \ document\n   defines DNS-based mechanisms to cure these defects.\n   Since the\
    \ writing of RFC 1101, DNS mechanisms for dealing with\n   classless networks\
    \ have been defined, for example, RFC 2317 [3].\n   This document describes a\
    \ mechanism that uses notation similar to\n   that of RFC 2317 to specify a series\
    \ of PTR records enumerating the\n   subnets of a given network in the RFC 2317\
    \ notation.  This lookup\n   process continues until the contents of the PTR records\
    \ are not an\n   in-addr.arpa.-derived domain name.  These terminal PTR record\
    \ values\n   are treated as the hostname(s) of the router(s) on that network.\n\
    \   This RFC also specifies an extension to the method of RFC 2317 to\n   support\
    \ delegation at non-octet boundaries.\n"
- title: 2.  Generic Format of a Network Domain Name
  contents:
  - "2.  Generic Format of a Network Domain Name\n   Using the Augmented BNF of RFC\
    \ 2234 [4], we can describe a generic\n   domain name for a network as follows:\n\
    \      networkdomainname = maskedoctet \".\" *( decimaloctet / maskedoctet\n \
    \     \".\") \"in-addr.arpa.\"\n      maskedoctet = decimaloctet \"-\" mask\n\
    \      mask = 1*2DIGIT ; representing a decimal integer value in the\n       \
    \               ; range 1-32\n      decimaloctet = 1*3DIGIT ; representing a decimal\
    \ integer value in\n                              ; the range 0 through 255\n\
    \   By way of reference, an IPv4 CIDR notation network address would\n   be written\n\
    \      IPv4CIDR = decimaloctet \".\" decimaloctet \".\" decimaloctet \".\"\n \
    \     decimaloctet \"/\" mask\n   A \"-\" is used as a delimiter in a maskedoctet\
    \ instead of a \"/\" as in\n   RFC 2317 out of concern about compatibility with\
    \ existing DNS\n   servers, many of which do not consider \"/\" to be a valid\
    \ character in\n   a hostname.\n"
- title: 3.  Non-Octet Boundary Delegation
  contents:
  - "3.  Non-Octet Boundary Delegation\n   In RFC 2317, there is no mechanism for\
    \ non-octet boundary delegation.\n   Networks would be represented as being part\
    \ of the domain of the next\n   octet.\n   Examples:\n      10.100.2.0/26  ->\
    \ 0-26.2.100.10.in-addr.arpa.\n      10.20.128.0/23 -> 128-23.20.10.in-addr.arpa.\n\
    \      10.192.0.0/13 -> 192-13.10.in-addr.arpa.\n   In the event that the entity\
    \ subnetting does not actually own the\n   network being subnetted on an octet\
    \ break, a mechanism needs to be\n   available to allow for the specification\
    \ of those subnets.  The\n   mechanism is to allow the use of maskedoctet labels\
    \ as delegation\n   shims.\n   For example, consider an entity A that controls\
    \ a network\n   10.1.0.0/16.  Entity A delegates to entity B the network 10.1.0.0/18.\n\
    \   In order to avoid having to update entries for entity B whenever\n   entity\
    \ B updates subnetting, entity A delegates the\n   0-18.1.10.in-addr.arpa domain\
    \ (with an NS record in A's DNS tables as\n   usual) to entity B.  Entity B then\
    \ subnets off 10.1.0.0/25.  It would\n   provide a domain name for this network\
    \ of\n   0-25.0.0-18.1.10.in-addr.arpa (in B's DNS tables).\n   In order to speak\
    \ about the non-octet boundary case more easily, it\n   is useful to define a\
    \ few terms.\n   Network domain names that do not contain any maskedoctets after\
    \ the\n   first (leftmost) label are hereafter referred to as canonical domain\n\
    \   names for that network.  0-25.0.1.10.in-addr.arpa.  is the canonical\n   domain\
    \ name for the network 10.1.0.0/25.\n   Network domain names that do contain maskedoctet\
    \ labels after the\n   first (leftmost) label can be reduced to a canonical domain\
    \ name by\n   dropping all maskedoctet labels after the first (leftmost) label.\n\
    \   They are said to be reducible to the canonical network domain name.\n   So\
    \ for example 0-25.0.0-18.1.10.in-addr.arpa.  is reducible to\n   0-25.0.1.10.in-addr.arpa.\
    \  Note that a network domain name represents\n   the same network as the canonical\
    \ domain name to which it can be\n   reduced.\n"
- title: 4.  Lookup Procedure for a Network Given an IP Address
  contents:
  - '4.  Lookup Procedure for a Network Given an IP Address

    '
- title: 4.1.  Procedure
  contents:
  - "4.1.  Procedure\n   1.  Take the initial IP address x.y.z.w and create a candidate\n\
    \       network by assuming a 24-bit subnet mask.  Thus, the initial\n       candidate\
    \ network is x.y.z.0/24.\n   2.  Given a candidate network of the form x.y.z.n/m\
    \ create an\n       in-addr.arpa candidate domain name:\n       1.  If the number\
    \ of mask bits m is greater than or equal to 24\n           but less than or equal\
    \ to 32, then the candidate domain name\n           is n-m.z.y.x.in-addr.arpa.\n\
    \       2.  If the number of mask bits m is greater than or equal to 16\n    \
    \       but less than 24, then the candidate domain name is\n           z-m.y.x.in-addr.arpa.\n\
    \       3.  If the number of mask bits m is greater than or equal to 8\n     \
    \      but less than 16, then the candidate domain name is\n           y-m.x.in-addr.arpa.\n\
    \       4.  The notion of fewer than 8 mask bits is not reasonable.\n   3.  Perform\
    \ a DNS lookup for a PTR record for the candidate domain\n       name.\n   4.\
    \  If the PTR records returned from looking up the candidate domain\n       name\
    \ are of the form of a domain name for a network as defined\n       previously\
    \ (Section 2), then for each PTR record reduce that\n       returned domain name\
    \ to the canonical form\n       p1-q1.z1.y1.x1.in-addr.arpa.  This represents\
    \ a network\n       x1.y1.z1.p1/q1.\n       1.  If one of the x1.y1.z1.p1/q1 subnets\
    \ contains the original IP\n           address x.y.z.w, then the PTR record return\
    \ becomes the new\n           candidate domain name.  Repeat steps 3-4.\n    \
    \   2.  If none of the x1.y1.z1.p1/q1 subnets contain the original IP\n      \
    \     address x.y.z.w, then this process has failed.\n   5.  If the PTR record(s)\
    \ for the candidate network is not of the form\n       of a network domain name,\
    \ then they are presumed to be the\n       hostname(s) of the gateway(s) for the\
    \ subnet being resolved.\n   6.  If the PTR lookup fails (no PTR records are returned).\n\
    \       1.  If no candidate network PTR lookup for this IP address has\n     \
    \      succeeded in the past and the netmask for the last candidate\n        \
    \   network was 24 or 16 bits long, then presume a netmask of 8\n           fewer\
    \ bits for the candidate network and repeat steps 2-4.\n       2.  If no candidate\
    \ network PTR lookup for this IP address has\n           succeeded in the past\
    \ and the netmask of the last candidate\n           network was not 24 or 16 bits\
    \ long, then increase the netmask\n           by 1 bit and repeat steps 2-4.\n\
    \       3.  If a candidate network PTR lookup for this IP address has\n      \
    \     succeeded in the past or the netmask of the last candidate\n           network\
    \ was 32 bits, then this process has failed.\n   7.  Perform a DNS A record lookup\
    \ for the domain name of the gateway\n       to determine the IP number of the\
    \ gateway.\n"
- title: 4.2.  IPv6 Support
  contents:
  - "4.2.  IPv6 Support\n   RFC 3513 [5] requires all IPv6 unicast addresses that\
    \ do not begin\n   with binary 000 have a 64-bit interface ID.  From the point\
    \ of view\n   of identifying the last hop router for an IPv6 unicast address,\
    \ this\n   means that almost all hosts may be considered to live on a /64\n  \
    \ subnet.  Given the requirement that for any subnet there must be an\n   anycast\
    \ address for the routers on that subnet, the process described\n   for IPv4 in\
    \ this document can just as easily be achieved by querying\n   the anycast address\
    \ via SNMP.  Therefore, this document does not\n   speak to providing a DNS-based\
    \ mechanism for IPv6.\n"
- title: 4.3.  Example
  contents:
  - "4.3.  Example\n   Imagine we begin with the IP number 10.15.162.3.\n   1.  Form\
    \ a candidate network of 10.15.162.0/24.\n   2.  Form a domain name 0-24.162.15.10.in-addr.arpa.\n\
    \   3.  Look up the PTR records for 0-24.162.15.10.in-addr.arpa.\n   4.  Suppose\
    \ the lookup fails ( no PTR records returned ), then\n   5.  Form a new candidate\
    \ network 10.15.0.0/16.\n   6.  Form a domain name 0-16.15.10.in-addr.arpa.\n\
    \   7.  Look up the PTR records for 0-16.15.10.in-addr.arpa.\n   8.  Lookup returns:\n\
    \        1.  0-17.15.10.in-addr.arpa.\n        2.  128-18.15.10.in-addr.arpa.\n\
    \        3.  192-18.15.10.in-addr.arpa.\n   9.  So 10.15.0.0/16 is subnetted into\
    \ 10.15.0.0/17, 10.15.128.0/18,\n        and 10.15.192.0/18.\n   10.  Since 10.15.162.3\
    \ is in 10.15.128.0/18, the new candidate domain\n        name is 128-18.15.10.in-addr.arpa.\n\
    \   11.  Look up the PTR records for 128-18.15.10.in-addr.arpa.\n   12.  Lookup\
    \ returns\n        1.  128-19.128-18.15.10.in-addr.arpa.\n        2.  0-25.160.128-18.15.10.in-addr.arpa.\n\
    \        3.  128-25.160.128-18.15.10.in-addr.arpa.\n        4.  0-24.161.128-18.15.10.in-addr.arpa.\n\
    \        5.  162-23.128-18.15.10.in-addr.arpa.\n   13.  The canonical network\
    \ domains for these returned records are\n        1.  128-19.15.10.in-addr.arpa.\n\
    \        2.  0-25.160.15.10.in-addr.arpa.\n        3.  128-25.160.15.10.in-addr.arpa.\n\
    \        4.  0-24.161.15.10.in-addr.arpa.\n        5.  162-23.15.10.in-addr.arpa.\n\
    \   14.  So the network 10.15.128.0/18 is subnetted into 10.15.128.0/19,\n   \
    \     10.15.160.0/25, 10.15.160.128/25, 10.15.161.0/25, 10.15.162.0/\n       \
    \ 23.\n   15.  Since 10.15.162.3 is in 10.15.162.0/23, the new candidate domain\n\
    \        name is 162-23.128-18.15.10.in-addr.arpa.\n   16.  Look up the PTR records\
    \ for 162-23.128-18.15.10.in-addr.arpa.\n   17.  Lookup returns:\n        1. \
    \ gw1.example.net.\n        2.  gw2.example.net.\n   18.  Look up the A records\
    \ for gw1.example.net.  and gw2.example.net.\n   19.  Lookup returns\n       \
    \ 1.  gw1.example.net: 10.15.162.1\n        2.  gw2.example.net: 10.15.162.2\n\
    \   So the 10.15.162.3 is in network 10.15.162.0/23, which has gateways\n   10.15.162.1\
    \ and 10.15.162.2.\n"
- title: 5.  Needed DNS Entries
  contents:
  - "5.  Needed DNS Entries\n   The example of the lookup procedure (Section 4.3)\
    \ would require\n   DNS records as follows:\n      In entity A's DNS zone files:\n\
    \         0-16.15.10.in-addr.arpa.  IN  PTR 0-17.15.10.in-addr.arpa.\n       \
    \  0-16.15.10.in-addr.arpa.  IN  PTR 128-18.15.10.in-addr.arpa.\n         0-16.15.10.in-addr.arpa.\
    \  IN  PTR 192-18.15.10.in-addr.arpa.\n         0-17.15.10.in-addr.arpa.  IN \
    \ NS ns1.example.org\n         128-18.15.10.in-addr.arpa.  IN  NS ns1.example.net\n\
    \         192-18.15.10.in-addr.arpa.  IN  NS ns1.example.com\n         ns1.example.net\
    \           IN  A  10.15.0.50\n         ns1.example.org           IN  A  10.15.128.50\n\
    \         ns1.example.com           IN  A  10.15.192.50\n      In entity B's DNS\
    \ zone files:\n         128-18.15.10.in-addr.arpa.  IN  PTR\n         128-19.128-18.15.10.in-addr.arpa.\n\
    \         128-18.15.10.in-addr.arpa.  IN  PTR\n         0-25.160.128-18.15.10.in-addr.arpa.\n\
    \         128-18.15.10.in-addr.arpa.  IN  PTR\n         128-25.160.128-18.15.10.in-addr.arpa.\n\
    \         128-18.15.10.in-addr.arpa.  IN  PTR\n         0-24.161.128-18.15.10.in-addr.arpa.\n\
    \         128-18.15.10.in-addr.arpa.  IN  PTR\n         162-23.128-18.15.10.in-addr.arpa.\n\
    \         162-23.128-18.15.10.in-addr.arpa.  IN  PTR gw1.example.net.\n      \
    \   162-23.128-18.15.10.in-addr.arpa.  IN  PTR gw2.example.net.\n         gw1.example.net.\
    \  IN  A 10.15.162.1\n         gw2.example.net.  IN  A 10.15.162.2\n"
- title: 6.  Alternate Domain Suffix
  contents:
  - "6.  Alternate Domain Suffix\n   Proper functioning of this method may required\
    \ the cooperation of\n   upstream network providers.  Not all upstream network\
    \ providers may\n   wish to implement this method.  If an upstream provider does\
    \ not wish\n   to implement this method, the method may still be used with an\n\
    \   alternate domain suffix.\n   For example, if the upstream network provider\
    \ of example.com did not\n   wish to provide glue records in its branch of the\
    \ in-addr.arpa.\n   domain, then example.com might elect to use the suffix in-\n\
    \   addr.example.com as an alternate domain suffix for that purpose.\n   For this\
    \ reason, implementations of clients intending to use this\n   method should use\
    \ in-addr.arpa. as the default suffix, but allow for\n   configuration of an alternate\
    \ suffix.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Any revelation of information to the public internet\
    \ about the\n   internal structure of your network may make it easier for nefarious\n\
    \   persons to mount diverse attacks upon a network.  Consequently, care\n   should\
    \ be exercised in deciding which (if any) of the DNS resource\n   records described\
    \ in this document should be made visible to the\n   public internet.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [1]  Mockapetris, P., \"Domain Names - Implementation\
    \ and\n        Specficication\", STD 13, RFC 1035, November 1987.\n   [2]  Mockapetris,\
    \ P., \"DNS Encoding of Network Names and Other\n        Types\", RFC 1101, April\
    \ 1989.\n   [3]  Eidnes, H., de Groot, G., and P. Vixie, \"Classless IN-ADDR.ARPA\n\
    \        delegation\", RFC 2317, March 1998.\n   [4]  Crocker, D. and P. Overell,\
    \ \"Augmented BNF for Syntax\n        Specifications: ABNF\", RFC 2234, November\
    \ 1997.\n   [5]  Hinden, R. and S. Deering, \"Internet Protocol Version 6 (IPv6)\n\
    \        Addressing Architecture\", RFC 3513, April 2003.\n   [6]  Alvestrand,\
    \ H., \"The IESG and RFC Editor Documents: Procedures\",\n        BCP 92, RFC\
    \ 3932, October 2004.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Edward A. Warnicke\n   Cisco Systems Inc.\n   12515 Research\
    \ Blvd., Building 4\n   Austin, TX 78759\n   USA\n   Phone: (919) 392-8489\n \
    \  EMail: eaw@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
