- title: __initial_text__
  contents:
  - '                        URI Design and Ownership

    '
- title: Abstract
  contents:
  - "Abstract\n   Section 1.1.1 of RFC 3986 defines URI syntax as \"a federated and\n\
    \   extensible naming system wherein each scheme's specification may\n   further\
    \ restrict the syntax and semantics of identifiers using that\n   scheme.\"  In\
    \ other words, the structure of a URI is defined by its\n   scheme.  While it\
    \ is common for schemes to further delegate their\n   substructure to the URI's\
    \ owner, publishing independent standards\n   that mandate particular forms of\
    \ URI substructure is inappropriate,\n   because that essentially usurps ownership.\
    \  This document further\n   describes this problematic practice and provides\
    \ some acceptable\n   alternatives for use in standards.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7320.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Intended Audience . . . . . . . . . . . . . . . .\
    \ . . . .   4\n     1.2.  Notational Conventions  . . . . . . . . . . . . . .\
    \ . . .   4\n   2.  Best Current Practices for Standardizing Structured URIs \
    \ . .   4\n     2.1.  URI Schemes . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n     2.2.  URI Authorities . . . . . . . . . . . . . . . . . . . . .\
    \   5\n     2.3.  URI Paths . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n     2.4.  URI Queries . . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \     2.5.  URI Fragment Identifiers  . . . . . . . . . . . . . . . .   6\n  \
    \ 3.  Alternatives to Specifying Structure in URIs  . . . . . . . .   7\n   4.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .   7\n   5.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     5.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .   8\n     5.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .   8\n   Appendix A.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . .   9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   URIs [RFC3986] very often include structured application\
    \ data.  This\n   might include artifacts from filesystems (often occurring in\
    \ the path\n   component) and user information (often in the query component).\
    \  In\n   some cases, there can even be application-specific data in the\n   authority\
    \ component (e.g., some applications are spread across\n   several hostnames to\
    \ enable a form of partitioning or dispatch).\n   Furthermore, constraints upon\
    \ the structure of URIs can be imposed by\n   an implementation; for example,\
    \ many Web servers use the filename\n   extension of the last path segment to\
    \ determine the media type of the\n   response.  Likewise, prepackaged applications\
    \ often have highly\n   structured URIs that can only be changed in limited ways\
    \ (often, just\n   the hostname and port on which they are deployed).\n   Because\
    \ the owner of the URI (as defined in [webarch]\n   Section 2.2.2.1) is choosing\
    \ to use the server or the application,\n   this can be seen as reasonable delegation\
    \ of authority.  However,\n   when such conventions are mandated by a party other\
    \ than the owner,\n   it can have several potentially detrimental effects:\n \
    \  o  Collisions - As more ad hoc conventions for URI structure become\n     \
    \ standardized, it becomes more likely that there will be collisions\n      between\
    \ them (especially considering that servers, applications,\n      and individual\
    \ deployments will have their own conventions).\n   o  Dilution - When the information\
    \ added to a URI is ephemeral, this\n      dilutes its utility by reducing its\
    \ stability (see [webarch]\n      Section 3.5.1), and can cause several alternate\
    \ forms of the URI\n      to exist (see [webarch] Section 2.3.1).\n   o  Rigidity\
    \ - Fixed URI syntax often interferes with desired\n      deployment patterns.\
    \  For example, if an authority wishes to offer\n      several applications on\
    \ a single hostname, it becomes difficult to\n      impossible to do if their\
    \ URIs do not allow the required\n      flexibility.\n   o  Operational Difficulty\
    \ - Supporting some URI conventions can be\n      difficult in some implementations.\
    \  For example, specifying that a\n      particular query parameter be used with\
    \ \"HTTP\" URIs precludes the\n      use of Web servers that serve the response\
    \ from a filesystem.\n      Likewise, an application that fixes a base path for\
    \ its operation\n      (e.g., \"/v1\") makes it impossible to deploy other applications\n\
    \      with the same prefix on the same host.\n   o  Client Assumptions - When\
    \ conventions are standardized, some\n      clients will inevitably assume that\
    \ the standards are in use when\n      those conventions are seen.  This can lead\
    \ to interoperability\n      problems; for example, if a specification documents\
    \ that the \"sig\"\n      URI query parameter indicates that its payload is a\
    \ cryptographic\n      signature for the URI, it can lead to undesirable behavior.\n\
    \   Publishing a standard that constrains an existing URI structure in\n   ways\
    \ that aren't explicitly allowed by [RFC3986] (usually, by\n   updating the URI\
    \ scheme definition) is inappropriate, because the\n   structure of a URI needs\
    \ to be firmly under the control of its owner,\n   and the IETF (as well as other\
    \ organizations) should not usurp it.\n   This document explains some best current\
    \ practices for establishing\n   URI structures, conventions, and formats in standards.\
    \  It also\n   offers strategies for specifications to avoid violating these\n\
    \   guidelines in Section 3.\n"
- title: 1.1.  Intended Audience
  contents:
  - "1.1.  Intended Audience\n   This document's requirements target the authors of\
    \ specifications\n   that constrain the syntax or structure of URIs or parts of\
    \ them.  Two\n   classes of such specifications are called out specifically:\n\
    \   o  Protocol Extensions (\"extensions\") - specifications that offer new\n\
    \      capabilities that could apply to any identifier, or to a large\n      subset\
    \ of possible identifiers; e.g., a new signature mechanism\n      for 'http' URIs,\
    \ or metadata for any URI.\n   o  Applications Using URIs (\"applications\") -\
    \ specifications that use\n      URIs to meet specific needs; e.g., an HTTP interface\
    \ to particular\n      information on a host.\n   Requirements that target the\
    \ generic class \"Specifications\" apply to\n   all specifications, including\
    \ both those enumerated above and others.\n   Note that this specification ought\
    \ not be interpreted as preventing\n   the allocation of control of URIs by parties\
    \ that legitimately own\n   them, or have delegated that ownership; for example,\
    \ a specification\n   might legitimately define the semantics of a URI on IANA's\
    \ Web site\n   as part of the establishment of a registry.\n   There may be existing\
    \ IETF specifications that already deviate from\n   the guidance in this document.\
    \  In these cases, it is up to the\n   relevant communities (i.e., those of the\
    \ URI scheme as well as that\n   which produced the specification in question)\
    \ to determine an\n   appropriate outcome; e.g., updating the scheme definition,\
    \ or\n   changing the specification.\n"
- title: 1.2.  Notational Conventions
  contents:
  - "1.2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Best Current Practices for Standardizing Structured URIs
  contents:
  - "2.  Best Current Practices for Standardizing Structured URIs\n   This section\
    \ updates [RFC3986] by setting limitations on how other\n   specifications may\
    \ define structure and semantics within URIs.  Best\n   practices differ depending\
    \ on the URI component, as described below.\n"
- title: 2.1.  URI Schemes
  contents:
  - "2.1.  URI Schemes\n   Applications and extensions MAY require use of specific\
    \ URI\n   scheme(s); for example, it is perfectly acceptable to require that an\n\
    \   application support 'http' and 'https' URIs.  However, applications\n   SHOULD\
    \ NOT preclude the use of other URI schemes in the future,\n   unless they are\
    \ clearly only usable with the nominated schemes.\n   A specification that defines\
    \ substructure within a specific URI\n   scheme MUST do so in the defining document\
    \ for that URI scheme.  A\n   specification that defines substructure for URI\
    \ schemes overall MUST\n   do so by modifying [BCP115] (an exceptional circumstance).\n"
- title: 2.2.  URI Authorities
  contents:
  - "2.2.  URI Authorities\n   Scheme definitions define the presence, format and\
    \ semantics of an\n   authority component in URIs; all other specifications MUST\
    \ NOT\n   constrain, or define the structure or the semantics for URI\n   authorities,\
    \ unless they update the scheme registration itself.\n   For example, an extension\
    \ or application ought not say that the \"foo\"\n   prefix in \"foo_app.example.com\"\
    \ is meaningful or triggers special\n   handling in URIs.\n   However, applications\
    \ MAY nominate or constrain the port they use,\n   when applicable.  For example,\
    \ BarApp could run over port nnnn\n   (provided that it is properly registered).\n"
- title: 2.3.  URI Paths
  contents:
  - "2.3.  URI Paths\n   Scheme definitions define the presence, format, and semantics\
    \ of a\n   path component in URIs; all other specifications MUST NOT constrain,\n\
    \   or define the structure or the semantics for any path component.\n   The only\
    \ exception to this requirement is registered \"well-known\"\n   URIs, as specified\
    \ by [RFC5785].  See that document for a description\n   of the applicability\
    \ of that mechanism.\n   For example, an application ought not specify a fixed\
    \ URI path\n   \"/myapp\", since this usurps the host's control of that space.\n\
    \   Specifying a fixed path relative to another (e.g., {whatever}/myapp)\n   is\
    \ also bad practice (even if \"whatever\" is discovered as suggested\n   in Section\
    \ 3); while doing so might prevent collisions, it does not\n   avoid the potential\
    \ for operational difficulties (for example, an\n   implementation that prefers\
    \ to use query processing instead, because\n   of implementation constraints).\n"
- title: 2.4.  URI Queries
  contents:
  - "2.4.  URI Queries\n   The presence, format and semantics of the query component\
    \ of URIs is\n   dependent upon many factors, and MAY be constrained by a scheme\n\
    \   definition.  Often, they are determined by the implementation of a\n   resource\
    \ itself.\n   Applications MUST NOT directly specify the syntax of queries, as\
    \ this\n   can cause operational difficulties for deployments that do not\n  \
    \ support a particular form of a query.  For example, a site may wish\n   to support\
    \ an application using \"static\" files that do not support\n   query parameters.\n\
    \   Extensions MUST NOT constrain the format or semantics of queries.\n   For\
    \ example, an extension that indicates that all query parameters\n   with the\
    \ name \"sig\" indicate a cryptographic signature would collide\n   with potentially\
    \ preexisting query parameters on sites and lead\n   clients to assume that any\
    \ matching query parameter is a signature.\n   HTML [W3C.REC-html401-19991224]\
    \ constrains the syntax of query\n   strings used in form submission.  New form\
    \ languages SHOULD NOT\n   emulate it, but instead allow creation of a broader\
    \ variety of URIs\n   (e.g., by allowing the form to create new path components,\
    \ and so\n   forth).\n   Note that \"well-known\" URIs (see [RFC5785]) MAY constrain\
    \ their own\n   query syntax, since these name spaces are effectively delegated\
    \ to\n   the registering party.\n"
- title: 2.5.  URI Fragment Identifiers
  contents:
  - "2.5.  URI Fragment Identifiers\n   Media type definitions (as per [RFC6838])\
    \ SHOULD specify the fragment\n   identifier syntax(es) to be used with them;\
    \ other specifications MUST\n   NOT define structure within the fragment identifier,\
    \ unless they are\n   explicitly defining one for reuse by media type definitions.\n\
    \   For example, an application that defines common fragment identifiers\n   across\
    \ media types not controlled by it would engender\n   interoperability problems\
    \ with handlers for those media types\n   (because the new, non-standard syntax\
    \ is not expected).\n"
- title: 3.  Alternatives to Specifying Structure in URIs
  contents:
  - "3.  Alternatives to Specifying Structure in URIs\n   Given the issues described\
    \ in Section 1, the most successful strategy\n   for applications and extensions\
    \ that wish to use URIs is to use them\n   in the fashion they were designed:\
    \ as links that are exchanged as\n   part of the protocol, rather than statically\
    \ specified syntax.\n   Several existing specifications can aid in this.\n   [RFC5988]\
    \ specifies relation types for Web links.  By providing a\n   framework for linking\
    \ on the Web, where every link has a relation\n   type, context and target, it\
    \ allows applications to define a link's\n   semantics and connectivity.\n   [RFC6570]\
    \ provides a standard syntax for URI Templates that can be\n   used to dynamically\
    \ insert application-specific variables into a URI\n   to enable such applications\
    \ while avoiding impinging upon URI owners'\n   control of them.\n   [RFC5785]\
    \ allows specific paths to be 'reserved' for standard use on\n   URI schemes that\
    \ opt into that mechanism ('http' and 'https' by\n   default).  Note, however,\
    \ that this is not a general \"escape valve\"\n   for applications that need structured\
    \ URIs; see that specification\n   for more information.\n   Specifying more elaborate\
    \ structures in an attempt to avoid\n   collisions is not an acceptable solution,\
    \ and does not address the\n   issues in Section 1.  For example, prefixing query\
    \ parameters with\n   \"myapp_\" does not help, because the prefix itself is subject\
    \ to the\n   risk of collision (since it is not \"reserved\").\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document does not introduce new protocol\
    \ artifacts with security\n   considerations.  It prohibits some practices that\
    \ might lead to\n   vulnerabilities; for example, if a security-sensitive mechanism\
    \ is\n   introduced by assuming that a URI path component or query string has\n\
    \   a particular meaning, false positives might be encountered (due to\n   sites\
    \ that already use the chosen string).  See also [RFC6943].\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n\
    \              Resource Identifier (URI): Generic Syntax\", STD 66, RFC\n    \
    \          3986, January 2005.\n   [RFC6838]  Freed, N., Klensin, J., and T. Hansen,\
    \ \"Media Type\n              Specifications and Registration Procedures\", BCP\
    \ 13, RFC\n              6838, January 2013.\n   [webarch]  Jacobs, I. and N.\
    \ Walsh, \"Architecture of the World Wide\n              Web, Volume One\", December\
    \ 2004,\n              <http://www.w3.org/TR/2004/REC-webarch-20041215>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [BCP115]   Hansen, T., Hardie, T., and L. Masinter,\
    \ \"Guidelines and\n              Registration Procedures for New URI Schemes\"\
    , RFC 4395,\n              BCP 115, February 2006.\n   [RFC5785]  Nottingham,\
    \ M. and E. Hammer-Lahav, \"Defining Well-Known\n              Uniform Resource\
    \ Identifiers (URIs)\", RFC 5785, April\n              2010.\n   [RFC5988]  Nottingham,\
    \ M., \"Web Linking\", RFC 5988, October 2010.\n   [RFC6570]  Gregorio, J., Fielding,\
    \ R., Hadley, M., Nottingham, M.,\n              and D. Orchard, \"URI Template\"\
    , RFC 6570, March 2012.\n   [RFC6943]  Thaler, D., \"Issues in Identifier Comparison\
    \ for Security\n              Purposes\", RFC 6943, May 2013.\n   [W3C.REC-html401-19991224]\n\
    \              Raggett, D., Hors, A., and I. Jacobs, \"HTML 4.01\n           \
    \   Specification\", World Wide Web Consortium Recommendation\n              REC-html401-19991224,\
    \ December 1999,\n              <http://www.w3.org/TR/1999/REC-html401-19991224>.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   Thanks to David Booth, Dave Crocker, Tim Bray,\
    \ Anne van Kesteren,\n   Martin Thomson, Erik Wilde, Dave Thaler, and Barry Leiba\
    \ for their\n   suggestions and feedback.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mark Nottingham\n   EMail: mnot@mnot.net\n   URI:   http://www.mnot.net/\n"
