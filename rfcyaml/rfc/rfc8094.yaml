- title: __initial_text__
  contents:
  - '           DNS over Datagram Transport Layer Security (DTLS)

    '
- title: Abstract
  contents:
  - "Abstract\n   DNS queries and responses are visible to network elements on the\
    \ path\n   between the DNS client and its server.  These queries and responses\n\
    \   can contain privacy-sensitive information, which is valuable to\n   protect.\n\
    \   This document proposes the use of Datagram Transport Layer Security\n   (DTLS)\
    \ for DNS, to protect against passive listeners and certain\n   active attacks.\
    \  As latency is critical for DNS, this proposal also\n   discusses mechanisms\
    \ to reduce DTLS round trips and reduce the DTLS\n   handshake size.  The proposed\
    \ mechanism runs over port 853.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8094.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Relationship to TCP Queries and to DNSSEC ..................3\n  \
    \    1.2. Document Status ............................................4\n   2.\
    \ Terminology .....................................................4\n   3. Establishing\
    \ and Managing DNS over DTLS Sessions ................5\n      3.1. Session Initiation\
    \ .........................................5\n      3.2. DTLS Handshake and Authentication\
    \ ..........................5\n      3.3. Established Sessions .......................................6\n\
    \   4. Performance Considerations ......................................7\n  \
    \ 5. Path MTU (PMTU) Issues ..........................................7\n   6.\
    \ Anycast .........................................................8\n   7. Usage\
    \ ...........................................................9\n   8. IANA Considerations\
    \ .............................................9\n   9. Security Considerations\
    \ .........................................9\n   10. References ....................................................10\n\
    \      10.1. Normative References .....................................10\n  \
    \    10.2. Informative References ...................................11\n   Acknowledgements\
    \ ..................................................13\n   Authors' Addresses\
    \ ................................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Domain Name System is specified in [RFC1034] and [RFC1035].\
    \  DNS\n   queries and responses are normally exchanged unencrypted; thus, they\n\
    \   are vulnerable to eavesdropping.  Such eavesdropping can result in an\n  \
    \ undesired entity learning domain that a host wishes to access, thus\n   resulting\
    \ in privacy leakage.  The DNS privacy problem is further\n   discussed in [RFC7626].\n\
    \   This document defines DNS over DTLS, which provides confidential DNS\n   communication\
    \ between stub resolvers and recursive resolvers, stub\n   resolvers and forwarders,\
    \ and forwarders and recursive resolvers.\n   DNS over DTLS puts an additional\
    \ computational load on servers.  The\n   largest gain for privacy is to protect\
    \ the communication between the\n   DNS client (the end user's machine) and its\
    \ caching resolver.  DNS\n   over DTLS might work equally between recursive clients\
    \ and\n   authoritative servers, but this application of the protocol is out of\n\
    \   scope for the DNS PRIVate Exchange (DPRIVE) working group per its\n   current\
    \ charter.  This document does not change the format of DNS\n   messages.\n  \
    \ The motivations for proposing DNS over DTLS are that:\n   o  TCP suffers from\
    \ network head-of-line blocking, where the loss of\n      a packet causes all\
    \ other TCP segments not to be delivered to the\n      application until the lost\
    \ packet is retransmitted.  DNS over\n      DTLS, because it uses UDP, does not\
    \ suffer from network head-of-\n      line blocking.\n   o  DTLS session resumption\
    \ consumes one round trip, whereas TLS\n      session resumption can start only\
    \ after the TCP handshake is\n      complete.  However, with TCP Fast Open [RFC7413],\
    \ the\n      implementation can achieve the same RTT efficiency as DTLS.\n   Note:\
    \ DNS over DTLS is an experimental update to DNS, and the\n   experiment will\
    \ be concluded when the specification is evaluated\n   through implementations\
    \ and interoperability testing.\n"
- title: 1.1.  Relationship to TCP Queries and to DNSSEC
  contents:
  - "1.1.  Relationship to TCP Queries and to DNSSEC\n   DNS queries can be sent over\
    \ UDP or TCP.  The scope of this document,\n   however, is only UDP.  DNS over\
    \ TCP can be protected with TLS, as\n   described in [RFC7858].  DNS over DTLS\
    \ alone cannot provide privacy\n   for DNS messages in all circumstances, specifically\
    \ when the DTLS\n   record size is larger than the path MTU.  In such situations,\
    \ the DNS\n   server will respond with a truncated response (see Section 5).\n\
    \   Therefore, DNS clients and servers that implement DNS over DTLS MUST\n   also\
    \ implement DNS over TLS in order to provide privacy for clients\n   that desire\
    \ Strict Privacy as described in [DTLS].\n   DNS Security Extensions (DNSSEC)\
    \ [RFC4033] provide object integrity\n   of DNS resource records, allowing end\
    \ users (or their resolver) to\n   verify the legitimacy of responses.  However,\
    \ DNSSEC does not provide\n   privacy for DNS requests or responses.  DNS over\
    \ DTLS works in\n   conjunction with DNSSEC, but DNS over DTLS does not replace\
    \ the need\n   or value of DNSSEC.\n"
- title: 1.2.  Document Status
  contents:
  - "1.2.  Document Status\n   This document is an Experimental RFC.  One key aspect\
    \ to judge\n   whether the approach is usable on a large scale is by observing\
    \ the\n   uptake, usability, and operational behavior of the protocol in large-\n\
    \   scale, real-life deployments.\n   This DTLS solution was considered by the\
    \ DPRIVE working group as an\n   option to use in case the TLS-based approach\
    \ specified in [RFC7858]\n   turns out to have some issues when deployed.  At\
    \ the time of writing,\n   it is expected that [RFC7858] is what will be deployed,\
    \ and so this\n   specification is mainly intended as a backup.\n   The following\
    \ guidelines should be considered when performance\n   benchmarking DNS over DTLS:\n\
    \   1.  DNS over DTLS can recover from packet loss and reordering, and\n     \
    \  does not suffer from network head-of-line blocking.  DNS over\n       DTLS\
    \ performance, in comparison with DNS over TLS, may be better\n       in lossy\
    \ networks.\n   2.  The number of round trips to send the first DNS query over\
    \ DNS\n       over DTLS is less than the number of round trips to send the\n \
    \      first DNS query over TLS.  Even if TCP Fast Open is used, it only\n   \
    \    works for subsequent TCP connections between the DNS client and\n       server\
    \ (Section 3 in [RFC7413]).\n   3.  If the DTLS 1.3 protocol [DTLS13] is used\
    \ for DNS over DTLS, it\n       provides critical latency improvements for connection\n\
    \       establishment over DTLS 1.2.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119] .\n"
- title: 3.  Establishing and Managing DNS over DTLS Sessions
  contents:
  - '3.  Establishing and Managing DNS over DTLS Sessions

    '
- title: 3.1.  Session Initiation
  contents:
  - "3.1.  Session Initiation\n   By default, DNS over DTLS MUST run over standard\
    \ UDP port 853 as\n   defined in Section 8, unless the DNS server has mutual agreement\
    \ with\n   its clients to use a port other than 853 for DNS over DTLS.  In order\n\
    \   to use a port other than 853, both clients and servers would need a\n   configuration\
    \ option in their software.\n   The DNS client should determine if the DNS server\
    \ supports DNS over\n   DTLS by sending a DTLS ClientHello message to port 853\
    \ on the server,\n   unless it has mutual agreement with its server to use a port\
    \ other\n   than port 853 for DNS over DTLS.  Such another port MUST NOT be port\n\
    \   53 but MAY be from the \"first-come, first-served\" port range (User\n   Ports\
    \ [RFC6335], range 1024-49151).  This recommendation against the\n   use of port\
    \ 53 for DNS over DTLS is to avoid complications in\n   selecting use or non-use\
    \ of DTLS and to reduce risk of downgrade\n   attacks.\n   A DNS server that does\
    \ not support DNS over DTLS will not respond to\n   ClientHello messages sent\
    \ by the client.  If no response is received\n   from that server, and the client\
    \ has no better round-trip estimate,\n   the client SHOULD retransmit the DTLS\
    \ ClientHello according to\n   Section 4.2.4.1 of [RFC6347].  After 15 seconds,\
    \ it SHOULD cease\n   attempts to retransmit its ClientHello.  The client MAY\
    \ repeat that\n   procedure to discover if DNS over DTLS service becomes available\
    \ from\n   the DNS server, but such probing SHOULD NOT be done more frequently\n\
    \   than every 24 hours and MUST NOT be done more frequently than every\n   15\
    \ minutes.  This mechanism requires no additional signaling between\n   the client\
    \ and server.\n   DNS clients and servers MUST NOT use port 853 to transport cleartext\n\
    \   DNS messages.  DNS clients MUST NOT send and DNS servers MUST NOT\n   respond\
    \ to cleartext DNS messages on any port used for DNS over DTLS\n   (including,\
    \ for example, after a failed DTLS handshake).  There are\n   significant security\
    \ issues in mixing protected and unprotected data;\n   therefore, UDP connections\
    \ on a port designated by a given server for\n   DNS over DTLS are reserved purely\
    \ for encrypted communications.\n"
- title: 3.2.  DTLS Handshake and Authentication
  contents:
  - "3.2.  DTLS Handshake and Authentication\n   The DNS client initiates the DTLS\
    \ handshake as described in\n   [RFC6347], following the best practices specified\
    \ in [RFC7525].\n   After DTLS negotiation completes, if the DTLS handshake succeeds\n\
    \   according to [RFC6347], the connection will be encrypted and would\n   then\
    \ be protected from eavesdropping.\n   DNS privacy requires encrypting the query\
    \ (and response) from passive\n   attacks.  Such encryption typically provides\
    \ integrity protection as\n   a side effect, which means on-path attackers cannot\
    \ simply inject\n   bogus DNS responses.  However, to provide stronger protection\
    \ from\n   active attackers pretending to be the server, the server itself needs\n\
    \   to be authenticated.  To authenticate the server providing DNS\n   privacy,\
    \ DNS client MUST use the authentication mechanisms discussed\n   in [DTLS]. \
    \ This document does not propose new ideas for\n   authentication.\n"
- title: 3.3.  Established Sessions
  contents:
  - "3.3.  Established Sessions\n   In DTLS, all data is protected using the same\
    \ record encoding and\n   mechanisms.  When the mechanism described in this document\
    \ is in\n   effect, DNS messages are encrypted using the standard DTLS record\n\
    \   encoding.  When a DTLS user wishes to send a DNS message, the data is\n  \
    \ delivered to the DTLS implementation as an ordinary application data\n   write\
    \ (e.g., SSL_write()).  A single DTLS session can be used to send\n   multiple\
    \ DNS requests and receive multiple DNS responses.\n   To mitigate the risk of\
    \ unintentional server overload, DNS over DTLS\n   clients MUST take care to minimize\
    \ the number of concurrent DTLS\n   sessions made to any individual server.  For\
    \ any given client/server\n   interaction, it is RECOMMENDED that there be no\
    \ more than one DTLS\n   session.  Similarly, servers MAY impose limits on the\
    \ number of\n   concurrent DTLS sessions being handled for any particular client\
    \ IP\n   address or subnet.  These limits SHOULD be much looser than the\n   client\
    \ guidelines above because the server does not know, for\n   example, if a client\
    \ IP address belongs to a single client, is\n   representing multiple resolvers\
    \ on a single machine, or is\n   representing multiple clients behind a device\
    \ performing Network\n   Address Translation (NAT).\n   In between normal DNS\
    \ traffic, while the communication to the DNS\n   server is quiescent, the DNS\
    \ client MAY want to probe the server\n   using DTLS heartbeat [RFC6520] to ensure\
    \ it has maintained\n   cryptographic state.  Such probes can also keep alive\
    \ firewall or NAT\n   bindings.  This probing reduces the frequency of needing\
    \ a new\n   handshake when a DNS query needs to be resolved, improving the user\n\
    \   experience at the cost of bandwidth and processing time.\n   A DTLS session\
    \ is terminated by the receipt of an authenticated\n   message that closes the\
    \ connection (e.g., a DTLS fatal alert).  If\n   the server has lost state, a\
    \ DTLS handshake needs to be initiated\n   with the server.  For the server, to\
    \ mitigate the risk of\n   unintentional server overload, it is RECOMMENDED that\
    \ the default DNS\n   over DTLS server application-level idle time be set to several\n\
    \   seconds and not set to less than a second, but no particular value is\n  \
    \ specified.  When no DNS queries have been received from the client\n   after\
    \ idle timeout, the server MUST send a DTLS fatal alert and then\n   destroy its\
    \ DTLS state.  The DTLS fatal alert packet indicates the\n   server has destroyed\
    \ its state, signaling to the client that if it\n   wants to send a new DTLS message,\
    \ it will need to re-establish\n   cryptographic context with the server (via\
    \ full DTLS handshake or\n   DTLS session resumption).  In practice, the idle\
    \ period can vary\n   dynamically, and servers MAY allow idle connections to remain\
    \ open\n   for longer periods as resources permit.\n"
- title: 4.  Performance Considerations
  contents:
  - "4.  Performance Considerations\n   The DTLS protocol profile for DNS over DTLS\
    \ is discussed in\n   Section 11 of [DTLS].  To reduce the number of octets of\
    \ the DTLS\n   handshake, especially the size of the certificate in the ServerHello\n\
    \   (which can be several kilobytes), DNS clients and servers can use raw\n  \
    \ public keys [RFC7250] or Cached Information Extension [RFC7924].\n   Cached\
    \ Information Extension avoids transmitting the server's\n   certificate and certificate\
    \ chain if the client has cached that\n   information from a previous TLS handshake.\
    \  TLS False Start [RFC7918]\n   can reduce round trips by allowing the TLS second\
    \ flight of messages\n   (ChangeCipherSpec) to also contain the (encrypted) DNS\
    \ query.\n   It is highly advantageous to avoid server-side DTLS state and reduce\n\
    \   the number of new DTLS sessions on the server that can be done with\n   TLS\
    \ Session Resumption without server state [RFC5077].  This also\n   eliminates\
    \ a round trip for subsequent DNS over DTLS queries, because\n   with [RFC5077]\
    \ the DTLS session does not need to be re-established.\n   Since responses within\
    \ a DTLS session can arrive out of order,\n   clients MUST match responses to\
    \ outstanding queries on the same DTLS\n   connection using the DNS Message ID.\
    \  If the response contains a\n   question section, the client MUST match the\
    \ QNAME, QCLASS, and QTYPE\n   fields.  Failure by clients to properly match responses\
    \ to\n   outstanding queries can have serious consequences for\n   interoperability\
    \ (Section 7 of [RFC7766]).\n"
- title: 5.  Path MTU (PMTU) Issues
  contents:
  - "5.  Path MTU (PMTU) Issues\n   Compared to normal DNS, DTLS adds at least 13\
    \ octets of header, plus\n   cipher and authentication overhead to every query\
    \ and every response.\n   This reduces the size of the DNS payload that can be\
    \ carried.  The\n   DNS client and server MUST support the Extension Mechanisms\
    \ for DNS\n   (EDNS0) option defined in [RFC6891] so that the DNS client can\n\
    \   indicate to the DNS server the maximum DNS response size it can\n   reassemble\
    \ and deliver in the DNS client's network stack.  If the DNS\n   client does set\
    \ the EDNS0 option defined in [RFC6891], then the\n   maximum DNS response size\
    \ of 512 bytes plus DTLS overhead will be\n   well within the Path MTU.  If the\
    \ Path MTU is not known, an IP MTU of\n   1280 bytes SHOULD be assumed.  The client\
    \ sets its EDNS0 value as if\n   DTLS is not being used.  The DNS server MUST\
    \ ensure that the DNS\n   response size does not exceed the Path MTU, i.e., each\
    \ DTLS record\n   MUST fit within a single datagram, as required by [RFC6347].\
    \  The DNS\n   server must consider the amount of record expansion expected by\
    \ the\n   DTLS processing when calculating the size of DNS response that fits\n\
    \   within the path MTU.  The Path MTU MUST be greater than or equal to\n   the\
    \ DNS response size + DTLS overhead of 13 octets + padding size\n   ([RFC7830])\
    \ + authentication overhead of the negotiated DTLS cipher\n   suite + block padding\
    \ (Section 4.1.1.1 of [RFC6347]).  If the DNS\n   server's response were to exceed\
    \ that calculated value, the server\n   MUST send a response that does fit within\
    \ that value and sets the TC\n   (truncated) bit.  Upon receiving a response with\
    \ the TC bit set and\n   wanting to receive the entire response, the client behavior\
    \ is\n   governed by the current Usage Profile [DTLS].  For Strict Privacy,\n\
    \   the client MUST only send a new DNS request for the same resource\n   record\
    \ over an encrypted transport (e.g., DNS over TLS [RFC7858]).\n   Clients using\
    \ Opportunistic Privacy SHOULD try for the best case (an\n   encrypted and authenticated\
    \ transport) but MAY fall back to\n   intermediate cases and eventually the worst\
    \ case scenario (clear\n   text) in order to obtain a response.\n"
- title: 6.  Anycast
  contents:
  - "6.  Anycast\n   DNS servers are often configured with anycast addresses.  While\
    \ the\n   network is stable, packets transmitted from a particular source to an\n\
    \   anycast address will reach the same server that has the cryptographic\n  \
    \ context from the DNS over DTLS handshake.  But, when the network\n   configuration\
    \ or routing changes, a DNS over DTLS packet can be\n   received by a server that\
    \ does not have the necessary cryptographic\n   context.  Clients using DNS over\
    \ DTLS need to always be prepared to\n   re-initiate the DTLS handshake, and in\
    \ the worst case this could even\n   happen immediately after re-initiating a\
    \ new handshake.  To encourage\n   the client to initiate a new DTLS handshake,\
    \ DNS servers SHOULD\n   generate a DTLS fatal alert message in response to receiving\
    \ a DTLS\n   packet for which the server does not have any cryptographic context.\n\
    \   Upon receipt of an unauthenticated DTLS fatal alert, the DTLS client\n   validates\
    \ the fatal alert is within the replay window\n   (Section 4.1.2.6 of [RFC6347]).\
    \  It is difficult for the DTLS client\n   to validate that the DTLS fatal alert\
    \ was generated by the DTLS\n   server in response to a request or was generated\
    \ by an on- or off-\n   path attacker.  Thus, upon receipt of an in-window DTLS\
    \ fatal alert,\n   the client SHOULD continue retransmitting the DTLS packet (in\
    \ the\n   event the fatal alert was spoofed), and at the same time it SHOULD\n\
    \   initiate DTLS session resumption.  When the DTLS client receives an\n   authenticated\
    \ DNS response from one of those DTLS sessions, the other\n   DTLS session should\
    \ be terminated.\n"
- title: 7.  Usage
  contents:
  - "7.  Usage\n   Two Usage Profiles, Strict and Opportunistic, are explained in\n\
    \   [DTLS].  The order of preference for DNS usage is as follows:\n   1.  Encrypted\
    \ DNS messages with an authenticated server\n   2.  Encrypted DNS messages with\
    \ an unauthenticated server\n   3.  Plaintext DNS messages\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This specification uses port 853 already allocated\
    \ in the IANA port\n   number registry as defined in Section 6 of [RFC7858].\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The interaction between a DNS client and a DNS\
    \ server requires\n   Datagram Transport Layer Security (DTLS) with a ciphersuite\
    \ offering\n   confidentiality protection.  The guidance given in [RFC7525] MUST\
    \ be\n   followed to avoid attacks on DTLS.  The DNS client SHOULD use the TLS\n\
    \   Certificate Status Request extension (Section 8 of [RFC6066]),\n   commonly\
    \ called \"OCSP stapling\" to check the revocation status of the\n   public key\
    \ certificate of the DNS server.  OCSP stapling, unlike OCSP\n   [RFC6960], does\
    \ not suffer from scale and privacy issues.  DNS\n   clients keeping track of\
    \ servers known to support DTLS enables\n   clients to detect downgrade attacks.\
    \  To interfere with DNS over\n   DTLS, an on- or off-path attacker might send\
    \ an ICMP message towards\n   the DTLS client or DTLS server.  As these ICMP messages\
    \ cannot be\n   authenticated, all ICMP errors should be treated as soft errors\n\
    \   [RFC1122].  If the DNS query was sent over DTLS, then the\n   corresponding\
    \ DNS response MUST only be accepted if it is received\n   over the same DTLS\
    \ connection.  This behavior mitigates all possible\n   attacks described in Measures\
    \ for Making DNS More Resilient against\n   Forged Answers [RFC5452].  The security\
    \ considerations in [RFC6347]\n   and [DTLS] are to be taken into account.\n \
    \  A malicious client might attempt to perform a high number of DTLS\n   handshakes\
    \ with a server.  As the clients are not uniquely identified\n   by the protocol\
    \ and can be obfuscated with IPv4 address sharing and\n   with IPv6 temporary\
    \ addresses, a server needs to mitigate the impact\n   of such an attack.  Such\
    \ mitigation might involve rate limiting\n   handshakes from a certain subnet\
    \ or more advanced DoS/DDoS techniques\n   beyond the scope of this document.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names -\
    \ concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,\
    \ November 1987,\n              <http://www.rfc-editor.org/info/rfc1034>.\n  \
    \ [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n          \
    \    specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November\
    \ 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC4033]  Arends, R., Austein,\
    \ R., Larson, M., Massey, D., and S.\n              Rose, \"DNS Security Introduction\
    \ and Requirements\",\n              RFC 4033, DOI 10.17487/RFC4033, March 2005,\n\
    \              <http://www.rfc-editor.org/info/rfc4033>.\n   [RFC5077]  Salowey,\
    \ J., Zhou, H., Eronen, P., and H. Tschofenig,\n              \"Transport Layer\
    \ Security (TLS) Session Resumption without\n              Server-Side State\"\
    , RFC 5077, DOI 10.17487/RFC5077,\n              January 2008, <http://www.rfc-editor.org/info/rfc5077>.\n\
    \   [RFC5452]  Hubert, A. and R. van Mook, \"Measures for Making DNS More\n  \
    \            Resilient against Forged Answers\", RFC 5452,\n              DOI\
    \ 10.17487/RFC5452, January 2009,\n              <http://www.rfc-editor.org/info/rfc5452>.\n\
    \   [RFC6347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n    \
    \          Security Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n         \
    \     January 2012, <http://www.rfc-editor.org/info/rfc6347>.\n   [RFC6520]  Seggelmann,\
    \ R., Tuexen, M., and M. Williams, \"Transport\n              Layer Security (TLS)\
    \ and Datagram Transport Layer Security\n              (DTLS) Heartbeat Extension\"\
    , RFC 6520,\n              DOI 10.17487/RFC6520, February 2012,\n            \
    \  <http://www.rfc-editor.org/info/rfc6520>.\n   [RFC6891]  Damas, J., Graff,\
    \ M., and P. Vixie, \"Extension Mechanisms\n              for DNS (EDNS(0))\"\
    , STD 75, RFC 6891,\n              DOI 10.17487/RFC6891, April 2013,\n       \
    \       <http://www.rfc-editor.org/info/rfc6891>.\n   [RFC7525]  Sheffer, Y.,\
    \ Holz, R., and P. Saint-Andre,\n              \"Recommendations for Secure Use\
    \ of Transport Layer\n              Security (TLS) and Datagram Transport Layer\
    \ Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525, May\n\
    \              2015, <http://www.rfc-editor.org/info/rfc7525>.\n   [RFC7830] \
    \ Mayrhofer, A., \"The EDNS(0) Padding Option\", RFC 7830,\n              DOI\
    \ 10.17487/RFC7830, May 2016,\n              <http://www.rfc-editor.org/info/rfc7830>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [DTLS]     Dickinson, S., Gillmor, D., and\
    \ T. Reddy, \"Authentication\n              and (D)TLS Profile for DNS-over-(D)TLS\"\
    , Work in\n              Progress, draft-ietf-dprive-dtls-and-tls-profiles-08,\n\
    \              January 2017.\n   [DTLS13]   Rescorla, E. and H. Tschofenig, \"\
    The Datagram Transport\n              Layer Security (DTLS) Protocol Version 1.3\"\
    , Work in\n              Progress, draft-rescorla-tls-dtls13-00, October 2016.\n\
    \   [RFC1122]  Braden, R., Ed., \"Requirements for Internet Hosts -\n        \
    \      Communication Layers\", STD 3, RFC 1122,\n              DOI 10.17487/RFC1122,\
    \ October 1989,\n              <http://www.rfc-editor.org/info/rfc1122>.\n   [RFC6066]\
    \  Eastlake 3rd, D., \"Transport Layer Security (TLS)\n              Extensions:\
    \ Extension Definitions\", RFC 6066,\n              DOI 10.17487/RFC6066, January\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6066>.\n   [RFC6335]\
    \  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.\n              Cheshire,\
    \ \"Internet Assigned Numbers Authority (IANA)\n              Procedures for the\
    \ Management of the Service Name and\n              Transport Protocol Port Number\
    \ Registry\", BCP 165,\n              RFC 6335, DOI 10.17487/RFC6335, August 2011,\n\
    \              <http://www.rfc-editor.org/info/rfc6335>.\n   [RFC6960]  Santesson,\
    \ S., Myers, M., Ankney, R., Malpani, A.,\n              Galperin, S., and C.\
    \ Adams, \"X.509 Internet Public Key\n              Infrastructure Online Certificate\
    \ Status Protocol - OCSP\",\n              RFC 6960, DOI 10.17487/RFC6960, June\
    \ 2013,\n              <http://www.rfc-editor.org/info/rfc6960>.\n   [RFC7250]\
    \  Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J.,\n              Weiler,\
    \ S., and T. Kivinen, \"Using Raw Public Keys in\n              Transport Layer\
    \ Security (TLS) and Datagram Transport\n              Layer Security (DTLS)\"\
    , RFC 7250, DOI 10.17487/RFC7250,\n              June 2014, <http://www.rfc-editor.org/info/rfc7250>.\n\
    \   [RFC7413]  Cheng, Y., Chu, J., Radhakrishnan, S., and A. Jain, \"TCP\n   \
    \           Fast Open\", RFC 7413, DOI 10.17487/RFC7413, December 2014,\n    \
    \          <http://www.rfc-editor.org/info/rfc7413>.\n   [RFC7626]  Bortzmeyer,\
    \ S., \"DNS Privacy Considerations\", RFC 7626,\n              DOI 10.17487/RFC7626,\
    \ August 2015,\n              <http://www.rfc-editor.org/info/rfc7626>.\n   [RFC7766]\
    \  Dickinson, J., Dickinson, S., Bellis, R., Mankin, A., and\n              D.\
    \ Wessels, \"DNS Transport over TCP - Implementation\n              Requirements\"\
    , RFC 7766, DOI 10.17487/RFC7766, March 2016,\n              <http://www.rfc-editor.org/info/rfc7766>.\n\
    \   [RFC7858]  Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D.,\n    \
    \          and P. Hoffman, \"Specification for DNS over Transport\n          \
    \    Layer Security (TLS)\", RFC 7858, DOI 10.17487/RFC7858, May\n           \
    \   2016, <http://www.rfc-editor.org/info/rfc7858>.\n   [RFC7918]  Langley, A.,\
    \ Modadugu, N., and B. Moeller, \"Transport\n              Layer Security (TLS)\
    \ False Start\", RFC 7918,\n              DOI 10.17487/RFC7918, August 2016,\n\
    \              <http://www.rfc-editor.org/info/rfc7918>.\n   [RFC7924]  Santesson,\
    \ S. and H. Tschofenig, \"Transport Layer Security\n              (TLS) Cached\
    \ Information Extension\", RFC 7924,\n              DOI 10.17487/RFC7924, July\
    \ 2016,\n              <http://www.rfc-editor.org/info/rfc7924>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Phil Hedrick for his review comments on TCP and\
    \ to Josh\n   Littlefield for pointing out DNS over DTLS load on busy servers\
    \ (most\n   notably root servers).  The authors would like to thank Simon\n  \
    \ Josefsson, Daniel Kahn Gillmor, Bob Harold, Ilari Liusvaara, Sara\n   Dickinson,\
    \ Christian Huitema, Stephane Bortzmeyer, Alexander\n   Mayrhofer, Allison Mankin,\
    \ Jouni Korhonen, Stephen Farrell, Mirja\n   Kuehlewind, Benoit Claise, and Geoff\
    \ Huston for discussions and\n   comments on the design of DNS over DTLS.  The\
    \ authors would like to\n   give special thanks to Sara Dickinson for her help.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tirumaleswar Reddy\n   Cisco Systems, Inc.\n   Cessna\
    \ Business Park, Varthur Hobli\n   Sarjapur Marathalli Outer Ring Road\n   Bangalore,\
    \ Karnataka  560103\n   India\n   Email: tireddy@cisco.com\n   Dan Wing\n   Email:\
    \ dwing-ietf@fuggles.com\n   Prashanth Patil\n   Cisco Systems, Inc.\n   Email:\
    \ praspati@cisco.com\n"
