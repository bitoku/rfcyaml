- title: __initial_text__
  contents:
  - "         A Flexible Method for Managing the Assignment of Bits\n            \
    \            of an IPv6 Address Block\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes a method to manage the assignment of bits\
    \ of\n   an IPv6 address block or range.  When an organisation needs to make\n\
    \   an address plan for its subnets or when an ISP needs to make an\n   address\
    \ plan for its customers, this method enables the organisation\n   to postpone\
    \ the final decision on the number of bits to partition in\n   the address space\
    \ they have.  It does it by keeping the bits around\n   the borders of the partition\
    \ to be free as long as possible.  This\n   scheme is applicable to any bits addressing\
    \ scheme using bits with\n   partitions in the space, but its first intended use\
    \ is for IPv6.  It\n   is a generalization of RFC 1219 and can be used for IPv6\
    \ assignments.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Rationale  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Scheme . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Description of the Algorithm . . . . . . . . . . . . .\
    \ . . . .  3\n     3.1 Leftmost . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n     3.2 Rightmost  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  3\n     3.3 Centermost . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n   4.  Example  . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  4\n   5.  Security Considerations  . . . . . . . . . . . . . . . . . . .  5\n\
    \   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  5\n  \
    \     References . . . . . . . . . . . . . . . . . . . . . . . . . .  6\n    \
    \   Author's Address . . . . . . . . . . . . . . . . . . . . . . .  6\n      \
    \ Full Copyright Statement . . . . . . . . . . . . . . . . . . .  7\n"
- title: 1. Rationale
  contents:
  - "1. Rationale\n   IPv6 addresses have a flexible structure for address assignments.\n\
    \   This enables registries, internet service providers, network\n   designers\
    \ and others to assign address ranges to organizations and\n   networks based\
    \ on different criteria, like size of networks,\n   estimated growth rate, etc.\
    \  Often, the initial assignment doesn't\n   scale well because a small network\
    \ becomes larger than expected,\n   needing more addresses.  But then, the assignment\
    \ authority cannot\n   allocate contiguous addresses because they were already\
    \ assigned to\n   another network.\n   RFC 1219 [1] describes an allocation scheme\
    \ for IPv4 where address\n   space is kept unallocated between the leftmost bits\
    \ of the subnet\n   part and the rightmost bits of the host part of the address.\
    \  This\n   enables the network designer to change the subnet mask without\n \
    \  renumbering, for the central bits not allocated.\n   This work generalizes\
    \ the previous scheme by extending the algorithm\n   so it can be applied on any\
    \ part of an IP address, which are assigned\n   by any assignment authority level\
    \ (registries, ISPs of any level,\n   organizations, ...).  It can be used for\
    \ both IPv4 and IPv6.\n   This document does not provide any recommendation to\
    \ registries on\n   how to assign address ranges to their customers.\n"
- title: 2. Scheme
  contents:
  - "2. Scheme\n   We define parts of the IP address as p1, p2 , p3, ...  pN in order,\n\
    \   so that an IP address is composed of these parts contiguously.\n   Boundaries\
    \ between each part are based on the prefix assigned by the\n   next level authority.\
    \  Part p1 is the leftmost part probably assigned\n   to a registry, Part p2 can\
    \ be allocated to a large internet service\n   provider or to a national registry.\
    \  Part p3 can be allocated to a\n   large customer or a smaller provider, etc.\
    \  Each part can be of\n   different length.  We define l(pX) the length of part\
    \ X.\n   +------+------+------+------+------+------+\n   | p1   | p2   | p3  \
    \ | p4   | ...  | pN   |\n   +------+------+------+------+------+------+\n   <-------\
    \ ipv6 or ipv4 address ------------>\n   The algorithm for allocating addresses\
    \ is as follows: a) for the\n   leftmost part (p1), assign addresses using the\
    \ leftmost bits first b)\n   for the rightmost part (pN), assign addresses using\
    \ the rightmost\n   bits first c) for all other parts (center parts), predefine\
    \ an\n   arbitrary boundary (prefix) and then assign addresses using the\n   center\
    \ bits first of the part being assigned.\n   This algorithm grows assigned bits\
    \ in such way that it keeps\n   unassigned bits near the boundary of the parts.\
    \  This means that the\n   prefix between any two parts can be changed forward\
    \ or backward,\n   later on, up to the assigned bits.\n"
- title: 3. Description of the Algorithm
  contents:
  - "3. Description of the Algorithm\n   This section describes the assignment of\
    \ leftmost bits, rightmost\n   bits and centermost bits.\n"
- title: 3.1 Leftmost
  contents:
  - "3.1 Leftmost\n   p1 will be assigned in order as follows:\n    Order   Assignment\n\
    \    1 00000000\n    2 10000000\n    3 01000000\n    4 11000000\n    5 00100000\n\
    \    6 10100000\n    7 01100000\n    8 11100000\n    9 00010000\n    ...\n   This\
    \ is actually a mirror of binary counting.\n"
- title: 3.2 Rightmost
  contents:
  - "3.2 Rightmost\n   pN (the last part) will be assigned in order as follows:\n\
    \    Order   Assignment\n    1 00000000\n    2 00000001\n    3 00000010\n    4\
    \ 00000011\n    5 00000100\n    6 00000101\n    7 00000110\n    8 00000111\n \
    \   9 00001000\n    ...\n"
- title: 3.3 Centermost
  contents:
  - "3.3 Centermost\n   pX (where 1 < X < N) will be assigned in order as follows:\
    \ (for\n   example, with a 8 bit predefined length l(pX)=8))\n    Order   Assignment\n\
    \    1 00000000\n    2 00001000\n    3 00010000\n    4 00011000\n    5 00000100\n\
    \    6 00001100\n    7 00010100\n    8 00011100\n    9 00100000\n    ...\n   The\
    \ bits are assigned using the following algorithm:\n   1.  The first round is\
    \ to select only the middle bit (and if there is\n       an even number of bits\
    \  pick the bit following the center)\n   2.  Create all combinations using the\
    \ selected bits that haven't yet\n       been created.\n   3.  Start a new round\
    \ by adding one more bit to the set.  In even\n       rounds add the preceding\
    \ bit to the set.  In odd rounds add the\n       subsequent bit to the set.\n\
    \   4.  Repeat 2 and 3 until there are no more bits to consider.\n"
- title: 4. Example
  contents:
  - "4. Example\n   As an example, a provider P1 has been assigned the 3ffe:0b00/24\n\
    \   prefix and wants to assign prefixes to its connected networks.  It\n   anticipates\
    \ in the foreseeable future a maximum of 256 customers\n   consuming 8 bits. \
    \ One of these customers, named C2, anticipates a\n   maximum of 1024 customer's\
    \ assignments under it, consuming 10 other\n   bits.\n   The assignment will be\
    \ as follows, not showing the first 24 leftmost\n   bits (3ffe:0b00/24: 00111111\
    \ 11111110 00001011):\n   P1 assigns address space to its customers using leftmost\
    \ bits:\n    10000000  : assigned to C1\n    01000000  : assigned to C2\n    11000000\
    \  : assigned to C3\n    00100000  : assigned to C4\n    ...\n   C2 assigns address\
    \ space to its customers (C2C1, C2C2, ...) using\n   centermost bits:\n    0000010000\
    \ : assigned to C2C1\n    0000100000 : assigned to C2C2\n    0000110000 : assigned\
    \ to C2C3\n    ...\n   Customers of C2 can use centermost bits for maximum flexibility\
    \ and\n   then the last aggregators (should be a network in a site) will be\n\
    \   assigned using rightmost bits.\n   Putting all bits together for C2C3:\n \
    \  P1                        |C2      |C2C3\n   00111111 11111110 00001011 01000000\
    \ 00001100 00\n                                 <------->    <------>\n      \
    \                               growing bits\n   By using this method, P1 will\
    \ be able to expand the number of\n   customers and the customers will be able\
    \ to modify their first\n   assumptions about the size of their own customers,\
    \ until the\n   \"reserved\" bits are assigned.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   Address assignment doesn't seem to have any specific\
    \ security\n   consideration.\n"
- title: 6. Acknowledgements
  contents:
  - "6. Acknowledgements\n   Thanks to Steve Deering, Bob Hinden, Thomas Narten, Erik\
    \ Nordmark,\n   Florent Parent and Jocelyn Picard for their very useful comments\
    \ on\n   this work.\n"
- title: References
  contents:
  - "References\n   [1]  Tsuchiya, P., \"On the assignment of subnet numbers\", RFC\
    \ 1219,\n        April 1991.\n   [2]  Bradner, S., \"The Internet Standards Process\
    \ -- Revision 3\", BCP\n        9, RFC 2026, October 1996.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Marc Blanchet\n   Viagenie\n   2875 boul. Laurier, bureau\
    \ 300\n   Sainte-Foy, QC  G1V 2M2\n   Canada\n   Phone: +1 418 656 9254\n   EMail:\
    \ Marc.Blanchet@viagenie.qc.ca\n   URI:   http://www.viagenie.qc.ca/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
