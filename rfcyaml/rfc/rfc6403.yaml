- title: __initial_text__
  contents:
  - '           Suite B Profile of Certificate Management over CMS

    '
- title: Abstract
  contents:
  - "Abstract\n   The United States government has published guidelines for \"NSA\n\
    \   Suite B Cryptography\", which defines cryptographic algorithm policy\n   for\
    \ national security applications.  This document specifies a\n   profile of the\
    \ Certificate Management over CMS (CMC) protocol for\n   managing Suite B X.509\
    \ public key certificates.  This profile is a\n   refinement of RFCs 5272, 5273,\
    \ and 5274.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6403.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a profile for using the Certificate\n\
    \   Management over CMS (CMC) protocol, defined in [RFC5272], [RFC5273],\n   and\
    \ [RFC5274], and updated by [RFC6402], to manage X.509 public key\n   certificates\
    \ compliant with the United States National Security\n   Agency's Suite B Cryptography\
    \ as defined in the Suite B Certificate\n   and Certificate Revocation List (CRL)\
    \ Profile [RFC5759].  This\n   document specifically focuses on defining CMC interactions\
    \ for both\n   initial enrollment and rekey of Suite B public key certificates\n\
    \   between a client and a Certification Authority (CA).  One or more\n   Registration\
    \ Authorities (RAs) may act as intermediaries between the\n   client and the CA.\
    \  This profile may be further tailored by specific\n   communities to meet their\
    \ needs.  Specific communities will also\n   define Certificate Policies that\
    \ implementations need to comply with.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   The terminology in [RFC5272] Section 2.1 applies to this profile.\n"
- title: 3.  Requirements and Assumptions
  contents:
  - "3.  Requirements and Assumptions\n   All key pairs are on either the curve P-256\
    \ or the curve P-384.  FIPS\n   186-3 [DSS], Appendix B.4, provides useful guidance\
    \ for elliptic\n   curve key pair generation that SHOULD be followed by systems\
    \ that\n   conform to this document.\n   This document assumes that the required\
    \ trust anchors have been\n   securely provisioned to the client and, when applicable,\
    \ to any RAs.\n   All requirements in [RFC5272], [RFC5273], [RFC5274], and [RFC6402]\n\
    \   apply, except where overridden by this profile.\n   This profile was developed\
    \ with the scenarios described in Appendix A\n   in mind.  However, use of this\
    \ profile is not limited to just those\n   scenarios.\n   The term \"client\"\
    \ in this profile typically refers to an end-entity.\n   However, it may instead\
    \ refer to a third party acting on the end-\n   entity's behalf.  The client may\
    \ or may not be the entity that\n   actually generates the key pair, but it does\
    \ perform the CMC protocol\n   interactions with the RA and/or CA.  For example,\
    \ the client may be a\n   token management system that communicates with a cryptographic\
    \ token\n   through an out-of-band secure protocol.\n   This profile uses the\
    \ term \"rekey\" in the same manner as does CMC\n   (defined in Section 2 of [RFC5272]).\
    \  The profile makes no specific\n   statements about the ability to do \"renewal\"\
    \ operations; however, the\n   statements applicable to rekey should be applied\
    \ to renewal as well.\n   This profile may be used to manage RA and/or CA certificates.\
    \  In\n   that case, the RA and/or CA whose certificate is being managed is\n\
    \   considered to be the end-entity.\n   This profile does not support key establishment\
    \ certification\n   requests from cryptographic modules that cannot generate a\
    \ one-time\n   signature with a key establishment key for proof-of-possession\n\
    \   purposes.  In that case, a separate profile would be needed to define\n  \
    \ the use of another proof-of-possession technique.\n"
- title: '4.  Client Requirements: Generating PKI Requests'
  contents:
  - "4.  Client Requirements: Generating PKI Requests\n   This section specifies the\
    \ conventions employed when a client\n   requests a certificate from a Public\
    \ Key Infrastructure (PKI).\n   The Full PKI Request MUST be used; it MUST be\
    \ encapsulated in a\n   SignedData; and the SignedData MUST be constructed as\
    \ defined in\n   [RFC6318].  The PKIData content type complies with [RFC5272]\
    \ with the\n   following additional requirements:\n   o  controlSequence SHOULD\
    \ be present, and it SHOULD include the\n      following CMC controls: Transaction\
    \ ID and Sender Nonce.  Other\n      CMC controls MAY be included.  If the request\
    \ is being\n      authenticated using a shared-secret, then the following\n  \
    \    requirements in this paragraph apply:  Identity Proof Version 2\n      control,\
    \ as defined in [RFC5272], MUST be included; hashAlgId MUST\n      be id-sha256\
    \ or id-sha384 for P-256 certification requests, and\n      MUST be id-sha384\
    \ for P-384 certification requests (both algorithm\n      OIDs are defined in\
    \ [RFC5754]); macAlgId MUST be HMAC-SHA256 when\n      the hashAlgId is id-sha256,\
    \ and MUST be HMAC-SHA384 when the\n      hashAlgId is id-sha384 (both HMAC algorithms\
    \ are defined in\n      [RFC4231]).  If the subject included in the certification\
    \ request\n      is NULL or otherwise does not uniquely identify the end-entity,\n\
    \      then the POP Link Random control MUST be included, and the POP\n      Link\
    \ Witness Version 2 control MUST be included in the inner PKCS\n      #10 or Certificate\
    \ Request Message Format (CRMF) request as\n      described in Sections 4.1 and\
    \ 4.2.\n   o  reqSequence MUST be present.  It MUST include at least one tcr\n\
    \      (see Section 4.1) or crm (see Section 4.2) TaggedRequest.  Support\n  \
    \    for the orm choice is OPTIONAL.\n   If the Full PKI Request contains a P-256\
    \ public key certification\n   request, then the SignedData encapsulating the\
    \ Full PKI Request MUST\n   be generated using either SHA-256 and ECDSA on P-256\
    \ or using SHA-384\n   and ECDSA on P-384.  If the Full PKI Request contains a\
    \ P-384 public\n   key certification request, then the SignedData MUST be generated\n\
    \   using SHA-384 and ECDSA on P-384.\n   A Full PKI Request MUST be signed using\
    \ the private key that\n   corresponds to the public key of an existing signature\
    \ certificate\n   unless an appropriate signature certificate does not yet exist,\
    \ such\n   as during initial enrollment.\n   If an appropriate signature certificate\
    \ does not yet exist, and if a\n   Full PKI Request includes one or more certification\
    \ requests and is\n   authenticated using a shared-secret (because no appropriate\n\
    \   certificate exists yet to authenticate the request), the Full PKI\n   Request\
    \ MUST be signed using the private key corresponding to the\n   public key of\
    \ one of the requested certificates.  When necessary\n   (i.e., because there\
    \ is no existing signature certificate and there\n   is no signature certification\
    \ request included), a Full PKI Request\n   MAY be signed using a key pair intended\
    \ for use in a key\n   establishment certificate.  However, servers are not required\
    \ to\n   allow this behavior.\n"
- title: 4.1.  Tagged Certification Request
  contents:
  - "4.1.  Tagged Certification Request\n   The reqSequence tcr choice conveys PKCS\
    \ #10 [RFC2986] syntax.  The\n   CertificateRequest MUST comply with [RFC5272],\
    \ Section 3.2.1.2.1,\n   with the following additional requirements:\n   o  certificationRequestInfo:\n\
    \      *  subjectPublicKeyInfo MUST be set as defined in Section 4.4 of\n    \
    \     [RFC5759];\n      *  attributes:\n         -  The ExtensionReq attribute\
    \ MUST be included with its\n            contents as follows:\n            o \
    \ The Key Usage extension MUST be included, and it MUST be\n               set\
    \ as defined in [RFC5759].\n            o  For rekey requests, the SubjectAltName\
    \ extension MUST be\n               included and set equal to the SubjectAltName\
    \ of the\n               certificate that is being used to sign the SignedData\n\
    \               encapsulating the request (i.e., not the certificate\n       \
    \        being rekeyed) if the Subject field of the certificate\n            \
    \   being used to generate the signature is NULL.\n            o  Other extension\
    \ requests MAY be included as desired.\n         -  The ChangeSubjectName attribute,\
    \ as defined in [RFC6402],\n            MUST be included if the Full PKI Request\
    \ encapsulating this\n            Tagged Certification Request is being signed\
    \ by a key for\n            which a certificate currently exists and the existing\n\
    \            certificate's Subject or SubjectAltName does not match the\n    \
    \        desired Subject or SubjectAltName of this certification\n           \
    \ request.\n         -  The POP Link Witness Version 2 attribute MUST be included\
    \ if\n            the request is being authenticated using a shared-secret and\n\
    \            the Subject in the certification request is NULL or\n           \
    \ otherwise does not uniquely identify the end-entity.  In the\n            POP\
    \ Link Witness Version 2 attribute, keyGenAlgorithm MUST\n            be id-sha256\
    \ or id-sha384 for P-256 certification requests\n            and MUST be id-sha384\
    \ for P-384 certification requests, as\n            defined in [RFC5754]; macAlgorithm\
    \ MUST be HMAC-SHA256 when\n            the keyGenAlgorithm is id-sha256 and MUST\
    \ be HMAC-SHA384\n            when the keyGenAlgorithm is id-sha384, as defined\
    \ in\n            [RFC4231].\n      *  signatureAlgorithm MUST be ecdsa-with-sha256\
    \ for P-256\n         certification requests and MUST be ecdsa-with-sha384 for\
    \ P-384\n         certification requests;\n      *  signature MUST be generated\
    \ using the private key corresponding\n         to the public key in the CertificationRequestInfo,\
    \ for both\n         signature and key establishment certification requests. \
    \ The\n         signature provides proof-of-possession of the private key to\n\
    \         the Certification Authority.\n"
- title: 4.2.  Certificate Request Message
  contents:
  - "4.2.  Certificate Request Message\n   The reqSequence crm choice conveys Certificate\
    \ Request Message Format\n   (CRMF) [RFC4211] syntax.  The CertReqMsg MUST comply\
    \ with [RFC5272],\n   Section 3.2.1.2.2, with the following additional requirements:\n\
    \   o  popo MUST be included using the signature (POPOSigningKey) proof-\n   \
    \   of-possession choice and set as defined in [RFC4211], Section 4.1,\n     \
    \ for both signature and key establishment certification requests.\n      The\
    \ POPOSigningKey poposkInput field MUST be omitted.  The\n      POPOSigningKey\
    \ algorithmIdentifier MUST be ecdsa-with-sha256 for\n      P-256 certification\
    \ requests and MUST be ecdsa-with-sha384 for\n      P-384 certification requests.\
    \  The signature MUST be generated\n      using the private key corresponding\
    \ to the public key in the\n      CertTemplate.\n   The CertTemplate MUST comply\
    \ with [RFC5272], Section 3.2.1.2.2, with\n   the following additional requirements:\n\
    \   o  version MAY be included and, if included, it MUST be set to 2 as\n    \
    \  defined in Section 4.3 of [RFC5759];\n   o  publicKey MUST be set as defined\
    \ in Section 4.4 of [RFC5759];\n   o  extensions:\n      *  The Key Usage extension\
    \ MUST be included, and it MUST be set as\n         defined in [RFC5759].\n  \
    \    *  For rekey requests, the SubjectAltName extension MUST be\n         included\
    \ and set equal to the SubjectAltName of the certificate\n         that is being\
    \ used to sign the SignedData encapsulating the\n         request (i.e., not the\
    \ certificate being rekeyed) if the\n         Subject field of the certificate\
    \ being used to generate the\n         signature is NULL.\n      *  Other extension\
    \ requests MAY be included as desired.\n   o  controls:\n      *  The ChangeSubjectName\
    \ attribute, as defined in [RFC6402], MUST\n         be included if the Full PKI\
    \ Request encapsulating this Tagged\n         Certification Request is being signed\
    \ by a key for which a\n         certificate currently exists and the existing\
    \ certificate's\n         Subject or SubjectAltName does not match the desired\
    \ Subject or\n         SubjectAltName of this certification request.\n      *\
    \  The POP Link Witness Version 2 attribute MUST be included if\n         the\
    \ request is being authenticated using a shared-secret, and\n         the Subject\
    \ in the certification request is NULL or otherwise\n         does not uniquely\
    \ identify the end-entity.  In the POP Link\n         Witness Version 2 attribute,\
    \ keyGenAlgorithm MUST be id-sha256\n         or id-sha384 for P-256 certification\
    \ requests and MUST be\n         id-sha384 for P-384 certification requests; macAlgorithm\
    \ MUST\n         be HMAC-SHA256 when keyGenAlgorithm is id-sha256 and MUST be\n\
    \         HMAC-SHA384 when keyGenAlgorithm is id-sha384.\n"
- title: 5.  RA Requirements
  contents:
  - "5.  RA Requirements\n   This section addresses the optional case where one or\
    \ more RAs act as\n   intermediaries between the client and CA as described in\
    \ Section 7 of\n   [RFC5272].  In this section, the term \"client\" refers to\
    \ the entity\n   from which the RA received the PKI Request.  This section is\
    \ only\n   applicable to RAs.\n"
- title: 5.1.  RA Processing of Requests
  contents:
  - "5.1.  RA Processing of Requests\n   RAs conforming to this document MUST ensure\
    \ that only the permitted\n   signature, hash, and MAC algorithms described throughout\
    \ this profile\n   are used in requests; if they are not, the RA MUST reject those\n\
    \   requests.  The RA SHOULD return a CMCFailInfo with the value of\n   badAlg\
    \ [RFC5272].\n   When processing end-entity-generated SignedData objects, RAs\
    \ MUST NOT\n   perform Cryptographic Message Syntax (CMS) Content Constraints\
    \ (CCC)\n   certificate extension processing [RFC6010].\n   Other RA processing\
    \ is as in [RFC5272].\n"
- title: 5.2.  RA-Generated PKI Requests
  contents:
  - "5.2.  RA-Generated PKI Requests\n   If the RA encapsulates the client-generated\
    \ PKI Request in a new RA-\n   signed PKI Request, it MUST create a Full PKI Request\
    \ encapsulated in\n   a SignedData, and the SignedData MUST be constructed as\
    \ defined in\n   [RFC6318].  The PKIData content type complies with [RFC5272]\
    \ with the\n   following additional requirements:\n   o  controlSequence MUST\
    \ be present.  It MUST include the following\n      CMC controls: Transaction\
    \ ID, Sender Nonce, and Batch Requests.\n      Other appropriate CMC controls\
    \ MAY be included.\n   o  cmsSequence MUST be present.  It contains the original,\
    \ unmodified\n      request(s) received from the client.\n   RA certificates are\
    \ authorized to sign Full PKI Requests with an\n   Extended Key Usage (EKU) and/or\
    \ with the CCC certificate extension\n   [RFC6010].  Certificates may also be\
    \ authorized through local\n   configuration.  Authorized certificates SHOULD\
    \ include the\n   id-kp-cmcRA EKU from [RFC6402].  Authorized certificates MAY\
    \ also\n   include the CCC certificate extension [RFC6010], or the authorized\n\
    \   certificate MAY just include the CCC certificate extension.  If the\n   RA\
    \ is authorized via the CCC extension, then the CCC extension MUST\n   include\
    \ the object identifier for the PKIData content type.  CCC\n   SHOULD be included\
    \ if constraints are to be placed on the content\n   types generated.\n   If the\
    \ RA-signed PKI Request contains a certification request for a\n   P-256 public\
    \ key, then the SignedData MUST be generated using either\n   SHA-256 and ECDSA\
    \ on P-256 or SHA-384 and ECDSA on P-384.  If the\n   request contains a certification\
    \ request for a P-384 public key, then\n   the SignedData MUST be generated using\
    \ SHA-384 and ECDSA on P-384.\n   If the RA-signed PKI Request contains requests\
    \ for certificates on\n   the P-256 and P-384 curve, then the SignedData MUST\
    \ be generated\n   using SHA-384 and ECDSA on P-384.  If the Full PKI Response\
    \ is a\n   successful response to a PKI Request that only contained a Get\n  \
    \ Certificate or Get CRL control, then the SignedData MUST be signed by\n   either\
    \ SHA-256 and ECDSA on P-256 or SHA-384 and ECDSA on P-384, the\n   algorithm\
    \ used in the response MUST match the algorithm used in the\n   request.\n"
- title: 5.3.  RA-Generated Errors
  contents:
  - "5.3.  RA-Generated Errors\n   RA certificates authorized with the CCC certificate\
    \ extension\n   [RFC6010] MUST include the object identifier for the PKIResponse\n\
    \   content type to authorize them to generate responses.\n"
- title: 6.  CA Requirements
  contents:
  - "6.  CA Requirements\n   This section specifies the requirements for CAs that\
    \ receive PKI\n   Requests and that generate PKI Responses.\n"
- title: 6.1.  CA Processing of PKI Requests
  contents:
  - "6.1.  CA Processing of PKI Requests\n   CAs conforming to this document MUST\
    \ ensure that only the permitted\n   signature, hash, and MAC algorithms described\
    \ throughout this profile\n   are used in requests; if they are not, the CA MUST\
    \ reject those\n   requests.  The CA SHOULD return a CMCStatusInfoV2 control with\n\
    \   CMCStatus of failed and a CMCFailInfo with the value of badAlg\n   [RFC5272].\n\
    \   For requests involving an RA, the CA MUST verify the RA's\n   authorization.\
    \  The following certificate fields MUST NOT be\n   modifiable using the Modify\
    \ Certification Request control: publicKey\n   and the key usage extension.  The\
    \ request MUST be rejected if an\n   attempt to modify those certification request\
    \ fields is present.  The\n   CA SHOULD return a CMCStatusInfoV2 control with\
    \ CMCStatus of failed\n   and a CMCFailInfo with a value of badRequest.\n   When\
    \ processing end-entity-generated SignedData objects, CAs MUST NOT\n   perform\
    \ CCC certificate extension processing [RFC6010].\n   If the client-generated\
    \ PKI Request includes a ChangeSubjectName\n   attribute either in the CertRequest\
    \ controls field for a CRMF request\n   or in the tcr attributes field for a PKCS#10\
    \ request, then the CA\n   MUST ensure that name change is authorized.  The mechanism\
    \ for\n   ensuring that the name change is authorized is out of scope.  If the\n\
    \   CA performs this check, and the name change is not authorized, then\n   the\
    \ CA MUST reject the PKI Request.  The CA SHOULD return a\n   CMCStatusInfoV2\
    \ control with CMCStatus of failed.\n   Other processing of PKIRequests is as\
    \ in [RFC5272].\n"
- title: 6.2.  CA-Generated PKI Responses
  contents:
  - "6.2.  CA-Generated PKI Responses\n   If a Full PKI Response is returned, it MUST\
    \ be encapsulated in a\n   SignedData, and the SignedData MUST be constructed\
    \ as defined in\n   [RFC6318].\n   If the PKI Response is in response to an RA-encapsulated\
    \ PKI Request,\n   then the above PKI Response is encapsulated in another CA-generated\n\
    \   PKI Response.  That PKI Response MUST be encapsulated in a SignedData\n  \
    \ and the SignedData MUST be constructed as defined in [RFC6318].  The\n   above\
    \ PKI Response is placed in the encapsulating PKI Response\n   cmsSequence field.\
    \  The other fields are as above with the addition\n   of the batch response control\
    \ in controlSequence.  The following\n   illustrates a successful CA response\
    \ to an RA-encapsulated PKI\n   Request, both of which include Transaction IDs\
    \ and Nonces:\n      SignedData (applied by the CA)\n        PKIData\n       \
    \   controlSequence (Transaction ID, Sender Nonce, Recipient\n               \
    \            Nonce, Batch Response)\n          cmsSequence\n            SignedData\
    \ (applied by CA and includes returned\n                        certificates)\n\
    \              PKIData\n                controlSequence (Transaction ID, Sender\
    \ Nonce,\n                                 Recipient Nonce)\n   The same private\
    \ key used to sign certificates MUST NOT be used to\n   sign Full PKI Response\
    \ messages.  Instead, a separate certificate\n   authorized to sign CMC responses\
    \ MUST be used.  Certificates are\n   authorized to sign Full PKI Responses with\
    \ an EKU and/or with the CCC\n   certificate extension [RFC6010].  Certificates\
    \ may also be authorized\n   through local configuration.  Authorized certificates\
    \ SHOULD include\n   the id-kp-cmcCA EKU from [RFC6402].  Authorized certificates\
    \ MAY also\n   include the CCC certificate extension [RFC6010], or the authorized\n\
    \   certificate MAY just include the CCC certificate extension.  If the\n   CA\
    \ is authorized via the CCC extension, then the CCC extension MUST\n   include\
    \ the object identifier for the PKIResponse content type.  CCC\n   SHOULD be included\
    \ if constraints are to be placed on the content\n   types generated.\n   The\
    \ signature on the SignedData MUST be generated using either ECDSA\n   P-256 on\
    \ SHA-256 or ECDSA P-384 on SHA-384.  If the Full PKI Response\n   is a successful\
    \ response to a P-256 public key certification request,\n   then the SignedData\
    \ MUST be generated using either SHA-256 and ECDSA\n   on P-256 or SHA-384 and\
    \ ECDSA on P-384.  If the Full PKI Response is\n   a successful response to a\
    \ P-384 public key certification request,\n   then the SignedData MUST be generated\
    \ using SHA-384 and ECDSA on\n   P-384.  If the Full PKI Response is a successful\
    \ response to\n   certification requests on both the P-256 and P-356 curves, then\
    \ the\n   SignedData MUST be generated using SHA-384 and ECDSA on P-384.  If\n\
    \   the Full PKI Response is an unsuccessful response to a PKI Request,\n   then\
    \ the SignedData MUST be signed by either SHA-256 and ECDSA on\n   P-256 or SHA-384\
    \ and ECDSA on P-384, the algorithm used in the\n   response MUST match the algorithm\
    \ used in the request.  If the Full\n   PKI Response is an unsuccessful response\
    \ to certification requests on\n   both the P-256 and P-356 curves, then the SignedData\
    \ MUST be\n   generated using SHA-384 and ECDSA on P-384.  If the Full PKI Response\n\
    \   is a successful response to a PKI Request that only contained a Get\n   Certificate\
    \ or Get CRL control, then the SignedData MUST be signed by\n   either SHA-256\
    \ and ECDSA on P-256 or SHA-384 and ECDSA on P-384, the\n   algorithm used in\
    \ the response MUST match the algorithm used in the\n   request.\n   If the PKI\
    \ Response is in response to an RA-encapsulated PKI Request,\n   the signature\
    \ algorithm for each SignedData is selected\n   independently.\n"
- title: '7.  Client Requirements: Processing PKI Responses'
  contents:
  - "7.  Client Requirements: Processing PKI Responses\n   Clients conforming to this\
    \ document MUST ensure that only the\n   permitted signature, hash, and MAC algorithms\
    \ described throughout\n   this profile are used in responses; if they are not,\
    \ the client MUST\n   reject those responses.\n   Clients MUST authenticate all\
    \ Full PKI Responses.  This includes\n   verifying that the PKI Response is signed\
    \ by an authorized CA or RA\n   whose certificate validates back to a trust anchor.\
    \  The authorized\n   CA certificate MUST include the id-kp-cmcCA EKU and/or include\
    \ a CCC\n   extension that includes the object identifier for the PKIResponse\n\
    \   content type.  Or, the CA is determined to be authorized to sign\n   responses\
    \ through an implementation-specific mechanism.  The PKI\n   Response can be signed\
    \ by an RA if it is an error message, if it is a\n   response to a Get Certificate\
    \ or Get CRL request, or if the PKI\n   Response contains an inner PKI Response\
    \ signed by a CA.  In the last\n   case, each layer of PKI Response MUST still\
    \ contain an authorized,\n   valid signature signed by an entity with a valid\
    \ certificate that\n   verifies back to an acceptable trust anchor.  The authorized\
    \ RA\n   certificate MUST include the id-kp-cmcRA EKU and/or include a CCC\n \
    \  extension that includes the object identifier for the PKIResponse\n   content\
    \ type.  Or, the RA is determined to be authorized to sign\n   responses through\
    \ an implementation-specific mechanism.\n   When a newly issued certificate is\
    \ included in the PKI Response, the\n   client MUST verify that the newly issued\
    \ certificate's public key\n   matches the public key that the client requested.\
    \  The client MUST\n   also ensure that the certificate's signature is valid and\
    \ that the\n   signature validates back to an acceptable trust anchor.\n   Clients\
    \ MUST reject PKI Responses that do not pass these tests.\n   Local policy will\
    \ determine whether the client returns a Full PKI\n   Response with an Extended\
    \ CMC Status Info control with CMCStatus set\n   to failed to a user console,\
    \ error log, or the server.\n   If the Full PKI Response contains an Extended\
    \ Status Info with a\n   CMCStatus set to failed, then local policy will determine\
    \ whether the\n   client resends a duplicate certification request back to the\
    \ server\n   or an error state is returned to a console or error log.\n"
- title: 8.  Shared-Secrets
  contents:
  - "8.  Shared-Secrets\n   When the Identity Proof V2 and POP Link Witness V2 controls\
    \ are used,\n   the shared-secret MUST be randomly generated and securely\n  \
    \ distributed.  The shared-secret MUST provide at least 128 bits of\n   strength\
    \ for P-256 certification requests and at least 192 bits of\n   strength for P-384\
    \ certification requests.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Protocol security considerations are found in\
    \ [RFC2986], [RFC4211],\n   [RFC6318], [RFC5272], [RFC5273], [RFC5274], [RFC5759],\
    \ and [RFC6402].\n   When CCC is used to authorize RA and CA certificates, then\
    \ the\n   security considerations in [RFC6010] also apply.  Algorithm security\n\
    \   considerations are found in [RFC6318].\n   Compliant with NIST Special Publication\
    \ 800-57 [SP80057], this\n   profile defines proof-of-possession of a key establishment\
    \ private\n   key by performing a digital signature.  Except for one-time proof-of-\n\
    \   possession, a single key pair MUST NOT be used for both signature and\n  \
    \ key establishment.\n   This specification requires implementations to generate\
    \ key pairs and\n   other random values.  The use of inadequate pseudo-random\
    \ number\n   generators (PRNGs) can result in little or no security.  The\n  \
    \ generation of quality random numbers is difficult.  NIST Special\n   Publication\
    \ 800-90 [SP80090], FIPS 186-3 [DSS], and [RFC4086] offer\n   random number generation\
    \ guidance.\n   When RAs are used, the list of authorized RAs must be securely\n\
    \   distributed out-of-band to CAs.\n   Presence of the POP Link Witness Version\
    \ 2 and POP Link Random\n   attributes protects against substitution attacks.\n\
    \   The Certificate Policy for a particular environment will specify\n   whether\
    \ expired certificates can be used to sign certification\n   requests.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   Michael Peck wishes to acknowledge that he was employed\
    \ at the\n   National Security Agency during much of the work on this document.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [DSS]      National Institute of Standards and\
    \ Technology (NIST),\n              FIPS 186-3: Digital Signature Standard (DSS),\
    \ June 2009.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2986]\
    \  Nystrom, M. and B. Kaliski, \"PKCS #10: Certification\n              Request\
    \ Syntax Specification Version 1.7\", RFC 2986,\n              November 2000.\n\
    \   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n             \
    \ \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n             \
    \ June 2005.\n   [RFC4211]  Schaad, J., \"Internet X.509 Public Key Infrastructure\n\
    \              Certificate Request Message Format (CRMF)\", RFC 4211,\n      \
    \        September 2005.\n   [RFC4231]  Nystrom, M., \"Identifiers and Test Vectors\
    \ for HMAC-\n              SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512\"\
    ,\n              RFC 4231, December 2005.\n   [RFC5272]  Schaad, J. and M. Myers,\
    \ \"Certificate Management over CMS\n              (CMC)\", RFC 5272, June 2008.\n\
    \   [RFC5273]  Schaad, J. and M. Myers, \"Certificate Management over CMS\n  \
    \            (CMC): Transport Protocols\", RFC 5273, June 2008.\n   [RFC5274]\
    \  Schaad, J. and M. Myers, \"Certificate Management Messages\n              over\
    \ CMS (CMC): Compliance Requirements\", RFC 5274, June\n              2008.\n\
    \   [RFC5754]  Turner, S., \"Using SHA2 Algorithms with Cryptographic\n      \
    \        Message Syntax\", RFC 5754, January 2010.\n   [RFC5759]  Solinas, J.\
    \ and L. Zieglar, \"Suite B Certificate and\n              Certificate Revocation\
    \ List (CRL) Profile\", RFC 5759,\n              January 2010.\n   [RFC6010] \
    \ Housley, R., Ashmore, S., and C. Wallace, \"Cryptographic\n              Message\
    \ Syntax (CMS) Content Constraints Extension\", RFC\n              6010, September\
    \ 2010.\n   [RFC6318]  Housley, R. and J. Solinas, \"Suite B in\n            \
    \  Secure/Multipurpose Internet Mail Extensions (S/MIME)\",\n              RFC\
    \ 6318, June 2011.\n   [RFC6402]  Schaad, J., \"Certificate Management over CMS\
    \ (CMC)\n              Updates\", RFC 6402, November 2011.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [SP80057]  National Institute of Standards\
    \ and Technology (NIST),\n              Special Publication 800-57 Part 1: Recommendation\
    \ for Key\n              Management, March 2007.\n   [SP80090]  National Institute\
    \ of Standards and Technology (NIST),\n              Special Publication 800-90:\
    \ Recommendation for Random\n              Number Generation Using Deterministic\
    \ Random Number Bits\n              Generators (Revised), March 2007.\n"
- title: Appendix A.  Scenarios
  contents:
  - "Appendix A.  Scenarios\n   This section illustrates several potential certificate\
    \ enrollment and\n   rekey scenarios supported by this profile.  This section\
    \ does not\n   intend to place any limits or restrictions on the use of CMC.\n"
- title: A.1.  Initial Enrollment
  contents:
  - "A.1.  Initial Enrollment\n   This section describes three scenarios for authenticating\
    \ initial\n   enrollment requests:\n   1. Previously installed signature certificate\
    \ (e.g., Manufacturer\n      Installed Certificate);\n   2. Shared-secret distributed\
    \ securely out-of-band;\n   3. RA authentication.\n"
- title: A.1.1.  Previously Installed Signature Certificate
  contents:
  - "A.1.1.  Previously Installed Signature Certificate\n   In this scenario, the\
    \ end-entity has had a signature certificate\n   installed by the cryptographic\
    \ module manufacturer.  As the end-\n   entity already has a signature certificate,\
    \ it can be used to\n   authenticate a request for a new certificate.  The end-entity\
    \ signs\n   the Full PKI Request with the private key that corresponds to the\n\
    \   subject public key of a previously installed signature certificate.\n   The\
    \ CA will recognize the authorization of the previously installed\n   certificate\
    \ and issue an appropriate certificate to the end-entity.\n"
- title: A.1.2.  Shared-Secret Distributed Securely Out-of-Band
  contents:
  - "A.1.2.  Shared-Secret Distributed Securely Out-of-Band\n   In this scenario,\
    \ the CA distributes a shared-secret out-of-band to\n   the end-entity that the\
    \ end-entity uses to authenticate its\n   certification request.  The end-entity\
    \ signs the Full PKI Request\n   with the private key for which the certification\
    \ is being requested.\n   The end-entity includes the Identity Proof Version 2\
    \ control to\n   authenticate the request using the shared-secret.  The CA uses\
    \ either\n   the Identification control or the Subject in the end-entity's\n \
    \  enclosed PKCS #10 or CRMF certification request message to identify\n   the\
    \ request.  The end-entity performs either the POP Link Witness\n   Version 2\
    \ mechanism as described in [RFC5272], Section 6.3.1.1, or\n   the Shared-Subject/Subject\
    \ Distinguished Name (DN) linking mechanism\n   as described in [RFC5272], Section\
    \ 6.3.2.  The Subject in the\n   enclosed PKCS #10 or CRMF certification request\
    \ does not necessarily\n   match the issued certificate, as it may be used just\
    \ to help identify\n   the request (and corresponding shared-secret) to the CA.\n"
- title: A.1.3.  RA Authentication
  contents:
  - "A.1.3.  RA Authentication\n   In this scenario, the end-entity does not automatically\
    \ authenticate\n   its enrollment request to the CA, either because the end-entity\
    \ has\n   nothing to authenticate the request with or because organizational\n\
    \   policy requires RA involvement.  The end-entity creates a Full PKI\n   Request\
    \ and sends it to an RA.  The RA verifies the authenticity of\n   the request,\
    \ then, if approved, encapsulates and signs the request as\n   described in Section\
    \ 5.2, forwarding the new request on to the CA.\n   The Subject in the PKCS #10\
    \ or CRMF certification request is not\n   required to match the issued certificate,\
    \ it may be used just to help\n   identify the request to the RA and/or CA.\n"
- title: A.2.  Rekey
  contents:
  - "A.2.  Rekey\n   There are two scenarios to support the rekey of certificates\
    \ that are\n   already enrolled.  One addresses the rekey of signature certificates\n\
    \   and the other addresses the rekey of key establishment certificates.\n   Typically,\
    \ organizational policy will require certificates to be\n   currently valid to\
    \ be rekeyed, and it may require initial enrollment\n   to be repeated when rekey\
    \ is not possible.  However, some\n   organizational policies might allow a grace\
    \ period during which an\n   expired certificate could be used to rekey.\n"
- title: A.2.1.  Rekey of Signature Certificates
  contents:
  - "A.2.1.  Rekey of Signature Certificates\n   When a signature certificate is rekeyed,\
    \ the PKCS #10 or CRMF\n   certification request message enclosed in the Full\
    \ PKI Request will\n   include the same Subject as the current signature certificate.\
    \  The\n   Full PKI Request will be signed by the current private key\n   corresponding\
    \ to the current signature certificate.\n"
- title: A.2.2.  Rekey of Key Establishment Certificates
  contents:
  - "A.2.2.  Rekey of Key Establishment Certificates\n   When a key establishment\
    \ certificate is rekeyed, the Full PKI Request\n   will generally be signed by\
    \ the current private key corresponding to\n   the current signature certificate.\
    \  If there is no current signature\n   certificate, one of the initial enrollment\
    \ options in Appendix A.1\n   may be used.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Lydia Zieglar\n   National Information Assurance Research\
    \ Laboratory\n   National Security Agency\n   EMail: llziegl@tycho.ncsc.mil\n\
    \   Sean Turner\n   IECA, Inc.\n   3057 Nutley Street, Suite 106\n   Fairfax,\
    \ VA 22031\n   USA\n   EMail: turners@ieca.com\n   Michael Peck\n   EMail: mpeck@alumni.virginia.edu\n"
