- title: __initial_text__
  contents:
  - "                         Diffie-Helman USM Key\n           Management Information\
    \ Base and Textual Convention\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document specifies an experimental MIB. Readers, implementers\n\
    \   and users of this MIB should be aware that in the future the IETF may\n  \
    \ charter an IETF Working Group to develop a standards track MIB to\n   address\
    \ the same problem space that this MIB addresses.  It is quite\n   possible that\
    \ an incompatible standards track MIB may result from\n   that effort.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an experimental portion of the Management\n  \
    \ Information Base (MIB) for use with network management protocols in\n   the\
    \ Internet community.  In particular, it defines a textual\n   convention for\
    \ doing Diffie-Helman key agreement key exchanges and a\n   set of objects which\
    \ extend the usmUserTable to permit the use of a\n   DH key exchange in addition\
    \ to the key change method described in\n   [12]. In otherwords, this MIB adds\
    \ the possibility of forward secrecy\n   to the USM model.  It also defines a\
    \ set of objects that can be used\n   to kick start security on an SNMPv3 agent\
    \ when the out of band path\n   is authenticated, but not necessarily private\
    \ or confidential.\n   The KeyChange textual convention described in [12] permits\
    \ secure key\n   changes, but has the property that if a third-party has knowledge\
    \ of\n   the original key (e.g. if the agent was manufactured with a standard\n\
    \   default key) and could capture all SNMP exchanges, the third-party\n   would\
    \ know the new key.  The Diffie-Helman key change described here\n   limits knowledge\
    \ of the new key to the agent and the manager making\n   the change.  In otherwords,\
    \ this process adds forward secrecy to the\n   key change process.\n   The recommendation\
    \ in [12] is that the usmUserTable be populated out\n   of band - e.g. not via\
    \ SNMP.  If the number of agents to be\n   configured is small, this can be done\
    \ via a console port and\n   manually.  If the number of agents is large, as is\
    \ the case for a\n   cable modem system, the manual approach doesn't scale well.\
    \  The\n   combination of the two mechanisms specified here - the DH key change\n\
    \   mechanism, and the DH key ignition mechanism - allows managable use\n   of\
    \ SNMPv3 USM in a system of millions of devices.\n   This memo specifies a MIB\
    \ module in a manner that is compliant to the\n   SNMP SMIv2[5][6][7].  The set\
    \ of objects is consistent with the SNMP\n   framework and existing SNMP standards\
    \ and is intended for use with\n   the SNMPv3 User Security Model MIB and other\
    \ security related MIBs.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \
    \ \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [16].\n   This memo is a private submission by the author, but is applicable\
    \ to\n   the SNMPv3 working group within the Internet Engineering Task Force.\n\
    \   Comments are solicited and should be addressed to the the author.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 The SNMP Management Framework .................................\
    \   2\n   1.1 Structure of the MIB ........................................  \
    \ 3\n   2 Theory of Operation ...........................................   4\n\
    \   2.1 Diffie-Helman Key Changes ...................................   4\n  \
    \ 2.2 Diffie-Helman Key Ignition ..................................   4\n   3\
    \ Definitions ...................................................   6\n   4 References\
    \ ....................................................  17\n   5 Security Considerations\
    \ .......................................  18\n   6 Intellectual Property .........................................\
    \  19\n   7 Author's Address ..............................................  19\n\
    \   8 Full Copyright Statement ......................................  20\n"
- title: 1.  The SNMP Management Framework   The SNMP Management Framework
  contents:
  - "1.  The SNMP Management Framework   The SNMP Management Framework\n   presently\
    \ consists of five major components:\n   o   An overall architecture, described\
    \ in RFC 2271 [1].\n   o   Mechanisms for describing and naming objects and events\
    \ for the\n       purpose of management. The first version of this Structure of\n\
    \       Management Information (SMI) is called SMIv1 and described in STD\n  \
    \     16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The\n       second\
    \ version, called SMIv2, is described in STD 58, RFC 2578\n       [5], STD 58,\
    \ RFC 2579 [6] and STD 58, RFC 2580 [7].\n   o   Message protocols for transferring\
    \ management information. The\n       first version of the SNMP message protocol\
    \ is called SNMPv1 and\n       described in STD 15, RFC 1157 [8]. A second version\
    \ of the SNMP\n       message protocol, which is not an Internet standards track\n\
    \       protocol, is called SNMPv2c and described in RFC 1901 [9] and RFC\n  \
    \     1906 [10].  The third version of the message protocol is called\n      \
    \ SNMPv3 and described in RFC 1906 [10], RFC 2272 [11] and RFC 2274\n       [12].\n\
    \   o   Protocol operations for accessing management information. The\n      \
    \ first set of protocol operations and associated PDU formats is\n       described\
    \ in STD 15, RFC 1157 [8]. A second set of protocol\n       operations and associated\
    \ PDU formats is described in RFC 1905\n       [13].\n   o   A set of fundamental\
    \ applications described in RFC 2273 [14] and\n       the view-based access control\
    \ mechanism described in RFC 2275\n       [15].\n   Managed objects are accessed\
    \ via a virtual information store, termed\n   the Management Information Base\
    \ or MIB.  Objects in the MIB are\n   defined using the mechanisms defined in\
    \ the SMI.\n   This memo specifies a MIB module that is compliant to the SMIv2.\
    \ A\n   MIB conforming to the SMIv1 can be produced through the appropriate\n\
    \   translations. The resulting translated MIB must be semantically\n   equivalent,\
    \ except where objects or events are omitted because no\n   translation is possible\
    \ (use of Counter64). Some machine readable\n   information in SMIv2 will be converted\
    \ into textual descriptions in\n   SMIv1 during the translation process. However,\
    \ this loss of machine\n   readable information is not considered to change the\
    \ semantics of the\n   MIB.\n"
- title: 1.1.  Structure of the MIB
  contents:
  - "1.1.  Structure of the MIB\n   This MIB is structured into three groups and a\
    \ single textual\n   convention:\n   o   The DHKeyChange textual convention defines\
    \ the process for\n       changing a secret key value via a Diffie-Helman key\
    \ exchange.\n   o   The usmDHPublicObjects group contains a single object which\n\
    \       describes the public Diffie-Helman parameters required by any\n      \
    \ instance of a DHKeyChange typed object.\n   o   The usmDHUserKeyTable augments\
    \ and extends the usmUserTable\n       defined in the SNMPv3 User-based Security\
    \ Model MIB [12] by\n       providing objects which permit the updating of the\
    \ Authentication\n       and Privacy keys for a row in this table through the\
    \ use of a\n       Diffie-Helman key exchange.\n   o   The usmDHKickstartTable\
    \ provides a mechanism for a management\n       station to be able to agree upon\
    \ a set of authentication and\n       confidentiality keys and their associated\
    \ row in the\n       usmUserTable.\n"
- title: 2.  Theory of Operation
  contents:
  - '2.  Theory of Operation

    '
- title: 2.1.  Diffie-Helman Key Changes
  contents:
  - "2.1.  Diffie-Helman Key Changes\n   Upon row creation (in the usmUserTable),\
    \ or object change (either of\n   the object in the usmDHUserKeyTable or its associated\
    \ value in the\n   usmUserTable), the agent generates a random number.  From this\
    \ random\n   number, the agent uses the DH parameters and transforms to derive\
    \ a\n   DH public value which is then published to the associated MIB object.\n\
    \   The management station reads one or more of the objects in the\n   usmDHUserKeyTable\
    \ to get the agent's DH public values.\n   The management station generates a\
    \ random number, derives a DH public\n   value from that random number (as described\
    \ in the DHKeyChange\n   Textual Convention), and does an SNMP SET against the\
    \ object in the\n   usmDHUserKeyTable.  The set consists of the concatenation\
    \ of the\n   agent's derived DH public value and the manager's derived DH public\n\
    \   value (to ensure the DHKeyChange object hasn't otherwise changed in\n   the\
    \ meantime).\n   Upon successful completion of the set, the underlying key\n \
    \  (authentication or confidentiality) for the associated object in the\n   usmUserTable\
    \ is changed to a key derived from the DH shared secret.\n   Both the agent and\
    \ the management station are able to calculate this\n   value based on their knowledge\
    \ of their own random number and the\n   other's DH public number.\n"
- title: 2.2.  Diffie-Helman Key Ignition
  contents:
  - "2.2.  Diffie-Helman Key Ignition\n   [12] recommends that the usmUserTable be\
    \ populated out of band, for\n   example - manually.  This works reasonably well\
    \ if there are a small\n   number of agents, or if all the agents are using the\
    \ same key\n   material, and if the device is physically accessible for that action.\n\
    \   It does not scale very well to the case of possibly millions of\n   devices\
    \ located in thousands of locations in hundreds of markets in\n   multiple countries.\
    \  In other words, it doesn't work well with a\n   cable modem system, and may\
    \ not work all that well with other large-\n   scale consumer broadband IP offerings.\n\
    \   The methods described in the objects under the usmDHKickstartGroup\n   can\
    \ be used to populate the usmUserTable in the circumstances where\n   you may\
    \ be able to provide at least limited integrity for the\n   provisioning process,\
    \ but you can't guarantee confidentiality.  In\n   addition, as a side effect\
    \ of using the DH exchange, the operational\n   USM keys for each agent will differ\
    \ from the operational USM keys for\n   every other device in the system, ensuring\
    \ that compromise of one\n   device does not compromise the system as a whole.\n\
    \   The vendor who implements these objects is expected to provide one or\n  \
    \ more usmSecurityNames which map to a set of accesses defined in the\n   VACM\
    \ [15] tables.  For example, the vendor may provide a 'root' user\n   who has\
    \ access to the entire device for read-write, and 'operator'\n   user who has\
    \ access to the network specific monitoring objects and\n   can also reset the\
    \ device, and a 'customer' user who has access to a\n   subset of the monitoring\
    \ objects which can be used to help the\n   customer debug the device in conjunction\
    \ with customer service\n   questions.\n   To use, the system manager (the organization\
    \ or individual who own\n   the group of devices) generates one or more random\
    \ numbers - R.  The\n   manager derives the DH Public Numbers R' from these random\
    \ numbers,\n   associates the public numbers with a security name, and configures\n\
    \   the agent with this association.  The configuration would be done\n   either\
    \ manually (in the case of a small number of devices), or via\n   some sort of\
    \ distributed configuration file.  The actual mechanism is\n   outside the scope\
    \ of this document.  The agent in turn generates a\n   random number for each\
    \ name/number pair, and publishes the DH Public\n   Number derived from its random\
    \ number in the usmDHKickstartTable\n   along with the manager's public number\
    \ and provided security name.\n   Once the agent is initialized, an SNMP Manager\
    \ can read the contents\n   of the usmDHKickstartTable using the security name\
    \ of 'dhKickstart'\n   with no authentication.  The manager looks for one or more\
    \ entries in\n   this table where it knows the random number used to derive the\n\
    \   usmDHKickstartMgrPublic number.  Given the manager's knowledge of the\n  \
    \ private random number, and the usmDHKickstartMyPublic number, the\n   manager\
    \ can calculate the DH shared secret.  From that shared secret,\n   it can derive\
    \ the operational authentication and confidentiality keys\n   for the usmUserTable\
    \ row which has the matching security name.  Given\n   the keys and the security\
    \ name, the manager can then use normal USM\n   mechanisms to access the remainder\
    \ of the agent's MIB space.\n"
- title: 3.  Definitions
  contents:
  - '3.  Definitions

    '
- title: SNMP-USM-DH-OBJECTS-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'SNMP-USM-DH-OBJECTS-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    -- OBJECT-IDENTITY,\n    experimental,\
    \ Integer32\n        FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION\n        FROM SNMPv2-TC\n\
    \    MODULE-COMPLIANCE, OBJECT-GROUP\n        FROM SNMPv2-CONF\n    usmUserEntry\n\
    \        FROM SNMP-USER-BASED-SM-MIB\n    SnmpAdminString\n        FROM SNMP-FRAMEWORK-MIB;\n"
- title: snmpUsmDHObjectsMIB MODULE-IDENTITY
  contents:
  - "snmpUsmDHObjectsMIB MODULE-IDENTITY\n    LAST-UPDATED \"200003060000Z\"  -- 6\
    \ March 2000, Midnight\n    ORGANIZATION \"Excite@Home\"\n    CONTACT-INFO \"\
    Author: Mike StJohns\n                  Postal: Excite@Home\n                \
    \          450 Broadway\n                          Redwood City, CA 94063\n  \
    \                Email:  stjohns@corp.home.net\n                  Phone:  +1-650-556-5368\"\
    \n    DESCRIPTION\n        \"The management information definitions for providing\
    \ forward\n    secrecy for key changes for the usmUserTable, and for providing\
    \ a\n    method for 'kickstarting' access to the agent via a Diffie-Helman\n \
    \   key agreement.\"\n    REVISION     \"200003060000Z\"\n    DESCRIPTION\n  \
    \     \"Initial version published as RFC 2786.\"\n    ::= { experimental 101 }\
    \  -- IANA DHKEY-CHANGE 101\n"
- title: -- Administrative assignments
  contents:
  - '-- Administrative assignments

    '
- title: usmDHKeyObjects OBJECT IDENTIFIER ::= { snmpUsmDHObjectsMIB 1 }
  contents:
  - 'usmDHKeyObjects OBJECT IDENTIFIER ::= { snmpUsmDHObjectsMIB 1 }

    '
- title: usmDHKeyConformance OBJECT IDENTIFIER ::= { snmpUsmDHObjectsMIB 2 }
  contents:
  - 'usmDHKeyConformance OBJECT IDENTIFIER ::= { snmpUsmDHObjectsMIB 2 }

    '
- title: -- Textual conventions
  contents:
  - '-- Textual conventions

    '
- title: DHKeyChange ::=         TEXTUAL-CONVENTION
  contents:
  - "DHKeyChange ::=         TEXTUAL-CONVENTION\n    STATUS              current\n\
    \    DESCRIPTION\n        \"Upon initialization, or upon creation of a row containing\
    \ an\n    object of this type, and after any successful SET of this value, a\n\
    \    GET of this value returns 'y' where y = g^xa MOD p, and where g is\n    the\
    \ base from usmDHParameters, p is the prime from\n    usmDHParameters, and xa\
    \ is a new random integer selected by the\n    agent in the interval 2^(l-1) <=\
    \ xa < 2^l < p-1.  'l' is the\n    optional privateValueLength from usmDHParameters\
    \ in bits.  If 'l'\n    is omitted, then xa (and xr below) is selected in the\
    \ interval 0\n    <= xa < p-1.  y is expressed as an OCTET STRING 'PV' of length\
    \ 'k'\n    which satisfies\n              k\n        y =  SUM   2^(8(k-i)) PV'i\n\
    \             i=1\n        where PV1,...,PVk are the octets of PV from first to\
    \ last, and\n        where PV1 <> 0.\n    A successful SET consists of the value\
    \ 'y' expressed as an OCTET\n    STRING as above concatenated with the value 'z'(expressed\
    \ as an\n    OCTET STRING in the same manner as y) where z = g^xr MOD p, where\n\
    \    g, p and l are as above, and where xr is a new random integer\n    selected\
    \ by the manager in the interval 2^(l-1) <= xr < 2^l <\n    p-1. A SET to an object\
    \ of this type will fail with the error\n    wrongValue if the current 'y' does\
    \ not match the 'y' portion of\n    the value of the varbind for the object. (E.g.\
    \ GET yout, SET\n    concat(yin, z), yout <> yin).\n    Note that the private\
    \ values xa and xr are never transmitted from\n    manager to device or vice versa,\
    \ only the values y and z.\n    Obviously, these values must be retained until\
    \ a successful SET on\n    the associated object.\n    The shared secret 'sk'\
    \ is calculated at the agent as sk = z^xa MOD\n    p, and at the manager as sk\
    \ = y^xr MOD p.\n    Each object definition of this type MUST describe how to\
    \ map from\n    the shared secret 'sk' to the operational key value used by the\n\
    \    protocols and operations related to the object.  In general, if n\n    bits\
    \ of key are required, the author suggests using the n\n    right-most bits of\
    \ the shared secret as the operational key value.\"\n    REFERENCE\n        \"\
    -- Diffie-Hellman Key-Agreement Standard, PKCS #3;\n            RSA Laboratories,\
    \ November 1993\"\n    SYNTAX              OCTET STRING\n"
- title: -- Diffie Hellman public values
  contents:
  - '-- Diffie Hellman public values

    '
- title: usmDHPublicObjects      OBJECT IDENTIFIER ::= { usmDHKeyObjects 1 }
  contents:
  - 'usmDHPublicObjects      OBJECT IDENTIFIER ::= { usmDHKeyObjects 1 }

    '
- title: usmDHParameters OBJECT-TYPE
  contents:
  - "usmDHParameters OBJECT-TYPE\n    SYNTAX  OCTET STRING\n    MAX-ACCESS read-write\n\
    \    STATUS  current\n    DESCRIPTION\n        \"The public Diffie-Hellman parameters\
    \ for doing a Diffie-Hellman\n    key agreement for this device.  This is encoded\
    \ as an ASN.1\n    DHParameter per PKCS #3, section 9.  E.g.\n        DHParameter\
    \ ::= SEQUENCE {\n           prime   INTEGER,   -- p\n           base    INTEGER,\
    \   -- g\n           privateValueLength  INTEGER OPTIONAL }\n    Implementors\
    \ are encouraged to use either the values from\n    Oakley Group 1  or the values\
    \ of from Oakley Group 2 as specified\n    in RFC-2409, The Internet Key Exchange,\
    \ Section 6.1, 6.2 as the\n    default for this object.  Other values may be used,\
    \ but the\n    security properties of those values MUST be well understood and\n\
    \    MUST meet the requirements of PKCS #3 for the selection of\n    Diffie-Hellman\
    \ primes.\n        In addition, any time usmDHParameters changes, all values of\n\
    \    type DHKeyChange will change and new random numbers MUST be\n    generated\
    \ by the agent for each DHKeyChange object.\"\n    REFERENCE\n        \"-- Diffie-Hellman\
    \ Key-Agreement Standard, PKCS #3,\n            RSA Laboratories, November 1993\n\
    \         -- The Internet Key Exchange, RFC 2409, November 1998,\n           \
    \ Sec 6.1, 6.2\"\n    ::= { usmDHPublicObjects 1 }\n"
- title: usmDHUserKeyTable OBJECT-TYPE
  contents:
  - "usmDHUserKeyTable OBJECT-TYPE\n    SYNTAX  SEQUENCE OF UsmDHUserKeyEntry\n  \
    \  MAX-ACCESS not-accessible\n    STATUS  current\n    DESCRIPTION\n        \"\
    This table augments and extends the usmUserTable and provides\n    4 objects which\
    \ exactly mirror the objects in that table with the\n    textual convention of\
    \ 'KeyChange'.  This extension allows key\n    changes to be done in a manner\
    \ where the knowledge of the current\n    secret plus knowledge of the key change\
    \ data exchanges (e.g. via\n    wiretapping)  will not reveal the new key.\"\n\
    \    ::= { usmDHPublicObjects 2 }\n"
- title: usmDHUserKeyEntry OBJECT-TYPE
  contents:
  - "usmDHUserKeyEntry OBJECT-TYPE\n    SYNTAX  UsmDHUserKeyEntry\n    MAX-ACCESS\
    \ not-accessible\n    STATUS  current\n    DESCRIPTION\n        \"A row of DHKeyChange\
    \ objects which augment or replace the\n    functionality of the KeyChange objects\
    \ in the base table row.\"\n    AUGMENTS { usmUserEntry }\n    ::= {usmDHUserKeyTable\
    \ 1 }\n"
- title: UsmDHUserKeyEntry ::= SEQUENCE {
  contents:
  - "UsmDHUserKeyEntry ::= SEQUENCE {\n        usmDHUserAuthKeyChange          DHKeyChange,\n\
    \    usmDHUserOwnAuthKeyChange   DHKeyChange,\n        usmDHUserPrivKeyChange\
    \          DHKeyChange,\n        usmDHUserOwnPrivKeyChange       DHKeyChange\n\
    \        }\n"
- title: usmDHUserAuthKeyChange OBJECT-TYPE
  contents:
  - "usmDHUserAuthKeyChange OBJECT-TYPE\n    SYNTAX  DHKeyChange\n    MAX-ACCESS read-create\n\
    \    STATUS  current\n    DESCRIPTION\n        \"The object used to change any\
    \ given user's Authentication Key\n    using a Diffie-Hellman key exchange.\n\
    \    The right-most n bits of the shared secret 'sk', where 'n' is the\n    number\
    \ of bits required for the protocol defined by\n    usmUserAuthProtocol, are installed\
    \ as the operational\n    authentication key for this row after a successful SET.\"\
    \n    ::= { usmDHUserKeyEntry 1 }\n"
- title: usmDHUserOwnAuthKeyChange OBJECT-TYPE
  contents:
  - "usmDHUserOwnAuthKeyChange OBJECT-TYPE\n    SYNTAX  DHKeyChange\n    MAX-ACCESS\
    \ read-create\n    STATUS  current\n    DESCRIPTION\n        \"The object used\
    \ to change the agents own Authentication Key\n    using a Diffie-Hellman key\
    \ exchange.\n    The right-most n bits of the shared secret 'sk', where 'n' is\
    \ the\n    number of bits required for the protocol defined by\n    usmUserAuthProtocol,\
    \ are installed as the operational\n    authentication key for this row after\
    \ a successful SET.\"\n    ::= { usmDHUserKeyEntry 2 }\n"
- title: usmDHUserPrivKeyChange OBJECT-TYPE
  contents:
  - "usmDHUserPrivKeyChange OBJECT-TYPE\n    SYNTAX  DHKeyChange\n    MAX-ACCESS read-create\n\
    \    STATUS  current\n    DESCRIPTION\n        \"The object used to change any\
    \ given user's Privacy Key using\n    a Diffie-Hellman key exchange.\n    The\
    \ right-most n bits of the shared secret 'sk', where 'n' is the\n    number of\
    \ bits required for the protocol defined by\n    usmUserPrivProtocol, are installed\
    \ as the operational privacy key\n    for this row after a successful SET.\"\n\
    \    ::= { usmDHUserKeyEntry 3 }\n"
- title: usmDHUserOwnPrivKeyChange OBJECT-TYPE
  contents:
  - "usmDHUserOwnPrivKeyChange OBJECT-TYPE\n    SYNTAX  DHKeyChange\n    MAX-ACCESS\
    \ read-create\n    STATUS  current\n    DESCRIPTION\n        \"The object used\
    \ to change the agent's own Privacy Key using a\n    Diffie-Hellman key exchange.\n\
    \    The right-most n bits of the shared secret 'sk', where 'n' is the\n    number\
    \ of bits required for the protocol defined by\n    usmUserPrivProtocol, are installed\
    \ as the operational privacy key\n    for this row after a successful SET.\"\n\
    \    ::= { usmDHUserKeyEntry 4 }\n"
- title: usmDHKickstartGroup OBJECT IDENTIFIER ::= { usmDHKeyObjects 2 }
  contents:
  - 'usmDHKickstartGroup OBJECT IDENTIFIER ::= { usmDHKeyObjects 2 }

    '
- title: usmDHKickstartTable OBJECT-TYPE
  contents:
  - "usmDHKickstartTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF UsmDHKickstartEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A table of mappings between zero or more Diffie-Helman key\n    agreement\
    \ values and entries in the usmUserTable.  Entries in this\n    table are created\
    \ by providing the associated device with a\n    Diffie-Helman public value and\
    \ a usmUserName/usmUserSecurityName\n    pair during initialization. How these\
    \ values are provided is\n    outside the scope of this MIB, but could be provided\
    \ manually, or\n    through a configuration file.  Valid public value/name pairs\n\
    \    result in the creation of a row in this table as well as the\n    creation\
    \ of an associated row (with keys derived as indicated) in\n    the usmUserTable.\
    \  The actual access the related usmSecurityName\n    has is dependent on the\
    \ entries in the VACM tables.  In general,\n    an implementor will specify one\
    \ or more standard security names\n    and will provide entries in the VACM tables\
    \ granting various\n    levels of access to those names.  The actual content of\
    \ the VACM\n    table is beyond the scope of this MIB.\n    Note: This table is\
    \ expected to be readable without authentication\n    using the usmUserSecurityName\
    \ 'dhKickstart'.  See the conformance\n    statements for details.\"\n    ::=\
    \ { usmDHKickstartGroup 1 }\n"
- title: usmDHKickstartEntry OBJECT-TYPE
  contents:
  - "usmDHKickstartEntry OBJECT-TYPE\n    SYNTAX      UsmDHKickstartEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"An entry\
    \ in the usmDHKickstartTable.  The agent SHOULD either\n    delete this entry\
    \ or mark it as inactive upon a successful SET of\n    any of the KeyChange-typed\
    \ objects in the usmUserEntry or upon a\n    successful SET of any of the DHKeyChange-typed\
    \ objects in the\n    usmDhKeyChangeEntry where the related usmSecurityName (e.g.\
    \ row of\n    usmUserTable or row of ushDhKeyChangeTable) equals this entry's\n\
    \    usmDhKickstartSecurityName.  In otherwords, once you've changed\n    one\
    \ or more of the keys for a row in usmUserTable with a\n    particular security\
    \ name, the row in this table with that same\n    security name is no longer useful\
    \ or meaningful.\"\n    INDEX   { usmDHKickstartIndex }\n    ::= {usmDHKickstartTable\
    \ 1 }\n"
- title: UsmDHKickstartEntry ::= SEQUENCE  {
  contents:
  - "UsmDHKickstartEntry ::= SEQUENCE  {\n        usmDHKickstartIndex     Integer32,\n\
    \        usmDHKickstartMyPublic  OCTET STRING,\n        usmDHKickstartMgrPublic\
    \ OCTET STRING,\n        usmDHKickstartSecurityName      SnmpAdminString\n   \
    \     }\n"
- title: usmDHKickstartIndex OBJECT-TYPE
  contents:
  - "usmDHKickstartIndex OBJECT-TYPE\n    SYNTAX      Integer32  (1..2147483647)\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"Index value for this row.\"\n    ::= { usmDHKickstartEntry 1 }\n"
- title: usmDHKickstartMyPublic OBJECT-TYPE
  contents:
  - "usmDHKickstartMyPublic OBJECT-TYPE\n    SYNTAX      OCTET STRING\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The agent's\
    \ Diffie-Hellman public value for this row.  At\n    initialization, the agent\
    \ generates a random number and derives\n    its public value from that number.\
    \  This public value is published\n    here.  This public value 'y' equals g^r\
    \ MOD p where g is the from\n    the set of Diffie-Hellman parameters, p is the\
    \ prime from those\n    parameters, and r is a random integer selected by the\
    \ agent in the\n    interval 2^(l-1) <= r < p-1 < 2^l.  If l is unspecified, then\
    \ r is\n    a random integer selected in the interval 0 <= r < p-1\n    The public\
    \ value is expressed as an OCTET STRING 'PV' of length\n    'k' which satisfies\n\
    \              k\n        y =  SUM   2^(8(k-i)) PV'i\n             i = 1\n   \
    \     where PV1,...,PVk are the octets of PV from first to last, and\n       \
    \ where PV1 != 0.\n    The following DH parameters (Oakley group #2, RFC 2409,\
    \ sec 6.1,\n    6.2) are used for this object:\n    g = 2\n    p = FFFFFFFF FFFFFFFF\
    \ C90FDAA2 2168C234 C4C6628B 80DC1CD1\n        29024E08 8A67CC74 020BBEA6 3B139B22\
    \ 514A0879 8E3404DD\n        EF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245\n\
    \        E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED\n        EE386BFB\
    \ 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE65381\n        FFFFFFFF FFFFFFFF\n  \
    \  l=1024\n    \"\n    REFERENCE\n        \"-- Diffie-Hellman Key-Agreement Standard,\
    \ PKCS#3v1.4;\n            RSA Laboratories, November 1993\n         -- The Internet\
    \ Key Exchange, RFC2409;\n            Harkins, D., Carrel, D.; November 1998\"\
    \n    ::= { usmDHKickstartEntry 2 }\n"
- title: usmDHKickstartMgrPublic OBJECT-TYPE
  contents:
  - "usmDHKickstartMgrPublic OBJECT-TYPE\n    SYNTAX      OCTET STRING\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The manager's\
    \ Diffie-Hellman public value for this row.  Note\n    that this value is not\
    \ set via the SNMP agent, but may be set via\n    some out of band method, such\
    \ as the device's configuration file.\n    The manager calculates this value in\
    \ the same manner and using the\n    same parameter set as the agent does.  E.g.\
    \ it selects a random\n    number 'r', calculates y = g^r mod p and provides 'y'\
    \ as the\n    public number expressed as an OCTET STRING.  See\n    usmDHKickstartMyPublic\
    \ for details.\n    When this object is set with a valid value during initialization,\n\
    \    a row is created in the usmUserTable with the following values:\n    usmUserEngineID\
    \             localEngineID\n    usmUserName                 [value of usmDHKickstartSecurityName]\n\
    \    usmUserSecurityName         [value of usmDHKickstartSecurityName]\n    usmUserCloneFrom\
    \            ZeroDotZero\n    usmUserAuthProtocol         usmHMACMD5AuthProtocol\n\
    \    usmUserAuthKeyChange        -- derived from set value\n    usmUserOwnAuthKeyChange\
    \     -- derived from set value\n    usmUserPrivProtocol         usmDESPrivProtocol\n\
    \    usmUserPrivKeyChange        -- derived from set value\n    usmUserOwnPrivKeyChange\
    \     -- derived from set value\n    usmUserPublic               ''\n    usmUserStorageType\
    \          permanent\n    usmUserStatus               active\n    A shared secret\
    \ 'sk' is calculated at the agent as sk =\n    mgrPublic^r mod p where r is the\
    \ agents random number and p is the\n    DH prime from the common parameters.\
    \  The underlying privacy key\n    for this row is derived from sk by applying\
    \ the key derivation\n    function PBKDF2 defined in PKCS#5v2.0 with a salt of\
    \ 0xd1310ba6,\n    and iterationCount of 500, a keyLength of 16 (for\n    usmDESPrivProtocol),\
    \ and a prf (pseudo random function) of\n    'id-hmacWithSHA1'.  The underlying\
    \ authentication key for this row\n    is derived from sk by applying the key\
    \ derivation function PBKDF2\n    with a salt of 0x98dfb5ac , an interation count\
    \ of 500, a\n    keyLength of 16 (for usmHMAC5AuthProtocol), and a prf of\n  \
    \  'id-hmacWithSHA1'.  Note: The salts are the first two words in the\n    ks0\
    \ [key schedule 0] of the BLOWFISH cipher from 'Applied\n    Cryptography' by\
    \ Bruce Schnier - they could be any relatively\n    random string of bits.\n \
    \   The manager can use its knowledge of its own random number and the\n    agent's\
    \ public value to kickstart its access to the agent in a\n    secure manner. \
    \ Note that the security of this approach is\n    directly related to the strength\
    \ of the authorization security of\n    the out of band provisioning of the managers\
    \ public value\n    (e.g. the configuration file), but is not dependent at all\
    \ on the\n    strength of the confidentiality of the out of band provisioning\n\
    \    data.\"\n    REFERENCE\n        \"-- Password-Based Cryptography Standard,\
    \ PKCS#5v2.0;\n            RSA Laboratories, March 1999\n         -- Applied Cryptography,\
    \ 2nd Ed.; B. Schneier,\n            Counterpane Systems; John Wiley & Sons, 1996\"\
    \n    ::= { usmDHKickstartEntry 3 }\n"
- title: usmDHKickstartSecurityName OBJECT-TYPE
  contents:
  - "usmDHKickstartSecurityName OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n   \
    \ MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"\
    The usmUserName and usmUserSecurityName in the usmUserTable\n    associated with\
    \ this row.  This is provided in the same manner and\n    at the same time as\
    \ the usmDHKickstartMgrPublic value -\n    e.g. possibly manually, or via the\
    \ device's configuration file.\"\n    ::= { usmDHKickstartEntry 4 }\n"
- title: -- Conformance Information
  contents:
  - '-- Conformance Information

    '
- title: usmDHKeyMIBCompliances  OBJECT IDENTIFIER ::= { usmDHKeyConformance 1 }
  contents:
  - 'usmDHKeyMIBCompliances  OBJECT IDENTIFIER ::= { usmDHKeyConformance 1 }

    '
- title: usmDHKeyMIBGroups       OBJECT IDENTIFIER ::= { usmDHKeyConformance 2 }
  contents:
  - 'usmDHKeyMIBGroups       OBJECT IDENTIFIER ::= { usmDHKeyConformance 2 }

    '
- title: -- Compliance statements
  contents:
  - '-- Compliance statements

    '
- title: usmDHKeyMIBCompliance   MODULE-COMPLIANCE
  contents:
  - "usmDHKeyMIBCompliance   MODULE-COMPLIANCE\n    STATUS      current\n    DESCRIPTION\n\
    \        \"The compliance statement for this module.\"\n    MODULE\n        GROUP\
    \ usmDHKeyMIBBasicGroup\n        DESCRIPTION\n        \"This group MAY be implemented\
    \ by any agent which\n        implements the usmUserTable and which wishes to\
    \ provide the\n        ability to change user and agent authentication and privacy\n\
    \        keys via Diffie-Hellman key exchanges.\"\n        GROUP usmDHKeyParamGroup\n\
    \        DESCRIPTION\n            \"This group MUST be implemented by any agent\
    \ which\n        implements a MIB containing the DHKeyChange Textual\n       \
    \ Convention defined in this module.\"\n        GROUP usmDHKeyKickstartGroup\n\
    \        DESCRIPTION\n            \"This group MAY be implemented by any agent\
    \ which\n        implements the usmUserTable and which wishes the ability to\n\
    \        populate the USM table based on out-of-band provided DH\n        ignition\
    \ values.\n             Any agent implementing this group is expected to provide\n\
    \        preinstalled entries in the vacm tables as follows:\n             In\
    \ the usmUserTable: This entry allows access to the\n        system and dhKickstart\
    \ groups\n        usmUserEngineID         localEngineID\n        usmUserName \
    \            'dhKickstart'\n        usmUserSecurityName     'dhKickstart'\n  \
    \      usmUserCloneFrom        ZeroDotZero\n        usmUserAuthProtocol     none\n\
    \        usmUserAuthKeyChange    ''\n        usmUserOwnAuthKeyChange ''\n    \
    \    usmUserPrivProtocol     none\n        usmUserPrivKeyChange    ''\n      \
    \  usmUserOwnPrivKeyChange ''\n        usmUserPublic           ''\n        usmUserStorageType\
    \      permanent\n        usmUserStatus           active\n            In the vacmSecurityToGroupTable:\
    \ This maps the initial\n        user into the accessible objects.\n        vacmSecurityModel\
    \               3 (USM)\n        vacmSecurityName                'dhKickstart'\n\
    \        vacmGroupName                   'dhKickstart'\n        vacmSecurityToGroupStorageType\
    \  permanent\n        vacmSecurityToGroupStatus       active\n            In the\
    \ vacmAccessTable: Group name to view name translation.\n        vacmGroupName\
    \                   'dhKickstart'\n    vacmAccessContextPrefix             ''\n\
    \        vacmAccessSecurityModel         3 (USM)\n        vacmAccessSecurityLevel\
    \         noAuthNoPriv\n        vacmAccessContextMatch          exact\n      \
    \  vacmAccessReadViewName          'dhKickRestricted'\n        vacmAccessWriteViewName\
    \         ''\n        vacmAccessNotifyViewName        'dhKickRestricted'\n   \
    \     vacmAccessStorageType           permanent\n        vacmAccessStatus    \
    \            active\n            In the vacmViewTreeFamilyTable: Two entries to\
    \ allow the\n        initial entry to access the system and kickstart groups.\n\
    \        vacmViewTreeFamilyViewName      'dhKickRestricted'\n        vacmViewTreeFamilySubtree\
    \       1.3.6.1.2.1.1  (system)\n        vacmViewTreeFamilyMask          ''\n\
    \        vacmViewTreeFamilyType          1\n        vacmViewTreeFamilyStorageType\
    \   permanent\n        vacmViewTreeFamilyStatus        active\n        vacmViewTreeFamilyViewName\
    \      'dhKickRestricted'\n        vacmViewTreeFamilySubtree         (usmDHKickstartTable\
    \ OID)\n        vacmViewTreeFamilyMask          ''\n        vacmViewTreeFamilyType\
    \          1\n        vacmViewTreeFamilyStorageType   permanent\n        vacmViewTreeFamilyStatus\
    \        active\n        \"\n        OBJECT usmDHParameters\n        MIN-ACCESS\
    \      read-only\n        DESCRIPTION\n            \"It is compliant to implement\
    \ this object as read-only for\n        any device.\"\n    ::= { usmDHKeyMIBCompliances\
    \ 1 }\n"
- title: -- Units of Compliance
  contents:
  - '-- Units of Compliance

    '
- title: usmDHKeyMIBBasicGroup OBJECT-GROUP
  contents:
  - "usmDHKeyMIBBasicGroup OBJECT-GROUP\n    OBJECTS     {\n                  usmDHUserAuthKeyChange,\n\
    \                  usmDHUserOwnAuthKeyChange,\n                  usmDHUserPrivKeyChange,\n\
    \                  usmDHUserOwnPrivKeyChange\n                }\n    STATUS  \
    \    current\n    DESCRIPTION\n        \"\"\n    ::= { usmDHKeyMIBGroups 1 }\n"
- title: usmDHKeyParamGroup OBJECT-GROUP
  contents:
  - "usmDHKeyParamGroup OBJECT-GROUP\n    OBJECTS     {\n                  usmDHParameters\n\
    \                }\n    STATUS      current\n    DESCRIPTION\n        \"The mandatory\
    \ object for all MIBs which use the DHKeyChange\n    textual convention.\"\n \
    \   ::= { usmDHKeyMIBGroups 2 }\n"
- title: usmDHKeyKickstartGroup OBJECT-GROUP
  contents:
  - "usmDHKeyKickstartGroup OBJECT-GROUP\n    OBJECTS     {\n                  usmDHKickstartMyPublic,\n\
    \                  usmDHKickstartMgrPublic,\n                  usmDHKickstartSecurityName\n\
    \                }\n    STATUS      current\n    DESCRIPTION\n        \"The objects\
    \ used for kickstarting one or more SNMPv3 USM\n    associations via a configuration\
    \ file or other out of band,\n    non-confidential access.\"\n    ::= { usmDHKeyMIBGroups\
    \ 3 }\n"
- title: END
  contents:
  - 'END

    '
- title: 4.  References
  contents:
  - "4.  References\n   [1]  Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2571, April 1999.\n\
    \   [2]  Rose, M. and K. McCloghrie, \"Structure and Identification of\n     \
    \   Management Information for TCP/IP-based Internets\", STD 16, RFC\n       \
    \ 1155, May 1990.\n   [3]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n   [4]  Rose, M., \"A Convention for\
    \ Defining Traps for use with the\n        SNMP\", RFC 1215, March 1991.\n   [5]\
    \  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,  J.,\n        Rose, M.\
    \ and S. Waldbusser, \"Structure of Management Information\n        Version 2\
    \ (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [6]  McCloghrie, K., Perkins, D.,\
    \ Schoenwaelder, J., Case,  J.,\n        Rose, M. and S. Waldbusser, \"Textual\
    \ Conventions for SMIv2\", STD\n        58, RFC 2579, April 1999.\n   [7]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser,\
    \ \"Conformance Statements for SMIv2\", STD\n        58, RFC 2580, April 1999.\n\
    \   [8]  Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple\n       \
    \ Network Management Protocol\", STD 15, RFC 1157, May 1990.\n   [9]  Case, J.,\
    \ McCloghrie, K., Rose, M. and S. Waldbusser,\n        \"Introduction to Community-based\
    \ SNMPv2\", RFC 1901, January\n        1996.\n   [10] Case, J., McCloghrie, K.,\
    \ Rose, M. and S. Waldbusser, \"Transport\n        Mappings for Version 2 of the\
    \ Simple Network Management Protocol\n        (SNMPv2)\", RFC 1906, January 1996.\n\
    \   [11] Case, J., Harrington D., Presuhn R. and B. Wijnen, \"Message\n      \
    \  Processing and Dispatching for the Simple Network Management\n        Protocol\
    \ (SNMP)\", RFC 2572, April 1999.\n   [12] Blumenthal, U. and B. Wijnen, \"User-based\
    \ Security Model (USM)\n        for version 3 of the Simple Network Management\
    \ Protocol\n        (SNMPv3)\", RFC 2574, April 1999.\n   [13] Case, J., McCloghrie,\
    \ K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations for Version 2\
    \ of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1905, January\
    \ 1996.\n   [14] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\",\
    \ RFC\n        2573, April 1999.\n   [15] Wijnen, B., Presuhn, R. and K. McCloghrie,\
    \ \"View-based Access\n        Control Model (VACM) for the Simple Network Management\
    \ Protocol\n        (SNMP)\", RFC 2575, April 1999.\n   [16] Bradner, S., \"Key\
    \ words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [17] \"Diffie-Hellman Key-Agreement Standard, Version\
    \ 1.4\", PKCS #3,\n        RSA Laboratories, November 1993.\n   [18] Harkins,\
    \ D. and D. Carrel, \"The Internet Key Exchange\", RFC\n        2409, November\
    \ 1988.\n   [19] Eastlake, D., Crocker, S. and J. Schiller, \"Randomness\n   \
    \     Recommendations for Security\", RFC 1750, December 1994.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Objects in the usmDHUserKeyTable should be considered\
    \ to have the\n   same security sensitivity as the objects of the KeyChange type\
    \ in\n   usmUserTable and should be afforded the same level of protection.\n \
    \  Specifically, the VACM should not grant more or less access to these\n   objects\
    \ than it grants to the usmUserTable KeyChange object.\n   The improper selection\
    \ of parameters for use with Diffie-Hellman key\n   changes may adversely affect\
    \ the security of the agent.  Please see\n   the body of the MIB for specific\
    \ recommendations or requirements on\n   the selection of the DH parameters.\n\
    \   An unauthenticated DH exchange is subject to \"man-in-the-middle\"\n   attacks.\
    \  The use of the DH exchange in any specific environment\n   should balance risk\
    \ versus threat.\n   Good security from a DH exchange requires a good source of\
    \ random\n   numbers.  If your application cannot provide a reasonable source\
    \ of\n   randomness, do not use a DH exchange.  For more information, see\n  \
    \ \"Randomness Recommendations for Security\" [19].\n"
- title: 6.  Intellectual Property
  contents:
  - "6.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 7.  Author's Address
  contents:
  - "7.  Author's Address\n   Michael C. StJohns\n   Excite@Home\n   450 Broadway\n\
    \   Redwood City, CA 94063\n   USA\n   Phone: +1-650-556-5368\n   EMail: stjohns@corp.home.net\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
