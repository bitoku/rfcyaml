- title: __initial_text__
  contents:
  - '            Registration Procedures for SOIF Template Types

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Summary Object Interchange Format [Ref. 1] was first defined\
    \ by\n   the Harvest Project [Ref 2.] in January 1994.  SOIF was derived from\n\
    \   a combination of the Internet Anonymous FTP Archives IETF Working\n   Group\
    \ (IAFA) templates [Ref 3.] and the BibTeX bibliography format\n   [Ref 4.]. \
    \ The combination was originally noted for its advantages of\n   providing a convenient\
    \ and intuitive way for delimiting objects\n   within a stream, and setting apart\
    \ the URL for easy object access or\n   invocation, while still preserving compatibility\
    \ with IAFA templates.\n   SOIF uses named template types to indicate the attributes\
    \ which may\n   be contained within a particular summary object.  Within the context\n\
    \   of a single application, private agreement on the definition of\n   template\
    \ types has been adequate.  As SOIF objects are moved among\n   applications,\
    \ however, the need for standard, well-specified, and\n   easily identifiable\
    \ template types increases.  This need is\n   particularly intense in the context\
    \ of query referral, where\n   knowledge of an attribute's definition and the\
    \ allowed data types for\n   specific values is crucial.  For a discussion of\
    \ this in the context\n   of the Common Indexing Protocol, see [Ref. 1].\n   The\
    \ registration procedure described in this document is specific to\n   SOIF template\
    \ types.  There is ongoing work within the IETF to\n   specify a more generic\
    \ schema registration facility[Ref. 5].  It is\n   not yet clear whether the results\
    \ of that work will encompass the\n   ability to register entities like SOIF template\
    \ types.  If it does\n   so, the registration of SOIF template types may be shifted\
    \ to that\n   method and registry.  Should that occur, appropriate pointers will\
    \ be\n   created in cooperation with the Registrar to ensure that no\n   registrations\
    \ are lost.\n"
- title: 1.  Registrar
  contents:
  - "1.  Registrar\n   The initial registrar of SOIF template types will be the Internet\n\
    \   Assigned Numbers Authority (IANA).\n"
- title: 2.  Defining Template Types
  contents:
  - "2.  Defining Template Types\n   Each SOIF object is composed of 3 fundamental\
    \ components: a template\n   type IDENTIFIER, a URL, and zero or more ATTRIBUTE-VALUE\
    \ pairs.  See\n   [Ref 1.] for the formal grammar of SOIF and a description of\
    \ how\n   these components interrelate.  As part of the registration process,\n\
    \   registrants must: propose a template type IDENTIFER; list the\n   ATTRIBUTEs\
    \ which the template may contain; identify whether each\n   ATTRIBUTE is mandatory\
    \ or optional; and specifiy the data type and\n   encoding appropriate for the\
    \ VALUEs associated with each ATTRIBUTE.\n"
- title: 2.1 The template type IDENTIFIER
  contents:
  - "2.1 The template type IDENTIFIER\n   The IDENTIFIER for the template type is\
    \ assigned at registration\n   based on a proposal from the registrant.  It is,\
    \ however, at the sole\n   discretion of the registrars to assign specific IDENTIFIERS.\
    \  While\n   they will normally assign the IDENTIFIERs proposed by registrants,\n\
    \   they may choose to modify a proposed IDENTIFIER to avoid conflict\n   with\
    \ other existing or proposed template types.\n   Because of the pre-installed\
    \ base of servers using privately agreed\n   upon template types, applications\
    \ using SOIF need to be able to\n   ascertain whether a referenced template type\
    \ has been registered.  In\n   order to accomplish this, all template type IDENTIFIERS\
    \ for template\n   types registered with the IANA will begin with the ASCII string\n\
    \   \"IANA-\".  An IANA-registered template type based on the GILS\n   specification,\
    \ for example, might be registered as \"IANA-GILS\".\n   Should other registrars\
    \ emerge over time, similar strings must be\n   established and used to compose\
    \ template type IDENTIFIERS which they\n   assign.\n"
- title: 2.2 The URL
  contents:
  - "2.2 The URL\n   The URL associated with a particular summary object is determined\
    \ by\n   the application generating the object.  Applications must generate\n\
    \   valid URLs according to the rules of [Ref 6.], but there is no\n   restriction\
    \ on what sorts of URLs may be associated with particular\n   template types.\
    \  The use of a particular template type indicates the\n   type of information\
    \ contained in the summary object, not how the\n   inital resource being summarized\
    \ was accessed.  This aspect of SOIF\n   summary objects is therefor not subject\
    \ to registration.\n"
- title: 2.3 ATTRIBUTES
  contents:
  - "2.3 ATTRIBUTES\n   Where an ATTRIBUTE associated with a proposed template type\
    \ exactly\n   matches an ATTRIBUTE previously defined in a registered template\n\
    \   type, the proposed ATTRIBUTE should be defined by reference to the\n   existing,\
    \ registered ATTRIBUTE.  This allows query referral meshes to\n   easily map queries\
    \ against ATTRIBUTEs derived from different template\n   types and provides an\
    \ easy method for extending or restricting an\n   existing template type to match\
    \ an application's particular needs.\n   In such cases, the ATTRIBUTE for the\
    \ newly registered template type\n   will have the same name, description, and\
    \ allowed values as the\n   ATTRIBUTE in the existing registered template type.\n\
    \   Where no existing ATTRIBUTE may be referenced, registrants must\n   specify\
    \ each ATTRIBUTE's name, description, and allowed values.\n"
- title: 2.3.1 ATTRIBUTE names
  contents:
  - "2.3.1 ATTRIBUTE names\n   To handle multiple VALUEs for the same ATTRIBUTE, SOIF\
    \ uses a naming\n   convention, appending a hyphen and a positive integer to the\
    \ base\n   ATTRIBUTE name to create a unique ATTRIBUTE IDENTIFIER.  For example,\n\
    \   the ATTRIBUTE IDENTIFIERs \"Publisher-1\", \"Publisher-2\", and\n   \"Publisher-3\"\
    \ can be used to associate three VALUEs with the\n   ATTRIBUTE named \"Publisher\"\
    .  In order to provide for the unimpeded\n   operation of this convention, ATTRIBUTE\
    \ names may not terminate with\n   a hyphen followed by an integer.  ATTRIBUTE\
    \ names are otherwise\n   restricted only by the grammar defined in [Ref. 1].\n\
    \   In general, registrants will probably wish to propose ATTRIBUTE names\n  \
    \ which are short, mnemonic, and intuitively associated with the\n   characterstic\
    \ that the ATTRIBUTE describes.  While these may be\n   generally laudable goals,\
    \ it must be remembered that the application\n   interface need not present the\
    \ raw ATTRIBUTE name to the end user;\n   indeed, in situations where the end\
    \ user's language does not use the\n   ASCII character set, the interface must\
    \ map the ATTRIBUTE name to an\n   appropriate local representation.  Since ATTRIBUTE\
    \ definitions are\n   provided as part of the registration process, registrants\
    \ should\n   avoid attempting to overload the ATTRIBUTE name with information\n\
    \   which belongs in the description.\n"
- title: 2.3.2  ATTRIBUTE descriptions
  contents:
  - "2.3.2  ATTRIBUTE descriptions\n   ATTRIBUTE descriptions for ATTRIBUTEs registered\
    \ with the IANA must\n   be in English, though mappings to other languages may\
    \ be proposed as\n   part of the ATTRIBUTE description.  ATTRIBUTE descriptions\
    \ should\n   propose clear criteria for establishing whether an object posseses\
    \ a\n   particular ATTRIBUTE.  Descriptions should also include at least two\n\
    \   examples of how each attribute relates to an object being summarized,\n  \
    \ using, where possible, objects which are broadly available to a wide\n   variety\
    \ of audiences.  If several ATTRIBUTEs within a template type\n   inter-relate,\
    \ the descriptions of each may reference the others; care\n   must be taken, however,\
    \ that the resulting descriptions are not\n   circular. Where fully realized specifications\
    \ of the ATTRIBUTEs have\n   been created in other contexts, the salient text\
    \ from those\n   descriptions should be quoted and appropriate references cited.\n"
- title: 2.3.3 Required and Optional Attributes
  contents:
  - "2.3.3 Required and Optional Attributes\n   Each ATTRIBUTE registered for a template\
    \ type must be marked either\n   required or optional.  Note that marking an ATTRIBUTE\
    \ required does\n   not imply that it may not have a null value; it implies only\
    \ that it\n   must appear in all templates of that registered template type.\n"
- title: 2.4 VALUES
  contents:
  - "2.4 VALUES\n   For each ATTRIBUTE, the registrant must specify the data format\
    \ and,\n   if appropriate, the language, character set, and encoding.  Where\n\
    \   possible, the registrant should include references to a precise and\n   openly\
    \ available specification of the format.  The registrant must\n   also specify\
    \ the appropriate matching semantics for the ATTRIBUTE if\n   these are not strictly\
    \ implied by the data format and encoding.  The\n   registrant must also note\
    \ whether null values are permitted.\n"
- title: 3. Versioning
  contents:
  - "3. Versioning\n   Creating a revision of a template type is functionally similar\
    \ to\n   creating a new template type.  A Registrant may propose as a name any\n\
    \   derivative allowed under the rules of section 4.1 and [Ref. 1] to the\n  \
    \ new template type.  ATTRIBUTEs retained across versions without\n   modification\
    \ should be referenced as described in section 4.3.\n   Modified ATTRIBUTEs must\
    \ be described as if new.  A registrant may\n   note a relationship between a\
    \ proposed template type and an existing\n   template type as part of the registration\
    \ process.  The following\n   three relationships are currently defined:\n   Successor:\
    \ for proposed template types intended to replace an\n   existing template type.\n\
    \   Variant: for proposed template types whose ATTRIBUTEs are either a\n   superset\
    \ or a subset of an existing template type.\n   Alternate: for proposed template\
    \ types which share a large number of\n   ATTRIBUTEs with an existing template\
    \ type but whose ATTRIBUTEs do not\n   form a strict superset or subset of an\
    \ existing template type.\n   Note that there may be relationships between ATTRIBUTEs\
    \ of different\n   template types without there being a named relationship between\
    \ the\n   template types themselves.\n"
- title: 4. Security
  contents:
  - "4. Security\n   SOIF template types which are intended for applications which\
    \ will\n   pass summary objects over the global Internet should contain\n   authentication\
    \ ATTRIBUTEs.  SOIF summary objects lacking\n   authentication ATTRIBUTEs must\
    \ be treated as unreliable indicators of\n   the referenced resource's content\
    \ and should only be used where other\n   aspects of the environment provide sufficient\
    \ security to prevent\n   spoofing.  Given, however, that particular template\
    \ types may be\n   intended for environments with such security, there is no requirement\n\
    \   that registered template types contain authentication ATTRIBUTEs.\n   The\
    \ application developer must select or propose a template type\n   appropriate\
    \ for the intended appliation environment; if none is\n   available with suitable\
    \ authentication ATTRIBUTEs, the provisions of\n   section 4.3 make it easy for\
    \ the developer to propose an extension to\n   an existing template type with\
    \ the appropriate authentication\n   ATTRIBUTEs.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1]  Hardie, T., Bowman, M., Hardy, D., Schwartz, M. and D.\
    \ Wessels,\n        \"CIP Index Object Format for SOIF Objects\", RFC 2655, August\n\
    \        1999.\n   [2]  The Harvest Information Discovery and Access System:\n\
    \        <URL:http://harvest.transarc.com/>.\n   [3]  D. Beckett, IAFA Templates\
    \ in Use as Internet Metadata, 4th\n        Int'l WWW Conference, December 1995,\n\
    \        <URL:http://www.hensa.ac.uk/tools/www/iafatools/>\n   [4]  L. Lamport,\
    \ LaTeX: A Document Preparation System, Addison-\n        Wesley, Reading, Mass.,\
    \ 1986.\n   [5]  IETF Schema Registration Working Group.\n        <URL:http://www.ietf.org/html.charters/wg.dir#Applications_Area>\n\
    \   [6]  Berners-Lee, T., Masinter, L. and M. McCahill, \"Uniform Resource\n \
    \       Locators (URL)\", RFC 1738, December 1994.\n"
- title: 6.  Author's Address
  contents:
  - "6.  Author's Address\n   Ted Hardie\n   Equinix\n   901 Marshall Street\n   Redwood\
    \ City, CA 94063 USA\n   EMail: hardie@equinix.com\n"
- title: Appendix A.
  contents:
  - "Appendix A.\n   An Example Registration Form\n   1. Registrant's Name ________________________________________\n\
    \   2. Registrant's Organization ________________________________\n   3. Registrant's\
    \ email address _______________________________\n   4. Registrant's postal address\
    \ ______________________________\n                                  ______________________________\n\
    \                                  ______________________________\n          \
    \                        ______________________________\n   5. Registrant's telephone\
    \ number ____________________________\n   6. Proposed Template Type IDENTIFIER:\
    \ IANA-__________________\n   7. If this Template Type relates to an existing\
    \ Template Type\n   list the Template Type(s) and the relationship:\n   Template\
    \ Type ___________________ Relationship ______________\n   8. For each ATTRIBUTE\
    \ in this Template type, provide the\n   following information:\n   a) NAME _____________________________________________________\n\
    \   b) Reference Template Type __________________________________\n   If there\
    \ is no registered Template Type which has already\n   specified this attribute,\
    \ provide the following information:\n   c) ATTRIBUTE Description ____________________________________\n\
    \                            ____________________________________\n          \
    \                  ____________________________________\n                    \
    \        ____________________________________\n                            ____________________________________\n\
    \                            ____________________________________\n          \
    \                  ____________________________________\n                    \
    \        ____________________________________\n                            ____________________________________\n\
    \                            ____________________________________\n          \
    \                  ____________________________________\n                    \
    \        ____________________________________\n                            ____________________________________\n\
    \                            ____________________________________\n   d) Required\
    \ [] or Optional []?\n   e) Data Type and ecoding for this VALUE _____________________\n\
    \                                           _____________________\n          \
    \                                 _____________________\n   f) If a specific language\
    \ and character set are expected, list\n   them here ___________________________________________________\n\
    \   g) Is a null value permitted? Yes [] No []\n"
- title: 7.  Full Copyright Statement
  contents:
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
