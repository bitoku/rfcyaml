- title: __initial_text__
  contents:
  - ' Content Distribution Network Interconnection (CDNI) Problem Statement

    '
- title: Abstract
  contents:
  - "Abstract\n   Content Delivery Networks (CDNs) provide numerous benefits for\n\
    \   cacheable content: reduced delivery cost, improved quality of\n   experience\
    \ for End Users, and increased robustness of delivery.  For\n   these reasons,\
    \ they are frequently used for large-scale content\n   delivery.  As a result,\
    \ existing CDN Providers are scaling up their\n   infrastructure, and many Network\
    \ Service Providers (NSPs) are\n   deploying their own CDNs.  It is generally\
    \ desirable that a given\n   content item can be delivered to an End User regardless\
    \ of that End\n   User's location or attachment network.  This is the motivation\
    \ for\n   interconnecting standalone CDNs so they can interoperate as an open\n\
    \   content delivery infrastructure for the end-to-end delivery of\n   content\
    \ from Content Service Providers (CSPs) to End Users.  However,\n   no standards\
    \ or open specifications currently exist to facilitate\n   such CDN Interconnection.\n\
    \   The goal of this document is to outline the problem area of CDN\n   Interconnection\
    \ for the IETF CDNI (CDN Interconnection) working\n   group.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6707.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................4\n  \
    \    1.2. CDN Background .............................................9\n   2.\
    \ CDN Interconnection Use Cases ...................................9\n   3. CDN\
    \ Interconnection Model and Problem Area for IETF ............11\n   4. Scoping\
    \ the CDNI Problem .......................................15\n      4.1. CDNI\
    \ Control Interface ....................................16\n      4.2. CDNI Request\
    \ Routing Interface ............................16\n      4.3. CDNI Metadata Interface\
    \ ...................................17\n      4.4. CDNI Logging Interface ....................................17\n\
    \   5. Security Considerations ........................................17\n  \
    \    5.1. Security of the CDNI Control Interface ....................18\n    \
    \  5.2. Security of the CDNI Request Routing Interface ............18\n      5.3.\
    \ Security of the CDNI Metadata Interface ...................19\n      5.4. Security\
    \ of the CDNI Logging Interface ....................19\n   6. Acknowledgements\
    \ ...............................................19\n   7. Informative References\
    \ .........................................20\n   Appendix A. Design Considerations\
    \ for Realizing the CDNI\n               Interfaces ............................................22\n\
    \     A.1. CDNI Control Interface .....................................22\n  \
    \   A.2. CDNI Request Routing Interface .............................23\n    \
    \ A.3. CDNI Metadata Interface ....................................25\n     A.4.\
    \ CDNI Logging Interface .....................................26\n   Appendix\
    \ B. Additional Material ...................................27\n     B.1. Non-Goals\
    \ for IETF .........................................27\n     B.2. Relationship\
    \ to Relevant IETF Working Groups and IRTF\n          Research Groups ............................................29\n\
    \       B.2.1. ALTO WG ................................................29\n  \
    \     B.2.2. DECADE WG ..............................................29\n    \
    \   B.2.3. PPSP WG ................................................31\n      \
    \ B.2.4. IRTF P2P Research Group ................................31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The volume of video and multimedia content delivered over\
    \ the\n   Internet is rapidly increasing and expected to continue doing so in\n\
    \   the future.  In the face of this growth, Content Delivery Networks\n   (CDNs)\
    \ provide numerous benefits for cacheable content: reduced\n   delivery cost,\
    \ improved quality of experience for End Users (EUs),\n   and increased robustness\
    \ of delivery.  For these reasons, CDNs are\n   frequently used for large-scale\
    \ content delivery.  As a result,\n   existing CDN Providers are scaling up their\
    \ infrastructure, and many\n   Network Service Providers (NSPs) are deploying\
    \ their own CDNs.\n   It is generally desirable that a given content item can\
    \ be delivered\n   to an EU regardless of that EU's location or the network they\
    \ are\n   attached to.  However, a given CDN in charge of delivering a given\n\
    \   content may not have a footprint that expands close enough to the\n   EU's\
    \ current location or attachment network, or may not have the\n   necessary resources,\
    \ to realize the user experience and cost benefit\n   that a more distributed\
    \ CDN infrastructure would allow.  This is the\n   motivation for interconnecting\
    \ standalone CDNs so that their\n   collective CDN footprint and resources can\
    \ be leveraged for the\n   end-to-end delivery of content from Content Service\
    \ Providers (CSPs)\n   to EUs.  As an example, a CSP could contract with an \"\
    authoritative\"\n   CDN Provider for the delivery of content, and that Authoritative\
    \ CDN\n   Provider could contract with one or more downstream CDN Providers to\n\
    \   distribute and deliver some or all of the content on behalf of the\n   Authoritative\
    \ CDN Provider.\n   A typical end-to-end content delivery scenario would then\
    \ involve the\n   following business arrangements:\n   o  A business arrangement\
    \ between the EU and his CSP, authorizing\n      access by the EU to content items\
    \ controlled by the CSP.\n   o  A business arrangement between the CSP and an\
    \ \"authoritative\" CDN\n      Provider where the CSP mandates that the CDN Provider\
    \ perform the\n      content delivery on behalf of the CSP.\n   o  A business\
    \ arrangement between the Authoritative CDN Provider and\n      another (or other)\
    \ CDN(s) where the Authoritative CDN may delegate\n      the actual serving of\
    \ some of the content delivery requests to the\n      other CDN(s).  A particular\
    \ case is where this other CDN Provider\n      happens to also be the Network\
    \ Service Provider providing network\n      access to the EU, in which case there\
    \ is also a separate and\n      independent business relationship between the\
    \ EU and the NSP for\n      the corresponding network access.\n   The formation\
    \ and details of any business relationships between a CSP\n   and a CDN Provider\
    \ as well as between one CDN Provider and another\n   CDN Provider are out of\
    \ scope of this document.  However, this\n   document concerns itself with the\
    \ fact that no standards or open\n   specifications currently exist to facilitate\
    \ such CDN Interconnection\n   from a technical perspective.\n   One possible\
    \ flow for performing an end-to-end content delivery\n   across a CDN Interconnection\
    \ is described below:\n   o  The initial content request from an EU's User Agent\
    \ is first\n      received by the authoritative (upstream) CDN, which is the CDN\n\
    \      with a business arrangement with the CSP.\n   o  The authoritative (upstream)\
    \ CDN may serve the request itself, or\n      it may elect to use CDN Interconnection\
    \ to redirect the request to\n      a Downstream CDN that is in a better position\
    \ to do so (e.g., a\n      Downstream CDN that is \"closer\" to the EU).\n   o\
    \  The EU's User Agent will \"follow\" the redirect returned by the\n      Authoritative\
    \ CDN and request the content from the Downstream CDN.\n      If required, the\
    \ Downstream CDN will acquire the requested content\n      from the authoritative\
    \ (upstream) CDN, and if necessary the\n      Authoritative CDN will acquire the\
    \ requested content from the\n      Content Service Provider.\n   The goal of\
    \ this document is to outline the problem area of CDN\n   Interconnection.  Section\
    \ 2 discusses the use cases for CDN\n   Interconnection.  Section 3 presents the\
    \ CDNI model and problem area\n   being considered by the IETF.  Section 4 describes\
    \ each CDNI\n   interface individually and highlights example candidate protocols\n\
    \   that could be considered for reuse or leveraging to implement the\n   CDNI\
    \ interfaces.  Appendix B.2 describes the relationships between\n   the CDNI problem\
    \ space and other relevant IETF working groups and\n   IRTF research groups.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses the following terms:\n   Authoritative\
    \ CDN: A CDN that has a direct relationship with a CSP\n   for the distribution\
    \ and delivery of that CSP's content by the\n   Authoritative CDN or by Downstream\
    \ CDNs of the Authoritative CDN.\n   CDN Interconnection (CDNI): A relationship\
    \ between a pair of CDNs\n   that enables one CDN to provide content delivery\
    \ services on behalf\n   of another CDN.  A CDN Interconnection may be wholly\
    \ or partially\n   realized through a set of interfaces over which a pair of CDNs\n\
    \   communicate with each other in order to achieve the delivery of\n   content\
    \ to User Agents by Surrogates in one CDN (the Downstream CDN)\n   on behalf of\
    \ another CDN (the Upstream CDN).\n   CDN Provider: The service provider who operates\
    \ a CDN and offers a\n   service of content delivery, typically used by a Content\
    \ Service\n   Provider or another CDN Provider.  Note that a given entity may\n\
    \   operate in more than one role.  For example, a company may\n   simultaneously\
    \ operate as a Content Service Provider, a Network\n   Service Provider, and a\
    \ CDN Provider.\n   CDNI Metadata: The subset of Content Distribution Metadata\
    \ that\n   has an inter-CDN scope.  For example, CDNI Metadata may include\n \
    \  geo-blocking information (i.e., information defining geographical\n   areas\
    \ where the content is to be made available or blocked),\n   availability windows\
    \ (i.e., information defining time windows during\n   which the content is to\
    \ be made available or blocked) and access\n   control mechanisms to be enforced\
    \ (e.g., URI signature validation).\n   CDNI Metadata may also include information\
    \ about desired distribution\n   policy (e.g., pre-positioned vs dynamic acquisition)\
    \ and about where/\n   how a CDN can acquire the content.\n   Content: Any form\
    \ of digital data.  One important form of Content\n   with additional constraints\
    \ on distribution and delivery is\n   continuous media (i.e., where there is a\
    \ timing relationship between\n   source and sink).\n   Content Distribution Metadata:\
    \ The subset of Content Metadata that is\n   relevant to the distribution of the\
    \ content.  This is the metadata\n   required by a CDN in order to enable and\
    \ control content distribution\n   and delivery by the CDN.  In a CDN Interconnection\
    \ environment, some\n   of the Content Distribution Metadata may have an intra-CDN\
    \ scope (and\n   therefore need not be communicated between CDNs), while some\
    \ of the\n   Content Distribution Metadata may have an inter-CDN scope (and\n\
    \   therefore needs to be communicated between CDNs).\n   Content Distribution\
    \ Network (CDN) / Content Delivery Network (CDN):\n   Network infrastructure in\
    \ which the network elements cooperate at\n   Layers 4 through 7 for more effective\
    \ delivery of Content to User\n   Agents.  Typically, a CDN consists of a Request\
    \ Routing system, a\n   Distribution system (that includes a set of Surrogates),\
    \ a Logging\n   system, and a CDN Control system.\n   Content Metadata: This is\
    \ metadata about Content.  Content Metadata\n   comprises:\n   1.  Metadata that\
    \ is relevant to the distribution of the content (and\n       therefore relevant\
    \ to a CDN involved in the delivery of that\n       content).  We refer to this\
    \ type of metadata as \"Content\n       Distribution Metadata\".  See also the\
    \ definition of Content\n       Distribution Metadata.\n   2.  Metadata that is\
    \ associated with the actual Content or content\n       representation, and not\
    \ directly relevant to the distribution of\n       that Content.  For example,\
    \ such metadata may include information\n       pertaining to the Content's genre,\
    \ cast, rating, etc. as well as\n       information pertaining to the Content\
    \ representation's\n       resolution, aspect ratio, etc.\n   Content Service:\
    \ The service offered by a Content Service Provider.\n   The Content Service encompasses\
    \ the complete service, which may be\n   wider than just providing access to items\
    \ of Content; e.g., the\n   Content Service also includes any middleware, key\
    \ distribution,\n   program guide, etc. that may not require any direct interaction\
    \ with\n   the CDN, or CDNs, involved in the distribution and delivery of the\n\
    \   content.\n   Content Service Provider (CSP): Provides a Content Service to\
    \ End\n   Users (which they access via a User Agent).  A CSP may own the\n   Content\
    \ made available as part of the Content Service, or may license\n   content rights\
    \ from another party.\n   Control system: The function within a CDN responsible\
    \ for\n   bootstrapping and controlling the other components of the CDN as well\n\
    \   as for handling interactions with external systems (e.g., handling\n   delivery\
    \ service creation/update/removal requests, or specific\n   service provisioning\
    \ requests).\n   Delivery: The function within CDN Surrogates responsible for\n\
    \   delivering a piece of content to the User Agent.  For example,\n   delivery\
    \ may be based on HTTP progressive download or HTTP adaptive\n   streaming.\n\
    \   Distribution system: The function within a CDN responsible for\n   distributing\
    \ Content Distribution Metadata as well as the Content\n   itself inside the CDN\
    \ (e.g., down to the Surrogates).\n   Downstream CDN: For a given End User request,\
    \ the CDN (within a pair\n   of directly interconnected CDNs) to which the request\
    \ is redirected\n   by the other CDN (the Upstream CDN).  Note that in the case\
    \ of\n   successive redirections (e.g., CDN1-->CDN2-->CDN3), a given CDN\n   (e.g.,\
    \ CDN2) may act as the Downstream CDN for a redirection (e.g.,\n   CDN1-->CDN2)\
    \ and as the Upstream CDN for the subsequent redirection\n   of the same request\
    \ (e.g., CDN2-->CDN3).\n   Dynamic CDNI Metadata acquisition: In the context of\
    \ CDN\n   Interconnection, dynamic CDNI Metadata acquisition means that a\n  \
    \ Downstream CDN acquires CDNI Metadata for content from the Upstream\n   CDN\
    \ at some point in time after a request for that content is\n   delegated to the\
    \ Downstream CDN by an Upstream CDN (and that specific\n   CDNI Metadata is not\
    \ yet available in the Downstream CDN).  See also\n   the definitions for Downstream\
    \ CDN and Upstream CDN.\n   Dynamic content acquisition: Dynamic content acquisition\
    \ is where a\n   CDN acquires content from the content source in response to an\
    \ End\n   User requesting that content from the CDN.  In the context of CDN\n\
    \   Interconnection, dynamic acquisition means that a Downstream CDN\n   acquires\
    \ the content from content sources (including Upstream CDNs)\n   at some point\
    \ in time after a request for that content is delegated\n   to the Downstream\
    \ CDN by an Upstream CDN (and that specific content\n   is not yet available in\
    \ the Downstream CDN).\n   End User (EU): The 'real' user of the system, typically\
    \ a human but\n   maybe some combination of hardware and/or software emulating\
    \ a human\n   (e.g., for automated quality monitoring etc.).\n   Logging system:\
    \ The function within a CDN responsible for collecting\n   the measurement and\
    \ recording of distribution and delivery\n   activities.  The information recorded\
    \ by the Logging system may be\n   used for various purposes, including charging\
    \ (e.g., of the CSP),\n   analytics, and monitoring.\n   Metadata: Metadata in\
    \ general is data about data.\n   Network Service Provider (NSP): Provides network-based\
    \ connectivity/\n   services to End Users.\n   Over-the-top (OTT): A service,\
    \ e.g., content delivery using a CDN,\n   operated by a different operator than\
    \ the NSP to which the users of\n   that service are attached.\n   Pre-positioned\
    \ CDNI Metadata acquisition: In the context of CDN\n   Interconnection, CDNI Metadata\
    \ pre-positioning is where the\n   Downstream CDN acquires CDNI Metadata for content\
    \ prior to, or\n   independently of, any End User requesting that content from\
    \ the\n   Downstream CDN.\n   Pre-positioned content acquisition: Content pre-positioning\
    \ is where\n   a CDN acquires content from the content source prior to, or\n \
    \  independently of, any End User requesting that content from the CDN.\n   In\
    \ the context of CDN Interconnection, the Upstream CDN instructs the\n   Downstream\
    \ CDN to acquire the content from content sources (including\n   Upstream CDNs)\
    \ in advance of, or independently of, any End User\n   requesting it.\n   Quality\
    \ of Experience (QoE): As defined in Section 2.4 of [RFC6390].\n   Request Routing\
    \ system: The function within a CDN responsible for\n   receiving a Content Request\
    \ from a User Agent, obtaining and\n   maintaining necessary information about\
    \ a set of candidate Surrogates\n   or candidate CDNs, and for selecting and redirecting\
    \ the user to the\n   appropriate Surrogate or CDN.  To enable CDN Interconnection,\
    \ the\n   Request Routing system must also be capable of handling User Agent\n\
    \   Content Requests passed to it by another CDN.\n   Surrogate: A device/function\
    \ (often called a cache) that interacts\n   with other elements of the CDN for\
    \ the control and distribution of\n   Content within the CDN and interacts with\
    \ User Agents for the\n   delivery of the Content.  Typically, Surrogates will\
    \ cache requested\n   content so that they can directly deliver the same content\
    \ in\n   response to requests from multiple User Agents (and their End Users),\n\
    \   avoiding the need for the content to transit multiple times through\n   the\
    \ network core (i.e., from the content origin to the Surrogate).\n   Upstream\
    \ CDN: For a given End User request, the CDN (within a pair of\n   directly interconnected\
    \ CDNs) that redirects the request to the\n   other CDN.\n   User Agent (UA):\
    \ Software (or a combination of hardware and software)\n   through which the End\
    \ User interacts with a Content Service.  The\n   User Agent will communicate\
    \ with a Content Service for the selection\n   of content and one or more CDNs\
    \ for the delivery of the Content.\n   Such communication is not restricted to\
    \ HTTP and may be via a variety\n   of protocols.  Examples of User Agents (non-exhaustive)\
    \ are browsers,\n   Set Top Boxes (STBs), dedicated content applications (e.g.,\
    \ media\n   players), etc.\n"
- title: 1.2.  CDN Background
  contents:
  - "1.2.  CDN Background\n   Readers are assumed to be familiar with the architecture,\
    \ features,\n   and operation of CDNs.  For readers less familiar with the operation\n\
    \   of CDNs, the following resources may be useful:\n   o  RFC 3040 [RFC3040]\
    \ describes many of the component technologies\n      that are used in the construction\
    \ of a CDN.\n   o  Taxonomy [TAXONOMY] compares the architecture of a number of\
    \ CDNs.\n   o  RFC 3466 [RFC3466] and RFC 3570 [RFC3570] are the output of the\n\
    \      IETF Content Distribution Internetworking (CDI) working group,\n      which\
    \ was closed in 2003.\n   Note: Some of the terms used in this document are similar\
    \ to terms\n   used in the above referenced documents.  When reading this document,\n\
    \   terms should be interpreted as having the definitions provided in\n   Section\
    \ 1.1.\n"
- title: 2.  CDN Interconnection Use Cases
  contents:
  - "2.  CDN Interconnection Use Cases\n   An increasing number of NSPs are deploying\
    \ CDNs in order to deal\n   cost-effectively with the growing usage of on-demand\
    \ video services\n   and other content delivery applications.\n   CDNs allow caching\
    \ of content closer to the edge of a network so that\n   a given item of content\
    \ can be delivered by a CDN Surrogate (i.e., a\n   cache) to multiple User Agents\
    \ (and their End Users) without\n   transiting multiple times through the network\
    \ core (i.e., from the\n   content origin to the Surrogate).  This contributes\
    \ to bandwidth cost\n   reductions for the NSP and to improved quality of experience\
    \ for the\n   End Users.  CDNs also enable replication of popular content across\n\
    \   many Surrogates, which enables content to be served to large numbers\n   of\
    \ User Agents concurrently.  This also helps in dealing with\n   situations such\
    \ as flash crowds and denial-of-service attacks.\n   The CDNs deployed by NSPs\
    \ are not just restricted to the delivery of\n   content to support the Network\
    \ Service Provider's own 'walled garden'\n   services, such as IP delivery of\
    \ television services to Set Top\n   Boxes, but are also used for delivery of\
    \ content to other devices,\n   including PCs, tablets, mobile phones, etc.\n\
    \   Some service providers operate over multiple geographies and federate\n  \
    \ multiple affiliate NSPs.  These NSPs typically operate independent\n   CDNs.\
    \  As they evolve their services (e.g., for seamless support of\n   content services\
    \ to nomadic users across affiliate NSPs), there is a\n   need for interconnection\
    \ of these CDNs; this represents a first use\n   case for CDNI.  However, there\
    \ are no open specifications, nor common\n   best practices, defining how to achieve\
    \ such CDN Interconnection.\n   CSPs have a desire to be able to get (some of)\
    \ their content to very\n   large numbers of End Users, who are often distributed\
    \ across a number\n   of geographies, while maintaining a high quality of experience,\
    \ all\n   without having to maintain direct business relationships with many\n\
    \   different CDN Providers (or having to extend their own CDN to a large\n  \
    \ number of locations).  Some NSPs are considering interconnecting\n   their respective\
    \ CDNs (as well as possibly over-the-top CDNs) so that\n   this collective infrastructure\
    \ can address the requirements of CSPs\n   in a cost-effective manner.  This represents\
    \ a second use case for\n   CDNI.  In particular, this would enable the CSPs to\
    \ benefit from\n   on-net delivery (i.e., within the Network Service Provider's\
    \ own\n   network/CDN footprint) whenever possible and off-net delivery\n   otherwise,\
    \ without requiring the CSPs to maintain direct business\n   relationships with\
    \ all the CDNs involved in the delivery.  Again, CDN\n   Providers (NSPs or over-the-top\
    \ CDN operators) are faced with a lack\n   of open specifications and best practices.\n\
    \   NSPs have often deployed CDNs as specialized cost-reduction projects\n   within\
    \ the context of a particular service or environment.  Some NSPs\n   operate separate\
    \ CDNs for separate services.  For example, there may\n   be a CDN for managed\
    \ IPTV service delivery, a CDN for web-TV\n   delivery, and a CDN for video delivery\
    \ to mobile terminals.  As NSPs\n   integrate their service portfolio, there is\
    \ a need for\n   interconnecting these CDNs, representing a third use case for\
    \ CDNI.\n   Again, NSPs face the problem of lack of open interfaces for CDN\n\
    \   Interconnection.\n   For operational reasons (e.g., disaster, flash crowd)\
    \ or commercial\n   reasons, an over-the-top CDN may elect to make use of another\
    \ CDN\n   (e.g., an NSP CDN with on-net Surrogates for a given footprint) for\n\
    \   serving a subset of the user requests (e.g., requests from users\n   attached\
    \ to that NSP), which results in a fourth use case for CDNI\n   because CDN Providers\
    \ (over-the-top CDN Providers or NSPs) are faced\n   with a lack of open specifications\
    \ and best practices.\n   Use cases for CDN Interconnection are further discussed\
    \ in\n   [CDNI-USE-CASES].\n"
- title: 3.  CDN Interconnection Model and Problem Area for IETF
  contents:
  - "3.  CDN Interconnection Model and Problem Area for IETF\n   This section discusses\
    \ the problem area for the IETF work on CDN\n   Interconnection.\n   Interconnecting\
    \ CDNs involves interactions among multiple different\n   functions and components\
    \ that form each CDN.  Only some of those\n   require additional specification\
    \ by the IETF.\n   Some NSPs have started to perform experiments to explore whether\n\
    \   their CDN use cases can already be addressed with existing CDN\n   implementations.\
    \  One set of such experiments is documented in\n   [CDNI-EXPERIMENTS].  The conclusions\
    \ of those experiments are that\n   while some basic limited CDN Interconnection\
    \ functionality can be\n   achieved with existing CDN technology, the current\
    \ lack of any\n   standardized CDNI interfaces with the necessary level of\n \
    \  functionality such as those discussed in this document is preventing\n   the\
    \ deployment of CDN Interconnection.\n   Listed below are the four interfaces\
    \ required to interconnect a pair\n   of CDNs and that constitute the problem\
    \ space of CDN Interconnection\n   along with the required functionality of each\
    \ interface for which\n   standards do not currently exist.  As part of the development\
    \ of the\n   CDNI interfaces, it will also be necessary to agree on common\n \
    \  mechanisms for how to identify and name the data objects that are to\n   be\
    \ interchanged between interconnected CDNs.\n   The use of the term \"interface\"\
    \ is meant to encompass the protocol\n   over which CDNI data representations\
    \ (e.g., CDNI Metadata objects)\n   are exchanged as well as the specification\
    \ of the data\n   representations themselves (i.e., what properties/fields each\
    \ object\n   contains, its structure, etc.).\n   o  CDNI Control interface: This\
    \ interface allows the \"CDNI Control\"\n      system in interconnected CDNs to\
    \ communicate.  This interface may\n      support the following:\n      *  Allow\
    \ bootstrapping of the other CDNI interfaces (e.g.,\n         interface address/URL\
    \ discovery and establishment of security\n         associations).\n      *  Allow\
    \ configuration of the other CDNI interfaces (e.g.,\n         Upstream CDN specifies\
    \ information to be reported through the\n         CDNI Logging interface).\n\
    \      *  Allow the Downstream CDN to communicate static (or fairly\n        \
    \ static) information about its delivery capabilities and\n         policies.\n\
    \      *  Allow bootstrapping of the interface between CDNs for content\n    \
    \     acquisition (even if that interface itself is outside the scope\n      \
    \   of the CDNI work).\n      *  Allow an Upstream CDN to initiate or request\
    \ specific actions\n         to be undertaken in the Downstream CDN.  For example,\
    \ to allow\n         an Upstream CDN to initiate content or CDNI Metadata\n  \
    \       acquisition (pre-positioning) or to request the invalidation\n       \
    \  or purging of content files and/or CDNI Metadata in a\n         Downstream\
    \ CDN.\n   o  CDNI Request Routing interface: This interface allows the Request\n\
    \      Routing systems in interconnected CDNs to communicate to ensure\n     \
    \ that an End User request can be (re)directed from an Upstream CDN\n      to\
    \ a Surrogate in the Downstream CDN, in particular where\n      selection responsibilities\
    \ may be split across CDNs (for example,\n      the Upstream CDN may be responsible\
    \ for selecting the Downstream\n      CDN, while the Downstream CDN may be responsible\
    \ for selecting the\n      actual Surrogate within that Downstream CDN).  In particular,\
    \ the\n      functions of the CDN Request Routing interface may be divided as\n\
    \      follows:\n      *  A CDNI Request Routing Redirection interface, which\
    \ allows the\n         Upstream CDN to query the Downstream CDN at request routing\n\
    \         time before redirecting the request to the Downstream CDN.\n      *\
    \  A CDNI Footprint & Capabilities advertisement interface, which\n         allows\
    \ the Downstream CDN to provide to the Upstream CDN\n         (static or dynamic)\
    \ information (e.g., resources, footprint,\n         load) to facilitate selection\
    \ of the Downstream CDN by the\n         Upstream CDN Request Routing system when\
    \ processing subsequent\n         Content Requests from User Agents.\n   o  CDNI\
    \ Metadata interface: This interface allows the Distribution\n      system in\
    \ interconnected CDNs to communicate to ensure that CDNI\n      Metadata can be\
    \ exchanged across CDNs.  See Section 1.1 for the\n      definition and examples\
    \ of CDNI Metadata.\n   o  CDNI Logging interface: This interface allows the Logging\
    \ system\n      in interconnected CDNs to communicate the relevant activity logs\n\
    \      in order to allow log-consuming applications to operate in a\n      multi-CDN\
    \ environment.  For example, an Upstream CDN may collect\n      delivery logs\
    \ from a Downstream CDN in order to perform\n      consolidated charging of the\
    \ CSP or for settlement purposes across\n      CDNs.  Similarly, an Upstream CDN\
    \ may collect delivery logs from a\n      Downstream CDN in order to provide consolidated\
    \ reporting and\n      monitoring to the CSP.\n   Note that the actual grouping\
    \ of functionalities under these four\n   interfaces is considered tentative at\
    \ this stage and may be changed\n   after further study (e.g., some subset of\
    \ functionality may be moved\n   from one interface into another).\n   The above\
    \ list covers a significant potential problem space, in part\n   because in order\
    \ to interconnect two CDNs there are several 'touch\n   points' that require standardization.\
    \  However, it is expected that\n   the CDNI interfaces need not be defined from\
    \ scratch and instead can\n   reuse or leverage existing protocols to a very significant\
    \ extent;\n   this is discussed further in Section 4.\n   The interfaces that\
    \ form the CDNI problem area are illustrated in\n   Figure 1.\n     --------\n\
    \    /        \\\n    |   CSP  |\n    \\        /\n     --------\n         *\n\
    \         *\n         *                         /\\\n         *              \
    \          /  \\\n     ----------------------      |CDNI|        ----------------------\n\
    \    /     Upstream CDN     \\     |    |       /    Downstream CDN    \\\n  \
    \  |      +-------------+ | Control Interface| +-------------+      |\n    |*******\
    \   Control   |<======|====|========>|   Control   *******|\n    |*     +------*----*-+\
    \ |     |    |       | +-*----*------+     *|\n    |*            *    *   |  \
    \   |    |       |   *    *            *|\n    |*     +------*------+ | Logging\
    \ Interface| +------*------+     *|\n    |* *****   Logging   |<======|====|========>|\
    \   Logging   ***** *|\n    |* *   +-*-----------+ |     |    |       | +-----------*-+\
    \   * *|\n    |* *     *         *   | Request Routing  |   *         *     *\
    \ *|\n  .....*...+-*---------*-+ |    Interface     | +-*---------*-+...*.*...\n\
    \  . |* * *** Req-Routing |<======|====|========>| Req-Routing *** * *| .\n  .\
    \ |* * * +-------------+.|     |    |       | +-------------+ * * *| .\n  . |*\
    \ * *                 .  CDNI Metadata   |                 * * *| .\n  . |* *\
    \ * +-------------+ |.   Interface     | +-------------+ * * *| .\n  . |* * *\
    \ | Distribution|<==.===|====|========>| Distribution| * * *| .\n  . |* * * |\
    \             | |  .   \\  /        | |             | * * *| .\n  . |* * * |+---------+\
    \  | |   .   \\/         | |  +---------+| * * *| .\n  . |* * ***| +---------+|\
    \ |    ....Request......+---------+ |*** * *| .\n  . |* *****+-|Surrogate|************************|Surrogate|-+*****\
    \ *| .\n  . |*******  +---------+| |   Acquisition    | |+----------+ *******|\
    \ .\n  . |      +-------------+ |                  | +-------*-----+      | .\n\
    \  . \\                      /                  \\         *            / .\n\
    \  .  ----------------------                    ---------*------------  .\n  .\
    \                                                     *              .\n  .  \
    \                                                   * Delivery     .\n  .    \
    \                                                 *              .\n  .      \
    \                                            +--*---+          .\n  ...............Request.............................|\
    \ User |..Request..\n                                                     | Agent|\n\
    \                                                     +------+\n  <==>  interfaces\
    \ inside the scope of CDNI\n  ****  interfaces outside the scope of CDNI\n  ....\
    \  interfaces outside the scope of CDNI\n                Figure 1: A Model for\
    \ the CDNI Problem Area\n   As illustrated in Figure 1, the acquisition of content\
    \ between\n   interconnected CDNs is out of scope for CDNI; this deserves some\n\
    \   additional explanation.  The consequence of such a decision is that\n   the\
    \ CDNI problem space described in this document is focused on only\n   defining\
    \ the control plane for CDNI, and the CDNI data plane (i.e.,\n   the acquisition\
    \ and distribution of the actual content objects) is\n   out of scope.  The rationale\
    \ for such a decision is that CDNs today\n   typically already use standardized\
    \ protocols such as HTTP, FTP,\n   rsync, etc. to acquire content from their CSP\
    \ customers, and it is\n   expected that the same protocols could be used for\
    \ acquisition\n   between interconnected CDNs.  Therefore, the problem of content\n\
    \   acquisition is considered already solved, and all that is required\n   with\
    \ respect to content acquisition from specifications developed by\n   the CDNI\
    \ working group is to describe within the CDNI Metadata the\n   parameters to\
    \ use to retrieve the content -- for example, the IP\n   address/hostname to connect\
    \ to, what protocol to use to retrieve the\n   content, etc.\n"
- title: 4.  Scoping the CDNI Problem
  contents:
  - "4.  Scoping the CDNI Problem\n   This section outlines how the scope of work\
    \ addressing the CDNI\n   problem space can be constrained through reuse or leveraging\
    \ of\n   existing protocols to implement the CDNI interfaces.  This discussion\n\
    \   is not intended to preempt any working group decision as to the most\n   appropriate\
    \ protocols, technologies, and solutions to select to\n   realize the CDNI interfaces\
    \ but is intended as an illustration of the\n   fact that the CDNI interfaces\
    \ need not be created in a vacuum and\n   that reuse or leverage of existing protocols\
    \ is likely possible.\n   The four CDNI interfaces (CDNI Control interface, CDNI\
    \ Request\n   Routing interface, CDNI Metadata interface, and CDNI Logging\n \
    \  interface) described in Section 3 within the CDNI problem area are\n   all\
    \ control plane interfaces operating at the application layer\n   (Layer 7 in\
    \ the OSI network model).  Firstly, since it is not\n   expected that these interfaces\
    \ would exhibit unique session,\n   transport, or network requirements as compared\
    \ to the many other\n   existing applications in the Internet, it is expected\
    \ that the CDNI\n   interfaces will be defined on top of existing session, transport,\
    \ and\n   network protocols.\n   Secondly, although a new application protocol\
    \ could be designed\n   specifically for CDNI, our analysis below shows that this\
    \ is\n   unnecessary, and it is recommended that existing application\n   protocols\
    \ be reused or leveraged (HTTP [RFC2616], the Atom Publishing\n   Protocol [RFC5023],\
    \ the Extensible Messaging and Presence Protocol\n   (XMPP) [RFC6120], for example)\
    \ to realize the CDNI interfaces.\n"
- title: 4.1.  CDNI Control Interface
  contents:
  - "4.1.  CDNI Control Interface\n   The CDNI Control interface allows the Control\
    \ system in\n   interconnected CDNs to communicate.  The exact inter-CDN control\n\
    \   functionality required to be supported by the CDNI Control interface\n   is\
    \ less well defined than the other three CDNI interfaces at this\n   time.\n \
    \  It is expected that for the Control interface, as for the other CDNI\n   interfaces,\
    \ existing protocols can be reused or leveraged.\n"
- title: 4.2.  CDNI Request Routing Interface
  contents:
  - "4.2.  CDNI Request Routing Interface\n   The CDNI Request Routing interface enables\
    \ a Request Routing function\n   in an Upstream CDN to query a Request Routing\
    \ function in a\n   Downstream CDN to determine if the Downstream CDN is able\
    \ (and\n   willing) to accept the delegated Content Request.  It also allows the\n\
    \   Downstream CDN to control what should be returned to the User Agent\n   in\
    \ the redirection message by the upstream Request Routing function.\n   The CDNI\
    \ Request Routing interface is therefore a fairly\n   straightforward request/response\
    \ interface and could be implemented\n   over any number of request/response protocols.\
    \  For example, it may\n   be implemented as a WebService using one of the common\
    \ WebServices\n   methodologies (Extensible Markup Language-Remote Procedure Calling\n\
    \   (XML-RPC), HTTP query to a known URI, etc.).  This removes the need\n   for\
    \ the CDNI working group to define a new protocol for the request/\n   response\
    \ element of the CDNI Request Routing interface.\n   Additionally, as discussed\
    \ in Section 3, the CDNI Request Routing\n   interface is also expected to enable\
    \ a Downstream CDN to provide to\n   the Upstream CDN (static or dynamic) information\
    \ (e.g., resources,\n   footprint, load) to facilitate selection of the Downstream\
    \ CDN by the\n   Upstream CDN Request Routing system when processing subsequent\n\
    \   Content Requests from User Agents.  It is expected that such\n   functionality\
    \ of the CDNI request routing could be specified by the\n   CDNI working group\
    \ with significant leveraging of existing IETF\n   protocols supporting the dynamic\
    \ distribution of reachability\n   information (for example, by leveraging existing\
    \ routing protocols)\n   or supporting application-level queries for topological\
    \ information\n   (for example, by leveraging Application-Layer Traffic Optimization\n\
    \   (ALTO) [RFC5693]).\n"
- title: 4.3.  CDNI Metadata Interface
  contents:
  - "4.3.  CDNI Metadata Interface\n   The CDNI Metadata interface enables the Distribution\
    \ system in a\n   Downstream CDN to request CDNI Metadata from an Upstream CDN\
    \ so that\n   the Downstream CDN can properly process and respond to redirection\n\
    \   requests received over the CDNI Request Routing interface and Content\n  \
    \ Requests received directly from User Agents.\n   The CDNI Metadata interface\
    \ is therefore similar to the CDNI Request\n   Routing interface because it is\
    \ a request/response interface with the\n   potential addition that CDNI Metadata\
    \ search may have more complex\n   semantics than a straightforward Request Routing\
    \ redirection request.\n   Therefore, like the CDNI Request Routing interface,\
    \ the CDNI Metadata\n   interface may be implemented as a WebService using one\
    \ of the common\n   WebServices methodologies (XML-RPC, HTTP query to a known\
    \ URI, etc.)\n   or possibly using other existing protocols such as XMPP [RFC6120].\n\
    \   This removes the need for the CDNI working group to define a new\n   protocol\
    \ for the request/response element of the CDNI Metadata\n   interface.\n"
- title: 4.4.  CDNI Logging Interface
  contents:
  - "4.4.  CDNI Logging Interface\n   The CDNI Logging interface enables details of\
    \ content distribution\n   and delivery activities to be exchanged between interconnected\
    \ CDNs\n   -- for example, the exchange of log records related to the delivery\n\
    \   of content, similar to the log records recorded in a web server's\n   access\
    \ log.\n   Several protocols already exist that could potentially be used to\n\
    \   exchange CDNI logs between interconnected CDNs, including the Simple\n   Network\
    \ Management Protocol (SNMP), syslog, FTP (and secure\n   variants), HTTP POST,\
    \ etc.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Distribution of content by a CDN comes with a\
    \ range of security\n   considerations, such as how to enforce control of access\
    \ to the\n   content by End Users in line with the CSP policy, or how to trust\
    \ the\n   logging information generated by the CDN for the purposes of charging\n\
    \   the CSP.  These security aspects are already dealt with by CDN\n   Providers\
    \ and CSPs today in the context of standalone CDNs.  However,\n   interconnection\
    \ of CDNs introduces a new set of security\n   considerations by extending the\
    \ trust model to a chain of trust\n   (i.e., the CSP \"trusts\" a CDN that \"\
    trusts\" another CDN).  The\n   mechanisms used to mitigate these risks in multi-CDN\
    \ environments may\n   be similar to those used in the single-CDN case, but their\n\
    \   suitability in this more complex environment must be validated.\n   The interconnection\
    \ of CDNs may also introduce additional privacy\n   considerations on top of those\
    \ that apply to the single-CDN case.  In\n   a multi-CDN environment, the different\
    \ CDNs may reside in different\n   legal regimes that require differing privacy\
    \ requirements to be\n   enforced.  Such privacy requirements may impact the granularity\
    \ of\n   information that can be exchanged across the CDNI interfaces.  For\n\
    \   example, the Logging system in a Downstream CDN may need to apply\n   some\
    \ degree of anonymization, obfuscation, or even the complete\n   removal of some\
    \ fields before exchanging log records containing\n   details of End User deliveries\
    \ with an Upstream CDN.\n   Maintaining the security of the content itself, its\
    \ associated\n   metadata (including delivery policies), and the CDNs distributing\
    \ and\n   delivering it, are critical requirements for both CDN Providers and\n\
    \   CSPs, and the CDN Interconnection interfaces must provide sufficient\n   mechanisms\
    \ to maintain the security of the overall system of\n   interconnected CDNs as\
    \ well as the information (content, metadata,\n   logs, etc.) distributed and\
    \ delivered through any set of\n   interconnected CDNs.\n"
- title: 5.1.  Security of the CDNI Control Interface
  contents:
  - "5.1.  Security of the CDNI Control Interface\n   Information exchanged between\
    \ interconnected CDNs over this interface\n   is of a sensitive nature.  A pair\
    \ of CDNs use this interface to allow\n   bootstrapping of all the other CDNI\
    \ interfaces, possibly including\n   establishment of the mechanisms for securing\
    \ these interfaces.\n   Therefore, corruption of that interface may result in\
    \ corruption of\n   all other interfaces.  Using this interface, an Upstream CDN\
    \ may\n   pre-position or delete content or metadata in a Downstream CDN, a\n\
    \   Downstream CDN may provide administrative information to an Upstream\n   CDN,\
    \ etc.  All of these operations require that the peer CDNs are\n   appropriately\
    \ authenticated and that the confidentiality and\n   integrity of information\
    \ flowing between them can be ensured.\n"
- title: 5.2.  Security of the CDNI Request Routing Interface
  contents:
  - "5.2.  Security of the CDNI Request Routing Interface\n   Appropriate levels of\
    \ authentication and confidentiality must be used\n   in this interface because\
    \ it allows an Upstream CDN to query the\n   Downstream CDN in order to redirect\
    \ requests, and conversely, allows\n   the Downstream CDN to influence the Upstream\
    \ CDN's Request Routing\n   function.\n   In the absence of appropriate security\
    \ on this interface, a rogue\n   Upstream CDN could inundate Downstream CDNs with\
    \ bogus requests or\n   have the Downstream CDN send the rogue Upstream CDN private\n\
    \   information.  Also, a rogue Downstream CDN could influence the\n   Upstream\
    \ CDN so the Upstream CDN redirects requests to the rogue\n   Downstream CDN or\
    \ another Downstream CDN in order to, for example,\n   attract additional delivery\
    \ revenue.\n"
- title: 5.3.  Security of the CDNI Metadata Interface
  contents:
  - "5.3.  Security of the CDNI Metadata Interface\n   This interface allows a Downstream\
    \ CDN to request CDNI Metadata from\n   an Upstream CDN, and therefore the Upstream\
    \ CDN must ensure that the\n   former is appropriately authenticated before sending\
    \ the data.\n   Conversely, a Downstream CDN must authenticate an Upstream CDN\
    \ before\n   requesting metadata to insulate itself from poisoning by rogue\n\
    \   Upstream CDNs.  The confidentiality and integrity of the information\n   exchanged\
    \ between the peers must be protected.\n"
- title: 5.4.  Security of the CDNI Logging Interface
  contents:
  - "5.4.  Security of the CDNI Logging Interface\n   Logging data consists of potentially\
    \ sensitive information (which End\n   User accessed which media resource, IP\
    \ addresses of End Users,\n   potential names and subscriber account information,\
    \ etc.).\n   Confidentiality of this information must be protected as log records\n\
    \   are moved between CDNs.  This information may also be sensitive from\n   the\
    \ viewpoint that it can be the basis for charging across CDNs.\n   Therefore,\
    \ appropriate levels of protection are needed against\n   corruption, duplication,\
    \ and loss of this information.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors would like to thank Andre Beck, Gilles Bertrand,\
    \ Mark\n   Carlson, Bruce Davie, David Ferguson, Yiu Lee, Kent Leung, Will Li,\n\
    \   Kevin Ma, Julien Maisonneuve, Guy Meador, Larry Peterson, Emile\n   Stephan,\
    \ Oskar van Deventer, Mahesh Viveganandhan, and Richard Woundy\n   for their review\
    \ comments and contributions to the text.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [ALTO-CDN-USE-CASES]\n              Niven-Jenkins,\
    \ B., Ed., Watson, G., Bitar, N., Medved, J.,\n              and S. Previdi, \"\
    Use Cases for ALTO within CDNs\", Work\n              in Progress, June 2012.\n\
    \   [ALTO-Charter]\n              \"IETF ALTO WG Charter\",\n              <http://datatracker.ietf.org/wg/alto/charter/>.\n\
    \   [CDNI-EXPERIMENTS]\n              Bertrand, G., Ed., Le Faucheur, F., and\
    \ L. Peterson,\n              \"Content Distribution Network Interconnection (CDNI)\n\
    \              Experiments\", Work in Progress, February 2012.\n   [CDNI-USE-CASES]\n\
    \              Bertrand, G., Ed., Emile, S., Burbridge, T., Eardley, P.,\n   \
    \           Ma, K., and G. Watson, \"Use Cases for Content Delivery\n        \
    \      Network Interconnection\", Work in Progress, August 2012.\n   [DECADE-Charter]\n\
    \              \"IETF DECADE WG Charter\",\n              <http://datatracker.ietf.org/wg/decade/charter/>.\n\
    \   [P2PRG-CDNI]\n              Davie, B. and F. Le Faucheur, \"Interconnecting\
    \ CDNs aka\n              'Peering Peer-to-Peer'\", March 2010,\n            \
    \  <http://www.ietf.org/proceedings/77/slides/P2PRG-2.pdf>.\n   [PPSP-Charter]\n\
    \              \"IETF PPSP WG Charter\",\n              <http://datatracker.ietf.org/wg/ppsp/charter/>.\n\
    \   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n           \
    \   Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer\
    \ Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC3040]  Cooper, I., Melve,\
    \ I., and G. Tomlinson, \"Internet Web\n              Replication and Caching\
    \ Taxonomy\", RFC 3040, January 2001.\n   [RFC3466]  Day, M., Cain, B., Tomlinson,\
    \ G., and P. Rzewski, \"A Model\n              for Content Internetworking (CDI)\"\
    , RFC 3466,\n              February 2003.\n   [RFC3570]  Rzewski, P., Day, M.,\
    \ and D. Gilletti, \"Content\n              Internetworking (CDI) Scenarios\"\
    , RFC 3570, July 2003.\n   [RFC5023]  Gregorio, J., Ed., and B. de hOra, Ed.,\
    \ \"The Atom\n              Publishing Protocol\", RFC 5023, October 2007.\n \
    \  [RFC5693]  Seedorf, J. and E. Burger, \"Application-Layer Traffic\n       \
    \       Optimization (ALTO) Problem Statement\", RFC 5693,\n              October\
    \ 2009.\n   [RFC6120]  Saint-Andre, P., \"Extensible Messaging and Presence\n\
    \              Protocol (XMPP): Core\", RFC 6120, March 2011.\n   [RFC6390]  Clark,\
    \ A. and B. Claise, \"Guidelines for Considering New\n              Performance\
    \ Metric Development\", BCP 170, RFC 6390,\n              October 2011.\n   [TAXONOMY]\
    \ Pathan, A. and R. Buyya, \"A Taxonomy and Survey of Content\n              Delivery\
    \ Networks\", 2007,\n              <http://www.cloudbus.org/reports/CDN-Taxonomy.pdf>.\n"
- title: Appendix A.  Design Considerations for Realizing the CDNI Interfaces
  contents:
  - "Appendix A.  Design Considerations for Realizing the CDNI Interfaces\n   This\
    \ section expands on how CDNI interfaces can reuse and leverage\n   existing protocols\
    \ before describing each CDNI interface individually\n   and highlighting example\
    \ candidate protocols that could be considered\n   for reuse or leveraging to\
    \ implement the CDNI interfaces.  However,\n   the options discussed here are\
    \ purely examples and do not present any\n   consensus on protocols to be used\
    \ later on.\n"
- title: A.1.  CDNI Control Interface
  contents:
  - "A.1.  CDNI Control Interface\n   The CDNI Control interface allows the Control\
    \ system in\n   interconnected CDNs to communicate.  The exact inter-CDN control\n\
    \   functionality required to be supported by the CDNI Control interface\n   is\
    \ less well defined than the other three CDNI interfaces at this\n   time.\n \
    \  However, as discussed in Section 3, the CDNI Control interface may be\n   required\
    \ to support functionality similar to the following:\n   o  Allow an Upstream\
    \ CDN and Downstream CDN to establish, update, or\n      terminate their CDNI\
    \ interconnection.\n   o  Allow bootstrapping of the other CDNI interfaces (e.g.,\
    \ protocol\n      address discovery and establishment of security associations).\n\
    \   o  Allow configuration of the other CDNI interfaces (e.g., Upstream\n    \
    \  CDN specifies information to be reported through the CDNI Logging\n      interface).\n\
    \   o  Allow the Downstream CDN to communicate static information about\n    \
    \  its delivery capabilities, resources, and policies.\n   o  Allow bootstrapping\
    \ of the interface between CDNs for content\n      acquisition (even if that interface\
    \ itself is outside the scope of\n      the CDNI work).\n   It is expected that\
    \ for the Control interface, as for the other CDNI\n   interfaces, existing protocols\
    \ can be reused or leveraged.  Those\n   will be considered once the requirements\
    \ for the Control interface\n   have been refined.\n"
- title: A.2.  CDNI Request Routing Interface
  contents:
  - "A.2.  CDNI Request Routing Interface\n   The CDNI Request Routing interface enables\
    \ a Request Routing function\n   in an Upstream CDN to query a Request Routing\
    \ function in a\n   Downstream CDN to determine if the Downstream CDN is able\
    \ (and\n   willing) to accept the delegated Content Request and to allow the\n\
    \   Downstream CDN to control what the upstream Request Routing function\n   should\
    \ return to the User Agent in the redirection message.\n   Therefore, the CDNI\
    \ Request Routing interface needs to offer a\n   mechanism for an Upstream CDN\
    \ to issue a \"Redirection Request\" to a\n   Downstream CDN.  The Request Routing\
    \ interface needs to be able to\n   support scenarios where the initial User Agent\
    \ request to the\n   Upstream CDN is received over DNS as well as over a content-specific\n\
    \   application protocol (e.g., HTTP, the Real Time Streaming Protocol\n   (RTSP),\
    \ the Real Time Messaging Protocol (RTMP), etc.).\n   Therefore, a Redirection\
    \ Request is expected to contain information\n   such as:\n   o  The protocol\
    \ (e.g., DNS, HTTP) over which the Upstream CDN\n      received the initial User\
    \ Agent request.\n   o  Additional details of the User Agent request that are\
    \ required to\n      perform effective Request Routing by the Downstream CDN.\
    \  For DNS,\n      this would typically be the IP address of the DNS resolver\
    \ making\n      the request on behalf of the User Agent.  For requests received\n\
    \      over content-specific application protocols, the Redirection\n      Request\
    \ could contain significantly more information related to\n      the original\
    \ User Agent request but at a minimum is expected to\n      include the User Agent's\
    \ IP address, the equivalent of the HTTP\n      Host header, and the equivalent\
    \ of the HTTP abs_path as defined in\n      [RFC2616].\n   It should be noted\
    \ that the CDNI architecture needs to consider that\n   a Downstream CDN may receive\
    \ requests from User Agents without first\n   receiving a Redirection Request\
    \ from an Upstream CDN for the\n   corresponding User Agent request because, for\
    \ example:\n   o  User Agents (or DNS resolvers) may cache DNS or application\n\
    \      responses from Request Routers.\n   o  Responses to Redirection Requests\
    \ over the Request Routing\n      interface may be cacheable.\n   o  Some CDNs\
    \ may rely on simple coarse policies, e.g., CDN B agrees\n      to always serve\
    \ CDN A's delegated redirection requests, in which\n      case the necessary redirection\
    \ details are exchanged out of band\n      (of the CDNI interfaces), e.g., configured.\n\
    \   On receiving a Redirection Request, the Downstream CDN will use the\n   information\
    \ provided in the request to determine if it is able (and\n   willing) to accept\
    \ the delegated Content Request and needs to return\n   the result of its decision\
    \ to the Upstream CDN.\n   Thus, a Redirection Response from the Downstream CDN\
    \ is expected to\n   contain information such as:\n   o  Status code indicating\
    \ acceptance or rejection (possibly with\n      accompanying reasons).\n   o \
    \ Information to allow redirection by the Upstream CDN.  In the case\n      of\
    \ DNS-based request routing, this is expected to include the\n      equivalent\
    \ of a DNS record(s) (e.g., a CNAME) that the Upstream\n      CDN should return\
    \ to the requesting DNS resolver.  In the case of\n      application-based request\
    \ routing, this is expected to include the\n      information necessary to construct\
    \ the application-specific\n      redirection response(s) to return to the requesting\
    \ User Agent.\n      For HTTP requests from User Agents, this could include a\
    \ URI that\n      the Upstream CDN could return in an HTTP 3xx response.\n   The\
    \ CDNI Request Routing interface is therefore a fairly\n   straightforward request/response\
    \ interface and could be implemented\n   over any number of request/response protocols.\
    \  For example, it may\n   be implemented as a WebService using one of the common\
    \ WebServices\n   methodologies (XML-RPC, HTTP query to a known URI, etc.).  This\n\
    \   removes the need for the CDNI working group to define a new protocol\n   for\
    \ the request/response element of the CDNI Request Routing\n   interface.  Thus,\
    \ the CDNI working group would be left only with the\n   task of specifying:\n\
    \   o  The recommended request/response protocol to use along with any\n     \
    \ additional semantics and procedures that are specific to the CDNI\n      Request\
    \ Routing interface (e.g., handling of malformed requests/\n      responses).\n\
    \   o  The syntax (i.e., representation/encoding) of the redirection\n      requests\
    \ and responses.\n   o  The semantics (i.e., meaning and expected contents) of\
    \ the\n      redirection requests and responses.\n   Additionally, as discussed\
    \ in Section 3, the CDNI Request Routing\n   interface is also expected to enable\
    \ a Downstream CDN to provide to\n   the Upstream CDN (static or dynamic) information\
    \ (e.g., resources,\n   footprint, load) to facilitate selection of the Downstream\
    \ CDN by the\n   Upstream CDN Request Routing system when processing subsequent\n\
    \   Content Requests from User Agents.  It is expected that such\n   functionality\
    \ of the CDNI request routing could be specified by the\n   CDNI working group\
    \ with significant leveraging of existing IETF\n   protocols supporting the dynamic\
    \ distribution of reachability\n   information (for example, by leveraging existing\
    \ routing protocols)\n   or supporting application-level queries for topological\
    \ information\n   (for example, by leveraging ALTO).\n"
- title: A.3.  CDNI Metadata Interface
  contents:
  - "A.3.  CDNI Metadata Interface\n   The CDNI Metadata interface enables the Distribution\
    \ system in a\n   Downstream CDN to obtain CDNI Metadata from an Upstream CDN\
    \ so that\n   the Downstream CDN can properly process and respond to:\n   o  Redirection\
    \ Requests received over the CDNI Request Routing\n      interface.\n   o  Content\
    \ Requests received directly from User Agents.\n   The CDNI Metadata interface\
    \ needs to offer a mechanism for an\n   Upstream CDN to:\n   o  Distribute/update/remove\
    \ CDNI Metadata to a Downstream CDN.\n   and/or to allow a Downstream CDN to:\n\
    \   o  Make direct requests for CDNI Metadata objects.\n   o  Make recursive requests\
    \ for CDNI Metadata -- for example, to\n      enable a Downstream CDN to walk\
    \ down a tree of objects with\n      inter-object relationships.\n   The CDNI\
    \ Metadata interface is therefore similar to the CDNI Request\n   Routing interface\
    \ because it is a request/response interface with the\n   potential addition that\
    \ CDNI Metadata search may have more complex\n   semantics than a straightforward\
    \ Request Routing redirection request.\n   Therefore, like the CDNI Request Routing\
    \ interface, the CDNI Metadata\n   interface may be implemented as a WebService\
    \ using one of the common\n   WebServices methodologies (XML-RPC, HTTP query to\
    \ a known URI, etc.)\n   or possibly using other existing protocols such as XMPP\
    \ [RFC6120].\n   This removes the need for the CDNI working group to define a\
    \ new\n   protocol for the request/response element of the CDNI Metadata\n   interface.\n\
    \   Thus, the CDNI working group would be left only with the task of\n   specifying:\n\
    \   o  The recommended request/response protocol to use along with any\n     \
    \ additional semantics that are specific to the CDNI Metadata\n      interface\
    \ (e.g., handling of malformed requests/responses).\n   o  The syntax (i.e., representation/encoding)\
    \ of the CDNI Metadata\n      objects that will be exchanged over the interface.\n\
    \   o  The semantics (i.e., meaning and expected contents) of the\n      individual\
    \ properties of a Metadata object.\n   o  How the relationships between different\
    \ CDNI Metadata objects are\n      represented.\n"
- title: A.4.  CDNI Logging Interface
  contents:
  - "A.4.  CDNI Logging Interface\n   The CDNI Logging interface enables details of\
    \ content distribution\n   and delivery activities to be exchanged between interconnected\
    \ CDNs,\n   such as log records related to the delivery of content (similar to\n\
    \   the log records recorded in a web server's access log).\n   Within CDNs today,\
    \ log records are used for a variety of purposes.\n   Specifically, CDNs use logs\
    \ to generate Call Data Records (CDRs) for\n   passing to billing and payment\
    \ systems and to real-time (and near\n   real-time) analytics systems.  Such applications\
    \ place requirements\n   on the CDNI Logging interface to support guaranteed and\
    \ timely\n   delivery of log messages between interconnected CDNs.  It may also\
    \ be\n   necessary to be able to prove the integrity of received log messages.\n\
    \   Several protocols already exist that could potentially be used to\n   exchange\
    \ CDNI logs between interconnected CDNs, including SNMP traps,\n   syslog, FTP,\
    \ HTTP POST, etc., although it is likely that some of the\n   candidate protocols\
    \ may not be well suited to meet all the\n   requirements of CDNI.  For example,\
    \ SNMP traps pose scalability\n   concerns, and SNMP does not support guaranteed\
    \ delivery of traps and\n   therefore could result in log records being lost and\
    \ the consequent\n   CDRs and billing records for that content delivery not being\n\
    \   produced, as well as that content delivery being invisible to any\n   analytics\
    \ platforms.\n   Although it is not necessary to define a new protocol for exchanging\n\
    \   logs across the CDNI Logging interface, the CDNI working group would\n   still\
    \ need to specify:\n   o  The recommended protocol to use.\n   o  A default set\
    \ of log fields and of their syntax and semantics.\n      Today there is no standard\
    \ set of common log fields across\n      different content delivery protocols,\
    \ and in some cases there is\n      not even a standard set of log field names\
    \ and values for\n      different implementations of the same delivery protocol.\n\
    \   o  A default set of conditions that trigger log records to be\n      generated.\n"
- title: Appendix B.  Additional Material
  contents:
  - "Appendix B.  Additional Material\n   This section records related information\
    \ that was produced as part of\n   defining the CDNI problem statement.\n"
- title: B.1.  Non-Goals for IETF
  contents:
  - "B.1.  Non-Goals for IETF\n   Listed below are aspects of content delivery that\
    \ the authors propose\n   be kept outside of the scope of the CDNI working group:\n\
    \   o  The interface between the Content Service Provider and the\n      Authoritative\
    \ CDN (i.e., the Upstream CDN contracted by the CSP\n      for delivery by this\
    \ CDN or by its Downstream CDNs).\n   o  The delivery interface between the delivering\
    \ CDN Surrogate and\n      the User Agent, such as streaming protocols.\n   o\
    \  The request interface between the User Agent and the Request\n      Routing\
    \ system of a given CDN.  Existing IETF protocols (e.g.,\n      HTTP, RTSP, DNS)\
    \ are commonly used by User Agents to request\n      content from a CDN and by\
    \ CDN Request Routing systems to redirect\n      the User Agent requests.  The\
    \ CDNI working group need not define\n      new protocols for this purpose.  Note,\
    \ however, that the CDNI\n      control plane interface may indirectly affect\
    \ some of the\n      information exchanged through the request interface (e.g.,\
    \ URI).\n   o  The content acquisition interface between CDNs (i.e., the data\n\
    \      plane interface for actual delivery of a piece of content from one\n  \
    \    CDN to the other).  This is expected to use existing protocols\n      such\
    \ as HTTP or protocols defined in other forums for content\n      acquisition\
    \ between an origin server and a CDN (e.g., HTTP-based\n      C2 reference point\
    \ of the Alliance for Telecommunications Industry\n      Solutions IPTV Interoperability\
    \ Forum Content on Demand service\n      (ATIS IIF CoD)).  The CDN Interconnection\
    \ problem space described\n      in this document may therefore only concern itself\
    \ with the\n      agreement/negotiation aspects of which content acquisition\n\
    \      protocol is to be used between two interconnected CDNs in view of\n   \
    \   facilitating interoperability.\n   o  End User/User Agent Authentication.\
    \  End User/User Agent\n      authentication and authorization are the responsibility\
    \ of the\n      Content Service Provider.\n   o  Content preparation, including\
    \ encoding and transcoding.  The CDNI\n      architecture aims at allowing distribution\
    \ across interconnected\n      CDNs of content treated as opaque objects.  Interpretation\
    \ and\n      processing of the objects, as well as optimized delivery of these\n\
    \      objects by the Surrogate to the End User, are outside the scope of\n  \
    \    CDNI.\n   o  Digital Rights Management (DRM).  DRM is an end-to-end issue\n\
    \      between a content protection system and the User Agent.\n   o  Applications\
    \ consuming CDNI logs (e.g., charging, analytics,\n      reporting, ...).\n  \
    \ o  Internal CDN interfaces and protocols (i.e., interfaces and\n      protocols\
    \ within one CDN).\n   o  Scalability of individual CDNs.  While scalability of\
    \ the CDNI\n      interfaces/approach is in scope, how an individual CDN scales\
    \ is\n      out of scope.\n   o  Actual algorithms for selection of CDNs or Surrogates\
    \ by Request\n      Routing systems (however, some specific parameters required\
    \ as\n      input to these algorithms may be in scope when they need to be\n \
    \     communicated across CDNs).\n   o  Surrogate algorithms.  For example, caching\
    \ algorithms and content\n      acquisition methods are outside the scope of the\
    \ CDNI work.\n      Content management (e.g., Content Deletion) as it relates\
    \ to CDNI\n      content management policies is in scope, but the internal\n \
    \     algorithms used by a cache to determine when to no longer cache an\n   \
    \   item of Content (in the absence of any specific metadata to the\n      contrary)\
    \ is out of scope.\n   o  Element management interfaces.\n   o  Commercial, business,\
    \ and legal aspects related to the\n      interconnections of CDNs.\n"
- title: B.2.  Relationship to Relevant IETF Working Groups and IRTF Research
  contents:
  - "B.2.  Relationship to Relevant IETF Working Groups and IRTF Research\n      Groups\n"
- title: B.2.1.  ALTO WG
  contents:
  - "B.2.1.  ALTO WG\n   As stated in the ALTO working group charter [ALTO-Charter]:\n\
    \      The Working Group will design and specify an Application-Layer\n      Traffic\
    \ Optimization (ALTO) service that will provide applications\n      with information\
    \ to perform better-than-random initial peer\n      selection.  ALTO services\
    \ may take different approaches at\n      balancing factors such as maximum bandwidth,\
    \ minimum cross-domain\n      traffic, lowest cost to the user, etc.  The working\
    \ group will\n      consider the needs of BitTorrent, tracker-less P2P, and other\n\
    \      applications, such as content delivery networks (CDN) and mirror\n    \
    \  selection.\n   In particular, the ALTO service can be used by a CDN Request\
    \ Routing\n   system to improve its selection of a CDN Surrogate to serve a\n\
    \   particular User Agent request (or to serve a request from another\n   Surrogate).\
    \  [ALTO-CDN-USE-CASES] describes a number of use cases for\n   a CDN to be able\
    \ to obtain network topology and cost information from\n   an ALTO server(s) and\
    \ discusses how CDN Request Routing could be used\n   as an integration point\
    \ of ALTO into CDNs.  It is possible that the\n   ALTO service could be used in\
    \ the same manner in a multi-CDN\n   environment based on CDN Interconnection.\
    \  For example, an Upstream\n   CDN may take advantage of the ALTO service in\
    \ its decision for\n   selecting a Downstream CDN to which a user request should\
    \ be\n   delegated.\n   However, the current work of ALTO is complementary to\
    \ and does not\n   overlap with the work described in this document because the\n\
    \   integration between ALTO and a CDN is an internal decision for a\n   specific\
    \ CDN and is therefore out of scope for the CDNI working\n   group.  One area\
    \ for further study is whether additional information\n   should be provided by\
    \ an ALTO service to facilitate CDNI CDN\n   selection.\n"
- title: B.2.2.  DECADE WG
  contents:
  - "B.2.2.  DECADE WG\n   The DECADE working group [DECADE-Charter] is addressing\
    \ the problem\n   of reducing traffic on the last-mile uplink, as well as backbone\
    \ and\n   transit links caused by peer-to-peer (P2P) streaming and file-sharing\n\
    \   applications.  It addresses the problem by enabling an application\n   endpoint\
    \ to make content available from an in-network storage service\n   and by enabling\
    \ other application endpoints to retrieve the content\n   from there.\n   Exchanging\
    \ data through the in-network storage service in this\n   manner, instead of through\
    \ direct communication, provides significant\n   gain where:\n   o  The network\
    \ capacity/bandwidth from the in-network storage service\n      to the application\
    \ endpoint significantly exceeds the capacity/\n      bandwidth from application\
    \ endpoint to application endpoint (e.g.,\n      because of an end-user uplink\
    \ bottleneck); and\n   o  The content is to be accessed by multiple instances\
    \ of application\n      endpoints (e.g., as is typically the case for P2P applications).\n\
    \   While, as is the case for any other data distribution application,\n   the\
    \ DECADE architecture and mechanisms could potentially be used for\n   exchange\
    \ of CDNI control plane information via an in-network storage\n   service (as\
    \ opposed to directly between the entities terminating the\n   CDNI interfaces\
    \ in the neighbor CDNs), we observe that:\n   o  CDNI would operate as a \"Content\
    \ Distribution Application\" from\n      the DECADE viewpoint (i.e., would operate\
    \ on top of DECADE).\n   o  There do not seem to be obvious benefits in integrating\
    \ the DECADE\n      control plane responsible for signaling information relating\
    \ to\n      control of the in-network storage service itself, and the CDNI\n \
    \     control plane responsible for application-specific CDNI\n      interactions\
    \ (such as exchange of CDNI Metadata, CDNI request\n      redirection, and transfer\
    \ of CDNI logging information).\n   o  There would typically be limited benefits\
    \ in making use of a\n      DECADE in-network storage service because the CDNI\
    \ interfaces are\n      expected to be terminated by a very small number of CDNI\
    \ clients\n      (if not one) in each CDN, and the CDNI clients are expected to\n\
    \      benefit from high bandwidth/capacity when communicating directly\n    \
    \  to each other (at least as high as if they were communicating via\n      an\
    \ in-network storage server).\n   The DECADE in-network storage architecture and\
    \ mechanisms may\n   theoretically be used for the acquisition of the content\
    \ objects\n   themselves between interconnected CDNs.  It is not expected that\
    \ this\n   would have obvious benefits in typical situations where a content\n\
    \   object is acquired only once from an Upstream CDN to a Downstream CDN\n  \
    \ (and then distributed as needed inside the Downstream CDN).  But it\n   might\
    \ have benefits in some particular situations.  Since the\n   acquisition protocol\
    \ between CDNs is outside the scope of the CDNI\n   work, this question is left\
    \ for further study.\n   The DECADE in-network storage architecture and mechanisms\
    \ may\n   potentially also be used within a given CDN for the distribution of\n\
    \   the content objects themselves among Surrogates of that CDN.  Since\n   the\
    \ CDNI work does not concern itself with operation within a CDN,\n   this question\
    \ is left for further study.\n   Therefore, the work of DECADE may be complementary\
    \ to, but does not\n   overlap with, the CDNI work described in this document.\n"
- title: B.2.3.  PPSP WG
  contents:
  - "B.2.3.  PPSP WG\n   As stated in the PPSP working group charter [PPSP-Charter]:\n\
    \      The Peer-to-Peer Streaming Protocol (PPSP) working group develops\n   \
    \   two signaling and control protocols for a peer-to-peer (P2P)\n      streaming\
    \ system for transmitting live and time-shifted media\n      content with near\
    \ real-time delivery requirements...\n      ...  The PPSP working group designs\
    \ a protocol for signaling and\n      control between trackers and peers (the\
    \ PPSP \"tracker protocol\")\n      and a signaling and control protocol for communication\
    \ among the\n      peers (the PPSP \"peer protocol\").  The two protocols enable\
    \ peers\n      to receive streaming data within the time constraints required\
    \ by\n      specific content items.\n   Therefore, PPSP is concerned with the\
    \ distribution of the streamed\n   content itself along with the necessary signaling\
    \ and control\n   required to distribute the content.  As such, it could potentially\
    \ be\n   used for the acquisition of streamed content across interconnected\n\
    \   CDNs.  But since the acquisition protocol is outside the scope of the\n  \
    \ work proposed for CDNI, we leave this for further study.  Also,\n   because\
    \ of its streaming nature, PPSP is not seen as applicable to\n   the distribution\
    \ and control of the CDNI control plane and CDNI data\n   representations.\n \
    \  Therefore, the work of PPSP may be complementary to, but does not\n   overlap\
    \ with, the work described in this document for CDNI.\n"
- title: B.2.4.  IRTF P2P Research Group
  contents:
  - "B.2.4.  IRTF P2P Research Group\n   Some information on CDN Interconnection motivations\
    \ and technical\n   issues were presented in the P2P research group at IETF 77.\
    \  The\n   presentation can be found in [P2PRG-CDNI].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ben Niven-Jenkins\n   Velocix (Alcatel-Lucent)\n   326\
    \ Cambridge Science Park\n   Milton Road, Cambridge  CB4 0WG\n   UK\n   EMail:\
    \ ben@velocix.com\n   Francois Le Faucheur\n   Cisco Systems\n   Greenside, 400\
    \ Avenue de Roumanille\n   Sophia Antipolis  06410\n   France\n   Phone: +33 4\
    \ 97 23 26 19\n   EMail: flefauch@cisco.com\n   Nabil Bitar\n   Verizon\n   60\
    \ Sylvan Road\n   Waltham, MA  02145\n   USA\n   EMail: nabil.n.bitar@verizon.com\n"
