- contents:
  - '                           LDP Capabilities

    '
  title: __initial_text__
- contents:
  - "Abstract\n   A number of enhancements to the Label Distribution Protocol (LDP)\n
    \  have been proposed.  Some have been implemented, and some are\n   advancing
    toward standardization.  It is likely that additional\n   enhancements will be
    proposed in the future.  This document defines a\n   mechanism for advertising
    LDP enhancements at session initialization\n   time, as well as a mechanism to
    enable and disable enhancements after\n   LDP session establishment.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Conventions Used in This Document ..........................3\n   2.
    The LDP Capability Mechanism ....................................3\n      2.1.
    Capability Document ........................................4\n   3. Specifying
    Capabilities in LDP Messages .........................4\n      3.1. Backward Compatibility
    TLVs ................................6\n   4. Capability Message ..............................................6\n
    \  5. Note on Terminology .............................................7\n   6.
    Procedures for Capability Parameters in Initialization\n      Messages ........................................................7\n
    \  7. Procedures for Capability Parameters in Capability Messages .....8\n   8.
    Extensions to Error Handling ....................................9\n   9. Dynamic
    Capability Announcement TLV .............................9\n   10. Backward Compatibility
    ........................................10\n   11. Security Considerations .......................................10\n
    \  12. IANA Considerations ...........................................11\n   13.
    Acknowledgments ...............................................11\n   14. References
    ....................................................11\n      14.1. Normative
    References .....................................11\n      14.2. Informative References
    ...................................11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   A number of enhancements to LDP as specified in [RFC5036]
    have been\n   proposed.  These include LDP Graceful Restart [RFC3478], Fault\n
    \  Tolerant LDP [RFC3479], multicast extensions [MLDP], signaling for\n   Layer
    2 circuits [RFC4447], a method for learning labels advertised\n   by next-next-hop
    routers in support of fast reroute node protection\n   [NNHOP], upstream label
    allocation [UPSTREAM_LDP], and extensions for\n   signaling inter-area Label Switched
    Paths (LSPs) [RFC5283].  Some\n   have been implemented, and some are advancing
    toward standardization.\n   It is also likely that additional enhancements will
    be implemented\n   and deployed in the future.\n   This document proposes and
    defines a mechanism for advertising LDP\n   enhancements at session initialization
    time.  It also defines a\n   mechanism to enable and disable these enhancements
    after LDP session\n   establishment.\n   LDP capability advertisement provides
    means for an LDP speaker to\n   announce what it can receive and process.  It
    also provides means for\n   a speaker to inform peers of deviations from behavior
    specified by\n   [RFC5036].  An example of such a deviation is LDP Graceful Restart,\n
    \  where a speaker retains MPLS forwarding state for LDP-signaled LSPs\n   when
    its LDP control plane goes down.  It is important to point out\n   that not all
    LDP enhancements require capability advertisement.  For\n   example, upstream
    label allocation requires capability advertisement,\n   but inbound label filtering,
    where a speaker installs forwarding\n   state for only certain Forwarding Equivalence
    Classes (FECs), does\n   not.\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in [RFC2119].\n   This document uses the terms \"LDP speaker\"
      and \"speaker\"\n   interchangeably.\n"
    title: 1.1.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  The LDP Capability Mechanism\n   Enhancements are likely to be announced
    during LDP session\n   establishment as each LDP speaker advertises capabilities\n
    \  corresponding to the enhancements it desires.\n   Beyond that, capability advertisements
    may be used to dynamically\n   modify the characteristics of the session to suit
    the changing\n   conditions.  For example, an LSR capable of a particular enhancement\n
    \  in support of some \"feature\" may not have advertised the\n   corresponding
    capability to its peers at session establishment time\n   because the feature
    was disabled at that time.  Later, an operator\n   may enable the feature, at
    which time the LSR would react by\n   advertising the corresponding capability
    to its peers.  Similarly,\n   when an operator disables a feature associated with
    a capability, the\n   LSR reacts by withdrawing the capability advertisement from
    its\n   peers.\n   The LDP capability advertisement mechanism operates as follows:\n
    \  - Each LDP speaker is assumed to implement a set of enhancements,\n     each
    of which has an associated capability.  At any time, a speaker\n     may have
    none, one, or more of those enhancements \"enabled\".  When\n     an enhancement
    is enabled, the speaker advertises the associated\n     capability to its peers.
    \ By advertising the capability to a peer,\n     the speaker asserts that it shall
    perform the protocol actions\n     specified for the associated enhancement.  For
    example, the actions\n     may require the LDP speaker to receive and process
    enhancement-\n     specific messages from its peer.  Unless the capability has
    been\n     advertised, the speaker will not perform protocol actions specified\n
    \    for the corresponding enhancement.\n   - At session establishment time, an
    LDP speaker MAY advertise a\n     particular capability by including an optional
    parameter associated\n     with the capability in its Initialization message.\n
    \  - There is a well-known capability called Dynamic Capability\n     Announcement
    that an LDP speaker MAY advertise in its\n     Initialization message to indicate
    that it is capable of processing\n     capability announcements following a session
    establishment.\n     If a peer had advertised the Dynamic Capability Announcement\n
    \    capability in its Initialization message, then at any time\n     following
    session establishment, an LDP speaker MAY announce\n     changes in its advertised
    capabilities to that peer.  To do this,\n     the LDP speaker sends the peer a
    Capability message that specifies\n     the capabilities being advertised or withdrawn.\n"
  - contents:
    - "2.1.  Capability Document\n   When the capability advertisement mechanism is
      in place, an LDP\n   enhancement requiring LDP capability advertisement will
      be specified\n   by a document that:\n      - Describes the motivation for the
      enhancement;\n      - Specifies the behavior of LDP when the enhancement is
      enabled.\n        This includes the procedures, parameters, messages, and TLVs\n
      \       required by the enhancement;\n      - Includes an IANA considerations
      section that requests IANA\n        assignment of a code point (from TLV Type
      namespace) for the\n        optional capability parameter corresponding to the
      enhancement.\n        The capability document MUST also describe the interpretation\n
      \       and processing of associated capability data, if present.\n"
    title: 2.1.  Capability Document
  title: 2.  The LDP Capability Mechanism
- contents:
  - "3.  Specifying Capabilities in LDP Messages\n   This document uses the term \"Capability
    Parameter\" to refer to an\n   optional parameter that may be included in Initialization
    and\n   Capability messages to advertise a capability.\n   The format of a \"Capability
    Parameter\" TLV is as follows:\n      0                   1                   2
    \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |U|F| TLV Code Point            |            Length             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |S| Reserved    |                                               |\n      +-+-+-+-+-+-+-+-+
    \      Capability Data                         |\n      |                                               +-+-+-+-+-+-+-+-+\n
    \     |                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  where:\n      U-bit:\n        Unknown TLV bit, as described in [RFC5036].  The
    value could be\n        either 0 or 1 as specified in the Capability document
    associated\n        with the given capability.\n      F-bit:\n        Forward
    unknown TLV bit, as described in [RFC5036].  The value\n        of this bit MUST
    be 0 since a Capability Parameter TLV is sent\n        only in Initialization
    and Capability messages, which are not\n        forwarded.\n      TLV Code Point:\n
    \       The TLV type that identifies a specific capability.  This is an\n        IANA-assigned
    code point (from TLV Type namespace) for a given\n        capability as requested
    in the associated capability document.\n      S-bit:\n        The State Bit.  It
    indicates whether the sender is advertising\n        or withdrawing the capability
    corresponding to the TLV code\n        point.  The State Bit value is used as
    follows:\n          1 - The TLV is advertising the capability specified by the
    TLV\n              code point.\n          0 - The TLV is withdrawing the capability
    specified by the TLV\n              code point.\n      Capability Data:\n        Information,
    if any, about the capability in addition to the TLV\n        code point required
    to fully specify the capability.\n        The method for interpreting and processing
    this data is specific\n        to the TLV code point and MUST be described in
    the document\n        specifying the capability.\n   An LDP speaker MUST NOT include
    more than one instance of a\n   Capability Parameter (as identified by the same
    TLV code point) in an\n   Initialization or Capability message.  If an LDP speaker
    receives\n   more than one instance of the same Capability Parameter type in a\n
    \  message, it SHOULD send a Notification message to the peer before\n   terminating
    the session with the peer.  The Status Code in the Status\n   TLV of the Notification
    message MUST be Malformed TLV value, and the\n   message SHOULD contain the second
    Capability Parameter TLV of the\n   same type (code point) that is received in
    the message.\n"
  - contents:
    - "3.1.  Backward Compatibility TLVs\n   LDP extensions that require advertisement
      or negotiation of some\n   capability at session establishment time typically
      use TLVs that are\n   included in an Initialization message.  To ensure backward\n
      \  compatibility with existing implementations, such TLVs continue to be\n   supported
      in an Initialization message and are known in this document\n   as \"Backward
      Compatibility TLVs\".  A Backward Compatibility TLV plays\n   the role of a
      \"Capability Parameter\" TLV; that is, the presence of a\n   Backward Compatibility
      TLV has the same meaning as a Capability\n   Parameter TLV with the S-bit set
      for the same capability.\n   One example of a Backward Capability TLV is the
      \"FT Session TLV\" that\n   is exchanged in an Initialization message between
      peers to announce\n   LDP Fault Tolerance [RFC3479] capability.\n"
    title: 3.1.  Backward Compatibility TLVs
  title: 3.  Specifying Capabilities in LDP Messages
- contents:
  - "4.  Capability Message\n   The LDP Capability message is used by an LDP speaker
    to announce\n   changes in the state of one or more of its capabilities subsequent
    to\n   session establishment.\n   The format of the Capability message is as follows:\n
    \      0                   1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|    Capability (0x0202)      |            Length             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     Message ID                                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     TLV_1                                     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     . . .                                     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     TLV_N                                     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  where TLV_1 through TLV_N are Capability Parameter TLVs.  The S-bit\n   of
    each of the TLVs specifies the new state for the corresponding\n   capability.\n
    \  Note that Backward Compatibility TLVs (see Section 3.1) MUST NOT be\n   included
    in Capability messages.  An LDP speaker that receives a\n   Capability message
    from a peer that includes Backward Compatibility\n   TLVs SHOULD silently ignore
    these Backward Compatibility TLVs and\n   continue processing the rest of the
    message.\n"
  title: 4.  Capability Message
- contents:
  - "5.  Note on Terminology\n   The following sections in this document talk about
    enabling and\n   disabling capabilities.  The terminology \"enabling (or disabling)
    a\n   capability\" is short hand for \"advertising (or withdrawing) a\n   capability
    associated with an enhancement\".  Bear in mind that it is\n   an LDP enhancement
    that is being enabled or disabled, and that it is\n   the corresponding capability
    that is being advertised or withdrawn.\n"
  title: 5.  Note on Terminology
- contents:
  - "6.  Procedures for Capability Parameters in Initialization Messages\n   The S-bit
    of a Capability Parameter in an Initialization message MUST\n   be 1 and SHOULD
    be ignored on receipt.  This ensures that any\n   Capability Parameter in an Initialization
    message enables the\n   corresponding capability.\n   An LDP speaker determines
    the capabilities of a peer by examining the\n   set of Capability Parameters present
    in the Initialization message\n   received from the peer.\n   An LDP speaker MAY
    use a particular capability with its peer after\n   the speaker determines that
    the peer has enabled that capability.\n   These procedures enable an LDP speaker
    S1, that advertises a specific\n   LDP capability C, to establish an LDP session
    with speaker S2 that\n   does not advertise C.  In this situation, whether or
    not capability C\n   may be used for the session depends on the semantics of the\n
    \  enhancement associated with C.  If the semantics do not require both\n   S1
    and S2, advertise C to one another, then S2 could use it; i.e.,\n   S1's advertisement
    of C permits S2 to send messages to S1 used by the\n   enhancement.\n   It is
    the responsibility of the capability designer to specify the\n   behavior of an
    LDP speaker that has enabled a certain enhancement,\n   advertised its capability
    and determines that its peer has not\n   advertised the corresponding capability.
    \ The document specifying\n   procedures for the capability MUST describe the
    behavior in this\n   situation.  If the specified procedure is to terminate the
    session,\n   then the LDP speaker SHOULD send a Notification message to the peer\n
    \  before terminating the session.  The Status Code in the Status TLV of\n   the
    Notification message MUST be Unsupported Capability, and the\n   message SHOULD
    contain the unsupported capability (see Section 8 for\n   more details).\n   An
    LDP speaker that supports capability advertisement and includes a\n   Capability
    Parameter in its Initialization message MUST set the TLV\n   U-bit to 0 or 1,
    as specified by Capability document.  The LDP\n   speaker should set the U-bit
    to 1 if the capability document allows\n   it to continue with a peer that does
    not understand the enhancement,\n   and set the U-bit to 0 otherwise.  If a speaker
    receives a message\n   containing unsupported capability, it responds according
    to the U-bit\n   setting in the TLV.  If the U-bit is 1, then the speaker MUST\n
    \  silently ignore the Capability Parameter and allow the session to be\n   established.
    \ However, if the U-bit is 0, then speaker SHOULD send a\n   Notification message
    to the peer before terminating the session.  The\n   Status Code in the Status
    TLV of the Notification message MUST be\n   Unsupported Capability, and the message
    SHOULD contain the\n   unsupported capability (see Section 8 for more details).\n"
  title: 6.  Procedures for Capability Parameters in Initialization Messages
- contents:
  - "7.  Procedures for Capability Parameters in Capability Messages\n   An LDP speaker
    MUST NOT send a Capability message to a peer unless\n   its peer advertised the
    Dynamic Capability Announcement capability in\n   its session Initialization message.
    \ An LDP speaker MAY send a\n   Capability message to a peer if its peer advertised
    the Dynamic\n   Capability Announcement capability in its session Initialization\n
    \  message (see Section 9).\n   An LDP speaker determines the capabilities enabled
    by a peer by\n   determining the set of capabilities enabled at session initialization\n
    \  (as specified in Section 6) and tracking changes to that set made by\n   Capability
    messages from the peer.\n   An LDP speaker that has enabled a particular capability
    MAY use the\n   enhancement corresponding to the capability with a peer after
    the\n   speaker determines that the peer has enabled the capability.\n"
  title: 7.  Procedures for Capability Parameters in Capability Messages
- contents:
  - "8.  Extensions to Error Handling\n   This document defines a new LDP status code
    named Unsupported\n   Capability.  The E-bit of the Status TLV carried in a Notification\n
    \  message that includes this status code MUST be set to 0.\n   In addition, this
    document defines a new LDP TLV, named Returned\n   TLVs, that MAY be carried in
    a Notification message as an Optional\n   Parameter.  The U-bit setting for a
    Returned TLVs TLV in a\n   Notification message SHOULD be 1, and the F-bit setting
    SHOULD be 0.\n   When the Status Code in a Notification message is Unsupported\n
    \  Capability, the message SHOULD specify the capabilities that are\n   unsupported.
    \ When the Notification message specifies the unsupported\n   capabilities, it
    MUST include a Returned TLVs TLV.  The Returned TLVs\n   TLV MUST include only
    the Capability Parameters for unsupported\n   capabilities, and the Capability
    Parameter for each such capability\n   SHOULD be encoded as received from the
    peer.\n   When the Status Code in a Notification Message is Unknown TLV, the\n
    \  message SHOULD specify the TLV that was unknown.  When the\n   Notification
    message specifies the TLV that was unknown, it MUST\n   include the unknown TLV
    in a Returned TLVs TLV.\n"
  title: 8.  Extensions to Error Handling
- contents:
  - "9.  Dynamic Capability Announcement TLV\n   The Dynamic Capability Announcement
    TLV is a Capability Parameter\n   defined by this document with following format:\n
    \      0                   1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |1|0| DynCap Ann. (0x0506)      |            Length (1)         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |1| Reserved    |\n      +-+-+-+-+-+-+-+-+\n   The value of the U-bit for
    the Dynamic Capability Announcement\n   Parameter TLV MUST be set to 1 so that
    a receiver MUST silently\n   ignore this TLV if unknown to it, and continue processing
    the rest of\n   the message.  There is no \"Capability Data\" associated with
    this TLV\n   and hence the TLV length MUST be set to 1.\n   The Dynamic Capability
    Announcement Parameter MAY be included by an\n   LDP speaker in an Initialization
    message to signal its peer that the\n   speaker is capable of processing Capability
    messages.\n   An LDP speaker MUST NOT include the Dynamic Capability Announcement\n
    \  Parameter in Capability messages sent to its peers.  Once enabled\n   during
    session initialization, the Dynamic Capability Announcement\n   capability cannot
    be disabled.  This implies that the S-bit is always\n   1 for the Dynamic Capability
    Announcement.\n   An LDP speaker that receives a Capability message from a peer
    that\n   includes the Dynamic Capability Announcement Parameter SHOULD\n   silently
    ignore the parameter and process any other Capability\n   Parameters in the message.\n"
  title: 9.  Dynamic Capability Announcement TLV
- contents:
  - "10.  Backward Compatibility\n   From the point of view of the LDP capability
    advertisement mechanism,\n   an [RFC5036]-compliant peer has label distribution
    for IPv4 enabled\n   by default.  To ensure compatibility with an [RFC5036]-compliant\n
    \  peer, LDP implementations that support capability advertisement have\n   label
    distribution for IPv4 enabled until it is explicitly disabled\n   and MUST assume
    that their peers do as well.\n   Section 3.1 introduces the concept of Backward
    Compatibility TLVs\n   that may appear in an Initialization message in the role
    of a\n   Capability Parameter.  This permits existing LDP enhancements that\n
    \  use an ad hoc mechanism for enabling capabilities at session\n   initialization
    time to continue to do so.\n"
  title: 10.  Backward Compatibility
- contents:
  - "11.  Security Considerations\n   [MPLS_SEC] describes the security framework
    for MPLS networks,\n   whereas [RFC5036] describes the security considerations
    that apply to\n   the base LDP specification.  The same security framework and\n
    \  considerations apply to the capability mechanism described in this\n   document.\n"
  title: 11.  Security Considerations
- contents:
  - "12.  IANA Considerations\n   This document specifies the following code points
    assigned by IANA:\n      - LDP message code point for the Capability message (0x0202).\n
    \     - LDP TLV code point for the Dynamic Capability Announcement TLV\n        (0x0506).\n
    \     - LDP TLV code point for the Returned TLVs TLV (0x0304).\n      - LDP Status
    Code code point for the Unsupported Capability Status\n        Code (0x0000002E).\n"
  title: 12.  IANA Considerations
- contents:
  - "13.  Acknowledgments\n   The authors wish to thank Enke Chen, Vanson Lim, Ina
    Minei, Bin Mo,\n   Yakov Rekhter, and Eric Rosen for their comments.\n"
  title: 13.  Acknowledgments
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC5036]      Andersson, L., Ed., Minei, I.,
      Ed., and B. Thomas,\n                  Ed., \"LDP Specification\", RFC 5036,
      October 2007.\n   [RFC2119]      Bradner, S., \"Key words for use in RFCs to
      Indicate\n                  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [RFC3479]      Farrel, A., Ed., \"Fault Tolerance for the Label\n                  Distribution
      Protocol (LDP)\", RFC 3479, February 2003.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [RFC5283]      Decraene, B., Le Roux, JL.,
      and I. Minei, \"LDP\n                  Extension for Inter-Area Label Switched
      Paths (LSPs)\",\n                  RFC 5283, July 2008.\n   [MLDP]         Minei,
      I., Ed., Kompella, K., Wijnands, I., Ed., and\n                  B. Thomas,
      \"Label Distribution Protocol Extensions for\n                  Point-to-Multipoint
      and Multipoint-to-Multipoint Label\n                  Switched Paths\", Work
      in Progress, April 2009.\n   [NNHOP]        Shen, N., Chen, E., and A. Tian,
      \"Discovery LDP Next-\n                  Nexthop Labels\", Work in Progress,
      May 2005.\n   [RFC4447]      Martini, L., Ed., Rosen, E., El-Aawar, N., Smith,
      T.,\n                  and G. Heron, \"Pseudowire Setup and Maintenance Using\n
      \                 the Label Distribution Protocol (LDP)\", RFC 4447,\n                  April
      2006.\n   [RFC3478]      Leelanivas, M., Rekhter, Y., and R. Aggarwal,\n                  \"Graceful
      Restart Mechanism for Label Distribution\n                  Protocol\", RFC
      3478, February 2003.\n   [UPSTREAM_LDP] Aggarwal R., and J.L. Le Roux, \"MPLS
      Upstream Label\n                  Assignment for LDP\" Work in Progress, July
      2008.\n   [MPLS_SEC]     Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n
      \                 Networks\", Work in Progress, March 2009.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Bob Thomas\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Ave.\n   Boxborough, MA 01719\n   EMail: bobthomas@alum.mit.edu\n   Shivani Aggarwal\n
    \  Juniper Networks\n   1194 North Mathilda Ave.\n   Sunnyvale, CA 94089\n   EMail:
    shivani@juniper.net\n   Rahul Aggarwal\n   Juniper Networks\n   1194 North Mathilda
    Ave.\n   Sunnyvale, CA 94089\n   EMail: rahul@juniper.net\n   Jean-Louis Le Roux\n
    \  France Telecom\n   2, Avenue Pierre-Marzin\n   22307 Lannion Cedex, France\n
    \  EMail: jeanlouis.leroux@orange-ftgroup.com\n   Kamran Raza\n   Cisco Systems,
    Inc.\n   2000 Innovation Dr.\n   Kanata, ON K2K 3E8, Canada\n   EMail: skraza@cisco.com\n"
  title: Authors' Addresses
