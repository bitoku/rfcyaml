- contents:
  - '                           Keyed IPv6 Tunnel

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes a tunnel encapsulation for Ethernet over
    IPv6\n   with a mandatory 64-bit cookie for connecting Layer 2 (L2) Ethernet\n
    \  attachment circuits identified by IPv6 addresses.  The encapsulation\n   is
    based on the Layer 2 Tunneling Protocol Version 3 (L2TPv3) over IP\n   and does
    not use the L2TPv3 control plane.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8159.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   3\n   2.  Static 1:1 Mapping without a Control Plane  . . . . . . . .
    .   3\n   3.  64-Bit Cookie . . . . . . . . . . . . . . . . . . . . . . . .   4\n
    \  4.  Encapsulation . . . . . . . . . . . . . . . . . . . . . . . .   4\n   5.
    \ Fragmentation and Reassembly  . . . . . . . . . . . . . . . .   7\n   6.  OAM
    Considerations  . . . . . . . . . . . . . . . . . . . . .   7\n   7.  IANA Considerations
    . . . . . . . . . . . . . . . . . . . . .   8\n   8.  Security Considerations
    . . . . . . . . . . . . . . . . . . .   8\n   9.  References  . . . . . . . .
    . . . . . . . . . . . . . . . . .   9\n     9.1.  Normative References  . . .
    . . . . . . . . . . . . . . .   9\n     9.2.  Informative References  . . . .
    . . . . . . . . . . . . .  10\n   Acknowledgements  . . . . . . . . . . . . .
    . . . . . . . . . . .  11\n   Contributors  . . . . . . . . . . . . . . . . .
    . . . . . . . . .  11\n   Authors' Addresses  . . . . . . . . . . . . . . . .
    . . . . . . .  12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   L2TPv3, as defined in [RFC3931], provides a mechanism for
    tunneling\n   Layer 2 (L2) \"circuits\" across a packet-oriented data network
    (e.g.,\n   over IP), with multiple attachment circuits multiplexed over a single\n
    \  pair of IP address endpoints (i.e., a tunnel) using the L2TPv3\n   Session
    ID as a circuit discriminator.\n   Implementing L2TPv3 over IPv6 [RFC2460] provides
    the opportunity to\n   utilize unique IPv6 addresses to identify Ethernet attachment\n
    \  circuits directly, leveraging the key property that IPv6 offers -- a\n   vast
    number of unique IP addresses.  In this case, processing of the\n   L2TPv3 Session
    ID may be bypassed upon receipt, as each tunnel has\n   one and only one associated
    session.  This local optimization does\n   not hinder the ability to continue
    supporting the multiplexing of\n   circuits via the Session ID on the same router
    for other L2TPv3\n   tunnels.\n   There are various advantages to this approach
    when compared to the\n   \"traditional\" L2TPv3 approach of using a loopback address
    to\n   terminate the tunnel and then carrying multiple sessions over the\n   tunnel.
    \ These include better ECMP load balancing (since each tunnel\n   has a unique
    source/destination IPv6 address pair) and finer-grained\n   control when advertising
    tunnel endpoints using a routing protocol.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in RFC\n   2119 [RFC2119].\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Static 1:1 Mapping without a Control Plane\n   The L2TPv3 control plane defined
    in [RFC3931] is not used for this\n   encapsulation.  The management plane is
    used to create and maintain\n   matching configurations at either end of each
    tunnel.  Local\n   configuration by the management plane creates a one-to-one
    mapping\n   between the access-side L2 attachment circuit and the IP address used\n
    \  in the network-side IPv6 encapsulation.\n   The IPv6 L2TPv3 tunnel encapsulating
    device uniquely identifies each\n   Ethernet L2 attachment connection by a port
    ID or a combination of a\n   port ID and VLAN ID(s) on the access side and by
    a local IPv6 address\n   on the network side.  The local IPv6 address also identifies
    the\n   tunnel endpoint.  The local IPv6 addresses identifying L2TPv3 tunnels\n
    \  SHOULD NOT be assigned from connected IPv6 subnets facing towards\n   remote
    tunnel endpoints, since that approach would result in an IPv6\n   Neighbor Discovery
    cache entry per tunnel on the next-hop router\n   towards the remote tunnel endpoint.
    \ It is RECOMMENDED that local\n   IPv6 addresses identifying L2TPv3 tunnels are
    assigned from dedicated\n   subnets used only for such tunnel endpoints.\n   Certain
    deployment scenarios may require using a single IPv6 address\n   (such as a unicast
    or anycast address assigned to a specific service\n   instance, for example, a
    virtual switch) to identify a tunnel\n   endpoint for multiple IPv6 L2TPv3 tunnels.
    \ For such cases, the\n   tunnel decapsulating device uses the local IPv6 address
    to identify\n   the service instance and the remote IPv6 address to identify the\n
    \  individual tunnel within that service instance.\n   As mentioned above, Session
    ID processing is not required, as each\n   keyed IPv6 tunnel has one and only
    one associated session.  However,\n   for compatibility with existing [RFC3931]
    implementations, the\n   packets need to be sent with the Session ID.  Routers
    implementing\n   L2TPv3 according to [RFC3931] can be configured with multiple
    L2TPv3\n   tunnels, with one session per tunnel, to interoperate with routers\n
    \  implementing the keyed IPv6 tunnel as specified by this document.\n   Note
    that as Session ID processing is not enabled for keyed IPv6\n   tunnels, there
    can only be a single keyed IPv6 tunnel between two\n   IPv6 addresses.\n"
  title: 2.  Static 1:1 Mapping without a Control Plane
- contents:
  - "3.  64-Bit Cookie\n   In line with [RFC3931], the 64-bit cookie is used for an
    additional\n   tunnel endpoint context check.  This is the largest cookie size\n
    \  permitted in [RFC3931].  All packets MUST carry the 64-bit L2TPv3\n   cookie
    field.  The cookie MUST be 64 bits long in order to provide\n   sufficient protection
    against spoofing and brute-force blind\n   insertion attacks.  The cookie values
    SHOULD be randomly selected.\n   In the absence of the L2TPv3 control plane, the
    L2TPv3 encapsulating\n   router MUST be provided with a local configuration of
    the 64-bit\n   cookie for each local and remote IPv6 endpoint.  Note that cookies\n
    \  are asymmetric, so local and remote endpoints may send different\n   cookie
    values and, in fact, SHOULD do so.  The value of the cookie\n   MUST be able to
    be changed at any time in a manner that does not drop\n   any legitimate tunneled
    packets, i.e., the receiver MUST be\n   configurable to accept two discrete cookies
    for a single tunnel\n   simultaneously.  This enables the receiver to hold both
    the 'old' and\n   'new' cookie values during a change of cookie value.  Cookie
    values\n   SHOULD be changed periodically by the management plane.\n   Note that
    mandating a 64-bit cookie is a change from the optional\n   variable-length cookie
    of [RFC3931] and that this requirement\n   constrains interoperability with existing
    [RFC3931] implementations\n   to those supporting a 64-bit cookie.  The management
    plane MUST NOT\n   configure a keyed IP tunnel unless both endpoints support the
    64-bit\n   cookie.\n"
  title: 3.  64-Bit Cookie
- contents:
  - "4.  Encapsulation\n   The ingress router encapsulates the entire Ethernet frame,
    without\n   the preamble and Frame Check Sequence (FCS) in L2TPv3 as per\n   [RFC4719].
    \ The L2-specific sublayer MAY be carried if Virtual\n   Circuit Connectivity
    Verification (VCCV) [RFC5085] and/or frame\n   sequencing is required, but it
    SHOULD NOT be carried otherwise.  The\n   L2TPv3 packet is encapsulated directly
    over IPv6 (i.e., no UDP header\n   is carried).\n   The ingress router MAY retain
    the FCS as per [RFC4720].  Support for\n   retaining the FCS and for receiving
    packets with a retained FCS is\n   OPTIONAL and, if present, MUST be configurable.
    \ In the absence of\n   the L2TPv3 control plane, such configuration MUST be consistent
    for\n   the two endpoints of any given tunnel, i.e., if one router is\n   configured
    to retain the FCS, then the other router MUST be\n   configured to receive packets
    with the retained FCS.  Any router\n   configured to retain FCS for a tunnel MUST
    retain FCS for all frames\n   sent over that tunnel.  All routers implementing
    this specification\n   MUST support the ability to send frames without retaining
    the FCS and\n   to receive such frames.\n   Any service-delimiting IEEE 802.1Q
    [IEEE802.1Q] or IEEE 802.1ad\n   [IEEE802.1ad] VLAN IDs -- S-tag, C-tag, or the
    tuple (S-tag, C-tag)\n   -- are treated with local significance within the Ethernet
    L2 port\n   and MUST NOT be forwarded over the IPv6 L2TPv3 tunnel.\n   Note that
    the same approach may be used to transport protocols other\n   than Ethernet,
    though this is outside the scope of this\n   specification.\n   The full encapsulation
    is as follows:\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                                                               |\n      +
    \                  IPv6 Header (320 bits)                      +\n      ~                                                               ~\n
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |
    \                   Session ID (32 bits)                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                        Cookie (0:31)                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                        Cookie (32:63)                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |          (Optional) L2-Specific Sublayer (32 bits)            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                                                               |\n      |
    \                                                              |\n      |                      Payload
    (variable)                       |\n      |                                                               |\n
    \     |                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The combined IPv6 and keyed IP tunnel header contains the following\n   fields:\n
    \  o  IPv6 Header.  Note that:\n      *  The traffic class may be set by the ingress
    router to ensure\n         correct Per-Hop Behavior (PHB) treatment by transit
    routers\n         between the ingress and egress and to correct QoS disposition\n
    \        at the egress router.\n      *  The flow label, as defined in [RFC6437],
    may be set by the\n         ingress router to indicate a flow of packets from
    the client,\n         which may not be reordered by the network (if there is a\n
    \        requirement for finer-grained ECMP load balancing rather than\n         per-circuit
    load balancing).\n      *  The next header will be set to 0x73 to indicate that
    the next\n         header is L2TPv3.\n      *  In the \"Static 1:1 Mapping\" case
    described in Section 2, the\n         IPv6 source address may correspond to a
    port or port/VLAN being\n         transported as an L2 circuit, or it may correspond
    to a virtual\n         interface terminating inside the router (e.g., if L2 circuits\n
    \        are being used within a multipoint VPN or if an anycast address\n         is
    being terminated on a set of data-center virtual machines.)\n      *  As with
    the source address, the IPv6 destination address may\n         correspond to a
    port or port/VLAN being transported as an L2\n         circuit or to a virtual
    interface.\n   o  Session ID.  In the \"Static 1:1 Mapping\" case described in\n
    \     Section 2, the IPv6 address identifies an L2TPv3 session directly;\n      thus,
    at endpoints supporting one-stage resolution (IPv6 Address\n      Only), the Session
    ID SHOULD be ignored upon receipt.  It is\n      RECOMMENDED that the remote endpoint
    is configured to set the\n      Session ID to all ones (0xFFFFFFFF) for easy identification
    in\n      case of troubleshooting.  For compatibility with other tunnel\n      termination
    platforms supporting only two-stage resolution (IPv6\n      Address + Session
    ID), this specification recommends supporting\n      explicit configuration of
    Session ID to any value other than zero\n      (including all ones).  The Session
    ID of zero MUST NOT be used, as\n      it is reserved for use by L2TP control
    messages as specified in\n      [RFC3931].  Note that the Session ID is unidirectional;
    the sent\n      and received Session IDs at an endpoint may be different.\n   o
    \ Cookie.  The 64-bit cookie, configured and described as in\n      Section 3.
    \ All packets for a destined L2 circuit (or L2TPv3\n      Session) MUST match
    one of the cookie values configured for that\n      circuit.  Any packets that
    do not contain a valid cookie value\n      MUST be discarded (see [RFC3931] for
    more details).\n   o  L2-Specific Sublayer (Optional).  As noted above, this will
    be\n      present if VCCV and/or frame sequencing is required.  If VCCV is\n      required,
    then any frames with bit 0 (the \"V-bit\") set are VCCV\n      messages.  If frame
    sequencing is required, then any frames with\n      bit 1 (the \"S-bit\") set
    have a valid frame sequence number in bits\n      8-31.\n   o  Payload (variable).
    \ As noted above, the preamble and any service-\n      delimiting tags MUST be
    stripped before encapsulation, and the FCS\n      MUST be stripped unless FCS
    retention is configured at both\n      ingress and egress routers.  Since a new
    FCS is added at each hop\n      when the encapsulating IP packet is transmitted,
    the payload is\n      protected against bit errors.\n"
  title: 4.  Encapsulation
- contents:
  - "5.  Fragmentation and Reassembly\n   Using tunnel encapsulation of Ethernet L2
    datagrams in IPv6 will\n   reduce the effective MTU allowed for the encapsulated
    traffic.\n   The recommended solution to deal with this problem is for the network\n
    \  operator to increase the MTU size of all the links between the\n   devices
    acting as IPv6 L2TPv3 tunnel endpoints to accommodate both\n   the IPv6 L2TPv3
    encapsulation header and the Ethernet L2 datagram\n   without requiring fragmentation
    of the IPv6 packet.\n   It is RECOMMENDED that routers implementing this specification\n
    \  implement IPv6 Path MTU (PMTU) discovery as defined in [RFC1981] to\n   confirm
    that the path over which packets are sent has sufficient MTU\n   to transport
    a maximum-length Ethernet frame plus encapsulation\n   overhead.\n   Routers implementing
    this specification MAY implement L2TPv3\n   fragmentation (as defined in Section
    5 of [RFC4623]).  In the absence\n   of the L2TPv3 control plane, it is RECOMMENDED
    that fragmentation (if\n   implemented) is locally configured on a per-tunnel
    basis.\n   Fragmentation configuration MUST be consistent between the two ends\n
    \  of a tunnel.\n   It is NOT RECOMMENDED for routers implementing this specification
    to\n   enable IPv6 fragmentation (as defined in Section 4.5 of [RFC2460])\n   for
    keyed IP tunnels.\n"
  title: 5.  Fragmentation and Reassembly
- contents:
  - "6.  OAM Considerations\n   Operations, Administration, and Maintenance (OAM)
    is an important\n   consideration when providing circuit-oriented services such
    as those\n   described in this document; it is all the more important in the\n
    \  absence of a dedicated tunnel control plane, as OAM becomes the only\n   way
    to detect failures in the tunnel overlay.\n   Note that in the context of keyed
    IP tunnels, failures in the IPv6\n   underlay network can be detected using the
    usual methods such as\n   through the routing protocol, including the use of single-hop\n
    \  Bidirectional Forwarding Detection (BFD) [RFC5881] to rapidly detect\n   link
    failures.  Multihop BFD MAY also be enabled between tunnel\n   endpoints as per
    [RFC5883].\n   Since keyed IP tunnels always carry an Ethernet payload and since
    OAM\n   at the tunnel layer is unable to detect failures in the Ethernet\n   service
    processing at the ingress or egress router or on the Ethernet\n   attachment circuit
    between the router and the Ethernet client, it is\n   RECOMMENDED that Ethernet
    OAM as defined in [IEEE802.1ag] and/or\n   [Y.1731] be enabled for keyed IP tunnels.
    \ As defined in those\n   specifications, the following Connectivity Fault Management
    (CFM)\n   and/or Ethernet Continuity Check (ETH-CC) configurations are to be\n
    \  used in conjunction with keyed IPv6 tunnels:\n   o  Connectivity verification
    between the tunnel endpoints across\n      the tunnel: Use an Up Maintenance End
    Point (MEP) located at the\n      tunnel endpoint for transmitting the CFM PDUs
    towards, and\n      receiving them from, the direction of the tunnel.\n   o  Connectivity
    verification from the tunnel endpoint across\n      the local attachment circuit:
    Use a Down MEP located at the tunnel\n      endpoint for transmitting the CFM
    PDUs towards, and receiving them\n      from, the direction of the local attachment
    circuit.\n   o  Intermediate connectivity verification: Use a Maintenance\n      Intermediate
    Point (MIP) located at the tunnel endpoint to relay\n      CFM PDUs.\n   In addition,
    Pseudowire VCCV [RFC5085] MAY be used.  Furthermore, BFD\n   MAY be enabled over
    the VCCV channel [RFC5885].\n   Note that since there is no control plane, it
    is RECOMMENDED that the\n   management plane take action when attachment circuit
    failure is\n   detected, for example, by dropping the remote attachment circuit.\n"
  title: 6.  OAM Considerations
- contents:
  - "7.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Packet spoofing for any type of Virtual Private
    Network (VPN)\n   tunneling protocol is of particular concern as insertion of
    carefully\n   constructed rogue packets into the VPN transit network could result\n
    \  in a violation of VPN traffic separation, leaking data into a\n   customer
    VPN.  This is complicated by the fact that it may be\n   particularly difficult
    for the operator of the VPN to even be aware\n   that it has become a point of
    transit into or between customer VPNs.\n   Keyed IPv6 encapsulation provides traffic
    separation for its VPNs via\n   the use of separate 128-bit IPv6 addresses to
    identify the endpoints.\n   The mandatory use of the 64-bit L2TPv3 cookie provides
    an additional\n   check to ensure that an arriving packet is intended for the\n
    \  identified tunnel.\n   In the presence of a blind packet-spoofing attack, the
    64-bit L2TPv3\n   cookie provides security against inadvertent leaking of frames
    into a\n   customer VPN, as documented in Section 8.2 of [RFC3931].\n   For protection
    against brute-force blind insertion attacks, the 64-\n   bit cookie MUST be used
    with all tunnels.\n   Note that the cookie provides no protection against a sophisticated\n
    \  man-in-the-middle attacker who can sniff and correlate captured data\n   between
    nodes for use in a coordinated attack.\n   The L2TPv3 64-bit cookie must not be
    regarded as a substitute for\n   security such as that provided by IPsec when
    operating over an open\n   or untrusted network where packets may be sniffed,
    decoded, and\n   correlated for use in a coordinated attack.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)
      Specification\", RFC 2460, DOI 10.17487/RFC2460,\n              December 1998,
      <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC3931]  Lau, J., Ed., Townsley,
      M., Ed., and I. Goyret, Ed.,\n              \"Layer Two Tunneling Protocol -
      Version 3 (L2TPv3)\",\n              RFC 3931, DOI 10.17487/RFC3931, March 2005,\n
      \             <http://www.rfc-editor.org/info/rfc3931>.\n   [RFC4719]  Aggarwal,
      R., Ed., Townsley, M., Ed., and M. Dos Santos,\n              Ed., \"Transport
      of Ethernet Frames over Layer 2 Tunneling\n              Protocol Version 3
      (L2TPv3)\", RFC 4719,\n              DOI 10.17487/RFC4719, November 2006,\n
      \             <http://www.rfc-editor.org/info/rfc4719>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [IEEE802.1ad]\n              IEEE, \"IEEE
      Standard for Local and Metropolitan Area\n              Networks - Virtual Bridged
      Local Area Networks, Amendment\n              4: Provider Bridges\", IEEE 802.1ad-2005,
      DOI\n              10.1109/IEEESTD.2006.216360.\n   [IEEE802.1ag]\n              IEEE,
      \"IEEE Standard for Local and metropolitan area\n              networks - Virtual
      Bridged Local Area Networks, Amendment\n              5: Connectivity Fault
      Management\", IEEE 802.1ag-2007, DOI\n              10.1109/IEEESTD.2007.4431836.\n
      \  [IEEE802.1Q]\n              IEEE, \"IEEE Standard for Local and metropolitan
      area\n              networks - Bridges and Bridged Networks\", IEEE 802.1Q-\n
      \             2014, DOI 10.1109/IEEESTD.2014.6991462.\n   [RFC1981]  McCann,
      J., Deering, S., and J. Mogul, \"Path MTU Discovery\n              for IP version
      6\", RFC 1981, DOI 10.17487/RFC1981, August\n              1996, <http://www.rfc-editor.org/info/rfc1981>.\n
      \  [RFC4623]  Malis, A. and M. Townsley, \"Pseudowire Emulation Edge-to-\n              Edge
      (PWE3) Fragmentation and Reassembly\", RFC 4623,\n              DOI 10.17487/RFC4623,
      August 2006,\n              <http://www.rfc-editor.org/info/rfc4623>.\n   [RFC4720]
      \ Malis, A., Allan, D., and N. Del Regno, \"Pseudowire\n              Emulation
      Edge-to-Edge (PWE3) Frame Check Sequence\n              Retention\", RFC 4720,
      DOI 10.17487/RFC4720, November 2006,\n              <http://www.rfc-editor.org/info/rfc4720>.\n
      \  [RFC5085]  Nadeau, T., Ed. and C. Pignataro, Ed., \"Pseudowire Virtual\n
      \             Circuit Connectivity Verification (VCCV): A Control\n              Channel
      for Pseudowires\", RFC 5085, DOI 10.17487/RFC5085,\n              December 2007,
      <http://www.rfc-editor.org/info/rfc5085>.\n   [RFC5881]  Katz, D. and D. Ward,
      \"Bidirectional Forwarding Detection\n              (BFD) for IPv4 and IPv6
      (Single Hop)\", RFC 5881,\n              DOI 10.17487/RFC5881, June 2010,\n
      \             <http://www.rfc-editor.org/info/rfc5881>.\n   [RFC5883]  Katz,
      D. and D. Ward, \"Bidirectional Forwarding Detection\n              (BFD) for
      Multihop Paths\", RFC 5883, DOI 10.17487/RFC5883,\n              June 2010,
      <http://www.rfc-editor.org/info/rfc5883>.\n   [RFC5885]  Nadeau, T., Ed. and
      C. Pignataro, Ed., \"Bidirectional\n              Forwarding Detection (BFD)
      for the Pseudowire Virtual\n              Circuit Connectivity Verification
      (VCCV)\", RFC 5885,\n              DOI 10.17487/RFC5885, June 2010,\n              <http://www.rfc-editor.org/info/rfc5885>.\n
      \  [RFC6437]  Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme,\n              \"IPv6
      Flow Label Specification\", RFC 6437,\n              DOI 10.17487/RFC6437, November
      2011,\n              <http://www.rfc-editor.org/info/rfc6437>.\n   [Y.1731]
      \  ITU-T, \"Operation, administration and maintenance (OAM)\n              functions
      and mechanisms for Ethernet-based networks\",\n              Recommendation
      ITU-T G.8013/Y.1731, August 2015.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Carlos Pignataro, Stewart
    Bryant,\n   Karsten Thomann, Qi Sun, and Ian Farrer for their insightful\n   suggestions
    and review.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   Peter Weinberger\n   Cisco Systems\n   Email: peweinbe@cisco.com\n
    \  Michael Lipman\n   Cisco Systems\n   Email: mlipman@cisco.com\n   Mark Townsley\n
    \  Cisco Systems\n   Email: townsley@cisco.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Maciek Konstantynowicz (editor)\n   Cisco Systems\n   Email:
    maciek@cisco.com\n   Giles Heron (editor)\n   Cisco Systems\n   Email: giheron@cisco.com\n
    \  Rainer Schatzmayr\n   Deutsche Telekom AG\n   Email: rainer.schatzmayr@telekom.de\n
    \  Wim Henderickx\n   Alcatel-Lucent, Inc.\n   Email: wim.henderickx@alcatel-lucent.com\n"
  title: Authors' Addresses
