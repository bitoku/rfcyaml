- title: __initial_text__
  contents:
  - "                Internet X.509 Public Key Infrastructure\n           Data Validation\
    \ and Certification Server Protocols\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a general Data Validation and Certification\n\
    \   Server (DVCS) and the protocols to be used when communicating with\n   it.\
    \  The Data Validation and Certification Server is a Trusted Third\n   Party (TTP)\
    \ that can be used as one component in building reliable\n   non-repudiation services.\n\
    \   Useful Data Validation and Certification Server responsibilities in a\n  \
    \ PKI are to assert the validity of signed documents, public key\n   certificates,\
    \ and the possession or existence of data.\n   Assertions created by this protocol\
    \ are called Data Validation\n   Certificates (DVC).\n   We give examples of how\
    \ to use the Data Validation and Certification\n   Server to extend the lifetime\
    \ of a signature beyond key expiry or\n   revocation and to query the Data Validation\
    \ and Certification Server\n   regarding the status of a public key certificate.\
    \  The document\n   includes a complete example of a time stamping transaction.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction .................................................\
    \  2\n   2. Services provided by DVCS ....................................  4\n\
    \    2.1 Certification of Possession of Data ........................  4\n   \
    \ 2.2 Certification of Claim of Possession of Data ...............  4\n    2.3\
    \ Validation of Digitally Signed Documents ...................  4\n    2.4 Validation\
    \ of Public Key Certificates ......................  5\n   3. Data Certification\
    \ Server Usage and Scenarii .................  5\n   4. Functional Requirements\
    \ for DVCS .............................  7\n   5. Data Certification Server Transactions\
    \ .......................  7\n   6. Identification of the DVCS ...................................\
    \  8\n   7. Common Data Types ............................................  9\n\
    \    7.1 Version ....................................................  9\n   \
    \ 7.2 DigestInfo ................................................. 10\n    7.3.\
    \ Time Values ............................................... 10\n    7.4. PKIStatusInfo\
    \ ............................................. 11\n    7.5. TargetEtcChain ............................................\
    \ 11\n    7.6. DVCSRequestInformation .................................... 12\n\
    \    7.7. GeneralName and GeneralNames .............................. 13\n   8.\
    \ Data Validation and Certification Requests ................... 13\n   9. DVCS\
    \ Responses ............................................... 17\n    9.1. Data\
    \ Validation Certificate ............................... 18\n    9.2. DVCS Error\
    \ Notification ................................... 21\n   10. Transports ..................................................\
    \ 22\n    10.1 DVCS Protocol via HTTP or HTTPS ........................... 22\n\
    \    10.2 DVCS Protocol Using Email ................................. 22\n   11.\
    \ Security Considerations ..................................... 23\n   12. Patent\
    \ Information .......................................... 23\n   13. References\
    \ .................................................. 25\n   14. Authors' Addresses\
    \ .......................................... 26\n   APPENDIX A - PKCS #9 Attribute\
    \ .................................. 27\n   APPENDIX B - Signed document validation\
    \ ......................... 27\n   APPENDIX C - Verifying the Status of a Public\
    \ Key Certificate ... 28\n   Appendix D - MIME Registration ..................................\
    \ 30\n   Appendix E - ASN.1 Module using 1988 Syntax ..................... 31\n\
    \   Appendix F - Examples ........................................... 34\n   Appendix\
    \ G - Acknowledgements ................................... 50\n   Full Copyright\
    \ Statement ........................................ 51\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document is the result of work that has been proposed\
    \ and\n   discussed within the IETF PKIX working group.  The authors and some\n\
    \   members of the group felt that promoting the rather new concepts into\n  \
    \ the standards process seemed premature.  The concepts presented have\n   been\
    \ stable for some time and partially implemented.  It was agreed\n   that a publication\
    \ as experimental RFC was an appropriate means to\n   get a stable reference document\
    \ to permit other implementations to\n   occur.\n   The key words \"MUST\", \"\
    MUST NOT\", \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this document (in uppercase,\n   as shown) are to be\
    \ interpreted as described in [RFC2119].\n   A Data Validation and Certification\
    \ Server (DVCS) is a Trusted Third\n   Party (TTP) providing data validation services,\
    \ asserting correctness\n   of digitally signed documents, validity of public\
    \ key certificates,\n   and possession or existence of data.\n   As a result of\
    \ the validation, a DVCS generates a Data Validation\n   Certificate (DVC).  The\
    \ data validation certificate can be used for\n   constructing evidence of non-repudiation\
    \ relating to the validity and\n   correctness of an entity's claim to possess\
    \ data, the validity and\n   revocation status of an entity's public key certificate\
    \ and the\n   validity and correctness of a digitally signed document.\n   Services\
    \ provided by a DVCS do not replace the usage of CRLs and OCSP\n   for public\
    \ key certificate revocation checking in large open\n   environments, due to concerns\
    \ about the scalability of the protocol.\n   It should be rather used to support\
    \ non-repudiation or to supplement\n   more traditional services concerning paperless\
    \ document environments.\n   The presence of a data validation certificate supports\n\
    \   non-repudiation by providing evidence that a digitally signed\n   document\
    \ or public key certificate was valid at the time indicated in\n   the DVC.\n\
    \   A DVC validating a public key certificate can for example be used\n   even\
    \ after the public key certificate expires and its revocation\n   information\
    \ is no longer or not easily available.  Determining the\n   validity of a DVC\
    \ is assumed to be a simpler task, for example, if\n   the population of DVCS\
    \ is significantly smaller than the population\n   of public key certificate owners.\n\
    \   An important feature of the protocol is that DVCs can be validated by\n  \
    \ using the same protocol (not necessarily using the same service), and\n   the\
    \ validity of a signed document, in particular a DVC, can also be\n   determined\
    \ by means other than by verifying its signature(s), e.g.,\n   by comparing against\
    \ an archive.\n   The production of a data validation certificate in response\
    \ to a\n   signed request for validation of a signed document or public key\n\
    \   certificate also provides evidence that due diligence was performed\n   by\
    \ the requester in validating a digital signature or public key\n   certificate.\n\
    \   This document defines the use of digital signatures to insure the\n   authenticity\
    \ of documents and DVCs, and uses a corresponding\n   terminology; the use of\
    \ other methods to provide evidence for\n   authenticity is not excluded, in particular\
    \ it is possible to replace\n   a SignedData security envelope by another one.\n"
- title: 2. Services provided by DVCS
  contents:
  - "2. Services provided by DVCS\n   The current specification defines 4 types of\
    \ validation and\n   certification services:\n   - Certification of Possession\
    \ of Data (cpd),\n   - Certification of Claim of Possession of Data (ccpd),\n\
    \   - Validation of Digitally Signed Document (vsd), and\n   - Validation of Public\
    \ Key Certificates (vpkc).\n   A DVCS MUST support at least a subset of these\
    \ services.  A DVCS may\n   support a restricted vsd service allowing to validate\
    \ data validation\n   certificates.\n   On completion of each service, the DVCS\
    \ produces a data validation\n   certificate - a signed document containing the\
    \ validation results and\n   trustworthy time information.\n"
- title: 2.1 Certification of Possession of Data
  contents:
  - "2.1 Certification of Possession of Data\n   The Certification of Possession of\
    \ Data service provides evidence\n   that the requester possessed data at the\
    \ time indicated and that the\n   actual data were presented to the Data Validation\
    \ Server.\n"
- title: 2.2 Certification of Claim of Possession of Data
  contents:
  - "2.2 Certification of Claim of Possession of Data\n   The Certification of Claim\
    \ of Possession of Data service is similar\n   to the previous one, except that\
    \ the requester does not present the\n   data itself but a message digest.\n"
- title: 2.3 Validation of Digitally Signed Documents
  contents:
  - "2.3 Validation of Digitally Signed Documents\n   The Validation of Digitally\
    \ Signed Document service is used when\n   validity of a signed document is to\
    \ be asserted.\n   The DVCS verifies all signatures attached to the signed document\n\
    \   using all appropriate status information and public key certificates.\n  \
    \ The DVCS verifies the mathematical correctness of all signatures\n   attached\
    \ to the document and also checks whether the signing entities\n   can be trusted,\
    \ for example by validating the full certification path\n   from the signing entities\
    \ to a trusted point (e.g., the DVCS's CA, or\n   the root CA in a hierarchy).\n\
    \   The DVCS may be able to rely on relevant CRLs or may need to\n   supplement\
    \ this with access to more current status information from\n   the CAs for example\
    \ by accessing an OCSP service, a trusted directory\n   service, or other DVCS\
    \ services.\n   The DVCS will perform verification of all signatures attached\
    \ to the\n   signed document.  A failure of the verification of one of the\n \
    \  signatures does not necessarily result in the failure of the entire\n   validation,\
    \ and vice versa, a global failure may occur if the\n   document has an insufficient\
    \ number of signatures.\n"
- title: 2.4 Validation of Public Key Certificates
  contents:
  - "2.4 Validation of Public Key Certificates\n   The Validation of Public Key Certificates\
    \ service is used to verify\n   and assert the validity (according to [RFC2459])\
    \ of one or more\n   public key certificates at the specified time.\n   When verifying\
    \ a public key certificate, the DVCS verifies that the\n   certificate included\
    \ in the request is a valid certificate and\n   determines its revocation status\
    \ at a specified time.  DVS checks the\n   full certification path from the certificate's\
    \ issuer to a trusted\n   point.  Again, the DVCS MAY be able to rely on external\
    \ information\n   (CRL, OCSP, DVCS).\n"
- title: 3. Data Certification Server Usage and Scenarii.
  contents:
  - "3. Data Certification Server Usage and Scenarii.\n   It is outside the scope\
    \ of this document to completely describe\n   different operational scenarii or\
    \ usages for DVCS.\n   See Appendix B and C for a set of some basic examples and\
    \ use cases.\n   The Validate Signed Document service can be used to support non-\n\
    \   repudiation services, to allow use of the signed document beyond\n   public\
    \ key certificate revocation or expiry, or simply to delegate\n   signature validation\
    \ to a trusted central (company wide) service.\n   The Validate Public Key Certificate\
    \ service can be used when timely\n   information regarding a certificate's revocation\
    \ status is required\n   (e.g., high value funds transfer or the compromise of\
    \ a highly\n   sensitive key) or when evidence supporting non-repudiation is\n\
    \   required.\n   A data validation certificate may be used to simplify the validation\n\
    \   of a signature beyond the expiry or subsequent revocation of the\n   signing\
    \ certificate: a Data validation certificate used as an\n   authenticated attribute\
    \ in a signature includes an additional\n   assertion about the usability of a\
    \ certificate that was used for\n   signing.  In order to validate such a signature\
    \ it may be sufficient\n   to only validate the data validation certificate.\n\
    \   A DVCS may include additional key exchange certificates in a data\n   validation\
    \ certificate to validate a key exchange certificate in\n   order to provide to\
    \ an application a set of additional authorised\n   recipients for which a session\
    \ key should also be encrypted.  This\n   can be used for example to provide central\
    \ management of a company\n   wide recovery scheme.  Note, that the additional\
    \ certificates may not\n   only depend on the requested certificate, but also\
    \ on the requester's\n   identity.\n   The Certification of Claim of Possession\
    \ of Data service is also\n   known as time stamping.\n   The Certification of\
    \ Possession of Data service can be used to assert\n   legal deposit of documents,\
    \ or to implement archival services as a\n   trusted third party service.\n  \
    \ The Data Validation and Certification Server Protocols can be used in\n   different\
    \ service contexts.  Examples include company-wide\n   centralised services (verification\
    \ of signatures, certification of\n   company certificates), services to cooperate\
    \ in a multi-organization\n   community, or general third party services for time\
    \ stamping or data\n   archival.\n   An important application of DVCS is an enterprise\
    \ environment where\n   all security decisions are based on company wide rules.\
    \  A company\n   wide DVCS service can be used to delegate all technical decisions\n\
    \   (e.g., path validation, trust configuration) to a centrally managed\n   service.\n\
    \   In all cases, the trust that PKI entities have in the Data Validation\n  \
    \ and Certification Server is transferred to the contents of the Data\n   Validation\
    \ Certificate  (just as trust in a CA is transferred to the\n   public key certificates\
    \ that it issues).\n   A DVCS service may be combined with or use archiving and\
    \ logging\n   systems, in order to serve as a strong building block in non-\n\
    \   repudiation services.  In this sense it can be regarded as an\n   Evidence\
    \ Recording Authority [ISO-NR].\n"
- title: 4. Functional Requirements for DVCS
  contents:
  - "4. Functional Requirements for DVCS\n   The DVCS MUST\n   1. provide a signed\
    \ response in the form of a data validation\n      certificate to the requester,\
    \ as defined by policy, or an error\n      response.  The DVCS service definition\
    \ and the policy define how\n      much information that has been used by the\
    \ DVCS to generate the\n      response will be included in a data validation certificate,\
    \ e.g.,\n      public key certificates, CRLs, and responses from other OCSP\n\
    \      servers, DVCS, or others.\n   2. indicate in the data validation certificate\
    \ whether or not the\n      signed document, the public key certificate(s), or\
    \ the data were\n      validated, and, if not, the reason why the verification\
    \ failed.\n   3. include a strictly monotonically increasing serial number in\
    \ each\n      data validation certificate.\n   4. include a time of day value\
    \ or a time stamp token into each data\n      validation certificate.\n   5. sign\
    \ each data certification token using a key that has been\n      certified with\
    \ a dvcs signing extended key purpose, and include a\n      reference to this\
    \ certificate as a signed attribute in the\n      signature.\n   6. check the\
    \ validity of its own signing key and certificate before\n      delivering data\
    \ validation certificates and MUST not deliver data\n      validation certificate\
    \ in case of failure.\n   A DVCS SHOULD include within each data validation certificate\
    \ a\n   policy identifier to determine the trust and validation policy used\n\
    \   for DVC's signature.\n"
- title: 5. Data Certification Server Transactions
  contents:
  - "5. Data Certification Server Transactions\n   A DVCS transaction begins with\
    \ a client preparing a Data Validation\n   and Certification Request.  The request\
    \ always contains data for\n   which validity, correctness or possession is to\
    \ be certified.\n   The request MAY be encapsulated using a security envelope\
    \ to provide\n   for authentication of both requester and server.  Requester\n\
    \   authentication can be achieved by several of the formats described in\n  \
    \ CMS, in particular, signedData.\n   The DVCS client chooses an appropriate transport\
    \ mechanism to convey\n   the requests to a DVCS.  It may also be necessary to\
    \ choose a\n   transport mechanism providing confidentiality and, in particular,\n\
    \   allowing authentication of the DVCS by the requestor, e.g., TLS or\n   CMS\
    \ or S/MIME encryption.\n   If the request is valid, the DVCS performs all necessary\n\
    \   verifications steps, and generates a Data Validation Certificate\n   (DVC),\
    \ and sends a response message containing the DVC back to the\n   requestor.\n\
    \   The Data Validation Certificate is formed as a signed document (CMS\n   SignedData).\n\
    \   As with the request, it may be necessary to choose a transport\n   mechanism\
    \ that provides for confidentiality to carry the DVC.  DVCs\n   are not necessarily\
    \ transported the same way as requests, e.g., they\n   can be returned using e-mail\
    \ after an online request received via\n   HTTPS.\n   If the request was invalid,\
    \ the DVCS generates a response message\n   containing an appropriate error notification.\n\
    \   Upon receiving the response, the requesting entity SHOULD verify its\n   validity,\
    \ i.e., whether it contains an acceptable time, the correct\n   name for the DVCS,\
    \ the correct request information and message\n   imprint, a valid signature,\
    \ and satisfactory status, service and\n   policy fields.\n   When verifying the\
    \ validity of a DVC, it is up to the requestor's\n   application to check whether\
    \ a DVCS's signing certificate is valid.\n   Depending on the usage environment,\
    \ different methods, online or out\n   of band, e.g., CRLs, DVCS, or OCSP, may\
    \ have to be used.\n   After all checks have passed, the data validation certificate\
    \ can be\n   used to authenticate the correctness or possession of the\n   corresponding\
    \ data.\n   A DVCS may return more than one DVC corresponding to one request.\
    \  In\n   this case, all but one request have a global status of 'WAITING'.\n"
- title: 6. Identification of the DVCS
  contents:
  - "6. Identification of the DVCS\n   In order to be able to import elements from\
    \ dvcs the following object\n   identifier is used as a ASN.1 module identifier.\n\
    \   id-mod-dvcs OBJECT IDENTIFIER ::= {iso(1) identified-organization(3)\n   \
    \  dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) 15}\n   The\
    \ DVCS that use SignedData to provide authentication for DVCs MUST\n   sign all\
    \ data certification messages with a key whose corresponding\n   certificate MUST\
    \ contain the extended key usage field extension as\n   defined in [RFC2459] Section\
    \ 4.2.1.14 with KeyPurposeID having value\n   id-kp-dvcs.  This extension MUST\
    \ be marked as critical.\n   The Data Validation Certificate MUST contain an ESSCertID\n\
    \   authenticated attribute for the certificate used by the DVCS for\n   signing.\n\
    \   id-kp-dvcs  OBJECT IDENTIFIER ::= {iso(1) identified-organization(3)\n   \
    \     dod(6) internet(1) security(5) mechanisms(5) pkix(7) kp(3) 10}\n   Consistent\
    \ KeyUsage bits:\n   digitalSignature, nonRepudiation, keyCertSign, cRLSign\n\
    \   A DVCS's certificate MAY contain an Authority Information Access\n   extension\
    \ [RFC2459] in order to convey the method of contacting the\n   DVCS.  The accessMethod\
    \ field in this extension MUST contain the OID\n   id-ad-dvcs:\n   id-ad-dvcs\
    \  OBJECT IDENTIFIER ::= {iso(1) identified-organization(3)\n        dod(6) internet(1)\
    \ security(5) mechanisms(5) pkix(7) ad(48) 4}\n   The value of the 'accessLocation'\
    \ field defines the transport (e.g.,\n   an URI) used to access the DVCS.\n"
- title: 7. Common Data Types
  contents:
  - "7. Common Data Types\n   There are several common data types that occur in the\
    \ request and the\n   response data structures.  These data types are either defined\
    \ by\n   this document or imported from other sources.  This chapter defines\n\
    \   and describes these types and lists their usages.\n"
- title: '7.1 Version:'
  contents:
  - "7.1 Version:\n   The request and the response include an optional integer field\n\
    \   specifying the version of the data structure.  For both fields the\n   value\
    \ is 1, or the field is not present at all in this version of the\n   protocol.\n"
- title: '7.2 DigestInfo:'
  contents:
  - "7.2 DigestInfo:\n   This element is defined in [RFC2315].  Since the status of\
    \ that\n   document is informational, the definition is repeated here:\n   DigestInfo\
    \ ::= SEQUENCE {\n       digestAlgorithm   DigestAlgorithmIdentifier,\n      \
    \ digest            Digest }\n   Digest ::= OCTET STRING\n   The fields of type\
    \ DigestInfo have the following meanings:\n   - The field 'digestAlgorithm' identifies\
    \ the message-digest algorithm\n     (and any associated parameters) under which\
    \ data are digested.\n   - The field 'digest' is the result of the message-digesting\
    \ process.\n   A DigestInfo is used in two places:\n   - as a data portion for\
    \ the ccpd service, and\n   - in all a data validation certificates to hold a\
    \ digest of the data\n     portion of the corresponding request or a copy of the\
    \ data field\n     for a ccpd service.\n"
- title: 7.3. Time Values
  contents:
  - "7.3. Time Values\n   Indicators of time can be present in requests and responses.\
    \  In the\n   most simple form, the time is represented as GeneralizedTime where\n\
    \   fractions of seconds are allowed.\n   An alternate form is a timeStampToken\
    \ from a TSA, or as a DVC (or\n   some other token) from another third party service.\n\
    \   It is a matter of policy whether a DVCS tries to interpret or\n   validate\
    \ a Time Value in a request.\n   DVCSTime ::= CHOICE  {\n        genTime     \
    \                 GeneralizedTime,\n        timeStampToken               ContentInfo\
    \ }\n   Future versions of the protocol MAY include additional time formats.\n\
    \   Time values generated by the DVCS are increasing but not necessarily\n   unique,\
    \ an order among DVCs is defined by serial numbers.\n"
- title: 7.4. PKIStatusInfo
  contents:
  - "7.4. PKIStatusInfo\n   This structure is defined in [RFC2510].  It is used as\
    \ component of\n   the 'chain' field of a TargetEtcChain structure, and as a global\n\
    \   status indicator in the DVCSResponse structure.  Every occurrence of\n   PKIStatusInfo\
    \ is generated by the responding DVCS to reflect the\n   result of some local\
    \ verification.\n"
- title: 7.5. TargetEtcChain
  contents:
  - "7.5. TargetEtcChain\n   A TargetEtcChain structure contains certificates and\
    \ other indicators\n   to describe either (in a request for a cpkc service) information\
    \ to\n   be validated, or the result of the verifications.  The structure may\n\
    \   also contain information about policies and policy mappings.\n   The details\
    \ about how to fill in and to interpret the structure are\n   defined later for\
    \ each service.\n   The 'pathProcInput' field contains information about policies\
    \ and\n   policy mapping to be used or used during a validation.\n   In a response,\
    \ the 'pkistatus' and `certstatus' choices can only\n   occur in the 'chain' sequence.\
    \  If present, they contain the result\n   of a local verification of the immediately\
    \ preceding element, or of\n   the target value, if it is the first element in\
    \ the 'chain' sequence.\n   If no 'pkistatus' or 'certstatus' is present, the\
    \ DVCS considers all\n   elements in the 'chain' as trustworthy.  Note, that there\
    \ may be a\n   valid OCSP response or DVC indicating an invalid certificate.\n\
    \   TargetEtcChain ::= SEQUENCE {\n        target                       CertEtcToken,\n\
    \        chain                        SEQUENCE SIZE (1..MAX) OF\n            \
    \                            CertEtcToken OPTIONAL,\n        pathProcInput   \
    \             [0] PathProcInput OPTIONAL }\n   PathProcInput ::= SEQUENCE {\n\
    \        acceptablePolicySet          SEQUENCE SIZE (1..MAX) OF\n            \
    \                            PolicyInformation,\n        inhibitPolicyMapping\
    \         BOOLEAN DEFAULT FALSE,\n        explicitPolicyReqd           BOOLEAN\
    \ DEFAULT FALSE }\n   CertEtcToken ::= CHOICE {\n        certificate         \
    \         [0] IMPLICIT Certificate ,\n        esscertid                    [1]\
    \ ESSCertId ,\n        pkistatus                    [2] IMPLICIT PKIStatusInfo\
    \ ,\n        assertion                    [3] ContentInfo ,\n        crl     \
    \                     [4] IMPLICIT CertificateList,\n        ocspcertstatus  \
    \             [5] IMPLICIT CertStatus,\n        oscpcertid                   [6]\
    \ IMPLICIT CertId ,\n        oscpresponse                 [7] IMPLICIT OCSPResponse,\n\
    \        capabilities                 [8] SMIMECapabilities,\n        extension\
    \                    Extension }\n   Certificate, PolicyInformation and CertificateList\
    \ are defined in\n   [RFC2459].  ESSCertId is defined in [RFC2634].  CertId, OCSPResponse\n\
    \   and CertStatus are defined in [RFC2560].  PKIStatusField is defined\n   in\
    \ [RFC2510].\n   The choice 'assertion' can contain a data validation certificate,\
    \ or\n   a timeStamp, or other assertions.\n   The choices 'assertion', 'ocspresponse'\
    \ and 'crl' are provided by\n   services external to the responding DVCS.  The\
    \ choices 'certStatus'\n   and 'pkistatus' reflect decisions made directly by\
    \ the responding\n   DVCS.\n   As a replacement for certificates, certification\
    \ identifiers\n   (ESSCertId, CertId)  MAY be used in requests and responses,\
    \ if this\n   is sufficient to perform the service, e.g., when the corresponding\n\
    \   certificates are provided elsewhere in a request or response (as part\n  \
    \ of the SignedData type).\n   Certificate or certification identifiers of certification\
    \ authorities\n   MAY occur in any order and MAY represent several certification\n\
    \   chains.\n   The choice 'capabilities' can be used to indicate SMIMECapabilities.\n\
    \   It applies to the certificate identified by the preceding element in\n   the\
    \ sequence.\n"
- title: 7.6. DVCSRequestInformation
  contents:
  - "7.6. DVCSRequestInformation\n   A DVCSRequestInformation data structure contains\
    \ general information\n   about the Data Validation and Certification Request.\
    \  This structure\n   occurs in a request, and is also included in a corresponding\
    \ Data\n   Validation Certificate.\n   DVCSRequestInformation ::= SEQUENCE  {\n\
    \           version                      INTEGER DEFAULT 1 ,\n           service\
    \                      ServiceType,\n           nonce                        INTEGER\
    \ OPTIONAL,\n           requestTime                  DVCSTime OPTIONAL,\n    \
    \       requester                    [0] GeneralNames OPTIONAL,\n           requestPolicy\
    \                [1] PolicyInformation OPTIONAL,\n           dvcs            \
    \             [2] GeneralNames OPTIONAL,\n           dataLocations           \
    \     [3] GeneralNames OPTIONAL,\n           extensions                   [4]\
    \ IMPLICIT Extensions OPTIONAL\n   }\n   The ServiceType type enumerates the DVCS\
    \ service type of a request.\n   See chapter 2 for the description of the services.\n\
    \   ServiceType ::= ENUMERATED { cpd(1), vsd(2), cpkc(3), ccpd(4) }\n"
- title: 7.7. GeneralName and GeneralNames
  contents:
  - "7.7. GeneralName and GeneralNames\n   There are several occurrences of SEQUENCES\
    \ of GeneralName and\n   GeneralNames.  These structures are imported from [RFC2459].\n"
- title: 8. Data Validation and Certification Requests
  contents:
  - "8. Data Validation and Certification Requests\n   A Data Validation and Certification\
    \ request is a ContentInfo defined\n   in [RFC2630].\n   It may consist of a [RFC2630]\
    \ content with a contenttype id-ct-\n   DVCSRequestData signalling a DVCSRequestData,\n\
    \   id-ct-DVCSRequestData OBJECT IDENTIFIER ::= {iso(1) member-body(2)\n     us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) ct(1) 7}\n   These data are optionally\
    \ encapsulated by contenttypes that provide\n   for authentication and/or confidentiality.\n\
    \   This document describes the usage of a SignedData construct of\n   [RFC2630]\
    \ where the contenttype indicated in the eContentType of the\n   encapContentInfo\
    \ is id-ct-DVCSRequestData and the eContent of the\n   encapContentInfo, carried\
    \ as an octet string, contains a\n   DVCSRequestData structure.\n   When using\
    \ a SignedData structure, a Data Validation and\n   Certification Request MAY\
    \ contain several SignerInfo structures, and\n   countersignature attributes depending\
    \ on operational environments.\n   When an end user client creates the request,\
    \ there is one or zero\n   SignerInfo.  A relaying DVCS MAY add an additional\
    \ signature or a\n   countersignature attribute, or MAY use another encapsulation\
    \ from\n   [RFC2630] that provides for authentication and/or confidentiality.\n\
    \   The content of a request consists of a description of the desired\n   service\
    \ and additional parameters, the data to be validated, and an\n   optional identifier\
    \ of the request.\n   DVCSRequest ::= SEQUENCE  {\n       requestInformation \
    \        DVCSRequestInformation,\n       data                       Data,\n  \
    \     transactionIdentifier      GeneralName OPTIONAL\n   }\n   The 'DVCSRequest.requestInformation'\
    \ element contains general\n   information about the request.  It is filled in\
    \ by the requester as\n   follows:\n   - The 'version' field is set to 1 or the\
    \ field is absent in this\n     version of the protocol.\n     The field 'service'\
    \ contains the requested service.\n   - The 'nonce' field MAY be used to provide\
    \ additional protection\n     against replay or content guessing attacks.\n  \
    \ - The 'requestTime' field MAY be used to indicate the time for which\n     the\
    \ requested service should be performed.  For a vsd and cpkc\n     service, it\
    \ specifies the time for which the validity of a signed\n     document or certicates\
    \ is to be asserted.  For the other service,\n     the field is ignored by the\
    \ DVCS.  If the field is absent, the\n     current time is assumed.\n   - The\
    \ value of the 'requester' field indicates the requesting entity.\n     The interpretation\
    \ and usage of this field MUST be defined by the\n     DVCS policy.\n     Some\
    \ usage examples are:\n     If the field is present, and the request is signed,\
    \ a DVCS MAY\n     require that the field MUST match the identity (subjectName\
    \ or\n     subjectAltName extension) of the corresponding signature\n     certificate.\n\
    \     A request MAY be signed by a DVCS when relaying it to another DVCS.\n  \
    \   When acting as a relay, a DVCS MAY add its own identity in the\n     request\
    \ relayed to another service provider, and it MAY remove the\n     initial value.\n\
    \   - The 'requestPolicy' field SHOULD indicate the policy under which\n     the\
    \ validation is requested.  This field MUST be checked by the\n     DVCS to verify\
    \ agreement with its own policy.  The absence of this\n     field indicates that\
    \ any policy is acceptable.\n   - The 'dvcs' field MAY be used to indicate a list\
    \ of DVCS which can\n     be contacted to provide (additional) information or\
    \ to perform\n     additional operations necessary to produce the response.\n\
    \     It is up to the DVCS policy whether to honor this field or not, and\n  \
    \   to define which choice of a general name is acceptable (e.g., an\n     URL\
    \ or a DN).\n   - The 'dataLocations' field MAY be used to indicate where a copy\
    \ of\n     the 'data' field of the request or supplementary information can be\n\
    \     obtained.  The DVCS does not use this field for its own operation,\n   \
    \  the exact interpretation of this field is defined by applications.\n   - The\
    \ 'requestTime' field MAY be used to indicate the time for which\n     the requested\
    \ service should be performed.  For a vsd and cpkc\n     service, it specifies\
    \ the time for which the validity of a signed\n     document or certicates is\
    \ to be asserted.  For the other service,\n     the field is ignored by the DVCS.\
    \  If the field is absent, the\n     current time is assumed.  The DVCS service\
    \ may have a time limit or\n     a delta time limit regarding current time which\
    \ are specified in\n     the local policy of the DVCS service.\n   - The 'extensions'\
    \ field MAY be used to include additional\n     information.  Extensions may be\
    \ marked critical or not in order to\n     indicate whether the DVCS is supposed\
    \ to understand them.  This\n     document does not define extensions.\n   The\
    \ DVCSRequest.data contains service-specific content, defined by\n   each particular\
    \ service provided by the DVCS.\n   Depending on the requested service type, the\
    \ field may contain a\n   signed document, a list of certificates, a message digest\
    \ or\n   arbitrary data.\n   The following type is used:\n   Data ::= CHOICE {\n\
    \         message           OCTET STRING ,\n         messageImprint    DigestInfo,\n\
    \         certs             SEQUENCE SIZE (1..MAX) OF\n                      \
    \         TargetEtcChain\n   }\n   The requester fills the 'data' element as follows:\n\
    \   - For a vsd service request, the requestor encapsulates a CMS\n     SignedData\
    \ object in the value octets of the 'message' choice.\n     It is up to the requester\
    \ to decide whether and how to provide any\n     certificate that may be needed\
    \ to verify the signature(s) in the\n     signedData object.  A requester MAY\
    \ add certificates to the\n     encapsulated signedData object or in the certificate\
    \ list of the\n     request.\n   - For a cpkc service request the 'certs' choice\
    \ is used.\n     Each certificate to be verified MUST be included in a separate\n\
    \     instance of TargetEtcChain.  The 'TargetEtcChain.chain' field, if\n    \
    \ present, indicates one or more chains of trust that can be used to\n     validate\
    \ the certificate.  The DVCS MAY choose to select a subset\n     of certificates\
    \ as certification path, or to ignore this field.\n     The 'TargetEtcChain.pathProcInput'\
    \ field, if present, indicates the\n     acceptable policy set and initial settings\
    \ for explicit-policy-\n     indicator and inhibit-policy-mapping indicators to\
    \ be used in X.509\n     public key certificate path validation (see [RFC2459]).\n\
    \     Only the Certificate, ESSCertId, CertId or Extension choices of the\n  \
    \   TargetEtcChain can be used in the request.\n     The requester is responsible\
    \ for providing sufficient information\n     to the DVCS to identify the corresponding\
    \ certificates.\n   - For a ccpd service the 'messageImprint' choice is used.\n\
    \     The hash algorithm indicated in the hashAlgorithm field SHOULD be a\n  \
    \   \"strong\" hash algorithm (that is, it SHOULD be one-way and\n     collision\
    \ resistant).  It is up to the Data Certification Server to\n     decide whether\
    \ or not the given hash algorithm is sufficiently\n     \"strong\" (based on the\
    \ current state of knowledge in cryptanalysis\n     and the current state of the\
    \ art in computational resources, for\n     example).\n   - For a cpd service\
    \ the 'message' choice is used.\n     The field contains requester-specific data\
    \ with any type of\n     content.  The DVCS does not inspect, modify, or take\
    \ any particular\n     action based on the particular content of the 'message'\
    \ field.\n   The field 'DVCSRequest.transactionIdentifier' MAY be used in order\
    \ to\n   associate DVCS responses containing error messages, to requests.  For\n\
    \   example, in a mail based environment, the parameter could be a copy\n   of\
    \ a messageid.  Note, that the transactionIdentifier is not\n   necessary for\
    \ associating a request with a valid data validation\n   certificate.\n"
- title: 9. DVCS Responses
  contents:
  - "9. DVCS Responses\n   This chapters describes the data structures that are created\
    \ by a\n   DVCS to indicate the results of validation and certification\n   requests.\n\
    \   A DVCS Response structure is generated by the DVCS as a result of\n   processing\
    \ of the data validation and certification request.\n   A Data Validation response\
    \ contains an [RFC2630] ContentInfo with a\n   type of id-ct-DVCSResponseData\
    \ signalling a DVCSResponse structure.\n   id-ct-DVCSResponseData OBJECT IDENTIFIER\
    \ ::= { iso(1) member-body(2)\n       us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\
    \ smime(16) ct(1) 8 }\n   The data MAY be encapsulated by constructs of [RFC2630]\
    \ in order to\n   provide authentication of the DVCS, and or integrity and\n \
    \  confidentiality of the request.  This document specifies the usage of\n   a\
    \ SignedData construct of [RFC2630].\n   The contenttype indicated in the eContentType\
    \ of the encapContentInfo\n   is of type id-ct-DVCSResponseData, signalling a\
    \ DVCSResponse as\n   eContent of the encapContentInfo (carried as an octet string).\
    \  The\n   DVCS SHOULD use a key for which a corresponding certificate indicates\n\
    \   in an extendedKeyUsage the purpose of DVCS signing.\n   In a critical situation\
    \ when a DVCS cannot produce a valid signature\n   (if the DVCS's signing key\
    \ is known to be compromised, for example),\n   the DVCSResponse, containing the\
    \ error notification, MUST be\n   generated as a signedData with no signerInfo\
    \ attached.  Receiving\n   unsigned DVCSResponse MUST be treated by the clients\
    \ as a critical\n   and fatal error, and the content of the message should not\
    \ be\n   implicitly trusted.\n   A valid response can contain one of the following:\n\
    \   1. A Data Validation Certificate (DVC), delivering the results of\n      data\
    \ validation operations, performed by the DVCS.\n   2. An error notification.\
    \  This may happen when a request fails due\n      to a parsing error, requester\
    \ authentication failure, or anything\n      else that prevented the DVCS from\
    \ executing the request.\n   The following type is used:\n   DVCSResponse ::=\
    \ CHOICE {\n       dvCertInfo         DVCSCertInfo ,\n       dvErrorNote     \
    \   [0] DVCSErrorNotice }\n"
- title: 9.1. Data Validation Certificate
  contents:
  - "9.1. Data Validation Certificate\n   A Data Validation Certificate is a signedData\
    \ object containing a\n   DVCSResponse with a 'dvCertInfo' choice.\n   DVCSCertInfo::=\
    \ SEQUENCE  {\n            version             Integer DEFAULT 1 ,\n         \
    \   dvReqInfo           DVCSRequestInformation,\n            messageImprint  \
    \    DigestInfo,\n            serialNumber        Integer,\n            responseTime\
    \        DVCSTime,\n            dvStatus            [0] PKIStatusInfo OPTIONAL,\n\
    \            policy              [1] PolicyInformation OPTIONAL,\n           \
    \ reqSignature        [2] SignerInfos  OPTIONAL,\n            certs          \
    \     [3] SEQUENCE SIZE (1..MAX) OF\n                                    TargetEtcChain\
    \ OPTIONAL,\n            extensions          Extensions OPTIONAL }\n   The DVCSCertInfo\
    \ structure is returned as a result of successful\n   execution of data validation\
    \ service.  It contains the results of the\n   data validation, a reference to\
    \ the original request, and other\n   parameters.  Please note that 'successful\
    \ execution' does not\n   necessarily mean that the validation itself was successful\
    \ - a\n   DVCSCertInfo may contain both the 'valid' and 'invalid' results.\n \
    \  The DVCS creates a DVCSCertInfo as follows:\n   - The 'version' field is never\
    \ present in this version of the\n     protocol.\n     The 'dvReqInfo' is essentially\
    \ a copy of the 'requestInformation'\n     field of the corresponding request.\
    \  The DVCS MAY modify the fields\n     'dvcs', 'requester', 'dataLocations',\
    \ and 'nonce' of the ReqInfo\n     structure, e.g., if the request was processed\
    \ by a chain of DVCS,\n     if the request needs to indicate DVCS, or to indicate\
    \ where to find\n     a copy of the data from a 'vpd' request.  The only modification\n\
    \     allowed to a 'nonce' is the inclusion of a new field if it was not\n   \
    \  present, or to concatenate other data to the end (right) of an\n     existing\
    \ value.\n   - The 'DVCSCertInfo.messageImprint' field is computed from the 'data'\n\
    \     field of the corresponding request as follows:\n     For the 'certs' choice\
    \ (the 'vpkc' service), the digest is computed\n     over the DER encoded data\
    \ value.  For a 'message' choice (the 'vsd'\n     and the 'vpd' services) the\
    \ digest is computed over the value\n     octets (not including tag and length\
    \ octets) of the OCTET STRING.\n     It is up to the DVCS to choose an appropriate\
    \ digest algorithm.\n     For a 'messageImprint' choice (the 'vcpd' service),\
    \ the\n     'messageImprint' of the DVCSRequest is copied as is.\n   - The 'DVCSCertInfo.serialNumber'\
    \ field contains a unique identifier\n     of the request.\n   - The field 'responseTime'\
    \ indicates a time value associated with the\n     response.  The value MAY be\
    \ a locally generated one, or a signed\n     TimeStampToken (TST) or DVC obtained\
    \ from an external service.\n     Before using a value obtained from an external\
    \ service, the DVCS\n     must validate it according the rules of the external\
    \ service.\n   - The field 'DVCSCertInfo.dvStatus' reflects a collective result\
    \ of\n     the validation.\n     If the field is missing, it is an equivalent\
    \ of the SUCCESS\n     status.\n     For a vkpc, if the status field is present\
    \ and set to SUCCESS, it\n     indicates that all certificates were successfully\
    \ validated.  If it\n     is present and set to FAILED, it indicates that all\
    \ or some of the\n     certificates failed validation, and the specific status\
    \ of the\n     'certs' should be investigated, at least one of the elements of\
    \ the\n     'certs' TargetEtcChain structures MUST have a failure status.\n  \
    \   If the field 'dvStatus' does not indicate success ('granted' or\n     'granted\
    \ with mods') the element 'failInfo' MAY indicate the reason\n     for the failure.\
    \  Note that the field 'certs' MAY contain\n     additional information about\
    \ verification failures.\n     A failure of the verification of one of the signatures\
    \ does not\n     necessarily result in failing to validate a signed document.\
    \  For\n     example, as long as a sufficient number of signature was\n     successfully\
    \ verified, a DVC with status 'grantedWithMods' may be\n     produced.  A DVC\
    \ with status 'granted' MUST only be produced if all\n     signatures verified\
    \ successfully.\n     The field MUST be present, and the status must be set to\
    \ WAITING,\n     if no final response can be immediately available.  It is assumed\n\
    \     that the DVCS provides an additional final status some time later.\n   \
    \  The details of the necessary procedures are part of the DVCS\n     policy.\n\
    \     In case of failure, the requester can further investigate the cause\n  \
    \   of the failure, by looking into the TargetEtcChain fields.\n     'CertEtctoken.pkistatus'\
    \ fields will indicate which item(s) has\n     failed or succeeded the validation\
    \ and for what reason.\n   - The 'DVCSCertInfo.policy' field indicates the policy\
    \ under which\n     the DVCS operates.\n   - If present, 'DVCSCertInfo.reqSignature'\
    \ MUST be the same value as\n     the signerInfos field of the corresponding request.\
    \  It is a policy\n     decision whether to include this field.\n   - The 'DVCSCertInfo.certs'\
    \ field contains the results of the\n     verifications made by the DVCS.  For\
    \ the cpkc service, each element\n     contains a copy of a corresponding field\
    \ of the request with the\n     selected subset in the targetAndChain subfield\
    \ and the results of\n     the verifications, and additional certificates or certificate\n\
    \     references, e.g., from certification authorities or as described in\n  \
    \   appendix C.3.  For a vsd service, each element contains the result\n     of\
    \ the validation of one signature of the signed document to be\n     validated.\n\
    \     In case of a global status of WAITING, the DVCS MAY choose to\n     return\
    \ an individual status of waiting in some of the 'certs'\n     field, or not to\
    \ return such a TargetEtcChain at all.\n     The 'acceptablePolicySet' sequence\
    \ indicates the policies and\n     mappings that were processed during X.509 public\
    \ key certificate\n     path validation.  PolicyMappingsSyntax is defined in [RFC2459].\n\
    \   - The 'extensions' field MAY be used to return additional information\n  \
    \   to the client.  Extensions MAY be marked critical or not in order\n     to\
    \ indicate whether the client MUST understand them.  This document\n     does\
    \ not define extensions.\n"
- title: 9.2. DVCS Error Notification
  contents:
  - "9.2. DVCS Error Notification\n   A DVCS Error Notification is a CMS signedData\
    \ object containing a\n   DVCSResponse with a 'dvErrorNote' choice.\n   DVCSErrorNotice\
    \ ::= SEQUENCE {\n       transactionStatus           PKIStatusInfo ,\n       transactionIdentifier\
    \       GeneralName OPTIONAL }\n   The PKIStatusInfo is defined in [RFC2511].\
    \  For the purposes of\n   communicating the DVCSErrorNotice, the following subset\
    \ of\n   PKIFailureInfo values is used:\n   PKIFailureInfo ::= BITSTRING  {\n\
    \        badRequest       (2),\n        -- transaction not permitted or supported\n\
    \        badTime          (3),\n        -- messageTime was not sufficiently close\
    \ to the system time,\n        -- as defined by local policy\n        badDataFormat\
    \    (5),\n        -- the data submitted has the wrong format\n        wrongAuthority\
    \   (6),\n        -- the DVCS indicated in the request is different from the\n\
    \        -- one creating the response token\n        incorrectData    (7)\n  \
    \      --the requester's data (i.e., signature) is incorrect )\n   In the DVCSErrorNotice,\
    \ the PKIStatus field of the PKIStatusInfo must\n   be set to REJECTED.\n   The\
    \ 'statusString' field of PKIStatusInfo can be used to accommodate\n   extra text,\
    \ such as a reason for the failure, for example \"I have\n   gone out of service\"\
    .  The DVCS initializes the\n   'DVCSErrorNotice.transactionIdentifier' with a\
    \ copy of the\n   'DVCSRequest.transactionIdentifier' field of the corresponding\n\
    \   request.\n   In certain circumstances, a DVCS may not be able to produce a\
    \ valid\n   response to a request (for example, if it is unable to compute\n \
    \  signatures for a period of time).  In these situations the DVCS MAY\n   create\
    \ a response with an DVCSErrorNotice but no signature.\n   DVCS clients SHOULD\
    \ NOT trust unsigned responses.  A DVCS client MAY\n   trust unsigned responses,\
    \ if the communication channel provides for\n   server authentication (e.g., by\
    \ services defined by TLS [RFC2246]).\n"
- title: 10.  Transports
  contents:
  - "10.  Transports\n   There is no mandatory transport mechanism in this document.\
    \  All\n   mechanisms are optional.  Two examples of transport protocols are\n\
    \   given which allow online exchange of request and a response, and\n   asynchronous\
    \ communication between a client and a DVCS.\n   A DVCS MAY use a combination\
    \ of protocols, for example in order to\n   return additional DVCs.\n"
- title: 10.1 DVCS Protocol via HTTP or HTTPS
  contents:
  - "10.1 DVCS Protocol via HTTP or HTTPS\n   This subsection specifies a means for\
    \ conveying ASN.1-encoded\n   messages for the DVCS protocol exchanges via the\
    \ HyperText Transfer\n   Protocol.\n   The DER encoded DVCS requests and responses\
    \ are encapsulated using a\n   simple MIME object with Content-Type application/dvcs\
    \ (and with the\n   default binary encoding).\n   This MIME object can be sent\
    \ and received using common HTTP or HTTPS\n   processing engines over WWW links\
    \ and provides a simple client-server\n   transport for DVCS messages.\n"
- title: 10.2 DVCS Protocol Using Email
  contents:
  - "10.2 DVCS Protocol Using Email\n   This section specifies a means for conveying\
    \ ASN.1-encoded messages\n   for the protocol exchanges described in Section 8\
    \ via Internet mail.\n   The DER encoded DVCS requests and responses are encapsulated\
    \ using a\n   simple MIME object with Content-Type application/dvcs with an\n\
    \   appropriate Content-Transfer-Encoding.\n   This MIME object can be sent and\
    \ received using MIME processing\n   engines and provides a simple Internet mail\
    \ transport for DVCS\n   messages.\n   In order to be able to associate a possible\
    \ error response with a\n   request, the requester SHOULD use the field 'transactionIdentifier'.\n\
    \   The requester SHOULD not make any assumption about the usage of\n   message\
    \ header fields by the responding service, in particular the\n   usage of fields\
    \ like Subject, Message-ID or References.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This entire chapter discusses security considerations.\n\
    \   When designing a data validation and certification service, the\n   following\
    \ considerations have been identified that have an impact\n   upon the validity\
    \ or \"trust\" in the data validation certificate.\n   It is imperative that keys\
    \ used to sign DVCs are guarded with proper\n   security and controls in order\
    \ to minimize the possibility of\n   compromise.  Nevertheless, in case the private\
    \ key does become\n   compromised, an audit trail of all the DVC generated by\
    \ the DVCS\n   SHOULD be kept as a means to help discriminate between genuine\
    \ and\n   false DVCs.  A DVCS MAY provide for a vsd service to validate DVCs\n\
    \   created by this DVCS or another one solely based on the audit trail.\n   When\
    \ confidentiality and server authentication is required, requests\n   and responses\
    \ MAY be protected using appropriate mechanisms (e.g.,\n   CMS encapsulation [RFC\
    \ 2630] or TLS [RFC2246]).\n   Server authentication is highly recommended for\
    \ the vsd and cpd\n   service.\n   Client identification and authentication MAY\
    \ use services defined by\n   TLS [RFC2246]) instead of, or in addition to, using\
    \ a CMS format\n   providing authentication.\n"
- title: 12.  Patent Information
  contents:
  - "12.  Patent Information\n   The following United States Patents related to data\
    \ validation and\n   certification services, listed in chronological order, are\
    \ known by\n   the authors to exist at this time.  This may not be an exhaustive\n\
    \   list.  Other patents may exist or be issued at any time.\n   Implementers\
    \ of the DVCS protocol and applications using the protocol\n   SHOULD perform\
    \ their own patent search and determine whether or not\n   any encumberences exist\
    \ on their implementation.\n"
- title: '# 4,309,569     Method of Providing Digital Signatures'
  contents:
  - '# 4,309,569     Method of Providing Digital Signatures

    '
- title: (issued) January 5, 1982
  contents:
  - '(issued) January 5, 1982

    '
- title: (inventor) Ralph C.  Merkle
  contents:
  - '(inventor) Ralph C.  Merkle

    '
- title: (assignee) The Board of Trustees of the Leland Stanford Junior
  contents:
  - '(assignee) The Board of Trustees of the Leland Stanford Junior

    '
- title: University
  contents:
  - 'University

    '
- title: '# 5,001,752     Public/Key Date-Time Notary Facility'
  contents:
  - '# 5,001,752     Public/Key Date-Time Notary Facility

    '
- title: (issued) March 19, 1991
  contents:
  - '(issued) March 19, 1991

    '
- title: (inventor) Addison M.  Fischer
  contents:
  - '(inventor) Addison M.  Fischer

    '
- title: '# 5,022,080     Electronic Notary'
  contents:
  - '# 5,022,080     Electronic Notary

    '
- title: (issued) June 4, 1991
  contents:
  - '(issued) June 4, 1991

    '
- title: (inventors) Robert T.  Durst, Kevin D.  Hunter
  contents:
  - '(inventors) Robert T.  Durst, Kevin D.  Hunter

    '
- title: '# 5,136,643     Public/Key Date-Time Notary Facility'
  contents:
  - '# 5,136,643     Public/Key Date-Time Notary Facility

    '
- title: (issued) August 4, 1992
  contents:
  - '(issued) August 4, 1992

    '
- title: (inventor) Addison M.  Fischer
  contents:
  - '(inventor) Addison M.  Fischer

    '
- title: '(Note: This is a continuation of patent # 5,001,752.)'
  contents:
  - '(Note: This is a continuation of patent # 5,001,752.)

    '
- title: '# 5,136,646     Digital Document Time-Stamping with Catenate Certificate'
  contents:
  - '# 5,136,646     Digital Document Time-Stamping with Catenate Certificate

    '
- title: (issued) August 4, 1992
  contents:
  - '(issued) August 4, 1992

    '
- title: (inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.
  contents:
  - '(inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.

    '
- title: (assignee) Bell Communications Research, Inc.,
  contents:
  - '(assignee) Bell Communications Research, Inc.,

    '
- title: '# 5,136,647     Method for Secure Time-Stamping of Digital Documents'
  contents:
  - '# 5,136,647     Method for Secure Time-Stamping of Digital Documents

    '
- title: (issued) August 4, 1992
  contents:
  - '(issued) August 4, 1992

    '
- title: (inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.
  contents:
  - '(inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.

    '
- title: (assignee) Bell Communications Research, Inc.,
  contents:
  - '(assignee) Bell Communications Research, Inc.,

    '
- title: '# 5,373,561     Method of Extending the Validity of a Cryptographic'
  contents:
  - '# 5,373,561     Method of Extending the Validity of a Cryptographic

    '
- title: Certificate
  contents:
  - 'Certificate

    '
- title: (issued) December 13, 1994
  contents:
  - '(issued) December 13, 1994

    '
- title: (inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.
  contents:
  - '(inventors) Stuart A.  Haber, Wakefield S.  Stornetta Jr.

    '
- title: (assignee) Bell Communications Research, Inc.,
  contents:
  - '(assignee) Bell Communications Research, Inc.,

    '
- title: '# 5,422,95 Personal Date/Time Notary Device'
  contents:
  - '# 5,422,95 Personal Date/Time Notary Device

    '
- title: (issued) June 6, 1995
  contents:
  - '(issued) June 6, 1995

    '
- title: (inventor) Addison M.  Fischer
  contents:
  - '(inventor) Addison M.  Fischer

    '
- title: '# 5,781,629     Digital Document Authentication System'
  contents:
  - '# 5,781,629     Digital Document Authentication System

    '
- title: (issued) July 14, 1998
  contents:
  - '(issued) July 14, 1998

    '
- title: (inventor) Stuart A. Haber, Wakefield S. Stornetta Jr.
  contents:
  - '(inventor) Stuart A. Haber, Wakefield S. Stornetta Jr.

    '
- title: (assignee) Surety Technologies, Inc.,
  contents:
  - '(assignee) Surety Technologies, Inc.,

    '
- title: 13.  References
  contents:
  - "13.  References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2510]\
    \  Adams, C. and S. Farrell, \"Internet X.509 Public Key\n              Infrastructure,\
    \ Certificate Management Protocols\", RFC\n              2510, March 1999.\n \
    \  [RFC2459]  Housley, R., Ford, W., Polk, W. and D. Solo, \"Internet\n      \
    \        X.509 Public Key Infrastructure, Certificate and CRL\n              Profile\"\
    , RFC 2459, January 1999.\n   [RFC2630]  Housley, R., \"Cryptographic Message\
    \ Syntax\", RFC 2630,\n              June 1999.\n   [ISONR]    ISO/IEC 10181-5:\
    \  Security Frameworks in Open Systems.\n              Non-Repudiation Framework.\n\
    \   [RFC2119]  Bradner, S., \"Key works for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2511]  Myers,\
    \ M., Adams, C., Solo, D. and D. Kemp, \"Internet\n              X.509 Certificate\
    \ Request Message Format\", RFC 2511, March\n              1999.\n   [RFC2246]\
    \  Dierks, T. and C. Allen, \"The TLS Protocol, Version 1.0\",\n             \
    \ RFC 2246, January 1999.\n   [RFC2634]  Hoffman P., \"Enhanced Security Services\
    \ for S/MIME\", RFC\n              2634, June 1999.\n   [RFC2560]  Myers, M.,\
    \ Ankney, R., Malpani, A., Galperin, S. and C.\n              Adams, \"X.509 Internet\
    \ Public Key Infrastructure Online\n              Certificate Status Protocol\"\
    , RFC 2560, June 1999.\n"
- title: 14.  Authors' Addresses
  contents:
  - "14.  Authors' Addresses\n   Carlisle Adams\n   Entrust Technologies\n   1000\
    \ Innovation Drive\n   Ottawa, Ontario\n   K2K 3E7\n   CANADA\n   EMail: cadams@entrust.com\n\
    \   Michael Zolotarev\n   Baltimore Technologies Pty Limited\n   5th Floor, 1\
    \ James Place\n   North Sydney, NSW 2060\n   AUSTRALIA\n   EMail: mzolotarev@baltimore.com\n\
    \   Peter Sylvester\n   EdelWeb SA - Groupe ON-X Consulting\n   15, Quai de Dion\
    \ Bouton\n   F-92816 Puteaux Cedex\n   FRANCE\n   EMail: peter.sylvester@edelweb.fr\n\
    \   Robert Zuccherato\n   Entrust Technologies\n   1000 Innovation Drive\n   Ottawa,\
    \ Ontario\n   K2K 3E7\n   CANADA\n   EMail: robert.zuccherato@entrust.com\n"
- title: 'APPENDIX A - PKCS #9 Attribute'
  contents:
  - "APPENDIX A - PKCS #9 Attribute\n   We define a PKCS #9 [PKCS9] attribute type.\
    \  The attribute type has\n   ASN.1 type SignedData and contains a data validation\
    \ certificate.\n   The object identifier id-aa-dvcs-dvc identifies the data validation\n\
    \   certificate attribute type.\n   id-aa-dvcs-dvc OBJECT IDENTIFIER ::= {iso(1)\
    \ member-body(2)\n       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) aa(2)\
    \ 29}\n   The attribute may be used as an authenticated or unauthenticated\n \
    \  attribute in CMS SignedData documents.\n"
- title: APPENDIX B - Signed document validation.
  contents:
  - "APPENDIX B - Signed document validation.\n   We present some examples of a possible\
    \ use of DVCS in the context of\n   validation of signed documents.\n"
- title: B.1 Signed document validation
  contents:
  - "B.1 Signed document validation\n   The example covers the case where a DVCS is\
    \ used by a signer to\n   obtain a proof that a document's structure, including\
    \ one or more\n   attached signatures, is/was correct, after the document was\
    \ signed.\n   The DVC can be produced either by a DVCS that is trusted by the\n\
    \   signer, or by a DVCS that is trusted by an intended verifier of the\n   document.\n\
    \   The signer uses the obtained DVC as an evidence that its intentions\n   were\
    \ good and it produced a signed document using the\n   environment(keys, algorithms,\
    \ etc) that was known to be OK.\n   It produces a stand-alone document that can\
    \ be used to extend the\n   life of a signature.  This example assumes that we\
    \ have total trust\n   in the Data Validation and Certification Server.\n   Signature\
    \ algorithms and keys have a finite lifetime.  Therefore,\n   signatures have\
    \ a finite lifetime.  The Data Certification Server can\n   be used to extend\
    \ the lifetime of a signature.\n   In order to extend the lifetime of a signature\
    \ in this way, the\n   following technique can be used:\n   1) The signature needs\
    \ to be certified:\n      The signed message is presented to the Data Validation\
    \ and\n      Certification Server in a 'vsd' service request.\n      The DVCS\
    \ verifies that the signature and certificates are valid at\n      that time by\
    \ checking expiry dates, status information, or DVCs,\n      and returns a DVC.\n\
    \   2) The DVC SHOULD be verified.\n      The signature of the Data Validation\
    \ and Certification Server in\n      data certification token SHALL be verified\
    \ using the Data\n      Certification Server's valid verification key.\n   A signer's\
    \ signing key (and therefore, its signature) is only valid\n   until some specified\
    \ time T1.  The DVCS's signing key (and therefore,\n   its signature) is valid\
    \ until some specified time T2 that is\n   (usually) after time T1.  Without certification,\
    \ the signer's\n   signature would only be valid until time T1.  With certification,\
    \ the\n   signer's signature remains valid until time T2, regardless of\n   subsequent\
    \ revocation or expiry at time T1.\n   If the signature of the DVCS is valid,\
    \ the trust we have in the DVCS\n   allows us to conclude that the original signature\
    \ on the data was\n   valid at the time included in the DVC.\n   The DVCS signing\
    \ key MUST be of a sufficient length to allow for a\n   sufficiently long lifetime.\
    \  Even if this is done, the key will have\n   a finite lifetime.  Since data\
    \ validation certificates are just\n   another type of signed documents, they\
    \ can be validated using\n   (another) DVCS.\n"
- title: APPENDIX C - Verifying the Status of a Public Key Certificate
  contents:
  - "APPENDIX C - Verifying the Status of a Public Key Certificate\n   We now present\
    \ three examples of how to produce a data validation\n   certificate that can\
    \ be used to assert that a public key certificate\n   is valid, trusted, and can\
    \ be used for a particular purpose.\n   A client wants to use a given public key\
    \ certificate either to use it\n   to verify a signature on a document or to use\
    \ it for document\n   encryption.\n   A DVCS MUST have access to current information\
    \ regarding public\n   certificate status, it can therefore be used to verify\
    \ the revocation\n   status of a certificate at the current time.\n   The following\
    \ technique can be used:\n   A) The public key certificate needs to be validated.\n\
    \      The certificate is presented to the Data Certification Server\n      using\
    \ a 'vpkc' service.\n      The Data Validation and Certification Server verifies\
    \ that the\n      public key certificate is valid and that it hasn't been revoked\n\
    \      and then returns a data validation certificate.\n   B) The data validation\
    \ certificate MUST be verified.\n      The signature of the Data Certification\
    \ Server in the data\n      certification token SHALL be verified using the Data\
    \ Validation\n      and Certification Server's valid certificate.\n   C) The public\
    \ key certificate is used:\n   C.1) A clients's own public key certificate (i.e.,\
    \ the corresponding\n        private key) can be used to add a signature to a\
    \ document.  The\n        signing certificate and the data validation certificate\
    \ can be\n        added as signed attributes to the signature.\n        A data\
    \ validation certificate can now be used during the\n        validation signatures\
    \ using the key contained in the public key\n        certificate.  This service\
    \ provided by the DVCS can be thought\n        of as a supplement to the usual\
    \ method of checking revocation\n        status.\n        In other words, signature\
    \ validation at a later time does not\n        necessarily require access to the\
    \ revocation status of the\n        user's signing certificate, access to a DVCS\
    \ service and\n        validation of the DVC is sufficient to verify a signature.\
    \  Note\n        that the DVC does not tell when the signature had been created,\n\
    \        it only indicates when the signing certificate was valid.\n   C.2) A\
    \ public key certificate for key exchange can be used after\n        having obtained\
    \ a data validation certification certificate to\n        encrypt data.  The DVC\
    \ can be stored with the data and/or stored\n        by the creator of the encrypted\
    \ document.\n        If an intended recipient of the document claims that the\
    \ creator\n        did not use an appropriate encryption key, the DVC (obtained\
    \ by\n        a recipient's DVCS) can be used as evidence that the recipient's\n\
    \        DVCS has authorized the usage of the public key.\n   C.3) The procedure\
    \ described in the previous paragraph can be\n        enhanced to provide domain\
    \ encryption in several ways.\n        Organizations require that encrypted documents\
    \ need to be\n        recoverable.  One simple way is to always encrypt documents\
    \ with\n        additional recipients that act as 'domain encryption centers'\
    \ or\n        'recovery centers'.  This is not a technically difficult\n     \
    \   problem, but may require complicated and difficult interactions\n        with\
    \ the end user, in particular when the document's recipients\n        are in several\
    \ different organizations.\n        One possible solution consists of adding additional\
    \ certificates\n        to the dvc that validates the usage of a particular public\
    \ key\n        certificate used for encryption.  In an environment of several\n\
    \        organizations, one of the possible procedures may be:\n        The client\
    \ asks its local dvcs to validate the public key\n        certificate.  The dvcs\
    \ forwards the request to a dvcs of a\n        remote organization.  The remotes\
    \ organization's dvcs verifies\n        the certificate and provides a dvc assertion\
    \ validating the\n        certificate.  It adds additional certificates usable\
    \ for key\n        exchange to the certEtcChain structure indicating additional\n\
    \        required recipients.  The local dvc creates a dvc containing the\n  \
    \      dvc of the remote dvcs.  It may add additional certificates or\n      \
    \  references to the dvc.  The clients use all validated\n        certificates\
    \ to be usable for key exchange to enhance its list\n        of recipients.\n\
    \        In the local dvcs may as well use local information about the\n     \
    \   remote organization's need for additional recipients.\n"
- title: Appendix D - MIME Registration
  contents:
  - "Appendix D - MIME Registration\n   To: ietf-types@iana.org Subject: Registration\
    \ of MIME media type\n   application/timestamp\n   MIME media type name: application\n\
    \   MIME subtype name: dvcs\n   Required parameters: None\n   Optional parameters:\
    \ None\n   Encoding considerations: binary or Base64\n   Security considerations:\
    \ Carries a request for a data validation and\n   certification service and the\
    \ response.  A request may be\n   cryptographically signed.  The response will\
    \ be cryptographically\n   signed.\n   Interoperability considerations: None\n\
    \   Published specification:\n   RFC 3029 on Data Validation and Certification\
    \ Server Protocols\n   Applications which use this media type: Data Validation\
    \ and\n   Certification Servers and Clients\n   Additional information:\n    \
    \ Magic number(s): None\n     File extension(s): .dvc\n     Macintosh File Type\
    \ Code(s): none\n   Person & email address to contact for further information:\
    \ Peter\n   Sylvester <peter.sylvester@edelweb.fr>\n   Intended usage: COMMON\n\
    \   Author/Change controller: Peter Sylvester\n   <peter.sylvester@edelweb.fr>\n"
- title: Appendix E - ASN.1 Module using 1988 Syntax
  contents:
  - 'Appendix E - ASN.1 Module using 1988 Syntax

    '
- title: PKIXDVCS {iso(1) identified-organization(3) dod(6) internet(1)
  contents:
  - "PKIXDVCS {iso(1) identified-organization(3) dod(6) internet(1)\n   security(5)\
    \ mechanisms(5) pkix(7) id-mod(0) id-mod-dvcs(15)}\n"
- title: DEFINITIONS IMPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS IMPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: -- EXPORTS ALL --
  contents:
  - '-- EXPORTS ALL --

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n  Extensions, AlgorithmIdentifier\n  FROM PKIX1Explicit88 {iso(1) identified-organization(3)\n\
    \  dod(6) internet(1) security(5) mechanisms(5) pkix(7)\n  id-mod(0) id-pkix1-explicit-88(1)}\n\
    \  GeneralName, PolicyInformation\n  FROM PKIX1Implicit88 {iso(1) identified-organization(3)\n\
    \  dod(6) internet(1) security(5) mechanisms(5) pkix(7)\n  id-mod(0) id-pkix1-implicit-88(2)}\n\
    \  PKIStatusInfo, PKIStatusField FROM PKIXCMP {iso(1)\n  identified-organization(3)\
    \ dod(6) internet(1) security(5)\n  mechanisms(5) pkix(7) id-mod(0)\n  id-mod-cmp(9)}\n\
    \  ContentInfo FROM CryptographicMessageSyntax {iso(1)\n  member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n  smime(16) modules(0) cms(1)}\n  ESSCertID\
    \ FROM ExtendedSecurityServices\n  { iso(1) member-body(2) us(840) rsadsi(113549)\n\
    \  pkcs(1) pkcs-9(9) smime(16) modules(0) ess(2) }\n  CertId, OCSPResponse, CertStatus\n\
    \  FROM OCSP\n  {iso(1) identified-organization(3)\n  dod(6) internet(1) security(5)\
    \ mechanisms(5) pkix(7) id-mod(0)\n  id-mod-ocsp(14)}\n  SMIMECapabilities FROM\
    \ SecureMimeMessageV3\n  { iso(1) member-body(2) us(840) rsadsi(113549)\n   pkcs(1)\
    \ pkcs-9(9) smime(16) modules(0) smime(4) }\n  ;\n"
- title: -- Authority Information Access for DVCS
  contents:
  - '-- Authority Information Access for DVCS

    '
- title: id-ad-dvcs  OBJECT IDENTIFIER ::= {id-pkix id-ad(48) 4}
  contents:
  - 'id-ad-dvcs  OBJECT IDENTIFIER ::= {id-pkix id-ad(48) 4}

    '
- title: -- Key Purpose for DVCS
  contents:
  - '-- Key Purpose for DVCS

    '
- title: id-kp-dvcs  OBJECT IDENTIFIER ::= {id-pkix id-kp(3) 10}
  contents:
  - 'id-kp-dvcs  OBJECT IDENTIFIER ::= {id-pkix id-kp(3) 10}

    '
- title: -- eContentType for a dvcs requests and responses
  contents:
  - '-- eContentType for a dvcs requests and responses

    '
- title: id-ct-DVCSRequestData  OBJECT IDENTIFIER ::= { id-smime ct(1) 7 }
  contents:
  - 'id-ct-DVCSRequestData  OBJECT IDENTIFIER ::= { id-smime ct(1) 7 }

    '
- title: id-ct-DVCSResponseData OBJECT IDENTIFIER ::= { id-smime ct(1) 8 }
  contents:
  - 'id-ct-DVCSResponseData OBJECT IDENTIFIER ::= { id-smime ct(1) 8 }

    '
- title: -- Data validation certificate attribute
  contents:
  - '-- Data validation certificate attribute

    '
- title: id-aa-dvcs-dvc OBJECT IDENTIFIER ::= { id-smime aa(2) 29 }
  contents:
  - 'id-aa-dvcs-dvc OBJECT IDENTIFIER ::= { id-smime aa(2) 29 }

    '
- title: '-- using the following bases :'
  contents:
  - '-- using the following bases :

    '
- title: id-pkix     OBJECT IDENTIFIER ::= {iso(1)
  contents:
  - "id-pkix     OBJECT IDENTIFIER ::= {iso(1)\n               identified-organization(3)\
    \ dod(6)\n               internet(1) security(5) mechanisms(5) pkix(7)}\n"
- title: id-smime    OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-smime    OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n               us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) 16 }\n"
- title: Version ::= Integer
  contents:
  - 'Version ::= Integer

    '
- title: DigestInfo ::= SEQUENCE {
  contents:
  - "DigestInfo ::= SEQUENCE {\n    digestAlgorithm   DigestAlgorithmIdentifier,\n\
    \    digest            Digest\n"
- title: '}'
  contents:
  - '}

    '
- title: Digest ::= OCTET STRING
  contents:
  - 'Digest ::= OCTET STRING

    '
- title: Nonce ::= Integer
  contents:
  - 'Nonce ::= Integer

    '
- title: DVCSTime ::= CHOICE  {
  contents:
  - "DVCSTime ::= CHOICE  {\n     genTime                      GeneralizedTime,\n\
    \     timeStampToken               ContentInfo\n"
- title: '}'
  contents:
  - '}

    '
- title: TargetEtcChain ::= SEQUENCE {
  contents:
  - "TargetEtcChain ::= SEQUENCE {\n     target                       CertEtcToken,\n\
    \     chain                        SEQUENCE SIZE (1..MAX) OF\n               \
    \                      CertEtcToken OPTIONAL,\n     pathProcInput            \
    \    [0] PathProcInput OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: PathProcInput ::= SEQUENCE {
  contents:
  - "PathProcInput ::= SEQUENCE {\n     acceptablePolicySet          SEQUENCE SIZE\
    \ (1..MAX) OF\n                                     PolicyInformation,\n     inhibitPolicyMapping\
    \         BOOLEAN DEFAULT FALSE,\n     explicitPolicyReqd           BOOLEAN DEFAULT\
    \ FALSE\n"
- title: '}'
  contents:
  - '}

    '
- title: CertEtcToken ::= CHOICE {
  contents:
  - "CertEtcToken ::= CHOICE {\n     certificate                  [0] IMPLICIT Certificate\
    \ ,\n     esscertid                    [1] ESSCertId ,\n     pkistatus       \
    \             [2] IMPLICIT PKIStatusInfo ,\n     assertion                   \
    \ [3] ContentInfo ,\n     crl                          [4] IMPLICIT CertificateList,\n\
    \     ocspcertstatus               [5] IMPLICIT CertStatus,\n     oscpcertid \
    \                  [6] IMPLICIT CertId ,\n     oscpresponse                 [7]\
    \ IMPLICIT OCSPResponse,\n     capabilities                 [8] SMIMECapabilities,\n\
    \     extension                    Extension\n"
- title: '}'
  contents:
  - '}

    '
- title: DVCSRequestInformation ::= SEQUENCE  {
  contents:
  - "DVCSRequestInformation ::= SEQUENCE  {\n        version                     \
    \ INTEGER DEFAULT 1 ,\n        service                      ServiceType,\n   \
    \     nonce                        Nonce OPTIONAL,\n        requestTime      \
    \            DVCSTime OPTIONAL,\n        requester                    [0] GeneralNames\
    \ OPTIONAL,\n        requestPolicy                [1] PolicyInformation OPTIONAL,\n\
    \        dvcs                         [2] GeneralNames OPTIONAL,\n        dataLocations\
    \                [3] GeneralNames OPTIONAL,\n        extensions              \
    \     [4] IMPLICIT Extensions OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: ServiceType ::= ENUMERATED { cpd(1), vsd(2), cpkc(3), ccpd(4) }
  contents:
  - 'ServiceType ::= ENUMERATED { cpd(1), vsd(2), cpkc(3), ccpd(4) }

    '
- title: DVCSRequest ::= SEQUENCE  {
  contents:
  - "DVCSRequest ::= SEQUENCE  {\n    requestInformation         DVCSRequestInformation,\n\
    \    data                       Data,\n    transactionIdentifier      GeneralName\
    \ OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: Data ::= CHOICE {
  contents:
  - "Data ::= CHOICE {\n      message           OCTET STRING ,\n      messageImprint\
    \    DigestInfo,\n      certs             SEQUENCE SIZE (1..MAX) OF\n        \
    \                    TargetEtcChain\n"
- title: '}'
  contents:
  - '}

    '
- title: DVCSResponse ::= CHOICE
  contents:
  - 'DVCSResponse ::= CHOICE

    '
- title: '{'
  contents:
  - "{\n    dvCertInfo         DVCSCertInfo ,\n    dvErrorNote        [0] DVCSErrorNotice\n"
- title: '}'
  contents:
  - '}

    '
- title: DVCSCertInfo::= SEQUENCE  {
  contents:
  - "DVCSCertInfo::= SEQUENCE  {\n         version             Integer DEFAULT 1 ,\n\
    \         dvReqInfo           DVCSRequestInformation,\n         messageImprint\
    \      DigestInfo,\n         serialNumber        Integer,\n         responseTime\
    \        DVCSTime,\n         dvStatus            [0] PKIStatusInfo OPTIONAL,\n\
    \         policy              [1] PolicyInformation OPTIONAL,\n         reqSignature\
    \        [2] SignerInfos  OPTIONAL,\n         certs               [3] SEQUENCE\
    \ SIZE (1..MAX) OF\n                                 TargetEtcChain OPTIONAL,\n\
    \         extensions          Extensions OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: DVCSErrorNotice ::= SEQUENCE {
  contents:
  - "DVCSErrorNotice ::= SEQUENCE {\n    transactionStatus           PKIStatusInfo\
    \ ,\n    transactionIdentifier       GeneralName OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: END
  contents:
  - 'END

    '
- title: Appendix F - Examples
  contents:
  - "Appendix F - Examples\n   This chapter contains an example of a request and a\
    \ response of a\n   'Certify Claim of Possession of Data' transaction of the Clepsydre\n\
    \   Demonstration Project sponsored by La Poste, France.\n   The information has\
    \ been formatted with a slightly modified version\n   of Peter Gutmann's dumpasn1\
    \ program.\n   The response Data Validation Certificate contains the signing\n\
    \   certificate.\n   The data that are time stamped is the binary of the client\
    \ program\n   used to make the request.\n   Request:\n   0 30  582: SEQUENCE {\n\
    \   4 06    9:  OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n        \
    \    : . (PKCS #7)\n  15 A0  567:  [0] {\n  19 30  563: . SEQUENCE {\n  23 02\
    \    1: .  INTEGER 3\n  26 31   11: .  SET {\n  28 30    9: . . SEQUENCE {\n \
    \ 30 06    5: . .  OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n  37 05    0: . . \
    \ NULL\n            : . .  }\n            : . . }\n  39 30  153: .  SEQUENCE {\n\
    \  42 06   11: . . OBJECT IDENTIFIER\n            : . .  id-ct-DVCSRequestData\
    \ (1 2 840 113549 1 9 16 1 7)\n            : . .  (S/MIME Content Types (1 2 840\
    \ 113549 1 9 16 1))\n  55 A0  137: . . [0] {\n  58 04  134: . .  OCTET STRING,\
    \ encapsulates {\n  61 30  131: . . .  SEQUENCE {\n  64 30   96: . . . . SEQUENCE\
    \ {\n  66 0A    1: . . . .  ENUMERATED CCPD (4)\n  69 A0   77: . . . .  [0] {\n\
    \  71 A4   75: . . . . . [4] {\n  73 30   73: . . . . .  SEQUENCE {\n  75 31 \
    \  11: . . . . . . SET {\n  77 30    9: . . . . . .  SEQUENCE {\n  79 06    3:\
    \ . . . . . . . OBJECT IDENTIFIER\n            : . . . . . . .  countryName (2\
    \ 5 4 6)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n  84 13    2: .\
    \ . . . . . . PrintableString 'FR'\n            : . . . . . . . }\n          \
    \  : . . . . . .  }\n  88 31   14: . . . . . . SET {\n  90 30   12: . . . . .\
    \ .  SEQUENCE {\n  92 06    3: . . . . . . . OBJECT IDENTIFIER\n            :\
    \ . . . . . . .  localityName (2 5 4 7)\n            : . . . . . . .  (X.520 id-at\
    \ (2 5 4))\n  97 13    5: . . . . . . . PrintableString 'Paris'\n            :\
    \ . . . . . . . }\n            : . . . . . .  }\n 104 31   16: . . . . . . SET\
    \ {\n 106 30   14: . . . . . .  SEQUENCE {\n 108 06    3: . . . . . . . OBJECT\
    \ IDENTIFIER\n            : . . . . . . .  organizationName (2 5 4 10)\n     \
    \       : . . . . . . .  (X.520 id-at (2 5 4))\n 113 13    7: . . . . . . . PrintableString\
    \ 'EdelWeb'\n            : . . . . . . . }\n            : . . . . . .  }\n 122\
    \ 31   24: . . . . . . SET {\n 124 30   22: . . . . . .  SEQUENCE {\n 126 06 \
    \   3: . . . . . . . OBJECT IDENTIFIER\n            : . . . . . . .  commonName\
    \ (2 5 4 3)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n 131 13   15:\
    \ . . . . . . . PrintableString 'Peter Sylvester'\n            : . . . . . . .\
    \ }\n            : . . . . . .  }\n            : . . . . . . }\n            :\
    \ . . . . .  }\n            : . . . . . }\n 148 A1   12: . . . .  [1] {\n 150\
    \ 06   10: . . . . . OBJECT IDENTIFIER '1 3 6 1 4 1 5309 1 2 1'\n            :\
    \ . . . . . }\n            : . . . .  }\n 162 30   31: . . . . SEQUENCE {\n 164\
    \ 30    7: . . . .  SEQUENCE {\n 166 06    5: . . . . . OBJECT IDENTIFIER sha1\
    \ (1 3 14 3 2 26)\n            : . . . . .  (OIW)\n            : . . . . . }\n\
    \ 173 04   20: . . . .  OCTET STRING\n            : . . . .  75 B6 85 AF 6F 89\
    \ 46 7D E8 07 15 25 1E 45 97 8F\n            : . . . .  CD 1F A5 66\n        \
    \    : . . . .  }\n            : . . . . }\n            : . . .  }\n         \
    \   : . .  }\n            : . . }\n 195 31  387: .  SET {\n 199 30  383: . . SEQUENCE\
    \ {\n 203 02    1: . .  INTEGER 1\n 206 30  124: . .  SEQUENCE {\n 208 30  112:\
    \ . . . SEQUENCE {\n 210 31   11: . . .  SET {\n 212 30    9: . . . . SEQUENCE\
    \ {\n 214 06    3: . . . .  OBJECT IDENTIFIER countryName (2 5 4 6)\n        \
    \    : . . . . . (X.520 id-at (2 5 4))\n 219 13    2: . . . .  PrintableString\
    \ 'FR'\n            : . . . .  }\n            : . . . . }\n 223 31   21: . . .\
    \  SET {\n 225 30   19: . . . . SEQUENCE {\n 227 06    3: . . . .  OBJECT IDENTIFIER\
    \ organizationName (2 5 4 10)\n            : . . . . . (X.520 id-at (2 5 4))\n\
    \ 232 13   12: . . . .  PrintableString 'EdelWeb S.A.'\n            : . . . .\
    \  }\n            : . . . . }\n 246 31   40: . . .  SET {\n 248 30   38: . . .\
    \ . SEQUENCE {\n 250 06    3: . . . .  OBJECT IDENTIFIER\n            : . . .\
    \ . . organizationalUnitName (2 5 4 11)\n            : . . . . . (X.520 id-at\
    \ (2 5 4))\n 255 13 31: . . . .  PrintableString 'Clepsydre Demonstration Service'\n\
    \            : . . . .  }\n            : . . . . }\n 288 31   32: . . .  SET {\n\
    \ 290 30   30: . . . . SEQUENCE {\n 292 06    3: . . . .  OBJECT IDENTIFIER commonName\
    \ (2 5 4 3)\n            : . . . . . (X.520 id-at (2 5 4))\n 297 13   23: . .\
    \ . .  PrintableString 'Time Stamping Authority'\n            : . . . .  }\n \
    \           : . . . . }\n            : . . .  }\n 322 02    8: . . . INTEGER\n\
    \            : . . .  00 94 88 17 21 34 37 76\n            : . . . }\n 332 30\
    \    9: . .  SEQUENCE {\n 334 06    5: . . . OBJECT IDENTIFIER sha1 (1 3 14 3\
    \ 2 26)\n            : . . .  (OIW)\n 341 05    0: . . . NULL\n            : .\
    \ . . }\n 343 A0   95: . .  [0] {\n 345 30   26: . . . SEQUENCE {\n 347 06   \
    \ 9: . . .  OBJECT IDENTIFIER\n            : . . . . contentType (1 2 840 113549\
    \ 1 9 3)\n            : . . . . (PKCS #9 (1 2 840 113549 1 9))\n 358 31   13:\
    \ . . .  SET {\n 360 06   11: . . . . OBJECT IDENTIFIER\n            : . . . .\
    \  id-ct-dvcsrequest (1 2 840 113549 1 9 16 1 7)\n            : . . . .  (S/MIME\
    \ Content Types (1 2 840 113549 1 9 16 1))\n            : . . . . }\n        \
    \    : . . .  }\n 373 30   28: . . . SEQUENCE {\n 375 06    9: . . .  OBJECT IDENTIFIER\n\
    \            : . . . . signingTime (1 2 840 113549 1 9 5)\n            : . . .\
    \ . (PKCS #9 (1 2 840 113549 1 9))\n 386 31   15: . . .  SET {\n 388 17   13:\
    \ . . . . UTCTime '000417171457Z'\n            : . . . . }\n            : . .\
    \ .  }\n 403 30   35: . . . SEQUENCE {\n 405 06    9: . . .  OBJECT IDENTIFIER\n\
    \            : . . . . messageDigest (1 2 840 113549 1 9 4)\n            : . .\
    \ . . (PKCS #9 (1 2 840 113549 1 9))\n 416 31   22: . . .  SET {\n 418 04   20:\
    \ . . . . OCTET STRING\n            : . . . .  4D A8 C2 D2 CE 7C 0D 04 41 2F 44\
    \ 13 33 75 DB 2F\n            : . . . .  5B 2D F9 DC\n            : . . . . }\n\
    \            : . . .  }\n            : . . . }\n 440 30   13: . .  SEQUENCE {\n\
    \ 442 06    9: . . . OBJECT IDENTIFIER\n            : . . .  rsaEncryption (1\
    \ 2 840 113549 1 1 1)\n            : . . .  (PKCS #1)\n 453 05    0: . . . NULL\n\
    \            : . . . }\n 455 04  128: . .  OCTET STRING\n            : . . . 6E\
    \ 7B 0E 36 F5 08 5F 16 3C 31 7B 28 BB 0B C2 C6\n            : . . . 17 67 A6 B5\
    \ 54 F1 98 E2 6F 89 96 0E 0C 99 E6 CB\n            : . . . 40 C1 9B 8D D8 D7 8E\
    \ D3 2B 41 F7 16 26 5B B7 08\n            : . . . BF E6 95 B2 D9 01 6C FE B1 2C\
    \ 52 C1 5A D2 31 F3\n            : . . . 8E CA DD 11 A1 72 05 29 41 6A DD 28 40\
    \ AA 5C 77\n            : . . . C6 9D 1D 80 53 DB 6F 9C 4C A5 A3 8F 92 8B 18 3F\n\
    \            : . . . D5 3A AD 01 87 69 C3 FD D3 D8 C3 D0 CA 6B E6 0D\n       \
    \     : . . . 4E 53 6E 50 20 99 7C 94 C2 44 25 1B 06 C0 99 96\n            : .\
    \ .  }\n            : . . }\n            : .  }\n            : . }\n         \
    \   :  }\n"
- title: 'The corresponding data in PEM format are:'
  contents:
  - 'The corresponding data in PEM format are:

    '
- title: '-----BEGIN PKCS7-----'
  contents:
  - '-----BEGIN PKCS7-----

    '
- title: MIICRgYJKoZIhvcNAQcCoIICNzCCAjMCAQMxCzAJBgUrDgMCGgUAMIGZBgsqhkiG
  contents:
  - 'MIICRgYJKoZIhvcNAQcCoIICNzCCAjMCAQMxCzAJBgUrDgMCGgUAMIGZBgsqhkiG

    '
- title: 9w0BCRABB6CBiQSBhjCBgzBgCgEEoE2kSzBJMQswCQYDVQQGEwJGUjEOMAwGA1UE
  contents:
  - '9w0BCRABB6CBiQSBhjCBgzBgCgEEoE2kSzBJMQswCQYDVQQGEwJGUjEOMAwGA1UE

    '
- title: BxMFUGFyaXMxEDAOBgNVBAoTB0VkZWxXZWIxGDAWBgNVBAMTD1BldGVyIFN5bHZl
  contents:
  - 'BxMFUGFyaXMxEDAOBgNVBAoTB0VkZWxXZWIxGDAWBgNVBAMTD1BldGVyIFN5bHZl

    '
- title: c3RlcqEMBgorBgEEAak9AQIBMB8wBwYFKw4DAhoEFHW2ha9viUZ96AcVJR5Fl4/N
  contents:
  - 'c3RlcqEMBgorBgEEAak9AQIBMB8wBwYFKw4DAhoEFHW2ha9viUZ96AcVJR5Fl4/N

    '
- title: H6VmMYIBgzCCAX8CAQEwfDBwMQswCQYDVQQGEwJGUjEVMBMGA1UEChMMRWRlbFdl
  contents:
  - 'H6VmMYIBgzCCAX8CAQEwfDBwMQswCQYDVQQGEwJGUjEVMBMGA1UEChMMRWRlbFdl

    '
- title: YiBTLkEuMSgwJgYDVQQLEx9DbGVwc3lkcmUgRGVtb25zdHJhdGlvbiBTZXJ2aWNl
  contents:
  - 'YiBTLkEuMSgwJgYDVQQLEx9DbGVwc3lkcmUgRGVtb25zdHJhdGlvbiBTZXJ2aWNl

    '
- title: MSAwHgYDVQQDExdUaW1lIFN0YW1waW5nIEF1dGhvcml0eQIIAJSIFyE0N3YwCQYF
  contents:
  - 'MSAwHgYDVQQDExdUaW1lIFN0YW1waW5nIEF1dGhvcml0eQIIAJSIFyE0N3YwCQYF

    '
- title: Kw4DAhoFAKBfMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBzAcBgkqhkiG9w0B
  contents:
  - 'Kw4DAhoFAKBfMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBzAcBgkqhkiG9w0B

    '
- title: CQUxDxcNMDAwNDE3MTcxNDU3WjAjBgkqhkiG9w0BCQQxFgQUTajC0s58DQRBL0QT
  contents:
  - 'CQUxDxcNMDAwNDE3MTcxNDU3WjAjBgkqhkiG9w0BCQQxFgQUTajC0s58DQRBL0QT

    '
- title: M3XbL1st+dwwDQYJKoZIhvcNAQEBBQAEgYBuew429QhfFjwxeyi7C8LGF2emtVTx
  contents:
  - 'M3XbL1st+dwwDQYJKoZIhvcNAQEBBQAEgYBuew429QhfFjwxeyi7C8LGF2emtVTx

    '
- title: mOJviZYODJnmy0DBm43Y147TK0H3FiZbtwi/5pWy2QFs/rEsUsFa0jHzjsrdEaFy
  contents:
  - 'mOJviZYODJnmy0DBm43Y147TK0H3FiZbtwi/5pWy2QFs/rEsUsFa0jHzjsrdEaFy

    '
- title: BSlBat0oQKpcd8adHYBT22+cTKWjj5KLGD/VOq0Bh2nD/dPYw9DKa+YNTlNuUCCZ
  contents:
  - 'BSlBat0oQKpcd8adHYBT22+cTKWjj5KLGD/VOq0Bh2nD/dPYw9DKa+YNTlNuUCCZ

    '
- title: fJTCRCUbBsCZlg==
  contents:
  - 'fJTCRCUbBsCZlg==

    '
- title: '-----END PKCS7-----'
  contents:
  - '-----END PKCS7-----

    '
- title: 'Response:'
  contents:
  - "Response:\n   0 30 2039: SEQUENCE {\n   4 06    9:  OBJECT IDENTIFIER signedData\
    \ (1 2 840 113549 1 7 2)\n            : . (PKCS #7)\n  15 A0 2024:  [0] {\n  19\
    \ 30 2020: . SEQUENCE {\n  23 02    1: .  INTEGER 3\n  26 31   11: .  SET {\n\
    \  28 30    9: . . SEQUENCE {\n  30 06    5: . .  OBJECT IDENTIFIER sha1 (1 3\
    \ 14 3 2 26)\n            : . . . (OIW)\n  37 05    0: . .  NULL\n           \
    \ : . .  }\n            : . . }\n  39 30  301: .  SEQUENCE {\n  43 06   11: .\
    \ . OBJECT IDENTIFIER\n            : . .  id-ct-DVCSResponseData (1 2 840 113549\
    \ 1 9 16 1 8)\n            : . .  (S/MIME Content Types (1 2 840 113549 1 9 16\
    \ 1))\n  56 A0  284: . . [0] {\n  60 04  280: . .  OCTET STRING, encapsulates\
    \ {\n  64 30  276: . . .  SEQUENCE {\n  68 30  214: . . . . SEQUENCE {\n  71 0A\
    \    1: . . . .  ENUMERATED CCPD (4)\n  74 A0   77: . . . .  [0] {\n  76 A4  \
    \ 75: . . . . . [4] {\n  78 30   73: . . . . .  SEQUENCE {\n  80 31   11: . .\
    \ . . . . SET {\n  82 30    9: . . . . . .  SEQUENCE {\n  84 06    3: . . . .\
    \ . . . OBJECT IDENTIFIER\n            : . . . . . . .  countryName (2 5 4 6)\n\
    \            : . . . . . . .  (X.520 id-at (2 5 4))\n  89 13    2: . . . . . .\
    \ . PrintableString 'FR'\n            : . . . . . . . }\n            : . . . .\
    \ . .  }\n  93 31   14: . . . . . . SET {\n  95 30   12: . . . . . .  SEQUENCE\
    \ {\n  97 06    3: . . . . . . . OBJECT IDENTIFIER\n            : . . . . . .\
    \ .  localityName (2 5 4 7)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n\
    \ 102 13    5: . . . . . . . PrintableString 'Paris'\n            : . . . . .\
    \ . . }\n            : . . . . . .  }\n 109 31   16: . . . . . . SET {\n 111 30\
    \   14: . . . . . .  SEQUENCE {\n 113 06    3: . . . . . . . OBJECT IDENTIFIER\n\
    \            : . . . . . . .  organizationName (2 5 4 10)\n            : . . .\
    \ . . . .  (X.520 id-at (2 5 4))\n 118 13    7: . . . . . . . PrintableString\
    \ 'EdelWeb'\n            : . . . . . . . }\n            : . . . . . .  }\n 127\
    \ 31   24: . . . . . . SET {\n 129 30   22: . . . . . .  SEQUENCE {\n 131 06 \
    \   3: . . . . . . . OBJECT IDENTIFIER\n            : . . . . . . .  commonName\
    \ (2 5 4 3)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n 136 13   15:\
    \ . . . . . . . PrintableString 'Peter Sylvester'\n            : . . . . . . .\
    \ }\n            : . . . . . .  }\n            : . . . . . . }\n            :\
    \ . . . . .  }\n            : . . . . . }\n 153 A1   12: . . . .  [1] {\n 155\
    \ 06   10: . . . . . OBJECT IDENTIFIER '1 3 6 1 4 1 5309 1 2 1'\n            :\
    \ . . . . . }\n 167 A2  116: . . . .  [2] {\n 169 A4  114: . . . . . [4] {\n 171\
    \ 30  112: . . . . .  SEQUENCE {\n 173 31   11: . . . . . . SET {\n 175 30   \
    \ 9: . . . . . .  SEQUENCE {\n 177 06    3: . . . . . . . OBJECT IDENTIFIER\n\
    \            : . . . . . . .  countryName (2 5 4 6)\n            : . . . . . .\
    \ .  (X.520 id-at (2 5 4))\n 182 13    2: . . . . . . . PrintableString 'FR'\n\
    \            : . . . . . . . }\n            : . . . . . .  }\n 186 31   21: .\
    \ . . . . . SET {\n 188 30   19: . . . . . .  SEQUENCE {\n 190 06    3: . . .\
    \ . . . . OBJECT IDENTIFIER\n            : . . . . . . .  organizationName (2\
    \ 5 4 10)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n 195 13   12: .\
    \ . . . . . . PrintableString 'EdelWeb S.A.'\n            : . . . . . . . }\n\
    \            : . . . . . .  }\n 209 31   40: . . . . . . SET {\n 211 30   38:\
    \ . . . . . .  SEQUENCE {\n 213 06    3: . . . . . . . OBJECT IDENTIFIER\n   \
    \         : . . . . . . .  organizationalUnitName (2 5 4 11)\n            : .\
    \ . . . . . .  (X.520 id-at (2 5 4))\n 218 13 31: . . . . . PrintableString 'Clepsydre\
    \ Demonstration Service'\n            : . . . . . . . }\n            : . . . .\
    \ . .  }\n 251 31   32: . . . . . . SET {\n 253 30   30: . . . . . .  SEQUENCE\
    \ {\n 255 06    3: . . . . . . . OBJECT IDENTIFIER\n            : . . . . . .\
    \ .  commonName (2 5 4 3)\n            : . . . . . . .  (X.520 id-at (2 5 4))\n\
    \ 260 13   23: . . . . . . . PrintableString 'Time Stamping Authority'\n     \
    \       : . . . . . . . }\n            : . . . . . .  }\n            : . . . .\
    \ . . }\n            : . . . . .  }\n            : . . . . . }\n            :\
    \ . . . .  }\n 285 30   31: . . . . SEQUENCE {\n 287 30    7: . . . .  SEQUENCE\
    \ {\n 289 06    5: . . . . . OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n        \
    \    : . . . . . }\n 296 04   20: . . . .  OCTET STRING\n            : . . . .\
    \  75 B6 85 AF 6F 89 46 7D E8 07 15 25 1E 45 97 8F\n            : . . . .  CD\
    \ 1F A5 66\n            : . . . .  }\n 318 02    7: . . . . INTEGER\n        \
    \    : . . . .  01 78 0A 1E CA 88 23\n 327 18   15: . . . . GeneralizedTime '20000417171617Z'\n\
    \            : . . . . }\n            : . . .  }\n            : . .  }\n     \
    \       : . . }\n 344 A0  992: .  [0] {\n 348 30  988: . . SEQUENCE {\n 352 30\
    \  708: . .  SEQUENCE {\n 356 A0    3: . . . [0] {\n 358 02    1: . . .  INTEGER\
    \ 2\n            : . . .  }\n 361 02    8: . . . INTEGER\n            : . . .\
    \  00 94 88 17 17 64 37 32\n 371 30   13: . . . SEQUENCE {\n 373 06    9: . .\
    \ .  OBJECT IDENTIFIER\n            : . . . . md5withRSAEncryption (1 2 840 113549\
    \ 1 1 4)\n            : . . . . (PKCS #1)\n 384 05    0: . . .  NULL\n       \
    \     : . . .  }\n 386 30  112: . . . SEQUENCE {\n 388 31   11: . . .  SET {\n\
    \ 390 30    9: . . . . SEQUENCE {\n 392 06    3: . . . .  OBJECT IDENTIFIER countryName\
    \ (2 5 4 6)\n            : . . . . . (X.520 id-at (2 5 4))\n 397 13    2: . .\
    \ . .  PrintableString 'FR'\n            : . . . .  }\n            : . . . . }\n\
    \ 401 31   21: . . .  SET {\n 403 30   19: . . . . SEQUENCE {\n 405 06    3: .\
    \ . . .  OBJECT IDENTIFIER organizationName (2 5 4 10)\n            : . . . .\
    \ . (X.520 id-at (2 5 4))\n 410 13   12: . . . .  PrintableString 'EdelWeb S.A.'\n\
    \            : . . . .  }\n            : . . . . }\n 424 31   40: . . .  SET {\n\
    \ 426 30   38: . . . . SEQUENCE {\n 428 06    3: . . . .  OBJECT IDENTIFIER\n\
    \            : . . . . . organizationalUnitName (2 5 4 11)\n            : . .\
    \ . . . (X.520 id-at (2 5 4))\n 433 13 31: . . . .  PrintableString 'Clepsydre\
    \ Demonstration Service'\n            : . . . .  }\n            : . . . . }\n\
    \ 466 31   32: . . .  SET {\n 468 30   30: . . . . SEQUENCE {\n 470 06    3: .\
    \ . . .  OBJECT IDENTIFIER commonName (2 5 4 3)\n            : . . . . . (X.520\
    \ id-at (2 5 4))\n 475 13   23: . . . .  PrintableString 'Time Stamping Authority'\n\
    \            : . . . .  }\n            : . . . . }\n            : . . .  }\n 500\
    \ 30   30: . . . SEQUENCE {\n 502 17   13: . . .  UTCTime '000125161938Z'\n 517\
    \ 17   13: . . .  UTCTime '200120161938Z'\n            : . . .  }\n 532 30  112:\
    \ . . . SEQUENCE {\n 534 31   11: . . .  SET {\n 536 30    9: . . . . SEQUENCE\
    \ {\n 538 06    3: . . . .  OBJECT IDENTIFIER countryName (2 5 4 6)\n        \
    \    : . . . . . (X.520 id-at (2 5 4))\n 543 13    2: . . . .  PrintableString\
    \ 'FR'\n            : . . . .  }\n            : . . . . }\n 547 31   21: . . .\
    \  SET {\n 549 30   19: . . . . SEQUENCE {\n 551 06    3: . . . .  OBJECT IDENTIFIER\
    \ organizationName (2 5 4 10)\n            : . . . . . (X.520 id-at (2 5 4))\n\
    \ 556 13   12: . . . .  PrintableString 'EdelWeb S.A.'\n            : . . . .\
    \  }\n            : . . . . }\n 570 31   40: . . .  SET {\n 572 30   38: . . .\
    \ . SEQUENCE {\n 574 06    3: . . . .  OBJECT IDENTIFIER\n            : . . .\
    \ . . organizationalUnitName (2 5 4 11)\n            : . . . . . (X.520 id-at\
    \ (2 5 4))\n 579 13 31: . . . .  PrintableString 'Clepsydre Demonstration Service'\n\
    \            : . . . .  }\n            : . . . . }\n 612 31   32: . . .  SET {\n\
    \ 614 30   30: . . . . SEQUENCE {\n 616 06    3: . . . .  OBJECT IDENTIFIER commonName\
    \ (2 5 4 3)\n            : . . . . . (X.520 id-at (2 5 4))\n 621 13   23: . .\
    \ . .  PrintableString 'Time Stamping Authority'\n            : . . . .  }\n \
    \           : . . . . }\n            : . . .  }\n 646 30  290: . . . SEQUENCE\
    \ {\n 650 30   13: . . .  SEQUENCE {\n 652 06    9: . . . . OBJECT IDENTIFIER\n\
    \            : . . . .  rsaEncryption (1 2 840 113549 1 1 1)\n            : .\
    \ . . .  (PKCS #1)\n 663 05    0: . . . . NULL\n            : . . . . }\n 665\
    \ 03  271: . . .  BIT STRING 0 unused bits\n            : . . . . 30 82 01 0A\
    \ 02 82 01 01 00 FA C3 17 AE EB B7 9D\n            : . . . . EB AB BD 05 7E 39\
    \ 43 6D 04 45 58 74 05 A5 CC F3\n            : . . . . 6C 2F 8C 8E 77 7E C2 9F\
    \ 12 11 5C 7D DB BE 23 28\n            : . . . . 9A 90 D2 AB C6 A2 BA BD A3 7E\
    \ 99 A6 99 21 A5 D8\n            : . . . . 90 B9 CF A7 23 4E A0 56 A0 C1 0A 46\
    \ 89 8E 3C 91\n            : . . . . 67 37 FD 9B AB 49 17 FC 4A A5 F2 E4 4C 6E\
    \ E3 6A\n            : . . . . 1C 92 97 04 6F 7F 0C 5C FB 74 CB 95 7E 4C C3 58\n\
    \            : . . . . 12 E8 A9 D6 F0 DD 12 44 15 E7 8B 2E AF 51 C0 0C\n     \
    \       : . . . . . . [ Another 142 bytes skipped ]\n            : . . .  }\n\
    \ 940 A3  122: . . . [3] {\n 942 30  120: . . .  SEQUENCE {\n 944 30   15: . .\
    \ . . SEQUENCE {\n 946 06    3: . . . .  OBJECT IDENTIFIER basicConstraints (2\
    \ 5 29 19)\n            : . . . . . (X.509 id-ce (2 5 29))\n 951 04    8: . .\
    \ . .  OCTET STRING, encapsulates {\n 953 30    6: . . . . .  SEQUENCE {\n 955\
    \ 01    1: . . . . . . BOOLEAN TRUE\n 958 02    1: . . . . . . INTEGER 0\n   \
    \         : . . . . . . }\n            : . . . . .  }\n            : . . . . \
    \ }\n 961 30   22: . . . . SEQUENCE {\n 963 06    3: . . . .  OBJECT IDENTIFIER\
    \ extKeyUsage (2 5 29 37)\n            : . . . . . (X.509 id-ce (2 5 29))\n 968\
    \ 01    1: . . . .  BOOLEAN TRUE\n 971 04   12: . . . .  OCTET STRING, encapsulates\
    \ {\n 973 30   10: . . . . .  SEQUENCE {\n 975 06    8: . . . . . . OBJECT IDENTIFIER\
    \ '1 3 6 1 5 5 7 3 10'\n            : . . . . . . }\n            : . . . . . \
    \ }\n            : . . . .  }\n 985 30   77: . . . . SEQUENCE {\n 987 06    8:\
    \ . . . .  OBJECT IDENTIFIER\n            : . . . . . authorityInfoAccess (1 3\
    \ 6 1 5 5 7 1 1)\n            : . . . . . (PKIX private extension)\n 997 01  \
    \  1: . . . .  BOOLEAN TRUE\n"
- title: '1000 04   62: . . . .  OCTET STRING, encapsulates {'
  contents:
  - '1000 04   62: . . . .  OCTET STRING, encapsulates {

    '
- title: '1002 30   60: . . . . .  SEQUENCE {'
  contents:
  - '1002 30   60: . . . . .  SEQUENCE {

    '
- title: '1004 30   58: . . . . . . SEQUENCE {'
  contents:
  - '1004 30   58: . . . . . . SEQUENCE {

    '
- title: '1006 06    8: . . . . . .  OBJECT IDENTIFIER ''1 3 6 1 5 5 7 48 4'''
  contents:
  - '1006 06    8: . . . . . .  OBJECT IDENTIFIER ''1 3 6 1 5 5 7 48 4''

    '
- title: '1016 86   46: . . . . . .  [6]'
  contents:
  - "1016 86   46: . . . . . .  [6]\n            : . . . .  'https://clepsydre.edelweb.fr/dvcs/service-ccpd'\n\
    \            : . . . . . .  }\n            : . . . . . . }\n            : . .\
    \ . . .  }\n            : . . . .  }\n            : . . . . }\n            : .\
    \ . .  }\n            : . . . }\n"
- title: '1064 30   13: . .  SEQUENCE {'
  contents:
  - '1064 30   13: . .  SEQUENCE {

    '
- title: '1066 06    9: . . . OBJECT IDENTIFIER'
  contents:
  - "1066 06    9: . . . OBJECT IDENTIFIER\n            : . . .  md5withRSAEncryption\
    \ (1 2 840 113549 1 1 4)\n            : . . .  (PKCS #1)\n"
- title: '1077 05    0: . . . NULL'
  contents:
  - "1077 05    0: . . . NULL\n            : . . . }\n"
- title: '1079 03  257: . .  BIT STRING 0 unused bits'
  contents:
  - "1079 03  257: . .  BIT STRING 0 unused bits\n            : . . . 08 DA AF 5B\
    \ 09 39 66 D3 BE 80 1D D7 72 B5 2C A3\n            : . . . 04 FB 46 F8 05 F5 BF\
    \ 83 F3 6D 6D 32 28 1C 46 EE\n            : . . . 0F EA 30 61 8A 1E 8A 03 4E 98\
    \ 81 60 1F 97 17 53\n            : . . . D1 54 73 3F 72 98 45 D3 10 9A D3 77 B8\
    \ 74 0E 9A\n            : . . . 90 29 8E AC A4 EB D2 24 6D F6 21 1D 3F 52 8B 2C\n\
    \            : . . . E6 92 E7 52 C6 54 93 91 BC 57 74 21 38 39 75 CD\n       \
    \     : . . . 30 49 54 13 94 6C FE F1 64 38 1F 5F 7D BB E0 3E\n            : .\
    \ . . A8 F1 28 1C F1 D9 28 FA 32 1E 3B 48 BF 5C 70 21\n            : . . . . .\
    \ [ Another 128 bytes skipped ]\n            : . .  }\n            : . . }\n"
- title: '1340 31  699: .  SET {'
  contents:
  - '1340 31  699: .  SET {

    '
- title: '1344 30  695: . . SEQUENCE {'
  contents:
  - '1344 30  695: . . SEQUENCE {

    '
- title: '1348 02    1: . .  INTEGER 1'
  contents:
  - '1348 02    1: . .  INTEGER 1

    '
- title: '1351 30  124: . .  SEQUENCE {'
  contents:
  - '1351 30  124: . .  SEQUENCE {

    '
- title: '1353 30  112: . . . SEQUENCE {'
  contents:
  - '1353 30  112: . . . SEQUENCE {

    '
- title: '1355 31   11: . . .  SET {'
  contents:
  - '1355 31   11: . . .  SET {

    '
- title: '1357 30    9: . . . . SEQUENCE {'
  contents:
  - '1357 30    9: . . . . SEQUENCE {

    '
- title: '1359 06    3: . . . .  OBJECT IDENTIFIER countryName (2 5 4 6)'
  contents:
  - "1359 06    3: . . . .  OBJECT IDENTIFIER countryName (2 5 4 6)\n            :\
    \ . . . . . (X.520 id-at (2 5 4))\n"
- title: '1364 13    2: . . . .  PrintableString ''FR'''
  contents:
  - "1364 13    2: . . . .  PrintableString 'FR'\n            : . . . .  }\n     \
    \       : . . . . }\n"
- title: '1368 31   21: . . .  SET {'
  contents:
  - '1368 31   21: . . .  SET {

    '
- title: '1370 30   19: . . . . SEQUENCE {'
  contents:
  - '1370 30   19: . . . . SEQUENCE {

    '
- title: '1372 06    3: . . . .  OBJECT IDENTIFIER organizationName (2 5 4 10)'
  contents:
  - "1372 06    3: . . . .  OBJECT IDENTIFIER organizationName (2 5 4 10)\n      \
    \      : . . . . . (X.520 id-at (2 5 4))\n"
- title: '1377 13   12: . . . .  PrintableString ''EdelWeb S.A.'''
  contents:
  - "1377 13   12: . . . .  PrintableString 'EdelWeb S.A.'\n            : . . . .\
    \  }\n            : . . . . }\n"
- title: '1391 31   40: . . .  SET {'
  contents:
  - '1391 31   40: . . .  SET {

    '
- title: '1393 30   38: . . . . SEQUENCE {'
  contents:
  - '1393 30   38: . . . . SEQUENCE {

    '
- title: '1395 06    3: . . . .  OBJECT IDENTIFIER'
  contents:
  - "1395 06    3: . . . .  OBJECT IDENTIFIER\n            : . . . . . organizationalUnitName\
    \ (2 5 4 11)\n            : . . . . . (X.520 id-at (2 5 4))\n"
- title: '1400 13 31: . . . .  PrintableString ''Clepsydre Demonstration Service'''
  contents:
  - "1400 13 31: . . . .  PrintableString 'Clepsydre Demonstration Service'\n    \
    \        : . . . .  }\n            : . . . . }\n"
- title: '1433 31   32: . . .  SET {'
  contents:
  - '1433 31   32: . . .  SET {

    '
- title: '1435 30   30: . . . . SEQUENCE {'
  contents:
  - '1435 30   30: . . . . SEQUENCE {

    '
- title: '1437 06    3: . . . .  OBJECT IDENTIFIER commonName (2 5 4 3)'
  contents:
  - "1437 06    3: . . . .  OBJECT IDENTIFIER commonName (2 5 4 3)\n            :\
    \ . . . . . (X.520 id-at (2 5 4))\n"
- title: '1442 13   23: . . . .  PrintableString ''Time Stamping Authority'''
  contents:
  - "1442 13   23: . . . .  PrintableString 'Time Stamping Authority'\n          \
    \  : . . . .  }\n            : . . . . }\n            : . . .  }\n"
- title: '1467 02    8: . . . INTEGER'
  contents:
  - "1467 02    8: . . . INTEGER\n            : . . .  00 94 88 25 72 35 27 50\n \
    \           : . . . }\n"
- title: '1477 30    9: . .  SEQUENCE {'
  contents:
  - '1477 30    9: . .  SEQUENCE {

    '
- title: '1479 06    5: . . . OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)'
  contents:
  - "1479 06    5: . . . OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n            : . .\
    \ .  (OIW)\n"
- title: '1486 05    0: . . . NULL'
  contents:
  - "1486 05    0: . . . NULL\n            : . . . }\n"
- title: '1488 A0  276: . .  [0] {'
  contents:
  - '1488 A0  276: . .  [0] {

    '
- title: '1492 30   26: . . . SEQUENCE {'
  contents:
  - '1492 30   26: . . . SEQUENCE {

    '
- title: '1494 06    9: . . .  OBJECT IDENTIFIER'
  contents:
  - "1494 06    9: . . .  OBJECT IDENTIFIER\n            : . . . . contentType (1\
    \ 2 840 113549 1 9 3)\n            : . . . . (PKCS #9 (1 2 840 113549 1 9))\n"
- title: '1505 31   13: . . .  SET {'
  contents:
  - '1505 31   13: . . .  SET {

    '
- title: '1507 06   11: . . . . OBJECT IDENTIFIER'
  contents:
  - "1507 06   11: . . . . OBJECT IDENTIFIER\n            : . . . .  id-ct-dvcsresponse\
    \ (1 2 840 113549 1 9 16 1 8)\n            : . . . .  (S/MIME Content Types (1\
    \ 2 840 113549 1 9 16 1))\n            : . . . . }\n            : . . .  }\n"
- title: '1520 30   28: . . . SEQUENCE {'
  contents:
  - '1520 30   28: . . . SEQUENCE {

    '
- title: '1522 06    9: . . .  OBJECT IDENTIFIER'
  contents:
  - "1522 06    9: . . .  OBJECT IDENTIFIER\n            : . . . . signingTime (1\
    \ 2 840 113549 1 9 5)\n            : . . . . (PKCS #9 (1 2 840 113549 1 9))\n"
- title: '1533 31   15: . . .  SET {'
  contents:
  - '1533 31   15: . . .  SET {

    '
- title: '1535 17   13: . . . . UTCTime ''000417171619Z'''
  contents:
  - "1535 17   13: . . . . UTCTime '000417171619Z'\n            : . . . . }\n    \
    \        : . . .  }\n"
- title: '1550 30   35: . . . SEQUENCE {'
  contents:
  - '1550 30   35: . . . SEQUENCE {

    '
- title: '1552 06    9: . . .  OBJECT IDENTIFIER'
  contents:
  - "1552 06    9: . . .  OBJECT IDENTIFIER\n            : . . . . messageDigest (1\
    \ 2 840 113549 1 9 4)\n            : . . . . (PKCS #9 (1 2 840 113549 1 9))\n"
- title: '1563 31   22: . . .  SET {'
  contents:
  - '1563 31   22: . . .  SET {

    '
- title: '1565 04   20: . . . . OCTET STRING'
  contents:
  - "1565 04   20: . . . . OCTET STRING\n            : . . . .  68 50 DC 90 20 2E\
    \ C2 F0 55 15 7F 77 A9 A6 0C 34\n            : . . . .  CC 13 06 FA\n        \
    \    : . . . . }\n            : . . .  }\n"
- title: '1587 30  178: . . . SEQUENCE {'
  contents:
  - '1587 30  178: . . . SEQUENCE {

    '
- title: '1590 06   11: . . .  OBJECT IDENTIFIER'
  contents:
  - "1590 06   11: . . .  OBJECT IDENTIFIER\n          : . . . id-aa-signingCertificate\
    \ (1 2 840 113549 1 9 16 2 12)\n      : . . (S/MIME Authenticated Attributes (1\
    \ 2 840 113549 1 9 16 2))\n"
- title: '1603 31  162: . . .  SET {'
  contents:
  - '1603 31  162: . . .  SET {

    '
- title: '1606 30  159: . . . . SEQUENCE {'
  contents:
  - '1606 30  159: . . . . SEQUENCE {

    '
- title: '1609 30  156: . . . .  SEQUENCE {'
  contents:
  - '1609 30  156: . . . .  SEQUENCE {

    '
- title: '1612 30  153: . . . . . SEQUENCE {'
  contents:
  - '1612 30  153: . . . . . SEQUENCE {

    '
- title: '1615 04   20: . . . . .  OCTET STRING'
  contents:
  - "1615 04   20: . . . . .  OCTET STRING\n            : . . . .  5C F1 18 F3 4A\
    \ CA B4 67 D6 D8 E7 F8 3B 4A D9 7A\n            : . . . .  32 A5 43 A5\n"
- title: '1637 30  128: . . . . .  SEQUENCE {'
  contents:
  - '1637 30  128: . . . . .  SEQUENCE {

    '
- title: '1640 30  116: . . . . . . SEQUENCE {'
  contents:
  - '1640 30  116: . . . . . . SEQUENCE {

    '
- title: '1642 A4  114: . . . . . .  [4] {'
  contents:
  - '1642 A4  114: . . . . . .  [4] {

    '
- title: '1644 30  112: . . . . . . . SEQUENCE {'
  contents:
  - '1644 30  112: . . . . . . . SEQUENCE {

    '
- title: '1646 31   11: . . . . . . .  SET {'
  contents:
  - '1646 31   11: . . . . . . .  SET {

    '
- title: '1648 30    9: . . . . . . . . SEQUENCE {'
  contents:
  - '1648 30    9: . . . . . . . . SEQUENCE {

    '
- title: '1650 06    3: . . . . . . . .  OBJECT IDENTIFIER'
  contents:
  - "1650 06    3: . . . . . . . .  OBJECT IDENTIFIER\n            : . . . . . . .\
    \ . . countryName (2 5 4 6)\n            : . . . . . . . . . (X.520 id-at (2 5\
    \ 4))\n"
- title: '1655 13    2: . . . . . . . .  PrintableString ''FR'''
  contents:
  - "1655 13    2: . . . . . . . .  PrintableString 'FR'\n            : . . . . .\
    \ . . .  }\n            : . . . . . . . . }\n"
- title: '1659 31   21: . . . . . . .  SET {'
  contents:
  - '1659 31   21: . . . . . . .  SET {

    '
- title: '1661 30   19: . . . . . . . . SEQUENCE {'
  contents:
  - '1661 30   19: . . . . . . . . SEQUENCE {

    '
- title: '1663 06    3: . . . . . . . .  OBJECT IDENTIFIER'
  contents:
  - "1663 06    3: . . . . . . . .  OBJECT IDENTIFIER\n            : . . . . . . .\
    \ . . organizationName (2 5 4 10)\n            : . . . . . . . . . (X.520 id-at\
    \ (2 5 4))\n"
- title: '1668 13   12: . . . . . . . .  PrintableString ''EdelWeb S.A.'''
  contents:
  - "1668 13   12: . . . . . . . .  PrintableString 'EdelWeb S.A.'\n            :\
    \ . . . . . . . .  }\n            : . . . . . . . . }\n"
- title: '1682 31   40: . . . . . . .  SET {'
  contents:
  - '1682 31   40: . . . . . . .  SET {

    '
- title: '1684 30   38: . . . . . . . . SEQUENCE {'
  contents:
  - '1684 30   38: . . . . . . . . SEQUENCE {

    '
- title: '1686 06    3: . . . . . . . .  OBJECT IDENTIFIER'
  contents:
  - "1686 06    3: . . . . . . . .  OBJECT IDENTIFIER\n            : . . . . . . .\
    \ . . organizationalUnitName (2 5 4 11)\n            : . . . . . . . . . (X.520\
    \ id-at (2 5 4))\n"
- title: '1691 13 31: . . . . .PrintableString ''Clepsydre Demonstration Service'''
  contents:
  - "1691 13 31: . . . . .PrintableString 'Clepsydre Demonstration Service'\n    \
    \        : . . . . . . . .  }\n            : . . . . . . . . }\n"
- title: '1724 31   32: . . . . . . .  SET {'
  contents:
  - '1724 31   32: . . . . . . .  SET {

    '
- title: '1726 30   30: . . . . . . . . SEQUENCE {'
  contents:
  - '1726 30   30: . . . . . . . . SEQUENCE {

    '
- title: '1728 06    3: . . . . . . . .  OBJECT IDENTIFIER'
  contents:
  - "1728 06    3: . . . . . . . .  OBJECT IDENTIFIER\n            : . . . . . . .\
    \ . . commonName (2 5 4 3)\n            : . . . . . . . . . (X.520 id-at (2 5\
    \ 4))\n"
- title: '1733 13 23: . . . . . . . .  PrintableString ''Time Stamping Authority'''
  contents:
  - "1733 13 23: . . . . . . . .  PrintableString 'Time Stamping Authority'\n    \
    \        : . . . . . . . .  }\n            : . . . . . . . . }\n            :\
    \ . . . . . . .  }\n            : . . . . . . . }\n            : . . . . . . \
    \ }\n"
- title: '1758 02    8: . . . . . . INTEGER'
  contents:
  - "1758 02    8: . . . . . . INTEGER\n            : . . . .  00 94 88 25 72 35 27\
    \ 50\n            : . . . . . . }\n            : . . . . .  }\n            : .\
    \ . . . . }\n            : . . . .  }\n            : . . . . }\n            :\
    \ . . .  }\n            : . . . }\n"
- title: '1768 30   13: . .  SEQUENCE {'
  contents:
  - '1768 30   13: . .  SEQUENCE {

    '
- title: '1770 06    9: . . . OBJECT IDENTIFIER'
  contents:
  - "1770 06    9: . . . OBJECT IDENTIFIER\n            : . . .  rsaEncryption (1\
    \ 2 840 113549 1 1 1)\n            : . . .  (PKCS #1)\n"
- title: '1781 05    0: . . . NULL'
  contents:
  - "1781 05    0: . . . NULL\n            : . . . }\n"
- title: '1783 04  256: . .  OCTET STRING'
  contents:
  - "1783 04  256: . .  OCTET STRING\n            : . . . 2E 70 9F 56 5E 01 56 A9\
    \ E1 47 81 12 35 21 29 09\n            : . . . 16 7A ED 45 F9 5A A2 ED E4 FE 9D\
    \ 2C E4 DA 12 66\n            : . . . 62 14 59 61 8B 50 7B 01 82 3D BD 7E E6 38\
    \ D0 A8\n            : . . . A0 37 98 79 13 26 39 29 C6 72 20 A9 95 71 E7 53\n\
    \            : . . . 7F 79 77 98 EF 23 02 4E B9 BD 90 9B AC 05 A2 70\n       \
    \     : . . . 8F 3A 42 36 9C 2C B0 94 B1 2B 0B 36 94 0E 78 0E\n            : .\
    \ . . B0 D1 09 20 63 BC FF CD 32 F1 5A D3 AB 9F 93 9C\n            : . . . 5A\
    \ A3 58 99 A0 28 11 E0 80 4D 4D 1E 77 04 F4 50\n            : . . . . . [ Another\
    \ 128 bytes skipped ]\n            : . .  }\n            : . . }\n           \
    \ : .  }\n            : . }\n            :  }\n"
- title: The corresponding data in PEM format (together with a technical textual
  contents:
  - 'The corresponding data in PEM format (together with a technical textual

    '
- title: 'description) are:'
  contents:
  - 'description) are:

    '
- title: 'Data Validation Certificate:'
  contents:
  - "Data Validation Certificate:\n    Request Information:\n      Service: Certify\
    \ Claim of Possession of Data - ccpd(4)\n      Policy: EdelWeb Customer Policy\
    \ Clepsydre\n      Requester:\n        DirName:/C=FR/L=Paris/O=EdelWeb/CN=Peter\
    \ Sylvester\n      DVCS:\n        DirName:/C=FR/O=EdelWeb S.A./\n  OU=Clepsydre\
    \ Demonstration Service/CN=Time Stamping Authority\n    SerialNumber: 01780a1eca8823\n\
    \    MessageDigest:\n      Algorithm: sha1\n      Data     : 75B685AF6F89467DE80715251E45978FCD1FA566\n\
    \    Asserted Time:\n      Generalized Time: 17-Apr-2000 19:16:17 (Apr 17 17:16:17\
    \ 2000 GMT)\n"
- title: 'Certificate:'
  contents:
  - "Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n \
    \           94:88:17:17:64:37:32\n        Signature Algorithm: md5WithRSAEncryption\n\
    \        Issuer: C=FR, O=EdelWeb S.A.,\n    OU=Clepsydre Demonstration Service,\
    \ CN=Time Stamping Authority\n        Validity\n            Not Before: Jan 25\
    \ 16:19:38 2000 GMT\n            Not After : Jan 20 16:19:38 2020 GMT\n      \
    \  Subject: C=FR, O=EdelWeb S.A.,\n    OU=Clepsydre Demonstration Service, CN=Time\
    \ Stamping Authority\n        Subject Public Key Info:\n            Public Key\
    \ Algorithm: rsaEncryption\n            RSA Public Key: (2048 bit)\n         \
    \       Modulus (2048 bit):\n                    00:fa:c3:17:ae:eb:b7:9d:eb:ab:bd:05:7e:39:43:\n\
    \                    6d:04:45:58:74:05:a5:cc:f3:6c:2f:8c:8e:77:7e:\n         \
    \           c2:9f:12:11:5c:7d:db:be:23:28:9a:90:d2:ab:c6:\n                  \
    \  a2:ba:bd:a3:7e:99:a6:99:21:a5:d8:90:b9:cf:a7:\n                    23:4e:a0:56:a0:c1:0a:46:89:8e:3c:91:67:37:fd:\n\
    \                    9b:ab:49:17:fc:4a:a5:f2:e4:4c:6e:e3:6a:1c:92:\n         \
    \           97:04:6f:7f:0c:5c:fb:74:cb:95:7e:4c:c3:58:12:\n                  \
    \  e8:a9:d6:f0:dd:12:44:15:e7:8b:2e:af:51:c0:0c:\n                    5f:a8:65:fc:47:a1:c9:98:1f:d4:e1:ea:bc:1c:1a:\n\
    \                    27:bb:8b:56:f1:12:55:10:f4:8e:d8:9f:19:9c:1e:\n         \
    \           81:f7:db:63:dd:88:37:3f:71:79:5b:96:e2:5f:82:\n                  \
    \  d5:12:19:05:0d:e1:3d:a5:6d:66:e4:2c:1e:ed:c7:\n                    4c:b8:df:aa:38:c8:15:6a:ae:25:7d:46:2a:07:f9:\n\
    \                    83:77:c4:51:ee:90:dc:05:d0:c3:f0:f1:5f:e8:d4:\n         \
    \           ed:5d:34:70:91:9d:9f:08:55:7d:5b:e5:8d:5f:35:\n                  \
    \  59:83:4e:72:19:bb:9c:88:d1:7a:fc:23:a5:84:99:\n                    b4:17:8a:4d:6c:9d:d0:a6:35:80:5f:ca:fb:24:8b:\n\
    \                    54:1d\n                Exponent: 65537 (0x10001)\n      \
    \  X509v3 extensions:\n            X509v3 Basic Constraints:\n               \
    \ CA:TRUE, pathlen:0\n            X509v3 Extended Key Usage: critical\n      \
    \          DVCS Signing\n            Authority Information Access: critical\n\
    \         DVCS - URI:https://clepsydre.edelweb.fr/dvcs/service-ccpd\n    Signature\
    \ Algorithm: md5WithRSAEncryption\n        08:da:af:5b:09:39:66:d3:be:80:1d:d7:72:b5:2c:a3:04:fb:\n\
    \        46:f8:05:f5:bf:83:f3:6d:6d:32:28:1c:46:ee:0f:ea:30:61:\n        8a:1e:8a:03:4e:98:81:60:1f:97:17:53:d1:54:73:3f:72:98:\n\
    \        45:d3:10:9a:d3:77:b8:74:0e:9a:90:29:8e:ac:a4:eb:d2:24:\n        6d:f6:21:1d:3f:52:8b:2c:e6:92:e7:52:c6:54:93:91:bc:57:\n\
    \        74:21:38:39:75:cd:30:49:54:13:94:6c:fe:f1:64:38:1f:5f:\n        7d:bb:e0:3e:a8:f1:28:1c:f1:d9:28:fa:32:1e:3b:48:bf:5c:\n\
    \        70:21:29:ef:be:72:24:da:0d:f9:51:7a:fe:d7:f5:ff:e8:c2:\n        ea:c6:4c:45:14:51:53:fd:00:d5:5b:cc:67:2a:23:94:31:9e:\n\
    \        c2:90:38:9b:b0:df:f9:de:67:0c:57:5c:d7:b0:fc:f2:72:96:\n        c4:d1:7a:9d:a0:e6:51:24:99:9e:89:c6:39:f9:72:7a:44:fd:\n\
    \        2d:3f:bc:df:c7:25:27:94:a1:b5:7d:ba:06:75:67:1c:95:6c:\n        bd:2c:74:41:3e:cd:cd:39:5c:2e:9c:c3:c3:09:e3:79:d5:eb:\n\
    \        85:e8:f1:72:29:80:f6:c6:6e:61:1b:58:fc:87:3e:d9:e1:53:\n        10:e0:b1:05\n"
- title: '-----BEGIN PKCS7-----'
  contents:
  - '-----BEGIN PKCS7-----

    '
- title: MIIH9wYJKoZIhvcNAQcCoIIH6DCCB+QCAQMxCzAJBgUrDgMCGgUAMIIBLQYLKoZI
  contents:
  - 'MIIH9wYJKoZIhvcNAQcCoIIH6DCCB+QCAQMxCzAJBgUrDgMCGgUAMIIBLQYLKoZI

    '
- title: hvcNAQkQAQigggEcBIIBGDCCARQwgdYKAQSgTaRLMEkxCzAJBgNVBAYTAkZSMQ4w
  contents:
  - 'hvcNAQkQAQigggEcBIIBGDCCARQwgdYKAQSgTaRLMEkxCzAJBgNVBAYTAkZSMQ4w

    '
- title: DAYDVQQHEwVQYXJpczEQMA4GA1UEChMHRWRlbFdlYjEYMBYGA1UEAxMPUGV0ZXIg
  contents:
  - 'DAYDVQQHEwVQYXJpczEQMA4GA1UEChMHRWRlbFdlYjEYMBYGA1UEAxMPUGV0ZXIg

    '
- title: U3lsdmVzdGVyoQwGCisGAQQBqT0BAgGidKRyMHAxCzAJBgNVBAYTAkZSMRUwEwYD
  contents:
  - 'U3lsdmVzdGVyoQwGCisGAQQBqT0BAgGidKRyMHAxCzAJBgNVBAYTAkZSMRUwEwYD

    '
- title: VQQKEwxFZGVsV2ViIFMuQS4xKDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0
  contents:
  - 'VQQKEwxFZGVsV2ViIFMuQS4xKDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0

    '
- title: aW9uIFNlcnZpY2UxIDAeBgNVBAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5MB8w
  contents:
  - 'aW9uIFNlcnZpY2UxIDAeBgNVBAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5MB8w

    '
- title: BwYFKw4DAhoEFHW2ha9viUZ96AcVJR5Fl4/NH6VmAgcBeAoeyogjGA8yMDAwMDQx
  contents:
  - 'BwYFKw4DAhoEFHW2ha9viUZ96AcVJR5Fl4/NH6VmAgcBeAoeyogjGA8yMDAwMDQx

    '
- title: NzE3MTYxN1qgggPgMIID3DCCAsSgAwIBAgIIAJSIFxdkNzIwDQYJKoZIhvcNAQEE
  contents:
  - 'NzE3MTYxN1qgggPgMIID3DCCAsSgAwIBAgIIAJSIFxdkNzIwDQYJKoZIhvcNAQEE

    '
- title: BQAwcDELMAkGA1UEBhMCRlIxFTATBgNVBAoTDEVkZWxXZWIgUy5BLjEoMCYGA1UE
  contents:
  - 'BQAwcDELMAkGA1UEBhMCRlIxFTATBgNVBAoTDEVkZWxXZWIgUy5BLjEoMCYGA1UE

    '
- title: CxMfQ2xlcHN5ZHJlIERlbW9uc3RyYXRpb24gU2VydmljZTEgMB4GA1UEAxMXVGlt
  contents:
  - 'CxMfQ2xlcHN5ZHJlIERlbW9uc3RyYXRpb24gU2VydmljZTEgMB4GA1UEAxMXVGlt

    '
- title: ZSBTdGFtcGluZyBBdXRob3JpdHkwHhcNMDAwMTI1MTYxOTM4WhcNMjAwMTIwMTYx
  contents:
  - 'ZSBTdGFtcGluZyBBdXRob3JpdHkwHhcNMDAwMTI1MTYxOTM4WhcNMjAwMTIwMTYx

    '
- title: OTM4WjBwMQswCQYDVQQGEwJGUjEVMBMGA1UEChMMRWRlbFdlYiBTLkEuMSgwJgYD
  contents:
  - 'OTM4WjBwMQswCQYDVQQGEwJGUjEVMBMGA1UEChMMRWRlbFdlYiBTLkEuMSgwJgYD

    '
- title: VQQLEx9DbGVwc3lkcmUgRGVtb25zdHJhdGlvbiBTZXJ2aWNlMSAwHgYDVQQDExdU
  contents:
  - 'VQQLEx9DbGVwc3lkcmUgRGVtb25zdHJhdGlvbiBTZXJ2aWNlMSAwHgYDVQQDExdU

    '
- title: aW1lIFN0YW1waW5nIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
  contents:
  - 'aW1lIFN0YW1waW5nIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC

    '
- title: AQoCggEBAPrDF67rt53rq70FfjlDbQRFWHQFpczzbC+Mjnd+wp8SEVx9274jKJqQ
  contents:
  - 'AQoCggEBAPrDF67rt53rq70FfjlDbQRFWHQFpczzbC+Mjnd+wp8SEVx9274jKJqQ

    '
- title: 0qvGorq9o36ZppkhpdiQuc+nI06gVqDBCkaJjjyRZzf9m6tJF/xKpfLkTG7jahyS
  contents:
  - '0qvGorq9o36ZppkhpdiQuc+nI06gVqDBCkaJjjyRZzf9m6tJF/xKpfLkTG7jahyS

    '
- title: lwRvfwxc+3TLlX5Mw1gS6KnW8N0SRBXniy6vUcAMX6hl/EehyZgf1OHqvBwaJ7uL
  contents:
  - 'lwRvfwxc+3TLlX5Mw1gS6KnW8N0SRBXniy6vUcAMX6hl/EehyZgf1OHqvBwaJ7uL

    '
- title: VvESVRD0jtifGZwegffbY92INz9xeVuW4l+C1RIZBQ3hPaVtZuQsHu3HTLjfqjjI
  contents:
  - 'VvESVRD0jtifGZwegffbY92INz9xeVuW4l+C1RIZBQ3hPaVtZuQsHu3HTLjfqjjI

    '
- title: FWquJX1GKgf5g3fEUe6Q3AXQw/DxX+jU7V00cJGdnwhVfVvljV81WYNOchm7nIjR
  contents:
  - 'FWquJX1GKgf5g3fEUe6Q3AXQw/DxX+jU7V00cJGdnwhVfVvljV81WYNOchm7nIjR

    '
- title: evwjpYSZtBeKTWyd0KY1gF/K+ySLVB0CAwEAAaN6MHgwDwYDVR0TBAgwBgEB/wIB
  contents:
  - 'evwjpYSZtBeKTWyd0KY1gF/K+ySLVB0CAwEAAaN6MHgwDwYDVR0TBAgwBgEB/wIB

    '
- title: ADAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCjBNBggrBgEFBQcBAQEB/wQ+MDwwOgYI
  contents:
  - 'ADAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCjBNBggrBgEFBQcBAQEB/wQ+MDwwOgYI

    '
- title: KwYBBQUHMASGLmh0dHBzOi8vY2xlcHN5ZHJlLmVkZWx3ZWIuZnIvZHZjcy9zZXJ2
  contents:
  - 'KwYBBQUHMASGLmh0dHBzOi8vY2xlcHN5ZHJlLmVkZWx3ZWIuZnIvZHZjcy9zZXJ2

    '
- title: aWNlLWNjcGQwDQYJKoZIhvcNAQEEBQADggEBAAjar1sJOWbTvoAd13K1LKME+0b4
  contents:
  - 'aWNlLWNjcGQwDQYJKoZIhvcNAQEEBQADggEBAAjar1sJOWbTvoAd13K1LKME+0b4

    '
- title: BfW/g/NtbTIoHEbuD+owYYoeigNOmIFgH5cXU9FUcz9ymEXTEJrTd7h0DpqQKY6s
  contents:
  - 'BfW/g/NtbTIoHEbuD+owYYoeigNOmIFgH5cXU9FUcz9ymEXTEJrTd7h0DpqQKY6s

    '
- title: pOvSJG32IR0/Uoss5pLnUsZUk5G8V3QhODl1zTBJVBOUbP7xZDgfX3274D6o8Sgc
  contents:
  - 'pOvSJG32IR0/Uoss5pLnUsZUk5G8V3QhODl1zTBJVBOUbP7xZDgfX3274D6o8Sgc

    '
- title: 8dko+jIeO0i/XHAhKe++ciTaDflRev7X9f/owurGTEUUUVP9ANVbzGcqI5QxnsKQ
  contents:
  - '8dko+jIeO0i/XHAhKe++ciTaDflRev7X9f/owurGTEUUUVP9ANVbzGcqI5QxnsKQ

    '
- title: OJuw3/neZwxXXNew/PJylsTRep2g5lEkmZ6Jxjn5cnpE/S0/vN/HJSeUobV9ugZ1
  contents:
  - 'OJuw3/neZwxXXNew/PJylsTRep2g5lEkmZ6Jxjn5cnpE/S0/vN/HJSeUobV9ugZ1

    '
- title: ZxyVbL0sdEE+zc05XC6cw8MJ43nV64Xo8XIpgPbGbmEbWPyHPtnhUxDgsQUxggK7
  contents:
  - 'ZxyVbL0sdEE+zc05XC6cw8MJ43nV64Xo8XIpgPbGbmEbWPyHPtnhUxDgsQUxggK7

    '
- title: MIICtwIBATB8MHAxCzAJBgNVBAYTAkZSMRUwEwYDVQQKEwxFZGVsV2ViIFMuQS4x
  contents:
  - 'MIICtwIBATB8MHAxCzAJBgNVBAYTAkZSMRUwEwYDVQQKEwxFZGVsV2ViIFMuQS4x

    '
- title: KDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0aW9uIFNlcnZpY2UxIDAeBgNV
  contents:
  - 'KDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0aW9uIFNlcnZpY2UxIDAeBgNV

    '
- title: BAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5AggAlIglcjUnUDAJBgUrDgMCGgUA
  contents:
  - 'BAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5AggAlIglcjUnUDAJBgUrDgMCGgUA

    '
- title: oIIBFDAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQgwHAYJKoZIhvcNAQkFMQ8X
  contents:
  - 'oIIBFDAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQgwHAYJKoZIhvcNAQkFMQ8X

    '
- title: DTAwMDQxNzE3MTYxOVowIwYJKoZIhvcNAQkEMRYEFGhQ3JAgLsLwVRV/d6mmDDTM
  contents:
  - 'DTAwMDQxNzE3MTYxOVowIwYJKoZIhvcNAQkEMRYEFGhQ3JAgLsLwVRV/d6mmDDTM

    '
- title: Ewb6MIGyBgsqhkiG9w0BCRACDDGBojCBnzCBnDCBmQQUXPEY80rKtGfW2Of4O0rZ
  contents:
  - 'Ewb6MIGyBgsqhkiG9w0BCRACDDGBojCBnzCBnDCBmQQUXPEY80rKtGfW2Of4O0rZ

    '
- title: ejKlQ6UwgYAwdKRyMHAxCzAJBgNVBAYTAkZSMRUwEwYDVQQKEwxFZGVsV2ViIFMu
  contents:
  - 'ejKlQ6UwgYAwdKRyMHAxCzAJBgNVBAYTAkZSMRUwEwYDVQQKEwxFZGVsV2ViIFMu

    '
- title: QS4xKDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0aW9uIFNlcnZpY2UxIDAe
  contents:
  - 'QS4xKDAmBgNVBAsTH0NsZXBzeWRyZSBEZW1vbnN0cmF0aW9uIFNlcnZpY2UxIDAe

    '
- title: BgNVBAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5AggAlIglcjUnUDANBgkqhkiG
  contents:
  - 'BgNVBAMTF1RpbWUgU3RhbXBpbmcgQXV0aG9yaXR5AggAlIglcjUnUDANBgkqhkiG

    '
- title: 9w0BAQEFAASCAQAucJ9WXgFWqeFHgRI1ISkJFnrtRflaou3k/p0s5NoSZmIUWWGL
  contents:
  - '9w0BAQEFAASCAQAucJ9WXgFWqeFHgRI1ISkJFnrtRflaou3k/p0s5NoSZmIUWWGL

    '
- title: UHsBgj29fuY40KigN5h5EyY5KcZyIKmVcedTf3l3mO8jAk65vZCbrAWicI86Qjac
  contents:
  - 'UHsBgj29fuY40KigN5h5EyY5KcZyIKmVcedTf3l3mO8jAk65vZCbrAWicI86Qjac

    '
- title: LLCUsSsLNpQOeA6w0QkgY7z/zTLxWtOrn5OcWqNYmaAoEeCATU0edwT0UAfVi1Sg
  contents:
  - 'LLCUsSsLNpQOeA6w0QkgY7z/zTLxWtOrn5OcWqNYmaAoEeCATU0edwT0UAfVi1Sg

    '
- title: IzL/ppziurjbVUfJyLoH75AUSKi2xXzVqSB0HFbvjxuz/IdtgfHUbxqHMJJHaeB5
  contents:
  - 'IzL/ppziurjbVUfJyLoH75AUSKi2xXzVqSB0HFbvjxuz/IdtgfHUbxqHMJJHaeB5

    '
- title: 4LwQmc9NNkw2A1Fy0VumHi2G8R8K6L/rOPnOGuywj1GuKjtGhL9NjJ/uH+/FNaNj
  contents:
  - '4LwQmc9NNkw2A1Fy0VumHi2G8R8K6L/rOPnOGuywj1GuKjtGhL9NjJ/uH+/FNaNj

    '
- title: vjjAA3w6XrjPOxgQiNu7T3j2++QcjdT4++tQ
  contents:
  - 'vjjAA3w6XrjPOxgQiNu7T3j2++QcjdT4++tQ

    '
- title: '-----END PKCS7-----'
  contents:
  - '-----END PKCS7-----

    '
- title: Appendix G - Acknowledgements
  contents:
  - "Appendix G - Acknowledgements\n   This document is based on two initial works\
    \ from Robert Zuccherato\n   and Carlisle Adams, both at Entrust Technologies,\
    \ for time stamping\n   and for notary and data certification services.\n   Thanks\
    \ to Denis Pinkas, Bull and Bruno Salgueiro, SIBS for valuable\n   comments.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
