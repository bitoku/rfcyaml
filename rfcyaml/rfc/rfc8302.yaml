- contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n              ARP
    and Neighbor Discovery (ND) Optimization\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes mechanisms to optimize the Address Resolution\n
    \  Protocol (ARP) and Neighbor Discovery (ND) traffic in a Transparent\n   Interconnection
    of Lots of Links (TRILL) campus.  TRILL switches\n   maintain a cache of IP /
    Media Access Control (MAC) address / Data\n   Label bindings that are learned
    from ARP/ND requests and responses\n   that pass through them.  In many cases,
    this cache allows an edge\n   Routing Bridge (RBridge) to avoid flooding an ARP/ND
    request by\n   either responding to it directly or encapsulating it and unicasting\n
    \  it.  Such optimization reduces packet flooding over a TRILL campus.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8302.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   2.  ARP/ND Optimization Requirement and Solution  . . . . . . .
    .   4\n   3.  IP/MAC Address Mappings . . . . . . . . . . . . . . . . . . .   5\n
    \  4.  Handling ARP/ND/SEND Messages . . . . . . . . . . . . . . . .   6\n     4.1.
    \ SEND Considerations . . . . . . . . . . . . . . . . . . .   7\n     4.2.  Address
    Verification  . . . . . . . . . . . . . . . . . .   7\n     4.3.  Extracting Local
    Mapping Information for End-Station\n           IP/MAC Addresses  . . . . . .
    . . . . . . . . . . . . . .   8\n     4.4.  Determining How to Reply to ARP/ND
    \ . . . . . . . . . . .   9\n     4.5.  Determining How to Handle the ARP/ND Response
    . . . . . .  10\n   5.  Handling of Reverse Address Resolution Protocol (RARP)\n
    \      Messages  . . . . . . . . . . . . . . . . . . . . . . . . . .  11\n   6.
    \ Handling of DHCP Messages . . . . . . . . . . . . . . . . . .  11\n   7.  Handling
    of Duplicate IP Addresses  . . . . . . . . . . . . .  11\n   8.  RBridge ARP/ND
    Cache Liveness and MAC Mobility  . . . . . . .  12\n   9.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  13\n     9.1.  Data-Plane-Based Considerations
    . . . . . . . . . . . . .  13\n     9.2.  Directory-Based Considerations  . .
    . . . . . . . . . . .  14\n     9.3.  Use of the Confidence Level Feature . .
    . . . . . . . . .  14\n   10. IANA Considerations . . . . . . . . . . . . . .
    . . . . . . .  14\n   11. References  . . . . . . . . . . . . . . . . . . . .
    . . . . .  15\n     11.1.  Normative References . . . . . . . . . . . . . . .
    . . .  15\n     11.2.  Informative References . . . . . . . . . . . . . . . .
    .  16\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  17\n
    \  Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   ARP [RFC826] and ND [RFC4861] messages are normally sent
    by broadcast\n   and multicast, respectively.  To reduce the burden on a TRILL
    campus\n   caused by these multi-destination messages, RBridges MAY implement
    an\n   \"optimized ARP/ND response\", as specified herein, when the target's\n
    \  location is known by the ingress RBridge or can be obtained from a\n   directory.
    \ This avoids ARP/ND query and answer flooding.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n   The abbreviations and terminology in [RFC6325]
      are used herein.  Some\n   of these are listed below for convenience along with
      some additions:\n   APPsub-TLV   Application sub-Type-Length-Value [RFC6823]\n
      \  ARP          Address Resolution Protocol [RFC826]\n   Campus       A TRILL
      network consisting of RBridges, links, and\n                possibly bridges
      bounded by end stations and IP routers\n                [RFC6325]\n   DAD          Duplicate
      Address Detection [RFC3756] [RFC5227]\n   Data Label   VLAN or Fine-Grained
      Label (FGL)\n   DHCP         Dynamic Host Configuration Protocol.  In this document,\n
      \               DHCP refers to both DHCP for IPv4 [RFC2131] and DHCPv6\n                [RFC3315]\n
      \  ESADI        End Station Address Distribution Information [RFC7357]\n   FGL
      \         Fine-Grained Label [RFC7172]\n   IA           Interface Address; a
      TRILL APPsub-TLV [RFC7961]\n   IP           Internet Protocol, both IPv4 and
      IPv6\n   MAC          Media Access Control [RFC7042]\n   ND           Neighbor
      Discovery [RFC4861]\n   RBridge      A contraction of \"Routing Bridge\".  A
      device\n                implementing the TRILL protocol.\n   SEND         Secure
      Neighbor Discovery [RFC3971]\n   TRILL        Transparent Interconnection of
      Lots of Links or Tunneled\n                Routing in the Link Layer [RFC6325]
      [RFC7780]\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  ARP/ND Optimization Requirement and Solution\n   IP address resolution can
    create significant issues in data centers\n   due to flooded packets, as discussed
    in [RFC6820].  Such flooding can\n   be avoided by a proxy ARP/ND function on
    edge RBridges as described\n   in this document, particularly in Section 4.  This
    section is a\n   general discussion of this problem and is not intended to be\n
    \  normative.\n   To support such ARP/ND optimization, edge RBridges need to know
    an\n   end station's IP/MAC address mapping through manual configuration\n   (management),
    control-plane mechanisms such as directories [RFC8171],\n   or data-plane learning
    by snooping of messages such as ARP/ND\n   (including DHCP or gratuitous ARP messages).\n
    \  When all the end station's IP/MAC address mappings are known to edge\n   RBridges,
    provisioned through management, or learned via the control\n   plane on the edge
    RBridges, it should be possible to completely\n   suppress flooding of ARP/ND
    messages in a TRILL campus.  When all end\n   station MAC addresses are similarly
    known, it should be possible to\n   suppress unknown unicast flooding by dropping
    any unknown unicast\n   received at an edge RBridge.\n   An ARP/ND optimization
    mechanism should include provisions for an\n   edge RBridge to issue an ARP/ND
    request to an attached end station to\n   confirm or update information and should
    allow an end station to\n   detect duplication of its IP address.\n   Most of
    the end station hosts send either DHCP messages requesting an\n   IP address or
    gratuitous ARP or Reverse Address Resolution Protocol\n   (RARP) requests to announce
    themselves to the network right after\n   they come online.  Thus, the local edge
    RBridge will immediately have\n   the opportunity to snoop and learn their MAC
    and IP addresses and\n   distribute this information to other edge RBridges through
    the TRILL\n   control-plane End Station Address Distribution Information (ESADI)\n
    \  [RFC7357] protocol.  Once remote RBridges receive this information\n   via
    the control plane, they should add IP-to-MAC mapping information\n   to their
    ARP/ND cache along with the nickname and Data Label of the\n   address information.
    \ Therefore, most active IP hosts in the TRILL\n   network can be learned by the
    edge RBridges through either local\n   learning or control-plane-based remote
    learning.  As a result, ARP\n   suppression can vastly reduce the network flooding
    caused by host ARP\n   learning behavior.\n   When complete directory information
    is available, the default data-\n   plane learning of end-station MAC addresses
    is not only unnecessary\n   but could be harmful if there is learning based on
    frames with forged\n   source addresses.  Such data-plane learning can be suppressed
    because\n   TRILL already provides an option to disable data-plane learning from\n
    \  the source MAC address of end-station frames (see Section 5.3 of\n   [RFC6325]).\n"
  title: 2.  ARP/ND Optimization Requirement and Solution
- contents:
  - "3.  IP/MAC Address Mappings\n   By default, an RBridge [RFC6325] [RFC7172] learns
    egress nickname\n   mapping information for the MAC address and Data Label (VLAN
    or FGL)\n   of TRILL data frames it receives and decapsulates.  No IP address\n
    \  information is learned directly from the TRILL data frame.  The IA\n   APPsub-TLV
    [RFC7961] enhances the TRILL base protocol by allowing IP/\n   MAC address mappings
    to be distributed in the control plane by any\n   RBridge.  This APPsub-TLV appears
    inside the TRILL GENINFO TLV in\n   ESADI [RFC7357], but the value data structure
    it specifies may also\n   occur in other application contexts.  Edge RBridge Directory
    Assist\n   Mechanisms [RFC8171] make use of this APPsub-TLV for its push model\n
    \  and use the value data structure it specifies in its pull model.\n   An RBridge
    can easily know the IP/MAC address mappings of the local\n   end stations that
    it is attached to via its access ports by receiving\n   ARP [RFC826] or ND [RFC4861]
    messages.  If the edge RBridge has\n   extracted the sender's IP/MAC address pair
    from the received data\n   frame (either ARP or ND), it may save the information
    and then use\n   the IA APPsub-TLV to link the IP and MAC addresses and distribute
    it\n   to other RBridges through ESADI.  Then, the relevant remote RBridges\n
    \  (normally those interested in the same Data Label as the original\n   ARP/ND
    messages) also receive and save such mapping information.\n   There are other
    ways that RBridges save IP/MAC address mappings in\n   advance, e.g., importing
    them from the management system and\n   distributing them by directory servers
    [RFC8171].\n   The examples given above show that RBridges might have saved an
    end\n   station's triplet of {IP address, MAC address, ingress nickname} for\n
    \  a given Data Label (VLAN or FGL) before that end station sends or\n   receives
    any real data packet.  Note that such information might or\n   might not be a
    complete list and might or might not exist on all\n   RBridges; the information
    could possibly be from different sources.\n   RBridges can then use the Flags
    field in an IA APPsub-TLV to identify\n   if the source is a directory server
    or local observation by the\n   sender.  A different confidence level may also
    be used to indicate\n   the reliability of the mapping information.\n"
  title: 3.  IP/MAC Address Mappings
- contents:
  - "4.  Handling ARP/ND/SEND Messages\n   A native frame that is an ARP [RFC826]
    message is detected by its\n   Ethertype of 0x0806.  A native frame that is an
    ND [RFC4861] is\n   detected by being one of five different ICMPv6 packet types.
    \ ARP/ND\n   is commonly used on a link to (1) query for the MAC address\n   corresponding
    to an IPv4 or IPv6 address, (2) test if an IPv4/IPv6\n   address is already in
    use, or (3) announce the new or updated info on\n   any of the following: IPv4/IPv6
    address, MAC address, and/or point of\n   attachment.\n   To simplify the text,
    we use the following terms in this section.\n   1.  IP address -- indicated protocol
    address that is normally an IPv4\n       address in ARP or an IPv6 address in
    ND.\n   2.  sender's IP/MAC address -- sender IP/MAC address in ARP, source\n
    \      IP address, and source link-layer address in ND.\n   3.  target's IP/MAC
    address -- target IP/MAC address in ARP, target\n       address, and target link-layer
    address in ND.\n   When an ingress RBridge receives an ARP/ND/SEND message, it
    can\n   perform the steps described within the subsections below.  In\n   particular,
    Section 4.4 describes the options for such an ingress\n   handling an ARP/ND message
    and, in the cases where it forwards the\n   message, Section 4.5 describes how
    to handle any response that may be\n   returned due to the forwarded message.\n
    \  Section 4.3 describes the extraction of address information by an\n   RBridge
    from ARP/ND messages it handles.  Under some circumstances,\n   this extraction
    may prompt verification with an end station.\n   Section 4.2 describes an optional
    use of ARP/ND messages originated\n   by RBridges to verify addresses or liveness.\n
    \  As described in Section 4.1, SEND messages are not optimized by the\n   mechanisms
    specified in this document but are snooped on.\n"
  - contents:
    - "4.1.  SEND Considerations\n   Secure Neighbor Discovery (SEND) [RFC3971] is
      a method of securing ND\n   that addresses the threats discussed in [RFC3756].
      \ Typical TRILL\n   campuses are inside data centers, Internet exchange points,
      or\n   carrier facilities.  These are generally controlled and protected\n   environments
      where these threats are of less concern.  Nevertheless,\n   SEND provides an
      additional layer of protection.\n   Secure SEND messages require knowledge of
      cryptographic keys.\n   Methods of communicating such keys to RBridges for use
      in SEND are\n   beyond the scope of this document.  Thus, using the optimizations
      in\n   this document, RBridges do not attempt to construct SEND messages and\n
      \  are generally transparent to them.  RBridges only construct ARP,\n   RARP,
      or insecure ND messages, as appropriate.  Nevertheless,\n   RBridges implementing
      ARP/ND optimization SHOULD snoop on SEND\n   messages to extract the addressing
      information that would be present\n   if the SEND had been sent as an insecure
      ND message and is still\n   present in the SEND message.\n"
    title: 4.1.  SEND Considerations
  - contents:
    - "4.2.  Address Verification\n   RBridges may use ARP/ND to probe directly attached
      or remote end\n   stations for address or liveness verification.  This is typically\n
      \  most appropriate in less-managed and/or higher-mobility environments.\n   In
      strongly managed environments, such as a typical data center,\n   where a central
      orchestration/directory system has complete\n   addressing knowledge [RFC7067],
      optimized ARP/ND responses can use\n   that knowledge.  In such cases, there
      is little reason for\n   verification except for debugging operational problems
      or the like.\n"
    title: 4.2.  Address Verification
  - contents:
    - "4.3.  Extracting Local Mapping Information for End-Station IP/MAC\n      Addresses\n
      \  Edge RBridges extract and use information about the correspondence\n   between
      local end-station IP and MAC addresses from the ARP/ND\n   messages those end
      stations send, as described below.  An apparent\n   zero source IP address means
      that the end station is probing for\n   duplicate IP addresses, and messages
      with such a zero source IP\n   address are not used for the extraction of IP/MAC
      address mapping\n   information.\n   o  If the sender's IP is not present in
      the ingress RBridge's ARP/ND\n      cache, populate the information of the sender's
      IP/MAC address\n      mapping in its ARP/ND cache table.  The ingress RBridge
      correlates\n      its nickname and that IP/MAC address mapping information.
      \ Such a\n      triplet of {IP address, MAC address, ingress nickname} information\n
      \     is saved locally and can be distributed to other RBridges, as\n      explained
      later.\n   o  Else, if the sender's IP has been saved before but with a\n      different
      MAC address mapped or a different ingress nickname\n      associated with the
      same pair of IP/MAC, the RBridge SHOULD verify\n      if a duplicate IP address
      has already been in use or an end\n      station has changed its attaching RBridge.
      \ The RBridge may use\n      different strategies to do so.  For example, the
      RBridge might ask\n      an authoritative entity like directory servers or it
      might\n      encapsulate and unicast the ARP/ND message to the location where\n
      \     it believes the address is in use (Section 4.2).  RBridge SHOULD\n      update
      the saved triplet of {IP address, MAC address, ingress\n      nickname} based
      on the verification results.  An RBridge might not\n      verify an IP address
      if the network manager's policy is to have\n      the network behave, for each
      Data Label, as if it were a single\n      link and just believe an ARP/ND it
      receives.\n   The ingress RBridge MAY use the IA APPsub-TLV [RFC7961] with the\n
      \  Local flag set in ESADI [RFC7357] to distribute any new or updated\n   triplet
      of {IP address, MAC address, ingress nickname} information\n   obtained.  If
      a Push Directory server is used, such information can\n   be distributed as
      specified in [RFC8171].\n"
    title: 4.3.  Extracting Local Mapping Information for End-Station IP/MAC
  - contents:
    - "4.4.  Determining How to Reply to ARP/ND\n   The options for an edge RBridge
      to handle a native ARP/ND are given\n   below.  For generic ARP/ND requests
      seeking the MAC address\n   corresponding to an IP address, if the edge RBridge
      knows the IP\n   address and corresponding MAC, behavior is as in item (a),
      otherwise\n   behavior is as in item (b).  Behavior for gratuitous ARP and ND\n
      \  unsolicited Neighbor Advertisements (NAs) [RFC4861] is given in item\n   (c).
      \ And item (d) covers the handling of an Address Probe ARP query.\n   Within
      each lettered item, it is an implementation decision as to\n   which numbered
      strategy to use for any particular ARP/ND query\n   falling under that item.\n
      \  a.  If the message is a generic ARP/ND request, and the ingress\n       RBridge
      knows the target's IP address and associated MAC address,\n       the ingress
      RBridge MUST take one or a combination of the actions\n       below.  In the
      case of SEND [RFC3971], cryptography would prevent\n       a local reply by
      the ingress RBridge, since the RBridge would not\n       be able to sign the
      response with the target's private key, and\n       only action a.2 or a.5 is
      valid.\n       a.1.  Send an ARP/ND response directly to the querier, using
      the\n             target's MAC address present in the ingress RBridge's ARP/\n
      \            ND cache table.  Because the edge RBridge might not have an\n             IPv6
      address, the source IP address for such an ND response\n             MUST be
      that of the target end station.\n       a.2.  Encapsulate the ARP/ND/SEND request
      to the target's\n             Designated RBridge and have the egress RBridge
      for the\n             target forward the query to the target.  This behavior
      has\n             the advantage that a response to the request is\n             authoritative.
      \ If the request does not reach the target,\n             then the querier does
      not get a response.\n       a.3.  Block ARP/ND requests that occur for some
      time after a\n             request to the same target has been launched, and
      then\n             respond to the querier when the response to the recently\n
      \            launched query to that target is received.\n       a.4.  Reply
      to the querier based on directory information\n             [RFC8171] such as
      information obtained from a Pull\n             Directory server or directory
      information that the ingress\n             RBridge has requested to be pushed
      to it.\n       a.5.  Flood the ARP/ND/SEND request as per [RFC6325].\n   b.
      \ If the message is a generic ARP/ND/SEND request and the ingress\n       RBridge
      does not know the target's IP address, the ingress\n       RBridge MUST take
      one of the following actions.  In the case of\n       SEND [RFC3971], cryptography
      would prevent local reply by the\n       ingress RBridge, since the RBridge
      would not be able to sign the\n       response with the target's private key;
      therefore, only action\n       b.1 is valid.\n       b.1.  Flood the ARP/ND/SEND
      message as per [RFC6325].\n       b.2.  Use a directory server to pull the information
      [RFC8171]\n             and reply to the querier.\n       b.3.  Drop the message
      if there should be no response because the\n             directory server gives
      authoritative information that the\n             address being queried is nonexistent.\n
      \  c.  If the message is a gratuitous ARP, which can be identified by\n       the
      same sender's and target's \"protocol\" address fields, or an\n       unsolicited
      Neighbor Advertisement [RFC4861] in ND/SEND then:\n       The RBridge MAY use
      an IA APPsub-TLV [RFC7961] with the Local\n       flag set to distribute the
      sender's IP/MAC address mapping\n       information.  When one or more directory
      servers are deployed and\n       complete Push Directory information is used
      by all the RBridges\n       in the Data Label, a gratuitous ARP or unsolicited
      NA SHOULD be\n       discarded rather than ingressed.  Otherwise, they are either\n
      \      ingressed and flooded as per [RFC6325] or discarded depending on\n       local
      policy.\n   d.  If the message is an Address Probe ARP query [RFC5227], which
      can\n       be identified by the sender's protocol (IPv4) address field being\n
      \      zero and the target's protocol address field being the IPv4\n       address
      to be tested or a Neighbor Solicitation for Duplicate\n       Address Detection
      (DAD) that has the unspecified source address\n       [RFC4862], it SHOULD be
      handled as the generic ARP message as in\n       (a) or (b) above.\n"
    title: 4.4.  Determining How to Reply to ARP/ND
  - contents:
    - "4.5.  Determining How to Handle the ARP/ND Response\n   If the ingress RBridge
      R1 decides to unicast the ARP/ND request to\n   the target's egress RBridge
      R2 as discussed in Section 4.4, item a.2\n   or to flood the request as per
      item a.5 and [RFC6325], then R2\n   decapsulates the query and initiates an
      ARP/ND query on the target's\n   link.  If and when the target responds, R2
      encapsulates and unicasts\n   the response to R1, which decapsulates the response
      and sends it to\n   the querier.  R2 SHOULD initiate a link state update to
      inform all\n   the other RBridges of the target's location, Layer 3 address,
      and\n   Layer 2 address, in addition to forwarding the reply to the querier.\n
      \  The update uses an IA APPsub-TLV [RFC7961] (so the Layer 3 and Layer\n   2
      addresses can be linked) with the Local flag set in ESADI [RFC7357]\n   or as
      per [RFC8171] if the Push Directory server is in use.\n"
    title: 4.5.  Determining How to Handle the ARP/ND Response
  title: 4.  Handling ARP/ND/SEND Messages
- contents:
  - "5.  Handling of Reverse Address Resolution Protocol (RARP) Messages\n   RARP
    [RFC903] uses the same packet format as ARP but different\n   Ethertype (0x8035)
    and opcode values.  Its processing is similar to\n   the generic ARP request/response
    as described in Section 4.4, items\n   a. and b.  The difference is that it is
    intended to query for the\n   target \"protocol\" (IP) address corresponding to
    the target \"hardware\"\n   (MAC) address provided.  It SHOULD be handled by doing
    a local cache\n   or directory server lookup on the target \"hardware\" address
    provided\n   to find a mapping to the desired \"protocol\" address.\n"
  title: 5.  Handling of Reverse Address Resolution Protocol (RARP) Messages
- contents:
  - "6.  Handling of DHCP Messages\n   When a newly connected end station exchanges
    messages with a DHCP\n   [RFC3315][RFC2131] server, an edge RBridge should snoop
    them (mainly\n   the DHCPAck message) and store IP/MAC address mapping information
    in\n   its ARP/ND cache and should also send the information out through the\n
    \  TRILL control plane using ESADI.\n"
  title: 6.  Handling of DHCP Messages
- contents:
  - "7.  Handling of Duplicate IP Addresses\n   Duplicate IP addresses within a Data
    Label can occur due to an\n   attacker sending fake ARP/ND messages or due to
    human/configuration\n   errors.  If complete, trustworthy directory information
    is available,\n   then, by definition, the IP location information in the directory
    is\n   correct.  Any appearance of an IP address in a different place\n   (different
    edge RBridge or port) from other sources is not correct.\n   Without complete
    directory information, the ARP/ND optimization\n   function should support duplicate
    IP detection.  This is critical in\n   a data center to stop an attacker from
    using ARP/ND spoofing to\n   divert traffic from its intended destination.\n   Duplicate
    IP addresses can be detected when an existing active IP/MAC\n   address mapping
    gets modified.  Also, an edge RBridge may send a\n   query called a Duplicate
    Address Detection query (DAD-query) asking\n   about the IP address in question
    to the former owner of that IP\n   address by using the MAC address formerly associated
    with that IP\n   address.  A DAD-query is a unicast ARP/ND message with sender
    IP\n   0.0.0.0 in case of ARP (or a configurable IP address per RBridge\n   called
    the DAD-Query source IP) and an IPv6 Link Local Address in\n   case of ND with
    the source MAC set to the DAD-querier RBridge's MAC.\n   If the querying RBridge
    does not receive an answer within a given\n   time, it may be a case of mobility;
    in any case, the new IP entry\n   will be confirmed and activated in its ARP/ND
    cache.\n   In the case where the former owner replies, a duplicate address has\n
    \  been detected.  In this case, the querying RBridge SHOULD log the\n   duplicate
    so that the network administrator can take appropriate\n   action.\n   It is an
    implementation choice how to respond to a query for an\n   address that is duplicated
    in the network when authoritative\n   information is not available from a directory
    or configuration.\n   Typically, the information most recently snooped is returned.\n"
  title: 7.  Handling of Duplicate IP Addresses
- contents:
  - "8.  RBridge ARP/ND Cache Liveness and MAC Mobility\n   A maintenance procedure
    is needed for RBridge ARP/ND caching to\n   ensure IP end stations connected to
    ingress RBridges are still\n   active.\n   Some links provide a physical-layer
    indication of link liveness.  A\n   dynamic proxy ARP/ND entry (one learned from
    data-plane observation)\n   MUST be removed from the table if the link over which
    it was learned\n   fails.\n   Similarly, a dynamic proxy ARP/ND entry SHOULD be
    flushed out of the\n   table if the IP/MAC address mapping has not been refreshed
    within a\n   given age-time.  The entry is refreshed if an ARP or ND message is\n
    \  received for the same IP/MAC address mapping entry from any location.\n   The
    IP/MAC address mapping information Ageing Timer is configurable\n   per RBridge
    and defaults to 3/4 of the MAC address learning Ageing\n   Timer [RFC6325].\n
    \  For example, end station \"A\" is connected to edge-RBridge1 (RB1) and\n   has
    been learned as a local entry on RB1.  If end station \"A\" moves\n   to some
    other location (MAC / Virtual Machine (VM) Mobility) and gets\n   connected to
    edge-RBridge (RB2), after learning on RB2's access port,\n   RB2 advertises this
    entry through the TRILL control plane, and it is\n   learned on RB1 as a remote
    entry.  The old entry on RB1 SHOULD get\n   replaced, and all other edge-RBridges
    with end-station service\n   enabled for that Data Label should update the entry
    to show\n   reachability from RB2 instead of RB1.\n   If an ARP/ND entry in the
    cache is not refreshed, then the RBridge\n   connected to that end station MAY
    send periodic refresh messages\n   (ARP/ND \"probes\") to that end station, so
    that the entries can be\n   refreshed before they age out.  The end station would
    reply to the\n   ARP/ND probe, and the reply resets the corresponding entry age-timer.\n"
  title: 8.  RBridge ARP/ND Cache Liveness and MAC Mobility
- contents:
  - "9.  Security Considerations\n   There are generally two modes of learning the
    address information\n   that is the basis of ARP/ND optimization: data-plane mode
    and\n   directory mode.  The data-plane mode is the traditional bridge\n   address
    learning [IEEE802.1Q] that is also implemented in TRILL\n   switches [RFC6325]
    and is discussed in Section 9.1.  The directory\n   mode uses data obtained from
    a directory [RFC8171] and is discussed\n   in Section 9.2.  The TRILL confidence-level
    feature, which can help\n   arbitrate between conflicting address information,
    is discussed in\n   Section 9.3.\n   RBridges should rate limit ARP/ND queries
    injected into the TRILL\n   campus to limit some potential denial-of-service attacks.\n"
  - contents:
    - "9.1.  Data-Plane-Based Considerations\n   Generally speaking, when ARP/ND optimization
      is operating in the\n   data-plane mode, the information learned by RBridges
      is the same as\n   that which is learned by end stations.  Thus, the answers
      generated\n   by RBridges to the query messages being optimized are generally
      those\n   that would be generated by end stations in the absence of\n   optimization,
      and the security considerations are those of the\n   underlying ARP/ND protocols.\n
      \  RBridges that snoop on DHCPack messages respond to ARP/ND messages in\n   essentially
      the same way that the end stations sending those DHCPack\n   messages would.
      \ Thus, for security considerations of ARP/ND\n   optimization for DHCP messages
      that may be snooped, see the Security\n   Considerations sections of [RFC3315]
      and [RFC2131].\n   Unless SEND [RFC3971] is used, ARP and ND messages can be
      easily\n   forged.  Therefore, the learning of IP/MAC addresses by RBridges
      from\n   ARP/ND is hackable, but this is what is available for data-plane\n
      \  learning without SEND.  See \"SEND Considerations\", Section 4.1.\n   Since
      end stations communicate with edge RBridges using Ethernet,\n   some security
      improvements could be obtained by the use of\n   [IEEE802.1AE] between end stations
      and edge RBridges.  Such link\n   security is beyond the scope of this document
      and would impose\n   requirements on edge stations, while TRILL is generally
      designed to\n   operate with unmodified, TRILL-ignorant end stations.\n   ARP/ND
      address mapping information learned locally at an RBridge can\n   be distributed
      to other RBridges using the TRILL ESADI protocol that\n   can be secured as
      specified in [RFC7357].  (ESADI is also used for\n   Push Directories with flags
      in the data indicating whether data comes\n   from a directory or from data-plane
      learning, as well as from a\n   confidence level (see Section 9.3).)\n"
    title: 9.1.  Data-Plane-Based Considerations
  - contents:
    - "9.2.  Directory-Based Considerations\n   ARP/ND optimization can be based on
      directory information [RFC8171].\n   If the directory information is known to
      be trustworthy and complete,\n   then trustworthy responses to ARP/ND queries
      can be entirely based on\n   this information.  This bounds the damage that
      forged ARP/ND messages\n   can do to the local link between end stations and
      edge RBridges.  (In\n   TRILL, such a \"link\" can be a bridged LAN.)\n   Of
      course, there can also be incomplete and/or unreliable directory\n   address
      mapping data.  The network administrator can configure their\n   TRILL campus
      to use such directory data in place of data-plane-\n   learned data.  Alternatively,
      such directory data can be used along\n   with data-plane-learned data arbitrated
      by the confidence level as\n   discussed in Section 9.3.\n"
    title: 9.2.  Directory-Based Considerations
  - contents:
    - "9.3.  Use of the Confidence Level Feature\n   An RBridge can use the confidence
      level in IA APPsub-TLV information\n   received via ESADI or Pull Directory
      retrievals to determine the\n   configured relative reliability of IP/MAC address
      mapping information\n   from those sources and from locally learned address
      information.\n   Push Directory information is sent via ESADI, which can be
      secured as\n   provided in [RFC7357]; Pull Directory information can be secured
      as\n   provided in [RFC8171].  The implementation decides if an RBridge will\n
      \  distribute the IP and MAC address mappings received from local native\n   ARP/ND
      messages to other RBridges in the same Data Label, and with\n   what confidence
      level it does so.  Thus, the implementer can, to some\n   extent, cause sources
      that they know are more reliable to dominate\n   those they know to be less
      reliable.  How the implementer determines\n   this is beyond the scope of this
      document.\n"
    title: 9.3.  Use of the Confidence Level Feature
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC826]   Plummer, D., \"Ethernet Address
      Resolution Protocol: Or\n              Converting Network Protocol Addresses
      to 48.bit Ethernet\n              Address for Transmission on Ethernet Hardware\",
      STD 37,\n              RFC 826, DOI 10.17487/RFC0826, November 1982,\n              <https://www.rfc-editor.org/info/rfc826>.\n
      \  [RFC903]   Finlayson, R., Mann, T., Mogul, J., and M. Theimer, \"A\n              Reverse
      Address Resolution Protocol\", STD 38, RFC 903,\n              DOI 10.17487/RFC0903,
      June 1984,\n              <https://www.rfc-editor.org/info/rfc903>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2131]  Droms,
      R., \"Dynamic Host Configuration Protocol\",\n              RFC 2131, DOI 10.17487/RFC2131,
      March 1997,\n              <https://www.rfc-editor.org/info/rfc2131>.\n   [RFC3315]
      \ Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              C.,
      and M. Carney, \"Dynamic Host Configuration Protocol\n              for IPv6
      (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n              2003, <https://www.rfc-editor.org/info/rfc3315>.\n
      \  [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor
      Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,
      September 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n
      \  [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address
      Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862, September
      2007,\n              <https://www.rfc-editor.org/info/rfc4862>.\n   [RFC6325]
      \ Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani,
      \"Routing Bridges (RBridges): Base Protocol\n              Specification\",
      RFC 6325, DOI 10.17487/RFC6325, July 2011,\n              <https://www.rfc-editor.org/info/rfc6325>.\n
      \  [RFC7172]  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n              D.
      Dutt, \"Transparent Interconnection of Lots of Links\n              (TRILL):
      Fine-Grained Labeling\", RFC 7172,\n              DOI 10.17487/RFC7172, May
      2014,\n              <https://www.rfc-editor.org/info/rfc7172>.\n   [RFC7357]
      \ Zhai, H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n              Stokes,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): End Station
      Address Distribution Information\n              (ESADI) Protocol\", RFC 7357,
      DOI 10.17487/RFC7357,\n              September 2014, <https://www.rfc-editor.org/info/rfc7357>.\n
      \  [RFC7780]  Eastlake 3rd, D., Zhang, M., Perlman, R., Banerjee, A.,\n              Ghanwani,
      A., and S. Gupta, \"Transparent Interconnection\n              of Lots of Links
      (TRILL): Clarifications, Corrections, and\n              Updates\", RFC 7780,
      DOI 10.17487/RFC7780, February 2016,\n              <https://www.rfc-editor.org/info/rfc7780>.\n
      \  [RFC7961]  Eastlake 3rd, D. and L. Yizhou, \"Transparent\n              Interconnection
      of Lots of Links (TRILL): Interface\n              Addresses APPsub-TLV\", RFC
      7961, DOI 10.17487/RFC7961,\n              August 2016, <https://www.rfc-editor.org/info/rfc7961>.\n
      \  [RFC8171]  Eastlake 3rd, D., Dunbar, L., Perlman, R., and Y. Li,\n              \"Transparent
      Interconnection of Lots of Links (TRILL):\n              Edge Directory Assistance
      Mechanisms\", RFC 8171,\n              DOI 10.17487/RFC8171, June 2017,\n              <https://www.rfc-editor.org/info/rfc8171>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [IEEE802.1AE]\n              IEEE, \"IEEE
      Standard for Local and metropolitan area\n              networks: Media Access
      Control (MAC) Security\", IEEE\n              Std 802.1AE.\n   [IEEE802.1Q]\n
      \             IEEE, \"IEEE Standard for Local and metropolitan area\n              networks
      -- Bridges and Bridged Networks\", IEEE\n              Std 802.1Q.\n   [RFC3756]
      \ Nikander, P., Ed., Kempf, J., and E. Nordmark, \"IPv6\n              Neighbor
      Discovery (ND) Trust Models and Threats\",\n              RFC 3756, DOI 10.17487/RFC3756,
      May 2004,\n              <https://www.rfc-editor.org/info/rfc3756>.\n   [RFC3971]
      \ Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure
      Neighbor Discovery (SEND)\", RFC 3971,\n              DOI 10.17487/RFC3971,
      March 2005,\n              <https://www.rfc-editor.org/info/rfc3971>.\n   [RFC5227]
      \ Cheshire, S., \"IPv4 Address Conflict Detection\", RFC 5227,\n              DOI
      10.17487/RFC5227, July 2008,\n              <https://www.rfc-editor.org/info/rfc5227>.\n
      \  [RFC6820]  Narten, T., Karir, M., and I. Foo, \"Address Resolution\n              Problems
      in Large Data Center Networks\", RFC 6820,\n              DOI 10.17487/RFC6820,
      January 2013,\n              <https://www.rfc-editor.org/info/rfc6820>.\n   [RFC6823]
      \ Ginsberg, L., Previdi, S., and M. Shand, \"Advertising\n              Generic
      Information in IS-IS\", RFC 6823,\n              DOI 10.17487/RFC6823, December
      2012,\n              <https://www.rfc-editor.org/info/rfc6823>.\n   [RFC7042]
      \ Eastlake 3rd, D. and J. Abley, \"IANA Considerations and\n              IETF
      Protocol and Documentation Usage for IEEE 802\n              Parameters\", BCP
      141, RFC 7042, DOI 10.17487/RFC7042,\n              October 2013, <https://www.rfc-editor.org/info/rfc7042>.\n
      \  [RFC7067]  Dunbar, L., Eastlake 3rd, D., Perlman, R., and I.\n              Gashinsky,
      \"Directory Assistance Problem and High-Level\n              Design Proposal\",
      RFC 7067, DOI 10.17487/RFC7067, November\n              2013, <https://www.rfc-editor.org/info/rfc7067>.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgments\n   The authors would like to thank Igor Gashinsky and Sue Hares
    for\n   their contributions.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Yizhou Li\n   Huawei Technologies\n   101 Software Avenue,\n
    \  Nanjing  210012\n   China\n   Phone: +86-25-56625375\n   Email: liyizhou@huawei.com\n
    \  Donald Eastlake 3rd\n   Huawei R&D USA\n   155 Beaver Street\n   Milford, MA
    \ 01757\n   United States of America\n   Phone: +1-508-333-2270\n   Email: d3e3e3@gmail.com\n
    \  Linda Dunbar\n   Huawei Technologies\n   5430 Legacy Drive, Suite #175\n   Plano,
    TX  75024\n   United States of America\n   Phone: +1-469-277-5840\n   Email: ldunbar@huawei.com\n
    \  Radia Perlman\n   Dell EMC\n   176 South Street\n   Hopkinton, MA  01748\n
    \  United States of America\n   Email: Radia@alum.mit.edu\n   Mohammed Umair\n
    \  Cisco\n   Cessna Business Park, Kadubeesanahalli Village, Hobli,\n   Sarjapur,
    Varthur Main Road, Marathahalli,\n   Bengaluru, Karnataka  560087\n   India\n
    \  Email: mohammed.umair2@gmail.com\n"
  title: Authors' Addresses
