- title: __initial_text__
  contents:
  - '                     TCP''s Reaction to Soft Errors

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ (http://trustee.ietf.org/\n   license-info) in effect on the date of publication\
    \ of this document.\n   Please review these documents carefully, as they describe\
    \ your rights\n   and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a non-standard, but widely implemented,\n\
    \   modification to TCP's handling of ICMP soft error messages that\n   rejects\
    \ pending connection-requests when those error messages are\n   received.  This\
    \ behavior reduces the likelihood of long delays\n   between connection-establishment\
    \ attempts that may arise in a number\n   of scenarios, including one in which\
    \ dual-stack nodes that have IPv6\n   enabled by default are deployed in IPv4\
    \ or mixed IPv4 and IPv6\n   environments.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Error Handling in TCP  . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     2.1.  Reaction to ICMP Error Messages That Indicate Hard\n\
    \           Errors . . . . . . . . . . . . . . . . . . . . . . . . . .  4\n  \
    \   2.2.  Reaction to ICMP Error Messages That Indicate Soft\n           Errors\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n   3.  Problems That\
    \ May Arise from TCP's Reaction to Soft Errors . .  5\n     3.1.  General Discussion\
    \ . . . . . . . . . . . . . . . . . . . .  5\n     3.2.  Problems That May Arise\
    \ with Dual-Stack IPv6 on by\n           Default  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  6\n   4.  Deployed Workarounds for Long Delays between\n\
    \       Connection-Establishment Attempts  . . . . . . . . . . . . . .  7\n  \
    \   4.1.  Context-Sensitive ICMP/TCP Interaction . . . . . . . . . .  7\n    \
    \ 4.2.  Context-Sensitive ICMP/TCP Interaction with Repeated\n           Confirmation\
    \ . . . . . . . . . . . . . . . . . . . . . . .  8\n   5.  Possible Drawbacks\
    \ of Changing ICMP Semantics  . . . . . . . .  9\n     5.1.  Non-Deterministic\
    \ Transient Network Failures . . . . . . .  9\n     5.2.  Deterministic Transient\
    \ Network Failures . . . . . . . . . 10\n     5.3.  Non-Compliant Network Address\
    \ Translators (NATs) . . . . . 10\n   6.  Security Considerations  . . . . . .\
    \ . . . . . . . . . . . . . 10\n   7.  Acknowledgements . . . . . . . . . . .\
    \ . . . . . . . . . . . . 11\n   8.  Contributors . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 11\n   9.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 12\n     9.1.  Normative References . . . . . . . . . .\
    \ . . . . . . . . . 12\n     9.2.  Informative References . . . . . . . . . .\
    \ . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The handling of network failures can be separated into two\
    \ different\n   actions: fault isolation and fault recovery.  Fault isolation\n\
    \   consists of the actions that hosts and routers take to determine that\n  \
    \ there is a network failure.  Fault recovery, on the other hand,\n   consists\
    \ of the actions that hosts and routers perform in an attempt\n   to survive a\
    \ network failure [RFC0816].\n   In the Internet architecture, the Internet Control\
    \ Message Protocol\n   (ICMP) [RFC0792] is one fault isolation technique to report\
    \ network\n   error conditions to the hosts sending datagrams over the network.\n\
    \   When a host is notified of a network error, its network stack will\n   attempt\
    \ to continue communications, if possible, in the presence of\n   the network\
    \ failure.  The fault recovery strategy may depend on the\n   type of network\
    \ failure taking place and the time at which the error\n   condition is detected.\n\
    \   This document analyzes the problems that may arise due to TCP's fault\n  \
    \ recovery reactions to ICMP soft errors.  It analyzes the problems\n   that may\
    \ arise when a host tries to establish a TCP connection with a\n   multihomed\
    \ host that has some unreachable addresses.  Additionally,\n   it analyzes the\
    \ problems that may arise in the specific scenario\n   where dual-stack nodes\
    \ that have IPv6 enabled by default are deployed\n   in IPv4 or mixed IPv4 and\
    \ IPv6 environments.\n   Finally, we document a modification to TCP's reaction\
    \ to ICMP\n   messages indicating soft errors during connection startup that has\n\
    \   been implemented in a variety of TCP/IP stacks to help overcome the\n   problems\
    \ outlined below.  We stress that this modification runs\n   contrary to the standard\
    \ behavior and this document unambiguously\n   does not change the standard reaction.\n\
    \   [Gont] describes alternative approaches for dealing with the problem\n   of\
    \ long delays between connection-establishment attempts in TCP.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in RFC 2119 [RFC2119].\n"
- title: 2.  Error Handling in TCP
  contents:
  - "2.  Error Handling in TCP\n   Network errors can be divided into soft and hard\
    \ errors.  Soft errors\n   are considered to be transient network failures that\
    \ are likely to be\n   solved in the near term.  Hard errors, on the other hand,\
    \ are\n   considered to reflect network error conditions that are unlikely to\n\
    \   be solved in the near future.\n   The Host Requirements RFC [RFC1122] states,\
    \ in Section 4.2.3.9, that\n   the ICMP messages that indicate soft errors are\
    \ ICMP \"Destination\n   Unreachable\" codes 0 (network unreachable), 1 (host\
    \ unreachable), and\n   5 (source route failed); ICMP \"Time Exceeded\" codes\
    \ 0 (time to live\n   exceeded in transit) and 1 (fragment reassembly time exceeded);\
    \ and\n   ICMP \"Parameter Problem\".  Even though ICMPv6 did not exist when\n\
    \   [RFC1122] was written, one could extrapolate the concept of soft\n   errors\
    \ to ICMPv6 \"Destination Unreachable\" codes 0 (no route to\n   destination)\
    \ and 3 (address unreachable); ICMPv6 \"Time Exceeded\"\n   codes 0 (hop limit\
    \ exceeded in transit) and 1 (fragment reassembly\n   time exceeded); and ICMPv6\
    \ \"Parameter Problem\" codes 0 (erroneous\n   header field encountered), 1 (unrecognized\
    \ Next Header type\n   encountered), and 2 (unrecognized IPv6 option encountered)\
    \ [RFC4443].\n   +----------------------------------+--------------------------------+\n\
    \   |               ICMP               |             ICMPv6             |\n  \
    \ +----------------------------------+--------------------------------+\n   |\
    \  Destination Unreachable (codes  | Destination Unreachable (codes |\n   |  \
    \         0, 1, and 5)           |            0 and 3)            |\n   +----------------------------------+--------------------------------+\n\
    \   |   Time Exceeded (codes 0 and 1)  |  Time Exceeded (codes 0 and 1) |\n  \
    \ +----------------------------------+--------------------------------+\n   |\
    \         Parameter Problem        | Parameter Problem (codes 0, 1, |\n   |  \
    \                                |             and 2)             |\n   +----------------------------------+--------------------------------+\n\
    \        Table 1: Extrapolating the concept of soft errors to ICMPv6\n   When\
    \ there is a network failure that is not signaled to the sending\n   host, such\
    \ as a gateway corrupting packets, TCP's fault recovery\n   action is to repeatedly\
    \ retransmit the corresponding data until\n   either they get acknowledged or\
    \ the connection times out.\n   In the case that a host does receive an ICMP error\
    \ message referring\n   to an ongoing TCP connection, the IP layer will pass this\
    \ message up\n   to the corresponding TCP instance to raise awareness of the network\n\
    \   failure [RFC1122].  TCP's reaction to ICMP messages will depend on\n   the\
    \ type of error being signaled.\n"
- title: 2.1.  Reaction to ICMP Error Messages That Indicate Hard Errors
  contents:
  - "2.1.  Reaction to ICMP Error Messages That Indicate Hard Errors\n   When receiving\
    \ an ICMP error message that indicates a hard error\n   condition, compliant TCP\
    \ implementations will simply abort the\n   corresponding connection, regardless\
    \ of the connection state.\n   The Host Requirements RFC [RFC1122] states, in\
    \ Section 4.2.3.9, that\n   TCP SHOULD abort connections when receiving ICMP error\
    \ messages that\n   indicate hard errors.  This policy is based on the premise\
    \ that, as\n   hard errors indicate network error conditions that will not change\
    \ in\n   the near term, it will not be possible for TCP to usefully recover\n\
    \   from this type of network failure.\n   It should be noted that virtually none\
    \ of the current TCP\n   implementations follow the advice in [RFC1122], and they\
    \ do not abort\n   the corresponding connection when an ICMP hard error is received\
    \ for\n   a connection that is in any of the synchronized states\n   [ICMP-ATTACKS].\n"
- title: 2.2.  Reaction to ICMP Error Messages That Indicate Soft Errors
  contents:
  - "2.2.  Reaction to ICMP Error Messages That Indicate Soft Errors\n   If an ICMP\
    \ error message is received that indicates a soft error, TCP\n   will repeatedly\
    \ retransmit the corresponding data until either they\n   get acknowledged or\
    \ the connection times out.  In addition, the TCP\n   sender may record the information\
    \ for possible later use (see\n   [Stevens], pp. 317-319).\n   The Host Requirements\
    \ RFC [RFC1122] states, in Section 4.2.3.9, that\n   TCP MUST NOT abort connections\
    \ when receiving ICMP error messages\n   that indicate soft errors.  This policy\
    \ is based on the premise that,\n   as soft errors are transient network failures\
    \ that will hopefully be\n   solved in the near term, one of the retransmissions\
    \ will succeed.\n   When the connection timer expires and an ICMP soft error message\
    \ has\n   been received before the timeout, TCP can use this information to\n\
    \   provide the user with a more specific error message (see [Stevens],\n   pp.\
    \ 317-319).\n   This reaction to soft errors exploits a valuable feature of the\n\
    \   Internet -- that, for many network failures, the network can be\n   dynamically\
    \ reconstructed without any disruption of the endpoints.\n"
- title: 3.  Problems That May Arise from TCP's Reaction to Soft Errors
  contents:
  - '3.  Problems That May Arise from TCP''s Reaction to Soft Errors

    '
- title: 3.1.  General Discussion
  contents:
  - "3.1.  General Discussion\n   Even though TCP's fault recovery strategy in the\
    \ presence of soft\n   errors allows for TCP connections to survive transient\
    \ network\n   failures, there are scenarios in which this policy may cause\n \
    \  undesirable effects.\n   For example, consider a scenario in which an application\
    \ on a local\n   host is trying to communicate with a destination whose name resolves\n\
    \   to several IP addresses.  The application on the local host will try\n   to\
    \ establish a connection with the destination host, usually cycling\n   through\
    \ the list of IP addresses until one succeeds [RFC1123].\n   Suppose that some\
    \ (but not all) of the addresses in the returned list\n   are permanently unreachable.\
    \  If such a permanently unreachable\n   address is the first in the list, the\
    \ application will likely try to\n   use it first and block waiting for a timeout\
    \ before trying an\n   alternate address.\n   As discussed in Section 2, this\
    \ unreachability condition may or may\n   not be signaled to the sending host.\
    \  If the local TCP is not\n   signaled concerning the error condition, there\
    \ is very little that\n   can be done other than to repeatedly retransmit the\
    \ SYN segment and\n   wait for the existing timeout mechanism in TCP, or an application\n\
    \   timeout, to be triggered.  However, even if unreachability is\n   signaled\
    \ by some intermediate router to the local TCP by means of an\n   ICMP soft error\
    \ message, the local TCP will still repeatedly\n   retransmit the SYN segment\
    \ until the connection timer expires (in the\n   hopes that the error is transient).\
    \  The Host Requirements RFC\n   [RFC1122] states that this timer MUST be large\
    \ enough to provide\n   retransmission of the SYN segment for at least 3 minutes.\
    \  This would\n   mean that the application on the local host would spend several\n\
    \   minutes for each unreachable address with which it tries to establish\n  \
    \ the TCP connection.  These long delays between connection-\n   establishment\
    \ attempts would be inappropriate for many interactive\n   applications, such\
    \ as the Web. [Shneiderman] and [Thadani] offer some\n   insight into interactive\
    \ systems (e.g., how the response time affects\n   the usability of an application).\
    \  This highlights that there is no\n   one definition of a \"transient error\"\
    \ and that the level of\n   persistence in the face of failure represents a tradeoff.\n\
    \   It is worth noting that while most applications try the addresses\n   returned\
    \ by the name-to-address function in serial, this is certainly\n   not the only\
    \ possible approach.  For example, applications could try\n   multiple addresses\
    \ in parallel until one succeeds, possibly avoiding\n   the problem of long delays\
    \ between connection-establishment attempts\n   described in this document [Gont].\n"
- title: 3.2.  Problems That May Arise with Dual-Stack IPv6 on by Default
  contents:
  - "3.2.  Problems That May Arise with Dual-Stack IPv6 on by Default\n   A particular\
    \ scenario in which the above type of problem may occur\n   regularly is that\
    \ where dual-stack nodes that have IPv6 enabled by\n   default are deployed in\
    \ IPv4 or mixed IPv4 and IPv6 environments and\n   the IPv6 connectivity is non-existent\
    \ [RFC4943].\n   As discussed in [RFC4943], there are two possible variants of\
    \ this\n   scenario, which differ in whether or not the lack of connectivity is\n\
    \   signaled to the sending node.\n   In those scenarios in which packets sent\
    \ to a destination are\n   silently dropped and no ICMPv6 [RFC4443] errors are\
    \ generated, there\n   is little that can be done other than to wait for the existing\n\
    \   connection-timeout mechanism in TCP, or an application timeout, to be\n  \
    \ triggered.\n   In scenarios where a legacy node has no default routers and Neighbor\n\
    \   Unreachability Detection (NUD) [RFC4861] fails for destinations\n   assumed\
    \ to be on-link, or where firewalls or other systems that\n   enforce scope boundaries\
    \ send ICMPv6 errors, the sending node will be\n   signaled of the unreachability\
    \ problem.  However, as discussed in\n   Section 2.2, compliant TCP implementations\
    \ will not abort connections\n   when receiving ICMP error messages that indicate\
    \ soft errors.\n"
- title: 4.  Deployed Workarounds for Long Delays between Connection-
  contents:
  - "4.  Deployed Workarounds for Long Delays between Connection-\n    Establishment\
    \ Attempts\n   The following subsections describe a number of workarounds for\
    \ the\n   problem of long delays between connection-establishment attempts that\n\
    \   have been implemented in a variety of TCP/IP stacks.  We note that\n   treating\
    \ soft errors as hard errors during connection establishment,\n   while widespread,\
    \ is not part of standard TCP behavior and this\n   document does not change that\
    \ state of affairs.  The consensus of the\n   TCPM WG (TCP Maintenance and Minor\
    \ Extensions Working Group) was to\n   document this widespread implementation\
    \ of nonstandard TCP behavior\n   but to not change the TCP standard.\n"
- title: 4.1.  Context-Sensitive ICMP/TCP Interaction
  contents:
  - "4.1.  Context-Sensitive ICMP/TCP Interaction\n   As discussed in Section 1, it\
    \ may make sense for the fault recovery\n   action to depend not only on the type\
    \ of error being reported but\n   also on the state of the connection against\
    \ which the error is\n   reported.  For example, one could infer that when an\
    \ error arrives in\n   response to opening a new connection, it is probably caused\
    \ by\n   opening the connection improperly, rather than by a transient network\n\
    \   failure [RFC0816].\n   A number of TCP implementations have modified their\
    \ reaction to all\n   ICMP soft errors and treat them as hard errors when they\
    \ are received\n   for connections in the SYN-SENT or SYN-RECEIVED states.  For\
    \ example,\n   this workaround has been implemented in the Linux kernel since\n\
    \   version 2.0.0 (released in 1996) [Linux].  However, it should be\n   noted\
    \ that this change violates section 4.2.3.9 of [RFC1122], which\n   states that\
    \ these ICMP error messages indicate soft error conditions\n   and that, therefore,\
    \ TCP MUST NOT abort the corresponding connection.\n   [RFC3168] states that a\
    \ host that receives a RST in response to the\n   transmission of an ECN (Explicit\
    \ Congestion Notification)-setup SYN\n   packet MAY resend a SYN with the CWR\
    \ (Congestion Window Reduced) and\n   ECE (ECN-Echo) bits cleared.  This is meant\
    \ to deal with faulty\n   middle-boxes that reject connections when a SYN segment\
    \ has the ECE\n   and CWR bits set.  Some faulty middle-boxes (e.g., firewalls)\
    \ may\n   reject these connection requests with an ICMP soft error of type 3\n\
    \   (Destination Unreachable), code 0 (net unreachable) or 1 (host\n   unreachable),\
    \ instead of a RST.  Therefore, a system that processes\n   ICMP soft error messages\
    \ as hard errors when they are received for a\n   connection in any of the non-synchronized\
    \ states could resend the SYN\n   segment with the ECE and CWR bits cleared when\
    \ an ICMP \"net\n   unreachable\" (type 3, code 0) or \"host unreachable\" (type\
    \ 3, code 1)\n   error message is received in response to a SYN segment that had\
    \ these\n   bits set.\n   Section 4.2 discusses a more conservative approach than\
    \ that sketched\n   above, which is implemented in FreeBSD.\n"
- title: 4.2.  Context-Sensitive ICMP/TCP Interaction with Repeated Confirmation
  contents:
  - "4.2.  Context-Sensitive ICMP/TCP Interaction with Repeated Confirmation\n   A\
    \ more conservative approach than simply treating soft errors as hard\n   errors\
    \ (as described above) would be to abort a connection in the\n   SYN-SENT or SYN-RECEIVED\
    \ states only after an ICMP soft error has\n   been received a specified number\
    \ of times and the SYN segment has\n   been retransmitted more than some specified\
    \ number of times.\n   Two new parameters would have to be introduced to TCP,\
    \ to be used\n   only during the connection-establishment phase: MAXSYNREXMIT\
    \ and\n   MAXSOFTERROR.  MAXSYNREXMIT would specify the number of times the SYN\n\
    \   segment would have to be retransmitted before a connection is\n   aborted.\
    \  MAXSOFTERROR would specify the number of ICMP messages\n   indicating soft\
    \ errors that would have to be received before a\n   connection is aborted.\n\
    \   Two additional state variables would need to be introduced to store\n   additional\
    \ state information during the connection-establishment\n   phase: \"nsynrexmit\"\
    \ and \"nsofterror\".  Both would be initialized to\n   zero when a connection\
    \ attempt is initiated, with \"nsynrexmit\" being\n   incremented by one every\
    \ time the SYN segment is retransmitted and\n   \"nsofterror\" being incremented\
    \ by one every time an ICMP message that\n   indicates a soft error is received.\n\
    \   A connection in the SYN-SENT or SYN-RECEIVED states would be aborted\n   if\
    \ \"nsynrexmit\" was greater than MAXSYNREXMIT and \"nsofterror\" was\n   simultaneously\
    \ greater than MAXSOFTERROR.\n   This approach would give the network more time\
    \ to solve the\n   connectivity problem than does simply aborting a connection\
    \ attempt\n   upon reception of the first soft error.  However, it should be noted\n\
    \   that, depending on the values chosen for the MAXSYNREXMIT and\n   MAXSOFTERROR\
    \ parameters, this approach could still lead to long\n   delays between connection-establishment\
    \ attempts, thus not solving\n   the problem.  For example, BSD systems abort\
    \ connections in the SYN-\n   SENT or the SYN-RECEIVED state when a second ICMP\
    \ error is received\n   and the SYN segment has been retransmitted more than three\
    \ times.\n   They also set up a \"connection-establishment timer\" that imposes\
    \ an\n   upper limit on the time the connection-establishment attempt has to\n\
    \   succeed, which expires after 75 seconds (see [Stevens2], pp. 828-\n   829).\
    \  Even when this policy may be better than the three-minute\n   timeout policy\
    \ specified in [RFC1122], it may still be inappropriate\n   for handling the potential\
    \ problems described in this document.  This\n   more conservative approach has\
    \ been implemented in BSD systems for\n   more than ten years [Stevens2].\n  \
    \ We also note that the approach given in this section is a generalized\n   version\
    \ of the approach sketched in the previous section.  In\n   particular, with MAXSOFTERROR\
    \ set to 1 and MAXSYNREXMIT set to zero,\n   the schemes are identical.\n"
- title: 5.  Possible Drawbacks of Changing ICMP Semantics
  contents:
  - "5.  Possible Drawbacks of Changing ICMP Semantics\n   The following subsections\
    \ discuss some possible drawbacks that could\n   arise from use of the non-standard\
    \ modifications to TCP's reaction to\n   soft errors, which are described in Section\
    \ 4.1 and Section 4.2.\n"
- title: 5.1.  Non-Deterministic Transient Network Failures
  contents:
  - "5.1.  Non-Deterministic Transient Network Failures\n   In scenarios where a transient\
    \ network failure affects all of the\n   addresses returned by the name-to-address\
    \ translation function, all\n   destinations could be unreachable for some short\
    \ period of time.  For\n   example, a mobile system consisting of a cell and a\
    \ repeater may pass\n   through a tunnel, leading to a loss of connectivity at\
    \ the repeater,\n   with the repeater sending ICMP soft errors back to the cell.\
    \  Also, a\n   transient routing problem might lead some intervening router to\
    \ drop\n   a SYN segment that was meaning to establish a TCP connection and send\n\
    \   an ICMP soft error back to the host.  Finally, a SYN segment carrying\n  \
    \ data might get fragmented and some of the resulting fragments might\n   get\
    \ lost, with the destination host timing out the reassembly process\n   and sending\
    \ an ICMP soft error back to the sending host (although\n   this particular scenario\
    \ is unlikely because, while [RFC0793] allows\n   SYN segments to carry data,\
    \ in practice they do not).  In such\n   scenarios, the application could quickly\
    \ cycle through all the IP\n   addresses in the list and return an error, when\
    \ it could have let TCP\n   retry a destination a few seconds later, when the\
    \ transient problem\n   could have disappeared.  In this case, the modifications\
    \ described\n   here make TCP less robust than a standards-compliant implementation.\n\
    \   Additionally, in many cases a domain name maps to a single IP\n   address.\
    \  In such a case, it might be better to try that address\n   persistently according\
    \ to normal TCP rules, instead of just aborting\n   the pending connection upon\
    \ receipt of an ICMP soft error.\n"
- title: 5.2.  Deterministic Transient Network Failures
  contents:
  - "5.2.  Deterministic Transient Network Failures\n   There are some scenarios in\
    \ which transient network failures could be\n   deterministic.  For example, consider\
    \ a scenario in which upstream\n   network connectivity is triggered by network\
    \ use.  That is, network\n   connectivity is instantiated only on an \"as needed\"\
    \ basis.  In this\n   scenario, the connection triggering the upstream connectivity\
    \ could\n   deterministically receive ICMP Destination Unreachables while the\n\
    \   upstream connectivity is being activated, and thus would be aborted.\n   Again,\
    \ in this case, the modifications described here make TCP less\n   robust than\
    \ a standards-compliant implementation.\n"
- title: 5.3.  Non-Compliant Network Address Translators (NATs)
  contents:
  - "5.3.  Non-Compliant Network Address Translators (NATs)\n   Some NATs respond\
    \ to an unsolicited inbound SYN segment with an ICMP\n   soft error message. \
    \ If the system sending the unsolicited SYN\n   segment implements the workaround\
    \ described in this document, it will\n   abort the connection upon receipt of\
    \ the ICMP error message, thus\n   probably preventing TCP's simultaneous open\
    \ from succeeding through\n   the NAT.  However, it must be stressed that those\
    \ NATs described in\n   this section are not BEHAVE-compliant and therefore should\
    \ implement\n   REQ-4 of [RFC5382] instead.\n   In those scenarios in which such\
    \ a non-BEHAVE-compliant NAT is\n   deployed, TCP simultaneous opens could fail.\
    \  While undesirable, this\n   is tolerable in many situations.  For instance,\
    \ a number of host\n   implementations of TCP do not support TCP simultaneous\
    \ opens\n   [Zuquete].\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document describes a non-standard modification\
    \ to TCP's reaction\n   to soft errors that has been implemented in a variety\
    \ of TCP\n   implementations.  This modification makes TCP abort a connection\
    \ in\n   the SYN-SENT or the SYN-RECEIVED states when it receives an ICMP\n  \
    \ error message that indicates a soft error.  Therefore, the\n   modification\
    \ could be exploited to reset valid connections during the\n   connection-establishment\
    \ phase.\n   The non-standard workaround described in this document makes TCP\
    \ more\n   vulnerable to attack, even if only slightly.  However, we note that\n\
    \   an attacker wishing to reset ongoing TCP connections could send any\n   of\
    \ the ICMP hard error messages in any connection state.\n   Generally, TCP backs\
    \ off its retransmission timer each time it\n   retransmits the SYN segment for\
    \ the same connection.  If a TCP\n   implements the modification described in\
    \ this document, that is,\n   tries the next address in the list upon receipt\
    \ of an ICMP error\n   message, it might end up injecting more packets into the\
    \ network than\n   if it had simply retried the same address a number of times.\n\
    \   However, compliant TCP implementations might already incur this\n   behavior\
    \ (e.g., as a result of cycling through the list of IP\n   addresses in response\
    \ to RST segments) as there are currently no\n   recommendations on methods for\
    \ limiting the rate at which SYN\n   segments are sent for connecting to a specific\
    \ destination.\n   A discussion of the use of ICMP to perform a variety of attacks\n\
    \   against TCP, and a number of counter-measures that minimize the\n   impact\
    \ of these attacks, can be found in [ICMP-ATTACKS].\n   A discussion of the security\
    \ issues arising from the use of ICMPv6\n   can be found in [RFC4443].\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The author wishes to thank Mark Allman, Jari Arkko,\
    \ David Black, Ron\n   Bonica, Ted Faber, Gorry Fairhurst, Sally Floyd, Juan Fraschini,\n\
    \   Tomohiro Fujisaki, Guillermo Gont, Saikat Guha, Alfred Hoenes,\n   Michael\
    \ Kerrisk, Eddie Kohler, Mika Liljeberg, Arifumi Matsumoto,\n   Sandy Murphy,\
    \ Carlos Pignataro, Pasi Sarolahti, Pekka Savola, Pyda\n   Srisuresh, Jinmei Tatuya,\
    \ and Joe Touch for contributing many\n   valuable comments on earlier versions\
    \ of this document.\n   The author wishes to thank Secretaria de Extension Universitaria\
    \ at\n   Universidad Tecnologica Nacional and Universidad Tecnologica\n   Nacional/Facultad\
    \ Regional Haedo for their support in this work.\n   Finally, the author wishes\
    \ to express deep and heartfelt gratitude to\n   Jorge Oscar Gont and Nelida Garcia\
    \ for their precious motivation and\n   guidance.\n"
- title: 8.  Contributors
  contents:
  - "8.  Contributors\n   Mika Liljeberg was the first to describe how their implementation\n\
    \   treated soft errors.  Based on that, the solution discussed in\n   Section\
    \ 4.1 was documented in [v6-ON] by Sebastien Roy, Alain Durand,\n   and James\
    \ Paugh.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC0792]       Postel, J., \"Internet Control\
    \ Message Protocol\",\n                   STD 5, RFC 792, September 1981.\n  \
    \ [RFC0793]       Postel, J., \"Transmission Control Protocol\", STD 7,\n    \
    \               RFC 793, September 1981.\n   [RFC1122]       Braden, R., \"Requirements\
    \ for Internet Hosts -\n                   Communication Layers\", STD 3, RFC\
    \ 1122, October 1989.\n   [RFC1123]       Braden, R., \"Requirements for Internet\
    \ Hosts -\n                   Application and Support\", STD 3, RFC 1123,\n  \
    \                 October 1989.\n   [RFC2119]       Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n                   Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC3168]       Ramakrishnan, K., Floyd, S., and D. Black,\
    \ \"The\n                   Addition of Explicit Congestion Notification (ECN)\
    \ to\n                   IP\", RFC 3168, September 2001.\n   [RFC4443]       Conta,\
    \ A., Deering, S., and M. Gupta, \"Internet\n                   Control Message\
    \ Protocol (ICMPv6) for the Internet\n                   Protocol Version 6 (IPv6)\
    \ Specification\", RFC 4443,\n                   March 2006.\n   [RFC4861]   \
    \    Narten, T., Nordmark, E., Simpson, W., and H.\n                   Soliman,\
    \ \"Neighbor Discovery for IP version 6\n                   (IPv6)\", RFC 4861,\
    \ September 2007.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [Gont]          Gont, F., \"On the problem of\
    \ long delays between\n                   connection-establishment attempts in\
    \ TCP\", Work\n                   in Progress, January 2009.\n   [ICMP-ATTACKS]\
    \  Gont, F., \"ICMP attacks against TCP\", Work\n                   in Progress,\
    \ October 2008.\n   [Linux]         The Linux Project, \"http://www.kernel.org\"\
    .\n   [RFC0816]       Clark, D., \"Fault isolation and recovery\", RFC 816,\n\
    \                   July 1982.\n   [RFC4943]       Roy, S., Durand, A., and J.\
    \ Paugh, \"IPv6 Neighbor\n                   Discovery On-Link Assumption Considered\
    \ Harmful\",\n                   RFC 4943, September 2007.\n   [RFC5382]     \
    \  Guha, S., Biswas, K., Ford, B., Sivakumar, S., and P.\n                   Srisuresh,\
    \ \"NAT Behavioral Requirements for TCP\",\n                   BCP 142, RFC 5382,\
    \ October 2008.\n   [Shneiderman]   Shneiderman, B., \"Response Time and Display\
    \ Rate in\n                   Human Performance with Computers\", ACM\n      \
    \             Computing Surveys, 1984.\n   [Stevens]       Stevens, W., \"TCP/IP\
    \ Illustrated, Volume 1: The\n                   Protocols\", Addison-Wesley,\
    \ 1994.\n   [Stevens2]      Wright, G. and W. Stevens, \"TCP/IP Illustrated,\n\
    \                   Volume 2: The Implementation\", Addison-Wesley, 1994.\n  \
    \ [Thadani]       Thadani, A., \"Interactive User Productivity\", IBM\n      \
    \             Systems Journal, No. 1, 1981.\n   [Zuquete]       Zuquete, A., \"\
    Improving the functionality of SYN\n                   cookies\", 6th IFIP Communications\
    \ and Multimedia\n                   Security Conference (CMS 2002), 2002.\n \
    \  [v6-ON]         Roy, S., Durand, A., and J. Paugh, \"Issues with Dual\n   \
    \                Stack IPv6 on by Default\", Work in Progress,\n             \
    \      July 2004.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Fernando Gont\n   Universidad Tecnologica Nacional / Facultad\
    \ Regional Haedo\n   Evaristo Carriego 2644\n   Haedo, Provincia de Buenos Aires\
    \  1706\n   Argentina\n   Phone: +54 11 4650 8472\n   EMail: fernando@gont.com.ar\n\
    \   URI:   http://www.gont.com.ar\n"
