- title: __initial_text__
  contents:
  - '                         Printer Finishing MIB

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a MIB module for the management of printer\n\
    \   finishing device subunits.  The finishing device subunits applicable\n   to\
    \ this MIB are an integral part of the Printer System.  This MIB\n   applies only\
    \ to a Finisher Device that is connected to a Printer\n   System.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n       1.1.  Scope . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n       1.2.  Rational. . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n       1.3.  The Internet-Standard Management Framework. . . . .\
    \ . .   4\n       1.4.  Read-Write Objects. . . . . . . . . . . . . . . . . .\
    \ .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n       2.1.  General Terminology . . . . . . . . . . . . . . . . . .  \
    \ 5\n       2.2.  Process Specific Terminology. . . . . . . . . . . . . .   9\n\
    \   3.  Finisher Subunits Integrated into the Printer Model . . . . .  12\n  \
    \ 4.  Finishing Specifications. . . . . . . . . . . . . . . . . . .  12\n    \
    \   4.1.  Multiple finDeviceTable Entries . . . . . . . . . . . .  13\n      \
    \ 4.2.  Implicit Parameters . . . . . . . . . . . . . . . . . .  13\n        \
    \     4.2.1.  FinPunchPatternTC . . . . . . . . . . . . . . .  14\n          \
    \   4.2.2.  FinPunchHoleTypeTC, punchHoleSizeMaxDim,\n                     punchHoleSizeMinDim\
    \ . . . . . . . . . . . . . .  15\n   5.  The Attribute Mechanism . . . . . .\
    \ . . . . . . . . . . . . .  15\n       5.1.  Conformance of Attribute Implementation\
    \ . . . . . . . .  16\n       5.2.  Useful, 'Unknown', and 'Other' Values for\
    \ Objects\n             and Attributes. . . . . . . . . . . . . . . . . . . .\
    \ .  16\n       5.3.  Data Sub-types and Attribute Naming Conventions . . . .\
    \  17\n       5.4.  Single-Value (Row) Versus Multi-Value (MULTI-ROW)\n      \
    \       Attributes. . . . . . . . . . . . . . . . . . . . . . .  17\n       5.5.\
    \  Linked MUTI-ROW Values. . . . . . . . . . . . . . . . .  17\n       5.6.  Index\
    \ Value Attributes. . . . . . . . . . . . . . . . .  17\n       5.7.  Attribute\
    \ Specifications. . . . . . . . . . . . . . . .  18\n   6.  Enumerations. . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  23\n       6.1.  Registering Additional\
    \ Enumerated Values. . . . . . . .  23\n   7.  IANA Printer Finishing MIB Specification.\
    \ . . . . . . . . . .  24\n   8.  Printer Finishing MIB Specification . . . .\
    \ . . . . . . . . .  30\n   9.  IANA Considerations . . . . . . . . . . . . .\
    \ . . . . . . . .  48\n   10. Internationalization Considerations . . . . . .\
    \ . . . . . . .  48\n   11. References. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  48\n       11.1. Normative References. . . . . . . . . . . . .\
    \ . . . . .  48\n       11.2. Informative References. . . . . . . . . . . . .\
    \ . . . .  49\n   12. Security Considerations . . . . . . . . . . . . . . . .\
    \ . . .  49\n   13. Acknowledgements. . . . . . . . . . . . . . . . . . . . .\
    \ . .  51\n   14. Authors' Addresses. . . . . . . . . . . . . . . . . . . . .\
    \ .  52\n   15. Full Copyright Statement. . . . . . . . . . . . . . . . . . .\
    \  53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes an SNMP Management Information Base\
    \ (MIB) to\n   provide for the management of in-line post-processing in a fashion\n\
    \   that is currently provided for printers, using the Printer MIB\n   [RFC3805].\
    \  The Printer Finishing MIB includes the following\n   features:\n   -  Provides\
    \ the status of the finishing device.\n   -  Queries and controls the features\
    \ and configuration of the\n      finishing device.\n   -  Enables and disables\
    \ the finishing processes.\n   -  Allows unsolicited status from the finishing\
    \ device.\n   The Finisher MIB is defined as an extension of the Printer MIB\n\
    \   [RFC3805] and it is expected that the information defined in this\n   document\
    \ will be incorporated into a future update of the Printer\n   MIB.\n"
- title: 1.1.  Scope
  contents:
  - "1.1.  Scope\n   This document provides a robust set of finishing devices, features,\n\
    \   and functions, based upon today's state of the art of in-line\n   finishing.\
    \  Since finishing typically accompanies higher speed\n   network printers and\
    \ copiers, in contrast to simple desktop devices,\n   no attempt is made to limit\
    \ the scope to \"bare minimum\".  On the\n   other hand, the Printer Finishing\
    \ MIB does not duplicate the\n   production mail preparation, custom insertion,\
    \ franking, and reprints\n   that are covered by the DMTF Large Mailing Operations\
    \ standard [LMO].\n   Information supplied by the Printer Finishing MIB may be\
    \ utilized by\n   printer and finisher management applications engaged in monitoring\n\
    \   status and managing configuration, and also used by print and\n   finishing\
    \ submission applications which are engaged in:\n   -  print-job-level finishing\
    \ processes that are applied to a complete\n      print job,\n   -  document-level\
    \ finishing processes that are applied individually\n      to each document in\
    \ the print job,\n   -  document-level finishing processes that are applied to\
    \ a selected\n      document in the print job.\n   Note that not all combinations\
    \ of finishing processes are permitted.\n   Compatible combinations of finishing\
    \ processes are implementation\n   specific.  The MIB allows invalid combinations\
    \ to be identified.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n"
- title: 1.2.  Rational
  contents:
  - "1.2.  Rational\n   The Printer MIB [RFC3805] is now successfully deployed in\
    \ a large\n   segment of the network printer market.  SNMP and/or HTTP enabled\n\
    \   printers and software management applications are growing in numbers.\n  \
    \ There is an increase in the availability of network printers and\n   copiers\
    \ that include in-line finishing processes.  Thus a well\n   defined and ordered\
    \ set of finishing objects is now necessary for\n   printer management.\n   The\
    \ printer model defined in the Printer MIB includes finishing\n   processes and\
    \ the MIB was designed to later incorporate finisher\n   objects or to be referenced\
    \ by a future Finisher MIB.\n"
- title: 1.3.  The Internet-Standard Management Framework
  contents:
  - "1.3.  The Internet-Standard Management Framework\n   For a detailed overview\
    \ of the documents that describe the current\n   Internet-Standard Management\
    \ Framework, please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed\
    \ objects are accessed via a virtual information store, termed\n   the Management\
    \ Information Base or MIB.  MIB objects are generally\n   accessed through the\
    \ Simple Network Management Protocol (SNMP).\n   Objects in the MIB are defined\
    \ using the mechanisms defined in the\n   Structure of Management Information\
    \ (SMI).  This memo specifies a MIB\n   module that is compliant to the SMIv2,\
    \ which is described in STD 58,\n   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579]\
    \ and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 1.4.  Read-Write Objects
  contents:
  - "1.4.  Read-Write Objects\n   Some objects in the Finisher MIB reflect the existence\
    \ or amount of a\n   given resource within the finisher.  Some examples of such\
    \ resources\n   are the size and number of sheets in an inserter tray or the\n\
    \   existence of certain finisher options.  Some finishers have automatic\n  \
    \ sensors for these resources.  Most finishers lack sensors for every\n   property\
    \ of every resource.  The management application is allowed to\n   write into\
    \ objects that hold descriptive or existence values for\n   finishers that cannot\
    \ sense these values.  The ability to change the\n   value of a read-write object\
    \ may depend on the implementation of the\n   agent.  Many objects in the MIB\
    \ are given read-write access, but an\n   implementation might only permit a management\
    \ application to change\n   the value if the finisher can not sense the value\
    \ itself.  Note that\n   even though some objects explicitly state the behavior\
    \ of conditional\n   ability to change values, any read-write object may act this\
    \ way.\n   Generally, an object is given read-write access in the Finisher MIB\n\
    \   specification if:\n   1. The object involves installation of a resource that\
    \ some finishers\n      cannot themselves detect.  Therefore, external means are\
    \ needed to\n      inform the device of the installation.  (Here external means\n\
    \      include using the operator console, or remote management\n      application)\
    \ and\n   2. The finisher will behave differently if the installation of the\n\
    \      resource is reported than if the installation were not reported;\n    \
    \  that is, the object is not to be used as a place to put\n      information\
    \ not used by the finisher, i.e., not a \"sticky-note\".\n      Another way of\
    \ saying this is that the finisher believes that\n      information given it and\
    \ acts as if the information were true.\n   3. The finisher may get hints that\
    \ it may not know about the\n      existence or properties of certain resources.\
    \  For example, a\n      paper tray may be removed and re-inserted.  When this\
    \ removal and\n      insertion happens, the finisher may either assume that a\
    \ property,\n      such as the size of paper in the tray, has not changed or the\n\
    \      finisher may change the value of the associated object to\n      \"unknown\"\
    , as might be done for the amount of paper in the tray.\n      As long as the\
    \ finisher acts according to the value in  the object\n      either strategy is\
    \ acceptable.\n   4. It is an implementation-specific matter as to whether or\
    \ not MIB\n      object values are persistent across power cycles or cold starts.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Where appropriate, the Printer Finishing MIB will conform\
    \ to the\n   terminology, syntax, and semantics from the DMTF Large Mailing\n\
    \   Operations standard [LMO], the Internet Printing Protocol [RFC2911],\n   and/or\
    \ the ISO Document Printing Application [DPA].\n"
- title: 2.1.  General Terminology
  contents:
  - "2.1.  General Terminology\n   Finisher Input:  An input tray on the finisher\
    \ and not otherwise\n   associated with the printer.  An example of a finisher\
    \ input is a\n   tray that holds finishing \"inserts\".\n                    \
    \  ^ Y\n                      |\n                      |<---- Reference Edge\n\
    \                      |\n                      |  |<--- Finishing Process Axis\n\
    \                      |  |\n                  --->|  |<--- Finishing Process\
    \ Offset\n                      |  |\n    Head              +=========================+\
    \ (X2,Y4)\n    Locations         #  |                      #\n               \
    \ +-----#----+                    #\n       -----Y3--|-----#--O | <--+- Head \
    \        #\n       ^        +-----#----+    |  Mechanisms   #\n       |      \
    \        #  |      |               #\n       |              #  |      |      \
    \         #\n       |              #  |      |               #\n       |     \
    \         #  |      |               #\n       |        +-----#----+    |     \
    \          #\n       | ---Y2--|-----#--O | <--+               #\n       | ^  \
    \    +-----#----+    |               #\n       | |            #  |      |    \
    \           #\n       | |            #  |      |               #\n       | | \
    \           #  |      |               #\n       | |            #  |      |   \
    \            #\n       | |      +-----#----+    |               #\n       | |\
    \ -Y1--|-----#--O | <--+               #\n       | | ^    +-----#----+       bottom\
    \ right #\n       | | |          #  |               corner #    X\n      ---------------\
    \ +==+======================+ ---->\n                  (0,0)  (X1,0)\n   Figure\
    \ 1 - Finishing Process Axis Parallel to Y Axis\n         ^ Y\n         |    \
    \    Head Locations\n         |<---------------->|---X2\n         |<---->|---X1\
    \      |\n         |      |           |\n         |    +-|-+       +-|-+\n   \
    \      |    | | |       | | |  (X3,Y2)\n         +======|===========|======+\n\
    \         #    | | |       | | |    # Finishing Process Axis\n         #----|\
    \ O |-------| O |----#----- Y1\n         #    +---+       +---+    #   ^\n   \
    \      #      ^           ^      #   |\n         #      |           |      # \
    \  |\n         #      +-----------+      #   |\n         #      |            \
    \      #   |\n         #     Head                #   |\n         #     Mechanisms\
    \          #   |\n         #                         #   |\n         #       \
    \                  # Finishing Process Offset\n         #                    \
    \     #   |\n         #                         #   |\n         #            \
    \             #   |\n         #                         #   |\n         #    \
    \                     #   |\n         #                         #   |\n      \
    \   #            bottom right #   |\n         #                  corner #   v\
    \   X\n         +=========================+ ------>\n       (0,0)            \
    \  Reference Edge\n   Figure 2 - Finishing Process Axis Parallel to X Axis\n \
    \  Finisher Output:  The output of the finisher.  Because processing is\n    in-line,\
    \ the finisher outputs are a direct extension of the set of\n    printer outputs.\n\
    \   Media Orientation:  All Finishing Processes are defined relative to a\n  \
    \  portrait orientation of the medium, regardless of the orientation of\n    the\
    \ printed image or the direction of feed.  The 'X' and 'Y' axis,\n    therefore,\
    \ will always reference the medium as shown in figures 1\n    and 2, with the\
    \ 'X' axis always along the short edge of the medium.\n    All edges and corners\
    \ are also defined with the medium orientation\n    as shown using the syntax\
    \ top, bottom, left, and right.  Thus the\n    bottom edge of the medium is at\
    \ Y = 0, the left edge is at X = 0,\n    and the bottom right corner is at (X2,0)\
    \ as shown in the figure 1\n    and at (X3,0) as shown in figure 2.\n   Finishing:\
    \  Defined by DPA as an operation on a document following\n    the completion\
    \ of the image process.  Finishing processes defined\n    within this document\
    \ are those applied to one or more instances of\n    rectangular paper sheet media.\n\
    \   Finishing Process:  Defined by DPA as an operation applied by a\n    machine\
    \ such as trimming a document, folding the sheets in a\n    document, and applying\
    \ a binding to a document.\n   Finishing Specification:  Defined by DPA as the\
    \ specific sequence of\n    operations for a serial combination of finishing processes.\
    \  The\n    exact sequential order of the processes, in many cases, is critical\n\
    \    to the obtaining the desired result.  For example, a folding\n    operation\
    \ followed by trimming could provide a very different result\n    than if the\
    \ trimming was followed by the folding.\n   Finishing Process Parameters:  This\
    \ parameter set is used to create a\n    detailed definition of the finishing\
    \ process.  Generic Finishing\n    Process Parameters are applicable to any Finishing\
    \ Specification.\n   -  Head Mechanism:  Defined by DPA as the physical mechanism\
    \ that is\n      used to perform a finishing process.  The head position may be\n\
    \      fixed or variable depending upon the capabilities of the device.\n   -\
    \  Reference Edge:  Defined by DPA as the edge of the document\n      relative\
    \ to the axis to which the finishing process is applied.\n      The edge of the\
    \ medium defined to be the Reference Edge may be\n      either the 'X' or the\
    \ 'Y' axis, depending upon the finishing\n      process to be performed.\n   \
    \   Note that the Reference Edge may change from one finishing process\n     \
    \ to another for one of two reasons.  First, a subsequent process\n      may require\
    \ a different Reference Edge.  Second, the actual\n      dimensions of the document\
    \ may change, for example as a result of\n      a folding or a trimming operation.\n\
    \   -  Jog Edge:  Defined by DPA as one of the two edges that is\n      perpendicular\
    \ to the Reference Edge.  Specifying the Jog Edge\n      parameter indicates the\
    \ edges of all sheets which correspond to\n      the Jog Edge are aligned.\n \
    \  -  Finishing Process Axis:  Defined by DPA as the axis which some\n      finishing\
    \ processes are applied to or referenced from by the Head\n      Mechanism.  Examples\
    \ are the axis for a fold process or the axis\n      for a punch process.\n  \
    \ -  Head Locations:  Defined by DPA as the position of the Heads on\n      the\
    \ Finishing Process Axis.\n   -  Finishing Process Offset:  The offset from the\
    \ Reference Edge to\n      the Finishing Process Axis at which the finishing process\
    \ takes\n      place or is applied.\n"
- title: 2.2.  Process Specific Terminology
  contents:
  - "2.2.  Process Specific Terminology\n   FOLDING:\n   Z Fold:  A fold in which\
    \ two folds are placed in the sheet in\n     opposite directions.  The first fold\
    \ is located at 25% of the sheet\n     length, and the second is located at 50%\
    \ of the sheet length (i.e.,\n     the center of the sheet).  Z Folding is often\
    \ used on 11x17 inch or\n     A3 size sheets, when they are included in sets containing\
    \ 8.5x11\n     inch or A4 size sheets.\n   Half Fold:  To fold a sheet in half\
    \ so that one of the resulting\n     dimensions are exactly half the original\
    \ sheet.  Often used for\n     signatures or booklets.\n   Letter Fold:  Folding\
    \ a sheet roughly in thirds.  Usually performed\n     on 8.5x11 inch or A4 size\
    \ sheets for insertion into an envelope.\n   Signature:  The process by which\
    \ images are placed on a large sheet\n     of paper in correct panel areas and\
    \ in the proper orientation such\n     that when the sheet is folded it will produce\
    \ a booklet with each\n     page in the proper order and orientation.\n   BINDING:\n\
    \   Adhesive Binding:  A method of attaching sheets together to form a\n     book\
    \ or booklet using glue or adhesive.  Some adhesive binding\n     methods apply\
    \ the glue to sheets individually, before merging them\n     together for form\
    \ a book, but most methods involve the application\n     of adhesive to an entire\
    \ book of sheets.\n   Comb Binding:  A method of binding in which a series of\
    \ small\n     rectangular holes is placed along the bind edge of the sheets. \
    \ The\n     sheets are then held together using a tube shaped plastic binding\n\
    \     strip with comb like fingers that fit through the holes in the\n     sheets.\n\
    \   Spiral Binding:  Sometimes referred to as wire binding, this binding\n   \
    \  method is a mechanical bind in which the individual leaves are held\n     together\
    \ by a wire or plastic spiral that is fed through small\n     holes in the paper\
    \ binding edge.\n   Padding:  Applying a non-penetrating adhesive to the edge\
    \ of a stack\n     of sheets such that the sheets can be easily peeled off one\
    \ at a\n     time.  Frequently used for forms.\n   Velo Binding:  A bind formed\
    \ by punching holes into the edge of the\n     sheets, placing a two piece plastic\
    \ strip (one side formed with\n     plastic pins that pass through the holes)\
    \ along the edge and then\n     staking the two pieces together.\n   Perfect Binding:\
    \  A method of binding in which all pages are cut and\n     roughed up at the\
    \ back or binding edge and held together by an\n     adhesive.\n   Tape Binding:\
    \  The act of placing tape over the bind edge of a set.\n     Sometimes contains\
    \ adhesive to provide a functional bind to the\n     set, and sometimes done for\
    \ decorative purposes on a set that has\n     been edge stapled.\n   SLITTING/CUTTING/TRIMMING:\n\
    \   Trim:  To cut the edges of a sheet or set of sheets.\n   Face Trim:  To cut\
    \ the edges of a set of sheets on a booklet of\n     sheets that have been folded\
    \ to eliminate the \"creep\" or edge\n     shingling that results from the folding\
    \ process.\n   Gutter Trim:  To cut a larger sheet into smaller sheets eliminating\n\
    \     the gutter between adjacent images.  This operation requires a\n     minimum\
    \ of two cuts for each gutter.\n   Tab Cutting:  The act of cutting the edge of\
    \ a sheet to form an index\n     tab, thereby allowing quick identification and\
    \ access.  The\n     external tabs are sequentially placed along the book edge\
    \ for\n     visibility and ease of grasping.\n   Perforating:  The act of cutting\
    \ a series of very small, closely\n     spaced holes or slots into a sheet to\
    \ allow for ease of separation\n     of a portion of the sheet.  Sometimes also\
    \ used to ease\n     bending/hinging of heavy weight papers.\n   Scoring:  A means\
    \ of applying small linear grooves or impressions\n     along a sheet to allow\
    \ easy folding.  Often used on heavy weight\n     sheets and book covers.\n  \
    \ Slitting:  The action of cutting apart a large sheet to form smaller\n     sheets.\
    \  Usually done using a sharp circular roll system.\n   STITCHING/STAPLING:\n\
    \   Staple:  The process of binding a set of sheets together using a 'U'\n   \
    \  shaped piece of metal wire that is punched through the set.  The\n     ends\
    \ of the metal staple are then bent over, or 'clinched' to hold\n     the staple\
    \ in place.  Technically the term 'stapler' refers to\n     devices that use pre-cut\
    \ metal staples, but the term is also\n     commonly used to refer to devices\
    \ that use wire spools and then\n     cut/form the staple.  (see the definition\
    \ of Stitch)\n   Stitch:  The process of binding a set of sheets together using\
    \ a 'U'\n     shaped piece of metal wire that is punched through the set.  The\n\
    \     wire used to form the staple is cut and formed into a 'U' shape in\n   \
    \  the stitcher head, and the staple 'leg' length is often varied\n     depending\
    \ on the number of sheets to be bound together.  The ends\n     of the metal staple\
    \ are bent over, or 'clinched' to hold the staple\n     in place.\n     Stitching\
    \ can also refer to the process of sewing the edges of the\n     signatures of\
    \ a book together.\n   Saddle Stitch:  The process of stapling a set along its\
    \ center line\n     as part of a booklet making process.  Usually 2 or 3 staples\
    \ are\n     used.\n   Dual Stapling:  The process of placing 2 staples along the\
    \ bind edge\n     of a set.  The staples are typically located at 25% and 75%\
    \ of the\n     length of the bind edge.  Although dual stapling is often performed\n\
    \     on the long edge of a set, legal documents are frequently dual\n     stapled\
    \ along the top, or short edge of the set.\n   Triple Stapling:  Same as above,\
    \ but using 3 staples along the bind\n     edge, and usually applies to the long\
    \ edge only.\n   WRAPPING:\n   Shrink Wrap:  A wrap of thin plastic which when\
    \ heated will shrink\n     and wrap tightly around the stack thus preparing it\
    \ for shipment.\n   BANDING:\n   Band Wrap:  Bundling a finished stack to prepare\
    \ for shipment.  Also\n     known as Strap Wrap.\n   ROTATING:\n   Sheet Rotator:\
    \  A device that rotates each sheet as received from the\n     Media Path to the\
    \ proper orientation for the finisher processing.\n"
- title: 3.  Finisher Subunits Integrated Into The Printer Model
  contents:
  - "3.  Finisher Subunits Integrated Into The Printer Model\n   The Printer Finisher\
    \ Device subunits receive media from one or more\n   Printer Media Path subunits\
    \ and deliver the media to one or more\n   Printer Output subunits after the completion\
    \ of the finishing\n   processes.  The Printer Model, as described in the Printer\
    \ MIB\n   [RFC3805], is modified adding the finisher subunit(s) and finisher\n\
    \   supplies between the media path and output subunits as follows:\n        \
    \           +----------+\n                 +----------+ |\n                 |\
    \  Marker  | |\n                 | Supplies |-+\n                 +----------+\n\
    \                       \\\n  +-----+               \\ +------+              \
    \  +--------+    +------+\n  |     |                \\|      |               \
    \ |        |    |      |\n"
- title: +-----+ |    +-----+    +------+ |   +------+   +--------+ |  +------+ |
  contents:
  - '+-----+ |    +-----+    +------+ |   +------+   +--------+ |  +------+ |

    '
- title: '|Input|-+  +------+|    |Marker|-+  +------+|   |Finisher|-+  |Output|-+'
  contents:
  - '|Input|-+  +------+|    |Marker|-+  +------+|   |Finisher|-+  |Output|-+

    '
- title: '|     |===>|      |+<==>|      |<==>|      |+==>|        |===>|      |'
  contents:
  - '|     |===>|      |+<==>|      |<==>|      |+==>|        |===>|      |

    '
- title: +-----+    +-+  +-+     +------+    +-+  +-+    +--------+    +------+
  contents:
  - "+-----+    +-+  +-+     +------+    +-+  +-+    +--------+    +------+\n   \\\
    \         |  ||                    |  ||         \\\n    \\        |  ||     \
    \               |  ||          \\\n     \\       |  ||                    |  ||\
    \    +----------+\n  +-------+  |  |+--------------------|  ||    | Finisher |-+\n\
    \  |       |  |  +---------------------+  ||    | Supplies | |\n"
- title: +-------+ |  |         Media Path        |+    +----------+ |
  contents:
  - '+-------+ |  |         Media Path        |+    +----------+ |

    '
- title: '| Media |-+  +---------------------------+       |          |'
  contents:
  - '| Media |-+  +---------------------------+       |          |

    '
- title: '|(opt.) |                                        +----------+'
  contents:
  - '|(opt.) |                                        +----------+

    '
- title: +-------+
  contents:
  - '+-------+

    '
- title: 4.  Finishing Specifications
  contents:
  - "4.  Finishing Specifications\n   The Finisher MIB is able to provide most of\
    \ the information that is\n   required to generate a Finishing Specification.\
    \  This includes;\n   1. Finishing operations that can be performed on media that\
    \ are\n      associated with a specific printer media path and output subunit.\n\
    \   2. Combinations of operations that cannot be performed.\n   3. The location\
    \ of the operation on the medium, if applicable.\n   4. The physical characteristics\
    \ of the result of the operation.  For\n      example, the size and shape of a\
    \ punched hole, or if a fold\n      operation creates a letter fold or a \"Z\"\
    \ fold.\n   The Finisher MIB permits an agent to describe the order that\n   operations\
    \ can be performed.\n"
- title: 4.1.  Multiple finDeviceTable Entries
  contents:
  - "4.1.  Multiple finDeviceTable Entries\n   Each finishing operation supported\
    \ by the printer is represented by\n   one or more entries in the finDeviceTable.\
    \  Each entry in this table\n   defines a \"logical\" finishing device, since\
    \ the function of several\n   table entries may be performed by a single finisher\
    \ mechanism.\n   Multiple entries may also exist in the table as a result of the\n\
    \   existence of multiple finisher mechanisms that perform the same type\n   of\
    \ operation.\n   One example of possible multiple entries for a single finisher\n\
    \   device, is a hole punch operation that creates more than one hole.\n   This\
    \ could be performed using a single die punch that moves to each\n   required\
    \ position or a multi-die punch that simultaneously creates\n   all holes.  In\
    \ either case, each defined hole position may be defined\n   as a separate table\
    \ entry.\n   In both cases, if the punch positions can be individually selected,\
    \ a\n   table entry for each position would be necessary.\n   For the multi-die\
    \ punch, each head mechanism may have a different\n   hole pattern or size.  If\
    \ these differences are to be properly\n   disclosed, a table entry for each head\
    \ mechanism would be required.\n"
- title: 4.2.  Implicit Parameters
  contents:
  - "4.2.  Implicit Parameters\n   Finishing operations that are specified by an enum\
    \ define a standard\n   operation and in many cases an implicit set of physical\n\
    \   characteristics is to be included when specifying the enum.  If\n   explicit\
    \ values for these characteristics are not provided in the\n   attributes table,\
    \ the values defined in this section are to be\n   implied.\n"
- title: 4.2.1.  FinPunchPatternTC
  contents:
  - "4.2.1.  FinPunchPatternTC\n   enum pattern       |Reference| Reference | Hole\
    \ spacing\n                      | Edge    |Axis Offset| (see note 1)\n   -------------------+---------+-----------+---------------------------\n\
    \   twoHoleUSTop(4)    | topEdge |   note 2  | 2.75 inches\n   threeHoleUS(5)\
    \     |  note 3 |   note 2  | 4.25 inches\n   twoHoleDIN(6)      |  note 4 | \
    \  note 5  | 80 mm\n   fourHoleDIN(7)     |  note 4 |   note 5  | 80 mm\n   twentyTwoHoleUS(8)\
    \ |  note 3 |   note 2  | .5 inches\n   nineteenHoleUS(9)  |  note 3 |   note\
    \ 9  | .5625 inches\n   twoHoleMetric(10)  |  note 6 |   note 5  | 80 mm\n   swedish4Hole(11)\
    \   |  note 4 |   note 5  | 21, 70, 21 mm\n   twoHoleUSSide(12)  |  note 3 | \
    \  note 2  | 2.75 inches\n   fiveHoleUS(13)     |  note 3 |   note 2  | 2, 2.25,\
    \ 2.25, 2 in\n   sevenHoleUS(14)    |  note 3 |   note 2  | 1, 1, 2.25, 2.25,\
    \ 1, 1 in\n   mixed7H4S(15)      |  note 4 |   note 5  | note 7\n   norweg6Hole(16)\
    \    |  note 4 |   note 5  | note 8\n   metric26Hole(17)   |  note 6 |   note\
    \ 5  | 9.5 mm\n   metric30Hole(18)   |  note 4 |   note 5  | 9.5 mm\n   Notes:\n\
    \   1. All hole to hole patterns are centered along the process edge.\n   2. Offset\
    \ is 0.18 inches to 0.51 inches.\n   3. Reference edge is leftEdge(5) for letter\
    \ and topEdge(3) for\n      ledger.\n   4. Reference edge is leftEdge(5) for A4\
    \ and topEdge(3) for A3.\n   5. Offset is 4.5 mm to 13 mm.\n   6. Reference edge\
    \ is leftEdge(5) for B5 and topEdge(3) for B4.\n   7. 7 holes and 4 slots are\
    \ punched in a H-S-H-H-S-H-S-H-H-S-H pattern\n      with 15, 25, 23, 20, 37, 37,\
    \ 20, 23, 25, 15 mm spacing.\n   8. 4 holes and 2 slots are punched in a H-H-S-S-H-H\
    \ pattern with a\n      64, 18.5, 75, 18.5, 64 mm spacing.\n   9. Offset is .188\
    \ inches.\n"
- title: 4.2.2  FinPunchHoleTypeTC, punchHoleSizeMaxDim, punchHoleSizeMinDim
  contents:
  - "4.2.2  FinPunchHoleTypeTC, punchHoleSizeMaxDim, punchHoleSizeMinDim\n   enum\
    \ pattern       | Hole Description\n   -------------------+----------------------------------------\n\
    \   twoHoleUSTop(4)    | round(3), .2 - .32 inch diameter\n   threeHoleUS(5) \
    \    | round(3), .2 - .32 inch diameter\n   twoHoleDIN(6)      | round(3),  5\
    \ - 8 mm diameter\n   fourHoleDIN(7)     | round(3),  5 - 8 mm diameter\n   twentyTwoHoleUS(8)\
    \ | round(3), .2 - .32 inch diameter\n   nineteenHoleUS(9)  | rectang(6), .313\
    \ inches X .125 inches\n   twoHoleMetric(10)  | round(3),  5 - 8 mm diameter\n\
    \   swedish4Hole(11)   | round(3),  5 - 8 mm diameter\n   twoHoleUSSide(12)  |\
    \ round(3), .2 - .32 inch diameter\n   fiveHoleUS(13)     | round(3), .2 - .32\
    \ inch diameter\n   sevenHoleUS(14)    | round(3), .2 - .32 inch diameter\n  \
    \ mixed7H4S(15)      | round(3),  5 - 8 mm diameter\n                      | rectang(6),\
    \  12 mm X 6 mm\n   norweg6Hole(16)    | round(3),  5 - 8 mm diameter\n      \
    \                | rectang(6),  10 mm  X 5.5 mm\n   metric26Hole(17)   | round(3),\
    \  5 - 8 mm\n   metric30Hole(18)   | round(3),  5 - 8 mm\n   Note: Hole size ranges\
    \ are typical and are provided as a reference\n   only.  Exact tolerances should\
    \ be site defined.\n"
- title: 5.  The Attribute Mechanism
  contents:
  - "5.  The Attribute Mechanism\n   Attributes provide a function similar to information\
    \ objects, except\n   that attributes are identified by an enum, instead of an\
    \ OID.  Thus\n   new attributes may be registered without requiring a change to\
    \ the\n   MIB.  In addition, an implementation that does not have the\n   functionality\
    \ represented by the attribute can omit the attribute\n   entirely, rather than\
    \ having to return a distinguished value.  The\n   agent is free to create an\
    \ attribute in the Attribute Table as soon\n   as the agent is aware of the value\
    \ of the attribute.\n   The agent materializes finishing subunit attributes in\
    \ a four-indexed\n   finDeviceAttributeTable:\n   1. hrDeviceIndex - which device\
    \ in the host\n   2. finDeviceIndex - which finisher subunit in the printer device\n\
    \   3. finDeviceAttributeTypeIndex - which attribute\n   4. finDeviceAttributeInstanceIndex\
    \ - which attribute instance for\n      those attributes that can have multiple\
    \ values per finishing\n      subunit.\n"
- title: 5.1.  Conformance of Attribute Implementation
  contents:
  - "5.1.  Conformance of Attribute Implementation\n   An agent SHALL implement any\
    \ attribute if (1) the device supports the\n   functionality represented by the\
    \ attribute and (2) the information is\n   available to the agent.  The agent\
    \ MAY create the attribute row in\n   the finDeviceAttributeTable when the information\
    \ is available or MAY\n   create the row earlier with the designated 'unknown'\
    \ value\n   appropriate for that attribute.  See next section.\n   If the device\
    \ does not implement or does not provide access to the\n   information about an\
    \ attribute, the agent SHOULD NOT create the\n   corresponding row in the finDeviceAttributeTable.\n"
- title: 5.2.  Useful, 'Unknown', and 'Other' Values for Objects and Attributes
  contents:
  - "5.2.  Useful, 'Unknown', and 'Other' Values for Objects and Attributes\n   Some\
    \ attributes have a 'useful' Integer32 value, some have a 'useful'\n   OCTET STRING\
    \ value, some MAY have either or both depending on\n   implementation, and some\
    \ MUST have both.  See the\n   finDeviceAttributeTypeTC textual convention for\
    \ the specification of\n   each attribute.\n   NOTE: In some instances, objects\
    \ with a MAX-ACCESS of read-write will\n   result in an SNMPv1 error or SNMPv2\
    \ exception during a write\n   operation.  The administrative security policy\
    \ may restrict a class\n   of users to read-only or, more importantly, the implementation\
    \ may\n   implement a subset of read-write objects as read-only.  This should\n\
    \   be expected to be the case for a device that can properly sense the\n   value\
    \ of an object and does not want the value to be externally\n   modified.\n  \
    \ In general, values for objects and attributes have been chosen so\n   that a\
    \ management application will be able to determine whether a\n   'useful', 'unknown',\
    \ or 'other' value is available.  When a useful\n   value is not available for\
    \ an object that agent SHALL return a zero-\n   length string for octet strings,\
    \ the value 'unknown(2)' for enums, a\n   '0' value for an object that represents\
    \ an index in another table,\n   and a value '-2' for counting integers.\n   Since\
    \ each attribute is represented by a row consisting of both the\n   finDeviceAttributeValueAsInteger\
    \ and finDeviceAttributeValueAsOctets\n   MANDATORY objects, SNMP requires that\
    \ the agent SHALL always create\n   an attribute row with both objects specified.\
    \  However, for most\n   attributes the agent SHALL return a \"useful\" value\
    \ for one of the\n   objects and SHALL return the 'other' value for the other\
    \ object.  For\n   integer only attributes, the agent SHALL always return a zero-length\n\
    \   string value for the finDeviceAttributeValueAsOctets object.  For\n   octet\
    \ string only attributes, the agent SHALL always return a '-1'\n   value for the\
    \ finDeviceAttributeValueAsInteger object.\n"
- title: 5.3.  Data Sub-types and Attribute Naming Conventions
  contents:
  - "5.3.  Data Sub-types and Attribute Naming Conventions\n   Many attributes are\
    \ sub-typed to give a more specific data type than\n   Integer32 or OCTET STRING.\
    \  The data sub-type of each attribute is\n   indicated on the first line(s) of\
    \ the description.  Some attributes\n   have several different data sub-type representations.\
    \  When an\n   attribute has both an Integer32 data sub-type and an OCTET STRING\n\
    \   data sub-type, the attribute can be represented in a single row in\n   the\
    \ finDeviceAttributeTable.  In this case, the data sub-type name is\n   not included\
    \ as the last part of the name of the attribute.  When the\n   data sub-types\
    \ cannot be represented by a single row in the\n   finDeviceAttributeTable, each\
    \ such representation is considered a\n   separate attribute and is assigned a\
    \ separate name and enum value.\n   For these attributes, the name of the data\
    \ sub-type is the last part\n   of the name of the attribute.\n"
- title: 5.4.  Single-Value (Row) Versus Multi-Value (MULTI-ROW) Attributes
  contents:
  - "5.4.  Single-Value (Row) Versus Multi-Value (MULTI-ROW) Attributes\n   Most attributes\
    \ shall have only one row per finishing subunit.\n   However, a few attributes\
    \ can have multiple values per finishing\n   subunit, where each value is a separate\
    \ row in the\n   finDeviceAttributeTable.  Unless indicated with 'MULTI-ROW:'\
    \ in the\n   finDeviceAttributeTypeTC description, an agent SHALL ensure that\
    \ each\n   attribute occurs only once in the finDeviceAttributeTable for a\n \
    \  finishing subunit.  Most of the 'MULTI-ROW' attributes do not allow\n   duplicate\
    \ values, i.e., the agent SHALL ensure that each value occurs\n   only once for\
    \ a finishing subunit.  Only if the specification of the\n   'MULTI-ROW' attribute\
    \ also says \"There is no restriction on the same\n   xxx occurring in multiple\
    \ rows\" can the agent allow duplicate values\n   to occur for a single finishing\
    \ subunit.\n"
- title: 5.5.  Linked MUTI-ROW Values
  contents:
  - "5.5.  Linked MUTI-ROW Values\n   Some MULTI-ROW attributes are intended to go\
    \ together.  Thus a set of\n   value instances represent a single instance.  For\
    \ example, the\n   puncher attributes indicate the location, maximum size, minimum\
    \ size\n   and shape of the various holes that the puncher can produce.  So the\n\
    \   first set of values could represent one kind of hole, and the second\n   set\
    \ another kind of hole, etc.\n"
- title: 5.6.  Index Value Attributes
  contents:
  - "5.6.  Index Value Attributes\n   A number of attributes are indexes in other\
    \ tables.  Such attribute\n   names end with the word 'Index'.  If the agent has\
    \ not (yet) assigned\n   an index value for a particular index attribute for a\
    \ finishing\n   subunit, the agent shall either: (1) return the value 0 or (2)\
    \ not\n   add this attribute to the finDeviceAttributeTable until the index\n\
    \   value is assigned.  In the interests of brevity, the semantics for 0\n   is\
    \ specified once here and is not repeated for each index attribute\n   specification\
    \ and a DEFVAL of 0 is indicated.\n"
- title: 5.7.  Attribute Specifications
  contents:
  - "5.7.  Attribute Specifications\n   This section specifies the set of attributes\
    \ that are enumerated in\n   finAttributeTypeTC.  The data type tag definitions\
    \ 'INTEGER:'  or\n   'OCTETS', indicate if the attribute can be represented using\
    \ the\n   object finDeviceAttributeAsInteger or the object\n   finDeviceAttributeAsOctets,\
    \ respectively.  In some cases, a choice\n   between the two data types is possible\
    \ and for a few attributes both\n   objects may be required at the same time to\
    \ properly present the\n   value.\n   NOTE - The enum assignments are grouped\
    \ logically with values\n   assigned in groups of 10, so that additional values\
    \ may be registered\n   in the future and assigned a value that is part of their\
    \ logical\n   grouping.\n   Values in the range 2**30 to 2**31-1 are reserved\
    \ for private or\n   experimental usage.  This range corresponds to the same range\n\
    \   reserved in IPP.  Implementers are warned that use of such values may\n  \
    \ conflict with other implementations.  Implementers are encouraged to\n   request\
    \ registration of enum values following the procedures in\n   Section 6.1.\n \
    \  The attribute types defined at the time of completion of this\n   specification\
    \ are:\n   finAttributeTypeIndex              Data type\n   ---------------------\
    \              ---------\n   other(1),                          Integer32\n  \
    \                                    AND/OR\n                                \
    \      OCTET STRING (SIZE(0..63))\n      INTEGER: and/or OCTETS:  An attribute\
    \ that is not currently\n        approved and registered.\n   A. Generic finisher\
    \ subunit attributes that apply to all finisher\n      subunit types.  (3..)\n\
    \      deviceName(3),                     OCTET STRING (SIZE(0..63))\n       \
    \  OCTETS:  The name assigned to this finisher device subunit.\n      deviceVendorName(4),\
    \               OCTET STRING (SIZE(0..63))\n         OCTETS:  The name of the\
    \ vendor of this finisher device\n           subunit.\n      deviceModel(5), \
    \                   OCTET STRING (SIZE(0..63))\n         OCTETS:  The model name\
    \ of this finisher device subunit.\n      deviceVersion(6),                  OCTET\
    \ STRING (SIZE(0..63))\n         OCTETS:  The version string for this finisher\
    \ device\n           subunit.\n      deviceSerialNumber(7),             OCTET\
    \ STRING (SIZE(0..63))\n         OCTETS:  The serial number assigned to this finisher\
    \ device\n           subunit.\n      maximumSheets(8),                  Integer32\
    \ (-2..32767)\n         INTEGER:  Defines the maximum number of media sheets that\
    \ a\n           finisher device is able to process.\n      finProcessOffsetUnits(9),\
    \          PrtMediaUnitTC\n         INTEGER:  An enumeration which defines the\
    \ units of measure\n           for the attributes finAxisOffset, finHeadLocation,\n\
    \           punchHoleSizeLongDim, and punchHoleSizeShortDim.\n      finReferenceEdge(10),\
    \              FinEdgeTC\n         INTEGER:  An enumeration which defines which\
    \ edge of the\n           form is the reference for this finishing process.  The\n\
    \           Finishing Process Axis will be parallel to this axis.\n      finAxisOffset(11),\
    \                 Integer32 (-2..2147483647)\n         INTEGER:  Defines the offset\
    \ of the Finishing Process\n           Axis from the parallel Reference Edge.\
    \  For a value of\n           finEdgeTC equal to TopEdge or RightEdge, the value\n\
    \           given is to interpreted as a negative offset from the\n          \
    \ reference edge.  The units of measure are defined by the\n           attribute\
    \ finProcessOffsetUnits.\n      finJogEdge(12),                    FinEdgeTC\n\
    \         INTEGER:  An enumeration which defines a second edge of the\n      \
    \     document to which the media is aligned.  The jog edge must\n           be\
    \ perpendicular to the edge defined by finReferenceEdge.\n      finHeadLocation(13),\
    \               Integer32 (-2..2147483647)\n         INTEGER: MULTI-ROW:  Defines\
    \ the position of the Head\n           Mechanism relative to the axis, 'X' or\
    \ 'Y', that is\n           perpendicular to the Process Axis.  The units of measure\n\
    \           are defined by the attribute finProcessOffsetUnits.\n      finOperationRestrictions(14),\
    \      Integer32 (0..65535)\n         INTEGER: MULTI-ROW:  Defines the finDeviceIndex\
    \ of a\n           finishing process which cannot be combined with the\n     \
    \      process defined by the finDeviceIndex for this\n           finDeviceAttributeTable\
    \ instance.  When this condition\n           occurs this attribute SHALL be presented\
    \ in the\n           attribute tables for both finishing processes that cannot\n\
    \           be combined.\n      finNumberOfPositions(15),          Integer32 (0..65535)\n\
    \         INTEGER:  Defines the total number of head positions for\n         \
    \  this finishing process.  Each position many be realized by\n           a unique\
    \ head mechanism or a single head mechanism may be\n           automatically moved\
    \ to each position.\n      namedConfiguration(16),            OCTET STRING (SIZE(0..63))\n\
    \         OCTETS:  Contains an administratively define name to define\n      \
    \     the finishing specification configured for this device.\n      finMediaTypeRestriction(17),\
    \       OCTET STRING (SIZE(0..63))\n         OCTETS: MULTI-ROW:  Defines the media\
    \ type which cannot be\n           combined with the process defined by the finDeviceIndex\n\
    \           for this finDeviceAttributeTable instance.  Values are the\n     \
    \      same as defined for finSupplyMediaInputMediaName.\n      finPrinterInputTraySupported(18),\
    \  Integer32 (0..65535)\n         INTEGER: MULTI-ROW:  Defines the value of prtInputIndex\n\
    \           corresponding to the printer input tray that can be used\n       \
    \    with the process defined by the finDeviceIndex for this\n           finDeviceAttributeTable\
    \ instance.  If this attribute is\n           not present, this process can be\
    \ used with any input tray\n           in the printer.  For example, this attribute\
    \ can indicate\n           the current stapling capabilities for a stapler device\n\
    \           for the input trays that depend upon the size and feed\n         \
    \  orientation.  So if there were two letter trays, one with\n           A size\
    \ and the other with B size, a two position stapler\n           might specify\
    \ in one row: upper-left and upper-right for\n           the input tray with A\
    \ size, but only upper-left for the\n           one with B size.\n      finPreviousFinishingOperation(19),\
    \         Integer32 (0..65535)\n         INTEGER:  Defines the finDeviceIndex\
    \ of the previous\n           finishing process for implementations in which the\n\
    \           finishing processes are performed in a prescribed order.\n       \
    \    Each finishing process in the fixed sequence is either\n           performed\
    \ or not performed according to the finishing\n           instructions submitted\
    \ with the job.  A value of 0\n           indicates that this finishing process\
    \ is the first in a\n           sequence.  Finishing processes which are not part\
    \ of a\n           fixed sequence SHALL NOT have this attribute.\n      finNextFinishingOperation(20),\
    \             Integer32 (0..65535)\n         INTEGER:  Defines the finDeviceIndex\
    \ of the next finishing\n           process for implementations in which the finishing\n\
    \           processes are performed in a prescribed order.  Each\n           finishing\
    \ process in the fixed sequence is either\n           performed or not performed\
    \ according to the finishing\n           instructions submitted with the job.\
    \  A value of 0\n           indicates that this finishing process is the last\
    \ in a\n           sequence.  Finishing processes which are not part of a\n  \
    \         fixed sequence SHALL NOT have this attribute.\n   B. Stitcher type-specific\
    \ attributes (30..)\n      stitchingType(30),                 FinStitchingTypeTC\n\
    \         INTEGER: MULTI-ROW:  Provides additional information\n           regarding\
    \ the stitching operation.\n      stitchingDirection(31),            FinStitchingDirTypeTC\n\
    \         INTEGER:  Defines the orientation of the stitching\n           process.\n\
    \      stitchingAngle(32),                FinStitchingAngleTypeTC\n         INTEGER:\
    \  Defines enumerations that describe the angular\n           orientation of the\
    \ stitching process relative to the 'X'\n           axis.\n   C. Folder type-specific\
    \ attributes (40..)\n      foldingType(40),                   FinFoldingTypeTC\n\
    \         INTEGER:  Provides additional information regarding the\n          \
    \ folding process.\n   D. Binder type-specific attributes (50..)\n      bindingType(50),\
    \                   FinBindingTypeTC\n         INTEGER:  Provides additional information\
    \ regarding the\n           binding process.\n   E. Trimmer type-specific attributes\
    \ (60..)\n   F. Die cutter type-specific attributes (70..)\n   G. Puncher type-specific\
    \ attributes (80..)\n      punchHoleType(80),                 FinPunchHoleTypeTC\n\
    \         INTEGER:  Provides information regarding the shape of the\n        \
    \   punched hole.\n      punchHoleSizeLongDim(81),          Integer32 (-2..2147483647)\n\
    \         INTEGER:  Defines the size of the punched hole in the\n           longest\
    \ dimension.  This dimension is typically measured\n           parallel to either\
    \ the long edge or the short edge of the\n           media and the longest dimension\
    \ will always be measured 90\n           degrees from the shortest dimension.\
    \  For a symmetrical\n           hole, such as a round or square hole, the shortest\
    \ and\n           longest dimensions will be identical. The units of measure\n\
    \           are defined by the attribute finProcessOffsetUnits.\n      punchHoleSizeShortDim(82),\
    \         Integer32 (-2..2147483647)\n         INTEGER:  Defines the size of the\
    \ punched hole in the\n           shortest dimension.  This dimension is typically\
    \ measured\n           parallel to either the long edge or the short edge of the\n\
    \           media and the shortest dimension will always be measured\n       \
    \    90 degrees from the longest dimension.  For a symmetrical\n           hole,\
    \ such as a round or square hole, the shortest and\n           longest dimensions\
    \ will be identical. The units of measure\n           are defined by the attribute\
    \ finProcessOffsetUnits.\n      punchPattern(83),                  FinPunchPatternTC\n\
    \         INTEGER:  Defines the hole pattern produced by the punch\n         \
    \  process.\n   H. Perforator type-specific attributes (90..)\n   I. Slitter type-specific\
    \ attributes (100..)\n      slittingType(100),                 FinSlittingTypeTC\n\
    \         INTEGER:  Provides additional information regarding the\n          \
    \ slitting process.\n   J. Separation cutter type-specific attributes (110..)\n\
    \   K. Imprinter type-specific attributes (120..)\n   L. Wrapper type-specific\
    \ attributes (130..)\n      wrappingType(130),                 FinWrappingTypeTC\n\
    \         INTEGER:  Provides additional information regarding the\n          \
    \ wrapping process.\n   M. Bander type-specific attributes (140..)\n   N. Make\
    \ Envelopes type-specific attributes (150..)\n   O. Stacker type-specific attributes\
    \ (160..)\n      stackOutputType(160)               FinStackOutputTypeTC\n   \
    \      INTEGER:  Defines the job-to-job orientation produced by\n           the\
    \ stacker.\n      stackOffset(161)                   Integer32 (-2..2147483647)\n\
    \         INTEGER:  Defines the copy-to-copy output stack offset as\n        \
    \   a positive offset distance.  The units of measure are\n           defined\
    \ by finProcessOffsetUnits.\n      stackRotation(162)                 Integer32\
    \ (-2..180)\n         INTEGER:  Defines the copy-to-copy output stack rotation\n\
    \           measured in degrees.  The value is the positive\n           copy-to-copy\
    \ rotation.\"\n"
- title: 6.  Enumerations
  contents:
  - "6.  Enumerations\n   Enumerations (enums) are sets of symbolic values defined\
    \ for use with\n   one or more objects.  Commonly used enumeration sets are assigned\
    \ a\n   symbolic data type name (textual convention), rather than being\n   specified\
    \ in the SYNTAX clause of each individual object definition.\n   Textual conventions\
    \ defined in the Finisher MIB or the companion IANA\n   Finisher MIB are extensible\
    \ by RFC publication or Designated Expert\n   Review (see 'IANA Considerations'\
    \ section of this Finisher MIB and\n   the DESCRIPTION clause in MODULE-IDENTITY\
    \ of IANA Finisher MIB).  All\n   of these textual conventions are:\n   a) used\
    \ more than once in the Finisher MIB itself; or\n   b) imported and used in any\
    \ other, including vendor private, MIB\n      modules.\n   The Finisher MIB has\
    \ also defined the following special values for\n   use with objects of the syntax\
    \ \"Integer32\" to define conditions that\n   are outside of the normal numeric\
    \ range:  other(-1), unknown(-2), and\n   partial(-3).  The 'partial' value means\
    \ that there is some supply\n   remaining (but the amount is indeterminate) or\
    \ there is some capacity\n   remaining (but the amount is indeterminate).  The\
    \ Integer32 range\n   field indicates in which objects these special values are\
    \ valid.\n"
- title: 6.1.  Registering Additional Enumerated Values
  contents:
  - "6.1.  Registering Additional Enumerated Values\n   The Finisher MIB and the companion\
    \ IANA Finisher MIB each defines one\n   category of textual convention, according\
    \ to the process employed to\n   control the addition of new enumerations:\n \
    \     Type 1 - All of the legal values are defined in the Finisher MIB.\n    \
    \  Additional enumerated values require the publication of a new\n      Finisher\
    \ MIB.\n      Type 2 - All of the legal values are registered in the IANA\n  \
    \    Finisher MIB.  Additional enumerated values require a Designated\n      Expert\
    \ Review defined in \"Guidelines for Writing an IANA\n      Considerations Section\
    \ in RFCs\" [RFC2434].  The Designated Expert\n      will be selected by the IETF\
    \ Area Director(s) of the Applications\n      Area.\n"
- title: 7.  IANA Printer Finishing MIB Specification
  contents:
  - '7.  IANA Printer Finishing MIB Specification

    '
- title: IANA-FINISHER-MIB DEFINITIONS ::= BEGIN
  contents:
  - "IANA-FINISHER-MIB DEFINITIONS ::= BEGIN\n -- http://www.iana.org/assignments/ianafinisher-mib\n"
- title: IMPORTS
  contents:
  - "IMPORTS\n    MODULE-IDENTITY,\n        mib-2\n            FROM SNMPv2-SMI   \
    \                           -- [RFC2578]\n    TEXTUAL-CONVENTION\n           \
    \ FROM SNMPv2-TC;                              -- [RFC2579]\n"
- title: ianafinisherMIB MODULE-IDENTITY
  contents:
  - "ianafinisherMIB MODULE-IDENTITY\n    LAST-UPDATED  \"200406020000Z\" -- June\
    \ 2, 2004\n    ORGANIZATION  \"IANA\"\n    CONTACT-INFO  \"Internet Assigned Numbers\
    \ Authority\n                  Postal: ICANN\n                          4676 Admiralty\
    \ Way, Suite 330\n                          Marina del Rey, CA 90292\n       \
    \           Tel:    +1 310 823 9358\n                  E-Mail: iana@iana.org\"\
    \n    DESCRIPTION   \"This MIB module defines a set of finishing-related\n   \
    \               TEXTUAL-CONVENTIONs for use in Finisher MIB (RFC 3806)\n     \
    \             and other MIBs which need to specify finishing\n               \
    \   mechanism details.\n                  Any additions or changes to the contents\
    \ of this MIB\n                  module require either publication of an RFC,\
    \ or\n                  Designated Expert Review as defined in RFC 2434,\n   \
    \               Guidelines for Writing an IANA Considerations Section\n      \
    \            in RFCs.  The Designated Expert will be selected by\n           \
    \       the IESG Area Director(s) of the Applications Area.\n                \
    \  Copyright (C) The Internet Society (2004). The\n                  initial version\
    \ of this MIB module was published\n                  in RFC 3806. For full legal\
    \ notices see the RFC\n                  itself or see:\n                  http://www.ietf.org/copyrights/ianamib.html\"\
    \n    REVISION      \"200406020000Z\"  -- June 2, 2004\n    DESCRIPTION   \"Original\
    \ version, published in coordination\n                  with Finisher MIB (RFC\
    \ 3806).\"\n    ::= { mib-2 110 }\n"
- title: -- TEXTUAL-CONVENTIONs for this MIB module
  contents:
  - '-- TEXTUAL-CONVENTIONs for this MIB module

    '
- title: FinDeviceTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinDeviceTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"The defined finishing device subunit process\n       enumerations.\"\n\
    \    SYNTAX       INTEGER {\n         other(1),\n         unknown(2),\n      \
    \   stitcher(3),\n         folder(4),\n         binder(5),\n         trimmer(6),\n\
    \         dieCutter(7),\n         puncher(8),\n         perforater(9),\n     \
    \    slitter(10),\n         separationCutter(11),\n         imprinter(12),\n \
    \        wrapper(13),\n         bander(14),\n         makeEnvelope(15),\n    \
    \     stacker(16),\n         sheetRotator(17),\n         inserter(18)\n      \
    \  }\n"
- title: FinAttributeTypeTC  ::= TEXTUAL-CONVENTION
  contents:
  - "FinAttributeTypeTC  ::= TEXTUAL-CONVENTION\n    STATUS     current\n    DESCRIPTION\n\
    \        \"This TEXTUAL-CONVENTION defines the set of enums for use in\n     \
    \    the finDeviceAttributeTable.  See section 5.7 for the complete\n        \
    \ specification of each attribute.\"\n    SYNTAX       INTEGER {\n         other(1),\n\
    \         deviceName(3),\n         deviceVendorName(4),\n         deviceModel(5),\n\
    \         deviceVersion(6),\n         deviceSerialNumber(7),\n         maximumSheets(8),\n\
    \         finProcessOffsetUnits(9),\n         finReferenceEdge(10),\n        \
    \ finAxisOffset(11),\n         finJogEdge(12),\n         finHeadLocation(13),\n\
    \         finOperationRestrictions(14),\n         finNumberOfPositions(15),\n\
    \         namedConfiguration(16),\n         finMediaTypeRestriction(17),\n   \
    \      finPrinterInputTraySupported(18),\n         finPreviousFinishingOperation(19),\n\
    \         finNextFinishingOperation(20),\n         stitchingType(30),\n      \
    \   stitchingDirection(31),\n         foldingType(40),\n         bindingType(50),\n\
    \         punchHoleType(80),\n         punchHoleSizeLongDim(81),\n         punchHoleSizeShortDim(82),\n\
    \         punchPattern(83),\n         slittingType(100),\n         wrappingType(130),\n\
    \         stackOutputType(160),\n         stackOffset(161),\n         stackRotation(162)\n\
    \        }\n"
- title: FinEdgeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinEdgeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"Specifies an edge for a Finishing Process.\"\n    SYNTAX       INTEGER\
    \ {\n         topEdge(3),\n         bottomEdge(4),\n         leftEdge(5),\n  \
    \       rightEdge(6)\n        }\n"
- title: FinStitchingTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinStitchingTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"The defined stitching type enumerations.  For the edgeStitch and\n  \
    \     stapleDual enums, the finReferenceEdge attribute is recommended\n      \
    \ to define the edge to which the operation applies.\"\n    SYNTAX       INTEGER\
    \ {\n         other(1),         -- More information in other attributes\n    \
    \     unknown(2),\n         stapleTopLeft(4),\n         stapleBottomLeft(5),\n\
    \         stapleTopRight(6),\n         stapleBottomRight(7),\n         saddleStitch(8),\n\
    \         edgeStitch(9),\n         stapleDual(10)\n        }\n"
- title: FinStitchingDirTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinStitchingDirTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"Defines the direction, relative to the top sheet in the output\n    \
    \   subunit, that the stitching operation was performed.  For a\n       topDown(3)\
    \ process, the staple will be clinched on the bottom\n       of the stack.  This\
    \ parameter can be used to determine what\n       order the pages of a booklet\
    \ are to be printed such that the\n       staple clinch will be on the inside\
    \ of the resulting booklet.\"\n    SYNTAX       INTEGER {\n         unknown(2),\n\
    \         topDown(3),\n         bottomUp(4)\n        }\n"
- title: FinStitchingAngleTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinStitchingAngleTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n  \
    \  DESCRIPTION\n      \"This enumeration provides a description of the angular\n\
    \       orientation of each stitch in a single or multiple stitching\n       operation,\
    \ relative to the 'X' axis.  As with all finishing\n       operations, the 'X'\
    \ axis is always relative to the portrait\n       orientation of the document\
    \ regardless of the orientation\n       of the printed image.  This enum is primarily\
    \ applicable to\n       corner stitching operations.\"\n    SYNTAX       INTEGER\
    \ {\n         unknown(2),\n         horizontal(3),\n         vertical(4),\n  \
    \       slanted(5)\n        }\n"
- title: FinFoldingTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinFoldingTypeTC ::= TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n\
    \     \"The defined folding device process enumerations.\"\n   SYNTAX       INTEGER\
    \ {\n         other(1),        -- More information in other attributes\n     \
    \    unknown(2),\n         zFold(3),\n         halfFold(4),\n         letterFold(5)\n\
    \        }\n"
- title: FinBindingTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinBindingTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"The defined binding type enumerations.\"\n    SYNTAX       INTEGER {\n\
    \         other(1),          -- More information in other attributes\n       \
    \  unknown(2),\n         tape(4),\n         plastic(5),\n         velo(6),\n \
    \        perfect(7),\n         spiral(8),\n         adhesive(9),\n         comb(10),\n\
    \         padding(11)\n        }\n"
- title: FinPunchHoleTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinPunchHoleTypeTC ::= TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n\
    \     \"The defined hole type punch process enumerations.\"\n   SYNTAX       INTEGER\
    \ {\n         other(1),        -- More information in other attributes\n     \
    \    unknown(2),\n         round(3),\n         oblong(4),\n         square(5),\n\
    \         rectangular(6),\n         star(7)\n        }\n"
- title: FinPunchPatternTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinPunchPatternTC ::= TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n\
    \     \"The defined hole pattern punch process enumerations.\"\n   SYNTAX    \
    \   INTEGER {\n         other(1),           --Pattern to be defined in other attributes\n\
    \         unknown(2),\n         twoHoleUSTop(4),    --Letter/legal, 8.5 inch edge\n\
    \         threeHoleUS(5),     --Letter/ledger, 11 inch edge\n         twoHoleDIN(6),\
    \      --A4/A3, 297 mm edge\n         fourHoleDIN(7),     --A4/A3, 297 mm edge\n\
    \         twentyTwoHoleUS(8), --Letter/ledger, 11 inch edge\n         nineteenHoleUS(9),\
    \  --Letter/ledger, 11 inch edge\n         twoHoleMetric(10),  --B5/B4, 257 mm\
    \ edge\n         swedish4Hole(11),   --A4/A3, 297 mm edge\n         twoHoleUSSide(12),\
    \  --Letter/ledger, 11 inch edge\n         fiveHoleUS(13),     --Letter/ledger,\
    \ 11 inch edge\n         sevenHoleUS(14),    --Letter/ledger, 11 inch edge\n \
    \        mixed7H4S(15),      --A4/A3, 297 mm edge\n         norweg6Hole(16), \
    \   --A4/A3, 297 mm edge\n         metric26Hole(17),   --B5/B4, 257 mm edge\n\
    \         metric30Hole(18)    --A4/A3, 297 mm edge\n        }\n"
- title: FinSlittingTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinSlittingTypeTC ::= TEXTUAL-CONVENTION\n    STATUS       current\n    DESCRIPTION\n\
    \      \"The defined slitting type enumerations.\"\n    SYNTAX       INTEGER {\n\
    \         other(1),         -- More information in other attributes\n        \
    \ unknown(2),\n         slitAndSeparate(4),\n         slitAndMerge(5)\n      \
    \  }\n"
- title: FinWrappingTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinWrappingTypeTC ::= TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n\
    \     \"The defined wrapping device process enumerations.\"\n   SYNTAX       INTEGER\
    \ {\n         other(1),        -- More information in other attributes\n     \
    \    unknown(2),\n         shrinkWrap(4),\n         paperWrap(5)\n        }\n"
- title: FinStackOutputTypeTC ::= TEXTUAL-CONVENTION
  contents:
  - "FinStackOutputTypeTC ::= TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n\
    \     \"The defined stack output type enumerations.\"\n   SYNTAX       INTEGER\
    \ {\n         other(1),        -- More information in other attributes\n     \
    \    unknown(2),\n         straight(4),     -- No offset, one on top of another\n\
    \         offset(5),\n         crissCross(6)    -- Rotated\n        }\n"
- title: END
  contents:
  - 'END

    '
- title: 8.  Printer Finishing MIB Specification
  contents:
  - '8.  Printer Finishing MIB Specification

    '
- title: Finisher-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'Finisher-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, mib-2\n        FROM SNMPv2-SMI\
    \                                  -- [RFC2578]\n    MODULE-COMPLIANCE, OBJECT-GROUP\n\
    \        FROM SNMPv2-CONF                                 -- [RFC2580]\n    hrDeviceIndex\n\
    \        FROM HOST-RESOURCES-MIB                          -- [RFC2790]\n    PrtInputTypeTC,\
    \ PrtMarkerSuppliesTypeTC\n        FROM IANA-PRINTER-MIB                     \
    \       -- [RFC3805]\n    printmib, PrtSubUnitStatusTC, PrtLocalizedDescriptionStringTC,\n\
    \        PrtMarkerSuppliesSupplyUnitTC, PrtMediaUnitTC,\n        PrtCapacityUnitTC,\
    \ PrtMarkerSuppliesClassTC,\n        PresentOnOff, prtMIBConformance\n       \
    \ FROM Printer-MIB                                 -- [RFC3805]\n    FinDeviceTypeTC,\
    \ FinAttributeTypeTC\n        FROM IANA-FINISHER-MIB;\n"
- title: finisherMIB MODULE-IDENTITY
  contents:
  - "finisherMIB MODULE-IDENTITY\n    LAST-UPDATED \"200406020000Z\"\n    ORGANIZATION\
    \ \"PWG IEEE/ISTO Printer Working Group\"\n    CONTACT-INFO\n        \"Harry Lewis\n\
    \        IBM\n        Phone (303) 924-5337\n        Email: harryl@us.ibm.com\n\
    \        Send comments to the printmib WG using the Finisher MIB\n        Project\
    \ (FIN) Mailing List:  fin@pwg.org\n        For further information, access the\
    \ PWG web page under 'Finisher\n        MIB':      http://www.pwg.org/\n     \
    \   Implementers of this specification are encouraged to join the\n        fin\
    \ mailing list in order to participate in discussions on any\n        clarifications\
    \ needed and registration proposals being reviewed\n        in order to achieve\
    \ consensus.\"\n    DESCRIPTION\n        \"The MIB module for management of printers.\n\
    \         Copyright (C) The Internet Society (2004). This\n         version of\
    \ this MIB module was published\n         in RFC 3806. For full legal notices\
    \ see the RFC itself.\"\n    REVISION \"200406020000Z\"\n    DESCRIPTION\n   \
    \     \"The original version of this MIB.\"\n    ::= { mib-2  111 }\n -- Finisher\
    \ Device Group (Mandatory)\n"
- title: --
  contents:
  - '--

    '
- title: -- A printer may support zero or more finishing subunits.  A
  contents:
  - '-- A printer may support zero or more finishing subunits.  A

    '
- title: -- finishing device subunit may be associated with one or more
  contents:
  - '-- finishing device subunit may be associated with one or more

    '
- title: -- output subunits and one or more media path subunits.
  contents:
  - '-- output subunits and one or more media path subunits.

    '
- title: finDevice  OBJECT IDENTIFIER  ::=  { printmib 30 }
  contents:
  - 'finDevice  OBJECT IDENTIFIER  ::=  { printmib 30 }

    '
- title: finDeviceTable OBJECT-TYPE
  contents:
  - "finDeviceTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF FinDeviceEntry\n    MAX-ACCESS\
    \ not-accessible\n    STATUS     current\n    DESCRIPTION\n      \"This table\
    \ defines the finishing device subunits,\n       including information regarding\
    \ possible configuration\n       options and the status for each finisher device\
    \ subunit.\"\n    ::= { finDevice 1 }\n"
- title: finDeviceEntry OBJECT-TYPE
  contents:
  - "finDeviceEntry OBJECT-TYPE\n    SYNTAX      FinDeviceEntry\n    MAX-ACCESS  not-accessible\n\
    \    STATUS      current\n    DESCRIPTION\n      \"There is an entry in the finishing\
    \ device table for each\n       possible finisher process.  Each individual finisher\
    \ process is\n       implemented by a finishing device represented in this table.\"\
    \n    INDEX  { hrDeviceIndex, finDeviceIndex }\n    ::= { finDeviceTable 1 }\n"
- title: FinDeviceEntry ::= SEQUENCE {
  contents:
  - "FinDeviceEntry ::= SEQUENCE {\n      finDeviceIndex                 Integer32,\n\
    \      finDeviceType                  FinDeviceTypeTC,\n      finDevicePresentOnOff\
    \          PresentOnOff,\n      finDeviceCapacityUnit          PrtCapacityUnitTC,\n\
    \      finDeviceMaxCapacity           Integer32,\n      finDeviceCurrentCapacity\
    \       Integer32,\n      finDeviceAssociatedMediaPaths  OCTET STRING,\n     \
    \ finDeviceAssociatedOutputs     OCTET STRING,\n      finDeviceStatus        \
    \        PrtSubUnitStatusTC,\n      finDeviceDescription           PrtLocalizedDescriptionStringTC\n\
    \     }\n"
- title: finDeviceIndex OBJECT-TYPE
  contents:
  - "finDeviceIndex OBJECT-TYPE\n    SYNTAX      Integer32 (1..65535)\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n      \"A unique\
    \ value used to identify a finisher process.\n       Although these values may\
    \ change due to a major\n       reconfiguration of the printer system (e.g., the\
    \ addition\n       of new finishing processes), the values are normally\n    \
    \   expected to remain stable across successive power cycles.\"\n    ::= { finDeviceEntry\
    \ 1 }\n"
- title: finDeviceType OBJECT-TYPE
  contents:
  - "finDeviceType OBJECT-TYPE\n    SYNTAX      FinDeviceTypeTC\n    MAX-ACCESS  read-only\n\
    \    STATUS      current\n    DESCRIPTION\n      \"Defines the type of finishing\
    \ process associated with this\n       table row entry.\"\n    ::= { finDeviceEntry\
    \ 2 }\n"
- title: finDevicePresentOnOff OBJECT-TYPE
  contents:
  - "finDevicePresentOnOff OBJECT-TYPE\n    SYNTAX      PresentOnOff\n    MAX-ACCESS\
    \  read-write\n    STATUS      current\n    DESCRIPTION\n      \"Indicates if\
    \ this finishing device subunit is available\n       and whether the device subunit\
    \ is enabled.\"\n    DEFVAL      { notPresent }\n    ::= { finDeviceEntry 3 }\n"
- title: finDeviceCapacityUnit OBJECT-TYPE
  contents:
  - "finDeviceCapacityUnit OBJECT-TYPE\n    SYNTAX      PrtCapacityUnitTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"The unit of measure\
    \ for specifying the capacity of this\n       finisher device subunit.\"\n   \
    \ ::= { finDeviceEntry 4 }\n"
- title: finDeviceMaxCapacity OBJECT-TYPE
  contents:
  - "finDeviceMaxCapacity OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The maximum capacity of this finisher device subunit in\n       finDeviceCapacityUnits.\
    \  If the device can reliably sense\n       this value, the value is sensed by\
    \ the finisher device\n       and is read-only: otherwise the value may be written\
    \ by a\n       management or control console application.  The value (-1)\n  \
    \     means other and specifically indicates that the device\n       places no\
    \ restrictions on this parameter.  The value (-2)\n       means unknown.\"\n \
    \   DEFVAL      { -2 }      -- unknown\n    ::= { finDeviceEntry 5 }\n"
- title: finDeviceCurrentCapacity OBJECT-TYPE
  contents:
  - "finDeviceCurrentCapacity OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The current capacity of this finisher device subunit in\n       finDeviceCapacityUnits.\
    \  If the device can reliably sense\n       this value, the value is sensed by\
    \ the finisher and is\n       read-only: otherwise the value may be written by\
    \ a\n       management or control console application.  The value (-1)\n     \
    \  means other and specifically indicates that the device\n       places no restrictions\
    \ on this parameter.  The value (-2)\n       means unknown.\"\n    DEFVAL    \
    \  { -2 }      -- unknown\n    ::= { finDeviceEntry 6 }\n"
- title: finDeviceAssociatedMediaPaths OBJECT-TYPE
  contents:
  - "finDeviceAssociatedMediaPaths OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(1..63))\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    Indicates the media paths which can supply media for this\n       finisher device.\
    \  The value of this object is a bit map in an\n       octet string with each\
    \ position representing the value of a\n       prtMediaPathIndex.  For a media\
    \ path that can be a source\n       for this finisher device subunit, the bit\
    \ position equal\n       to one less than the value of prtMediaPathIndex will\
    \ be set.\n       The bits are numbered starting with the most significant bit\
    \ of\n       the first byte being bit 0, the least significant bit of the\n  \
    \     first byte being bit 7, the most significant of the second byte\n      \
    \ being bit 8, and so on.\"\n    ::= { finDeviceEntry 7 }\n"
- title: finDeviceAssociatedOutputs OBJECT-TYPE
  contents:
  - "finDeviceAssociatedOutputs OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(1..63))\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    Indicates the printer output subunits this finisher device\n       subunit services.\
    \  The value of this object is a bit map in an\n       octet string with each\
    \ position representing the value of a\n       prtOutputIndex.  For an output\
    \ subunit that is serviced\n       by this finisher device subunit, the bit position\
    \ equal\n       to one less than the value of prtOutputIndex will be set.\n  \
    \     The bits are numbered starting with the most significant bit of\n      \
    \ the first byte being bit 0, the least significant bit of the\n       first byte\
    \ being bit 7, the most significant of the second byte\n       being bit 8, and\
    \ so on.\"\n    ::= { finDeviceEntry 8 }\n"
- title: finDeviceStatus OBJECT-TYPE
  contents:
  - "finDeviceStatus OBJECT-TYPE\n    SYNTAX      PrtSubUnitStatusTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"Indicates the\
    \ current status of this finisher device\n       subunit.\"\n    DEFVAL      {\
    \ 5 }      -- unknown\n    ::= { finDeviceEntry 9 }\n"
- title: finDeviceDescription OBJECT-TYPE
  contents:
  - "finDeviceDescription OBJECT-TYPE\n    SYNTAX      PrtLocalizedDescriptionStringTC\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    A free form text description of this device subunit in the\n       localization\
    \ specified by prtGeneralCurrentLocalization.\"\n    ::= { finDeviceEntry 10 }\n"
- title: -- Finisher Supply Group (Mandatory)
  contents:
  - '-- Finisher Supply Group (Mandatory)

    '
- title: --
  contents:
  - '--

    '
- title: -- A finisher device, but not all finisher devices, may have one or more
  contents:
  - '-- A finisher device, but not all finisher devices, may have one or more

    '
- title: -- supplies associated with it.  For example a finisher may use both
  contents:
  - '-- supplies associated with it.  For example a finisher may use both

    '
- title: -- binding tape and stitching wire supplies. A finisher may also have
  contents:
  - '-- binding tape and stitching wire supplies. A finisher may also have

    '
- title: -- more than one source for a given type of supply e.g., multiple supply
  contents:
  - '-- more than one source for a given type of supply e.g., multiple supply

    '
- title: -- sources of ink for imprinters.
  contents:
  - '-- sources of ink for imprinters.

    '
- title: finSupply  OBJECT IDENTIFIER  ::=  { printmib 31 }
  contents:
  - 'finSupply  OBJECT IDENTIFIER  ::=  { printmib 31 }

    '
- title: finSupplyTable OBJECT-TYPE
  contents:
  - "finSupplyTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF FinSupplyEntry\n    MAX-ACCESS\
    \ not-accessible\n    STATUS     current\n    DESCRIPTION\n      \"Each unique\
    \ source of supply is an entry in the finisher\n       supply table. Each supply\
    \ entry has its own\n       characteristics associated with it such as colorant\
    \ and\n       current supply level.\"\n    ::= { finSupply 1 }\n"
- title: finSupplyEntry OBJECT-TYPE
  contents:
  - "finSupplyEntry OBJECT-TYPE\n    SYNTAX     FinSupplyEntry\n    MAX-ACCESS not-accessible\n\
    \    STATUS     current\n    DESCRIPTION\n      \"A list of finisher devices,\
    \ with their associated\n       supplies and supplies characteristics.\"\n   \
    \ INDEX  { hrDeviceIndex, finSupplyIndex }\n    ::= { finSupplyTable 1 }\n"
- title: FinSupplyEntry ::= SEQUENCE {
  contents:
  - "FinSupplyEntry ::= SEQUENCE {\n      finSupplyIndex               Integer32,\n\
    \      finSupplyDeviceIndex         Integer32,\n      finSupplyClass         \
    \      PrtMarkerSuppliesClassTC,\n      finSupplyType                PrtMarkerSuppliesTypeTC,\n\
    \      finSupplyDescription         PrtLocalizedDescriptionStringTC,\n      finSupplyUnit\
    \                PrtMarkerSuppliesSupplyUnitTC,\n      finSupplyMaxCapacity  \
    \       Integer32,\n      finSupplyCurrentLevel        Integer32,\n      finSupplyColorName\
    \           OCTET STRING\n     }\n"
- title: finSupplyIndex OBJECT-TYPE
  contents:
  - "finSupplyIndex OBJECT-TYPE\n    SYNTAX      Integer32 (1..65535)\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n      \"A unique\
    \ value used by a finisher to identify this supply\n       container/receptacle.\
    \  Although these values may change\n       due to a major reconfiguration of\
    \ the finisher (e.g., the\n       addition of new supply sources to the finisher),\
    \ values\n       are normally expected to remain stable across successive\n  \
    \     power cycles.\"\n    ::= { finSupplyEntry 1 }\n"
- title: finSupplyDeviceIndex OBJECT-TYPE
  contents:
  - "finSupplyDeviceIndex OBJECT-TYPE\n    SYNTAX      Integer32 (0..65535)\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"The value of finDeviceIndex\
    \ corresponding to the finishing\n       device subunit with which this finisher\
    \ supply is associated.\n       The value zero indicates the associated finishing\
    \ device is\n       Unknown.\"\n    ::= { finSupplyEntry 2 }\n"
- title: finSupplyClass OBJECT-TYPE
  contents:
  - "finSupplyClass OBJECT-TYPE\n    SYNTAX      PrtMarkerSuppliesClassTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"This value indicates\
    \ whether this supply entity\n       represents a supply that is consumed or a\
    \ container that\n       is filled.\"\n    ::= { finSupplyEntry 3 }\n"
- title: finSupplyType OBJECT-TYPE
  contents:
  - "finSupplyType OBJECT-TYPE\n    SYNTAX      PrtMarkerSuppliesTypeTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"The type of this\
    \ supply.\"\n    ::= { finSupplyEntry 4 }\n"
- title: finSupplyDescription OBJECT-TYPE
  contents:
  - "finSupplyDescription OBJECT-TYPE\n    SYNTAX      PrtLocalizedDescriptionStringTC\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    The description of this supply/receptacle in text useful\n       for operators\
    \ and management applications and in the\n       localization specified by prtGeneralCurrentLocalization.\"\
    \n    ::= { finSupplyEntry 5 }\n"
- title: finSupplyUnit OBJECT-TYPE
  contents:
  - "finSupplyUnit OBJECT-TYPE\n    SYNTAX      PrtMarkerSuppliesSupplyUnitTC\n  \
    \  MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"Unit\
    \ of measure of this finisher supply container or\n       receptacle.\"\n    ::=\
    \ { finSupplyEntry 6 }\n"
- title: finSupplyMaxCapacity OBJECT-TYPE
  contents:
  - "finSupplyMaxCapacity OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The maximum capacity of this supply container/receptacle\n       expressed in\
    \ Supply Units.  If this supply container/\n       receptacle can reliably sense\
    \ this value, the value is\n       sensed  and is read-only; otherwise the value\
    \ may be\n       written by a control panel or management application.  The\n\
    \       value (-1) means other and places no restrictions on this\n       parameter.\
    \  The value (-2) means unknown.\"\n    DEFVAL      { -2 }      -- unknown\n \
    \   ::= { finSupplyEntry 7 }\n"
- title: finSupplyCurrentLevel OBJECT-TYPE
  contents:
  - "finSupplyCurrentLevel OBJECT-TYPE\n    SYNTAX      Integer32 (-3..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The current level if this supply is a container; the\n       remaining space if\
    \ this supply is a receptacle. If this\n       supply container/receptacle can\
    \ reliably sense this value,\n       the value is sensed and is read-only; otherwise\
    \ the value\n       may be written by a control panel or management\n       application.\
    \  The value (-1) means other and places no\n       restrictions on this parameter.\
    \ The value (-2) means\n       unknown.  A value of (-3) means that the printer\
    \ knows there\n       is some supply or remaining space.\"\n    DEFVAL      {\
    \ -2 }      -- unknown\n    ::= { finSupplyEntry 8 }\n"
- title: --             Capacity Attribute Relationships
  contents:
  - '--             Capacity Attribute Relationships

    '
- title: --
  contents:
  - '--

    '
- title: --                 MEDIA INPUT MEASUREMENT
  contents:
  - '--                 MEDIA INPUT MEASUREMENT

    '
- title: --
  contents:
  - '--

    '
- title: --     _______ |                   |
  contents:
  - '--     _______ |                   |

    '
- title: --      |      |                   |
  contents:
  - '--      |      |                   |

    '
- title: --      |      |                   |                   |
  contents:
  - '--      |      |                   |                   |

    '
- title: --      |      |_ _ _ _ _ _ _ _ _ _| ________________  |direction
  contents:
  - '--      |      |_ _ _ _ _ _ _ _ _ _| ________________  |direction

    '
- title: --      |      |                   |      |            v
  contents:
  - '--      |      |                   |      |            v

    '
- title: -- MaxCapacity |                   |      |
  contents:
  - '-- MaxCapacity |                   |      |

    '
- title: --      |      | Sheets remaining  | CurrentLevel
  contents:
  - '--      |      | Sheets remaining  | CurrentLevel

    '
- title: --      |      |                   |      |
  contents:
  - '--      |      |                   |      |

    '
- title: --      v      |                   |      v
  contents:
  - '--      v      |                   |      v

    '
- title: --     _______ +___________________+ _______
  contents:
  - '--     _______ +___________________+ _______

    '
- title: finSupplyColorName OBJECT-TYPE
  contents:
  - "finSupplyColorName OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(0..63))\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    The name of the color associated with this supply.\"\n    REFERENCE\n       \"\
    The PWG Standardized Media Names specification [PWGMEDIA],\n        section 4\
    \ Media Color Names, contains the recommended values\n        for this object.\
    \ Implementers may add additional string values.\n        The naming conventions\
    \ in ISO 9070 are recommended in order to\n        avoid potential name clashes.\"\
    \n    ::= { finSupplyEntry 9 }\n"
- title: -- Finisher Supply, Media Input Group (Conditionally Mandatory)
  contents:
  - '-- Finisher Supply, Media Input Group (Conditionally Mandatory)

    '
- title: --
  contents:
  - '--

    '
- title: -- A finisher device may have one or more associated supply media
  contents:
  - '-- A finisher device may have one or more associated supply media

    '
- title: -- inputs.  Each entry in this table defines an input for a
  contents:
  - '-- inputs.  Each entry in this table defines an input for a

    '
- title: -- supply media type such as inserts, covers, etc.
  contents:
  - '-- supply media type such as inserts, covers, etc.

    '
- title: --
  contents:
  - '--

    '
- title: -- This group is mandatory only if the printer system contains a
  contents:
  - '-- This group is mandatory only if the printer system contains a

    '
- title: -- finisher device that requires a media supply used exclusively by a
  contents:
  - '-- finisher device that requires a media supply used exclusively by a

    '
- title: -- finishing process.  Examples are inserts or covers that are not
  contents:
  - '-- finishing process.  Examples are inserts or covers that are not

    '
- title: -- supplied by an input subunit that provides media to the marker.
  contents:
  - '-- supplied by an input subunit that provides media to the marker.

    '
- title: finSupplyMediaInput  OBJECT IDENTIFIER  ::=  { printmib 32 }
  contents:
  - 'finSupplyMediaInput  OBJECT IDENTIFIER  ::=  { printmib 32 }

    '
- title: finSupplyMediaInputTable OBJECT-TYPE
  contents:
  - "finSupplyMediaInputTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF FinSupplyMediaInputEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \  \"The input subunits associated with a finisher supply media\n       are each\
    \ represented by an entry in this table.\"\n"
- title: ::= { finSupplyMediaInput 1 }
  contents:
  - '::= { finSupplyMediaInput 1 }

    '
- title: finSupplyMediaInputEntry OBJECT-TYPE
  contents:
  - "finSupplyMediaInputEntry OBJECT-TYPE\n    SYNTAX     FinSupplyMediaInputEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \  \"A list of finisher supply media input subunit features and\n       characteristics.\"\
    \n    INDEX  { hrDeviceIndex, finSupplyMediaInputIndex }\n    ::= { finSupplyMediaInputTable\
    \ 1 }\n"
- title: FinSupplyMediaInputEntry ::= SEQUENCE {
  contents:
  - "FinSupplyMediaInputEntry ::= SEQUENCE {\n      finSupplyMediaInputIndex     \
    \       Integer32,\n      finSupplyMediaInputDeviceIndex      Integer32,\n   \
    \   finSupplyMediaInputSupplyIndex      Integer32,\n      finSupplyMediaInputType\
    \             PrtInputTypeTC,\n      finSupplyMediaInputDimUnit          PrtMediaUnitTC,\n\
    \      finSupplyMediaInputMediaDimFeedDir  Integer32,\n      finSupplyMediaInputMediaDimXFeedDir\
    \ Integer32,\n      finSupplyMediaInputStatus           PrtSubUnitStatusTC,\n\
    \      finSupplyMediaInputMediaName      OCTET STRING,\n      finSupplyMediaInputName\
    \           OCTET STRING,\n      finSupplyMediaInputDescription    PrtLocalizedDescriptionStringTC,\n\
    \      finSupplyMediaInputSecurity       PresentOnOff,\n      finSupplyMediaInputMediaWeight\
    \    Integer32,\n      finSupplyMediaInputMediaThickness Integer32,\n      finSupplyMediaInputMediaType\
    \      OCTET STRING\n     }\n"
- title: finSupplyMediaInputIndex OBJECT-TYPE
  contents:
  - "finSupplyMediaInputIndex OBJECT-TYPE\n    SYNTAX      Integer32 (1..65535)\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \    \"A unique value used by a finisher to identify this supply\n       media\
    \ input subunit.  Although these values may change\n       due to a major reconfiguration\
    \ of the finisher (e.g., the\n       addition of new supply media input sources\
    \ to the\n       finisher), values are normally expected to remain stable\n  \
    \     across successive power cycles.\"\n    ::= { finSupplyMediaInputEntry 1\
    \ }\n"
- title: finSupplyMediaInputDeviceIndex OBJECT-TYPE
  contents:
  - "finSupplyMediaInputDeviceIndex OBJECT-TYPE\n    SYNTAX      Integer32 (0..65535)\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    The value of finDeviceIndex corresponding to the finishing\n       device subunit\
    \ with which this finisher media supply is\n       associated.  The value zero\
    \ indicates the associated device\n       is unknown.\"\n    ::= { finSupplyMediaInputEntry\
    \ 2 }\n"
- title: finSupplyMediaInputSupplyIndex OBJECT-TYPE
  contents:
  - "finSupplyMediaInputSupplyIndex OBJECT-TYPE\n    SYNTAX      Integer32 (0..65535)\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    The value of finSupplyIndex corresponding to the finishing\n       supply subunit\
    \ with which this finisher media supply is\n       associated.  The value zero\
    \ indicates the associated finishing\n       supply is unknown or there is no\
    \ applicable finisher supply\n       table entry.\"\n    ::= { finSupplyMediaInputEntry\
    \ 3 }\n"
- title: finSupplyMediaInputType OBJECT-TYPE
  contents:
  - "finSupplyMediaInputType OBJECT-TYPE\n    SYNTAX      PrtInputTypeTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"The type of technology\
    \ (discriminated primarily according\n       to the feeder mechanism type) employed\
    \ by the input\n       subunit.\"\n    ::= { finSupplyMediaInputEntry 4 }\n"
- title: finSupplyMediaInputDimUnit OBJECT-TYPE
  contents:
  - "finSupplyMediaInputDimUnit OBJECT-TYPE\n    SYNTAX      PrtMediaUnitTC\n    MAX-ACCESS\
    \  read-only\n    STATUS      current\n    DESCRIPTION\n      \"The unit of measure\
    \ for specifying dimensional values for\n       this input device.\"\n    ::=\
    \ { finSupplyMediaInputEntry 5 }\n"
- title: finSupplyMediaInputMediaDimFeedDir OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaDimFeedDir OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    This object provides the value of the dimension in the\n       feed direction\
    \ of the media that is placed or will be\n       placed in this input device.\
    \  Feed dimension measurements\n       are taken parallel to the feed direction\
    \ of the device and\n       measured in finSupplyMediaInputDimUnits.  If this\
    \ input\n       device can reliably sense this value, the value is sensed\n  \
    \     and is read-only access. Otherwise the value is read-write\n       access\
    \ and may be written by management or control panel\n       applications. The\
    \ value (-1) means other and specifically\n       indicates that this device places\
    \ no restrictions on this\n       parameter. The value (-2) indicates unknown.\
    \ \"\n    ::= { finSupplyMediaInputEntry 6 }\n"
- title: finSupplyMediaInputMediaDimXFeedDir OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaDimXFeedDir OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    This object provides the value of the dimension across the\n       feed direction\
    \ of the media that is placed or will be\n       placed in this input device.\
    \  The cross feed direction is\n       ninety degrees relative to the feed direction\
    \ on this\n       device and measured in finSupplyMediaInputDimUnits.  If\n  \
    \     this input device can reliably sense this value, the value\n       is sensed\
    \ and is read-only access. Otherwise the value is\n       read-write access and\
    \ may be written by management or\n       control panel applications. The value\
    \ (-1) means other and\n       specifically indicates that this device places\
    \ no\n       restrictions on this parameter. The value (-2) indicates\n      \
    \ unknown. \"\n    ::= { finSupplyMediaInputEntry 7 }\n"
- title: finSupplyMediaInputStatus OBJECT-TYPE
  contents:
  - "finSupplyMediaInputStatus OBJECT-TYPE\n    SYNTAX      PrtSubUnitStatusTC\n \
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    This value indicates the current status of this input\n       device.\"\n    DEFVAL\
    \      { 5 }      -- unknown\n    ::= { finSupplyMediaInputEntry 8 }\n"
- title: finSupplyMediaInputMediaName OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaName OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(0..63))\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The name of the current media contained in this input\n       device. Examples\
    \ are Engineering Manual Cover, Section A Tab\n       Divider or any ISO standard\
    \ names.\"\n    ::= { finSupplyMediaInputEntry 9 }\n"
- title: finSupplyMediaInputName OBJECT-TYPE
  contents:
  - "finSupplyMediaInputName OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(0..63))\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The name assigned to this input subunit.\"\n    ::= { finSupplyMediaInputEntry\
    \ 10 }\n"
- title: finSupplyMediaInputDescription OBJECT-TYPE
  contents:
  - "finSupplyMediaInputDescription OBJECT-TYPE\n    SYNTAX      PrtLocalizedDescriptionStringTC\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n      \"\
    A free form text description of this input subunit in the\n       localization\
    \ specified by prtGeneralCurrentLocalization.\"\n    ::= { finSupplyMediaInputEntry\
    \ 11 }\n"
- title: finSupplyMediaInputSecurity OBJECT-TYPE
  contents:
  - "finSupplyMediaInputSecurity OBJECT-TYPE\n    SYNTAX      PresentOnOff\n    MAX-ACCESS\
    \  read-write\n    STATUS      current\n    DESCRIPTION\n      \"Indicates if\
    \ this subunit has some security associated\n       with it.\"\n    ::= { finSupplyMediaInputEntry\
    \ 12 }\n"
- title: finSupplyMediaInputMediaWeight OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaWeight OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS\
    \  read-write\n    STATUS      current\n    DESCRIPTION\n      \"The weight of\
    \ the media associated with this Input device\n       in grams per meter squared.\
    \  The value (-1) means other\n       and specifically indicates that the device\
    \ places no\n       restriction on this parameter.  The value (-2) means\n   \
    \    unknown.  This object can be used to calculate the weight\n       of individual\
    \ pages processed by the document finisher.\n       This value, when multiplied\
    \ by the number of pages in a\n       finished set, can be used to calculate the\
    \ weight of a set\n       before it is inserted into a mailing envelope.\"\n \
    \   ::= { finSupplyMediaInputEntry 13 }\n"
- title: finSupplyMediaInputMediaThickness OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaThickness OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    This object identifies the thickness of the input media\n       processed by this\
    \ document input subunit measured in\n       micrometers.  This value may be used\
    \ by devices (or\n       operators) to set up proper machine tolerances for the\n\
    \       feeder operation.  The value (-2) indicates that the media\n       thickness\
    \ is unknown or not used in the setup for this\n       input subunit.\"\n    ::=\
    \ { finSupplyMediaInputEntry 14 }\n"
- title: finSupplyMediaInputMediaType OBJECT-TYPE
  contents:
  - "finSupplyMediaInputMediaType OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(0..63))\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    The name of the type of medium associated with this input\n       subunit. \"\n\
    \    REFERENCE\n       \"The PWG Standardized Media Names specification [PWGMEDIA],\n\
    \        section 3 Media Type Names, contains the recommended values\n       \
    \ for this object. Implementers may add additional string values.\n        The\
    \ naming conventions in ISO 9070 are recommended in order to\n        avoid potential\
    \ name clashes.\"\n    ::= { finSupplyMediaInputEntry 15 }\n"
- title: -- Finisher Device Attribute Group (Mandatory)
  contents:
  - '-- Finisher Device Attribute Group (Mandatory)

    '
- title: --
  contents:
  - '--

    '
- title: -- A finisher device subunit may have one or more parameters that
  contents:
  - '-- A finisher device subunit may have one or more parameters that

    '
- title: -- cannot be specified by any other objects in the MIB.  The
  contents:
  - '-- cannot be specified by any other objects in the MIB.  The

    '
- title: -- Device Attribute group facilitates the definition of these
  contents:
  - '-- Device Attribute group facilitates the definition of these

    '
- title: -- parameters.  The objects which define the attributes are
  contents:
  - '-- parameters.  The objects which define the attributes are

    '
- title: -- read-write, to allow both Set and Get operations.
  contents:
  - '-- read-write, to allow both Set and Get operations.

    '
- title: --
  contents:
  - '--

    '
- title: -- At least one table entry must exist for each finisher device defined
  contents:
  - '-- At least one table entry must exist for each finisher device defined

    '
- title: -- by the MIB.  If no other entry is possible for a finisher device, the
  contents:
  - '-- by the MIB.  If no other entry is possible for a finisher device, the

    '
- title: -- deviceName(3) attribute MUST be returned.
  contents:
  - '-- deviceName(3) attribute MUST be returned.

    '
- title: finDeviceAttribute  OBJECT IDENTIFIER  ::=  { printmib 33 }
  contents:
  - 'finDeviceAttribute  OBJECT IDENTIFIER  ::=  { printmib 33 }

    '
- title: finDeviceAttributeTable OBJECT-TYPE
  contents:
  - "finDeviceAttributeTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF FinDeviceAttributeEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \  \"The attribute table defines special parameters that are\n       applicable\
    \ only to a minority of the finisher devices.\n       An attribute table entry\
    \ is used, rather than unique\n       objects, to minimize the number of MIB objects\
    \ and to\n       allow for expansion without the addition of MIB objects.\n  \
    \     Each finisher device is represented by a separate row\n       in the device\
    \ subunit attribute table.\"\n"
- title: ::= { finDeviceAttribute 1 }
  contents:
  - '::= { finDeviceAttribute 1 }

    '
- title: finDeviceAttributeEntry OBJECT-TYPE
  contents:
  - "finDeviceAttributeEntry OBJECT-TYPE\n    SYNTAX     FinDeviceAttributeEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \  \"Each entry defines a finisher function parameter that\n       cannot be represented\
    \ by an object in the finisher\n       device subunit table.\"\n    INDEX  { hrDeviceIndex,\
    \ finDeviceIndex,\n             finDeviceAttributeTypeIndex,\n             finDeviceAttributeInstanceIndex\
    \ }\n"
- title: ::= { finDeviceAttributeTable 1 }
  contents:
  - '::= { finDeviceAttributeTable 1 }

    '
- title: FinDeviceAttributeEntry ::= SEQUENCE {
  contents:
  - "FinDeviceAttributeEntry ::= SEQUENCE {\n      finDeviceAttributeTypeIndex   \
    \     FinAttributeTypeTC,\n      finDeviceAttributeInstanceIndex    Integer32,\n\
    \      finDeviceAttributeValueAsInteger   Integer32,\n      finDeviceAttributeValueAsOctets\
    \    OCTET STRING\n     }\n"
- title: finDeviceAttributeTypeIndex OBJECT-TYPE
  contents:
  - "finDeviceAttributeTypeIndex OBJECT-TYPE\n    SYNTAX      FinAttributeTypeTC\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \    \"Defines the attribute type represented by this row.\"\n    ::= { finDeviceAttributeEntry\
    \ 1 }\n"
- title: finDeviceAttributeInstanceIndex OBJECT-TYPE
  contents:
  - "finDeviceAttributeInstanceIndex OBJECT-TYPE\n    SYNTAX      Integer32 (1..65535)\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \    \"An index that allows the discrimination of an attribute\n       instance\
    \ when the same attribute occurs multiple times for\n       a specific instance\
    \ of a finisher function.  The value of\n       this index shall be 1 if only\
    \ a single instance of the\n       attribute occurs for the specific finisher\
    \ function.\n       Additional values shall be assigned in a contiguous manner.\"\
    \n    ::= { finDeviceAttributeEntry 2 }\n"
- title: finDeviceAttributeValueAsInteger OBJECT-TYPE
  contents:
  - "finDeviceAttributeValueAsInteger OBJECT-TYPE\n    SYNTAX      Integer32 (-2..2147483647)\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    Defines the integer value of the attribute.  The value of\n       the attribute\
    \ is represented as an integer if the\n       finAttributeTypeTC description for\
    \ the attribute has the\n       tag 'INTEGER:'.\n       Depending upon the attribute\
    \ enum definition, this object\n       may be either an integer, a counter, an\
    \ index, or an enum.\n       Attributes for which the concept of an integer value\
    \ is\n       not meaningful SHALL return a value of -1 for this\n       attribute.\"\
    \n    DEFVAL      { -2 }      -- unknown\n    ::= { finDeviceAttributeEntry 3\
    \ }\n"
- title: finDeviceAttributeValueAsOctets OBJECT-TYPE
  contents:
  - "finDeviceAttributeValueAsOctets OBJECT-TYPE\n    SYNTAX      OCTET STRING (SIZE(0..63))\n\
    \    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n      \"\
    Contains the octet string value of the attribute.  The\n       value of the attribute\
    \ is represented as a string if the\n       finAttributeTypeTC description for\
    \ the attribute has the\n       tag 'OCTETS:'.\n       Depending upon the attribute\
    \ enum definition, this object\n       may be either a coded character set string\
    \ (text) or a\n       binary octet string.  Attributes for which the concept of\n\
    \       an octet string value is not meaningful SHALL contain a\n       zero length\
    \ string.\"\n    DEFVAL      { ''H }      -- empty string\n    ::= { finDeviceAttributeEntry\
    \ 4 }\n"
- title: -- Conformance Information
  contents:
  - '-- Conformance Information

    '
- title: -- compliance statements
  contents:
  - '-- compliance statements

    '
- title: finMIBCompliance MODULE-COMPLIANCE
  contents:
  - "finMIBCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n  \
    \      \"The compliance statement for agents that implement the\n        finisher\
    \ MIB.\"\n    MODULE -- this module\n    MANDATORY-GROUPS { finDeviceGroup, finSupplyGroup,\n\
    \                       finDeviceAttributeGroup }\n        OBJECT      finDevicePresentOnOff\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finDeviceMaxCapacity\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finDeviceCurrentCapacity\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMaxCapacity\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyCurrentLevel\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaDimFeedDir\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaDimXFeedDir\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaName\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputName\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputSecurity\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaWeight\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaThickness\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finSupplyMediaInputMediaType\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finDeviceAttributeValueAsInteger\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        OBJECT      finDeviceAttributeValueAsOctets\n\
    \        MIN-ACCESS  read-only\n        DESCRIPTION\n            \"It is conformant\
    \ to implement this object as read-only.\"\n        GROUP       finSupplyMediaInputGroup\n\
    \        DESCRIPTION\n            \"This group is conditionally mandatory and\
    \ must be included\n             if a finisher device requires a media supply\
    \ that is used\n             exclusively by a finishing process.\"\n    ::= {\
    \ prtMIBConformance 5 }\n"
- title: finMIBGroups      OBJECT IDENTIFIER ::= { prtMIBConformance 6 }
  contents:
  - 'finMIBGroups      OBJECT IDENTIFIER ::= { prtMIBConformance 6 }

    '
- title: finDeviceGroup OBJECT-GROUP
  contents:
  - "finDeviceGroup OBJECT-GROUP\n    OBJECTS { finDeviceType, finDevicePresentOnOff,\n\
    \              finDeviceCapacityUnit, finDeviceMaxCapacity,\n              finDeviceCurrentCapacity,\
    \ finDeviceAssociatedMediaPaths,\n              finDeviceAssociatedOutputs, finDeviceStatus,\n\
    \              finDeviceDescription }\n    STATUS  current\n    DESCRIPTION\n\
    \        \"The finisher device group.\"\n    ::= { finMIBGroups 1 }\n"
- title: finSupplyGroup OBJECT-GROUP
  contents:
  - "finSupplyGroup OBJECT-GROUP\n    OBJECTS { finSupplyDeviceIndex, finSupplyClass,\
    \ finSupplyType,\n              finSupplyDescription, finSupplyUnit, finSupplyMaxCapacity,\n\
    \              finSupplyCurrentLevel, finSupplyColorName }\n    STATUS  current\n\
    \    DESCRIPTION\n        \"The finisher supply group.\"\n    ::= { finMIBGroups\
    \ 2 }\n"
- title: finSupplyMediaInputGroup OBJECT-GROUP
  contents:
  - "finSupplyMediaInputGroup OBJECT-GROUP\n    OBJECTS { finSupplyMediaInputDeviceIndex,\n\
    \              finSupplyMediaInputSupplyIndex, finSupplyMediaInputType,\n    \
    \          finSupplyMediaInputDimUnit,\n              finSupplyMediaInputMediaDimFeedDir,\n\
    \              finSupplyMediaInputMediaDimXFeedDir,\n              finSupplyMediaInputStatus,\
    \ finSupplyMediaInputMediaName,\n              finSupplyMediaInputName, finSupplyMediaInputDescription,\n\
    \              finSupplyMediaInputSecurity,\n              finSupplyMediaInputMediaWeight,\n\
    \              finSupplyMediaInputMediaThickness,\n              finSupplyMediaInputMediaType\
    \ }\n    STATUS  current\n    DESCRIPTION\n        \"The finisher supply, media\
    \ input group.\"\n    ::= { finMIBGroups 3 }\n"
- title: finDeviceAttributeGroup OBJECT-GROUP
  contents:
  - "finDeviceAttributeGroup OBJECT-GROUP\n    OBJECTS { finDeviceAttributeValueAsInteger,\n\
    \              finDeviceAttributeValueAsOctets }\n    STATUS  current\n    DESCRIPTION\n\
    \        \"The finisher device attribute group.  This group is mandatory\n   \
    \      for a finisher device that contains an inserter subunit.\"\n    ::= { finMIBGroups\
    \ 4 }\n"
- title: END
  contents:
  - 'END

    '
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   The initial version of the IANA Finisher MIB defined\
    \ in section 7 of\n   this document is to be archived by IANA and subsequently\
    \ maintained\n   according to the Process specified in section 6.1 of this document.\n\
    \   The most current and authoritative version of the IANA Finisher MIB\n   is\
    \ available at:\n      http://www.iana.org/assignments/ianafinisher-mib\n"
- title: 10.  Internationalization Considerations
  contents:
  - "10.  Internationalization Considerations\n   See the Printer MIB [RFC3805] section\
    \ 2.2.1.1, 'International\n   Considerations'.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [DPA]      ISO/IEC 10175 Document Printing Application\
    \ (DPA).  See\n              ftp://ftp.pwg.org/pub/pwg/dpa/\n   [LMO]      Large\
    \ Mailing Operations Specification, DMTF.  See\n              http://www.dmtf.org/tech/apps.html\n\
    \   [PWGMEDIA] IEEE-ISTO PWG \"The Printer Working Group Standard for\n      \
    \        Media Standardized Names\", IEEE-ISTO PWG 5101.1-2002.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2434]  Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 2434,\n              October 1998.\n   [RFC2578]  McCloghrie, K.,\
    \ Perkins, D., and J. Schoenwaelder,\n              \"Structure of Management\
    \ Information Version 2 (SMIv2)\",\n              STD 58, RFC 2578, April 1999.\n\
    \   [RFC2579]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n          \
    \    \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April\n            \
    \  1999.\n   [RFC2580]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n \
    \             \"Conformance Statements for SMIv2\", STD 58, RFC 2580,\n      \
    \        April 1999.\n   [RFC2790]  Waldbusser, S. and P. Grillo, \"Host Resources\
    \ MIB\", RFC\n              2790, March 2000.\n   [RFC3805]  Bergman, R., Lewis,\
    \ H., and I. McDonald, \"The Printer MIB\n              v2\", RFC 3805, June 2004.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC2911]  Hastings, T. Ed., Herriot, R., deBry,\
    \ R., Issacson, S.,\n              and P. Powell, \"Internet Printing Protocol/1.1:\
    \ Model and\n              Semantics\", RFC 2911, September 2000.\n   [RFC3410]\
    \  Case, J., Mundy, R., Partain, D., and B. Stewart,\n              \"Introduction\
    \ and Applicability Statements for Internet-\n              Standard Management\
    \ Framework\", RFC 3410, December 2002.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\
    \  These are the tables and objects and their\n   sensitivity/vulnerability:\n\
    \   finDeviceTable:\n      finDevicePresentOnOff -Possible severe inconvenience\n\
    \      finDeviceMaxCapacity -Possible minor inconvenience\n      finDeviceCurrentCapacity\
    \ -Possible minor inconvenience\n   finSupplyTable:\n      finSupplyMaxCapacity\
    \ -Possible minor inconvenience\n      finSupplyCurrentLevel -Possible minor inconvenience\n\
    \   finSupplyMediaInputTable\n      finSupplyMediaInputMediaDimFeedDir -Possible\
    \ severe inconvenience\n      finSupplyMediaInputMediaDimXFeedDir -Possible severe\
    \ inconvenience\n      finSupplyMediaInputMediaName -Possible Minor inconvenience\n\
    \      finSupplyMediaInputName -Possible Minor inconvenience\n      finSupplyMediaInputSecurity\
    \ -Possible Minor inconvenience\n      finSupplyMediaInputMediaWeight -Possible\
    \ Minor inconvenience\n      finSupplyMediaInputMediaThickness -Possible Minor\
    \ inconvenience\n      finSupplyMediaInputMediaType -Possible Minor inconvenience\n\
    \   finDeviceAttributeTable\n      finDeviceAttributeValueAsInteger -Possible\
    \ Minor inconvenience\n      finDeviceAttributeValueAsOctets -Possible Minor inconvenience\n\
    \   SNMP versions prior to SNMPv3 did not include adequate security.\n   Even\
    \ if the network itself is secure (for example by using IPSec),\n   even then,\
    \ there is no control as to who on the secure network is\n   allowed to access\
    \ and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n\
    \   It is RECOMMENDED that implementers consider the security features as\n  \
    \ provided by the SNMPv3 framework (see [RFC3410], section 8),\n   including full\
    \ support for the SNMPv3 cryptographic mechanisms (for\n   authentication and\
    \ privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n\
    \   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable\
    \ cryptographic security.  It is then a customer/operator\n   responsibility to\
    \ ensure that the SNMP entity giving access to an\n   instance of this MIB module\
    \ is properly configured to give access to\n   the objects only to those principals\
    \ (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)\
    \ them.\n   Where the operational capability of the printing device are\n   especially\
    \ vulnerable or difficult to administer, certain objects\n   within this MIB have\
    \ been tagged as READ-ONLY, preventing\n   modification. Further, for all READ-WRITE\
    \ objects within the MIB, the\n   working group has included specific conformance\
    \ guidelines stating\n   that vendors are free to implement certain objects as\
    \ READ-ONLY. This\n   conformance allowance should cover cases where specific\
    \ vendor\n   vulnerabilities may differ from product to product. (See conformance\n\
    \   section with regards to MIN-ACCESS clauses).\n"
- title: 13.  Acknowledgements
  contents:
  - "13.  Acknowledgements\n   The Printer MIB Working Group would like to extend\
    \ a special thank\n   you to the following individuals that put forth a significant\
    \ effort\n   to review this document and provide numerous suggestions for\n  \
    \ improvement.\n   David Harrington - Enterasys Networks\n   Juergen Schoenwaelder\
    \ - TU Braunschweig\n   Bert Wijnen - Lucent Technologies and IETF Op & Mngmt,\
    \ Area Director\n   Other Participants:\n   Chuck Adams - Tektronix\n   Carlos\
    \ Becerra - HP\n   Andy Davidson - Tektronix\n   Mabry Dozier - QMS\n   Lee Farrell\
    \ - Canon\n   Jennifer Gattis - Duplo USA\n   Paul Gloger - Xerox\n   Richard\
    \ Hart - Digital\n   Tom Hastings - Xerox\n   Scott Isaacson - Novell\n   David\
    \ Kellerman - Northlake Software\n   Henrik Holst - i-data International\n   Rick\
    \ Landau - Digital\n   Jay Martin - Underscore\n   Gary Padlipski - Xerox\n  \
    \ Kevin Palmer - Duplo USA\n   Bob Pentecost - HP\n   Stuart Rowley - Kyocera\n\
    \   Yuki Sacchi - Japan Computer Industry\n   Philip Thambidunai - Okidata\n \
    \  William Wagner - DPI/Osicom\n   Chris Wellens - Interworking Labs\n   Don Wright\
    \ - Lexmark\n   Lloyd Young - Lexmark\n"
- title: 14.  Authors' Addresses
  contents:
  - "14.  Authors' Addresses\n   Ron Bergman (Editor)\n   Hitachi Printing Solutions\
    \ America\n   2635 Park Center Drive\n   Simi Valley, CA  93065-6209\n   Phone:\
    \ 805-578-4421\n   Fax:  805-578-4001\n   EMail: Ron.Bergman@hitachi-ps.us\n \
    \  Harry Lewis (Chairman)\n   IBM Corporation\n   6300 Diagonal Hwy\n   Boulder,\
    \ CO 80301\n   Phone: (303) 924-5337\n   EMail: harryl@us.ibm.com\n   Ira McDonald\n\
    \   High North Inc.\n   P.O. Box 221\n   Grand Marais, MI  49839\n   Phone: (906)\
    \ 494-2434 or (906) 494-2697\n   EMail: imcdonald@sharplabs.com\n   Send comments\
    \ to the Printer Working Group (PWG) using the Finisher\n   MIB Project (FIN)\
    \ Mailing List:  fin@pwg.org\n   Implementers of this specification are encouraged\
    \ to join this email\n   distribution list in order to participate in any discussions\
    \ of\n   clarification issues and review registration proposals for\n   additional\
    \ attributes and enum values.\n   For further information, access the PWG web\
    \ page under \"FIN\":\n   http://www.pwg.org/\n"
- title: 15.  Full Copyright Statement
  contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
