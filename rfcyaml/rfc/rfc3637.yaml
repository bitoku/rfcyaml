- contents:
  - "                     Definitions of Managed Objects\n                for the
    Ethernet WAN Interface Sublayer\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines a portion of the Management Information Base\n
    \  (MIB) for use with network management protocols in TCP/IP based\n   internets.
    \ In particular, it defines objects for managing the\n   Ethernet Wide Area Network
    (WAN) Interface Sublayer (WIS).\n   The MIB module defined in this memo is an
    extension of the\n   Synchronous Optical Network/Synchronous Digital Hierarchy
    (SONET/SDH)\n   Interface MIB and is implemented in conjunction with it and with
    the\n   Ethernet-like Interface MIB, the 802.3 Medium Attachment Unit MIB,\n   the
    Interfaces Group MIB, and the Inverted Stack Table MIB.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Conventions. . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  The Internet-Standard Management Framework . . . . . .
    . . . .  2\n   3.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n       3.1.  Relationship to the SONET/SDH Interface MIB. . . . . . .
    \ 3\n       3.2.  Relationship to the Ethernet-like Interface MIB. . . . .  4\n
    \      3.3.  Relationship to the 802.3 MAU MIB. . . . . . . . . . . .  4\n       3.4.
    \ Use of the ifTable . . . . . . . . . . . . . . . . . . .  4\n             3.4.1.
    \ Layering Model . . . . . . . . . . . . . . . . .  5\n             3.4.2.  Use
    of ifTable for LLC Layer/MAC Layer\n                     Reconciliation Sublayer/Physical
    Coding Sublayer  5\n             3.4.3.  Use of ifTable for SONET/SDH Path Layer.
    . . . .  5\n             3.4.4.  Use of ifTable for SONET/SDH Medium/Section/\n
    \                    Line Layer . . . . . . . . . . . . . . . . . . .  5\n       3.5.
    \ SONET/SDH Terminology. . . . . . . . . . . . . . . . . .  6\n       3.6.  Mapping
    of IEEE 802.3 Managed Objects. . . . . . . . . .  7\n       3.7.  Mapping of SNMP
    Objects to WIS Station Management\n             Registers. . . . . . . . . . .
    . . . . . . . . . . . . . 12\n       3.8.  Structure of the MIB Module  . . .
    . . . . . . . . . . . 14\n             3.8.1.  etherWisDeviceTable. . . . . .
    . . . . . . . . . 14\n             3.8.2.  etherWisSectionCurrentTable. . . .
    . . . . . . . 15\n             3.8.3.  etherWisPathCurrentTable . . . . . . .
    . . . . . 15\n             3.8.4.  etherWisFarEndPathCurrentTable . . . . . .
    . . . 15\n   4.  Object Definitions . . . . . . . . . . . . . . . . . . . . .
    . 16\n   5.  Intellectual Property Statement. . . . . . . . . . . . . . . . 30\n
    \  6.  Acknowledgments. . . . . . . . . . . . . . . . . . . . . . . . 30\n   7.
    \ Security Considerations. . . . . . . . . . . . . . . . . . . . 31\n   8.  References
    . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n       8.1.  Normative
    References . . . . . . . . . . . . . . . . . . 32\n       8.2.  Informative References
    . . . . . . . . . . . . . . . . . 33\n   Appendix A: Collection of Performance
    Data Using WIS\n       MDIO Registers . . . . . . . . . . . . . . . . . . . .
    . . . . 34\n   Contributors . . . . . . . . . . . . . . . . . . . . . . . . .
    . . 35\n   Editor's Address . . . . . . . . . . . . . . . . . . . . . . . . .
    36\n   Full Copyright Statement . . . . . . . . . . . . . . . . . . . . . 37\n"
  title: Table of Contents
- contents:
  - "1.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\", when they appear in this document, are to be interpreted\n
    \  as described in BCP 14, RFC 2119 [RFC2119].\n"
  title: 1.  Conventions
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Overview\n   The objects defined in this memo are used in conjunction with
    objects\n   defined in the Interfaces Group MIB [RFC2863], the SONET/SDH\n   Interface
    MIB [RFC3592], and the 802.3 MAU MIB [RFC3636] to manage\n   the Ethernet Wide
    Area Network (WAN) Interface Sublayer (WIS) defined\n   in [802.3ae].  The WIS
    contains functions to perform OC-192c/VC-4-64c\n   framing and scrambling.  It
    resides between the Physical Coding\n   Sublayer (PCS) and the Physical Medium
    Attachment (PMA) sublayer\n   within a 10GBASE-W 10 Gb/s WAN-compatible physical
    layer device (PHY)\n   and may be used in conjunction with any of the PCS, PMA,
    and Physical\n   Medium Dependent (PMD) sublayers defined in [802.3ae] for 10GBASE-W\n
    \  PHYs.  Three types of 10GBASE-W PHYs are defined, distinguished by\n   the
    type of optics employed:  10GBASE-SW, 10GBASE-LW, and 10GBASE-EW.\n   The objects
    defined in this memo may be used to manage an Ethernet\n   interface employing
    any type of 10GBASE-W PHY.  They do not apply to\n   any other kind of interface.
    \ In particular, they do not apply to\n   so-called Ethernet Line Terminating
    Equipment (ELTE) residing within\n   a SONET network element that uses the 10GBASE-W
    PMA/PMD sublayers but\n   otherwise acts as SONET Line Terminating Equipment (LTE).\n
    \  The objects presented here -- along with those incorporated by\n   reference
    from the Interfaces Group MIB, the SONET/SDH Interface MIB,\n   and the 802.3
    MAU MIB -- are intended to provide exact\n   representations of the mandatory
    attributes in the oWIS managed\n   object class (i.e., the members of the pWISBasic
    package) defined in\n   Clause 30 and Annex 30A of [802.3ae].  They are also intended
    to\n   provide approximate representations of the optional attributes (i.e.,\n
    \  the members of the pWISOptional package).  Some objects with no\n   analogues
    in oWIS are defined to support WIS testing features\n   required by Clause 50
    of [802.3ae].\n"
  - contents:
    - "3.1.  Relationship to the SONET/SDH Interface MIB\n   Since the Ethernet WAN
      Interface Sublayer was designed to be SONET-\n   compatible, information similar
      to that provided by most of the\n   members of the oWIS managed object class
      is available from objects\n   defined in the SONET-MIB [RFC3592].  Thus, the
      MIB module defined in\n   this memo is a sparse augmentation of the SONET-MIB
      -- in other\n   words, every table defined here is an extension of some table
      in the\n   SONET-MIB -- and its compliance statement REQUIRES that an agent\n
      \  implementing the objects defined in this memo also implement the\n   relevant
      SONET-MIB objects.  That includes all objects required by\n   sonetCompliance2
      as well as some that it leaves optional.\n   It should be noted that some of
      the objects incorporated by reference\n   from the SONET-MIB -- specifically,
      the threshold objects and\n   interval counter objects -- provide only approximate
      representations\n   of the corresponding oWIS attributes, as detailed in Section
      3.6.  An\n   alternative approach would have been to define new objects to exactly\n
      \  match the oWIS definitions.  That approach was rejected because the\n   SONET-MIB
      objects are already used in deployed systems to manage the\n   SONET sublayers
      of ATM over SONET and PPP over SONET interfaces, and\n   it was deemed undesirable
      to use a different scheme to manage the\n   SONET sublayers of 10 Gb/s WAN-compatible
      Ethernet interfaces.  Note\n   that the approach adopted by this memo requires
      no hardware support\n   beyond that mandated by [802.3ae] subclause 50.3.11.\n"
    title: 3.1.  Relationship to the SONET/SDH Interface MIB
  - contents:
    - "3.2.  Relationship to the Ethernet-like Interface MIB\n   An interface which
      includes the Ethernet WIS is, by definition, an\n   Ethernet-like interface,
      and an agent implementing the objects\n   defined in this memo MUST implement
      the objects required by the\n   dot3Compliance2 compliance statement in the
      EtherLike-MIB.\n"
    title: 3.2.  Relationship to the Ethernet-like Interface MIB
  - contents:
    - "3.3.  Relationship to the 802.3 MAU MIB\n   Support for the mauModIfCompl3
      compliance statement of the MAU-MIB\n   [RFC3636] is REQUIRED for all Ethernet-like
      interfaces.  The MAU-MIB\n   is needed in order to allow applications to control
      and/or determine\n   the media type in use.  That is important for devices than
      can\n   support both the 10GBASE-R 10 Gb/s LAN format (which does not include\n
      \  the WIS) and the 10GBASE-W 10 Gb/s WAN format (which does include the\n   WIS).
      \ The MAU-MIB also provides the means to put a device in standby\n   mode or
      to reset it;  the latter may be used to re-initialize the\n   WIS.\n"
    title: 3.3.  Relationship to the 802.3 MAU MIB
  - contents:
    - "3.4.  Use of the ifTable\n   This section specifies how the ifTable, as defined
      in [RFC2863], is\n   used for the Ethernet WIS application.\n"
    - contents:
      - "3.4.1.  Layering Model\n   Ethernet interfaces that employ the WIS are layered
        as defined in\n   [802.3ae].  The corresponding use of the ifTable [RFC2863]
        is shown\n   in the figure below.\n          _____________________________
        \  _\n         |    LLC Layer                |  |\n         +-----------------------------+
        \ |\n         |    MAC Layer                |  |\n         +-----------------------------+
        \ > 1 ifEntry\n         |    Reconciliation Sublayer  |  |   ifType: ethernetCsmacd(6)\n
        \        +-----------------------------+  |\n         |    Physical Coding
        Sublayer |  |\n         +-----------------------------+  +\n         |    Path
        Layer               |  > 1 ifEntry\n         +-----------------------------+
        \ +   ifType: sonetPath(50)\n         |    Line Layer               |  |\n
        \        +-----------------------------+  |\n         |    Section Layer            |
        \ > 1 ifEntry\n         +-----------------------------+  |   ifType: sonet(39)\n
        \        |    Physical Medium Layer    |  |\n          -----------------------------
        \  -\n      Figure 1 - Use of ifTable for an Ethernet WIS port\n   The exact
        configuration and multiplexing of the layers is maintained\n   in the ifStackTable
        [RFC2863] and in the ifInvStackTable [RFC2864].\n"
      title: 3.4.1.  Layering Model
    - contents:
      - "3.4.2.  Use of ifTable for LLC Layer/MAC Layer/Reconciliation\n         Sublayer/Physical
        Coding Sublayer\n   The ifTable MUST be used as specified in [RFC3635] and
        [RFC3636] for\n   the LLC Layer/MAC Layer/Reconciliation Sublayer/Physical
        Coding\n   Sublayer.\n"
      title: 3.4.2.  Use of ifTable for LLC Layer/MAC Layer/Reconciliation
    - contents:
      - "3.4.3.  Use of ifTable for SONET/SDH Path Layer\n   The ifTable MUST be used
        as specified in [RFC3592] for the SONET/SDH\n   Path Layer.  The value of
        ifHighSpeed is set to 9585.  ifSpeed\n   reports a value of 4294967295.\n"
      title: 3.4.3.  Use of ifTable for SONET/SDH Path Layer
    - contents:
      - "3.4.4.  Use of ifTable for SONET/SDH Medium/Section/Line Layer\n   The ifTable
        MUST be used as specified in [RFC3592] for the SONET/SDH\n   Medium/Section/Line
        Layer.  The value of ifHighSpeed is set to 9953.\n   ifSpeed reports a value
        of 4294967295.\n"
      title: 3.4.4.  Use of ifTable for SONET/SDH Medium/Section/Line Layer
    title: 3.4.  Use of the ifTable
  - contents:
    - "3.5.  SONET/SDH Terminology\n   The SONET/SDH terminology used in [802.3ae]
      is mostly the same as in\n   [RFC3592], but there are a few differences.  In
      those cases the\n   definitions in [802.3ae] take precedence.  The specific
      differences\n   are as follows.\n   Unequipped\n       This defect is not defined
      by [802.3ae].  An implementation that\n       supports it SHOULD report it by
      setting the sonetPathUnequipped\n       bit in the appropriate instance of sonetPathCurrentStatus.\n
      \  Signal Label Mismatch\n       This defect is called Payload Label Mismatch
      (PLM) in [802.3ae].\n       It is reported by setting both the sonetPathSignalLabelMismatch\n
      \      bit in the appropriate instance of sonetPathCurrentStatus\n       (defined
      in [RFC3592]) and the etherWisPathPLM bit in the\n       corresponding instance
      of etherWisPathCurrentStatus (defined\n       below).\n   Loss of Codegroup
      Delineation\n       [802.3ae] defines Loss of Codegroup Delineation (LCD) as\n
      \      occurring when the Physical Coding Sublayer is unable to locate\n       64B/66B
      code group boundaries.  There is no analogous defect\n       defined in [RFC3592].
      \ It is reported by setting the\n       etherWisPathLCD bit in the appropriate
      instance of the object\n       etherWisPathCurrentStatus defined below.\n   STS-Path
      Remote Defect Indication\n       [802.3ae] mandates the use of ERDI-P (Enhanced
      Remote Defect\n       Indication - Path) defined in [T1.231] to signal remote
      server\n       defects (triggered by path AIS or path LOP) and remote payload\n
      \      defects (triggered by Payload Label Mismatch or Loss of Codegroup\n       Delineation).
      \ [RFC3592] defines the one-bit RDI-P (Remote Defect\n       Indication - Path),
      which signals remote server detects (i.e.,\n       path AIS and path LOP) only.
      \ An implementation of the MIB module\n       defined in this memo MUST set
      the sonetPathSTSRDI bit in the\n       appropriate instance of sonetPathCurrentStatus
      when it receives\n       an ERDI-P server defect indication from the remote
      end.  Both\n       ERDI-P payload defects and ERDI-P server defects are reported
      in\n       the object etherWisFarEndPathCurrentStatus defined below.\n   Path
      Coding Violations\n       In [802.3ae] the path layer CV count is based on block
      errors and\n       not BIP-8 errors, i.e., it is incremented only once for each
      B3\n       byte that indicates incorrect parity, regardless of the number of\n
      \      bits in error.  Note that Section 8.4.5.1 of [T1.231] allows\n       either
      path BIP-8 errors or path block errors to be used for the\n       path layer
      error count.\n"
    title: 3.5.  SONET/SDH Terminology
  - contents:
    - "3.6.  Mapping of IEEE 802.3 Managed Objects\n   This section contains the mapping
      between oWIS managed objects\n   defined in [802.3ae] and managed objects defined
      in this document and\n   in associated MIB modules, i.e., the IF-MIB [RFC2863],
      the SONET-MIB\n   [RFC3592], and the MAU-MIB [RFC3636].\n   IEEE 802.3 Managed
      Object    Corresponding SNMP Object\n   oWIS - pWISBasic package\n    aWISID
      \                     IF-MIB - ifIndex\n    aSectionStatus              SONET-MIB
      - sonetSectionCurrentStatus\n    aLineStatus                 SONET-MIB - sonetLineCurrentStatus\n
      \   aPathStatus                 etherWisPathCurrentStatus\n    aFarEndPathStatus
      \          etherWisFarEndPathCurrentStatus\n   oWIS - pWISOptional package\n
      \   aSectionSESThreshold        SONET-MIB - sonetSESthresholdSet\n    aSectionSESs
      \               SONET-MIB - sonetSectionCurrentSESs +\n                                            sonetSectionIntervalSESs\n
      \   aSectionESs                 SONET-MIB - sonetSectionCurrentESs +\n                                            sonetSectionIntervalESs\n
      \   aSectionSEFSs               SONET-MIB - sonetSectionCurrentSEFSs +\n                                            sonetSectionIntervalSEFSs\n
      \   aSectionCVs                 SONET-MIB - sonetSectionCurrentCVs +\n                                               sonetSectionIntervalCVs\n
      \   aJ0ValueTX                  etherWisSectionCurrentJ0Transmitted\n    aJ0ValueRX
      \                 etherWisSectionCurrentJ0Received\n    aLineSESThreshold           SONET-MIB
      - sonetSESthresholdSet\n    aLineSESs                   SONET-MIB - sonetLineCurrentSESs
      +\n                                            sonetLineIntervalSESs\n    aLineESs
      \                   SONET-MIB - sonetLineCurrentESs +\n                                            sonetLineIntervalESs\n
      \   aLineCVs                    SONET-MIB - sonetLineCurrentCVs +\n                                            sonetLineIntervalCVs\n
      \   aFarEndLineSESs             SONET-MIB - sonetFarEndLineCurrentSESs +\n                                            sonetFarEndLineIntervalSESs\n
      \   aFarEndLineESs              SONET-MIB - sonetFarEndLineCurrentESs +\n                                            sonetFarEndLineIntervalESs\n
      \   aFarEndLineCVs              SONET-MIB - sonetFarEndLineCurrentCVs +\n                                            sonetFarEndLineIntervalCVs\n
      \   aPathSESThreshold           SONET-MIB - sonetSESthresholdSet\n    aPathSESs
      \                  SONET-MIB - sonetPathCurrentSESs +\n                                            sonetPathIntervalSESs\n
      \   aPathESs                    SONET-MIB - sonetPathCurrentESs +\n                                            sonetPathIntervalESs\n
      \   aPathCVs                    SONET-MIB - sonetPathCurrentCVs +\n                                            sonetPathIntervalCVs\n
      \   aJ1ValueTX                  etherWisPathCurrentJ1Transmitted\n    aJ1ValueRX
      \                 etherWisPathCurrentJ1Received\n    aFarEndPathSESs             SONET-MIB
      - sonetFarEndPathCurrentSESs +\n                                            sonetFarEndPathIntervalSESs\n
      \   aFarEndPathESs              SONET-MIB - sonetFarEndPathCurrentESs +\n                                            sonetFarEndPathIntervalESs\n
      \   aFarEndPathCVs              SONET-MIB - sonetFarEndPathCurrentCVs +\n                                            sonetFarEndPathIntervalCVs\n
      \  It should be noted that the threshold and counter objects imported\n   from
      the SONET-MIB are not completely equivalent to the corresponding\n   IEEE 802.3
      objects.  The specific differences are as follows:\n   IEEE 802.3 Managed Object
      \   How Corresponding SNMP Object Differs\n   aSectionSESThreshold      This
      object is defined in [802.3ae] as an\n                             integer with
      one instance per interface.\n                             sonetSESthresholdSet
      is an enumerated value\n                             that has one instance per
      network element;\n                             it controls the thresholds for
      all layers\n                             simultaneously and allows only certain\n
      \                            discrete values to be selected.\n   aSectionSESs
      \             This object is defined in [802.3ae] as a\n                             generalized
      nonresetable counter.  The\n                             objects sonetSectionCurrentSESs
      and\n                             sonetSectionIntervalSESs are 15-minute\n                             interval
      counters.\n   aSectionESs               This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae].  The\n                             objects
      sonetSectionCurrentESs and\n                             sonetSectionIntervalESs
      are 15-minute\n                             interval counters.\n   aSectionSEFSs
      \            This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae].  The\n                             objects sonetSectionCurrentSEFSs
      and\n                             sonetSectionIntervalSEFSs are 15-minute\n
      \                            interval counters.\n   aSectionCVs               This
      object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetSectionCurrentCVs
      and\n                             sonetSectionIntervalCVs are 15-minute\n                             interval
      counters, and they are inhibited\n                             (not incremented)
      during one-second\n                             intervals that qualify as severely
      errored\n                             seconds.\n   aLineSESThreshold         This
      object is defined in [802.3ae] as an\n                             integer with
      one instance per interface.\n                             sonetSESthresholdSet
      is an enumerated value\n                             that has one instance per
      network element;\n                             it controls the thresholds for
      all layers\n                             simultaneously and allows only certain\n
      \                            discrete values to be selected.\n   aLineSESs                 This
      object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetLineCurrentSESs
      and\n                             sonetLineIntervalSESs are 15-minute\n                             interval
      counters, and they are inhibited\n                             (not incremented)
      during one-second\n                             intervals that qualify as unavailable\n
      \                            seconds.\n   aLineESs                  This object
      is defined as a generalized\n                             nonresetable counter
      in [802.3ae], and it\n                             is not subject to inhibiting.
      \ The objects\n                             sonetLineCurrentESs and\n                             sonetLineIntervalESs
      are 15-minute interval\n                             counters, and they are
      inhibited (not\n                             incremented) during one-second
      intervals\n                             that qualify as unavailable seconds.\n
      \  aLineCVs                  This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetLineCurrentCVs and\n
      \                            sonetLineIntervalCVs are 15-minute interval\n                             counters,
      and they are inhibited (not\n                             incremented) during
      one-second intervals\n                             that qualify either as severely
      errored\n                             seconds or as unavailable seconds.\n   aFarEndLineSESs
      \          This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetFarEndLineCurrentSESs
      and\n                             sonetFarEndLineIntervalSESs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify as unavailable\n                             seconds.\n   aFarEndLineESs
      \           This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetFarEndLineCurrentESs
      and\n                             sonetFarEndLineIntervalESs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify as unavailable\n                             seconds.\n   aFarEndLineCVs
      \           This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetFarEndLineCurrentCVs
      and\n                             sonetFarEndLineIntervalCVs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify either as severely\n                             errored seconds or
      as unavailable seconds.\n   aPathSESThreshold         This object is defined
      in [802.3ae] as an\n                             integer with one instance per
      interface.\n                             sonetSESthresholdSet is an enumerated
      value\n                             that has one instance per network element;\n
      \                            it controls the thresholds for all layers\n                             simultaneously
      and allows only certain\n                             discrete values to be
      selected.\n   aPathSESs                 This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae], and it\n                             is
      not subject to inhibiting.  The objects\n                             sonetPathCurrentSESs
      and\n                             sonetPathIntervalSESs are 15-minute\n                             interval
      counters, and they are inhibited\n                             (not incremented)
      during one-second\n                             intervals that qualify as unavailable\n
      \                            seconds.  In addition, [802.3ae] includes\n                             PLM-P
      and LCD-P defects in the criteria for\n                             declaring
      path layer severely errored\n                             seconds, while [RFC3592]
      does not.\n   aPathESs                  This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae], and it\n                             is
      not subject to inhibiting.  The objects\n                             sonetPathCurrentESs
      and\n                             sonetPathIntervalESs are 15-minute interval\n
      \                            counters, and they are inhibited (not\n                             incremented)
      during one-second intervals\n                             that qualify as unavailable
      seconds.  In\n                             addition, [802.3ae] includes PLM-P
      and\n                             LCD-P defects in the criteria for declaring\n
      \                            path layer errored seconds, while [RFC3592]\n                             does
      not.\n   aPathCVs                  This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae], and it\n                             is
      not subject to inhibiting.  The objects\n                             sonetPathCurrentCVs
      and\n                             sonetPathIntervalCVs are 15-minute interval\n
      \                            counters, and they are inhibited (not\n                             incremented)
      during one-second intervals\n                             that qualify either
      as severely errored\n                             seconds or as unavailable
      seconds.\n   aFarEndPathSESs           This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae], and it\n                             is
      not subject to inhibiting.  The objects\n                             sonetFarEndPathCurrentSESs
      and\n                             sonetFarEndPathIntervalSESs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify as unavailable\n                             seconds.  In addition,
      [802.3ae] includes\n                             far-end PLM-P and LCD-P defects
      in the\n                             criteria for declaring far-end path layer\n
      \                            severely errored seconds, while [RFC3592]\n                             does
      not.\n   aFarEndPathESs            This object is defined as a generalized\n
      \                            nonresetable counter in [802.3ae], and it\n                             is
      not subject to inhibiting.  The objects\n                             sonetFarEndPathCurrentESs
      and\n                             sonetFarEndPathIntervalESs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify as unavailable\n                             seconds.  In addition,
      [802.3ae] includes\n                             far-end PLM-P and LCD-P defects
      in the\n                             criteria for declaring far-end path layer\n
      \                            errored seconds, while [RFC3592] does not.\n   aFarEndPathCVs
      \           This object is defined as a generalized\n                             nonresetable
      counter in [802.3ae], and it\n                             is not subject to
      inhibiting.  The objects\n                             sonetFarEndPathCurrentCVs
      and\n                             sonetFarEndPathIntervalCVs are 15-minute\n
      \                            interval counters, and they are inhibited\n                             (not
      incremented) during one-second\n                             intervals that
      qualify either as severely\n                             errored seconds or
      as unavailable seconds.\n   Note:  despite the semantic differences between
      the threshold objects\n   and counter objects imported from the SONET-MIB and
      the corresponding\n   IEEE 802.3 objects, the hardware support mandated by [802.3ae]\n
      \  subclause 50.3.11 suffices for both.  See Appendix A for details.\n"
    title: 3.6.  Mapping of IEEE 802.3 Managed Objects
  - contents:
    - "3.7.  Mapping of SNMP Objects to WIS Station Management Registers\n   Some
      of the objects defined in this memo or incorporated by reference\n   from the
      SONET-MIB [RFC3592] or the MAU-MIB [RFC3636] require\n   WIS-specific hardware
      support.  [802.3ae] subclause 50.3.11 specifies\n   WIS management interface
      requirements, including a required subset of\n   the WIS Management Data Input/Output
      (MDIO) registers defined in\n   [802.3ae] subclause 45.2.2.  The table below
      provides a cross-\n   reference between those managed objects and the WIS MDIO
      registers\n   from the subset in [802.3ae] subclause 50.3.11 required to support\n
      \  them.  Note that the MDIO interface is optional;  however, if it is\n   not
      implemented, then the capabilities of the required register\n   subset must
      be provided by other means.\n   SNMP Object                                     WIS
      MDIO Register(s)\n   ETHER-WIS - etherWisDeviceTxTestPatternMode     10G WIS
      control 2\n   ETHER-WIS - etherWisDeviceRxTestPatternMode     10G WIS control
      2\n   ETHER-WIS - etherWisDeviceRxTestPatternErrors   10G WIS test pattern\n
      \                                                         error counter\n   SONET-MIB
      - sonetMediumType                     none required\n   SONET-MIB - sonetMediumTimeElapsed
      \             none required\n   SONET-MIB - sonetMediumValidIntervals           none
      required\n   SONET-MIB - sonetMediumLineCoding               none required\n
      \  SONET-MIB - sonetMediumLineType                 none required\n   SONET-MIB
      - sonetMediumCircuitIdentifier        none required\n   SONET-MIB - sonetMediumInvalidIntervals
      \        none required\n   SONET-MIB - sonetMediumLoopbackConfig           none
      required\n   SONET-MIB - sonetSESthresholdSet                none required\n
      \  ETHER-WIS - etherWisSectionCurrentJ0Transmitted 10G WIS J0 transmit\n   ETHER-WIS
      - etherWisSectionCurrentJ0Received    10G WIS J0 receive\n   SONET-MIB - sonetSectionCurrentStatus
      \          10G WIS status 3\n   SONET-MIB - sonetSectionCurrentESs              \\\n
      \  SONET-MIB - sonetSectionCurrentSESs              \\\n   SONET-MIB - sonetSectionCurrentSEFSs
      \             | 10G WIS status 3\n   SONET-MIB - sonetSectionCurrentCVs                |
      \       +\n   SONET-MIB - sonetSectionIntervalESs               | 10G WIS section\n
      \  SONET-MIB - sonetSectionIntervalSESs              | BIP error count\n   SONET-MIB
      - sonetSectionIntervalSEFSs            /\n   SONET-MIB - sonetSectionIntervalCVs
      \            /\n   SONET-MIB - sonetSectionIntervalValidData       none required\n
      \  SONET-MIB - sonetLineCurrentStatus              10G WIS status 3\n   SONET-MIB
      - sonetLineCurrentESs                 \\\n   SONET-MIB - sonetLineCurrentSESs
      \                \\\n   SONET-MIB - sonetLineCurrentCVs                   |
      10G WIS status 3\n   SONET-MIB - sonetLineCurrentUASs                  |        +\n
      \  SONET-MIB - sonetLineIntervalESs                  | 10G WIS line\n   SONET-MIB
      - sonetLineIntervalSESs                 | BIP errors\n   SONET-MIB - sonetLineIntervalCVs
      \                /\n   SONET-MIB - sonetLineIntervalUASs               /\n   SONET-MIB
      - sonetLineIntervalValidData          none required\n   SONET-MIB - sonetFarEndLineCurrentESs
      \          \\\n   SONET-MIB - sonetFarEndLineCurrentSESs           \\\n   SONET-MIB
      - sonetFarEndLineCurrentCVs             | 10G WIS status 3\n   SONET-MIB - sonetFarEndLineCurrentUASs
      \           |        +\n   SONET-MIB - sonetFarEndLineIntervalESs            |
      10G WIS far end\n   SONET-MIB - sonetFarEndLineIntervalSESs           | line
      BIP errors\n   SONET-MIB - sonetFarEndLineIntervalCVs           /\n   SONET-MIB
      - sonetFarEndLineIntervalUASs         /\n   SONET-MIB - sonetFarEndLineIntervalValidData
      \   10G WIS status 3\n   ETHER-WIS - etherWisPathCurrentStatus           10G
      WIS status 3\n   ETHER-WIS - etherWisPathCurrentJ1Transmitted    10G WIS J1
      transmit\n   ETHER-WIS - etherWisPathCurrentJ1Received       10G WIS J1 receive\n
      \  SONET-MIB - sonetPathCurrentWidth               none required\n   SONET-MIB
      - sonetPathCurrentStatus              10G WIS status 3\n   SONET-MIB - sonetPathCurrentESs
      \                \\\n   SONET-MIB - sonetPathCurrentSESs                 \\\n
      \  SONET-MIB - sonetPathCurrentCVs                   | 10G WIS status 3\n   SONET-MIB
      - sonetPathCurrentUASs                  |        +\n   SONET-MIB - sonetPathIntervalESs
      \                 | 10G WIS\n   SONET-MIB - sonetPathIntervalSESs                 |
      path block\n   SONET-MIB - sonetPathIntervalCVs                 /  error count\n
      \  SONET-MIB - sonetPathIntervalUASs               /\n   SONET-MIB - sonetPathIntervalValidData
      \         none required\n   ETHER-WIS - etherWisFarEndPathCurrentStatus     10G
      WIS status 3\n   SONET-MIB - sonetFarEndPathCurrentESs           \\\n   SONET-MIB
      - sonetFarEndPathCurrentSESs           \\\n   SONET-MIB - sonetFarEndPathCurrentCVs
      \            | 10G WIS status 3\n   SONET-MIB - sonetFarEndPathCurrentUASs            |
      \       +\n   SONET-MIB - sonetFarEndPathIntervalESs            | 10G WIS far
      end\n   SONET-MIB - sonetFarEndPathIntervalSESs           | path block\n   SONET-MIB
      - sonetFarEndPathIntervalCVs           /  error count\n   SONET-MIB - sonetFarEndPathIntervalUASs
      \        /\n   SONET-MIB - sonetFarEndPathIntervalValidData    10G WIS status
      3\n   MAU-MIB - ifMauIfIndex                          none required\n   MAU-MIB
      - ifMauIndex                            none required\n   MAU-MIB - ifMauType
      \                            10G WIS control 2\n   MAU-MIB - ifMauStatus                           WIS
      control 1\n   MAU-MIB - ifMauMediaAvailable                   \\ WIS status
      1 +\n   MAU-MIB - ifMauMediaAvailableStateExits         / 10G WIS status 3\n
      \  MAU-MIB - ifMauJabberState                      none required\n   MAU-MIB
      - ifMauJabberingStateEnters             none required\n   MAU-MIB - ifMauFalseCarriers
      \                   none required\n   MAU-MIB - ifMauDefaultType                      10G
      WIS control 2\n   MAU-MIB - ifMauAutoNegSupported                 none required\n
      \  MAU-MIB - ifMauTypeListBits                     10G WIS status 2\n"
    title: 3.7.  Mapping of SNMP Objects to WIS Station Management Registers
  - contents:
    - "3.8.  Structure of the MIB Module\n   Four tables are defined in this MIB module.\n"
    - contents:
      - "3.8.1.  etherWisDeviceTable\n   The purpose of this table is to define managed
        objects to control the\n   WIS test pattern mode.  These objects are required
        to support\n   mandatory and optional WIS test features specified in [802.3ae]\n
        \  subclause 50.3.8.\n   The etherWisDeviceTable is a sparse augmentation
        of the\n   sonetMediumTable of the SONET-MIB -- in other words, for each entry\n
        \  in the etherWisDeviceTable there MUST be an entry in the\n   sonetMediumTable
        and the same ifIndex value MUST be used for both\n   entries.\n"
      title: 3.8.1.  etherWisDeviceTable
    - contents:
      - "3.8.2.  etherWisSectionCurrentTable\n   The purpose of this table is to define
        managed objects for the\n   transmitted and received section trace messages
        (J0 byte).\n   The etherWisSectionCurrentTable is a sparse augmentation of
        the\n   sonetSectionCurrentTable of the SONET-MIB -- in other words, for each\n
        \  entry in the etherWisSectionCurrentTable there MUST be an entry in\n   the
        sonetSectionCurrentTable and the same ifIndex value MUST be used\n   for both
        entries.\n"
      title: 3.8.2.  etherWisSectionCurrentTable
    - contents:
      - "3.8.3.  etherWisPathCurrentTable\n   The purpose of this table is to define
        managed objects for the\n   current WIS path layer status and for the transmitted
        and received\n   path trace messages (J1 byte).  The path layer status object
        is\n   provided because the WIS supports some near-end path status\n   conditions
        that are not reported in sonetPathCurrentStatus.\n   The etherWisPathCurrentTable
        is a sparse augmentation of the\n   sonetPathCurrentTable of the SONET-MIB
        -- in other words, for each\n   entry in the etherWisPathCurrentTable there
        MUST be an entry in the\n   sonetPathCurrentTable and the same ifIndex value
        MUST be used for\n   both entries.\n"
      title: 3.8.3.  etherWisPathCurrentTable
    - contents:
      - "3.8.4.  etherWisFarEndPathCurrentTable\n   The purpose of this table is to
        define a managed object for the\n   current status of the far end of the path.
        \ This object is provided\n   because the WIS supports some far-end path status
        conditions that are\n   not reported in sonetPathCurrentStatus.\n   The etherWisFarEndPathCurrentTable
        is a sparse augmentation of the\n   sonetFarEndPathCurrentTable of the SONET-MIB
        -- in other words, for\n   each entry in the etherWisFarEndPathCurrentTable
        there MUST be an\n   entry in the sonetFarEndPathCurrentTable and the same
        ifIndex value\n   MUST be used for both entries.\n"
      title: 3.8.4.  etherWisFarEndPathCurrentTable
    title: 3.8.  Structure of the MIB Module
  title: 3.  Overview
- contents:
  - "4.  Object Definitions\n   ETHER-WIS DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,
    OBJECT-TYPE,\n       Gauge32, transmission\n           FROM SNMPv2-SMI\n       ifIndex\n
    \          FROM IF-MIB\n       MODULE-COMPLIANCE, OBJECT-GROUP\n           FROM
    SNMPv2-CONF\n       sonetMediumStuff2, sonetSectionStuff2,\n       sonetLineStuff2,
    sonetFarEndLineStuff2,\n       sonetPathStuff2, sonetFarEndPathStuff2,\n       sonetMediumType,
    sonetMediumLineCoding,\n       sonetMediumLineType, sonetMediumCircuitIdentifier,\n
    \      sonetMediumLoopbackConfig, sonetSESthresholdSet,\n       sonetPathCurrentWidth\n
    \          FROM SONET-MIB;\n   etherWisMIB MODULE-IDENTITY\n       LAST-UPDATED
    \"200309190000Z\"  -- September 19, 2003\n           ORGANIZATION \"IETF Ethernet
    Interfaces and Hub MIB\n                        Working Group\"\n           CONTACT-INFO\n
    \             \"WG charter:\n                 http://www.ietf.org/html.charters/hubmib-charter.html\n
    \              Mailing Lists:\n                 General Discussion: hubmib@ietf.org\n
    \                To Subscribe: hubmib-request@ietf.org\n                 In Body:
    subscribe your_email_address\n                Chair: Dan Romascanu\n               Postal:
    Avaya Inc.\n                       Atidim Technology Park, Bldg. 3\n                       Tel
    Aviv 61131\n                       Israel\n                  Tel: +972 3 645 8414\n
    \              E-mail: dromasca@avaya.com\n               Editor: C. M. Heard\n
    \              Postal: 600 Rainbow Dr. #141\n                       Mountain View,
    CA 94041-2542\n                       USA\n                  Tel: +1 650-964-8391\n
    \              E-mail: heard@pobox.com\"\n       DESCRIPTION\n         \"The objects
    in this MIB module are used in conjunction\n         with objects in the SONET-MIB
    and the MAU-MIB to manage\n         the Ethernet WAN Interface Sublayer (WIS).\n
    \        The following reference is used throughout this MIB module:\n         [IEEE
    802.3 Std] refers to:\n            IEEE Std 802.3, 2000 Edition: 'IEEE Standard
    for\n            Information technology - Telecommunications and\n            information
    exchange between systems - Local and\n            metropolitan area networks -
    Specific requirements -\n            Part 3: Carrier sense multiple access with
    collision\n            detection (CSMA/CD) access method and physical layer\n
    \           specifications', as amended by IEEE Std 802.3ae-2002,\n            'IEEE
    Standard for Carrier Sense Multiple Access with\n            Collision Detection
    (CSMA/CD) Access Method and\n            Physical Layer Specifications - Media
    Access Control\n            (MAC) Parameters, Physical Layer and Management\n
    \           Parameters for 10 Gb/s Operation', 30 August 2002.\n         Of particular
    interest are Clause 50, 'WAN Interface\n         Sublayer (WIS), type 10GBASE-W',
    Clause 30, '10Mb/s,\n         100Mb/s, 1000Mb/s, and 10Gb/s MAC Control, and Link\n
    \        Aggregation Management', and Clause 45, 'Management\n         Data Input/Output
    (MDIO) Interface'.\n         Copyright (C) The Internet Society (2003).  This
    version\n         of this MIB module is part of RFC 3637;  see the RFC\n         itself
    for full legal notices.\"\n       REVISION    \"200309190000Z\"  -- September
    19, 2003\n       DESCRIPTION \"Initial version, published as RFC 3637.\"\n       ::=
    { transmission 134 }\n   -- The main sections of the module\n   etherWisObjects
    \    OBJECT IDENTIFIER ::= { etherWisMIB 1 }\n   etherWisObjectsPath OBJECT IDENTIFIER
    ::= { etherWisMIB 2 }\n   etherWisConformance OBJECT IDENTIFIER ::= { etherWisMIB
    3 }\n   -- groups in the Ethernet WIS MIB module\n   etherWisDevice      OBJECT
    IDENTIFIER ::= { etherWisObjects 1 }\n   etherWisSection     OBJECT IDENTIFIER
    ::= { etherWisObjects 2 }\n   etherWisPath        OBJECT IDENTIFIER ::= { etherWisObjectsPath
    1 }\n   etherWisFarEndPath  OBJECT IDENTIFIER ::= { etherWisObjectsPath 2 }\n
    \  -- The Device group\n   -- These objects provide WIS extensions to\n   -- the
    SONET-MIB Medium Group.\n   etherWisDeviceTable OBJECT-TYPE\n       SYNTAX  SEQUENCE
    OF EtherWisDeviceEntry\n       MAX-ACCESS  not-accessible\n       STATUS  current\n
    \      DESCRIPTION\n          \"The table for Ethernet WIS devices\"\n        ::=
    { etherWisDevice 1 }\n   etherWisDeviceEntry OBJECT-TYPE\n       SYNTAX  EtherWisDeviceEntry\n
    \      MAX-ACCESS  not-accessible\n       STATUS  current\n       DESCRIPTION\n
    \         \"An entry in the Ethernet WIS device table.  For each\n          instance
    of this object there MUST be a corresponding\n          instance of sonetMediumEntry.\"\n
    \      INDEX  { ifIndex }\n        ::= { etherWisDeviceTable 1 }\n   EtherWisDeviceEntry
    ::=\n       SEQUENCE {\n           etherWisDeviceTxTestPatternMode     INTEGER,\n
    \          etherWisDeviceRxTestPatternMode     INTEGER,\n           etherWisDeviceRxTestPatternErrors
    \  Gauge32\n           }\n   etherWisDeviceTxTestPatternMode OBJECT-TYPE\n       SYNTAX
    \ INTEGER {\n                   none(1),\n                   squareWave(2),\n
    \                  prbs31(3),\n                   mixedFrequency(4)\n               }\n
    \      MAX-ACCESS  read-write\n       STATUS  current\n       DESCRIPTION\n          \"This
    variable controls the transmit test pattern mode.\n          The value none(1)
    puts the the WIS transmit path into\n          the normal operating mode.  The
    value squareWave(2) puts\n          the WIS transmit path into the square wave
    test pattern\n          mode described in [IEEE 802.3 Std.] subclause 50.3.8.1.\n
    \         The value prbs31(3) puts the WIS transmit path into the\n          PRBS31
    test pattern mode described in [IEEE 802.3 Std.]\n          subclause 50.3.8.2.
    \ The value mixedFrequency(4) puts the\n          WIS transmit path into the mixed
    frequency test pattern\n          mode described in [IEEE 802.3 Std.] subclause
    50.3.8.3.\n          Any attempt to set this object to a value other than\n          none(1)
    when the corresponding instance of ifAdminStatus\n          has the value up(1)
    MUST be rejected with the error\n          inconsistentValue, and any attempt
    to set the corresponding\n          instance of ifAdminStatus to the value up(1)
    when an\n          instance of this object has a value other than none(1)\n          MUST
    be rejected with the error inconsistentValue.\"\n       REFERENCE\n          \"[IEEE
    802.3 Std.], 50.3.8, WIS test pattern generator and\n          checker, 45.2.2.6,
    10G WIS control 2 register (2.7), and\n          45.2.2.7.2, PRBS31 pattern testing
    ability (2.8.1).\"\n        ::= { etherWisDeviceEntry 1 }\n   etherWisDeviceRxTestPatternMode
    OBJECT-TYPE\n       SYNTAX  INTEGER {\n                   none(1),\n                   prbs31(3),\n
    \                  mixedFrequency(4)\n               }\n       MAX-ACCESS  read-write\n
    \      STATUS  current\n       DESCRIPTION\n          \"This variable controls
    the receive test pattern mode.\n          The value none(1) puts the the WIS receive
    path into the\n          normal operating mode.  The value prbs31(3) puts the
    WIS\n          receive path into the PRBS31 test pattern mode described\n          in
    [IEEE 802.3 Std.] subclause 50.3.8.2.  The value\n          mixedFrequency(4)
    puts the WIS receive path into the mixed\n          frequency test pattern mode
    described in [IEEE 802.3 Std.]\n          subclause 50.3.8.3.  Any attempt to
    set this object to a\n          value other than none(1) when the corresponding
    instance\n          of ifAdminStatus has the value up(1) MUST be rejected with\n
    \         the error inconsistentValue, and any attempt to set the\n          corresponding
    instance of ifAdminStatus to the value up(1)\n          when an instance of this
    object has a value other than\n          none(1) MUST be rejected with the error
    inconsistentValue.\"\n       REFERENCE\n          \"[IEEE 802.3 Std.], 50.3.8,
    WIS test pattern generator and\n          checker, 45.2.2.6, 10G WIS control 2
    register (2.7), and\n          45.2.2.7.2, PRBS31 pattern testing ability (2.8.1).\"\n
    \       ::= { etherWisDeviceEntry 2 }\n   etherWisDeviceRxTestPatternErrors OBJECT-TYPE\n
    \      SYNTAX  Gauge32 ( 0..65535 )\n       MAX-ACCESS  read-write\n       STATUS
    \ current\n       DESCRIPTION\n          \"This object counts the number of errors
    detected when the\n          WIS receive path is operating in the PRBS31 test
    pattern\n          mode.  It is reset to zero when the WIS receive path\n          initially
    enters that mode, and it increments each time\n          the PRBS pattern checker
    detects an error as described in\n          [IEEE 802.3 Std.] subclause 50.3.8.2
    unless its value is\n          65535, in which case it remains unchanged.  This
    object is\n          writeable so that it may be reset upon explicit request\n
    \         of a command generator application while the WIS receive\n          path
    continues to operate in PRBS31 test pattern mode.\"\n       REFERENCE\n          \"[IEEE
    802.3 Std.], 50.3.8, WIS test pattern generator and\n          checker, 45.2.2.7.2,
    PRBS31 pattern testing ability\n          (2.8.1), and 45.2.2.8, 10G WIS test
    pattern error counter\n          register (2.9).\"\n        ::= { etherWisDeviceEntry
    3 }\n   -- The Section group\n   -- These objects provide WIS extensions to\n
    \  -- the SONET-MIB Section Group.\n   etherWisSectionCurrentTable OBJECT-TYPE\n
    \      SYNTAX  SEQUENCE OF EtherWisSectionCurrentEntry\n       MAX-ACCESS  not-accessible\n
    \      STATUS  current\n       DESCRIPTION\n          \"The table for the current
    state of Ethernet WIS sections.\"\n        ::= { etherWisSection 1 }\n   etherWisSectionCurrentEntry
    OBJECT-TYPE\n       SYNTAX  EtherWisSectionCurrentEntry\n       MAX-ACCESS  not-accessible\n
    \      STATUS  current\n       DESCRIPTION\n          \"An entry in the etherWisSectionCurrentTable.
    \ For each\n          instance of this object there MUST be a corresponding\n
    \         instance of sonetSectionCurrentEntry.\"\n       INDEX  { ifIndex }\n
    \       ::= { etherWisSectionCurrentTable 1 }\n   EtherWisSectionCurrentEntry
    ::=\n       SEQUENCE {\n           etherWisSectionCurrentJ0Transmitted OCTET STRING,\n
    \          etherWisSectionCurrentJ0Received    OCTET STRING\n           }\n   etherWisSectionCurrentJ0Transmitted
    OBJECT-TYPE\n       SYNTAX  OCTET STRING (SIZE (16))\n       MAX-ACCESS  read-write\n
    \      STATUS  current\n       DESCRIPTION\n          \"This is the 16-octet section
    trace message that\n          is transmitted in the J0 byte.  The value SHOULD\n
    \         be '89'h followed by fifteen octets of '00'h\n          (or some cyclic
    shift thereof) when the section\n          trace function is not used, and the
    implementation\n          SHOULD use that value (or a cyclic shift thereof)\n
    \         as a default if no other value has been set.\"\n       REFERENCE\n          \"[IEEE
    802.3 Std.], 30.8.1.1.8, aJ0ValueTX.\"\n        ::= { etherWisSectionCurrentEntry
    1 }\n   etherWisSectionCurrentJ0Received OBJECT-TYPE\n       SYNTAX  OCTET STRING
    (SIZE (16))\n       MAX-ACCESS  read-only\n       STATUS  current\n       DESCRIPTION\n
    \         \"This is the 16-octet section trace message that\n          was most
    recently received in the J0 byte.\"\n       REFERENCE\n          \"[IEEE 802.3
    Std.], 30.8.1.1.9, aJ0ValueRX.\"\n        ::= { etherWisSectionCurrentEntry 2
    }\n   -- The Path group\n   -- These objects provide WIS extensions to\n   --
    the SONET-MIB Path Group.\n   etherWisPathCurrentTable OBJECT-TYPE\n       SYNTAX
    \ SEQUENCE OF EtherWisPathCurrentEntry\n       MAX-ACCESS  not-accessible\n       STATUS
    \ current\n       DESCRIPTION\n          \"The table for the current state of
    Ethernet WIS paths.\"\n        ::= { etherWisPath 1 }\n   etherWisPathCurrentEntry
    OBJECT-TYPE\n       SYNTAX  EtherWisPathCurrentEntry\n       MAX-ACCESS  not-accessible\n
    \      STATUS  current\n       DESCRIPTION\n          \"An entry in the etherWisPathCurrentTable.
    \ For each\n          instance of this object there MUST be a corresponding\n
    \         instance of sonetPathCurrentEntry.\"\n       INDEX  { ifIndex }\n        ::=
    { etherWisPathCurrentTable 1 }\n   EtherWisPathCurrentEntry ::=\n       SEQUENCE
    {\n           etherWisPathCurrentStatus           BITS,\n           etherWisPathCurrentJ1Transmitted
    \   OCTET STRING,\n           etherWisPathCurrentJ1Received       OCTET STRING\n
    \          }\n   etherWisPathCurrentStatus OBJECT-TYPE\n       SYNTAX  BITS {\n
    \                  etherWisPathLOP(0),\n                   etherWisPathAIS(1),\n
    \                  etherWisPathPLM(2),\n                   etherWisPathLCD(3)\n
    \              }\n       MAX-ACCESS  read-only\n       STATUS  current\n       DESCRIPTION\n
    \         \"This variable indicates the current status of the\n          path
    payload with a bit map that can indicate multiple\n          defects at once.
    \ The bit positions are assigned as\n          follows:\n          etherWisPathLOP(0)\n
    \            This bit is set to indicate that an\n             LOP-P (Loss of
    Pointer - Path) defect\n             is being experienced.  Note:  when this\n
    \            bit is set, sonetPathSTSLOP MUST be set\n             in the corresponding
    instance of\n             sonetPathCurrentStatus.\n          etherWisPathAIS(1)\n
    \            This bit is set to indicate that an\n             AIS-P (Alarm Indication
    Signal - Path)\n             defect is being experienced.  Note:  when\n             this
    bit is set, sonetPathSTSAIS MUST be\n             set in the corresponding instance
    of\n             sonetPathCurrentStatus.\n          etherWisPathPLM(1)\n             This
    bit is set to indicate that a\n             PLM-P (Payload Label Mismatch - Path)\n
    \            defect is being experienced.  Note:  when\n             this bit
    is set, sonetPathSignalLabelMismatch\n             MUST be set in the corresponding
    instance of\n             sonetPathCurrentStatus.\n          etherWisPathLCD(3)\n
    \            This bit is set to indicate that an\n             LCD-P (Loss of
    Codegroup Delination - Path)\n             defect is being experienced.  Since
    this\n             defect is detected by the PCS and not by\n             the
    path layer itself, there is no\n             corresponding bit in sonetPathCurrentStatus.\"\n
    \      REFERENCE\n          \"[IEEE 802.3 Std.], 30.8.1.1.18, aPathStatus.\"\n
    \       ::= { etherWisPathCurrentEntry 1 }\n   etherWisPathCurrentJ1Transmitted
    OBJECT-TYPE\n       SYNTAX  OCTET STRING (SIZE (16))\n       MAX-ACCESS  read-write\n
    \      STATUS  current\n       DESCRIPTION\n          \"This is the 16-octet path
    trace message that\n          is transmitted in the J1 byte.  The value SHOULD\n
    \         be '89'h followed by fifteen octets of '00'h\n          (or some cyclic
    shift thereof) when the path\n          trace function is not used, and the implementation\n
    \         SHOULD use that value (or a cyclic shift thereof)\n          as a default
    if no other value has been set.\"\n       REFERENCE\n          \"[IEEE 802.3 Std.],
    30.8.1.1.23, aJ1ValueTX.\"\n        ::= { etherWisPathCurrentEntry 2 }\n   etherWisPathCurrentJ1Received
    OBJECT-TYPE\n       SYNTAX  OCTET STRING (SIZE (16))\n       MAX-ACCESS  read-only\n
    \      STATUS  current\n       DESCRIPTION\n          \"This is the 16-octet path
    trace message that\n          was most recently received in the J1 byte.\"\n       REFERENCE\n
    \         \"[IEEE 802.3 Std.], 30.8.1.1.24, aJ1ValueRX.\"\n        ::= { etherWisPathCurrentEntry
    3 }\n   -- The Far End Path group\n   -- These objects provide WIS extensions
    to\n   -- the SONET-MIB Far End Path Group.\n   etherWisFarEndPathCurrentTable
    OBJECT-TYPE\n       SYNTAX  SEQUENCE OF EtherWisFarEndPathCurrentEntry\n       MAX-ACCESS
    \ not-accessible\n       STATUS  current\n       DESCRIPTION\n          \"The
    table for the current far-end state of Ethernet WIS\n          paths.\"\n        ::=
    { etherWisFarEndPath 1 }\n   etherWisFarEndPathCurrentEntry OBJECT-TYPE\n       SYNTAX
    \ EtherWisFarEndPathCurrentEntry\n       MAX-ACCESS  not-accessible\n       STATUS
    \ current\n       DESCRIPTION\n          \"An entry in the etherWisFarEndPathCurrentTable.
    \ For each\n          instance of this object there MUST be a corresponding\n
    \         instance of sonetFarEndPathCurrentEntry.\"\n       INDEX  { ifIndex
    }\n        ::= { etherWisFarEndPathCurrentTable 1 }\n   EtherWisFarEndPathCurrentEntry
    ::=\n       SEQUENCE {\n           etherWisFarEndPathCurrentStatus     BITS\n
    \          }\n   etherWisFarEndPathCurrentStatus OBJECT-TYPE\n       SYNTAX  BITS
    {\n                   etherWisFarEndPayloadDefect(0),\n                   etherWisFarEndServerDefect(1)\n
    \              }\n       MAX-ACCESS  read-only\n       STATUS  current\n       DESCRIPTION\n
    \         \"This variable indicates the current status at the\n          far end
    of the path using a bit map that can indicate\n          multiple defects at once.
    \ The bit positions are\n          assigned as follows:\n          etherWisFarEndPayloadDefect(0)\n
    \            A far end payload defect (i.e., far end\n             PLM-P or LCD-P)
    is currently being signaled\n             in G1 bits 5-7.\n          etherWisFarEndServerDefect(1)\n
    \            A far end server defect (i.e., far end\n             LOP-P or AIS-P)
    is currently being signaled\n             in G1 bits 5-7.  Note:  when this bit
    is set,\n             sonetPathSTSRDI MUST be set in the corresponding\n             instance
    of sonetPathCurrentStatus.\"\n       REFERENCE\n          \"[IEEE 802.3 Std.],
    30.8.1.1.25, aFarEndPathStatus.\"\n        ::= { etherWisFarEndPathCurrentEntry
    1 }\n   --\n   --     Conformance Statements\n   --\n   etherWisGroups      OBJECT
    IDENTIFIER ::= { etherWisConformance 1 }\n   etherWisCompliances OBJECT IDENTIFIER
    ::= { etherWisConformance 2 }\n   --     Object Groups\n   etherWisDeviceGroupBasic
    OBJECT-GROUP\n       OBJECTS {\n           etherWisDeviceTxTestPatternMode,\n
    \          etherWisDeviceRxTestPatternMode\n           }\n       STATUS  current\n
    \      DESCRIPTION\n          \"A collection of objects that support test\n          features
    required of all WIS devices.\"\n        ::= { etherWisGroups 1 }\n   etherWisDeviceGroupExtra
    OBJECT-GROUP\n       OBJECTS {\n           etherWisDeviceRxTestPatternErrors\n
    \          }\n       STATUS  current\n       DESCRIPTION\n          \"A collection
    of objects that support\n          optional WIS device test features.\"\n        ::=
    { etherWisGroups 2 }\n   etherWisSectionGroup OBJECT-GROUP\n       OBJECTS {\n
    \          etherWisSectionCurrentJ0Transmitted,\n           etherWisSectionCurrentJ0Received\n
    \          }\n       STATUS  current\n       DESCRIPTION\n          \"A collection
    of objects that provide\n          required information about a WIS section.\"\n
    \       ::= { etherWisGroups 3 }\n   etherWisPathGroup OBJECT-GROUP\n       OBJECTS
    {\n           etherWisPathCurrentStatus,\n           etherWisPathCurrentJ1Transmitted,\n
    \          etherWisPathCurrentJ1Received\n           }\n       STATUS  current\n
    \      DESCRIPTION\n          \"A collection of objects that provide\n          required
    information about a WIS path.\"\n        ::= { etherWisGroups 4 }\n   etherWisFarEndPathGroup
    OBJECT-GROUP\n       OBJECTS {\n           etherWisFarEndPathCurrentStatus\n           }\n
    \      STATUS  current\n       DESCRIPTION\n          \"A collection of objects
    that provide required\n          information about the far end of a WIS path.\"\n
    \       ::= { etherWisGroups 5 }\n   --     Compliance Statements\n   etherWisCompliance
    MODULE-COMPLIANCE\n       STATUS  current\n       DESCRIPTION\n          \"The
    compliance statement for interfaces that include\n          the Ethernet WIS.
    \ Compliance with the following\n          external compliance statements is prerequisite:\n
    \         MIB Module             Compliance Statement\n          ----------             --------------------\n
    \         IF-MIB                 ifCompliance3\n          IF-INVERTED-STACK-MIB
    \ ifInvCompliance\n          EtherLike-MIB          dot3Compliance2\n          MAU-MIB
    \               mauModIfCompl3\"\n       MODULE  -- this module\n           MANDATORY-GROUPS
    {\n               etherWisDeviceGroupBasic,\n               etherWisSectionGroup,\n
    \              etherWisPathGroup,\n               etherWisFarEndPathGroup\n               }\n
    \          OBJECT       etherWisDeviceTxTestPatternMode\n           SYNTAX       INTEGER
    {\n               none(1),\n               squareWave(2),\n               mixedFrequency(4)\n
    \              }\n           DESCRIPTION\n               \"Support for values
    other than none(1),\n               squareWave(2), and mixedFrequency(4)\n               is
    not required.\"\n           OBJECT       etherWisDeviceRxTestPatternMode\n           SYNTAX
    \      INTEGER {\n               none(1),\n               mixedFrequency(4)\n
    \              }\n           DESCRIPTION\n               \"Support for values
    other than none(1)\n               and mixedFrequency(4) is not required.\"\n
    \          GROUP        etherWisDeviceGroupExtra\n           DESCRIPTION\n               \"Implementation
    of this group, along with support for\n               the value prbs31(3) for
    etherWisDeviceTxTestPatternMode\n               and etherWisDeviceRxTestPatternMode,
    is necessary if the\n               optional PRBS31 test pattern mode is to be
    supported.\"\n           OBJECT       etherWisDeviceRxTestPatternErrors\n           WRITE-SYNTAX
    Gauge32 ( 0 )\n           DESCRIPTION\n               \"An implementation is not
    required to\n               allow values other than zero to be\n               written
    to this object.\"\n       MODULE SONET-MIB\n           MANDATORY-GROUPS {\n               sonetMediumStuff2,\n
    \              sonetSectionStuff2,\n               sonetLineStuff2,\n               sonetFarEndLineStuff2,\n
    \              sonetPathStuff2,\n               sonetFarEndPathStuff2\n               }\n
    \          OBJECT       sonetMediumType\n           SYNTAX       INTEGER {\n               sonet(1)\n
    \              }\n           MIN-ACCESS   read-only\n           DESCRIPTION\n
    \              \"Write access is not required, nor is support\n               for
    any value other than sonet(1).\"\n           OBJECT       sonetMediumLineCoding\n
    \          SYNTAX       INTEGER {\n               sonetMediumNRZ(4)\n               }\n
    \          MIN-ACCESS   read-only\n           DESCRIPTION\n               \"Write
    access is not required, nor is support\n               for any value other than
    sonetMediumNRZ(4).\"\n           OBJECT       sonetMediumLineType\n           MIN-ACCESS
    \  read-only\n           DESCRIPTION\n               \"Write access is not required.\"\n
    \          OBJECT       sonetMediumCircuitIdentifier\n           MIN-ACCESS   read-only\n
    \          DESCRIPTION\n               \"Write access is not required.\"\n           OBJECT
    \      sonetMediumLoopbackConfig\n           SYNTAX       BITS {\n               sonetNoLoop(0),\n
    \              sonetFacilityLoop(1)\n               }\n           MIN-ACCESS   read-only\n
    \          DESCRIPTION\n               \"Write access is not required, nor is
    support for values\n               other than sonetNoLoop(0) and sonetFacilityLoop(1).\"\n
    \          OBJECT       sonetSESthresholdSet\n           MIN-ACCESS   read-only\n
    \          DESCRIPTION\n               \"Write access is not required, and only
    one\n               of the enumerated values need be supported.\"\n           OBJECT
    \      sonetPathCurrentWidth\n           SYNTAX       INTEGER {\n               sts192cSTM64(6)\n
    \              }\n           MIN-ACCESS   read-only\n           DESCRIPTION\n
    \              \"Write access is not required, nor is support\n               for
    any value other than sts192cSTM64(6).\"\n        ::= { etherWisCompliances 1 }\n
    \  END\n"
  title: 4.  Object Definitions
- contents:
  - "5.  Intellectual Property Statement\n   The IETF takes no position regarding
    the validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available;  neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 5.  Intellectual Property Statement
- contents:
  - "6.  Acknowledgments\n   This document is a product of the IETF Hub MIB and AToM
    MIB Working\n   Groups.  It builds upon the work of the IEEE P802.3ae 10 Gigabit\n
    \  Ethernet Task Force.\n"
  title: 6.  Acknowledgments
- contents:
  - "7.  Security Considerations\n   There are five managed objects defined in this
    MIB module that have a\n   MAX-ACCESS clause of read-write: etherWisDeviceTxTestPatternMode,\n
    \  etherWisDeviceRxTestPatternMode, etherWisDeviceRxTestPatternErrors,\n   etherWisSectionCurrentJ0Transmitted,
    and\n   etherWisPathCurrentJ1Transmitted.  Writing to these objects can have\n
    \  the following potentially disruptive effects on network operation:\n   o  changing
    the transmit or receive test pattern mode or modifying\n      the accumulated
    error count from a PRBS31 pattern test on an\n      administratively disabled
    10GBASE-W interface, which can\n      interfere with an in-progress pattern test;\n
    \  o  modifying the transmitted section trace and/or path trace\n      message
    on an operational 10GBASE-W interface, which can cause\n      connectivity alarms
    to be raised at the remote of the link.\n   The user of this MIB module must therefore
    be aware that support for\n   SET operations in a non-secure environment without
    proper protection\n   can have a negative effect on network operations.\n   The
    readable objects in this MIB module (i.e., those with MAX-ACCESS\n   other than
    not-accessible) may be considered sensitive in some\n   environments since, collectively,
    they provide information about the\n   performance of network interfaces and can
    reveal some aspects of\n   their configuration.  In such environments it is important
    to control\n   even GET and NOTIFY access to these objects and possibly even to\n
    \  encrypt their values when sending them over the network via SNMP.\n   SNMP
    versions prior to SNMPv3 did not include adequate security.\n   Even if the network
    itself is secure (for example by using IPSec),\n   even then, there is no control
    as to who on the secure network is\n   allowed to access and GET/SET (read/change/create/delete)
    the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers consider
    the security features as\n   provided by the SNMPv3 framework (see [RFC3410],
    section 8),\n   including full support for the SNMPv3 cryptographic mechanisms
    (for\n   authentication and privacy).\n   Further, deployment of SNMP versions
    prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy
    SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module is properly configured to give access to\n   the objects only
    to those principals (users) that have legitimate\n   rights to indeed GET or SET
    (change/create/delete) them.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirements Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J.,
      Case, J.,\n               Rose, M. and S. Waldbusser, \"Structure of Management\n
      \              Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n               1999.\n
      \  [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose,
      M. and S. Waldbusser, \"Textual Conventions for\n               SMIv2\", STD
      58, RFC 2579, April 1999.\n   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder,
      J., Case, J.,\n               Rose, M. and S. Waldbusser, \"Conformance Statements
      for\n               SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC2863]   McCloghrie,
      K. and F. Kastenholz, \"The Interfaces Group\n               MIB\", RFC 2863,
      June 2000.\n   [RFC2864]   McCloghrie, K. and G. Hanson, \"The Inverted Stack
      Table\n               Extension to the Interfaces Group MIB\", RFC 2864, June\n
      \              2000.\n   [RFC3592]   Tesink, K., \"Definitions of Managed Objects
      for the\n               Synchronous Optical Network/Synchronous Digital Hierarchy\n
      \              (SONET/SDH) Interface Type\", RFC 3592, September 2003.\n   [T1.231]
      \   American National Standard for Telecommunications -\n               Digital
      Hierarchy - Layer 1 In-Service Digital\n               Transmission Performance
      Monitoring, ANSI T1.231-1997,\n               September 1997.\n   [RFC3635]
      \  Flick, J., \"Definitions of Managed Objects for the\n               Ethernet-like
      Interface Types\", RFC 3635, September 2003.\n   [RFC3636]   Flick, J., \"Definitions
      of Managed Objects for IEEE 802.3\n               Medium Attachment Units (MAUs)\",
      RFC 3636, September\n               2003.\n   [802.3ae]   Institute of Electrical
      and Electronic Engineers, IEEE\n               Std 802.3ae-2002, \"IEEE Standard
      for Carrier Sense\n               Multiple Access with Collision Detection (CSMA/CD)
      Access\n               Method and Physical Layer Specifications - Media Access\n
      \              Control (MAC) Parameters, Physical Layer and Management\n               Parameters
      for 10 Gb/s Operation\", August 2002.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC3410]   Case, J., Mundy, R., Partain,
      D. and B. Stewart,\n               \"Introduction and Applicability Statements
      for Internet-\n               Standard Management Framework\", RFC 3410, December
      2002.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A:  Collection of Performance Data Using WIS MDIO Registers\n   The
    purpose of this appendix is to illustrate how the WIS MDIO\n   registers specified
    in [802.3ae] subclause 45.2.2 (and more\n   specifically the subset required by
    [802.3ae] subclause 50.3.11) can\n   be used to collect performance data either
    according to the\n   conventions adopted by this document or according to the
    conventions\n   specified in [802.3ae] Clause 30.\n   For an agent implementing
    the SNMP managed objects required by this\n   document the first step in collecting
    WIS performance data would be\n   to poll the 10G WIS status 3 register and the
    various error count\n   registers (10G WIS section BIP error count, 10G WIS line
    BIP errors,\n   10G WIS far end line BIP errors, 10G WIS path block error count,
    and\n   10G WIS far end path block error count) once per second.  The 10G WIS\n
    \  status 3 register bits are all latched until read and so would\n   indicate
    whether a given defect occurred any time during the previous\n   second.  The
    error count registers roll over modulo 2^16 or 2^32, and\n   so to find the number
    of errors within the previous second the agent\n   would need to subtract (modulo
    2^16 or 2^32) the current reading from\n   the reading taken one second ago.  Armed
    with that information, the\n   agent could determine for any layer whether the
    one second interval\n   was an errored second, a severely errored second (that
    requires\n   comparison with a threshold unless a defect is present), or a\n   severely
    errored frame second.  Determining whether a given second is\n   or is not part
    of unavailable time requires additional logic;  the\n   most straightforward and
    accurate method is the delay-line approach\n   outlined in Appendix A of [RFC3592].
    \ With that information available\n   the agent would be able to determine by
    how much each current count\n   should be incremented (including effects of inhibiting).\n
    \  Implementations that conform to [T1.231] would end each 15-minute\n   interval
    on time-of-day clock 1/4 hour boundaries;  if the delay-line\n   approach is used
    then a time-of-day timestamp would accompany the\n   one-second statistics.  At
    the end of each interval the current\n   registers would be pushed onto the history
    stack and then would be\n   cleared.  The xyxIntervalValidData flags would be
    set to False(2) if\n   the number of samples was not between 890 and 910 or, in
    the case of\n   far-end counts, if a near-end defect occurred during the\n   just-completed
    interval (see [T1.231] Section 9.1.2.2 for details).\n   An agent implementing
    the [802.3ae] Clause 30 oWIS objects could also\n   start by polling the 10G WIS
    status 3 register and the various error\n   count registers to find the defects
    and error counts for the previous\n   second, and it could determine the number
    of errors and whether the\n   second was an errored second, a severely errored
    second, or a\n   severely errored frame second in the same manner as above.  The
    rest\n   of the process would simply be to increment the generalized non-\n   resetable
    counters without consideration of any inhibiting rules.\n"
  title: 'Appendix A:  Collection of Performance Data Using WIS MDIO Registers'
- contents:
  - "Contributors\n   Mike Ayers\n   1204 Knox Ave.\n   San Jose, CA 95122\n   USA\n
    \  Phone: +1 408 857 6810\n   EMail: mike.ayers@earthling.net\n   John Flick\n
    \  Hewlett-Packard Company\n   8000 Foothills Blvd.  M/S 5557\n   Roseville, CA
    95747-5557\n   USA\n   Phone: +1 916 785 4018\n   Fax:   +1 916 785 1199\n   EMail:
    johnf@rose.hp.com\n   Kam Lam\n   Lucent Technologies\n   101 Crawfords Corner
    Road, Room 4C-616A\n   Holmdel, NJ 07733\n   USA\n   Phone: +1 732 949 8338\n
    \  EMail: hklam@lucent.com\n   Kerry McDonald\n   Institute for Applied Supercomputing\n
    \  California State University San Bernardino\n   EMail: kerry_mcd@hotmail.com\n
    \         kmcdonal@csci.csusb.edu\n   K. C. Norseth\n   L-3 Communications\n   640
    N. 2200 West.\n   Salt Lake City, Utah 84116-0850\n   USA\n   Phone: +1 801 594
    2809\n   EMail: kenyon.c.norseth@L-3com.com\n          kcn@norseth.com\n   Kaj
    Tesink\n   Telcordia Technologies\n   331 Newman Springs Road\n   P.O. Box 7020\n
    \  Red Bank, NJ  07701-7020\n   USA\n   Phone: +1 732 758 5254\n   EMail: kaj@research.telcordia.com\n"
  title: Contributors
- contents:
  - "Editor's Address\n   C. M. Heard\n   600 Rainbow Dr. #141\n   Mountain View,
    CA 94041-2542\n   USA\n   Phone: +1 650 964 8391\n   EMail: heard@pobox.com\n"
  title: Editor's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
