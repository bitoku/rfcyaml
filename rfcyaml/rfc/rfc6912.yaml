- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                            A. Sullivan
  contents:
  - "Internet Architecture Board (IAB)                            A. Sullivan\n  \
    \  Principles for Unicode Code Point Inclusion in Labels in the DNS\n"
- title: Abstract
  contents:
  - "Abstract\n   Internationalized Domain Names in Applications (IDNA) makes available\n\
    \   to DNS zone administrators a very wide range of Unicode code points.\n   Most\
    \ operators of zones should probably not permit registration of\n   U-labels using\
    \ the entire range.  This is especially true of zones\n   that accept registrations\
    \ across organizational boundaries, such as\n   top-level domains and, most importantly,\
    \ the root.  It is\n   unfortunately not possible to generate algorithms to determine\n\
    \   whether permitting a code point presents a low risk.  This memo\n   presents\
    \ a set of principles that can be used to guide the decision\n   of whether a\
    \ Unicode code point may be wisely included in the\n   repertoire of permissible\
    \ code points in a U-label in a zone.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  It represents\
    \ the consensus of the\n   Internet Architecture Board (IAB).  Documents approved\
    \ for\n   publication by the IAB are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6912.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   2.  Background  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n     2.1.  More-Restrictive Rules Going Up the DNS Tree  . . . .\
    \ . .   6\n   3.  Principles Applicable to All Zones  . . . . . . . . . . . .\
    \ .   6\n     3.1.  Longevity Principle . . . . . . . . . . . . . . . . . . .\
    \   6\n     3.2.  Least Astonishment Principle  . . . . . . . . . . . . . .  \
    \ 6\n     3.3.  Contextual Safety Principle . . . . . . . . . . . . . . .   7\n\
    \   4.  Principles Applicable to All Public Zones . . . . . . . . . .   7\n  \
    \   4.1.  Conservatism Principle  . . . . . . . . . . . . . . . . .   7\n    \
    \ 4.2.  Inclusion Principle . . . . . . . . . . . . . . . . . . .   7\n     4.3.\
    \  Simplicity Principle  . . . . . . . . . . . . . . . . . .   7\n     4.4.  Predictability\
    \ Principle  . . . . . . . . . . . . . . . .   8\n     4.5.  Stability Principle\
    \ . . . . . . . . . . . . . . . . . . .   8\n   5.  Principle Specific to the\
    \ Root Zone . . . . . . . . . . . . .   8\n     5.1.  Letter Principle  . . .\
    \ . . . . . . . . . . . . . . . . .   8\n   6.  Confusion and Context . . . .\
    \ . . . . . . . . . . . . . . . .   9\n   7.  Conclusion  . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .   9\n   8.  Security Considerations . . . . .\
    \ . . . . . . . . . . . . . .  10\n   9.  Acknowledgements  . . . . . . . . .\
    \ . . . . . . . . . . . . .  10\n   10. IAB Members at the Time of Approval .\
    \ . . . . . . . . . . . .  10\n   11. Informative References  . . . . . . . .\
    \ . . . . . . . . . . .  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Operators of a DNS zone need to set policies around what\
    \ Unicode code\n   points are allowed in labels in that zone.  Typically there\
    \ are a\n   number of important goals to consider when constructing such\n   policies.\
    \  These include, for instance, avoiding possible visual\n   confusability between\
    \ two labels, avoiding possible confusion between\n   Fully Qualified Domain Names\
    \ (FQDNs) and IP address literals,\n   accessibility to the disabled (see \"Web\
    \ Content Accessibility\n   Guidelines (WCAG) 2.0\" [WCAG20] for some discussion\
    \ in a web\n   context), and other usability issues.\n   This document provides\
    \ a set of principles that zone operators can\n   use to construct their code\
    \ point policies in order to improve\n   usability and clarity and thereby reduce\
    \ confusion.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document uses the following terms.\n      A-label:\
    \ an LDH label that starts with \"xn--\" and meets all the\n      IDNA requirements,\
    \ with additional restrictions as explained in\n      Section 2.3.2.1 of the IDNA\
    \ Definitions document [RFC5890].\n      Character: a member of a set of elements\
    \ used for the\n      organization, control, or representation of data.  See Section\
    \ 2\n      of the Internationalization Terminology document [RFC6365] for\n  \
    \    more details.\n      Language: a way that humans communicate.  The use of\
    \ language\n      occurs in many forms, the most common of which are speech,\n\
    \      writing, and signing.  See Section 2 of RFC 6365 for more details.\n  \
    \    LDH label: a string consisting of ASCII letters, digits, and the\n      hyphen,\
    \ with additional restrictions as explained in Section 2.3.1\n      of RFC 5890.\n\
    \      Public zone: in this document, a DNS zone that accepts\n      registration\
    \ requests from organizations outside the zone\n      administrator's own organization.\
    \  (Whether the zone performs\n      delegation is a separate question.  What\
    \ is important is the\n      diversity of the registration-requesting community.)\
    \  Note that\n      under this definition, the root zone is a public zone, though\
    \ one\n      that has a unique function in the DNS.\n      Rendering: the display\
    \ of a string of text.  See Section 5 of RFC\n      6365 for more details.\n \
    \     Script: a set of graphic characters used for the written form of\n     \
    \ one or more languages.  See Section 2 of RFC 6365 for more\n      details.\n\
    \      U-label: a string of Unicode characters that meets all the IDNA\n     \
    \ requirements and includes at least one non-ASCII character, with\n      additional\
    \ restrictions as explained in Section 2.3.2.1 of RFC\n      5890.\n      Writing\
    \ system: a set of rules for using one or more scripts to\n      write a particular\
    \ language.  See Section 2 of RFC 6365 for more\n      details.\n   This memo\
    \ does not propose a protocol standard, and the use of words\n   such as \"should\"\
    \ follow the ordinary English meaning, and not that\n   laid out in [RFC2119].\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   In recent communications [IABCOMM1] [IABCOMM2], the IAB has\n\
    \   emphasized the importance of conservatism in allocating labels\n   conforming\
    \ to IDNA2008 [RFC5890] [RFC5891] [RFC5892] [RFC5893]\n   [RFC5894] [RFC5895]\
    \ in DNS zones, and especially in the root zone.\n   Traditional LDH labels in\
    \ the root zone used only alphabetic\n   characters (i.e., ASCII a-z, which under\
    \ the DNS also match A-Z).\n   Matters are more complicated with U-labels, however.\
    \  The IAB\n   communications recommended that U-labels permit only code points\
    \ with\n   a General_Category (gc) of Ll (Lowercase_Letter), Lo (Other_Letter),\n\
    \   or Lm (Modifier_Letter), but noted that for practical considerations\n   other\
    \ code points might be permitted on a case-by-case basis.\n   The IAB recommendations\
    \ do, however, leave some issues open that need\n   to be addressed.  It is not\
    \ clear that all code points permitted\n   under IDNA2008 that have a General_Category\
    \ of Lo or Lm are\n   appropriate for a zone such as the root zone.  To take but\
    \ one\n   example, the code point U+02BC (MODIFIER LETTER APOSTROPHE) has a\n\
    \   General_Category of Lm.  In practically every rendering (and we are\n   unaware\
    \ of an exception), U+02BC is indistinguishable from U+2019\n   (RIGHT SINGLE\
    \ QUOTATION MARK), which has a General_Category of Pf\n   (Final_Punctuation).\
    \  U+02BC will also be read by large numbers of\n   people as being the same character\
    \ as U+0027 (APOSTROPHE), which has\n   a General_Category of Po (Other_Punctuation),\
    \ and some computer\n   systems may treat U+02BC as U+0027.  U+02BC is PROTOCOL\
    \ VALID\n   (PVALID) under IDNA2008 (see the IDNA Code Points document\n   [RFC5892]),\
    \ whereas both other code points are DISALLOWED.  So, to\n   begin with, it is\
    \ plain that not every code point with a\n   General_Category of Ll, Lo, or Lm\
    \ is consistent with the type of\n   conservatism principle discussed in Section\
    \ 4.1 below or the previous\n   IAB recommendations.\n   To make matters worse,\
    \ some languages are dependent on code points\n   with General_Category Mc (Spacing_Mark)\
    \ or General_Category Mn\n   (Nonspacing_Mark).  This dependency is particularly\
    \ common in Indic\n   languages, though not exclusive to them.  (At the risk of\
    \ vastly\n   oversimplifying, the overarching issue is mostly the interaction\
    \ of\n   complex writing systems and the way Unicode works.)  To restrict\n  \
    \ users of those languages to only code points with General_Category of\n   Ll,\
    \ Lo, or Lm would be extremely limiting.  While DNS labels are not\n   words,\
    \ or sentences, or phrases (as noted in the next steps for IDN\n   [RFC4690]),\
    \ they are intended to support useful mnemonics.  Mnemonics\n   that diverge wildly\
    \ from the usual conventions are poor ones, because\n   in not following the usual\
    \ conventions they are not easy to remember.\n   Also, wide divergence from usual\
    \ conventions, if not well-justified\n   (and especially in a shared namespace\
    \ like the root), invites\n   political controversy.\n   Many of the issues above\
    \ turn out to be relevant to all public zones.\n   Moreover, the overall issue\
    \ of developing a policy for code point\n   permission is common to all zones\
    \ that accept A-labels or U-labels\n   for registration.  As Section 4.3 of the\
    \ IDNA Protocol document\n   [RFC5891] says, every registry at every level of\
    \ the DNS is \"expected\n   to establish policies about label registrations\"\
    .\n   For reasons of sound management, it is not desirable to decide\n   whether\
    \ to permit a given code point only when an application\n   containing that code\
    \ point is pending.  That approach reduces\n   predictability and is bound to\
    \ appear subject to special pleas.  It\n   is better instead to produce the rules\
    \ governing acceptance of code\n   points in advance.\n   As is evident from the\
    \ foregoing discussion about the Letter and Mark\n   categories, it is simply\
    \ not possible to make code point decisions\n   algorithmically.  If it were possible\
    \ to develop such an algorithm,\n   it would already exist: the DNS is hardly\
    \ unique in needing to impose\n   restrictions on code points while accommodating\
    \ many different\n   linguistic communities.  Nevertheless, new guidelines can\
    \ be made by\n   starting from overarching principles.  These guidelines act more\
    \ as\n   meta-rules, leading to the establishment of other rules about the\n \
    \  inclusion and exclusion of particular code points in labels in a\n   given\
    \ zone, always based on the list of code points permitted by\n   IDNA.\n"
- title: 2.1.  More-Restrictive Rules Going Up the DNS Tree
  contents:
  - "2.1.  More-Restrictive Rules Going Up the DNS Tree\n   A set of principles derived\
    \ from the above ideas follows in Sections\n   3 through 5 below.  Such principles\
    \ fall into three categories.  Some\n   principles apply to every DNS zone.  Some\
    \ additional principles apply\n   to all public zones, including the root zone.\
    \  Finally, other\n   principles apply only to the root zone.  This means that\
    \ zones higher\n   in the DNS tree tend to have more restrictive rules (since\
    \ additional\n   principles apply), and zones lower in the DNS tree tend to have\
    \ less\n   restrictive rules, since they are used within a more narrow context.\n\
    \   In general, the relevant context for a principle is that of the zone,\n  \
    \ not that of a given subset of the user community; for the root zone,\n   for\
    \ example, the context is \"the entire Internet population\".\n"
- title: 3.  Principles Applicable to All Zones
  contents:
  - '3.  Principles Applicable to All Zones

    '
- title: 3.1.  Longevity Principle
  contents:
  - "3.1.  Longevity Principle\n   Unicode properties of a code point ought to be\
    \ stable across the\n   versions of Unicode that users of the zone are likely\
    \ to have\n   installed.  Because it is possible for the properties of a code\
    \ point\n   to change between Unicode versions, a good way to predict such\n \
    \  stability is to ensure that a code point has in fact been stable for\n   multiple\
    \ successive versions of Unicode.  This principle is related\n   to the Stability\
    \ Principle in Section 4.5.\n   The more diverse the community using the zone,\
    \ the greater the\n   importance of following this principle.  The policy for\
    \ a leaf zone\n   in the DNS might only require stability across two Unicode versions,\n\
    \   whereas a more public zone might require stability across four or\n   more\
    \ releases before the code point's properties are considered long-\n   lived and\
    \ stable.\n"
- title: 3.2.  Least Astonishment Principle
  contents:
  - "3.2.  Least Astonishment Principle\n   Every zone administrator should be sensitive\
    \ to the likely use of a\n   code point to be permitted, particularly taking into\
    \ account the\n   population likely to use the zone.  Zone administrators should\n\
    \   especially consider whether a candidate code point could present\n   difficulty\
    \ if the code point is encountered outside the usual\n   linguistic circumstances.\
    \  By the same token, the failure to support\n   a code point that is normal in\
    \ some linguistic circumstances could be\n   very surprising for users likely\
    \ to encounter the names in that\n   circumstance.\n"
- title: 3.3.  Contextual Safety Principle
  contents:
  - "3.3.  Contextual Safety Principle\n   Every zone administrator should be sensitive\
    \ to ways in which a code\n   point that is permitted could be used in support\
    \ of malicious\n   activity.  This is not a completely new problem: the digit\
    \ 1 and the\n   lowercase letter l are, for instance, easily confused in many\n\
    \   contexts.  The very large repertoire of code points in Unicode (even\n   just\
    \ the subset permitted for IDNs) makes the problem somewhat worse,\n   just because\
    \ of the scale.\n"
- title: 4.  Principles Applicable to All Public Zones
  contents:
  - '4.  Principles Applicable to All Public Zones

    '
- title: 4.1.  Conservatism Principle
  contents:
  - "4.1.  Conservatism Principle\n   Public zones are, by definition, zones that\
    \ are shared by different\n   groups of people.  Therefore, any decision to permit\
    \ a code point in\n   a public zone (including the root) should be as conservative\
    \ as\n   practicable.  Doubts should always be resolved in favor of rejecting\n\
    \   a code point for inclusion rather than in favor of including it, in\n   order\
    \ to minimize risk.\n"
- title: 4.2.  Inclusion Principle
  contents:
  - "4.2.  Inclusion Principle\n   Just as IDNA2008 starts from the principle that\
    \ the Unicode range is\n   excluded, and then adds code points according to derived\
    \ properties\n   of the code points, so a public zone should only permit inclusion\
    \ of\n   a code point if it is known to be \"safe\" in terms of usability and\n\
    \   confusability within the context of that zone.  The default treatment\n  \
    \ of a code point should be that it is excluded.\n"
- title: 4.3.  Simplicity Principle
  contents:
  - "4.3.  Simplicity Principle\n   The rules for determining whether a code point\
    \ is to be included\n   should be simple enough that they are readily understood\
    \ by someone\n   with a moderate background in the DNS and Unicode issues.  This\n\
    \   principle does not mean that a completely naive person needs to be\n   able\
    \ to understand the rationale for including a code point, but it\n   does mean\
    \ that if the reason for inclusion of a very peculiar code\n   point, even a safe\
    \ one, is too difficult to understand, the code\n   point would not be permitted.\n\
    \   The meaning of \"simple\" or \"readily understood\" is context-dependent.\n\
    \   For instance, the root zone has to serve everyone in the world; for\n   practical\
    \ purposes, this means that the reasons for including a code\n   point need to\
    \ be comprehensible even to people who cannot use the\n   script where the code\
    \ point is found.  In a zone that permits a\n   constrained subset of Unicode\
    \ characters (for instance, only those\n   needed to write a single alphabetic\
    \ language) and that supports a\n   clearly delineated linguistic community (for\
    \ instance, the speakers\n   of a single language with well-understood written\
    \ conventions), more\n   complicated rules might be acceptable.  Compare this\
    \ principle with\n   the Least Astonishment Principle in Section 3.2.\n"
- title: 4.4.  Predictability Principle
  contents:
  - "4.4.  Predictability Principle\n   The rules for determining whether a code point\
    \ is to be included\n   should be predictable enough that those with the requisite\n\
    \   understanding of DNS, IDNA, and Unicode will usually reach the same\n   conclusion.\
    \  This is not a requirement for algorithmic treatment of\n   code points; as\
    \ previously noted, that is not possible.  Rather, it\n   is to say that the consistent\
    \ application of professional judgment is\n   likely to yield the same results;\
    \ combined with the principle in\n   Section 4.1, when results are not predictable,\
    \ the anomalous code\n   point would not be permitted.\n   Just as in Section\
    \ 4.3, this principle tends to cause more\n   restriction the more diverse the\
    \ community using the zone; it is most\n   restrictive for the root zone.  This\
    \ is because what is predictable\n   within a given language community is possibly\
    \ very surprising across\n   languages.\n"
- title: 4.5.  Stability Principle
  contents:
  - "4.5.  Stability Principle\n   Once a code point is permitted, it is at least\
    \ very hard to stop\n   permitting that code point.  In public zones (including\
    \ the root),\n   the list of code points to be permitted should change very slowly,\
    \ if\n   at all, and usually only in the direction of permitting an addition\n\
    \   as time and experience indicate that inclusion of such a code point\n   is\
    \ both safe and consistent with these principles.\n"
- title: 5.  Principle Specific to the Root Zone
  contents:
  - '5.  Principle Specific to the Root Zone

    '
- title: 5.1.  Letter Principle
  contents:
  - "5.1.  Letter Principle\n   \"Requirements for Internet Hosts - Application and\
    \ Support\" [RFC1123]\n   notes that top-level labels \"will be alphabetic\".\
    \  In the absence of\n   widespread agreement about the force of that note, prudence\
    \ suggests\n   that U-labels in the root zone should exclude code points that\
    \ are\n   not normally used to write words, or that are in some cases normally\n\
    \   used for purposes other than writing words.  This is not the same as\n   using\
    \ Unicode's General_Category to include only letters.  It is a\n   restriction\
    \ that expands the possible class of included code points\n   beyond the Unicode\
    \ letters, but only expands so far as to include the\n   things that are normally\
    \ used to create words.  Under this principle,\n   code points with (for example)\
    \ General_Category Mn (Nonspacing_Mark)\n   might be included -- but only those\
    \ that are used to write words and\n   not (for instance) musical symbols.  In\
    \ addition, such marks should\n   only be used within a label in ways that they\
    \ would be used when\n   making a word: combinations that would be nonsense when\
    \ used in a\n   word should also be rejected when tried in DNS labels.  This\n\
    \   principle should be applied as narrowly as possible; as the next\n   steps\
    \ for IDN document [RFC4690] says, \"While DNS labels may\n   conveniently be\
    \ used to express words in many circumstances, the goal\n   is not to express\
    \ words (or sentences or phrases), but to permit the\n   creation of unambiguous\
    \ labels with good mnemonic value\".\n"
- title: 6.  Confusion and Context
  contents:
  - "6.  Confusion and Context\n   While many discussions of confusion have focused\
    \ on characters, e.g.,\n   whether two characters are confusable with each other\
    \ (and under what\n   circumstances), a focus on characters alone could lead to\
    \ the\n   prohibition of very large numbers of labels, including many that\n \
    \  present little risk.  Instead, the focus should be on whether one\n   label\
    \ is confusable with another.  For example, if a label contains\n   several characters\
    \ that are distinct to a particular script, and all\n   of its characters are\
    \ from that script, it is inherently not\n   confusable with a label from any\
    \ other script no matter what other\n   characters might appear in it.  Another\
    \ label that lacks those\n   distinguishing characters might be a problem.  The\
    \ notion extends\n   from labels to domain names, in the sense that distinguishing\n\
    \   characters used in a higher-level label may set expectations with\n   respect\
    \ to the characters in the lower-level labels.  This\n   expectation might be\
    \ regarded as a benefit, but it is also a problem,\n   since there is no technical\
    \ way to require consistent policies in\n   delegated namespaces.\n"
- title: 7.  Conclusion
  contents:
  - "7.  Conclusion\n   The principles outlined in this document can be applied when\n\
    \   considering any range of Unicode code points for possible inclusion\n   in\
    \ a DNS zone.  It is worth observing that doing anything (especially\n   in light\
    \ of Section 4.5) implicitly disadvantages communities with a\n   writing system\
    \ not yet well understood and not represented in the\n   technical and policy\
    \ communities involved in the discussion.  That\n   disadvantage is to be guarded\
    \ against as much as practical, but is\n   effectively impossible to prevent (while\
    \ still taking action) in\n   light of imperfect human knowledge.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The principles outlined in this memo are intended\
    \ to improve\n   usability and clarity and thereby reduce confusion among different\n\
    \   labels.  While these principles may contribute to reduction of risk,\n   they\
    \ are not sufficient to provide a comprehensive\n   internationalization policy\
    \ for zone management.\n   Additional discussion of security considerations can\
    \ be found in the\n   Unicode Security Considerations [UTR36].\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors thank the participants in the IAB Internationalization\n\
    \   program for the discussion of the ideas in this memo, particularly\n   Marc\
    \ Blanchet.  In addition, Stephane Bortzmeyer, Paul Hoffman,\n   Daniel Kalchev,\
    \ Panagiotis Papaspiliopoulos, and Vaggelis Segredakis\n   made specific comments.\n"
- title: 10.  IAB Members at the Time of Approval
  contents:
  - "10.  IAB Members at the Time of Approval\n   Bernard Aboba\n   Jari Arkko\n \
    \  Marc Blanchet\n   Ross Callon\n   Alissa Cooper\n   Spencer Dawkins\n   Joel\
    \ Halpern\n   Russ Housley\n   David Kessens\n   Danny McPherson\n   Jon Peterson\n\
    \   Dave Thaler\n   Hannes Tschofenig\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [IABCOMM1] Internet Architecture Board, \"IAB\
    \ Statement: 'The\n              interpretation of rules in the ICANN gTLD Applicant\n\
    \              Guidebook'\", February 2012, <http://www.iab.org/\n           \
    \   documents/correspondence-reports-documents/201/>.\n   [IABCOMM2] Internet\
    \ Architecture Board, \"Response to ICANN questions\n              concerning\
    \ 'The interpretation of rules in the ICANN gTLD\n              Applicant Guidebook'\"\
    , March 2012, <http://www.iab.org/\n              documents/correspondence-reports-documents/201/>.\n\
    \   [RFC1123]  Braden, R., \"Requirements for Internet Hosts - Application\n \
    \             and Support\", STD 3, RFC 1123, October 1989.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC4690]  Klensin, J., Faltstrom, P., Karp,\
    \ C., and IAB, \"Review and\n              Recommendations for Internationalized\
    \ Domain Names\n              (IDNs)\", RFC 4690, September 2006.\n   [RFC5890]\
    \  Klensin, J., \"Internationalized Domain Names for\n              Applications\
    \ (IDNA): Definitions and Document Framework\",\n              RFC 5890, August\
    \ 2010.\n   [RFC5891]  Klensin, J., \"Internationalized Domain Names in\n    \
    \          Applications (IDNA): Protocol\", RFC 5891, August 2010.\n   [RFC5892]\
    \  Faltstrom, P., \"The Unicode Code Points and\n              Internationalized\
    \ Domain Names for Applications (IDNA)\",\n              RFC 5892, August 2010.\n\
    \   [RFC5893]  Alvestrand, H. and C. Karp, \"Right-to-Left Scripts for\n     \
    \         Internationalized Domain Names for Applications (IDNA)\",\n        \
    \      RFC 5893, August 2010.\n   [RFC5894]  Klensin, J., \"Internationalized\
    \ Domain Names for\n              Applications (IDNA): Background, Explanation,\
    \ and\n              Rationale\", RFC 5894, August 2010.\n   [RFC5895]  Resnick,\
    \ P. and P. Hoffman, \"Mapping Characters for\n              Internationalized\
    \ Domain Names in Applications (IDNA)\n              2008\", RFC 5895, September\
    \ 2010.\n   [RFC6365]  Hoffman, P. and J. Klensin, \"Terminology Used in\n   \
    \           Internationalization in the IETF\", BCP 166, RFC 6365,\n         \
    \     September 2011.\n   [UTR36]    Davis, M. and M. Suignard, \"Unicode Security\n\
    \              Considerations\", Unicode Technical Report #36, July 2012.\n  \
    \ [WCAG20]   W3C, \"Web Content Accessibility Guidelines (WCAG) 2.0\",\n     \
    \         W3C Recommendation, December 2008,\n              <http://www.w3.org/TR/2008/REC-WCAG20-20081211/>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew Sullivan\n   Dyn, Inc.\n   150 Dow St\n   Manchester,\
    \ NH  03101\n   USA\n   EMail: asullivan@dyn.com\n   Dave Thaler\n   Microsoft\n\
    \   One Microsoft Way\n   Redmond, WA  98052\n   USA\n   EMail: dthaler@microsoft.com\n\
    \   John C Klensin\n   1770 Massachusetts Ave, Ste 322\n   Cambridge, MA  02140\n\
    \   USA\n   Phone: +1 617 491 5735\n   EMail: john-ietf@jck.com\n   Olaf Kolkman\n\
    \   NLnet Labs\n   Science Park 400\n   Amsterdam  1098 XH\n   The Netherlands\n\
    \   EMail: olaf@NLnetLabs.nl\n"
