Abstract Many IMAP clients display information about total number of messages / total number of unseen messages in IMAP mailboxes.
In order to do that, they are forced to issue a LIST or LSUB command and to list all available mailboxes, followed by a STATUS command for each mailbox found.
This document provides an extension to LIST command that allows the client to request STATUS information for mailboxes together with other information typically returned by the LIST command.
Many IMAP clients display information about the total number of messages / total number of unseen messages in IMAP mailboxes.
In order to do that, they are forced to issue a LIST or LSUB command and to list all available mailboxes, followed by a STATUS command for each mailbox found.
This document provides an extension to LIST command that allows the client to request STATUS information for mailboxes together with other information typically returned by the LIST command.
Conventions Used in This Document
In examples, "C:" indicates lines sent by a client that is connected to a server.
"S:" indicates lines sent by the server to the client.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [Kwds].
explicitly disallows mailbox patterns in the STATUS command.
The main reason was to discourage frequent use of the STATUS command by clients, as it might be quite expensive for an IMAP server to perform.
However, this prohibition had resulted in an opposite effect: a new generation of IMAP clients appeared, that issues a STATUS command for each mailbox returned by the LIST command.
This behavior is suboptimal to say at least.
It wastes extra bandwidth and, in the case of a client that doesn't support IMAP pipelining, also degrades performance by using too many round trips.
This document tries to remedy the situation by specifying a single command that can be used by the client to request all the necessary information.
In order to achieve this goal, this document is extending the LIST command with a new return option, STATUS.
This option takes STATUS data items as parameters.
For each selectable mailbox matching the list pattern and selection options, the server MUST return an untagged LIST response followed by an untagged STATUS response containing the information requested in the STATUS return option.
If an attempted STATUS for a listed mailbox fails because the mailbox can't be selected (e.g., if the "l" ACL right [ACL] is granted to the mailbox and the "r" right is not granted, or due to a race condition between LIST and STATUS changing the mailbox to \NoSelect), the STATUS response MUST NOT be returned and the LIST response MUST include the \NoSelect attribute.
This means the server may have to buffer the LIST reply until it has successfully looked up the necessary STATUS information.
If the server runs into unexpected problems while trying to look up the STATUS information, it MAY drop the corresponding STATUS reply.
In such a situation, the LIST command would still return a tagged OK reply.
"INBOX" S:   STATUS "INBOX" (MESSAGES 17 UNSEEN 16)
"foo" S:   STATUS "foo" (MESSAGES 30 UNSEEN 29)
The "bar" mailbox isn't selectable, so it has no STATUS reply.
"INBOX" S:   STATUS "INBOX" (MESSAGES 17)
The LIST reply for "foo" is returned because it has matching children, but no STATUS reply is returned because "foo" itself doesn't match the selection criteria.
The following syntax specification uses the augmented Backus Naur Form (BNF) as described in [ABNF].
Terms not defined here are taken from [RFC3501] and [LISTEXT].
return option  / status option status option
This extension makes it a bit easier for clients to overload the server by requesting STATUS information for a large number of mailboxes.
However, as already noted in the introduction, existing clients already try to do that by generating a large number of STATUS commands for each mailbox in which they are interested.
While performing STATUS information retrieval for big lists of mailboxes, a server implementation needs to make sure that it can still serve other IMAP connections and yield execution to other connections, when necessary.
IANA Considerations IMAP4 capabilities are registered by publishing a Standards Track or IESG approved Experimental RFC.
The "IMAP 4 Capabilities" registry is available from the IANA webiste: http://www.iana.org
This document defines the LIST STATUS IMAP capability.
IANA has added it to the registry.
IANA has also added the following new LIST EXTENDED option to the IANA registry established by [LISTEXT]:
Registration of LIST EXTENDED option STATUS
STATUS LIST EXTENDED option type:
RETURN LIST EXTENDED option description
: Causes the LIST command to return STATUS responses in addition to LIST responses.
RFC 5819 Security considerations: RFC 5819 Intended usage: COMMON Person and email address to contact for further information: Alexey Melnikov <Alexey.Melnikov@isode.com> Owner/Change controller: iesg@ietf.org
