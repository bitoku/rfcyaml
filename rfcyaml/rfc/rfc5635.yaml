- title: __initial_text__
  contents:
  - "                 Remote Triggered Black Hole Filtering\n              with Unicast\
    \ Reverse Path Forwarding (uRPF)\n"
- title: Abstract
  contents:
  - "Abstract\n   Remote Triggered Black Hole (RTBH) filtering is a popular and\n\
    \   effective technique for the mitigation of denial-of-service attacks.\n   This\
    \ document expands upon destination-based RTBH filtering by\n   outlining a method\
    \ to enable filtering by source address as well.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Destination Address RTBH Filtering ..............................3\n    \
    \  3.1. Overview ...................................................3\n      3.2.\
    \ Detail .....................................................4\n   4. Source\
    \ Address RTBH Filtering ...................................7\n      4.1. Steps\
    \ to Deploy RTBH Filtering with uRPF for Source\n           Filtering ..................................................8\n\
    \   5. Security Considerations .........................................9\n  \
    \ 6. Acknowledgments .................................................9\n   7.\
    \ References ......................................................9\n      7.1.\
    \ Normative References .......................................9\n      7.2. Informative\
    \ References ....................................10\n   Appendix A. Cisco Router\
    \ Configuration Sample .....................11\n   Appendix B. Juniper Configuration\
    \ Sample ..........................12\n   Appendix C. A Brief History of RTBH\
    \ ...............................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document expands upon the technique outlined in \"\
    Configuring BGP\n   to Block Denial-of-Service Attacks\" [RFC3882] to demonstrate\
    \ a method\n   that allows for filtering by source address(es).\n   Network operators\
    \ have developed a variety of techniques for\n   mitigating denial-of-service\
    \ (DoS) attacks.  While different\n   techniques have varying strengths and weaknesses,\
    \ from an\n   implementation perspective, the selection of which method to use\
    \ for\n   each type of attack involves evaluating the tradeoffs associated with\n\
    \   each method.\n   A common DoS attack directed against a customer of a service\
    \ provider\n   involves generating a greater volume of attack traffic destined\
    \ for\n   the target than will fit down the links from the service provider(s)\n\
    \   to the victim (customer).  This traffic \"starves out\" legitimate\n   traffic\
    \ and often results in collateral damage or negative effects to\n   other customers\
    \ or the network infrastructure as well.  Rather than\n   having all destinations\
    \ on their network be affected by the attack,\n   the customer may ask their service\
    \ provider to filter traffic\n   destined to the target destination IP address(es),\
    \ or the service\n   provider may determine that this is necessary themselves,\
    \ in order to\n   preserve network availability.\n   One method that the service\
    \ provider can use to implement this\n   filtering is to deploy access control\
    \ lists on the edge of their\n   network.  While this technique provides a large\
    \ amount of flexibility\n   in the filtering, it runs into scalability issues,\
    \ both in terms of\n   the number of entries in the filter and the packet rate.\n\
    \   Most routers are able to forward traffic at a much higher rate than\n   they\
    \ are able to filter, and they are able to hold many more\n   forwarding table\
    \ entries and routes than filter entries.  RTBH\n   filtering leverages the forwarding\
    \ performance of modern routers to\n   filter more entries and at a higher rate\
    \ than access control lists\n   would otherwise allow.\n   However, with destination-based\
    \ RTBH filtering, the impact of the\n   attack on the target is complete.  That\
    \ is, destination-based RTBH\n   filtering injects a discard route into the forwarding\
    \ table for the\n   target prefix.  All packets towards that destination, attack\
    \ traffic\n   AND legitimate traffic, are then dropped by the participating\n\
    \   routers,thereby taking the target completely offline.  The benefit is\n  \
    \ that collateral damage to other systems or network availability at\n   the customer\
    \ location or in the ISP network is limited, but the\n   negative impact to the\
    \ target itself is arguably increased.\n   By coupling unicast Reverse Path Forwarding\
    \ (uRPF) [RFC3704]\n   techniques with RTBH filtering, BGP can be used to distribute\
    \ discard\n   routes that are based not on destination or target addresses, but\
    \ on\n   source addresses of unwanted traffic.  Note that this will drop all\n\
    \   traffic to/from the address, and not just the traffic to the victim.\n   This\
    \ document is broken up into three logical parts: the first\n   outlines how to\
    \ configure destination-based RTBH, the second covers\n   source-based RTBH, and\
    \ the third part has examples and a history of\n   the technique.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Destination Address RTBH Filtering
  contents:
  - '3.  Destination Address RTBH Filtering

    '
- title: 3.1.  Overview
  contents:
  - "3.1.  Overview\n   A discard route is installed on each edge router in the network\
    \ with\n   the destination set to the discard (or null) interface.  In order to\n\
    \   use RTBH filtering for a single IP address (or prefix), a BGP route\n   for\
    \ the address to be filtered is announced, with the next-hop set as\n   the discard\
    \ route.  This causes traffic to the announced network\n   prefix to be forwarded\
    \ to the discard interface so that it does not\n   transit the network wasting\
    \ resources or triggering collateral damage\n   to other resources along the path\
    \ towards the target.\n   While this does \"complete\" the attack in that the\
    \ target address(es)\n   are made unreachable, collateral damage is minimized.\
    \  It may also be\n   possible to move the host or service on the target IP address(es)\
    \ to\n   another address and keep the service up, for example, by updating\n \
    \  associated DNS resource records.\n"
- title: 3.2.  Detail
  contents:
  - "3.2.  Detail\n   Before deploying RTBH filtering, there is some preparation and\n\
    \   planning that needs to occur and decisions that need to be made.\n   These\
    \ include:\n   -  What are the discard addresses?\n   -  What are the discard\
    \ BGP communities?\n   -  What is the largest prefix that can be black-holed?\n\
    \   -  What is the smallest advertisement that your provider will accept?\n  \
    \ Steps to configure destination-based RTBH filtering:\n   Step 1. Select Your\
    \ Discard Address Schema\n   An address is chosen to become the \"discard address\"\
    .  This is often\n   chosen from 192.0.2.0/24 (TEST-NET [RFC3330]), or from RFC\
    \ 1918\n   [RFC1918] space.  Multiple addresses allow an operator to configure\n\
    \   multiple static routes, one for each incident:\n      192.0.2.1 = Incident\
    \ #1\n      192.0.2.2 = Incident #2\n      192.0.2.3 = Incident #3\n      192.0.2.4\
    \ = Incident #4\n      192.0.2.5 = Incident #5\n   Customer #1, who has a DDoS\
    \ (Distributed DoS) attack can be pointed\n   to discard route 192.0.2.1.  Customer\
    \ #2 can be pointed to discard\n   route 192.0.2.2.  If capable, the router can\
    \ then count the drops for\n   each, providing some level of telemetry on the\
    \ volume of drops as\n   well as status of an ongoing attack.  A consistent address\
    \ schema\n   facilitates operations.\n   Step 2. Configure the Discard Route(s)\
    \ on Each Router\n   A route for the \"discard address\" is installed on the routers\
    \ that\n   form the edge/perimeter of the network in all routers in the network\n\
    \   or some subset (e.g., peering, but not customer, etc.).  The\n   destination\
    \ of the route is set to the \"discard\" or \"null\" interface.\n   This route\
    \ is called the \"discard route\".  Implementation experience\n   demonstrates\
    \ the value of configuring each ingress router with a\n   capability for dropping\
    \ traffic via RTBH filtering.\n   Step 3. Configure the RTBH BGP Policy on Each\
    \ Router\n   A BGP policy is configured on all routers that have the discard route\n\
    \   so that routes announced with a chosen community will have their\n   next-hop\
    \ set to the discard address.  The BGP policy should be made\n   restrictive so\
    \ that only BGP routes covering a defined number of\n   hosts addresses will be\
    \ accepted.  That is, typically, only specific\n   /32s are necessary.  Shorter\
    \ prefix blocks may also be required or\n   desirable, for example, if larger\
    \ numbers of attack targets are\n   located within a single prefix, or the employment\
    \ of this mechanism\n   is to drop traffic bound for specific networks.  When\
    \ filtering based\n   on shorter prefixes, extreme caution should be used as to\
    \ avoid\n   collateral damage to other hosts that reside within those address\n\
    \   blocks.  Full implementations will have multiple communities, with\n   each\
    \ community used for different parts of a provider's network and\n   for different\
    \ security incidents.\n   Step 4. Configure the Safety Egress Prefix Filters\n\
    \   There is always a chance that the triggering BGP update could leak\n   from\
    \ the network and so egress prefix filters are strongly\n   recommended.  These\
    \ egress prefix filter details may vary, but\n   experience has demonstrated that\
    \ the following works:\n   -  Deny all prefixes longer than the longest prefix\
    \ that you expect\n      to announce.  For example, if the longest prefix that\
    \ you expect\n      to announce is /24, deny all prefixes of length /25 though\
    \ /32.\n      If your triggering BGP update is only /32s, then this egress\n \
    \     prefix filter will add a safe measure in case the NO_EXPORT\n      community\
    \ does not work.\n   -  Deny all communities used for triggering RTBH filtering.\
    \  This is\n      also a \"safety\" measure in case the NO_EXPORT community does\
    \ not\n      work.\n   Step 5: Configure the Trigger Router\n   Configure the\
    \ trigger router, workstation, or other device so that\n   adding and removing\
    \ the triggers can be done easily and quickly.  The\n   BGP update should have\
    \ the NO_EXPORT community as a mandatory\n   attribute.  An egress prefix filter\
    \ or policy that prevents RTBH\n   filtering prefixes in the /8 to /24 range is\
    \ also recommended as a\n   safety tool.  The trigger router can be set up as\
    \ an iBGP (Internal\n   BGP) route reflector client that does not receive any\
    \ prefixes from\n   its BGP peer.  This allows a low-cost router/workstation to\
    \ be used\n   as the trigger router.\n   Using the RTBH filtering:\n   1: When\
    \ RTBH filtering is desired for a specific address, that\n      address is announced\
    \ from a trigger router (or route server),\n      tagged with the chosen \"RTBH\"\
    \ community and with the NO_EXPORT\n      community, and passed via iBGP.  The\
    \ receiving routers check the\n      BGP policy, set the next-hop to be the discard\
    \ route, resulting in\n      a Forwarding Information Base (FIB) entry pointing\
    \ to a discard\n      address.\n   2: Traffic entering the network will now be\
    \ forwarded to the discard\n      interface on all edge routers and will therefore\
    \ be dropped at the\n      edge of the network, saving resources.\n      2.1:\
    \ Multiple Discard Addresses for Incident Granularity.  This\n           technique\
    \ can be expanded by having multiple discard\n           addresses, routes, and\
    \ communities to allow for monitoring of\n           the discarded traffic volume\
    \ on devices that support multiple\n           discard interfaces.  As mentioned\
    \ earlier, each router can\n           have a discard address schema to allow\
    \ the operator to\n           distinguish multiple incidents from each other --\
    \ making it\n           easier to monitor the life-cycle of the incidents.\n \
    \     2.2: Multiple \"Trigger Communities\" for Network-Wide Granularity.\n  \
    \         The network can be sectioned into multiple communities,\n          \
    \ providing the operator with an ability to drop in discrete\n           parts\
    \ of their network.  For example, the network can be\n           divided into\
    \ the following communities (where XXX represents\n           the operator's AS\
    \ number):\n               XXX:600 RTBH filtering on all routers\n           \
    \    XXX:601 RTBH filtering on only peering routers\n               XXX:602 RTBH\
    \ filtering on only customers who peer BGP\n               XXX:603 RTBH filtering\
    \ on data centers (to see if the\n                       data center is the source\
    \ of attack)\n               XXX:604 RTBH filtering on all customers (to see how\
    \ many\n                       customers are being used by the attacker)\n   \
    \        Some diligent thinking is required to develop a community\n         \
    \  schema that provides flexibility while reflecting topological\n           considerations.\n\
    \      2.3: \"Customer-Triggered\" RTBH filtering.  The technique can also\n \
    \          be expanded by relaxing the Autonomous System (AS) path rule\n    \
    \       to allow customers of a service provider to enable RTBH\n           filtering\
    \ without interacting with the service provider's\n           trigger routers.\
    \  If this is configured, an operator MUST\n           only accept announcements\
    \ from the customer for prefixes that\n           the customer is authorized to\
    \ advertise, in order to prevent\n           the customer from accidentally (or\
    \ intentionally) black-\n           holing space that they are not allowed to\
    \ advertise.\n           A common policy for this type of setup would first permit\
    \ any\n           longer prefix within an authorized prefix only if the black\n\
    \           hole communities are attached, append NO_EXPORT,\n           NO_ADVERTISE,\
    \ or similar communities, and then also accept\n           from the customer the\
    \ original aggregate prefix that will be\n           advertised as standard policy\
    \ permits.\n           Extreme caution should be used in order to avoid leaking\
    \ any\n           more specifics beyond the local routing domain, unless policy\n\
    \           explicitly aims at doing just that.\n"
- title: 4.  Source Address RTBH Filtering
  contents:
  - "4.  Source Address RTBH Filtering\n   In many instances, denial-of-service attacks\
    \ sourced from botnets are\n   being configured to \"follow DNS\".  (The attacking\
    \ machines are\n   instructed to attack www.example.com, and re-resolve this\n\
    \   periodically.  Historically, the attacks were aimed simply at an IP\n   address\
    \ and so renumbering www.example.com to a new address was an\n   effective mitigation.)\
    \  This makes it desirable to employ a technique\n   that allows black-holing\
    \ to be based on source address.\n   By combining traditional RTBH filtering with\
    \ unicast Reverse Path\n   Forwarding (uRPF), a network operator can filter based\
    \ upon the\n   source address.  uRPF performs a route lookup of the source address\n\
    \   of the packet and checks to see if the ingress interface of the\n   packet\
    \ is a valid egress interface for the packet source address\n   (strict mode)\
    \ or if any route to the source address of the packet\n   exists (loose mode).\
    \  If the check fails, the packet is typically\n   dropped.  In loose mode, some\
    \ vendors also verify that the\n   destination route does not point to an invalid\
    \ next-hop -- this\n   allows source-based RTBH filtering to be deployed in networks\
    \ that\n   cannot implement strict (or feasible path) mode uRPF.  Before\n   enabling\
    \ uRPF (in any mode), it is vital that you fully understand\n   the implications\
    \ of doing so:\n   -  Strict mode will cause the router to drop all ingress traffic\
    \ if\n      the best path back to the source address of the traffic is not the\n\
    \      interface from which the traffic was received.  Asymmetric routing\n  \
    \    will cause strict mode uRPF to drop legitimate traffic.\n   -  Loose mode\
    \ causes the router to check if a route for the source\n      address of the traffic\
    \ exists.  This may also cause legitimate\n      traffic to be discarded.\n  \
    \ It is hoped that in the future, vendors will implement a \"DoS-\n   mitigation\"\
    \ mode in addition to the loose and strict modes -- in this\n   mode, the uRPF\
    \ check will only fail if the next-hop for the source of\n   the packet is a discard\
    \ interface.\n   By enabling the uRPF feature on interfaces at predetermined points\
    \ in\n   their network and announcing the source address(es) of attack\n   traffic,\
    \ a network operator can effectively drop the identified\n   attack traffic at\
    \ specified devices (ideally ingress edge) of their\n   network based on source\
    \ address.\n   While administrators may choose to drop traffic from any prefix\
    \ they\n   wish, it is recommended when employing source-based RTBH filtering\n\
    \   inter-domain that explicit policy be defined that enables peers to\n   only\
    \ announce source-based RTBH routes for prefixes that they\n   originate.\n"
- title: 4.1.  Steps to Deploy RTBH Filtering with uRPF for Source Filtering
  contents:
  - "4.1.  Steps to Deploy RTBH Filtering with uRPF for Source Filtering\n   The same\
    \ steps that are required to implement destination address\n   RTBH filtering\
    \ are taken with the additional step of enabling unicast\n   Reverse Path Forwarding\
    \ on predetermined interfaces.  When a source\n   address (or network) needs to\
    \ be blocked, that address (or network)\n   is announced using BGP tagged with\
    \ a community.  This will cause the\n   route to be installed with a next-hop\
    \ of the discard interface,\n   causing the uRPF check to fail and the packets\
    \ to be discarded.  The\n   destination-based RTBH filtering community should\
    \ not be used for\n   source-based RTBH filtering, and the routes tagged with\
    \ the selected\n   community should be carefully filtered.\n   The BGP policy\
    \ will need to be relaxed to accept announcements tagged\n   with this community\
    \ to be accepted even though they contain addresses\n   not controlled by the\
    \ network announcing them.  These announcements\n   must NOT be propagated outside\
    \ the local AS and should carry the\n   NO_EXPORT community.\n   As a matter of\
    \ policy, operators SHOULD NOT accept source-based RTBH\n   announcements from\
    \ their peers or customers, they should only be\n   installed by local or attack\
    \ management systems within their\n   administrative domain.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The techniques presented here provide enough\
    \ power to cause\n   significant traffic forwarding loss if incorrectly deployed.\
    \  It is\n   imperative that the announcements that trigger the black-holing are\n\
    \   carefully checked and that the BGP policy that accepts these\n   announcements\
    \ is implemented in such a manner that the announcements:\n   -  Are not propagated\
    \ outside the AS (NO_EXPORT).\n   -  Are not accepted from outside the AS (except\
    \ from customers).\n   -  Except where source-based filtering is deployed, that\
    \ the network\n      contained in the announcement falls within the address ranges\n\
    \      controlled by the announcing AS (i.e., for customers that the\n      address\
    \ falls within their space).\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   I would like to thank Joe Abley, Ron Bonica, Rodney Dunn,\
    \ Alfred\n   Hoenes, Donald Smith, Joel Jaeggli, and Steve Williams for their\n\
    \   assistance, feedback and not laughing *too* much at the quality of\n   the\
    \ initial versions.\n   I would also like to thank all of the regular contributors\
    \ to the\n   OPSEC Working Group and Google for 20% time :-)\n   The authors would\
    \ also like to thank Steven L Johnson and Barry\n   Greene for getting this implemented\
    \ and Chris Morrow for publicizing\n   the technique in multiple talks.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1918]    Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot,\n                G., and E. Lear, \"Address Allocation for Private\n\
    \                Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC2119]  \
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n                Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3330]    IANA, \"Special-Use\
    \ IPv4 Addresses\", RFC 3330, September\n                2002.\n   [RFC3704] \
    \   Baker, F. and P. Savola, \"Ingress Filtering for\n                Multihomed\
    \ Networks\", BCP 84, RFC 3704, March 2004.\n   [RFC3882]    Turk, D., \"Configuring\
    \ BGP to Block Denial-of-Service\n                Attacks\", RFC 3882, September\
    \ 2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [Greene2001] Greene Barry Raveendran and Jarvis\
    \ Neil, \"Unicast\n                Reverse Path Forwarding (uRPF) Enhancements\
    \ for the\n                ISP-ISP Edge\", ftp://ftp-eng.cisco.com/\n        \
    \        cons/isp/documents/uRPF_Enhancement.pdf, 2001.\n"
- title: Appendix A.  Cisco Router Configuration Sample
  contents:
  - "Appendix A.  Cisco Router Configuration Sample\n   This section provides a partial\
    \ configuration for configuring RTBH\n   filtering on a Cisco router.  This is\
    \ not a complete configuration\n   and should be customized before being used.\n"
- title: 'Announcing router:'
  contents:
  - "Announcing router:\n   ! The discard route\n   ip route 192.0.2.1 255.255.255.255\
    \ Null0\n   !\n   ! Matches and empty AS-PATH only.\n   ip as-path access-list\
    \ 10 permit ^$\n   !\n   ! This route-map matches routes with tag 666 and sets\
    \ the next-hop\n   ! to be the discard route.\n   route-map remote-trigger-black-hole\
    \ permit 10\n    match tag 666\n    set ip next-hop 192.0.2.1\n    set local-preference\
    \ 200\n    set community no-export\n    ! The community used internally to tag\
    \ RTBH announcements.\n    set community 65505:666\n    set origin igp\n   !\n\
    \   route-map remote-trigger-black-hole permit 20\n   !\n   router bgp 65505\n\
    \    no synchronization\n    bgp log-neighbor-changes\n    redistribute static\
    \ route-map remote-trigger-black-hole\n    no auto-summary\n   !\n   ! An example\
    \ IP that we are applying RTBH filtering to.\n   ! All traffic destined to 10.0.0.1\
    \ will now be dropped!\n   ip route 10.0.0.1 255.255.255.255 null0 tag 666\n \
    \  !\n"
- title: 'Filtering router:'
  contents:
  - "Filtering router:\n   !\n   ! The discard route\n   ip route 192.0.2.1 255.255.255.255\
    \ Null0\n   !\n   ! Matches and empty AS-PATH only.\n   ip as-path access-list\
    \ 10 permit ^$\n   !\n   route-map black-hole-filter permit 10\n    match ip address\
    \ prefix-list only-host-routes\n    match as-path 10\n    match community 65505:666\
    \ no-export\n   !\n   ! Don't accept any other announcements with the RTBH community.\n\
    \   route-map black-hole-filter deny 20\n    match community 65505:666\n   !\n\
    \   route-map black-hole-filter permit 30\n   !\n   ! An interface for source-based\
    \ RTBH filtering with uRPF loose mode.\n   interface FastEthernet 0/0\n   ip verify\
    \ unicast source reachable-via any\n"
- title: Appendix B.  Juniper Configuration Sample
  contents:
  - "Appendix B.  Juniper Configuration Sample\n   This section provides a partial\
    \ configuration for configuring RTBH\n   filtering on a Juniper router.  This\
    \ is not a complete configuration\n   and should be customized before being used.\n\
    \   Announcing router:\n      routing-options {\n         static {\n         \
    \    /* EXAMPLE ATTACK SOURCE */\n             route 10.11.12.66/32 {\n      \
    \           next-hop 192.0.2.1;\n                 resolve;\n                 tag\
    \ 666;\n             }\n             /* EXAMPLE ATTACK DESTINATION */\n      \
    \       route 10.128.0.2/32 {\n                 next-hop 192.0.2.1;\n        \
    \         resolve;\n                 tag 666;\n             }\n         }\n  \
    \       autonomous-system 100;\n      }\n      protocols {\n         bgp {\n \
    \            group ibgp {\n                 type internal;\n                 export\
    \ rtbh;\n                 neighbor 172.16.0.2;\n             }\n         }\n \
    \     }\n      policy-options {\n         policy-statement rtbh {\n          \
    \   term black-hole-filter {\n                 from {\n                     tag\
    \ 666;\n                     route-filter 0.0.0.0/0 prefix-length-range /32-/32;\n\
    \                 }\n                 then {\n                     local-preference\
    \ 200;\n                     origin igp;\n                     community set black-hole;\n\
    \                     community add no-export;\n                     next-hop\
    \ 192.0.2.1;\n                     accept;\n                 }\n             }\n\
    \         }\n         community black-hole members 100:666;\n         community\
    \ no-export members no-export;\n      }\n   Filtering router:\n      policy-statement\
    \ black-hole-filter {\n         from {\n             protocol bgp;\n         \
    \    as-path LocalOnly;\n             community black-hole;\n             route-filter\
    \ 0.0.0.0/0 prefix-length-range /32-/32;\n         }\n         then {\n      \
    \       community set no-export;\n             next-hop 192.0.2.1;\n         }\n\
    \      }\n      community black-hole members 100:666;\n      community no-export\
    \ members no-export;\n      routing-options {\n         forwarding-table {\n \
    \            unicast-reverse-path feasible-paths;\n         }\n         static\
    \ {\n             route 192.0.2.1/32 discard;\n         }\n      }\n      interfaces\
    \ {\n         xe-1/0/0 {\n             vlan-tagging;\n             mtu 9192;\n\
    \             unit 201 {\n                 vlan-id 201;\n                 family\
    \ inet {\n                     rpf-check;\n                     address 10.11.12.1/24;\n\
    \                 }\n             }\n         }\n      }\n"
- title: Appendix C.  A Brief History of RTBH Filtering
  contents:
  - "Appendix C.  A Brief History of RTBH Filtering\n   Understanding the history\
    \ and motivation behind the development of a\n   technique often helps with understanding\
    \ how to best utilize the\n   technique.  In this spirit, we present a history\
    \ of unicast RPF and\n   RTBH filtering.\n   This section has been provided by\
    \ Barry Raveendran Greene:\n   Unicast RPF Loose Check (uRPF Loose Check) was\
    \ created by Neil Jarvis\n   and Barry Greene to be used with destination-based\
    \ RTBH as a rapid\n   reaction tool to DDoS attacks.  The requirements for this\
    \ rapid\n   reaction tool was based on post mortem conversation after the\n  \
    \ February 2000 attacks on several big content hosting companies.  The\n   summary\
    \ of the requirement became the \"Exodus Requirement\" which\n   stated:\n   \
    \   We need a tool to drop packets based on source IP address that can\n     \
    \ be pushed out to over 60 routers within 60 seconds, be longer than\n      a\
    \ thousand lines, be modified on the fly, and work in all your\n      platforms\
    \ filtering at line rate.\n   A variety of options were looked at to meet this\
    \ requirement, from\n   reviving Common Open Policy Service (COPS), to pushing\
    \ out Access\n   Control Lists (ACLs) with BGP, creating a new protocol.  In 2000,\
    \ the\n   quickest way to meet the \"Exodus requirement\" was to marry two\n \
    \  functions.  First, modify unicast RPF so that the interface check was\n   no\
    \ longer required and to make sure that a \"null\" or discard route\n   would\
    \ drop the packet (i.e., loose check).  Second, the technique\n   where BGP is\
    \ used to trigger a distributed drop is dusted off and\n   documented.  Combining\
    \ these two techniques was deemed a fast way to\n   put a distributed capability\
    \ to drop packets out into the industry.\n   To clarify and restate, uRPF loose\
    \ check was created as one part of a\n   rapid reaction tool to DDoS attacks that\
    \ \"drop packets based on\n   source IP address that can be pushed out to over\
    \ 60 routers with in\n   60 seconds, be longer than a thousand lines, be modified\
    \ on the fly,\n   and work in all your platforms filtering at line rate\".  The\n\
    \   secondary benefits of using uRPF Loose Check for other functions is a\n  \
    \ secondary benefit -- not the primary goal for its creation.\n   To facilitate\
    \ the adoption to the industry, uRPF Loose Check was not\n   patented.  It was\
    \ publicly published and disclosed in \"Unicast\n   Reverse PathForwarding (uRPF)\
    \ Enhancements for the ISP-ISP Edge\"\n   [Greene2001].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Warren Kumari\n   Google\n   1600 Amphitheatre Parkway\n\
    \   Mountain View, CA 94043\n   EMail: warren@kumari.net\n   Danny McPherson\n\
    \   Arbor Networks, Inc.\n   EMail: danny@arbor.net\n"
