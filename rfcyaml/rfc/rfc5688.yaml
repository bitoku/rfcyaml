- contents:
  - "     A Session Initiation Protocol (SIP) Media Feature Tag for MIME\n                          Application
    Subtypes\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The caller preferences specification for the Session Initiation\n
    \  Protocol (SIP) allows a caller to express preferences that the call\n   be
    routed to a User Agent (UA) with particular capabilities.\n   Similarly, a specification
    exists to allow a UA to indicate its\n   capabilities in a registration.  Amongst
    those capabilities are the\n   type of media streams the agent supports, described
    as top-level MIME\n   types.  The 'application' MIME type is used to describe
    a broad range\n   of stream types, and it provides insufficient granularity as
    a\n   capability.  This specification allows a UA to indicate which\n   application
    subtypes the agent supports.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5688.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . . . 2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . . . 3\n   3.  sip.app-subtype Media Feature Tag . . . . . . . . . . . . .
    . . 3\n   4.  Example . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    4\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5\n
    \  6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 5\n   7.
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . . . 6\n     7.1.
    \ Normative References  . . . . . . . . . . . . . . . . . . . 6\n     7.2.  Informative
    References  . . . . . . . . . . . . . . . . . . 7\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The caller preferences specification [RFC3841] for the Session\n
    \  Initiation Protocol (SIP) [RFC3261] allows a user to express\n   preferences
    for the routing of SIP requests.  These preferences are\n   expressed as a set
    of desired capabilities and characteristics of a\n   receiving agent.  When a
    user agent registers to the SIP network, it\n   includes, as part of its registration,
    its own capabilities and\n   characteristics [RFC3840].  These capabilities are
    stored as part of\n   the registration, and then made available to the proxy in
    the\n   network.  When a request arrives at the proxy with caller\n   preferences,
    the preferences in the request are compared with the\n   supported characteristics
    and capabilities stored in the\n   registrations, and the result is used to select
    the target user\n   agents for the request.\n   RFC 3840 makes use of media feature
    tags [RFC2506].  Each tag has a\n   name and a type.  The tags defined in RFC
    3840 describe some of the\n   basic characteristics of user agents, including
    whether or not they\n   are automata (the sip.automata tag), their class (the
    sip.class tag),\n   whether they support media in one or both directions (the\n
    \  sip.duplex), and whether they are a conference focus (sip.isfocus).\n   These
    tags also include SIP capabilities, including the schemes\n   supported by the
    agent (sip.schemes), the methods (sip.methods), and\n   the event packages (sip.events)
    [RFC3265].\n   RFC 3840 also defines media feature tags for multimedia stream
    types.\n   There is a media feature tag defined for each top-level media type
    --\n   sip.audio for audio streams, sip.video for video streams, and so on.\n
    \  The primary use case for this is to correctly deliver multimedia\n   sessions
    to the user agent that supports that media type.  Consider a\n   caller on a videophone
    that wants to have a video call with another\n   user.  That user has two devices
    -- a mobile phone that only supports\n   audio and a videophone.  We'd like to
    deliver the videophone call to\n   the videophone as a first priority, and only
    'ring' the mobile device\n   for an audio-only call if the user is not present
    on the videophone.\n   RFC 3840 defines media feature tags for each and every
    top-level\n   media type, including 'application'.  This media type covers an\n
    \  extremely broad range of subtypes -- multiplayer games of all sorts,\n   shared
    whiteboards and application sharing, and so on.  With audio\n   and video, where
    there is often a common codec supported by agents\n   (i.e., a common subtype).
    \ Consequently, if a caller wants an audio\n   session, routing the request to
    any user agent that supports audio is\n   likely to result in successful communications.
    \ However, with\n   application streams, just routing a request to an agent that
    supports\n   *some* application stream isn't useful; application streams for\n
    \  different applications are wildly different.  Consequently, the\n   application
    media feature tag does not provide sufficient granularity\n   for call preferences.
    \ The specific application subtype needs to be\n   indicated as well.\n   To remedy
    this, this specification defines a new media feature tag\n   that indicates which
    application subtypes are supported by the agent\n   for streaming.  The name of
    this media feature tag is 'sip.app-\n   subtype'.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  Terminology
- contents:
  - "3.  sip.app-subtype Media Feature Tag\n   The 'sip.app-subtype' media feature
    tag is of type token with a case-\n   insensitive equality relationship.  Its
    value can be any registered\n   or private MIME application subtype compliant
    to the subtype-name\n   grammar defined in [RFC4288].  When included in the Contact
    header\n   field of a REGISTER request, an agent SHOULD include all application\n
    \  subtypes that it can support as streaming formats.  An application\n   subtype
    is supported if the user agent would be capable of processing\n   a Session Description
    Protocol (SDP) [RFC4566] offer [RFC3264] that\n   contained that subtype as a
    format in the m-line of the SDP.\n   When included in the Accept-Contact or Reject-Contact
    header field,\n   it indicates a desire on the part of a User Agent Client (UAC)
    to be\n   connected to a User Agent Server (UAS) that can support or cannot\n
    \  support, respectively, streaming using that application subtype.\n   It is
    important to note that this media feature tag is only\n   indicating the streaming
    media types that a user agent is capable of\n   supporting.  It says nothing about
    the functionality provided by the\n   user agent itself or the MIME types that
    the agent can send or\n   receive in SIP messages or emails.  For example, let
    us assume that a\n   SIP user agent is capable of supporting a chess game.  The
    game is\n   played by each user sending chess moves as binary objects over UDP\n
    \  between a pair of user agents.  Those objects have a MIME type of\n   \"application/example\".
    \ When a UA includes the sip.app-subtype media\n   feature tag in a Contact header
    field with a value of \"example\", it\n   means that the UA can handle a SIP INVITE
    that contained an SDP with\n   an application media line and format of \"example\".
    \ It does not mean\n   that the SIP user agent is a chess application, or that
    the user\n   agent can accept SIP requests that include bodies of type\n   \"application/example\".
    \ To indicate that a user agent can accept SIP\n   requests that include bodies
    of type \"application/example\", the agent\n   would utilize the \"type\" media
    feature tag as defined in [RFC3840].\n   A consequence of this is that, as new
    streaming media type formats\n   are defined (such as game stream formats, whiteboard
    session formats,\n   and so on), they SHOULD be defined using the SDP application
    stream\n   and utilize a MIME application subtype.\n"
  title: 3.  sip.app-subtype Media Feature Tag
- contents:
  - "4.  Example\n   The following is an example SIP REGISTER message fragment indicating\n
    \  usage of this media feature tag.  The REGISTER indicates that the UA\n   can
    participate in application media sessions utilizing exchange of\n   objects of
    type \"application/example\".\n   REGISTER sip:example.com SIP/2.0\n   To: sip:Y@example.com\n
    \  Contact: <sip:Y1@pc.example.com>\n    ;methods=\"INVITE,ACK,OPTIONS,BYE,CANCEL\"\n
    \   ;uri-user=\"<Y1>\"\n    ;uri-domain=\"example.com\"\n    ;audio\n    ;schemes=\"sip\"\n
    \   ;mobility=\"fixed\"\n    ;class=\"personal\"\n    ;+sip.app-subtype=\"example\"\n
    \  Such a registration indicates that an INVITE of the following form:\n   INVITE
    sip:Y@example.com SIP/2.0\n   To: sip:Y@example.com\n   Content-Type: application/sdp\n
    \  Content-Length: ...\n   v=0\n   o=jdoe 2890844526 2890842807 IN IP4 10.47.16.5\n
    \  c=IN IP4 192.0.1.2\n   t=0 0\n   m=audio 49170 RTP/AVP 0\n   m=application
    8493 udp example\n   would be accepted by the UA.  The SDP in the INVITE indicates
    an\n   audio session and an application session that runs over UDP and\n   exchanges
    \"application/example\" object formats.\n"
  title: 4.  Example
- contents:
  - "5.  Security Considerations\n   When present in a REGISTER request, this media
    feature tag gives\n   information on the set of supported application media streams.
    \ It is\n   possible that this information is sensitive, providing insight into\n
    \  the capabilities of a product.  These considerations are already\n   discussed
    in RFC 3840, and those considerations apply here as well.\n   Applications that
    utilize this media feature tag SHOULD provide a\n   means for ensuring its integrity.
    \ Similarly, the media feature tag\n   should only be trusted as valid when it
    comes from the user or user\n   agent described by the feature tag.  As a result,
    mechanisms for\n   conveying the feature tag SHOULD provide a mechanism for guaranteeing\n
    \  authenticity.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   This specification adds a new media feature tag to
    the SIP Media\n   Feature Tag Registration Tree defined in RFC 3840 [RFC3840].\n
    \  Media feature tag name:  sip.app-subtype\n   ASN.1 Identifier:  1.3.6.1.8.4.24\n
    \  Summary of the media feature indicated by this tag:  This feature tag\n      indicates
    the MIME application subtypes supported by the agent for\n      purposes of streaming
    media.\n   Values appropriate for use with this feature tag:  Token (equality\n
    \     relationship).\n   The feature tag is intended primarily for use in the
    following\n      applications, protocols, services, or negotiation mechanisms:\n
    \     This feature tag is most useful in a communications application,\n      for
    describing the capabilities of a device, such as a phone or\n      PDA.\n   Examples
    of typical use:  Routing a call to a phone that can support\n      a multiplayer
    game.\n   Related standards or documents:  RFC 5688\n   Security Considerations:
    \ Security considerations for this media\n      feature tag are discussed in Section
    5 of RFC 5688.\n"
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n
      \             with Session Description Protocol (SDP)\", RFC 3264,\n              June
      2002.\n   [RFC3840]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\n              \"Indicating
      User Agent Capabilities in the Session\n              Initiation Protocol (SIP)\",
      RFC 3840, August 2004.\n   [RFC4288]  Freed, N. and J. Klensin, \"Media Type
      Specifications and\n              Registration Procedures\", BCP 13, RFC 4288,
      December 2005.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP:
      Session\n              Description Protocol\", RFC 4566, July 2006.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC3261]  Rosenberg, J., Schulzrinne, H.,
      Camarillo, G., Johnston,\n              A., Peterson, J., Sparks, R., Handley,
      M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC
      3261,\n              June 2002.\n   [RFC3265]  Roach, A., \"Session Initiation
      Protocol (SIP)-Specific\n              Event Notification\", RFC 3265, June
      2002.\n   [RFC3841]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat, \"Caller\n
      \             Preferences for the Session Initiation Protocol (SIP)\",\n              RFC
      3841, August 2004.\n   [RFC2506]  Holtman, K., Mutz, A., and T. Hardie, \"Media
      Feature Tag\n              Registration Procedure\", BCP 31, RFC 2506, March
      1999.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Author's Address\n   Jonathan Rosenberg\n   Skype\n   Monmouth, NJ\n   USA\n
    \  EMail: jdrosen@jdrosen.net\n   URI:   http://www.jdrosen.net\n"
  title: Author's Address
