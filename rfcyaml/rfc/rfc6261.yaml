- title: __initial_text__
  contents:
  - "                Encrypted Signaling Transport Modes for\n                   \
    \    the Host Identity Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies two transport modes for Host Identity\n\
    \   Protocol (HIP) signaling messages that allow them to be conveyed over\n  \
    \ encrypted connections initiated with the Host Identity Protocol.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6261.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Transport Mode Negotiation . . . . . . . . . . . . . .\
    \ . . . .  3\n     3.1.  Mode Negotiation in the HIP Base Exchange  . . . . .\
    \ . . .  3\n     3.2.  Mode Negotiation after the HIP Base Exchange . . . . .\
    \ . .  5\n     3.3.  Error Notifications  . . . . . . . . . . . . . . . . . .\
    \ .  5\n   4.  HIP Messages on Encrypted Connections  . . . . . . . . . . . .\
    \  5\n     4.1.  ESP Mode . . . . . . . . . . . . . . . . . . . . . . . . .  6\n\
    \     4.2.  ESP-TCP Mode . . . . . . . . . . . . . . . . . . . . . . .  6\n  \
    \ 5.  Recovering from Failed Encrypted Connections . . . . . . . . .  7\n   6.\
    \  Host Mobility and Multihoming  . . . . . . . . . . . . . . . .  8\n   7.  Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . .  8\n   8.  Acknowledgements\
    \ . . . . . . . . . . . . . . . . . . . . . . .  9\n   9.  IANA Considerations\
    \  . . . . . . . . . . . . . . . . . . . . .  9\n   10. References . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .  9\n     10.1. Normative References\
    \ . . . . . . . . . . . . . . . . . . .  9\n     10.2. Informational References\
    \ . . . . . . . . . . . . . . . . . 10\n   Appendix A.  Mobility and Multihoming\
    \ Examples . . . . . . . . . . 11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Host Identity Protocol (HIP) [RFC5201] signaling messages\
    \ can be\n   exchanged over plain IP using the protocol number reserved for this\n\
    \   purpose, or over UDP using the UDP port reserved for HIP NAT\n   traversal\
    \ [RFC5770].  When two hosts perform a HIP base exchange,\n   they set up an encrypted\
    \ connection between them for data traffic,\n   but continue to use plain IP or\
    \ UDP for HIP signaling messages.\n   This document defines how the encrypted\
    \ connection can be used also\n   for HIP signaling messages.  Two different modes\
    \ are defined: HIP\n   over Encapsulating Security Payload (ESP) and HIP over\
    \ TCP.  The\n   benefit of sending HIP messages over ESP is that all signaling\n\
    \   traffic (including HIP headers) will be encrypted.  If HIP messages\n   are\
    \ sent over TCP (which in turn is transported over ESP), TCP can\n   handle also\
    \ message fragmentation where needed.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Transport Mode Negotiation
  contents:
  - "3.  Transport Mode Negotiation\n   This section defines how support for different\
    \ HIP signaling message\n   transport modes is indicated and how the use of different\
    \ modes is\n   negotiated.\n"
- title: 3.1.  Mode Negotiation in the HIP Base Exchange
  contents:
  - "3.1.  Mode Negotiation in the HIP Base Exchange\n   A HIP host implementing this\
    \ specification SHOULD indicate the modes\n   it supports, and is willing to use,\
    \ in the base exchange.  The HIP\n   signaling message transport mode negotiation\
    \ is similar to HIP NAT\n   traversal mode negotiation: first the Responder lists\
    \ the supported\n   modes in a HIP_TRANSPORT_MODE parameter (see Figure 1) in\
    \ the R1\n   packet.  The modes are listed in priority order, the more preferred\n\
    \   mode(s) first.  If the Initiator supports, and is willing to use, any\n  \
    \ of the modes proposed by the Responder, it selects one of the modes\n   by adding\
    \ a HIP_TRANSPORT_MODE parameter containing the selected mode\n   to the I2 packet.\
    \  Finally, if the Initiator selected one of the\n   modes and the base exchange\
    \ succeeds, hosts MUST use the selected\n   mode for the following HIP signaling\
    \ messages sent between them for\n   the duration of the HIP association or until\
    \ another mode is\n   negotiated.\n   If the Initiator cannot, or will not, use\
    \ any of the modes proposed\n   by the Responder, the Initiator SHOULD include\
    \ an empty\n   HIP_TRANSPORT_MODE parameter to the I2 packet to signal that it\n\
    \   supports this extension but will not use any of the proposed modes.\n   Depending\
    \ on local policy, the Responder MAY either abort the base\n   exchange or continue\
    \ HIP signaling without using an encrypted\n   connection, if there was no HIP_TRANSPORT_MODE\
    \ parameter in I2 or the\n   parameter was empty.  If the Initiator selects a\
    \ mode that the\n   Responder does not support (and hence was not included in\
    \ R1), the\n   Responder MUST abort the base exchange.  If the base exchange is\n\
    \   aborted due to (possibly lack of) HIP_TRANSPORT_PARAMETER, the\n   Responder\
    \ SHOULD send a NO_VALID_HIP_TRANSPORT_MODE notification (see\n   Section 3.3)\
    \ to the Initiator.\n      0                   1                   2         \
    \          3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |             Type              |             Length            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \           Port              |           Mode ID #1          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |          Mode ID #2           |           Mode ID #3          |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \        Mode ID #n           |             Padding           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     Type     7680\n     Port     transport layer port number (or zero if not\
    \ used)\n     Length   length in octets, excluding Type, Length, and Padding\n\
    \     Mode ID  defines the proposed or selected transport mode(s)\n     The following\
    \ HIP Transport Mode IDs are defined:\n         ID name   Value\n         RESERVED\
    \    0\n         DEFAULT     1\n         ESP         2\n         ESP-TCP     3\n\
    \           Figure 1: Format of the HIP_TRANSPORT_MODE Parameter\n   The mode\
    \ DEFAULT indicates that the same transport mode (e.g., plain\n   IP or UDP) that\
    \ was used for the base exchange should be used for\n   subsequent HIP signaling\
    \ messages.  In the ESP mode, the messages are\n   sent as such on the encrypted\
    \ ESP connection; in the ESP-TCP mode,\n   TCP is used within the ESP tunnel.\
    \  If a mode that uses a transport\n   layer connection within the ESP tunnel\
    \ (e.g., ESP-TCP) is offered,\n   the Port field MUST contain the local port number\
    \ the host will use\n   for the connection.  If none of the modes utilize a transport\
    \ layer\n   protocol, the Port field SHOULD be set to zero when the parameter\
    \ is\n   sent and ignored when received.  The Port and Mode ID fields are\n  \
    \ encoded as unsigned integers using network byte order.\n   The HIP_TRANSPORT_MODE\
    \ parameter resides on the signed part of the\n   HIP packets, and hence it is\
    \ covered by the signatures of the R1, I2,\n   and UPDATE packets.\n"
- title: 3.2.  Mode Negotiation after the HIP Base Exchange
  contents:
  - "3.2.  Mode Negotiation after the HIP Base Exchange\n   If a HIP host wants to\
    \ change to a different transport mode (or start\n   using a transport mode) some\
    \ time after the base exchange, it sends a\n   HIP UPDATE packet with a HIP_TRANSPORT_MODE\
    \ parameter containing the\n   mode(s) it would prefer to use.  The host receiving\
    \ the UPDATE SHOULD\n   respond with an UPDATE packet containing the mode that\
    \ is selected as\n   in the negotiation during the base exchange.  If the receiving\
    \ host\n   does not support, or is not willing to use, any of the listed modes,\n\
    \   it SHOULD respond with an UPDATE packet where the HIP_TRANSPORT_MODE\n   parameter\
    \ contains only the currently used transport mode (even if\n   that was not included\
    \ in the previous UPDATE packet) and continue\n   using that mode.\n   Since the\
    \ HIP_TRANSPORT_MODE parameter's type is not critical (as\n   defined in Section\
    \ 5.2.1 of [RFC5201]), a host not supporting this\n   extension would simply reply\
    \ with an acknowledgement UPDATE packet\n   without a HIP_TRANSPORT_MODE parameter.\
    \  In such a case, depending on\n   local policy as in mode negotiation during\
    \ the base exchange, the\n   host that requested the new transport mode MAY close\
    \ the HIP\n   association.  If the association is closed, the host closing the\n\
    \   association SHOULD send a NO_VALID_HIP_TRANSPORT_MODE NOTIFY packet\n   to\
    \ the other host before closing the association.\n"
- title: 3.3.  Error Notifications
  contents:
  - "3.3.  Error Notifications\n   During a HIP signaling transport mode negotiation,\
    \ if a\n   HIP_TRANSPORT_MODE parameter does not contain any mode that the\n \
    \  receiving host is willing to use, or a HIP_TRANSPORT_MODE parameter\n   does\
    \ not exist in a HIP packet where the receiving host expected to\n   see it, the\
    \ receiving host MAY send back a NOTIFY packet with a\n   NOTIFICATION parameter\
    \ [RFC5201] error type\n   NO_VALID_HIP_TRANSPORT_MODE (value 100).  The Notification\
    \ Data field\n   for the error notifications SHOULD contain the HIP header of\
    \ the\n   rejected packet.\n"
- title: 4.  HIP Messages on Encrypted Connections
  contents:
  - "4.  HIP Messages on Encrypted Connections\n   This specification defines two\
    \ different transport modes for sending\n   HIP packets over encrypted ESP connections.\
    \  These modes require that\n   the ESP transport format [RFC5202] is negotiated\
    \ to be used between\n   the hosts.  If the ESP transport format is not used,\
    \ these modes MUST\n   NOT be offered in the HIP_TRANSPORT_MODE parameter.  If\
    \ a\n   HIP_TRANSPORT_MODE parameter containing an ESP transport mode is\n   received\
    \ but the ESP transport format is not used, a host MUST NOT\n   select such a\
    \ mode but act as specified in Section 3.1 (if performing\n   a base exchange)\
    \ or Section 3.2 (if performing an UPDATE) when no\n   valid mode is offered.\n\
    \   The ESP mode provides simple protection for all the signaling traffic\n  \
    \ and can be used as a generic replacement for the DEFAULT mode in\n   cases where\
    \ all signaling traffic should be encrypted.  If the HIP\n   messages may become\
    \ so large that they would need to be fragmented,\n   e.g., because of HIP certificates\
    \ [RFC6253] or DATA messages\n   [RFC6078], it is RECOMMENDED to use the ESP-TCP\
    \ mode that can handle\n   message fragmentation at the TCP level instead of relying\
    \ on IP-level\n   fragmentation.\n   When HIP NAT traversal [RFC5770] is used,\
    \ the ESP and HIP packets are\n   sent UDP encapsulated.  The use of different\
    \ NAT traversal modes, and\n   in particular UDP encapsulation, is independent\
    \ of the transport mode\n   (as specified in this document) of HIP packets.  However,\
    \ when HIP\n   packets are sent over an ESP connection, no additional UDP\n  \
    \ encapsulation (i.e., within the ESP connection) for the HIP packets\n   is needed\
    \ and MUST NOT be used since the ESP packets are already UDP\n   encapsulated,\
    \ if needed for NAT traversal.  For example, if UDP\n   encapsulation is used\
    \ as defined in [RFC5770], and the ESP-TCP\n   transport mode is used as defined\
    \ in this document, the HIP packets\n   are sent over IP, UDP, ESP, and TCP (in\
    \ that order).\n   HIP messages that result in changing or generating new keying\n\
    \   material, i.e., the base exchange and re-keying UPDATE messages, MUST\n  \
    \ NOT be sent over the encrypted connection that is created using the\n   keying\
    \ material that is being changed, nor over an encrypted\n   connection using the\
    \ newly created keying material.\n   It should be noted that when HIP messages\
    \ are sent using an encrypted\n   connection, on-path network elements (e.g.,\
    \ firewalls and HIP-aware\n   NATs) that would normally see the HIP headers and\
    \ contents of the\n   unencrypted parameters, cannot see any part of the messages\
    \ unless\n   they have access to the encryption keying material.  The original\
    \ HIP\n   design made an explicit decision to expose some of this information\n\
    \   to HIP-aware NATs.  If an encrypted transport mode is used, only the\n   base\
    \ exchange or update without encryption is visible to such NATs.\n"
- title: 4.1.  ESP Mode
  contents:
  - "4.1.  ESP Mode\n   If the ESP mode is selected in the base exchange, both hosts\
    \ MUST\n   listen for incoming HIP signaling messages and send outgoing messages\n\
    \   on the encrypted connection.  The ESP header's next header value for\n   HIP\
    \ messages sent over ESP MUST be set to HIP (139).\n"
- title: 4.2.  ESP-TCP Mode
  contents:
  - "4.2.  ESP-TCP Mode\n   If the ESP-TCP mode is selected, the host with the larger\
    \ HIT\n   (calculated as defined in Section 6.5 of [RFC5201]) MUST start to\n\
    \   listen for an incoming TCP connection on the encrypted connection\n   (i.e.,\
    \ to the HIT of the host) on the port it used in the Port field\n   of the transport\
    \ mode parameter.  The other host MUST create a TCP\n   connection to that port\
    \ and the host MAY use the port it sent in the\n   transport mode parameter as\
    \ the source port for the connection.  Once\n   the TCP connection is established,\
    \ both hosts MUST listen for\n   incoming HIP signaling messages and send the\
    \ outgoing messages using\n   the TCP connection.  The ESP next header value for\
    \ messages sent\n   using the ESP-TCP mode TCP connections MUST be set to TCP\
    \ (6).\n   If the hosts are unable to create the TCP connection, the host that\n\
    \   initiated the mode negotiation MUST restart the negotiation with the\n   UPDATE\
    \ message and SHOULD NOT propose the ESP-TCP mode.  If local\n   policy does not\
    \ allow use of any mode other than ESP-TCP, the HIP\n   association SHOULD be\
    \ closed.  The UPDATE or CLOSE message MUST be\n   sent using the same transport\
    \ mode that was used for negotiating the\n   use of the ESP-TCP mode.\n   Since\
    \ TCP provides reliable transport, the HIP messages sent over TCP\n   MUST NOT\
    \ be retransmitted.  Instead, a host SHOULD wait to detect\n   that the TCP connection\
    \ has failed to retransmit the packet\n   successfully in a timely manner (such\
    \ detection is platform- and\n   policy-specific) before concluding that there\
    \ is no response.\n"
- title: 5.  Recovering from Failed Encrypted Connections
  contents:
  - "5.  Recovering from Failed Encrypted Connections\n   If the encrypted connection\
    \ fails for some reason, it can no longer\n   be used for HIP signaling and the\
    \ hosts SHOULD re-establish the\n   connection using HIP messages that are sent\
    \ outside of the encrypted\n   connection.  Hence, while listening for incoming\
    \ HIP messages on the\n   encrypted connection, hosts MUST still accept incoming\
    \ HIP messages\n   using the same transport method (e.g., UDP or plain IP) that\
    \ was used\n   for the base exchange.  When responding to a HIP message sent outside\n\
    \   of the encrypted connection, the response MUST be sent using the same\n  \
    \ transport method as the original message used.  If encryption was\n   previously\
    \ used, hosts SHOULD send outside of the encrypted\n   connection only HIP messages\
    \ that are used to re-establish the\n   encrypted connection.  In particular,\
    \ when the policy requires that\n   only encrypted messages (e.g., DATA messages\
    \ using an encrypted\n   transport mode) be sent, they MUST be sent using an encrypted\n\
    \   connection.  Note that a policy MUST NOT prevent sending unencrypted\n   UPDATE\
    \ messages used for re-establishing the encrypted connection,\n   since that would\
    \ prevent recovering from failed encrypted\n   connections.\n   The UPDATE messages\
    \ used for re-establishing the encrypted connection\n   MUST contain a HIP_TRANSPORT_MODE\
    \ parameter and the negotiation\n   proceeds as described in Section 3.2.\n"
- title: 6.  Host Mobility and Multihoming
  contents:
  - "6.  Host Mobility and Multihoming\n   If a host obtains a new address, a new\
    \ Security Association (SA) pair\n   may be created for (or an existing SA pair\
    \ may be moved to) the new\n   address, as described in [RFC5206].  If the ESP\
    \ or ESP-TCP transport\n   mode is used, HIP signaling continues using the (new)\
    \ SA pair and the\n   same transport mode as before.\n   With the ESP mode, the\
    \ first mobility UPDATE message SHOULD be sent\n   using the old SA, and the following\
    \ messages, including the response\n   to the first UPDATE, SHOULD be sent using\
    \ the new SAs.\n   Retransmissions of the UPDATE messages use the same SA as the\n\
    \   original message.  If the ESP-TCP mode is used, the HIP signaling TCP\n  \
    \ connection is moved to the new SA pair like any other TCP connection.\n   However,\
    \ the mobility UPDATE messages SHOULD NOT be sent over the TCP\n   connection,\
    \ but using plain ESP as in the ESP mode, and consequently\n   hosts MUST be prepared\
    \ to receive UPDATE messages over plain ESP even\n   if the ESP-TCP mode is used.\n\
    \   In some cases, the host may not be able to send the mobility UPDATE\n   messages\
    \ using the encrypted connection before it breaks.  This\n   results in a similar\
    \ situation as if the encrypted connection had\n   failed and the hosts need to\
    \ renegotiate the new addresses using\n   unencrypted UPDATE messages and possibly\
    \ rendezvous [RFC5204] or HIP\n   relay [RFC5770] servers.  Also, these UPDATE\
    \ messages MUST contain\n   the HIP_TRANSPORT_MODE parameter and perform the transport\
    \ mode\n   negotiation.\n   Examples of the signaling flows with mobility and\
    \ multihoming are\n   shown in Appendix A.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   By exchanging the HIP messages over an ESP connection,\
    \ all HIP\n   signaling data (after the base exchange but excluding keying material\n\
    \   (re)negotiation and some of the mobility UPDATE messages) will be\n   encrypted,\
    \ but only if NULL encryption is not used.  Thus, a host\n   requiring confidentiality\
    \ for the HIP signaling messages must check\n   that encryption is negotiated\
    \ for use on the ESP connection.\n   Moreover, the level of protection provided\
    \ by the ESP transport modes\n   depends on the selected ESP transform; see [RFC5202]\
    \ and [RFC4303]\n   for security considerations of the different ESP transforms.\n\
    \   While this extension to HIP allows for negotiation of security\n   features,\
    \ there is no risk of downgrade attacks since the mode\n   negotiation happens\
    \ using signed (R1/I2 or UPDATE) packets and only\n   after both hosts have been\
    \ securely identified in the base exchange.\n   If an attacker would attempt to\
    \ change the modes listed in the\n   HIP_TRANSPORT_MODE parameter, that would\
    \ break the signatures and the\n   base exchange (or update) would not complete.\
    \  Furthermore, since\n   both \"secure\" modes (ESP and ESP-TCP) defined in this\
    \ document are\n   equally secure, the only possible downgrade attack would be\
    \ to make\n   both hosts accept the DEFAULT mode.  If the local policy (of either\n\
    \   host) requires using a secure mode, the base exchange or update would\n  \
    \ again simply fail (as described in Section 3.1).\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks to Gonzalo Camarillo, Kristian Slavov, Tom Henderson,\
    \ Miika\n   Komu, Jan Melen, and Tobias Heer for reviews and comments.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   This section is to be interpreted according to [RFC5226].\n\
    \   This document updates the IANA maintained \"Host Identity Protocol\n   (HIP)\
    \ Parameters\" registry [RFC5201] by assigning a new HIP Parameter\n   Type value\
    \ (7680) for the HIP_TRANSPORT_MODE parameter (defined in\n   Section 3.1).\n\
    \   The HIP_TRANSPORT_MODE parameter has 16-bit unsigned integer fields\n   for\
    \ different modes, for which IANA has created and now maintains a\n   new sub-registry\
    \ entitled \"HIP Transport Modes\" under the \"Host\n   Identity Protocol (HIP)\
    \ Parameters\" registry.  Initial values for the\n   transport mode registry are\
    \ given in Section 3.1; future assignments\n   are to be made through IETF Review\
    \ or IESG Approval [RFC5226].\n   Assignments consist of a transport mode identifier\
    \ name and its\n   associated value.\n   This document also defines a new HIP\
    \ NOTIFICATION message type\n   [RFC5201] NO_VALID_HIP_TRANSPORT_MODE (100) in\
    \ Section 3.3.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5201]  Moskowitz, R., Nikander, P., Jokela, P., and T. Henderson,\n\
    \              \"Host Identity Protocol\", RFC 5201, April 2008.\n   [RFC5202]\
    \  Jokela, P., Moskowitz, R., and P. Nikander, \"Using the\n              Encapsulating\
    \ Security Payload (ESP) Transport Format with\n              the Host Identity\
    \ Protocol (HIP)\", RFC 5202, April 2008.\n   [RFC5226]  Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 5226,\n              May 2008.\n"
- title: 10.2.  Informational References
  contents:
  - "10.2.  Informational References\n   [RFC4303]  Kent, S., \"IP Encapsulating Security\
    \ Payload (ESP)\",\n              RFC 4303, December 2005.\n   [RFC5204]  Laganier,\
    \ J. and L. Eggert, \"Host Identity Protocol (HIP)\n              Rendezvous Extension\"\
    , RFC 5204, April 2008.\n   [RFC5206]  Nikander, P., Henderson, T., Vogt, C.,\
    \ and J. Arkko, \"End-\n              Host Mobility and Multihoming with the Host\
    \ Identity\n              Protocol\", RFC 5206, April 2008.\n   [RFC5770]  Komu,\
    \ M., Henderson, T., Tschofenig, H., Melen, J., and A.\n              Keranen,\
    \ \"Basic Host Identity Protocol (HIP) Extensions\n              for Traversal\
    \ of Network Address Translators\", RFC 5770,\n              April 2010.\n   [RFC6078]\
    \  Camarillo, G. and J. Melen, \"Host Identity Protocol (HIP)\n              Immediate\
    \ Carriage and Conveyance of Upper-Layer Protocol\n              Signaling (HICCUPS)\"\
    , RFC 6078, January 2011.\n   [RFC6253]  Heer, T. and S. Varjonen, \"Host Identity\
    \ Protocol\n              Certificates\", RFC 6253, May 2011.\n"
- title: Appendix A.  Mobility and Multihoming Examples
  contents:
  - "Appendix A.  Mobility and Multihoming Examples\n   When changing interfaces due\
    \ to mobility or multihoming, the hosts\n   use HIP messages to notify the other\
    \ host about the new address and\n   to check that the host with the new address\
    \ is still reachable.  The\n   following examples show the signaling performed\
    \ during the address\n   change in two different scenarios.  Note that not all\
    \ HIP parameters\n   nor all the content of the parameters is shown in the examples.\
    \  This\n   section and the examples are not normative; for normative behavior,\n\
    \   see previous sections.\n   In the examples, host A uses two different addresses\
    \ (a1 and a2)\n   while host B has just a single address (b1).  In the first example,\n\
    \   \"Make before Break\" (Figure 2), host A starts to use the new address\n \
    \  but can still use the old address (due to multihoming) for signaling.\n   In\
    \ the second example, \"Break before Make\" (Figure 3), host A loses\n   the first\
    \ address before obtaining the second address (e.g., due to\n   mobility), and\
    \ the mobility HIP signaling is done without the\n   encrypted connection.\n \
    \  The following notations are used in the examples:\n   o  ESPx(y): data y sent\
    \ encapsulated in ESP with SA x; if ESP-\n      encapsulation is not used, the\
    \ data is sent over plain IP or UDP\n   o  UPDATE(x,y,z): HIP UPDATE message [RFC5201]\
    \ with parameters x,y,z\n   o  LOCATOR(x): HIP LOCATOR parameter [RFC5206] with\
    \ locator x\n   o  ESP_INFO(x,y): HIP ESP_INFO parameter [RFC5202] with \"old\
    \ SPI\"\n      value x and \"new SPI\" value y\n   o  ACK, ECHO_REQ, and ECHO_RSP:\
    \ HIP ACK, ECHO_REQUEST, and\n      ECHO_RESPONSE parameters [RFC5201]\n     \
    \       A                                                  B\n               \
    \                  ESP1(...)\n           a1 <---------------------------------------------->\
    \ b1\n                ESP1(UPDATE(LOCATOR(a2), ESP_INFO(0,SPI2a)))\n         \
    \  a1 -----------------------------------------------> b1\n                  \
    \ (A and B create SAs a2 <-> b1 (ESP2)\n                    retransmissions of\
    \ the first UPDATE\n                    happen over ESP1)\n               ESP2(UPDATE(ACK,\
    \ ESP_INFO(0,SPI2b), ECHO_REQ)))\n           a2 <-----------------------------------------------\
    \ b1\n                         ESP2(UPDATE(ACK, ECHO_RSP))\n           a2 ----------------------------------------------->\
    \ b1\n                                  ESP2(...)\n           a2 <---------------------------------------------->\
    \ b1\n                        Figure 2: Make Before Break\n            A     \
    \                                             B\n                            \
    \      ESP1(...)\n           a1 <---------------------------------------------->\
    \ b1\n                           (A moves from a1 to a2)\n                 UPDATE(LOCATOR(a2),\
    \ ESP_INFO(SPI1a, SPI1a))\n           a2 ----------------------------------------------->\
    \ b1\n                 UPDATE(ACK, ECHO_REQ, ESP_INFO(SPI1b,SPI1b))\n        \
    \   a2 <----------------------------------------------- b1\n                 \
    \          UPDATE(ACK, ECHO_RSP)\n           a2 ----------------------------------------------->\
    \ b1\n                    (A and B move ESP1 SAs to a2 <-> b1)\n             \
    \                     ESP1(...)\n           a2 <---------------------------------------------->\
    \ b1\n                        Figure 3: Break Before Make\n   When the ESP-TCP\
    \ mode is used, the signaling flows are similar since\n   TCP is not used for\
    \ the mobility UPDATE messages as described in\n   Section 6.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ari Keranen\n   Ericsson\n   Hirsalantie 11\n   02420 Jorvas\n\
    \   Finland\n   EMail: ari.keranen@ericsson.com\n"
