- title: __initial_text__
  contents:
  - "              IPv6 Guidance for Internet Content Providers\n                \
    \   and Application Service Providers\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides guidance and suggestions for Internet Content\n\
    \   Providers and Application Service Providers who wish to offer their\n   service\
    \ to both IPv6 and IPv4 customers.  Many of the points will\n   also apply to\
    \ hosting providers or to any enterprise network\n   preparing for IPv6 users.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6883.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. General Strategy ................................................3\n  \
    \ 3. Education and Skills ............................................5\n   4.\
    \ Arranging IPv6 Connectivity .....................................6\n   5. IPv6\
    \ Infrastructure .............................................7\n      5.1. Address\
    \ and Subnet Assignment ..............................7\n      5.2. Routing ....................................................8\n\
    \      5.3. DNS ........................................................9\n  \
    \ 6. Load Balancers .................................................10\n   7.\
    \ Proxies ........................................................11\n   8. Servers\
    \ ........................................................12\n      8.1. Network\
    \ Stack .............................................12\n      8.2. Application\
    \ Layer .........................................12\n      8.3. Logging ...................................................13\n\
    \      8.4. Geolocation ...............................................13\n  \
    \ 9. Coping with Transition Technologies ............................13\n   10.\
    \ Content Delivery Networks .....................................15\n   11. Business\
    \ Partners .............................................16\n   12. Possible Complexities\
    \ .........................................16\n   13. Operations and Management\
    \ .....................................17\n   14. Security Considerations .......................................18\n\
    \   15. Acknowledgements ..............................................20\n  \
    \ 16. References ....................................................20\n    \
    \  16.1. Normative References .....................................20\n      16.2.\
    \ Informative References ...................................22\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The deployment of IPv6 [RFC2460] is now in progress, and\
    \ users\n   without direct IPv4 access are likely to appear in increasing numbers\n\
    \   in the coming years.  Any provider of content or application services\n  \
    \ over the Internet will need to arrange for IPv6 access or else risk\n   losing\
    \ large numbers of potential users.  For users who already have\n   dual-stack\
    \ connectivity, direct IPv6 access might provide more\n   satisfactory performance\
    \ than indirect access via NAT.\n   In this document, we often refer to the users\
    \ of content or\n   application services as \"customers\" to clarify the part\
    \ they play,\n   but this is not intended to limit the scope to commercial sites.\n\
    \   The time for action is now, while the number of IPv6-only customers\n   is\
    \ small, so that appropriate skills, software, and equipment can be\n   acquired\
    \ in good time to scale up the IPv6 service as demand\n   increases.  An additional\
    \ advantage of early support for IPv6\n   customers is that it will reduce the\
    \ number of customers connecting\n   later via IPv4 \"extension\" solutions such\
    \ as double NAT or NAT64\n   [RFC6146], which will otherwise degrade the user\
    \ experience.\n   Nevertheless, it is important that the introduction of IPv6\
    \ service\n   should not make service for IPv4 customers worse.  In some\n   circumstances,\
    \ technologies intended to assist in the transition from\n   IPv4 to IPv6 are\
    \ known to have negative effects on the user\n   experience.  A deployment strategy\
    \ for IPv6 must avoid these effects\n   as much as possible.\n   The purpose of\
    \ this document is to provide guidance and suggestions\n   for Internet Content\
    \ Providers (ICPs) and Application Service\n   Providers (ASPs) who wish to offer\
    \ their services to both IPv6 and\n   IPv4 customers but who are currently supporting\
    \ only IPv4.  For\n   simplicity, the term \"ICP\" is mainly used in the body\
    \ of this\n   document, but the guidance also applies to ASPs.  Any hosting\n\
    \   provider whose customers include ICPs or ASPs is also concerned.\n   Many\
    \ of the points in this document will also apply to enterprise\n   networks that\
    \ do not classify themselves as ICPs.  Any enterprise or\n   department that runs\
    \ at least one externally accessible server, such\n   as an HTTP server, may also\
    \ be concerned.  Although specific\n   managerial and technical approaches are\
    \ described, this is not a rule\n   book; each operator will need to make its\
    \ own plan, tailored to its\n   own services and customers.\n"
- title: 2.  General Strategy
  contents:
  - "2.  General Strategy\n   The most important advice here is to actually have a\
    \ general\n   strategy.  Adding support for a second network-layer protocol is\
    \ a\n   new experience for most modern organizations, and it cannot be done\n\
    \   casually on an unplanned basis.  Even if it is impossible to write a\n   precisely\
    \ dated plan, the intended steps in the process need to be\n   defined well in\
    \ advance.  There is no single blueprint for this.  The\n   rest of this document\
    \ is meant to provide a set of topics to be taken\n   into account in defining\
    \ the strategy.  Other documents about IPv6\n   deployment, such as [IPv6-NETWORK-DESIGN],\
    \ should be consulted as\n   well.\n   In determining the urgency of this strategy,\
    \ it should be noted that\n   the central IPv4 registry (IANA) ran out of spare\
    \ blocks of IPv4\n   addresses in February 2011, and the various regional registries\
    \ are\n   expected to exhaust their reserves over the next one to two years.\n\
    \   After this, Internet Service Providers (ISPs) will run out at dates\n   determined\
    \ by their own customer base.  No precise date can be given\n   for when IPv6-only\
    \ customers will appear in commercially significant\n   numbers, but -- particularly\
    \ in the case of mobile users -- it may be\n   quite soon.  Complacency about\
    \ this is therefore not an option for\n   any ICP that wishes to grow its customer\
    \ base over the coming years.\n   The most common strategy for an ICP is to provide\
    \ dual-stack services\n   -- both IPv4 and IPv6 on an equal basis -- to cover\
    \ both existing and\n   future customers.  This is the recommended strategy in\
    \ [RFC6180] for\n   straightforward situations.  Some ICPs who already have satisfactory\n\
    \   operational experience with IPv6 might consider an IPv6-only\n   strategy,\
    \ with IPv4 clients being supported by translation or proxy\n   in front of their\
    \ IPv6 content servers.  However, the present\n   document is addressed to ICPs\
    \ without IPv6 experience, who are likely\n   to prefer the dual-stack model to\
    \ build on their existing IPv4\n   service.\n   Due to the widespread impact of\
    \ supporting IPv6 everywhere within an\n   environment, it is important to select\
    \ a focused initial approach\n   based on clear business needs and real technical\
    \ dependencies.\n   Within the dual-stack model, two approaches could be adopted,\n\
    \   sometimes referred to as \"outside in\" and \"inside out\":\n   o  Outside\
    \ in: Start by providing external users with an IPv6 public\n      access to your\
    \ services, for example, by running a reverse proxy\n      that handles IPv6 customers\
    \ (see Section 7 for details).\n      Progressively enable IPv6 internally.\n\
    \   o  Inside out: Start by enabling internal networking infrastructure,\n   \
    \   hosts, and applications to support IPv6.  Progressively reveal\n      IPv6\
    \ access to external customers.\n   Which of these approaches to choose depends\
    \ on the precise\n   circumstances of the ICP concerned.  \"Outside in\" has the\
    \ benefit of\n   giving interested customers IPv6 access at an early stage, and\n\
    \   thereby gaining precious operational experience, before meticulously\n   updating\
    \ every piece of equipment and software.  For example, if some\n   back-office\
    \ system that is never exposed to users only supports IPv4,\n   it will not cause\
    \ delay.  \"Inside out\" has the benefit of completing\n   the implementation\
    \ of IPv6 as a single project.  Any ICP could choose\n   this approach, but it\
    \ might be most appropriate for a small ICP\n   without complex back-end systems.\n\
    \   A point that must be considered in the strategy is that some\n   customers\
    \ will remain IPv4-only for many years, others will have both\n   IPv4 and IPv6\
    \ access, and yet others will have only IPv6.\n   Additionally, mobile customers\
    \ may find themselves switching between\n   IPv4 and IPv6 access as they travel,\
    \ even within a single session.\n   Services and applications must be able to\
    \ deal with this, just as\n   easily as they deal today with a user whose IPv4\
    \ address changes (see\n   the discussion of cookies in Section 8.2).\n   Nevertheless,\
    \ the end goal is to have a network that does not need\n   major changes when\
    \ at some point in the future it becomes possible to\n   transition to IPv6-only,\
    \ even if only for some parts of the network.\n   That is, the IPv6 deployment\
    \ should be designed in such a way as to\n   more or less assume that IPv4 is\
    \ already absent, so the network will\n   function seamlessly when it is indeed\
    \ no longer there.\n   An important step in the strategy is to determine from\
    \ hardware and\n   software suppliers details of their planned dates for providing\n\
    \   sufficient IPv6 support, with performance equivalent to IPv4, in\n   their\
    \ products and services.  Relevant specifications such as\n   [RFC6434] and [IPv6-CE-REQS]\
    \ should be used.  Even if complete\n   information cannot be obtained, it is\
    \ essential to determine which\n   components are on the critical path during\
    \ successive phases of\n   deployment.  This information will make it possible\
    \ to draw up a\n   logical sequence of events and identify any components that\
    \ may cause\n   holdups.\n"
- title: 3.  Education and Skills
  contents:
  - "3.  Education and Skills\n   Some staff may have experience running multiprotocol\
    \ networks, which\n   were common twenty years ago before the dominance of IPv4.\
    \  However,\n   IPv6 will be new to them and also to staff brought up only on\
    \ TCP/IP.\n   It is not enough to have one \"IPv6 expert\" in a team.  On the\n\
    \   contrary, everybody who knows about IPv4 needs to know about IPv6,\n   from\
    \ network architect to help desk responder.  Therefore, an early\n   and essential\
    \ part of the strategy must be education, including\n   practical training, so\
    \ that all staff acquire a general understanding\n   of IPv6, how it affects basic\
    \ features such as the DNS, and the\n   relevant practical skills.  To take a\
    \ trivial example, any staff used\n   to dotted-decimal IPv4 addresses need to\
    \ become familiar with the\n   colon-hexadecimal format used for IPv6.\n   There\
    \ is an anecdote of one IPv6 deployment in which prefixes\n   including the letters\
    \ A to F were avoided by design, to avoid\n   confusing system administrators\
    \ unfamiliar with hexadecimal notation.\n   This is not a desirable result.  There\
    \ is another anecdote of a help\n   desk responder telling a customer to \"disable\
    \ one-Pv6\" in order to\n   solve a problem.  It should be a goal to avoid having\
    \ untrained staff\n   who don't understand hexadecimal or who can't even spell\
    \ \"IPv6\".\n   It is very useful to have a small laboratory network available\
    \ for\n   training and self-training in IPv6, where staff may experiment and\n\
    \   make mistakes without disturbing the operational IPv4 service.  This\n   lab\
    \ should run both IPv4 and IPv6, to gain experience with a dual-\n   stack environment\
    \ and new features such as having multiple addresses\n   per interface, and addresses\
    \ with lifetimes and deprecation.\n   Once staff are trained, they will likely\
    \ need to support IPv4, IPv6,\n   and dual-stack customers.  Rather than having\
    \ separate internal\n   escalation paths for IPv6, it generally makes sense for\
    \ questions\n   that may have an IPv6 element to follow normal escalation paths;\n\
    \   there should not be an \"IPv6 Department\" once training is completed.\n \
    \  A final remark about training is that it should not be given too\n   soon,\
    \ or it will be forgotten.  Training has a definite need to be\n   done \"just\
    \ in time\" in order to properly \"stick\".  Training, lab\n   experience, and\
    \ actual deployment should therefore follow each other\n   immediately.  If possible,\
    \ training should even be combined with\n   actual operational experience.\n"
- title: 4.  Arranging IPv6 Connectivity
  contents:
  - "4.  Arranging IPv6 Connectivity\n   There are, in theory, two ways to obtain\
    \ IPv6 connectivity to the\n   Internet.\n   o  Native.  In this case, the ISP\
    \ simply provides IPv6 on exactly the\n      same basis as IPv4 -- it will appear\
    \ at the ICP's border\n      router(s), which must then be configured in dual-stack\
    \ mode to\n      forward IPv6 packets in both directions.  This is by far the\n\
    \      better method.  An ICP should contact all its ISPs to verify when\n   \
    \   they will provide native IPv6 support, whether this has any\n      financial\
    \ implications, and whether the same service level\n      agreement will apply\
    \ as for IPv4.  Any ISP that has no definite\n      plan to offer native IPv6\
    \ service should be avoided.\n   o  Managed Tunnel.  It is possible to configure\
    \ an IPv6-in-IPv4\n      tunnel to a remote ISP that offers such a service.  A\
    \ dual-stack\n      router in the ICP's network will act as a tunnel endpoint,\
    \ or this\n      function could be included in the ICP's border router.\n    \
    \  A managed tunnel is a reasonable way to obtain IPv6 connectivity\n      for\
    \ initial testing and skills acquisition.  However, it\n      introduces an inevitable\
    \ extra latency compared to native IPv6,\n      giving customers a noticeably\
    \ worse response time for complex web\n      pages.  A tunnel may become a performance\
    \ bottleneck (especially\n      if offered as a free service) or a target for\
    \ malicious attack.\n      It is also likely to limit the IPv6 MTU size.  In normal\n\
    \      circumstances, native IPv6 will provide an MTU size of at least\n     \
    \ 1500 bytes, but it will almost inevitably be less for a tunnel,\n      possibly\
    \ as low as 1280 bytes (the minimum MTU allowed for IPv6).\n      Apart from the\
    \ resulting loss of efficiency, there are cases in\n      which Path MTU Discovery\
    \ fails and IPv6 fragmentation therefore\n      fails; in this case, the lower\
    \ tunnel MTU will actually cause\n      connectivity failures for customers.\n\
    \      For these reasons, ICPs are strongly recommended to obtain native\n   \
    \   IPv6 service before attempting to offer a production-quality\n      service\
    \ to their customers.  Unfortunately, it is impossible to\n      prevent customers\
    \ from using unmanaged tunnel solutions (see\n      Section 9).\n   Some larger\
    \ organizations may find themselves needing multiple forms\n   of IPv6 connectivity,\
    \ for their ICP data centers and for their staff\n   working elsewhere.  It is\
    \ important to obtain IPv6 connectivity for\n   both, as testing and supporting\
    \ an IPv6-enabled service is\n   challenging for staff without IPv6 connectivity.\
    \  This may involve\n   short-term alternatives to provide IPv6 connectivity to\
    \ operations\n   and support staff, such as a managed tunnel or HTTP proxy server\
    \ with\n   IPv6 connectivity.  Note that unmanaged tunnels (such as 6to4 and\n\
    \   Teredo) are generally not useful for support staff, as recent client\n   software\
    \ will avoid them when accessing dual-stack sites.\n"
- title: 5.  IPv6 Infrastructure
  contents:
  - '5.  IPv6 Infrastructure

    '
- title: 5.1.  Address and Subnet Assignment
  contents:
  - "5.1.  Address and Subnet Assignment\n   An ICP must first decide whether to apply\
    \ for its own Provider\n   Independent (PI) address prefix for IPv6.  This option\
    \ is available\n   either from an ISP that acts as a Local Internet Registry or\
    \ directly\n   from the relevant Regional Internet Registry.  The alternative\
    \ is to\n   obtain a Provider Aggregated (PA) prefix from an ISP.  Both solutions\n\
    \   are viable in IPv6.  However, the scaling properties of the wide-area\n  \
    \ routing system (BGP-4) mean that the number of PI prefixes should be\n   limited,\
    \ so only large content providers can justify obtaining a PI\n   prefix and convincing\
    \ their ISPs to route it.  Millions of enterprise\n   networks, including smaller\
    \ content providers, will use PA prefixes.\n   In this case, a change of ISP would\
    \ necessitate a change of the\n   corresponding PA prefix, using the procedure\
    \ outlined in [RFC4192].\n   An ICP that has connections via multiple ISPs but\
    \ does not have a PI\n   prefix would therefore have multiple PA prefixes, one\
    \ from each ISP.\n   This would result in multiple IPv6 addresses for the ICP's\
    \ servers or\n   load balancers.  If one address fails due to an ISP malfunction,\n\
    \   sessions using that address would be lost.  At the time of this\n   writing,\
    \ there is very limited operational experience with this\n   approach [MULTIHOMING-WITHOUT-NAT].\n\
    \   An ICP may also choose to operate a Unique Local Address prefix\n   [RFC4193]\
    \ for internal traffic only, as described in [RFC4864].\n   Depending on its projected\
    \ future size, an ICP might choose to obtain\n   /48 PI or PA prefixes (allowing\
    \ 16 bits of subnet address) or longer\n   PA prefixes, e.g., /56 (allowing 8\
    \ bits of subnet address).  Clearly,\n   the choice of /48 is more future-proof.\
    \  Advice on the numbering of\n   subnets may be found in [RFC5375].  An ICP with\
    \ multiple locations\n   will probably need a prefix per location.\n   An ICP\
    \ that has its service hosted by a colocation provider, cloud\n   provider, or\
    \ the like will need to follow the addressing policy of\n   that provider.\n \
    \  Since IPv6 provides for operating multiple prefixes simultaneously,\n   it\
    \ is important to check that all relevant tools, such as address\n   management\
    \ packages, can deal with this.  In particular, the possible\n   need to allow\
    \ for multiple PA prefixes with IPv6, and the possible\n   need to renumber, mean\
    \ that the common technique of manually assigned\n   static addresses for servers,\
    \ proxies, or load balancers, with\n   statically defined DNS entries, could be\
    \ problematic [RFC6866].  An\n   ICP of reasonable size might instead choose to\
    \ operate DHCPv6\n   [RFC3315] with standard DNS, to support stateful assignment.\
    \  In\n   either case, a configuration management system is likely to be used\n\
    \   to support stateful and/or on-demand address assignment.\n   Theoretically,\
    \ it would also be possible to operate an ICP's IPv6\n   network using only Stateless\
    \ Address Autoconfiguration [RFC4862],\n   with Dynamic DNS [RFC3007] to publish\
    \ server addresses for external\n   users.\n"
- title: 5.2.  Routing
  contents:
  - "5.2.  Routing\n   In a dual-stack network, most IPv4 and IPv6 interior routing\n\
    \   protocols operate quite independently and in parallel.  The common\n   routing\
    \ protocols, such as OSPFv3 [RFC5340], IS-IS [RFC5308], and\n   even the Routing\
    \ Information Protocol Next Generation (RIPng)\n   [RFC2080] [RFC2081], all support\
    \ IPv6.  It is worth noting that\n   whereas OSPF and RIP differ significantly\
    \ between IPv4 and IPv6,\n   IS-IS has the advantage of handling them both in\
    \ a single instance of\n   the protocol, with the potential for operational simplification\
    \ in\n   the long term.  Some versions of OSPFv3 may also have this advantage\n\
    \   [RFC5838].  In any case, for trained staff, there should be no\n   particular\
    \ difficulty in deploying IPv6 routing without disturbance\n   to IPv4 services.\
    \  In some cases, firmware upgrades may be needed on\n   some network devices.\n\
    \   The performance impact of dual-stack routing needs to be evaluated.\n   In\
    \ particular, what forwarding performance does the router vendor\n   claim for\
    \ IPv6?  If the forwarding performance is significantly\n   inferior compared\
    \ to IPv4, will this be an operational problem?\n   Is extra memory or ternary\
    \ content-addressable memory (TCAM) space\n   needed to accommodate both IPv4\
    \ and IPv6 tables?  To answer these\n   questions, the ICP will need a projected\
    \ model for the amount of IPv6\n   traffic expected initially and its likely rate\
    \ of increase.\n   If a site has multiple PA prefixes as mentioned in Section\
    \ 5.1,\n   complexities in routing configuration will appear.  In particular,\n\
    \   source-based routing rules might be needed to ensure that outgoing\n   packets\
    \ are routed to the appropriate border router and ISP link.\n   Normally, a packet\
    \ sourced from an address assigned by ISP X should\n   not be sent via ISP Y,\
    \ to avoid ingress filtering by Y [RFC2827]\n   [RFC3704].  Additional considerations\
    \ may be found in\n   [MULTIHOMING-WITHOUT-NAT].  Note that the prefix translation\n\
    \   technique discussed in [RFC6296] does not describe a solution for\n   enterprises\
    \ that offer publicly available content servers.\n   Each IPv6 subnet that supports\
    \ end hosts normally has a /64 prefix,\n   leaving another 64 bits for the interface\
    \ identifiers of individual\n   hosts.  In contrast, a typical IPv4 subnet will\
    \ have no more than\n   8 bits for the host identifier, thus limiting the subnet\
    \ to 256 or\n   fewer hosts.  A dual-stack design will typically use the same\n\
    \   physical or VLAN subnet topology for IPv4 and IPv6, and therefore the\n  \
    \ same router topology.  In other words, the IPv4 and IPv6 topologies\n   are\
    \ congruent.  This means that the limited subnet size of IPv4 (such\n   as 256\
    \ hosts) will be imposed on IPv6, even though the IPv6 prefix\n   will allow many\
    \ more hosts.  It would be theoretically possible to\n   avoid this limitation\
    \ by implementing a different physical or VLAN\n   subnet topology for IPv6. \
    \ This is not advisable, as it would result\n   in extremely complex fault diagnosis\
    \ when something went wrong.\n"
- title: 5.3.  DNS
  contents:
  - "5.3.  DNS\n   It must be understood that as soon as a AAAA record for a well-known\n\
    \   name is published in the DNS, the corresponding server will start to\n   receive\
    \ IPv6 traffic.  Therefore, it is essential that an ICP test\n   thoroughly to\
    \ ensure that IPv6 works on its servers, load balancers,\n   etc., before adding\
    \ their AAAA records to DNS.  There have been\n   numerous cases of ICPs breaking\
    \ their sites for all IPv6 users during\n   a roll-out by returning AAAA records\
    \ for servers improperly\n   configured for IPv6.\n   Once such tests have succeeded,\
    \ each externally visible host (or\n   virtual host) that has an A record for\
    \ its IPv4 address needs a AAAA\n   record [RFC3596] for its IPv6 address, and\
    \ a reverse entry (in\n   ip6.arpa) if applicable.  Note that if CNAME records\
    \ are in use, the\n   AAAA record must be added alongside the A record at the\
    \ end of the\n   CNAME chain.  It is not possible to have the AAAA record on the\
    \ same\n   name as used for a CNAME record, as per [RFC1912].\n   One important\
    \ detail is that some clients (especially Windows XP) can\n   only resolve DNS\
    \ names via IPv4, even if they can use IPv6 for\n   application traffic.  Also,\
    \ a dual-stack resolver might attempt to\n   resolve queries for A records via\
    \ IPv6, or AAAA records via IPv4.  It\n   is therefore advisable for all DNS servers\
    \ to respond to queries via\n   both IPv4 and IPv6.\n"
- title: 6.  Load Balancers
  contents:
  - "6.  Load Balancers\n   Most available load balancers now support IPv6.  However,\
    \ it is\n   important to obtain appropriate assurances from vendors about their\n\
    \   IPv6 support, including performance aspects (as discussed for routers\n  \
    \ in Section 5.2).  The update needs to be planned in anticipation of\n   expected\
    \ traffic growth.  It is to be expected that IPv6 traffic will\n   initially be\
    \ low, i.e., a small but growing percentage of total\n   traffic.  For this reason,\
    \ it might be acceptable to have IPv6\n   traffic bypass load balancing initially,\
    \ by publishing a AAAA record\n   for a specific server instead of the load balancer.\
    \  However, load\n   balancers often also provide for server fail-over, in which\
    \ case it\n   would be better to implement IPv6 load balancing immediately.\n\
    \   The same would apply to Transport Layer Security (TLS) or HTTP\n   proxies\
    \ used for load-balancing purposes.\n"
- title: 7.  Proxies
  contents:
  - "7.  Proxies\n   An HTTP proxy [RFC2616] can readily be configured to handle incoming\n\
    \   connections over IPv6 and to proxy them to a server over IPv4.\n   Therefore,\
    \ a single proxy can be used as the first step in an\n   outside-in strategy,\
    \ as shown in the following diagram:\n        ___________________________________________\n\
    \       (                                           )\n       (        IPv6 Clients\
    \ in the Internet       )\n       (___________________________________________)\n\
    \                            |\n                      -------------\n        \
    \              |  Ingress  |\n                      |  router   |\n          \
    \            -------------\n                ____________|_____________\n     \
    \                       |\n                      -------------\n             \
    \         | IPv6 stack|\n                      |-----------|\n               \
    \       | HTTP proxy|\n                      |-----------|\n                 \
    \     | IPv4 stack|\n                      -------------\n                ____________|_____________\n\
    \                            |\n                      -------------\n        \
    \              | IPv4 stack|\n                      |-----------|\n          \
    \            |   HTTP    |\n                      |  server   |\n            \
    \          -------------\n   In this case, the AAAA record for the service would\
    \ provide the IPv6\n   address of the proxy.  This approach will work for any\
    \ HTTP or HTTPS\n   applications that operate successfully via a proxy, as long\
    \ as IPv6\n   load remains low.  Additionally, many load-balancer products\n \
    \  incorporate such a proxy, in which case this approach would be\n   possible\
    \ at high load.\n   Note that in any proxy scenario, an ICP will need to make\
    \ sure that\n   both IPv4 and IPv6 addresses are being properly passed to application\n\
    \   servers in any relevant HTTP headers and that those application\n   servers\
    \ are properly handling the IPv6 addresses.\n"
- title: 8.  Servers
  contents:
  - '8.  Servers

    '
- title: 8.1.  Network Stack
  contents:
  - "8.1.  Network Stack\n   The TCP/IP network stacks in popular operating systems\
    \ have supported\n   IPv6 for many years.  In most cases, it is sufficient to\
    \ enable IPv6\n   and possibly DHCPv6; the rest will follow.  Servers inside an\
    \ ICP\n   network will not need to support any transition technologies beyond\
    \ a\n   simple dual stack, with a possible exception for 6to4 mitigation\n   noted\
    \ below in Section 9.\n   As some operating systems have separate firewall rule\
    \ sets for IPv4\n   and IPv6, an ICP should also evaluate those rule sets and\
    \ ensure that\n   appropriate firewall rules are configured for IPv6.  More details\
    \ are\n   discussed in Section 14.\n"
- title: 8.2.  Application Layer
  contents:
  - "8.2.  Application Layer\n   Basic HTTP servers have been able to handle an IPv6-enabled\
    \ network\n   stack for some years, so at the most it will be necessary to update\n\
    \   to a more recent software version.  The same is true of generic\n   applications\
    \ such as email protocols.  No general statement can be\n   made about other applications,\
    \ especially proprietary ones, so each\n   ASP will need to make its own determination.\
    \  As changes to the\n   network layer to introduce IPv6 addresses can ripple\
    \ through\n   applications, testing of both client and server applications should\n\
    \   be performed in IPv4-only, IPv6-only, and dual-stack environments\n   prior\
    \ to dual-stacking a production environment.\n   One important recommendation\
    \ here is that all applications should use\n   domain names, which are IP-version-independent,\
    \ rather than IP\n   addresses.  Applications based on middleware platforms that\
    \ have\n   uniform support for IPv4 and IPv6, for example, Java, may be able to\n\
    \   support both IPv4 and IPv6 naturally without additional work.\n   Security\
    \ certificates should also contain domain names rather than\n   addresses.\n \
    \  A specific issue for HTTP-based services is that IP address-based\n   cookie\
    \ authentication schemes will need to deal with dual-stack\n   clients.  Servers\
    \ might create a cookie for an IPv4 connection or an\n   IPv6 connection, depending\
    \ on the setup at the client site and on the\n   whims of the client operating\
    \ system.  There is no guarantee that a\n   given client will consistently use\
    \ the same address family,\n   especially when accessing a collection of sites\
    \ rather than a single\n   site, such as when cookies are used for federated authentication.\
    \  If\n   the client is using privacy addresses [RFC4941], the IPv6 address\n\
    \   (but usually not its /64 prefix) might change quite frequently.  Any\n   cookie\
    \ mechanism based on 32-bit IPv4 addresses will need significant\n   remodeling.\n\
    \   Generic considerations on application transition are discussed in\n   [RFC4038],\
    \ but many of them will not apply to the dual-stack ICP\n   scenario.  An ICP\
    \ that creates and maintains its own applications\n   will need to review them\
    \ for any dependency on IPv4.\n"
- title: 8.3.  Logging
  contents:
  - "8.3.  Logging\n   The introduction of IPv6 clients will generally also result\
    \ in IPv6\n   addresses appearing in the \"client ip\" field of server logs. \
    \ It\n   might be convenient to use the same log field to hold a client's IP\n\
    \   address, whether it is IPv4 or IPv6.  Downstream systems looking at\n   logs\
    \ and client IP addresses may also need testing to ensure that\n   they can properly\
    \ handle IPv6 addresses.  This includes any of an\n   ICP's databases recording\
    \ client IP addresses, such as for recording\n   IP addresses of online purchases\
    \ and comment posters.\n   It is worth noting that accurate traceback from logs\
    \ to individual\n   customers requires end-to-end address transparency.  This\
    \ is\n   additional motivation for an ICP to support native IPv6 connectivity,\n\
    \   since otherwise, IPv6-only customers will inevitably connect via some\n  \
    \ form of translation mechanism, interfering with traceback.\n"
- title: 8.4.  Geolocation
  contents:
  - "8.4.  Geolocation\n   Initially, ICPs may observe some weakness in geolocation\
    \ for IPv6\n   clients.  As time goes on, it is to be assumed that geolocation\n\
    \   methods and databases will be updated to fully support IPv6 prefixes.\n  \
    \ There is no reason they will be more or less accurate in the long\n   term than\
    \ those available for IPv4.  However, we can expect many more\n   clients to be\
    \ mobile as time goes on, so geolocation based on IP\n   addresses alone may in\
    \ any case become problematic.  A more robust\n   technique such as HTTP-Enabled\
    \ Location Delivery (HELD) [RFC5985]\n   could be considered.\n"
- title: 9.  Coping with Transition Technologies
  contents:
  - "9.  Coping with Transition Technologies\n   As mentioned above, an ICP should\
    \ obtain native IPv6 connectivity\n   from its ISPs.  In this way, the ICP can\
    \ avoid most of the\n   complexities of the numerous IPv4-to-IPv6 transition technologies\n\
    \   that have been developed; they are all second-best solutions.\n   However,\
    \ some clients are sure to be using such technologies.  An ICP\n   needs to be\
    \ aware of the operational issues this may cause and how to\n   deal with them.\n\
    \   In some cases outside the ICP's control, clients might reach a\n   content\
    \ server via a network-layer translator from IPv6 to IPv4.\n   ICPs who are offering\
    \ a dual-stack service and providing both A and\n   AAAA records, as recommended\
    \ in this document, should not normally\n   receive IPv4 traffic from NAT64 translators\
    \ [RFC6146].\n   Exceptionally, however, such traffic could arrive via IPv4 from\
    \ an\n   IPv6-only client whose DNS resolver failed to receive the ICP's AAAA\n\
    \   record for some reason.  Such traffic would be indistinguishable from\n  \
    \ regular IPv4-via-NAT traffic.\n   Alternatively, ICPs who are offering a dual-stack\
    \ service might\n   exceptionally receive IPv6 traffic translated from an IPv4-only\n\
    \   client that somehow failed to receive the ICP's A record.  An ICP\n   could\
    \ also receive IPv6 traffic with translated prefixes [RFC6296].\n   These two\
    \ cases would only be an issue if the ICP was offering any\n   service that depends\
    \ on the assumption of end-to-end IPv6 address\n   transparency.\n   Finally,\
    \ some traffic might reach an ICP that has been translated\n   twice en route\
    \ (e.g., from IPv6 to IPv4 and back again).  Again, the\n   ICP will be unable\
    \ to detect this.  It is likely that real-time\n   geolocation will be highly\
    \ inaccurate for such traffic, since it will\n   at best indicate the location\
    \ of the second translator, which could\n   be very distant from the customer.\n\
    \   In other cases, also outside the ICP's control, IPv6 clients may\n   reach\
    \ the IPv6 Internet via some form of IPv6-in-IPv4 tunnel.  In\n   this case, a\
    \ variety of problems can arise, the most acute of which\n   affect clients connected\
    \ using the Anycast 6to4 solution [RFC3068].\n   Advice on how ICPs may mitigate\
    \ these 6to4 problems is given in\n   Section 4.5. of [RFC6343].  For the benefit\
    \ of all tunneled clients,\n   it is essential to verify that Path MTU Discovery\
    \ works correctly\n   (i.e., the relevant ICMPv6 packets are not blocked) and\
    \ that the\n   server-side TCP implementation correctly supports the Maximum Segment\n\
    \   Size (MSS) negotiation mechanism [RFC2923] for IPv6 traffic.\n   Some ICPs\
    \ have implemented an interim solution to mitigate transition\n   problems by\
    \ limiting the visibility of their AAAA records to users\n   with validated IPv6\
    \ connectivity [RFC6589] (known as \"DNS\n   whitelisting\").  At the time of\
    \ this writing, this solution seems to\n   be passing out of use, being replaced\
    \ by \"DNS blacklisting\" of\n   customer sites known to have problems with IPv6\
    \ connectivity.  In the\n   reverse direction, it is worth being aware that some\
    \ ISPs with\n   significant populations of clients with broken IPv6 setups have\
    \ begun\n   filtering AAAA record lookups by their clients.  None of these\n \
    \  solutions are appropriate in the long term.\n   Another approach taken by some\
    \ ICPs is to offer IPv6-only support via\n   a specific DNS name, e.g., ipv6.example.com,\
    \ if the primary service\n   is www.example.com.  In this case, ipv6.example.com\
    \ would have a AAAA\n   record only.  This has some value for testing purposes\
    \ but is\n   otherwise only of interest to hobbyist users willing to type in\n\
    \   special URLs.\n   There is little an ICP can do to deal with client-side or\
    \ remote ISP\n   deficiencies in IPv6 support, but it is hoped that the \"Happy\n\
    \   Eyeballs\" [RFC6555] approach will improve the ability for clients to\n  \
    \ deal with such problems.\n"
- title: 10.  Content Delivery Networks
  contents:
  - "10.  Content Delivery Networks\n   DNS-based techniques for diverting users to\
    \ Content Delivery Network\n   (CDN) points of presence (POPs) will work for IPv6,\
    \ if AAAA records\n   as well as A records are provided.  In general, the CDN\
    \ should follow\n   the recommendations of this document, especially by operating\
    \ a full\n   dual-stack service at each POP.  Additionally, each POP will need\
    \ to\n   handle IPv6 routing exactly like IPv4, for example, running BGP-4+\n\
    \   [RFC4760].\n   Note that if an ICP supports IPv6 but its external CDN provider\
    \ does\n   not, its clients will continue to use IPv4 and any IPv6-only clients\n\
    \   will have to use a transition solution of some kind.  This is not a\n   desirable\
    \ situation, since the ICP's work to support IPv6 will be\n   wasted.\n   An ICP\
    \ might face a complex situation if its CDN provider supports\n   IPv6 at some\
    \ POPs but not at others.  IPv6-only clients could only be\n   diverted to a POP\
    \ supporting IPv6.  There are also scenarios where a\n   dual-stack client would\
    \ be diverted to a mixture of IPv4 and IPv6\n   POPs for different URLs, according\
    \ to the A and AAAA records provided\n   and the availability of optimizations\
    \ such as \"Happy Eyeballs\".  A\n   related side effect is that copies of the\
    \ same content viewed at the\n   same time via IPv4 and IPv6 may be different,\
    \ due to latency in the\n   underlying data synchronization process used by the\
    \ CDN.  This effect\n   has in fact been observed in the wild for a major social\
    \ network\n   supporting dual stack.  These complications do not affect the\n\
    \   viability of relying on a dual-stack CDN, however.\n   The CDN itself faces\
    \ related complexity: \"As IPv6 rolls out, it's\n   going to roll out in pockets,\
    \ and that's going to make the routing\n   around congestion points that much\
    \ more important but also that much\n   harder,\" stated John Summers of Akamai\
    \ in 2010 [CDN-UPGRADE].\n   A converse situation that might arise is that an\
    \ ICP has not yet\n   started its deployment of IPv6 but finds that its CDN provider\n\
    \   already supports IPv6.  Then, assuming that the CDN provider\n   announces\
    \ appropriate AAAA DNS Resource Records, dual-stack and\n   IPv6-only customers\
    \ will obtain IPv6 access, and the ICP's content\n   may well be delivered to\
    \ them via IPv6.  In normal circumstances,\n   this should create no problems,\
    \ but it is a situation that the ICP\n   and its support staff need to be aware\
    \ of.  In particular, support\n   staff should be given IPv6 connectivity in order\
    \ to be able to\n   investigate any problems that might arise (see Section 4).\n"
- title: 11.  Business Partners
  contents:
  - "11.  Business Partners\n   As noted earlier, it is in an ICP's or ASP's best\
    \ interests that\n   their users have direct IPv6 connectivity, rather than indirect\
    \ IPv4\n   connectivity via double NAT.  If the ICP or ASP has a direct business\n\
    \   relationship with some of their clients, or with the networks that\n   connect\
    \ them to their clients, they are advised to coordinate with\n   those partners\
    \ to ensure that they have a plan to enable IPv6.  They\n   should also verify\
    \ and test that there is first-class IPv6\n   connectivity end-to-end between\
    \ the networks concerned.  This is\n   especially true for implementations that\
    \ require IPv6 support in\n   specialized programs or systems in order for the\
    \ IPv6 support on the\n   ICP/ASP side to be useful.\n"
- title: 12.  Possible Complexities
  contents:
  - "12.  Possible Complexities\n   Some additional considerations come into play\
    \ for some types of\n   complex or distributed sites and applications that an\
    \ ICP may be\n   delivering.  For example, an ICP may have a site spread across\
    \ many\n   hostnames (not all under their control).  Other ICPs may have their\n\
    \   sites or applications distributed across multiple locations for\n   availability,\
    \ scale, or performance.\n   Many modern web sites and applications now use a\
    \ collection of\n   resources and applications, some operated by the ICP and others\
    \ by\n   third parties.  While most clients support sites containing a mixture\n\
    \   of IPv4-only and dual-stack elements, an ICP should track the IPv6\n   availability\
    \ of embedded resources (such as images), as otherwise\n   their site may only\
    \ be partially functional or may have degraded\n   performance for IPv6-only users.\n\
    \   DNS-based load-balancing techniques for diverting users to servers in\n  \
    \ multiple POPs will work for IPv6, if the load balancer supports IPv6\n   and\
    \ if AAAA records are provided.  Depending on the architecture of\n   the load\
    \ balancer, an ICP may need to operate a full dual-stack\n   service at each POP.\
    \  With other architectures, it may be acceptable\n   to initially only have IPv6\
    \ at a subset of locations.  Some\n   architectures will make it preferable for\
    \ IPv6 routing to mirror IPv4\n   routing (for example, running BGP-4+ [RFC4760]\
    \ if appropriate), but\n   this may not always be possible, as IPv6 and IPv4 connectivity\
    \ can be\n   independent.\n   Some complexities may arise when a client supporting\
    \ both IPv4 and\n   IPv6 uses different POPs for each IP version (such as when\
    \ IPv6 is\n   only available in a subset of locations).  There are also scenarios\n\
    \   where a dual-stack client would be diverted to a mixture of IPv4 and\n   IPv6\
    \ POPs for different URLs, according to the A and AAAA records\n   provided and\
    \ the availability of optimizations such as \"Happy\n   Eyeballs\" [RFC6555].\
    \  A related side effect is that copies of the\n   same content viewed at the\
    \ same time via IPv4 and IPv6 may be\n   different, due to latency in the underlying\
    \ data synchronization\n   process used at the application layer.  This effect\
    \ has in fact been\n   observed in the wild for a major social network supporting\
    \ dual\n   stack.\n   Even with a single POP, unexpected behavior may arise if\
    \ a client\n   switches spontaneously between IPv4 and IPv6 as a performance\n\
    \   optimization [RFC6555] or if its IPv6 address changes frequently for\n   privacy\
    \ reasons [RFC4941].  Such changes may affect cookies,\n   geolocation, load balancing,\
    \ and transactional integrity.  Although\n   unexpected changes of client address\
    \ also occur in an IPv4-only\n   environment, they may be more frequent with IPv6.\n"
- title: 13.  Operations and Management
  contents:
  - "13.  Operations and Management\n   There is no doubt that, initially, IPv6 deployment\
    \ will have\n   operational impact, and will also require education and training\
    \ as\n   mentioned in Section 3.  Staff will have to update network elements\n\
    \   such as routers, update configurations, provide information to end\n   users,\
    \ and diagnose new problems.  However, for an enterprise\n   network, there is\
    \ plenty of experience, e.g., on numerous university\n   campuses, showing that\
    \ dual-stack operation is no harder than\n   IPv4-only in the steady state.\n\
    \   Whatever management, monitoring, and logging are performed for IPv4\n   are\
    \ also needed for IPv6.  Therefore, all products and tools used for\n   these\
    \ purposes must be updated to fully support IPv6 management data.\n   It is important\
    \ to verify that tools have been fully updated to\n   support 128-bit addresses\
    \ entered and displayed in hexadecimal format\n   [RFC5952].  Since an IPv6 network\
    \ may operate with more than one IPv6\n   prefix and therefore more than one address\
    \ per host, the tools must\n   deal with this as a normal situation.  This includes\
    \ any address\n   management tool in use (see Section 5.1) as well as tools used\
    \ for\n   creating DHCP and DNS configurations.  There is significant overlap\n\
    \   here with the tools involved in site renumbering [RFC6879].\n   At an early\
    \ stage of IPv6 deployment, it is likely that IPv6 will be\n   mainly managed\
    \ via IPv4 transport.  This allows network management\n   systems to test for\
    \ dependencies between IPv4 and IPv6 management\n   data.  For example, will reports\
    \ mixing IPv4 and IPv6 addresses\n   display correctly?\n   In a second phase,\
    \ IPv6 transport should be used to manage the\n   network.  Note that it will\
    \ also be necessary for an ICP to provide\n   IPv6 connectivity for its operations\
    \ and support staff, even when\n   working remotely.  As far as possible, mutual\
    \ dependency between IPv4\n   and IPv6 should be avoided, for both the management\
    \ data and the\n   transport.  Failure of one should not cause a failure of the\
    \ other.\n   One precaution to avoid this would be for network management systems\n\
    \   to be dual-stacked.  It would then be possible to use IPv4\n   connectivity\
    \ to repair IPv6 configurations, and vice versa.\n   Dual stack, while necessary,\
    \ does have management scaling and\n   overhead considerations.  As noted earlier,\
    \ the long-term goal is to\n   move to single-stack IPv6, when the network and\
    \ its customers can\n   support it.  This is an additional reason why mutual dependency\n\
    \   between the address families should be avoided in the management\n   system\
    \ in particular; a hidden dependency on IPv4 that had been\n   forgotten for many\
    \ years would be highly inconvenient.  In\n   particular, a management tool that\
    \ manages IPv6 but itself runs only\n   over IPv4 would prove disastrous on the\
    \ day that IPv4 is switched\n   off.\n   An ICP should ensure that any end-to-end\
    \ availability monitoring\n   systems are updated to monitor dual-stacked servers\
    \ over both IPv4\n   and IPv6.  A particular challenge here may be monitoring\
    \ systems\n   relying on DNS names, as this may result in monitoring only one\
    \ of\n   IPv4 or IPv6, resulting in a loss of visibility to failures in\n   network\
    \ connectivity over either address family.\n   As mentioned above, it will also\
    \ be necessary for an ICP to provide\n   IPv6 connectivity for its operations\
    \ and support staff, even when\n   working remotely.\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   While many ICPs may still be in the process\
    \ of experimenting with and\n   configuring IPv6, there is mature malware in the\
    \ wild that will\n   launch attacks over IPv6.  For example, if a AAAA DNS record\
    \ is added\n   for a hostname, malware using client OS libraries may automatically\n\
    \   switch from attacking that hostname over IPv4 to attacking that\n   hostname\
    \ over IPv6.  As a result, it is crucial that firewalls and\n   other network\
    \ security appliances protecting servers support IPv6 and\n   have rules tested\
    \ and configured.\n   Security experience with IPv4 should be used as a guide\
    \ as to the\n   threats that may exist in IPv6, but they should not be assumed\
    \ to be\n   equally likely nor should they be assumed to be the only threats that\n\
    \   could exist in IPv6.  However, essentially every threat that exists\n   for\
    \ IPv4 exists or will exist for IPv6, to a greater or lesser\n   extent.  It is\
    \ essential to update firewalls, intrusion detection\n   systems, denial-of-service\
    \ precautions, and security auditing\n   technology to fully support IPv6.  Needless\
    \ to say, it is also\n   essential to turn on well-known security mechanisms such\
    \ as DNS\n   Security and DHCPv6 Authentication.  Otherwise, IPv6 will become\
    \ an\n   attractive target for attackers.\n   When multiple PA prefixes are in\
    \ use as mentioned in Section 5.1,\n   firewall rules must allow for all valid\
    \ prefixes and must be set up\n   to work as intended even if packets are sent\
    \ via one ISP but return\n   packets arrive via another.\n   Performance and memory\
    \ size aspects of dual-stack firewalls must be\n   considered (as discussed for\
    \ routers in Section 5.2).\n   In a dual-stack operation, there may be a risk\
    \ of cross-contamination\n   between the two protocols.  For example, a successful\
    \ IPv4-based\n   denial-of-service attack might also deplete resources needed\
    \ by the\n   IPv6 service, or vice versa.  This risk strengthens the argument\
    \ that\n   IPv6 security must be up to the same level as IPv4.  Risks can also\n\
    \   occur with dual-stack Virtual Private Network (VPN) solutions\n   [VPN-LEAKAGES].\n\
    \   A general overview of techniques to protect an IPv6 network against\n   external\
    \ attacks is given in [RFC4864].  Assuming that an ICP has\n   native IPv6 connectivity,\
    \ it is advisable to block incoming\n   IPv6-in-IPv4 tunnel traffic using IPv4\
    \ protocol type 41.  Outgoing\n   traffic of this kind should be blocked, except\
    \ for the case noted in\n   Section 4.5 of [RFC6343].  ICMPv6 traffic should only\
    \ be blocked in\n   accordance with [RFC4890]; in particular, Packet Too Big messages,\n\
    \   which are essential for Path MTU Discovery, must not be blocked.\n   Brute-force\
    \ scanning attacks to discover the existence of hosts are\n   much less likely\
    \ to succeed for IPv6 than for IPv4 [RFC5157].\n   However, this should not lull\
    \ an ICP into a false sense of security,\n   as various naming or addressing conventions\
    \ can result in IPv6\n   address space being predictable or guessable.  In the\
    \ extreme case,\n   IPv6 hosts might be configured with interface identifiers\
    \ that are\n   very easy to guess; for example, hosts or subnets manually numbered\n\
    \   with consecutive interface identifiers starting from \"1\" would be\n   much\
    \ easier to guess.  Such practices should be avoided, and other\n   useful precautions\
    \ are discussed in [RFC6583].  Also, attackers might\n   find IPv6 addresses in\
    \ logs, packet traces, DNS records (including\n   reverse records), or elsewhere.\n\
    \   Protection against rogue Router Advertisements (RA Guard) should also\n  \
    \ be considered [RFC6105].\n   Transport Layer Security version 1.2 [RFC5246]\
    \ and its predecessors\n   work correctly with TCP over IPv6, meaning that HTTPS-based\
    \ security\n   solutions are immediately applicable.  The same should apply to\
    \ any\n   other transport-layer or application-layer security techniques.\n  \
    \ If an ASP uses IPsec [RFC4301] and the Internet Key Exchange (IKE)\n   protocol\
    \ [RFC5996] in any way to secure connections with clients,\n   these too are fully\
    \ applicable to IPv6, but only if the software\n   stack at each end has been\
    \ appropriately updated.\n"
- title: 15.  Acknowledgements
  contents:
  - "15.  Acknowledgements\n   Valuable contributions were made by Erik Kline.  Useful\
    \ comments were\n   received from Tore Anderson, Cameron Byrne, Tassos Chatzithomaoglou,\n\
    \   Wesley George, Deng Hui, Joel Jaeggli, Roger Jorgensen, Victor\n   Kuarsingh,\
    \ Bing Liu, Trent Lloyd, John Mann, Michael Newbery, Erik\n   Nygren, Arturo Servin,\
    \ Mark Smith, and other participants in the\n   V6OPS working group.\n   Brian\
    \ Carpenter was a visitor at the Computer Laboratory, Cambridge\n   University\
    \ during part of this work.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [RFC2080]  Malkin, G. and R. Minnear, \"RIPng\
    \ for IPv6\", RFC 2080,\n              January 1997.\n   [RFC2460]  Deering, S.\
    \ and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\"\
    , RFC 2460, December 1998.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J.,\
    \ Frystyk, H.,\n              Masinter, L., Leach, P., and T. Berners-Lee, \"\
    Hypertext\n              Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n\
    \   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n     \
    \         Defeating Denial of Service Attacks which employ IP Source\n       \
    \       Address Spoofing\", BCP 38, RFC 2827, May 2000.\n   [RFC3007]  Wellington,\
    \ B., \"Secure Domain Name System (DNS) Dynamic\n              Update\", RFC 3007,\
    \ November 2000.\n   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins,\
    \ C.,\n              and M. Carney, \"Dynamic Host Configuration Protocol for\n\
    \              IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3596]  Thomson, S.,\
    \ Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS Extensions to\
    \ Support IP Version 6\", RFC 3596,\n              October 2003.\n   [RFC3704]\
    \  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n             \
    \ Networks\", BCP 84, RFC 3704, March 2004.\n   [RFC4193]  Hinden, R. and B. Haberman,\
    \ \"Unique Local IPv6 Unicast\n              Addresses\", RFC 4193, October 2005.\n\
    \   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n        \
    \      Internet Protocol\", RFC 4301, December 2005.\n   [RFC4760]  Bates, T.,\
    \ Chandra, R., Katz, D., and Y. Rekhter,\n              \"Multiprotocol Extensions\
    \ for BGP-4\", RFC 4760,\n              January 2007.\n   [RFC4862]  Thomson,\
    \ S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address Autoconfiguration\"\
    , RFC 4862, September 2007.\n   [RFC4941]  Narten, T., Draves, R., and S. Krishnan,\
    \ \"Privacy\n              Extensions for Stateless Address Autoconfiguration\
    \ in\n              IPv6\", RFC 4941, September 2007.\n   [RFC5246]  Dierks, T.\
    \ and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.2\", RFC 5246, August 2008.\n   [RFC5308]  Hopps, C., \"Routing IPv6\
    \ with IS-IS\", RFC 5308,\n              October 2008.\n   [RFC5340]  Coltun,\
    \ R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n              for IPv6\",\
    \ RFC 5340, July 2008.\n   [RFC5838]  Lindem, A., Mirtorabi, S., Roy, A., Barnes,\
    \ M., and R.\n              Aggarwal, \"Support of Address Families in OSPFv3\"\
    ,\n              RFC 5838, April 2010.\n   [RFC5952]  Kawamura, S. and M. Kawashima,\
    \ \"A Recommendation for IPv6\n              Address Text Representation\", RFC\
    \ 5952, August 2010.\n   [RFC5985]  Barnes, M., \"HTTP-Enabled Location Delivery\
    \ (HELD)\",\n              RFC 5985, September 2010.\n   [RFC5996]  Kaufman, C.,\
    \ Hoffman, P., Nir, Y., and P. Eronen,\n              \"Internet Key Exchange\
    \ Protocol Version 2 (IKEv2)\",\n              RFC 5996, September 2010.\n   [RFC6434]\
    \  Jankiewicz, E., Loughney, J., and T. Narten, \"IPv6 Node\n              Requirements\"\
    , RFC 6434, December 2011.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [CDN-UPGRADE]\n              Marsan, C., \"\
    Akamai: Why our IPv6 upgrade is harder than\n              Google's\", Network\
    \ World, September 2010, <http://\n              www.networkworld.com/news/2010/091610-akamai-ipv6.html>.\n\
    \   [IPv6-CE-REQS]\n              Singh, H., Beebee, W., Donley, C., and B. Stark,\
    \ \"Basic\n              Requirements for IPv6 Customer Edge Routers\", Work\n\
    \              in Progress, October 2012.\n   [IPv6-NETWORK-DESIGN]\n        \
    \      Matthews, P., \"Design Choices for IPv6 Networks\", Work\n            \
    \  in Progress, February 2013.\n   [MULTIHOMING-WITHOUT-NAT]\n              Troan,\
    \ O., Ed., Miles, D., Matsushima, S., Okimoto, T.,\n              and D. Wing,\
    \ \"IPv6 Multihoming without Network Address\n              Translation\", Work\
    \ in Progress, February 2012.\n   [RFC1912]  Barr, D., \"Common DNS Operational\
    \ and Configuration\n              Errors\", RFC 1912, February 1996.\n   [RFC2081]\
    \  Malkin, G., \"RIPng Protocol Applicability Statement\",\n              RFC\
    \ 2081, January 1997.\n   [RFC2923]  Lahey, K., \"TCP Problems with Path MTU Discovery\"\
    ,\n              RFC 2923, September 2000.\n   [RFC3068]  Huitema, C., \"An Anycast\
    \ Prefix for 6to4 Relay Routers\",\n              RFC 3068, June 2001.\n   [RFC4038]\
    \  Shin, M-K., Hong, Y-G., Hagino, J., Savola, P., and E.\n              Castro,\
    \ \"Application Aspects of IPv6 Transition\",\n              RFC 4038, March 2005.\n\
    \   [RFC4192]  Baker, F., Lear, E., and R. Droms, \"Procedures for\n         \
    \     Renumbering an IPv6 Network without a Flag Day\", RFC 4192,\n          \
    \    September 2005.\n   [RFC4864]  Van de Velde, G., Hain, T., Droms, R., Carpenter,\
    \ B., and\n              E. Klein, \"Local Network Protection for IPv6\", RFC\
    \ 4864,\n              May 2007.\n   [RFC4890]  Davies, E. and J. Mohacsi, \"\
    Recommendations for Filtering\n              ICMPv6 Messages in Firewalls\", RFC\
    \ 4890, May 2007.\n   [RFC5157]  Chown, T., \"IPv6 Implications for Network Scanning\"\
    ,\n              RFC 5157, March 2008.\n   [RFC5375]  Van de Velde, G., Popoviciu,\
    \ C., Chown, T., Bonness, O.,\n              and C. Hahn, \"IPv6 Unicast Address\
    \ Assignment\n              Considerations\", RFC 5375, December 2008.\n   [RFC6105]\
    \  Levy-Abegnoli, E., Van de Velde, G., Popoviciu, C., and J.\n              Mohacsi,\
    \ \"IPv6 Router Advertisement Guard\", RFC 6105,\n              February 2011.\n\
    \   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n   \
    \           NAT64: Network Address and Protocol Translation from IPv6\n      \
    \        Clients to IPv4 Servers\", RFC 6146, April 2011.\n   [RFC6180]  Arkko,\
    \ J. and F. Baker, \"Guidelines for Using IPv6\n              Transition Mechanisms\
    \ during IPv6 Deployment\", RFC 6180,\n              May 2011.\n   [RFC6296] \
    \ Wasserman, M. and F. Baker, \"IPv6-to-IPv6 Network Prefix\n              Translation\"\
    , RFC 6296, June 2011.\n   [RFC6343]  Carpenter, B., \"Advisory Guidelines for\
    \ 6to4 Deployment\",\n              RFC 6343, August 2011.\n   [RFC6555]  Wing,\
    \ D. and A. Yourtchenko, \"Happy Eyeballs: Success with\n              Dual-Stack\
    \ Hosts\", RFC 6555, April 2012.\n   [RFC6583]  Gashinsky, I., Jaeggli, J., and\
    \ W. Kumari, \"Operational\n              Neighbor Discovery Problems\", RFC 6583,\
    \ March 2012.\n   [RFC6589]  Livingood, J., \"Considerations for Transitioning\
    \ Content\n              to IPv6\", RFC 6589, April 2012.\n   [RFC6866]  Carpenter,\
    \ B. and S. Jiang, \"Problem Statement for\n              Renumbering IPv6 Hosts\
    \ with Static Addresses in Enterprise\n              Networks\", RFC 6866, February\
    \ 2013.\n   [RFC6879]  Jiang, S., Liu, B., and B. Carpenter, \"IPv6 Enterprise\n\
    \              Network Renumbering Scenarios, Considerations, and\n          \
    \    Methods\", RFC 6879, February 2013.\n   [VPN-LEAKAGES]\n              Gont,\
    \ F., \"Virtual Private Network (VPN) traffic leakages\n              in dual-stack\
    \ hosts/networks\", Work in Progress,\n              December 2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter\n   Department of Computer Science\n \
    \  University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n  \
    \ EMail: brian.e.carpenter@gmail.com\n   Sheng Jiang\n   Huawei Technologies Co.,\
    \ Ltd\n   Q14, Huawei Campus\n   No. 156 Beiqing Road\n   Hai-Dian District, Beijing\
    \  100095\n   P.R. China\n   EMail: jiangsheng@huawei.com\n"
