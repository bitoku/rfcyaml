- title: __initial_text__
  contents:
  - '               Simple Internet Protocol Plus White Paper

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document was submitted to the IETF IPng area in response to\
    \ RFC\n   1550.  Publication of this document does not imply acceptance by the\n\
    \   IPng area of any ideas expressed within.  Comments should be\n   submitted\
    \ to the author and/or the sipp@sunroof.eng.sun.com mailing\n   list.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This white paper presents an overview of the Simple Internet\
    \ Protocol\n   plus (SIPP) which is one of the candidates being considered in\
    \ the\n   Internet Engineering Task Force (IETF) for the next version of the\n\
    \   Internet Protocol (the current version is usually referred to as\n   IPv4).\
    \  This white paper is not intended to be a detailed\n   presentation of all of\
    \ the features and motivation for SIPP, but is\n   intended to give the reader\
    \ an overview of the proposal.  It is also\n   not intended that this be an implementation\
    \ specification, but given\n   the simplicity of the central core of SIPP, an\
    \ implementor familiar\n   with IPv4 could probably construct a basic working\
    \ SIPP\n   implementation from reading this overview.\n   SIPP is a new version\
    \ of IP which is designed to be an evolutionary\n   step from IPv4.  It is a natural\
    \ increment to IPv4.  It can be\n   installed as a normal software upgrade in\
    \ internet devices and is\n   interoperable with the current IPv4.  Its deployment\
    \ strategy was\n   designed to not have any \"flag\" days.  SIPP is designed to\
    \ run well\n   on high performance networks (e.g., ATM) and at the same time is\n\
    \   still efficient for low bandwidth networks (e.g., wireless).  In\n   addition,\
    \ it provides a platform for new internet functionality that\n   will be required\
    \ in the near future.\n   This white paper describes the work of IETF SIPP working\
    \ group.\n   Several individuals deserve specific recognition.  These include\n\
    \   Steve Deering, Paul Francis, Dave Crocker, Bob Gilligan, Bill\n   Simpson,\
    \ Ran Atkinson, Bill Fink, Erik Nordmark, Christian Huitema,\n   Sue Thompson,\
    \ and Ramesh Govindan.\n"
- title: 2. Key Issues for the Next Generation of IP
  contents:
  - "2. Key Issues for the Next Generation of IP\n   There are several key issues\
    \ that should be used in the evaluation of\n   any next generation internet protocol.\
    \  Some are very\n   straightforward.  For example the new protocol must be able\
    \ to\n   support large global internetworks.  Others are less obvious.  There\n\
    \   must be a clear way to transition the current installed base of IP\n   systems.\
    \  It doesn't matter how good a new protocol is if there isn't\n   a practical\
    \ way to transition the current operational systems running\n   IPv4 to the new\
    \ protocol.\n"
- title: 2.1 Growth
  contents:
  - "2.1 Growth\n   Growth is the basic issue which caused there to be a need for\
    \ a next\n   generation IP.  If anything is to be learned from our experience\
    \ with\n   IPv4 it is that the addressing and routing must be capable of\n   handling\
    \ reasonable scenarios of future growth.  It is important that\n   we have an\
    \ understanding of the past growth and where the future\n   growth will come from.\n\
    \   Currently IPv4 serves what could be called the computer market.  The\n   computer\
    \ market has been the driver of the growth of the Internet.\n   It comprises the\
    \ current Internet and countless other smaller\n   internets which are not connected\
    \ to the Internet.  Its focus is to\n   connect computers together in the large\
    \ business, government, and\n   university education markets.  This market has\
    \ been growing at an\n   exponential rate.  One measure of this is that the number\
    \ of networks\n   in current Internet (23,494 as of 1/28/94) is doubling approximately\n\
    \   every 12 months.  The computers which are used at the endpoints of\n   internet\
    \ communications range from PC's to Supercomputers.  Most are\n   attached to\
    \ Local Area Networks (LANs) and the vast majority are not\n   mobile.\n   The\
    \ next phase of growth will probably not be driven by the computer\n   market.\
    \  While the computer market will continue to grow at\n   significant rates due\
    \ to expansion into other areas such as schools\n   (elementary through high school)\
    \ and small businesses, it is doubtful\n   it will continue to grow at an exponential\
    \ rate.  What is likely to\n   happen is that other kinds of markets will develop.\
    \  These markets\n   will fall into several areas.  They all have the characteristic\
    \ that\n   they are extremely large.  They also bring with them a new set of\n\
    \   requirements which were not as evident in the early stages of IPv4\n   deployment.\
    \  The new markets are also likely to happen in parallel\n   with other.  It may\
    \ turn out that we will look back on the last ten\n   years of Internet growth\
    \ as the time when the Internet was small and\n   only doubling every year.  The\
    \ challenge for an IPng is to provide a\n   solution which solves todays problems\
    \ and is attractive in these\n   emerging markets.\n   Nomadic personal computing\
    \ devices seem certain to become ubiquitous\n   as their prices drop and their\
    \ capabilities increase.  A key\n   capability is that they will be networked.\
    \  Unlike the majority of\n   todays networked computers they will support a variety\
    \ of types of\n   network attachments.  When disconnected they will use RF wireless\n\
    \   networks, when used in networked facilities they will use infrared\n   attachment,\
    \ and when docked they will use physical wires.  This makes\n   them an ideal\
    \ candidate for internetworking technology as they will\n   need a common protocol\
    \ which can work over a variety of physical\n   networks.  These types of devices\
    \ will become consumer devices and\n   will replace the current generation of\
    \ cellular phones, pagers, and\n   personal digital assistants.  In addition to\
    \ the obvious requirement\n   of an internet protocol which can support large\
    \ scale routing and\n   addressing, they will require an internet protocol which\
    \ imposes a\n   low overhead and supports auto configuration and mobility as a\
    \ basic\n   element.  The nature of nomadic computing requires an internet\n \
    \  protocol to have built in authentication and confidentiality.  It\n   also\
    \ goes without saying that these devices will need to communicate\n   with the\
    \ current generation of computers.  The requirement for low\n   overhead comes\
    \ from the wireless media.  Unlike LAN's which will be\n   very high speed, the\
    \ wireless media will be several orders of\n   magnitude slower due to constraints\
    \ on available frequencies,\n   spectrum allocation, and power consumption.\n\
    \   Another market is networked entertainment.  The first signs of this\n   emerging\
    \ market are the proposals being discussed for 500 channels of\n   television,\
    \ video on demand, etc.  This is clearly a consumer market.\n   The possibility\
    \ is that every television set will become an Internet\n   host.  As the world\
    \ of digital high definition television approaches,\n   the differences between\
    \ a computer and a television will diminish.\n   As in the previous market, this\
    \ market will require an Internet\n   protocol which supports large scale routing\
    \ and addressing, and auto\n   configuration.  This market also requires a protocol\
    \ suite which\n   imposes the minimum overhead to get the job done.  Cost will\
    \ be the\n   major factor in the selection of a technology to use.\n   Another\
    \ market which could use the next generation IP is device\n   control.  This consists\
    \ of the control of everyday devices such as\n   lighting equipment, heating and\
    \ cooling equipment, motors, and other\n   types of equipment which are currently\
    \ controlled via analog switches\n   and in aggregate consume considerable amounts\
    \ of power.  The size of\n   this market is enormous and requires solutions which\
    \ are simple,\n   robust, easy to use, and very low cost.\n   The challenge for\
    \ the IETF in the selection of an IPng is to pick a\n   protocol which meets today's\
    \ requirements and also matches the\n   requirements of these emerging markets.\
    \  These markets will happen\n   with or without an IETF IPng.  If the IETF IPng\
    \ is a good match for\n   these new markets it is likely to be used.  If not,\
    \ these markets\n   will develop something else.  They will not wait for an IETF\n\
    \   solution.  If this should happen it is probable that because of the\n   size\
    \ and scale of the new markets the IETF protocol would be\n   supplanted.  If\
    \ the IETF IPng is not appropriate for use in these\n   markets, it is also probable\
    \ that they will each develop their own\n   protocols, perhaps proprietary.  These\
    \ new protocols would not\n   interoperate with each other.  The opportunity for\
    \ the IETF is to\n   select an IPng which has a reasonable chance to be used in\
    \ these\n   emerging markets.  This would have the very desirable outcome of\n\
    \   creating an immense, interoperable, world-wide information\n   infrastructure\
    \ created with open protocols.  The alternative is a\n   world of disjoint networks\
    \ with protocols controlled by individual\n   vendors.\n"
- title: 2.2. Transition
  contents:
  - "2.2. Transition\n   At some point in the next three to seven years the Internet\
    \ will\n   require a deployed new version of the Internet protocol.  Two factors\n\
    \   are driving this: routing and addressing.  Global internet routing\n   based\
    \ on the on 32-bit addresses of IPv4 is becoming increasingly\n   strained.  IPv4\
    \ address do not provide enough flexibility to\n   construct efficient hierarchies\
    \ which can be aggregated.  The\n   deployment of Classless Inter-Domain Routing\
    \ [CIDR] is extending the\n   life time of IPv4 routing routing by a number of\
    \ years, the effort to\n   manage the routing will continue to increase.  Even\
    \ if the IPv4\n   routing can be scaled to support a full IPv4 Internet, the Internet\n\
    \   will eventually run out of network numbers.  There is no question\n   that\
    \ an IPng is needed, but only a question of when.\n   The challenge for an IPng\
    \ is for its transition to be complete before\n   IPv4 routing and addressing\
    \ break.  The transition will be much\n   easier if IPv4 address are still globally\
    \ unique.  The two transition\n   requirements which are the most important are\
    \ flexibility of\n   deployment and the ability for IPv4 hosts to communicate\
    \ with IPng\n   hosts.  There will be IPng-only hosts, just as there will be IPv4-\n\
    \   only hosts.  The capability must exist for IPng-only hosts to\n   communicate\
    \ with IPv4-only hosts globally while IPv4 addresses are\n   globally unique.\n\
    \   The deployment strategy for an IPng must be as flexible as possible.\n   The\
    \ Internet is too large for any kind of controlled rollout to be\n   successful.\
    \  The importance of flexibility in an IPng and the need\n   for interoperability\
    \ between IPv4 and IPng was well stated in a\n   message to the sipp mailing list\
    \ by Bill Fink, who is responsible for\n   a portion of NASA's operational internet.\
    \  In his message he said:\n      \"Being a network manager and thereby representing\
    \ the interests of\n      a significant number of users, from my perspective it's\
    \ safe to\n      say that the transition and interoperation aspects of any IPng\
    \ is\n      *the* key first element, without which any other significant\n   \
    \   advantages won't be able to be integrated into the user's network\n      environment.\
    \  I also don't think it wise to think of the\n      transition as just a painful\
    \ phase we'll have to endure en route\n      to a pure IPng environment, since\
    \ the transition/coexistence\n      period undoubtedly will last at least a decade\
    \ and may very well\n      continue for the entire lifetime of IPng, until it's\
    \ replaced with\n      IPngng and a new transition.  I might wish it was otherwise\
    \ but I\n      fear they are facts of life given the immense installed base.\n\
    \      \"Given this situation, and the reality that it won't be feasible\n   \
    \   to coordinate all the infrastructure changes even at the national\n      and\
    \ regional levels, it is imperative that the transition\n      capabilities support\
    \ the ability to deploy the IPng in the\n      piecemeal fashion...  with no requirement\
    \ to need to coordinate\n      local changes with other changes elsewhere in the\
    \ Internet...\n      \"I realize that support for the transition and coexistence\n\
    \      capabilities may be a major part of the IPng effort and may cause\n   \
    \   some headaches for the designers and developers, but I think it is\n     \
    \ a duty that can't be shirked and the necessary price that must be\n      paid\
    \ to provide as seamless an environment as possible to the end\n      user and\
    \ his basic network services such as e-mail, ftp, gopher,\n      X-Window clients,\
    \ etc...\n      \"The bottom line for me is that we must have interoperability\n\
    \      during the extended transition period for the base IPv4\n      functionality...\"\
    \n   Another way to think about the requirement for compatibility with\n   IPv4\
    \ is to look at other product areas.  In the product world,\n   backwards compatability\
    \ is very important.  Vendors who do not\n   provide backward compatibility for\
    \ their customers usually find they\n   do not have many customers left.  For\
    \ example, chip makers put\n   considerable effort into making sure that new versions\
    \ of their\n   processor always run all of the software that ran on the previous\n\
    \   model.  It is unlikely that Intel would develop a new processor in\n   the\
    \ X86 family that did not run DOS and the tens of thousands of\n   applications\
    \ which run on the current versions of X86's.\n   Operating system vendors go\
    \ to great lengths to make sure new\n   versions of their operating systems are\
    \ binary compatible with their\n   old version.  For example the labels on most\
    \ PC or MAC software\n   usually indicate that they require OS version XX or greater.\
    \  It\n   would be foolish for Microsoft come out with a new version of Windows\n\
    \   which did not run the applications which ran on the previous version.\n  \
    \ Microsoft even provides the ability for windows applications to run\n   on their\
    \ new OS NT.  This is an important feature.  They understand\n   that it was very\
    \ important to make sure that the applications which\n   run on Windows also run\
    \ on NT.\n   The same requirement is also true for IPng.  The Internet has a large\n\
    \   installed base.  Features need to be designed into an IPng to make\n   the\
    \ transition as easy as possible.  As with processors and operating\n   systems,\
    \ it must be backwards compatible with IPv4.  Other protocols\n   have tried to\
    \ replace TCP/IP, for example XTP and OSI.  One element\n   in their failure to\
    \ reach widespread acceptance was that neither had\n   any transition strategy\
    \ other than running in parallel (sometimes\n   called dual stack).  New features\
    \ alone are not adequate to motivate\n   users to deploy new protocols.  IPng\
    \ must have a great transition\n   strategy and new features.\n"
- title: 3. History of the SIPP Effort
  contents:
  - "3. History of the SIPP Effort\n   The SIPP working group represents the evolution\
    \ of three different\n   IETF working groups focused on developing an IPng.  The\
    \ first was\n   called IP Address Encapsulation (IPAE) and was chaired by Dave\n\
    \   Crocker and Robert Hinden.  It proposed extensions to IPv4 which\n   would\
    \ carry larger addresses.  Much of its work was focused on\n   developing transition\
    \ mechanisms.\n   Somewhat later Steve Deering proposed a new protocol evolved\
    \ from\n   IPv4 called the Simple Internet Protocol (SIP).  A working group was\n\
    \   formed to work on this proposal which was chaired by Steve Deering\n   and\
    \ Christian Huitema.  SIP had 64-bit addresses, a simplified\n   header, and options\
    \ in separate extension headers.  After lengthly\n   interaction between the two\
    \ working groups and the realization that\n   IPAE and SIP had a number of common\
    \ elements and the transition\n   mechanisms developed for IPAE would apply to\
    \ SIP, the groups decided\n   to merge and concentrate their efforts.  The chairs\
    \ of the new SIP\n   working group were Steve Deering and Robert Hinden.\n   In\
    \ parallel to SIP, Paul Francis (formerly Paul Tsuchiya) had founded\n   a working\
    \ group to develop the \"P\" Internet Protocol (Pip).  Pip was\n   a new internet\
    \ protocol based on a new architecture.  The motivation\n   behind Pip was that\
    \ the opportunity for introducing a new internet\n   protocol does not come very\
    \ often and given that opportunity\n   important new features should be introduced.\
    \  Pip supported variable\n   length addressing in 16-bit units, separation of\
    \ addresses from\n   identifiers, support for provider selection, mobility, and\
    \ efficient\n   forwarding.  It included a transition scheme similar to IPAE.\n\
    \   After considerable discussion among the leaders of the Pip and SIP\n   working\
    \ groups, they came to realize that the advanced features in\n   Pip could be\
    \ accomplished in SIP without changing the base SIP\n   protocol as well as keeping\
    \ the IPAE transition mechanisms.  In\n   essence it was possible to keep the\
    \ best features of each protocol.\n   Based on this the groups decided to merge\
    \ their efforts.  The new\n   protocol was called Simple Internet Protocol Plus\
    \ (SIPP).  The chairs\n   of the merged working group are Steve Deering, Paul\
    \ Francis, and\n   Robert Hinden.\n"
- title: 4. SIPP Overview
  contents:
  - "4. SIPP Overview\n   SIPP is a new version of the Internet Protocol, designed\
    \ as a\n   successor to IP version 4 [IPV4].  SIPP is assigned IP version number\n\
    \   6.\n   SIPP was designed to take an evolutionary step from IPv4.  It was not\n\
    \   a design goal to take a radical step away from IPv4.  Functions which\n  \
    \ work in IPv4 were kept in SIPP.  Functions which didn't work were\n   removed.\
    \  The changes from IPv4 to SIPP fall primarily into the\n   following categories:\n\
    \      o  Expanded Routing and Addressing Capabilities\n        SIPP increases\
    \ the IP address size from 32 bits to 64 bits, to\n        support more levels\
    \ of addressing hierarchy and a much greater\n        number of addressable nodes.\
    \  SIPP addressing can be further\n        extended, in units of 64 bits, by a\
    \ facility equivalent to\n        IPv4's Loose Source and Record Route option,\
    \ in combination\n        with a new address type called \"cluster addresses\"\
    \ which\n        identify topological regions rather than individual nodes.\n\
    \        The scaleability of multicast routing is improved by adding\n       \
    \ a \"scope\" field to multicast addresses.\n     o Header Format Simplification\n\
    \        Some IPv4 header fields have been dropped or made optional, to\n    \
    \    reduce the common-case processing cost of packet handling and to\n      \
    \  keep the bandwidth cost of the SIPP header almost as low as that\n        of\
    \ IPv4, despite the increased size of the addresses.  The basic\n        SIPP\
    \ header is only four bytes longer than IPv4.\n     o Improved Support for Options\n\
    \        Changes in the way IP header options are encoded allows for more\n  \
    \      efficient forwarding, less stringent limits on the length of\n        options,\
    \ and greater flexibility for introducing new options in\n        the future.\n\
    \     o Quality-of-Service Capabilities\n        A new capability is added to\
    \ enable the labeling of packets\n        belonging to particular traffic \"flows\"\
    \ for which the sender\n        requests special handling, such as non-default\
    \ quality of\n        service or \"real-time\" service.\n     o Authentication\
    \ and Privacy Capabilities\n        SIPP includes the definition of extensions\
    \ which provide support\n        for authentication, data integrity, and confidentiality.\
    \  This\n        is included as a basic element of SIPP.\n   The SIPP protocol\
    \ consists of two parts, the basic SIPP header and\n   SIPP Options.\n"
- title: 4.1  SIPP Header Format
  contents:
  - "4.1  SIPP Header Format\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |Version|                       Flow Label                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \         Payload Length        |  Payload Type |   Hop Limit   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +                         Source Address                        +\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   +                      Destination Address                      +\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Version              4-bit Internet Protocol version number = 6.\n    \
    \  Flow Label           28-bit field.  See SIPP Quality of Service\n         \
    \                  section.\n      Payload Length       16-bit unsigned integer.\
    \  Length of payload,\n                           i.e., the rest of the packet\
    \ following the\n                           SIPP header, in octets.\n      Payload\
    \ Type         8-bit selector.  Identifies the type of\n                     \
    \      header immediately following the SIPP\n                           header.\
    \  Uses the same values as the IPv4\n                           Protocol field\
    \ [STD 2, RFC 1700].\n      Hop Limit            8-bit unsigned integer.  Decremented\
    \ by 1\n                           by each node that forwards the packet.\n  \
    \                         The packet is discarded if Hop Limit is\n          \
    \                 decremented to zero.\n      Source Address       64 bits.  An\
    \ address of the initial sender of\n                           the packet.  See\
    \ [ROUT] for details.\n      Destination Address  64 bits.  An address of the\
    \ intended\n                           recipient of the packet (possibly not the\n\
    \                           ultimate recipient, if an optional Routing\n     \
    \                      Header is present).\n"
- title: 4.2 SIPP Options
  contents:
  - "4.2 SIPP Options\n   SIPP includes an improved option mechanism over IPv4.  SIPP\
    \ options\n   are placed in separate headers that are located between the SIPP\n\
    \   header and the transport-layer header in a packet.  Most SIPP option\n   headers\
    \ are not examined or processed by any router along a packet's\n   delivery path\
    \ until it arrives at its final destination.  This\n   facilitates a major improvement\
    \ in router performance for packets\n   containing options. In IPv4 the presence\
    \ of any options requires the\n   router to examine all options.  The other improvement\
    \ is that unlike\n   IPv4, SIPP options can be of arbitrary length and the total\
    \ amount of\n   options carried in a packet is not limited to 40 bytes.  This\
    \ feature\n   plus the manner in which they are processed, permits SIPP options\
    \ to\n   be used for functions which were not practical in IPv4.  A good\n   example\
    \ of this is the SIPP Authentication and Security Encapsulation\n   options.\n\
    \   In order to improve the performance when handling subsequent option\n   headers\
    \ and the transport protocol which follows, SIPP options are\n   always an integer\
    \ multiple of 8 octets long, in order to retain this\n   alignment for subsequent\
    \ headers.\n   The SIPP option headers which are currently defined are:\n    \
    \ Option                     Function\n     ---------------            ---------------------------------------\n\
    \     Routing                    Extended Routing (like IPv4 loose source\n  \
    \                              route)\n     Fragmentation              Fragmentation\
    \ and Reassembly\n     Authentication             Integrity and Authentication\n\
    \     Security Encapsulation     Confidentiality\n     Hop-by-Hop Option     \
    \     Special options which require hop by hop\n                             \
    \   processing\n"
- title: 4.3 SIPP Addressing
  contents:
  - "4.3 SIPP Addressing\n   SIPP addresses are 64-bits long and are identifiers for\
    \ individual\n   nodes and sets of nodes.  There are three types of SIPP addresses.\n\
    \   These are unicast, cluster, and multicast.  Unicast addresses\n   identify\
    \ a single node.  Cluster addresses identify a group of nodes,\n   that share\
    \ a common address prefix, such that a packet sent to a\n   cluster address will\
    \ be delivered to one member of the group.\n   Multicast addresses identify a\
    \ group of nodes, such that a packet\n   sent to a multicast address is delivered\
    \ to all of the nodes in the\n   group.\n   SIPP supports addresses which are\
    \ twice the number of bits as IPv4\n   addresses.  These addresses support an\
    \ address space which is four\n   billion (2^^32) times the size of IPv4 addresses\
    \ (2^^32).  Another\n   way to say this is that SIPP supports four billion internets\
    \ each the\n   size of the maximum IPv4 internet.  That is enough to allow each\n\
    \   person on the planet to have their own internet.  Even with several\n   layers\
    \ of hierarchy (with assignment utilization similar to IPv4)\n   this would allow\
    \ for each person on the planet to have their own\n   internet each holding several\
    \ thousand hosts.\n   In addition, SIPP supports extended addresses using the\
    \ routing\n   option.  This capability allows the address space to grow to 128-\n\
    \   bits, 192-bits (or even larger) while still keeping the address units\n  \
    \ in manageable 64-bit units.  This permits the addresses to grow while\n   keeping\
    \ the routing algorithms efficient because they continue to\n   operate using\
    \ 64- bit units.\n"
- title: 4.3.1 Unicast Addresses
  contents:
  - "4.3.1 Unicast Addresses\n   There are several forms of unicast address assignment\
    \ in SIPP. These\n   are global hierarchical unicast addresses, local-use addresses,\
    \ and\n   IPv4- only host addresses.  The assignment plan for unicast addresses\n\
    \   is described in [ADDR].\n"
- title: 4.3.1.1 Global Unicast Addresses
  contents:
  - "4.3.1.1 Global Unicast Addresses\n   Global unicast addresses are used for global\
    \ communication.  They are\n   the most common SIPP address and are similar in\
    \ function to IPv4\n   addresses.  Their format is:\n     |1|      n bits    \
    \   |        m bits       |   p bits  | 63-n-m-p|\n     +-+-------------------+---------------------+-----------+---------+\n\
    \     |C|    PROVIDER ID    |    SUBSCRIBER ID    | SUBNET ID | NODE ID |\n  \
    \   +-+-------------------+---------------------+-----------+---------+\n   The\
    \ first bit is the IPv4 compatibility bit, or C-bit.  It indicates\n   whether\
    \ the node represented by the address is IPv4 or SIPP.  SIPP\n   addresses are\
    \ provider-oriented.  That is, the high-order part of the\n   address is assigned\
    \ to internet service providers, which then assign\n   portions of the address\
    \ space to subscribers, etc.  This usage is\n   similar to assignment of IP addresses\
    \ under CIDR.  The SUBSCRIBER ID\n   distinguishes among multiple subscribers\
    \ attached to the provider\n   identified by the PROVIDER ID.  The SUBNET ID identifies\
    \ a\n   topologically connected group of nodes within the subscriber network\n\
    \   identified by the subscriber prefix.  The NODE ID identifies a single\n  \
    \ node among the group of nodes identified by the subnet prefix.\n"
- title: 4.3.1.2 Local-Use Address
  contents:
  - "4.3.1.2 Local-Use Address\n   A local-use address is a unicast address that has\
    \ only local\n   routability scope (within the subnet or within a subscriber network),\n\
    \   and may have local or global uniqueness scope.  They are intended for\n  \
    \ use inside of a site for \"plug and play\" local communication, for\n   bootstrapping\
    \ up to a single global addresses, and as part of an\n   address sequence for\
    \ global communication.  Their format is:\n     | 4  |\n     |bits|    12 bits\
    \    |                 48 bits                    |\n     +----+---------------+--------------------------------------------+\n\
    \     |0110|   SUBNET ID   |                 NODE ID                    |\n  \
    \   +----+---------------+--------------------------------------------+\n   The\
    \ NODE ID is an identifier which much be unique in the domain in\n   which it\
    \ is being used.  In most cases these will use a node's IEEE-\n   802 48bit address.\
    \  The SUBNET ID identifies a specific subnet in a\n   site.  The combination\
    \ of the SUBNET ID and the NODE ID to form a\n   local use address allows a large\
    \ private internet to be constructed\n   without any other address allocation.\n\
    \   Local-use addresses have two primary benefits.  First, for sites or\n   organizations\
    \ that are not (yet) connected to the global Internet,\n   there is no need to\
    \ request an address prefix from the global\n   Internet address space.  Local-use\
    \ addresses can be used instead.  If\n   the organization connects to the global\
    \ Internet, it can use it's\n   local use addresses to communicate with a server\
    \ (e.g., using the\n   Dynamic Host Configuration Protocol [DHCP]) to have a global\
    \ address\n   automatically assigned.\n   The second benefit of local-use addresses\
    \ is that they can hold much\n   larger NODE IDs, which makes possible a very\
    \ simple form of auto-\n   configuration of addresses.  In particular, a node\
    \ may discover a\n   SUBNET ID by listening to a Router Advertisement messages\
    \ on its\n   attached link(s), and then fabricating a SIPP address for itself\
    \ by\n   using its link-level address as the NODE ID on that subnet.\n   An auto-configured\
    \ local-use address may be used by a node as its own\n   identification for communication\
    \ within the local domain, possibly\n   including communication with a local address\
    \ server to obtain a\n   global SIPP address.  The details of host auto-configuration\
    \ are\n   described in [DHCP].\n"
- title: 4.3.1.3 IPv4-Only Addresses
  contents:
  - "4.3.1.3 IPv4-Only Addresses\n   SIPP unicast addresses are assigned to IPv4-only\
    \ hosts as part of the\n   IPAE scheme for transition from IPv4 to SIPP.  Such\
    \ addresses have\n   the following form:\n     |1|            31 bits        \
    \   |             32 bits            |\n     +-+------------------------------+--------------------------------+\n\
    \     |1|   HIGHER-ORDER SIPP PREFIX   |          IPv4 ADDRESS          |\n  \
    \   +-+------------------------------+--------------------------------+\n   The\
    \ highest-order bit of a SIPP address is called the IPv4\n   compatibility bit\
    \ or the C bit. A C bit value of 1 identifies an\n   address as belonging to an\
    \ IPv4-only node.\n   The IPv4 node's 32-bit IPv4 address is carried in the low-order\
    \ 32\n   bits of the SIPP address.  The remaining 31 bits are used to carry\n\
    \   HIGHER- ORDER SIPP PREFIX, such as a service-provider ID.\n"
- title: 4.3.2  Cluster Addresses
  contents:
  - "4.3.2  Cluster Addresses\n   Cluster addresses are unicast addresses that are\
    \ used to reach the\n   \"nearest\" one (according to unicast routing's notion\
    \ of nearest) of\n   the set of boundary routers of a cluster of nodes identified\
    \ by a\n   common prefix in the SIPP unicast routing hierarchy.  These are used\n\
    \   to identify a set of nodes.  The cluster address, when used as part\n   of\
    \ an address sequence, permits a node to select which of several\n   providers\
    \ it wants to carry its traffic.  A cluster address can only\n   be used as a\
    \ destination address.  In this example there would be a\n   cluster address for\
    \ each provider.  This capability is sometimes\n   called \"source selected policies\"\
    .  Cluster addresses have the\n   general form:\n     |              n bits  \
    \           |           64-n bits           |\n     +---------------------------------+-------------------------------+\n\
    \     |          CLUSTER PREFIX         |0000000000000000000000000000000|\n  \
    \   +---------------------------------+-------------------------------+\n"
- title: 4.3.3  Multicast Addresses
  contents:
  - "4.3.3  Multicast Addresses\n   A SIPP multicast address is an identifier for\
    \ a group of nodes.  A\n   node may belong to any number of multicast groups.\
    \  Multicast\n   addresses have the following format:\n     |1|   7   |  4 | \
    \ 4 |                  48 bits                    |\n     +-+-------+----+----+---------------------------------------------+\n\
    \     |C|1111111|FLGS|SCOP|                  GROUP ID                   |\n  \
    \   +-+-------+----+----+---------------------------------------------+\n   Where:\n\
    \     C = IPv4 compatibility bit.\n     1111111 in the rest of the first octet\
    \ identifies the address as\n     being a multicast address.\n               \
    \                    +-+-+-+-+\n     FLGS is a set of 4 flags:     |0|0|0|T|\n\
    \                                   +-+-+-+-+\n     The high-order 3 flags are\
    \ reserved, and must be initialized to 0.\n     T = 0 indicates a permanently-assigned\
    \ (\"well-known\") multicast\n           address, assigned by the global internet\
    \ numbering authority.\n     T = 1 indicates a non-permanently-assigned (\"transient\"\
    ) multicast\n           address.\n     SCOP is a 4-bit multicast scope value used\
    \ to limit the scope of\n     the multicast group.  The values are:\n        0\
    \  reserved                  8  intra-organization scope\n        1  intra-node\
    \ scope          9  (unassigned)\n        2  intra-link scope          10  (unassigned)\n\
    \        3  (unassigned)              11  intra-community scope\n        4  (unassigned)\
    \              12  (unassigned)\n        5  intra-site scope          13  (unassigned)\n\
    \        6  (unassigned)              14  global scope\n        7  (unassigned)\
    \              15  reserved\n     GROUP ID identifies the multicast group, either\
    \ permanent or\n     transient, within the given scope.\n"
- title: 4.4 SIPP Routing
  contents:
  - "4.4 SIPP Routing\n   Routing in SIPP is almost identical to IPv4 routing under\
    \ CIDR except\n   that the addresses are 64-bit SIPP addresses instead of 32-bit\
    \ IPv4\n   addresses.  This is true even when extended addresses are being used.\n\
    \   With very straightforward extensions, all of IPv4's routing\n   algorithms\
    \ (OSPF, BGP, RIP, IDRP, etc.) can used to route SIPP [OSPF]\n   [RIP2] [IDRP].\n\
    \   SIPP also includes simple routing extensions which support powerful\n   new\
    \ routing functionality.  These capabilities include:\n        Provider Selection\
    \ (based on policy, performance, cost, etc.)\n        Host Mobility (route to\
    \ current location)\n        Auto-Readdressing (route to new address)\n      \
    \  Extended Addressing (route to \"sub-cloud\")\n   The new routing functionality\
    \ is obtained by creating sequences of\n   SIPP addresses using the SIPP Routing\
    \ option.  The routing option is\n   used by a SIPP source to list one or more\
    \ intermediate nodes (or\n   topological clusters) to be \"visited\" on the way\
    \ to a packet's\n   destination.  This function is very similar in function to\
    \ IPv4's\n   Loose Source and Record Route option.  A node would publish its\n\
    \   address sequence in the Domain Name System [DNS].\n   The identification of\
    \ a specific transport connection is done by only\n   using the first (source)\
    \ and last (destination) address in the\n   sequence.  These identifying addresses\
    \ (i.e., first and last\n   addresses of a route sequence) are required to be\
    \ unique within the\n   scope over which they are used.  This permits the middle\
    \ addresses in\n   the address sequence to change (in the cases of mobility, provider\n\
    \   changes, site readdressing, etc.) without disrupting the transport\n   connection.\n\
    \   In order to make address sequences a general function, SIPP hosts are\n  \
    \ required to reverse routes in a packet it receives containing address\n   sequences\
    \ in order to return the packet to its originator.  This\n   approach is taken\
    \ to make SIPP host implementations from the start\n   support the handling and\
    \ reversal of source routes.  This is the key\n   for allowing them to work with\
    \ hosts which implement the new features\n   such as provider selection or extended\
    \ addresses.\n   Three examples show how the extended addressing can be used.\
    \  In\n   these examples, address sequences are shown by a list of individual\n\
    \   addresses separated by commas.  For example:\n       SRC, I1, I2, I3, DST\n\
    \   Where the first address is the source address, the last address is\n   the\
    \ destination address, and the middle addresses are intermediate\n   addresses.\n\
    \   For these examples assume that two hosts, H1 and H2 wish to\n   communicate.\
    \  Assume that H1 and H2's sites are both connected to\n   providers P1 and P2.\
    \  A third wireless provider, PR, is connected to\n   both providers P1 and P2.\n\
    \                           ----- P1 ------\n                          /     \
    \  |       \\\n                         /        |        \\\n               \
    \        H1        PR        H2\n                         \\        |        /\n\
    \                          \\       |       /\n                           -----\
    \ P2 ------\n   The simplest case (no use of address sequences) is when H1 wants\
    \ to\n   send a packet to H2 containing the addresses:\n           H1, H2\n  \
    \ When H2 replied it would reverse the addresses and construct a packet\n   containing\
    \ the addresses:\n           H2, H1\n   In this example either provider could\
    \ be used, and H1 and H2 would\n   not be able to select which provider traffic\
    \ would be sent to and\n   received from.\n   If H1 decides that it wants to enforce\
    \ a policy that all\n   communication to/from H2 can only use provider P1, it\
    \ would construct\n   a packet containing the address sequence:\n           H1,\
    \ P1, H2\n   This ensures that when H2 replies to H1, it will reverse the route\n\
    \   and the reply it would also travel over P1.  The addresses in H2's\n   reply\
    \ would look like:\n           H2, P1, H1\n   If H1 became mobile and moved to\
    \ provider PR, it could maintain (not\n   breaking any transport connections)\
    \ communication with H2, by sending\n   packets that contain the address sequence:\n\
    \           H1, PR, P1, H2\n   This would ensure that when H2 replied it would\
    \ enforce H1's policy\n   of exclusive use of provider P1 and send the packet\
    \ to H1 new\n   location on provider PR.  The reversed address sequence would\
    \ be:\n           H2, P1, PR, H1\n   The address extension facility of SIPP can\
    \ be used for provider\n   selection, mobility, readdressing, and extended addressing.\
    \  It is a\n   simple but powerful capability.\n"
- title: 4.5 SIPP Quality-of-Service Capabilities
  contents:
  - "4.5 SIPP Quality-of-Service Capabilities\n   The Flow Label field in the SIPP\
    \ header may be used by a host to\n   label those packets for which it requests\
    \ special handling by SIPP\n   routers, such as non-default quality of service\
    \ or \"real-time\"\n   service.  This labeling is important in order to support\
    \ applications\n   which require some degree of consistent throughput, delay,\
    \ and/or\n   jitter.  The Flow Label is a 28-bit field, internally structured\
    \ into\n   three subfields as follows:\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |R|  DP |                    Flow ID                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     R (Reserved)       1-bit subfield.  Initialized to zero for\n          \
    \              transmission; Ignored on reception.\n     DP (Drop Priority) 3-bit\
    \ unsigned integer.  Specifies the\n                        priority of the packet,\
    \ relative to other\n                        packets from the same source, for\
    \ being\n                        discarded by a router under conditions of\n \
    \                       congestion.  Larger values indicates a\n             \
    \           greater willingness by the sender to allow\n                     \
    \   the packet to be discarded.\n     Flow ID            24-bit subfield used\
    \ to identify a\n                        specific flow.\n   A flow is a sequence\
    \ of packets sent from a particular source to a\n   particular (unicast or multicast)\
    \ destination for which the source\n   desires special handling by the intervening\
    \ routers.  There may be\n   multiple active flows from a source to a destination,\
    \ as well as\n   traffic that is not associated with any flow.  A flow is identified\n\
    \   by the combination of a Source Address and a non-zero Flow ID.\n   Packets\
    \ that do not belong to a flow carry a Flow ID of zero.\n   A Flow ID is assigned\
    \ to a flow by the flow's source node.  New Flow\n   IDs must be chosen (pseudo-)randomly\
    \ and uniformly from the range 1\n   to FFFFFF hex.  The purpose of the random\
    \ allocation is to make any\n   set of bits within the Flow ID suitable for use\
    \ as a hash key by the\n   routers, for looking up the special-handling state\
    \ associated with\n   the flow.  A Flow ID must not be re-used by a source for\
    \ a new flow\n   while any state associated with the previous usage still exists\
    \ in\n   any router.\n   The Drop Priority subfield provides a means separate\
    \ from the Flow ID\n   for distinguishing among packets from the same source,\
    \ to allow a\n   source to specify which of its packets are to be discarded in\n\
    \   preference to others when a router cannot forward them all.  This is\n   useful\
    \ for applications like video where it is preferable to drop\n   packets carrying\
    \ screen updates rather than the packets carrying the\n   video synchronization\
    \ information.\n"
- title: 4.6 SIPP Security
  contents:
  - "4.6 SIPP Security\n   The current Internet has a number of security problems\
    \ and lacks\n   effective privacy and authentication mechanisms below the application\n\
    \   layer.  SIPP remedies these shortcomings by having two integrated\n   options\
    \ that provide security services.  These two options may be\n   used singly or\
    \ together to provide differing levels of security to\n   different users.  This\
    \ is very important because different user\n   communities have different security\
    \ needs.\n   The first mechanism, called the \"SIPP Authentication Header\", is\
    \ an\n   option which provides authentication and integrity (without\n   confidentiality)\
    \ to SIPP datagrams.  While the option is algorithm-\n   independent and will\
    \ support many different authentication\n   techniques, the use of keyed MD5 is\
    \ proposed to help ensure\n   interoperability within the worldwide Internet.\
    \  This can be used to\n   eliminate a significant class of network attacks, including\
    \ host\n   masquerading attacks.  The use of the SIPP Authentication Header is\n\
    \   particularly important when source routing is used with SIPP because\n   of\
    \ the known risks in IP source routing.  Its placement at the\n   internet layer\
    \ can help provide host origin authentication to those\n   upper layer protocols\
    \ and services that currently lack meaningful\n   protections.  This mechanism\
    \ should be exportable by vendors in the\n   United States and other countries\
    \ with similar export restrictions\n   because it only provides authentication\
    \ and integrity, and\n   specifically does not provide confidentiality.  The exportability\
    \ of\n   the SIPP Authentication Header encourages its widespread\n   implementation\
    \ and use.\n   The second security option provided with SIPP is the \"SIPP\n \
    \  Encapsulating Security Header\".  This mechanism provides integrity\n   and\
    \ confidentiality to SIPP datagrams.  It is simpler than some\n   similar security\
    \ protocols (e.g., SP3D, ISO NLSP) but remains\n   flexible and algorithm-independent.\
    \  To achieve interoperability\n   within the global Internet, the use of DES\
    \ CBC is proposed as the\n   standard algorithm for use with the SIPP Encapsulating\
    \ Security\n   Header.\n"
- title: 5. SIPP Transition Mechanisms
  contents:
  - "5. SIPP Transition Mechanisms\n   The two key motivations in the SIPP transition\
    \ mechanisms are to\n   provide direct interoperability between IPv4 and SIPP\
    \ hosts and to\n   allow the user population to adopt SIPP in an a highly diffuse\n\
    \   fashion.  The transition must be incremental, with few or no critical\n  \
    \ interdependencies, if it is to succeed.  The SIPP transition allows\n   the\
    \ users to upgrade their hosts to SIPP, and the network operators\n   to deploy\
    \ SIPP in routers, with very little coordination between the\n   two.\n   The\
    \ mechanisms and policies of the SIPP transition are called \"IPAE\".\n   Having\
    \ a separate term serves to highlight those features designed\n   specifically\
    \ for transition.  Once an acronym for an encapsulation\n   technique to facilitate\
    \ transition, the term \"IPAE\" now is mostly\n   historical.\n   The IPAE transition\
    \ is based on five key elements:\n    1) A 64-bit SIPP addressing plan that encompasses\
    \ the existing\n       32-bit IPv4 addressing plan.  The 64-bit plan will be used\
    \ to\n       assign addresses for both SIPP and IPv4 nodes at the beginning\n\
    \       of the transition.  Existing IPv4 nodes will not need to change\n    \
    \   their addresses, and IPv4 hosts being upgraded to SIPP keep their\n      \
    \ existing IPv4 addresses as the low-order 32 bits of their SIPP\n       addresses.\
    \  Since the SIPP addressing plan is a superset of the\n       existing IPv4 plan,\
    \ SIPP hosts are assigned only a single 64-bit\n       address, which can be used\
    \ to communicate with both SIPP and IPv4\n       hosts.\n    2) A mechanism for\
    \ encapsulating SIPP traffic within IPv4 packets so\n       that the IPv4 infrastructure\
    \ can be leveraged early in the\n       transition.  Most of the \"SIPP within\
    \ IPv4 tunnels\" can be\n       automatically configured.\n    3) Algorithms in\
    \ SIPP hosts that allow them to directly interoperate\n       with IPv4 hosts\
    \ located on the same subnet and elsewhere in the\n       Internet.\n    4) A\
    \ mechanism for translating between IPv4 and SIPP headers to\n       allow SIPP-only\
    \ hosts to communicate with IPv4-only hosts and to\n       facilitate IPv4 hosts\
    \ communicating over over a SIPP-only\n       backbone.\n    5) An optional mechanism\
    \ for mapping IPv4 addresses to SIPP address\n       to allow improved scaling\
    \ of IPv4 routing.  At the present time\n       given the success of CIDR, this\
    \ does not look like it will be\n       needed in a transition to SIPP.  If Internet\
    \ growth should\n       continue beyond what CIDR can handle, it is available\
    \ as an\n       optional mechanism.\n   IPAE ensures that SIPP hosts can interoperate\
    \ with IPv4 hosts\n   anywhere in the Internet up until the time when IPv4 addresses\
    \ run\n   out, and afterward allows SIPP and IPv4 hosts within a limited scope\n\
    \   to interoperate indefinitely.  This feature protects for a very long\n   time\
    \ the huge investment users have made in IPv4.  Hosts that need\n   only a limited\
    \ connectivity range (e.g., printers) need never be\n   upgraded to SIPP.  This\
    \ feature also allows SIPP-only hosts to\n   interoperate with IPv4-only hosts.\n\
    \   The incremental upgrade features of IPAE allow the host and router\n   vendors\
    \ to integrate SIPP into their product lines at their own pace,\n   and allows\
    \ the end users and network operators to deploy SIPP on\n   their own schedules.\n\
    \   The interoperability between SIPP and IPv4 provided by IPAE also has\n   the\
    \ benefit of extending the lifetime of IPv4 hosts.  Given the large\n   installed\
    \ base of IPv4, changes to IPv4 in hosts are nearly\n   impossible.  Once an IPng\
    \ is chosen, most of the new feature\n   development will be done on IPng.  New\
    \ features in IPng will increase\n   the incentives to adopt and deploy it.\n"
- title: 6. Why SIPP?
  contents:
  - "6. Why SIPP?\n   There are a number of reasons why SIPP should be selected as\
    \ the\n   IETF's IPng.  It solves the Internet scaling problem, provides a\n \
    \  flexible transition mechanism for the current Internet, and was\n   designed\
    \ to meet the needs of new markets such as nomadic personal\n   computing devices,\
    \ networked entertainment, and device control.  It\n   does this in a evolutionary\
    \ way which reduces the risk of\n   architectural problems.\n   Ease of transition\
    \ is a key point in the design of SIPP.  It is not\n   something was was added\
    \ in at the end.  SIPP is designed to\n   interoperate with IPv4.  Specific mechanisms\
    \ (C-bit, embedded IPv4\n   addresses, etc.) were built into SIPP to support transition\
    \ and\n   compatability with IPv4.  It was designed to permit a gradual and\n\
    \   piecemeal deployment without any dependencies.\n   SIPP supports large hierarchical\
    \ addresses which will allow the\n   Internet to continue to grow and provide\
    \ new routing capabilities not\n   built into IPv4.  It has cluster addresses\
    \ which can be used for\n   policy route selection and has scoped multicast addresses\
    \ which\n   provide improved scaleability over IPv4 multicast.  It also has local\n\
    \   use addresses which provide the ability for \"plug and play\"\n   installation.\n\
    \   SIPP is designed to have performance better than IPv4 and work well\n   in\
    \ low bandwidth applications like wireless.  Its headers are less\n   expensive\
    \ to process than IPv4 and its 64-bit addresses are chosen to\n   be well matched\
    \ to the new generation of 64bit processors.  Its\n   compact header minimizes\
    \ bandwidth overhead which makes it ideal for\n   wireless use.\n   SIPP provides\
    \ a platform for new Internet functionality.  This\n   includes support for real-time\
    \ flows, provider selection, host\n   mobility, end-to- end security, auto-configuration,\
    \ and auto-\n   reconfiguration.\n   In summary, SIPP is a new version of IP.\
    \  It can be installed as a\n   normal software upgrade in internet devices. \
    \ It is interoperable\n   with the current IPv4.  Its deployment strategy was\
    \ designed to not\n   have any \"flag\" days.  SIPP is designed to run well on\
    \ high\n   performance networks (e.g., ATM) and at the same time is still\n  \
    \ efficient for low bandwidth networks (e.g., wireless).  In addition,\n   it\
    \ provides a platform for new internet functionality that will be\n   required\
    \ in the near future.\n"
- title: 7. Status of SIPP Effort
  contents:
  - "7. Status of SIPP Effort\n   There are many active participants in the SIPP working\
    \ group.  Groups\n   making active contributions include:\n   Group          \
    \         Activity\n   ---------------------   ----------------------------------------\n\
    \   Beame & Whiteside       Implementation (PC)\n   Bellcore                Implementation\
    \ (SunOS), DNS and ICMP specs.\n   Digital Equipment Corp. Implementation (Alpha/OSF,\
    \ Open VMS)\n   INRIA                   Implementation (BSD, BIND), DNS & OSPF\
    \ specs.\n   INESC                   Implementation (BSD/Mach/x-kernel)\n   Intercon\
    \                Implementation (MAC)\n   MCI                     Phone Conferences\n\
    \   Merit                   IDRP for SIPP Specification\n   Naval Research Lab.\
    \     Implementation (BSD) Security Design\n   Network General         Implementation\
    \ (Sniffer)\n   SGI                     Implementation (IRIX, NetVisulizer)\n\
    \   Sun                     Implementation (Solaris 2.x, Snoop)\n   TGV      \
    \               Implementation (Open VMS)\n   Xerox PARC              Protocol\
    \ Design\n   Bill Simpson            Implementation (KA9Q)\n   As of the time\
    \ this paper was written there were a number of SIPP and\n   IPAE implementations.\
    \  These include:\n   Implementation          Status\n   --------------      \
    \    ------------------------------------\n   BSD/Mach                Completed\
    \ (telnet, NFS, AFS, UDP)\n   BSD/Net/2               In Progress\n   Bind   \
    \                 Code done\n   DOS &Windows            Completed (telnet, ftp,\
    \ tftp, ping)\n   IRIX                    In progress (ping)\n   KA9Q        \
    \            In progress (ping, TCP)\n   Mac OS                  Completed (telnet,\
    \ ftp, finger, ping)\n   NetVisualizer           Completed (SIP & IPAE)\n   Open\
    \ VMS                Completed (telnet, ftp), In Progress\n   OSF/1          \
    \         In Progress (ping, ICMP)\n   Sniffer                 Completed (SIP\
    \ & IPAE)\n   Snoop                   Completed (SIP & IPAE)\n   Solaris     \
    \            Completed (telnet, ftp, tftp, ping)\n   Sun OS                  In\
    \ Progress\n"
- title: 8. Where to Get Additional Information
  contents:
  - "8. Where to Get Additional Information\n   The documentation listed in the reference\
    \ sections can be found in\n   one of the IETF internet draft directories or in\
    \ the archive site for\n   the SIPP working group.  This is located at:\n    \
    \       ftp.parc.xerox.com      in the /pub/sipp        directory.\n   In addition\
    \ other material relating to SIPP (such as postscript\n   versions of presentations\
    \ on SIPP) can also be found in the SIPP\n   working group archive.\n   To join\
    \ the SIPP working group, send electronic mail to\n           sipp-request@sunroof.eng.sun.com\n\
    \   An archive of mail sent to this mailing list can be found in the IETF\n  \
    \ directories at cnri.reston.va.us.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   Security issues are discussed in section 4.6.\n"
- title: 10. Author's Address
  contents:
  - "10. Author's Address\n   Robert M. Hinden\n   Manager, Internet Engineering\n\
    \   Sun Microsystems, Inc.\n   MS MTV5-44\n   2550 Garcia Ave.\n   Mt. View, CA\
    \ 94303\n   Phone: (415) 336-2082\n   Fax: (415) 336-6016\n   EMail: hinden@eng.sun.com\n"
- title: 11. References
  contents:
  - "11. References\n   [ADDR]  Francis, P., \"Simple Internet Protocol Plus (SIPP):\
    \ Unicast\n           Hierarchical Address Assignment\", Work in Progress, January\n\
    \           1994.\n   [AUTH]  Atkinson, R., \"SIPP Authentication Payload\",\n\
    \           Work in Progress, January, 1994.\n   [CIDR]  Fuller, V., Li, T., Yu,\
    \ J., and K. Varadhan, \"Supernetting:\n           an Address Assignment and Aggregation\
    \ Strategy\", RFC 1338,\n           BARRNet, cisco, Merit, OARnet, June 1992.\n\
    \   [DISC]  Simpson, W., \"SIPP Neighbor Discovery\", Work in Progress,\n    \
    \       March 1994.\n   [DIS2]  Simpson, W., \"SIPP Neighbor Discovery -- ICMP\
    \ Message\n           Formats\", Work in Progress, March 1994.\n   [DHCP]  Thomson,\
    \ S., \"Simple Internet Protocol Plus (SIPP): Automatic\n           Host Address\
    \ Assignment\", Work in Progress, March 1994.\n   [DNS]   Thomson, S., and C.\
    \ Huitema, \"DNS Extensions to Support\n           Simple Internet Protocol Plus\
    \ (SIPP)\", Work in Progress,\n           March 1994.\n   [ICMP]  Govindan, R.,\
    \ and S. Deering, \"ICMP and IGMP for the Simple\n           Internet Protocol\
    \ Plus (SIPP)\", Work in Progress, March 1994.\n   [IDRP]  Hares, S., \"IDRP for\
    \ SIP\", Work in Progress, November 1993.\n   [IPAE]  Gilligan, R., et al, \"\
    IPAE: The SIPP Interoperability and\n           Transition Mechanism\", Work in\
    \ Progress, March 1994.\n   [IPV4]  Postel, J., \"Internet Protocol- DARPA Internet\
    \ Program\n           Protocol Specification\", STD 5, RFC 791, DARPA,\n     \
    \      September 1981.\n   [OSPF]  Francis, P., \"OSPF for SIPP\", Work in Progress,\
    \ February\n           1994.\n   [RIP2]  Malkin, G., and C. Huitema, \"SIP-RIP\"\
    , Work in Progress,\n           March 1993.\n   [ROUT]  Deering, S., et al, \"\
    Simple Internet Protocol Plus (SIPP):\n           Routing and Addressing\", Work\
    \ in Progress, February 1994.\n   [SARC]  Atkinson, R., \"SIPP Security Architecture\"\
    , Work in Progress,\n           January 1994.\n   [SECR]  Atkinson, R., \"SIPP\
    \ Encapsulating Security Payload (ESP)\",\n           Work in Progress, January\
    \ 1994.\n   [SIPP]  Deering, S., \"Simple Internet Protocol Plus (SIPP)\n    \
    \       Specification\", Work in Progress, February 1994.\n"
