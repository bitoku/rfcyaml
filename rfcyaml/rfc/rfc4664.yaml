- title: __initial_text__
  contents:
  - '        Framework for Layer 2 Virtual Private Networks (L2VPNs)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a framework for Layer 2 Provider Provisioned\n\
    \   Virtual Private Networks (L2VPNs).  This framework is intended to aid\n  \
    \ in standardizing protocols and mechanisms to support interoperable\n   L2VPNs.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................3\n  \
    \    1.2. Objectives and Scope of the Document .......................3\n    \
    \  1.3. Layer 2 Virtual Private Networks ...........................3\n      1.4.\
    \ Terminology ................................................4\n   2. Models\
    \ ..........................................................5\n      2.1. Reference\
    \ Model for VPWS ...................................5\n           2.1.1. Entities\
    \ in the VPWS Reference Model ................5\n      2.2. Reference Model for\
    \ VPLS ...................................6\n           2.2.1. Entities in the\
    \ VPLS Reference Model ................8\n      2.3. Reference Model for Distributed\
    \ VPLS-PE or VPWS-PE .........9\n           2.3.1. Entities in the Distributed\
    \ PE Reference Models .....9\n      2.4. VPWS-PE and VPLS-PE ........................................9\n\
    \   3. Functional Components of L2 VPN .................................9\n  \
    \    3.1. Types of L2VPN ............................................10\n    \
    \       3.1.1. Virtual Private Wire Service (VPWS) ................10\n      \
    \     3.1.2. Virtual Private LAN Service (VPLS) .................10\n        \
    \   3.1.3. IP-Only LAN-Like Service (IPLS) ....................11\n      3.2.\
    \ Generic L2VPN Transport Functional Components .............11\n           3.2.1.\
    \ Attachment Circuits ................................11\n           3.2.2. Pseudowires\
    \ ........................................12\n           3.2.3. Forwarders .........................................14\n\
    \           3.2.4. Tunnels ............................................15\n  \
    \         3.2.5. Encapsulation ......................................16\n    \
    \       3.2.6. Pseudowire Signaling ...............................16\n      \
    \            3.2.6.1. Point-to-Point Signaling ..................18\n        \
    \          3.2.6.2. Point-to-Multipoint Signaling .............18\n          \
    \        3.2.6.3. Inter-AS Considerations ...................19\n           3.2.7.\
    \ Service Quality ....................................20\n                  3.2.7.1.\
    \ Quality of Service (QoS) ..................20\n                  3.2.7.2. Resiliency\
    \ ................................21\n           3.2.8. Management .........................................22\n\
    \      3.3. VPWS ......................................................22\n  \
    \         3.3.1. Provisioning and Auto-Discovery ....................23\n    \
    \              3.3.1.1. Attachment Circuit Provisioning ...........23\n      \
    \            3.3.1.2. PW Provisioning for Arbitrary\n                        \
    \   Overlay Topologies ........................23\n                  3.3.1.3.\
    \ Colored Pools PW Provisioning Model .......25\n           3.3.2. Requirements\
    \ on Auto-Discovery Procedures ..........27\n           3.3.3. Heterogeneous Pseudowires\
    \ ..........................28\n      3.4. VPLS Emulated LANs ........................................29\n\
    \           3.4.1. VPLS Overlay Topologies and Forwarding .............31\n  \
    \         3.4.2. Provisioning and Auto-Discovery ....................33\n    \
    \       3.4.3. Distributed PE .....................................33\n      \
    \     3.4.4. Scaling Issues in VPLS Deployment ..................36\n      3.5.\
    \ IP-Only LAN-Like Service (IPLS) ...........................36\n   4. Security\
    \ Considerations ........................................37\n      4.1. Provider\
    \ Network Security Issues ..........................37\n      4.2. Provider-Customer\
    \ Network Security Issues .................39\n      4.3. Customer Network Security\
    \ Issues ..........................39\n   5. Acknowledgements ...............................................40\n\
    \   6. Normative References ...........................................41\n  \
    \ 7. Informative References .........................................41\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.2.  Objectives and Scope of the Document
  contents:
  - "1.2.  Objectives and Scope of the Document\n   This document provides a framework\
    \ for Layer 2 Provider Provisioned\n   Virtual Private Networks (L2VPNs).  This\
    \ framework is intended to aid\n   in standardizing protocols and mechanisms to\
    \ support interoperable\n   L2VPNs.\n   The term \"provider provisioned VPNs\"\
    \ refers to Virtual Private\n   Networks (VPNs) for which the Service Provider\
    \ (SP) participates in\n   management and provisioning of the VPN.\n   Requirements\
    \ for L2VPNs can be found in [RFC4665].\n   This document provides reference models\
    \ for L2VPNs and discusses the\n   functional components of L2VPNs.  Specifically,\
    \ this includes\n   discussion of the technical issues that are important in the\
    \ design\n   of standards and mechanisms for L2VPNs, including those standards\
    \ and\n   mechanisms needed for interworking and security.\n   This document discusses\
    \ a number of different technical approaches to\n   L2VPNs.  It tries to show\
    \ how the different approaches are related,\n   and to clarify the issues that\
    \ may lead one to select one approach\n   instead of another.  However, this document\
    \ does not attempt to\n   select any particular approach.\n"
- title: 1.3.  Layer 2 Virtual Private Networks
  contents:
  - "1.3.  Layer 2 Virtual Private Networks\n   There are two fundamentally different\
    \ kinds of Layer 2 VPN service\n   that a service provider could offer to a customer:\
    \ Virtual Private\n   Wire Service (VPWS) and Virtual Private LAN Service (VPLS).\
    \  There is\n   also the possibility of an IP-only LAN-like Service (IPLS).\n\
    \   A VPWS is a VPN service that supplies an L2 point-to-point service.\n   As\
    \ this is a point-to-point service, there are very few scaling\n   issues with\
    \ the service as such.  Scaling issues might arise from the\n   number of end-points\
    \ that can be supported on a particular PE.\n   A VPLS is an L2 service that emulates\
    \ LAN service across a Wide Area\n   Network (WAN).  With regard to the amount\
    \ of state information that\n   must be kept at the edges in order to support\
    \ the forwarding\n   function, it has the scaling characteristics of a LAN.  Other\
    \ scaling\n   issues might arise from the number of end-points that can be\n \
    \  supported on a particular PE.  (See Section 3.4.4.)\n   Note that VPLS uses\
    \ a service that does not have native multicast\n   capability to emulate a service\
    \ that does have native multicast\n   capability.  As a result, there will be\
    \ scalability issues with\n   regard to the handling of multicast traffic in VPLS.\n\
    \   A VPLS service may also impose longer delays and provide less\n   reliable\
    \ transport than would a native LAN service.  The standard LAN\n   control protocols\
    \ may not have been designed for such an environment\n   and may experience scaling\
    \ problems when run in that environment.\n"
- title: 1.4.  Terminology
  contents:
  - "1.4.  Terminology\n   The list of the technical terms used when discussing L2VPNs\
    \ may be\n   found in the companion document [RFC4026].\n"
- title: 2.  Models
  contents:
  - '2.  Models

    '
- title: 2.1.  Reference Model for VPWS
  contents:
  - "2.1.  Reference Model for VPWS\n   The VPWS reference model is shown in Figure\
    \ 1.\n                  Attachment        PSN           Attachment\n         \
    \          Circuits        tunnel          Circuits\n                        \
    \             +\n           +-----+                 pseudo                   \
    \ +-----+\n           |     |                  wire                     |    \
    \ |\n           | CE1 |--+                                     +--| CE2 |\n  \
    \         |     |  |    +-----+   +-----+     +-----+    |  |     |\n        \
    \   +-----+  +----|---- |   |  P  |     | ----+----+  +-----+\n              \
    \           |VPWS\\---|-----|-----|/VPWS|\n                         | PE1 |===|=====|=====|\
    \ PE2 |\n                         |    /|---|-----|-----|\\\\    |\n         \
    \  +-----+  +----|---- |   |     |     | ----|----+  +-----+\n           |   \
    \  |  |    +-----+   +-----+     +-----+    |  |     |\n           | CE3 |--+\
    \                                     +--| CE4 |\n           |     |         \
    \                                  |     |\n           +-----+               \
    \                            +-----+\n                                    Figure\
    \ 1\n"
- title: 2.1.1.  Entities in the VPWS Reference Model
  contents:
  - "2.1.1.  Entities in the VPWS Reference Model\n   The P, PE (VPWS-PE), and CE\
    \ devices and the PSN tunnel are defined in\n   [RFC4026].  The attachment circuit\
    \ and pseudowire are discussed in\n   Section 3.  The PE does a simple mapping\
    \ between the PW and\n   attachment circuit based on local information; i.e.,\
    \ the PW\n   demultiplexor and incoming/outgoing logical/physical port.\n"
- title: 2.2.  Reference Model for VPLS
  contents:
  - "2.2.  Reference Model for VPLS\n   The following diagram shows a VPLS reference\
    \ model where PE devices\n   that are VPLS-capable provide a logical interconnect\
    \ such that CE\n   devices belonging to a specific VPLS appear to be on a single\
    \ bridged\n   Ethernet.  A VPLS can contain a single VLAN or multiple tagged VLANs.\n\
    \   The VPLS reference model is shown in Figures 2 and 3.\n           +-----+\
    \                                  +-----+\n           + CE1 +--+            \
    \               +---| CE2 |\n           +-----+  |    ...................    |\
    \   +-----+\n            VPLS A  |  +----+           +----+  |    VPLS A\n   \
    \                 |  |VPLS|           |VPLS|  |\n                    +--| PE |--Routed---|\
    \ PE |-+\n                       +----+  Backbone +----+\n                   \
    \   /  .       |         .  \\     _   /\\_\n           +-----+   /   .      \
    \ |         .   \\   / \\ /   \\     +-----+\n           + CE  +--+    .     \
    \  |         .    +--\\ Access \\----| CE  |\n           +-----+       .    +----+\
    \       .       | Network |   +-----+\n            VPLS B       .....|VPLS|........\
    \        \\       /     VPLS B\n                              | PE |     ^   \
    \        -------\n                              +----+     |\n               \
    \                 |        |\n                                |        |\n   \
    \                          +-----+     |\n                             | CE3 |\
    \     +-- Emulated LAN\n                             +-----+\n               \
    \               VPLS A\n                                    Figure 2\n       \
    \                  |-----Routed Backbone-----|\n                         |   \
    \  (P Routers)         |PSN Tunnels,\n   Emulated LAN          |             \
    \            |Pseudowires\n .......................................................................\n\
    \ .                       |                         |                   .\n .\
    \ |---------------------|----|           |--------|-----------------| .\n . |\
    \ --------------------|--- |           | -------|---------------- | .\n . |  \
    \    VPLS Forwarder      |           |      VPLS Forwarder      | .\n . | ----------|-------------\
    \ |           | ----------|------------- | .\n ..|.................................................................|..\n\
    \   |           | Emulated LAN |           |           | Emulated LAN |\n   |\
    \           | Interface    | VPLS-PEs  |           | Interface    |\n   |    \
    \       |              |  <---->   |           |              |\n   | ----------|------------\
    \  |           | ----------|------------  |\n   | |       Bridge        |  | \
    \          | |       Bridge        |  |\n   | -|--------|---------|--  |     \
    \      | ---|-------|---------|-  |\n   |--|--------|---------|----|         \
    \  |----|-------|---------|---|\n      |        |         |                  \
    \   |       |         |\n      |        | Access  |                     |    \
    \   | Access  |\n      |        | Networks|                     |       | Networks|\n\
    \      |        |         |                     |       |         |\n      | \
    \       |         |                     |       |         |\n           CE devices\
    \                                CE devices\n                                Figure\
    \ 3\n   From Figure 3, we see that in VPLS, a CE device attaches, possibly\n \
    \  through an access network, to a \"bridge\" module of a VPLS-PE.  Within\n \
    \  the VPLS-PE, the bridge module attaches, through an \"Emulated LAN\n   Interface\"\
    , to an Emulated LAN.  For each VPLS, there is an Emulated\n   LAN instance. \
    \ Figure 3 shows some internal structure to the Emulated\n   LAN: it consists\
    \ of \"VPLS Forwarder\" modules connected by\n   pseudowires, where the pseudowires\
    \ may be traveling through PSN\n   tunnels over a routed backbone.\n   A \"VPLS\
    \ instance\" consists of a set of VPLS Forwarders (no more than\n   one per PE)\
    \ connected by pseudowires.\n   The functionality that the bridge module must\
    \ support depends on the\n   service that is being offered by the SP to its customers,\
    \ as well as\n   on various details of the SP's network.  At a minimum, the bridge\n\
    \   module must be able to learn MAC addresses, and to \"age them out\", in\n\
    \   the standard manner.  However, if the PE devices have backdoor\n   connections\
    \ with each other via a Layer 2 network, they may need to\n   be full IEEE bridges\
    \ ([IEEE8021D]), running a spanning tree with each\n   other.  Specification of\
    \ the precise functionality that the bridge\n   modules must have in particular\
    \ circumstances is, however, out of\n   scope of the current document.\n   This\
    \ framework specifies that each \"bridge module\" have a single\n   \"Emulated\
    \ LAN interface\".  It does not specify the number of bridge\n   modules that\
    \ a VPLS-PE may contain, nor does it specify the number of\n   VPLS instances\
    \ that may attach to a bridge module over a single\n   \"Emulated LAN interface\"\
    .\n   Thus the framework is compatible with at least the following three\n   models:\n\
    \      - Model 1\n        A VPLS-PE contains a single bridge module and supports\
    \ a single\n        VPLS instance.  The VPLS instance is an Emulated LAN; if that\n\
    \        Emulated LAN contains VLANs, 802.1Q [IEEE8021Q] tagging must be\n   \
    \     used to indicate which packets are in which VLANs.\n      - Model 2\n  \
    \      A VPLS-PE contains a single bridge module, but supports multiple\n    \
    \    VPLS instances.  Each VPLS instance is thought of as a VLAN (in\n       \
    \ effect, an \"Emulated VLAN\"), and the set of VPLS instances are\n        treated\
    \ as a set of VLANs on a common LAN.  Since each VLAN uses\n        a separate\
    \ set of PWs, there is no need for 802.1Q tagging.\n      - Model 3\n        A\
    \ VPLS-PE contains an arbitrary number of bridge modules, each\n        of which\
    \ attaches to a single VPLS instance.\n        There may be other models as well,\
    \ some of which are\n        combinations of the 3 models above.  Different models\
    \ may have\n        different characteristics, and different scopes of\n     \
    \   applicability.\n        Each VPLS solution should specify the model or models\
    \ that it is\n        supporting.  Each solution should also specify the necessary\n\
    \        bridge functionality that its bridge modules must support.\n        This\
    \ framework does not specify the way in which bridge control\n        protocols\
    \ are used on the Emulated LANs.\n"
- title: 2.2.1.  Entities in the VPLS Reference Model
  contents:
  - "2.2.1.  Entities in the VPLS Reference Model\n   The PE (VPLS-PE) and CE devices\
    \ are defined in [RFC4026].\n"
- title: 2.3.  Reference Model for Distributed VPLS-PE or VPWS-PE
  contents:
  - "2.3.  Reference Model for Distributed VPLS-PE or VPWS-PE\n                  VPLS-PE/VPWS-PE\n\
    \                   Functionality       . . . . . . .\n               . . . .\
    \ . . . . . . .   .           .\n               .                   .   .    \
    \       .\n       +----+  .  +----+    +----+ .   .  Service  .\n       | CE |--.--|U-PE|----|N-PE|-.---.\
    \  Provider .\n       +----+  .  +----+    +----+ .   .  Backbone .\n        \
    \       . . . . . . . . . . .   .           .\n"
- title: 2.3.1.  Entities in the Distributed PE Reference Models
  contents:
  - "2.3.1.  Entities in the Distributed PE Reference Models\n   A VPLS-PE or a VPWS-PE\
    \ functionality may be distributed to more than\n   one device.  The device closer\
    \ to the customer/user is called the\n   User-facing PE (U-PE), and the device\
    \ closer to the core network is\n   called Network-facing PE (N-PE).\n   For further\
    \ discussion, see Section 3.4.3.\n   The terms \"U-PE\" and \"N-PE\" are defined\
    \ in [RFC4026].\n"
- title: 2.4.  VPWS-PE and VPLS-PE
  contents:
  - "2.4.  VPWS-PE and VPLS-PE\n   The VPWS-PE and VPLS-PE are functionally very similar,\
    \ in that they\n   both use forwarders to map attachment circuits to pseudowires.\
    \  The\n   only difference is that while the forwarder in a VPWS-PE does a one-\n\
    \   to-one mapping between the attachment circuit and pseudowire, the\n   forwarder\
    \ in a VPLS-PE is a Virtual Switching Instance (VSI) that\n   maps multiple attachment\
    \ circuits to multiple pseudowires (for\n   further discussion, see Section 3).\n"
- title: 3.  Functional Components of L2 VPN
  contents:
  - "3.  Functional Components of L2 VPN\n   This section specifies a functional model\
    \ for L2VPN, which allows one\n   to break an L2VPN architecture down into its\
    \ functional components.\n   This exhibits the roles played by the various protocols\
    \ and\n   mechanisms, and thus makes it easier to understand the differences\n\
    \   and similarities between various proposed L2VPN architectures.\n   Section\
    \ 3.1 contains an overview of some different types of L2VPNs.\n   In Section 3.2,\
    \ functional components that are common to the\n   different types are discussed.\
    \  Then, there is a section for each of\n   the L2VPN service types being considered.\
    \  The latter sections\n   discuss functional components, which may be specific\
    \ to particular\n   L2VPN types, and type-specific features of the generic components.\n"
- title: 3.1.  Types of L2VPN
  contents:
  - "3.1.  Types of L2VPN\n   The types of L2VPN are distinguished by the characteristics\
    \ of the\n   service that they offer to the customers of the Service Provider\n\
    \   (SP).\n"
- title: 3.1.1.  Virtual Private Wire Service (VPWS)
  contents:
  - "3.1.1.  Virtual Private Wire Service (VPWS)\n   In a VPWS, each CE device is\
    \ presented with a set of point-to-point\n   virtual circuits.\n   The other end\
    \ of each virtual circuit is another CE device.  Frames\n   transmitted by a CE\
    \ on such a virtual circuit are received by the CE\n   device at the other end-point\
    \ of the virtual circuit.  Forwarding\n   from one CE device to another is not\
    \ affected by the content of the\n   frame, but is fully determined by the virtual\
    \ circuit on which the\n   frame is transmitted.  The PE thus acts as a virtual\
    \ circuit switch.\n   This type of L2VPN has long been available over ATM and\
    \ Frame Relay\n   backbones.  Providing this type of L2VPN over MPLS and/or IP\n\
    \   backbones is the current topic.\n   Requirements for this type of L2VPN are\
    \ specified in [RFC4665].\n"
- title: 3.1.2.  Virtual Private LAN Service (VPLS)
  contents:
  - "3.1.2.  Virtual Private LAN Service (VPLS)\n   In a VPLS, each CE device has\
    \ one or more LAN interfaces that lead to\n   a \"virtual backbone\".\n   Two\
    \ CEs are connected to the same virtual backbone if and only if\n   they are members\
    \ of the same VPLS instance (i.e., same VPN).  When a\n   CE transmits a frame,\
    \ the PE that receives it examines the MAC\n   Destination Address field in order\
    \ to determine how to forward the\n   frame.  Thus, the PE functions as a bridge.\
    \  As Figure 3 indicates,\n   if a set of PEs support a common VPLS instance,\
    \ then there is an\n   Emulated LAN, corresponding to that VPLS instance, to which\
    \ each of\n   those PE bridges attaches (via an emulated interface).  From the\n\
    \   perspective of a CE device, the virtual backbone is the set of PE\n   bridges\
    \ and the Emulated LAN on which they reside.  Thus to a CE\n   device, the LAN\
    \ that attaches it to the PE is extended transparently\n   over the routed MPLS\
    \ and/or IP backbone.\n   The PE bridge function treats the Emulated LAN as it\
    \ would any other\n   LAN to which it has an interface.  Forwarding decisions\
    \ are made in\n   the manner that is normal for bridges, which is based on MAC\
    \ Source\n   Address learning.\n   VPLS is like VPWS in that forwarding is done\
    \ without any\n   consideration of the Layer3 header.  VPLS is unlike VPWS in\
    \ that:\n      - VPLS allows the PE to use addressing information in a frame's\
    \ L2\n        header to determine how to forward the frame; and\n      - VPLS\
    \ allows a single CE/PE connection to be used for\n        transmitting frames\
    \ to multiple remote CEs; in this particular\n        respect, VPLS resembles\
    \ L3VPN more than VPWS.\n   Requirements for this type of L2VPN are specified\
    \ in [RFC4665].\n"
- title: 3.1.3.  IP-Only LAN-Like Service (IPLS)
  contents:
  - "3.1.3.  IP-Only LAN-Like Service (IPLS)\n   An IPLS is very like a VPLS, except\
    \ that:\n      - it is assumed that the CE devices are hosts or routers, not\n\
    \        switches; and\n      - it is assumed that the service will only carry\
    \ IP packets and\n        supporting packets such as ICMP and ARP (in the case\
    \ of IPv4) or\n        Neighbor Discovery (in the case of IPv6); Layer 2 packets\
    \ that\n        do not contain IP are not supported.\n   While this service is\
    \ a functional subset of the VPLS service, it is\n   considered separately because\
    \ it may be possible to provide it using\n   different mechanisms, which may allow\
    \ it to run on certain hardware\n   platforms that cannot support the full VPLS\
    \ functionality.\n"
- title: 3.2.  Generic L2VPN Transport Functional Components
  contents:
  - "3.2.  Generic L2VPN Transport Functional Components\n   All L2VPN types must\
    \ transport \"frames\" across the core network\n   connecting the PEs.  In all\
    \ L2VPN types, a PE (PE1) receives a frame\n   from a CE (CE1), and then transports\
    \ the frame to a PE (PE2), which\n   then transports the frame to a CE (CE2).\
    \  In this section, we discuss\n   the functional components that are necessary\
    \ to transport L2 frames\n   in any type of L2VPN service.\n"
- title: 3.2.1.  Attachment Circuits
  contents:
  - "3.2.1.  Attachment Circuits\n   In any type of L2VPN, a CE device attaches to\
    \ a PE device via some\n   sort of circuit or virtual circuit.  We will call this\
    \ an \"Attachment\n   Circuit\" (AC).  We use this term very generally; an Attachment\n\
    \   Circuit may be a Frame Relay DLCI, an ATM VPI/VCI, an Ethernet port,\n   a\
    \ VLAN, a PPP connection on a physical interface, a PPP session from\n   an L2TP\
    \ tunnel, an MPLS LSP, etc.  The CE device may be a router, a\n   switch, a host,\
    \ or just about anything, which the customer needs\n   hooked up to the VPN. \
    \ An AC carries a frame between CE and PE, or\n   vice versa.\n   Procedures for\
    \ setting up and maintaining the ACs are out of scope of\n   this architecture.\n\
    \   These procedures are generally specified as part of the specification\n  \
    \ of the particular Attachment Circuit technology.\n   Any given frame will traverse\
    \ an AC from a CE to a PE, and then on\n   another AC from a PE to a CE.\n   We\
    \ refer to the former AC as the frame's \"ingress AC\" and to the\n   latter AC\
    \ as the frame's \"egress AC\".  Note that this notion of\n   \"ingress AC\" and\
    \ \"egress AC\" is relative to a specific frame and\n   denotes nothing more than\
    \ the frame's direction of travel while it is\n   on that AC.\n"
- title: 3.2.2.  Pseudowires
  contents:
  - "3.2.2.  Pseudowires\n   A \"Pseudowire\" (PW) is a relation between two PE devices.\
    \  Whereas an\n   AC is used to carry a frame from CE to PE, a PW is used to carry\
    \ a\n   frame between two PEs.  We use the term \"pseudowire\" in the sense of\n\
    \   [RFC3985].\n   Setting up and maintaining the PWs is the job of the PEs. \
    \ State\n   information for a particular PW is maintained at the two PEs that\
    \ are\n   its endpoints, but not at other PEs, and not in the backbone routers\n\
    \   (P routers).\n   Pseudowires may be point-to-point, multipoint-to-point, or\
    \ point-to-\n   multipoint.  In this framework, point-to-point PWs are always\n\
    \   considered bidirectional; multipoint-to-point and point-to-multipoint\n  \
    \ PWs are always considered unidirectional.  Multipoint-to-point PWs\n   can be\
    \ used only when the PE receiving a frame does not need to\n   infer, from the\
    \ PW on which the frame was received, the identity of\n   the frame's ingress\
    \ AC.  Point-to-multipoint PWs may be useful when\n   frames need to be multicast.\n\
    \   Procedures for setting up and maintaining point-to-multipoint PWs are\n  \
    \ not considered in this version of this framework.\n   Any given frame travels\
    \ first on its ingress AC, then on a PW, and\n   then on its egress AC.\n   Multicast\
    \ frames may be replicated by a PE, so of course the\n   information carried in\
    \ multicast frames may travel on more than one\n   PW and more than one egress\
    \ AC.\n   Thus with respect to a given frame, a PW may be said to associate a\n\
    \   number of ACs.  If these ACs are of the same technology (e.g., both\n   ATM,\
    \ both Ethernet, both Frame Relay), the PW is said to provide\n   \"homogeneous\
    \ transport\"; otherwise it is said to provide\n   \"heterogeneous transport\"\
    .  Heterogeneous transport requires that\n   some sort of interworking function\
    \ be applied.  There are at least\n   three different approaches to interworking:\n\
    \       1.  One of the CEs may perform the interworking locally.  For\n      \
    \     example, if CE1 attaches to PE1 via ATM, but CE2 attaches to\n         \
    \  PE2 via Ethernet, then CE1 may decide to send/receive\n           Ethernet\
    \ frames over ATM, using the RFC 2684, \"LLC\n           Encapsulation for Bridged\
    \ Protocols\".  In such a case, PE1\n           would need to know that it is\
    \ to terminate the ATM VC\n           locally, and only to send/receive Ethernet\
    \ frames over the\n           PW.\n       2.  One of the PEs may perform the interworking.\
    \  For example, if\n           CE1 attaches to PE1 via ATM, but CE2 attaches to\
    \ PE2 via\n           Frame Relay, PE1 may provide the \"ATM/FR Service\n    \
    \       Interworking\" function.  This would be transparent to the\n         \
    \  CEs, and the PW would carry only Frame Relay frames.\n       3.  IPLS could\
    \ be used.  In this case, the \"frames\" carried by\n           the PW are IP\
    \ datagrams, and the two PEs need to cooperate in\n           order to spoof various\
    \ L2-specific procedures used by IP (see\n           Section 3.5).\n   If heterogeneous\
    \ PWs are used, the setup protocol must ensure that\n   each endpoint knows the\
    \ MTU of the remote AC.  If the two ACs do not\n   have the same MTU, one of the\
    \ following three procedures must be\n   carried out:\n      - The PW is not allowed\
    \ to come up.\n      - The endpoint at the AC with the larger MTU must reduce\
    \ the AC's\n        MTU so that it is the same as the MTU of the remote AC.\n\
    \      - The two endpoints must agree to use a specified\n        fragmentation/reassembly\
    \ procedure.\n"
- title: 3.2.3.  Forwarders
  contents:
  - "3.2.3.  Forwarders\n   In all types of L2VPN, a PE (say, PE1) receives a frame\
    \ over an AC\n   and forwards it over a PW to another PE (say, PE2).  PE2 then\n\
    \   forwards the frame out on another AC.\n   The case in which PE1 and PE2 are\
    \ the same device is an important\n   case to handle correctly, in order to provide\
    \ the L2VPN service\n   properly.  However, as this case does not require any\
    \ protocol, we do\n   not address it further in this document.\n   When PE1 receives\
    \ a frame on a particular AC, it must determine the\n   PW on which the frame\
    \ must be forwarded.  In general, this is done by\n   considering:\n      - the\
    \ incoming AC;\n      - possibly the contents of the frame's Layer2 header; and\n\
    \      - possibly some forwarding information that may be statically or\n    \
    \    dynamically maintained.\n   If dynamic or static forwarding information is\
    \ considered, the\n   information is specific to a particular L2VPN instance (i.e.,\
    \ to a\n   particular VPN).\n   Similarly, when PE2 receives a frame on a particular\
    \ PW, it must\n   determine the AC on which the frame must be forwarded.  This\
    \ is done\n   by considering:\n      - the incoming PW;\n      - possibly the\
    \ contents of the frame's Layer2 header; and\n      - possibly some forwarding\
    \ information that may be statically or\n        dynamically maintained.\n   If\
    \ dynamic or static forwarding information is considered, the\n   information\
    \ is specific to a particular L2VPN instance (i.e., to a\n   particular VPN).\n\
    \   The procedures used to make the forwarding decision are known as a\n   \"\
    forwarder\".  We may think of a PW as being \"bound\", at each of its\n   endpoints,\
    \ to a forwarder.  The forwarder in turn \"binds\" the PWs to\n   ACs.  Different\
    \ types of L2VPN have different types of forwarders.\n   For instance, a forwarder\
    \ may bind a single AC to a single PW,\n   ignoring all frame contents and using\
    \ no other forwarding\n   information.  Or a forwarder may bind an AC to a set\
    \ of PWs and ACs,\n   moving individual frames from AC to PW, from a PW to an\
    \ AC or from AC\n   to AC by comparing information from the frame's Layer2 header\
    \ to\n   information in a forwarding database.  This is discussed in more\n  \
    \ detail below, as we consider the different L2VPN types.\n"
- title: 3.2.4.  Tunnels
  contents:
  - "3.2.4.  Tunnels\n   A PW is carried in a \"tunnel\" from PE1 to PE2.  We assume\
    \ that an\n   arbitrary number of PWs may be carried in a single tunnel; the only\n\
    \   requirement is that the PWs all terminate at PE2.\n   We do not even require\
    \ that all the PWs in the tunnel originate at\n   PE1; the tunnels may be multipoint-to-point\
    \ tunnels.  Nor do we\n   require that all PWs between the same pair of PEs travel\
    \ in the same\n   tunnel.  All we require is that when a frame traveling through\
    \ such a\n   tunnel arrives at PE2, PE2 will be able to associate it with a\n\
    \   particular PW.\n   (While one can imagine tunneling techniques that only allow\
    \ one PW\n   per tunnel, they have evident scalability problems, and we do not\n\
    \   consider them further.)\n   A variety of different tunneling technologies\
    \ may be used for the\n   PE-PE tunnels.  All that is really required is that\
    \ the tunneling\n   technologies allow the proper demultiplexing of the contained\
    \ PWs.\n   The tunnels might be MPLS LSPs, L2TP tunnels, IPsec tunnels, MPLS-\n\
    \   in-IP tunnels, etc.  Generally the tunneling technology will require\n   the\
    \ use of an encapsulation that contains a demultiplexor field,\n   where the demultiplexor\
    \ field is used to identify a particular PW.\n   Procedures for setting up and\
    \ maintaining the tunnels are not within\n   the scope of this framework.  (But\
    \ see Section 3.2.6, \"Pseudowire\n   Signaling\".)\n   If there are multiple\
    \ tunnels from PE1 to PE2, it may be desirable to\n   assign a particular PE1-PE2\
    \ PW to a particular tunnel based on some\n   particular characteristics of the\
    \ PW and/or the tunnel.  For example,\n   perhaps different tunnels are associated\
    \ with different QoS\n   characteristics, and different PWs require different\
    \ QoS.  Procedures\n   for specifying how to assign PWs to tunnels are out of\
    \ scope of the\n   current framework.\n   Though point-to-point PWs are bidirectional,\
    \ the tunnels in which\n   they travel need not be either bidirectional or point-to-point.\
    \  For\n   example, a point-to-point PW may travel within a unidirectional\n \
    \  multipoint-to-point MPLS LSP.\n"
- title: 3.2.5.  Encapsulation
  contents:
  - "3.2.5.  Encapsulation\n   As L2VPN packets are carried in pseudowires, standard\
    \ pseudowire\n   encapsulation formats and techniques (as specified by the IETF's\
    \ PWE3\n   WG) should be used wherever applicable.\n   Generally the PW encapsulations\
    \ will themselves be encapsulated\n   within a tunnel encapsulation, as determined\
    \ by the specification of\n   the tunneling protocol.\n   It may be necessary\
    \ to define additional PW encapsulations to cover\n   areas that are of importance\
    \ for L2VPN, but that may not be within\n   the scope of PWE3.  Heterogeneous\
    \ transport may be an instance of\n   this.\n"
- title: 3.2.6.  Pseudowire Signaling
  contents:
  - "3.2.6.  Pseudowire Signaling\n   Procedures for setting up and maintaining the\
    \ PWs themselves are\n   within the scope of this framework.  This includes procedures\
    \ for\n   distributing demultiplexor field values, even though the\n   demultiplexor\
    \ field, strictly speaking, belongs to the tunneling\n   protocol and not to the\
    \ PW.\n   The signaling for a point-to-point pseudowire must perform the\n   following\
    \ functions:\n      - Distribution of the demultiplexor.\n        Since many PWs\
    \ may be carried in a single tunnel, the tunneling\n        protocol must assign\
    \ a demultiplexor value to each PW.  These\n        demultiplexors must be unique\
    \ with respect to a given tunnel\n        (or, with some tunneling technologies,\
    \ unique at the egress PE).\n        Generally, the PE that is the egress of the\
    \ tunnel will select\n        the demultiplexor values and will distribute them\
    \ to the PE(s)\n        which is (are) the ingress(es) of the tunnel.  This is\
    \ the\n        essential part of the PW setup procedure.\n        Note that, as\
    \ is usually the case in tunneling architectures,\n        the demultiplexor field\
    \ belongs to the tunneling protocol, not\n        to the protocol being tunneled.\
    \  For this reason, the PW setup\n        protocols may be extensions of the control\
    \ protocols for setting\n        up the tunnels.\n      - Selection of the Forwarder\
    \ at the remote PE.\n        The signaling protocol must contain enough information\
    \ to enable\n        the remote PE to select the proper forwarder to which the\
    \ PW is\n        to be bound.  We can call this information the \"Remote Forwarder\n\
    \        Selector\".  The information that is required will depend on the\n  \
    \      type of L2VPN being provided and on the provisioning model being\n    \
    \    used (see Sections 3.3.1 and 3.4.2).  The Remote Forwarder\n        Selector\
    \ may uniquely identify a particular Forwarder, or it may\n        identify an\
    \ attribute of Forwarders.  In the latter case, it\n        would select whichever\
    \ Forwarder has been provisioned with that\n        attribute.\n      - Supporting\
    \ pseudowire emulations.\n        To the extent that a particular PW must emulate\
    \ the signaling of\n        a particular Layer2 technology, the PW signaling must\
    \ provide\n        the necessary functions.\n      - Distribution of state changes.\n\
    \        Changes in the state of an AC may need to be reflected in\n        changes\
    \ to the state of the PW to which the AC is bound, and\n        vice versa.  The\
    \ specification as to which changes need to be\n        reflected in what way\
    \ would generally be within the province of\n        the PWE3 WG.\n      - Establishing\
    \ pseudowire characteristics.\n        To the extent that one or more characteristics\
    \ of a PW must be\n        known to and/or agreed upon by both endpoints, the\
    \ signaling\n        must allow for the necessary interaction.\n   As specified\
    \ above, signaling for point-to-point PWs must pass enough\n   information to\
    \ allow a remote PE to properly bind a PW to a\n   Forwarder, and to associate\
    \ a particular demultiplexor value with\n   that PW.  Once the two PEs have done\
    \ the proper PW/Forwarder\n   bindings, and have agreed on the demultiplexor values,\
    \ the PW may be\n   considered set up.  If it is necessary to negotiate further\n\
    \   characteristics or parameters of a particular PW, or to pass status\n   information\
    \ for a particular PW, the PW may be identified by the\n   demultiplexor value.\n\
    \   Signaling procedures for point-to-point pseudowires are most commonly\n  \
    \ point-to-point procedures that are executed by the two PW endpoints.\n   There\
    \ are, however, proposals to use point-to-multipoint signaling\n   for setting\
    \ up point-to-point pseudowires, so this is included in the\n   framework.  When\
    \ PWs are themselves point-to-multipoint, it is also\n   possible to use either\
    \ point-to-point signaling or point-to-\n   multipoint signaling to set them up.\
    \  This is discussed in the\n   remainder of this section.\n"
- title: 3.2.6.1.  Point-to-Point Signaling
  contents:
  - "3.2.6.1.  Point-to-Point Signaling\n   There are several ways to do the necessary\
    \ point-to-point signaling.\n   Among them are:\n      - LDP\n        LDP [RFC3036]\
    \ extensions can be defined for pseudowire\n        signaling.  This form of signaling\
    \ can be used for pseudowires\n        that are to be carried in MPLS \"tunnels\"\
    , or in MPLS-in-\n        something-else tunnels.\n      - L2TP\n        L2TP\
    \ [RFC2661] can be used for pseudowire signaling, resulting\n        in pseudowires\
    \ that are carried as \"sessions\" within L2TP\n        tunnels.  Pseudowire-specific\
    \ extensions to L2TP may also be\n        needed.\n   Other methods may be possible\
    \ as well.\n   It is possible to have one control connection between a pair of\
    \ PEs,\n   which is used to control many PWs.\n   The use of point-to-point signaling\
    \ for setting up point-to-point PWs\n   is straightforward.  Multipoint-to-point\
    \ PWs can also be set up by\n   point-to-point signaling, as the remote PEs do\
    \ not necessarily need\n   to know whether the PWs are multipoint-to-point or\
    \ point-to-point.\n   In some signaling procedures, the same demultiplexor value\
    \ may be\n   assigned to all the remote PEs.\n"
- title: 3.2.6.2.  Point-to-Multipoint Signaling
  contents:
  - "3.2.6.2.  Point-to-Multipoint Signaling\n   Consider the following conditions:\n\
    \      - It is necessary to set up a set of PWs, all of which have the\n     \
    \   same characteristics.\n      - It is not necessary to use the PW signaling\
    \ protocol to pass PW\n        state changes.\n      - For each PW in the set,\
    \ the same value of the Remote Forwarder\n        Selector can be used.\n   Call\
    \ these the \"Environmental Conditions\".\n   Suppose also that there is some\
    \ mechanism by which, given a range of\n   demultiplexor values, each of a set\
    \ of PEs can make a unique and\n   deterministic selection of a single value from\
    \ within that range.\n   Call this the \"Demultiplexor Condition\".  Alternatively,\
    \ suppose that\n   one is trying to set up a multipoint-to-point PW rather than\
    \ to set\n   up a point-to-point PW.  Call this the \"Multipoint Condition\".\n\
    \   If:\n      - The Environmental Conditions hold; and\n      - Either\n    \
    \     * the Demultiplexor Condition holds, or\n         * the Multipoint Condition\
    \ holds,\n   then for a given set of PWs that terminate at egress PE1, the\n \
    \  information that PE1 needs to send to the ingress PE(s) of each\n   pseudowire\
    \ in the set is exactly the same.  All the ingress PE(s)\n   receive the same\
    \ Forwarder Selector value.  They all receive the same\n   set of PW parameters\
    \ (if any).  And either they all receive the same\n   demultiplexor value (if\
    \ the PW is multipoint-to-point) or they all\n   receive a range of demultiplexor\
    \ values from which each can choose a\n   unique demultiplexor value for itself.\n\
    \   Rather than connect to each ingress PE and replicate the same\n   information,\
    \ it may make sense either to multicast the information,\n   or to send the information\
    \ once to a \"reflector\", which will then\n   take responsibility for distributing\
    \ the information to the other\n   PEs.\n   We refer to this sort of technique\
    \ as \"point-to-multipoint\"\n   signaling.  It would, for example, be possible\
    \ to use BGP [RFC1771]\n   to do the signaling, with PEs that are BGP peers not\
    \ of each other,\n   but of one or more BGP route reflectors [RFC2796].\n"
- title: 3.2.6.3.  Inter-AS Considerations
  contents:
  - "3.2.6.3.  Inter-AS Considerations\n   Pseudowires may need to run from a PE in\
    \ one Service Provider's\n   network to a PE in another Service Provider's network.\
    \  This has the\n   following implications:\n      - The signaling protocol that\
    \ sets up the PWs must be able to\n        cross network boundaries.  Of course,\
    \ all IP-based protocols\n        have this capability.\n      - The two PEs at\
    \ the PW endpoints must be addressable and routable\n        from each other.\n\
    \      - The signaling protocol needs to allow each PW endpoint to\n        authenticate\
    \ the other.  To make use of the authentication\n        capability, there would\
    \ also need to be some method of key\n        distribution that is acceptable\
    \ to both administrations.\n"
- title: 3.2.7.  Service Quality
  contents:
  - "3.2.7.  Service Quality\n   Service Quality refers to the ability for the network\
    \ to deliver a\n   Service level Specification (SLS) for service attributes such\
    \ as\n   protection, security, and Quality of Service (QoS).  The service\n  \
    \ quality provided depends on the subscriber's requirements and can be\n   characterized\
    \ by a number of performance metrics.\n   The necessary Service Quality must be\
    \ provided on the ACs, as well as\n   on the PWs.  Mechanisms for providing Service\
    \ Quality on the PWs may\n   be PW-specific or tunnel-specific; in the latter\
    \ case, the assignment\n   of a PW to a tunnel may depend on the Service Quality.\n"
- title: 3.2.7.1.  Quality of Service (QoS)
  contents:
  - "3.2.7.1.  Quality of Service (QoS)\n   QoS describes the queuing behavior applied\
    \ to a particular \"flow\", in\n   order to achieve particular goals of precedence,\
    \ throughput, delay,\n   jitter, etc.\n   Based on the customer Service Level\
    \ Agreement (SLA), traffic from a\n   customer can be prioritized, policed, and\
    \ shaped for QoS\n   requirements.  The queuing and forwarding policies can preserve\
    \ the\n   packet order and QoS parameters of customer traffic.  The class of\n\
    \   services can be mapped from information in the customer frames, or it\n  \
    \ can be independent of the frame content.\n   QoS functions can be listed as\
    \ follows:\n      - Customer Traffic Prioritization: L2VPN services could be best\n\
    \        effort or QoS guaranteed.  Traffic from one customer might need\n   \
    \     to be prioritized over others when sharing same network\n        resources.\
    \  This requires capabilities within the L2VPN solution\n        to classify and\
    \ mark priority to QoS guaranteed customer\n        traffic.\n      - Proper queuing\
    \ behavior would be needed at the egress AC, and\n        possibly within the\
    \ backbone network as well.  If queuing\n        behavior must be controlled within\
    \ the backbone network, the\n        control might be based on CoS information\
    \ in the MPLS or IP\n        header, or it might be achieved by nesting particular\
    \ tunnels\n        within particular traffic engineering tunnels.\n      - Policing:\
    \ This ensures that a user of L2VPN services uses\n        network resources within\
    \ the limits of the agreed SLA.  Any\n        excess L2VPN traffic can be rejected\
    \ or handled differently\n        based on provider policy.\n      - Policing\
    \ would generally be applied at the ingress AC.\n      - Shaping: Under some cases,\
    \ the random nature of L2VPN traffic\n        might lead to sub-optimal utilization\
    \ of network resources.\n        Through queuing and forwarding mechanisms, the\
    \ traffic can be\n        shaped without altering the packet order.\n      - Shaping\
    \ would generally be applied at the ingress AC.\n"
- title: 3.2.7.2.  Resiliency
  contents:
  - "3.2.7.2.  Resiliency\n   Resiliency describes the ability of the L2VPN infrastructure\
    \ to\n   protect a flow from network outage, so that service remains available\n\
    \   in the presence of failures.\n   L2VPN, like any other service, is subject\
    \ to failures such as link,\n   trunk, and node failures, both in the SP's core\
    \ network\n   infrastructure and on the ACs.\n   It is desirable that the failure\
    \ be detected \"immediately\" and that\n   protection mechanisms allow fast restoration\
    \ times to make L2VPN\n   service almost transparent to these failures to the\
    \ extent possible,\n   based on the level of resiliency.  Restoration should take\
    \ place\n   before the CEs can react to the failure.  Essential aspects of\n \
    \  providing resiliency are:\n      - Link/Node failure detection: Mechanisms\
    \ within the L2VPN service\n        should allow for link or node failures that\
    \ impact the service,\n        and that should be detected immediately.\n    \
    \  - Resiliency policy: The way in which a detected failure is\n        handled\
    \ will depend on the restoration policy of the SLA\n        associated with the\
    \ L2VPN service specification.  It may need to\n        be handled immediately,\
    \ or it may need to be handled only if no\n        other critical failure needs\
    \ protection resources, or it may be\n        completely ignored if it is within\
    \ the bounds of the \"acceptable\n        downtime\" allowed by the L2VPN service.\n\
    \      - Restoration Mechanisms: The L2VPN solutions could allow for\n       \
    \ physical level protection, logical level protection, or both.\n        For example,\
    \ by connecting customers over redundant and\n        physically separate ACs\
    \ to different provider customer-facing\n        devices, one AC can be maintained\
    \ as active, and the other could\n        be marked as a backup; upon the failure\
    \ detection across the\n        primary AC, the backup could become active.\n\
    \   To a great extent, resiliency is a matter of having appropriate\n   failure\
    \ and recovery mechanisms in the network core, including\n   \"ordinary\" adaptive\
    \ routing as well as \"fast reroute\" capabilities.\n   The ability to support\
    \ redundant ACs between CEs and PEs also plays a\n   role.\n"
- title: 3.2.8.  Management
  contents:
  - "3.2.8.  Management\n   An L2VPN solution can provide mechanisms to manage and\
    \ monitor\n   different L2VPN components.  From a Service Level Agreement (SLA)\n\
    \   perspective, L2VPN solutions could allow monitoring of L2VPN service\n   characteristics\
    \ and offer mechanisms used by Service Providers to\n   report such monitored\
    \ statistical data.  Trouble-shooting and\n   verification of operational and\
    \ maintenance activities of L2VPN\n   services are essential requirements for\
    \ Service Providers.\n"
- title: 3.3.  VPWS
  contents:
  - "3.3.  VPWS\n   A VPWS is an L2VPN service in which each forwarder binds exactly\
    \ one\n   AC to exactly one PW.  Frames received on the AC are transmitted on\n\
    \   the PW; frames received on the PW are transmitted on the AC.  The\n   content\
    \ of a frame's Layer2 header plays no role in the forwarding\n   decision, except\
    \ insofar as the Layer2 header contents are used to\n   associate the frame with\
    \ a particular AC (e.g., the DLCI field of a\n   Frame Relay frame identifies\
    \ the AC).\n   A particular combination of <AC, PW, AC> forms a \"virtual circuit\"\
    \n   between two CE devices.\n   A particular VPN (VPWS instance) may be thought\
    \ of as a collection of\n   such virtual circuits, or as an \"overlay\" of PWs\
    \ on the MPLS or IP\n   backbone.  This creates an overlay topology that is in\
    \ effect the\n   \"virtual backbone\" of a particular VPN.\n   Whether two virtual\
    \ circuits are said to belong to the same VPN or\n   not is an administrative\
    \ matter based on the agreements between the\n   SPs and their customers.  This\
    \ may impact the provisioning model\n   (discussed below).  It may also affect\
    \ how particular PWs are\n   assigned to tunnels, the way QoS is assigned to particular\
    \ ACs and\n   PWs, etc.\n   Note that VPWS makes use of point-to-point PWs exclusively.\n"
- title: 3.3.1.  Provisioning and Auto-Discovery
  contents:
  - "3.3.1.  Provisioning and Auto-Discovery\n   Provisioning a VPWS is a matter of:\n\
    \       1.  Provisioning the ACs;\n       2.  Providing the PEs with the necessary\
    \ information to enable\n          them to set up PWs between ACs to result in\
    \ the desired\n          overlay topology; and\n       3.  Configuring the PWs\
    \ with any necessary characteristics.\n"
- title: 3.3.1.1.  Attachment Circuit Provisioning
  contents:
  - "3.3.1.1.  Attachment Circuit Provisioning\n   In many cases, the ACs must be\
    \ individually provisioned on the PE\n   and/or CE.  This will certainly be the\
    \ case if the CE/PE attachment\n   technology is a switched network, such as ATM\
    \ or FR, and the VCs are\n   PVCs rather than SVCs.  It is also the case whenever\
    \ the individual\n   Attachment Circuits need to be given specific parameters\
    \ (e.g., QoS\n   parameters, guaranteed bandwidth parameters) that differ from\
    \ circuit\n   to circuit.\n   There are also cases in which ACs might not have\
    \ to be individually\n   provisioned.  For example, if an AC is just an MPLS LSP\
    \ running\n   between a CE and a PE, it could be set up as the RESULT of setting\
    \ up\n   a PW rather than having to be provisioned BEFORE the PW can be set\n\
    \   up.  The same may apply whenever the AC is a Switched Virtual Circuit\n  \
    \ of any sort, though in this case, various policy controls might need\n   to\
    \ be provisioned; e.g., limiting the number of ACs that can be set\n   up between\
    \ a given CE and a given PE.\n   Issues such as whether the Attachment Circuits\
    \ need to be\n   individually provisioned or not, whether they are Switched VCs\
    \ or\n   Permanent VCs, and what sorts of policy controls may be applied are\n\
    \   implementation and deployment issues and are considered to be out of\n   scope\
    \ of this framework.\n"
- title: 3.3.1.2.  PW Provisioning for Arbitrary Overlay Topologies
  contents:
  - "3.3.1.2.  PW Provisioning for Arbitrary Overlay Topologies\n   In order to support\
    \ arbitrary overlay topologies, it is necessary to\n   allow the provisioning\
    \ of individual PWs.  In this model, when a PW\n   is provisioned on a PE device,\
    \ it is locally bound to a specific AC.\n   It is also provisioned with information\
    \ that identifies a specific AC\n   at a remote PE.\n   There are basically two\
    \ variations of this provisioning model:\n      - Two-sided provisioning\n   \
    \     With two-sided provisioning, each PE that is at the end of a PW\n      \
    \  is provisioned with the following information:\n          * Identifier of the\
    \ Local AC to which the PW is to be bound\n          * PW type and parameters\n\
    \          * IP address of the remote PE (i.e., the PE that is to be at\n    \
    \        the remote end of the PW)\n          * Identifier that is meaningful\
    \ to the remote PE, and that can\n            be passed in the PW signaling protocol\
    \ to enable the remote\n            PE to bind the PW to the proper AC.  This\
    \ can be an\n            identifier of the PW or an identifier of the remote AC.\
    \  If\n            a PW identifier is used, it must be unique at each of the\n\
    \            two PEs.  If an AC identifier is used, it need only be\n        \
    \    unique at the remote PE.\n        This identifier is then used as the Remote\
    \ Forwarder Selector\n        when signaling is done (see 3.2.6.1).\n      - Single-sided\
    \ provisioning\n        With single-sided provisioning, a PE at one end of a PW\
    \ is\n        provisioned with the following information:\n          * Identifier\
    \ of the Local AC to which the PW is to be bound\n          * PW type and parameters\n\
    \          * Globally unique identifier of remote AC\n        This identifier\
    \ is then used as the Forwarder Selector when\n        signaling is done (see\
    \ section 3.2.6.1).\n        In this provisioning model, the IP address of the\
    \ remote PE is\n        not provisioned.  Rather, the assumption is that an auto-\n\
    \        discovery scheme will be used to map the globally unique\n        identifier\
    \ to the IP address of the remote PE, along with an\n        identifier (perhaps\
    \ unique only at the latter PE) for an AC at\n        that PE.  The PW signaling\
    \ protocol can then make a connection\n        to the remote PE, passing the AC\
    \ identifier, so that the remote\n        PE binds the PW to the proper AC.\n\
    \        This scheme requires provisioning of the PW at only one PE, but\n   \
    \     it does not eliminate the need (if there is a need) to provision\n     \
    \   the ACs at both PEs.\n   These provisioning models fit well with the use of\
    \ point-to-point\n   signaling.  When each PW is individually provisioned, as\
    \ the\n   conditions necessary for the use of point-to-multipoint signaling do\n\
    \   not hold.\n"
- title: 3.3.1.3.  Colored Pools PW Provisioning Model
  contents:
  - "3.3.1.3.  Colored Pools PW Provisioning Model\n   Suppose that at each PE, sets\
    \ of ACs are gathered together into\n   \"pools\", and that each such pool is\
    \ assigned a \"color\".  (For\n   example, a pool might contain all and only the\
    \ ACs from this PE to a\n   particular CE.) Now suppose that we impose the following\
    \ rule:\n   whenever PE1 and PE2 have a pool of the same color, there will be\
    \ a\n   PW between PE1 and PE2 that is bound at PE1 to an arbitrarily chosen\n\
    \   AC from that pool, and at PE2 to an arbitrarily chosen AC from that\n   pool.\
    \  (We do not rule out the case where a single PE has multiple\n   pools of a\
    \ given color.)\n   For example, each pool in a particular PE might represent\
    \ a\n   particular CE device, for which the ACs in the pool are the ACs\n   connecting\
    \ that CE to that PE.  The color might be a VPN-id.\n   Application of this provisioning\
    \ model would then lead to a full CE-\n   to-CE mesh within the VPN, where every\
    \ CE in the VPN has a virtual\n   circuit to every other CE within the VPN.\n\
    \   More specifically, to provision VPWS according to this model, one\n   provisions\
    \ a set of pools and configures each pool with the following\n   information:\n\
    \      - The set of ACs that belong to the pool (with no AC belonging to\n   \
    \     more than one pool)\n      - The color\n      - A pool identifier that is\
    \ unique at least relative to the color.\n        An auto-discovery procedure\
    \ is then used to map each color into\n        a list of ordered pairs <IP address\
    \ of PE, pool id>.  The\n        occurrence of a pair <X, Y> on this list means\
    \ that the PE at IP\n        address X has a pool with pool id Y, which is of\
    \ the specified\n        color.\n        This information can be used to support\
    \ several different\n        signaling techniques.  One possible technique proceeds\
    \ as\n        follows:\n      - A PE finds that it has a pool of color C.\n  \
    \    - Using auto-discovery, it obtains the set of ordered pairs <X,Y>\n     \
    \   for color C.\n      - For each such pair <X,Y>, it:\n        * removes an\
    \ AC from the pool;\n        * binds the AC to a particular PW; and\n        *\
    \ signals PE X via point-to-point signaling that the PW is to be\n          bound\
    \ to an AC from pool Y.\n   Another possible signaling technique is the following:\n\
    \      - A PE finds that it has a pool of color C, containing n ACs.\n      -\
    \ It binds each AC to a PW, creating a set of PWs.  This set of\n        PWs is\
    \ then organized into a sequence.  (For instance, each PW\n        may be associated\
    \ with a demultiplexor field value, and the PWs\n        may then be sequenced\
    \ according to the numerical value of their\n        respective demultiplexors.)\n\
    \      - Using auto-discovery, it obtains the list of PE routers that\n      \
    \  have one or more pools of color C.\n      - It signals each such PE router,\
    \ specifying the sequence Q of\n        PWs.\n      - If PE X receives such a\
    \ signal and PE X has a pool Y of the\n        specified color, it:\n        *\
    \ removes an AC from the pool; and\n        * binds the AC to the PW that is the\
    \ \"Yth\" PW in the sequence Q.\n   This presumes, of course, that the pool identifiers\
    \ are or can be\n   uniquely mapped into small ordinal numbers; assigning the\
    \ pool\n   identifiers in this way becomes a requirement of the provisioning\n\
    \   system.\n   Note that since this technique signals the same information to\
    \ all\n   the remote PEs, it can be supported via point-to-multipoint\n   signaling.\n\
    \   This provisioning model can be applied as long as the following\n   conditions\
    \ hold:\n      - There is no need to provision different characteristics for the\n\
    \        different PWs;\n      - It makes no difference which pairs of ACs are\
    \ bound together by\n        PWs, as long as both ACs in the pair come from like-colored\n\
    \        pools; and\n      - It is possible to construct the desired overlay topology\
    \ simply\n        by assigning colors to the pools.  (This is certainly simple\
    \ if\n        a full mesh is desired, or if a hub and spoke configuration is\n\
    \        desired; creating arbitrary topologies is less simple, and is\n     \
    \   perhaps not always possible.)\n"
- title: 3.3.2.  Requirements on Auto-Discovery Procedures
  contents:
  - "3.3.2.  Requirements on Auto-Discovery Procedures\n   Some of the requirements\
    \ for auto-discovery procedures can be deduced\n   from the above.\n   To support\
    \ the single-sided provisioning model, auto-discovery must\n   be able to map\
    \ a globally unique identifier (of a PW or of an\n   Attachment Circuit) to an\
    \ IP address of a PE.\n   To support the colored pools provisioning model, auto-discovery\
    \ must\n   enable a PE to determine the set of other PEs that contain pools of\n\
    \   the same color.\n   These requirements enable the auto-discovery scheme to\
    \ provide the\n   information, which the PEs need to set up the PWs.\n   There\
    \ are additional requirements on the auto-discovery procedures\n   that cannot\
    \ simply be deduced from the provisioning model:\n      - Particular signaling\
    \ schemes may require additional information\n        before they can proceed\
    \ and hence may impose additional\n        requirements on the auto-discovery\
    \ procedures.\n      - A given Service Provider may support several different\
    \ types of\n        signaling procedures, and thus the PEs may need to learn,\
    \ via\n        auto-discovery, which signaling procedures to use.\n      - Changes\
    \ in the configuration of a PE should be reflected by the\n        auto-discovery\
    \ procedures, within a timely manner, and without\n        the need to explicitly\
    \ reconfigure any other PE.\n      - The auto-configuration procedures must work\
    \ across service\n        provider boundaries.  This rules out, e.g., use of schemes\
    \ that\n        piggyback the auto-discovery information on the backbone's IGP.\n"
- title: 3.3.3.  Heterogeneous Pseudowires
  contents:
  - "3.3.3.  Heterogeneous Pseudowires\n   Under certain circumstances, it may be\
    \ desirable to have a PW that\n   binds two ACs that use different technologies\
    \ (e.g., one is ATM, one\n   is Ethernet).  There are a number of different ways,\
    \ depending on the\n   AC types, in which this can be done.  For example:\n  \
    \    - If one AC is ATM and one is FR, then standard ATM/FR Network\n        Interworking\
    \ can be used.  In this case, the PW might be\n        signaled for ATM, where\
    \ the Interworking function occurs between\n        the PW and the FR AC.\n  \
    \    - A common encapsulation can be used on both ACs, if for example,\n     \
    \   one AC is Ethernet and one is FR, an \"Ethernet over FR\"\n        encapsulation\
    \ can be used on the latter.  In this case, the PW\n        could be signaled\
    \ for Ethernet, with processing of the Ethernet\n        over FR encapsulation\
    \ local to the PE with the FR AC.\n      - If it is known that the two ACs attach\
    \ to IP routers or hosts\n        and carry only IP traffic, then one could use\
    \ a PW that carries\n        the IP packets, and the respective Layer2 encapsulations\
    \ would\n        be local matters for the two PEs.  However, if one of the ACs\
    \ is\n        a LAN and one is a point-to-point link, care would have to be\n\
    \        taken to ensure that procedures such as ARP and Inverse ARP are\n   \
    \     properly handled; this might require some signaling, and some\n        proxy\
    \ functions.  Further, if the CEs use a routing algorithm\n        that has different\
    \ procedures for LAN interfaces than those for\n        point-to-point interfaces,\
    \ additional mechanisms may be required\n        to ensure proper interworking.\n"
- title: 3.4.  VPLS Emulated LANs
  contents:
  - "3.4.  VPLS Emulated LANs\n   A VPLS is an L2VPN service in which:\n      - the\
    \ ACs attach CE devices to PE bridge modules; and\n      - each PE bridge module\
    \ is attached via an \"emulated LAN\n        interface\" to an \"emulated LAN\"\
    .\n   This is shown in Figure 3.\n   In this section, we examine the functional\
    \ decomposition of the VPLS\n   Emulated LAN.  An Emulated LAN's ACs are the \"\
    emulated LAN\n   interfaces\" attaching PE bridge modules to the \"VPLS Forwarder\"\
    \n   modules (see Figure 3).  The payload on the ACs consists of ethernet\n  \
    \ frames, with or without VLAN headers.\n   A given VPLS Forwarder in a given\
    \ PE will have multiple ACs only if\n   there are multiple bridge modules in that\
    \ PE that attach to that\n   Forwarder.  This scenario is included in the Framework,\
    \ though\n   discussion of its utility is out of scope.\n   The set of VPLS Forwarders\
    \ within a single VPLS are connected via\n   PWs.  Two VPLS Forwarders will have\
    \ a PW between them only if those\n   two Forwarders are part of the same VPLS.\
    \  (There may be a further\n   restriction that two VPLS Forwarders have a PW\
    \ between them only if\n   those two Forwarders belong to the same VLAN in the\
    \ same VPN.)  A\n   particular set of interconnected VPLS Forwarders is what constitutes\n\
    \   a VPLS Emulated LAN.\n   On a real LAN, any frame transmitted by one entity\
    \ is received by all\n   the others.  A VPLS Emulated LAN, however, behaves somewhat\n\
    \   differently.  When a VPLS Forwarder receives a unicast frame over one\n  \
    \ of its Emulated LAN interfaces, the Forwarder does not necessarily\n   send\
    \ the frame to all the other Forwarders on that Emulated LAN.  A\n   unicast frame\
    \ needs to be sent to only one other Forwarder in order\n   to be properly delivered\
    \ to its destination MAC address.  If the\n   transmitting Forwarder knows which\
    \ other Forwarder needs to receive a\n   particular unicast frame, it will send\
    \ the frame to just that one\n   Forwarder.  This forwarding optimization is an\
    \ important part of any\n   attempt to provide a VPLS service over a wide-area\
    \ or metropolitan\n   area network.\n   In effect, then, each Forwarder behaves\
    \ as a \"Virtual Switch\n   Instance\" (VSI), maintaining a forwarding table that\
    \ maps MAC\n   addresses to PWs.  The VSI is populated in much the same way that\
    \ a\n   standard bridge populates its forwarding table.  The VPLS Forwarders\n\
    \   do MAC Source Address (SA) learning on frames received on PWs from\n   other\
    \ Forwarders and must also do the related set of procedures, such\n   as aging\
    \ out address entries.  Frames with unknown DAs or multicast\n   DAs must be \"\
    broadcast\" by one Forwarder to all the others (on the\n   same emulated LAN).\
    \  There are, however, a few important differences\n   between the VPLS Forwarder\
    \ VSI and the standard bridge forwarding\n   function:\n      - A VPLS Forwarder\
    \ never learns the MAC SAs of frames that it\n        receives on its ACs; it\
    \ only learns the MAC SAs of frames that\n        are received on PWs from other\
    \ VPLS Forwarders; and\n      - The VPLS Forwarders of a particular emulated LAN\
    \ do not\n        participate in a spanning tree protocol with each other.  A\n\
    \        \"split horizon\" technique is used to prevent forwarding loops.\n  \
    \ These points are discussed further in the next section.\n   Note that the PE\
    \ bridge modules that are on a given Emulated LAN may\n   or may not run a spanning\
    \ tree protocol with each other over the\n   Emulated LAN; whether they do so\
    \ or not is outside the scope of the\n   VPLS specifications.  The PE bridge modules\
    \ will do MAC address\n   learning on the ACs.  The PE bridge modules also do\
    \ MAC address\n   learning on the Emulated LAN interfaces, but do not do MAC address\n\
    \   learning on the PWs, as the PWs are \"hidden\" behind the Emulated LAN\n \
    \  interface.  Conceptually, the PE bridge module's forwarding table and\n   the\
    \ VPLS Forwarder's VSI are distinct entities.  (Of course,\n   particular implementations\
    \ might combine these into a single table,\n   but that is beyond the scope of\
    \ this document.)\n   A further issue arises if the PE bridges run bridge control\
    \ protocols\n   with each other over the Emulated LAN.  Bridge control protocols\
    \ are\n   generally designed to run in over a real LAN and may presume, for\n\
    \   their proper functioning, certain characteristics of the LAN, such as\n  \
    \ low latency and sequential delivery.  If the Emulated LAN does not\n   provide\
    \ these characteristics, the control protocols may not perform\n   as expected\
    \ unless special mechanisms are provided for carrying the\n   control frames.\n\
    \   It should be noted that changes in the spanning tree (if any) of a\n   customer\
    \ network, or in the spanning tree (if any) of the PE bridges,\n   may cause certain\
    \ MAC addresses to change their location from one PE\n   to another.  These changes\
    \ may not be visible to the VPLS Forwarders,\n   which means that those MAC addresses\
    \ might become unreachable until\n   they are aged out of the first PE's VSI.\
    \  If this is not acceptable,\n   some mechanism for communicating such changes\
    \ to the VPLS Forwarders\n   must be provided.\n"
- title: 3.4.1.  VPLS Overlay Topologies and Forwarding
  contents:
  - "3.4.1.  VPLS Overlay Topologies and Forwarding\n   Within a single VPLS, the\
    \ VPLS Forwarders are interconnected by PWs.\n   The set of PWs thus forms an\
    \ \"overlay topology\".\n   The VPLS Forwarder VSIs are populated by means of\
    \ MAC address\n   learning.  That is, the VSI keeps track of which MAC SAs have\
    \ been\n   received over which PWs.  The presumption, of course, is that if a\n\
    \   particular MAC address appears as the SA of a frame received over a\n   particular\
    \ PW, then frames that carry that MAC address in the DA\n   field should be sent\
    \ to the VSI that is at the remote end of the PW.\n   In order for this presumption\
    \ to be true, there must be a unique VSI\n   at the remote end of the PW, which\
    \ means that VSIs cannot be\n   interconnected by means of multipoint-to-point\
    \ PWs.  The PWs are\n   necessarily either point-to-point or, possibly, point-to-multipoint.\n\
    \   MAC learning over a point-to-point PW is done via the standard\n   techniques\
    \ as specified by IEEE, where the PW is treated by the VPLS\n   Forwarder as a\
    \ \"bridge port\".  Of course, if a MAC address is learned\n   from a point-to-multipoint\
    \ PW, the VSI must indicate that packets to\n   that address are to be sent over\
    \ a point-to-point PW that leads to\n   the root of that point-to-multipoint PW.\n\
    \   The VSI forwarding decisions must be coordinated so that loop-free\n   forwarding\
    \ over the overlay topology is ensured.\n   There are several possible types of\
    \ overlay topologies:\n      - Full mesh\n        In a full mesh, every VSI in\
    \ a given VPLS has exactly one\n        point-to-point PW to every other VSI in\
    \ that same VPLS.\n        In this topology, loop free forwarding of frames is\
    \ ensured by\n        the following rule: if a VSI receives a frame, over a PW,\
    \ from\n        another VSI, it MUST NOT forward that frame over ANY other PW\
    \ to\n        any other VSI.  This ensures that once a frame traverses the\n \
    \       Emulated LAN, it must be sent off the Emulated LAN.\n        If a VSI\
    \ receives, on one of its Emulated LAN interfaces, a\n        unicast frame with\
    \ a known DA, the frame is sent on exactly one\n        point-to-point PW.\n \
    \       If a VSI receives, on one of its Emulated LAN interfaces, a\n        multicast\
    \ frame or a unicast frame with an unknown DA, it sends\n        a copy of the\
    \ frame to each other VSI in the same Emulated LAN.\n        This can be done\
    \ by replicating the frame and sending a copy\n        over each point-to-point\
    \ PW.  Alternatively, the full mesh of\n        point-to-point PWs may be augmented\
    \ with point-to-multipoint\n        PWs, where each VSI in a VPLS is the transmitter\
    \ on a single\n        point-to-multipoint PW, and the receivers on that PW are\
    \ all the\n        other VSIs in that VPLS.\n      - Tree structured\n       \
    \ In a tree structured topology, every VSI in a particular VPLS is\n        provisioned\
    \ to be at a particular level in the tree.  A given\n        VSI has at most one\
    \ pseudowire leading to a higher level.  The\n        root of the tree is considered\
    \ the highest level.\n        In this topology, loop free forwarding of frames\
    \ is ensured by\n        the following rule: if a frame is received over a pseudowire\n\
    \        from a higher level, it may not be sent over a pseudowire that\n    \
    \    leads to a higher level.\n      - Tree with Meshed Highest Level\n      \
    \  In this variant of the tree-structured topology, there may be\n        more\
    \ than one VSI at the highest level, but the set of VSIs that\n        are at\
    \ the highest level must be fully meshed.  To ensure loop\n        free forwarding,\
    \ we need to impose the rule that a frame can be\n        sent on a pseudowire\
    \ to the same or higher level only if it\n        arrived over a pseudowire from\
    \ a lower level, and that frames\n        arriving over PWs from the same level\
    \ cannot be sent on PWs to\n        the same level.\n   Other overlay topologies\
    \ are also possible; e.g., an arbitrary\n   partial mesh of PWs among the VSIs\
    \ of a VPLS.  Loop-freedom could\n   then be assured by, for example, running\
    \ a spanning tree on the\n   overlay.  These topologies are not further considered\
    \ in this\n   framework.\n   Note that loop freedom in the overlay topology does\
    \ not necessarily\n   ensure loop freedom in the overall customer LAN that contains\
    \ the\n   VPLS.  It does not even ensure loop freedom among the PE bridge\n  \
    \ modules.  It ensures only that when a frame is sent on the Emulated\n   LAN,\
    \ the frame will not loop endlessly before (or instead of) leaving\n   the Emulated\
    \ LAN.\n   Improper configuration of the customer LAN or PE bridge modules may\n\
    \   cause frames to loop, and frames that fall into such loops may\n   transit\
    \ the overlay topology multiple times.  Procedures that enable\n   the PE to detect\
    \ and/or prevent such loops may be advisable.\n"
- title: 3.4.2.  Provisioning and Auto-Discovery
  contents:
  - "3.4.2.  Provisioning and Auto-Discovery\n   Each VPLS must be assigned a globally\
    \ unique identifier.  This can be\n   thought of as a VPN-id.\n   The ACs attaching\
    \ the CEs to the PEs must be provisioned on both the\n   PEs and the CEs.  A VSI\
    \ for that VPLS must be provisioned on the PE,\n   and the local ACs of that VPLS\
    \ must be associated with that VSI.  The\n   VSI must be provisioned with the\
    \ identifier of the VPLS to which it\n   belongs.\n   An auto-discovery scheme\
    \ may be used by a PE to map a VPLS identifier\n   into the set of remote PEs\
    \ that have VSIs in that VPLS.  Once this\n   set is determined, the PE can use\
    \ pseudowire signaling to set up a PW\n   to each of those VSIs.  The VPLS identifier\
    \ would serve as the\n   signaling protocol's Forwarder Selector.  This would\
    \ result in a full\n   mesh of PWs among the VSIs in a particular VPLS.\n   If\
    \ a single VPLS contains multiple VLANs, then it may be desirable to\n   limit\
    \ connectivity so that two VSIs are connected only if they have a\n   VLAN in\
    \ common.\n   In this case, each VSI would need to be provisioned with one or\
    \ more\n   VLAN ids, and the auto-discovery scheme would need to map a VPLS\n\
    \   identifier into pairs of <PE, VLAN id>.\n   If a fully meshed topology of\
    \ VSIs is not desired, then each VSI\n   needs to be provisioned with additional\
    \ information specifying its\n   placement in the topology.  This information\
    \ would also need to be\n   provided by the auto-discovery scheme.\n   Alternatively,\
    \ the single-sided provisioning method discussed in\n   Section 3.3.1.2 could\
    \ be used.  As this is more complicated, it would\n   only be used if it were\
    \ necessary to associate individual PWs with\n   individual characteristics. \
    \ For example, if different guaranteed\n   bandwidths were needed between different\
    \ pairs of sites within a\n   VPLS, the PWs would have to be provisioned individually.\n"
- title: 3.4.3.  Distributed PE
  contents:
  - "3.4.3.  Distributed PE\n   Often, when a VPLS type of service is provided, the\
    \ CE devices attach\n   to a provider-managed CPE device.  This provider-managed\
    \ CPE device\n   may attach to CEs of multiple customers, especially if, for example,\n\
    \   there are multiple customers occupying the same building.  However,\n   this\
    \ device is really part of the SP's network, hence may be\n   considered a PE\
    \ device.\n   In some scenarios in which a VPLS type of service is provided, the\
    \ CE\n   devices attach to a provider-managed intermediary device.  This\n   provider-managed\
    \ device may attach to CEs of multiple customers.\n   This may arise if there\
    \ are multiple customers occupying the same\n   building.  This device is really\
    \ part of the SP's network and may for\n   that reason be considered to be a PE\
    \ device; however, in the simplest\n   case, it is performing only aggregation\
    \ and none of the function\n   associated with a VPLS.\n   Relative to the VPLS\
    \ there are three different possibilities for\n   allocate functions to a device\
    \ in such a position in the provider\n   network:\n      - it can perform aggregation\
    \ and pure Layer2 service only, in\n        which case it does not really play\
    \ the role of a PE device in a\n        VPLS service.  In this case the intermediary\
    \ system must connect\n        to devices that perform VPLS PE functionality;\
    \ the intermediary\n        device itself is not part of the VPLS architecture\
    \ and has hence\n        not been named in this architecture.\n      - it can\
    \ perform all the PE functions relevant for a VPLS.  In\n        such a case,\
    \ the device is called VPLS-PE, see [RFC4026].  This\n        type of device will\
    \ be connected to the core (P) routers.\n      The PE functionality for a VPLS\
    \ may be distributed between two\n      devices, one \"low-end\" closer to the\
    \ customer that performs, for\n      example, the MAC-address learning and forwarding\
    \ decisions, and\n      one \"high-end\" that performs the control functions;\
    \ e.g.,\n      establishing tunnels, PWs, and VCs.  We call the low-end device\n\
    \      the User-Facing PE (U-PE) and the high-end device the Network-\n      Facing\
    \ PE (N-PE).\n      It is conceivable that the U-PE may be placed very close to\
    \ the\n      customer; e.g., in a building with more than one customer.  The\n\
    \      N-PE will presumably be placed on the SP's premises.\n      The distributed\
    \ case is potentially of interest for a number of\n      possible reasons:\n \
    \     - The N-PE may be a device that cannot easily implement the VSI\n      \
    \  functionality described above.  For example, perhaps the N-PE is\n        a\
    \ router that cannot perform the high speed MAC learning that is\n        needed\
    \ in order to implement a VSI forwarder.  At the same time,\n        the U-PE\
    \ may need to be a low-cost device that also cannot\n        implement the full\
    \ set of VPLS functions.\n        This leads one to investigate further if there\
    \ are sensible ways\n        to split the VPLS PE functionality between the U-PE\
    \ and the N-\n        PE.\n      - Generally, in the L2VPN architecture, the PEs\
    \ are expected to\n        participate as peers in the backbone routing protocol.\
    \  Since\n        the number of U-PEs is potentially very large relative to the\n\
    \        number of N-PEs, this may be undesirable as a matter of scaling\n   \
    \     the backbone routing protocol.\n      - The U-PE may be a relatively inexpensive\
    \ device that is unable\n        to participate in the full range of signaling\
    \ and/or auto-\n        discovery procedures that are needed in order to provide\
    \ the\n        VPLS service.\n   The VPLS functionality can be distributed between\
    \ U-PE and N-PE in a\n   number of different ways, and a number of different proposals\
    \ have\n   been made.  They all presume that the U-PE will maintain a VSI\n  \
    \ forwarder, connected by PWs to the remote VSIs; the N-PE thus does\n   not need\
    \ to perform the VSI forwarding function.  The proposals tend\n   to differ with\
    \ respect to the following questions:\n      - Should the U-PEs perform full PW\
    \ signaling to set up the PWs to\n        remote VSIs, or should the N-PEs do\
    \ this signaling?\n        Since the U-PEs need to be able to send packets on\
    \ PWs to remote\n        VSIs and receive packets on PWs from remote VSIs, if\
    \ the PW\n        signaling is done by the N-PE, there would have to be some form\n\
    \        of \"lightweight\" (presumably) signaling between N-PE and U-PE\n   \
    \     that allows the PWs to be extended from N-PE to U-PE.\n      - Should the\
    \ U-PEs do their own auto-discovery, or should this be\n        done by the N-PEs?\n\
    \        In the latter case, the U-PEs may need to have some means of\n      \
    \  telling the N-PEs which VPLSes they are interested in, and the\n        N-PEs\
    \ must have some means of passing the results of the auto-\n        discovery\
    \ process to the U-PE.\n        Whether it makes sense to split auto-discovery\
    \ in this manner\n        may depend on the particular auto-discovery protocol\
    \ used.  One\n        would not expect the U-PEs to participate in, if for example,\
    \ a\n        BGP-based auto-discovery scheme, but perhaps they would be\n    \
    \    expected to participate in a RADIUS-based auto-discovery scheme.\n      -\
    \ If a U-PE does not participate in routing but is redundantly\n        connected\
    \ to two different N-PEs, can the U-PE still make an\n        intelligent choice\
    \ of the best N-PE to use as the \"next hop\" for\n        traffic destined to\
    \ a particular remote VSI? If not, can this\n        choice be made as the result\
    \ of some other sort of interaction\n        between N-PE and U-PE, or does this\
    \ choice need to be\n        established by provisioning?\n      - If a U-PE does\
    \ not participate in routing but does participate\n        in full PW signaling,\
    \ and if MPLS is being used, how can an N-PE\n        send a U-PE the labels that\
    \ the U-PE needs in order to be able\n        to send traffic to its signaling\
    \ peers?  (If the U-PE did\n        participate in routing, this would happen\
    \ automatically.)\n      - When a frame must be multicast, should the replication\
    \ be done\n        by the N-PE or the U-PE?\n        These questions are not all\
    \ independent; the way one answers\n        some of them may influence the way\
    \ one answers others.\n"
- title: 3.4.4.  Scaling Issues in VPLS Deployment
  contents:
  - "3.4.4.  Scaling Issues in VPLS Deployment\n   In general, the PSN supports a\
    \ VPLS solution with a tunnel from each\n   VPLS-PE to every other VPLS-PE participating\
    \ in the same VPLS\n   instance.  Strictly, VPLS-PEs with more than one VPLS instance\
    \ in\n   common only need one tunnel, but for resource allocation reasons it\n\
    \   might be necessary to establish several tunnels.  For each VPLS\n   service\
    \ on a given VPLS-PE, it needs to establish one pseudowire to\n   every other\
    \ VPLS-PE participating in that VPLS service.  In total\n   n*(n-1) pseudowires\
    \ must be setup between the VPLS-PE routers.  In\n   large scale deployment this\
    \ obviously creates scaling problems.  One\n   way to address the scaling problems\
    \ is to use hierarchy.\n"
- title: 3.5.  IP-Only LAN-Like Service (IPLS)
  contents:
  - "3.5.  IP-Only LAN-Like Service (IPLS)\n   If, instead of providing a general\
    \ VPLS service, one wishes to\n   provide a VPLS that is used only to connect\
    \ IP routers or hosts\n   (i.e., the CE devices are all assumed to be IP routers\
    \ or hosts),\n   then it is possible to make certain simplifications.\n   In this\
    \ environment, all Ethernet frames sent from a particular CE to\n   a particular\
    \ PE on a particular Attachment Circuit will have the same\n   MAC Source Address.\
    \  Thus, rather than use address learning in the\n   data plane to learn the MAC\
    \ addresses, the PE can use the control\n   plane to learn the MAC address.  This\
    \ allows the PE to be implemented\n   on devices that are not capable of doing\
    \ MAC address learning in the\n   data plane.\n   To eliminate the need for MAC\
    \ address learning on the PWs as well as\n   on the ACs, the pseudowire signaling\
    \ protocol would have to carry the\n   MAC address from one pseudowire endpoint\
    \ to the other.  In the case\n   of IPv4, Each PE would perform proxy ARP to its\
    \ directly attached\n   CEs.  In the case of IPv6, each PE would send proxy Neighbor\
    \ and/or\n   Router Advertisements.\n   Eliminating the need to do MAC address\
    \ learning on the PWs eliminates\n   the need for the PWs to be point-to-point.\
    \  Multipoint-to-point PWs\n   could be used instead.\n   Unlike a VPLS, all the\
    \ ACs in an IPLS would not necessarily have to\n   carry Ethernet frames; only\
    \ the IP packets would need to be passed\n   across the network, not their Layer\
    \ 2 wrappers.  However, if there\n   are protocols that are specific to the Layer\
    \ 2, but that provide, for\n   example, address resolution services for Layer\
    \ 3, it may then be\n   necessary to \"translate\" (or otherwise interwork) one\
    \ of these Layer\n   2 protocols to the other.  For example, if an IPLS instance\
    \ has an\n   ethernet AC and a Frame Relay AC, and IPv4 is running on both,\n\
    \   interworking between ARP and Inverse ARP might be required.\n   The set of\
    \ routing protocols that could be carried across the IPLS\n   might also be restricted.\n\
    \   An IPLS instance must have a particular IPLS-wide MTU; if there are\n   different\
    \ kinds of AC in an IPLS instance, and those different kinds\n   of AC support\
    \ different MTUs, all ACS must enforce the IPLS-wide MTU;\n   an AC that cannot\
    \ do this must not be allowed to join the IPLS\n   instance.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security considerations section of the L2VPN\
    \ requirements\n   document [RFC4665] addresses a number of areas that are potentially\n\
    \   insecure aspects of the L2VPN.  These relate to both control plane\n   and\
    \ data plane security issues that may arise in the following areas:\n      - issues\
    \ fully contained in the provider network\n      - issues fully contained in the\
    \ customer network\n      - issues in the customer-provider interface network\n\
    \   These three areas are addressed below.\n"
- title: 4.1.  Provider Network Security Issues
  contents:
  - "4.1.  Provider Network Security Issues\n   This section discusses security issues\
    \ that only impact the SP's\n   equipment.\n   There are security issues having\
    \ to do with the control connections\n   that are used on a PE-PE basis for setting\
    \ up and maintaining the\n   pseudowires.\n   A PE should not engage with another\
    \ PE in a control connection unless\n   it has some confidence that the peer is\
    \ really a PE to which it\n   should be setting up PWs.  Otherwise, L2PVN traffic\
    \ may go to the\n   wrong place.  If control packets are maliciously and undetectably\n\
    \   altered while in flight, denial of service, or alteration of the\n   expected\
    \ quality of service, may result.\n   If peers discover each other dynamically\
    \ (via some auto-discovery\n   procedure), this presupposes that the auto-discovery\
    \ procedures are\n   themselves adequately trusted.\n   PEs should not accept\
    \ control connections from arbitrary entities; a\n   PE either should be configured\
    \ with its peers or should learn them\n   from a trusted auto-configuration procedure.\
    \  If the peer is required\n   to be within the same SP's network, then access\
    \ control filters at\n   the borders of that network can be used to prevent spoofing\
    \ of the\n   peer's source address.  If the peer is from another SP's network,\n\
    \   then setting up such filters may be difficult or even impossible,\n   depending\
    \ on the way in which the two SPs are connected.  Even if the\n   access filters\
    \ can be set up, the level of assurance that they\n   provide will be lower.\n\
    \   Thus, for inter-SP control connections, it is advisable to use some\n   sort\
    \ of cryptographic authentication procedure.  Control protocols\n   which used\
    \ TCP may use the TCP MD5 option to provide a measure of\n   PE-PE authentication;\
    \ this requires at least one shared secret\n   between SPs.  The use of IPsec\
    \ between PEs is also possible and\n   provides a greater degree of assurance,\
    \ though at a greater cost.\n   Any other security considerations that apply to\
    \ the control protocol\n   in general will also apply when the control protocol\
    \ is used for\n   setting up PWs.  If the control protocol uses UDP messages,\
    \ it may be\n   advisable to have some protection against spoofed UDP messages\
    \ that\n   appear to be from a valid peer; this requires further study.\n   To\
    \ limit the effect of Denial of Service attacks on a PE, some means\n   of limiting\
    \ the rate of processing of control plane traffic may be\n   desirable.\n   Unlike\
    \ authentication and integrity, privacy of the signaling\n   messages is not usually\
    \ considered very important.  If it is needed,\n   the signaling messages can\
    \ be sent through an IPsec connection.\n   If the PE cannot efficiently handle\
    \ high volumes of multicast traffic\n   for sustained periods, then it may be\
    \ possible to launch a denial of\n   service attack on a VPLS service by sending\
    \ a PE a large number of\n   frames that have either a multicast address or an\
    \ unknown MAC address\n   in their MAC Destination Address fields.  A similar\
    \ denial of service\n   attack can be mounted by sending a PE a large number of\
    \ frames with\n   bogus MAC Source Address fields.  The bogus addresses can fill\
    \ the\n   MAC address tables in the PEs, with the result that frames destined\n\
    \   to the real MAC addresses always get flooded (i.e., multicast).  Note\n  \
    \ that this flooding can remove the (weak) confidentiality property of\n   this\
    \ or any other bridged network.\n"
- title: 4.2.  Provider-Customer Network Security Issues
  contents:
  - "4.2.  Provider-Customer Network Security Issues\n   There are a number of security\
    \ issues related to the access network\n   between the provider and the customer.\
    \  This is also traditionally a\n   network that is hard to protect physically.\n\
    \   Typical security issues on the provider-customer interface include\n   the\
    \ following:\n      - Ensuring that the correct customer interface is configured\n\
    \      - Preventing unauthorized access to the PE\n      - Preventing unauthorized\
    \ access to a specific PE port\n      - Ensuring correct service delimiting fields\
    \ (VLAN, DLCI, etc.)\n   As the access network for an L2VPN service is necessarily\
    \ a Layer 2\n   network, it is preferable to use authentication mechanisms that\
    \ do\n   not presuppose any IP capabilities on the CE device.\n   There are existing\
    \ Layer 2 protocols and best current practices to\n   guard against these security\
    \ issues.  For example, IEEE 802.1x\n   defines authentication at the link level\
    \ for access through an\n   ethernet bridge; the Frame Relay Forum defines LMI\
    \ extensions for\n   authentication (FRF.17).\n"
- title: 4.3.  Customer Network Security Issues
  contents:
  - "4.3.  Customer Network Security Issues\n   Even if all CE devices are properly\
    \ authorized to attach to their PE\n   devices, misconfiguration of the PE may\
    \ interconnect CEs that are not\n   supposed to be in the same L2VPN.\n   In a\
    \ VPWS, the CEs may run IPsec to authenticate each other.  Other\n   Layer 3 or\
    \ Layer 4 protocols may have their own authentication\n   methods.\n   In a VPLS,\
    \ CE-to-CE IPsec is even more problematic, as IPsec does not\n   well support\
    \ the multipoint configuration that is provided by the\n   VPLS service.\n   There\
    \ may be alternative methods for achieving a degree of CE-to-CE\n   authentication,\
    \ if the L2VPN signaling protocol can carry opaque\n   objects between the CEs,\
    \ either inband (over the L2VPN) or out-of-\n   band, through the participation\
    \ of the signaling protocol.  This is\n   for further study.\n   The L2VPN procedures\
    \ do not provide authentication, integrity, or\n   privacy for the customer's\
    \ traffic; if this is needed, it becomes the\n   responsibility of the customer.\
    \  For customers who really need these\n   features or who do not trust their\
    \ service providers to provide the\n   level of security that they need, the L2VPN\
    \ framework discussed in\n   this document may not be satisfactory.  Such customers\
    \ may consider\n   alternative L2VPN schemes that are based not on an overlay\
    \ of PWs,\n   but on an overlay of IPsec tunnels whose endpoints are at the\n\
    \   customer sites; however, such alternatives are not discussed in this\n   document.\n\
    \   If there is CE-to-CE control traffic (e.g., BPDUs) on whose integrity\n  \
    \ the customer's own Layer 2 network depends, it may be advisable to\n   send\
    \ the control traffic using some more secure mechanism than is\n   used for the\
    \ data traffic.\n   In general, any means of mounting a denial of service attack\
    \ on\n   bridged networks generally can also be used to mount a denial of\n  \
    \ service attack on the VPLS service for a particular customer.  We\n   have discussed\
    \ here only those attacks that rely on features of the\n   VPLS service that are\
    \ not shared by bridged networks in general.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document is the outcome of discussions within a\
    \ Layer 2 VPN\n   design team, all of whose members could be considered co-authors.\n\
    \   Specifically, the co-authors are Loa Andersson, Waldemar Augustyn,\n   Marty\
    \ Borden, Hamid Ould-Brahim, Juha Heinanen, Kireeti Kompella,\n   Vach Kompella,\
    \ Marc Lasserre, Pascal Menezes, Vasile Radoaca, Eric\n   Rosen, and Tissa Senevirathne.\n\
    \   The authors would like to thank Marco Carugi for cooperation in\n   setting\
    \ up context, working directions, and taking time for\n   discussions in this\
    \ space; Tove Madsen and Pekka Savola for valuable\n   input and reviews; and\
    \ Norm Finn, Matt Squires, and Ali Sajassi for\n   valuable discussion of the\
    \ VPLS issues.\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3985]    Bryant, S. and P. Pate, \"Pseudo Wire Emulation Edge-to-\n\
    \                Edge (PWE3) Architecture\", RFC 3985, March 2005.\n   [RFC4026]\
    \    Andersson, L. and T. Madsen, \"Provider Provisioned\n                Virtual\
    \ Private Network (VPN) Terminology\", RFC 4026,\n                March 2005.\n\
    \   [RFC4665]    Augustyn, W., Ed. and Y. Serbest, Ed., \"Service\n          \
    \      Requirements for Layer 2 Provider-Provisioned Virtual\n               \
    \ Private Networks (L2VPNs)\", RFC 4665, September 2006.\n"
- title: 7. Informative References
  contents:
  - "7. Informative References\n   [IEEE8021D]  IEEE 802.1D-2003, \"IEEE Standard\
    \ for Local and\n                Metropolitan Area Networks:  Media Access Control\
    \ (MAC)\n                Bridges\"\n   [IEEE8021Q]  IEEE 802.1Q-1998, \"IEEE Standards\
    \ for Local and\n                Metropolitan Area Networks:  Virtual Bridged\
    \ Local Area\n                Networks\"\n   [RFC1771]    Rekhter, Y. and T. Li,\
    \ \"A Border Gateway Protocol 4\n                (BGP-4)\", RFC 1771, March 1995.\n\
    \   [RFC2661]    Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn,\n   \
    \             G., and B. Palter, \"Layer Two Tunneling Protocol\n            \
    \    \"L2TP\"\", RFC 2661, August 1999.\n   [RFC2796]    Bates, T., Chandra, R.,\
    \ and E. Chen, \"BGP Route\n                Reflection - An Alternative to Full\
    \ Mesh IBGP\", RFC\n                2796, April 2000.\n   [RFC3036]    Andersson,\
    \ L., Doolan, P., Feldman, N., Fredette, A.,\n                and B. Thomas, \"\
    LDP Specification\", RFC 3036, January\n                2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Loa Andersson\n   Acreo AB\n   EMail: loa@pi.se\n   Eric\
    \ C. Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts Avenue\n   Boxborough,\
    \ MA 01719\n   EMail: erosen@cisco.com\n   Waldemar Augustyn\n   EMail: waldemar@wdmsys.com\n\
    \   Marty Borden\n   EMail: mborden@acm.org\n   Juha Heinanen\n   Song Networks,\
    \ Inc.\n   Hallituskatu 16\n   33200 Tampere, Finland\n   EMail: jh@song.fi\n\
    \   Kireeti Kompella\n   Juniper Networks, Inc.\n   1194 N. Mathilda Ave\n   Sunnyvale,\
    \ CA 94089\n   EMail: kireeti@juniper.net\n   Vach Kompella\n   TiMetra Networks\n\
    \   274 Ferguson Dr.\n   Mountain View, CA 94043\n   EMail: vach.kompella@alcatel.com\n\
    \   Marc Lasserre\n   Riverstone Networks\n   5200 Great America Pkwy\n   Santa\
    \ Clara, CA 95054\n   EMail: mlasserre@lucent.com\n   Pascal Menezies\n   EMail:\
    \ pascalm1@yahoo.com\n   Hamid Ould-Brahim\n   Nortel Networks\n   P O Box 3511\
    \ Station C\n   Ottawa, ON K1Y 4H7, Canada\n   EMail: hbrahim@nortelnetworks.com\n\
    \   Vasile Radoaca\n   Nortel Networks\n   600 Technology Park\n   Billerica,\
    \ MA 01821\n   EMail: radoaca@hotmail.com\n   Tissa Senevirathne\n   1567 Belleville\
    \ Way\n   Sunnyvale CA 94087\n   EMail: tsenevir@hotmail.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
