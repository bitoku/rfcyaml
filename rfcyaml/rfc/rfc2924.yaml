- title: __initial_text__
  contents:
  - '                Accounting Attributes and Record Formats

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document summarises Internet Engineering Task Force (IETF)\
    \ and\n   International Telecommunication Union (ITU-T) documents related to\n\
    \   Accounting.  A classification scheme for the Accounting Attributes in\n  \
    \ the summarised documents is presented.  Exchange formats for\n   Accounting\
    \ data records are discussed, as are advantages and\n   disadvantages of integrated\
    \ versus separate record formats and\n   transport protocols.  This document discusses\
    \ service definition\n   independence, extensibility, and versioning.  Compound\
    \ service\n   definition capabilities are described.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2. Terminology and Notation . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3. Architecture Model . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4. IETF Documents . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   4.1. RADIUS . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n   4.1.1. RADIUS Attributes  . . . . . . . . . . . . . . . . . . . .\
    \   5\n   4.2. DIAMETER . . . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n   4.2.1. DIAMETER Attributes  . . . . . . . . . . . . . . . . . . .   7\n\
    \   4.3. ROAMOPS  . . . . . . . . . . . . . . . . . . . . . . . . . .   8\n  \
    \ 4.4. RTFM . . . . . . . . . . . . . . . . . . . . . . . . . . . .   8\n   4.4.1.\
    \ RTFM Attributes  . . . . . . . . . . . . . . . . . . . . .   9\n   4.5. ISDN\
    \ MIB . . . . . . . . . . . . . . . . . . . . . . . . . .  10\n   4.5.1. ISDN\
    \ Attributes  . . . . . . . . . . . . . . . . . . . . .  10\n   4.6. AToMMIB \
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .  11\n   4.6.1. AToMMIB Attributes\
    \ . . . . . . . . . . . . . . . . . . . .  11\n   4.7. QoS: RSVP and DIFFSERV\
    \ . . . . . . . . . . . . . . . . . . .  12\n   4.7.1. QoS: RSVP and DIFFSERV\
    \ Attributes  . . . . . . . . . . . .  13\n   5. ITU-T Documents  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  13\n   5.1. Q.825: Call Detail Recording\
    \ . . . . . . . . . . . . . . . .  13\n   5.2. Q.825 Attributes . . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n   6. Other Documents  . . . . . . . . .\
    \ . . . . . . . . . . . . . .  18\n   6.1. TIPHON: ETSI TS 101 321  . . . . .\
    \ . . . . . . . . . . . . .  18\n   6.2. MSIX . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  19\n   7. Accounting File and Record Formats . . .\
    \ . . . . . . . . . . .  19\n   7.1. ASN.1 Records  . . . . . . . . . . . . .\
    \ . . . . . . . . . .  19\n   7.1.1. RTFM and AToMMIB . . . . . . . . . . . .\
    \ . . . . . . . . .  19\n   7.1.2. Q.825  . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .  20\n   7.2. Binary Records . . . . . . . . . . . . . . . .\
    \ . . . . . . .  20\n   7.2.1. RADIUS . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  20\n   7.2.2. DIAMETER . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  20\n   7.3. Text Records . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  21\n   7.3.1. ROAMOPS  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  21\n   8. AAA Requirements . . . . . . . . . . . . . . . . . . . . .\
    \ . .  22\n   8.1. A Well-defined Set of Attributes . . . . . . . . . . . . .\
    \ .  22\n   8.2. A Simple Interchange Format  . . . . . . . . . . . . . . . .\
    \  23\n   9. Issues . . . . . . . . . . . . . . . . . . . . . . . . . . . .  23\n\
    \   9.1. Record Format vs. Protocol . . . . . . . . . . . . . . . . .  24\n  \
    \ 9.2. Tagged, Typed Data . . . . . . . . . . . . . . . . . . . . .  24\n   9.2.1.\
    \ Standard Type Definitions  . . . . . . . . . . . . . . . .  25\n   9.3. Transaction\
    \ Identifiers  . . . . . . . . . . . . . . . . . .  26\n   9.4. Service Definitions\
    \  . . . . . . . . . . . . . . . . . . . .  26\n   9.4.1. Service Independence\
    \ . . . . . . . . . . . . . . . . . . .  27\n   9.4.2. Versioned Service Definitions\
    \  . . . . . . . . . . . . . .  29\n   9.4.3. Relationships Among Usage Events\
    \ . . . . . . . . . . . . .  29\n   9.4.4. Service Namespace Management . . .\
    \ . . . . . . . . . . . .  30\n   10. Encodings . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  30\n   11. Security Considerations . . . . . . . . .\
    \ . . . . . . . . . .  31\n   12. References  . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  31\n   13. Authors' Addresses  . . . . . . . . . . . . .\
    \ . . . . . . . .  35\n   14. Full Copyright Statement  . . . . . . . . . . .\
    \ . . . . . . .  36\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document summarises IETF and ITU-T documents related\
    \ to\n   Accounting.  For those documents which describe Accounting Attributes\n\
    \   (i.e. quantities which can be measured and reported), an Attribute\n   Summary\
    \ is given.  Although several of the documents describe\n   Attributes which are\
    \ similar, no attempt is made to identify those\n   which are the same in several\
    \ documents.  An extensible\n   classification scheme for AAA Accounting Attributes\
    \ is proposed; it\n   is a superset of the attributes in all the documents summarised.\n\
    \   Many existing accounting record formats and protocols [RAD-ACT]\n   [TIPHON]\
    \ are of limited use due to their single-service descriptive\n   facilities and\
    \ lack of extensibility.  While some record formats and\n   protocols support\
    \ extensible attributes [RAD-ACT], none provide\n   identification, type checking,\
    \ or versioning support for defined\n   groupings of attributes (service definitions).\
    \  This document makes a\n   case for well-defined services.\n   Advantages and\
    \ disadvantages of integrated versus separate record\n   formats and transport\
    \ protocols are discussed.  This document\n   discusses service definition independence,\
    \ extensibility, and\n   versioning.  Compound service definition capabilities\
    \ are described.\n"
- title: 2.  Terminology and Notation
  contents:
  - "2.  Terminology and Notation\n   The following terms are used throughout the\
    \ document.\n   Accounting Server\n      A network element that accepts Usage\
    \ Events from Service Elements.\n      It acts as an interface to back-end rating,\
    \ billing, and\n      operations support systems.\n   Attribute-Value Pair (AVP)\n\
    \      A representation for a Usage Attribute consisting of the name of\n    \
    \  the Attribute and a value.\n   Property\n      A component of a Usage Event.\
    \  A Usage Event describing a phone\n      call, for instance, might have a \"\
    duration\" Property.\n   Service\n      A type of task that is performed by a\
    \ Service Element for a\n      Service Consumer.\n   Service Consumer\n      Client\
    \ of a Service Element.  End-user of a network service.\n   Service Definition\n\
    \      A specification for a particular service.  It is composed of a\n      name\
    \ or other identifier, versioning information, and a collection\n      of Properties.\n\
    \   Service Element\n      A network element that provides a service to Service\
    \ Consumers.\n      Examples include RAS devices, voice and fax gateways, conference\n\
    \      bridges.\n   Usage Attribute\n      A component of a Usage Event that describes\
    \ some metric of service\n      usage.\n   Usage Event\n      The description\
    \ of an instance of service usage.\n"
- title: 3.  Architecture Model
  contents:
  - "3.  Architecture Model\n   Service Elements provide Services to Service Consumers.\
    \  Before,\n   while, and/or after services are provided, the Service Element\n\
    \   reports Usage Events to an Accounting Server.  Alternately, the\n   Accounting\
    \ Server may query the Service Element for Usage Events.\n   Usage events are\
    \ sent singly or in bulk.\n      +------------+       +-----------+          \
    \    +------------+\n      |  Service   |<----->|  Service  | Usage Events | Accounting\
    \ |\n      |  Consumer  |   +-->|  Element  |------------->|   Server   |\n  \
    \    +------------+   |   +-----------+              +------------+\n        \
    \               |\n      +------------+   |\n      |  Service   |<--+\n      |\
    \  Consumer  |\n      +------------+\n   Accounting Servers may forward Usage\
    \ Events to other systems,\n   possibly in other administrative domains.  These\
    \ transfers are not\n   addressed by this document.\n"
- title: 4.  IETF Documents
  contents:
  - "4.  IETF Documents\n   In March 1999 there were at least 19 Internet Drafts and\
    \ 8 RFCs\n   concerned with Accounting.  These are summarised (by working group)\n\
    \   in the following sections.\n"
- title: 4.1.  RADIUS
  contents:
  - "4.1.  RADIUS\n   The RADIUS protocol [RAD-PROT] carries authentication, authorization\n\
    \   and configuration information between a Network Access Server (NAS)\n   and\
    \ an authentication server.  Requests and responses carried by the\n   protocol\
    \ are expressed in terms of RADIUS attributes such as User-\n   Name, Service-Type,\
    \ and so on.  These attributes provide the\n   information needed by a RADIUS\
    \ server to authenticate users and to\n   establish authorized network service\
    \ for them.\n   The protocol was extended to carry accounting information between\
    \ a\n   NAS and a shared accounting server.  This was achieved by defining a\n\
    \   set of RADIUS accounting attributes [RAD-ACT].\n   RADIUS packets have a short\
    \ header containing the RADIUS packet type\n   and authenticator (sixteen octets)\
    \ and length, followed by a sequence\n   of (Type, Length, Value) triples, one\
    \ for each attribute.\n   RADIUS is very widely used, and a number of significant\
    \ new\n   extensions to it have been proposed.  For example [RAD-EXT] discusses\n\
    \   extensions to implement the Extensible Authentication Protocol (EAP)\n   and\
    \ the Apple Remote Access Protocol (ARAP).  [RAD-TACC] discusses\n   extensions\
    \ to permit RADIUS to interwork effectively with tunnels\n   using protocols such\
    \ as PPTP and L2TP.\n"
- title: 4.1.1.  RADIUS Attributes
  contents:
  - "4.1.1.  RADIUS Attributes\n   Each RADIUS attribute is identified by an 8-bit\
    \ number, referred to\n   as the RADIUS Type field.  Up-to-date values of this\
    \ field are\n   specified in the most recent Assigned Numbers RFC [ASG-NBR], but\
    \ the\n   current list is as follows:\n   RADIUS Attributes [RAD-PROT]       \
    \      36  Login-LAT-Group\n                                            37  Framed-AppleTalk-Link\n\
    \       1  User-Name                         38  Framed-AppleTalk-Network\n  \
    \     2  User-Password                     39  Framed-AppleTalk-Zone\n       3\
    \  CHAP-Password\n       4  NAS-IP-Address                    60  CHAP-Challenge\n\
    \       5  NAS-Port                          61  NAS-Port-Type\n       6  Service-Type\
    \                      62  Port-Limit\n       7  Framed-Protocol             \
    \      63  Login-LAT-Port\n       8  Framed-IP-Address\n       9  Framed-IP-Netmask\
    \              RADIUS Accounting Attributes\n      10  Framed-Routing        \
    \         [RAD-ACT]\n      11  Filter-Id\n      12  Framed-MTU               \
    \         40  Acct-Status-Type\n      13  Framed-Compression                41\
    \  Acct-Delay-Time\n      14  Login-IP-Host                     42  Acct-Input-Octets\n\
    \      15  Login-Service                     43  Acct-Output-Octets\n      16\
    \  Login-TCP-Port                    44  Acct-Session-Id\n      17  (unassigned)\
    \                      45  Acct-Authentic\n      18  Reply-Message           \
    \          46  Acct-Session-Time\n      19  Callback-Number                  \
    \ 47  Acct-Input-Packets\n      20  Callback-Id                       48  Acct-Output-Packets\n\
    \      21  (unassigned)                      49  Acct-Terminate-Cause\n      22\
    \  Framed-Route                      50  Acct-Multi-Session-Id\n      23  Framed-IPX-Network\
    \                51  Acct-Link-Count\n      24  State\n      25  Class       \
    \                   RADIUS Extension Attributes\n      26  Vendor-Specific   \
    \             [RAD-EXT]\n      27  Session-Timeout\n      28  Idle-Timeout   \
    \                   52  Acct-Input-Gigawords\n      29  Termination-Action   \
    \             53  Acct-Output-Gigawords\n      30  Called-Station-Id         \
    \        54  Unused\n      31  Calling-Station-Id                55  Event-Timestamp\n\
    \      32  NAS-Identifier\n      33  Proxy-State                       70  ARAP-Password\n\
    \      34  Login-LAT-Service                 71  ARAP-Features\n      35  Login-LAT-Node\
    \                    72  ARAP-Zone-Access\n      73  ARAP-Security\n      74 \
    \ ARAP-Security-Data\n      75  Password-Retry\n      76  Prompt\n      77  Connect-Info\n\
    \      78  Configuration-Token\n      79  EAP-Message\n      80  Message-Authenticator\n\
    \      84  ARAP-Challenge-Response\n      85  Acct-Interim-Interval\n      87\
    \  NAS-Port-Id\n      88  Framed-Pool\n   RADIUS Tunneling Attributes\n   [RAD-TACC]\n\
    \      64  Tunnel-Type\n      65  Tunnel-Medium-Type\n      66  Tunnel-Client-Endpoint\n\
    \      67  Tunnel-Server-Endpoint\n      68  Acct-Tunnel-Connection\n      69\
    \  Tunnel-Password\n      81  Tunnel-Private-Group-ID\n      82  Tunnel-Assignment-ID\n\
    \      83  Tunnel-Preference\n      90  Tunnel-Client-Auth-ID\n      91  Tunnel-Server-Auth-ID\n"
- title: 4.2.  DIAMETER
  contents:
  - "4.2.  DIAMETER\n   The DIAMETER framework [DIAM-FRAM] defines a policy protocol\
    \ used by\n   clients to perform Policy, AAA and Resource Control.  This allows\
    \ a\n   single server to handle policies for many services.  The DIAMETER\n  \
    \ protocol consists of a header followed by objects.  Each object is\n   encapsulated\
    \ in a header known as an Attribute-Value Pair (AVP).\n   DIAMETER defines a base\
    \ protocol that specifies the header formats,\n   security extensions and requirements\
    \ as well as a small number of\n   mandatory commands and AVPs.  A new service\
    \ can extend DIAMETER by\n   extending the base protocol to support new functionality.\n\
    \   One key differentiator with DIAMETER is its inherent support for\n   Inter-Server\
    \ communication.  Although this can be achieved in a\n   variety of ways, the\
    \ most useful feature is the ability to \"proxy\"\n   messages across a set of\
    \ DIAMETER servers (known as a proxy chain).\n   The DIAMETER Accounting Extension\
    \ document [DIAM-ACT] extends\n   DIAMETER by defining a protocol for securely\
    \ transferring accounting\n   records over the DIAMETER base protocol.  This includes\
    \ the case\n   where accounting records may be passed through one or more\n  \
    \ intermediate proxies, in accordance with the 'referral broker' model.\n   The\
    \ DIAMETER accounting protocol [DIAM-ACT] defines DIAMETER records\n   for transferring\
    \ an ADIF record (see below).  It introduces five new\n   attributes (480..485)\
    \ which specify the way in which accounting\n   information is to be delivered\
    \ between DIAMETER servers.\n"
- title: 4.2.1.  DIAMETER Attributes
  contents:
  - "4.2.1.  DIAMETER Attributes\n   DIAMETER AVPs are identified by a 16-bit number\
    \ defined in [DIAM-\n   AUTH].  Since most of the AVPs found in that document\
    \ were copied\n   from the RADIUS protocol [RAD-PROT], it is possible to have\
    \ both\n   RADIUS and DIAMETER servers read the same dictionary and users files.\n\
    \   The backward compatibility that DIAMETER offers is intended to\n   facilitate\
    \ deployment.  To this end, DIAMETER inherits the RADIUS\n   attributes, and adds\
    \ only a few of its own.\n   In the list below attribute numbers which are used\
    \ for RADIUS\n   attributes but not for DIAMETER are indicated with a star (*).\n\
    \   RADIUS attributes used by DIAMETER are not listed again here.\n   The DIAMETER\
    \ attributes are:\n       4      (unassigned, *)\n      17      (unassigned)\n\
    \      21      (unassigned)\n      24      (unassigned, *)\n      25      (unassigned,\
    \ *)\n      27      (unassigned, *)\n      32      (unassigned, *)\n      33 \
    \     (unassigned, *)\n     280      Filter-Rule\n     281      Framed-Password-Policy\n\
    \     480      Accounting-Record-Type\n     481      ADIF-Record\n     482   \
    \   Accounting-Interim-Interval\n     483      Accounting-Delivery-Max-Batch\n\
    \     484      Accounting-Delivery-Max-Delay\n     485      Accounting-Record-Number\n\
    \     600      SIP-Sequence\n     601      SIP-Call-ID\n     602      SIP-To\n\
    \     603      SIP-From\n"
- title: 4.3.  ROAMOPS
  contents:
  - "4.3.  ROAMOPS\n   [ROAM-IMPL] reviews the design and functionality of existing\
    \ roaming\n   implementations.  \"Roaming capability\" may be loosely defined\
    \ as the\n   ability to use any one of multiple Internet service providers (ISPs),\n\
    \   while maintaining a formal customer-vendor relationship with only\n   one.\
    \  One requirement for successful roaming is the provision of\n   effective accounting.\n\
    \   [ROAM-ADIF] proposes a standard accounting record format, the\n   Accounting\
    \ Data Interchange Format (ADIF), which is designed to\n   compactly represent\
    \ accounting data in a protocol-independent manner.\n   As a result, ADIF may\
    \ be used to represent accounting data from any\n   protocol using attribute value\
    \ pairs (AVPs) or variable bindings.\n   ADIF does not define accounting attributes\
    \ of its own.  Instead, it\n   gives examples of accounting records using the\
    \ RADIUS accounting\n   attributes.\n"
- title: 4.4.  RTFM
  contents:
  - "4.4.  RTFM\n   The RTFM Architecture [RTFM-ARC] provides a general method of\n\
    \   measuring network traffic flows between \"metered traffic groups\".\n   Each\
    \ RTFM flow has a set of \"address\" attributes, which define the\n   traffic\
    \ groups at each of the flow's end-points.\n   As well as address attributes,\
    \ each flow has traffic-related\n   attributes, e.g. times of first and last packets,\
    \ counts for packets\n   and bytes in each direction.\n   RTFM flow measurements\
    \ are made by RTFM meters [RTFM-MIB] and\n   collected by RTFM meter readers using\
    \ SNMP.  The MIB uses a\n   \"DataPackage\" convention, which specifies the attribute\
    \ values to be\n   read from a flow table row.  The meter returns the values for\
    \ each\n   required attribute within a BER-encoded sequence.  This means there\n\
    \   is only one object identifier for the whole sequence, greatly\n   reducing\
    \ the number of bytes required to retrieve the data.\n"
- title: 4.4.1.  RTFM Attributes
  contents:
  - "4.4.1.  RTFM Attributes\n   RTFM attributes are identified by a 16-bit attribute\
    \ number.\n   The RTFM Attributes are:\n    0  Null\n    1  Flow Subscript   \
    \             Integer    Flow table info\n    4  Source Interface            \
    \  Integer    Source Address\n    5  Source Adjacent Type          Integer\n \
    \   6  Source Adjacent Address       String\n    7  Source Adjacent Mask     \
    \     String\n    8  Source Peer Type              Integer\n    9  Source Peer\
    \ Address           String\n   10  Source Peer Mask              String\n   11\
    \  Source Trans Type             Integer\n   12  Source Trans Address        \
    \  String\n   13  Source Trans Mask             String\n   14  Destination Interface\
    \         Integer    Destination Address\n   15  Destination Adjacent Type   \
    \  Integer\n   16  Destination Adjacent Address  String\n   17  Destination AdjacentMask\
    \      String\n   18  Destination PeerType          Integer\n   19  Destination\
    \ PeerAddress       String\n   20  Destination PeerMask          String\n   21\
    \  Destination TransType         Integer\n   22  Destination TransAddress    \
    \  String\n   23  Destination TransMask         String\n   26  Rule Set Number\
    \               Integer    Meter attribute\n   27  Forward Bytes             \
    \    Integer    Source-to-Dest counters\n   28  Forward Packets              \
    \ Integer\n   29  Reverse Bytes                 Integer    Dest-to-Source counters\n\
    \   30  Reverse Packets               Integer\n   31  First Time             \
    \       Timestamp  Activity times\n   32  Last Active Time              Timestamp\n\
    \   33  Source Subscriber ID          String     Session attributes\n   34  Destination\
    \ Subscriber ID     String\n   35  Session ID                    String\n   36\
    \  Source Class                  Integer    \"Computed\" attributes\n   37  Destination\
    \ Class             Integer\n   38  Flow Class                    Integer\n  \
    \ 39  Source Kind                   Integer\n   40  Destination Kind         \
    \     Integer\n   41  Flow Kind                     Integer\n   50  MatchingStoD\
    \                  Integer    PME variable\n   51  v1                        \
    \    Integer    Meter Variables\n   52  v2                            Integer\n\
    \   53  v3                            Integer\n   54  v4                     \
    \       Integer\n   55  v5                            Integer\n   65-127 \"Extended\"\
    \ attributes\n             (to be defined by the RTFM working group)\n"
- title: 4.5.  ISDN MIB
  contents:
  - "4.5.  ISDN MIB\n   The ISDN MIB [ISDN-MIB] defines a minimal set of managed objects\
    \ for\n   SNMP-based management of ISDN terminal interfaces.  It does not\n  \
    \ explicitly define anything related to accounting, however it does\n   define\
    \ isdnBearerChargedUnits as\n      The number of charged units for the current\
    \ or last connection.\n      For incoming calls or if charging information is\
    \ not supplied by\n      the switch, the value of this object is zero.\n   This\
    \ allows for an ISDN switch to convert its traffic flow data (such\n   as Call\
    \ Connect Time) into charging data.\n"
- title: 4.5.1.  ISDN Attributes
  contents:
  - "4.5.1.  ISDN Attributes\n   The relevant object in the MIB is the ISDN bearer\
    \ table, which has\n   entries in the following form:\n   IsdnBearerEntry ::=\n\
    \       SEQUENCE {\n           isdnBearerChannelType           INTEGER,\n    \
    \       isdnBearerOperStatus            INTEGER,\n           isdnBearerChannelNumber\
    \         INTEGER,\n           isdnBearerPeerAddress           DisplayString,\n\
    \           isdnBearerPeerSubAddress        DisplayString,\n           isdnBearerCallOrigin\
    \            INTEGER,\n           isdnBearerInfoType              INTEGER,\n \
    \          isdnBearerMultirate             TruthValue,\n           isdnBearerCallSetupTime\
    \         TimeStamp,\n           isdnBearerCallConnectTime       TimeStamp,\n\
    \           isdnBearerChargedUnits          Gauge32\n           }\n"
- title: 4.6.  AToMMIB
  contents:
  - "4.6.  AToMMIB\n   The \"ATM Accounting Information MIB\" document [ATM-ACT] describes\
    \ a\n   large set of accounting objects for ATM connections.  An\n   administrator\
    \ may select objects from this set using a selector of\n   the form (subtree,\
    \ list) where \"subtree\" specifies an object\n   identifier from the AToMMIB.\
    \  For each subtree there is a table\n   holding values for each ATM connection.\
    \  The required connections are\n   indicated by setting bits in \"list\", which\
    \ is an octet string.  For\n   example, the set containing the number of received\
    \ cells for the\n   first eight ATM connections would be selected by\n   (atmAcctngReceivedCells,\
    \ 0xFF).\n   The Connection-Oriented Accounting MIB document [ATM-COLL] defines\
    \ a\n   MIB providing managed objects used for controlling the collection and\n\
    \   storage of accounting information for connection-oriented networks\n   such\
    \ as ATM.  The accounting data is collected into files for later\n   retrieval\
    \ via a file transfer protocol.  Records within an accounting\n   file are stored\
    \ as BER strings [ASN1, BER].\n"
- title: 4.6.1.  AToMMIB Attributes
  contents:
  - "4.6.1.  AToMMIB Attributes\n   Accounting data objects within the AToMMBIB are\
    \ identified by the\n   last integer in their object identifiers.\n   The ATM\
    \ accounting data objects are:\n      1   atmAcctngConnectionType\n      2   atmAcctngCastType\n\
    \      3   atmAcctngIfName\n      4   atmAcctngIfAlias\n      5   atmAcctngVpi\n\
    \      6   atmAcctngVci\n      7   atmAcctngCallingParty\n      8   atmAcctngCalledParty\n\
    \      9   atmAcctngCallReference\n     10   atmAcctngStartTime\n     11   atmAcctngCollectionTime\n\
    \     12   atmAcctngCollectMode\n     13   atmAcctngReleaseCause\n     14   atmAcctngServiceCategory\n\
    \     15   atmAcctngTransmittedCells\n     16   atmAcctngTransmittedClp0Cells\n\
    \     17   atmAcctngReceivedCells\n     18   atmAcctngReceivedClp0Cells\n    \
    \ 19   atmAcctngTransmitTrafficDescriptorType\n     20   atmAcctngTransmitTrafficDescriptorParam1\n\
    \     21   atmAcctngTransmitTrafficDescriptorParam2\n     22   atmAcctngTransmitTrafficDescriptorParam3\n\
    \     23   atmAcctngTransmitTrafficDescriptorParam4\n     24   atmAcctngTransmitTrafficDescriptorParam5\n\
    \     25   atmAcctngReceiveTrafficDescriptorType\n     26   atmAcctngReceiveTrafficDescriptorParam1\n\
    \     27   atmAcctngReceiveTrafficDescriptorParam2\n     28   atmAcctngReceiveTrafficDescriptorParam3\n\
    \     29   atmAcctngReceiveTrafficDescriptorParam4\n     30   atmAcctngReceiveTrafficDescriptorParam5\n\
    \     31   atmAcctngCallingPartySubAddress\n     32   atmAcctngCalledPartySubAddress\n\
    \     33   atmAcctngRecordCrc16\n"
- title: '4.7.  QoS: RSVP and DIFFSERV'
  contents:
  - "4.7.  QoS: RSVP and DIFFSERV\n   As we move towards providing more than simple\
    \ \"best effort\"\n   connectivity, there has been a tremendous surge of interest\
    \ in (and\n   work on) protocols to provide managed Quality of Service for Internet\n\
    \   sessions.  This is of particular interest for the provision of\n   \"Integrated\
    \ Services\", i.e. the transport of audio, video, real-time,\n   and classical\
    \ data traffic within a single network infrastructure.\n   Two approaches to this\
    \ have emerged so far:\n   -  the Integrated Services architecture (intserv) [IIS-ARC],\
    \ with its\n      accompanying signaling protocol, RSVP [RSVP-ARC], and RSVP's\n\
    \      Common Open Policy Service protocol, COPS [RAP-COPS]\n   -  the Differentiated\
    \ Services architecture (diffserv) [DSRV-ARC]\n   RSVP is a signaling protocol\
    \ that applications may use to request\n   resources from the network.  The network\
    \ responds by explicitly\n   admitting or rejecting RSVP requests.  Certain applications\
    \ that have\n   quantifiable resource requirements express these requirements\
    \ using\n   intserv parameters [IIS-SPEC].\n   Diffserv networks classify packets\
    \ into one of a small number of\n   aggregated flows or \"classes\", based on\
    \ the diffserv codepoint (DSCP)\n   in the packet's IP header.  At each diffserv\
    \ router, packets are\n   subjected to a \"per-hop behavior\" (PHB), which is\
    \ invoked by the\n   DSCP.  Since RSVP is purely a requirements signalling protocol\
    \ it can\n   also be used to request connections from a diffserv network [RS-DS-\n\
    \   OP].\n"
- title: 4.7.1.  RSVP and DIFFSERV Attributes
  contents:
  - "4.7.1.  RSVP and DIFFSERV Attributes\n   A set of parameters for specifying a\
    \ requested Quality of Service are\n   given in [IIS-SPEC].  These have been turned\
    \ into accounting\n   attributes within RTFM [RTFM-NEWA] and within the RSVP MIB\
    \ [RSVP-\n   MIB].\n   The RTFM QoS attributes are:\n        98      QoSService\n\
    \        99      QoSStyle\n       100      QoSRate\n       101      QoSSlackTerm\n\
    \       102      QoSTokenBucketRate\n       103      QoSTokenBucketSize\n    \
    \   104      QoSPeakDataRate\n       105      QoSMinPolicedUnit\n       106  \
    \    QoSMaxPolicedUnit\n   The RSVP MIB contains a large number of objects, arranged\
    \ within the\n   following sections:\n       General Objects\n       Session Statistics\
    \ Table\n       Session Sender Table\n       Reservation Requests Received Table\n\
    \       Reservation Requests Forwarded Table\n       RSVP Interface Attributes\
    \ Table\n       RSVP Neighbor Table\n   The Session tables contain information\
    \ such as the numbers of senders\n   and receivers for each session, while the\
    \ Reservation Requests tables\n   contain details of requests handled by the RSVP\
    \ router.  There are\n   too many objects to list here, but many of them could\
    \ be used for\n   accounting.  In particular, RSVP Requests contain the specification\n\
    \   of the service parameters requested by a user; these, together with\n   the\
    \ actual usage data for the connection make up an accounting record\n   for that\
    \ usage.\n"
- title: 5.  ITU-T Documents
  contents:
  - '5.  ITU-T Documents

    '
- title: '5.1.  Q.825: Call Detail Recording'
  contents:
  - "5.1.  Q.825: Call Detail Recording\n   ITU-T Recommendation Q.825 specifies how\
    \ CDRs (Call Detail Records)\n   are produced and managed in Network Elements\
    \ for POTS, ISDN and IN\n   (Intelligent Networks).\n   Uses of Call Detail information\
    \ for various purposes are discussed.\n   Each call produces one or more records\
    \ describing events that\n   occurred during the life of a call.  Data may be\
    \ produced in real\n   time (single CDRs), near real-time (blocks of CDRs), or\
    \ as batch\n   files of CDRs.\n   The information model for Call Detail Recording\
    \ is formally described\n   in terms of an Entity-Relationship model, and an object\
    \ model\n   specified in terms of GDMO templates (Guidelines for the Definition\n\
    \   of Managed Objects).  Note that this model includes the ways in which\n  \
    \ CDRs are transported from the (NE) Network Element where they are\n   generated\
    \ to the OS (Operations System) where they are used.\n"
- title: 5.2.  Q.825 Attributes
  contents:
  - "5.2.  Q.825 Attributes\n   The following attributes are defined.  The explanations\
    \ given are\n   very brief summaries only, see [Q-825] for the complete text.\n\
    \   1  accessDelivery\n        Indicates that the call was delivered to the called\
    \ subscriber\n   2  accountCodeInput\n        Account code (for billing), supplied\
    \ by subscriber.\n  78  additionalParticipantInfo\n        (No details given)\n\
    \   5  b-PartyCategory\n        Subscriber category for called subscriber.\n \
    \  4  bearerService\n        Bearer capability information (only for ISDN calls).\n\
    \  13  cDRPurpose\n        Reason for triggering this Call Data Record.\n  70\
    \  callDetailDataId\n        Unique identifier for the CallDetailData object.\n\
    \  79  callDuration\n        Duration of call\n   6  callIdentificationNumber\n\
    \        Identification number for call; all records produced for this\n     \
    \   call have the same callIdenfificationNumber.\n  73  callStatus\n        Identifies\
    \ whether the call was answered or not.\n   9  calledPartyNumber\n        Telephone\
    \ number of the called subscriber (may be a\n        \"diverted-to\" or \"translated\"\
    \ number.\n   7  callingPartyCategory\n        Calling subscriber category.\n\
    \   8  callingPartyNumber\n        Telephone number of the calling party.\n  10\
    \  callingPartyNumberNotScreened\n        An additional, user-provided (not screened)\
    \ number to the\n        calling party.\n  11  callingPartyType\n        Calling\
    \ subscriber type.\n  74  carrierId\n        Carrier ID to which the call is sent.\n\
    \  12  cause\n        Cause and location value for the termination of the call.\n\
    \  14  chargedDirectoryNumber\n        Charged directory number (where the charged\
    \ participant\n        element can't indicate the number).\n  16  chargedParticipant\n\
    \        Participant to be charged for the usage.\n  15  chargingInformation\n\
    \        Charging information generated by a Network Element which is\n      \
    \  capable of charging.\n  17  configurationMask\n        Time consumption, e.g.\
    \ from B-answer to termination time,\n        between partial call records, etc.\n\
    \  18  conversationTime\n        Time consumption from B-answer to end of call.\n\
    \  19  creationTriggerList\n        List of trigger values which will create Call\
    \ Detail data\n        objects.\n  75  dPC\n        Destination point code (for\
    \ analysis purposes).\n  20  dataValidity\n        Indicates that the NE is having\
    \ problems, contents of the\n        generated Call Detail record is not reliable.\n\
    \  23  durationTimeACM\n        Time consumption from seizure until received ACM.\n\
    \  21  durationTimeB-Answer\n        Time consumption from seizure until B-answer.\n\
    \  22  durationTimeNoB-Answer\n        Time from seizure to termination when no\
    \ B-answer was\n        received.\n  25  exchangeInfo\n        Identity of exchange\
    \ where Call Detail record was generated.\n  26  fallbackBearerService\n     \
    \   Fallback bearer capability information for a call.\n  27  glare\n        Indicates\
    \ if a glare condition was encountered.\n  31  iNServiceInformationList\n    \
    \    Contains information about the use of IN (Intelligent Network)\n        services.\n\
    \  32  iNSpecificInformation\n        Contains information about the use of one\
    \ IN service.\n  33  iSUPPreferred\n        Indicate whether an ISUP preference\
    \ was requested.\n  28  immediateNotificationForUsageMetering\n        Indicates\
    \ that the Call Detail records requires\n        immediate data transfer to the\
    \ Operations System.\n  34  maxBlockSize\n        Maximum number of Call Detail\
    \ records in a block.\n  35  maxTimeInterval\n        Maximum latency allowable\
    \ for near-real-time Call Detail\n        data delivery.\n  36  networkManagementControls\n\
    \        Indicates which Traffic Management Control has affected\n        the\
    \ call.\n  37  networkProviderId\n        Indicates the Network Provider for whom\
    \ the CDR is generated.\n  76  oPC\n        Originating point code for a failed\
    \ call (for analysis\n        purposes).\n  38  operatorSpecific1AdditionalNumber\n\
    \  40  operatorSpecific2AdditionalNumber\n  42  operatorSpecific3AdditionalNumber\n\
    \        Operator-defined additional participant information.\n  39  operatorSpecific1Number\n\
    \  41  operatorSpecific2Number\n  43  operatorSpecific3Number\n        Operator-defined\
    \ participant information.\n  44  originalCalledNumber\n        Telephone number\
    \ of the original called party.\n  45  partialGeneration\n        Included if\
    \ the CDR (Call Detail record) output is partial.\n        Such CDRs have a field\
    \ indicating their partial record number.\n  77  participantInfo\n        (No\
    \ details given).\n  46  percentageToBeBilled\n        Percentage to be billed\
    \ when normal billing rules are\n        not to be followed.\n  47  periodicTrigger\n\
    \        Defines the intervals at which the CDR file should be created.\n  48\
    \  personalUserId\n        Internationally unique personal User Identity (for\
    \ UPT calls).\n  49  physicalLineCode\n        Identifies the call subscriber's\
    \ physical line.\n  50  progress\n        Describes an event which occurred during\
    \ the life of a call.\n  51  queueInfo\n        Used to record usage of queueing\
    \ resources with IN calls.\n  52  receivedDigits\n        The digits dialed by\
    \ the subscriber.  (Normally only included\n        for customer care purposes).\n\
    \  53  recordExtensions\n        Information elements added by network operators\
    \ and/or\n        manufacturers in addition to the standard ones above.\n"
- title: 6.  Other Documents
  contents:
  - '6.  Other Documents

    '
- title: '6.1.  TIPHON: ETSI TS 101 321'
  contents:
  - "6.1.  TIPHON: ETSI TS 101 321\n   TIPHON [TIPHON] is an XML-based protocol, carried\
    \ by HTTP, which\n   handles accounting and authorization requests and responses.\n\
    \   The following are elements selected from TIPHON's DTD that are used\n   for\
    \ accounting.\n   <!ELEMENT Currency (#PCDATA)> <!ELEMENT Amount (#PCDATA)>\n\
    \       Identifies a numeric value.  Expressed using the period (.) as a\n   \
    \    decimal separator with no punctuation as the thousands separator.\n   <!ELEMENT\
    \ CallId (#PCDATA)>\n       Contains a call's H.323 CallID value, and is thus\
    \ used to\n       uniquely identify individual calls.\n   <!ELEMENT Currency (#PCDATA)>\n\
    \       Defines the financial currency in use for the parent element.\n   <!ELEMENT\
    \ DestinationInfo type ( e164 | h323 | url | email |\n                       \
    \             transport | international |\n                                  \
    \  national | network | subscriber |\n                                    abbreviated\
    \ | e164prefix )\n       Gives the primary identification of the destination for\
    \ a call.\n   <!ELEMENT Increment (#PCDATA)>\n       Indicates the number of units\
    \ being accounted.\n   <!ELEMENT Service EMPTY>\n       Indicates a type of service\
    \ being priced, authorized, or\n       reported.  An empty Service element indicates\
    \ basic Internet\n       telephony service, which is the only service type defined\
    \ by\n       V1.4.2 of the specification.  The specification notes that \"Later\n\
    \       revisions of this standard are expected to specify more enhanced\n   \
    \    service definitions to represent quality of service,\n       availability,\
    \ payment methods, etc.\"\n   <!ELEMENT DestinationInfo type ( e164 | h323 | url\
    \ | email |\n                                    transport | international |\n\
    \                                    national | network | subscriber |\n     \
    \                               abbreviated | e164prefix)\n       Gives the primary\
    \ identification of the source of a call.\n   <!ELEMENT Timestamp (#PCDATA)>\n\
    \       A restricted form of [ISO-DATE] that indicates the time at which\n   \
    \    the component was generated.\n   <!ELEMENT TransactionId (#PCDATA)>\n   \
    \    Contains an integer, decimal valued identifier assigned to a\n       specific\
    \ authorized transaction.\n   <!ELEMENT Unit (#PCDATA)>\n       Indicates the\
    \ units by which pricing is measured or usage\n       recorded.  It shall contain\
    \ one of the following values:\n           s      seconds\n           p      packets\
    \ (datagrams)\n           byte   bytes\n   <!Element UsageDetail ( Service, Amount,\
    \ Increment, Unit ) >\n       Collects information describing the usage of a service.\n"
- title: 6.2.  MSIX
  contents:
  - "6.2.  MSIX\n   MSIX [MSIX-SPEC] is an XML-based protocol transported by HTTP\
    \ that is\n   used to make accounting service definitions and transmit service\n\
    \   usage information.  As its service definitions are parameterized and\n   dynamic,\
    \ it makes no definition of services or attributes itself, but\n   allows implementors\
    \ to make their own.  It specifies only the base\n   data types that attributes\
    \ may take: STRING, UNISTRING, INT32, FLOAT,\n   DOUBLE, BOOLEAN, TIMESTAMP.\n"
- title: 7.  Accounting File and Record Formats
  contents:
  - '7.  Accounting File and Record Formats

    '
- title: 7.1.  ASN.1 Records
  contents:
  - '7.1.  ASN.1 Records

    '
- title: 7.1.1.  RTFM and AToMMIB
  contents:
  - "7.1.1.  RTFM and AToMMIB\n   RTFM and AToMMIB use ASN.1 Basic Encoding Rules\
    \ (BER) to encode lists\n   of attributes into accounting records.  RTFM uses\
    \ SNMP to retrieve\n   such records as BER strings, thus avoiding having to have\
    \ an object\n   identifier for every object.\n   AToMMIB carries this a stage\
    \ further by defining an accounting file\n   format in ASN.1 and making it available\
    \ for retrieval by a file\n   transfer protocol, thereby providing a more efficient\
    \ alternative to\n   simply retrieving the records using SNMP.\n"
- title: 7.1.2.  Q.825
  contents:
  - "7.1.2.  Q.825\n   A Q.825 Call Record is an ASN.1 SET containing a specified\
    \ group of\n   the Q.825 attributes.  Call records would presumably be encoded\
    \ as\n   BER strings before being collected for later processing.\n"
- title: 7.2.  Binary Records
  contents:
  - '7.2.  Binary Records

    '
- title: 7.2.1.  RADIUS
  contents:
  - "7.2.1.  RADIUS\n   Radius packets carry a sequence of attributes and their values,\
    \ as\n   (Type, Length, Value) triples.  The format of the value field is one\n\
    \   of four data types.\n      string   0-253 octets\n      address  32 bit value,\
    \ most significant octet first.\n      integer  32 bit value, most significant\
    \ octet first.\n      time     32 bit value, most significant octet first -- seconds\n\
    \               since 00:00:00 GMT, January 1, 1970.  The standard\n         \
    \      Attributes do not use this data type but it is presented\n            \
    \   here for possible use within Vendor-Specific attributes.\n"
- title: 7.2.2.  DIAMETER
  contents:
  - "7.2.2.  DIAMETER\n   Each DIAMETER message consists of multiple AVP's that are\
    \ 32-bit\n   aligned, with the following format:\n      0                   1\
    \                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           AVP Code                            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \          AVP Length           |     Reserved        |P|T|V|R|M|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                        Vendor ID (opt)                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                           Tag (opt)                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Data ...\n      +-+-+-+-+-+-+-+-+\n      Code\n         The AVP Code\
    \ identifies the attribute uniquely.  If the Vendor-\n         Specific bit is\
    \ set, the AVP Code is allocated from the\n         vendor's private address space.\n\
    \         The first 256 AVP numbers are reserved for backward\n         compatibility\
    \ with RADIUS and are to be interpreted as per\n         RADIUS [RAD-PROT].  AVP\
    \ numbers 256 and above are used for\n         DIAMETER, which are allocated by\
    \ IANA.\n      AVP Length\n         A 16-bit field contains the total object length\
    \ in bytes.\n         Must always be a multiple of 4, and at least 8.\n      AVP\
    \ Flags\n         P                      Protected bit\n         T           \
    \           Tag bit\n         V                      Vendor-ID bit\n         R\
    \                      Reserved (MUST be set to 0)\n         M               \
    \       Mandatory bit\n"
- title: 7.3.  Text Records
  contents:
  - '7.3.  Text Records

    '
- title: 7.3.1.  ROAMOPS
  contents:
  - "7.3.1.  ROAMOPS\n   ADIF (Accounting Data Interchange Format [ROAM-ADIF]) presents\
    \ a\n   general, text-based format for accounting data files, described in a\n\
    \   straightforward BNF grammar.  Its file header contains a field\n   indicating\
    \ the default protocol from which accounting attributes are\n   drawn.  If an\
    \ attribute from another protocol is to be used, it is\n   preceded by its protocol\
    \ name, for example rtfm//27 would be RTFM's\n   \"forward bytes\" attribute.\
    \  Comments in an ADIF file begin with a\n   cross-hatch.\n   Example: An ADIF\
    \ file encoding RADIUS accounting data\n        version: 1\n        device: server3\n\
    \        description: Accounting Server 3\n        date: 02 Mar 1999 12:19:01\
    \ -0500\n        defaultProtocol: radius\n        rdate: 02 Mar 1999 12:20:17\
    \ -0500\n        #NAS-IP-Address\n        4: 204.45.34.12\n        #NAS-Port\n\
    \        5: 12\n        #NAS-Port-Type\n        61: 2\n        #User-Name\n  \
    \      1: fred@bigco.com\n        #Acct-Status-Type\n        40: 2\n        #Acct-Delay-Time\n\
    \        41: 14\n        #Acct-Input-Octets\n        42: 234732\n        #Acct-Output-Octets\n\
    \        43: 15439\n        #Acct-Session-Id\n        44: 185\n        #Acct-Authentic\n\
    \        45: 1\n        #Acct-Session-Time\n        46: 1238\n        #Acct-Input-Packets\n\
    \        47: 153\n        #Acct-Output-Packets\n        48: 148\n        #Acct-Terminate-Cause\n\
    \        49: 11\n        #Acct-Multi-Session-Id\n        50: 73\n        #Acct-Link-Count\n\
    \        51: 2\n"
- title: 8.  AAA Requirements
  contents:
  - '8.  AAA Requirements

    '
- title: 8.1.  A Well-Defined Set of Attributes
  contents:
  - "8.1.  A Well-Defined Set of Attributes\n   AAA needs a well-defined set of attributes\
    \ whose values are to be\n   carried in records to or from accounting servers.\n\
    \   Most of the existing sets of documents described above include a set\n   of\
    \ attributes, identified by small integers.  It is likely that these\n   sets\
    \ overlap, i.e. that some of them have attributes which represent\n   the same\
    \ quantity using different names in different sets.  This\n   suggests it might\
    \ be possible to produce a single combined set of\n   \"universal\" accounting\
    \ attributes, but such a \"universal\" set does\n   not seem worthwhile.\n   The\
    \ ADIF approach of specifying a default protocol (from which\n   attributes are\
    \ assumed to come) and identifying any exceptions seems\n   much more practical.\
    \  We therefore propose that AAA should use the\n   ADIF convention (or something\
    \ like it) to identify attributes,\n   together with all the sets of attributes\
    \ covered by the [ASG-NBR]\n   document.\n"
- title: 8.2.  A Simple Interchange Format
  contents:
  - "8.2.  A Simple Interchange Format\n   AAA needs a simple interchange file format,\
    \ to be used for accounting\n   data.  Several schemes for packaging and transporting\
    \ such data have\n   been described above.\n   The SNMP-based ones fit well within\
    \ the context of an SNMP-based\n   network management system.  RTFM and AToMMIB\
    \ provide ways to reduce\n   the SNMP overhead for collecting data, and AToMMIB\
    \ defines a complete\n   file format.  Both provide good ways to collect accounting\
    \ data.\n   As an interchange format, however, ASN.1-based schemes suffer from\n\
    \   being rather complex binary structures.  This means that one requires\n  \
    \ suitable tools to work with them, as compared to plain-text files\n   where\
    \ one can use existing text-based utilities.\n   The binary schemes such as RADIUS\
    \ and DIAMETER have simpler\n   structures, but they too need purpose-built tools.\
    \  For general use\n   they would need to be extended to allow them to use attributes\
    \ from\n   other protocols.\n   From the point of view of being easy for humans\
    \ to understand, ADIF\n   seems very promising.  Of course any processing program\
    \ would need a\n   suitable ADIF input parser, but using plain-text files makes\
    \ them\n   much easier to understand.\n   TIPHON's record format is specified\
    \ by an XML DTD.  While XML\n   representations have the advantages of being well-known,\
    \ they are\n   limited by XML's inability to specify type or other validity checking\n\
    \   for information within the tags.  This situation will likely be\n   improved\
    \ by the XML Schema [XML-SCHM] efforts that are underway, but\n   a stable reference\
    \ is not yet available.\n"
- title: 9.  Issues
  contents:
  - "9.  Issues\n   It is generally agreed that there is a need for a standard record\n\
    \   format and transport protocol for communication between Service\n   Elements\
    \ and Accounting Servers.\n   There is less agreement on the following issues:\n\
    \      o  Separate or integral record format and transport protocol\n      o \
    \ Standard set of base data types\n      o  Service definitions: part of the protocol\
    \ or separately defined\n      o  Service definition namespace management\n  \
    \ The following sections address these issues.\n"
- title: 9.1.  Record Format vs. Protocol
  contents:
  - "9.1.  Record Format vs. Protocol\n   All known Internet-centric billing protocols\
    \ to date have an integral\n   record format.  That is, the collection of Properties\
    \ that describe a\n   Usage Event are specified as an integral part of the protocol,\n\
    \   typically as a part of a \"submit\" message that is used to transmit a\n \
    \  Usage Event from a Service Entity to an Accounting Server.\n   It may be advantageous\
    \ to define a record format that is independent\n   of the transport protocol.\
    \  Such a record format should support both\n   representation of individual records\
    \ and records in bulk, as Usage\n   Events are often aggregated and transmitted\
    \ in bulk.\n   A separate record format is useful for record archiving and temporary\n\
    \   file storage.  Multiple transport protocols may be defined without\n   affecting\
    \ the record format.  The task of auditing is made easier if\n   a standard file\
    \ format is defined.  If a canonical format is used,\n   bulk records may be hashed\
    \ with MD5 [MD5] or a similar function, for\n   reliability and security purposes.\n\
    \                                  +------------+\n                          \
    \        |  transport |\n                                  |   header   |\n  \
    \          +------------+        +------------+\n            |            |  \
    \      |            |\n            |   Usage    |        |   Usage    |\n    \
    \        |  Event(s)  |        |  Event(s)  |\n            |            |    \
    \    |            |\n            |            |        |            |\n      \
    \      +------------+        +------------+\n                                \
    \  |  trailer   |\n                                  +------------+\n        \
    \    record format       transport protocol\n   If the protocol is written such\
    \ that it can transmit Usage Events in\n   the record format, no record rewriting\
    \ for transport is required.\n"
- title: 9.2.  Tagged, Typed Data
  contents:
  - "9.2.  Tagged, Typed Data\n   Record formats and protocols use a combination of\
    \ data locality and\n   explicit tagging to identify data elements.  Mail [RFC822],\
    \ for\n   instance, defines a header block composed of several Attribute-Value\n\
    \   Pairs, followed by a message body.  Each header field is explicitly\n   tagged,\
    \ but the order of the AVPs is undefined.  The message body is\n   not tagged\
    \ (except with an additional preceding blank line), and is\n   found through its\
    \ position in the message, which must be after all\n   header fields.\n   Some\
    \ record formats make no use of tags--data elements are identified\n   only by\
    \ their position within a record structure.  While this\n   practice provides\
    \ for the least amount of record space overhead, it\n   is difficult to later\
    \ modify the record format by adding or removing\n   elements, as all record readers\
    \ will have to be altered to handle the\n   change.  Tagged data allows old readers\
    \ to detect unexpected tags and\n   to detect if required data are missing.  If\
    \ the overhead of carrying\n   explicit tags can be borne, it is advantageous\
    \ to use explicitly\n   tagged data elements where possible.\n   An AVP approach\
    \ has proven useful in accounting.  RADIUS [RADIUS]\n   uses numeric data type\
    \ identifiers.  ETSI's TIPHON [TIPHON] uses XML\n   markup.\n   For an AAA accounting\
    \ record format, the authors suggest that each\n   Property be named by a textual\
    \ or numeric identifier and carry a\n   value and a data type indicator, which\
    \ governs interpretation of the\n   value.  It may also be useful for each Property\
    \ to carry a units of\n   measure identifier.  The TIPHON specification takes\
    \ this approach.\n   TS 101 321 also carries an Increment field, which denominates\
    \ the\n   Property's Unit of Measure field.  Whether this additional\n   convenience\
    \ is necessary is a matter for discussion.\n   It is not strictly necessary for\
    \ each data record to carry data type,\n   units of measure, or increments identifiers.\
    \  If this information is\n   recorded in a record schema document that is referenced\
    \ by each data\n   record, each record may be validated against the schema without\
    \ the\n   overhead of carrying type information.\n"
- title: 9.2.1.  Standard Type Definitions
  contents:
  - "9.2.1.  Standard Type Definitions\n   It is useful to define a standard set of\
    \ primitive data types to be\n   used by the record format and protocol.  Looking\
    \ at the prior art,\n   DIAMETER supports Data (arbitrary octets), String (UTF-8),\
    \ Address\n   (32 or 128 bit), Integer32, Integer64, Time (32 bits, seconds since\n\
    \   1970), and Complex.  MSIX [MSIX-SPEC] supports String, Unistring,\n   Int32,\
    \ Float, Double, Boolean, and Timestamp.  SMIv2 [SMI-V2] offers\n   ASN.1 types\
    \ INTEGER, OCTET STRING, and OBJECT IDENTIFIER, and the\n   application-defined\
    \ types Integer32, IpAddress, Counter32, Gauge32,\n   Unsigned32, TimeTicks, Opaque,\
    \ and Counter64.\n   An appropriate set would likely include booleans, 32 and\
    \ 64 bit\n   signed integers, 32 and 64 bit floats, arbitrary octets, UTF-8 and\n\
    \   UTF-16 strings, and ISO 8601:1988 [ISO-DATE] timestamps.  Fixed-\n   precision\
    \ numbers capable of representing currency amounts (with\n   precision specified\
    \ on both sides of the decimal point) have proven\n   useful in accounting record\
    \ formats, as they are immune to the\n   precision problems that are encountered\
    \ when one attempts to\n   represent fixed-point amounts with floating point numbers.\n\
    \   It may be worthwhile to consider the datatypes that are being\n   specified\
    \ by the W3C's \"XML Schema Part 2: Datatypes\" [XML-DATA]\n   document.  That\
    \ document specifies a rich set of base types, along\n   with a mechanism to specify\
    \ derivations that further constrain the\n   base types.\n"
- title: 9.3.  Transaction Identifiers
  contents:
  - "9.3.  Transaction Identifiers\n   Each Usage Event requires its own unique identifier.\n\
    \   It is expedient to allow Service Elements to create their own unique\n   identifiers.\
    \  In this manner, Usage Events can be created and\n   archived without the involvement\
    \ of an Accounting Server or other\n   central authority.\n   A number of methods\
    \ for creating unique identifiers are well known.\n   One popular identifier is\
    \ an amalgamation of a monotonically\n   increasing sequence number, a large random\
    \ value, a network element\n   identifier, and a timestamp.  Another possible\
    \ source of entropy is a\n   hash value of all or part of the record itself.\n\
    \   RFC 822 [MAIL], RFC 1036 [NEWS], and RFC 2445 [ICAL-CORE] give\n   guidance\
    \ on the creation of good unique identifiers.\n"
- title: 9.4.  Service Definitions
  contents:
  - "9.4.  Service Definitions\n   A critical differentiator in accounting record\
    \ formats and protocols\n   is their capability to account for arbitrary service\
    \ usage.  To date,\n   no accounting record format or protocol that can handle\
    \ arbitrary\n   service definitions has achieved broad acceptance on the Internet.\n\
    \   This section analyzes the issues in service definition and makes a\n   case\
    \ for a record format and protocol with the capability to carry\n   Usage Events\
    \ for rich, independently-defined services.\n"
- title: 9.4.1.  Service Independence
  contents:
  - "9.4.1.  Service Independence\n   It is informative to survey a number of popular\
    \ Internet protocols\n   and document encodings and examine their capacities for\
    \ extension.\n   These protocols can be categorized into two broad categories--\"\
    fully\n   specified\" protocols that have little provision for extension and\n\
    \   \"framework\" protocols that are incomplete, but provide a basis for\n   future\
    \ extension when coupled with application documents.\n   Examples of fully-specified\
    \ protocols are NTP [NTP], NNTP [NNTP],\n   RADIUS Accounting [RAD-ACT], and HTML\
    \ [HTML].\n   Aside from leaving some field values \"reserved for future use\"\
    , all\n   of Network Time Protocol's fields are fixed-width and completely\n \
    \  defined.  This is appropriate for a simple protocol that solves a\n   simple\
    \ problem.\n   Network News Transfer Protocol [NEWS-PROT] specifies that further\n\
    \   commands may be added, and requests that non-standard implementations\n  \
    \ use the \"X-\" experimental prefix so as to not conflict with future\n   additions.\
    \  The content of news is 7-bit data, with the high-order\n   bit cleared to 0.\
    \  Nothing further about the content is defined.\n   There is no in-protocol facility\
    \ for automating decoding of content\n   type.\n   We pay particular attention\
    \ to RADIUS Accounting [RAD-ACT].  Perhaps\n   the second most frequently heard\
    \ complaint (after security\n   shortcomings) about RADIUS Accounting is its preassigned\
    \ and fixed\n   set of \"Types\".  These are coded as a range of octets from 40\
    \ to 51\n   and are as follows:\n         40      Acct-Status-Type\n         41\
    \      Acct-Delay-Time\n         42      Acct-Input-Octets\n         43      Acct-Output-Octets\n\
    \         44      Acct-Session-Id\n         45      Acct-Authentic\n         46\
    \      Acct-Session-Time\n         47      Acct-Input-Packets\n         48   \
    \   Acct-Output-Packets\n         49      Acct-Terminate-Cause\n         50  \
    \    Acct-Multi-Session-Id\n         51      Acct-Link-Count\n   These identifiers\
    \ were designed to account for packet-based network\n   access service.  They\
    \ are ill-suited for describing other services.\n   While extension documents\
    \ have specified additional types, the base\n   protocol limits the type identifier\
    \ to a single octet, limiting the\n   total number of types to 256.\n   HTML/2.0\
    \ [HTML] is mostly a fully-specified protocol, but with W3C's\n   HTML/4.0, HTML\
    \ is becoming more of a framework protocol.  HTML/2.0\n   specified a fixed set\
    \ of markups, with no provision for addition\n   (without protocol revision).\n\
    \   Examples of \"framework\" protocols and document encodings are HTTP,\n   XML,\
    \ and SNMP.\n   HTTP/1.1 [HTTP] is somewhat similar to NNTP in that it is designed\
    \ to\n   transport arbitrary content.  It is different in that it supports\n \
    \  description of that content through its Content-Type, Content-\n   Encoding,\
    \ Accept-Encoding, and Transfer-Encoding header fields.  New\n   types of content\
    \ can be designated and carried by HTTP/1.1 without\n   modification to the HTTP\
    \ protocol.\n   XML [XML] is a preeminent general-purpose framework encoding.\
    \  DTD\n   publishing is left to users.  There is no standard registry of DTDs.\n\
    \   SNMP presents a successful example of a framework protocol.  SNMP's\n   authors\
    \ envisioned SNMP as a general management protocol, and allow\n   extension through\
    \ the use of private MIBs.  SNMP's ASN.1 MIBs are\n   defined, published, and\
    \ standardized without the necessity to modify\n   the SNMP standard itself. \
    \ From \"An Overview of SNMP\" [SNMP-OVER]:\n      It can easily be argued that\
    \ SNMP has become prominent mainly from\n      its ability to augment the standard\
    \ set of MIB objects with new\n      values specific for certain applications\
    \ and devices.  Hence, new\n      functionality can continuously be added to SNMP,\
    \ since a standard\n      method has been defined to incorporate that functionality\
    \ into\n      SNMP devices and network managers.\n   Most accounting protocols\
    \ are fully-specified, with either a\n   completely defined service or set of\
    \ services (RADIUS Accounting) or\n   with one or more services defined and provision\
    \ for \"extension\"\n   services to be added to the protocol later (TIPHON). \
    \ While the\n   latter is preferable, it may be preferable to take a more SNMP-like\n\
    \   approach, where the accounting record format and protocol provide\n   only\
    \ a framework for service definition, and leave the task of\n   service definition\
    \ (and standardization) to separate efforts.  In\n   this manner, the accounting\
    \ protocol itself would not have to be\n   modified to handle new services.\n"
- title: 9.4.2.  Versioned Service Definitions
  contents:
  - "9.4.2.  Versioned Service Definitions\n   Versioning is a naming and compatibility\
    \ issue.  Version identifiers\n   are useful in service definition because they\
    \ enable service\n   definitions to be upgraded without a possibly awkward name\
    \ change.\n   They also enable possible compatibility between different versions\
    \ of\n   the same service.\n   An example could be the service definition of a\
    \ phone call.  Version\n   1 might define Properties for the start time, duration,\
    \ and called\n   and calling party numbers.  Later, version 2 is defined, which\n\
    \   augments the former service definition with a byte count.  An\n   Accounting\
    \ Server, aware only of Version 1, may accept Version 2\n   records, discarding\
    \ the additional information (forward\n   compatibility).  Alternately, if an\
    \ Accounting Server is made aware\n   of version 2, it could optionally still\
    \ accept version 1 records from\n   Service Elements, provided the Accounting\
    \ Sever does not require the\n   additional information to properly account for\
    \ service usage\n   (backward compatibility).\n"
- title: 9.4.3.  Relationships Among Usage Events
  contents:
  - "9.4.3.  Relationships Among Usage Events\n   Accounting record formats and protocols\
    \ to date do not sufficiently\n   addressed \"compound\" service description.\n\
    \   A compound service is a service that is described as a composition of\n  \
    \ other services.  A conference call, for example, may be described as\n   a number\
    \ of point-to-point calls to a conference bridge.  It is\n   important to account\
    \ for the individual calls, rather than just\n   summing up an aggregate, both\
    \ for auditing purposes and to enable\n   differential rating.  If these calls\
    \ are to be reported to the\n   Accounting Server individually, the Usage Events\
    \ require a shared\n   identifier that can be used by the Accounting Server and\
    \ other back-\n   end systems to group the records together.\n   In order for\
    \ a Service Element to report compound events over time as\n   a succession of\
    \ individual Usage Events, the accounting protocol\n   requires a facility to\
    \ communicate that the compound event has\n   started and stopped.  The \"start\"\
    \ message can be implicit--the\n   transmission of the first Usage Event will\
    \ suffice.  An additional\n   semaphore is required to tell the Accounting Server\
    \ that the compound\n   service is complete and may be further processed.  This\
    \ is necessary\n   to prevent the Accounting Server from prematurely processing\
    \ compound\n   events that overlap the end of a billing period.\n   RADIUS Accounting\
    \ has some provision for this sort of accounting with\n   its \"Acct-Multi-Session-Id\"\
    \ field.  Unfortunately, RADIUS\n   Accounting's other shortcomings preclude it\
    \ from being used in\n   general purpose service usage description.\n"
- title: 9.4.4.  Service Namespace Management
  contents:
  - "9.4.4.  Service Namespace Management\n   \"Framework\" protocols, as previously\
    \ mentioned, do not define\n   complete schema for their payload.  For interoperability\
    \ to be\n   achieved, it must be possible for:\n      (1) content definers to\
    \ specify definitions without conflicting\n          with the names of other definitions\n\
    \      (2) protocol users to find and use content definitions\n   Condition (1)\
    \ can be readily managed through IANA assignment or by\n   using an existing namespace\
    \ differentiator (for example, DNS).\n   Condition (2) is harder, and places considerable\
    \ burden on the\n   implementors.  Their clients and servers must be able, statically\
    \ or\n   dynamically, to find and validate definitions, and manage versioning\n\
    \   issues.\n   As previously mentioned, the XML specification provides no facility\n\
    \   for DTD discovery or namespace management.  XML specifies only a\n   document\
    \ format, and as such does not need to specify support for\n   more \"protocol\"\
    \ oriented problems.\n   For an accounting record format and protocol, an approach\
    \ closer to\n   SNMP's is useful.  SNMP uses an ISO-managed dotted-decimal namespace.\n\
    \   An IANA-managed registry of service types is a possibility.  Another\n   possibility,\
    \ used by MSIX [MSIX-SPEC], is for Service Element\n   creators to identify their\
    \ services by concatenation of a new service\n   name with existing unique identifier,\
    \ such as a domain name.\n   A standard record format for service definitions\
    \ would make it\n   possible for Service Element creators to directly supply accounting\n\
    \   system managers with the required definitions, via the network or\n   other\
    \ means.\n"
- title: 10.  Encodings
  contents:
  - "10.  Encodings\n   It may be useful to define more than one record encoding.\n\
    \   A \"verbose\" XML encoding is easily implemented and records can be\n   syntactically\
    \ verified with existing tools.  \"Human-readable\"\n   protocols tend to have\
    \ an edge on \"bitfield\" protocols where ease of\n   implementation is paramount\
    \ and the application can tolerate any\n   additional processing required to generate,\
    \ parse, and transport the\n   records.\n   A alternative \"compressed\" encoding\
    \ that makes minimal use of storage\n   and processing may be useful in many contexts.\n\
    \   There are disadvantages to supporting multiple encodings.\n   Optionally-supported\
    \ multiple encodings mandate the requirement for\n   capabilities exchange between\
    \ Service Element and Accounting Server.\n   Also, implementations can tend to\
    \ \"drift apart\", with one encoding\n   better-supported than another.  Unless\
    \ all encodings are mandatory,\n   implementors may find they are unable to interoperate\
    \ because they\n   picked the wrong encoding.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   This document summarises many existing IETF\
    \ and ITU documents; please\n   refer to the original documents for security considerations\
    \ for their\n   particular protocols.\n   It must be possible for the accounting\
    \ protocol to be carried by a\n   secure transport.  A canonical record format\
    \ is useful so that\n   regeneration of secure record hashes is possible.\n  \
    \ When dealing with accounting data files, one must take care that\n   their integrity\
    \ and privacy are preserved.  This document, however,\n   is only concerned with\
    \ the format of such files.\n"
- title: 12.  References
  contents:
  - "12.  References\n   [ACC-BKG]   Mills, C., Hirsch, G. and G. Ruth, \"Internet\
    \ Accounting\n               Background\", RFC 1272, November 1991.\n   [ASG-NBR]\
    \   Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2,\n               RFC\
    \ 1700, October 1994.\n   [ASN1]      Information processing systems - Open Systems\n\
    \               Interconnection - Specification of Abstract Syntax\n         \
    \      Notation One (ASN.1), International Organization for\n               Standardization,\
    \ International Standard 8824, December\n               1987.\n   [ATM-ACT]  \
    \ McCloghrie, K., Heinanen, J., Greene, W. and A. Prasad,\n               \"Accounting\
    \ Information for ATM Networks\", RFC 2512,\n               February 1999.\n \
    \  [ATM-COLL]  McCloghrie, K., Heinanen, J., Greene, W. and A. Prasad, \"\n  \
    \             Managed Objects for Controlling the Collection and\n           \
    \    Storage of Accounting Information for Connection-Oriented\n             \
    \  Networks\", RFC 2513, February 1999.\n   [BER]       Information processing\
    \ systems - Open Systems\n               Interconnection - Specification of Basic\
    \ Encoding Rules\n               for Abstract Notation One (ASN.1), International\n\
    \               Organization for Standardization, International Standard\n   \
    \            8825, December 1987.\n   [DIAM-ACT]  Arkko, J., Calhoun, P.R., Patel,\
    \ P. and Zorn, G.,\n               \"DIAMETER Accounting Extension\", Work in\
    \ Progress.\n   [DIAM-AUTH] Calhoun, P.R. and Bulley, W., \"DIAMETER User\n  \
    \             Authentication Extensions\", Work in Progress.\n   [DIAM-FRAM] Calhoun,\
    \ P.R., Zorn, G. and Pan, P., \"DIAMETER Framework\n               Document\"\
    , Work in Progress.\n   [DSRV-ARC]  Blake, S., Black, D., Carlson, M., Davies,\
    \ E., Wang, Z.\n               and W. Weiss, \"An Architecture for Differentiated\n\
    \               Services\", RFC 2475, December 1998.\n   [HTML]      Berners-Lee,\
    \ T. and D. Connolly, \"Hypertext Markup\n               Language - 2.0\", RFC\
    \ 1866, November 1995.\n   [HTTP]      Fielding, R., Gettys, J., Mogul, J. Frystyk,\
    \ H. and T.\n               Berners-Lee, \"Hypertext Transfer Protocol--HTTP/1.1\"\
    , RFC\n               2068, January 1997.\n   [ICAL-CORE] Dawson, F. and D. Stenerson,\
    \ \"Internet Calendaring and\n               Scheduling Core Object Specification\"\
    , RFC 2445, November\n               1998.\n   [IIS-ARC]   Braden, R., Clark,\
    \ D. and S. Shenker, \"Integrated\n               Services in the Internet Architecture:\
    \ an Overview\", RFC\n               1633, June 1994.\n   [IIS-SPEC]  Shenker,\
    \ S., Partridge, C. and R. Guerin, \"Specification\n               of Guaranteed\
    \ Quality of Service\", RFC 2212, September\n               1997.\n   [ISDN-MIB]\
    \  Roeck, G., \"ISDN Management Information Base using\n               SMIv2\"\
    , RFC 2127, March 1997.\n   [ISO-DATE]  \"Data elements and interchange formats\
    \ -- Information\n               interchange -- Representation of dates and times\"\
    , ISO\n               8601:1988.\n   [MAIL]      Crocker, D., \"STANDARD FOR THE\
    \ FORMAT OF ARPA INTERNET\n               TEXT MESSAGES\", STD 11, RFC 822, August\
    \ 1982.\n   [MD5]       Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC\
    \ 1321,\n               April 1992.\n   [MSIX-SPEC] Blount, A. and D. Young, \"\
    Metered Service Information\n               Exchange 1.2\", Work in Progress.\n\
    \   [NEWS-MSGS] Horton, M. and R. Adams, \"Standard for Interchange of\n     \
    \          USENET Messages\", RFC 1036, December 1987.\n   [NEWS-PROT] Kantor,\
    \ B. and P. Lapsley, \"Network News Transfer\n               Protocol\", RFC 977,\
    \ February 1986.\n   [NTP]       Mills, D., \"Network Time Protocol (NTP)\", RFC\
    \ 958,\n               September 1985.\n   [Q-825]     \"Specification of TMN\
    \ applications at the Q3 interface:\n               Call detail recording\", ITU-T\
    \ Recommendation Q.825, 1998.\n   [RAD-ACT]   Rigney, C., \"RADIUS Accounting\"\
    , RFC 2866, June 2000.\n   [RAD-EXT]   Rigney, C., Willats, W. and Calhoun, P.,\
    \ \"RADIUS\n               Extensions\", RFC 2869, June 2000.\n   [RAD-PROT] \
    \ Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n               \"Remote\
    \ Authentication Dial In User Service (RADIUS)\",\n               RFC 2865, June\
    \ 2000.\n   [RAD-TACC]  Zorn, G., Mitton, D. and A. Aboba, \"RADIUS Accounting\n\
    \               Modifications for Tunnel Protocol Support\", RFC 2867,\n     \
    \          June 2000.\n   [RAP-COPS]  Boyle, J., Cohen, R., Durham, D., Herzog,\
    \ S., Rajan, R.\n               and A. Sastry, \"The COPS (Common Open Policy\
    \ Service)\n               Protocol\", RFC 2748, January 2000.\n   [ROAM-ADIF]\
    \ Aboba, B. and D. Lidyard, \"The Accounting Data\n               Interchange\
    \ Format (ADIF)\", Work in Progress.\n   [ROAM-IMPL] Aboba, B., Lu, J., Alsop,\
    \ J., Ding, J. and W. Wang,\n               \"Review of Roaming Implementations\"\
    , RFC 2194, September\n               1997.\n   [RS-DS-OP]  Bernet, Y., Yavatkar,\
    \ R., Ford, P., Baker, F., Zhang, L.,\n               Speer, M., Braden, R., Davie,\
    \ B., Wroclawski, J. and E.\n               Felstaine, \"A Framework For Integrated\
    \ Services Operation\n               Over Diffserv Networks\", Work in Progress.\n\
    \   [RSVP-ARC]  Braden, R., Zhang, L., Berson, S., Herzog, S. and S.\n       \
    \        Jamin, \"Resource Reservation Protocol (RSVP) Version 1\n           \
    \    Functional Specification\", RFC 2205, September 1997.\n   [RSVP-MIB]  Baker,\
    \ F., Krawczyk, J. and A. Sastry, \"RSVP Management\n               Information\
    \ Base using SMIv2\", RFC 2206, September 1997.\n   [RTFM-ARC]  Brownlee, N.,\
    \ Mills, C. and G. Ruth, \"Traffic Flow\n               Measurement: Architecture\"\
    , RFC 2722, October 1999.\n   [RTFM-MIB]  Brownlee, N., \"Traffic Flow Measurement:\
    \ Meter MIB\",\n               Measurement: Architecture\", RFC 2720, October\
    \ 1999.\n   [RTFM-NEWA] Handelman, S., Brownlee, N., Ruth, G. and S. Stibler,\n\
    \               \"New Attributes for Traffic Flow Measurement\", RFC 2724,\n \
    \              October 1999.\n   [SIP-PROT]  Handley, M., Schulzrinne, H., Schooler,\
    \ E. and J.\n               Rosenberg, \"SIP: Session Initiation Protocol\", RFC\
    \ 2543,\n               March 1999.\n   [SMI-V2]    McCloghrie, K., Perkins, D.\
    \ and J. Schoenwaelder,\n               \"Structure of Management Information\
    \ Version 2 (SMIv2)\",\n               STD 58, RFC 2578, April 1999.\n   [SNMP-OVER]\
    \ \"AN OVERVIEW OF SNMP V2.0\", Diversified Data Resources,\n               Inc.,\
    \ http://www.ddri.com, 1999.\n   [TIPHON]    \"Telecommunications and Internet\
    \ Protocol Harmonization\n               Over Networks (TIPHON); Inter-domain\
    \ pricing,\n               authorization, and usage exchange\", TS 101 321 V1.4.2,\n\
    \               December 1998.\n   [XML]       Bray, T., J. Paoli, and C. Sperberg-McQueen,\
    \ \"Extensible\n               Markup Language (XML) 1.0\", W3C Recommendation,\
    \ February\n               1998.\n   [XML-DATA]  \"XML Schema Part 2: Datatypes\"\
    , W3C Working Draft 07\n               April 2000, April 2000.\n   [XML-SCHM]\
    \  \"XML Schema Part 1: Structures\", W3C Working Draft 7\n               April\
    \ 2000, April 2000.\n"
- title: 13.  Authors' Addresses
  contents:
  - "13.  Authors' Addresses\n   Nevil Brownlee\n   Information Technology Systems\
    \ & Services\n   The University of Auckland\n   Phone: +64 9 373 7599 x8941\n\
    \   EMail: n.brownlee@auckland.ac.nz\n   Alan Blount\n   MetraTech Corp.\n   330\
    \ Bear Hill Road\n   Waltham, MA 02451\n   EMail: blount@alum.mit.edu\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
